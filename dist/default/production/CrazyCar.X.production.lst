

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Jan 31 16:07:23 2024

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F46K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1
    76                           	psect	text57,global,reloc=2,class=CODE,delta=1
    77                           	psect	text58,global,reloc=2,class=CODE,delta=1
    78                           	psect	text59,global,reloc=2,class=CODE,delta=1
    79                           	psect	text60,global,reloc=2,class=CODE,delta=1
    80                           	psect	text61,global,reloc=2,class=CODE,delta=1
    81                           	psect	text62,global,reloc=2,class=CODE,delta=1
    82                           	psect	text63,global,reloc=2,class=CODE,delta=1
    83                           	psect	text64,global,reloc=2,class=CODE,delta=1
    84                           	psect	text65,global,reloc=2,class=CODE,delta=1
    85                           	psect	text66,global,reloc=2,class=CODE,delta=1
    86                           	psect	text67,global,reloc=2,class=CODE,delta=1
    87                           	psect	text68,global,reloc=2,class=CODE,delta=1
    88                           	psect	text69,global,reloc=2,class=CODE,delta=1
    89                           	psect	text70,global,reloc=2,class=CODE,delta=1
    90                           	psect	text71,global,reloc=2,class=CODE,delta=1
    91                           	psect	text72,global,reloc=2,class=CODE,delta=1
    92                           	psect	text73,global,reloc=2,class=CODE,delta=1
    93                           	psect	text74,global,reloc=2,class=CODE,delta=1
    94                           	psect	text75,global,reloc=2,class=CODE,delta=1
    95                           	psect	text76,global,reloc=2,class=CODE,delta=1
    96                           	psect	text77,global,reloc=2,class=CODE,delta=1
    97                           	psect	text78,global,reloc=4,class=CODE,delta=1
    98                           	psect	text79,global,reloc=2,class=CODE,delta=1
    99                           	psect	text80,global,reloc=4,class=CODE,delta=1
   100                           	psect	text81,global,reloc=2,class=CODE,delta=1
   101                           	psect	text82,global,reloc=2,class=CODE,delta=1
   102                           	psect	text83,global,reloc=2,class=CODE,delta=1
   103                           	psect	text84,global,reloc=2,class=CODE,delta=1
   104                           	psect	text85,global,reloc=2,class=CODE,delta=1
   105                           	psect	text86,global,reloc=4,class=CODE,delta=1
   106                           	psect	text87,global,reloc=2,class=CODE,delta=1
   107                           	psect	text88,global,reloc=2,class=CODE,delta=1
   108                           	psect	text89,global,reloc=2,class=CODE,delta=1
   109                           	psect	text90,global,reloc=4,class=CODE,delta=1
   110                           	psect	text91,global,reloc=4,class=CODE,delta=1
   111                           	psect	text92,global,reloc=2,class=CODE,delta=1
   112                           	psect	text93,global,reloc=4,class=CODE,delta=1
   113                           	psect	text94,global,reloc=2,class=CODE,delta=1
   114                           	psect	text95,global,reloc=4,class=CODE,delta=1
   115                           	psect	text96,global,reloc=2,class=CODE,delta=1
   116                           	psect	text97,global,reloc=2,class=CODE,delta=1
   117                           	psect	text98,global,reloc=2,class=CODE,delta=1
   118                           	psect	text99,global,reloc=2,class=CODE,delta=1
   119                           	psect	text100,global,reloc=4,class=CODE,delta=1
   120                           	psect	text101,global,reloc=4,class=CODE,delta=1
   121                           	psect	text102,global,reloc=4,class=CODE,delta=1
   122                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   123                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   124                           	psect	text103,global,reloc=4,class=CODE,delta=1
   125                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   126                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   127                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   128  0000                     
   129                           ; Version 2.20
   130                           ; Generated 05/05/2020 GMT
   131                           ; 
   132                           ; Copyright © 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   133                           ; All rights reserved.
   134                           ; 
   135                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   136                           ; 
   137                           ; Redistribution and use in source and binary forms, with or without modification, are
   138                           ; permitted provided that the following conditions are met:
   139                           ; 
   140                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   141                           ;        conditions and the following disclaimer.
   142                           ; 
   143                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   144                           ;        of conditions and the following disclaimer in the documentation and/or other
   145                           ;        materials provided with the distribution.
   146                           ; 
   147                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   148                           ;        software without specific prior written permission.
   149                           ; 
   150                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   151                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   152                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   153                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   154                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   155                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   156                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   157                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   158                           ; 
   159                           ; 
   160                           ; Code-generator required, PIC18F46K42 Definitions
   161                           ; 
   162                           ; SFR Addresses
   163  0000                     
   164                           	psect	idataBANK0
   165  005DFE                     __pidataBANK0:
   166                           	callstack 0
   167                           
   168                           ;initializer for _driveMode
   169  005DFE  01                 	db	1
   170                           
   171                           	psect	idataBANK1
   172  005DF4                     __pidataBANK1:
   173                           	callstack 0
   174                           
   175                           ;initializer for _middleOffSet
   176  005DF4  FFF1               	dw	65521
   177                           
   178                           	psect	nvCOMRAM
   179  00004C                     __pnvCOMRAM:
   180                           	callstack 0
   181  00004C                     _uart1TxBufferRemaining:
   182                           	callstack 0
   183  00004C                     	ds	1
   184                           
   185                           	psect	nvBANK1
   186  000184                     __pnvBANK1:
   187                           	callstack 0
   188  000184                     _TMR4_InterruptHandler:
   189                           	callstack 0
   190  000184                     	ds	2
   191  000186                     _timer3ReloadVal:
   192                           	callstack 0
   193  000186                     	ds	2
   194  000188                     _TMR5_GateInterruptHandler:
   195                           	callstack 0
   196  000188                     	ds	2
   197  00018A                     _timer5ReloadVal:
   198                           	callstack 0
   199  00018A                     	ds	2
   200  00018C                     _CCP4_CallBack:
   201                           	callstack 0
   202  00018C                     	ds	2
   203  00018E                     _CCP3_CallBack:
   204                           	callstack 0
   205  00018E                     	ds	2
   206  000190                     _UART1_ErrorHandler:
   207                           	callstack 0
   208  000190                     	ds	2
   209  000192                     _UART1_OverrunErrorHandler:
   210                           	callstack 0
   211  000192                     	ds	2
   212  000194                     _UART1_FramingErrorHandler:
   213                           	callstack 0
   214  000194                     	ds	2
   215  000196                     _UART1_TxInterruptHandler:
   216                           	callstack 0
   217  000196                     	ds	2
   218  000198                     _UART1_RxInterruptHandler:
   219                           	callstack 0
   220  000198                     	ds	2
   221  0000                     _PIR4bits	set	14756
   222  0000                     _PIR1bits	set	14753
   223  0000                     _PIE1bits	set	14737
   224  0000                     _PIE7bits	set	14743
   225  0000                     _PIR7bits	set	14759
   226  0000                     _PIR6bits	set	14758
   227  0000                     _PIE8bits	set	14744
   228  0000                     _PIR8bits	set	14760
   229  0000                     _PIE10bits	set	14746
   230  0000                     _PIR10bits	set	14762
   231  0000                     _PIE9bits	set	14745
   232  0000                     _PIR9bits	set	14761
   233  0000                     _IPR9bits	set	14729
   234  0000                     _IPR7bits	set	14727
   235  0000                     _IPR8bits	set	14728
   236  0000                     _IPR10bits	set	14730
   237  0000                     _IPR1bits	set	14721
   238  0000                     _IPR3bits	set	14723
   239  0000                     _PIE3bits	set	14739
   240  0000                     _PMD7	set	14791
   241  0000                     _PMD6	set	14790
   242  0000                     _PMD5	set	14789
   243  0000                     _PMD4	set	14788
   244  0000                     _PMD3	set	14787
   245  0000                     _PMD2	set	14786
   246  0000                     _PMD1	set	14785
   247  0000                     _PMD0	set	14784
   248  0000                     _OSCTUNE	set	14814
   249  0000                     _OSCFRQ	set	14815
   250  0000                     _OSCEN	set	14813
   251  0000                     _OSCCON3	set	14811
   252  0000                     _OSCCON1	set	14809
   253  0000                     _CCP4PPS	set	15056
   254  0000                     _SMT1SIGPPS	set	15058
   255  0000                     _CLCIN2PPS	set	15067
   256  0000                     _RB3PPS	set	14859
   257  0000                     _RA3PPS	set	14851
   258  0000                     _SMT1WINPPS	set	15057
   259  0000                     _CLCIN0PPS	set	15065
   260  0000                     _RA4PPS	set	14852
   261  0000                     _T5GPPS	set	15049
   262  0000                     _RA0PPS	set	14848
   263  0000                     _U1RXPPS	set	15077
   264  0000                     _RA1PPS	set	14849
   265  0000                     _CLCIN3PPS	set	15068
   266  0000                     _CCP3PPS	set	15055
   267  0000                     _INLVLE	set	14980
   268  0000                     _INLVLD	set	14964
   269  0000                     _INLVLC	set	14948
   270  0000                     _INLVLB	set	14932
   271  0000                     _INLVLA	set	14916
   272  0000                     _SLRCONE	set	14979
   273  0000                     _SLRCOND	set	14963
   274  0000                     _SLRCONC	set	14947
   275  0000                     _SLRCONB	set	14931
   276  0000                     _SLRCONA	set	14915
   277  0000                     _ODCOND	set	14962
   278  0000                     _ODCONC	set	14946
   279  0000                     _ODCONB	set	14930
   280  0000                     _ODCONA	set	14914
   281  0000                     _ODCONE	set	14978
   282  0000                     _RD1I2C	set	14971
   283  0000                     _RD0I2C	set	14970
   284  0000                     _RC4I2C	set	14955
   285  0000                     _RC3I2C	set	14954
   286  0000                     _RB2I2C	set	14939
   287  0000                     _RB1I2C	set	14938
   288  0000                     _WPUC	set	14945
   289  0000                     _WPUA	set	14913
   290  0000                     _WPUB	set	14929
   291  0000                     _WPUE	set	14977
   292  0000                     _WPUD	set	14961
   293  0000                     _ANSELA	set	14912
   294  0000                     _ANSELE	set	14976
   295  0000                     _ANSELB	set	14928
   296  0000                     _ANSELC	set	14944
   297  0000                     _ANSELD	set	14960
   298  0000                     _CLC3CON	set	15456
   299  0000                     _CLC3GLS3	set	15465
   300  0000                     _CLC3GLS2	set	15464
   301  0000                     _CLC3GLS1	set	15463
   302  0000                     _CLC3GLS0	set	15462
   303  0000                     _CLC3SEL3	set	15461
   304  0000                     _CLC3SEL2	set	15460
   305  0000                     _CLC3SEL1	set	15459
   306  0000                     _CLC3SEL0	set	15458
   307  0000                     _CLC3POL	set	15457
   308  0000                     _CLC3CONbits	set	15456
   309  0000                     _U1RXB	set	15848
   310  0000                     _U1TXB	set	15850
   311  0000                     _U1ERRIRbits	set	15865
   312  0000                     _U1ERRIE	set	15866
   313  0000                     _U1ERRIR	set	15865
   314  0000                     _U1UIR	set	15864
   315  0000                     _U1FIFO	set	15863
   316  0000                     _U1BRGH	set	15862
   317  0000                     _U1BRGL	set	15861
   318  0000                     _U1CON2	set	15860
   319  0000                     _U1CON1	set	15859
   320  0000                     _U1CON0	set	15858
   321  0000                     _U1P3H	set	15857
   322  0000                     _U1P3L	set	15856
   323  0000                     _U1P2H	set	15855
   324  0000                     _U1P2L	set	15854
   325  0000                     _U1P1H	set	15853
   326  0000                     _U1P1L	set	15852
   327  0000                     _ADCON1bits	set	16121
   328  0000                     _ADERRL	set	16098
   329  0000                     _ADERRH	set	16099
   330  0000                     _ADPREVL	set	16109
   331  0000                     _ADPREVH	set	16110
   332  0000                     _ADFLTRL	set	16102
   333  0000                     _ADFLTRH	set	16103
   334  0000                     _ADSTATbits	set	16124
   335  0000                     _ADACCL	set	16104
   336  0000                     _ADACCH	set	16105
   337  0000                     _ADCON2bits	set	16122
   338  0000                     _ADCNT	set	16107
   339  0000                     _ADCON3bits	set	16123
   340  0000                     _ADRESL	set	16111
   341  0000                     _ADRESH	set	16112
   342  0000                     _ADCON0bits	set	16120
   343  0000                     _ADCON0	set	16120
   344  0000                     _ADCLK	set	16127
   345  0000                     _ADACT	set	16126
   346  0000                     _ADREF	set	16125
   347  0000                     _ADSTAT	set	16124
   348  0000                     _ADCON3	set	16123
   349  0000                     _ADCON2	set	16122
   350  0000                     _ADCON1	set	16121
   351  0000                     _ADPREH	set	16119
   352  0000                     _ADPREL	set	16118
   353  0000                     _ADCAP	set	16117
   354  0000                     _ADACQH	set	16116
   355  0000                     _ADACQL	set	16115
   356  0000                     _ADPCH	set	16113
   357  0000                     _ADRPT	set	16108
   358  0000                     _ADACCU	set	16106
   359  0000                     _ADSTPTH	set	16101
   360  0000                     _ADSTPTL	set	16100
   361  0000                     _ADUTHH	set	16097
   362  0000                     _ADUTHL	set	16096
   363  0000                     _ADLTHH	set	16095
   364  0000                     _ADLTHL	set	16094
   365  0000                     _SMT1TMR	set	16146
   366  0000                     _SMT1CPR	set	16149
   367  0000                     _SMT1CPW	set	16152
   368  0000                     _SMT1PR	set	16155
   369  0000                     _SMT1STATbits	set	16160
   370  0000                     _SMT1CON0bits	set	16158
   371  0000                     _SMT1CON1bits	set	16159
   372  0000                     _SMT1PRL	set	16155
   373  0000                     _SMT1PRH	set	16156
   374  0000                     _SMT1PRU	set	16157
   375  0000                     _SMT1SIG	set	16162
   376  0000                     _SMT1WIN	set	16163
   377  0000                     _SMT1CLK	set	16161
   378  0000                     _SMT1STAT	set	16160
   379  0000                     _SMT1CON1	set	16159
   380  0000                     _SMT1CON0	set	16158
   381  0000                     _CCPTMRS1bits	set	16223
   382  0000                     _CCPTMRS0bits	set	16222
   383  0000                     _PORTBbits	set	16331
   384  0000                     _PR2	set	16299
   385  0000                     _TMR2	set	16298
   386  0000                     _T2CONbits	set	16300
   387  0000                     _T2RSTbits	set	16303
   388  0000                     _T2HLTbits	set	16301
   389  0000                     _T2CON	set	16300
   390  0000                     _T2TMR	set	16298
   391  0000                     _T2PR	set	16299
   392  0000                     _T2RST	set	16303
   393  0000                     _T2HLT	set	16301
   394  0000                     _T2CLKCON	set	16302
   395  0000                     _PWM6DCL	set	16232
   396  0000                     _PWM6DCH	set	16233
   397  0000                     _PWM6CON	set	16234
   398  0000                     _PWM5DCL	set	16236
   399  0000                     _PWM5DCH	set	16237
   400  0000                     _PWM5CON	set	16238
   401  0000                     _PWM8DCL	set	16224
   402  0000                     _PWM8DCH	set	16225
   403  0000                     _PWM8CON	set	16226
   404  0000                     _PWM7DCL	set	16228
   405  0000                     _PWM7DCH	set	16229
   406  0000                     _PWM7CON	set	16230
   407  0000                     _PR4	set	16287
   408  0000                     _TMR4	set	16286
   409  0000                     _T4CONbits	set	16288
   410  0000                     _T4RSTbits	set	16291
   411  0000                     _T4HLTbits	set	16289
   412  0000                     _T4CON	set	16288
   413  0000                     _T4TMR	set	16286
   414  0000                     _T4PR	set	16287
   415  0000                     _T4RST	set	16291
   416  0000                     _T4HLT	set	16289
   417  0000                     _T4CLKCON	set	16290
   418  0000                     _T3GCONbits	set	16295
   419  0000                     _T3CONbits	set	16294
   420  0000                     _T3CON	set	16294
   421  0000                     _TMR3L	set	16292
   422  0000                     _TMR3H	set	16293
   423  0000                     _T3CLK	set	16297
   424  0000                     _T3GATE	set	16296
   425  0000                     _T3GCON	set	16295
   426  0000                     _T5GCONbits	set	16283
   427  0000                     _T5CONbits	set	16282
   428  0000                     _T5CON	set	16282
   429  0000                     _TMR5L	set	16280
   430  0000                     _TMR5H	set	16281
   431  0000                     _T5CLK	set	16285
   432  0000                     _T5GATE	set	16284
   433  0000                     _T5GCON	set	16283
   434  0000                     _CCPR4L	set	16240
   435  0000                     _CCPR4H	set	16241
   436  0000                     _CCP4CAP	set	16243
   437  0000                     _CCP4CON	set	16242
   438  0000                     _CCPR3L	set	16244
   439  0000                     _CCPR3H	set	16245
   440  0000                     _CCP3CAP	set	16247
   441  0000                     _CCP3CON	set	16246
   442  0000                     _PORTDbits	set	16333
   443  0000                     _IVTBASEL	set	16341
   444  0000                     _IVTBASEH	set	16342
   445  0000                     _IVTBASEU	set	16343
   446  0000                     _IVTLOCKbits	set	16340
   447  0000                     _IVTLOCK	set	16340
   448  0000                     _INTCON0bits	set	16338
   449  0000                     _TRISD	set	16325
   450  0000                     _TRISC	set	16324
   451  0000                     _TRISB	set	16323
   452  0000                     _TRISA	set	16322
   453  0000                     _TRISE	set	16326
   454  0000                     _LATC	set	16316
   455  0000                     _LATB	set	16315
   456  0000                     _LATA	set	16314
   457  0000                     _LATD	set	16317
   458  0000                     _LATE	set	16318
   459  0000                     _GIE	set	130711
   460                           
   461                           	psect	smallconst
   462  001000                     __psmallconst:
   463                           	callstack 0
   464  001000  00                 	db	0
   465  001001                     STR_4:
   466                           
   467                           ; BSR set to: 1
   468  001001  73                 	db	115	;'s'
   469  001002  74                 	db	116	;'t'
   470  001003  61                 	db	97	;'a'
   471  001004  72                 	db	114	;'r'
   472  001005  41                 	db	65	;'A'
   473  001006  63                 	db	99	;'c'
   474  001007  63                 	db	99	;'c'
   475  001008  65                 	db	101	;'e'
   476  001009  6C                 	db	108	;'l'
   477  00100A  50                 	db	80	;'P'
   478  00100B  6F                 	db	111	;'o'
   479  00100C  77                 	db	119	;'w'
   480  00100D  65                 	db	101	;'e'
   481  00100E  72                 	db	114	;'r'
   482  00100F  3A                 	db	58	;':'
   483  001010  20                 	db	32
   484  001011  25                 	db	37
   485  001012  64                 	db	100	;'d'
   486  001013  0A                 	db	10
   487  001014  00                 	db	0
   488  001015                     STR_5:
   489                           
   490                           ; BSR set to: 1
   491  001015  54                 	db	84	;'T'
   492  001016  69                 	db	105	;'i'
   493  001017  6D                 	db	109	;'m'
   494  001018  65                 	db	101	;'e'
   495  001019  3A                 	db	58	;':'
   496  00101A  20                 	db	32
   497  00101B  25                 	db	37
   498  00101C  64                 	db	100	;'d'
   499  00101D  20                 	db	32
   500  00101E  20                 	db	32
   501  00101F  20                 	db	32
   502  001020  20                 	db	32
   503  001021  20                 	db	32
   504  001022  00                 	db	0
   505  001023                     STR_3:
   506                           
   507                           ; BSR set to: 1
   508  001023  61                 	db	97	;'a'
   509  001024  63                 	db	99	;'c'
   510  001025  74                 	db	116	;'t'
   511  001026  4D                 	db	77	;'M'
   512  001027  50                 	db	80	;'P'
   513  001028  6F                 	db	111	;'o'
   514  001029  77                 	db	119	;'w'
   515  00102A  3A                 	db	58	;':'
   516  00102B  20                 	db	32
   517  00102C  25                 	db	37
   518  00102D  64                 	db	100	;'d'
   519  00102E  0A                 	db	10
   520  00102F  00                 	db	0
   521  001030                     STR_1:
   522                           
   523                           ; BSR set to: 1
   524  001030  42                 	db	66	;'B'
   525  001031  61                 	db	97	;'a'
   526  001032  74                 	db	116	;'t'
   527  001033  74                 	db	116	;'t'
   528  001034  65                 	db	101	;'e'
   529  001035  72                 	db	114	;'r'
   530  001036  79                 	db	121	;'y'
   531  001037  20                 	db	32
   532  001038  4C                 	db	76	;'L'
   533  001039  6F                 	db	111	;'o'
   534  00103A  77                 	db	119	;'w'
   535  00103B  00                 	db	0
   536  00103C                     STR_2:
   537                           
   538                           ; BSR set to: 1
   539  00103C  4D                 	db	77	;'M'
   540  00103D  50                 	db	80	;'P'
   541  00103E  6F                 	db	111	;'o'
   542  00103F  77                 	db	119	;'w'
   543  001040  3A                 	db	58	;':'
   544  001041  20                 	db	32
   545  001042  25                 	db	37
   546  001043  66                 	db	102	;'f'
   547  001044  0A                 	db	10
   548  001045  00                 	db	0
   549  001046                     STR_6:
   550                           
   551                           ; BSR set to: 1
   552  001046  49                 	db	73	;'I'
   553  001047  4E                 	db	78	;'N'
   554  001048  46                 	db	70	;'F'
   555  001049  00                 	db	0
   556  00104A                     STR_10:
   557                           
   558                           ; BSR set to: 1
   559  00104A  4E                 	db	78	;'N'
   560  00104B  41                 	db	65	;'A'
   561  00104C  4E                 	db	78	;'N'
   562  00104D  00                 	db	0
   563  00104E                     STR_7:
   564                           
   565                           ; BSR set to: 1
   566  00104E  69                 	db	105	;'i'
   567  00104F  6E                 	db	110	;'n'
   568  001050  66                 	db	102	;'f'
   569  001051  00                 	db	0
   570  001052                     STR_11:
   571                           
   572                           ; BSR set to: 1
   573  001052  6E                 	db	110	;'n'
   574  001053  61                 	db	97	;'a'
   575  001054  6E                 	db	110	;'n'
   576  001055  00                 	db	0
   577  001056                     STR_14:
   578                           
   579                           ; BSR set to: 1
   580  001056  6C                 	db	108	;'l'
   581  001057  66                 	db	102	;'f'
   582  001058  00                 	db	0
   583  001059  00                 	db	0	; dummy byte at the end
   584  0000                     
   585                           ; #config settings
   586                           
   587                           	psect	cinit
   588  0052F6                     __pcinit:
   589                           	callstack 0
   590  0052F6                     start_initialization:
   591                           	callstack 0
   592  0052F6                     __initialization:
   593                           	callstack 0
   594                           
   595                           ; Initialize objects allocated to BANK1 (2 bytes)
   596                           ; load TBLPTR registers with __pidataBANK1
   597  0052F6  0EF4               	movlw	low __pidataBANK1
   598  0052F8  6EF6               	movwf	tblptrl,c
   599  0052FA  0E5D               	movlw	high __pidataBANK1
   600  0052FC  6EF7               	movwf	tblptrh,c
   601  0052FE  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   602  005300  6EF8               	movwf	tblptru,c
   603  005302  0009               	tblrd		*+	;fetch initializer
   604  005304  006F FFD4  F1AE    	movff	tablat,__pdataBANK1
   605  00530A  0009               	tblrd		*+	;fetch initializer
   606  00530C  006F FFD4  F1AF    	movff	tablat,__pdataBANK1+1
   607                           
   608                           ; Initialize objects allocated to BANK0 (1 bytes)
   609                           ; load TBLPTR registers with __pidataBANK0
   610  005312  0EFE               	movlw	low __pidataBANK0
   611  005314  6EF6               	movwf	tblptrl,c
   612  005316  0E5D               	movlw	high __pidataBANK0
   613  005318  6EF7               	movwf	tblptrh,c
   614  00531A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   615  00531C  6EF8               	movwf	tblptru,c
   616  00531E  0009               	tblrd		*+	;fetch initializer
   617  005320  006F FFD4  F0FE    	movff	tablat,__pdataBANK0
   618                           
   619                           ; Clear objects allocated to BANK1 (132 bytes)
   620  005326  EE00  F100         	lfsr	0,__pbssBANK1
   621  00532A  0E84               	movlw	132
   622  00532C                     clear_0:
   623  00532C  6AEE               	clrf	postinc0,c
   624  00532E  06E8               	decf	wreg,f,c
   625  005330  E1FD               	bnz	clear_0
   626                           
   627                           ; Clear objects allocated to BANK0 (25 bytes)
   628  005332  EE00  F0E5         	lfsr	0,__pbssBANK0
   629  005336  0E19               	movlw	25
   630  005338                     clear_1:
   631  005338  6AEE               	clrf	postinc0,c
   632  00533A  06E8               	decf	wreg,f,c
   633  00533C  E1FD               	bnz	clear_1
   634                           
   635                           ; Clear objects allocated to COMRAM (18 bytes)
   636  00533E  EE00  F03A         	lfsr	0,__pbssCOMRAM
   637  005342  0E12               	movlw	18
   638  005344                     clear_2:
   639  005344  6AEE               	clrf	postinc0,c
   640  005346  06E8               	decf	wreg,f,c
   641  005348  E1FD               	bnz	clear_2
   642                           
   643                           ;
   644                           ; Setup IVTBASE
   645                           ;
   646  00534A  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   647  00534C  6ED5               	movwf	213,c
   648  00534E  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   649  005350  6ED6               	movwf	214,c
   650  005352  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   651  005354  6ED7               	movwf	215,c
   652  005356                     end_of_initialization:
   653                           	callstack 0
   654  005356                     __end_of__initialization:
   655                           	callstack 0
   656  005356  0100               	movlb	0
   657  005358  EF4A  F02E         	goto	_main	;jump to C main() function
   658                           
   659                           	psect	bssCOMRAM
   660  00003A                     __pbssCOMRAM:
   661                           	callstack 0
   662  00003A                     _width:
   663                           	callstack 0
   664  00003A                     	ds	2
   665  00003C                     _prec:
   666                           	callstack 0
   667  00003C                     	ds	2
   668  00003E                     _flags:
   669                           	callstack 0
   670  00003E                     	ds	2
   671  000040                     TMR4_ISR@CountCallBack:
   672                           	callstack 0
   673  000040                     	ds	2
   674  000042                     _uart1RxLastError:
   675                           	callstack 0
   676  000042                     	ds	1
   677  000043                     _uart1RxCount:
   678                           	callstack 0
   679  000043                     	ds	1
   680  000044                     _uart1RxTail:
   681                           	callstack 0
   682  000044                     	ds	1
   683  000045                     _uart1RxHead:
   684                           	callstack 0
   685  000045                     	ds	1
   686  000046                     _uart1TxTail:
   687                           	callstack 0
   688  000046                     	ds	1
   689  000047                     _uart1TxHead:
   690                           	callstack 0
   691  000047                     	ds	1
   692  000048                     _smtPeriod:
   693                           	callstack 0
   694  000048                     	ds	4
   695                           
   696                           	psect	bssBANK0
   697  0000E5                     __pbssBANK0:
   698                           	callstack 0
   699  0000E5                     _BatteryVolt:
   700                           	callstack 0
   701  0000E5                     	ds	2
   702  0000E7                     _actMotorPow:
   703                           	callstack 0
   704  0000E7                     	ds	2
   705  0000E9                     _currentSpeed:
   706                           	callstack 0
   707  0000E9                     	ds	2
   708  0000EB                     _setSpeed:
   709                           	callstack 0
   710  0000EB                     	ds	2
   711  0000ED                     _oldDistRight:
   712                           	callstack 0
   713  0000ED                     	ds	2
   714  0000EF                     _oldDistLeft:
   715                           	callstack 0
   716  0000EF                     	ds	2
   717  0000F1                     _distRightM:
   718                           	callstack 0
   719  0000F1                     	ds	2
   720  0000F3                     _distRight:
   721                           	callstack 0
   722  0000F3                     	ds	2
   723  0000F5                     _distLeftM:
   724                           	callstack 0
   725  0000F5                     	ds	2
   726  0000F7                     _distLeft:
   727                           	callstack 0
   728  0000F7                     	ds	2
   729  0000F9                     _delay:
   730                           	callstack 0
   731  0000F9                     	ds	1
   732  0000FA                     _cycle10ms:
   733                           	callstack 0
   734  0000FA                     	ds	1
   735  0000FB                     _curveMode:
   736                           	callstack 0
   737  0000FB                     	ds	1
   738  0000FC                     _distFront:
   739                           	callstack 0
   740  0000FC                     	ds	2
   741                           
   742                           	psect	dataBANK0
   743  0000FE                     __pdataBANK0:
   744                           	callstack 0
   745  0000FE                     _driveMode:
   746                           	callstack 0
   747  0000FE                     	ds	1
   748                           
   749                           	psect	bssBANK1
   750  000100                     __pbssBANK1:
   751                           	callstack 0
   752  000100                     _uart1RxStatusBuffer:
   753                           	callstack 0
   754  000100                     	ds	8
   755  000108                     _uart1RxBuffer:
   756                           	callstack 0
   757  000108                     	ds	8
   758  000110                     _uart1TxBuffer:
   759                           	callstack 0
   760  000110                     	ds	8
   761  000118                     floorf@F527:
   762                           	callstack 0
   763  000118                     	ds	4
   764  00011C                     ___fpclassifyf@F465:
   765                           	callstack 0
   766  00011C                     	ds	4
   767  000120                     _smtWay:
   768                           	callstack 0
   769  000120                     	ds	4
   770  000124                     _smtDuty:
   771                           	callstack 0
   772  000124                     	ds	4
   773  000128                     _nout:
   774                           	callstack 0
   775  000128                     	ds	2
   776  00012A                     _reverseTime:
   777                           	callstack 0
   778  00012A                     	ds	2
   779  00012C                     _oldSpeed:
   780                           	callstack 0
   781  00012C                     	ds	2
   782  00012E                     _motPow:
   783                           	callstack 0
   784  00012E                     	ds	2
   785  000130                     _battCheckCount:
   786                           	callstack 0
   787  000130                     	ds	2
   788  000132                     _reverseCount:
   789                           	callstack 0
   790  000132                     	ds	2
   791  000134                     _dbuf:
   792                           	callstack 0
   793  000134                     	ds	80
   794                           
   795                           	psect	dataBANK1
   796  0001AE                     __pdataBANK1:
   797                           	callstack 0
   798  0001AE                     _middleOffSet:
   799                           	callstack 0
   800  0001AE                     	ds	2
   801                           
   802                           	psect	cstackBANK1
   803  00019A                     __pcstackBANK1:
   804                           	callstack 0
   805  00019A                     ?_vfprintf:
   806                           	callstack 0
   807  00019A                     vfprintf@fp:
   808                           	callstack 0
   809                           
   810                           ; 2 bytes @ 0x0
   811  00019A                     	ds	2
   812  00019C                     vfprintf@fmt:
   813                           	callstack 0
   814                           
   815                           ; 2 bytes @ 0x2
   816  00019C                     	ds	2
   817  00019E                     vfprintf@ap:
   818                           	callstack 0
   819                           
   820                           ; 2 bytes @ 0x4
   821  00019E                     	ds	2
   822  0001A0                     ?_printf:
   823                           	callstack 0
   824  0001A0                     printf@fmt:
   825                           	callstack 0
   826                           
   827                           ; 2 bytes @ 0x6
   828  0001A0                     	ds	6
   829  0001A6                     printf@ap:
   830                           	callstack 0
   831                           
   832                           ; 2 bytes @ 0xC
   833  0001A6                     	ds	2
   834  0001A8                     ??_getCurve:
   835  0001A8                     startAccell@MPow:
   836                           	callstack 0
   837                           
   838                           ; 4 bytes @ 0xE
   839  0001A8                     	ds	2
   840  0001AA                     getCurve@deltaRight:
   841                           	callstack 0
   842                           
   843                           ; 2 bytes @ 0x10
   844  0001AA                     	ds	2
   845  0001AC                     getCurve@deltaLeft:
   846                           	callstack 0
   847                           
   848                           ; 2 bytes @ 0x12
   849  0001AC                     	ds	2
   850                           
   851                           	psect	cstackBANK0
   852  000060                     __pcstackBANK0:
   853                           	callstack 0
   854  000060                     ?_dtoa:
   855                           	callstack 0
   856  000060                     ___flmul@sign:
   857                           	callstack 0
   858  000060                     dtoa@fp:
   859                           	callstack 0
   860  000060                     floorf@m:
   861                           	callstack 0
   862                           
   863                           ; 4 bytes @ 0x0
   864  000060                     	ds	1
   865  000061                     ___flmul@aexp:
   866                           	callstack 0
   867                           
   868                           ; 1 bytes @ 0x1
   869  000061                     	ds	1
   870  000062                     ___flmul@grs:
   871                           	callstack 0
   872  000062                     dtoa@d:
   873                           	callstack 0
   874                           
   875                           ; 8 bytes @ 0x2
   876  000062                     	ds	2
   877  000064                     floorf@e:
   878                           	callstack 0
   879                           
   880                           ; 2 bytes @ 0x4
   881  000064                     	ds	2
   882  000066                     ___flmul@bexp:
   883                           	callstack 0
   884  000066                     floorf@u:
   885                           	callstack 0
   886                           
   887                           ; 4 bytes @ 0x6
   888  000066                     	ds	1
   889  000067                     ___flmul@prod:
   890                           	callstack 0
   891                           
   892                           ; 4 bytes @ 0x7
   893  000067                     	ds	3
   894  00006A                     _dtoa$3528:
   895                           	callstack 0
   896                           
   897                           ; 2 bytes @ 0xA
   898  00006A                     	ds	1
   899  00006B                     ___flmul@temp:
   900                           	callstack 0
   901                           
   902                           ; 2 bytes @ 0xB
   903  00006B                     	ds	1
   904  00006C                     dtoa@p:
   905                           	callstack 0
   906                           
   907                           ; 2 bytes @ 0xC
   908  00006C                     	ds	1
   909  00006D                     ?___fladd:
   910                           	callstack 0
   911  00006D                     ___flge@ff1:
   912                           	callstack 0
   913  00006D                     ___fladd@b:
   914                           	callstack 0
   915                           
   916                           ; 4 bytes @ 0xD
   917  00006D                     	ds	1
   918  00006E                     dtoa@w:
   919                           	callstack 0
   920                           
   921                           ; 2 bytes @ 0xE
   922  00006E                     	ds	2
   923  000070                     dtoa@s:
   924                           	callstack 0
   925                           
   926                           ; 2 bytes @ 0x10
   927  000070                     	ds	1
   928  000071                     ___flge@ff2:
   929                           	callstack 0
   930  000071                     ___fladd@a:
   931                           	callstack 0
   932                           
   933                           ; 4 bytes @ 0x11
   934  000071                     	ds	1
   935  000072                     dtoa@n:
   936                           	callstack 0
   937                           
   938                           ; 8 bytes @ 0x12
   939  000072                     	ds	3
   940  000075                     ___fladd@signs:
   941                           	callstack 0
   942                           
   943                           ; 1 bytes @ 0x15
   944  000075                     	ds	1
   945  000076                     ___fladd@aexp:
   946                           	callstack 0
   947                           
   948                           ; 1 bytes @ 0x16
   949  000076                     	ds	1
   950  000077                     ___fladd@bexp:
   951                           	callstack 0
   952                           
   953                           ; 1 bytes @ 0x17
   954  000077                     	ds	1
   955  000078                     ___fladd@grs:
   956                           	callstack 0
   957                           
   958                           ; 1 bytes @ 0x18
   959  000078                     	ds	1
   960  000079                     ?___flsub:
   961                           	callstack 0
   962  000079                     ?___fltol:
   963                           	callstack 0
   964  000079                     ___fltol@f1:
   965                           	callstack 0
   966  000079                     ___flsub@b:
   967                           	callstack 0
   968                           
   969                           ; 4 bytes @ 0x19
   970  000079                     	ds	1
   971  00007A                     dtoa@i:
   972                           	callstack 0
   973                           
   974                           ; 2 bytes @ 0x1A
   975  00007A                     	ds	3
   976  00007D                     ??___fltol:
   977  00007D                     ___flsub@a:
   978                           	callstack 0
   979                           
   980                           ; 4 bytes @ 0x1D
   981  00007D                     	ds	4
   982  000081                     ___fltol@sign1:
   983                           	callstack 0
   984                           
   985                           ; 1 bytes @ 0x21
   986  000081                     	ds	1
   987  000082                     ___fltol@exp1:
   988                           	callstack 0
   989                           
   990                           ; 1 bytes @ 0x22
   991  000082                     	ds	1
   992  000083                     ??_calcSpeed:
   993  000083                     ??_calcMotorPow:
   994  000083                     ?_efgtoa:
   995                           	callstack 0
   996  000083                     efgtoa@fp:
   997                           	callstack 0
   998                           
   999                           ; 2 bytes @ 0x23
  1000  000083                     	ds	2
  1001  000085                     calcMotorPow@setSpeedDelta:
  1002                           	callstack 0
  1003  000085                     efgtoa@f:
  1004                           	callstack 0
  1005                           
  1006                           ; 4 bytes @ 0x25
  1007  000085                     	ds	2
  1008  000087                     calcSpeed@speed:
  1009                           	callstack 0
  1010  000087                     calcMotorPow@oldSpeedDelta:
  1011                           	callstack 0
  1012                           
  1013                           ; 2 bytes @ 0x27
  1014  000087                     	ds	2
  1015  000089                     calcMotorPow@addMPow:
  1016                           	callstack 0
  1017  000089                     efgtoa@c:
  1018                           	callstack 0
  1019                           
  1020                           ; 1 bytes @ 0x29
  1021  000089                     	ds	1
  1022  00008A                     ??_efgtoa:
  1023                           
  1024                           ; 1 bytes @ 0x2A
  1025  00008A                     	ds	5
  1026  00008F                     _efgtoa$3552:
  1027                           	callstack 0
  1028                           
  1029                           ; 2 bytes @ 0x2F
  1030  00008F                     	ds	2
  1031  000091                     _efgtoa$3553:
  1032                           	callstack 0
  1033                           
  1034                           ; 2 bytes @ 0x31
  1035  000091                     	ds	2
  1036  000093                     _efgtoa$3557:
  1037                           	callstack 0
  1038                           
  1039                           ; 2 bytes @ 0x33
  1040  000093                     	ds	2
  1041  000095                     _efgtoa$3561:
  1042                           	callstack 0
  1043                           
  1044                           ; 2 bytes @ 0x35
  1045  000095                     	ds	2
  1046  000097                     _efgtoa$3562:
  1047                           	callstack 0
  1048                           
  1049                           ; 2 bytes @ 0x37
  1050  000097                     	ds	2
  1051  000099                     _efgtoa$3563:
  1052                           	callstack 0
  1053                           
  1054                           ; 2 bytes @ 0x39
  1055  000099                     	ds	2
  1056  00009B                     efgtoa@t:
  1057                           	callstack 0
  1058                           
  1059                           ; 2 bytes @ 0x3B
  1060  00009B                     	ds	2
  1061  00009D                     efgtoa@pp:
  1062                           	callstack 0
  1063                           
  1064                           ; 2 bytes @ 0x3D
  1065  00009D                     	ds	2
  1066  00009F                     efgtoa@ne:
  1067                           	callstack 0
  1068                           
  1069                           ; 2 bytes @ 0x3F
  1070  00009F                     	ds	2
  1071  0000A1                     efgtoa@m:
  1072                           	callstack 0
  1073                           
  1074                           ; 2 bytes @ 0x41
  1075  0000A1                     	ds	2
  1076  0000A3                     efgtoa@ou:
  1077                           	callstack 0
  1078                           
  1079                           ; 4 bytes @ 0x43
  1080  0000A3                     	ds	4
  1081  0000A7                     efgtoa@d:
  1082                           	callstack 0
  1083                           
  1084                           ; 2 bytes @ 0x47
  1085  0000A7                     	ds	2
  1086  0000A9                     efgtoa@sign:
  1087                           	callstack 0
  1088                           
  1089                           ; 2 bytes @ 0x49
  1090  0000A9                     	ds	2
  1091  0000AB                     efgtoa@p:
  1092                           	callstack 0
  1093                           
  1094                           ; 2 bytes @ 0x4B
  1095  0000AB                     	ds	2
  1096  0000AD                     efgtoa@w:
  1097                           	callstack 0
  1098                           
  1099                           ; 2 bytes @ 0x4D
  1100  0000AD                     	ds	2
  1101  0000AF                     efgtoa@nmode:
  1102                           	callstack 0
  1103                           
  1104                           ; 1 bytes @ 0x4F
  1105  0000AF                     	ds	1
  1106  0000B0                     efgtoa@mode:
  1107                           	callstack 0
  1108                           
  1109                           ; 1 bytes @ 0x50
  1110  0000B0                     	ds	1
  1111  0000B1                     efgtoa@h:
  1112                           	callstack 0
  1113                           
  1114                           ; 4 bytes @ 0x51
  1115  0000B1                     	ds	4
  1116  0000B5                     efgtoa@l:
  1117                           	callstack 0
  1118                           
  1119                           ; 4 bytes @ 0x55
  1120  0000B5                     	ds	4
  1121  0000B9                     efgtoa@i:
  1122                           	callstack 0
  1123                           
  1124                           ; 2 bytes @ 0x59
  1125  0000B9                     	ds	2
  1126  0000BB                     efgtoa@g:
  1127                           	callstack 0
  1128                           
  1129                           ; 4 bytes @ 0x5B
  1130  0000BB                     	ds	4
  1131  0000BF                     efgtoa@e:
  1132                           	callstack 0
  1133                           
  1134                           ; 2 bytes @ 0x5F
  1135  0000BF                     	ds	2
  1136  0000C1                     efgtoa@n:
  1137                           	callstack 0
  1138                           
  1139                           ; 2 bytes @ 0x61
  1140  0000C1                     	ds	2
  1141  0000C3                     efgtoa@u:
  1142                           	callstack 0
  1143                           
  1144                           ; 4 bytes @ 0x63
  1145  0000C3                     	ds	4
  1146  0000C7                     ?_vfpfcnvrt:
  1147                           	callstack 0
  1148  0000C7                     vfpfcnvrt@fp:
  1149                           	callstack 0
  1150                           
  1151                           ; 2 bytes @ 0x67
  1152  0000C7                     	ds	2
  1153  0000C9                     vfpfcnvrt@fmt:
  1154                           	callstack 0
  1155                           
  1156                           ; 2 bytes @ 0x69
  1157  0000C9                     	ds	2
  1158  0000CB                     vfpfcnvrt@ap:
  1159                           	callstack 0
  1160                           
  1161                           ; 2 bytes @ 0x6B
  1162  0000CB                     	ds	2
  1163  0000CD                     ??_vfpfcnvrt:
  1164                           
  1165                           ; 1 bytes @ 0x6D
  1166  0000CD                     	ds	4
  1167  0000D1                     vfpfcnvrt@ll:
  1168                           	callstack 0
  1169                           
  1170                           ; 8 bytes @ 0x71
  1171  0000D1                     	ds	8
  1172  0000D9                     _vfpfcnvrt$3581:
  1173                           	callstack 0
  1174                           
  1175                           ; 2 bytes @ 0x79
  1176  0000D9                     	ds	2
  1177  0000DB                     vfpfcnvrt@f:
  1178                           	callstack 0
  1179                           
  1180                           ; 4 bytes @ 0x7B
  1181  0000DB                     	ds	4
  1182  0000DF                     vfpfcnvrt@ct:
  1183                           	callstack 0
  1184                           
  1185                           ; 3 bytes @ 0x7F
  1186  0000DF                     	ds	3
  1187  0000E2                     vfpfcnvrt@c:
  1188                           	callstack 0
  1189                           
  1190                           ; 1 bytes @ 0x82
  1191  0000E2                     	ds	1
  1192  0000E3                     vfprintf@cfmt:
  1193                           	callstack 0
  1194                           
  1195                           ; 2 bytes @ 0x83
  1196  0000E3                     	ds	2
  1197                           
  1198                           	psect	cstackCOMRAM
  1199  000001                     __pcstackCOMRAM:
  1200                           	callstack 0
  1201  000001                     CCP3_DefaultCallBack@capturedValue:
  1202                           	callstack 0
  1203                           
  1204                           ; 2 bytes @ 0x0
  1205  000001                     	ds	2
  1206  000003                     CCP3_CaptureISR@module:
  1207                           	callstack 0
  1208                           
  1209                           ; 2 bytes @ 0x2
  1210  000003                     	ds	2
  1211  000005                     CCP4_DefaultCallBack@capturedValue:
  1212                           	callstack 0
  1213                           
  1214                           ; 2 bytes @ 0x4
  1215  000005                     	ds	2
  1216  000007                     CCP4_CaptureISR@module:
  1217                           	callstack 0
  1218                           
  1219                           ; 2 bytes @ 0x6
  1220  000007                     	ds	2
  1221  000009                     ?_TMR5_ReadTimer:
  1222                           	callstack 0
  1223  000009                     TMR5_WriteTimer@timerVal:
  1224                           	callstack 0
  1225                           
  1226                           ; 2 bytes @ 0x8
  1227  000009                     	ds	2
  1228  00000B                     ??_TMR5_ReadTimer:
  1229  00000B                     
  1230                           ; 1 bytes @ 0xA
  1231  00000B                     	ds	2
  1232  00000D                     TMR5_ReadTimer@readVal:
  1233                           	callstack 0
  1234                           
  1235                           ; 2 bytes @ 0xC
  1236  00000D                     	ds	2
  1237  00000F                     TMR5_ReadTimer@readValHigh:
  1238                           	callstack 0
  1239                           
  1240                           ; 1 bytes @ 0xE
  1241  00000F                     	ds	1
  1242  000010                     TMR5_ReadTimer@readValLow:
  1243                           	callstack 0
  1244                           
  1245                           ; 1 bytes @ 0xF
  1246  000010                     	ds	1
  1247  000011                     ??_UART1_tx_vect_isr:
  1248  000011                     
  1249                           ; 1 bytes @ 0x10
  1250  000011                     	ds	1
  1251  000012                     ??_UART1_rx_vect_isr:
  1252                           
  1253                           ; 1 bytes @ 0x11
  1254  000012                     	ds	1
  1255  000013                     ??_TMR4_ISR:
  1256                           
  1257                           ; 1 bytes @ 0x12
  1258  000013                     	ds	1
  1259  000014                     ??_TMR3_Initialize:
  1260  000014                     ?_strlen:
  1261                           	callstack 0
  1262  000014                     ?___fpclassifyf:
  1263                           	callstack 0
  1264  000014                     ?_isupper:
  1265                           	callstack 0
  1266  000014                     ?_strncmp:
  1267                           	callstack 0
  1268  000014                     ?_ADCC_GetSingleConversion:
  1269                           	callstack 0
  1270  000014                     ?___awdiv:
  1271                           	callstack 0
  1272  000014                     ?___awmod:
  1273                           	callstack 0
  1274  000014                     ?___fldiv:
  1275                           	callstack 0
  1276  000014                     ?___aldiv:
  1277                           	callstack 0
  1278  000014                     ?___flneg:
  1279                           	callstack 0
  1280  000014                     ?___aodiv:
  1281                           	callstack 0
  1282  000014                     ?___aomod:
  1283                           	callstack 0
  1284  000014                     UART1_Write@txData:
  1285                           	callstack 0
  1286  000014                     INTERRUPT_Initialize@state:
  1287                           	callstack 0
  1288  000014                     UART1_SetFramingErrorHandler@interruptHandler:
  1289                           	callstack 0
  1290  000014                     UART1_SetOverrunErrorHandler@interruptHandler:
  1291                           	callstack 0
  1292  000014                     UART1_SetErrorHandler@interruptHandler:
  1293                           	callstack 0
  1294  000014                     UART1_SetRxInterruptHandler@InterruptHandler:
  1295                           	callstack 0
  1296  000014                     UART1_SetTxInterruptHandler@InterruptHandler:
  1297                           	callstack 0
  1298  000014                     CCP3_SetCallBack@customCallBack:
  1299                           	callstack 0
  1300  000014                     CCP4_SetCallBack@customCallBack:
  1301                           	callstack 0
  1302  000014                     TMR5_SetGateInterruptHandler@InterruptHandler:
  1303                           	callstack 0
  1304  000014                     TMR4_SetInterruptHandler@InterruptHandler:
  1305                           	callstack 0
  1306  000014                     PWM7_LoadDutyValue@dutyValue:
  1307                           	callstack 0
  1308  000014                     PWM8_LoadDutyValue@dutyValue:
  1309                           	callstack 0
  1310  000014                     PWM5_LoadDutyValue@dutyValue:
  1311                           	callstack 0
  1312  000014                     PWM6_LoadDutyValue@dutyValue:
  1313                           	callstack 0
  1314  000014                     ___awdiv@dividend:
  1315                           	callstack 0
  1316  000014                     ___awmod@dividend:
  1317                           	callstack 0
  1318  000014                     isupper@c:
  1319                           	callstack 0
  1320  000014                     strcpy@dest:
  1321                           	callstack 0
  1322  000014                     strlen@s:
  1323                           	callstack 0
  1324  000014                     strncmp@_l:
  1325                           	callstack 0
  1326  000014                     ___aldiv@dividend:
  1327                           	callstack 0
  1328  000014                     ___fleq@ff1:
  1329                           	callstack 0
  1330  000014                     ___flneg@f1:
  1331                           	callstack 0
  1332  000014                     ___fldiv@b:
  1333                           	callstack 0
  1334  000014                     ___fpclassifyf@x:
  1335                           	callstack 0
  1336  000014                     ___aodiv@dividend:
  1337                           	callstack 0
  1338  000014                     ___aomod@dividend:
  1339                           	callstack 0
  1340                           
  1341                           ; 8 bytes @ 0x13
  1342  000014                     	ds	1
  1343  000015                     putch@txData:
  1344                           	callstack 0
  1345                           
  1346                           ; 1 bytes @ 0x14
  1347  000015                     	ds	1
  1348  000016                     ??_TMR5_Initialize:
  1349  000016                     ??_isupper:
  1350  000016                     ??_PWM7_LoadDutyValue:
  1351  000016                     ??_PWM8_LoadDutyValue:
  1352  000016                     ??_PWM5_LoadDutyValue:
  1353  000016                     ??_PWM6_LoadDutyValue:
  1354  000016                     ??_ADCC_GetSingleConversion:
  1355  000016                     ___awdiv@divisor:
  1356                           	callstack 0
  1357  000016                     ___awmod@divisor:
  1358                           	callstack 0
  1359  000016                     fputc@c:
  1360                           	callstack 0
  1361  000016                     strcpy@src:
  1362                           	callstack 0
  1363  000016                     strlen@a:
  1364                           	callstack 0
  1365  000016                     strncmp@_r:
  1366                           	callstack 0
  1367                           
  1368                           ; 2 bytes @ 0x15
  1369  000016                     	ds	2
  1370  000018                     ??___fpclassifyf:
  1371  000018                     ??_strcpy:
  1372  000018                     ADCC_GetSingleConversion@channel:
  1373                           	callstack 0
  1374  000018                     ___awdiv@counter:
  1375                           	callstack 0
  1376  000018                     ___awmod@counter:
  1377                           	callstack 0
  1378  000018                     setMotor@motorPower:
  1379                           	callstack 0
  1380  000018                     fputc@fp:
  1381                           	callstack 0
  1382  000018                     strncmp@n:
  1383                           	callstack 0
  1384  000018                     ___aldiv@divisor:
  1385                           	callstack 0
  1386  000018                     ___fleq@ff2:
  1387                           	callstack 0
  1388  000018                     ___fldiv@a:
  1389                           	callstack 0
  1390                           
  1391                           ; 4 bytes @ 0x17
  1392  000018                     	ds	1
  1393  000019                     ___awdiv@sign:
  1394                           	callstack 0
  1395  000019                     ___awmod@sign:
  1396                           	callstack 0
  1397                           
  1398                           ; 1 bytes @ 0x18
  1399  000019                     	ds	1
  1400  00001A                     ??_setMotor:
  1401  00001A                     ??_fputc:
  1402  00001A                     ??_strncmp:
  1403  00001A                     ?_tolower:
  1404                           	callstack 0
  1405  00001A                     ___awdiv@quotient:
  1406                           	callstack 0
  1407  00001A                     strcpy@s:
  1408                           	callstack 0
  1409  00001A                     tolower@c:
  1410                           	callstack 0
  1411                           
  1412                           ; 2 bytes @ 0x19
  1413  00001A                     	ds	1
  1414  00001B                     strncmp@l:
  1415                           	callstack 0
  1416                           
  1417                           ; 2 bytes @ 0x1A
  1418  00001B                     	ds	1
  1419  00001C                     ??___fldiv:
  1420  00001C                     ??_tolower:
  1421  00001C                     ??___fleq:
  1422  00001C                     ?___xxtofl:
  1423                           	callstack 0
  1424  00001C                     ___aldiv@counter:
  1425                           	callstack 0
  1426  00001C                     setSteering@steering:
  1427                           	callstack 0
  1428  00001C                     ___fpclassifyf@e:
  1429                           	callstack 0
  1430  00001C                     strcpy@d:
  1431                           	callstack 0
  1432  00001C                     ___xxtofl@val:
  1433                           	callstack 0
  1434  00001C                     ___aodiv@divisor:
  1435                           	callstack 0
  1436  00001C                     ___aomod@divisor:
  1437                           	callstack 0
  1438                           
  1439                           ; 8 bytes @ 0x1B
  1440  00001C                     	ds	1
  1441  00001D                     ___aldiv@sign:
  1442                           	callstack 0
  1443  00001D                     strncmp@r:
  1444                           	callstack 0
  1445                           
  1446                           ; 2 bytes @ 0x1C
  1447  00001D                     	ds	1
  1448  00001E                     setSteering@steeringMode:
  1449                           	callstack 0
  1450  00001E                     ___aldiv@quotient:
  1451                           	callstack 0
  1452  00001E                     ___fpclassifyf@u:
  1453                           	callstack 0
  1454                           
  1455                           ; 4 bytes @ 0x1D
  1456  00001E                     	ds	1
  1457  00001F                     ??_setSteering:
  1458  00001F                     fputs@s:
  1459                           	callstack 0
  1460                           
  1461                           ; 2 bytes @ 0x1E
  1462  00001F                     	ds	1
  1463  000020                     ??___xxtofl:
  1464  000020                     _tolower$3674:
  1465                           	callstack 0
  1466  000020                     ___fldiv@rem:
  1467                           	callstack 0
  1468                           
  1469                           ; 4 bytes @ 0x1F
  1470  000020                     	ds	1
  1471  000021                     setSteering@steeringF:
  1472                           	callstack 0
  1473  000021                     fputs@fp:
  1474                           	callstack 0
  1475                           
  1476                           ; 2 bytes @ 0x20
  1477  000021                     	ds	1
  1478  000022                     ?_actSpeed:
  1479                           	callstack 0
  1480                           
  1481                           ; 2 bytes @ 0x21
  1482  000022                     	ds	1
  1483  000023                     fputs@c:
  1484                           	callstack 0
  1485  000023                     setSteering@steeringB:
  1486                           	callstack 0
  1487                           
  1488                           ; 2 bytes @ 0x22
  1489  000023                     	ds	1
  1490  000024                     ___aodiv@counter:
  1491                           	callstack 0
  1492  000024                     ___aomod@counter:
  1493                           	callstack 0
  1494  000024                     ___fldiv@sign:
  1495                           	callstack 0
  1496  000024                     ___xxtofl@sign:
  1497                           	callstack 0
  1498  000024                     actSpeed@speed:
  1499                           	callstack 0
  1500  000024                     fputs@i:
  1501                           	callstack 0
  1502                           
  1503                           ; 2 bytes @ 0x23
  1504  000024                     	ds	1
  1505  000025                     ??_calcSteering:
  1506  000025                     ___aodiv@sign:
  1507                           	callstack 0
  1508  000025                     ___aomod@sign:
  1509                           	callstack 0
  1510  000025                     ___xxtofl@exp:
  1511                           	callstack 0
  1512  000025                     ___fldiv@new_exp:
  1513                           	callstack 0
  1514                           
  1515                           ; 2 bytes @ 0x24
  1516  000025                     	ds	1
  1517  000026                     ?_abs:
  1518                           	callstack 0
  1519  000026                     ?_pad:
  1520                           	callstack 0
  1521  000026                     pad@fp:
  1522                           	callstack 0
  1523  000026                     abs@a:
  1524                           	callstack 0
  1525  000026                     ___xxtofl@arg:
  1526                           	callstack 0
  1527  000026                     ___aodiv@quotient:
  1528                           	callstack 0
  1529                           
  1530                           ; 8 bytes @ 0x25
  1531  000026                     	ds	1
  1532  000027                     _calcSteering$4172:
  1533                           	callstack 0
  1534  000027                     ___fldiv@grs:
  1535                           	callstack 0
  1536                           
  1537                           ; 4 bytes @ 0x26
  1538  000027                     	ds	1
  1539  000028                     ??_abs:
  1540  000028                     pad@buf:
  1541                           	callstack 0
  1542                           
  1543                           ; 2 bytes @ 0x27
  1544  000028                     	ds	1
  1545  000029                     calcSteering@delta:
  1546                           	callstack 0
  1547                           
  1548                           ; 2 bytes @ 0x28
  1549  000029                     	ds	1
  1550  00002A                     ?___flmul:
  1551                           	callstack 0
  1552  00002A                     pad@p:
  1553                           	callstack 0
  1554  00002A                     ___flmul@b:
  1555                           	callstack 0
  1556                           
  1557                           ; 4 bytes @ 0x29
  1558  00002A                     	ds	1
  1559  00002B                     ___fldiv@bexp:
  1560                           	callstack 0
  1561                           
  1562                           ; 1 bytes @ 0x2A
  1563  00002B                     	ds	1
  1564  00002C                     ??_pad:
  1565  00002C                     ___fldiv@aexp:
  1566                           	callstack 0
  1567                           
  1568                           ; 1 bytes @ 0x2B
  1569  00002C                     	ds	1
  1570  00002D                     ?_floorf:
  1571                           	callstack 0
  1572  00002D                     pad@i:
  1573                           	callstack 0
  1574  00002D                     floorf@x:
  1575                           	callstack 0
  1576                           
  1577                           ; 4 bytes @ 0x2C
  1578  00002D                     	ds	1
  1579  00002E                     ___flmul@a:
  1580                           	callstack 0
  1581                           
  1582                           ; 4 bytes @ 0x2D
  1583  00002E                     	ds	1
  1584  00002F                     pad@w:
  1585                           	callstack 0
  1586                           
  1587                           ; 2 bytes @ 0x2E
  1588  00002F                     	ds	2
  1589  000031                     ??_floorf:
  1590  000031                     ??_dtoa:
  1591                           
  1592                           ; 1 bytes @ 0x30
  1593  000031                     	ds	1
  1594  000032                     ??___flmul:
  1595                           
  1596                           ; 1 bytes @ 0x31
  1597  000032                     	ds	4
  1598  000036                     ??___fladd:
  1599  000036                     ??___flge:
  1600                           
  1601                           ; 1 bytes @ 0x35
  1602  000036                     	ds	4
  1603  00003A                     
  1604                           ; 1 bytes @ 0x39
  1605 ;;
  1606 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1607 ;;
  1608 ;; *************** function _main *****************
  1609 ;; Defined at:
  1610 ;;		line 8 in file "main.c"
  1611 ;; Parameters:    Size  Location     Type
  1612 ;;		None
  1613 ;; Auto vars:     Size  Location     Type
  1614 ;;		None
  1615 ;; Return value:  Size  Location     Type
  1616 ;;                  1    wreg      void 
  1617 ;; Registers used:
  1618 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1619 ;; Tracked objects:
  1620 ;;		On entry : 0/0
  1621 ;;		On exit  : 0/0
  1622 ;;		Unchanged: 0/0
  1623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1627 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1628 ;;Total ram usage:        0 bytes
  1629 ;; Hardware stack levels required when called: 19
  1630 ;; This function calls:
  1631 ;;		_SYSTEM_Initialize
  1632 ;;		_TMR4_SetInterruptHandler
  1633 ;;		_loop
  1634 ;; This function is called by:
  1635 ;;		Startup code after reset
  1636 ;; This function uses a non-reentrant model
  1637 ;;
  1638                           
  1639                           	psect	text0
  1640  005C94                     __ptext0:
  1641                           	callstack 0
  1642  005C94                     _main:
  1643                           	callstack 12
  1644  005C94                     
  1645                           ;main.c: 9:     SYSTEM_Initialize();
  1646  005C94  EC8A  F02A         	call	_SYSTEM_Initialize	;wreg free
  1647  005C98                     
  1648                           ;main.c: 10:     (INTCON0bits.GIEH = 1);
  1649  005C98  8ED2               	bsf	210,7,c	;volatile
  1650  005C9A                     
  1651                           ;main.c: 11:     (INTCON0bits.GIEL = 1);
  1652  005C9A  8CD2               	bsf	210,6,c	;volatile
  1653                           
  1654                           ;main.c: 12:     TMR4_SetInterruptHandler(TMR4_10msISR);
  1655  005C9C  0EEE               	movlw	low _TMR4_10msISR
  1656  005C9E  6E14               	movwf	TMR4_SetInterruptHandler@InterruptHandler^0,c
  1657  005CA0  0E5D               	movlw	high _TMR4_10msISR
  1658  005CA2  6E15               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)^0,c
  1659  005CA4  ECE5  F02E         	call	_TMR4_SetInterruptHandler	;wreg free
  1660  005CA8                     l9155:
  1661                           
  1662                           ;main.c: 15:         loop();
  1663  005CA8  EC94  F021         	call	_loop	;wreg free
  1664  005CAC  EF54  F02E         	goto	l9155
  1665  005CB0  EF57  F000         	goto	start
  1666  005CB4                     __end_of_main:
  1667                           	callstack 0
  1668                           
  1669 ;; *************** function _loop *****************
  1670 ;; Defined at:
  1671 ;;		line 19 in file "main.c"
  1672 ;; Parameters:    Size  Location     Type
  1673 ;;		None
  1674 ;; Auto vars:     Size  Location     Type
  1675 ;;		None
  1676 ;; Return value:  Size  Location     Type
  1677 ;;                  1    wreg      void 
  1678 ;; Registers used:
  1679 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1680 ;; Tracked objects:
  1681 ;;		On entry : 0/0
  1682 ;;		On exit  : 0/0
  1683 ;;		Unchanged: 0/0
  1684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1688 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1689 ;;Total ram usage:        0 bytes
  1690 ;; Hardware stack levels used: 1
  1691 ;; Hardware stack levels required when called: 18
  1692 ;; This function calls:
  1693 ;;		___flge
  1694 ;;		___xxtofl
  1695 ;;		_calcMotorPow
  1696 ;;		_calcSpeed
  1697 ;;		_calcSteering
  1698 ;;		_checkBatt
  1699 ;;		_getBatteryVoltage
  1700 ;;		_getCurve
  1701 ;;		_getReverse
  1702 ;;		_printf
  1703 ;;		_setMotor
  1704 ;;		_setSteering
  1705 ;;		_startAccell
  1706 ;; This function is called by:
  1707 ;;		_main
  1708 ;; This function uses a non-reentrant model
  1709 ;;
  1710                           
  1711                           	psect	text1
  1712  004328                     __ptext1:
  1713                           	callstack 0
  1714  004328                     _loop:
  1715                           	callstack 12
  1716  004328                     
  1717                           ;main.c: 20:     setMotor(0);
  1718  004328  0E00               	movlw	0
  1719  00432A  6E19               	movwf	(setMotor@motorPower+1)^0,c
  1720  00432C  0E00               	movlw	0
  1721  00432E  6E18               	movwf	setMotor@motorPower^0,c
  1722  004330  EC38  F025         	call	_setMotor	;wreg free
  1723                           
  1724                           ;main.c: 21:     setSteering(0, Front);
  1725  004334  0E00               	movlw	0
  1726  004336  6E1D               	movwf	(setSteering@steering+1)^0,c
  1727  004338  0E00               	movlw	0
  1728  00433A  6E1C               	movwf	setSteering@steering^0,c
  1729  00433C  0E03               	movlw	3
  1730  00433E  6E1E               	movwf	setSteering@steeringMode^0,c
  1731  004340  ECE7  F01D         	call	_setSteering	;wreg free
  1732  004344                     l1224:
  1733  004344  B8CB               	btfsc	203,4,c	;volatile
  1734  004346  EFA7  F021         	goto	u10201
  1735  00434A  EFA9  F021         	goto	u10200
  1736  00434E                     u10201:
  1737  00434E  EFA2  F021         	goto	l1224
  1738  004352                     u10200:
  1739  004352                     l9105:
  1740  004352  0100               	movlb	0	; () banked
  1741  004354  51FA               	movf	_cycle10ms& (0+255),w,b	;volatile
  1742  004356  B4D8               	btfsc	status,2,c
  1743  004358  EFB0  F021         	goto	u10211
  1744  00435C  EFB2  F021         	goto	u10210
  1745  004360                     u10211:
  1746  004360  EFA9  F021         	goto	l9105
  1747  004364                     u10210:
  1748  004364                     
  1749                           ; BSR set to: 0
  1750                           ;main.c: 26:         cycle10ms = 0;
  1751  004364  0E00               	movlw	0
  1752  004366  6FFA               	movwf	_cycle10ms& (0+255),b	;volatile
  1753  004368                     
  1754                           ; BSR set to: 0
  1755                           ;main.c: 28:         getBatteryVoltage();
  1756  004368  ECB3  F02E         	call	_getBatteryVoltage	;wreg free
  1757  00436C                     
  1758                           ;main.c: 29:     } while (BatteryVolt < ((6.8) * 409.6));
  1759  00436C  C0E5  F01C         	movff	_BatteryVolt,___xxtofl@val
  1760  004370  C0E6  F01D         	movff	_BatteryVolt+1,___xxtofl@val+1
  1761  004374  6A1E               	clrf	(___xxtofl@val+2)^0,c
  1762  004376  6A1F               	clrf	(___xxtofl@val+3)^0,c
  1763  004378  0E00               	movlw	0
  1764  00437A  EC0D  F01D         	call	___xxtofl
  1765  00437E  C01C  F06D         	movff	?___xxtofl,___flge@ff1
  1766  004382  C01D  F06E         	movff	?___xxtofl+1,___flge@ff1+1
  1767  004386  C01E  F06F         	movff	?___xxtofl+2,___flge@ff1+2
  1768  00438A  C01F  F070         	movff	?___xxtofl+3,___flge@ff1+3
  1769  00438E  0E7B               	movlw	123
  1770  004390  0100               	movlb	0	; () banked
  1771  004392  6F71               	movwf	___flge@ff2& (0+255),b
  1772  004394  0E14               	movlw	20
  1773  004396  6F72               	movwf	(___flge@ff2+1)& (0+255),b
  1774  004398  0E2E               	movlw	46
  1775  00439A  6F73               	movwf	(___flge@ff2+2)& (0+255),b
  1776  00439C  0E45               	movlw	69
  1777  00439E  6F74               	movwf	(___flge@ff2+3)& (0+255),b
  1778  0043A0  ECBC  F023         	call	___flge	;wreg free
  1779  0043A4  0100               	movlb	0	; () banked
  1780  0043A6  A0D8               	btfss	status,0,c
  1781  0043A8  EFD8  F021         	goto	u10221
  1782  0043AC  EFDA  F021         	goto	u10220
  1783  0043B0                     u10221:
  1784  0043B0  EFA9  F021         	goto	l9105
  1785  0043B4                     u10220:
  1786  0043B4                     
  1787                           ; BSR set to: 0
  1788                           ;main.c: 31:     startAccell();
  1789  0043B4  EC7D  F01F         	call	_startAccell	;wreg free
  1790  0043B8                     
  1791                           ;main.c: 32:     driveMode = Straight;
  1792  0043B8  0E01               	movlw	1
  1793  0043BA  0100               	movlb	0	; () banked
  1794  0043BC  6FFE               	movwf	_driveMode& (0+255),b
  1795  0043BE                     
  1796                           ; BSR set to: 0
  1797                           ;main.c: 33:     curveMode = OutCurve;
  1798  0043BE  0E00               	movlw	0
  1799  0043C0  6FFB               	movwf	_curveMode& (0+255),b
  1800  0043C2                     
  1801                           ; BSR set to: 0
  1802                           ;main.c: 34:     oldDistLeft = distLeft;
  1803  0043C2  C0F7  F0EF         	movff	_distLeft,_oldDistLeft	;volatile
  1804  0043C6  C0F8  F0F0         	movff	_distLeft+1,_oldDistLeft+1	;volatile
  1805  0043CA                     
  1806                           ; BSR set to: 0
  1807                           ;main.c: 35:     oldDistRight = distRight;
  1808  0043CA  C0F3  F0ED         	movff	_distRight,_oldDistRight	;volatile
  1809  0043CE  C0F4  F0EE         	movff	_distRight+1,_oldDistRight+1	;volatile
  1810  0043D2                     
  1811                           ; BSR set to: 0
  1812                           ;main.c: 36:     cycle10ms = 0;
  1813  0043D2  0E00               	movlw	0
  1814  0043D4  6FFA               	movwf	_cycle10ms& (0+255),b	;volatile
  1815  0043D6                     l9125:
  1816  0043D6  0100               	movlb	0	; () banked
  1817  0043D8  51FA               	movf	_cycle10ms& (0+255),w,b	;volatile
  1818  0043DA  B4D8               	btfsc	status,2,c
  1819  0043DC  EFF2  F021         	goto	u10231
  1820  0043E0  EFF4  F021         	goto	u10230
  1821  0043E4                     u10231:
  1822  0043E4  EFEB  F021         	goto	l9125
  1823  0043E8                     u10230:
  1824  0043E8                     
  1825                           ; BSR set to: 0
  1826                           ;main.c: 39:         cycle10ms = 0;
  1827  0043E8  0E00               	movlw	0
  1828  0043EA  6FFA               	movwf	_cycle10ms& (0+255),b	;volatile
  1829  0043EC                     
  1830                           ; BSR set to: 0
  1831                           ;main.c: 41:         if (!PORTBbits.RB5) {
  1832  0043EC  BACB               	btfsc	203,5,c	;volatile
  1833  0043EE  EFFB  F021         	goto	u10241
  1834  0043F2  EFFD  F021         	goto	u10240
  1835  0043F6                     u10241:
  1836  0043F6  EF0F  F022         	goto	l9135
  1837  0043FA                     u10240:
  1838  0043FA                     
  1839                           ; BSR set to: 0
  1840                           ;main.c: 42:             setSpeed = 0;
  1841  0043FA  0E00               	movlw	0
  1842  0043FC  6FEC               	movwf	(_setSpeed+1)& (0+255),b
  1843  0043FE  0E00               	movlw	0
  1844  004400  6FEB               	movwf	_setSpeed& (0+255),b
  1845                           
  1846                           ;main.c: 43:             actMotorPow = 0;
  1847  004402  0E00               	movlw	0
  1848  004404  6FE8               	movwf	(_actMotorPow+1)& (0+255),b
  1849  004406  0E00               	movlw	0
  1850  004408  6FE7               	movwf	_actMotorPow& (0+255),b
  1851  00440A                     
  1852                           ; BSR set to: 0
  1853                           ;main.c: 44:             setSteering(0, Front);
  1854  00440A  0E00               	movlw	0
  1855  00440C  6E1D               	movwf	(setSteering@steering+1)^0,c
  1856  00440E  0E00               	movlw	0
  1857  004410  6E1C               	movwf	setSteering@steering^0,c
  1858  004412  0E03               	movlw	3
  1859  004414  6E1E               	movwf	setSteering@steeringMode^0,c
  1860  004416  ECE7  F01D         	call	_setSteering	;wreg free
  1861                           
  1862                           ;main.c: 45:             break;
  1863  00441A  EF2E  F022         	goto	l1240
  1864  00441E                     l9135:
  1865                           
  1866                           ; BSR set to: 0
  1867                           ;main.c: 48:         if (checkBatt()) {
  1868  00441E  ECC5  F028         	call	_checkBatt	;wreg free
  1869  004422  0900               	iorlw	0
  1870  004424  B4D8               	btfsc	status,2,c
  1871  004426  EF17  F022         	goto	u10251
  1872  00442A  EF19  F022         	goto	u10250
  1873  00442E                     u10251:
  1874  00442E  EF22  F022         	goto	l9139
  1875  004432                     u10250:
  1876  004432                     
  1877                           ;main.c: 49:             printf("Battery Low");
  1878  004432  0E30               	movlw	low STR_1
  1879  004434  0101               	movlb	1	; () banked
  1880  004436  6FA0               	movwf	printf@fmt& (0+255),b
  1881  004438  0E10               	movlw	high STR_1
  1882  00443A  6FA1               	movwf	(printf@fmt+1)& (0+255),b
  1883  00443C  ECFE  F02D         	call	_printf	;wreg free
  1884                           
  1885                           ;main.c: 50:             break;
  1886  004440  EF2E  F022         	goto	l1240
  1887  004444                     l9139:
  1888                           
  1889                           ;main.c: 53:         getCurve();
  1890  004444  ECDE  F018         	call	_getCurve	;wreg free
  1891  004448                     
  1892                           ;main.c: 54:         getReverse();
  1893  004448  EC39  F023         	call	_getReverse	;wreg free
  1894  00444C                     
  1895                           ;main.c: 56:         calcSteering();
  1896  00444C  EC23  F01C         	call	_calcSteering	;wreg free
  1897  004450                     
  1898                           ;main.c: 57:         calcSpeed();
  1899  004450  EC1A  F01B         	call	_calcSpeed	;wreg free
  1900  004454                     
  1901                           ;main.c: 58:         calcMotorPow();
  1902  004454  ECEE  F020         	call	_calcMotorPow	;wreg free
  1903  004458  EFEB  F021         	goto	l9125
  1904  00445C                     l1240:
  1905  00445C  0012               	return		;funcret
  1906  00445E                     __end_of_loop:
  1907                           	callstack 0
  1908                           
  1909 ;; *************** function _startAccell *****************
  1910 ;; Defined at:
  1911 ;;		line 98 in file "main.c"
  1912 ;; Parameters:    Size  Location     Type
  1913 ;;		None
  1914 ;; Auto vars:     Size  Location     Type
  1915 ;;  MPow            4   14[BANK1 ] float 
  1916 ;; Return value:  Size  Location     Type
  1917 ;;                  1    wreg      void 
  1918 ;; Registers used:
  1919 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1920 ;; Tracked objects:
  1921 ;;		On entry : 0/0
  1922 ;;		On exit  : 0/0
  1923 ;;		Unchanged: 0/0
  1924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1926 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1928 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1929 ;;Total ram usage:        4 bytes
  1930 ;; Hardware stack levels used: 1
  1931 ;; Hardware stack levels required when called: 17
  1932 ;; This function calls:
  1933 ;;		___flge
  1934 ;;		___flmul
  1935 ;;		___fltol
  1936 ;;		___xxtofl
  1937 ;;		_calcSteering
  1938 ;;		_printf
  1939 ;;		_setMotor
  1940 ;;		_setSteering
  1941 ;; This function is called by:
  1942 ;;		_loop
  1943 ;; This function uses a non-reentrant model
  1944 ;;
  1945                           
  1946                           	psect	text2
  1947  003EFA                     __ptext2:
  1948                           	callstack 0
  1949  003EFA                     _startAccell:
  1950                           	callstack 12
  1951  003EFA                     
  1952                           ;main.c: 99:     setSteering(0, Front);
  1953  003EFA  0E00               	movlw	0
  1954  003EFC  6E1D               	movwf	(setSteering@steering+1)^0,c
  1955  003EFE  0E00               	movlw	0
  1956  003F00  6E1C               	movwf	setSteering@steering^0,c
  1957  003F02  0E03               	movlw	3
  1958  003F04  6E1E               	movwf	setSteering@steeringMode^0,c
  1959  003F06  ECE7  F01D         	call	_setSteering	;wreg free
  1960  003F0A                     
  1961                           ;main.c: 100:     driveMode = Accel;
  1962  003F0A  0E00               	movlw	0
  1963  003F0C  0100               	movlb	0	; () banked
  1964  003F0E  6FFE               	movwf	_driveMode& (0+255),b
  1965  003F10                     
  1966                           ; BSR set to: 0
  1967                           ;main.c: 102:     actMotorPow = (40);
  1968  003F10  0E00               	movlw	0
  1969  003F12  6FE8               	movwf	(_actMotorPow+1)& (0+255),b
  1970  003F14  0E28               	movlw	40
  1971  003F16  6FE7               	movwf	_actMotorPow& (0+255),b
  1972                           
  1973                           ;main.c: 103:     float MPow = actMotorPow;
  1974  003F18  C0E7  F01C         	movff	_actMotorPow,___xxtofl@val
  1975  003F1C  C0E8  F01D         	movff	_actMotorPow+1,___xxtofl@val+1
  1976  003F20  0E00               	movlw	0
  1977  003F22  BE1D               	btfsc	(___xxtofl@val+1)^0,7,c
  1978  003F24  0EFF               	movlw	-1
  1979  003F26  6E1E               	movwf	(___xxtofl@val+2)^0,c
  1980  003F28  6E1F               	movwf	(___xxtofl@val+3)^0,c
  1981  003F2A  0E01               	movlw	1
  1982  003F2C  EC0D  F01D         	call	___xxtofl
  1983  003F30  C01C  F1A8         	movff	?___xxtofl,startAccell@MPow
  1984  003F34  C01D  F1A9         	movff	?___xxtofl+1,startAccell@MPow+1
  1985  003F38  C01E  F1AA         	movff	?___xxtofl+2,startAccell@MPow+2
  1986  003F3C  C01F  F1AB         	movff	?___xxtofl+3,startAccell@MPow+3
  1987  003F40                     
  1988                           ;main.c: 104:         printf("MPow: %f\n",MPow);
  1989  003F40  0E3C               	movlw	low STR_2
  1990  003F42  0101               	movlb	1	; () banked
  1991  003F44  6FA0               	movwf	printf@fmt& (0+255),b
  1992  003F46  0E10               	movlw	high STR_2
  1993  003F48  6FA1               	movwf	(printf@fmt+1)& (0+255),b
  1994  003F4A  C1A8  F1A2         	movff	startAccell@MPow,?_printf+2
  1995  003F4E  C1A9  F1A3         	movff	startAccell@MPow+1,?_printf+3
  1996  003F52  C1AA  F1A4         	movff	startAccell@MPow+2,?_printf+4
  1997  003F56  C1AB  F1A5         	movff	startAccell@MPow+3,?_printf+5
  1998  003F5A  ECFE  F02D         	call	_printf	;wreg free
  1999                           
  2000                           ;main.c: 105:     while (MPow < (250)) {
  2001  003F5E  EFF7  F01F         	goto	l8911
  2002  003F62                     l8897:
  2003                           
  2004                           ; BSR set to: 0
  2005                           ;main.c: 106:         MPow *= (1.1);
  2006  003F62  C1A8  F02A         	movff	startAccell@MPow,___flmul@b
  2007  003F66  C1A9  F02B         	movff	startAccell@MPow+1,___flmul@b+1
  2008  003F6A  C1AA  F02C         	movff	startAccell@MPow+2,___flmul@b+2
  2009  003F6E  C1AB  F02D         	movff	startAccell@MPow+3,___flmul@b+3
  2010  003F72  0ECD               	movlw	205
  2011  003F74  6E2E               	movwf	___flmul@a^0,c
  2012  003F76  0ECC               	movlw	204
  2013  003F78  6E2F               	movwf	(___flmul@a+1)^0,c
  2014  003F7A  0E8C               	movlw	140
  2015  003F7C  6E30               	movwf	(___flmul@a+2)^0,c
  2016  003F7E  0E3F               	movlw	63
  2017  003F80  6E31               	movwf	(___flmul@a+3)^0,c
  2018  003F82  EC76  F013         	call	___flmul	;wreg free
  2019  003F86  C02A  F1A8         	movff	?___flmul,startAccell@MPow
  2020  003F8A  C02B  F1A9         	movff	?___flmul+1,startAccell@MPow+1
  2021  003F8E  C02C  F1AA         	movff	?___flmul+2,startAccell@MPow+2
  2022  003F92  C02D  F1AB         	movff	?___flmul+3,startAccell@MPow+3
  2023  003F96                     
  2024                           ;main.c: 107:         actMotorPow = (int16_t) MPow;
  2025  003F96  C1A8  F079         	movff	startAccell@MPow,___fltol@f1
  2026  003F9A  C1A9  F07A         	movff	startAccell@MPow+1,___fltol@f1+1
  2027  003F9E  C1AA  F07B         	movff	startAccell@MPow+2,___fltol@f1+2
  2028  003FA2  C1AB  F07C         	movff	startAccell@MPow+3,___fltol@f1+3
  2029  003FA6  ECB5  F022         	call	___fltol	;wreg free
  2030  003FAA  C079  F0E7         	movff	?___fltol,_actMotorPow
  2031  003FAE  C07A  F0E8         	movff	?___fltol+1,_actMotorPow+1
  2032  003FB2                     
  2033                           ;main.c: 108:         setMotor(actMotorPow);
  2034  003FB2  C0E7  F018         	movff	_actMotorPow,setMotor@motorPower
  2035  003FB6  C0E8  F019         	movff	_actMotorPow+1,setMotor@motorPower+1
  2036  003FBA  EC38  F025         	call	_setMotor	;wreg free
  2037  003FBE                     
  2038                           ;main.c: 109:         printf("actMPow: %d\n",actMotorPow);
  2039  003FBE  0E23               	movlw	low STR_3
  2040  003FC0  0101               	movlb	1	; () banked
  2041  003FC2  6FA0               	movwf	printf@fmt& (0+255),b
  2042  003FC4  0E10               	movlw	high STR_3
  2043  003FC6  6FA1               	movwf	(printf@fmt+1)& (0+255),b
  2044  003FC8  C0E7  F1A2         	movff	_actMotorPow,?_printf+2
  2045  003FCC  C0E8  F1A3         	movff	_actMotorPow+1,?_printf+3
  2046  003FD0  ECFE  F02D         	call	_printf	;wreg free
  2047  003FD4                     
  2048                           ;main.c: 110:         calcSteering();
  2049  003FD4  EC23  F01C         	call	_calcSteering	;wreg free
  2050  003FD8                     
  2051                           ;main.c: 112:         cycle10ms = 0;
  2052  003FD8  0E00               	movlw	0
  2053  003FDA  0100               	movlb	0	; () banked
  2054  003FDC  6FFA               	movwf	_cycle10ms& (0+255),b	;volatile
  2055  003FDE                     l8909:
  2056                           
  2057                           ; BSR set to: 0
  2058  003FDE  51FA               	movf	_cycle10ms& (0+255),w,b	;volatile
  2059  003FE0  B4D8               	btfsc	status,2,c
  2060  003FE2  EFF5  F01F         	goto	u9881
  2061  003FE6  EFF7  F01F         	goto	u9880
  2062  003FEA                     u9881:
  2063  003FEA  EFEF  F01F         	goto	l8909
  2064  003FEE                     u9880:
  2065  003FEE                     l8911:
  2066                           
  2067                           ;main.c: 105:     while (MPow < (250)) {
  2068  003FEE  C1A8  F06D         	movff	startAccell@MPow,___flge@ff1
  2069  003FF2  C1A9  F06E         	movff	startAccell@MPow+1,___flge@ff1+1
  2070  003FF6  C1AA  F06F         	movff	startAccell@MPow+2,___flge@ff1+2
  2071  003FFA  C1AB  F070         	movff	startAccell@MPow+3,___flge@ff1+3
  2072  003FFE  0E00               	movlw	0
  2073  004000  0100               	movlb	0	; () banked
  2074  004002  6F71               	movwf	___flge@ff2& (0+255),b
  2075  004004  0E00               	movlw	0
  2076  004006  6F72               	movwf	(___flge@ff2+1)& (0+255),b
  2077  004008  0E7A               	movlw	122
  2078  00400A  6F73               	movwf	(___flge@ff2+2)& (0+255),b
  2079  00400C  0E43               	movlw	67
  2080  00400E  6F74               	movwf	(___flge@ff2+3)& (0+255),b
  2081  004010  ECBC  F023         	call	___flge	;wreg free
  2082  004014  0100               	movlb	0	; () banked
  2083  004016  A0D8               	btfss	status,0,c
  2084  004018  EF10  F020         	goto	u9891
  2085  00401C  EF12  F020         	goto	u9890
  2086  004020                     u9891:
  2087  004020  EFB1  F01F         	goto	l8897
  2088  004024                     u9890:
  2089  004024                     
  2090                           ; BSR set to: 0
  2091                           ;main.c: 116:     actMotorPow = (250);
  2092  004024  0E00               	movlw	0
  2093  004026  6FE8               	movwf	(_actMotorPow+1)& (0+255),b
  2094  004028  0EFA               	movlw	250
  2095  00402A  6FE7               	movwf	_actMotorPow& (0+255),b
  2096  00402C                     
  2097                           ; BSR set to: 0
  2098                           ;main.c: 117:     setMotor(actMotorPow);
  2099  00402C  C0E7  F018         	movff	_actMotorPow,setMotor@motorPower
  2100  004030  C0E8  F019         	movff	_actMotorPow+1,setMotor@motorPower+1
  2101  004034  EC38  F025         	call	_setMotor	;wreg free
  2102  004038                     
  2103                           ;main.c: 118:     printf("starAccelPower: %d\n", actMotorPow);
  2104  004038  0E01               	movlw	low STR_4
  2105  00403A  0101               	movlb	1	; () banked
  2106  00403C  6FA0               	movwf	printf@fmt& (0+255),b
  2107  00403E  0E10               	movlw	high STR_4
  2108  004040  6FA1               	movwf	(printf@fmt+1)& (0+255),b
  2109  004042  C0E7  F1A2         	movff	_actMotorPow,?_printf+2
  2110  004046  C0E8  F1A3         	movff	_actMotorPow+1,?_printf+3
  2111  00404A  ECFE  F02D         	call	_printf	;wreg free
  2112  00404E                     
  2113                           ;main.c: 120:     cycle10ms = 0;
  2114  00404E  0E00               	movlw	0
  2115  004050  0100               	movlb	0	; () banked
  2116  004052  6FFA               	movwf	_cycle10ms& (0+255),b	;volatile
  2117                           
  2118                           ;main.c: 121:     while (cycle10ms < ((50) - (20))){
  2119  004054  EF2E  F020         	goto	l8923
  2120  004058                     l8921:
  2121                           
  2122                           ; BSR set to: 0
  2123                           ;main.c: 122:         calcSteering();
  2124  004058  EC23  F01C         	call	_calcSteering	;wreg free
  2125  00405C                     l8923:
  2126                           
  2127                           ;main.c: 121:     while (cycle10ms < ((50) - (20))){
  2128  00405C  0E1D               	movlw	29
  2129  00405E  0100               	movlb	0	; () banked
  2130  004060  65FA               	cpfsgt	_cycle10ms& (0+255),b	;volatile
  2131  004062  EF35  F020         	goto	u9901
  2132  004066  EF37  F020         	goto	u9900
  2133  00406A                     u9901:
  2134  00406A  EF2C  F020         	goto	l8921
  2135  00406E                     u9900:
  2136  00406E                     
  2137                           ; BSR set to: 0
  2138                           ;main.c: 124:     driveMode = Straight;
  2139  00406E  0E01               	movlw	1
  2140  004070  6FFE               	movwf	_driveMode& (0+255),b
  2141  004072                     
  2142                           ; BSR set to: 0
  2143                           ;main.c: 125:     calcSteering();
  2144  004072  EC23  F01C         	call	_calcSteering	;wreg free
  2145  004076  0012               	return		;funcret
  2146  004078                     __end_of_startAccell:
  2147                           	callstack 0
  2148                           
  2149 ;; *************** function _calcSteering *****************
  2150 ;; Defined at:
  2151 ;;		line 226 in file "main.c"
  2152 ;; Parameters:    Size  Location     Type
  2153 ;;		None
  2154 ;; Auto vars:     Size  Location     Type
  2155 ;;  delta           2   40[COMRAM] short 
  2156 ;; Return value:  Size  Location     Type
  2157 ;;                  1    wreg      void 
  2158 ;; Registers used:
  2159 ;;		wreg, status,2, status,0, cstack
  2160 ;; Tracked objects:
  2161 ;;		On entry : 0/0
  2162 ;;		On exit  : 0/0
  2163 ;;		Unchanged: 0/0
  2164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2166 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2167 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2168 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2169 ;;Total ram usage:        6 bytes
  2170 ;; Hardware stack levels used: 1
  2171 ;; Hardware stack levels required when called: 10
  2172 ;; This function calls:
  2173 ;;		___awdiv
  2174 ;;		_setSteering
  2175 ;; This function is called by:
  2176 ;;		_loop
  2177 ;;		_startAccell
  2178 ;; This function uses a non-reentrant model
  2179 ;;
  2180                           
  2181                           	psect	text3
  2182  003846                     __ptext3:
  2183                           	callstack 0
  2184  003846                     _calcSteering:
  2185                           	callstack 18
  2186  003846                     
  2187                           ;main.c: 227:     int16_t delta = (int16_t) (distLeft - distRight) - (int16_t) (middleOf
      +                          fSet * 1.4142135);
  2188  003846  0100               	movlb	0	; () banked
  2189  003848  51F3               	movf	_distRight& (0+255),w,b	;volatile
  2190  00384A  5DF7               	subwf	_distLeft& (0+255),w,b	;volatile
  2191  00384C  6E25               	movwf	??_calcSteering^0,c
  2192  00384E  51F4               	movf	(_distRight+1)& (0+255),w,b	;volatile
  2193  003850  59F8               	subwfb	(_distLeft+1)& (0+255),w,b	;volatile
  2194  003852  6E26               	movwf	(??_calcSteering+1)^0,c
  2195  003854  0E15               	movlw	21
  2196  003856  2425               	addwf	??_calcSteering^0,w,c
  2197  003858  6E29               	movwf	calcSteering@delta^0,c
  2198  00385A  0E00               	movlw	0
  2199  00385C  2026               	addwfc	(??_calcSteering+1)^0,w,c
  2200  00385E  6E2A               	movwf	(calcSteering@delta+1)^0,c
  2201                           
  2202                           ;main.c: 231:     switch (driveMode) {
  2203  003860  EF5A  F01C         	goto	l8803
  2204  003864                     l1317:
  2205  003864                     l8793:
  2206                           
  2207                           ; BSR set to: 0
  2208                           ;main.c: 237:             if (delta > (25)) {
  2209  003864  BE2A               	btfsc	(calcSteering@delta+1)^0,7,c
  2210  003866  EF3E  F01C         	goto	u9741
  2211  00386A  502A               	movf	(calcSteering@delta+1)^0,w,c
  2212  00386C  E109               	bnz	u9740
  2213  00386E  0E1A               	movlw	26
  2214  003870  5C29               	subwf	calcSteering@delta^0,w,c
  2215  003872  A0D8               	btfss	status,0,c
  2216  003874  EF3E  F01C         	goto	u9741
  2217  003878  EF40  F01C         	goto	u9740
  2218  00387C                     u9741:
  2219  00387C  EF46  F01C         	goto	l8797
  2220  003880                     u9740:
  2221  003880                     
  2222                           ; BSR set to: 0
  2223                           ;main.c: 238:                 delta = (25);
  2224  003880  0E00               	movlw	0
  2225  003882  6E2A               	movwf	(calcSteering@delta+1)^0,c
  2226  003884  0E19               	movlw	25
  2227  003886  6E29               	movwf	calcSteering@delta^0,c
  2228                           
  2229                           ;main.c: 239:             } else if (delta < -(25)) {
  2230  003888  EFE3  F01C         	goto	l8829
  2231  00388C                     l8797:
  2232                           
  2233                           ; BSR set to: 0
  2234  00388C  AE2A               	btfss	(calcSteering@delta+1)^0,7,c
  2235  00388E  EF52  F01C         	goto	u9751
  2236  003892  0EE7               	movlw	231
  2237  003894  5C29               	subwf	calcSteering@delta^0,w,c
  2238  003896  0EFF               	movlw	255
  2239  003898  582A               	subwfb	(calcSteering@delta+1)^0,w,c
  2240  00389A  B0D8               	btfsc	status,0,c
  2241  00389C  EF52  F01C         	goto	u9751
  2242  0038A0  EF54  F01C         	goto	u9750
  2243  0038A4                     u9751:
  2244  0038A4  EF7B  F01C         	goto	l1322
  2245  0038A8                     u9750:
  2246  0038A8                     
  2247                           ; BSR set to: 0
  2248                           ;main.c: 240:                 delta = -(25);
  2249  0038A8  0EFF               	movlw	255
  2250  0038AA  6E2A               	movwf	(calcSteering@delta+1)^0,c
  2251  0038AC  0EE7               	movlw	231
  2252  0038AE  6E29               	movwf	calcSteering@delta^0,c
  2253  0038B0  EFE3  F01C         	goto	l8829
  2254  0038B4                     l8803:
  2255                           
  2256                           ; BSR set to: 0
  2257  0038B4  51FE               	movf	_driveMode& (0+255),w,b
  2258  0038B6  6E25               	movwf	??_calcSteering^0,c
  2259  0038B8  6A26               	clrf	(??_calcSteering+1)^0,c
  2260                           
  2261                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2262                           ; Switch size 1, requested type "simple"
  2263                           ; Number of cases is 1, Range of values is 0 to 0
  2264                           ; switch strategies available:
  2265                           ; Name         Instructions Cycles
  2266                           ; simple_byte            4     3 (average)
  2267                           ;	Chosen strategy is simple_byte
  2268  0038BA  5026               	movf	(??_calcSteering+1)^0,w,c
  2269  0038BC  0A00               	xorlw	0	; case 0
  2270  0038BE  B4D8               	btfsc	status,2,c
  2271  0038C0  EF64  F01C         	goto	l9277
  2272  0038C4  EFE3  F01C         	goto	l8829
  2273  0038C8                     l9277:
  2274                           
  2275                           ; BSR set to: 0
  2276                           ; Switch size 1, requested type "simple"
  2277                           ; Number of cases is 5, Range of values is 0 to 6
  2278                           ; switch strategies available:
  2279                           ; Name         Instructions Cycles
  2280                           ; simple_byte           16     9 (average)
  2281                           ;	Chosen strategy is simple_byte
  2282  0038C8  5025               	movf	??_calcSteering^0,w,c
  2283  0038CA  0A00               	xorlw	0	; case 0
  2284  0038CC  B4D8               	btfsc	status,2,c
  2285  0038CE  EF32  F01C         	goto	l1317
  2286  0038D2  0A01               	xorlw	1	; case 1
  2287  0038D4  B4D8               	btfsc	status,2,c
  2288  0038D6  EF32  F01C         	goto	l8793
  2289  0038DA  0A03               	xorlw	3	; case 2
  2290  0038DC  B4D8               	btfsc	status,2,c
  2291  0038DE  EF32  F01C         	goto	l8793
  2292  0038E2  0A07               	xorlw	7	; case 5
  2293  0038E4  B4D8               	btfsc	status,2,c
  2294  0038E6  EF32  F01C         	goto	l8793
  2295  0038EA  0A03               	xorlw	3	; case 6
  2296  0038EC  B4D8               	btfsc	status,2,c
  2297  0038EE  EF32  F01C         	goto	l8793
  2298  0038F2  EFE3  F01C         	goto	l8829
  2299  0038F6                     l1322:
  2300                           
  2301                           ; BSR set to: 0
  2302                           ;main.c: 247:     switch (driveMode) {
  2303  0038F6  EFE3  F01C         	goto	l8829
  2304  0038FA                     l8805:
  2305                           
  2306                           ; BSR set to: 0
  2307                           ;main.c: 249:             setSteering(delta, Ratio);
  2308  0038FA  C029  F01C         	movff	calcSteering@delta,setSteering@steering
  2309  0038FE  C02A  F01D         	movff	calcSteering@delta+1,setSteering@steering+1
  2310  003902  0E02               	movlw	2
  2311  003904  6E1E               	movwf	setSteering@steeringMode^0,c
  2312  003906  ECE7  F01D         	call	_setSteering	;wreg free
  2313                           
  2314                           ;main.c: 250:             break;
  2315  00390A  EF0C  F01D         	goto	l1337
  2316  00390E                     l8807:
  2317                           
  2318                           ; BSR set to: 0
  2319                           ;main.c: 252:             setSteering(delta, Front);
  2320  00390E  C029  F01C         	movff	calcSteering@delta,setSteering@steering
  2321  003912  C02A  F01D         	movff	calcSteering@delta+1,setSteering@steering+1
  2322  003916  0E03               	movlw	3
  2323  003918  6E1E               	movwf	setSteering@steeringMode^0,c
  2324  00391A  ECE7  F01D         	call	_setSteering	;wreg free
  2325                           
  2326                           ;main.c: 253:             break;
  2327  00391E  EF0C  F01D         	goto	l1337
  2328  003922                     l8809:
  2329                           
  2330                           ; BSR set to: 0
  2331                           ;main.c: 255:             setSteering(delta / (2), Front);
  2332  003922  C029  F014         	movff	calcSteering@delta,___awdiv@dividend
  2333  003926  C02A  F015         	movff	calcSteering@delta+1,___awdiv@dividend+1
  2334  00392A  0E00               	movlw	0
  2335  00392C  6E17               	movwf	(___awdiv@divisor+1)^0,c
  2336  00392E  0E02               	movlw	2
  2337  003930  6E16               	movwf	___awdiv@divisor^0,c
  2338  003932  EC0E  F026         	call	___awdiv	;wreg free
  2339  003936  C014  F027         	movff	?___awdiv,_calcSteering$4172
  2340  00393A  C015  F028         	movff	?___awdiv+1,_calcSteering$4172+1
  2341                           
  2342                           ;main.c: 255:             setSteering(delta / (2), Front);
  2343  00393E  C027  F01C         	movff	_calcSteering$4172,setSteering@steering
  2344  003942  C028  F01D         	movff	_calcSteering$4172+1,setSteering@steering+1
  2345  003946  0E03               	movlw	3
  2346  003948  6E1E               	movwf	setSteering@steeringMode^0,c
  2347  00394A  ECE7  F01D         	call	_setSteering	;wreg free
  2348                           
  2349                           ;main.c: 257:             break;
  2350  00394E  EF0C  F01D         	goto	l1337
  2351  003952                     l8811:
  2352                           
  2353                           ; BSR set to: 0
  2354                           ;main.c: 259:             setSteering(-(60), Inverted);
  2355  003952  0EFF               	movlw	255
  2356  003954  6E1D               	movwf	(setSteering@steering+1)^0,c
  2357  003956  0EC4               	movlw	196
  2358  003958  6E1C               	movwf	setSteering@steering^0,c
  2359  00395A  0E00               	movlw	0
  2360  00395C  6E1E               	movwf	setSteering@steeringMode^0,c
  2361  00395E  ECE7  F01D         	call	_setSteering	;wreg free
  2362                           
  2363                           ;main.c: 260:             break;
  2364  003962  EF0C  F01D         	goto	l1337
  2365  003966                     l8813:
  2366                           
  2367                           ; BSR set to: 0
  2368                           ;main.c: 262:             setSteering((60), Inverted);
  2369  003966  0E00               	movlw	0
  2370  003968  6E1D               	movwf	(setSteering@steering+1)^0,c
  2371  00396A  0E3C               	movlw	60
  2372  00396C  6E1C               	movwf	setSteering@steering^0,c
  2373  00396E  0E00               	movlw	0
  2374  003970  6E1E               	movwf	setSteering@steeringMode^0,c
  2375  003972  ECE7  F01D         	call	_setSteering	;wreg free
  2376                           
  2377                           ;main.c: 263:             break;
  2378  003976  EF0C  F01D         	goto	l1337
  2379  00397A                     l8815:
  2380                           
  2381                           ; BSR set to: 0
  2382                           ;main.c: 265:             if (curveMode == InCurve) {
  2383  00397A  0E02               	movlw	2
  2384  00397C  19FB               	xorwf	_curveMode& (0+255),w,b
  2385  00397E  A4D8               	btfss	status,2,c
  2386  003980  EFC4  F01C         	goto	u9761
  2387  003984  EFC6  F01C         	goto	u9760
  2388  003988                     u9761:
  2389  003988  EF7D  F01C         	goto	l8805
  2390  00398C                     u9760:
  2391  00398C                     
  2392                           ; BSR set to: 0
  2393                           ;main.c: 266:                 setSteering((60), Ratio);
  2394  00398C  0E00               	movlw	0
  2395  00398E  6E1D               	movwf	(setSteering@steering+1)^0,c
  2396  003990  0E3C               	movlw	60
  2397  003992  6E1C               	movwf	setSteering@steering^0,c
  2398  003994  0E02               	movlw	2
  2399  003996  6E1E               	movwf	setSteering@steeringMode^0,c
  2400  003998  ECE7  F01D         	call	_setSteering	;wreg free
  2401                           
  2402                           ;main.c: 267:             } else {
  2403  00399C  EF0C  F01D         	goto	l1337
  2404  0039A0                     l8821:
  2405                           
  2406                           ; BSR set to: 0
  2407                           ;main.c: 272:             if (curveMode == InCurve) {
  2408  0039A0  0E02               	movlw	2
  2409  0039A2  19FB               	xorwf	_curveMode& (0+255),w,b
  2410  0039A4  A4D8               	btfss	status,2,c
  2411  0039A6  EFD7  F01C         	goto	u9771
  2412  0039AA  EFD9  F01C         	goto	u9770
  2413  0039AE                     u9771:
  2414  0039AE  EF7D  F01C         	goto	l8805
  2415  0039B2                     u9770:
  2416  0039B2                     
  2417                           ; BSR set to: 0
  2418                           ;main.c: 273:                 setSteering(-(60), Ratio);
  2419  0039B2  0EFF               	movlw	255
  2420  0039B4  6E1D               	movwf	(setSteering@steering+1)^0,c
  2421  0039B6  0EC4               	movlw	196
  2422  0039B8  6E1C               	movwf	setSteering@steering^0,c
  2423  0039BA  0E02               	movlw	2
  2424  0039BC  6E1E               	movwf	setSteering@steeringMode^0,c
  2425  0039BE  ECE7  F01D         	call	_setSteering	;wreg free
  2426                           
  2427                           ;main.c: 274:             } else {
  2428  0039C2  EF0C  F01D         	goto	l1337
  2429  0039C6                     l8829:
  2430                           
  2431                           ; BSR set to: 0
  2432  0039C6  51FE               	movf	_driveMode& (0+255),w,b
  2433  0039C8  6E25               	movwf	??_calcSteering^0,c
  2434  0039CA  6A26               	clrf	(??_calcSteering+1)^0,c
  2435                           
  2436                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2437                           ; Switch size 1, requested type "simple"
  2438                           ; Number of cases is 1, Range of values is 0 to 0
  2439                           ; switch strategies available:
  2440                           ; Name         Instructions Cycles
  2441                           ; simple_byte            4     3 (average)
  2442                           ;	Chosen strategy is simple_byte
  2443  0039CC  5026               	movf	(??_calcSteering+1)^0,w,c
  2444  0039CE  0A00               	xorlw	0	; case 0
  2445  0039D0  B4D8               	btfsc	status,2,c
  2446  0039D2  EFED  F01C         	goto	l9279
  2447  0039D6  EF0C  F01D         	goto	l1337
  2448  0039DA                     l9279:
  2449                           
  2450                           ; BSR set to: 0
  2451                           ; Switch size 1, requested type "simple"
  2452                           ; Number of cases is 7, Range of values is 0 to 6
  2453                           ; switch strategies available:
  2454                           ; Name         Instructions Cycles
  2455                           ; simple_byte           22    12 (average)
  2456                           ;	Chosen strategy is simple_byte
  2457  0039DA  5025               	movf	??_calcSteering^0,w,c
  2458  0039DC  0A00               	xorlw	0	; case 0
  2459  0039DE  B4D8               	btfsc	status,2,c
  2460  0039E0  EF91  F01C         	goto	l8809
  2461  0039E4  0A01               	xorlw	1	; case 1
  2462  0039E6  B4D8               	btfsc	status,2,c
  2463  0039E8  EF87  F01C         	goto	l8807
  2464  0039EC  0A03               	xorlw	3	; case 2
  2465  0039EE  B4D8               	btfsc	status,2,c
  2466  0039F0  EF7D  F01C         	goto	l8805
  2467  0039F4  0A01               	xorlw	1	; case 3
  2468  0039F6  B4D8               	btfsc	status,2,c
  2469  0039F8  EFA9  F01C         	goto	l8811
  2470  0039FC  0A07               	xorlw	7	; case 4
  2471  0039FE  B4D8               	btfsc	status,2,c
  2472  003A00  EFB3  F01C         	goto	l8813
  2473  003A04  0A01               	xorlw	1	; case 5
  2474  003A06  B4D8               	btfsc	status,2,c
  2475  003A08  EFBD  F01C         	goto	l8815
  2476  003A0C  0A03               	xorlw	3	; case 6
  2477  003A0E  B4D8               	btfsc	status,2,c
  2478  003A10  EFD0  F01C         	goto	l8821
  2479  003A14  EF0C  F01D         	goto	l1337
  2480  003A18                     l1337:
  2481  003A18  0012               	return		;funcret
  2482  003A1A                     __end_of_calcSteering:
  2483                           	callstack 0
  2484                           
  2485 ;; *************** function _getReverse *****************
  2486 ;; Defined at:
  2487 ;;		line 192 in file "main.c"
  2488 ;; Parameters:    Size  Location     Type
  2489 ;;		None
  2490 ;; Auto vars:     Size  Location     Type
  2491 ;;		None
  2492 ;; Return value:  Size  Location     Type
  2493 ;;                  1    wreg      void 
  2494 ;; Registers used:
  2495 ;;		wreg, status,2, status,0
  2496 ;; Tracked objects:
  2497 ;;		On entry : 0/0
  2498 ;;		On exit  : 0/0
  2499 ;;		Unchanged: 0/0
  2500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2504 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2505 ;;Total ram usage:        0 bytes
  2506 ;; Hardware stack levels used: 1
  2507 ;; Hardware stack levels required when called: 8
  2508 ;; This function calls:
  2509 ;;		Nothing
  2510 ;; This function is called by:
  2511 ;;		_loop
  2512 ;; This function uses a non-reentrant model
  2513 ;;
  2514                           
  2515                           	psect	text4
  2516  004672                     __ptext4:
  2517                           	callstack 0
  2518  004672                     _getReverse:
  2519                           	callstack 21
  2520  004672                     
  2521                           ;main.c: 193:     if (distFront < (15)) {
  2522  004672  0100               	movlb	0	; () banked
  2523  004674  51FD               	movf	(_distFront+1)& (0+255),w,b	;volatile
  2524  004676  E107               	bnz	u6641
  2525  004678  0E0F               	movlw	15
  2526  00467A  5DFC               	subwf	_distFront& (0+255),w,b	;volatile
  2527  00467C  B0D8               	btfsc	status,0,c
  2528  00467E  EF43  F023         	goto	u6641
  2529  004682  EF45  F023         	goto	u6640
  2530  004686                     u6641:
  2531  004686  EF4A  F023         	goto	l6895
  2532  00468A                     u6640:
  2533  00468A                     
  2534                           ; BSR set to: 0
  2535                           ;main.c: 194:         ++reverseCount;
  2536  00468A  0101               	movlb	1	; () banked
  2537  00468C  4B32               	infsnz	_reverseCount& (0+255),f,b
  2538  00468E  2B33               	incf	(_reverseCount+1)& (0+255),f,b
  2539                           
  2540                           ;main.c: 195:     } else if(driveMode != ReverseRight && driveMode != ReverseLeft) {
  2541  004690  EF61  F023         	goto	l6901
  2542  004694                     l6895:
  2543                           
  2544                           ; BSR set to: 0
  2545  004694  0E03               	movlw	3
  2546  004696  19FE               	xorwf	_driveMode& (0+255),w,b
  2547  004698  B4D8               	btfsc	status,2,c
  2548  00469A  EF51  F023         	goto	u6651
  2549  00469E  EF53  F023         	goto	u6650
  2550  0046A2                     u6651:
  2551  0046A2  EF61  F023         	goto	l6901
  2552  0046A6                     u6650:
  2553  0046A6                     
  2554                           ; BSR set to: 0
  2555  0046A6  0E04               	movlw	4
  2556  0046A8  19FE               	xorwf	_driveMode& (0+255),w,b
  2557  0046AA  B4D8               	btfsc	status,2,c
  2558  0046AC  EF5A  F023         	goto	u6661
  2559  0046B0  EF5C  F023         	goto	u6660
  2560  0046B4                     u6661:
  2561  0046B4  EF61  F023         	goto	l6901
  2562  0046B8                     u6660:
  2563  0046B8                     
  2564                           ; BSR set to: 0
  2565                           ;main.c: 196:         reverseCount = 0;
  2566  0046B8  0E00               	movlw	0
  2567  0046BA  0101               	movlb	1	; () banked
  2568  0046BC  6F33               	movwf	(_reverseCount+1)& (0+255),b
  2569  0046BE  0E00               	movlw	0
  2570  0046C0  6F32               	movwf	_reverseCount& (0+255),b
  2571  0046C2                     l6901:
  2572                           
  2573                           ;main.c: 199:     if (reverseCount > (50)) {
  2574  0046C2  0101               	movlb	1	; () banked
  2575  0046C4  5133               	movf	(_reverseCount+1)& (0+255),w,b
  2576  0046C6  E109               	bnz	u6670
  2577  0046C8  0E33               	movlw	51
  2578  0046CA  5D32               	subwf	_reverseCount& (0+255),w,b
  2579  0046CC  A0D8               	btfss	status,0,c
  2580  0046CE  EF6B  F023         	goto	u6671
  2581  0046D2  EF6D  F023         	goto	u6670
  2582  0046D6                     u6671:
  2583  0046D6  EFBB  F023         	goto	l1310
  2584  0046DA                     u6670:
  2585  0046DA                     
  2586                           ; BSR set to: 1
  2587                           ;main.c: 200:         ++reverseTime;
  2588  0046DA  4B2A               	infsnz	_reverseTime& (0+255),f,b
  2589  0046DC  2B2B               	incf	(_reverseTime+1)& (0+255),f,b
  2590  0046DE                     
  2591                           ; BSR set to: 1
  2592                           ;main.c: 202:         if (driveMode != ReverseRight && driveMode != ReverseLeft) {
  2593  0046DE  0E03               	movlw	3
  2594  0046E0  0100               	movlb	0	; () banked
  2595  0046E2  19FE               	xorwf	_driveMode& (0+255),w,b
  2596  0046E4  B4D8               	btfsc	status,2,c
  2597  0046E6  EF77  F023         	goto	u6681
  2598  0046EA  EF79  F023         	goto	u6680
  2599  0046EE                     u6681:
  2600  0046EE  EF93  F023         	goto	l6915
  2601  0046F2                     u6680:
  2602  0046F2                     
  2603                           ; BSR set to: 0
  2604  0046F2  0E04               	movlw	4
  2605  0046F4  19FE               	xorwf	_driveMode& (0+255),w,b
  2606  0046F6  B4D8               	btfsc	status,2,c
  2607  0046F8  EF80  F023         	goto	u6691
  2608  0046FC  EF82  F023         	goto	u6690
  2609  004700                     u6691:
  2610  004700  EF93  F023         	goto	l6915
  2611  004704                     u6690:
  2612  004704                     
  2613                           ; BSR set to: 0
  2614                           ;main.c: 203:             if (distLeft > distRight) {
  2615  004704  51F7               	movf	_distLeft& (0+255),w,b	;volatile
  2616  004706  5DF3               	subwf	_distRight& (0+255),w,b	;volatile
  2617  004708  51F8               	movf	(_distLeft+1)& (0+255),w,b	;volatile
  2618  00470A  59F4               	subwfb	(_distRight+1)& (0+255),w,b	;volatile
  2619  00470C  B0D8               	btfsc	status,0,c
  2620  00470E  EF8B  F023         	goto	u6701
  2621  004712  EF8D  F023         	goto	u6700
  2622  004716                     u6701:
  2623  004716  EF91  F023         	goto	l6913
  2624  00471A                     u6700:
  2625  00471A                     
  2626                           ; BSR set to: 0
  2627                           ;main.c: 205:                 driveMode = ReverseRight;
  2628  00471A  0E03               	movlw	3
  2629  00471C  6FFE               	movwf	_driveMode& (0+255),b
  2630                           
  2631                           ;main.c: 206:             } else {
  2632  00471E  EF93  F023         	goto	l6915
  2633  004722                     l6913:
  2634                           
  2635                           ; BSR set to: 0
  2636                           ;main.c: 208:                 driveMode = ReverseLeft;
  2637  004722  0E04               	movlw	4
  2638  004724  6FFE               	movwf	_driveMode& (0+255),b
  2639  004726                     l6915:
  2640                           
  2641                           ; BSR set to: 0
  2642                           ;main.c: 212:         if (distFront > (35) || reverseTime > (300)) {
  2643  004726  51FD               	movf	(_distFront+1)& (0+255),w,b	;volatile
  2644  004728  E107               	bnz	u6711
  2645  00472A  0E24               	movlw	36
  2646  00472C  5DFC               	subwf	_distFront& (0+255),w,b	;volatile
  2647  00472E  B0D8               	btfsc	status,0,c
  2648  004730  EF9C  F023         	goto	u6711
  2649  004734  EF9E  F023         	goto	u6710
  2650  004738                     u6711:
  2651  004738  EFAF  F023         	goto	l6919
  2652  00473C                     u6710:
  2653  00473C                     
  2654                           ; BSR set to: 0
  2655  00473C  0101               	movlb	1	; () banked
  2656  00473E  BF2B               	btfsc	(_reverseTime+1)& (0+255),7,b
  2657  004740  EFAB  F023         	goto	u6721
  2658  004744  0E2D               	movlw	45
  2659  004746  5D2A               	subwf	_reverseTime& (0+255),w,b
  2660  004748  0E01               	movlw	1
  2661  00474A  592B               	subwfb	(_reverseTime+1)& (0+255),w,b
  2662  00474C  A0D8               	btfss	status,0,c
  2663  00474E  EFAB  F023         	goto	u6721
  2664  004752  EFAD  F023         	goto	u6720
  2665  004756                     u6721:
  2666  004756  EFBB  F023         	goto	l1310
  2667  00475A                     u6720:
  2668  00475A  EFAF  F023         	goto	l6921
  2669  00475E                     l6919:
  2670  00475E                     l6921:
  2671                           
  2672                           ;main.c: 215:                 driveMode = Straight;
  2673  00475E  0E01               	movlw	1
  2674  004760  0100               	movlb	0	; () banked
  2675  004762  6FFE               	movwf	_driveMode& (0+255),b
  2676  004764                     
  2677                           ; BSR set to: 0
  2678                           ;main.c: 220:             reverseCount = 0;
  2679  004764  0E00               	movlw	0
  2680  004766  0101               	movlb	1	; () banked
  2681  004768  6F33               	movwf	(_reverseCount+1)& (0+255),b
  2682  00476A  0E00               	movlw	0
  2683  00476C  6F32               	movwf	_reverseCount& (0+255),b
  2684                           
  2685                           ;main.c: 221:             reverseTime = 0;
  2686  00476E  0E00               	movlw	0
  2687  004770  6F2B               	movwf	(_reverseTime+1)& (0+255),b
  2688  004772  0E00               	movlw	0
  2689  004774  6F2A               	movwf	_reverseTime& (0+255),b
  2690  004776                     l1310:
  2691                           
  2692                           ; BSR set to: 1
  2693  004776  0012               	return		;funcret
  2694  004778                     __end_of_getReverse:
  2695                           	callstack 0
  2696                           
  2697 ;; *************** function _getCurve *****************
  2698 ;; Defined at:
  2699 ;;		line 128 in file "main.c"
  2700 ;; Parameters:    Size  Location     Type
  2701 ;;		None
  2702 ;; Auto vars:     Size  Location     Type
  2703 ;;  deltaLeft       2   18[BANK1 ] short 
  2704 ;;  deltaRight      2   16[BANK1 ] short 
  2705 ;; Return value:  Size  Location     Type
  2706 ;;                  1    wreg      void 
  2707 ;; Registers used:
  2708 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2709 ;; Tracked objects:
  2710 ;;		On entry : 0/0
  2711 ;;		On exit  : 0/0
  2712 ;;		Unchanged: 0/0
  2713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2715 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2716 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2717 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2718 ;;Total ram usage:        6 bytes
  2719 ;; Hardware stack levels used: 1
  2720 ;; Hardware stack levels required when called: 17
  2721 ;; This function calls:
  2722 ;;		_printf
  2723 ;; This function is called by:
  2724 ;;		_loop
  2725 ;; This function uses a non-reentrant model
  2726 ;;
  2727                           
  2728                           	psect	text5
  2729  0031BC                     __ptext5:
  2730                           	callstack 0
  2731  0031BC                     _getCurve:
  2732                           	callstack 12
  2733  0031BC                     
  2734                           ;main.c: 129:     int16_t deltaLeft = (int16_t) (distLeft - oldDistLeft);
  2735  0031BC  0100               	movlb	0	; () banked
  2736  0031BE  51EF               	movf	_oldDistLeft& (0+255),w,b
  2737  0031C0  5DF7               	subwf	_distLeft& (0+255),w,b	;volatile
  2738  0031C2  0101               	movlb	1	; () banked
  2739  0031C4  6FAC               	movwf	getCurve@deltaLeft& (0+255),b
  2740  0031C6  0100               	movlb	0	; () banked
  2741  0031C8  51F0               	movf	(_oldDistLeft+1)& (0+255),w,b
  2742  0031CA  59F8               	subwfb	(_distLeft+1)& (0+255),w,b	;volatile
  2743  0031CC  0101               	movlb	1	; () banked
  2744  0031CE  6FAD               	movwf	(getCurve@deltaLeft+1)& (0+255),b
  2745                           
  2746                           ;main.c: 130:     int16_t deltaRight = (int16_t) (distRight - oldDistRight);
  2747  0031D0  0100               	movlb	0	; () banked
  2748  0031D2  51ED               	movf	_oldDistRight& (0+255),w,b
  2749  0031D4  5DF3               	subwf	_distRight& (0+255),w,b	;volatile
  2750  0031D6  0101               	movlb	1	; () banked
  2751  0031D8  6FAA               	movwf	getCurve@deltaRight& (0+255),b
  2752  0031DA  0100               	movlb	0	; () banked
  2753  0031DC  51EE               	movf	(_oldDistRight+1)& (0+255),w,b
  2754  0031DE  59F4               	subwfb	(_distRight+1)& (0+255),w,b	;volatile
  2755  0031E0  0101               	movlb	1	; () banked
  2756  0031E2  6FAB               	movwf	(getCurve@deltaRight+1)& (0+255),b
  2757                           
  2758                           ;main.c: 132:     switch (curveMode) {
  2759  0031E4  EFE7  F019         	goto	l9011
  2760  0031E8                     l8953:
  2761                           
  2762                           ; BSR set to: 1
  2763                           ;main.c: 134:             if (deltaLeft > (30) && deltaLeft < (300) && oldDistLeft < (12
      +                          5)) {
  2764  0031E8  BFAD               	btfsc	(getCurve@deltaLeft+1)& (0+255),7,b
  2765  0031EA  EF00  F019         	goto	u9931
  2766  0031EE  51AD               	movf	(getCurve@deltaLeft+1)& (0+255),w,b
  2767  0031F0  E109               	bnz	u9930
  2768  0031F2  0E1F               	movlw	31
  2769  0031F4  5DAC               	subwf	getCurve@deltaLeft& (0+255),w,b
  2770  0031F6  A0D8               	btfss	status,0,c
  2771  0031F8  EF00  F019         	goto	u9931
  2772  0031FC  EF02  F019         	goto	u9930
  2773  003200                     u9931:
  2774  003200  EF24  F019         	goto	l8961
  2775  003204                     u9930:
  2776  003204                     
  2777                           ; BSR set to: 1
  2778  003204  BFAD               	btfsc	(getCurve@deltaLeft+1)& (0+255),7,b
  2779  003206  EF10  F019         	goto	u9940
  2780  00320A  0E2C               	movlw	44
  2781  00320C  5DAC               	subwf	getCurve@deltaLeft& (0+255),w,b
  2782  00320E  0E01               	movlw	1
  2783  003210  59AD               	subwfb	(getCurve@deltaLeft+1)& (0+255),w,b
  2784  003212  B0D8               	btfsc	status,0,c
  2785  003214  EF0E  F019         	goto	u9941
  2786  003218  EF10  F019         	goto	u9940
  2787  00321C                     u9941:
  2788  00321C  EF24  F019         	goto	l8961
  2789  003220                     u9940:
  2790  003220                     
  2791                           ; BSR set to: 1
  2792  003220  0100               	movlb	0	; () banked
  2793  003222  51F0               	movf	(_oldDistLeft+1)& (0+255),w,b
  2794  003224  E107               	bnz	u9951
  2795  003226  0E7D               	movlw	125
  2796  003228  5DEF               	subwf	_oldDistLeft& (0+255),w,b
  2797  00322A  B0D8               	btfsc	status,0,c
  2798  00322C  EF1A  F019         	goto	u9951
  2799  003230  EF1C  F019         	goto	u9950
  2800  003234                     u9951:
  2801  003234  EF24  F019         	goto	l8961
  2802  003238                     u9950:
  2803  003238                     
  2804                           ; BSR set to: 0
  2805                           ;main.c: 135:                 delay = 0;
  2806  003238  0E00               	movlw	0
  2807  00323A  6FF9               	movwf	_delay& (0+255),b
  2808                           
  2809                           ;main.c: 136:                 curveMode = BeforeCurve;
  2810  00323C  0E01               	movlw	1
  2811  00323E  6FFB               	movwf	_curveMode& (0+255),b
  2812                           
  2813                           ;main.c: 137:                 driveMode = CurveLeft;
  2814  003240  0E05               	movlw	5
  2815  003242  6FFE               	movwf	_driveMode& (0+255),b
  2816                           
  2817                           ;main.c: 140:             } else if (deltaRight > (30) && deltaRight < (300) && oldDistR
      +                          ight < (125)) {
  2818  003244  EF06  F01A         	goto	l1277
  2819  003248                     l8961:
  2820  003248  0101               	movlb	1	; () banked
  2821  00324A  BFAB               	btfsc	(getCurve@deltaRight+1)& (0+255),7,b
  2822  00324C  EF31  F019         	goto	u9961
  2823  003250  51AB               	movf	(getCurve@deltaRight+1)& (0+255),w,b
  2824  003252  E109               	bnz	u9960
  2825  003254  0E1F               	movlw	31
  2826  003256  5DAA               	subwf	getCurve@deltaRight& (0+255),w,b
  2827  003258  A0D8               	btfss	status,0,c
  2828  00325A  EF31  F019         	goto	u9961
  2829  00325E  EF33  F019         	goto	u9960
  2830  003262                     u9961:
  2831  003262  EF06  F01A         	goto	l1277
  2832  003266                     u9960:
  2833  003266                     
  2834                           ; BSR set to: 1
  2835  003266  BFAB               	btfsc	(getCurve@deltaRight+1)& (0+255),7,b
  2836  003268  EF41  F019         	goto	u9970
  2837  00326C  0E2C               	movlw	44
  2838  00326E  5DAA               	subwf	getCurve@deltaRight& (0+255),w,b
  2839  003270  0E01               	movlw	1
  2840  003272  59AB               	subwfb	(getCurve@deltaRight+1)& (0+255),w,b
  2841  003274  B0D8               	btfsc	status,0,c
  2842  003276  EF3F  F019         	goto	u9971
  2843  00327A  EF41  F019         	goto	u9970
  2844  00327E                     u9971:
  2845  00327E  EF06  F01A         	goto	l1277
  2846  003282                     u9970:
  2847  003282                     
  2848                           ; BSR set to: 1
  2849  003282  0100               	movlb	0	; () banked
  2850  003284  51EE               	movf	(_oldDistRight+1)& (0+255),w,b
  2851  003286  E107               	bnz	u9981
  2852  003288  0E7D               	movlw	125
  2853  00328A  5DED               	subwf	_oldDistRight& (0+255),w,b
  2854  00328C  B0D8               	btfsc	status,0,c
  2855  00328E  EF4B  F019         	goto	u9981
  2856  003292  EF4D  F019         	goto	u9980
  2857  003296                     u9981:
  2858  003296  EF06  F01A         	goto	l1277
  2859  00329A                     u9980:
  2860  00329A                     
  2861                           ; BSR set to: 0
  2862                           ;main.c: 141:                 delay = 0;
  2863  00329A  0E00               	movlw	0
  2864  00329C  6FF9               	movwf	_delay& (0+255),b
  2865                           
  2866                           ;main.c: 142:                 curveMode = BeforeCurve;
  2867  00329E  0E01               	movlw	1
  2868  0032A0  6FFB               	movwf	_curveMode& (0+255),b
  2869                           
  2870                           ;main.c: 143:                 driveMode = CurveRight;
  2871  0032A2  0E06               	movlw	6
  2872  0032A4  6FFE               	movwf	_driveMode& (0+255),b
  2873  0032A6  EF06  F01A         	goto	l1277
  2874  0032AA                     l8969:
  2875                           
  2876                           ; BSR set to: 1
  2877                           ;main.c: 150:             if (delay >= (20)) {
  2878  0032AA  0E13               	movlw	19
  2879  0032AC  0100               	movlb	0	; () banked
  2880  0032AE  65F9               	cpfsgt	_delay& (0+255),b
  2881  0032B0  EF5C  F019         	goto	u9991
  2882  0032B4  EF5E  F019         	goto	u9990
  2883  0032B8                     u9991:
  2884  0032B8  EF64  F019         	goto	l8973
  2885  0032BC                     u9990:
  2886  0032BC                     
  2887                           ; BSR set to: 0
  2888                           ;main.c: 151:                 delay = 0;
  2889  0032BC  0E00               	movlw	0
  2890  0032BE  6FF9               	movwf	_delay& (0+255),b
  2891                           
  2892                           ;main.c: 152:                 curveMode = InCurve;
  2893  0032C0  0E02               	movlw	2
  2894  0032C2  6FFB               	movwf	_curveMode& (0+255),b
  2895                           
  2896                           ;main.c: 154:             } else {
  2897  0032C4  EF06  F01A         	goto	l1277
  2898  0032C8                     l8973:
  2899                           
  2900                           ;main.c: 155:                 ++delay;
  2901  0032C8  0100               	movlb	0	; () banked
  2902  0032CA  2BF9               	incf	_delay& (0+255),f,b
  2903  0032CC  EF06  F01A         	goto	l1277
  2904  0032D0                     l8975:
  2905                           
  2906                           ; BSR set to: 1
  2907                           ;main.c: 159:             if (delay >= (25)) {
  2908  0032D0  0E18               	movlw	24
  2909  0032D2  0100               	movlb	0	; () banked
  2910  0032D4  65F9               	cpfsgt	_delay& (0+255),b
  2911  0032D6  EF6F  F019         	goto	u10001
  2912  0032DA  EF71  F019         	goto	u10000
  2913  0032DE                     u10001:
  2914  0032DE  EF64  F019         	goto	l8973
  2915  0032E2                     u10000:
  2916  0032E2                     
  2917                           ; BSR set to: 0
  2918                           ;main.c: 160:                 if ((driveMode == CurveLeft && distLeft < (45)) || (driveM
      +                          ode == CurveRight && distRight < (45)) || distFront > (150)) {
  2919  0032E2  0E05               	movlw	5
  2920  0032E4  19FE               	xorwf	_driveMode& (0+255),w,b
  2921  0032E6  A4D8               	btfss	status,2,c
  2922  0032E8  EF78  F019         	goto	u10011
  2923  0032EC  EF7A  F019         	goto	u10010
  2924  0032F0                     u10011:
  2925  0032F0  EF85  F019         	goto	l8981
  2926  0032F4                     u10010:
  2927  0032F4                     
  2928                           ; BSR set to: 0
  2929  0032F4  51F8               	movf	(_distLeft+1)& (0+255),w,b	;volatile
  2930  0032F6  E109               	bnz	u10020
  2931  0032F8  0E2D               	movlw	45
  2932  0032FA  5DF7               	subwf	_distLeft& (0+255),w,b	;volatile
  2933  0032FC  A0D8               	btfss	status,0,c
  2934  0032FE  EF83  F019         	goto	u10021
  2935  003302  EF85  F019         	goto	u10020
  2936  003306                     u10021:
  2937  003306  EFA4  F019         	goto	l8987
  2938  00330A                     u10020:
  2939  00330A                     l8981:
  2940                           
  2941                           ; BSR set to: 0
  2942  00330A  0E06               	movlw	6
  2943  00330C  19FE               	xorwf	_driveMode& (0+255),w,b
  2944  00330E  A4D8               	btfss	status,2,c
  2945  003310  EF8C  F019         	goto	u10031
  2946  003314  EF8E  F019         	goto	u10030
  2947  003318                     u10031:
  2948  003318  EF99  F019         	goto	l8985
  2949  00331C                     u10030:
  2950  00331C                     
  2951                           ; BSR set to: 0
  2952  00331C  51F4               	movf	(_distRight+1)& (0+255),w,b	;volatile
  2953  00331E  E109               	bnz	u10040
  2954  003320  0E2D               	movlw	45
  2955  003322  5DF3               	subwf	_distRight& (0+255),w,b	;volatile
  2956  003324  A0D8               	btfss	status,0,c
  2957  003326  EF97  F019         	goto	u10041
  2958  00332A  EF99  F019         	goto	u10040
  2959  00332E                     u10041:
  2960  00332E  EFA4  F019         	goto	l8987
  2961  003332                     u10040:
  2962  003332                     l8985:
  2963                           
  2964                           ; BSR set to: 0
  2965  003332  51FD               	movf	(_distFront+1)& (0+255),w,b	;volatile
  2966  003334  E109               	bnz	u10050
  2967  003336  0E97               	movlw	151
  2968  003338  5DFC               	subwf	_distFront& (0+255),w,b	;volatile
  2969  00333A  A0D8               	btfss	status,0,c
  2970  00333C  EFA2  F019         	goto	u10051
  2971  003340  EFA4  F019         	goto	u10050
  2972  003344                     u10051:
  2973  003344  EFB7  F019         	goto	l8995
  2974  003348                     u10050:
  2975  003348                     l8987:
  2976                           
  2977                           ; BSR set to: 0
  2978                           ;main.c: 161:                     printf("Time: %d     ", delay);
  2979  003348  0E15               	movlw	low STR_5
  2980  00334A  0101               	movlb	1	; () banked
  2981  00334C  6FA0               	movwf	printf@fmt& (0+255),b
  2982  00334E  0E10               	movlw	high STR_5
  2983  003350  6FA1               	movwf	(printf@fmt+1)& (0+255),b
  2984  003352  C0F9  F1A2         	movff	_delay,?_printf+2
  2985  003356  6BA3               	clrf	(?_printf+3)& (0+255),b
  2986  003358  ECFE  F02D         	call	_printf	;wreg free
  2987  00335C                     
  2988                           ;main.c: 163:                     delay = 0;
  2989  00335C  0E00               	movlw	0
  2990  00335E  0100               	movlb	0	; () banked
  2991  003360  6FF9               	movwf	_delay& (0+255),b
  2992  003362                     
  2993                           ; BSR set to: 0
  2994                           ;main.c: 164:                     curveMode = AfterCurve;
  2995  003362  0E03               	movlw	3
  2996  003364  6FFB               	movwf	_curveMode& (0+255),b
  2997  003366                     
  2998                           ; BSR set to: 0
  2999                           ;main.c: 165:                     driveMode = Straight;
  3000  003366  0E01               	movlw	1
  3001  003368  6FFE               	movwf	_driveMode& (0+255),b
  3002                           
  3003                           ;main.c: 168:                 } else if(driveMode == CurveRight && deltaLeft > (30)){
  3004  00336A  EF64  F019         	goto	l8973
  3005  00336E                     l8995:
  3006                           
  3007                           ; BSR set to: 0
  3008  00336E  0E06               	movlw	6
  3009  003370  19FE               	xorwf	_driveMode& (0+255),w,b
  3010  003372  A4D8               	btfss	status,2,c
  3011  003374  EFBE  F019         	goto	u10061
  3012  003378  EFC0  F019         	goto	u10060
  3013  00337C                     u10061:
  3014  00337C  EF64  F019         	goto	l8973
  3015  003380                     u10060:
  3016  003380                     
  3017                           ; BSR set to: 0
  3018  003380  0101               	movlb	1	; () banked
  3019  003382  BFAD               	btfsc	(getCurve@deltaLeft+1)& (0+255),7,b
  3020  003384  EFCD  F019         	goto	u10071
  3021  003388  51AD               	movf	(getCurve@deltaLeft+1)& (0+255),w,b
  3022  00338A  E109               	bnz	u10070
  3023  00338C  0E1F               	movlw	31
  3024  00338E  5DAC               	subwf	getCurve@deltaLeft& (0+255),w,b
  3025  003390  A0D8               	btfss	status,0,c
  3026  003392  EFCD  F019         	goto	u10071
  3027  003396  EFCF  F019         	goto	u10070
  3028  00339A                     u10071:
  3029  00339A  EF64  F019         	goto	l8973
  3030  00339E                     u10070:
  3031  00339E                     
  3032                           ; BSR set to: 1
  3033                           ;main.c: 170:                     delay = 0;
  3034  00339E  0E00               	movlw	0
  3035  0033A0  0100               	movlb	0	; () banked
  3036  0033A2  6FF9               	movwf	_delay& (0+255),b
  3037                           
  3038                           ;main.c: 171:                     curveMode = BeforeCurve;
  3039  0033A4  0E01               	movlw	1
  3040  0033A6  6FFB               	movwf	_curveMode& (0+255),b
  3041                           
  3042                           ;main.c: 172:                     driveMode = CurveLeft;
  3043  0033A8  0E05               	movlw	5
  3044  0033AA  6FFE               	movwf	_driveMode& (0+255),b
  3045  0033AC  EF64  F019         	goto	l8973
  3046  0033B0                     l9003:
  3047                           
  3048                           ; BSR set to: 1
  3049                           ;main.c: 179:             if (delay >= (1)) {
  3050  0033B0  0100               	movlb	0	; () banked
  3051  0033B2  51F9               	movf	_delay& (0+255),w,b
  3052  0033B4  B4D8               	btfsc	status,2,c
  3053  0033B6  EFDF  F019         	goto	u10081
  3054  0033BA  EFE1  F019         	goto	u10080
  3055  0033BE                     u10081:
  3056  0033BE  EF64  F019         	goto	l8973
  3057  0033C2                     u10080:
  3058  0033C2                     
  3059                           ; BSR set to: 0
  3060                           ;main.c: 180:                 delay = 0;
  3061  0033C2  0E00               	movlw	0
  3062  0033C4  6FF9               	movwf	_delay& (0+255),b
  3063                           
  3064                           ;main.c: 181:                 curveMode = OutCurve;
  3065  0033C6  0E00               	movlw	0
  3066  0033C8  6FFB               	movwf	_curveMode& (0+255),b
  3067                           
  3068                           ;main.c: 183:             } else {
  3069  0033CA  EF06  F01A         	goto	l1277
  3070  0033CE                     l9011:
  3071                           
  3072                           ; BSR set to: 1
  3073  0033CE  0100               	movlb	0	; () banked
  3074  0033D0  51FB               	movf	_curveMode& (0+255),w,b
  3075  0033D2  0101               	movlb	1	; () banked
  3076  0033D4  6FA8               	movwf	??_getCurve& (0+255),b
  3077  0033D6  6BA9               	clrf	(??_getCurve+1)& (0+255),b
  3078                           
  3079                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3080                           ; Switch size 1, requested type "simple"
  3081                           ; Number of cases is 1, Range of values is 0 to 0
  3082                           ; switch strategies available:
  3083                           ; Name         Instructions Cycles
  3084                           ; simple_byte            4     3 (average)
  3085                           ;	Chosen strategy is simple_byte
  3086  0033D8  51A9               	movf	(??_getCurve+1)& (0+255),w,b
  3087  0033DA  0A00               	xorlw	0	; case 0
  3088  0033DC  B4D8               	btfsc	status,2,c
  3089  0033DE  EFF3  F019         	goto	l9281
  3090  0033E2  EF06  F01A         	goto	l1277
  3091  0033E6                     l9281:
  3092                           
  3093                           ; BSR set to: 1
  3094                           ; Switch size 1, requested type "simple"
  3095                           ; Number of cases is 4, Range of values is 0 to 3
  3096                           ; switch strategies available:
  3097                           ; Name         Instructions Cycles
  3098                           ; simple_byte           13     7 (average)
  3099                           ;	Chosen strategy is simple_byte
  3100  0033E6  51A8               	movf	??_getCurve& (0+255),w,b
  3101  0033E8  0A00               	xorlw	0	; case 0
  3102  0033EA  B4D8               	btfsc	status,2,c
  3103  0033EC  EFF4  F018         	goto	l8953
  3104  0033F0  0A01               	xorlw	1	; case 1
  3105  0033F2  B4D8               	btfsc	status,2,c
  3106  0033F4  EF55  F019         	goto	l8969
  3107  0033F8  0A03               	xorlw	3	; case 2
  3108  0033FA  B4D8               	btfsc	status,2,c
  3109  0033FC  EF68  F019         	goto	l8975
  3110  003400  0A01               	xorlw	1	; case 3
  3111  003402  B4D8               	btfsc	status,2,c
  3112  003404  EFD8  F019         	goto	l9003
  3113  003408  EF06  F01A         	goto	l1277
  3114  00340C                     l1277:
  3115                           
  3116                           ;main.c: 188:     oldDistLeft = distLeft;
  3117  00340C  C0F7  F0EF         	movff	_distLeft,_oldDistLeft	;volatile
  3118  003410  C0F8  F0F0         	movff	_distLeft+1,_oldDistLeft+1	;volatile
  3119                           
  3120                           ;main.c: 189:     oldDistRight = distRight;
  3121  003414  C0F3  F0ED         	movff	_distRight,_oldDistRight	;volatile
  3122  003418  C0F4  F0EE         	movff	_distRight+1,_oldDistRight+1	;volatile
  3123  00341C  0012               	return		;funcret
  3124  00341E                     __end_of_getCurve:
  3125                           	callstack 0
  3126                           
  3127 ;; *************** function _printf *****************
  3128 ;; Defined at:
  3129 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\printf.c"
  3130 ;; Parameters:    Size  Location     Type
  3131 ;;  fmt             2    6[BANK1 ] PTR const unsigned char 
  3132 ;;		 -> STR_5(14), STR_4(20), STR_3(13), STR_2(10), 
  3133 ;;		 -> STR_1(12), 
  3134 ;; Auto vars:     Size  Location     Type
  3135 ;;  ap              2   12[BANK1 ] PTR void [1]
  3136 ;;		 -> ?_printf(2), 
  3137 ;;  ret             2    0        int 
  3138 ;; Return value:  Size  Location     Type
  3139 ;;                  2    6[BANK1 ] int 
  3140 ;; Registers used:
  3141 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3142 ;; Tracked objects:
  3143 ;;		On entry : 0/0
  3144 ;;		On exit  : 0/0
  3145 ;;		Unchanged: 0/0
  3146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3147 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3148 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3150 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3151 ;;Total ram usage:        8 bytes
  3152 ;; Hardware stack levels used: 1
  3153 ;; Hardware stack levels required when called: 16
  3154 ;; This function calls:
  3155 ;;		_vfprintf
  3156 ;; This function is called by:
  3157 ;;		_loop
  3158 ;;		_startAccell
  3159 ;;		_getCurve
  3160 ;; This function uses a non-reentrant model
  3161 ;;
  3162                           
  3163                           	psect	text6
  3164  005BFC                     __ptext6:
  3165                           	callstack 0
  3166  005BFC                     _printf:
  3167                           	callstack 12
  3168  005BFC  0EA2               	movlw	low (?_printf+2)
  3169  005BFE  0101               	movlb	1	; () banked
  3170  005C00  6FA6               	movwf	printf@ap& (0+255),b
  3171  005C02  0E01               	movlw	high (?_printf+2)
  3172  005C04  6FA7               	movwf	(printf@ap+1)& (0+255),b
  3173  005C06                     
  3174                           ; BSR set to: 1
  3175  005C06  0E00               	movlw	0
  3176  005C08  6F9A               	movwf	vfprintf@fp& (0+255),b
  3177  005C0A  0E00               	movlw	0
  3178  005C0C  6F9B               	movwf	(vfprintf@fp+1)& (0+255),b
  3179  005C0E  C1A0  F19C         	movff	printf@fmt,vfprintf@fmt
  3180  005C12  C1A1  F19D         	movff	printf@fmt+1,vfprintf@fmt+1
  3181  005C16  0EA6               	movlw	low printf@ap
  3182  005C18  6F9E               	movwf	vfprintf@ap& (0+255),b
  3183  005C1A  0E01               	movlw	high printf@ap
  3184  005C1C  6F9F               	movwf	(vfprintf@ap+1)& (0+255),b
  3185  005C1E  EC0E  F029         	call	_vfprintf	;wreg free
  3186  005C22  0012               	return		;funcret
  3187  005C24                     __end_of_printf:
  3188                           	callstack 0
  3189                           
  3190 ;; *************** function _vfprintf *****************
  3191 ;; Defined at:
  3192 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3193 ;; Parameters:    Size  Location     Type
  3194 ;;  fp              2    0[BANK1 ] PTR struct _IO_FILE
  3195 ;;		 -> NULL(0), 
  3196 ;;  fmt             2    2[BANK1 ] PTR const unsigned char 
  3197 ;;		 -> STR_5(14), STR_4(20), STR_3(13), STR_2(10), 
  3198 ;;		 -> STR_1(12), 
  3199 ;;  ap              2    4[BANK1 ] PTR PTR void 
  3200 ;;		 -> printf@ap(2), 
  3201 ;; Auto vars:     Size  Location     Type
  3202 ;;  cfmt            2  131[BANK0 ] PTR unsigned char 
  3203 ;;		 -> STR_5(14), STR_4(20), STR_3(13), STR_2(10), 
  3204 ;;		 -> STR_1(12), 
  3205 ;; Return value:  Size  Location     Type
  3206 ;;                  2    0[BANK1 ] int 
  3207 ;; Registers used:
  3208 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3209 ;; Tracked objects:
  3210 ;;		On entry : 0/0
  3211 ;;		On exit  : 0/0
  3212 ;;		Unchanged: 0/0
  3213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3214 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3215 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3217 ;;      Totals:         0       2       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3218 ;;Total ram usage:        8 bytes
  3219 ;; Hardware stack levels used: 1
  3220 ;; Hardware stack levels required when called: 15
  3221 ;; This function calls:
  3222 ;;		_vfpfcnvrt
  3223 ;; This function is called by:
  3224 ;;		_printf
  3225 ;; This function uses a non-reentrant model
  3226 ;;
  3227                           
  3228                           	psect	text7
  3229  00521C                     __ptext7:
  3230                           	callstack 0
  3231  00521C                     _vfprintf:
  3232                           	callstack 12
  3233  00521C                     
  3234                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  3235  00521C  C19C  F0E3         	movff	vfprintf@fmt,vfprintf@cfmt
  3236  005220  C19D  F0E4         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3237  005224                     
  3238                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  3239  005224  0E00               	movlw	0
  3240  005226  0101               	movlb	1	; () banked
  3241  005228  6F29               	movwf	(_nout+1)& (0+255),b
  3242  00522A  0E00               	movlw	0
  3243  00522C  6F28               	movwf	_nout& (0+255),b
  3244                           
  3245                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3246  00522E  EF30  F029         	goto	l8761
  3247  005232                     l8759:
  3248                           
  3249                           ; BSR set to: 1
  3250                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  3251  005232  C19A  F0C7         	movff	vfprintf@fp,vfpfcnvrt@fp
  3252  005236  C19B  F0C8         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3253  00523A  0EE3               	movlw	low vfprintf@cfmt
  3254  00523C  0100               	movlb	0	; () banked
  3255  00523E  6FC9               	movwf	vfpfcnvrt@fmt& (0+255),b
  3256  005240  0E00               	movlw	high vfprintf@cfmt
  3257  005242  6FCA               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  3258  005244  C19E  F0CB         	movff	vfprintf@ap,vfpfcnvrt@ap
  3259  005248  C19F  F0CC         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3260  00524C  EC84  F00E         	call	_vfpfcnvrt	;wreg free
  3261  005250  0100               	movlb	0	; () banked
  3262  005252  51C7               	movf	?_vfpfcnvrt& (0+255),w,b
  3263  005254  0101               	movlb	1	; () banked
  3264  005256  2728               	addwf	_nout& (0+255),f,b
  3265  005258  0100               	movlb	0	; () banked
  3266  00525A  51C8               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  3267  00525C  0101               	movlb	1	; () banked
  3268  00525E  2329               	addwfc	(_nout+1)& (0+255),f,b
  3269  005260                     l8761:
  3270                           
  3271                           ; BSR set to: 1
  3272                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3273  005260  0060  F38F  FFF6   	movff	vfprintf@cfmt,tblptrl
  3274  005266  0060  F393  FFF7   	movff	vfprintf@cfmt+1,tblptrh
  3275  00526C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3276  00526C  6AF8               	clrf	tblptru,c
  3277  00526E                     	endif
  3278  00526E                     	if	0	;tblptru may be non-zero
  3279  00526E                     	endif
  3280  00526E  0008               	tblrd		*
  3281  005270  50F5               	movf	tablat,w,c
  3282  005272  0900               	iorlw	0
  3283  005274  A4D8               	btfss	status,2,c
  3284  005276  EF3F  F029         	goto	u9691
  3285  00527A  EF41  F029         	goto	u9690
  3286  00527E                     u9691:
  3287  00527E  EF19  F029         	goto	l8759
  3288  005282                     u9690:
  3289  005282                     
  3290                           ; BSR set to: 1
  3291                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  3292  005282  C128  F19A         	movff	_nout,?_vfprintf
  3293  005286  C129  F19B         	movff	_nout+1,?_vfprintf+1
  3294  00528A                     
  3295                           ; BSR set to: 1
  3296  00528A  0012               	return		;funcret
  3297  00528C                     __end_of_vfprintf:
  3298                           	callstack 0
  3299                           
  3300 ;; *************** function _vfpfcnvrt *****************
  3301 ;; Defined at:
  3302 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3303 ;; Parameters:    Size  Location     Type
  3304 ;;  fp              2  103[BANK0 ] PTR struct _IO_FILE
  3305 ;;		 -> NULL(0), 
  3306 ;;  fmt             2  105[BANK0 ] PTR PTR unsigned char 
  3307 ;;		 -> vfprintf@cfmt(2), 
  3308 ;;  ap              2  107[BANK0 ] PTR PTR void 
  3309 ;;		 -> printf@ap(2), 
  3310 ;; Auto vars:     Size  Location     Type
  3311 ;;  ll              8  113[BANK0 ] long long 
  3312 ;;  llu             8    0        unsigned long long 
  3313 ;;  f               4  123[BANK0 ] unsigned long long 
  3314 ;;  ct              3  127[BANK0 ] unsigned char [3]
  3315 ;;  vp              3    0        PTR void 
  3316 ;;  cp              3    0        PTR unsigned char 
  3317 ;;  i               2    0        int 
  3318 ;;  done            2    0        int 
  3319 ;;  c               1  130[BANK0 ] unsigned char 
  3320 ;; Return value:  Size  Location     Type
  3321 ;;                  2  103[BANK0 ] int 
  3322 ;; Registers used:
  3323 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3324 ;; Tracked objects:
  3325 ;;		On entry : 0/0
  3326 ;;		On exit  : 0/0
  3327 ;;		Unchanged: 0/0
  3328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3329 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3330 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3331 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3332 ;;      Totals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3333 ;;Total ram usage:       28 bytes
  3334 ;; Hardware stack levels used: 1
  3335 ;; Hardware stack levels required when called: 14
  3336 ;; This function calls:
  3337 ;;		_dtoa
  3338 ;;		_efgtoa
  3339 ;;		_fputc
  3340 ;;		_isupper
  3341 ;;		_strncmp
  3342 ;;		_tolower
  3343 ;; This function is called by:
  3344 ;;		_vfprintf
  3345 ;; This function uses a non-reentrant model
  3346 ;;
  3347                           
  3348                           	psect	text8
  3349  001D08                     __ptext8:
  3350                           	callstack 0
  3351  001D08                     _vfpfcnvrt:
  3352                           	callstack 12
  3353  001D08                     
  3354                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  3355  001D08  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3356  001D0E  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3357  001D14  006F FF7B FFF6     	movff	postinc2,tblptrl
  3358  001D1A  006F FF77 FFF7     	movff	postdec2,tblptrh
  3359  001D20                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3360  001D20  6AF8               	clrf	tblptru,c
  3361  001D22                     	endif
  3362  001D22                     	if	0	;tblptru may be non-zero
  3363  001D22                     	endif
  3364  001D22  0008               	tblrd		*
  3365  001D24  50F5               	movf	tablat,w,c
  3366  001D26  0A25               	xorlw	37
  3367  001D28  A4D8               	btfss	status,2,c
  3368  001D2A  EF99  F00E         	goto	u9521
  3369  001D2E  EF9B  F00E         	goto	u9520
  3370  001D32                     u9521:
  3371  001D32  EFF2  F010         	goto	l8703
  3372  001D36                     u9520:
  3373  001D36                     
  3374                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  3375  001D36  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3376  001D3C  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3377  001D42  2ADE               	incf	postinc2,f,c
  3378  001D44  0E00               	movlw	0
  3379  001D46  22DD               	addwfc	postdec2,f,c
  3380  001D48                     
  3381                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  3382  001D48  0E00               	movlw	0
  3383  001D4A  6E3B               	movwf	(_width+1)^0,c
  3384  001D4C  0E00               	movlw	0
  3385  001D4E  6E3A               	movwf	_width^0,c
  3386  001D50  C03A  F03E         	movff	_width,_flags
  3387  001D54  C03B  F03F         	movff	_width+1,_flags+1
  3388  001D58                     
  3389                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  3390  001D58  683C               	setf	_prec^0,c
  3391  001D5A  683D               	setf	(_prec+1)^0,c
  3392  001D5C                     
  3393                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  3394  001D5C  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3395  001D62  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3396  001D68  006F FF7B FFF6     	movff	postinc2,tblptrl
  3397  001D6E  006F FF77 FFF7     	movff	postdec2,tblptrh
  3398  001D74                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3399  001D74  6AF8               	clrf	tblptru,c
  3400  001D76                     	endif
  3401  001D76                     	if	0	;tblptru may be non-zero
  3402  001D76                     	endif
  3403  001D76  0008               	tblrd		*
  3404  001D78  50F5               	movf	tablat,w,c
  3405  001D7A  6E1A               	movwf	tolower@c^0,c
  3406  001D7C  6A1B               	clrf	(tolower@c+1)^0,c
  3407  001D7E  ECAE  F029         	call	_tolower	;wreg free
  3408  001D82  501A               	movf	?_tolower^0,w,c
  3409  001D84  0100               	movlb	0	; () banked
  3410  001D86  6FDF               	movwf	vfpfcnvrt@ct& (0+255),b
  3411  001D88                     
  3412                           ; BSR set to: 0
  3413                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  3414  001D88  51DF               	movf	vfpfcnvrt@ct& (0+255),w,b
  3415  001D8A  B4D8               	btfsc	status,2,c
  3416  001D8C  EFCA  F00E         	goto	u9531
  3417  001D90  EFCC  F00E         	goto	u9530
  3418  001D94                     u9531:
  3419  001D94  EF14  F00F         	goto	l8649
  3420  001D98                     u9530:
  3421  001D98                     
  3422                           ; BSR set to: 0
  3423                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  3424  001D98  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3425  001D9E  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3426  001DA4  006F FF78  F0CD    	movff	postinc2,??_vfpfcnvrt
  3427  001DAA  006F FF74  F0CE    	movff	postdec2,??_vfpfcnvrt+1
  3428  001DB0  0E01               	movlw	1
  3429  001DB2  27CD               	addwf	??_vfpfcnvrt& (0+255),f,b
  3430  001DB4  0E00               	movlw	0
  3431  001DB6  23CE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  3432  001DB8  0060  F337  FFF6   	movff	??_vfpfcnvrt,tblptrl
  3433  001DBE  0060  F33B  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  3434  001DC4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3435  001DC4  6AF8               	clrf	tblptru,c
  3436  001DC6                     	endif
  3437  001DC6                     	if	0	;tblptru may be non-zero
  3438  001DC6                     	endif
  3439  001DC6  0008               	tblrd		*
  3440  001DC8  50F5               	movf	tablat,w,c
  3441  001DCA  6E1A               	movwf	tolower@c^0,c
  3442  001DCC  6A1B               	clrf	(tolower@c+1)^0,c
  3443  001DCE  ECAE  F029         	call	_tolower	;wreg free
  3444  001DD2  501A               	movf	?_tolower^0,w,c
  3445  001DD4  0100               	movlb	0	; () banked
  3446  001DD6  6FE0               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  3447  001DD8                     
  3448                           ; BSR set to: 0
  3449                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  3450  001DD8  51E0               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  3451  001DDA  B4D8               	btfsc	status,2,c
  3452  001DDC  EFF2  F00E         	goto	u9541
  3453  001DE0  EFF4  F00E         	goto	u9540
  3454  001DE4                     u9541:
  3455  001DE4  EF14  F00F         	goto	l8649
  3456  001DE8                     u9540:
  3457  001DE8                     
  3458                           ; BSR set to: 0
  3459                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  3460  001DE8  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3461  001DEE  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3462  001DF4  006F FF78  F0CD    	movff	postinc2,??_vfpfcnvrt
  3463  001DFA  006F FF74  F0CE    	movff	postdec2,??_vfpfcnvrt+1
  3464  001E00  0E02               	movlw	2
  3465  001E02  27CD               	addwf	??_vfpfcnvrt& (0+255),f,b
  3466  001E04  0E00               	movlw	0
  3467  001E06  23CE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  3468  001E08  0060  F337  FFF6   	movff	??_vfpfcnvrt,tblptrl
  3469  001E0E  0060  F33B  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  3470  001E14                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3471  001E14  6AF8               	clrf	tblptru,c
  3472  001E16                     	endif
  3473  001E16                     	if	0	;tblptru may be non-zero
  3474  001E16                     	endif
  3475  001E16  0008               	tblrd		*
  3476  001E18  50F5               	movf	tablat,w,c
  3477  001E1A  6E1A               	movwf	tolower@c^0,c
  3478  001E1C  6A1B               	clrf	(tolower@c+1)^0,c
  3479  001E1E  ECAE  F029         	call	_tolower	;wreg free
  3480  001E22  501A               	movf	?_tolower^0,w,c
  3481  001E24  0100               	movlb	0	; () banked
  3482  001E26  6FE1               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  3483  001E28                     l8649:
  3484                           
  3485                           ; BSR set to: 0
  3486                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  3487  001E28  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3488  001E2E  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3489  001E34  006F FF7B FFF6     	movff	postinc2,tblptrl
  3490  001E3A  006F FF77 FFF7     	movff	postdec2,tblptrh
  3491  001E40                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3492  001E40  6AF8               	clrf	tblptru,c
  3493  001E42                     	endif
  3494  001E42                     	if	0	;tblptru may be non-zero
  3495  001E42                     	endif
  3496  001E42  0008               	tblrd		*
  3497  001E44  50F5               	movf	tablat,w,c
  3498  001E46  0A64               	xorlw	100
  3499  001E48  B4D8               	btfsc	status,2,c
  3500  001E4A  EF29  F00F         	goto	u9551
  3501  001E4E  EF2B  F00F         	goto	u9550
  3502  001E52                     u9551:
  3503  001E52  EF42  F00F         	goto	l8653
  3504  001E56                     u9550:
  3505  001E56                     
  3506                           ; BSR set to: 0
  3507  001E56  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3508  001E5C  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3509  001E62  006F FF7B FFF6     	movff	postinc2,tblptrl
  3510  001E68  006F FF77 FFF7     	movff	postdec2,tblptrh
  3511  001E6E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3512  001E6E  6AF8               	clrf	tblptru,c
  3513  001E70                     	endif
  3514  001E70                     	if	0	;tblptru may be non-zero
  3515  001E70                     	endif
  3516  001E70  0008               	tblrd		*
  3517  001E72  50F5               	movf	tablat,w,c
  3518  001E74  0A69               	xorlw	105
  3519  001E76  A4D8               	btfss	status,2,c
  3520  001E78  EF40  F00F         	goto	u9561
  3521  001E7C  EF42  F00F         	goto	u9560
  3522  001E80                     u9561:
  3523  001E80  EF8C  F00F         	goto	l8659
  3524  001E84                     u9560:
  3525  001E84                     l8653:
  3526                           
  3527                           ; BSR set to: 0
  3528                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  3529  001E84  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3530  001E8A  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3531  001E90  2ADE               	incf	postinc2,f,c
  3532  001E92  0E00               	movlw	0
  3533  001E94  22DD               	addwfc	postdec2,f,c
  3534                           
  3535                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  3536  001E96  0060  F32F  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  3537  001E9C  0060  F333  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  3538  001EA2  006F FF7C  F0CD    	movff	indf2,??_vfpfcnvrt
  3539  001EA8  0E02               	movlw	2
  3540  001EAA  26DE               	addwf	postinc2,f,c
  3541  001EAC  006F FF7C  F0CE    	movff	indf2,??_vfpfcnvrt+1
  3542  001EB2  0E00               	movlw	0
  3543  001EB4  22DD               	addwfc	postdec2,f,c
  3544  001EB6  0060  F337  FFD9   	movff	??_vfpfcnvrt,fsr2l
  3545  001EBC  0060  F33B  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  3546  001EC2  006F FF78  F0D1    	movff	postinc2,vfpfcnvrt@ll
  3547  001EC8  006F FF74  F0D2    	movff	postdec2,vfpfcnvrt@ll+1
  3548  001ECE  0E00               	movlw	0
  3549  001ED0  BFD2               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  3550  001ED2  0EFF               	movlw	-1
  3551  001ED4  6FD3               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  3552  001ED6  6FD4               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  3553  001ED8  6FD5               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  3554  001EDA  6FD6               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  3555  001EDC  6FD7               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  3556  001EDE  6FD8               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  3557  001EE0                     
  3558                           ; BSR set to: 0
  3559                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  3560  001EE0  C0C7  F060         	movff	vfpfcnvrt@fp,dtoa@fp
  3561  001EE4  C0C8  F061         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  3562  001EE8  C0D1  F062         	movff	vfpfcnvrt@ll,dtoa@d
  3563  001EEC  C0D2  F063         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  3564  001EF0  C0D3  F064         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  3565  001EF4  C0D4  F065         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  3566  001EF8  C0D5  F066         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  3567  001EFC  C0D6  F067         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  3568  001F00  C0D7  F068         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  3569  001F04  C0D8  F069         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  3570  001F08  EC6B  F017         	call	_dtoa	;wreg free
  3571  001F0C  C060  F0C7         	movff	?_dtoa,?_vfpfcnvrt
  3572  001F10  C061  F0C8         	movff	?_dtoa+1,?_vfpfcnvrt+1
  3573  001F14  EF14  F011         	goto	l2247
  3574  001F18                     l8659:
  3575                           
  3576                           ; BSR set to: 0
  3577                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  3578  001F18  0E66               	movlw	102
  3579  001F1A  19DF               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  3580  001F1C  A4D8               	btfss	status,2,c
  3581  001F1E  EF93  F00F         	goto	u9571
  3582  001F22  EF95  F00F         	goto	u9570
  3583  001F26                     u9571:
  3584  001F26  EFE7  F00F         	goto	l8671
  3585  001F2A                     u9570:
  3586  001F2A                     
  3587                           ; BSR set to: 0
  3588                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  3589  001F2A  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3590  001F30  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3591  001F36  006F FF7B FFF6     	movff	postinc2,tblptrl
  3592  001F3C  006F FF77 FFF7     	movff	postdec2,tblptrh
  3593  001F42                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3594  001F42  6AF8               	clrf	tblptru,c
  3595  001F44                     	endif
  3596  001F44                     	if	0	;tblptru may be non-zero
  3597  001F44                     	endif
  3598  001F44  0008               	tblrd		*
  3599  001F46  006F FFD4  F0E2    	movff	tablat,vfpfcnvrt@c
  3600  001F4C                     
  3601                           ; BSR set to: 0
  3602                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  3603  001F4C  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3604  001F52  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3605  001F58  2ADE               	incf	postinc2,f,c
  3606  001F5A  0E00               	movlw	0
  3607  001F5C  22DD               	addwfc	postdec2,f,c
  3608  001F5E                     
  3609                           ; BSR set to: 0
  3610                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3611  001F5E  0060  F32F  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  3612  001F64  0060  F333  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  3613  001F6A  006F FF7C  F0CD    	movff	indf2,??_vfpfcnvrt
  3614  001F70  0E04               	movlw	4
  3615  001F72  26DE               	addwf	postinc2,f,c
  3616  001F74  006F FF7C  F0CE    	movff	indf2,??_vfpfcnvrt+1
  3617  001F7A  0E00               	movlw	0
  3618  001F7C  22DD               	addwfc	postdec2,f,c
  3619  001F7E  0060  F337  FFD9   	movff	??_vfpfcnvrt,fsr2l
  3620  001F84  0060  F33B  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  3621  001F8A  006F FF78  F0DB    	movff	postinc2,vfpfcnvrt@f
  3622  001F90  006F FF78  F0DC    	movff	postinc2,vfpfcnvrt@f+1
  3623  001F96  006F FF78  F0DD    	movff	postinc2,vfpfcnvrt@f+2
  3624  001F9C  006F FF78  F0DE    	movff	postinc2,vfpfcnvrt@f+3
  3625  001FA2                     
  3626                           ; BSR set to: 0
  3627                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  3628  001FA2  C0C7  F083         	movff	vfpfcnvrt@fp,efgtoa@fp
  3629  001FA6  C0C8  F084         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  3630  001FAA  C0DB  F085         	movff	vfpfcnvrt@f,efgtoa@f
  3631  001FAE  C0DC  F086         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  3632  001FB2  C0DD  F087         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  3633  001FB6  C0DE  F088         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  3634  001FBA  C0E2  F089         	movff	vfpfcnvrt@c,efgtoa@c
  3635  001FBE  EC2D  F008         	call	_efgtoa	;wreg free
  3636  001FC2  C083  F0C7         	movff	?_efgtoa,?_vfpfcnvrt
  3637  001FC6  C084  F0C8         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  3638  001FCA  EF14  F011         	goto	l2247
  3639  001FCE                     l8671:
  3640                           
  3641                           ; BSR set to: 0
  3642                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  3643  001FCE  0EDF               	movlw	low vfpfcnvrt@ct
  3644  001FD0  6E14               	movwf	strncmp@_l^0,c
  3645  001FD2  0E00               	movlw	high vfpfcnvrt@ct
  3646  001FD4  6E15               	movwf	(strncmp@_l+1)^0,c
  3647  001FD6  0E56               	movlw	low STR_14
  3648  001FD8  6E16               	movwf	strncmp@_r^0,c
  3649  001FDA  0E10               	movlw	high STR_14
  3650  001FDC  6E17               	movwf	(strncmp@_r+1)^0,c
  3651  001FDE  0E00               	movlw	0
  3652  001FE0  6E19               	movwf	(strncmp@n+1)^0,c
  3653  001FE2  0E02               	movlw	2
  3654  001FE4  6E18               	movwf	strncmp@n^0,c
  3655  001FE6  ECBE  F024         	call	_strncmp	;wreg free
  3656  001FEA  5014               	movf	?_strncmp^0,w,c
  3657  001FEC  1015               	iorwf	(?_strncmp+1)^0,w,c
  3658  001FEE  A4D8               	btfss	status,2,c
  3659  001FF0  EFFC  F00F         	goto	u9581
  3660  001FF4  EFFE  F00F         	goto	u9580
  3661  001FF8                     u9581:
  3662  001FF8  EFB1  F010         	goto	l8687
  3663  001FFC                     u9580:
  3664  001FFC                     
  3665                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 953:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  3666  001FFC  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3667  002002  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3668  002008  006F FF78  F0CD    	movff	postinc2,??_vfpfcnvrt
  3669  00200E  006F FF74  F0CE    	movff	postdec2,??_vfpfcnvrt+1
  3670  002014  0E01               	movlw	1
  3671  002016  0100               	movlb	0	; () banked
  3672  002018  27CD               	addwf	??_vfpfcnvrt& (0+255),f,b
  3673  00201A  0E00               	movlw	0
  3674  00201C  23CE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  3675  00201E  0060  F337  FFF6   	movff	??_vfpfcnvrt,tblptrl
  3676  002024  0060  F33B  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  3677  00202A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3678  00202A  6AF8               	clrf	tblptru,c
  3679  00202C                     	endif
  3680  00202C                     	if	0	;tblptru may be non-zero
  3681  00202C                     	endif
  3682  00202C  0008               	tblrd		*
  3683  00202E  006F FFD4  F0E2    	movff	tablat,vfpfcnvrt@c
  3684  002034  0EBF               	movlw	191
  3685  002036  6FCD               	movwf	??_vfpfcnvrt& (0+255),b
  3686  002038  0EFF               	movlw	255
  3687  00203A  6FCE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  3688  00203C  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3689  002042  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3690  002048  006F FF7B FFF6     	movff	postinc2,tblptrl
  3691  00204E  006F FF77 FFF7     	movff	postdec2,tblptrh
  3692  002054                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3693  002054  6AF8               	clrf	tblptru,c
  3694  002056                     	endif
  3695  002056                     	if	0	;tblptru may be non-zero
  3696  002056                     	endif
  3697  002056  0008               	tblrd		*
  3698  002058  50F5               	movf	tablat,w,c
  3699  00205A  6FCF               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  3700  00205C  6BD0               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  3701  00205E  51CD               	movf	??_vfpfcnvrt& (0+255),w,b
  3702  002060  27CF               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  3703  002062  51CE               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3704  002064  23D0               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  3705  002066  51D0               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  3706  002068  E10A               	bnz	u9590
  3707  00206A  0E1A               	movlw	26
  3708  00206C  5DCF               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  3709  00206E  A0D8               	btfss	status,0,c
  3710  002070  EF3C  F010         	goto	u9591
  3711  002074  EF3F  F010         	goto	u9590
  3712  002078                     u9591:
  3713  002078  0E01               	movlw	1
  3714  00207A  EF40  F010         	goto	u9600
  3715  00207E                     u9590:
  3716  00207E  0E00               	movlw	0
  3717  002080                     u9600:
  3718  002080  6FD9               	movwf	_vfpfcnvrt$3581& (0+255),b
  3719  002082  6BDA               	clrf	(_vfpfcnvrt$3581+1)& (0+255),b
  3720  002084                     
  3721                           ; BSR set to: 0
  3722  002084  51D9               	movf	_vfpfcnvrt$3581& (0+255),w,b
  3723  002086  11DA               	iorwf	(_vfpfcnvrt$3581+1)& (0+255),w,b
  3724  002088  B4D8               	btfsc	status,2,c
  3725  00208A  EF49  F010         	goto	u9611
  3726  00208E  EF4B  F010         	goto	u9610
  3727  002092                     u9611:
  3728  002092  EF6F  F010         	goto	l8681
  3729  002096                     u9610:
  3730  002096                     
  3731                           ; BSR set to: 0
  3732                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  3733  002096  0060  F32F  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  3734  00209C  0060  F333  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  3735  0020A2  006F FF7C  F0CD    	movff	indf2,??_vfpfcnvrt
  3736  0020A8  0E04               	movlw	4
  3737  0020AA  26DE               	addwf	postinc2,f,c
  3738  0020AC  006F FF7C  F0CE    	movff	indf2,??_vfpfcnvrt+1
  3739  0020B2  0E00               	movlw	0
  3740  0020B4  22DD               	addwfc	postdec2,f,c
  3741  0020B6  0060  F337  FFD9   	movff	??_vfpfcnvrt,fsr2l
  3742  0020BC  0060  F33B  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  3743  0020C2  006F FF78  F0DB    	movff	postinc2,vfpfcnvrt@f
  3744  0020C8  006F FF78  F0DC    	movff	postinc2,vfpfcnvrt@f+1
  3745  0020CE  006F FF78  F0DD    	movff	postinc2,vfpfcnvrt@f+2
  3746  0020D4  006F FF78  F0DE    	movff	postinc2,vfpfcnvrt@f+3
  3747                           
  3748                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  3749  0020DA  EF91  F010         	goto	l2255
  3750  0020DE                     l8681:
  3751                           
  3752                           ; BSR set to: 0
  3753                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3754  0020DE  0060  F32F  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  3755  0020E4  0060  F333  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  3756  0020EA  006F FF7C  F0CD    	movff	indf2,??_vfpfcnvrt
  3757  0020F0  0E04               	movlw	4
  3758  0020F2  26DE               	addwf	postinc2,f,c
  3759  0020F4  006F FF7C  F0CE    	movff	indf2,??_vfpfcnvrt+1
  3760  0020FA  0E00               	movlw	0
  3761  0020FC  22DD               	addwfc	postdec2,f,c
  3762  0020FE  0060  F337  FFD9   	movff	??_vfpfcnvrt,fsr2l
  3763  002104  0060  F33B  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  3764  00210A  006F FF78  F0DB    	movff	postinc2,vfpfcnvrt@f
  3765  002110  006F FF78  F0DC    	movff	postinc2,vfpfcnvrt@f+1
  3766  002116  006F FF78  F0DD    	movff	postinc2,vfpfcnvrt@f+2
  3767  00211C  006F FF78  F0DE    	movff	postinc2,vfpfcnvrt@f+3
  3768  002122                     l2255:
  3769                           
  3770                           ; BSR set to: 0
  3771                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  3772  002122  0E02               	movlw	2
  3773  002124  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3774  00212A  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3775  002130  26DE               	addwf	postinc2,f,c
  3776  002132  0E00               	movlw	0
  3777  002134  22DD               	addwfc	postdec2,f,c
  3778  002136                     
  3779                           ; BSR set to: 0
  3780                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 960:             
      +                          return efgtoa(fp, f, c);
  3781  002136  C0C7  F083         	movff	vfpfcnvrt@fp,efgtoa@fp
  3782  00213A  C0C8  F084         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  3783  00213E  C0DB  F085         	movff	vfpfcnvrt@f,efgtoa@f
  3784  002142  C0DC  F086         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  3785  002146  C0DD  F087         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  3786  00214A  C0DE  F088         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  3787  00214E  C0E2  F089         	movff	vfpfcnvrt@c,efgtoa@c
  3788  002152  EC2D  F008         	call	_efgtoa	;wreg free
  3789  002156  C083  F0C7         	movff	?_efgtoa,?_vfpfcnvrt
  3790  00215A  C084  F0C8         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  3791  00215E  EF14  F011         	goto	l2247
  3792  002162                     l8687:
  3793                           
  3794                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  3795  002162  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3796  002168  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3797  00216E  006F FF7B FFF6     	movff	postinc2,tblptrl
  3798  002174  006F FF77 FFF7     	movff	postdec2,tblptrh
  3799  00217A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3800  00217A  6AF8               	clrf	tblptru,c
  3801  00217C                     	endif
  3802  00217C                     	if	0	;tblptru may be non-zero
  3803  00217C                     	endif
  3804  00217C  0008               	tblrd		*
  3805  00217E  50F5               	movf	tablat,w,c
  3806  002180  0A25               	xorlw	37
  3807  002182  A4D8               	btfss	status,2,c
  3808  002184  EFC6  F010         	goto	u9621
  3809  002188  EFC8  F010         	goto	u9620
  3810  00218C                     u9621:
  3811  00218C  EFE2  F010         	goto	l8697
  3812  002190                     u9620:
  3813  002190                     
  3814                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  3815  002190  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3816  002196  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3817  00219C  2ADE               	incf	postinc2,f,c
  3818  00219E  0E00               	movlw	0
  3819  0021A0  22DD               	addwfc	postdec2,f,c
  3820  0021A2                     
  3821                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  3822  0021A2  0E00               	movlw	0
  3823  0021A4  6E17               	movwf	(fputc@c+1)^0,c
  3824  0021A6  0E25               	movlw	37
  3825  0021A8  6E16               	movwf	fputc@c^0,c
  3826  0021AA  C0C7  F018         	movff	vfpfcnvrt@fp,fputc@fp
  3827  0021AE  C0C8  F019         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3828  0021B2  EC30  F028         	call	_fputc	;wreg free
  3829  0021B6                     l8693:
  3830                           
  3831                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  3832  0021B6  0E00               	movlw	0
  3833  0021B8  0100               	movlb	0	; () banked
  3834  0021BA  6FC8               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  3835  0021BC  0E01               	movlw	1
  3836  0021BE  6FC7               	movwf	?_vfpfcnvrt& (0+255),b
  3837  0021C0  EF14  F011         	goto	l2247
  3838  0021C4                     l8697:
  3839                           
  3840                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  3841  0021C4  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3842  0021CA  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3843  0021D0  2ADE               	incf	postinc2,f,c
  3844  0021D2  0E00               	movlw	0
  3845  0021D4  22DD               	addwfc	postdec2,f,c
  3846  0021D6                     
  3847                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  3848  0021D6  0E00               	movlw	0
  3849  0021D8  0100               	movlb	0	; () banked
  3850  0021DA  6FC8               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  3851  0021DC  0E00               	movlw	0
  3852  0021DE  6FC7               	movwf	?_vfpfcnvrt& (0+255),b
  3853  0021E0  EF14  F011         	goto	l2247
  3854  0021E4                     l8703:
  3855                           
  3856                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  3857  0021E4  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3858  0021EA  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3859  0021F0  006F FF7B FFF6     	movff	postinc2,tblptrl
  3860  0021F6  006F FF77 FFF7     	movff	postdec2,tblptrh
  3861  0021FC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3862  0021FC  6AF8               	clrf	tblptru,c
  3863  0021FE                     	endif
  3864  0021FE                     	if	0	;tblptru may be non-zero
  3865  0021FE                     	endif
  3866  0021FE  0008               	tblrd		*
  3867  002200  50F5               	movf	tablat,w,c
  3868  002202  6E16               	movwf	fputc@c^0,c
  3869  002204  6A17               	clrf	(fputc@c+1)^0,c
  3870  002206  C0C7  F018         	movff	vfpfcnvrt@fp,fputc@fp
  3871  00220A  C0C8  F019         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3872  00220E  EC30  F028         	call	_fputc	;wreg free
  3873  002212                     
  3874                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  3875  002212  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3876  002218  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3877  00221E  2ADE               	incf	postinc2,f,c
  3878  002220  0E00               	movlw	0
  3879  002222  22DD               	addwfc	postdec2,f,c
  3880  002224  EFDB  F010         	goto	l8693
  3881  002228                     l2247:
  3882  002228  0012               	return		;funcret
  3883  00222A                     __end_of_vfpfcnvrt:
  3884                           	callstack 0
  3885                           
  3886 ;; *************** function _strncmp *****************
  3887 ;; Defined at:
  3888 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strncmp.c"
  3889 ;; Parameters:    Size  Location     Type
  3890 ;;  _l              2   19[COMRAM] PTR const unsigned char 
  3891 ;;		 -> vfpfcnvrt@ct(3), 
  3892 ;;  _r              2   21[COMRAM] PTR const unsigned char 
  3893 ;;		 -> STR_16(3), 
  3894 ;;  n               2   23[COMRAM] unsigned int 
  3895 ;; Auto vars:     Size  Location     Type
  3896 ;;  r               2   28[COMRAM] PTR const unsigned char 
  3897 ;;		 -> STR_16(3), 
  3898 ;;  l               2   26[COMRAM] PTR const unsigned char 
  3899 ;;		 -> vfpfcnvrt@ct(3), 
  3900 ;; Return value:  Size  Location     Type
  3901 ;;                  2   19[COMRAM] int 
  3902 ;; Registers used:
  3903 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3904 ;; Tracked objects:
  3905 ;;		On entry : 0/0
  3906 ;;		On exit  : 0/0
  3907 ;;		Unchanged: 0/0
  3908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3909 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3910 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3911 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3912 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3913 ;;Total ram usage:       11 bytes
  3914 ;; Hardware stack levels used: 1
  3915 ;; Hardware stack levels required when called: 8
  3916 ;; This function calls:
  3917 ;;		Nothing
  3918 ;; This function is called by:
  3919 ;;		_vfpfcnvrt
  3920 ;; This function uses a non-reentrant model
  3921 ;;
  3922                           
  3923                           	psect	text9
  3924  00497C                     __ptext9:
  3925                           	callstack 0
  3926  00497C                     _strncmp:
  3927                           	callstack 17
  3928  00497C  C014  F01B         	movff	strncmp@_l,strncmp@l
  3929  004980  C015  F01C         	movff	strncmp@_l+1,strncmp@l+1
  3930  004984  C016  F01D         	movff	strncmp@_r,strncmp@r
  3931  004988  C017  F01E         	movff	strncmp@_r+1,strncmp@r+1
  3932  00498C  0618               	decf	strncmp@n^0,f,c
  3933  00498E  A0D8               	btfss	status,0,c
  3934  004990  0619               	decf	(strncmp@n+1)^0,f,c
  3935  004992  2818               	incf	strncmp@n^0,w,c
  3936  004994  E106               	bnz	u9451
  3937  004996  2819               	incf	(strncmp@n+1)^0,w,c
  3938  004998  A4D8               	btfss	status,2,c
  3939  00499A  EFD1  F024         	goto	u9451
  3940  00499E  EFD3  F024         	goto	u9450
  3941  0049A2                     u9451:
  3942  0049A2  EFE0  F024         	goto	l8615
  3943  0049A6                     u9450:
  3944  0049A6  0E00               	movlw	0
  3945  0049A8  6E15               	movwf	(?_strncmp+1)^0,c
  3946  0049AA  0E00               	movlw	0
  3947  0049AC  6E14               	movwf	?_strncmp^0,c
  3948  0049AE  EF37  F025         	goto	l2335
  3949  0049B2                     l8613:
  3950  0049B2  4A1B               	infsnz	strncmp@l^0,f,c
  3951  0049B4  2A1C               	incf	(strncmp@l+1)^0,f,c
  3952  0049B6  4A1D               	infsnz	strncmp@r^0,f,c
  3953  0049B8  2A1E               	incf	(strncmp@r+1)^0,f,c
  3954  0049BA  0618               	decf	strncmp@n^0,f,c
  3955  0049BC  A0D8               	btfss	status,0,c
  3956  0049BE  0619               	decf	(strncmp@n+1)^0,f,c
  3957  0049C0                     l8615:
  3958  0049C0  0060  F06F  FFD9   	movff	strncmp@l,fsr2l
  3959  0049C6  0060  F073  FFDA   	movff	strncmp@l+1,fsr2h
  3960  0049CC  50DF               	movf	indf2,w,c
  3961  0049CE  B4D8               	btfsc	status,2,c
  3962  0049D0  EFEC  F024         	goto	u9461
  3963  0049D4  EFEE  F024         	goto	u9460
  3964  0049D8                     u9461:
  3965  0049D8  EF21  F025         	goto	l8623
  3966  0049DC                     u9460:
  3967  0049DC  0060  F077  FFF6   	movff	strncmp@r,tblptrl
  3968  0049E2  0060  F07B  FFF7   	movff	strncmp@r+1,tblptrh
  3969  0049E8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3970  0049E8  6AF8               	clrf	tblptru,c
  3971  0049EA                     	endif
  3972  0049EA                     	if	0	;tblptru may be non-zero
  3973  0049EA                     	endif
  3974  0049EA  0008               	tblrd		*
  3975  0049EC  50F5               	movf	tablat,w,c
  3976  0049EE  0900               	iorlw	0
  3977  0049F0  B4D8               	btfsc	status,2,c
  3978  0049F2  EFFD  F024         	goto	u9471
  3979  0049F6  EFFF  F024         	goto	u9470
  3980  0049FA                     u9471:
  3981  0049FA  EF21  F025         	goto	l8623
  3982  0049FE                     u9470:
  3983  0049FE  5018               	movf	strncmp@n^0,w,c
  3984  004A00  1019               	iorwf	(strncmp@n+1)^0,w,c
  3985  004A02  B4D8               	btfsc	status,2,c
  3986  004A04  EF06  F025         	goto	u9481
  3987  004A08  EF08  F025         	goto	u9480
  3988  004A0C                     u9481:
  3989  004A0C  EF21  F025         	goto	l8623
  3990  004A10                     u9480:
  3991  004A10  0060  F06F  FFD9   	movff	strncmp@l,fsr2l
  3992  004A16  0060  F073  FFDA   	movff	strncmp@l+1,fsr2h
  3993  004A1C  50DF               	movf	indf2,w,c
  3994  004A1E  6E1A               	movwf	??_strncmp^0,c
  3995  004A20  0060  F077  FFF6   	movff	strncmp@r,tblptrl
  3996  004A26  0060  F07B  FFF7   	movff	strncmp@r+1,tblptrh
  3997  004A2C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3998  004A2C  6AF8               	clrf	tblptru,c
  3999  004A2E                     	endif
  4000  004A2E                     	if	0	;tblptru may be non-zero
  4001  004A2E                     	endif
  4002  004A2E  0008               	tblrd		*
  4003  004A30  50F5               	movf	tablat,w,c
  4004  004A32  181A               	xorwf	??_strncmp^0,w,c
  4005  004A34  B4D8               	btfsc	status,2,c
  4006  004A36  EF1F  F025         	goto	u9491
  4007  004A3A  EF21  F025         	goto	u9490
  4008  004A3E                     u9491:
  4009  004A3E  EFD9  F024         	goto	l8613
  4010  004A42                     u9490:
  4011  004A42                     l8623:
  4012  004A42  0060  F06F  FFD9   	movff	strncmp@l,fsr2l
  4013  004A48  0060  F073  FFDA   	movff	strncmp@l+1,fsr2h
  4014  004A4E  50DF               	movf	indf2,w,c
  4015  004A50  6E1A               	movwf	??_strncmp^0,c
  4016  004A52  0060  F077  FFF6   	movff	strncmp@r,tblptrl
  4017  004A58  0060  F07B  FFF7   	movff	strncmp@r+1,tblptrh
  4018  004A5E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4019  004A5E  6AF8               	clrf	tblptru,c
  4020  004A60                     	endif
  4021  004A60                     	if	0	;tblptru may be non-zero
  4022  004A60                     	endif
  4023  004A60  0008               	tblrd		*
  4024  004A62  50F5               	movf	tablat,w,c
  4025  004A64  5C1A               	subwf	??_strncmp^0,w,c
  4026  004A66  6E14               	movwf	?_strncmp^0,c
  4027  004A68  6A15               	clrf	(?_strncmp+1)^0,c
  4028  004A6A  A0D8               	btfss	status,0,c
  4029  004A6C  0615               	decf	(?_strncmp+1)^0,f,c
  4030  004A6E                     l2335:
  4031  004A6E  0012               	return		;funcret
  4032  004A70                     __end_of_strncmp:
  4033                           	callstack 0
  4034                           
  4035 ;; *************** function _efgtoa *****************
  4036 ;; Defined at:
  4037 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4038 ;; Parameters:    Size  Location     Type
  4039 ;;  fp              2   35[BANK0 ] PTR struct _IO_FILE
  4040 ;;		 -> NULL(0), 
  4041 ;;  f               4   37[BANK0 ] PTR struct _IO_FILE
  4042 ;;  c               1   41[BANK0 ] unsigned char 
  4043 ;; Auto vars:     Size  Location     Type
  4044 ;;  u               4   99[BANK0 ] unsigned char 
  4045 ;;  g               4   91[BANK0 ] unsigned char 
  4046 ;;  l               4   85[BANK0 ] unsigned char 
  4047 ;;  h               4   81[BANK0 ] unsigned char 
  4048 ;;  ou              4   67[BANK0 ] unsigned char 
  4049 ;;  n               2   97[BANK0 ] int 
  4050 ;;  e               2   95[BANK0 ] int 
  4051 ;;  i               2   89[BANK0 ] int 
  4052 ;;  w               2   77[BANK0 ] int 
  4053 ;;  p               2   75[BANK0 ] int 
  4054 ;;  sign            2   73[BANK0 ] int 
  4055 ;;  d               2   71[BANK0 ] int 
  4056 ;;  m               2   65[BANK0 ] int 
  4057 ;;  ne              2   63[BANK0 ] int 
  4058 ;;  pp              2   61[BANK0 ] int 
  4059 ;;  t               2   59[BANK0 ] int 
  4060 ;;  mode            1   80[BANK0 ] unsigned char 
  4061 ;;  nmode           1   79[BANK0 ] unsigned char 
  4062 ;; Return value:  Size  Location     Type
  4063 ;;                  2   35[BANK0 ] int 
  4064 ;; Registers used:
  4065 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4066 ;; Tracked objects:
  4067 ;;		On entry : 0/0
  4068 ;;		On exit  : 0/0
  4069 ;;		Unchanged: 0/0
  4070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4071 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4072 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4073 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4074 ;;      Totals:         0      68       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4075 ;;Total ram usage:       68 bytes
  4076 ;; Hardware stack levels used: 1
  4077 ;; Hardware stack levels required when called: 13
  4078 ;; This function calls:
  4079 ;;		___awdiv
  4080 ;;		___awmod
  4081 ;;		___fladd
  4082 ;;		___fldiv
  4083 ;;		___fleq
  4084 ;;		___flge
  4085 ;;		___flmul
  4086 ;;		___flneg
  4087 ;;		___flsub
  4088 ;;		___fltol
  4089 ;;		___fpclassifyf
  4090 ;;		_floorf
  4091 ;;		_isupper
  4092 ;;		_pad
  4093 ;;		_strcpy
  4094 ;;		_tolower
  4095 ;; This function is called by:
  4096 ;;		_vfpfcnvrt
  4097 ;; This function uses a non-reentrant model
  4098 ;;
  4099                           
  4100                           	psect	text10
  4101  00105A                     __ptext10:
  4102                           	callstack 0
  4103  00105A                     _efgtoa:
  4104                           	callstack 12
  4105  00105A                     
  4106                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.32\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  4107  00105A  0E00               	movlw	0
  4108  00105C  0100               	movlb	0	; () banked
  4109  00105E  6FAA               	movwf	(efgtoa@sign+1)& (0+255),b
  4110  001060  0E00               	movlw	0
  4111  001062  6FA9               	movwf	efgtoa@sign& (0+255),b
  4112  001064                     
  4113                           ; BSR set to: 0
  4114                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 340:     g = f;
  4115  001064  C085  F0BB         	movff	efgtoa@f,efgtoa@g
  4116  001068  C086  F0BC         	movff	efgtoa@f+1,efgtoa@g+1
  4117  00106C  C087  F0BD         	movff	efgtoa@f+2,efgtoa@g+2
  4118  001070  C088  F0BE         	movff	efgtoa@f+3,efgtoa@g+3
  4119  001074                     
  4120                           ; BSR set to: 0
  4121                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  4122  001074  BFBE               	btfsc	(efgtoa@g+3)& (0+255),7,b
  4123  001076  EF41  F008         	goto	u8910
  4124  00107A  EF3F  F008         	goto	u8911
  4125  00107E                     u8911:
  4126  00107E  EF57  F008         	goto	l8309
  4127  001082                     u8910:
  4128  001082                     
  4129                           ; BSR set to: 0
  4130                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  4131  001082  0E00               	movlw	0
  4132  001084  6FAA               	movwf	(efgtoa@sign+1)& (0+255),b
  4133  001086  0E01               	movlw	1
  4134  001088  6FA9               	movwf	efgtoa@sign& (0+255),b
  4135  00108A                     
  4136                           ; BSR set to: 0
  4137                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  4138  00108A  C0BB  F014         	movff	efgtoa@g,___flneg@f1
  4139  00108E  C0BC  F015         	movff	efgtoa@g+1,___flneg@f1+1
  4140  001092  C0BD  F016         	movff	efgtoa@g+2,___flneg@f1+2
  4141  001096  C0BE  F017         	movff	efgtoa@g+3,___flneg@f1+3
  4142  00109A  ECF5  F02B         	call	___flneg	;wreg free
  4143  00109E  C014  F0BB         	movff	?___flneg,efgtoa@g
  4144  0010A2  C015  F0BC         	movff	?___flneg+1,efgtoa@g+1
  4145  0010A6  C016  F0BD         	movff	?___flneg+2,efgtoa@g+2
  4146  0010AA  C017  F0BE         	movff	?___flneg+3,efgtoa@g+3
  4147  0010AE                     l8309:
  4148                           
  4149                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  4150  0010AE  0E00               	movlw	0
  4151  0010B0  0100               	movlb	0	; () banked
  4152  0010B2  6FC2               	movwf	(efgtoa@n+1)& (0+255),b
  4153  0010B4  0E00               	movlw	0
  4154  0010B6  6FC1               	movwf	efgtoa@n& (0+255),b
  4155  0010B8                     
  4156                           ; BSR set to: 0
  4157                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  4158  0010B8  C03A  F0AD         	movff	_width,efgtoa@w
  4159  0010BC  C03B  F0AE         	movff	_width+1,efgtoa@w+1
  4160  0010C0                     
  4161                           ; BSR set to: 0
  4162                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  4163  0010C0  51A9               	movf	efgtoa@sign& (0+255),w,b
  4164  0010C2  11AA               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4165  0010C4  A4D8               	btfss	status,2,c
  4166  0010C6  EF67  F008         	goto	u8921
  4167  0010CA  EF69  F008         	goto	u8920
  4168  0010CE                     u8921:
  4169  0010CE  EF70  F008         	goto	l8317
  4170  0010D2                     u8920:
  4171  0010D2                     
  4172                           ; BSR set to: 0
  4173  0010D2  A43E               	btfss	_flags^0,2,c
  4174  0010D4  EF6E  F008         	goto	u8931
  4175  0010D8  EF70  F008         	goto	u8930
  4176  0010DC                     u8931:
  4177  0010DC  EF8A  F008         	goto	l8329
  4178  0010E0                     u8930:
  4179  0010E0                     l8317:
  4180                           
  4181                           ; BSR set to: 0
  4182                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  4183  0010E0  51A9               	movf	efgtoa@sign& (0+255),w,b
  4184  0010E2  11AA               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4185  0010E4  A4D8               	btfss	status,2,c
  4186  0010E6  EF77  F008         	goto	u8941
  4187  0010EA  EF79  F008         	goto	u8940
  4188  0010EE                     u8941:
  4189  0010EE  EF7F  F008         	goto	l8321
  4190  0010F2                     u8940:
  4191  0010F2                     
  4192                           ; BSR set to: 0
  4193  0010F2  0E00               	movlw	0
  4194  0010F4  6F90               	movwf	(_efgtoa$3552+1)& (0+255),b
  4195  0010F6  0E2B               	movlw	43
  4196  0010F8  6F8F               	movwf	_efgtoa$3552& (0+255),b
  4197  0010FA  EF83  F008         	goto	l8323
  4198  0010FE                     l8321:
  4199                           
  4200                           ; BSR set to: 0
  4201  0010FE  0E00               	movlw	0
  4202  001100  6F90               	movwf	(_efgtoa$3552+1)& (0+255),b
  4203  001102  0E2D               	movlw	45
  4204  001104  6F8F               	movwf	_efgtoa$3552& (0+255),b
  4205  001106                     l8323:
  4206                           
  4207                           ; BSR set to: 0
  4208  001106  C08F  F134         	movff	_efgtoa$3552,_dbuf
  4209  00110A                     
  4210                           ; BSR set to: 0
  4211                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 351:         ++n;
  4212  00110A  4BC1               	infsnz	efgtoa@n& (0+255),f,b
  4213  00110C  2BC2               	incf	(efgtoa@n+1)& (0+255),f,b
  4214  00110E                     
  4215                           ; BSR set to: 0
  4216                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 352:         --w;
  4217  00110E  07AD               	decf	efgtoa@w& (0+255),f,b
  4218  001110  A0D8               	btfss	status,0,c
  4219  001112  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  4220  001114                     l8329:
  4221                           
  4222                           ; BSR set to: 0
  4223                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 357:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  4224  001114  C0BB  F014         	movff	efgtoa@g,___fpclassifyf@x
  4225  001118  C0BC  F015         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4226  00111C  C0BD  F016         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4227  001120  C0BE  F017         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4228  001124  EC3F  F024         	call	___fpclassifyf	;wreg free
  4229  001128  0414               	decf	?___fpclassifyf^0,w,c
  4230  00112A  1015               	iorwf	(?___fpclassifyf+1)^0,w,c
  4231  00112C  A4D8               	btfss	status,2,c
  4232  00112E  EF9B  F008         	goto	u8951
  4233  001132  EF9D  F008         	goto	u8950
  4234  001136                     u8951:
  4235  001136  EFF4  F008         	goto	l8347
  4236  00113A                     u8950:
  4237  00113A  0EBF               	movlw	191
  4238  00113C  0100               	movlb	0	; () banked
  4239  00113E  6F8A               	movwf	??_efgtoa& (0+255),b
  4240  001140  0EFF               	movlw	255
  4241  001142  6F8B               	movwf	(??_efgtoa+1)& (0+255),b
  4242  001144  5189               	movf	efgtoa@c& (0+255),w,b
  4243  001146  6F8C               	movwf	(??_efgtoa+2)& (0+255),b
  4244  001148  6B8D               	clrf	(??_efgtoa+3)& (0+255),b
  4245  00114A  518A               	movf	??_efgtoa& (0+255),w,b
  4246  00114C  278C               	addwf	(??_efgtoa+2)& (0+255),f,b
  4247  00114E  518B               	movf	(??_efgtoa+1)& (0+255),w,b
  4248  001150  238D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4249  001152  518D               	movf	(??_efgtoa+3)& (0+255),w,b
  4250  001154  E10A               	bnz	u8960
  4251  001156  0E1A               	movlw	26
  4252  001158  5D8C               	subwf	(??_efgtoa+2)& (0+255),w,b
  4253  00115A  A0D8               	btfss	status,0,c
  4254  00115C  EFB2  F008         	goto	u8961
  4255  001160  EFB5  F008         	goto	u8960
  4256  001164                     u8961:
  4257  001164  0E01               	movlw	1
  4258  001166  EFB6  F008         	goto	u8970
  4259  00116A                     u8960:
  4260  00116A  0E00               	movlw	0
  4261  00116C                     u8970:
  4262  00116C  6F91               	movwf	_efgtoa$3553& (0+255),b
  4263  00116E  6B92               	clrf	(_efgtoa$3553+1)& (0+255),b
  4264  001170                     
  4265                           ; BSR set to: 0
  4266  001170  5191               	movf	_efgtoa$3553& (0+255),w,b
  4267  001172  1192               	iorwf	(_efgtoa$3553+1)& (0+255),w,b
  4268  001174  B4D8               	btfsc	status,2,c
  4269  001176  EFBF  F008         	goto	u8981
  4270  00117A  EFC1  F008         	goto	u8980
  4271  00117E                     u8981:
  4272  00117E  EFCF  F008         	goto	l8339
  4273  001182                     u8980:
  4274  001182                     
  4275                           ; BSR set to: 0
  4276                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  4277  001182  0E34               	movlw	low _dbuf
  4278  001184  25C1               	addwf	efgtoa@n& (0+255),w,b
  4279  001186  6E14               	movwf	strcpy@dest^0,c
  4280  001188  0E01               	movlw	high _dbuf
  4281  00118A  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4282  00118C  6E15               	movwf	(strcpy@dest+1)^0,c
  4283  00118E  0E46               	movlw	low STR_6
  4284  001190  6E16               	movwf	strcpy@src^0,c
  4285  001192  0E10               	movlw	high STR_6
  4286  001194  6E17               	movwf	(strcpy@src+1)^0,c
  4287  001196  EC46  F029         	call	_strcpy	;wreg free
  4288                           
  4289                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  4290  00119A  EFDB  F008         	goto	l8341
  4291  00119E                     l8339:
  4292                           
  4293                           ; BSR set to: 0
  4294                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  4295  00119E  0E34               	movlw	low _dbuf
  4296  0011A0  25C1               	addwf	efgtoa@n& (0+255),w,b
  4297  0011A2  6E14               	movwf	strcpy@dest^0,c
  4298  0011A4  0E01               	movlw	high _dbuf
  4299  0011A6  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4300  0011A8  6E15               	movwf	(strcpy@dest+1)^0,c
  4301  0011AA  0E4E               	movlw	low STR_7
  4302  0011AC  6E16               	movwf	strcpy@src^0,c
  4303  0011AE  0E10               	movlw	high STR_7
  4304  0011B0  6E17               	movwf	(strcpy@src+1)^0,c
  4305  0011B2  EC46  F029         	call	_strcpy	;wreg free
  4306  0011B6                     l8341:
  4307                           
  4308                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  4309  0011B6  0100               	movlb	0	; () banked
  4310  0011B8  0EFD               	movlw	253
  4311  0011BA  27AD               	addwf	efgtoa@w& (0+255),f,b
  4312  0011BC  0EFF               	movlw	255
  4313  0011BE  23AE               	addwfc	(efgtoa@w+1)& (0+255),f,b
  4314  0011C0                     
  4315                           ; BSR set to: 0
  4316                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  4317  0011C0  C083  F026         	movff	efgtoa@fp,pad@fp
  4318  0011C4  C084  F027         	movff	efgtoa@fp+1,pad@fp+1
  4319  0011C8  0E34               	movlw	low _dbuf
  4320  0011CA  6E28               	movwf	pad@buf^0,c
  4321  0011CC  0E01               	movlw	high _dbuf
  4322  0011CE  6E29               	movwf	(pad@buf+1)^0,c
  4323  0011D0  C0AD  F02A         	movff	efgtoa@w,pad@p
  4324  0011D4  C0AE  F02B         	movff	efgtoa@w+1,pad@p+1
  4325  0011D8  EC70  F026         	call	_pad	;wreg free
  4326  0011DC  C026  F083         	movff	?_pad,?_efgtoa
  4327  0011E0  C027  F084         	movff	?_pad+1,?_efgtoa+1
  4328  0011E4  EF83  F00E         	goto	l2163
  4329  0011E8                     l8347:
  4330                           
  4331                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 366:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  4332  0011E8  C0BB  F014         	movff	efgtoa@g,___fpclassifyf@x
  4333  0011EC  C0BC  F015         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4334  0011F0  C0BD  F016         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4335  0011F4  C0BE  F017         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4336  0011F8  EC3F  F024         	call	___fpclassifyf	;wreg free
  4337  0011FC  5014               	movf	?___fpclassifyf^0,w,c
  4338  0011FE  1015               	iorwf	(?___fpclassifyf+1)^0,w,c
  4339  001200  A4D8               	btfss	status,2,c
  4340  001202  EF05  F009         	goto	u8991
  4341  001206  EF07  F009         	goto	u8990
  4342  00120A                     u8991:
  4343  00120A  EF5E  F009         	goto	l8365
  4344  00120E                     u8990:
  4345  00120E  0EBF               	movlw	191
  4346  001210  0100               	movlb	0	; () banked
  4347  001212  6F8A               	movwf	??_efgtoa& (0+255),b
  4348  001214  0EFF               	movlw	255
  4349  001216  6F8B               	movwf	(??_efgtoa+1)& (0+255),b
  4350  001218  5189               	movf	efgtoa@c& (0+255),w,b
  4351  00121A  6F8C               	movwf	(??_efgtoa+2)& (0+255),b
  4352  00121C  6B8D               	clrf	(??_efgtoa+3)& (0+255),b
  4353  00121E  518A               	movf	??_efgtoa& (0+255),w,b
  4354  001220  278C               	addwf	(??_efgtoa+2)& (0+255),f,b
  4355  001222  518B               	movf	(??_efgtoa+1)& (0+255),w,b
  4356  001224  238D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4357  001226  518D               	movf	(??_efgtoa+3)& (0+255),w,b
  4358  001228  E10A               	bnz	u9000
  4359  00122A  0E1A               	movlw	26
  4360  00122C  5D8C               	subwf	(??_efgtoa+2)& (0+255),w,b
  4361  00122E  A0D8               	btfss	status,0,c
  4362  001230  EF1C  F009         	goto	u9001
  4363  001234  EF1F  F009         	goto	u9000
  4364  001238                     u9001:
  4365  001238  0E01               	movlw	1
  4366  00123A  EF20  F009         	goto	u9010
  4367  00123E                     u9000:
  4368  00123E  0E00               	movlw	0
  4369  001240                     u9010:
  4370  001240  6F93               	movwf	_efgtoa$3557& (0+255),b
  4371  001242  6B94               	clrf	(_efgtoa$3557+1)& (0+255),b
  4372  001244                     
  4373                           ; BSR set to: 0
  4374  001244  5193               	movf	_efgtoa$3557& (0+255),w,b
  4375  001246  1194               	iorwf	(_efgtoa$3557+1)& (0+255),w,b
  4376  001248  B4D8               	btfsc	status,2,c
  4377  00124A  EF29  F009         	goto	u9021
  4378  00124E  EF2B  F009         	goto	u9020
  4379  001252                     u9021:
  4380  001252  EF39  F009         	goto	l8357
  4381  001256                     u9020:
  4382  001256                     
  4383                           ; BSR set to: 0
  4384                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  4385  001256  0E34               	movlw	low _dbuf
  4386  001258  25C1               	addwf	efgtoa@n& (0+255),w,b
  4387  00125A  6E14               	movwf	strcpy@dest^0,c
  4388  00125C  0E01               	movlw	high _dbuf
  4389  00125E  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4390  001260  6E15               	movwf	(strcpy@dest+1)^0,c
  4391  001262  0E4A               	movlw	low STR_10
  4392  001264  6E16               	movwf	strcpy@src^0,c
  4393  001266  0E10               	movlw	high STR_10
  4394  001268  6E17               	movwf	(strcpy@src+1)^0,c
  4395  00126A  EC46  F029         	call	_strcpy	;wreg free
  4396                           
  4397                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  4398  00126E  EF45  F009         	goto	l8359
  4399  001272                     l8357:
  4400                           
  4401                           ; BSR set to: 0
  4402                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  4403  001272  0E34               	movlw	low _dbuf
  4404  001274  25C1               	addwf	efgtoa@n& (0+255),w,b
  4405  001276  6E14               	movwf	strcpy@dest^0,c
  4406  001278  0E01               	movlw	high _dbuf
  4407  00127A  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4408  00127C  6E15               	movwf	(strcpy@dest+1)^0,c
  4409  00127E  0E52               	movlw	low STR_11
  4410  001280  6E16               	movwf	strcpy@src^0,c
  4411  001282  0E10               	movlw	high STR_11
  4412  001284  6E17               	movwf	(strcpy@src+1)^0,c
  4413  001286  EC46  F029         	call	_strcpy	;wreg free
  4414  00128A                     l8359:
  4415                           
  4416                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 371:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  4417  00128A  0100               	movlb	0	; () banked
  4418  00128C  0EFD               	movlw	253
  4419  00128E  27AD               	addwf	efgtoa@w& (0+255),f,b
  4420  001290  0EFF               	movlw	255
  4421  001292  23AE               	addwfc	(efgtoa@w+1)& (0+255),f,b
  4422  001294                     
  4423                           ; BSR set to: 0
  4424                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 372:         retu
      +                          rn pad(fp, &dbuf[0], w);
  4425  001294  C083  F026         	movff	efgtoa@fp,pad@fp
  4426  001298  C084  F027         	movff	efgtoa@fp+1,pad@fp+1
  4427  00129C  0E34               	movlw	low _dbuf
  4428  00129E  6E28               	movwf	pad@buf^0,c
  4429  0012A0  0E01               	movlw	high _dbuf
  4430  0012A2  6E29               	movwf	(pad@buf+1)^0,c
  4431  0012A4  C0AD  F02A         	movff	efgtoa@w,pad@p
  4432  0012A8  C0AE  F02B         	movff	efgtoa@w+1,pad@p+1
  4433  0012AC  EC70  F026         	call	_pad	;wreg free
  4434  0012B0  C026  F083         	movff	?_pad,?_efgtoa
  4435  0012B4  C027  F084         	movff	?_pad+1,?_efgtoa+1
  4436  0012B8  EF83  F00E         	goto	l2163
  4437  0012BC                     l8365:
  4438                           
  4439                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  4440  0012BC  0E00               	movlw	0
  4441  0012BE  0100               	movlb	0	; () banked
  4442  0012C0  6FC3               	movwf	efgtoa@u& (0+255),b
  4443  0012C2  0E00               	movlw	0
  4444  0012C4  6FC4               	movwf	(efgtoa@u+1)& (0+255),b
  4445  0012C6  0E80               	movlw	128
  4446  0012C8  6FC5               	movwf	(efgtoa@u+2)& (0+255),b
  4447  0012CA  0E3F               	movlw	63
  4448  0012CC  6FC6               	movwf	(efgtoa@u+3)& (0+255),b
  4449                           
  4450                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  4451  0012CE  0E00               	movlw	0
  4452  0012D0  6FC0               	movwf	(efgtoa@e+1)& (0+255),b
  4453  0012D2  0E00               	movlw	0
  4454  0012D4  6FBF               	movwf	efgtoa@e& (0+255),b
  4455  0012D6                     
  4456                           ; BSR set to: 0
  4457                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  4458  0012D6  C0BB  F014         	movff	efgtoa@g,___fleq@ff1
  4459  0012DA  C0BC  F015         	movff	efgtoa@g+1,___fleq@ff1+1
  4460  0012DE  C0BD  F016         	movff	efgtoa@g+2,___fleq@ff1+2
  4461  0012E2  C0BE  F017         	movff	efgtoa@g+3,___fleq@ff1+3
  4462  0012E6  0E00               	movlw	0
  4463  0012E8  6E18               	movwf	___fleq@ff2^0,c
  4464  0012EA  0E00               	movlw	0
  4465  0012EC  6E19               	movwf	(___fleq@ff2+1)^0,c
  4466  0012EE  0E00               	movlw	0
  4467  0012F0  6E1A               	movwf	(___fleq@ff2+2)^0,c
  4468  0012F2  0E00               	movlw	0
  4469  0012F4  6E1B               	movwf	(___fleq@ff2+3)^0,c
  4470  0012F6  EC89  F027         	call	___fleq	;wreg free
  4471  0012FA  B0D8               	btfsc	status,0,c
  4472  0012FC  EF82  F009         	goto	u9031
  4473  001300  EF84  F009         	goto	u9030
  4474  001304                     u9031:
  4475  001304  EF09  F00A         	goto	l8383
  4476  001308                     u9030:
  4477  001308  EFA3  F009         	goto	l8375
  4478  00130C                     l8371:
  4479                           
  4480                           ; BSR set to: 0
  4481                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  4482  00130C  C0C3  F02A         	movff	efgtoa@u,___flmul@b
  4483  001310  C0C4  F02B         	movff	efgtoa@u+1,___flmul@b+1
  4484  001314  C0C5  F02C         	movff	efgtoa@u+2,___flmul@b+2
  4485  001318  C0C6  F02D         	movff	efgtoa@u+3,___flmul@b+3
  4486  00131C  0E00               	movlw	0
  4487  00131E  6E2E               	movwf	___flmul@a^0,c
  4488  001320  0E00               	movlw	0
  4489  001322  6E2F               	movwf	(___flmul@a+1)^0,c
  4490  001324  0E20               	movlw	32
  4491  001326  6E30               	movwf	(___flmul@a+2)^0,c
  4492  001328  0E41               	movlw	65
  4493  00132A  6E31               	movwf	(___flmul@a+3)^0,c
  4494  00132C  EC76  F013         	call	___flmul	;wreg free
  4495  001330  C02A  F0C3         	movff	?___flmul,efgtoa@u
  4496  001334  C02B  F0C4         	movff	?___flmul+1,efgtoa@u+1
  4497  001338  C02C  F0C5         	movff	?___flmul+2,efgtoa@u+2
  4498  00133C  C02D  F0C6         	movff	?___flmul+3,efgtoa@u+3
  4499  001340                     
  4500                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  4501  001340  0100               	movlb	0	; () banked
  4502  001342  4BBF               	infsnz	efgtoa@e& (0+255),f,b
  4503  001344  2BC0               	incf	(efgtoa@e+1)& (0+255),f,b
  4504  001346                     l8375:
  4505                           
  4506                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  4507  001346  C0BB  F06D         	movff	efgtoa@g,___flge@ff1
  4508  00134A  C0BC  F06E         	movff	efgtoa@g+1,___flge@ff1+1
  4509  00134E  C0BD  F06F         	movff	efgtoa@g+2,___flge@ff1+2
  4510  001352  C0BE  F070         	movff	efgtoa@g+3,___flge@ff1+3
  4511  001356  0E00               	movlw	0
  4512  001358  6E2E               	movwf	___flmul@a^0,c
  4513  00135A  0E00               	movlw	0
  4514  00135C  6E2F               	movwf	(___flmul@a+1)^0,c
  4515  00135E  0E20               	movlw	32
  4516  001360  6E30               	movwf	(___flmul@a+2)^0,c
  4517  001362  0E41               	movlw	65
  4518  001364  6E31               	movwf	(___flmul@a+3)^0,c
  4519  001366  C0C3  F02A         	movff	efgtoa@u,___flmul@b
  4520  00136A  C0C4  F02B         	movff	efgtoa@u+1,___flmul@b+1
  4521  00136E  C0C5  F02C         	movff	efgtoa@u+2,___flmul@b+2
  4522  001372  C0C6  F02D         	movff	efgtoa@u+3,___flmul@b+3
  4523  001376  EC76  F013         	call	___flmul	;wreg free
  4524  00137A  C02A  F071         	movff	?___flmul,___flge@ff2
  4525  00137E  C02B  F072         	movff	?___flmul+1,___flge@ff2+1
  4526  001382  C02C  F073         	movff	?___flmul+2,___flge@ff2+2
  4527  001386  C02D  F074         	movff	?___flmul+3,___flge@ff2+3
  4528  00138A  ECBC  F023         	call	___flge	;wreg free
  4529  00138E  0100               	movlb	0	; () banked
  4530  001390  B0D8               	btfsc	status,0,c
  4531  001392  EFCD  F009         	goto	u9041
  4532  001396  EFCF  F009         	goto	u9040
  4533  00139A                     u9041:
  4534  00139A  EF86  F009         	goto	l8371
  4535  00139E                     u9040:
  4536  00139E  EFEF  F009         	goto	l8381
  4537  0013A2                     l8377:
  4538                           
  4539                           ; BSR set to: 0
  4540                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  4541  0013A2  C0C3  F014         	movff	efgtoa@u,___fldiv@b
  4542  0013A6  C0C4  F015         	movff	efgtoa@u+1,___fldiv@b+1
  4543  0013AA  C0C5  F016         	movff	efgtoa@u+2,___fldiv@b+2
  4544  0013AE  C0C6  F017         	movff	efgtoa@u+3,___fldiv@b+3
  4545  0013B2  0E00               	movlw	0
  4546  0013B4  6E18               	movwf	___fldiv@a^0,c
  4547  0013B6  0E00               	movlw	0
  4548  0013B8  6E19               	movwf	(___fldiv@a+1)^0,c
  4549  0013BA  0E20               	movlw	32
  4550  0013BC  6E1A               	movwf	(___fldiv@a+2)^0,c
  4551  0013BE  0E41               	movlw	65
  4552  0013C0  6E1B               	movwf	(___fldiv@a+3)^0,c
  4553  0013C2  EC9E  F015         	call	___fldiv	;wreg free
  4554  0013C6  C014  F0C3         	movff	?___fldiv,efgtoa@u
  4555  0013CA  C015  F0C4         	movff	?___fldiv+1,efgtoa@u+1
  4556  0013CE  C016  F0C5         	movff	?___fldiv+2,efgtoa@u+2
  4557  0013D2  C017  F0C6         	movff	?___fldiv+3,efgtoa@u+3
  4558  0013D6                     
  4559                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  4560  0013D6  0100               	movlb	0	; () banked
  4561  0013D8  07BF               	decf	efgtoa@e& (0+255),f,b
  4562  0013DA  A0D8               	btfss	status,0,c
  4563  0013DC  07C0               	decf	(efgtoa@e+1)& (0+255),f,b
  4564  0013DE                     l8381:
  4565                           
  4566                           ; BSR set to: 0
  4567                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  4568  0013DE  C0BB  F06D         	movff	efgtoa@g,___flge@ff1
  4569  0013E2  C0BC  F06E         	movff	efgtoa@g+1,___flge@ff1+1
  4570  0013E6  C0BD  F06F         	movff	efgtoa@g+2,___flge@ff1+2
  4571  0013EA  C0BE  F070         	movff	efgtoa@g+3,___flge@ff1+3
  4572  0013EE  C0C3  F071         	movff	efgtoa@u,___flge@ff2
  4573  0013F2  C0C4  F072         	movff	efgtoa@u+1,___flge@ff2+1
  4574  0013F6  C0C5  F073         	movff	efgtoa@u+2,___flge@ff2+2
  4575  0013FA  C0C6  F074         	movff	efgtoa@u+3,___flge@ff2+3
  4576  0013FE  ECBC  F023         	call	___flge	;wreg free
  4577  001402  0100               	movlb	0	; () banked
  4578  001404  A0D8               	btfss	status,0,c
  4579  001406  EF07  F00A         	goto	u9051
  4580  00140A  EF09  F00A         	goto	u9050
  4581  00140E                     u9051:
  4582  00140E  EFD1  F009         	goto	l8377
  4583  001412                     u9050:
  4584  001412                     l8383:
  4585                           
  4586                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  4587  001412  C089  F01A         	movff	efgtoa@c,tolower@c
  4588  001416  6A1B               	clrf	(tolower@c+1)^0,c
  4589  001418  ECAE  F029         	call	_tolower	;wreg free
  4590  00141C  501A               	movf	?_tolower^0,w,c
  4591  00141E  0100               	movlb	0	; () banked
  4592  001420  6FB0               	movwf	efgtoa@mode& (0+255),b
  4593  001422                     
  4594                           ; BSR set to: 0
  4595                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  4596  001422  C0B0  F0AF         	movff	efgtoa@mode,efgtoa@nmode
  4597  001426                     
  4598                           ; BSR set to: 0
  4599                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  4600  001426  0E67               	movlw	103
  4601  001428  19B0               	xorwf	efgtoa@mode& (0+255),w,b
  4602  00142A  A4D8               	btfss	status,2,c
  4603  00142C  EF1A  F00A         	goto	u9061
  4604  001430  EF1C  F00A         	goto	u9060
  4605  001434                     u9061:
  4606  001434  EF42  F00A         	goto	l8397
  4607  001438                     u9060:
  4608  001438                     
  4609                           ; BSR set to: 0
  4610                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  4611  001438  503C               	movf	_prec^0,w,c
  4612  00143A  103D               	iorwf	(_prec+1)^0,w,c
  4613  00143C  A4D8               	btfss	status,2,c
  4614  00143E  EF23  F00A         	goto	u9071
  4615  001442  EF25  F00A         	goto	u9070
  4616  001446                     u9071:
  4617  001446  EF29  F00A         	goto	l8393
  4618  00144A                     u9070:
  4619  00144A                     
  4620                           ; BSR set to: 0
  4621                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  4622  00144A  0E00               	movlw	0
  4623  00144C  6E3D               	movwf	(_prec+1)^0,c
  4624  00144E  0E01               	movlw	1
  4625  001450  6E3C               	movwf	_prec^0,c
  4626  001452                     l8393:
  4627                           
  4628                           ; BSR set to: 0
  4629                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  4630  001452  BE3D               	btfsc	(_prec+1)^0,7,c
  4631  001454  EF36  F00A         	goto	u9080
  4632  001458  503D               	movf	(_prec+1)^0,w,c
  4633  00145A  E106               	bnz	u9081
  4634  00145C  043C               	decf	_prec^0,w,c
  4635  00145E  B0D8               	btfsc	status,0,c
  4636  001460  EF34  F00A         	goto	u9081
  4637  001464  EF36  F00A         	goto	u9080
  4638  001468                     u9081:
  4639  001468  EF3C  F00A         	goto	l2181
  4640  00146C                     u9080:
  4641  00146C                     l8395:
  4642                           
  4643                           ; BSR set to: 0
  4644  00146C  0E00               	movlw	0
  4645  00146E  6FAC               	movwf	(efgtoa@p+1)& (0+255),b
  4646  001470  0E06               	movlw	6
  4647  001472  6FAB               	movwf	efgtoa@p& (0+255),b
  4648  001474  EF4B  F00A         	goto	l8403
  4649  001478                     l2181:
  4650                           
  4651                           ; BSR set to: 0
  4652  001478  C03C  F0AB         	movff	_prec,efgtoa@p
  4653  00147C  C03D  F0AC         	movff	_prec+1,efgtoa@p+1
  4654  001480  EF4B  F00A         	goto	l8403
  4655  001484                     l8397:
  4656                           
  4657                           ; BSR set to: 0
  4658                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  4659  001484  BE3D               	btfsc	(_prec+1)^0,7,c
  4660  001486  EF47  F00A         	goto	u9091
  4661  00148A  EF49  F00A         	goto	u9090
  4662  00148E                     u9091:
  4663  00148E  EF36  F00A         	goto	l8395
  4664  001492                     u9090:
  4665  001492  EF3C  F00A         	goto	l2181
  4666  001496                     l8403:
  4667                           
  4668                           ; BSR set to: 0
  4669                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  4670  001496  0E67               	movlw	103
  4671  001498  19B0               	xorwf	efgtoa@mode& (0+255),w,b
  4672  00149A  A4D8               	btfss	status,2,c
  4673  00149C  EF52  F00A         	goto	u9101
  4674  0014A0  EF54  F00A         	goto	u9100
  4675  0014A4                     u9101:
  4676  0014A4  EF83  F00A         	goto	l8413
  4677  0014A8                     u9100:
  4678  0014A8                     
  4679                           ; BSR set to: 0
  4680                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  4681  0014A8  AFC0               	btfss	(efgtoa@e+1)& (0+255),7,b
  4682  0014AA  EF62  F00A         	goto	u9110
  4683  0014AE  0EFC               	movlw	252
  4684  0014B0  5DBF               	subwf	efgtoa@e& (0+255),w,b
  4685  0014B2  0EFF               	movlw	255
  4686  0014B4  59C0               	subwfb	(efgtoa@e+1)& (0+255),w,b
  4687  0014B6  A0D8               	btfss	status,0,c
  4688  0014B8  EF60  F00A         	goto	u9111
  4689  0014BC  EF62  F00A         	goto	u9110
  4690  0014C0                     u9111:
  4691  0014C0  EF81  F00A         	goto	l8411
  4692  0014C4                     u9110:
  4693  0014C4                     
  4694                           ; BSR set to: 0
  4695  0014C4  0EFF               	movlw	255
  4696  0014C6  6F8A               	movwf	??_efgtoa& (0+255),b
  4697  0014C8  0EFF               	movlw	255
  4698  0014CA  6F8B               	movwf	(??_efgtoa+1)& (0+255),b
  4699  0014CC  C0AB  F08C         	movff	efgtoa@p,??_efgtoa+2
  4700  0014D0  C0AC  F08D         	movff	efgtoa@p+1,??_efgtoa+3
  4701  0014D4  518A               	movf	??_efgtoa& (0+255),w,b
  4702  0014D6  278C               	addwf	(??_efgtoa+2)& (0+255),f,b
  4703  0014D8  518B               	movf	(??_efgtoa+1)& (0+255),w,b
  4704  0014DA  238D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4705  0014DC  51BF               	movf	efgtoa@e& (0+255),w,b
  4706  0014DE  5D8C               	subwf	(??_efgtoa+2)& (0+255),w,b
  4707  0014E0  518D               	movf	(??_efgtoa+3)& (0+255),w,b
  4708  0014E2  0A80               	xorlw	128
  4709  0014E4  6F8E               	movwf	(??_efgtoa+4)& (0+255),b
  4710  0014E6  51C0               	movf	(efgtoa@e+1)& (0+255),w,b
  4711  0014E8  0A80               	xorlw	128
  4712  0014EA  598E               	subwfb	(??_efgtoa+4)& (0+255),w,b
  4713  0014EC  A0D8               	btfss	status,0,c
  4714  0014EE  EF7B  F00A         	goto	u9121
  4715  0014F2  EF7D  F00A         	goto	u9120
  4716  0014F6                     u9121:
  4717  0014F6  EF81  F00A         	goto	l8411
  4718  0014FA                     u9120:
  4719  0014FA                     
  4720                           ; BSR set to: 0
  4721                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  4722  0014FA  0E66               	movlw	102
  4723  0014FC  6FAF               	movwf	efgtoa@nmode& (0+255),b
  4724                           
  4725                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  4726  0014FE  EF83  F00A         	goto	l8413
  4727  001502                     l8411:
  4728                           
  4729                           ; BSR set to: 0
  4730                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  4731  001502  0E65               	movlw	101
  4732  001504  6FAF               	movwf	efgtoa@nmode& (0+255),b
  4733  001506                     l8413:
  4734                           
  4735                           ; BSR set to: 0
  4736                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 411:     m = p;
  4737  001506  C0AB  F0A1         	movff	efgtoa@p,efgtoa@m
  4738  00150A  C0AC  F0A2         	movff	efgtoa@p+1,efgtoa@m+1
  4739  00150E                     
  4740                           ; BSR set to: 0
  4741                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  4742  00150E  0E67               	movlw	103
  4743  001510  19B0               	xorwf	efgtoa@mode& (0+255),w,b
  4744  001512  A4D8               	btfss	status,2,c
  4745  001514  EF8E  F00A         	goto	u9131
  4746  001518  EF90  F00A         	goto	u9130
  4747  00151C                     u9131:
  4748  00151C  EFA0  F00A         	goto	l8421
  4749  001520                     u9130:
  4750  001520                     
  4751                           ; BSR set to: 0
  4752  001520  0E66               	movlw	102
  4753  001522  19AF               	xorwf	efgtoa@nmode& (0+255),w,b
  4754  001524  A4D8               	btfss	status,2,c
  4755  001526  EF97  F00A         	goto	u9141
  4756  00152A  EF99  F00A         	goto	u9140
  4757  00152E                     u9141:
  4758  00152E  EFA2  F00A         	goto	l8423
  4759  001532                     u9140:
  4760  001532                     
  4761                           ; BSR set to: 0
  4762  001532  BFC0               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4763  001534  EFA0  F00A         	goto	u9150
  4764  001538  EF9E  F00A         	goto	u9151
  4765  00153C                     u9151:
  4766  00153C  EFA2  F00A         	goto	l8423
  4767  001540                     u9150:
  4768  001540                     l8421:
  4769                           
  4770                           ; BSR set to: 0
  4771                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 413:         ++m;
  4772  001540  4BA1               	infsnz	efgtoa@m& (0+255),f,b
  4773  001542  2BA2               	incf	(efgtoa@m+1)& (0+255),f,b
  4774  001544                     l8423:
  4775                           
  4776                           ; BSR set to: 0
  4777                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  4778  001544  0E66               	movlw	102
  4779  001546  19AF               	xorwf	efgtoa@nmode& (0+255),w,b
  4780  001548  A4D8               	btfss	status,2,c
  4781  00154A  EFA9  F00A         	goto	u9161
  4782  00154E  EFAB  F00A         	goto	u9160
  4783  001552                     u9161:
  4784  001552  EFCB  F00A         	goto	l8433
  4785  001556                     u9160:
  4786  001556                     
  4787                           ; BSR set to: 0
  4788                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  4789  001556  BFC0               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4790  001558  EFB2  F00A         	goto	u9170
  4791  00155C  EFB0  F00A         	goto	u9171
  4792  001560                     u9171:
  4793  001560  EFBE  F00A         	goto	l8429
  4794  001564                     u9170:
  4795  001564                     
  4796                           ; BSR set to: 0
  4797                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  4798  001564  0E00               	movlw	0
  4799  001566  6FC3               	movwf	efgtoa@u& (0+255),b
  4800  001568  0E00               	movlw	0
  4801  00156A  6FC4               	movwf	(efgtoa@u+1)& (0+255),b
  4802  00156C  0E80               	movlw	128
  4803  00156E  6FC5               	movwf	(efgtoa@u+2)& (0+255),b
  4804  001570  0E3F               	movlw	63
  4805  001572  6FC6               	movwf	(efgtoa@u+3)& (0+255),b
  4806                           
  4807                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  4808  001574  0E00               	movlw	0
  4809  001576  6FC0               	movwf	(efgtoa@e+1)& (0+255),b
  4810  001578  0E00               	movlw	0
  4811  00157A  6FBF               	movwf	efgtoa@e& (0+255),b
  4812  00157C                     l8429:
  4813                           
  4814                           ; BSR set to: 0
  4815                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  4816  00157C  0E67               	movlw	103
  4817  00157E  19B0               	xorwf	efgtoa@mode& (0+255),w,b
  4818  001580  B4D8               	btfsc	status,2,c
  4819  001582  EFC5  F00A         	goto	u9181
  4820  001586  EFC7  F00A         	goto	u9180
  4821  00158A                     u9181:
  4822  00158A  EFCB  F00A         	goto	l8433
  4823  00158E                     u9180:
  4824  00158E                     
  4825                           ; BSR set to: 0
  4826                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  4827  00158E  51BF               	movf	efgtoa@e& (0+255),w,b
  4828  001590  27A1               	addwf	efgtoa@m& (0+255),f,b
  4829  001592  51C0               	movf	(efgtoa@e+1)& (0+255),w,b
  4830  001594  23A2               	addwfc	(efgtoa@m+1)& (0+255),f,b
  4831  001596                     l8433:
  4832                           
  4833                           ; BSR set to: 0
  4834                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  4835  001596  0E00               	movlw	0
  4836  001598  6FBA               	movwf	(efgtoa@i+1)& (0+255),b
  4837  00159A  0E00               	movlw	0
  4838  00159C  6FB9               	movwf	efgtoa@i& (0+255),b
  4839  00159E                     
  4840                           ; BSR set to: 0
  4841                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 429:     h = g;
  4842  00159E  C0BB  F0B1         	movff	efgtoa@g,efgtoa@h
  4843  0015A2  C0BC  F0B2         	movff	efgtoa@g+1,efgtoa@h+1
  4844  0015A6  C0BD  F0B3         	movff	efgtoa@g+2,efgtoa@h+2
  4845  0015AA  C0BE  F0B4         	movff	efgtoa@g+3,efgtoa@h+3
  4846  0015AE                     
  4847                           ; BSR set to: 0
  4848                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  4849  0015AE  C0C3  F0A3         	movff	efgtoa@u,efgtoa@ou
  4850  0015B2  C0C4  F0A4         	movff	efgtoa@u+1,efgtoa@ou+1
  4851  0015B6  C0C5  F0A5         	movff	efgtoa@u+2,efgtoa@ou+2
  4852  0015BA  C0C6  F0A6         	movff	efgtoa@u+3,efgtoa@ou+3
  4853                           
  4854                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  4855  0015BE  EF5C  F00B         	goto	l8447
  4856  0015C2                     l8439:
  4857                           
  4858                           ; BSR set to: 0
  4859                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  4860  0015C2  C0B1  F014         	movff	efgtoa@h,___fldiv@b
  4861  0015C6  C0B2  F015         	movff	efgtoa@h+1,___fldiv@b+1
  4862  0015CA  C0B3  F016         	movff	efgtoa@h+2,___fldiv@b+2
  4863  0015CE  C0B4  F017         	movff	efgtoa@h+3,___fldiv@b+3
  4864  0015D2  C0C3  F018         	movff	efgtoa@u,___fldiv@a
  4865  0015D6  C0C4  F019         	movff	efgtoa@u+1,___fldiv@a+1
  4866  0015DA  C0C5  F01A         	movff	efgtoa@u+2,___fldiv@a+2
  4867  0015DE  C0C6  F01B         	movff	efgtoa@u+3,___fldiv@a+3
  4868  0015E2  EC9E  F015         	call	___fldiv	;wreg free
  4869  0015E6  C014  F02D         	movff	?___fldiv,floorf@x
  4870  0015EA  C015  F02E         	movff	?___fldiv+1,floorf@x+1
  4871  0015EE  C016  F02F         	movff	?___fldiv+2,floorf@x+2
  4872  0015F2  C017  F030         	movff	?___fldiv+3,floorf@x+3
  4873  0015F6  EC0F  F01A         	call	_floorf	;wreg free
  4874  0015FA  C02D  F0B5         	movff	?_floorf,efgtoa@l
  4875  0015FE  C02E  F0B6         	movff	?_floorf+1,efgtoa@l+1
  4876  001602  C02F  F0B7         	movff	?_floorf+2,efgtoa@l+2
  4877  001606  C030  F0B8         	movff	?_floorf+3,efgtoa@l+3
  4878                           
  4879                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  4880  00160A  C0B5  F079         	movff	efgtoa@l,___fltol@f1
  4881  00160E  C0B6  F07A         	movff	efgtoa@l+1,___fltol@f1+1
  4882  001612  C0B7  F07B         	movff	efgtoa@l+2,___fltol@f1+2
  4883  001616  C0B8  F07C         	movff	efgtoa@l+3,___fltol@f1+3
  4884  00161A  ECB5  F022         	call	___fltol	;wreg free
  4885  00161E  C079  F0A7         	movff	?___fltol,efgtoa@d
  4886  001622  C07A  F0A8         	movff	?___fltol+1,efgtoa@d+1
  4887  001626                     
  4888                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  4889  001626  C0B1  F079         	movff	efgtoa@h,___flsub@b
  4890  00162A  C0B2  F07A         	movff	efgtoa@h+1,___flsub@b+1
  4891  00162E  C0B3  F07B         	movff	efgtoa@h+2,___flsub@b+2
  4892  001632  C0B4  F07C         	movff	efgtoa@h+3,___flsub@b+3
  4893  001636  C0C3  F02E         	movff	efgtoa@u,___flmul@a
  4894  00163A  C0C4  F02F         	movff	efgtoa@u+1,___flmul@a+1
  4895  00163E  C0C5  F030         	movff	efgtoa@u+2,___flmul@a+2
  4896  001642  C0C6  F031         	movff	efgtoa@u+3,___flmul@a+3
  4897  001646  C0B5  F02A         	movff	efgtoa@l,___flmul@b
  4898  00164A  C0B6  F02B         	movff	efgtoa@l+1,___flmul@b+1
  4899  00164E  C0B7  F02C         	movff	efgtoa@l+2,___flmul@b+2
  4900  001652  C0B8  F02D         	movff	efgtoa@l+3,___flmul@b+3
  4901  001656  EC76  F013         	call	___flmul	;wreg free
  4902  00165A  C02A  F07D         	movff	?___flmul,___flsub@a
  4903  00165E  C02B  F07E         	movff	?___flmul+1,___flsub@a+1
  4904  001662  C02C  F07F         	movff	?___flmul+2,___flsub@a+2
  4905  001666  C02D  F080         	movff	?___flmul+3,___flsub@a+3
  4906  00166A  ECF9  F02A         	call	___flsub	;wreg free
  4907  00166E  C079  F0B1         	movff	?___flsub,efgtoa@h
  4908  001672  C07A  F0B2         	movff	?___flsub+1,efgtoa@h+1
  4909  001676  C07B  F0B3         	movff	?___flsub+2,efgtoa@h+2
  4910  00167A  C07C  F0B4         	movff	?___flsub+3,efgtoa@h+3
  4911  00167E                     
  4912                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  4913  00167E  C0C3  F014         	movff	efgtoa@u,___fldiv@b
  4914  001682  C0C4  F015         	movff	efgtoa@u+1,___fldiv@b+1
  4915  001686  C0C5  F016         	movff	efgtoa@u+2,___fldiv@b+2
  4916  00168A  C0C6  F017         	movff	efgtoa@u+3,___fldiv@b+3
  4917  00168E  0E00               	movlw	0
  4918  001690  6E18               	movwf	___fldiv@a^0,c
  4919  001692  0E00               	movlw	0
  4920  001694  6E19               	movwf	(___fldiv@a+1)^0,c
  4921  001696  0E20               	movlw	32
  4922  001698  6E1A               	movwf	(___fldiv@a+2)^0,c
  4923  00169A  0E41               	movlw	65
  4924  00169C  6E1B               	movwf	(___fldiv@a+3)^0,c
  4925  00169E  EC9E  F015         	call	___fldiv	;wreg free
  4926  0016A2  C014  F0C3         	movff	?___fldiv,efgtoa@u
  4927  0016A6  C015  F0C4         	movff	?___fldiv+1,efgtoa@u+1
  4928  0016AA  C016  F0C5         	movff	?___fldiv+2,efgtoa@u+2
  4929  0016AE  C017  F0C6         	movff	?___fldiv+3,efgtoa@u+3
  4930  0016B2                     
  4931                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 436:         ++i;
  4932  0016B2  0100               	movlb	0	; () banked
  4933  0016B4  4BB9               	infsnz	efgtoa@i& (0+255),f,b
  4934  0016B6  2BBA               	incf	(efgtoa@i+1)& (0+255),f,b
  4935  0016B8                     l8447:
  4936                           
  4937                           ; BSR set to: 0
  4938                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  4939  0016B8  51A1               	movf	efgtoa@m& (0+255),w,b
  4940  0016BA  5DB9               	subwf	efgtoa@i& (0+255),w,b
  4941  0016BC  51BA               	movf	(efgtoa@i+1)& (0+255),w,b
  4942  0016BE  0A80               	xorlw	128
  4943  0016C0  6F8A               	movwf	??_efgtoa& (0+255),b
  4944  0016C2  51A2               	movf	(efgtoa@m+1)& (0+255),w,b
  4945  0016C4  0A80               	xorlw	128
  4946  0016C6  598A               	subwfb	??_efgtoa& (0+255),w,b
  4947  0016C8  A0D8               	btfss	status,0,c
  4948  0016CA  EF69  F00B         	goto	u9191
  4949  0016CE  EF6B  F00B         	goto	u9190
  4950  0016D2                     u9191:
  4951  0016D2  EFE1  F00A         	goto	l8439
  4952  0016D6                     u9190:
  4953  0016D6                     
  4954                           ; BSR set to: 0
  4955                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  4956  0016D6  C0C3  F02A         	movff	efgtoa@u,___flmul@b
  4957  0016DA  C0C4  F02B         	movff	efgtoa@u+1,___flmul@b+1
  4958  0016DE  C0C5  F02C         	movff	efgtoa@u+2,___flmul@b+2
  4959  0016E2  C0C6  F02D         	movff	efgtoa@u+3,___flmul@b+3
  4960  0016E6  0E00               	movlw	0
  4961  0016E8  6E2E               	movwf	___flmul@a^0,c
  4962  0016EA  0E00               	movlw	0
  4963  0016EC  6E2F               	movwf	(___flmul@a+1)^0,c
  4964  0016EE  0EA0               	movlw	160
  4965  0016F0  6E30               	movwf	(___flmul@a+2)^0,c
  4966  0016F2  0E40               	movlw	64
  4967  0016F4  6E31               	movwf	(___flmul@a+3)^0,c
  4968  0016F6  EC76  F013         	call	___flmul	;wreg free
  4969  0016FA  C02A  F0B5         	movff	?___flmul,efgtoa@l
  4970  0016FE  C02B  F0B6         	movff	?___flmul+1,efgtoa@l+1
  4971  001702  C02C  F0B7         	movff	?___flmul+2,efgtoa@l+2
  4972  001706  C02D  F0B8         	movff	?___flmul+3,efgtoa@l+3
  4973  00170A                     
  4974                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  4975  00170A  C0B1  F06D         	movff	efgtoa@h,___flge@ff1
  4976  00170E  C0B2  F06E         	movff	efgtoa@h+1,___flge@ff1+1
  4977  001712  C0B3  F06F         	movff	efgtoa@h+2,___flge@ff1+2
  4978  001716  C0B4  F070         	movff	efgtoa@h+3,___flge@ff1+3
  4979  00171A  C0B5  F071         	movff	efgtoa@l,___flge@ff2
  4980  00171E  C0B6  F072         	movff	efgtoa@l+1,___flge@ff2+1
  4981  001722  C0B7  F073         	movff	efgtoa@l+2,___flge@ff2+2
  4982  001726  C0B8  F074         	movff	efgtoa@l+3,___flge@ff2+3
  4983  00172A  ECBC  F023         	call	___flge	;wreg free
  4984  00172E  0100               	movlb	0	; () banked
  4985  001730  B0D8               	btfsc	status,0,c
  4986  001732  EF9D  F00B         	goto	u9201
  4987  001736  EF9F  F00B         	goto	u9200
  4988  00173A                     u9201:
  4989  00173A  EFA9  F00B         	goto	l8455
  4990  00173E                     u9200:
  4991  00173E                     
  4992                           ; BSR set to: 0
  4993                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  4994  00173E  0E00               	movlw	0
  4995  001740  6FB5               	movwf	efgtoa@l& (0+255),b
  4996  001742  0E00               	movlw	0
  4997  001744  6FB6               	movwf	(efgtoa@l+1)& (0+255),b
  4998  001746  0E00               	movlw	0
  4999  001748  6FB7               	movwf	(efgtoa@l+2)& (0+255),b
  5000  00174A  0E00               	movlw	0
  5001  00174C  6FB8               	movwf	(efgtoa@l+3)& (0+255),b
  5002                           
  5003                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 443:     } else {
  5004  00174E  EFD2  F00B         	goto	l8461
  5005  001752                     l8455:
  5006                           
  5007                           ; BSR set to: 0
  5008                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  5009  001752  C0B1  F014         	movff	efgtoa@h,___fleq@ff1
  5010  001756  C0B2  F015         	movff	efgtoa@h+1,___fleq@ff1+1
  5011  00175A  C0B3  F016         	movff	efgtoa@h+2,___fleq@ff1+2
  5012  00175E  C0B4  F017         	movff	efgtoa@h+3,___fleq@ff1+3
  5013  001762  C0B5  F018         	movff	efgtoa@l,___fleq@ff2
  5014  001766  C0B6  F019         	movff	efgtoa@l+1,___fleq@ff2+1
  5015  00176A  C0B7  F01A         	movff	efgtoa@l+2,___fleq@ff2+2
  5016  00176E  C0B8  F01B         	movff	efgtoa@l+3,___fleq@ff2+3
  5017  001772  EC89  F027         	call	___fleq	;wreg free
  5018  001776  A0D8               	btfss	status,0,c
  5019  001778  EFC0  F00B         	goto	u9211
  5020  00177C  EFC2  F00B         	goto	u9210
  5021  001780                     u9211:
  5022  001780  EFD2  F00B         	goto	l8461
  5023  001784                     u9210:
  5024  001784  0100               	movlb	0	; () banked
  5025  001786  B1A7               	btfsc	efgtoa@d& (0+255),0,b
  5026  001788  EFC8  F00B         	goto	u9221
  5027  00178C  EFCA  F00B         	goto	u9220
  5028  001790                     u9221:
  5029  001790  EFD2  F00B         	goto	l8461
  5030  001794                     u9220:
  5031  001794                     
  5032                           ; BSR set to: 0
  5033                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  5034  001794  0E00               	movlw	0
  5035  001796  6FB5               	movwf	efgtoa@l& (0+255),b
  5036  001798  0E00               	movlw	0
  5037  00179A  6FB6               	movwf	(efgtoa@l+1)& (0+255),b
  5038  00179C  0E00               	movlw	0
  5039  00179E  6FB7               	movwf	(efgtoa@l+2)& (0+255),b
  5040  0017A0  0E00               	movlw	0
  5041  0017A2  6FB8               	movwf	(efgtoa@l+3)& (0+255),b
  5042  0017A4                     l8461:
  5043                           
  5044                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  5045  0017A4  C0BB  F06D         	movff	efgtoa@g,___fladd@b
  5046  0017A8  C0BC  F06E         	movff	efgtoa@g+1,___fladd@b+1
  5047  0017AC  C0BD  F06F         	movff	efgtoa@g+2,___fladd@b+2
  5048  0017B0  C0BE  F070         	movff	efgtoa@g+3,___fladd@b+3
  5049  0017B4  C0B5  F071         	movff	efgtoa@l,___fladd@a
  5050  0017B8  C0B6  F072         	movff	efgtoa@l+1,___fladd@a+1
  5051  0017BC  C0B7  F073         	movff	efgtoa@l+2,___fladd@a+2
  5052  0017C0  C0B8  F074         	movff	efgtoa@l+3,___fladd@a+3
  5053  0017C4  EC15  F011         	call	___fladd	;wreg free
  5054  0017C8  C06D  F0B1         	movff	?___fladd,efgtoa@h
  5055  0017CC  C06E  F0B2         	movff	?___fladd+1,efgtoa@h+1
  5056  0017D0  C06F  F0B3         	movff	?___fladd+2,efgtoa@h+2
  5057  0017D4  C070  F0B4         	movff	?___fladd+3,efgtoa@h+3
  5058  0017D8                     
  5059                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  5060  0017D8  C0B1  F06D         	movff	efgtoa@h,___flge@ff1
  5061  0017DC  C0B2  F06E         	movff	efgtoa@h+1,___flge@ff1+1
  5062  0017E0  C0B3  F06F         	movff	efgtoa@h+2,___flge@ff1+2
  5063  0017E4  C0B4  F070         	movff	efgtoa@h+3,___flge@ff1+3
  5064  0017E8  0E00               	movlw	0
  5065  0017EA  6E2E               	movwf	___flmul@a^0,c
  5066  0017EC  0E00               	movlw	0
  5067  0017EE  6E2F               	movwf	(___flmul@a+1)^0,c
  5068  0017F0  0E20               	movlw	32
  5069  0017F2  6E30               	movwf	(___flmul@a+2)^0,c
  5070  0017F4  0E41               	movlw	65
  5071  0017F6  6E31               	movwf	(___flmul@a+3)^0,c
  5072  0017F8  C0A3  F02A         	movff	efgtoa@ou,___flmul@b
  5073  0017FC  C0A4  F02B         	movff	efgtoa@ou+1,___flmul@b+1
  5074  001800  C0A5  F02C         	movff	efgtoa@ou+2,___flmul@b+2
  5075  001804  C0A6  F02D         	movff	efgtoa@ou+3,___flmul@b+3
  5076  001808  EC76  F013         	call	___flmul	;wreg free
  5077  00180C  C02A  F071         	movff	?___flmul,___flge@ff2
  5078  001810  C02B  F072         	movff	?___flmul+1,___flge@ff2+1
  5079  001814  C02C  F073         	movff	?___flmul+2,___flge@ff2+2
  5080  001818  C02D  F074         	movff	?___flmul+3,___flge@ff2+3
  5081  00181C  ECBC  F023         	call	___flge	;wreg free
  5082  001820  0100               	movlb	0	; () banked
  5083  001822  A0D8               	btfss	status,0,c
  5084  001824  EF16  F00C         	goto	u9231
  5085  001828  EF18  F00C         	goto	u9230
  5086  00182C                     u9231:
  5087  00182C  EF40  F00C         	goto	l8473
  5088  001830                     u9230:
  5089  001830                     
  5090                           ; BSR set to: 0
  5091                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 454:   e++;
  5092  001830  4BBF               	infsnz	efgtoa@e& (0+255),f,b
  5093  001832  2BC0               	incf	(efgtoa@e+1)& (0+255),f,b
  5094  001834                     
  5095                           ; BSR set to: 0
  5096                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  5097  001834  C0A3  F02A         	movff	efgtoa@ou,___flmul@b
  5098  001838  C0A4  F02B         	movff	efgtoa@ou+1,___flmul@b+1
  5099  00183C  C0A5  F02C         	movff	efgtoa@ou+2,___flmul@b+2
  5100  001840  C0A6  F02D         	movff	efgtoa@ou+3,___flmul@b+3
  5101  001844  0E00               	movlw	0
  5102  001846  6E2E               	movwf	___flmul@a^0,c
  5103  001848  0E00               	movlw	0
  5104  00184A  6E2F               	movwf	(___flmul@a+1)^0,c
  5105  00184C  0E20               	movlw	32
  5106  00184E  6E30               	movwf	(___flmul@a+2)^0,c
  5107  001850  0E41               	movlw	65
  5108  001852  6E31               	movwf	(___flmul@a+3)^0,c
  5109  001854  EC76  F013         	call	___flmul	;wreg free
  5110  001858  C02A  F0A3         	movff	?___flmul,efgtoa@ou
  5111  00185C  C02B  F0A4         	movff	?___flmul+1,efgtoa@ou+1
  5112  001860  C02C  F0A5         	movff	?___flmul+2,efgtoa@ou+2
  5113  001864  C02D  F0A6         	movff	?___flmul+3,efgtoa@ou+3
  5114  001868                     
  5115                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  5116  001868  0E66               	movlw	102
  5117  00186A  0100               	movlb	0	; () banked
  5118  00186C  19AF               	xorwf	efgtoa@nmode& (0+255),w,b
  5119  00186E  A4D8               	btfss	status,2,c
  5120  001870  EF3C  F00C         	goto	u9241
  5121  001874  EF3E  F00C         	goto	u9240
  5122  001878                     u9241:
  5123  001878  EF40  F00C         	goto	l8473
  5124  00187C                     u9240:
  5125  00187C                     
  5126                           ; BSR set to: 0
  5127                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 458:    m++;
  5128  00187C  4BA1               	infsnz	efgtoa@m& (0+255),f,b
  5129  00187E  2BA2               	incf	(efgtoa@m+1)& (0+255),f,b
  5130  001880                     l8473:
  5131                           
  5132                           ; BSR set to: 0
  5133                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  5134  001880  C0A3  F0C3         	movff	efgtoa@ou,efgtoa@u
  5135  001884  C0A4  F0C4         	movff	efgtoa@ou+1,efgtoa@u+1
  5136  001888  C0A5  F0C5         	movff	efgtoa@ou+2,efgtoa@u+2
  5137  00188C  C0A6  F0C6         	movff	efgtoa@ou+3,efgtoa@u+3
  5138  001890                     
  5139                           ; BSR set to: 0
  5140                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  5141  001890  0E65               	movlw	101
  5142  001892  19AF               	xorwf	efgtoa@nmode& (0+255),w,b
  5143  001894  B4D8               	btfsc	status,2,c
  5144  001896  EF4F  F00C         	goto	u9251
  5145  00189A  EF51  F00C         	goto	u9250
  5146  00189E                     u9251:
  5147  00189E  EF57  F00C         	goto	l8479
  5148  0018A2                     u9250:
  5149  0018A2                     
  5150                           ; BSR set to: 0
  5151  0018A2  C0BF  F09F         	movff	efgtoa@e,efgtoa@ne
  5152  0018A6  C0C0  F0A0         	movff	efgtoa@e+1,efgtoa@ne+1
  5153  0018AA  EF5B  F00C         	goto	l2209
  5154  0018AE                     l8479:
  5155                           
  5156                           ; BSR set to: 0
  5157  0018AE  0E00               	movlw	0
  5158  0018B0  6FA0               	movwf	(efgtoa@ne+1)& (0+255),b
  5159  0018B2  0E00               	movlw	0
  5160  0018B4  6F9F               	movwf	efgtoa@ne& (0+255),b
  5161  0018B6                     l2209:
  5162                           
  5163                           ; BSR set to: 0
  5164                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  5165  0018B6  0E00               	movlw	0
  5166  0018B8  6F9E               	movwf	(efgtoa@pp+1)& (0+255),b
  5167  0018BA  0E00               	movlw	0
  5168  0018BC  6F9D               	movwf	efgtoa@pp& (0+255),b
  5169                           
  5170                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  5171  0018BE  0E00               	movlw	0
  5172  0018C0  6F9C               	movwf	(efgtoa@t+1)& (0+255),b
  5173  0018C2  0E00               	movlw	0
  5174  0018C4  6F9B               	movwf	efgtoa@t& (0+255),b
  5175                           
  5176                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  5177  0018C6  0E00               	movlw	0
  5178  0018C8  6FBA               	movwf	(efgtoa@i+1)& (0+255),b
  5179  0018CA  0E00               	movlw	0
  5180  0018CC  6FB9               	movwf	efgtoa@i& (0+255),b
  5181                           
  5182                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  5183  0018CE  EF57  F00D         	goto	l8529
  5184  0018D2                     l8481:
  5185                           
  5186                           ; BSR set to: 0
  5187                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  5188  0018D2  C0B1  F014         	movff	efgtoa@h,___fldiv@b
  5189  0018D6  C0B2  F015         	movff	efgtoa@h+1,___fldiv@b+1
  5190  0018DA  C0B3  F016         	movff	efgtoa@h+2,___fldiv@b+2
  5191  0018DE  C0B4  F017         	movff	efgtoa@h+3,___fldiv@b+3
  5192  0018E2  C0C3  F018         	movff	efgtoa@u,___fldiv@a
  5193  0018E6  C0C4  F019         	movff	efgtoa@u+1,___fldiv@a+1
  5194  0018EA  C0C5  F01A         	movff	efgtoa@u+2,___fldiv@a+2
  5195  0018EE  C0C6  F01B         	movff	efgtoa@u+3,___fldiv@a+3
  5196  0018F2  EC9E  F015         	call	___fldiv	;wreg free
  5197  0018F6  C014  F02D         	movff	?___fldiv,floorf@x
  5198  0018FA  C015  F02E         	movff	?___fldiv+1,floorf@x+1
  5199  0018FE  C016  F02F         	movff	?___fldiv+2,floorf@x+2
  5200  001902  C017  F030         	movff	?___fldiv+3,floorf@x+3
  5201  001906  EC0F  F01A         	call	_floorf	;wreg free
  5202  00190A  C02D  F0B5         	movff	?_floorf,efgtoa@l
  5203  00190E  C02E  F0B6         	movff	?_floorf+1,efgtoa@l+1
  5204  001912  C02F  F0B7         	movff	?_floorf+2,efgtoa@l+2
  5205  001916  C030  F0B8         	movff	?_floorf+3,efgtoa@l+3
  5206                           
  5207                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  5208  00191A  C0B5  F079         	movff	efgtoa@l,___fltol@f1
  5209  00191E  C0B6  F07A         	movff	efgtoa@l+1,___fltol@f1+1
  5210  001922  C0B7  F07B         	movff	efgtoa@l+2,___fltol@f1+2
  5211  001926  C0B8  F07C         	movff	efgtoa@l+3,___fltol@f1+3
  5212  00192A  ECB5  F022         	call	___fltol	;wreg free
  5213  00192E  C079  F0A7         	movff	?___fltol,efgtoa@d
  5214  001932  C07A  F0A8         	movff	?___fltol+1,efgtoa@d+1
  5215  001936                     
  5216                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  5217  001936  B83E               	btfsc	_flags^0,4,c
  5218  001938  EFA0  F00C         	goto	u9261
  5219  00193C  EFA2  F00C         	goto	u9260
  5220  001940                     u9261:
  5221  001940  EFC0  F00C         	goto	l8493
  5222  001944                     u9260:
  5223  001944  0100               	movlb	0	; () banked
  5224  001946  51A7               	movf	efgtoa@d& (0+255),w,b
  5225  001948  11A8               	iorwf	(efgtoa@d+1)& (0+255),w,b
  5226  00194A  A4D8               	btfss	status,2,c
  5227  00194C  EFAA  F00C         	goto	u9271
  5228  001950  EFAC  F00C         	goto	u9270
  5229  001954                     u9271:
  5230  001954  EFC0  F00C         	goto	l8493
  5231  001958                     u9270:
  5232  001958                     
  5233                           ; BSR set to: 0
  5234  001958  0E67               	movlw	103
  5235  00195A  19B0               	xorwf	efgtoa@mode& (0+255),w,b
  5236  00195C  A4D8               	btfss	status,2,c
  5237  00195E  EFB3  F00C         	goto	u9281
  5238  001962  EFB5  F00C         	goto	u9280
  5239  001966                     u9281:
  5240  001966  EFC0  F00C         	goto	l8493
  5241  00196A                     u9280:
  5242  00196A                     
  5243                           ; BSR set to: 0
  5244  00196A  BFA0               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  5245  00196C  EFBC  F00C         	goto	u9290
  5246  001970  EFBA  F00C         	goto	u9291
  5247  001974                     u9291:
  5248  001974  EFC0  F00C         	goto	l8493
  5249  001978                     u9290:
  5250  001978                     
  5251                           ; BSR set to: 0
  5252                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  5253  001978  4B9B               	infsnz	efgtoa@t& (0+255),f,b
  5254  00197A  2B9C               	incf	(efgtoa@t+1)& (0+255),f,b
  5255                           
  5256                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  5257  00197C  EF0B  F00D         	goto	l8521
  5258  001980                     l8493:
  5259                           
  5260                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  5261  001980  0100               	movlb	0	; () banked
  5262  001982  519D               	movf	efgtoa@pp& (0+255),w,b
  5263  001984  119E               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  5264  001986  A4D8               	btfss	status,2,c
  5265  001988  EFC8  F00C         	goto	u9301
  5266  00198C  EFCA  F00C         	goto	u9300
  5267  001990                     u9301:
  5268  001990  EFF4  F00C         	goto	l8513
  5269  001994                     u9300:
  5270  001994                     
  5271                           ; BSR set to: 0
  5272  001994  BFA0               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  5273  001996  EFD1  F00C         	goto	u9310
  5274  00199A  EFCF  F00C         	goto	u9311
  5275  00199E                     u9311:
  5276  00199E  EFF4  F00C         	goto	l8513
  5277  0019A2                     u9310:
  5278  0019A2                     
  5279                           ; BSR set to: 0
  5280                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  5281  0019A2  0E34               	movlw	low _dbuf
  5282  0019A4  25C1               	addwf	efgtoa@n& (0+255),w,b
  5283  0019A6  6ED9               	movwf	fsr2l,c
  5284  0019A8  0E01               	movlw	high _dbuf
  5285  0019AA  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5286  0019AC  6EDA               	movwf	fsr2h,c
  5287  0019AE  0E2E               	movlw	46
  5288  0019B0  6EDF               	movwf	indf2,c
  5289  0019B2                     
  5290                           ; BSR set to: 0
  5291  0019B2  4BC1               	infsnz	efgtoa@n& (0+255),f,b
  5292  0019B4  2BC2               	incf	(efgtoa@n+1)& (0+255),f,b
  5293  0019B6                     
  5294                           ; BSR set to: 0
  5295                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  5296  0019B6  07AD               	decf	efgtoa@w& (0+255),f,b
  5297  0019B8  A0D8               	btfss	status,0,c
  5298  0019BA  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  5299  0019BC                     
  5300                           ; BSR set to: 0
  5301                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  5302  0019BC  0E00               	movlw	0
  5303  0019BE  6F9E               	movwf	(efgtoa@pp+1)& (0+255),b
  5304  0019C0  0E01               	movlw	1
  5305  0019C2  6F9D               	movwf	efgtoa@pp& (0+255),b
  5306  0019C4  EFF4  F00C         	goto	l8513
  5307  0019C8                     l8505:
  5308                           
  5309                           ; BSR set to: 0
  5310                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  5311  0019C8  0E34               	movlw	low _dbuf
  5312  0019CA  25C1               	addwf	efgtoa@n& (0+255),w,b
  5313  0019CC  6ED9               	movwf	fsr2l,c
  5314  0019CE  0E01               	movlw	high _dbuf
  5315  0019D0  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5316  0019D2  6EDA               	movwf	fsr2h,c
  5317  0019D4  0E30               	movlw	48
  5318  0019D6  6EDF               	movwf	indf2,c
  5319  0019D8                     
  5320                           ; BSR set to: 0
  5321  0019D8  4BC1               	infsnz	efgtoa@n& (0+255),f,b
  5322  0019DA  2BC2               	incf	(efgtoa@n+1)& (0+255),f,b
  5323  0019DC                     
  5324                           ; BSR set to: 0
  5325                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  5326  0019DC  07AD               	decf	efgtoa@w& (0+255),f,b
  5327  0019DE  A0D8               	btfss	status,0,c
  5328  0019E0  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  5329  0019E2                     
  5330                           ; BSR set to: 0
  5331                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  5332  0019E2  079B               	decf	efgtoa@t& (0+255),f,b
  5333  0019E4  A0D8               	btfss	status,0,c
  5334  0019E6  079C               	decf	(efgtoa@t+1)& (0+255),f,b
  5335  0019E8                     l8513:
  5336                           
  5337                           ; BSR set to: 0
  5338                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  5339  0019E8  519B               	movf	efgtoa@t& (0+255),w,b
  5340  0019EA  119C               	iorwf	(efgtoa@t+1)& (0+255),w,b
  5341  0019EC  A4D8               	btfss	status,2,c
  5342  0019EE  EFFB  F00C         	goto	u9321
  5343  0019F2  EFFD  F00C         	goto	u9320
  5344  0019F6                     u9321:
  5345  0019F6  EFE4  F00C         	goto	l8505
  5346  0019FA                     u9320:
  5347  0019FA                     
  5348                           ; BSR set to: 0
  5349                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  5350  0019FA  0E34               	movlw	low _dbuf
  5351  0019FC  25C1               	addwf	efgtoa@n& (0+255),w,b
  5352  0019FE  6ED9               	movwf	fsr2l,c
  5353  001A00  0E01               	movlw	high _dbuf
  5354  001A02  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5355  001A04  6EDA               	movwf	fsr2h,c
  5356  001A06  51A7               	movf	efgtoa@d& (0+255),w,b
  5357  001A08  0F30               	addlw	48
  5358  001A0A  6EDF               	movwf	indf2,c
  5359  001A0C                     
  5360                           ; BSR set to: 0
  5361  001A0C  4BC1               	infsnz	efgtoa@n& (0+255),f,b
  5362  001A0E  2BC2               	incf	(efgtoa@n+1)& (0+255),f,b
  5363  001A10                     
  5364                           ; BSR set to: 0
  5365                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  5366  001A10  07AD               	decf	efgtoa@w& (0+255),f,b
  5367  001A12  A0D8               	btfss	status,0,c
  5368  001A14  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  5369  001A16                     l8521:
  5370                           
  5371                           ; BSR set to: 0
  5372                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  5373  001A16  C0B1  F079         	movff	efgtoa@h,___flsub@b
  5374  001A1A  C0B2  F07A         	movff	efgtoa@h+1,___flsub@b+1
  5375  001A1E  C0B3  F07B         	movff	efgtoa@h+2,___flsub@b+2
  5376  001A22  C0B4  F07C         	movff	efgtoa@h+3,___flsub@b+3
  5377  001A26  C0C3  F02E         	movff	efgtoa@u,___flmul@a
  5378  001A2A  C0C4  F02F         	movff	efgtoa@u+1,___flmul@a+1
  5379  001A2E  C0C5  F030         	movff	efgtoa@u+2,___flmul@a+2
  5380  001A32  C0C6  F031         	movff	efgtoa@u+3,___flmul@a+3
  5381  001A36  C0B5  F02A         	movff	efgtoa@l,___flmul@b
  5382  001A3A  C0B6  F02B         	movff	efgtoa@l+1,___flmul@b+1
  5383  001A3E  C0B7  F02C         	movff	efgtoa@l+2,___flmul@b+2
  5384  001A42  C0B8  F02D         	movff	efgtoa@l+3,___flmul@b+3
  5385  001A46  EC76  F013         	call	___flmul	;wreg free
  5386  001A4A  C02A  F07D         	movff	?___flmul,___flsub@a
  5387  001A4E  C02B  F07E         	movff	?___flmul+1,___flsub@a+1
  5388  001A52  C02C  F07F         	movff	?___flmul+2,___flsub@a+2
  5389  001A56  C02D  F080         	movff	?___flmul+3,___flsub@a+3
  5390  001A5A  ECF9  F02A         	call	___flsub	;wreg free
  5391  001A5E  C079  F0B1         	movff	?___flsub,efgtoa@h
  5392  001A62  C07A  F0B2         	movff	?___flsub+1,efgtoa@h+1
  5393  001A66  C07B  F0B3         	movff	?___flsub+2,efgtoa@h+2
  5394  001A6A  C07C  F0B4         	movff	?___flsub+3,efgtoa@h+3
  5395  001A6E                     
  5396                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  5397  001A6E  C0C3  F014         	movff	efgtoa@u,___fldiv@b
  5398  001A72  C0C4  F015         	movff	efgtoa@u+1,___fldiv@b+1
  5399  001A76  C0C5  F016         	movff	efgtoa@u+2,___fldiv@b+2
  5400  001A7A  C0C6  F017         	movff	efgtoa@u+3,___fldiv@b+3
  5401  001A7E  0E00               	movlw	0
  5402  001A80  6E18               	movwf	___fldiv@a^0,c
  5403  001A82  0E00               	movlw	0
  5404  001A84  6E19               	movwf	(___fldiv@a+1)^0,c
  5405  001A86  0E20               	movlw	32
  5406  001A88  6E1A               	movwf	(___fldiv@a+2)^0,c
  5407  001A8A  0E41               	movlw	65
  5408  001A8C  6E1B               	movwf	(___fldiv@a+3)^0,c
  5409  001A8E  EC9E  F015         	call	___fldiv	;wreg free
  5410  001A92  C014  F0C3         	movff	?___fldiv,efgtoa@u
  5411  001A96  C015  F0C4         	movff	?___fldiv+1,efgtoa@u+1
  5412  001A9A  C016  F0C5         	movff	?___fldiv+2,efgtoa@u+2
  5413  001A9E  C017  F0C6         	movff	?___fldiv+3,efgtoa@u+3
  5414  001AA2                     
  5415                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  5416  001AA2  0100               	movlb	0	; () banked
  5417  001AA4  079F               	decf	efgtoa@ne& (0+255),f,b
  5418  001AA6  A0D8               	btfss	status,0,c
  5419  001AA8  07A0               	decf	(efgtoa@ne+1)& (0+255),f,b
  5420  001AAA                     
  5421                           ; BSR set to: 0
  5422                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 490:         ++i;
  5423  001AAA  4BB9               	infsnz	efgtoa@i& (0+255),f,b
  5424  001AAC  2BBA               	incf	(efgtoa@i+1)& (0+255),f,b
  5425  001AAE                     l8529:
  5426                           
  5427                           ; BSR set to: 0
  5428                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  5429  001AAE  51A1               	movf	efgtoa@m& (0+255),w,b
  5430  001AB0  5DB9               	subwf	efgtoa@i& (0+255),w,b
  5431  001AB2  51BA               	movf	(efgtoa@i+1)& (0+255),w,b
  5432  001AB4  0A80               	xorlw	128
  5433  001AB6  6F8A               	movwf	??_efgtoa& (0+255),b
  5434  001AB8  51A2               	movf	(efgtoa@m+1)& (0+255),w,b
  5435  001ABA  0A80               	xorlw	128
  5436  001ABC  598A               	subwfb	??_efgtoa& (0+255),w,b
  5437  001ABE  B0D8               	btfsc	status,0,c
  5438  001AC0  EF64  F00D         	goto	u9331
  5439  001AC4  EF66  F00D         	goto	u9330
  5440  001AC8                     u9331:
  5441  001AC8  EF74  F00D         	goto	l8533
  5442  001ACC                     u9330:
  5443  001ACC                     
  5444                           ; BSR set to: 0
  5445  001ACC  BFC2               	btfsc	(efgtoa@n+1)& (0+255),7,b
  5446  001ACE  EF72  F00D         	goto	u9341
  5447  001AD2  51C2               	movf	(efgtoa@n+1)& (0+255),w,b
  5448  001AD4  E109               	bnz	u9340
  5449  001AD6  0E4B               	movlw	75
  5450  001AD8  5DC1               	subwf	efgtoa@n& (0+255),w,b
  5451  001ADA  A0D8               	btfss	status,0,c
  5452  001ADC  EF72  F00D         	goto	u9341
  5453  001AE0  EF74  F00D         	goto	u9340
  5454  001AE4                     u9341:
  5455  001AE4  EF69  F00C         	goto	l8481
  5456  001AE8                     u9340:
  5457  001AE8                     l8533:
  5458                           
  5459                           ; BSR set to: 0
  5460                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  5461  001AE8  519D               	movf	efgtoa@pp& (0+255),w,b
  5462  001AEA  119E               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  5463  001AEC  A4D8               	btfss	status,2,c
  5464  001AEE  EF7B  F00D         	goto	u9351
  5465  001AF2  EF7D  F00D         	goto	u9350
  5466  001AF6                     u9351:
  5467  001AF6  EF8E  F00D         	goto	l8541
  5468  001AFA                     u9350:
  5469  001AFA                     
  5470                           ; BSR set to: 0
  5471  001AFA  A83E               	btfss	_flags^0,4,c
  5472  001AFC  EF82  F00D         	goto	u9361
  5473  001B00  EF84  F00D         	goto	u9360
  5474  001B04                     u9361:
  5475  001B04  EF8E  F00D         	goto	l8541
  5476  001B08                     u9360:
  5477  001B08                     
  5478                           ; BSR set to: 0
  5479                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  5480  001B08  0E34               	movlw	low _dbuf
  5481  001B0A  25C1               	addwf	efgtoa@n& (0+255),w,b
  5482  001B0C  6ED9               	movwf	fsr2l,c
  5483  001B0E  0E01               	movlw	high _dbuf
  5484  001B10  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5485  001B12  6EDA               	movwf	fsr2h,c
  5486  001B14  0E2E               	movlw	46
  5487  001B16  6EDF               	movwf	indf2,c
  5488  001B18                     
  5489                           ; BSR set to: 0
  5490  001B18  4BC1               	infsnz	efgtoa@n& (0+255),f,b
  5491  001B1A  2BC2               	incf	(efgtoa@n+1)& (0+255),f,b
  5492  001B1C                     l8541:
  5493                           
  5494                           ; BSR set to: 0
  5495                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  5496  001B1C  0E34               	movlw	low _dbuf
  5497  001B1E  25C1               	addwf	efgtoa@n& (0+255),w,b
  5498  001B20  6ED9               	movwf	fsr2l,c
  5499  001B22  0E01               	movlw	high _dbuf
  5500  001B24  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5501  001B26  6EDA               	movwf	fsr2h,c
  5502  001B28  0E00               	movlw	0
  5503  001B2A  6EDF               	movwf	indf2,c
  5504  001B2C                     
  5505                           ; BSR set to: 0
  5506                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  5507  001B2C  0E65               	movlw	101
  5508  001B2E  19AF               	xorwf	efgtoa@nmode& (0+255),w,b
  5509  001B30  A4D8               	btfss	status,2,c
  5510  001B32  EF9D  F00D         	goto	u9371
  5511  001B36  EF9F  F00D         	goto	u9370
  5512  001B3A                     u9371:
  5513  001B3A  EF71  F00E         	goto	l8603
  5514  001B3E                     u9370:
  5515  001B3E                     
  5516                           ; BSR set to: 0
  5517                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  5518  001B3E  0E00               	movlw	0
  5519  001B40  6FBA               	movwf	(efgtoa@i+1)& (0+255),b
  5520  001B42  0E4F               	movlw	79
  5521  001B44  6FB9               	movwf	efgtoa@i& (0+255),b
  5522  001B46                     
  5523                           ; BSR set to: 0
  5524                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  5525  001B46  0E34               	movlw	low _dbuf
  5526  001B48  25B9               	addwf	efgtoa@i& (0+255),w,b
  5527  001B4A  6ED9               	movwf	fsr2l,c
  5528  001B4C  0E01               	movlw	high _dbuf
  5529  001B4E  21BA               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5530  001B50  6EDA               	movwf	fsr2h,c
  5531  001B52  0E00               	movlw	0
  5532  001B54  6EDF               	movwf	indf2,c
  5533  001B56                     
  5534                           ; BSR set to: 0
  5535                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  5536  001B56  0E00               	movlw	0
  5537  001B58  6FAA               	movwf	(efgtoa@sign+1)& (0+255),b
  5538  001B5A  0E00               	movlw	0
  5539  001B5C  6FA9               	movwf	efgtoa@sign& (0+255),b
  5540  001B5E                     
  5541                           ; BSR set to: 0
  5542                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  5543  001B5E  BFC0               	btfsc	(efgtoa@e+1)& (0+255),7,b
  5544  001B60  EFB6  F00D         	goto	u9380
  5545  001B64  EFB4  F00D         	goto	u9381
  5546  001B68                     u9381:
  5547  001B68  EFBE  F00D         	goto	l8557
  5548  001B6C                     u9380:
  5549  001B6C                     
  5550                           ; BSR set to: 0
  5551                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  5552  001B6C  0E00               	movlw	0
  5553  001B6E  6FAA               	movwf	(efgtoa@sign+1)& (0+255),b
  5554  001B70  0E01               	movlw	1
  5555  001B72  6FA9               	movwf	efgtoa@sign& (0+255),b
  5556  001B74                     
  5557                           ; BSR set to: 0
  5558                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  5559  001B74  6DBF               	negf	efgtoa@e& (0+255),b
  5560  001B76  1FC0               	comf	(efgtoa@e+1)& (0+255),f,b
  5561  001B78  B0D8               	btfsc	status,0,c
  5562  001B7A  2BC0               	incf	(efgtoa@e+1)& (0+255),f,b
  5563  001B7C                     l8557:
  5564                           
  5565                           ; BSR set to: 0
  5566                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  5567  001B7C  0E00               	movlw	0
  5568  001B7E  6FAC               	movwf	(efgtoa@p+1)& (0+255),b
  5569  001B80  0E02               	movlw	2
  5570  001B82  6FAB               	movwf	efgtoa@p& (0+255),b
  5571                           
  5572                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  5573  001B84  EFEF  F00D         	goto	l8569
  5574  001B88                     l8559:
  5575                           
  5576                           ; BSR set to: 0
  5577                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  5578  001B88  07B9               	decf	efgtoa@i& (0+255),f,b
  5579  001B8A  A0D8               	btfss	status,0,c
  5580  001B8C  07BA               	decf	(efgtoa@i+1)& (0+255),f,b
  5581  001B8E                     
  5582                           ; BSR set to: 0
  5583                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  5584  001B8E  0E34               	movlw	low _dbuf
  5585  001B90  25B9               	addwf	efgtoa@i& (0+255),w,b
  5586  001B92  6ED9               	movwf	fsr2l,c
  5587  001B94  0E01               	movlw	high _dbuf
  5588  001B96  21BA               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5589  001B98  6EDA               	movwf	fsr2h,c
  5590  001B9A  C0BF  F014         	movff	efgtoa@e,___awmod@dividend
  5591  001B9E  C0C0  F015         	movff	efgtoa@e+1,___awmod@dividend+1
  5592  001BA2  0E00               	movlw	0
  5593  001BA4  6E17               	movwf	(___awmod@divisor+1)^0,c
  5594  001BA6  0E0A               	movlw	10
  5595  001BA8  6E16               	movwf	___awmod@divisor^0,c
  5596  001BAA  EC31  F027         	call	___awmod	;wreg free
  5597  001BAE  5014               	movf	?___awmod^0,w,c
  5598  001BB0  0F30               	addlw	48
  5599  001BB2  6EDF               	movwf	indf2,c
  5600  001BB4                     
  5601                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  5602  001BB4  C0BF  F014         	movff	efgtoa@e,___awdiv@dividend
  5603  001BB8  C0C0  F015         	movff	efgtoa@e+1,___awdiv@dividend+1
  5604  001BBC  0E00               	movlw	0
  5605  001BBE  6E17               	movwf	(___awdiv@divisor+1)^0,c
  5606  001BC0  0E0A               	movlw	10
  5607  001BC2  6E16               	movwf	___awdiv@divisor^0,c
  5608  001BC4  EC0E  F026         	call	___awdiv	;wreg free
  5609  001BC8  C014  F0BF         	movff	?___awdiv,efgtoa@e
  5610  001BCC  C015  F0C0         	movff	?___awdiv+1,efgtoa@e+1
  5611  001BD0                     
  5612                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  5613  001BD0  0100               	movlb	0	; () banked
  5614  001BD2  07AB               	decf	efgtoa@p& (0+255),f,b
  5615  001BD4  A0D8               	btfss	status,0,c
  5616  001BD6  07AC               	decf	(efgtoa@p+1)& (0+255),f,b
  5617  001BD8                     
  5618                           ; BSR set to: 0
  5619                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  5620  001BD8  07AD               	decf	efgtoa@w& (0+255),f,b
  5621  001BDA  A0D8               	btfss	status,0,c
  5622  001BDC  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  5623  001BDE                     l8569:
  5624                           
  5625                           ; BSR set to: 0
  5626                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  5627  001BDE  51BF               	movf	efgtoa@e& (0+255),w,b
  5628  001BE0  11C0               	iorwf	(efgtoa@e+1)& (0+255),w,b
  5629  001BE2  A4D8               	btfss	status,2,c
  5630  001BE4  EFF6  F00D         	goto	u9391
  5631  001BE8  EFF8  F00D         	goto	u9390
  5632  001BEC                     u9391:
  5633  001BEC  EFC4  F00D         	goto	l8559
  5634  001BF0                     u9390:
  5635  001BF0                     
  5636                           ; BSR set to: 0
  5637  001BF0  BFAC               	btfsc	(efgtoa@p+1)& (0+255),7,b
  5638  001BF2  EF05  F00E         	goto	u9400
  5639  001BF6  51AC               	movf	(efgtoa@p+1)& (0+255),w,b
  5640  001BF8  E106               	bnz	u9401
  5641  001BFA  05AB               	decf	efgtoa@p& (0+255),w,b
  5642  001BFC  B0D8               	btfsc	status,0,c
  5643  001BFE  EF03  F00E         	goto	u9401
  5644  001C02  EF05  F00E         	goto	u9400
  5645  001C06                     u9401:
  5646  001C06  EFC4  F00D         	goto	l8559
  5647  001C0A                     u9400:
  5648  001C0A                     
  5649                           ; BSR set to: 0
  5650                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 514:         --i;
  5651  001C0A  07B9               	decf	efgtoa@i& (0+255),f,b
  5652  001C0C  A0D8               	btfss	status,0,c
  5653  001C0E  07BA               	decf	(efgtoa@i+1)& (0+255),f,b
  5654  001C10                     
  5655                           ; BSR set to: 0
  5656                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  5657  001C10  51A9               	movf	efgtoa@sign& (0+255),w,b
  5658  001C12  11AA               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  5659  001C14  A4D8               	btfss	status,2,c
  5660  001C16  EF0F  F00E         	goto	u9411
  5661  001C1A  EF11  F00E         	goto	u9410
  5662  001C1E                     u9411:
  5663  001C1E  EF17  F00E         	goto	l8579
  5664  001C22                     u9410:
  5665  001C22                     
  5666                           ; BSR set to: 0
  5667  001C22  0E00               	movlw	0
  5668  001C24  6F96               	movwf	(_efgtoa$3561+1)& (0+255),b
  5669  001C26  0E2B               	movlw	43
  5670  001C28  6F95               	movwf	_efgtoa$3561& (0+255),b
  5671  001C2A  EF1B  F00E         	goto	l8581
  5672  001C2E                     l8579:
  5673                           
  5674                           ; BSR set to: 0
  5675  001C2E  0E00               	movlw	0
  5676  001C30  6F96               	movwf	(_efgtoa$3561+1)& (0+255),b
  5677  001C32  0E2D               	movlw	45
  5678  001C34  6F95               	movwf	_efgtoa$3561& (0+255),b
  5679  001C36                     l8581:
  5680                           
  5681                           ; BSR set to: 0
  5682  001C36  0E34               	movlw	low _dbuf
  5683  001C38  25B9               	addwf	efgtoa@i& (0+255),w,b
  5684  001C3A  6ED9               	movwf	fsr2l,c
  5685  001C3C  0E01               	movlw	high _dbuf
  5686  001C3E  21BA               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5687  001C40  6EDA               	movwf	fsr2h,c
  5688  001C42  0060  F257  FFDF   	movff	_efgtoa$3561,indf2
  5689  001C48                     
  5690                           ; BSR set to: 0
  5691                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 516:         --w;
  5692  001C48  07AD               	decf	efgtoa@w& (0+255),f,b
  5693  001C4A  A0D8               	btfss	status,0,c
  5694  001C4C  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  5695  001C4E                     
  5696                           ; BSR set to: 0
  5697                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 518:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  5698  001C4E  07B9               	decf	efgtoa@i& (0+255),f,b
  5699  001C50  A0D8               	btfss	status,0,c
  5700  001C52  07BA               	decf	(efgtoa@i+1)& (0+255),f,b
  5701  001C54                     
  5702                           ; BSR set to: 0
  5703  001C54  0EBF               	movlw	191
  5704  001C56  6F8A               	movwf	??_efgtoa& (0+255),b
  5705  001C58  0EFF               	movlw	255
  5706  001C5A  6F8B               	movwf	(??_efgtoa+1)& (0+255),b
  5707  001C5C  5189               	movf	efgtoa@c& (0+255),w,b
  5708  001C5E  6F8C               	movwf	(??_efgtoa+2)& (0+255),b
  5709  001C60  6B8D               	clrf	(??_efgtoa+3)& (0+255),b
  5710  001C62  518A               	movf	??_efgtoa& (0+255),w,b
  5711  001C64  278C               	addwf	(??_efgtoa+2)& (0+255),f,b
  5712  001C66  518B               	movf	(??_efgtoa+1)& (0+255),w,b
  5713  001C68  238D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  5714  001C6A  518D               	movf	(??_efgtoa+3)& (0+255),w,b
  5715  001C6C  E10A               	bnz	u9420
  5716  001C6E  0E1A               	movlw	26
  5717  001C70  5D8C               	subwf	(??_efgtoa+2)& (0+255),w,b
  5718  001C72  A0D8               	btfss	status,0,c
  5719  001C74  EF3E  F00E         	goto	u9421
  5720  001C78  EF41  F00E         	goto	u9420
  5721  001C7C                     u9421:
  5722  001C7C  0E01               	movlw	1
  5723  001C7E  EF42  F00E         	goto	u9430
  5724  001C82                     u9420:
  5725  001C82  0E00               	movlw	0
  5726  001C84                     u9430:
  5727  001C84  6F99               	movwf	_efgtoa$3563& (0+255),b
  5728  001C86  6B9A               	clrf	(_efgtoa$3563+1)& (0+255),b
  5729  001C88                     
  5730                           ; BSR set to: 0
  5731  001C88  5199               	movf	_efgtoa$3563& (0+255),w,b
  5732  001C8A  119A               	iorwf	(_efgtoa$3563+1)& (0+255),w,b
  5733  001C8C  A4D8               	btfss	status,2,c
  5734  001C8E  EF4B  F00E         	goto	u9441
  5735  001C92  EF4D  F00E         	goto	u9440
  5736  001C96                     u9441:
  5737  001C96  EF53  F00E         	goto	l8595
  5738  001C9A                     u9440:
  5739  001C9A                     
  5740                           ; BSR set to: 0
  5741  001C9A  0E00               	movlw	0
  5742  001C9C  6F98               	movwf	(_efgtoa$3562+1)& (0+255),b
  5743  001C9E  0E65               	movlw	101
  5744  001CA0  6F97               	movwf	_efgtoa$3562& (0+255),b
  5745  001CA2  EF57  F00E         	goto	l8597
  5746  001CA6                     l8595:
  5747                           
  5748                           ; BSR set to: 0
  5749  001CA6  0E00               	movlw	0
  5750  001CA8  6F98               	movwf	(_efgtoa$3562+1)& (0+255),b
  5751  001CAA  0E45               	movlw	69
  5752  001CAC  6F97               	movwf	_efgtoa$3562& (0+255),b
  5753  001CAE                     l8597:
  5754                           
  5755                           ; BSR set to: 0
  5756  001CAE  0E34               	movlw	low _dbuf
  5757  001CB0  25B9               	addwf	efgtoa@i& (0+255),w,b
  5758  001CB2  6ED9               	movwf	fsr2l,c
  5759  001CB4  0E01               	movlw	high _dbuf
  5760  001CB6  21BA               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5761  001CB8  6EDA               	movwf	fsr2h,c
  5762  001CBA  0060  F25F  FFDF   	movff	_efgtoa$3562,indf2
  5763  001CC0                     
  5764                           ; BSR set to: 0
  5765                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 519:         --w;
  5766  001CC0  07AD               	decf	efgtoa@w& (0+255),f,b
  5767  001CC2  A0D8               	btfss	status,0,c
  5768  001CC4  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  5769  001CC6                     
  5770                           ; BSR set to: 0
  5771                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  5772  001CC6  0E34               	movlw	low _dbuf
  5773  001CC8  25C1               	addwf	efgtoa@n& (0+255),w,b
  5774  001CCA  6E14               	movwf	strcpy@dest^0,c
  5775  001CCC  0E01               	movlw	high _dbuf
  5776  001CCE  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5777  001CD0  6E15               	movwf	(strcpy@dest+1)^0,c
  5778  001CD2  0E34               	movlw	low _dbuf
  5779  001CD4  25B9               	addwf	efgtoa@i& (0+255),w,b
  5780  001CD6  6E16               	movwf	strcpy@src^0,c
  5781  001CD8  0E01               	movlw	high _dbuf
  5782  001CDA  21BA               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5783  001CDC  6E17               	movwf	(strcpy@src+1)^0,c
  5784  001CDE  EC46  F029         	call	_strcpy	;wreg free
  5785  001CE2                     l8603:
  5786                           
  5787                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 524:     return p
      +                          ad(fp, &dbuf[0], w);
  5788  001CE2  C083  F026         	movff	efgtoa@fp,pad@fp
  5789  001CE6  C084  F027         	movff	efgtoa@fp+1,pad@fp+1
  5790  001CEA  0E34               	movlw	low _dbuf
  5791  001CEC  6E28               	movwf	pad@buf^0,c
  5792  001CEE  0E01               	movlw	high _dbuf
  5793  001CF0  6E29               	movwf	(pad@buf+1)^0,c
  5794  001CF2  C0AD  F02A         	movff	efgtoa@w,pad@p
  5795  001CF6  C0AE  F02B         	movff	efgtoa@w+1,pad@p+1
  5796  001CFA  EC70  F026         	call	_pad	;wreg free
  5797  001CFE  C026  F083         	movff	?_pad,?_efgtoa
  5798  001D02  C027  F084         	movff	?_pad+1,?_efgtoa+1
  5799  001D06                     l2163:
  5800  001D06  0012               	return		;funcret
  5801  001D08                     __end_of_efgtoa:
  5802                           	callstack 0
  5803                           
  5804 ;; *************** function _tolower *****************
  5805 ;; Defined at:
  5806 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\tolower.c"
  5807 ;; Parameters:    Size  Location     Type
  5808 ;;  c               2   25[COMRAM] int 
  5809 ;; Auto vars:     Size  Location     Type
  5810 ;;		None
  5811 ;; Return value:  Size  Location     Type
  5812 ;;                  2   25[COMRAM] int 
  5813 ;; Registers used:
  5814 ;;		wreg, status,2, status,0
  5815 ;; Tracked objects:
  5816 ;;		On entry : 0/0
  5817 ;;		On exit  : 0/0
  5818 ;;		Unchanged: 0/0
  5819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5820 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5821 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5822 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5823 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5824 ;;Total ram usage:        8 bytes
  5825 ;; Hardware stack levels used: 1
  5826 ;; Hardware stack levels required when called: 9
  5827 ;; This function calls:
  5828 ;;		_isupper
  5829 ;; This function is called by:
  5830 ;;		_efgtoa
  5831 ;;		_vfpfcnvrt
  5832 ;; This function uses a non-reentrant model
  5833 ;;
  5834                           
  5835                           	psect	text11
  5836  00535C                     __ptext11:
  5837                           	callstack 0
  5838  00535C                     _tolower:
  5839                           	callstack 16
  5840  00535C  0EBF               	movlw	191
  5841  00535E  6E1C               	movwf	??_tolower^0,c
  5842  005360  0EFF               	movlw	255
  5843  005362  6E1D               	movwf	(??_tolower+1)^0,c
  5844  005364  C01A  F01E         	movff	tolower@c,??_tolower+2
  5845  005368  C01B  F01F         	movff	tolower@c+1,??_tolower+3
  5846  00536C  501C               	movf	??_tolower^0,w,c
  5847  00536E  261E               	addwf	(??_tolower+2)^0,f,c
  5848  005370  501D               	movf	(??_tolower+1)^0,w,c
  5849  005372  221F               	addwfc	(??_tolower+3)^0,f,c
  5850  005374  501F               	movf	(??_tolower+3)^0,w,c
  5851  005376  E10A               	bnz	u8630
  5852  005378  0E1A               	movlw	26
  5853  00537A  5C1E               	subwf	(??_tolower+2)^0,w,c
  5854  00537C  A0D8               	btfss	status,0,c
  5855  00537E  EFC3  F029         	goto	u8631
  5856  005382  EFC6  F029         	goto	u8630
  5857  005386                     u8631:
  5858  005386  0E01               	movlw	1
  5859  005388  EFC7  F029         	goto	u8640
  5860  00538C                     u8630:
  5861  00538C  0E00               	movlw	0
  5862  00538E                     u8640:
  5863  00538E  6E20               	movwf	_tolower$3674^0,c
  5864  005390  6A21               	clrf	(_tolower$3674+1)^0,c
  5865  005392  5020               	movf	_tolower$3674^0,w,c
  5866  005394  1021               	iorwf	(_tolower$3674+1)^0,w,c
  5867  005396  B4D8               	btfsc	status,2,c
  5868  005398  EFD0  F029         	goto	u8651
  5869  00539C  EFD2  F029         	goto	u8650
  5870  0053A0                     u8651:
  5871  0053A0  EFD9  F029         	goto	l2345
  5872  0053A4                     u8650:
  5873  0053A4  0E20               	movlw	32
  5874  0053A6  101A               	iorwf	tolower@c^0,w,c
  5875  0053A8  6E1A               	movwf	?_tolower^0,c
  5876  0053AA  501B               	movf	(tolower@c+1)^0,w,c
  5877  0053AC  6E1B               	movwf	(?_tolower+1)^0,c
  5878  0053AE  EFDD  F029         	goto	l2350
  5879  0053B2                     l2345:
  5880  0053B2  C01A  F01A         	movff	tolower@c,?_tolower
  5881  0053B6  C01B  F01B         	movff	tolower@c+1,?_tolower+1
  5882  0053BA                     l2350:
  5883  0053BA  0012               	return		;funcret
  5884  0053BC                     __end_of_tolower:
  5885                           	callstack 0
  5886                           
  5887 ;; *************** function _isupper *****************
  5888 ;; Defined at:
  5889 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isupper.c"
  5890 ;; Parameters:    Size  Location     Type
  5891 ;;  c               2   19[COMRAM] int 
  5892 ;; Auto vars:     Size  Location     Type
  5893 ;;		None
  5894 ;; Return value:  Size  Location     Type
  5895 ;;                  2   19[COMRAM] int 
  5896 ;; Registers used:
  5897 ;;		wreg, status,2, status,0
  5898 ;; Tracked objects:
  5899 ;;		On entry : 0/0
  5900 ;;		On exit  : 0/0
  5901 ;;		Unchanged: 0/0
  5902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5903 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5905 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5906 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5907 ;;Total ram usage:        6 bytes
  5908 ;; Hardware stack levels used: 1
  5909 ;; Hardware stack levels required when called: 8
  5910 ;; This function calls:
  5911 ;;		Nothing
  5912 ;; This function is called by:
  5913 ;;		_efgtoa
  5914 ;;		_vfpfcnvrt
  5915 ;;		_tolower
  5916 ;; This function uses a non-reentrant model
  5917 ;;
  5918                           
  5919                           	psect	text12
  5920  0057B2                     __ptext12:
  5921                           	callstack 0
  5922  0057B2                     _isupper:
  5923                           	callstack 16
  5924  0057B2  0EBF               	movlw	191
  5925  0057B4  6E16               	movwf	??_isupper^0,c
  5926  0057B6  0EFF               	movlw	255
  5927  0057B8  6E17               	movwf	(??_isupper+1)^0,c
  5928  0057BA  C014  F018         	movff	isupper@c,??_isupper+2
  5929  0057BE  C015  F019         	movff	isupper@c+1,??_isupper+3
  5930  0057C2  5016               	movf	??_isupper^0,w,c
  5931  0057C4  2618               	addwf	(??_isupper+2)^0,f,c
  5932  0057C6  5017               	movf	(??_isupper+1)^0,w,c
  5933  0057C8  2219               	addwfc	(??_isupper+3)^0,f,c
  5934  0057CA  5019               	movf	(??_isupper+3)^0,w,c
  5935  0057CC  E10A               	bnz	u7640
  5936  0057CE  0E1A               	movlw	26
  5937  0057D0  5C18               	subwf	(??_isupper+2)^0,w,c
  5938  0057D2  A0D8               	btfss	status,0,c
  5939  0057D4  EFEE  F02B         	goto	u7641
  5940  0057D8  EFF1  F02B         	goto	u7640
  5941  0057DC                     u7641:
  5942  0057DC  0E01               	movlw	1
  5943  0057DE  EFF2  F02B         	goto	u7650
  5944  0057E2                     u7640:
  5945  0057E2  0E00               	movlw	0
  5946  0057E4                     u7650:
  5947  0057E4  6E14               	movwf	?_isupper^0,c
  5948  0057E6  6A15               	clrf	(?_isupper+1)^0,c
  5949  0057E8  0012               	return		;funcret
  5950  0057EA                     __end_of_isupper:
  5951                           	callstack 0
  5952                           
  5953 ;; *************** function _strcpy *****************
  5954 ;; Defined at:
  5955 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strcpy.c"
  5956 ;; Parameters:    Size  Location     Type
  5957 ;;  dest            2   19[COMRAM] PTR unsigned char 
  5958 ;;		 -> dbuf(80), 
  5959 ;;  src             2   21[COMRAM] PTR const unsigned char 
  5960 ;;		 -> STR_11(4), STR_10(4), STR_7(4), STR_6(4), 
  5961 ;;		 -> dbuf(80), 
  5962 ;; Auto vars:     Size  Location     Type
  5963 ;;  d               2   27[COMRAM] PTR unsigned char 
  5964 ;;		 -> dbuf(80), 
  5965 ;;  s               2   25[COMRAM] PTR const unsigned char 
  5966 ;;		 -> STR_11(4), STR_10(4), STR_7(4), STR_6(4), 
  5967 ;;		 -> dbuf(80), 
  5968 ;; Return value:  Size  Location     Type
  5969 ;;                  2   19[COMRAM] PTR unsigned char 
  5970 ;; Registers used:
  5971 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5972 ;; Tracked objects:
  5973 ;;		On entry : 0/0
  5974 ;;		On exit  : 0/0
  5975 ;;		Unchanged: 0/0
  5976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5977 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5978 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5979 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5980 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5981 ;;Total ram usage:       10 bytes
  5982 ;; Hardware stack levels used: 1
  5983 ;; Hardware stack levels required when called: 8
  5984 ;; This function calls:
  5985 ;;		Nothing
  5986 ;; This function is called by:
  5987 ;;		_efgtoa
  5988 ;; This function uses a non-reentrant model
  5989 ;;
  5990                           
  5991                           	psect	text13
  5992  00528C                     __ptext13:
  5993                           	callstack 0
  5994  00528C                     _strcpy:
  5995                           	callstack 16
  5996  00528C  C016  F01A         	movff	strcpy@src,strcpy@s
  5997  005290  C017  F01B         	movff	strcpy@src+1,strcpy@s+1
  5998  005294  C014  F01C         	movff	strcpy@dest,strcpy@d
  5999  005298  C015  F01D         	movff	strcpy@dest+1,strcpy@d+1
  6000  00529C                     l8197:
  6001  00529C  501A               	movf	strcpy@s^0,w,c
  6002  00529E  6E18               	movwf	??_strcpy^0,c
  6003  0052A0  501B               	movf	(strcpy@s+1)^0,w,c
  6004  0052A2  6E19               	movwf	(??_strcpy+1)^0,c
  6005  0052A4  4A1A               	infsnz	strcpy@s^0,f,c
  6006  0052A6  2A1B               	incf	(strcpy@s+1)^0,f,c
  6007  0052A8  0060  F063  FFF6   	movff	??_strcpy,tblptrl
  6008  0052AE  0060  F067  FFF7   	movff	??_strcpy+1,tblptrh
  6009  0052B4  0E00               	movlw	low (__smallconst shr (0+16))
  6010  0052B6  6EF8               	movwf	tblptru,c
  6011  0052B8  0060  F073  FFD9   	movff	strcpy@d,fsr2l
  6012  0052BE  0060  F077  FFDA   	movff	strcpy@d+1,fsr2h
  6013  0052C4  4A1C               	infsnz	strcpy@d^0,f,c
  6014  0052C6  2A1D               	incf	(strcpy@d+1)^0,f,c
  6015  0052C8  0E0F               	movlw	(high __ramtop+-1)
  6016  0052CA  64F7               	cpfsgt	tblptrh,c
  6017  0052CC  D003               	bra	u8617
  6018  0052CE  0008               	tblrd		*
  6019  0052D0  50F5               	movf	tablat,w,c
  6020  0052D2  D007               	bra	u8610
  6021  0052D4                     u8617:
  6022  0052D4  006F FFDB FFE1     	movff	tblptrl,fsr1l
  6023  0052DA  006F FFDF FFE2     	movff	tblptrh,fsr1h
  6024  0052E0  50E7               	movf	indf1,w,c
  6025  0052E2                     u8610:
  6026  0052E2  6EDF               	movwf	indf2,c
  6027  0052E4  50DF               	movf	indf2,w,c
  6028  0052E6  A4D8               	btfss	status,2,c
  6029  0052E8  EF78  F029         	goto	u8621
  6030  0052EC  EF7A  F029         	goto	u8620
  6031  0052F0                     u8621:
  6032  0052F0  EF4E  F029         	goto	l8197
  6033  0052F4                     u8620:
  6034  0052F4  0012               	return		;funcret
  6035  0052F6                     __end_of_strcpy:
  6036                           	callstack 0
  6037                           
  6038 ;; *************** function _floorf *****************
  6039 ;; Defined at:
  6040 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\floorf.c"
  6041 ;; Parameters:    Size  Location     Type
  6042 ;;  x               4   44[COMRAM] float 
  6043 ;; Auto vars:     Size  Location     Type
  6044 ;;  u               4    6[BANK0 ] struct .
  6045 ;;  m               4    0[BANK0 ] unsigned long 
  6046 ;;  e               2    4[BANK0 ] int 
  6047 ;; Return value:  Size  Location     Type
  6048 ;;                  4   44[COMRAM] float 
  6049 ;; Registers used:
  6050 ;;		wreg, status,2, status,0
  6051 ;; Tracked objects:
  6052 ;;		On entry : 0/0
  6053 ;;		On exit  : 0/0
  6054 ;;		Unchanged: 0/0
  6055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6056 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6057 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6058 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6059 ;;      Totals:        10      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6060 ;;Total ram usage:       20 bytes
  6061 ;; Hardware stack levels used: 1
  6062 ;; Hardware stack levels required when called: 8
  6063 ;; This function calls:
  6064 ;;		Nothing
  6065 ;; This function is called by:
  6066 ;;		_efgtoa
  6067 ;; This function uses a non-reentrant model
  6068 ;;
  6069                           
  6070                           	psect	text14
  6071  00341E                     __ptext14:
  6072                           	callstack 0
  6073  00341E                     _floorf:
  6074                           	callstack 16
  6075  00341E  C118  F066         	movff	floorf@F527,floorf@u
  6076  003422  C119  F067         	movff	floorf@F527+1,floorf@u+1
  6077  003426  C11A  F068         	movff	floorf@F527+2,floorf@u+2
  6078  00342A  C11B  F069         	movff	floorf@F527+3,floorf@u+3
  6079  00342E  C02D  F066         	movff	floorf@x,floorf@u
  6080  003432  C02E  F067         	movff	floorf@x+1,floorf@u+1
  6081  003436  C02F  F068         	movff	floorf@x+2,floorf@u+2
  6082  00343A  C030  F069         	movff	floorf@x+3,floorf@u+3
  6083  00343E  0E81               	movlw	129
  6084  003440  6E31               	movwf	??_floorf^0,c
  6085  003442  0EFF               	movlw	255
  6086  003444  6E32               	movwf	(??_floorf+1)^0,c
  6087  003446  C066  F033         	movff	floorf@u,??_floorf+2
  6088  00344A  C067  F034         	movff	floorf@u+1,??_floorf+3
  6089  00344E  C068  F035         	movff	floorf@u+2,??_floorf+4
  6090  003452  C069  F036         	movff	floorf@u+3,??_floorf+5
  6091  003456  0E18               	movlw	24
  6092  003458  EF33  F01A         	goto	u8660
  6093  00345C                     u8665:
  6094  00345C  90D8               	bcf	status,0,c
  6095  00345E  3236               	rrcf	(??_floorf+5)^0,f,c
  6096  003460  3235               	rrcf	(??_floorf+4)^0,f,c
  6097  003462  3234               	rrcf	(??_floorf+3)^0,f,c
  6098  003464  3233               	rrcf	(??_floorf+2)^0,f,c
  6099  003466                     u8660:
  6100  003466  2EE8               	decfsz	wreg,f,c
  6101  003468  EF2E  F01A         	goto	u8665
  6102  00346C  5033               	movf	(??_floorf+2)^0,w,c
  6103  00346E  2431               	addwf	??_floorf^0,w,c
  6104  003470  0100               	movlb	0	; () banked
  6105  003472  6F64               	movwf	floorf@e& (0+255),b
  6106  003474  0E00               	movlw	0
  6107  003476  2032               	addwfc	(??_floorf+1)^0,w,c
  6108  003478  6F65               	movwf	(floorf@e+1)& (0+255),b
  6109  00347A  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
  6110  00347C  EF49  F01A         	goto	u8671
  6111  003480  5165               	movf	(floorf@e+1)& (0+255),w,b
  6112  003482  E109               	bnz	u8670
  6113  003484  0E17               	movlw	23
  6114  003486  5D64               	subwf	floorf@e& (0+255),w,b
  6115  003488  A0D8               	btfss	status,0,c
  6116  00348A  EF49  F01A         	goto	u8671
  6117  00348E  EF4B  F01A         	goto	u8670
  6118  003492                     u8671:
  6119  003492  EF55  F01A         	goto	l8215
  6120  003496                     u8670:
  6121  003496                     l8213:
  6122                           
  6123                           ; BSR set to: 0
  6124  003496  C02D  F02D         	movff	floorf@x,?_floorf
  6125  00349A  C02E  F02E         	movff	floorf@x+1,?_floorf+1
  6126  00349E  C02F  F02F         	movff	floorf@x+2,?_floorf+2
  6127  0034A2  C030  F030         	movff	floorf@x+3,?_floorf+3
  6128  0034A6  EF19  F01B         	goto	l2286
  6129  0034AA                     l8215:
  6130                           
  6131                           ; BSR set to: 0
  6132  0034AA  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
  6133  0034AC  EF5A  F01A         	goto	u8681
  6134  0034B0  EF5C  F01A         	goto	u8680
  6135  0034B4                     u8681:
  6136  0034B4  EFCD  F01A         	goto	l8225
  6137  0034B8                     u8680:
  6138  0034B8                     
  6139                           ; BSR set to: 0
  6140  0034B8  C064  F031         	movff	floorf@e,??_floorf
  6141  0034BC  0EFF               	movlw	255
  6142  0034BE  6E32               	movwf	(??_floorf+1)^0,c
  6143  0034C0  0EFF               	movlw	255
  6144  0034C2  6E33               	movwf	(??_floorf+2)^0,c
  6145  0034C4  0E7F               	movlw	127
  6146  0034C6  6E34               	movwf	(??_floorf+3)^0,c
  6147  0034C8  0E00               	movlw	0
  6148  0034CA  6E35               	movwf	(??_floorf+4)^0,c
  6149  0034CC                     u8695:
  6150  0034CC  6631               	tstfsz	??_floorf^0,c
  6151  0034CE  EF6B  F01A         	goto	u8696
  6152  0034D2  EF73  F01A         	goto	u8697
  6153  0034D6                     u8696:
  6154  0034D6  3435               	rlcf	(??_floorf+4)^0,w,c
  6155  0034D8  3235               	rrcf	(??_floorf+4)^0,f,c
  6156  0034DA  3234               	rrcf	(??_floorf+3)^0,f,c
  6157  0034DC  3233               	rrcf	(??_floorf+2)^0,f,c
  6158  0034DE  3232               	rrcf	(??_floorf+1)^0,f,c
  6159  0034E0  2E31               	decfsz	??_floorf^0,f,c
  6160  0034E2  EF66  F01A         	goto	u8695
  6161  0034E6                     u8697:
  6162  0034E6  C032  F060         	movff	??_floorf+1,floorf@m
  6163  0034EA  C033  F061         	movff	??_floorf+2,floorf@m+1
  6164  0034EE  C034  F062         	movff	??_floorf+3,floorf@m+2
  6165  0034F2  C035  F063         	movff	??_floorf+4,floorf@m+3
  6166  0034F6  0100               	movlb	0	; () banked
  6167  0034F8  5160               	movf	floorf@m& (0+255),w,b
  6168  0034FA  1566               	andwf	floorf@u& (0+255),w,b
  6169  0034FC  6E31               	movwf	??_floorf^0,c
  6170  0034FE  5161               	movf	(floorf@m+1)& (0+255),w,b
  6171  003500  1567               	andwf	(floorf@u+1)& (0+255),w,b
  6172  003502  6E32               	movwf	(??_floorf+1)^0,c
  6173  003504  5162               	movf	(floorf@m+2)& (0+255),w,b
  6174  003506  1568               	andwf	(floorf@u+2)& (0+255),w,b
  6175  003508  6E33               	movwf	(??_floorf+2)^0,c
  6176  00350A  5163               	movf	(floorf@m+3)& (0+255),w,b
  6177  00350C  1569               	andwf	(floorf@u+3)& (0+255),w,b
  6178  00350E  6E34               	movwf	(??_floorf+3)^0,c
  6179  003510  5031               	movf	??_floorf^0,w,c
  6180  003512  1032               	iorwf	(??_floorf+1)^0,w,c
  6181  003514  1033               	iorwf	(??_floorf+2)^0,w,c
  6182  003516  1034               	iorwf	(??_floorf+3)^0,w,c
  6183  003518  A4D8               	btfss	status,2,c
  6184  00351A  EF91  F01A         	goto	u8701
  6185  00351E  EF93  F01A         	goto	u8700
  6186  003522                     u8701:
  6187  003522  EF95  F01A         	goto	l8221
  6188  003526                     u8700:
  6189  003526  EF4B  F01A         	goto	l8213
  6190  00352A                     l8221:
  6191                           
  6192                           ; BSR set to: 0
  6193  00352A  C066  F031         	movff	floorf@u,??_floorf
  6194  00352E  C067  F032         	movff	floorf@u+1,??_floorf+1
  6195  003532  C068  F033         	movff	floorf@u+2,??_floorf+2
  6196  003536  C069  F034         	movff	floorf@u+3,??_floorf+3
  6197  00353A  0E20               	movlw	32
  6198  00353C  EFA5  F01A         	goto	u8710
  6199  003540                     u8715:
  6200  003540  90D8               	bcf	status,0,c
  6201  003542  3234               	rrcf	(??_floorf+3)^0,f,c
  6202  003544  3233               	rrcf	(??_floorf+2)^0,f,c
  6203  003546  3232               	rrcf	(??_floorf+1)^0,f,c
  6204  003548  3231               	rrcf	??_floorf^0,f,c
  6205  00354A                     u8710:
  6206  00354A  2EE8               	decfsz	wreg,f,c
  6207  00354C  EFA0  F01A         	goto	u8715
  6208  003550  5031               	movf	??_floorf^0,w,c
  6209  003552  1032               	iorwf	(??_floorf+1)^0,w,c
  6210  003554  1033               	iorwf	(??_floorf+2)^0,w,c
  6211  003556  1034               	iorwf	(??_floorf+3)^0,w,c
  6212  003558  B4D8               	btfsc	status,2,c
  6213  00355A  EFB1  F01A         	goto	u8721
  6214  00355E  EFB3  F01A         	goto	u8720
  6215  003562                     u8721:
  6216  003562  EFBB  F01A         	goto	l2289
  6217  003566                     u8720:
  6218  003566                     
  6219                           ; BSR set to: 0
  6220  003566  5160               	movf	floorf@m& (0+255),w,b
  6221  003568  2766               	addwf	floorf@u& (0+255),f,b
  6222  00356A  5161               	movf	(floorf@m+1)& (0+255),w,b
  6223  00356C  2367               	addwfc	(floorf@u+1)& (0+255),f,b
  6224  00356E  5162               	movf	(floorf@m+2)& (0+255),w,b
  6225  003570  2368               	addwfc	(floorf@u+2)& (0+255),f,b
  6226  003572  5163               	movf	(floorf@m+3)& (0+255),w,b
  6227  003574  2369               	addwfc	(floorf@u+3)& (0+255),f,b
  6228  003576                     l2289:
  6229                           
  6230                           ; BSR set to: 0
  6231  003576  1D60               	comf	floorf@m& (0+255),w,b
  6232  003578  6E31               	movwf	??_floorf^0,c
  6233  00357A  1D61               	comf	(floorf@m+1)& (0+255),w,b
  6234  00357C  6E32               	movwf	(??_floorf+1)^0,c
  6235  00357E  1D62               	comf	(floorf@m+2)& (0+255),w,b
  6236  003580  6E33               	movwf	(??_floorf+2)^0,c
  6237  003582  1D63               	comf	(floorf@m+3)& (0+255),w,b
  6238  003584  6E34               	movwf	(??_floorf+3)^0,c
  6239  003586  5031               	movf	??_floorf^0,w,c
  6240  003588  1766               	andwf	floorf@u& (0+255),f,b
  6241  00358A  5032               	movf	(??_floorf+1)^0,w,c
  6242  00358C  1767               	andwf	(floorf@u+1)& (0+255),f,b
  6243  00358E  5033               	movf	(??_floorf+2)^0,w,c
  6244  003590  1768               	andwf	(floorf@u+2)& (0+255),f,b
  6245  003592  5034               	movf	(??_floorf+3)^0,w,c
  6246  003594  1769               	andwf	(floorf@u+3)& (0+255),f,b
  6247  003596  EF11  F01B         	goto	l8233
  6248  00359A                     l8225:
  6249                           
  6250                           ; BSR set to: 0
  6251  00359A  C066  F031         	movff	floorf@u,??_floorf
  6252  00359E  C067  F032         	movff	floorf@u+1,??_floorf+1
  6253  0035A2  C068  F033         	movff	floorf@u+2,??_floorf+2
  6254  0035A6  C069  F034         	movff	floorf@u+3,??_floorf+3
  6255  0035AA  0E20               	movlw	32
  6256  0035AC  EFDD  F01A         	goto	u8730
  6257  0035B0                     u8735:
  6258  0035B0  90D8               	bcf	status,0,c
  6259  0035B2  3234               	rrcf	(??_floorf+3)^0,f,c
  6260  0035B4  3233               	rrcf	(??_floorf+2)^0,f,c
  6261  0035B6  3232               	rrcf	(??_floorf+1)^0,f,c
  6262  0035B8  3231               	rrcf	??_floorf^0,f,c
  6263  0035BA                     u8730:
  6264  0035BA  2EE8               	decfsz	wreg,f,c
  6265  0035BC  EFD8  F01A         	goto	u8735
  6266  0035C0  5031               	movf	??_floorf^0,w,c
  6267  0035C2  1032               	iorwf	(??_floorf+1)^0,w,c
  6268  0035C4  1033               	iorwf	(??_floorf+2)^0,w,c
  6269  0035C6  1034               	iorwf	(??_floorf+3)^0,w,c
  6270  0035C8  A4D8               	btfss	status,2,c
  6271  0035CA  EFE9  F01A         	goto	u8741
  6272  0035CE  EFEB  F01A         	goto	u8740
  6273  0035D2                     u8741:
  6274  0035D2  EFF5  F01A         	goto	l8229
  6275  0035D6                     u8740:
  6276  0035D6                     
  6277                           ; BSR set to: 0
  6278  0035D6  0E00               	movlw	0
  6279  0035D8  6F66               	movwf	floorf@u& (0+255),b
  6280  0035DA  0E00               	movlw	0
  6281  0035DC  6F67               	movwf	(floorf@u+1)& (0+255),b
  6282  0035DE  0E00               	movlw	0
  6283  0035E0  6F68               	movwf	(floorf@u+2)& (0+255),b
  6284  0035E2  0E00               	movlw	0
  6285  0035E4  6F69               	movwf	(floorf@u+3)& (0+255),b
  6286  0035E6  EF11  F01B         	goto	l8233
  6287  0035EA                     l8229:
  6288                           
  6289                           ; BSR set to: 0
  6290  0035EA  90D8               	bcf	status,0,c
  6291  0035EC  3566               	rlcf	floorf@u& (0+255),w,b
  6292  0035EE  6E31               	movwf	??_floorf^0,c
  6293  0035F0  3567               	rlcf	(floorf@u+1)& (0+255),w,b
  6294  0035F2  6E32               	movwf	(??_floorf+1)^0,c
  6295  0035F4  3568               	rlcf	(floorf@u+2)& (0+255),w,b
  6296  0035F6  6E33               	movwf	(??_floorf+2)^0,c
  6297  0035F8  3569               	rlcf	(floorf@u+3)& (0+255),w,b
  6298  0035FA  6E34               	movwf	(??_floorf+3)^0,c
  6299  0035FC  5031               	movf	??_floorf^0,w,c
  6300  0035FE  1032               	iorwf	(??_floorf+1)^0,w,c
  6301  003600  1033               	iorwf	(??_floorf+2)^0,w,c
  6302  003602  1034               	iorwf	(??_floorf+3)^0,w,c
  6303  003604  B4D8               	btfsc	status,2,c
  6304  003606  EF07  F01B         	goto	u8751
  6305  00360A  EF09  F01B         	goto	u8750
  6306  00360E                     u8751:
  6307  00360E  EF11  F01B         	goto	l8233
  6308  003612                     u8750:
  6309  003612                     
  6310                           ; BSR set to: 0
  6311  003612  0E00               	movlw	0
  6312  003614  6F66               	movwf	floorf@u& (0+255),b
  6313  003616  0E00               	movlw	0
  6314  003618  6F67               	movwf	(floorf@u+1)& (0+255),b
  6315  00361A  0E80               	movlw	128
  6316  00361C  6F68               	movwf	(floorf@u+2)& (0+255),b
  6317  00361E  0EBF               	movlw	191
  6318  003620  6F69               	movwf	(floorf@u+3)& (0+255),b
  6319  003622                     l8233:
  6320                           
  6321                           ; BSR set to: 0
  6322  003622  C066  F02D         	movff	floorf@u,?_floorf
  6323  003626  C067  F02E         	movff	floorf@u+1,?_floorf+1
  6324  00362A  C068  F02F         	movff	floorf@u+2,?_floorf+2
  6325  00362E  C069  F030         	movff	floorf@u+3,?_floorf+3
  6326  003632                     l2286:
  6327                           
  6328                           ; BSR set to: 0
  6329  003632  0012               	return		;funcret
  6330  003634                     __end_of_floorf:
  6331                           	callstack 0
  6332                           
  6333 ;; *************** function ___fpclassifyf *****************
  6334 ;; Defined at:
  6335 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__fpclassifyf.c"
  6336 ;; Parameters:    Size  Location     Type
  6337 ;;  x               4   19[COMRAM] float 
  6338 ;; Auto vars:     Size  Location     Type
  6339 ;;  u               4   29[COMRAM] struct .
  6340 ;;  e               2   27[COMRAM] int 
  6341 ;; Return value:  Size  Location     Type
  6342 ;;                  2   19[COMRAM] int 
  6343 ;; Registers used:
  6344 ;;		wreg, status,2, status,0
  6345 ;; Tracked objects:
  6346 ;;		On entry : 0/0
  6347 ;;		On exit  : 0/0
  6348 ;;		Unchanged: 0/0
  6349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6350 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6351 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6352 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6353 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6354 ;;Total ram usage:       14 bytes
  6355 ;; Hardware stack levels used: 1
  6356 ;; Hardware stack levels required when called: 8
  6357 ;; This function calls:
  6358 ;;		Nothing
  6359 ;; This function is called by:
  6360 ;;		_efgtoa
  6361 ;; This function uses a non-reentrant model
  6362 ;;
  6363                           
  6364                           	psect	text15
  6365  00487E                     __ptext15:
  6366                           	callstack 0
  6367  00487E                     ___fpclassifyf:
  6368                           	callstack 16
  6369  00487E  C11C  F01E         	movff	___fpclassifyf@F465,___fpclassifyf@u
  6370  004882  C11D  F01F         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  6371  004886  C11E  F020         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  6372  00488A  C11F  F021         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  6373  00488E  C014  F01E         	movff	___fpclassifyf@x,___fpclassifyf@u
  6374  004892  C015  F01F         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  6375  004896  C016  F020         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  6376  00489A  C017  F021         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  6377  00489E  C01E  F018         	movff	___fpclassifyf@u,??___fpclassifyf
  6378  0048A2  C01F  F019         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6379  0048A6  C020  F01A         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6380  0048AA  C021  F01B         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6381  0048AE  0E18               	movlw	24
  6382  0048B0  EF5F  F024         	goto	u8540
  6383  0048B4                     u8545:
  6384  0048B4  90D8               	bcf	status,0,c
  6385  0048B6  321B               	rrcf	(??___fpclassifyf+3)^0,f,c
  6386  0048B8  321A               	rrcf	(??___fpclassifyf+2)^0,f,c
  6387  0048BA  3219               	rrcf	(??___fpclassifyf+1)^0,f,c
  6388  0048BC  3218               	rrcf	??___fpclassifyf^0,f,c
  6389  0048BE                     u8540:
  6390  0048BE  2EE8               	decfsz	wreg,f,c
  6391  0048C0  EF5A  F024         	goto	u8545
  6392  0048C4  5018               	movf	??___fpclassifyf^0,w,c
  6393  0048C6  6E1C               	movwf	___fpclassifyf@e^0,c
  6394  0048C8  6A1D               	clrf	(___fpclassifyf@e+1)^0,c
  6395  0048CA  501C               	movf	___fpclassifyf@e^0,w,c
  6396  0048CC  101D               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6397  0048CE  A4D8               	btfss	status,2,c
  6398  0048D0  EF6C  F024         	goto	u8551
  6399  0048D4  EF6E  F024         	goto	u8550
  6400  0048D8                     u8551:
  6401  0048D8  EF8E  F024         	goto	l8185
  6402  0048DC                     u8550:
  6403  0048DC  90D8               	bcf	status,0,c
  6404  0048DE  341E               	rlcf	___fpclassifyf@u^0,w,c
  6405  0048E0  6E18               	movwf	??___fpclassifyf^0,c
  6406  0048E2  341F               	rlcf	(___fpclassifyf@u+1)^0,w,c
  6407  0048E4  6E19               	movwf	(??___fpclassifyf+1)^0,c
  6408  0048E6  3420               	rlcf	(___fpclassifyf@u+2)^0,w,c
  6409  0048E8  6E1A               	movwf	(??___fpclassifyf+2)^0,c
  6410  0048EA  3421               	rlcf	(___fpclassifyf@u+3)^0,w,c
  6411  0048EC  6E1B               	movwf	(??___fpclassifyf+3)^0,c
  6412  0048EE  5018               	movf	??___fpclassifyf^0,w,c
  6413  0048F0  1019               	iorwf	(??___fpclassifyf+1)^0,w,c
  6414  0048F2  101A               	iorwf	(??___fpclassifyf+2)^0,w,c
  6415  0048F4  101B               	iorwf	(??___fpclassifyf+3)^0,w,c
  6416  0048F6  A4D8               	btfss	status,2,c
  6417  0048F8  EF80  F024         	goto	u8561
  6418  0048FC  EF82  F024         	goto	u8560
  6419  004900                     u8561:
  6420  004900  EF88  F024         	goto	l8181
  6421  004904                     u8560:
  6422  004904  0E00               	movlw	0
  6423  004906  6E15               	movwf	(?___fpclassifyf+1)^0,c
  6424  004908  0E02               	movlw	2
  6425  00490A  6E14               	movwf	?___fpclassifyf^0,c
  6426  00490C  EFBD  F024         	goto	l2272
  6427  004910                     l8181:
  6428  004910  0E00               	movlw	0
  6429  004912  6E15               	movwf	(?___fpclassifyf+1)^0,c
  6430  004914  0E03               	movlw	3
  6431  004916  6E14               	movwf	?___fpclassifyf^0,c
  6432  004918  EFBD  F024         	goto	l2272
  6433  00491C                     l8185:
  6434  00491C  281C               	incf	___fpclassifyf@e^0,w,c
  6435  00491E  101D               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6436  004920  A4D8               	btfss	status,2,c
  6437  004922  EF95  F024         	goto	u8571
  6438  004926  EF97  F024         	goto	u8570
  6439  00492A                     u8571:
  6440  00492A  EFB9  F024         	goto	l8191
  6441  00492E                     u8570:
  6442  00492E  C01E  F018         	movff	___fpclassifyf@u,??___fpclassifyf
  6443  004932  C01F  F019         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6444  004936  C020  F01A         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6445  00493A  C021  F01B         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6446  00493E  0E09               	movlw	9
  6447  004940                     u8585:
  6448  004940  90D8               	bcf	status,0,c
  6449  004942  3618               	rlcf	??___fpclassifyf^0,f,c
  6450  004944  3619               	rlcf	(??___fpclassifyf+1)^0,f,c
  6451  004946  361A               	rlcf	(??___fpclassifyf+2)^0,f,c
  6452  004948  361B               	rlcf	(??___fpclassifyf+3)^0,f,c
  6453  00494A  2EE8               	decfsz	wreg,f,c
  6454  00494C  EFA0  F024         	goto	u8585
  6455  004950  5018               	movf	??___fpclassifyf^0,w,c
  6456  004952  1019               	iorwf	(??___fpclassifyf+1)^0,w,c
  6457  004954  101A               	iorwf	(??___fpclassifyf+2)^0,w,c
  6458  004956  101B               	iorwf	(??___fpclassifyf+3)^0,w,c
  6459  004958  B4D8               	btfsc	status,2,c
  6460  00495A  EFB1  F024         	goto	u8591
  6461  00495E  EFB4  F024         	goto	u8590
  6462  004962                     u8591:
  6463  004962  0E01               	movlw	1
  6464  004964  EFB5  F024         	goto	u8600
  6465  004968                     u8590:
  6466  004968  0E00               	movlw	0
  6467  00496A                     u8600:
  6468  00496A  6E14               	movwf	?___fpclassifyf^0,c
  6469  00496C  6A15               	clrf	(?___fpclassifyf+1)^0,c
  6470  00496E  EFBD  F024         	goto	l2272
  6471  004972                     l8191:
  6472  004972  0E00               	movlw	0
  6473  004974  6E15               	movwf	(?___fpclassifyf+1)^0,c
  6474  004976  0E04               	movlw	4
  6475  004978  6E14               	movwf	?___fpclassifyf^0,c
  6476  00497A                     l2272:
  6477  00497A  0012               	return		;funcret
  6478  00497C                     __end_of___fpclassifyf:
  6479                           	callstack 0
  6480                           
  6481 ;; *************** function ___flsub *****************
  6482 ;; Defined at:
  6483 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  6484 ;; Parameters:    Size  Location     Type
  6485 ;;  b               4   25[BANK0 ] int 
  6486 ;;  a               4   29[BANK0 ] int 
  6487 ;; Auto vars:     Size  Location     Type
  6488 ;;		None
  6489 ;; Return value:  Size  Location     Type
  6490 ;;                  4   25[BANK0 ] int 
  6491 ;; Registers used:
  6492 ;;		wreg, status,2, status,0, cstack
  6493 ;; Tracked objects:
  6494 ;;		On entry : 0/0
  6495 ;;		On exit  : 0/0
  6496 ;;		Unchanged: 0/0
  6497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6498 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6501 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6502 ;;Total ram usage:        8 bytes
  6503 ;; Hardware stack levels used: 1
  6504 ;; Hardware stack levels required when called: 9
  6505 ;; This function calls:
  6506 ;;		___fladd
  6507 ;; This function is called by:
  6508 ;;		_efgtoa
  6509 ;; This function uses a non-reentrant model
  6510 ;;
  6511                           
  6512                           	psect	text16
  6513  0055F2                     __ptext16:
  6514                           	callstack 0
  6515  0055F2                     ___flsub:
  6516                           	callstack 15
  6517  0055F2  0E00               	movlw	0
  6518  0055F4  0100               	movlb	0	; () banked
  6519  0055F6  1B7D               	xorwf	___flsub@a& (0+255),f,b
  6520  0055F8  0E00               	movlw	0
  6521  0055FA  1B7E               	xorwf	(___flsub@a+1)& (0+255),f,b
  6522  0055FC  0E00               	movlw	0
  6523  0055FE  1B7F               	xorwf	(___flsub@a+2)& (0+255),f,b
  6524  005600  0E80               	movlw	128
  6525  005602  1B80               	xorwf	(___flsub@a+3)& (0+255),f,b
  6526  005604                     
  6527                           ; BSR set to: 0
  6528  005604  C079  F06D         	movff	___flsub@b,___fladd@b
  6529  005608  C07A  F06E         	movff	___flsub@b+1,___fladd@b+1
  6530  00560C  C07B  F06F         	movff	___flsub@b+2,___fladd@b+2
  6531  005610  C07C  F070         	movff	___flsub@b+3,___fladd@b+3
  6532  005614  C07D  F071         	movff	___flsub@a,___fladd@a
  6533  005618  C07E  F072         	movff	___flsub@a+1,___fladd@a+1
  6534  00561C  C07F  F073         	movff	___flsub@a+2,___fladd@a+2
  6535  005620  C080  F074         	movff	___flsub@a+3,___fladd@a+3
  6536  005624  EC15  F011         	call	___fladd	;wreg free
  6537  005628  C06D  F079         	movff	?___fladd,?___flsub
  6538  00562C  C06E  F07A         	movff	?___fladd+1,?___flsub+1
  6539  005630  C06F  F07B         	movff	?___fladd+2,?___flsub+2
  6540  005634  C070  F07C         	movff	?___fladd+3,?___flsub+3
  6541  005638  0012               	return		;funcret
  6542  00563A                     __end_of___flsub:
  6543                           	callstack 0
  6544                           
  6545 ;; *************** function ___flneg *****************
  6546 ;; Defined at:
  6547 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flneg.c"
  6548 ;; Parameters:    Size  Location     Type
  6549 ;;  f1              4   19[COMRAM] int 
  6550 ;; Auto vars:     Size  Location     Type
  6551 ;;		None
  6552 ;; Return value:  Size  Location     Type
  6553 ;;                  4   19[COMRAM] int 
  6554 ;; Registers used:
  6555 ;;		wreg, status,2, status,0
  6556 ;; Tracked objects:
  6557 ;;		On entry : 0/0
  6558 ;;		On exit  : 0/0
  6559 ;;		Unchanged: 0/0
  6560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6561 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6564 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6565 ;;Total ram usage:        4 bytes
  6566 ;; Hardware stack levels used: 1
  6567 ;; Hardware stack levels required when called: 8
  6568 ;; This function calls:
  6569 ;;		Nothing
  6570 ;; This function is called by:
  6571 ;;		_efgtoa
  6572 ;; This function uses a non-reentrant model
  6573 ;;
  6574                           
  6575                           	psect	text17
  6576  0057EA                     __ptext17:
  6577                           	callstack 0
  6578  0057EA                     ___flneg:
  6579                           	callstack 16
  6580  0057EA  5014               	movf	___flneg@f1^0,w,c
  6581  0057EC  1015               	iorwf	(___flneg@f1+1)^0,w,c
  6582  0057EE  1016               	iorwf	(___flneg@f1+2)^0,w,c
  6583  0057F0  1017               	iorwf	(___flneg@f1+3)^0,w,c
  6584  0057F2  B4D8               	btfsc	status,2,c
  6585  0057F4  EFFE  F02B         	goto	u8411
  6586  0057F8  EF00  F02C         	goto	u8410
  6587  0057FC                     u8411:
  6588  0057FC  EF08  F02C         	goto	l8099
  6589  005800                     u8410:
  6590  005800  0E00               	movlw	0
  6591  005802  1A14               	xorwf	___flneg@f1^0,f,c
  6592  005804  0E00               	movlw	0
  6593  005806  1A15               	xorwf	(___flneg@f1+1)^0,f,c
  6594  005808  0E00               	movlw	0
  6595  00580A  1A16               	xorwf	(___flneg@f1+2)^0,f,c
  6596  00580C  0E80               	movlw	128
  6597  00580E  1A17               	xorwf	(___flneg@f1+3)^0,f,c
  6598  005810                     l8099:
  6599  005810  C014  F014         	movff	___flneg@f1,?___flneg
  6600  005814  C015  F015         	movff	___flneg@f1+1,?___flneg+1
  6601  005818  C016  F016         	movff	___flneg@f1+2,?___flneg+2
  6602  00581C  C017  F017         	movff	___flneg@f1+3,?___flneg+3
  6603  005820  0012               	return		;funcret
  6604  005822                     __end_of___flneg:
  6605                           	callstack 0
  6606                           
  6607 ;; *************** function ___fleq *****************
  6608 ;; Defined at:
  6609 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fleq.c"
  6610 ;; Parameters:    Size  Location     Type
  6611 ;;  ff1             4   19[COMRAM] int 
  6612 ;;  ff2             4   23[COMRAM] int 
  6613 ;; Auto vars:     Size  Location     Type
  6614 ;;		None
  6615 ;; Return value:  Size  Location     Type
  6616 ;;		None               void
  6617 ;; Registers used:
  6618 ;;		wreg, status,2, status,0
  6619 ;; Tracked objects:
  6620 ;;		On entry : 0/0
  6621 ;;		On exit  : 0/0
  6622 ;;		Unchanged: 0/0
  6623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6624 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6626 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6627 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6628 ;;Total ram usage:       12 bytes
  6629 ;; Hardware stack levels used: 1
  6630 ;; Hardware stack levels required when called: 8
  6631 ;; This function calls:
  6632 ;;		Nothing
  6633 ;; This function is called by:
  6634 ;;		_efgtoa
  6635 ;; This function uses a non-reentrant model
  6636 ;;
  6637                           
  6638                           	psect	text18
  6639  004F12                     __ptext18:
  6640                           	callstack 0
  6641  004F12                     ___fleq:
  6642                           	callstack 16
  6643  004F12  0E00               	movlw	0
  6644  004F14  1414               	andwf	___fleq@ff1^0,w,c
  6645  004F16  6E1C               	movwf	??___fleq^0,c
  6646  004F18  0E00               	movlw	0
  6647  004F1A  1415               	andwf	(___fleq@ff1+1)^0,w,c
  6648  004F1C  6E1D               	movwf	(??___fleq+1)^0,c
  6649  004F1E  0E80               	movlw	128
  6650  004F20  1416               	andwf	(___fleq@ff1+2)^0,w,c
  6651  004F22  6E1E               	movwf	(??___fleq+2)^0,c
  6652  004F24  0E7F               	movlw	127
  6653  004F26  1417               	andwf	(___fleq@ff1+3)^0,w,c
  6654  004F28  6E1F               	movwf	(??___fleq+3)^0,c
  6655  004F2A  501C               	movf	??___fleq^0,w,c
  6656  004F2C  101D               	iorwf	(??___fleq+1)^0,w,c
  6657  004F2E  101E               	iorwf	(??___fleq+2)^0,w,c
  6658  004F30  101F               	iorwf	(??___fleq+3)^0,w,c
  6659  004F32  A4D8               	btfss	status,2,c
  6660  004F34  EF9E  F027         	goto	u8331
  6661  004F38  EFA0  F027         	goto	u8330
  6662  004F3C                     u8331:
  6663  004F3C  EFA8  F027         	goto	l8061
  6664  004F40                     u8330:
  6665  004F40  0E00               	movlw	0
  6666  004F42  6E14               	movwf	___fleq@ff1^0,c
  6667  004F44  0E00               	movlw	0
  6668  004F46  6E15               	movwf	(___fleq@ff1+1)^0,c
  6669  004F48  0E00               	movlw	0
  6670  004F4A  6E16               	movwf	(___fleq@ff1+2)^0,c
  6671  004F4C  0E00               	movlw	0
  6672  004F4E  6E17               	movwf	(___fleq@ff1+3)^0,c
  6673  004F50                     l8061:
  6674  004F50  0E00               	movlw	0
  6675  004F52  1418               	andwf	___fleq@ff2^0,w,c
  6676  004F54  6E1C               	movwf	??___fleq^0,c
  6677  004F56  0E00               	movlw	0
  6678  004F58  1419               	andwf	(___fleq@ff2+1)^0,w,c
  6679  004F5A  6E1D               	movwf	(??___fleq+1)^0,c
  6680  004F5C  0E80               	movlw	128
  6681  004F5E  141A               	andwf	(___fleq@ff2+2)^0,w,c
  6682  004F60  6E1E               	movwf	(??___fleq+2)^0,c
  6683  004F62  0E7F               	movlw	127
  6684  004F64  141B               	andwf	(___fleq@ff2+3)^0,w,c
  6685  004F66  6E1F               	movwf	(??___fleq+3)^0,c
  6686  004F68  501C               	movf	??___fleq^0,w,c
  6687  004F6A  101D               	iorwf	(??___fleq+1)^0,w,c
  6688  004F6C  101E               	iorwf	(??___fleq+2)^0,w,c
  6689  004F6E  101F               	iorwf	(??___fleq+3)^0,w,c
  6690  004F70  A4D8               	btfss	status,2,c
  6691  004F72  EFBD  F027         	goto	u8341
  6692  004F76  EFBF  F027         	goto	u8340
  6693  004F7A                     u8341:
  6694  004F7A  EFC7  F027         	goto	l8065
  6695  004F7E                     u8340:
  6696  004F7E  0E00               	movlw	0
  6697  004F80  6E18               	movwf	___fleq@ff2^0,c
  6698  004F82  0E00               	movlw	0
  6699  004F84  6E19               	movwf	(___fleq@ff2+1)^0,c
  6700  004F86  0E00               	movlw	0
  6701  004F88  6E1A               	movwf	(___fleq@ff2+2)^0,c
  6702  004F8A  0E00               	movlw	0
  6703  004F8C  6E1B               	movwf	(___fleq@ff2+3)^0,c
  6704  004F8E                     l8065:
  6705  004F8E  5018               	movf	___fleq@ff2^0,w,c
  6706  004F90  1814               	xorwf	___fleq@ff1^0,w,c
  6707  004F92  E10F               	bnz	u8350
  6708  004F94  5019               	movf	(___fleq@ff2+1)^0,w,c
  6709  004F96  1815               	xorwf	(___fleq@ff1+1)^0,w,c
  6710  004F98  E10C               	bnz	u8350
  6711  004F9A  501A               	movf	(___fleq@ff2+2)^0,w,c
  6712  004F9C  1816               	xorwf	(___fleq@ff1+2)^0,w,c
  6713  004F9E  E109               	bnz	u8350
  6714  004FA0  501B               	movf	(___fleq@ff2+3)^0,w,c
  6715  004FA2  1817               	xorwf	(___fleq@ff1+3)^0,w,c
  6716  004FA4  B4D8               	btfsc	status,2,c
  6717  004FA6  EFD7  F027         	goto	u8351
  6718  004FAA  EFD9  F027         	goto	u8350
  6719  004FAE                     u8351:
  6720  004FAE  EFDC  F027         	goto	l8069
  6721  004FB2                     u8350:
  6722  004FB2  90D8               	bcf	status,0,c
  6723  004FB4  EFDD  F027         	goto	l1656
  6724  004FB8                     l8069:
  6725  004FB8  80D8               	bsf	status,0,c
  6726  004FBA                     l1656:
  6727  004FBA  0012               	return		;funcret
  6728  004FBC                     __end_of___fleq:
  6729                           	callstack 0
  6730                           
  6731 ;; *************** function ___fldiv *****************
  6732 ;; Defined at:
  6733 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
  6734 ;; Parameters:    Size  Location     Type
  6735 ;;  b               4   19[COMRAM] int 
  6736 ;;  a               4   23[COMRAM] int 
  6737 ;; Auto vars:     Size  Location     Type
  6738 ;;  grs             4   38[COMRAM] unsigned long 
  6739 ;;  rem             4   31[COMRAM] unsigned long 
  6740 ;;  new_exp         2   36[COMRAM] short 
  6741 ;;  aexp            1   43[COMRAM] unsigned char 
  6742 ;;  bexp            1   42[COMRAM] unsigned char 
  6743 ;;  sign            1   35[COMRAM] unsigned char 
  6744 ;; Return value:  Size  Location     Type
  6745 ;;                  4   19[COMRAM] unsigned char 
  6746 ;; Registers used:
  6747 ;;		wreg, status,2, status,0
  6748 ;; Tracked objects:
  6749 ;;		On entry : 0/0
  6750 ;;		On exit  : 0/0
  6751 ;;		Unchanged: 0/0
  6752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6753 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6754 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6755 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6756 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6757 ;;Total ram usage:       25 bytes
  6758 ;; Hardware stack levels used: 1
  6759 ;; Hardware stack levels required when called: 8
  6760 ;; This function calls:
  6761 ;;		Nothing
  6762 ;; This function is called by:
  6763 ;;		_efgtoa
  6764 ;; This function uses a non-reentrant model
  6765 ;;
  6766                           
  6767                           	psect	text19
  6768  002B3C                     __ptext19:
  6769                           	callstack 0
  6770  002B3C                     ___fldiv:
  6771                           	callstack 16
  6772  002B3C  5017               	movf	(___fldiv@b+3)^0,w,c
  6773  002B3E  0B80               	andlw	128
  6774  002B40  6E24               	movwf	___fldiv@sign^0,c
  6775  002B42  5017               	movf	(___fldiv@b+3)^0,w,c
  6776  002B44  2417               	addwf	(___fldiv@b+3)^0,w,c
  6777  002B46  6E2B               	movwf	___fldiv@bexp^0,c
  6778  002B48  AE16               	btfss	(___fldiv@b+2)^0,7,c
  6779  002B4A  EFA9  F015         	goto	u7791
  6780  002B4E  EFAB  F015         	goto	u7790
  6781  002B52                     u7791:
  6782  002B52  EFAC  F015         	goto	l7709
  6783  002B56                     u7790:
  6784  002B56  802B               	bsf	___fldiv@bexp^0,0,c
  6785  002B58                     l7709:
  6786  002B58  502B               	movf	___fldiv@bexp^0,w,c
  6787  002B5A  B4D8               	btfsc	status,2,c
  6788  002B5C  EFB2  F015         	goto	u7801
  6789  002B60  EFB4  F015         	goto	u7800
  6790  002B64                     u7801:
  6791  002B64  EFC9  F015         	goto	l7719
  6792  002B68                     u7800:
  6793  002B68  282B               	incf	___fldiv@bexp^0,w,c
  6794  002B6A  A4D8               	btfss	status,2,c
  6795  002B6C  EFBA  F015         	goto	u7811
  6796  002B70  EFBC  F015         	goto	u7810
  6797  002B74                     u7811:
  6798  002B74  EFC4  F015         	goto	l7715
  6799  002B78                     u7810:
  6800  002B78  0E00               	movlw	0
  6801  002B7A  6E14               	movwf	___fldiv@b^0,c
  6802  002B7C  0E00               	movlw	0
  6803  002B7E  6E15               	movwf	(___fldiv@b+1)^0,c
  6804  002B80  0E00               	movlw	0
  6805  002B82  6E16               	movwf	(___fldiv@b+2)^0,c
  6806  002B84  0E00               	movlw	0
  6807  002B86  6E17               	movwf	(___fldiv@b+3)^0,c
  6808  002B88                     l7715:
  6809  002B88  8E16               	bsf	(___fldiv@b+2)^0,7,c
  6810  002B8A  0E00               	movlw	0
  6811  002B8C  6E17               	movwf	(___fldiv@b+3)^0,c
  6812  002B8E  EFD1  F015         	goto	l7721
  6813  002B92                     l7719:
  6814  002B92  0E00               	movlw	0
  6815  002B94  6E14               	movwf	___fldiv@b^0,c
  6816  002B96  0E00               	movlw	0
  6817  002B98  6E15               	movwf	(___fldiv@b+1)^0,c
  6818  002B9A  0E00               	movlw	0
  6819  002B9C  6E16               	movwf	(___fldiv@b+2)^0,c
  6820  002B9E  0E00               	movlw	0
  6821  002BA0  6E17               	movwf	(___fldiv@b+3)^0,c
  6822  002BA2                     l7721:
  6823  002BA2  501B               	movf	(___fldiv@a+3)^0,w,c
  6824  002BA4  0B80               	andlw	128
  6825  002BA6  1A24               	xorwf	___fldiv@sign^0,f,c
  6826  002BA8  501B               	movf	(___fldiv@a+3)^0,w,c
  6827  002BAA  241B               	addwf	(___fldiv@a+3)^0,w,c
  6828  002BAC  6E2C               	movwf	___fldiv@aexp^0,c
  6829  002BAE  AE1A               	btfss	(___fldiv@a+2)^0,7,c
  6830  002BB0  EFDC  F015         	goto	u7821
  6831  002BB4  EFDE  F015         	goto	u7820
  6832  002BB8                     u7821:
  6833  002BB8  EFDF  F015         	goto	l7729
  6834  002BBC                     u7820:
  6835  002BBC  802C               	bsf	___fldiv@aexp^0,0,c
  6836  002BBE                     l7729:
  6837  002BBE  502C               	movf	___fldiv@aexp^0,w,c
  6838  002BC0  B4D8               	btfsc	status,2,c
  6839  002BC2  EFE5  F015         	goto	u7831
  6840  002BC6  EFE7  F015         	goto	u7830
  6841  002BCA                     u7831:
  6842  002BCA  EFFC  F015         	goto	l7739
  6843  002BCE                     u7830:
  6844  002BCE  282C               	incf	___fldiv@aexp^0,w,c
  6845  002BD0  A4D8               	btfss	status,2,c
  6846  002BD2  EFED  F015         	goto	u7841
  6847  002BD6  EFEF  F015         	goto	u7840
  6848  002BDA                     u7841:
  6849  002BDA  EFF7  F015         	goto	l7735
  6850  002BDE                     u7840:
  6851  002BDE  0E00               	movlw	0
  6852  002BE0  6E18               	movwf	___fldiv@a^0,c
  6853  002BE2  0E00               	movlw	0
  6854  002BE4  6E19               	movwf	(___fldiv@a+1)^0,c
  6855  002BE6  0E00               	movlw	0
  6856  002BE8  6E1A               	movwf	(___fldiv@a+2)^0,c
  6857  002BEA  0E00               	movlw	0
  6858  002BEC  6E1B               	movwf	(___fldiv@a+3)^0,c
  6859  002BEE                     l7735:
  6860  002BEE  8E1A               	bsf	(___fldiv@a+2)^0,7,c
  6861  002BF0  0E00               	movlw	0
  6862  002BF2  6E1B               	movwf	(___fldiv@a+3)^0,c
  6863  002BF4  EF04  F016         	goto	l7741
  6864  002BF8                     l7739:
  6865  002BF8  0E00               	movlw	0
  6866  002BFA  6E18               	movwf	___fldiv@a^0,c
  6867  002BFC  0E00               	movlw	0
  6868  002BFE  6E19               	movwf	(___fldiv@a+1)^0,c
  6869  002C00  0E00               	movlw	0
  6870  002C02  6E1A               	movwf	(___fldiv@a+2)^0,c
  6871  002C04  0E00               	movlw	0
  6872  002C06  6E1B               	movwf	(___fldiv@a+3)^0,c
  6873  002C08                     l7741:
  6874  002C08  5018               	movf	___fldiv@a^0,w,c
  6875  002C0A  1019               	iorwf	(___fldiv@a+1)^0,w,c
  6876  002C0C  101A               	iorwf	(___fldiv@a+2)^0,w,c
  6877  002C0E  101B               	iorwf	(___fldiv@a+3)^0,w,c
  6878  002C10  A4D8               	btfss	status,2,c
  6879  002C12  EF0D  F016         	goto	u7851
  6880  002C16  EF0F  F016         	goto	u7850
  6881  002C1A                     u7851:
  6882  002C1A  EF27  F016         	goto	l7753
  6883  002C1E                     u7850:
  6884  002C1E  0E00               	movlw	0
  6885  002C20  6E14               	movwf	___fldiv@b^0,c
  6886  002C22  0E00               	movlw	0
  6887  002C24  6E15               	movwf	(___fldiv@b+1)^0,c
  6888  002C26  0E00               	movlw	0
  6889  002C28  6E16               	movwf	(___fldiv@b+2)^0,c
  6890  002C2A  0E00               	movlw	0
  6891  002C2C  6E17               	movwf	(___fldiv@b+3)^0,c
  6892  002C2E  0E80               	movlw	128
  6893  002C30  1216               	iorwf	(___fldiv@b+2)^0,f,c
  6894  002C32  0E7F               	movlw	127
  6895  002C34  1217               	iorwf	(___fldiv@b+3)^0,f,c
  6896  002C36                     l7747:
  6897  002C36  5024               	movf	___fldiv@sign^0,w,c
  6898  002C38  1217               	iorwf	(___fldiv@b+3)^0,f,c
  6899  002C3A  C014  F014         	movff	___fldiv@b,?___fldiv
  6900  002C3E  C015  F015         	movff	___fldiv@b+1,?___fldiv+1
  6901  002C42  C016  F016         	movff	___fldiv@b+2,?___fldiv+2
  6902  002C46  C017  F017         	movff	___fldiv@b+3,?___fldiv+3
  6903  002C4A  EF6A  F017         	goto	l1979
  6904  002C4E                     l7753:
  6905  002C4E  502B               	movf	___fldiv@bexp^0,w,c
  6906  002C50  A4D8               	btfss	status,2,c
  6907  002C52  EF2D  F016         	goto	u7861
  6908  002C56  EF2F  F016         	goto	u7860
  6909  002C5A                     u7861:
  6910  002C5A  EF39  F016         	goto	l7761
  6911  002C5E                     u7860:
  6912  002C5E  0E00               	movlw	0
  6913  002C60  6E14               	movwf	?___fldiv^0,c
  6914  002C62  0E00               	movlw	0
  6915  002C64  6E15               	movwf	(?___fldiv+1)^0,c
  6916  002C66  0E00               	movlw	0
  6917  002C68  6E16               	movwf	(?___fldiv+2)^0,c
  6918  002C6A  0E00               	movlw	0
  6919  002C6C  6E17               	movwf	(?___fldiv+3)^0,c
  6920  002C6E  EF6A  F017         	goto	l1979
  6921  002C72                     l7761:
  6922  002C72  502C               	movf	___fldiv@aexp^0,w,c
  6923  002C74  C02B  F01C         	movff	___fldiv@bexp,??___fldiv
  6924  002C78  6A1D               	clrf	(??___fldiv+1)^0,c
  6925  002C7A  5E1C               	subwf	??___fldiv^0,f,c
  6926  002C7C  0E00               	movlw	0
  6927  002C7E  5A1D               	subwfb	(??___fldiv+1)^0,f,c
  6928  002C80  0E7F               	movlw	127
  6929  002C82  241C               	addwf	??___fldiv^0,w,c
  6930  002C84  6E25               	movwf	___fldiv@new_exp^0,c
  6931  002C86  0E00               	movlw	0
  6932  002C88  201D               	addwfc	(??___fldiv+1)^0,w,c
  6933  002C8A  6E26               	movwf	(___fldiv@new_exp+1)^0,c
  6934  002C8C  C014  F020         	movff	___fldiv@b,___fldiv@rem
  6935  002C90  C015  F021         	movff	___fldiv@b+1,___fldiv@rem+1
  6936  002C94  C016  F022         	movff	___fldiv@b+2,___fldiv@rem+2
  6937  002C98  C017  F023         	movff	___fldiv@b+3,___fldiv@rem+3
  6938  002C9C  0E00               	movlw	0
  6939  002C9E  6E14               	movwf	___fldiv@b^0,c
  6940  002CA0  0E00               	movlw	0
  6941  002CA2  6E15               	movwf	(___fldiv@b+1)^0,c
  6942  002CA4  0E00               	movlw	0
  6943  002CA6  6E16               	movwf	(___fldiv@b+2)^0,c
  6944  002CA8  0E00               	movlw	0
  6945  002CAA  6E17               	movwf	(___fldiv@b+3)^0,c
  6946  002CAC  0E00               	movlw	0
  6947  002CAE  6E27               	movwf	___fldiv@grs^0,c
  6948  002CB0  0E00               	movlw	0
  6949  002CB2  6E28               	movwf	(___fldiv@grs+1)^0,c
  6950  002CB4  0E00               	movlw	0
  6951  002CB6  6E29               	movwf	(___fldiv@grs+2)^0,c
  6952  002CB8  0E00               	movlw	0
  6953  002CBA  6E2A               	movwf	(___fldiv@grs+3)^0,c
  6954  002CBC  0E00               	movlw	0
  6955  002CBE  6E2C               	movwf	___fldiv@aexp^0,c
  6956  002CC0  EF9A  F016         	goto	l1981
  6957  002CC4                     l7771:
  6958  002CC4  502C               	movf	___fldiv@aexp^0,w,c
  6959  002CC6  B4D8               	btfsc	status,2,c
  6960  002CC8  EF68  F016         	goto	u7871
  6961  002CCC  EF6A  F016         	goto	u7870
  6962  002CD0                     u7871:
  6963  002CD0  EF81  F016         	goto	l7779
  6964  002CD4                     u7870:
  6965  002CD4  90D8               	bcf	status,0,c
  6966  002CD6  3620               	rlcf	___fldiv@rem^0,f,c
  6967  002CD8  3621               	rlcf	(___fldiv@rem+1)^0,f,c
  6968  002CDA  3622               	rlcf	(___fldiv@rem+2)^0,f,c
  6969  002CDC  3623               	rlcf	(___fldiv@rem+3)^0,f,c
  6970  002CDE  90D8               	bcf	status,0,c
  6971  002CE0  3614               	rlcf	___fldiv@b^0,f,c
  6972  002CE2  3615               	rlcf	(___fldiv@b+1)^0,f,c
  6973  002CE4  3616               	rlcf	(___fldiv@b+2)^0,f,c
  6974  002CE6  3617               	rlcf	(___fldiv@b+3)^0,f,c
  6975  002CE8  AE2A               	btfss	(___fldiv@grs+3)^0,7,c
  6976  002CEA  EF79  F016         	goto	u7881
  6977  002CEE  EF7B  F016         	goto	u7880
  6978  002CF2                     u7881:
  6979  002CF2  EF7C  F016         	goto	l1984
  6980  002CF6                     u7880:
  6981  002CF6  8014               	bsf	___fldiv@b^0,0,c
  6982  002CF8                     l1984:
  6983  002CF8  90D8               	bcf	status,0,c
  6984  002CFA  3627               	rlcf	___fldiv@grs^0,f,c
  6985  002CFC  3628               	rlcf	(___fldiv@grs+1)^0,f,c
  6986  002CFE  3629               	rlcf	(___fldiv@grs+2)^0,f,c
  6987  002D00  362A               	rlcf	(___fldiv@grs+3)^0,f,c
  6988  002D02                     l7779:
  6989  002D02  5018               	movf	___fldiv@a^0,w,c
  6990  002D04  5C20               	subwf	___fldiv@rem^0,w,c
  6991  002D06  5019               	movf	(___fldiv@a+1)^0,w,c
  6992  002D08  5821               	subwfb	(___fldiv@rem+1)^0,w,c
  6993  002D0A  501A               	movf	(___fldiv@a+2)^0,w,c
  6994  002D0C  5822               	subwfb	(___fldiv@rem+2)^0,w,c
  6995  002D0E  501B               	movf	(___fldiv@a+3)^0,w,c
  6996  002D10  5823               	subwfb	(___fldiv@rem+3)^0,w,c
  6997  002D12  A0D8               	btfss	status,0,c
  6998  002D14  EF8E  F016         	goto	u7891
  6999  002D18  EF90  F016         	goto	u7890
  7000  002D1C                     u7891:
  7001  002D1C  EF99  F016         	goto	l7785
  7002  002D20                     u7890:
  7003  002D20  8C2A               	bsf	(___fldiv@grs+3)^0,6,c
  7004  002D22  5018               	movf	___fldiv@a^0,w,c
  7005  002D24  5E20               	subwf	___fldiv@rem^0,f,c
  7006  002D26  5019               	movf	(___fldiv@a+1)^0,w,c
  7007  002D28  5A21               	subwfb	(___fldiv@rem+1)^0,f,c
  7008  002D2A  501A               	movf	(___fldiv@a+2)^0,w,c
  7009  002D2C  5A22               	subwfb	(___fldiv@rem+2)^0,f,c
  7010  002D2E  501B               	movf	(___fldiv@a+3)^0,w,c
  7011  002D30  5A23               	subwfb	(___fldiv@rem+3)^0,f,c
  7012  002D32                     l7785:
  7013  002D32  2A2C               	incf	___fldiv@aexp^0,f,c
  7014  002D34                     l1981:
  7015  002D34  0E19               	movlw	25
  7016  002D36  642C               	cpfsgt	___fldiv@aexp^0,c
  7017  002D38  EFA0  F016         	goto	u7901
  7018  002D3C  EFA2  F016         	goto	u7900
  7019  002D40                     u7901:
  7020  002D40  EF62  F016         	goto	l7771
  7021  002D44                     u7900:
  7022  002D44  5020               	movf	___fldiv@rem^0,w,c
  7023  002D46  1021               	iorwf	(___fldiv@rem+1)^0,w,c
  7024  002D48  1022               	iorwf	(___fldiv@rem+2)^0,w,c
  7025  002D4A  1023               	iorwf	(___fldiv@rem+3)^0,w,c
  7026  002D4C  B4D8               	btfsc	status,2,c
  7027  002D4E  EFAB  F016         	goto	u7911
  7028  002D52  EFAD  F016         	goto	u7910
  7029  002D56                     u7911:
  7030  002D56  EFC5  F016         	goto	l7797
  7031  002D5A                     u7910:
  7032  002D5A  8027               	bsf	___fldiv@grs^0,0,c
  7033  002D5C  EFC5  F016         	goto	l7797
  7034  002D60                     l7791:
  7035  002D60  90D8               	bcf	status,0,c
  7036  002D62  3614               	rlcf	___fldiv@b^0,f,c
  7037  002D64  3615               	rlcf	(___fldiv@b+1)^0,f,c
  7038  002D66  3616               	rlcf	(___fldiv@b+2)^0,f,c
  7039  002D68  3617               	rlcf	(___fldiv@b+3)^0,f,c
  7040  002D6A  AE2A               	btfss	(___fldiv@grs+3)^0,7,c
  7041  002D6C  EFBA  F016         	goto	u7921
  7042  002D70  EFBC  F016         	goto	u7920
  7043  002D74                     u7921:
  7044  002D74  EFBD  F016         	goto	l1990
  7045  002D78                     u7920:
  7046  002D78  8014               	bsf	___fldiv@b^0,0,c
  7047  002D7A                     l1990:
  7048  002D7A  90D8               	bcf	status,0,c
  7049  002D7C  3627               	rlcf	___fldiv@grs^0,f,c
  7050  002D7E  3628               	rlcf	(___fldiv@grs+1)^0,f,c
  7051  002D80  3629               	rlcf	(___fldiv@grs+2)^0,f,c
  7052  002D82  362A               	rlcf	(___fldiv@grs+3)^0,f,c
  7053  002D84  0625               	decf	___fldiv@new_exp^0,f,c
  7054  002D86  A0D8               	btfss	status,0,c
  7055  002D88  0626               	decf	(___fldiv@new_exp+1)^0,f,c
  7056  002D8A                     l7797:
  7057  002D8A  AE16               	btfss	(___fldiv@b+2)^0,7,c
  7058  002D8C  EFCA  F016         	goto	u7931
  7059  002D90  EFCC  F016         	goto	u7930
  7060  002D94                     u7931:
  7061  002D94  EFB0  F016         	goto	l7791
  7062  002D98                     u7930:
  7063  002D98  0E00               	movlw	0
  7064  002D9A  6E2C               	movwf	___fldiv@aexp^0,c
  7065  002D9C  AE2A               	btfss	(___fldiv@grs+3)^0,7,c
  7066  002D9E  EFD3  F016         	goto	u7941
  7067  002DA2  EFD5  F016         	goto	u7940
  7068  002DA6                     u7941:
  7069  002DA6  EFF9  F016         	goto	l1992
  7070  002DAA                     u7940:
  7071  002DAA  0EFF               	movlw	255
  7072  002DAC  1427               	andwf	___fldiv@grs^0,w,c
  7073  002DAE  6E1C               	movwf	??___fldiv^0,c
  7074  002DB0  0EFF               	movlw	255
  7075  002DB2  1428               	andwf	(___fldiv@grs+1)^0,w,c
  7076  002DB4  6E1D               	movwf	(??___fldiv+1)^0,c
  7077  002DB6  0EFF               	movlw	255
  7078  002DB8  1429               	andwf	(___fldiv@grs+2)^0,w,c
  7079  002DBA  6E1E               	movwf	(??___fldiv+2)^0,c
  7080  002DBC  0E7F               	movlw	127
  7081  002DBE  142A               	andwf	(___fldiv@grs+3)^0,w,c
  7082  002DC0  6E1F               	movwf	(??___fldiv+3)^0,c
  7083  002DC2  501C               	movf	??___fldiv^0,w,c
  7084  002DC4  101D               	iorwf	(??___fldiv+1)^0,w,c
  7085  002DC6  101E               	iorwf	(??___fldiv+2)^0,w,c
  7086  002DC8  101F               	iorwf	(??___fldiv+3)^0,w,c
  7087  002DCA  B4D8               	btfsc	status,2,c
  7088  002DCC  EFEA  F016         	goto	u7951
  7089  002DD0  EFEC  F016         	goto	u7950
  7090  002DD4                     u7951:
  7091  002DD4  EFF0  F016         	goto	l1993
  7092  002DD8                     u7950:
  7093  002DD8                     l7805:
  7094  002DD8  0E01               	movlw	1
  7095  002DDA  6E2C               	movwf	___fldiv@aexp^0,c
  7096  002DDC  EFF9  F016         	goto	l1992
  7097  002DE0                     l1993:
  7098  002DE0  A014               	btfss	___fldiv@b^0,0,c
  7099  002DE2  EFF5  F016         	goto	u7961
  7100  002DE6  EFF7  F016         	goto	u7960
  7101  002DEA                     u7961:
  7102  002DEA  EFF9  F016         	goto	l1992
  7103  002DEE                     u7960:
  7104  002DEE  EFEC  F016         	goto	l7805
  7105  002DF2                     l1992:
  7106  002DF2  502C               	movf	___fldiv@aexp^0,w,c
  7107  002DF4  B4D8               	btfsc	status,2,c
  7108  002DF6  EFFF  F016         	goto	u7971
  7109  002DFA  EF01  F017         	goto	u7970
  7110  002DFE                     u7971:
  7111  002DFE  EF25  F017         	goto	l7817
  7112  002E02                     u7970:
  7113  002E02  0E01               	movlw	1
  7114  002E04  2614               	addwf	___fldiv@b^0,f,c
  7115  002E06  0E00               	movlw	0
  7116  002E08  2215               	addwfc	(___fldiv@b+1)^0,f,c
  7117  002E0A  2216               	addwfc	(___fldiv@b+2)^0,f,c
  7118  002E0C  2217               	addwfc	(___fldiv@b+3)^0,f,c
  7119  002E0E  A017               	btfss	(___fldiv@b+3)^0,0,c
  7120  002E10  EF0C  F017         	goto	u7981
  7121  002E14  EF0E  F017         	goto	u7980
  7122  002E18                     u7981:
  7123  002E18  EF25  F017         	goto	l7817
  7124  002E1C                     u7980:
  7125  002E1C  C014  F01C         	movff	___fldiv@b,??___fldiv
  7126  002E20  C015  F01D         	movff	___fldiv@b+1,??___fldiv+1
  7127  002E24  C016  F01E         	movff	___fldiv@b+2,??___fldiv+2
  7128  002E28  C017  F01F         	movff	___fldiv@b+3,??___fldiv+3
  7129  002E2C  341F               	rlcf	(??___fldiv+3)^0,w,c
  7130  002E2E  321F               	rrcf	(??___fldiv+3)^0,f,c
  7131  002E30  321E               	rrcf	(??___fldiv+2)^0,f,c
  7132  002E32  321D               	rrcf	(??___fldiv+1)^0,f,c
  7133  002E34  321C               	rrcf	??___fldiv^0,f,c
  7134  002E36  C01C  F014         	movff	??___fldiv,___fldiv@b
  7135  002E3A  C01D  F015         	movff	??___fldiv+1,___fldiv@b+1
  7136  002E3E  C01E  F016         	movff	??___fldiv+2,___fldiv@b+2
  7137  002E42  C01F  F017         	movff	??___fldiv+3,___fldiv@b+3
  7138  002E46  4A25               	infsnz	___fldiv@new_exp^0,f,c
  7139  002E48  2A26               	incf	(___fldiv@new_exp+1)^0,f,c
  7140  002E4A                     l7817:
  7141  002E4A  BE26               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7142  002E4C  EF30  F017         	goto	u7991
  7143  002E50  5026               	movf	(___fldiv@new_exp+1)^0,w,c
  7144  002E52  E108               	bnz	u7990
  7145  002E54  2825               	incf	___fldiv@new_exp^0,w,c
  7146  002E56  A0D8               	btfss	status,0,c
  7147  002E58  EF30  F017         	goto	u7991
  7148  002E5C  EF32  F017         	goto	u7990
  7149  002E60                     u7991:
  7150  002E60  EF3D  F017         	goto	l7821
  7151  002E64                     u7990:
  7152  002E64  0E00               	movlw	0
  7153  002E66  6E26               	movwf	(___fldiv@new_exp+1)^0,c
  7154  002E68  6825               	setf	___fldiv@new_exp^0,c
  7155  002E6A  0E00               	movlw	0
  7156  002E6C  6E14               	movwf	___fldiv@b^0,c
  7157  002E6E  0E00               	movlw	0
  7158  002E70  6E15               	movwf	(___fldiv@b+1)^0,c
  7159  002E72  0E00               	movlw	0
  7160  002E74  6E16               	movwf	(___fldiv@b+2)^0,c
  7161  002E76  0E00               	movlw	0
  7162  002E78  6E17               	movwf	(___fldiv@b+3)^0,c
  7163  002E7A                     l7821:
  7164  002E7A  BE26               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7165  002E7C  EF4A  F017         	goto	u8000
  7166  002E80  5026               	movf	(___fldiv@new_exp+1)^0,w,c
  7167  002E82  E106               	bnz	u8001
  7168  002E84  0425               	decf	___fldiv@new_exp^0,w,c
  7169  002E86  B0D8               	btfsc	status,0,c
  7170  002E88  EF48  F017         	goto	u8001
  7171  002E8C  EF4A  F017         	goto	u8000
  7172  002E90                     u8001:
  7173  002E90  EF58  F017         	goto	l7825
  7174  002E94                     u8000:
  7175  002E94  0E00               	movlw	0
  7176  002E96  6E26               	movwf	(___fldiv@new_exp+1)^0,c
  7177  002E98  0E00               	movlw	0
  7178  002E9A  6E25               	movwf	___fldiv@new_exp^0,c
  7179  002E9C  0E00               	movlw	0
  7180  002E9E  6E14               	movwf	___fldiv@b^0,c
  7181  002EA0  0E00               	movlw	0
  7182  002EA2  6E15               	movwf	(___fldiv@b+1)^0,c
  7183  002EA4  0E00               	movlw	0
  7184  002EA6  6E16               	movwf	(___fldiv@b+2)^0,c
  7185  002EA8  0E00               	movlw	0
  7186  002EAA  6E17               	movwf	(___fldiv@b+3)^0,c
  7187  002EAC  0E00               	movlw	0
  7188  002EAE  6E24               	movwf	___fldiv@sign^0,c
  7189  002EB0                     l7825:
  7190  002EB0  C025  F02B         	movff	___fldiv@new_exp,___fldiv@bexp
  7191  002EB4  A02B               	btfss	___fldiv@bexp^0,0,c
  7192  002EB6  EF5F  F017         	goto	u8011
  7193  002EBA  EF61  F017         	goto	u8010
  7194  002EBE                     u8011:
  7195  002EBE  EF64  F017         	goto	l7831
  7196  002EC2                     u8010:
  7197  002EC2  8E16               	bsf	(___fldiv@b+2)^0,7,c
  7198  002EC4  EF65  F017         	goto	l7833
  7199  002EC8                     l7831:
  7200  002EC8  9E16               	bcf	(___fldiv@b+2)^0,7,c
  7201  002ECA                     l7833:
  7202  002ECA  90D8               	bcf	status,0,c
  7203  002ECC  302B               	rrcf	___fldiv@bexp^0,w,c
  7204  002ECE  6E17               	movwf	(___fldiv@b+3)^0,c
  7205  002ED0  EF1B  F016         	goto	l7747
  7206  002ED4                     l1979:
  7207  002ED4  0012               	return		;funcret
  7208  002ED6                     __end_of___fldiv:
  7209                           	callstack 0
  7210                           
  7211 ;; *************** function ___awmod *****************
  7212 ;; Defined at:
  7213 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  7214 ;; Parameters:    Size  Location     Type
  7215 ;;  dividend        2   19[COMRAM] int 
  7216 ;;  divisor         2   21[COMRAM] int 
  7217 ;; Auto vars:     Size  Location     Type
  7218 ;;  sign            1   24[COMRAM] unsigned char 
  7219 ;;  counter         1   23[COMRAM] unsigned char 
  7220 ;; Return value:  Size  Location     Type
  7221 ;;                  2   19[COMRAM] int 
  7222 ;; Registers used:
  7223 ;;		wreg, status,2, status,0
  7224 ;; Tracked objects:
  7225 ;;		On entry : 0/0
  7226 ;;		On exit  : 0/0
  7227 ;;		Unchanged: 0/0
  7228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7229 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7230 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7232 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7233 ;;Total ram usage:        6 bytes
  7234 ;; Hardware stack levels used: 1
  7235 ;; Hardware stack levels required when called: 8
  7236 ;; This function calls:
  7237 ;;		Nothing
  7238 ;; This function is called by:
  7239 ;;		_efgtoa
  7240 ;; This function uses a non-reentrant model
  7241 ;;
  7242                           
  7243                           	psect	text20
  7244  004E62                     __ptext20:
  7245                           	callstack 0
  7246  004E62                     ___awmod:
  7247                           	callstack 16
  7248  004E62  0E00               	movlw	0
  7249  004E64  6E19               	movwf	___awmod@sign^0,c
  7250  004E66  BE15               	btfsc	(___awmod@dividend+1)^0,7,c
  7251  004E68  EF3A  F027         	goto	u8270
  7252  004E6C  EF38  F027         	goto	u8271
  7253  004E70                     u8271:
  7254  004E70  EF40  F027         	goto	l8029
  7255  004E74                     u8270:
  7256  004E74  6C14               	negf	___awmod@dividend^0,c
  7257  004E76  1E15               	comf	(___awmod@dividend+1)^0,f,c
  7258  004E78  B0D8               	btfsc	status,0,c
  7259  004E7A  2A15               	incf	(___awmod@dividend+1)^0,f,c
  7260  004E7C  0E01               	movlw	1
  7261  004E7E  6E19               	movwf	___awmod@sign^0,c
  7262  004E80                     l8029:
  7263  004E80  BE17               	btfsc	(___awmod@divisor+1)^0,7,c
  7264  004E82  EF47  F027         	goto	u8280
  7265  004E86  EF45  F027         	goto	u8281
  7266  004E8A                     u8281:
  7267  004E8A  EF4B  F027         	goto	l8033
  7268  004E8E                     u8280:
  7269  004E8E  6C16               	negf	___awmod@divisor^0,c
  7270  004E90  1E17               	comf	(___awmod@divisor+1)^0,f,c
  7271  004E92  B0D8               	btfsc	status,0,c
  7272  004E94  2A17               	incf	(___awmod@divisor+1)^0,f,c
  7273  004E96                     l8033:
  7274  004E96  5016               	movf	___awmod@divisor^0,w,c
  7275  004E98  1017               	iorwf	(___awmod@divisor+1)^0,w,c
  7276  004E9A  B4D8               	btfsc	status,2,c
  7277  004E9C  EF52  F027         	goto	u8291
  7278  004EA0  EF54  F027         	goto	u8290
  7279  004EA4                     u8291:
  7280  004EA4  EF78  F027         	goto	l8049
  7281  004EA8                     u8290:
  7282  004EA8  0E01               	movlw	1
  7283  004EAA  6E18               	movwf	___awmod@counter^0,c
  7284  004EAC  EF5C  F027         	goto	l8039
  7285  004EB0                     l8037:
  7286  004EB0  90D8               	bcf	status,0,c
  7287  004EB2  3616               	rlcf	___awmod@divisor^0,f,c
  7288  004EB4  3617               	rlcf	(___awmod@divisor+1)^0,f,c
  7289  004EB6  2A18               	incf	___awmod@counter^0,f,c
  7290  004EB8                     l8039:
  7291  004EB8  AE17               	btfss	(___awmod@divisor+1)^0,7,c
  7292  004EBA  EF61  F027         	goto	u8301
  7293  004EBE  EF63  F027         	goto	u8300
  7294  004EC2                     u8301:
  7295  004EC2  EF58  F027         	goto	l8037
  7296  004EC6                     u8300:
  7297  004EC6                     l8041:
  7298  004EC6  5016               	movf	___awmod@divisor^0,w,c
  7299  004EC8  5C14               	subwf	___awmod@dividend^0,w,c
  7300  004ECA  5017               	movf	(___awmod@divisor+1)^0,w,c
  7301  004ECC  5815               	subwfb	(___awmod@dividend+1)^0,w,c
  7302  004ECE  A0D8               	btfss	status,0,c
  7303  004ED0  EF6C  F027         	goto	u8311
  7304  004ED4  EF6E  F027         	goto	u8310
  7305  004ED8                     u8311:
  7306  004ED8  EF72  F027         	goto	l8045
  7307  004EDC                     u8310:
  7308  004EDC  5016               	movf	___awmod@divisor^0,w,c
  7309  004EDE  5E14               	subwf	___awmod@dividend^0,f,c
  7310  004EE0  5017               	movf	(___awmod@divisor+1)^0,w,c
  7311  004EE2  5A15               	subwfb	(___awmod@dividend+1)^0,f,c
  7312  004EE4                     l8045:
  7313  004EE4  90D8               	bcf	status,0,c
  7314  004EE6  3217               	rrcf	(___awmod@divisor+1)^0,f,c
  7315  004EE8  3216               	rrcf	___awmod@divisor^0,f,c
  7316  004EEA  2E18               	decfsz	___awmod@counter^0,f,c
  7317  004EEC  EF63  F027         	goto	l8041
  7318  004EF0                     l8049:
  7319  004EF0  5019               	movf	___awmod@sign^0,w,c
  7320  004EF2  B4D8               	btfsc	status,2,c
  7321  004EF4  EF7E  F027         	goto	u8321
  7322  004EF8  EF80  F027         	goto	u8320
  7323  004EFC                     u8321:
  7324  004EFC  EF84  F027         	goto	l8053
  7325  004F00                     u8320:
  7326  004F00  6C14               	negf	___awmod@dividend^0,c
  7327  004F02  1E15               	comf	(___awmod@dividend+1)^0,f,c
  7328  004F04  B0D8               	btfsc	status,0,c
  7329  004F06  2A15               	incf	(___awmod@dividend+1)^0,f,c
  7330  004F08                     l8053:
  7331  004F08  C014  F014         	movff	___awmod@dividend,?___awmod
  7332  004F0C  C015  F015         	movff	___awmod@dividend+1,?___awmod+1
  7333  004F10  0012               	return		;funcret
  7334  004F12                     __end_of___awmod:
  7335                           	callstack 0
  7336                           
  7337 ;; *************** function _dtoa *****************
  7338 ;; Defined at:
  7339 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  7340 ;; Parameters:    Size  Location     Type
  7341 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  7342 ;;		 -> NULL(0), 
  7343 ;;  d               8    2[BANK0 ] long long 
  7344 ;; Auto vars:     Size  Location     Type
  7345 ;;  n               8   18[BANK0 ] long long 
  7346 ;;  i               2   26[BANK0 ] int 
  7347 ;;  s               2   16[BANK0 ] int 
  7348 ;;  w               2   14[BANK0 ] int 
  7349 ;;  p               2   12[BANK0 ] int 
  7350 ;; Return value:  Size  Location     Type
  7351 ;;                  2    0[BANK0 ] int 
  7352 ;; Registers used:
  7353 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7354 ;; Tracked objects:
  7355 ;;		On entry : 0/0
  7356 ;;		On exit  : 0/0
  7357 ;;		Unchanged: 0/0
  7358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7359 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7360 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7361 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7362 ;;      Totals:         8      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7363 ;;Total ram usage:       36 bytes
  7364 ;; Hardware stack levels used: 1
  7365 ;; Hardware stack levels required when called: 13
  7366 ;; This function calls:
  7367 ;;		___aodiv
  7368 ;;		___aomod
  7369 ;;		_abs
  7370 ;;		_pad
  7371 ;; This function is called by:
  7372 ;;		_vfpfcnvrt
  7373 ;; This function uses a non-reentrant model
  7374 ;;
  7375                           
  7376                           	psect	text21
  7377  002ED6                     __ptext21:
  7378                           	callstack 0
  7379  002ED6                     _dtoa:
  7380                           	callstack 12
  7381  002ED6                     
  7382                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  7383  002ED6  C062  F072         	movff	dtoa@d,dtoa@n
  7384  002EDA  C063  F073         	movff	dtoa@d+1,dtoa@n+1
  7385  002EDE  C064  F074         	movff	dtoa@d+2,dtoa@n+2
  7386  002EE2  C065  F075         	movff	dtoa@d+3,dtoa@n+3
  7387  002EE6  C066  F076         	movff	dtoa@d+4,dtoa@n+4
  7388  002EEA  C067  F077         	movff	dtoa@d+5,dtoa@n+5
  7389  002EEE  C068  F078         	movff	dtoa@d+6,dtoa@n+6
  7390  002EF2  C069  F079         	movff	dtoa@d+7,dtoa@n+7
  7391  002EF6                     
  7392                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  7393  002EF6  0100               	movlb	0	; () banked
  7394  002EF8  BF79               	btfsc	(dtoa@n+7)& (0+255),7,b
  7395  002EFA  EF81  F017         	goto	u8761
  7396  002EFE  EF84  F017         	goto	u8760
  7397  002F02                     u8761:
  7398  002F02  0E01               	movlw	1
  7399  002F04  EF85  F017         	goto	u8770
  7400  002F08                     u8760:
  7401  002F08  0E00               	movlw	0
  7402  002F0A                     u8770:
  7403  002F0A  6F70               	movwf	dtoa@s& (0+255),b
  7404  002F0C  6B71               	clrf	(dtoa@s+1)& (0+255),b
  7405                           
  7406                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  7407  002F0E  5170               	movf	dtoa@s& (0+255),w,b
  7408  002F10  1171               	iorwf	(dtoa@s+1)& (0+255),w,b
  7409  002F12  B4D8               	btfsc	status,2,c
  7410  002F14  EF8E  F017         	goto	u8781
  7411  002F18  EF90  F017         	goto	u8780
  7412  002F1C                     u8781:
  7413  002F1C  EFA0  F017         	goto	l8243
  7414  002F20                     u8780:
  7415  002F20                     
  7416                           ; BSR set to: 0
  7417                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  7418  002F20  1F79               	comf	(dtoa@n+7)& (0+255),f,b
  7419  002F22  1F78               	comf	(dtoa@n+6)& (0+255),f,b
  7420  002F24  1F77               	comf	(dtoa@n+5)& (0+255),f,b
  7421  002F26  1F76               	comf	(dtoa@n+4)& (0+255),f,b
  7422  002F28  1F75               	comf	(dtoa@n+3)& (0+255),f,b
  7423  002F2A  1F74               	comf	(dtoa@n+2)& (0+255),f,b
  7424  002F2C  1F73               	comf	(dtoa@n+1)& (0+255),f,b
  7425  002F2E  6D72               	negf	dtoa@n& (0+255),b
  7426  002F30  0E00               	movlw	0
  7427  002F32  2373               	addwfc	(dtoa@n+1)& (0+255),f,b
  7428  002F34  2374               	addwfc	(dtoa@n+2)& (0+255),f,b
  7429  002F36  2375               	addwfc	(dtoa@n+3)& (0+255),f,b
  7430  002F38  2376               	addwfc	(dtoa@n+4)& (0+255),f,b
  7431  002F3A  2377               	addwfc	(dtoa@n+5)& (0+255),f,b
  7432  002F3C  2378               	addwfc	(dtoa@n+6)& (0+255),f,b
  7433  002F3E  2379               	addwfc	(dtoa@n+7)& (0+255),f,b
  7434  002F40                     l8243:
  7435                           
  7436                           ; BSR set to: 0
  7437                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  7438  002F40  BE3D               	btfsc	(_prec+1)^0,7,c
  7439  002F42  EFA5  F017         	goto	u8791
  7440  002F46  EFA7  F017         	goto	u8790
  7441  002F4A                     u8791:
  7442  002F4A  EFA8  F017         	goto	l8247
  7443  002F4E                     u8790:
  7444  002F4E                     
  7445                           ; BSR set to: 0
  7446                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  7447  002F4E  923E               	bcf	_flags^0,1,c
  7448  002F50                     l8247:
  7449                           
  7450                           ; BSR set to: 0
  7451                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  7452  002F50  BE3D               	btfsc	(_prec+1)^0,7,c
  7453  002F52  EFB5  F017         	goto	u8800
  7454  002F56  503D               	movf	(_prec+1)^0,w,c
  7455  002F58  E106               	bnz	u8801
  7456  002F5A  043C               	decf	_prec^0,w,c
  7457  002F5C  B0D8               	btfsc	status,0,c
  7458  002F5E  EFB3  F017         	goto	u8801
  7459  002F62  EFB5  F017         	goto	u8800
  7460  002F66                     u8801:
  7461  002F66  EFBB  F017         	goto	l2125
  7462  002F6A                     u8800:
  7463  002F6A                     
  7464                           ; BSR set to: 0
  7465  002F6A  0E00               	movlw	0
  7466  002F6C  6F6D               	movwf	(dtoa@p+1)& (0+255),b
  7467  002F6E  0E01               	movlw	1
  7468  002F70  6F6C               	movwf	dtoa@p& (0+255),b
  7469  002F72  EFBF  F017         	goto	l2127
  7470  002F76                     l2125:
  7471                           
  7472                           ; BSR set to: 0
  7473  002F76  C03C  F06C         	movff	_prec,dtoa@p
  7474  002F7A  C03D  F06D         	movff	_prec+1,dtoa@p+1
  7475  002F7E                     l2127:
  7476                           
  7477                           ; BSR set to: 0
  7478                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  7479  002F7E  C03A  F06E         	movff	_width,dtoa@w
  7480  002F82  C03B  F06F         	movff	_width+1,dtoa@w+1
  7481  002F86                     
  7482                           ; BSR set to: 0
  7483                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  7484  002F86  5170               	movf	dtoa@s& (0+255),w,b
  7485  002F88  1171               	iorwf	(dtoa@s+1)& (0+255),w,b
  7486  002F8A  A4D8               	btfss	status,2,c
  7487  002F8C  EFCA  F017         	goto	u8811
  7488  002F90  EFCC  F017         	goto	u8810
  7489  002F94                     u8811:
  7490  002F94  EFD3  F017         	goto	l8255
  7491  002F98                     u8810:
  7492  002F98                     
  7493                           ; BSR set to: 0
  7494  002F98  A43E               	btfss	_flags^0,2,c
  7495  002F9A  EFD1  F017         	goto	u8821
  7496  002F9E  EFD3  F017         	goto	u8820
  7497  002FA2                     u8821:
  7498  002FA2  EFD6  F017         	goto	l8257
  7499  002FA6                     u8820:
  7500  002FA6                     l8255:
  7501                           
  7502                           ; BSR set to: 0
  7503                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  7504  002FA6  076E               	decf	dtoa@w& (0+255),f,b
  7505  002FA8  A0D8               	btfss	status,0,c
  7506  002FAA  076F               	decf	(dtoa@w+1)& (0+255),f,b
  7507  002FAC                     l8257:
  7508                           
  7509                           ; BSR set to: 0
  7510                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  7511  002FAC  0E00               	movlw	0
  7512  002FAE  6F7B               	movwf	(dtoa@i+1)& (0+255),b
  7513  002FB0  0E4F               	movlw	79
  7514  002FB2  6F7A               	movwf	dtoa@i& (0+255),b
  7515  002FB4                     
  7516                           ; BSR set to: 0
  7517                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  7518  002FB4  0E00               	movlw	0
  7519  002FB6  0101               	movlb	1	; () banked
  7520  002FB8  6F83               	movwf	(_dbuf+79)& (0+255),b
  7521                           
  7522                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7523  002FBA  EF5C  F018         	goto	l8271
  7524  002FBE                     l8261:
  7525                           
  7526                           ; BSR set to: 0
  7527                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  7528  002FBE  077A               	decf	dtoa@i& (0+255),f,b
  7529  002FC0  A0D8               	btfss	status,0,c
  7530  002FC2  077B               	decf	(dtoa@i+1)& (0+255),f,b
  7531  002FC4                     
  7532                           ; BSR set to: 0
  7533                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  7534  002FC4  0E34               	movlw	low _dbuf
  7535  002FC6  257A               	addwf	dtoa@i& (0+255),w,b
  7536  002FC8  6ED9               	movwf	fsr2l,c
  7537  002FCA  0E01               	movlw	high _dbuf
  7538  002FCC  217B               	addwfc	(dtoa@i+1)& (0+255),w,b
  7539  002FCE  6EDA               	movwf	fsr2h,c
  7540  002FD0  C072  F014         	movff	dtoa@n,___aomod@dividend
  7541  002FD4  C073  F015         	movff	dtoa@n+1,___aomod@dividend+1
  7542  002FD8  C074  F016         	movff	dtoa@n+2,___aomod@dividend+2
  7543  002FDC  C075  F017         	movff	dtoa@n+3,___aomod@dividend+3
  7544  002FE0  C076  F018         	movff	dtoa@n+4,___aomod@dividend+4
  7545  002FE4  C077  F019         	movff	dtoa@n+5,___aomod@dividend+5
  7546  002FE8  C078  F01A         	movff	dtoa@n+6,___aomod@dividend+6
  7547  002FEC  C079  F01B         	movff	dtoa@n+7,___aomod@dividend+7
  7548  002FF0  0E0A               	movlw	10
  7549  002FF2  6E1C               	movwf	___aomod@divisor^0,c
  7550  002FF4  0E00               	movlw	0
  7551  002FF6  6E1D               	movwf	(___aomod@divisor+1)^0,c
  7552  002FF8  0E00               	movlw	0
  7553  002FFA  6E1E               	movwf	(___aomod@divisor+2)^0,c
  7554  002FFC  0E00               	movlw	0
  7555  002FFE  6E1F               	movwf	(___aomod@divisor+3)^0,c
  7556  003000  0E00               	movlw	0
  7557  003002  6E20               	movwf	(___aomod@divisor+4)^0,c
  7558  003004  0E00               	movlw	0
  7559  003006  6E21               	movwf	(___aomod@divisor+5)^0,c
  7560  003008  0E00               	movlw	0
  7561  00300A  6E22               	movwf	(___aomod@divisor+6)^0,c
  7562  00300C  0E00               	movlw	0
  7563  00300E  6E23               	movwf	(___aomod@divisor+7)^0,c
  7564  003010  EC3C  F020         	call	___aomod	;wreg free
  7565  003014  C014  F031         	movff	?___aomod,??_dtoa
  7566  003018  C015  F032         	movff	?___aomod+1,??_dtoa+1
  7567  00301C  C016  F033         	movff	?___aomod+2,??_dtoa+2
  7568  003020  C017  F034         	movff	?___aomod+3,??_dtoa+3
  7569  003024  C018  F035         	movff	?___aomod+4,??_dtoa+4
  7570  003028  C019  F036         	movff	?___aomod+5,??_dtoa+5
  7571  00302C  C01A  F037         	movff	?___aomod+6,??_dtoa+6
  7572  003030  C01B  F038         	movff	?___aomod+7,??_dtoa+7
  7573  003034  C031  F026         	movff	??_dtoa,abs@a
  7574  003038  C033  F027         	movff	??_dtoa+2,abs@a+1
  7575  00303C  EC61  F02B         	call	_abs	;wreg free
  7576  003040  5026               	movf	?_abs^0,w,c
  7577  003042  0F30               	addlw	48
  7578  003044  6EDF               	movwf	indf2,c
  7579  003046                     
  7580                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  7581  003046  0100               	movlb	0	; () banked
  7582  003048  076C               	decf	dtoa@p& (0+255),f,b
  7583  00304A  A0D8               	btfss	status,0,c
  7584  00304C  076D               	decf	(dtoa@p+1)& (0+255),f,b
  7585  00304E                     
  7586                           ; BSR set to: 0
  7587                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  7588  00304E  076E               	decf	dtoa@w& (0+255),f,b
  7589  003050  A0D8               	btfss	status,0,c
  7590  003052  076F               	decf	(dtoa@w+1)& (0+255),f,b
  7591  003054                     
  7592                           ; BSR set to: 0
  7593                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  7594  003054  C072  F014         	movff	dtoa@n,___aodiv@dividend
  7595  003058  C073  F015         	movff	dtoa@n+1,___aodiv@dividend+1
  7596  00305C  C074  F016         	movff	dtoa@n+2,___aodiv@dividend+2
  7597  003060  C075  F017         	movff	dtoa@n+3,___aodiv@dividend+3
  7598  003064  C076  F018         	movff	dtoa@n+4,___aodiv@dividend+4
  7599  003068  C077  F019         	movff	dtoa@n+5,___aodiv@dividend+5
  7600  00306C  C078  F01A         	movff	dtoa@n+6,___aodiv@dividend+6
  7601  003070  C079  F01B         	movff	dtoa@n+7,___aodiv@dividend+7
  7602  003074  0E0A               	movlw	10
  7603  003076  6E1C               	movwf	___aodiv@divisor^0,c
  7604  003078  0E00               	movlw	0
  7605  00307A  6E1D               	movwf	(___aodiv@divisor+1)^0,c
  7606  00307C  0E00               	movlw	0
  7607  00307E  6E1E               	movwf	(___aodiv@divisor+2)^0,c
  7608  003080  0E00               	movlw	0
  7609  003082  6E1F               	movwf	(___aodiv@divisor+3)^0,c
  7610  003084  0E00               	movlw	0
  7611  003086  6E20               	movwf	(___aodiv@divisor+4)^0,c
  7612  003088  0E00               	movlw	0
  7613  00308A  6E21               	movwf	(___aodiv@divisor+5)^0,c
  7614  00308C  0E00               	movlw	0
  7615  00308E  6E22               	movwf	(___aodiv@divisor+6)^0,c
  7616  003090  0E00               	movlw	0
  7617  003092  6E23               	movwf	(___aodiv@divisor+7)^0,c
  7618  003094  ECB9  F01E         	call	___aodiv	;wreg free
  7619  003098  C014  F072         	movff	?___aodiv,dtoa@n
  7620  00309C  C015  F073         	movff	?___aodiv+1,dtoa@n+1
  7621  0030A0  C016  F074         	movff	?___aodiv+2,dtoa@n+2
  7622  0030A4  C017  F075         	movff	?___aodiv+3,dtoa@n+3
  7623  0030A8  C018  F076         	movff	?___aodiv+4,dtoa@n+4
  7624  0030AC  C019  F077         	movff	?___aodiv+5,dtoa@n+5
  7625  0030B0  C01A  F078         	movff	?___aodiv+6,dtoa@n+6
  7626  0030B4  C01B  F079         	movff	?___aodiv+7,dtoa@n+7
  7627  0030B8                     l8271:
  7628                           
  7629                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7630  0030B8  0100               	movlb	0	; () banked
  7631  0030BA  BF7B               	btfsc	(dtoa@i+1)& (0+255),7,b
  7632  0030BC  EF68  F018         	goto	u8831
  7633  0030C0  517B               	movf	(dtoa@i+1)& (0+255),w,b
  7634  0030C2  E108               	bnz	u8830
  7635  0030C4  057A               	decf	dtoa@i& (0+255),w,b
  7636  0030C6  A0D8               	btfss	status,0,c
  7637  0030C8  EF68  F018         	goto	u8831
  7638  0030CC  EF6A  F018         	goto	u8830
  7639  0030D0                     u8831:
  7640  0030D0  EF9A  F018         	goto	l8281
  7641  0030D4                     u8830:
  7642  0030D4                     
  7643                           ; BSR set to: 0
  7644  0030D4  5172               	movf	dtoa@n& (0+255),w,b
  7645  0030D6  1173               	iorwf	(dtoa@n+1)& (0+255),w,b
  7646  0030D8  1174               	iorwf	(dtoa@n+2)& (0+255),w,b
  7647  0030DA  1175               	iorwf	(dtoa@n+3)& (0+255),w,b
  7648  0030DC  1176               	iorwf	(dtoa@n+4)& (0+255),w,b
  7649  0030DE  1177               	iorwf	(dtoa@n+5)& (0+255),w,b
  7650  0030E0  1178               	iorwf	(dtoa@n+6)& (0+255),w,b
  7651  0030E2  1179               	iorwf	(dtoa@n+7)& (0+255),w,b
  7652  0030E4  A4D8               	btfss	status,2,c
  7653  0030E6  EF77  F018         	goto	u8841
  7654  0030EA  EF79  F018         	goto	u8840
  7655  0030EE                     u8841:
  7656  0030EE  EFDF  F017         	goto	l8261
  7657  0030F2                     u8840:
  7658  0030F2                     
  7659                           ; BSR set to: 0
  7660  0030F2  BF6D               	btfsc	(dtoa@p+1)& (0+255),7,b
  7661  0030F4  EF86  F018         	goto	u8850
  7662  0030F8  516D               	movf	(dtoa@p+1)& (0+255),w,b
  7663  0030FA  E106               	bnz	u8851
  7664  0030FC  056C               	decf	dtoa@p& (0+255),w,b
  7665  0030FE  B0D8               	btfsc	status,0,c
  7666  003100  EF84  F018         	goto	u8851
  7667  003104  EF86  F018         	goto	u8850
  7668  003108                     u8851:
  7669  003108  EFDF  F017         	goto	l8261
  7670  00310C                     u8850:
  7671  00310C                     
  7672                           ; BSR set to: 0
  7673  00310C  BF6F               	btfsc	(dtoa@w+1)& (0+255),7,b
  7674  00310E  EF91  F018         	goto	u8861
  7675  003112  516F               	movf	(dtoa@w+1)& (0+255),w,b
  7676  003114  E108               	bnz	u8860
  7677  003116  056E               	decf	dtoa@w& (0+255),w,b
  7678  003118  A0D8               	btfss	status,0,c
  7679  00311A  EF91  F018         	goto	u8861
  7680  00311E  EF93  F018         	goto	u8860
  7681  003122                     u8861:
  7682  003122  EF9A  F018         	goto	l8281
  7683  003126                     u8860:
  7684  003126                     
  7685                           ; BSR set to: 0
  7686  003126  B23E               	btfsc	_flags^0,1,c
  7687  003128  EF98  F018         	goto	u8871
  7688  00312C  EF9A  F018         	goto	u8870
  7689  003130                     u8871:
  7690  003130  EFDF  F017         	goto	l8261
  7691  003134                     u8870:
  7692  003134                     l8281:
  7693                           
  7694                           ; BSR set to: 0
  7695                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  7696  003134  5170               	movf	dtoa@s& (0+255),w,b
  7697  003136  1171               	iorwf	(dtoa@s+1)& (0+255),w,b
  7698  003138  A4D8               	btfss	status,2,c
  7699  00313A  EFA1  F018         	goto	u8881
  7700  00313E  EFA3  F018         	goto	u8880
  7701  003142                     u8881:
  7702  003142  EFAA  F018         	goto	l8285
  7703  003146                     u8880:
  7704  003146                     
  7705                           ; BSR set to: 0
  7706  003146  A43E               	btfss	_flags^0,2,c
  7707  003148  EFA8  F018         	goto	u8891
  7708  00314C  EFAA  F018         	goto	u8890
  7709  003150                     u8891:
  7710  003150  EFC9  F018         	goto	l8295
  7711  003154                     u8890:
  7712  003154                     l8285:
  7713                           
  7714                           ; BSR set to: 0
  7715                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  7716  003154  077A               	decf	dtoa@i& (0+255),f,b
  7717  003156  A0D8               	btfss	status,0,c
  7718  003158  077B               	decf	(dtoa@i+1)& (0+255),f,b
  7719  00315A                     
  7720                           ; BSR set to: 0
  7721                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  7722  00315A  5170               	movf	dtoa@s& (0+255),w,b
  7723  00315C  1171               	iorwf	(dtoa@s+1)& (0+255),w,b
  7724  00315E  A4D8               	btfss	status,2,c
  7725  003160  EFB4  F018         	goto	u8901
  7726  003164  EFB6  F018         	goto	u8900
  7727  003168                     u8901:
  7728  003168  EFBC  F018         	goto	l8291
  7729  00316C                     u8900:
  7730  00316C                     
  7731                           ; BSR set to: 0
  7732  00316C  0E00               	movlw	0
  7733  00316E  6F6B               	movwf	(_dtoa$3528+1)& (0+255),b
  7734  003170  0E2B               	movlw	43
  7735  003172  6F6A               	movwf	_dtoa$3528& (0+255),b
  7736  003174  EFC0  F018         	goto	l8293
  7737  003178                     l8291:
  7738                           
  7739                           ; BSR set to: 0
  7740  003178  0E00               	movlw	0
  7741  00317A  6F6B               	movwf	(_dtoa$3528+1)& (0+255),b
  7742  00317C  0E2D               	movlw	45
  7743  00317E  6F6A               	movwf	_dtoa$3528& (0+255),b
  7744  003180                     l8293:
  7745                           
  7746                           ; BSR set to: 0
  7747  003180  0E34               	movlw	low _dbuf
  7748  003182  257A               	addwf	dtoa@i& (0+255),w,b
  7749  003184  6ED9               	movwf	fsr2l,c
  7750  003186  0E01               	movlw	high _dbuf
  7751  003188  217B               	addwfc	(dtoa@i+1)& (0+255),w,b
  7752  00318A  6EDA               	movwf	fsr2h,c
  7753  00318C  0060  F1AB  FFDF   	movff	_dtoa$3528,indf2
  7754  003192                     l8295:
  7755                           
  7756                           ; BSR set to: 0
  7757                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  7758  003192  C060  F026         	movff	dtoa@fp,pad@fp
  7759  003196  C061  F027         	movff	dtoa@fp+1,pad@fp+1
  7760  00319A  0E34               	movlw	low _dbuf
  7761  00319C  257A               	addwf	dtoa@i& (0+255),w,b
  7762  00319E  6E28               	movwf	pad@buf^0,c
  7763  0031A0  0E01               	movlw	high _dbuf
  7764  0031A2  217B               	addwfc	(dtoa@i+1)& (0+255),w,b
  7765  0031A4  6E29               	movwf	(pad@buf+1)^0,c
  7766  0031A6  C06E  F02A         	movff	dtoa@w,pad@p
  7767  0031AA  C06F  F02B         	movff	dtoa@w+1,pad@p+1
  7768  0031AE  EC70  F026         	call	_pad	;wreg free
  7769  0031B2  C026  F060         	movff	?_pad,?_dtoa
  7770  0031B6  C027  F061         	movff	?_pad+1,?_dtoa+1
  7771  0031BA  0012               	return		;funcret
  7772  0031BC                     __end_of_dtoa:
  7773                           	callstack 0
  7774                           
  7775 ;; *************** function _pad *****************
  7776 ;; Defined at:
  7777 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  7778 ;; Parameters:    Size  Location     Type
  7779 ;;  fp              2   37[COMRAM] PTR struct _IO_FILE
  7780 ;;		 -> NULL(0), 
  7781 ;;  buf             2   39[COMRAM] PTR unsigned char 
  7782 ;;		 -> dbuf(80), 
  7783 ;;  p               2   41[COMRAM] int 
  7784 ;; Auto vars:     Size  Location     Type
  7785 ;;  w               2   46[COMRAM] int 
  7786 ;;  i               2   44[COMRAM] int 
  7787 ;; Return value:  Size  Location     Type
  7788 ;;                  2   37[COMRAM] int 
  7789 ;; Registers used:
  7790 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7791 ;; Tracked objects:
  7792 ;;		On entry : 0/0
  7793 ;;		On exit  : 0/0
  7794 ;;		Unchanged: 0/0
  7795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7796 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7797 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7798 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7799 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7800 ;;Total ram usage:       11 bytes
  7801 ;; Hardware stack levels used: 1
  7802 ;; Hardware stack levels required when called: 12
  7803 ;; This function calls:
  7804 ;;		_fputc
  7805 ;;		_fputs
  7806 ;;		_strlen
  7807 ;; This function is called by:
  7808 ;;		_dtoa
  7809 ;;		_efgtoa
  7810 ;; This function uses a non-reentrant model
  7811 ;;
  7812                           
  7813                           	psect	text22
  7814  004CE0                     __ptext22:
  7815                           	callstack 0
  7816  004CE0                     _pad:
  7817                           	callstack 12
  7818  004CE0                     
  7819                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  7820  004CE0  A03E               	btfss	_flags^0,0,c
  7821  004CE2  EF75  F026         	goto	u8491
  7822  004CE6  EF77  F026         	goto	u8490
  7823  004CEA                     u8491:
  7824  004CEA  EF81  F026         	goto	l8151
  7825  004CEE                     u8490:
  7826  004CEE                     
  7827                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  7828  004CEE  C028  F01F         	movff	pad@buf,fputs@s
  7829  004CF2  C029  F020         	movff	pad@buf+1,fputs@s+1
  7830  004CF6  C026  F021         	movff	pad@fp,fputs@fp
  7831  004CFA  C027  F022         	movff	pad@fp+1,fputs@fp+1
  7832  004CFE  EC1D  F02B         	call	_fputs	;wreg free
  7833  004D02                     l8151:
  7834                           
  7835                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  7836  004D02  BE2B               	btfsc	(pad@p+1)^0,7,c
  7837  004D04  EF86  F026         	goto	u8501
  7838  004D08  EF88  F026         	goto	u8500
  7839  004D0C                     u8501:
  7840  004D0C  EF8E  F026         	goto	l8155
  7841  004D10                     u8500:
  7842  004D10  C02A  F02F         	movff	pad@p,pad@w
  7843  004D14  C02B  F030         	movff	pad@p+1,pad@w+1
  7844  004D18  EF92  F026         	goto	l2114
  7845  004D1C                     l8155:
  7846  004D1C  0E00               	movlw	0
  7847  004D1E  6E30               	movwf	(pad@w+1)^0,c
  7848  004D20  0E00               	movlw	0
  7849  004D22  6E2F               	movwf	pad@w^0,c
  7850  004D24                     l2114:
  7851                           
  7852                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  7853  004D24  0E00               	movlw	0
  7854  004D26  6E2E               	movwf	(pad@i+1)^0,c
  7855  004D28  0E00               	movlw	0
  7856  004D2A  6E2D               	movwf	pad@i^0,c
  7857                           
  7858                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  7859  004D2C  EFA4  F026         	goto	l8161
  7860  004D30                     l8157:
  7861                           
  7862                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  7863  004D30  0E00               	movlw	0
  7864  004D32  6E17               	movwf	(fputc@c+1)^0,c
  7865  004D34  0E20               	movlw	32
  7866  004D36  6E16               	movwf	fputc@c^0,c
  7867  004D38  C026  F018         	movff	pad@fp,fputc@fp
  7868  004D3C  C027  F019         	movff	pad@fp+1,fputc@fp+1
  7869  004D40  EC30  F028         	call	_fputc	;wreg free
  7870  004D44                     
  7871                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  7872  004D44  4A2D               	infsnz	pad@i^0,f,c
  7873  004D46  2A2E               	incf	(pad@i+1)^0,f,c
  7874  004D48                     l8161:
  7875                           
  7876                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  7877  004D48  502F               	movf	pad@w^0,w,c
  7878  004D4A  5C2D               	subwf	pad@i^0,w,c
  7879  004D4C  502E               	movf	(pad@i+1)^0,w,c
  7880  004D4E  0A80               	xorlw	128
  7881  004D50  6E2C               	movwf	??_pad^0,c
  7882  004D52  5030               	movf	(pad@w+1)^0,w,c
  7883  004D54  0A80               	xorlw	128
  7884  004D56  582C               	subwfb	??_pad^0,w,c
  7885  004D58  A0D8               	btfss	status,0,c
  7886  004D5A  EFB1  F026         	goto	u8511
  7887  004D5E  EFB3  F026         	goto	u8510
  7888  004D62                     u8511:
  7889  004D62  EF98  F026         	goto	l8157
  7890  004D66                     u8510:
  7891  004D66                     
  7892                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  7893  004D66  B03E               	btfsc	_flags^0,0,c
  7894  004D68  EFB8  F026         	goto	u8521
  7895  004D6C  EFBA  F026         	goto	u8520
  7896  004D70                     u8521:
  7897  004D70  EFC4  F026         	goto	l8165
  7898  004D74                     u8520:
  7899  004D74                     
  7900                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  7901  004D74  C028  F01F         	movff	pad@buf,fputs@s
  7902  004D78  C029  F020         	movff	pad@buf+1,fputs@s+1
  7903  004D7C  C026  F021         	movff	pad@fp,fputs@fp
  7904  004D80  C027  F022         	movff	pad@fp+1,fputs@fp+1
  7905  004D84  EC1D  F02B         	call	_fputs	;wreg free
  7906  004D88                     l8165:
  7907                           
  7908                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  7909  004D88  C028  F014         	movff	pad@buf,strlen@s
  7910  004D8C  C029  F015         	movff	pad@buf+1,strlen@s+1
  7911  004D90  EC81  F02B         	call	_strlen	;wreg free
  7912  004D94  502F               	movf	pad@w^0,w,c
  7913  004D96  2414               	addwf	?_strlen^0,w,c
  7914  004D98  6E26               	movwf	?_pad^0,c
  7915  004D9A  5030               	movf	(pad@w+1)^0,w,c
  7916  004D9C  2015               	addwfc	(?_strlen+1)^0,w,c
  7917  004D9E  6E27               	movwf	(?_pad+1)^0,c
  7918  004DA0  0012               	return		;funcret
  7919  004DA2                     __end_of_pad:
  7920                           	callstack 0
  7921                           
  7922 ;; *************** function _strlen *****************
  7923 ;; Defined at:
  7924 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  7925 ;; Parameters:    Size  Location     Type
  7926 ;;  s               2   19[COMRAM] PTR const unsigned char 
  7927 ;;		 -> dbuf(80), 
  7928 ;; Auto vars:     Size  Location     Type
  7929 ;;  a               2   21[COMRAM] PTR const unsigned char 
  7930 ;;		 -> dbuf(80), 
  7931 ;; Return value:  Size  Location     Type
  7932 ;;                  2   19[COMRAM] unsigned int 
  7933 ;; Registers used:
  7934 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7935 ;; Tracked objects:
  7936 ;;		On entry : 0/0
  7937 ;;		On exit  : 0/0
  7938 ;;		Unchanged: 0/0
  7939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7940 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7941 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7943 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7944 ;;Total ram usage:        4 bytes
  7945 ;; Hardware stack levels used: 1
  7946 ;; Hardware stack levels required when called: 8
  7947 ;; This function calls:
  7948 ;;		Nothing
  7949 ;; This function is called by:
  7950 ;;		_pad
  7951 ;; This function uses a non-reentrant model
  7952 ;;
  7953                           
  7954                           	psect	text23
  7955  005702                     __ptext23:
  7956                           	callstack 0
  7957  005702                     _strlen:
  7958                           	callstack 15
  7959  005702  C014  F016         	movff	strlen@s,strlen@a
  7960  005706  C015  F017         	movff	strlen@s+1,strlen@a+1
  7961  00570A  EF89  F02B         	goto	l7613
  7962  00570E                     l7611:
  7963  00570E  4A14               	infsnz	strlen@s^0,f,c
  7964  005710  2A15               	incf	(strlen@s+1)^0,f,c
  7965  005712                     l7613:
  7966  005712  0060  F053  FFD9   	movff	strlen@s,fsr2l
  7967  005718  0060  F057  FFDA   	movff	strlen@s+1,fsr2h
  7968  00571E  50DF               	movf	indf2,w,c
  7969  005720  A4D8               	btfss	status,2,c
  7970  005722  EF95  F02B         	goto	u7631
  7971  005726  EF97  F02B         	goto	u7630
  7972  00572A                     u7631:
  7973  00572A  EF87  F02B         	goto	l7611
  7974  00572E                     u7630:
  7975  00572E  5016               	movf	strlen@a^0,w,c
  7976  005730  5C14               	subwf	strlen@s^0,w,c
  7977  005732  6E14               	movwf	?_strlen^0,c
  7978  005734  5017               	movf	(strlen@a+1)^0,w,c
  7979  005736  5815               	subwfb	(strlen@s+1)^0,w,c
  7980  005738  6E15               	movwf	(?_strlen+1)^0,c
  7981  00573A  0012               	return		;funcret
  7982  00573C                     __end_of_strlen:
  7983                           	callstack 0
  7984                           
  7985 ;; *************** function _fputs *****************
  7986 ;; Defined at:
  7987 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  7988 ;; Parameters:    Size  Location     Type
  7989 ;;  s               2   30[COMRAM] PTR const unsigned char 
  7990 ;;		 -> dbuf(80), 
  7991 ;;  fp              2   32[COMRAM] PTR struct _IO_FILE
  7992 ;;		 -> NULL(0), 
  7993 ;; Auto vars:     Size  Location     Type
  7994 ;;  i               2   35[COMRAM] int 
  7995 ;;  c               1   34[COMRAM] unsigned char 
  7996 ;; Return value:  Size  Location     Type
  7997 ;;                  2   30[COMRAM] int 
  7998 ;; Registers used:
  7999 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8000 ;; Tracked objects:
  8001 ;;		On entry : 0/0
  8002 ;;		On exit  : 0/0
  8003 ;;		Unchanged: 0/0
  8004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8005 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8006 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8008 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8009 ;;Total ram usage:        7 bytes
  8010 ;; Hardware stack levels used: 1
  8011 ;; Hardware stack levels required when called: 11
  8012 ;; This function calls:
  8013 ;;		_fputc
  8014 ;; This function is called by:
  8015 ;;		_pad
  8016 ;; This function uses a non-reentrant model
  8017 ;;
  8018                           
  8019                           	psect	text24
  8020  00563A                     __ptext24:
  8021                           	callstack 0
  8022  00563A                     _fputs:
  8023                           	callstack 12
  8024  00563A  0E00               	movlw	0
  8025  00563C  6E25               	movwf	(fputs@i+1)^0,c
  8026  00563E  0E00               	movlw	0
  8027  005640  6E24               	movwf	fputs@i^0,c
  8028  005642  EF2E  F02B         	goto	l7607
  8029  005646                     l7603:
  8030  005646  C023  F016         	movff	fputs@c,fputc@c
  8031  00564A  6A17               	clrf	(fputc@c+1)^0,c
  8032  00564C  C021  F018         	movff	fputs@fp,fputc@fp
  8033  005650  C022  F019         	movff	fputs@fp+1,fputc@fp+1
  8034  005654  EC30  F028         	call	_fputc	;wreg free
  8035  005658  4A24               	infsnz	fputs@i^0,f,c
  8036  00565A  2A25               	incf	(fputs@i+1)^0,f,c
  8037  00565C                     l7607:
  8038  00565C  5024               	movf	fputs@i^0,w,c
  8039  00565E  241F               	addwf	fputs@s^0,w,c
  8040  005660  6ED9               	movwf	fsr2l,c
  8041  005662  5025               	movf	(fputs@i+1)^0,w,c
  8042  005664  2020               	addwfc	(fputs@s+1)^0,w,c
  8043  005666  6EDA               	movwf	fsr2h,c
  8044  005668  50DF               	movf	indf2,w,c
  8045  00566A  6E23               	movwf	fputs@c^0,c
  8046  00566C  5023               	movf	fputs@c^0,w,c
  8047  00566E  A4D8               	btfss	status,2,c
  8048  005670  EF3C  F02B         	goto	u7621
  8049  005674  EF3E  F02B         	goto	u7620
  8050  005678                     u7621:
  8051  005678  EF23  F02B         	goto	l7603
  8052  00567C                     u7620:
  8053  00567C  0012               	return		;funcret
  8054  00567E                     __end_of_fputs:
  8055                           	callstack 0
  8056                           
  8057 ;; *************** function _fputc *****************
  8058 ;; Defined at:
  8059 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  8060 ;; Parameters:    Size  Location     Type
  8061 ;;  c               2   21[COMRAM] int 
  8062 ;;  fp              2   23[COMRAM] PTR struct _IO_FILE
  8063 ;;		 -> NULL(0), 
  8064 ;; Auto vars:     Size  Location     Type
  8065 ;;		None
  8066 ;; Return value:  Size  Location     Type
  8067 ;;                  2   21[COMRAM] int 
  8068 ;; Registers used:
  8069 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8070 ;; Tracked objects:
  8071 ;;		On entry : 0/0
  8072 ;;		On exit  : 0/0
  8073 ;;		Unchanged: 0/0
  8074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8075 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8077 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8078 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8079 ;;Total ram usage:        9 bytes
  8080 ;; Hardware stack levels used: 1
  8081 ;; Hardware stack levels required when called: 10
  8082 ;; This function calls:
  8083 ;;		_putch
  8084 ;; This function is called by:
  8085 ;;		_pad
  8086 ;;		_vfpfcnvrt
  8087 ;;		_fputs
  8088 ;; This function uses a non-reentrant model
  8089 ;;
  8090                           
  8091                           	psect	text25
  8092  005060                     __ptext25:
  8093                           	callstack 0
  8094  005060                     _fputc:
  8095                           	callstack 15
  8096  005060  5018               	movf	fputc@fp^0,w,c
  8097  005062  1019               	iorwf	(fputc@fp+1)^0,w,c
  8098  005064  B4D8               	btfsc	status,2,c
  8099  005066  EF37  F028         	goto	u7191
  8100  00506A  EF39  F028         	goto	u7190
  8101  00506E                     u7191:
  8102  00506E  EF42  F028         	goto	l7389
  8103  005072                     u7190:
  8104  005072  5018               	movf	fputc@fp^0,w,c
  8105  005074  1019               	iorwf	(fputc@fp+1)^0,w,c
  8106  005076  A4D8               	btfss	status,2,c
  8107  005078  EF40  F028         	goto	u7201
  8108  00507C  EF42  F028         	goto	u7200
  8109  005080                     u7201:
  8110  005080  EF47  F028         	goto	l7391
  8111  005084                     u7200:
  8112  005084                     l7389:
  8113  005084  5016               	movf	fputc@c^0,w,c
  8114  005086  ECC2  F02E         	call	_putch
  8115  00508A  EF7A  F028         	goto	l2311
  8116  00508E                     l7391:
  8117  00508E  EE20 F004          	lfsr	2,4
  8118  005092  5018               	movf	fputc@fp^0,w,c
  8119  005094  26D9               	addwf	fsr2l,f,c
  8120  005096  5019               	movf	(fputc@fp+1)^0,w,c
  8121  005098  22DA               	addwfc	fsr2h,f,c
  8122  00509A  50DE               	movf	postinc2,w,c
  8123  00509C  10DE               	iorwf	postinc2,w,c
  8124  00509E  B4D8               	btfsc	status,2,c
  8125  0050A0  EF54  F028         	goto	u7211
  8126  0050A4  EF56  F028         	goto	u7210
  8127  0050A8                     u7211:
  8128  0050A8  EF71  F028         	goto	l7395
  8129  0050AC                     u7210:
  8130  0050AC  EE20 F004          	lfsr	2,4
  8131  0050B0  5018               	movf	fputc@fp^0,w,c
  8132  0050B2  26D9               	addwf	fsr2l,f,c
  8133  0050B4  5019               	movf	(fputc@fp+1)^0,w,c
  8134  0050B6  22DA               	addwfc	fsr2h,f,c
  8135  0050B8  EE10 F002          	lfsr	1,2
  8136  0050BC  5018               	movf	fputc@fp^0,w,c
  8137  0050BE  26E1               	addwf	fsr1l,f,c
  8138  0050C0  5019               	movf	(fputc@fp+1)^0,w,c
  8139  0050C2  22E2               	addwfc	fsr1h,f,c
  8140  0050C4  50DE               	movf	postinc2,w,c
  8141  0050C6  5CE6               	subwf	postinc1,w,c
  8142  0050C8  50E6               	movf	postinc1,w,c
  8143  0050CA  0A80               	xorlw	128
  8144  0050CC  6E1E               	movwf	(??_fputc+4)^0,c
  8145  0050CE  50DE               	movf	postinc2,w,c
  8146  0050D0  0A80               	xorlw	128
  8147  0050D2  581E               	subwfb	(??_fputc+4)^0,w,c
  8148  0050D4  B0D8               	btfsc	status,0,c
  8149  0050D6  EF6F  F028         	goto	u7221
  8150  0050DA  EF71  F028         	goto	u7220
  8151  0050DE                     u7221:
  8152  0050DE  EF7A  F028         	goto	l2311
  8153  0050E2                     u7220:
  8154  0050E2                     l7395:
  8155  0050E2  EE20 F002          	lfsr	2,2
  8156  0050E6  5018               	movf	fputc@fp^0,w,c
  8157  0050E8  26D9               	addwf	fsr2l,f,c
  8158  0050EA  5019               	movf	(fputc@fp+1)^0,w,c
  8159  0050EC  22DA               	addwfc	fsr2h,f,c
  8160  0050EE  2ADE               	incf	postinc2,f,c
  8161  0050F0  0E00               	movlw	0
  8162  0050F2  22DD               	addwfc	postdec2,f,c
  8163  0050F4                     l2311:
  8164  0050F4  0012               	return		;funcret
  8165  0050F6                     __end_of_fputc:
  8166                           	callstack 0
  8167                           
  8168 ;; *************** function _putch *****************
  8169 ;; Defined at:
  8170 ;;		line 230 in file "mcc_generated_files/uart1.c"
  8171 ;; Parameters:    Size  Location     Type
  8172 ;;  txData          1    wreg     unsigned char 
  8173 ;; Auto vars:     Size  Location     Type
  8174 ;;  txData          1   20[COMRAM] unsigned char 
  8175 ;; Return value:  Size  Location     Type
  8176 ;;                  1    wreg      void 
  8177 ;; Registers used:
  8178 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8179 ;; Tracked objects:
  8180 ;;		On entry : 0/0
  8181 ;;		On exit  : 0/0
  8182 ;;		Unchanged: 0/0
  8183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8185 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8187 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8188 ;;Total ram usage:        1 bytes
  8189 ;; Hardware stack levels used: 1
  8190 ;; Hardware stack levels required when called: 9
  8191 ;; This function calls:
  8192 ;;		_UART1_Write
  8193 ;; This function is called by:
  8194 ;;		_fputc
  8195 ;; This function uses a non-reentrant model
  8196 ;;
  8197                           
  8198                           	psect	text26
  8199  005D84                     __ptext26:
  8200                           	callstack 0
  8201  005D84                     _putch:
  8202                           	callstack 15
  8203                           
  8204                           ;incstack = 0
  8205                           ;putch@txData stored from wreg
  8206  005D84  6E15               	movwf	putch@txData^0,c
  8207  005D86                     
  8208                           ;mcc_generated_files/uart1.c: 230: void putch(char txData);mcc_generated_files/uart1.c: 
      +                          231: {;mcc_generated_files/uart1.c: 232:     UART1_Write(txData);
  8209  005D86  5015               	movf	putch@txData^0,w,c
  8210  005D88  ECDE  F029         	call	_UART1_Write
  8211  005D8C  0012               	return		;funcret
  8212  005D8E                     __end_of_putch:
  8213                           	callstack 0
  8214                           
  8215 ;; *************** function _UART1_Write *****************
  8216 ;; Defined at:
  8217 ;;		line 202 in file "mcc_generated_files/uart1.c"
  8218 ;; Parameters:    Size  Location     Type
  8219 ;;  txData          1    wreg     unsigned char 
  8220 ;; Auto vars:     Size  Location     Type
  8221 ;;  txData          1   19[COMRAM] unsigned char 
  8222 ;; Return value:  Size  Location     Type
  8223 ;;                  1    wreg      void 
  8224 ;; Registers used:
  8225 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8226 ;; Tracked objects:
  8227 ;;		On entry : 0/0
  8228 ;;		On exit  : 0/0
  8229 ;;		Unchanged: 0/0
  8230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8232 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8234 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8235 ;;Total ram usage:        1 bytes
  8236 ;; Hardware stack levels used: 1
  8237 ;; Hardware stack levels required when called: 8
  8238 ;; This function calls:
  8239 ;;		Nothing
  8240 ;; This function is called by:
  8241 ;;		_putch
  8242 ;; This function uses a non-reentrant model
  8243 ;;
  8244                           
  8245                           	psect	text27
  8246  0053BC                     __ptext27:
  8247                           	callstack 0
  8248  0053BC                     _UART1_Write:
  8249                           	callstack 15
  8250                           
  8251                           ;incstack = 0
  8252                           ;UART1_Write@txData stored from wreg
  8253  0053BC  6E14               	movwf	UART1_Write@txData^0,c
  8254  0053BE                     l7367:
  8255                           
  8256                           ;mcc_generated_files/uart1.c: 204:     while(0 == uart1TxBufferRemaining)
  8257  0053BE  504C               	movf	_uart1TxBufferRemaining^0,w,c	;volatile
  8258  0053C0  B4D8               	btfsc	status,2,c
  8259  0053C2  EFE5  F029         	goto	u7161
  8260  0053C6  EFE7  F029         	goto	u7160
  8261  0053CA                     u7161:
  8262  0053CA  EFDF  F029         	goto	l7367
  8263  0053CE                     u7160:
  8264  0053CE                     
  8265                           ;mcc_generated_files/uart1.c: 208:     if(0 == PIE3bits.U1TXIE)
  8266  0053CE  0139               	movlb	57	; () banked
  8267  0053D0  B993               	btfsc	147,4,b	;volatile
  8268  0053D2  EFED  F029         	goto	u7171
  8269  0053D6  EFEF  F029         	goto	u7170
  8270  0053DA                     u7171:
  8271  0053DA  EFF4  F029         	goto	l309
  8272  0053DE                     u7170:
  8273  0053DE                     
  8274                           ; BSR set to: 57
  8275                           ;mcc_generated_files/uart1.c: 209:     {;mcc_generated_files/uart1.c: 210:         U1TXB
      +                           = txData;
  8276  0053DE  0060  F053  FDEA   	movff	UART1_Write@txData,15850	;volatile
  8277                           
  8278                           ;mcc_generated_files/uart1.c: 211:     }
  8279  0053E4  EF0A  F02A         	goto	l7381
  8280  0053E8                     l309:
  8281                           
  8282                           ; BSR set to: 57
  8283                           ;mcc_generated_files/uart1.c: 213:     {;mcc_generated_files/uart1.c: 214:         PIE3b
      +                          its.U1TXIE = 0;
  8284  0053E8  9993               	bcf	147,4,b	;volatile
  8285  0053EA                     
  8286                           ; BSR set to: 57
  8287                           ;mcc_generated_files/uart1.c: 215:         uart1TxBuffer[uart1TxHead++] = txData;
  8288  0053EA  0E10               	movlw	low _uart1TxBuffer
  8289  0053EC  2447               	addwf	_uart1TxHead^0,w,c	;volatile
  8290  0053EE  6ED9               	movwf	fsr2l,c
  8291  0053F0  6ADA               	clrf	fsr2h,c
  8292  0053F2  0E01               	movlw	high _uart1TxBuffer
  8293  0053F4  22DA               	addwfc	fsr2h,f,c
  8294  0053F6  0060  F053  FFDF   	movff	UART1_Write@txData,indf2
  8295  0053FC                     
  8296                           ; BSR set to: 57
  8297  0053FC  2A47               	incf	_uart1TxHead^0,f,c	;volatile
  8298  0053FE                     
  8299                           ; BSR set to: 57
  8300                           ;mcc_generated_files/uart1.c: 216:         if(sizeof(uart1TxBuffer) <= uart1TxHead)
  8301  0053FE  0E07               	movlw	7
  8302  005400  6447               	cpfsgt	_uart1TxHead^0,c	;volatile
  8303  005402  EF05  F02A         	goto	u7181
  8304  005406  EF07  F02A         	goto	u7180
  8305  00540A                     u7181:
  8306  00540A  EF09  F02A         	goto	l7379
  8307  00540E                     u7180:
  8308  00540E                     
  8309                           ; BSR set to: 57
  8310                           ;mcc_generated_files/uart1.c: 217:         {;mcc_generated_files/uart1.c: 218:          
      +                             uart1TxHead = 0;
  8311  00540E  0E00               	movlw	0
  8312  005410  6E47               	movwf	_uart1TxHead^0,c	;volatile
  8313  005412                     l7379:
  8314                           
  8315                           ; BSR set to: 57
  8316                           ;mcc_generated_files/uart1.c: 220:         uart1TxBufferRemaining--;
  8317  005412  064C               	decf	_uart1TxBufferRemaining^0,f,c	;volatile
  8318  005414                     l7381:
  8319                           
  8320                           ; BSR set to: 57
  8321                           ;mcc_generated_files/uart1.c: 222:     PIE3bits.U1TXIE = 1;
  8322  005414  8993               	bsf	147,4,b	;volatile
  8323  005416                     
  8324                           ; BSR set to: 57
  8325  005416  0012               	return		;funcret
  8326  005418                     __end_of_UART1_Write:
  8327                           	callstack 0
  8328                           
  8329 ;; *************** function _abs *****************
  8330 ;; Defined at:
  8331 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  8332 ;; Parameters:    Size  Location     Type
  8333 ;;  a               2   37[COMRAM] int 
  8334 ;; Auto vars:     Size  Location     Type
  8335 ;;		None
  8336 ;; Return value:  Size  Location     Type
  8337 ;;                  2   37[COMRAM] int 
  8338 ;; Registers used:
  8339 ;;		wreg, status,2, status,0
  8340 ;; Tracked objects:
  8341 ;;		On entry : 0/0
  8342 ;;		On exit  : 0/0
  8343 ;;		Unchanged: 0/0
  8344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8345 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8347 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8348 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8349 ;;Total ram usage:        4 bytes
  8350 ;; Hardware stack levels used: 1
  8351 ;; Hardware stack levels required when called: 8
  8352 ;; This function calls:
  8353 ;;		Nothing
  8354 ;; This function is called by:
  8355 ;;		_dtoa
  8356 ;; This function uses a non-reentrant model
  8357 ;;
  8358                           
  8359                           	psect	text28
  8360  0056C2                     __ptext28:
  8361                           	callstack 0
  8362  0056C2                     _abs:
  8363                           	callstack 16
  8364  0056C2  BE27               	btfsc	(abs@a+1)^0,7,c
  8365  0056C4  EF6E  F02B         	goto	u8530
  8366  0056C8  5027               	movf	(abs@a+1)^0,w,c
  8367  0056CA  E106               	bnz	u8531
  8368  0056CC  0426               	decf	abs@a^0,w,c
  8369  0056CE  B0D8               	btfsc	status,0,c
  8370  0056D0  EF6C  F02B         	goto	u8531
  8371  0056D4  EF6E  F02B         	goto	u8530
  8372  0056D8                     u8531:
  8373  0056D8  EF7C  F02B         	goto	l2277
  8374  0056DC                     u8530:
  8375  0056DC  C026  F028         	movff	abs@a,??_abs
  8376  0056E0  C027  F029         	movff	abs@a+1,??_abs+1
  8377  0056E4  1E28               	comf	??_abs^0,f,c
  8378  0056E6  1E29               	comf	(??_abs+1)^0,f,c
  8379  0056E8  4A28               	infsnz	??_abs^0,f,c
  8380  0056EA  2A29               	incf	(??_abs+1)^0,f,c
  8381  0056EC  C028  F026         	movff	??_abs,?_abs
  8382  0056F0  C029  F027         	movff	??_abs+1,?_abs+1
  8383  0056F4  EF80  F02B         	goto	l2280
  8384  0056F8                     l2277:
  8385  0056F8  C026  F026         	movff	abs@a,?_abs
  8386  0056FC  C027  F027         	movff	abs@a+1,?_abs+1
  8387  005700                     l2280:
  8388  005700  0012               	return		;funcret
  8389  005702                     __end_of_abs:
  8390                           	callstack 0
  8391                           
  8392 ;; *************** function ___aomod *****************
  8393 ;; Defined at:
  8394 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  8395 ;; Parameters:    Size  Location     Type
  8396 ;;  dividend        8   19[COMRAM] long long 
  8397 ;;  divisor         8   27[COMRAM] long long 
  8398 ;; Auto vars:     Size  Location     Type
  8399 ;;  sign            1   36[COMRAM] unsigned char 
  8400 ;;  counter         1   35[COMRAM] unsigned char 
  8401 ;; Return value:  Size  Location     Type
  8402 ;;                  8   19[COMRAM] long long 
  8403 ;; Registers used:
  8404 ;;		wreg, status,2, status,0
  8405 ;; Tracked objects:
  8406 ;;		On entry : 0/0
  8407 ;;		On exit  : 0/0
  8408 ;;		Unchanged: 0/0
  8409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8410 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8411 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8413 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8414 ;;Total ram usage:       18 bytes
  8415 ;; Hardware stack levels used: 1
  8416 ;; Hardware stack levels required when called: 8
  8417 ;; This function calls:
  8418 ;;		Nothing
  8419 ;; This function is called by:
  8420 ;;		_dtoa
  8421 ;; This function uses a non-reentrant model
  8422 ;;
  8423                           
  8424                           	psect	text29
  8425  004078                     __ptext29:
  8426                           	callstack 0
  8427  004078                     ___aomod:
  8428                           	callstack 16
  8429  004078  0E00               	movlw	0
  8430  00407A  6E25               	movwf	___aomod@sign^0,c
  8431  00407C  BE1B               	btfsc	(___aomod@dividend+7)^0,7,c
  8432  00407E  EF45  F020         	goto	u7730
  8433  004082  EF43  F020         	goto	u7731
  8434  004086                     u7731:
  8435  004086  EF57  F020         	goto	l7675
  8436  00408A                     u7730:
  8437  00408A  1E1B               	comf	(___aomod@dividend+7)^0,f,c
  8438  00408C  1E1A               	comf	(___aomod@dividend+6)^0,f,c
  8439  00408E  1E19               	comf	(___aomod@dividend+5)^0,f,c
  8440  004090  1E18               	comf	(___aomod@dividend+4)^0,f,c
  8441  004092  1E17               	comf	(___aomod@dividend+3)^0,f,c
  8442  004094  1E16               	comf	(___aomod@dividend+2)^0,f,c
  8443  004096  1E15               	comf	(___aomod@dividend+1)^0,f,c
  8444  004098  6C14               	negf	___aomod@dividend^0,c
  8445  00409A  0E00               	movlw	0
  8446  00409C  2215               	addwfc	(___aomod@dividend+1)^0,f,c
  8447  00409E  2216               	addwfc	(___aomod@dividend+2)^0,f,c
  8448  0040A0  2217               	addwfc	(___aomod@dividend+3)^0,f,c
  8449  0040A2  2218               	addwfc	(___aomod@dividend+4)^0,f,c
  8450  0040A4  2219               	addwfc	(___aomod@dividend+5)^0,f,c
  8451  0040A6  221A               	addwfc	(___aomod@dividend+6)^0,f,c
  8452  0040A8  221B               	addwfc	(___aomod@dividend+7)^0,f,c
  8453  0040AA  0E01               	movlw	1
  8454  0040AC  6E25               	movwf	___aomod@sign^0,c
  8455  0040AE                     l7675:
  8456  0040AE  BE23               	btfsc	(___aomod@divisor+7)^0,7,c
  8457  0040B0  EF5E  F020         	goto	u7740
  8458  0040B4  EF5C  F020         	goto	u7741
  8459  0040B8                     u7741:
  8460  0040B8  EF6E  F020         	goto	l7679
  8461  0040BC                     u7740:
  8462  0040BC  1E23               	comf	(___aomod@divisor+7)^0,f,c
  8463  0040BE  1E22               	comf	(___aomod@divisor+6)^0,f,c
  8464  0040C0  1E21               	comf	(___aomod@divisor+5)^0,f,c
  8465  0040C2  1E20               	comf	(___aomod@divisor+4)^0,f,c
  8466  0040C4  1E1F               	comf	(___aomod@divisor+3)^0,f,c
  8467  0040C6  1E1E               	comf	(___aomod@divisor+2)^0,f,c
  8468  0040C8  1E1D               	comf	(___aomod@divisor+1)^0,f,c
  8469  0040CA  6C1C               	negf	___aomod@divisor^0,c
  8470  0040CC  0E00               	movlw	0
  8471  0040CE  221D               	addwfc	(___aomod@divisor+1)^0,f,c
  8472  0040D0  221E               	addwfc	(___aomod@divisor+2)^0,f,c
  8473  0040D2  221F               	addwfc	(___aomod@divisor+3)^0,f,c
  8474  0040D4  2220               	addwfc	(___aomod@divisor+4)^0,f,c
  8475  0040D6  2221               	addwfc	(___aomod@divisor+5)^0,f,c
  8476  0040D8  2222               	addwfc	(___aomod@divisor+6)^0,f,c
  8477  0040DA  2223               	addwfc	(___aomod@divisor+7)^0,f,c
  8478  0040DC                     l7679:
  8479  0040DC  501C               	movf	___aomod@divisor^0,w,c
  8480  0040DE  101D               	iorwf	(___aomod@divisor+1)^0,w,c
  8481  0040E0  101E               	iorwf	(___aomod@divisor+2)^0,w,c
  8482  0040E2  101F               	iorwf	(___aomod@divisor+3)^0,w,c
  8483  0040E4  1020               	iorwf	(___aomod@divisor+4)^0,w,c
  8484  0040E6  1021               	iorwf	(___aomod@divisor+5)^0,w,c
  8485  0040E8  1022               	iorwf	(___aomod@divisor+6)^0,w,c
  8486  0040EA  1023               	iorwf	(___aomod@divisor+7)^0,w,c
  8487  0040EC  B4D8               	btfsc	status,2,c
  8488  0040EE  EF7B  F020         	goto	u7751
  8489  0040F2  EF7D  F020         	goto	u7750
  8490  0040F6                     u7751:
  8491  0040F6  EFC5  F020         	goto	l7695
  8492  0040FA                     u7750:
  8493  0040FA  0E01               	movlw	1
  8494  0040FC  6E24               	movwf	___aomod@counter^0,c
  8495  0040FE  EF8B  F020         	goto	l7685
  8496  004102                     l7683:
  8497  004102  90D8               	bcf	status,0,c
  8498  004104  361C               	rlcf	___aomod@divisor^0,f,c
  8499  004106  361D               	rlcf	(___aomod@divisor+1)^0,f,c
  8500  004108  361E               	rlcf	(___aomod@divisor+2)^0,f,c
  8501  00410A  361F               	rlcf	(___aomod@divisor+3)^0,f,c
  8502  00410C  3620               	rlcf	(___aomod@divisor+4)^0,f,c
  8503  00410E  3621               	rlcf	(___aomod@divisor+5)^0,f,c
  8504  004110  3622               	rlcf	(___aomod@divisor+6)^0,f,c
  8505  004112  3623               	rlcf	(___aomod@divisor+7)^0,f,c
  8506  004114  2A24               	incf	___aomod@counter^0,f,c
  8507  004116                     l7685:
  8508  004116  AE23               	btfss	(___aomod@divisor+7)^0,7,c
  8509  004118  EF90  F020         	goto	u7761
  8510  00411C  EF92  F020         	goto	u7760
  8511  004120                     u7761:
  8512  004120  EF81  F020         	goto	l7683
  8513  004124                     u7760:
  8514  004124                     l7687:
  8515  004124  501C               	movf	___aomod@divisor^0,w,c
  8516  004126  5C14               	subwf	___aomod@dividend^0,w,c
  8517  004128  501D               	movf	(___aomod@divisor+1)^0,w,c
  8518  00412A  5815               	subwfb	(___aomod@dividend+1)^0,w,c
  8519  00412C  501E               	movf	(___aomod@divisor+2)^0,w,c
  8520  00412E  5816               	subwfb	(___aomod@dividend+2)^0,w,c
  8521  004130  501F               	movf	(___aomod@divisor+3)^0,w,c
  8522  004132  5817               	subwfb	(___aomod@dividend+3)^0,w,c
  8523  004134  5020               	movf	(___aomod@divisor+4)^0,w,c
  8524  004136  5818               	subwfb	(___aomod@dividend+4)^0,w,c
  8525  004138  5021               	movf	(___aomod@divisor+5)^0,w,c
  8526  00413A  5819               	subwfb	(___aomod@dividend+5)^0,w,c
  8527  00413C  5022               	movf	(___aomod@divisor+6)^0,w,c
  8528  00413E  581A               	subwfb	(___aomod@dividend+6)^0,w,c
  8529  004140  5023               	movf	(___aomod@divisor+7)^0,w,c
  8530  004142  581B               	subwfb	(___aomod@dividend+7)^0,w,c
  8531  004144  A0D8               	btfss	status,0,c
  8532  004146  EFA7  F020         	goto	u7771
  8533  00414A  EFA9  F020         	goto	u7770
  8534  00414E                     u7771:
  8535  00414E  EFB9  F020         	goto	l7691
  8536  004152                     u7770:
  8537  004152  501C               	movf	___aomod@divisor^0,w,c
  8538  004154  5E14               	subwf	___aomod@dividend^0,f,c
  8539  004156  501D               	movf	(___aomod@divisor+1)^0,w,c
  8540  004158  5A15               	subwfb	(___aomod@dividend+1)^0,f,c
  8541  00415A  501E               	movf	(___aomod@divisor+2)^0,w,c
  8542  00415C  5A16               	subwfb	(___aomod@dividend+2)^0,f,c
  8543  00415E  501F               	movf	(___aomod@divisor+3)^0,w,c
  8544  004160  5A17               	subwfb	(___aomod@dividend+3)^0,f,c
  8545  004162  5020               	movf	(___aomod@divisor+4)^0,w,c
  8546  004164  5A18               	subwfb	(___aomod@dividend+4)^0,f,c
  8547  004166  5021               	movf	(___aomod@divisor+5)^0,w,c
  8548  004168  5A19               	subwfb	(___aomod@dividend+5)^0,f,c
  8549  00416A  5022               	movf	(___aomod@divisor+6)^0,w,c
  8550  00416C  5A1A               	subwfb	(___aomod@dividend+6)^0,f,c
  8551  00416E  5023               	movf	(___aomod@divisor+7)^0,w,c
  8552  004170  5A1B               	subwfb	(___aomod@dividend+7)^0,f,c
  8553  004172                     l7691:
  8554  004172  90D8               	bcf	status,0,c
  8555  004174  3223               	rrcf	(___aomod@divisor+7)^0,f,c
  8556  004176  3222               	rrcf	(___aomod@divisor+6)^0,f,c
  8557  004178  3221               	rrcf	(___aomod@divisor+5)^0,f,c
  8558  00417A  3220               	rrcf	(___aomod@divisor+4)^0,f,c
  8559  00417C  321F               	rrcf	(___aomod@divisor+3)^0,f,c
  8560  00417E  321E               	rrcf	(___aomod@divisor+2)^0,f,c
  8561  004180  321D               	rrcf	(___aomod@divisor+1)^0,f,c
  8562  004182  321C               	rrcf	___aomod@divisor^0,f,c
  8563  004184  2E24               	decfsz	___aomod@counter^0,f,c
  8564  004186  EF92  F020         	goto	l7687
  8565  00418A                     l7695:
  8566  00418A  5025               	movf	___aomod@sign^0,w,c
  8567  00418C  B4D8               	btfsc	status,2,c
  8568  00418E  EFCB  F020         	goto	u7781
  8569  004192  EFCD  F020         	goto	u7780
  8570  004196                     u7781:
  8571  004196  EFDD  F020         	goto	l7699
  8572  00419A                     u7780:
  8573  00419A  1E1B               	comf	(___aomod@dividend+7)^0,f,c
  8574  00419C  1E1A               	comf	(___aomod@dividend+6)^0,f,c
  8575  00419E  1E19               	comf	(___aomod@dividend+5)^0,f,c
  8576  0041A0  1E18               	comf	(___aomod@dividend+4)^0,f,c
  8577  0041A2  1E17               	comf	(___aomod@dividend+3)^0,f,c
  8578  0041A4  1E16               	comf	(___aomod@dividend+2)^0,f,c
  8579  0041A6  1E15               	comf	(___aomod@dividend+1)^0,f,c
  8580  0041A8  6C14               	negf	___aomod@dividend^0,c
  8581  0041AA  0E00               	movlw	0
  8582  0041AC  2215               	addwfc	(___aomod@dividend+1)^0,f,c
  8583  0041AE  2216               	addwfc	(___aomod@dividend+2)^0,f,c
  8584  0041B0  2217               	addwfc	(___aomod@dividend+3)^0,f,c
  8585  0041B2  2218               	addwfc	(___aomod@dividend+4)^0,f,c
  8586  0041B4  2219               	addwfc	(___aomod@dividend+5)^0,f,c
  8587  0041B6  221A               	addwfc	(___aomod@dividend+6)^0,f,c
  8588  0041B8  221B               	addwfc	(___aomod@dividend+7)^0,f,c
  8589  0041BA                     l7699:
  8590  0041BA  C014  F014         	movff	___aomod@dividend,?___aomod
  8591  0041BE  C015  F015         	movff	___aomod@dividend+1,?___aomod+1
  8592  0041C2  C016  F016         	movff	___aomod@dividend+2,?___aomod+2
  8593  0041C6  C017  F017         	movff	___aomod@dividend+3,?___aomod+3
  8594  0041CA  C018  F018         	movff	___aomod@dividend+4,?___aomod+4
  8595  0041CE  C019  F019         	movff	___aomod@dividend+5,?___aomod+5
  8596  0041D2  C01A  F01A         	movff	___aomod@dividend+6,?___aomod+6
  8597  0041D6  C01B  F01B         	movff	___aomod@dividend+7,?___aomod+7
  8598  0041DA  0012               	return		;funcret
  8599  0041DC                     __end_of___aomod:
  8600                           	callstack 0
  8601                           
  8602 ;; *************** function ___aodiv *****************
  8603 ;; Defined at:
  8604 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  8605 ;; Parameters:    Size  Location     Type
  8606 ;;  dividend        8   19[COMRAM] long long 
  8607 ;;  divisor         8   27[COMRAM] long long 
  8608 ;; Auto vars:     Size  Location     Type
  8609 ;;  quotient        8   37[COMRAM] long long 
  8610 ;;  sign            1   36[COMRAM] unsigned char 
  8611 ;;  counter         1   35[COMRAM] unsigned char 
  8612 ;; Return value:  Size  Location     Type
  8613 ;;                  8   19[COMRAM] long long 
  8614 ;; Registers used:
  8615 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8616 ;; Tracked objects:
  8617 ;;		On entry : 0/0
  8618 ;;		On exit  : 0/0
  8619 ;;		Unchanged: 0/0
  8620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8621 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8622 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8624 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8625 ;;Total ram usage:       26 bytes
  8626 ;; Hardware stack levels used: 1
  8627 ;; Hardware stack levels required when called: 8
  8628 ;; This function calls:
  8629 ;;		Nothing
  8630 ;; This function is called by:
  8631 ;;		_dtoa
  8632 ;; This function uses a non-reentrant model
  8633 ;;
  8634                           
  8635                           	psect	text30
  8636  003D72                     __ptext30:
  8637                           	callstack 0
  8638  003D72                     ___aodiv:
  8639                           	callstack 16
  8640  003D72  0E00               	movlw	0
  8641  003D74  6E25               	movwf	___aodiv@sign^0,c
  8642  003D76  BE23               	btfsc	(___aodiv@divisor+7)^0,7,c
  8643  003D78  EFC2  F01E         	goto	u7660
  8644  003D7C  EFC0  F01E         	goto	u7661
  8645  003D80                     u7661:
  8646  003D80  EFD4  F01E         	goto	l7631
  8647  003D84                     u7660:
  8648  003D84  1E23               	comf	(___aodiv@divisor+7)^0,f,c
  8649  003D86  1E22               	comf	(___aodiv@divisor+6)^0,f,c
  8650  003D88  1E21               	comf	(___aodiv@divisor+5)^0,f,c
  8651  003D8A  1E20               	comf	(___aodiv@divisor+4)^0,f,c
  8652  003D8C  1E1F               	comf	(___aodiv@divisor+3)^0,f,c
  8653  003D8E  1E1E               	comf	(___aodiv@divisor+2)^0,f,c
  8654  003D90  1E1D               	comf	(___aodiv@divisor+1)^0,f,c
  8655  003D92  6C1C               	negf	___aodiv@divisor^0,c
  8656  003D94  0E00               	movlw	0
  8657  003D96  221D               	addwfc	(___aodiv@divisor+1)^0,f,c
  8658  003D98  221E               	addwfc	(___aodiv@divisor+2)^0,f,c
  8659  003D9A  221F               	addwfc	(___aodiv@divisor+3)^0,f,c
  8660  003D9C  2220               	addwfc	(___aodiv@divisor+4)^0,f,c
  8661  003D9E  2221               	addwfc	(___aodiv@divisor+5)^0,f,c
  8662  003DA0  2222               	addwfc	(___aodiv@divisor+6)^0,f,c
  8663  003DA2  2223               	addwfc	(___aodiv@divisor+7)^0,f,c
  8664  003DA4  0E01               	movlw	1
  8665  003DA6  6E25               	movwf	___aodiv@sign^0,c
  8666  003DA8                     l7631:
  8667  003DA8  BE1B               	btfsc	(___aodiv@dividend+7)^0,7,c
  8668  003DAA  EFDB  F01E         	goto	u7670
  8669  003DAE  EFD9  F01E         	goto	u7671
  8670  003DB2                     u7671:
  8671  003DB2  EFED  F01E         	goto	l7637
  8672  003DB6                     u7670:
  8673  003DB6  1E1B               	comf	(___aodiv@dividend+7)^0,f,c
  8674  003DB8  1E1A               	comf	(___aodiv@dividend+6)^0,f,c
  8675  003DBA  1E19               	comf	(___aodiv@dividend+5)^0,f,c
  8676  003DBC  1E18               	comf	(___aodiv@dividend+4)^0,f,c
  8677  003DBE  1E17               	comf	(___aodiv@dividend+3)^0,f,c
  8678  003DC0  1E16               	comf	(___aodiv@dividend+2)^0,f,c
  8679  003DC2  1E15               	comf	(___aodiv@dividend+1)^0,f,c
  8680  003DC4  6C14               	negf	___aodiv@dividend^0,c
  8681  003DC6  0E00               	movlw	0
  8682  003DC8  2215               	addwfc	(___aodiv@dividend+1)^0,f,c
  8683  003DCA  2216               	addwfc	(___aodiv@dividend+2)^0,f,c
  8684  003DCC  2217               	addwfc	(___aodiv@dividend+3)^0,f,c
  8685  003DCE  2218               	addwfc	(___aodiv@dividend+4)^0,f,c
  8686  003DD0  2219               	addwfc	(___aodiv@dividend+5)^0,f,c
  8687  003DD2  221A               	addwfc	(___aodiv@dividend+6)^0,f,c
  8688  003DD4  221B               	addwfc	(___aodiv@dividend+7)^0,f,c
  8689  003DD6  0E01               	movlw	1
  8690  003DD8  1A25               	xorwf	___aodiv@sign^0,f,c
  8691  003DDA                     l7637:
  8692  003DDA  EE20  F026         	lfsr	2,___aodiv@quotient
  8693  003DDE  0E07               	movlw	7
  8694  003DE0                     u7681:
  8695  003DE0  6ADE               	clrf	postinc2,c
  8696  003DE2  06E8               	decf	wreg,f,c
  8697  003DE4  E2FD               	bc	u7681
  8698  003DE6  501C               	movf	___aodiv@divisor^0,w,c
  8699  003DE8  101D               	iorwf	(___aodiv@divisor+1)^0,w,c
  8700  003DEA  101E               	iorwf	(___aodiv@divisor+2)^0,w,c
  8701  003DEC  101F               	iorwf	(___aodiv@divisor+3)^0,w,c
  8702  003DEE  1020               	iorwf	(___aodiv@divisor+4)^0,w,c
  8703  003DF0  1021               	iorwf	(___aodiv@divisor+5)^0,w,c
  8704  003DF2  1022               	iorwf	(___aodiv@divisor+6)^0,w,c
  8705  003DF4  1023               	iorwf	(___aodiv@divisor+7)^0,w,c
  8706  003DF6  B4D8               	btfsc	status,2,c
  8707  003DF8  EF00  F01F         	goto	u7691
  8708  003DFC  EF02  F01F         	goto	u7690
  8709  003E00                     u7691:
  8710  003E00  EF54  F01F         	goto	l7659
  8711  003E04                     u7690:
  8712  003E04  0E01               	movlw	1
  8713  003E06  6E24               	movwf	___aodiv@counter^0,c
  8714  003E08  EF10  F01F         	goto	l7645
  8715  003E0C                     l7643:
  8716  003E0C  90D8               	bcf	status,0,c
  8717  003E0E  361C               	rlcf	___aodiv@divisor^0,f,c
  8718  003E10  361D               	rlcf	(___aodiv@divisor+1)^0,f,c
  8719  003E12  361E               	rlcf	(___aodiv@divisor+2)^0,f,c
  8720  003E14  361F               	rlcf	(___aodiv@divisor+3)^0,f,c
  8721  003E16  3620               	rlcf	(___aodiv@divisor+4)^0,f,c
  8722  003E18  3621               	rlcf	(___aodiv@divisor+5)^0,f,c
  8723  003E1A  3622               	rlcf	(___aodiv@divisor+6)^0,f,c
  8724  003E1C  3623               	rlcf	(___aodiv@divisor+7)^0,f,c
  8725  003E1E  2A24               	incf	___aodiv@counter^0,f,c
  8726  003E20                     l7645:
  8727  003E20  AE23               	btfss	(___aodiv@divisor+7)^0,7,c
  8728  003E22  EF15  F01F         	goto	u7701
  8729  003E26  EF17  F01F         	goto	u7700
  8730  003E2A                     u7701:
  8731  003E2A  EF06  F01F         	goto	l7643
  8732  003E2E                     u7700:
  8733  003E2E                     l7647:
  8734  003E2E  90D8               	bcf	status,0,c
  8735  003E30  3626               	rlcf	___aodiv@quotient^0,f,c
  8736  003E32  3627               	rlcf	(___aodiv@quotient+1)^0,f,c
  8737  003E34  3628               	rlcf	(___aodiv@quotient+2)^0,f,c
  8738  003E36  3629               	rlcf	(___aodiv@quotient+3)^0,f,c
  8739  003E38  362A               	rlcf	(___aodiv@quotient+4)^0,f,c
  8740  003E3A  362B               	rlcf	(___aodiv@quotient+5)^0,f,c
  8741  003E3C  362C               	rlcf	(___aodiv@quotient+6)^0,f,c
  8742  003E3E  362D               	rlcf	(___aodiv@quotient+7)^0,f,c
  8743  003E40  501C               	movf	___aodiv@divisor^0,w,c
  8744  003E42  5C14               	subwf	___aodiv@dividend^0,w,c
  8745  003E44  501D               	movf	(___aodiv@divisor+1)^0,w,c
  8746  003E46  5815               	subwfb	(___aodiv@dividend+1)^0,w,c
  8747  003E48  501E               	movf	(___aodiv@divisor+2)^0,w,c
  8748  003E4A  5816               	subwfb	(___aodiv@dividend+2)^0,w,c
  8749  003E4C  501F               	movf	(___aodiv@divisor+3)^0,w,c
  8750  003E4E  5817               	subwfb	(___aodiv@dividend+3)^0,w,c
  8751  003E50  5020               	movf	(___aodiv@divisor+4)^0,w,c
  8752  003E52  5818               	subwfb	(___aodiv@dividend+4)^0,w,c
  8753  003E54  5021               	movf	(___aodiv@divisor+5)^0,w,c
  8754  003E56  5819               	subwfb	(___aodiv@dividend+5)^0,w,c
  8755  003E58  5022               	movf	(___aodiv@divisor+6)^0,w,c
  8756  003E5A  581A               	subwfb	(___aodiv@dividend+6)^0,w,c
  8757  003E5C  5023               	movf	(___aodiv@divisor+7)^0,w,c
  8758  003E5E  581B               	subwfb	(___aodiv@dividend+7)^0,w,c
  8759  003E60  A0D8               	btfss	status,0,c
  8760  003E62  EF35  F01F         	goto	u7711
  8761  003E66  EF37  F01F         	goto	u7710
  8762  003E6A                     u7711:
  8763  003E6A  EF48  F01F         	goto	l7655
  8764  003E6E                     u7710:
  8765  003E6E  501C               	movf	___aodiv@divisor^0,w,c
  8766  003E70  5E14               	subwf	___aodiv@dividend^0,f,c
  8767  003E72  501D               	movf	(___aodiv@divisor+1)^0,w,c
  8768  003E74  5A15               	subwfb	(___aodiv@dividend+1)^0,f,c
  8769  003E76  501E               	movf	(___aodiv@divisor+2)^0,w,c
  8770  003E78  5A16               	subwfb	(___aodiv@dividend+2)^0,f,c
  8771  003E7A  501F               	movf	(___aodiv@divisor+3)^0,w,c
  8772  003E7C  5A17               	subwfb	(___aodiv@dividend+3)^0,f,c
  8773  003E7E  5020               	movf	(___aodiv@divisor+4)^0,w,c
  8774  003E80  5A18               	subwfb	(___aodiv@dividend+4)^0,f,c
  8775  003E82  5021               	movf	(___aodiv@divisor+5)^0,w,c
  8776  003E84  5A19               	subwfb	(___aodiv@dividend+5)^0,f,c
  8777  003E86  5022               	movf	(___aodiv@divisor+6)^0,w,c
  8778  003E88  5A1A               	subwfb	(___aodiv@dividend+6)^0,f,c
  8779  003E8A  5023               	movf	(___aodiv@divisor+7)^0,w,c
  8780  003E8C  5A1B               	subwfb	(___aodiv@dividend+7)^0,f,c
  8781  003E8E  8026               	bsf	___aodiv@quotient^0,0,c
  8782  003E90                     l7655:
  8783  003E90  90D8               	bcf	status,0,c
  8784  003E92  3223               	rrcf	(___aodiv@divisor+7)^0,f,c
  8785  003E94  3222               	rrcf	(___aodiv@divisor+6)^0,f,c
  8786  003E96  3221               	rrcf	(___aodiv@divisor+5)^0,f,c
  8787  003E98  3220               	rrcf	(___aodiv@divisor+4)^0,f,c
  8788  003E9A  321F               	rrcf	(___aodiv@divisor+3)^0,f,c
  8789  003E9C  321E               	rrcf	(___aodiv@divisor+2)^0,f,c
  8790  003E9E  321D               	rrcf	(___aodiv@divisor+1)^0,f,c
  8791  003EA0  321C               	rrcf	___aodiv@divisor^0,f,c
  8792  003EA2  2E24               	decfsz	___aodiv@counter^0,f,c
  8793  003EA4  EF17  F01F         	goto	l7647
  8794  003EA8                     l7659:
  8795  003EA8  5025               	movf	___aodiv@sign^0,w,c
  8796  003EAA  B4D8               	btfsc	status,2,c
  8797  003EAC  EF5A  F01F         	goto	u7721
  8798  003EB0  EF5C  F01F         	goto	u7720
  8799  003EB4                     u7721:
  8800  003EB4  EF6C  F01F         	goto	l7663
  8801  003EB8                     u7720:
  8802  003EB8  1E2D               	comf	(___aodiv@quotient+7)^0,f,c
  8803  003EBA  1E2C               	comf	(___aodiv@quotient+6)^0,f,c
  8804  003EBC  1E2B               	comf	(___aodiv@quotient+5)^0,f,c
  8805  003EBE  1E2A               	comf	(___aodiv@quotient+4)^0,f,c
  8806  003EC0  1E29               	comf	(___aodiv@quotient+3)^0,f,c
  8807  003EC2  1E28               	comf	(___aodiv@quotient+2)^0,f,c
  8808  003EC4  1E27               	comf	(___aodiv@quotient+1)^0,f,c
  8809  003EC6  6C26               	negf	___aodiv@quotient^0,c
  8810  003EC8  0E00               	movlw	0
  8811  003ECA  2227               	addwfc	(___aodiv@quotient+1)^0,f,c
  8812  003ECC  2228               	addwfc	(___aodiv@quotient+2)^0,f,c
  8813  003ECE  2229               	addwfc	(___aodiv@quotient+3)^0,f,c
  8814  003ED0  222A               	addwfc	(___aodiv@quotient+4)^0,f,c
  8815  003ED2  222B               	addwfc	(___aodiv@quotient+5)^0,f,c
  8816  003ED4  222C               	addwfc	(___aodiv@quotient+6)^0,f,c
  8817  003ED6  222D               	addwfc	(___aodiv@quotient+7)^0,f,c
  8818  003ED8                     l7663:
  8819  003ED8  C026  F014         	movff	___aodiv@quotient,?___aodiv
  8820  003EDC  C027  F015         	movff	___aodiv@quotient+1,?___aodiv+1
  8821  003EE0  C028  F016         	movff	___aodiv@quotient+2,?___aodiv+2
  8822  003EE4  C029  F017         	movff	___aodiv@quotient+3,?___aodiv+3
  8823  003EE8  C02A  F018         	movff	___aodiv@quotient+4,?___aodiv+4
  8824  003EEC  C02B  F019         	movff	___aodiv@quotient+5,?___aodiv+5
  8825  003EF0  C02C  F01A         	movff	___aodiv@quotient+6,?___aodiv+6
  8826  003EF4  C02D  F01B         	movff	___aodiv@quotient+7,?___aodiv+7
  8827  003EF8  0012               	return		;funcret
  8828  003EFA                     __end_of___aodiv:
  8829                           	callstack 0
  8830                           
  8831 ;; *************** function _checkBatt *****************
  8832 ;; Defined at:
  8833 ;;		line 83 in file "main.c"
  8834 ;; Parameters:    Size  Location     Type
  8835 ;;		None
  8836 ;; Auto vars:     Size  Location     Type
  8837 ;;		None
  8838 ;; Return value:  Size  Location     Type
  8839 ;;                  1    wreg      _Bool 
  8840 ;; Registers used:
  8841 ;;		wreg, status,2, status,0, cstack
  8842 ;; Tracked objects:
  8843 ;;		On entry : 0/0
  8844 ;;		On exit  : 0/0
  8845 ;;		Unchanged: 0/0
  8846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8850 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8851 ;;Total ram usage:        0 bytes
  8852 ;; Hardware stack levels used: 1
  8853 ;; Hardware stack levels required when called: 10
  8854 ;; This function calls:
  8855 ;;		___flge
  8856 ;;		___xxtofl
  8857 ;;		_getBatteryVoltage
  8858 ;;		_setSteering
  8859 ;; This function is called by:
  8860 ;;		_loop
  8861 ;; This function uses a non-reentrant model
  8862 ;;
  8863                           
  8864                           	psect	text31
  8865  00518A                     __ptext31:
  8866                           	callstack 0
  8867  00518A                     _checkBatt:
  8868                           	callstack 19
  8869  00518A                     
  8870                           ;main.c: 84:     ++battCheckCount;
  8871  00518A  0101               	movlb	1	; () banked
  8872  00518C  4B30               	infsnz	_battCheckCount& (0+255),f,b
  8873  00518E  2B31               	incf	(_battCheckCount+1)& (0+255),f,b
  8874  005190                     
  8875                           ; BSR set to: 1
  8876                           ;main.c: 85:     if (battCheckCount > (500)) {
  8877  005190  0EF5               	movlw	245
  8878  005192  5D30               	subwf	_battCheckCount& (0+255),w,b
  8879  005194  0E01               	movlw	1
  8880  005196  5931               	subwfb	(_battCheckCount+1)& (0+255),w,b
  8881  005198  A0D8               	btfss	status,0,c
  8882  00519A  EFD1  F028         	goto	u9911
  8883  00519E  EFD3  F028         	goto	u9910
  8884  0051A2                     u9911:
  8885  0051A2  EF0C  F029         	goto	l8947
  8886  0051A6                     u9910:
  8887  0051A6                     
  8888                           ; BSR set to: 1
  8889                           ;main.c: 86:         battCheckCount = 0;
  8890  0051A6  0E00               	movlw	0
  8891  0051A8  6F31               	movwf	(_battCheckCount+1)& (0+255),b
  8892  0051AA  0E00               	movlw	0
  8893  0051AC  6F30               	movwf	_battCheckCount& (0+255),b
  8894  0051AE                     
  8895                           ; BSR set to: 1
  8896                           ;main.c: 87:         getBatteryVoltage();
  8897  0051AE  ECB3  F02E         	call	_getBatteryVoltage	;wreg free
  8898  0051B2                     
  8899                           ;main.c: 89:         if (BatteryVolt < (6.8) * 409.6f) {
  8900  0051B2  C0E5  F01C         	movff	_BatteryVolt,___xxtofl@val
  8901  0051B6  C0E6  F01D         	movff	_BatteryVolt+1,___xxtofl@val+1
  8902  0051BA  6A1E               	clrf	(___xxtofl@val+2)^0,c
  8903  0051BC  6A1F               	clrf	(___xxtofl@val+3)^0,c
  8904  0051BE  0E00               	movlw	0
  8905  0051C0  EC0D  F01D         	call	___xxtofl
  8906  0051C4  C01C  F06D         	movff	?___xxtofl,___flge@ff1
  8907  0051C8  C01D  F06E         	movff	?___xxtofl+1,___flge@ff1+1
  8908  0051CC  C01E  F06F         	movff	?___xxtofl+2,___flge@ff1+2
  8909  0051D0  C01F  F070         	movff	?___xxtofl+3,___flge@ff1+3
  8910  0051D4  0E7B               	movlw	123
  8911  0051D6  0100               	movlb	0	; () banked
  8912  0051D8  6F71               	movwf	___flge@ff2& (0+255),b
  8913  0051DA  0E14               	movlw	20
  8914  0051DC  6F72               	movwf	(___flge@ff2+1)& (0+255),b
  8915  0051DE  0E2E               	movlw	46
  8916  0051E0  6F73               	movwf	(___flge@ff2+2)& (0+255),b
  8917  0051E2  0E45               	movlw	69
  8918  0051E4  6F74               	movwf	(___flge@ff2+3)& (0+255),b
  8919  0051E6  ECBC  F023         	call	___flge	;wreg free
  8920  0051EA  0100               	movlb	0	; () banked
  8921  0051EC  B0D8               	btfsc	status,0,c
  8922  0051EE  EFFB  F028         	goto	u9921
  8923  0051F2  EFFD  F028         	goto	u9920
  8924  0051F6                     u9921:
  8925  0051F6  EF0C  F029         	goto	l8947
  8926  0051FA                     u9920:
  8927  0051FA                     
  8928                           ; BSR set to: 0
  8929                           ;main.c: 90:             setSpeed = 0;
  8930  0051FA  0E00               	movlw	0
  8931  0051FC  6FEC               	movwf	(_setSpeed+1)& (0+255),b
  8932  0051FE  0E00               	movlw	0
  8933  005200  6FEB               	movwf	_setSpeed& (0+255),b
  8934  005202                     
  8935                           ; BSR set to: 0
  8936                           ;main.c: 91:             setSteering(0, Front);
  8937  005202  0E00               	movlw	0
  8938  005204  6E1D               	movwf	(setSteering@steering+1)^0,c
  8939  005206  0E00               	movlw	0
  8940  005208  6E1C               	movwf	setSteering@steering^0,c
  8941  00520A  0E03               	movlw	3
  8942  00520C  6E1E               	movwf	setSteering@steeringMode^0,c
  8943  00520E  ECE7  F01D         	call	_setSteering	;wreg free
  8944  005212                     
  8945                           ;main.c: 92:             return 1;
  8946  005212  0E01               	movlw	1
  8947  005214  EF0D  F029         	goto	l1257
  8948  005218                     l8947:
  8949                           
  8950                           ;main.c: 95:     return 0;
  8951  005218  0E00               	movlw	0
  8952  00521A                     l1257:
  8953  00521A  0012               	return		;funcret
  8954  00521C                     __end_of_checkBatt:
  8955                           	callstack 0
  8956                           
  8957 ;; *************** function _setSteering *****************
  8958 ;; Defined at:
  8959 ;;		line 390 in file "main.c"
  8960 ;; Parameters:    Size  Location     Type
  8961 ;;  steering        2   27[COMRAM] short 
  8962 ;;  steeringMode    1   29[COMRAM] enum E17304
  8963 ;; Auto vars:     Size  Location     Type
  8964 ;;  steeringB       2   34[COMRAM] short 
  8965 ;;  steeringF       2   32[COMRAM] short 
  8966 ;; Return value:  Size  Location     Type
  8967 ;;                  1    wreg      void 
  8968 ;; Registers used:
  8969 ;;		wreg, status,2, status,0, cstack
  8970 ;; Tracked objects:
  8971 ;;		On entry : 0/0
  8972 ;;		On exit  : 0/0
  8973 ;;		Unchanged: 0/0
  8974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8975 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8976 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8977 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8978 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8979 ;;Total ram usage:        9 bytes
  8980 ;; Hardware stack levels used: 1
  8981 ;; Hardware stack levels required when called: 9
  8982 ;; This function calls:
  8983 ;;		_PWM5_LoadDutyValue
  8984 ;;		_PWM6_LoadDutyValue
  8985 ;;		___awdiv
  8986 ;; This function is called by:
  8987 ;;		_loop
  8988 ;;		_checkBatt
  8989 ;;		_startAccell
  8990 ;;		_calcSteering
  8991 ;; This function uses a non-reentrant model
  8992 ;;
  8993                           
  8994                           	psect	text32
  8995  003BCE                     __ptext32:
  8996                           	callstack 0
  8997  003BCE                     _setSteering:
  8998                           	callstack 19
  8999  003BCE  0E00               	movlw	0
  9000  003BD0  6E24               	movwf	(setSteering@steeringB+1)^0,c
  9001  003BD2  0E00               	movlw	0
  9002  003BD4  6E23               	movwf	setSteering@steeringB^0,c
  9003                           
  9004                           ;main.c: 392:     switch (steeringMode) {
  9005  003BD6  EF3B  F01E         	goto	l8729
  9006  003BDA                     l1381:
  9007                           
  9008                           ;main.c: 394:             steeringF = (+steering);
  9009  003BDA  C01C  F021         	movff	setSteering@steering,setSteering@steeringF
  9010  003BDE  C01D  F022         	movff	setSteering@steering+1,setSteering@steeringF+1
  9011                           
  9012                           ;main.c: 395:             steeringB = -steering;
  9013  003BE2  C01C  F01F         	movff	setSteering@steering,??_setSteering
  9014  003BE6  C01D  F020         	movff	setSteering@steering+1,??_setSteering+1
  9015  003BEA  1E1F               	comf	??_setSteering^0,f,c
  9016  003BEC  1E20               	comf	(??_setSteering+1)^0,f,c
  9017  003BEE  4A1F               	infsnz	??_setSteering^0,f,c
  9018  003BF0  2A20               	incf	(??_setSteering+1)^0,f,c
  9019  003BF2  C01F  F023         	movff	??_setSteering,setSteering@steeringB
  9020  003BF6  C020  F024         	movff	??_setSteering+1,setSteering@steeringB+1
  9021                           
  9022                           ;main.c: 396:             break;
  9023  003BFA  EF5C  F01E         	goto	l8731
  9024  003BFE                     l1383:
  9025                           
  9026                           ;main.c: 398:             steeringF = (+steering);
  9027  003BFE  C01C  F021         	movff	setSteering@steering,setSteering@steeringF
  9028  003C02  C01D  F022         	movff	setSteering@steering+1,setSteering@steeringF+1
  9029                           
  9030                           ;main.c: 399:             steeringB = (+steering);
  9031  003C06  C01C  F023         	movff	setSteering@steering,setSteering@steeringB
  9032  003C0A  C01D  F024         	movff	setSteering@steering+1,setSteering@steeringB+1
  9033                           
  9034                           ;main.c: 400:             break;
  9035  003C0E  EF5C  F01E         	goto	l8731
  9036  003C12                     l1384:
  9037                           
  9038                           ;main.c: 402:             steeringF = (+steering);
  9039  003C12  C01C  F021         	movff	setSteering@steering,setSteering@steeringF
  9040  003C16  C01D  F022         	movff	setSteering@steering+1,setSteering@steeringF+1
  9041  003C1A                     
  9042                           ;main.c: 403:             steeringB = (-steering / (2));
  9043  003C1A  C01C  F014         	movff	setSteering@steering,___awdiv@dividend
  9044  003C1E  C01D  F015         	movff	setSteering@steering+1,___awdiv@dividend+1
  9045  003C22  0EFF               	movlw	255
  9046  003C24  6E17               	movwf	(___awdiv@divisor+1)^0,c
  9047  003C26  0EFE               	movlw	254
  9048  003C28  6E16               	movwf	___awdiv@divisor^0,c
  9049  003C2A  EC0E  F026         	call	___awdiv	;wreg free
  9050  003C2E  C014  F023         	movff	?___awdiv,setSteering@steeringB
  9051  003C32  C015  F024         	movff	?___awdiv+1,setSteering@steeringB+1
  9052                           
  9053                           ;main.c: 404:             break;
  9054  003C36  EF5C  F01E         	goto	l8731
  9055  003C3A                     l1385:
  9056                           
  9057                           ;main.c: 406:             steeringF = (+steering);
  9058  003C3A  C01C  F021         	movff	setSteering@steering,setSteering@steeringF
  9059  003C3E  C01D  F022         	movff	setSteering@steering+1,setSteering@steeringF+1
  9060  003C42                     
  9061                           ;main.c: 407:             steeringB = 0;
  9062  003C42  0E00               	movlw	0
  9063  003C44  6E24               	movwf	(setSteering@steeringB+1)^0,c
  9064  003C46  0E00               	movlw	0
  9065  003C48  6E23               	movwf	setSteering@steeringB^0,c
  9066                           
  9067                           ;main.c: 408:             break;
  9068  003C4A  EF5C  F01E         	goto	l8731
  9069  003C4E                     l8721:
  9070                           
  9071                           ;main.c: 410:             steeringF = 0;
  9072  003C4E  0E00               	movlw	0
  9073  003C50  6E22               	movwf	(setSteering@steeringF+1)^0,c
  9074  003C52  0E00               	movlw	0
  9075  003C54  6E21               	movwf	setSteering@steeringF^0,c
  9076  003C56                     
  9077                           ;main.c: 411:             steeringB = (+steering);
  9078  003C56  C01C  F023         	movff	setSteering@steering,setSteering@steeringB
  9079  003C5A  C01D  F024         	movff	setSteering@steering+1,setSteering@steeringB+1
  9080                           
  9081                           ;main.c: 412:             break;
  9082  003C5E  EF5C  F01E         	goto	l8731
  9083  003C62                     l8725:
  9084                           
  9085                           ;main.c: 414:             steeringF = 0;
  9086  003C62  0E00               	movlw	0
  9087  003C64  6E22               	movwf	(setSteering@steeringF+1)^0,c
  9088  003C66  0E00               	movlw	0
  9089  003C68  6E21               	movwf	setSteering@steeringF^0,c
  9090                           
  9091                           ;main.c: 415:             steeringB = 0;
  9092  003C6A  0E00               	movlw	0
  9093  003C6C  6E24               	movwf	(setSteering@steeringB+1)^0,c
  9094  003C6E  0E00               	movlw	0
  9095  003C70  6E23               	movwf	setSteering@steeringB^0,c
  9096                           
  9097                           ;main.c: 416:             break;
  9098  003C72  EF5C  F01E         	goto	l8731
  9099  003C76                     l8729:
  9100  003C76  501E               	movf	setSteering@steeringMode^0,w,c
  9101  003C78  6E1F               	movwf	??_setSteering^0,c
  9102  003C7A  6A20               	clrf	(??_setSteering+1)^0,c
  9103                           
  9104                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9105                           ; Switch size 1, requested type "simple"
  9106                           ; Number of cases is 1, Range of values is 0 to 0
  9107                           ; switch strategies available:
  9108                           ; Name         Instructions Cycles
  9109                           ; simple_byte            4     3 (average)
  9110                           ;	Chosen strategy is simple_byte
  9111  003C7C  5020               	movf	(??_setSteering+1)^0,w,c
  9112  003C7E  0A00               	xorlw	0	; case 0
  9113  003C80  B4D8               	btfsc	status,2,c
  9114  003C82  EF45  F01E         	goto	l9283
  9115  003C86  EF31  F01E         	goto	l8725
  9116  003C8A                     l9283:
  9117                           
  9118                           ; Switch size 1, requested type "simple"
  9119                           ; Number of cases is 5, Range of values is 0 to 4
  9120                           ; switch strategies available:
  9121                           ; Name         Instructions Cycles
  9122                           ; simple_byte           16     9 (average)
  9123                           ;	Chosen strategy is simple_byte
  9124  003C8A  501F               	movf	??_setSteering^0,w,c
  9125  003C8C  0A00               	xorlw	0	; case 0
  9126  003C8E  B4D8               	btfsc	status,2,c
  9127  003C90  EFED  F01D         	goto	l1381
  9128  003C94  0A01               	xorlw	1	; case 1
  9129  003C96  B4D8               	btfsc	status,2,c
  9130  003C98  EFFF  F01D         	goto	l1383
  9131  003C9C  0A03               	xorlw	3	; case 2
  9132  003C9E  B4D8               	btfsc	status,2,c
  9133  003CA0  EF09  F01E         	goto	l1384
  9134  003CA4  0A01               	xorlw	1	; case 3
  9135  003CA6  B4D8               	btfsc	status,2,c
  9136  003CA8  EF1D  F01E         	goto	l1385
  9137  003CAC  0A07               	xorlw	7	; case 4
  9138  003CAE  B4D8               	btfsc	status,2,c
  9139  003CB0  EF27  F01E         	goto	l8721
  9140  003CB4  EF31  F01E         	goto	l8725
  9141  003CB8                     l8731:
  9142                           
  9143                           ;main.c: 419:     if (steeringF > ((65))) {
  9144  003CB8  BE22               	btfsc	(setSteering@steeringF+1)^0,7,c
  9145  003CBA  EF68  F01E         	goto	u9651
  9146  003CBE  5022               	movf	(setSteering@steeringF+1)^0,w,c
  9147  003CC0  E109               	bnz	u9650
  9148  003CC2  0E42               	movlw	66
  9149  003CC4  5C21               	subwf	setSteering@steeringF^0,w,c
  9150  003CC6  A0D8               	btfss	status,0,c
  9151  003CC8  EF68  F01E         	goto	u9651
  9152  003CCC  EF6A  F01E         	goto	u9650
  9153  003CD0                     u9651:
  9154  003CD0  EF70  F01E         	goto	l8735
  9155  003CD4                     u9650:
  9156  003CD4                     
  9157                           ;main.c: 420:         steeringF = ((65));
  9158  003CD4  0E00               	movlw	0
  9159  003CD6  6E22               	movwf	(setSteering@steeringF+1)^0,c
  9160  003CD8  0E41               	movlw	65
  9161  003CDA  6E21               	movwf	setSteering@steeringF^0,c
  9162                           
  9163                           ;main.c: 421:     } else if (steeringF < (-(65))) {
  9164  003CDC  EF82  F01E         	goto	l8739
  9165  003CE0                     l8735:
  9166  003CE0  AE22               	btfss	(setSteering@steeringF+1)^0,7,c
  9167  003CE2  EF7C  F01E         	goto	u9661
  9168  003CE6  0EBF               	movlw	191
  9169  003CE8  5C21               	subwf	setSteering@steeringF^0,w,c
  9170  003CEA  0EFF               	movlw	255
  9171  003CEC  5822               	subwfb	(setSteering@steeringF+1)^0,w,c
  9172  003CEE  B0D8               	btfsc	status,0,c
  9173  003CF0  EF7C  F01E         	goto	u9661
  9174  003CF4  EF7E  F01E         	goto	u9660
  9175  003CF8                     u9661:
  9176  003CF8  EF82  F01E         	goto	l8739
  9177  003CFC                     u9660:
  9178  003CFC                     
  9179                           ;main.c: 422:         steeringF = (-(65));
  9180  003CFC  0EFF               	movlw	255
  9181  003CFE  6E22               	movwf	(setSteering@steeringF+1)^0,c
  9182  003D00  0EBF               	movlw	191
  9183  003D02  6E21               	movwf	setSteering@steeringF^0,c
  9184  003D04                     l8739:
  9185                           
  9186                           ;main.c: 425:     if (steeringB > ((40))) {
  9187  003D04  BE24               	btfsc	(setSteering@steeringB+1)^0,7,c
  9188  003D06  EF8E  F01E         	goto	u9671
  9189  003D0A  5024               	movf	(setSteering@steeringB+1)^0,w,c
  9190  003D0C  E109               	bnz	u9670
  9191  003D0E  0E29               	movlw	41
  9192  003D10  5C23               	subwf	setSteering@steeringB^0,w,c
  9193  003D12  A0D8               	btfss	status,0,c
  9194  003D14  EF8E  F01E         	goto	u9671
  9195  003D18  EF90  F01E         	goto	u9670
  9196  003D1C                     u9671:
  9197  003D1C  EF96  F01E         	goto	l8743
  9198  003D20                     u9670:
  9199  003D20                     
  9200                           ;main.c: 426:         steeringB = ((40));
  9201  003D20  0E00               	movlw	0
  9202  003D22  6E24               	movwf	(setSteering@steeringB+1)^0,c
  9203  003D24  0E28               	movlw	40
  9204  003D26  6E23               	movwf	setSteering@steeringB^0,c
  9205                           
  9206                           ;main.c: 427:     } else if (steeringB < (-(40))) {
  9207  003D28  EFA8  F01E         	goto	l8747
  9208  003D2C                     l8743:
  9209  003D2C  AE24               	btfss	(setSteering@steeringB+1)^0,7,c
  9210  003D2E  EFA2  F01E         	goto	u9681
  9211  003D32  0ED8               	movlw	216
  9212  003D34  5C23               	subwf	setSteering@steeringB^0,w,c
  9213  003D36  0EFF               	movlw	255
  9214  003D38  5824               	subwfb	(setSteering@steeringB+1)^0,w,c
  9215  003D3A  B0D8               	btfsc	status,0,c
  9216  003D3C  EFA2  F01E         	goto	u9681
  9217  003D40  EFA4  F01E         	goto	u9680
  9218  003D44                     u9681:
  9219  003D44  EFA8  F01E         	goto	l8747
  9220  003D48                     u9680:
  9221  003D48                     
  9222                           ;main.c: 428:         steeringB = (-(40));
  9223  003D48  0EFF               	movlw	255
  9224  003D4A  6E24               	movwf	(setSteering@steeringB+1)^0,c
  9225  003D4C  0ED8               	movlw	216
  9226  003D4E  6E23               	movwf	setSteering@steeringB^0,c
  9227  003D50                     l8747:
  9228                           
  9229                           ;main.c: 432:     PWM6_LoadDutyValue((uint16_t) ((352) + steeringF));
  9230  003D50  0E60               	movlw	96
  9231  003D52  2421               	addwf	setSteering@steeringF^0,w,c
  9232  003D54  6E14               	movwf	PWM6_LoadDutyValue@dutyValue^0,c
  9233  003D56  0E01               	movlw	1
  9234  003D58  2022               	addwfc	(setSteering@steeringF+1)^0,w,c
  9235  003D5A  6E15               	movwf	(PWM6_LoadDutyValue@dutyValue+1)^0,c
  9236  003D5C  EC4A  F02C         	call	_PWM6_LoadDutyValue	;wreg free
  9237  003D60                     
  9238                           ;main.c: 433:     PWM5_LoadDutyValue((uint16_t) ((357) + steeringB));
  9239  003D60  0E65               	movlw	101
  9240  003D62  2423               	addwf	setSteering@steeringB^0,w,c
  9241  003D64  6E14               	movwf	PWM5_LoadDutyValue@dutyValue^0,c
  9242  003D66  0E01               	movlw	1
  9243  003D68  2024               	addwfc	(setSteering@steeringB+1)^0,w,c
  9244  003D6A  6E15               	movwf	(PWM5_LoadDutyValue@dutyValue+1)^0,c
  9245  003D6C  EC64  F02C         	call	_PWM5_LoadDutyValue	;wreg free
  9246  003D70  0012               	return		;funcret
  9247  003D72                     __end_of_setSteering:
  9248                           	callstack 0
  9249                           
  9250 ;; *************** function _PWM6_LoadDutyValue *****************
  9251 ;; Defined at:
  9252 ;;		line 74 in file "mcc_generated_files/pwm6.c"
  9253 ;; Parameters:    Size  Location     Type
  9254 ;;  dutyValue       2   19[COMRAM] unsigned short 
  9255 ;; Auto vars:     Size  Location     Type
  9256 ;;		None
  9257 ;; Return value:  Size  Location     Type
  9258 ;;                  1    wreg      void 
  9259 ;; Registers used:
  9260 ;;		wreg, status,2, status,0
  9261 ;; Tracked objects:
  9262 ;;		On entry : 0/0
  9263 ;;		On exit  : 0/0
  9264 ;;		Unchanged: 0/0
  9265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9266 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9268 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9269 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9270 ;;Total ram usage:        4 bytes
  9271 ;; Hardware stack levels used: 1
  9272 ;; Hardware stack levels required when called: 8
  9273 ;; This function calls:
  9274 ;;		Nothing
  9275 ;; This function is called by:
  9276 ;;		_setSteering
  9277 ;; This function uses a non-reentrant model
  9278 ;;
  9279                           
  9280                           	psect	text33
  9281  005894                     __ptext33:
  9282                           	callstack 0
  9283  005894                     _PWM6_LoadDutyValue:
  9284                           	callstack 19
  9285  005894                     
  9286                           ;mcc_generated_files/pwm6.c: 74:  void PWM6_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm6.c: 75:  {;mcc_generated_files/pwm6.c: 77:      PWM6DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  9287  005894  C014  F016         	movff	PWM6_LoadDutyValue@dutyValue,??_PWM6_LoadDutyValue
  9288  005898  C015  F017         	movff	PWM6_LoadDutyValue@dutyValue+1,??_PWM6_LoadDutyValue+1
  9289  00589C  90D8               	bcf	status,0,c
  9290  00589E  3217               	rrcf	(??_PWM6_LoadDutyValue+1)^0,f,c
  9291  0058A0  3216               	rrcf	??_PWM6_LoadDutyValue^0,f,c
  9292  0058A2  90D8               	bcf	status,0,c
  9293  0058A4  3217               	rrcf	(??_PWM6_LoadDutyValue+1)^0,f,c
  9294  0058A6  3216               	rrcf	??_PWM6_LoadDutyValue^0,f,c
  9295  0058A8  5016               	movf	??_PWM6_LoadDutyValue^0,w,c
  9296  0058AA  6E69               	movwf	105,c	;volatile
  9297                           
  9298                           ;mcc_generated_files/pwm6.c: 80:      PWM6DCL = (dutyValue & 0x0003)<<6;
  9299  0058AC  C014  F016         	movff	PWM6_LoadDutyValue@dutyValue,??_PWM6_LoadDutyValue
  9300  0058B0  0E03               	movlw	3
  9301  0058B2  1616               	andwf	??_PWM6_LoadDutyValue^0,f,c
  9302  0058B4  0E06               	movlw	6
  9303  0058B6  6E17               	movwf	(??_PWM6_LoadDutyValue+1)^0,c
  9304  0058B8                     u9515:
  9305  0058B8  90D8               	bcf	status,0,c
  9306  0058BA  3616               	rlcf	??_PWM6_LoadDutyValue^0,f,c
  9307  0058BC  2E17               	decfsz	(??_PWM6_LoadDutyValue+1)^0,f,c
  9308  0058BE  EF5C  F02C         	goto	u9515
  9309  0058C2  5016               	movf	??_PWM6_LoadDutyValue^0,w,c
  9310  0058C4  6E68               	movwf	104,c	;volatile
  9311  0058C6  0012               	return		;funcret
  9312  0058C8                     __end_of_PWM6_LoadDutyValue:
  9313                           	callstack 0
  9314                           
  9315 ;; *************** function _PWM5_LoadDutyValue *****************
  9316 ;; Defined at:
  9317 ;;		line 74 in file "mcc_generated_files/pwm5.c"
  9318 ;; Parameters:    Size  Location     Type
  9319 ;;  dutyValue       2   19[COMRAM] unsigned short 
  9320 ;; Auto vars:     Size  Location     Type
  9321 ;;		None
  9322 ;; Return value:  Size  Location     Type
  9323 ;;                  1    wreg      void 
  9324 ;; Registers used:
  9325 ;;		wreg, status,2, status,0
  9326 ;; Tracked objects:
  9327 ;;		On entry : 0/0
  9328 ;;		On exit  : 0/0
  9329 ;;		Unchanged: 0/0
  9330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9331 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9333 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9334 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9335 ;;Total ram usage:        4 bytes
  9336 ;; Hardware stack levels used: 1
  9337 ;; Hardware stack levels required when called: 8
  9338 ;; This function calls:
  9339 ;;		Nothing
  9340 ;; This function is called by:
  9341 ;;		_setSteering
  9342 ;; This function uses a non-reentrant model
  9343 ;;
  9344                           
  9345                           	psect	text34
  9346  0058C8                     __ptext34:
  9347                           	callstack 0
  9348  0058C8                     _PWM5_LoadDutyValue:
  9349                           	callstack 19
  9350  0058C8                     
  9351                           ;mcc_generated_files/pwm5.c: 74:  void PWM5_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm5.c: 75:  {;mcc_generated_files/pwm5.c: 77:      PWM5DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  9352  0058C8  C014  F016         	movff	PWM5_LoadDutyValue@dutyValue,??_PWM5_LoadDutyValue
  9353  0058CC  C015  F017         	movff	PWM5_LoadDutyValue@dutyValue+1,??_PWM5_LoadDutyValue+1
  9354  0058D0  90D8               	bcf	status,0,c
  9355  0058D2  3217               	rrcf	(??_PWM5_LoadDutyValue+1)^0,f,c
  9356  0058D4  3216               	rrcf	??_PWM5_LoadDutyValue^0,f,c
  9357  0058D6  90D8               	bcf	status,0,c
  9358  0058D8  3217               	rrcf	(??_PWM5_LoadDutyValue+1)^0,f,c
  9359  0058DA  3216               	rrcf	??_PWM5_LoadDutyValue^0,f,c
  9360  0058DC  5016               	movf	??_PWM5_LoadDutyValue^0,w,c
  9361  0058DE  6E6D               	movwf	109,c	;volatile
  9362                           
  9363                           ;mcc_generated_files/pwm5.c: 80:      PWM5DCL = (dutyValue & 0x0003)<<6;
  9364  0058E0  C014  F016         	movff	PWM5_LoadDutyValue@dutyValue,??_PWM5_LoadDutyValue
  9365  0058E4  0E03               	movlw	3
  9366  0058E6  1616               	andwf	??_PWM5_LoadDutyValue^0,f,c
  9367  0058E8  0E06               	movlw	6
  9368  0058EA  6E17               	movwf	(??_PWM5_LoadDutyValue+1)^0,c
  9369  0058EC                     u9505:
  9370  0058EC  90D8               	bcf	status,0,c
  9371  0058EE  3616               	rlcf	??_PWM5_LoadDutyValue^0,f,c
  9372  0058F0  2E17               	decfsz	(??_PWM5_LoadDutyValue+1)^0,f,c
  9373  0058F2  EF76  F02C         	goto	u9505
  9374  0058F6  5016               	movf	??_PWM5_LoadDutyValue^0,w,c
  9375  0058F8  6E6C               	movwf	108,c	;volatile
  9376  0058FA  0012               	return		;funcret
  9377  0058FC                     __end_of_PWM5_LoadDutyValue:
  9378                           	callstack 0
  9379                           
  9380 ;; *************** function _getBatteryVoltage *****************
  9381 ;; Defined at:
  9382 ;;		line 78 in file "main.c"
  9383 ;; Parameters:    Size  Location     Type
  9384 ;;		None
  9385 ;; Auto vars:     Size  Location     Type
  9386 ;;		None
  9387 ;; Return value:  Size  Location     Type
  9388 ;;                  1    wreg      void 
  9389 ;; Registers used:
  9390 ;;		wreg, status,2, status,0, cstack
  9391 ;; Tracked objects:
  9392 ;;		On entry : 0/0
  9393 ;;		On exit  : 0/0
  9394 ;;		Unchanged: 0/0
  9395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9399 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9400 ;;Total ram usage:        0 bytes
  9401 ;; Hardware stack levels used: 1
  9402 ;; Hardware stack levels required when called: 9
  9403 ;; This function calls:
  9404 ;;		_ADCC_GetSingleConversion
  9405 ;; This function is called by:
  9406 ;;		_loop
  9407 ;;		_checkBatt
  9408 ;; This function uses a non-reentrant model
  9409 ;;
  9410                           
  9411                           	psect	text35
  9412  005D66                     __ptext35:
  9413                           	callstack 0
  9414  005D66                     _getBatteryVoltage:
  9415                           	callstack 20
  9416  005D66                     
  9417                           ;main.c: 79:     BatteryVolt = ADCC_GetSingleConversion(aiBatt);
  9418  005D66  0E22               	movlw	34
  9419  005D68  ECE6  F02C         	call	_ADCC_GetSingleConversion
  9420  005D6C  C014  F0E5         	movff	?_ADCC_GetSingleConversion,_BatteryVolt
  9421  005D70  C015  F0E6         	movff	?_ADCC_GetSingleConversion+1,_BatteryVolt+1
  9422  005D74  0012               	return		;funcret
  9423  005D76                     __end_of_getBatteryVoltage:
  9424                           	callstack 0
  9425                           
  9426 ;; *************** function _ADCC_GetSingleConversion *****************
  9427 ;; Defined at:
  9428 ;;		line 137 in file "mcc_generated_files/adcc.c"
  9429 ;; Parameters:    Size  Location     Type
  9430 ;;  channel         1    wreg     enum E16058
  9431 ;; Auto vars:     Size  Location     Type
  9432 ;;  channel         1   23[COMRAM] enum E16058
  9433 ;; Return value:  Size  Location     Type
  9434 ;;                  2   19[COMRAM] unsigned short 
  9435 ;; Registers used:
  9436 ;;		wreg, status,2, status,0
  9437 ;; Tracked objects:
  9438 ;;		On entry : 0/0
  9439 ;;		On exit  : 0/0
  9440 ;;		Unchanged: 0/0
  9441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9442 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9443 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9444 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9445 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9446 ;;Total ram usage:        5 bytes
  9447 ;; Hardware stack levels used: 1
  9448 ;; Hardware stack levels required when called: 8
  9449 ;; This function calls:
  9450 ;;		Nothing
  9451 ;; This function is called by:
  9452 ;;		_getBatteryVoltage
  9453 ;; This function uses a non-reentrant model
  9454 ;;
  9455                           
  9456                           	psect	text36
  9457  0059CC                     __ptext36:
  9458                           	callstack 0
  9459  0059CC                     _ADCC_GetSingleConversion:
  9460                           	callstack 20
  9461                           
  9462                           ;incstack = 0
  9463                           ;ADCC_GetSingleConversion@channel stored from wreg
  9464  0059CC  6E18               	movwf	ADCC_GetSingleConversion@channel^0,c
  9465  0059CE                     
  9466                           ;mcc_generated_files/adcc.c: 137: adc_result_t ADCC_GetSingleConversion(adcc_channel_t c
      +                          hannel);mcc_generated_files/adcc.c: 138: {;mcc_generated_files/adcc.c: 140:     ADPCH = 
      +                          channel;
  9467  0059CE  0060  F063  FEF1   	movff	ADCC_GetSingleConversion@channel,16113	;volatile
  9468  0059D4                     
  9469                           ;mcc_generated_files/adcc.c: 143:     ADCON0bits.ADON = 1;
  9470  0059D4  013E               	movlb	62	; () banked
  9471  0059D6  8FF8               	bsf	248,7,b	;volatile
  9472  0059D8                     
  9473                           ; BSR set to: 62
  9474                           ;mcc_generated_files/adcc.c: 146:     ADCON0bits.ADCONT = 0;
  9475  0059D8  9DF8               	bcf	248,6,b	;volatile
  9476  0059DA                     
  9477                           ; BSR set to: 62
  9478                           ;mcc_generated_files/adcc.c: 149:     ADCON0bits.ADGO = 1;
  9479  0059DA  81F8               	bsf	248,0,b	;volatile
  9480  0059DC                     l1054:
  9481                           
  9482                           ; BSR set to: 62
  9483                           ;mcc_generated_files/adcc.c: 153:     while (ADCON0bits.ADGO)
  9484  0059DC  B1F8               	btfsc	248,0,b	;volatile
  9485  0059DE  EFF3  F02C         	goto	u6091
  9486  0059E2  EFF5  F02C         	goto	u6090
  9487  0059E6                     u6091:
  9488  0059E6  EFEE  F02C         	goto	l1054
  9489  0059EA                     u6090:
  9490  0059EA                     
  9491                           ; BSR set to: 62
  9492                           ;mcc_generated_files/adcc.c: 159:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  9493  0059EA  51F0               	movf	240,w,b	;volatile
  9494  0059EC  6E17               	movwf	(??_ADCC_GetSingleConversion+1)^0,c
  9495  0059EE  6A16               	clrf	??_ADCC_GetSingleConversion^0,c
  9496  0059F0  51EF               	movf	239,w,b	;volatile
  9497  0059F2  2416               	addwf	??_ADCC_GetSingleConversion^0,w,c
  9498  0059F4  6E14               	movwf	?_ADCC_GetSingleConversion^0,c
  9499  0059F6  0E00               	movlw	0
  9500  0059F8  2017               	addwfc	(??_ADCC_GetSingleConversion+1)^0,w,c
  9501  0059FA  6E15               	movwf	(?_ADCC_GetSingleConversion+1)^0,c
  9502  0059FC                     
  9503                           ; BSR set to: 62
  9504  0059FC  0012               	return		;funcret
  9505  0059FE                     __end_of_ADCC_GetSingleConversion:
  9506                           	callstack 0
  9507                           
  9508 ;; *************** function ___flge *****************
  9509 ;; Defined at:
  9510 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  9511 ;; Parameters:    Size  Location     Type
  9512 ;;  ff1             4   13[BANK0 ] unsigned short 
  9513 ;;  ff2             4   17[BANK0 ] unsigned short 
  9514 ;; Auto vars:     Size  Location     Type
  9515 ;;		None
  9516 ;; Return value:  Size  Location     Type
  9517 ;;		None               void
  9518 ;; Registers used:
  9519 ;;		wreg, status,2, status,0
  9520 ;; Tracked objects:
  9521 ;;		On entry : 0/0
  9522 ;;		On exit  : 0/0
  9523 ;;		Unchanged: 0/0
  9524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9525 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9527 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9528 ;;      Totals:         4       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9529 ;;Total ram usage:       12 bytes
  9530 ;; Hardware stack levels used: 1
  9531 ;; Hardware stack levels required when called: 8
  9532 ;; This function calls:
  9533 ;;		Nothing
  9534 ;; This function is called by:
  9535 ;;		_loop
  9536 ;;		_checkBatt
  9537 ;;		_startAccell
  9538 ;;		_efgtoa
  9539 ;; This function uses a non-reentrant model
  9540 ;;
  9541                           
  9542                           	psect	text37
  9543  004778                     __ptext37:
  9544                           	callstack 0
  9545  004778                     ___flge:
  9546                           	callstack 16
  9547  004778  0E00               	movlw	0
  9548  00477A  0100               	movlb	0	; () banked
  9549  00477C  156D               	andwf	___flge@ff1& (0+255),w,b
  9550  00477E  6E36               	movwf	??___flge^0,c
  9551  004780  0E00               	movlw	0
  9552  004782  156E               	andwf	(___flge@ff1+1)& (0+255),w,b
  9553  004784  6E37               	movwf	(??___flge+1)^0,c
  9554  004786  0E80               	movlw	128
  9555  004788  156F               	andwf	(___flge@ff1+2)& (0+255),w,b
  9556  00478A  6E38               	movwf	(??___flge+2)^0,c
  9557  00478C  0E7F               	movlw	127
  9558  00478E  1570               	andwf	(___flge@ff1+3)& (0+255),w,b
  9559  004790  6E39               	movwf	(??___flge+3)^0,c
  9560  004792  5036               	movf	??___flge^0,w,c
  9561  004794  1037               	iorwf	(??___flge+1)^0,w,c
  9562  004796  1038               	iorwf	(??___flge+2)^0,w,c
  9563  004798  1039               	iorwf	(??___flge+3)^0,w,c
  9564  00479A  A4D8               	btfss	status,2,c
  9565  00479C  EFD2  F023         	goto	u8361
  9566  0047A0  EFD4  F023         	goto	u8360
  9567  0047A4                     u8361:
  9568  0047A4  EFDC  F023         	goto	l8077
  9569  0047A8                     u8360:
  9570  0047A8                     
  9571                           ; BSR set to: 0
  9572  0047A8  0E00               	movlw	0
  9573  0047AA  6F6D               	movwf	___flge@ff1& (0+255),b
  9574  0047AC  0E00               	movlw	0
  9575  0047AE  6F6E               	movwf	(___flge@ff1+1)& (0+255),b
  9576  0047B0  0E00               	movlw	0
  9577  0047B2  6F6F               	movwf	(___flge@ff1+2)& (0+255),b
  9578  0047B4  0E00               	movlw	0
  9579  0047B6  6F70               	movwf	(___flge@ff1+3)& (0+255),b
  9580  0047B8                     l8077:
  9581                           
  9582                           ; BSR set to: 0
  9583  0047B8  0E00               	movlw	0
  9584  0047BA  1571               	andwf	___flge@ff2& (0+255),w,b
  9585  0047BC  6E36               	movwf	??___flge^0,c
  9586  0047BE  0E00               	movlw	0
  9587  0047C0  1572               	andwf	(___flge@ff2+1)& (0+255),w,b
  9588  0047C2  6E37               	movwf	(??___flge+1)^0,c
  9589  0047C4  0E80               	movlw	128
  9590  0047C6  1573               	andwf	(___flge@ff2+2)& (0+255),w,b
  9591  0047C8  6E38               	movwf	(??___flge+2)^0,c
  9592  0047CA  0E7F               	movlw	127
  9593  0047CC  1574               	andwf	(___flge@ff2+3)& (0+255),w,b
  9594  0047CE  6E39               	movwf	(??___flge+3)^0,c
  9595  0047D0  5036               	movf	??___flge^0,w,c
  9596  0047D2  1037               	iorwf	(??___flge+1)^0,w,c
  9597  0047D4  1038               	iorwf	(??___flge+2)^0,w,c
  9598  0047D6  1039               	iorwf	(??___flge+3)^0,w,c
  9599  0047D8  A4D8               	btfss	status,2,c
  9600  0047DA  EFF1  F023         	goto	u8371
  9601  0047DE  EFF3  F023         	goto	u8370
  9602  0047E2                     u8371:
  9603  0047E2  EFFB  F023         	goto	l8081
  9604  0047E6                     u8370:
  9605  0047E6                     
  9606                           ; BSR set to: 0
  9607  0047E6  0E00               	movlw	0
  9608  0047E8  6F71               	movwf	___flge@ff2& (0+255),b
  9609  0047EA  0E00               	movlw	0
  9610  0047EC  6F72               	movwf	(___flge@ff2+1)& (0+255),b
  9611  0047EE  0E00               	movlw	0
  9612  0047F0  6F73               	movwf	(___flge@ff2+2)& (0+255),b
  9613  0047F2  0E00               	movlw	0
  9614  0047F4  6F74               	movwf	(___flge@ff2+3)& (0+255),b
  9615  0047F6                     l8081:
  9616                           
  9617                           ; BSR set to: 0
  9618  0047F6  AF70               	btfss	(___flge@ff1+3)& (0+255),7,b
  9619  0047F8  EF00  F024         	goto	u8381
  9620  0047FC  EF02  F024         	goto	u8380
  9621  004800                     u8381:
  9622  004800  EF0B  F024         	goto	l8085
  9623  004804                     u8380:
  9624  004804                     
  9625                           ; BSR set to: 0
  9626  004804  6D6D               	negf	___flge@ff1& (0+255),b
  9627  004806  1F6E               	comf	(___flge@ff1+1)& (0+255),f,b
  9628  004808  B0D8               	btfsc	status,0,c
  9629  00480A  2B6E               	incf	(___flge@ff1+1)& (0+255),f,b
  9630  00480C  1F6F               	comf	(___flge@ff1+2)& (0+255),f,b
  9631  00480E  B0D8               	btfsc	status,0,c
  9632  004810  2B6F               	incf	(___flge@ff1+2)& (0+255),f,b
  9633  004812  0E80               	movlw	128
  9634  004814  5770               	subfwb	(___flge@ff1+3)& (0+255),f,b
  9635  004816                     l8085:
  9636                           
  9637                           ; BSR set to: 0
  9638  004816  AF74               	btfss	(___flge@ff2+3)& (0+255),7,b
  9639  004818  EF10  F024         	goto	u8391
  9640  00481C  EF12  F024         	goto	u8390
  9641  004820                     u8391:
  9642  004820  EF1B  F024         	goto	l1662
  9643  004824                     u8390:
  9644  004824                     
  9645                           ; BSR set to: 0
  9646  004824  6D71               	negf	___flge@ff2& (0+255),b
  9647  004826  1F72               	comf	(___flge@ff2+1)& (0+255),f,b
  9648  004828  B0D8               	btfsc	status,0,c
  9649  00482A  2B72               	incf	(___flge@ff2+1)& (0+255),f,b
  9650  00482C  1F73               	comf	(___flge@ff2+2)& (0+255),f,b
  9651  00482E  B0D8               	btfsc	status,0,c
  9652  004830  2B73               	incf	(___flge@ff2+2)& (0+255),f,b
  9653  004832  0E80               	movlw	128
  9654  004834  5774               	subfwb	(___flge@ff2+3)& (0+255),f,b
  9655  004836                     l1662:
  9656                           
  9657                           ; BSR set to: 0
  9658  004836  0E00               	movlw	0
  9659  004838  1B6D               	xorwf	___flge@ff1& (0+255),f,b
  9660  00483A  0E00               	movlw	0
  9661  00483C  1B6E               	xorwf	(___flge@ff1+1)& (0+255),f,b
  9662  00483E  0E00               	movlw	0
  9663  004840  1B6F               	xorwf	(___flge@ff1+2)& (0+255),f,b
  9664  004842  0E80               	movlw	128
  9665  004844  1B70               	xorwf	(___flge@ff1+3)& (0+255),f,b
  9666  004846  0E00               	movlw	0
  9667  004848  1B71               	xorwf	___flge@ff2& (0+255),f,b
  9668  00484A  0E00               	movlw	0
  9669  00484C  1B72               	xorwf	(___flge@ff2+1)& (0+255),f,b
  9670  00484E  0E00               	movlw	0
  9671  004850  1B73               	xorwf	(___flge@ff2+2)& (0+255),f,b
  9672  004852  0E80               	movlw	128
  9673  004854  1B74               	xorwf	(___flge@ff2+3)& (0+255),f,b
  9674  004856  5171               	movf	___flge@ff2& (0+255),w,b
  9675  004858  5D6D               	subwf	___flge@ff1& (0+255),w,b
  9676  00485A  5172               	movf	(___flge@ff2+1)& (0+255),w,b
  9677  00485C  596E               	subwfb	(___flge@ff1+1)& (0+255),w,b
  9678  00485E  5173               	movf	(___flge@ff2+2)& (0+255),w,b
  9679  004860  596F               	subwfb	(___flge@ff1+2)& (0+255),w,b
  9680  004862  5174               	movf	(___flge@ff2+3)& (0+255),w,b
  9681  004864  5970               	subwfb	(___flge@ff1+3)& (0+255),w,b
  9682  004866  B0D8               	btfsc	status,0,c
  9683  004868  EF38  F024         	goto	u8401
  9684  00486C  EF3A  F024         	goto	u8400
  9685  004870                     u8401:
  9686  004870  EF3D  F024         	goto	l8091
  9687  004874                     u8400:
  9688  004874                     
  9689                           ; BSR set to: 0
  9690  004874  90D8               	bcf	status,0,c
  9691  004876  EF3E  F024         	goto	l1667
  9692  00487A                     l8091:
  9693                           
  9694                           ; BSR set to: 0
  9695  00487A  80D8               	bsf	status,0,c
  9696  00487C                     l1667:
  9697                           
  9698                           ; BSR set to: 0
  9699  00487C  0012               	return		;funcret
  9700  00487E                     __end_of___flge:
  9701                           	callstack 0
  9702                           
  9703 ;; *************** function _calcSpeed *****************
  9704 ;; Defined at:
  9705 ;;		line 281 in file "main.c"
  9706 ;; Parameters:    Size  Location     Type
  9707 ;;		None
  9708 ;; Auto vars:     Size  Location     Type
  9709 ;;  speed           2   39[BANK0 ] short 
  9710 ;; Return value:  Size  Location     Type
  9711 ;;                  1    wreg      void 
  9712 ;; Registers used:
  9713 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9714 ;; Tracked objects:
  9715 ;;		On entry : 0/0
  9716 ;;		On exit  : 0/0
  9717 ;;		Unchanged: 0/0
  9718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9720 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9721 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9722 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9723 ;;Total ram usage:        6 bytes
  9724 ;; Hardware stack levels used: 1
  9725 ;; Hardware stack levels required when called: 9
  9726 ;; This function calls:
  9727 ;;		___fladd
  9728 ;;		___flmul
  9729 ;;		___fltol
  9730 ;;		___xxtofl
  9731 ;; This function is called by:
  9732 ;;		_loop
  9733 ;; This function uses a non-reentrant model
  9734 ;;
  9735                           
  9736                           	psect	text38
  9737  003634                     __ptext38:
  9738                           	callstack 0
  9739  003634                     _calcSpeed:
  9740                           	callstack 20
  9741  003634                     
  9742                           ;main.c: 282:     int16_t speed = 0;
  9743  003634  0E00               	movlw	0
  9744  003636  0100               	movlb	0	; () banked
  9745  003638  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
  9746  00363A  0E00               	movlw	0
  9747  00363C  6F87               	movwf	calcSpeed@speed& (0+255),b
  9748                           
  9749                           ;main.c: 284:     switch (driveMode) {
  9750  00363E  EFD0  F01B         	goto	l9055
  9751  003642                     l9019:
  9752                           
  9753                           ; BSR set to: 0
  9754                           ;main.c: 286:             if (distFront > (30)) {
  9755  003642  51FD               	movf	(_distFront+1)& (0+255),w,b	;volatile
  9756  003644  E109               	bnz	u10090
  9757  003646  0E1F               	movlw	31
  9758  003648  5DFC               	subwf	_distFront& (0+255),w,b	;volatile
  9759  00364A  A0D8               	btfss	status,0,c
  9760  00364C  EF2A  F01B         	goto	u10091
  9761  003650  EF2C  F01B         	goto	u10090
  9762  003654                     u10091:
  9763  003654  EF2E  F01B         	goto	l9023
  9764  003658                     u10090:
  9765  003658                     
  9766                           ; BSR set to: 0
  9767                           ;main.c: 287:                 driveMode = Straight;
  9768  003658  0E01               	movlw	1
  9769  00365A  6FFE               	movwf	_driveMode& (0+255),b
  9770  00365C                     l9023:
  9771                           
  9772                           ; BSR set to: 0
  9773                           ;main.c: 289:             if (setSpeed > (100)) {
  9774  00365C  BFEC               	btfsc	(_setSpeed+1)& (0+255),7,b
  9775  00365E  EF3A  F01B         	goto	u10101
  9776  003662  51EC               	movf	(_setSpeed+1)& (0+255),w,b
  9777  003664  E109               	bnz	u10100
  9778  003666  0E65               	movlw	101
  9779  003668  5DEB               	subwf	_setSpeed& (0+255),w,b
  9780  00366A  A0D8               	btfss	status,0,c
  9781  00366C  EF3A  F01B         	goto	u10101
  9782  003670  EF3C  F01B         	goto	u10100
  9783  003674                     u10101:
  9784  003674  EF57  F01B         	goto	l9033
  9785  003678                     u10100:
  9786  003678                     
  9787                           ; BSR set to: 0
  9788                           ;main.c: 290:                     speed = setSpeed;
  9789  003678  C0EB  F087         	movff	_setSpeed,calcSpeed@speed
  9790  00367C  C0EC  F088         	movff	_setSpeed+1,calcSpeed@speed+1
  9791  003680                     
  9792                           ; BSR set to: 0
  9793                           ;main.c: 291:                 if (distFront < (15)) {
  9794  003680  51FD               	movf	(_distFront+1)& (0+255),w,b	;volatile
  9795  003682  E107               	bnz	u10111
  9796  003684  0E0F               	movlw	15
  9797  003686  5DFC               	subwf	_distFront& (0+255),w,b	;volatile
  9798  003688  B0D8               	btfsc	status,0,c
  9799  00368A  EF49  F01B         	goto	u10111
  9800  00368E  EF4B  F01B         	goto	u10110
  9801  003692                     u10111:
  9802  003692  EF51  F01B         	goto	l9031
  9803  003696                     u10110:
  9804  003696                     
  9805                           ; BSR set to: 0
  9806                           ;main.c: 292:                     speed -= 4;
  9807  003696  0EFC               	movlw	252
  9808  003698  2787               	addwf	calcSpeed@speed& (0+255),f,b
  9809  00369A  0EFF               	movlw	255
  9810  00369C  2388               	addwfc	(calcSpeed@speed+1)& (0+255),f,b
  9811                           
  9812                           ;main.c: 293:                 } else {
  9813  00369E  EFF9  F01B         	goto	l9057
  9814  0036A2                     l9031:
  9815                           
  9816                           ; BSR set to: 0
  9817                           ;main.c: 294:                     speed -= 2;
  9818  0036A2  0EFE               	movlw	254
  9819  0036A4  2787               	addwf	calcSpeed@speed& (0+255),f,b
  9820  0036A6  0EFF               	movlw	255
  9821  0036A8  2388               	addwfc	(calcSpeed@speed+1)& (0+255),f,b
  9822  0036AA  EFF9  F01B         	goto	l9057
  9823  0036AE                     l9033:
  9824                           
  9825                           ; BSR set to: 0
  9826                           ;main.c: 297:                 speed = (100);
  9827  0036AE  0E00               	movlw	0
  9828  0036B0  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
  9829  0036B2  0E64               	movlw	100
  9830  0036B4  6F87               	movwf	calcSpeed@speed& (0+255),b
  9831  0036B6  EFF9  F01B         	goto	l9057
  9832  0036BA                     l9035:
  9833                           
  9834                           ; BSR set to: 0
  9835                           ;main.c: 302:             if (distFront < (30)) {
  9836  0036BA  51FD               	movf	(_distFront+1)& (0+255),w,b	;volatile
  9837  0036BC  E107               	bnz	u10121
  9838  0036BE  0E1E               	movlw	30
  9839  0036C0  5DFC               	subwf	_distFront& (0+255),w,b	;volatile
  9840  0036C2  B0D8               	btfsc	status,0,c
  9841  0036C4  EF66  F01B         	goto	u10121
  9842  0036C8  EF68  F01B         	goto	u10120
  9843  0036CC                     u10121:
  9844  0036CC  EF6A  F01B         	goto	l9039
  9845  0036D0                     u10120:
  9846  0036D0                     
  9847                           ; BSR set to: 0
  9848                           ;main.c: 303:                 driveMode = Brake;
  9849  0036D0  0E02               	movlw	2
  9850  0036D2  6FFE               	movwf	_driveMode& (0+255),b
  9851  0036D4                     l9039:
  9852                           
  9853                           ; BSR set to: 0
  9854                           ;main.c: 306:             if (distFront >= (150)) {
  9855  0036D4  51FD               	movf	(_distFront+1)& (0+255),w,b	;volatile
  9856  0036D6  E109               	bnz	u10130
  9857  0036D8  0E96               	movlw	150
  9858  0036DA  5DFC               	subwf	_distFront& (0+255),w,b	;volatile
  9859  0036DC  A0D8               	btfss	status,0,c
  9860  0036DE  EF73  F01B         	goto	u10131
  9861  0036E2  EF75  F01B         	goto	u10130
  9862  0036E6                     u10131:
  9863  0036E6  EFBE  F01B         	goto	l9043
  9864  0036EA                     u10130:
  9865  0036EA                     
  9866                           ; BSR set to: 0
  9867                           ;main.c: 307:                 speed = (int16_t) ((0.5) * (distFront - (150)) + (275));
  9868  0036EA  0E00               	movlw	0
  9869  0036EC  6F71               	movwf	___fladd@a& (0+255),b
  9870  0036EE  0E80               	movlw	128
  9871  0036F0  6F72               	movwf	(___fladd@a+1)& (0+255),b
  9872  0036F2  0E89               	movlw	137
  9873  0036F4  6F73               	movwf	(___fladd@a+2)& (0+255),b
  9874  0036F6  0E43               	movlw	67
  9875  0036F8  6F74               	movwf	(___fladd@a+3)& (0+255),b
  9876  0036FA  0E00               	movlw	0
  9877  0036FC  6E2E               	movwf	___flmul@a^0,c
  9878  0036FE  0E00               	movlw	0
  9879  003700  6E2F               	movwf	(___flmul@a+1)^0,c
  9880  003702  0E00               	movlw	0
  9881  003704  6E30               	movwf	(___flmul@a+2)^0,c
  9882  003706  0E3F               	movlw	63
  9883  003708  6E31               	movwf	(___flmul@a+3)^0,c
  9884  00370A  0E6A               	movlw	106
  9885  00370C  6F83               	movwf	??_calcSpeed& (0+255),b
  9886  00370E  0EFF               	movlw	255
  9887  003710  6F84               	movwf	(??_calcSpeed+1)& (0+255),b
  9888  003712  C0FC  F085         	movff	_distFront,??_calcSpeed+2	;volatile
  9889  003716  C0FD  F086         	movff	_distFront+1,??_calcSpeed+3	;volatile
  9890  00371A  5183               	movf	??_calcSpeed& (0+255),w,b
  9891  00371C  2785               	addwf	(??_calcSpeed+2)& (0+255),f,b
  9892  00371E  5184               	movf	(??_calcSpeed+1)& (0+255),w,b
  9893  003720  2386               	addwfc	(??_calcSpeed+3)& (0+255),f,b
  9894  003722  C085  F01C         	movff	??_calcSpeed+2,___xxtofl@val
  9895  003726  C086  F01D         	movff	??_calcSpeed+3,___xxtofl@val+1
  9896  00372A  6A1E               	clrf	(___xxtofl@val+2)^0,c
  9897  00372C  6A1F               	clrf	(___xxtofl@val+3)^0,c
  9898  00372E  0E00               	movlw	0
  9899  003730  EC0D  F01D         	call	___xxtofl
  9900  003734  C01C  F02A         	movff	?___xxtofl,___flmul@b
  9901  003738  C01D  F02B         	movff	?___xxtofl+1,___flmul@b+1
  9902  00373C  C01E  F02C         	movff	?___xxtofl+2,___flmul@b+2
  9903  003740  C01F  F02D         	movff	?___xxtofl+3,___flmul@b+3
  9904  003744  EC76  F013         	call	___flmul	;wreg free
  9905  003748  C02A  F06D         	movff	?___flmul,___fladd@b
  9906  00374C  C02B  F06E         	movff	?___flmul+1,___fladd@b+1
  9907  003750  C02C  F06F         	movff	?___flmul+2,___fladd@b+2
  9908  003754  C02D  F070         	movff	?___flmul+3,___fladd@b+3
  9909  003758  EC15  F011         	call	___fladd	;wreg free
  9910  00375C  C06D  F079         	movff	?___fladd,___fltol@f1
  9911  003760  C06E  F07A         	movff	?___fladd+1,___fltol@f1+1
  9912  003764  C06F  F07B         	movff	?___fladd+2,___fltol@f1+2
  9913  003768  C070  F07C         	movff	?___fladd+3,___fltol@f1+3
  9914  00376C  ECB5  F022         	call	___fltol	;wreg free
  9915  003770  C079  F087         	movff	?___fltol,calcSpeed@speed
  9916  003774  C07A  F088         	movff	?___fltol+1,calcSpeed@speed+1
  9917                           
  9918                           ;main.c: 308:             } else {
  9919  003778  EFF9  F01B         	goto	l9057
  9920  00377C                     l9043:
  9921                           
  9922                           ; BSR set to: 0
  9923                           ;main.c: 309:                 speed = (275);
  9924  00377C  0E01               	movlw	1
  9925  00377E  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
  9926  003780  0E13               	movlw	19
  9927  003782  6F87               	movwf	calcSpeed@speed& (0+255),b
  9928  003784  EFF9  F01B         	goto	l9057
  9929  003788                     l9045:
  9930                           
  9931                           ; BSR set to: 0
  9932                           ;main.c: 314:             speed = (-125);
  9933  003788  0EFF               	movlw	255
  9934  00378A  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
  9935  00378C  0E83               	movlw	131
  9936  00378E  6F87               	movwf	calcSpeed@speed& (0+255),b
  9937                           
  9938                           ;main.c: 315:             break;
  9939  003790  EFF9  F01B         	goto	l9057
  9940  003794                     l9049:
  9941                           
  9942                           ; BSR set to: 0
  9943                           ;main.c: 320:             speed = (200);
  9944  003794  0E00               	movlw	0
  9945  003796  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
  9946  003798  0EC8               	movlw	200
  9947  00379A  6F87               	movwf	calcSpeed@speed& (0+255),b
  9948                           
  9949                           ;main.c: 321:             break;
  9950  00379C  EFF9  F01B         	goto	l9057
  9951  0037A0                     l9055:
  9952                           
  9953                           ; BSR set to: 0
  9954  0037A0  51FE               	movf	_driveMode& (0+255),w,b
  9955  0037A2  6F83               	movwf	??_calcSpeed& (0+255),b
  9956  0037A4  6B84               	clrf	(??_calcSpeed+1)& (0+255),b
  9957                           
  9958                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9959                           ; Switch size 1, requested type "simple"
  9960                           ; Number of cases is 1, Range of values is 0 to 0
  9961                           ; switch strategies available:
  9962                           ; Name         Instructions Cycles
  9963                           ; simple_byte            4     3 (average)
  9964                           ;	Chosen strategy is simple_byte
  9965  0037A6  5184               	movf	(??_calcSpeed+1)& (0+255),w,b
  9966  0037A8  0A00               	xorlw	0	; case 0
  9967  0037AA  B4D8               	btfsc	status,2,c
  9968  0037AC  EFDA  F01B         	goto	l9285
  9969  0037B0  EFF9  F01B         	goto	l9057
  9970  0037B4                     l9285:
  9971                           
  9972                           ; BSR set to: 0
  9973                           ; Switch size 1, requested type "simple"
  9974                           ; Number of cases is 7, Range of values is 0 to 6
  9975                           ; switch strategies available:
  9976                           ; Name         Instructions Cycles
  9977                           ; simple_byte           22    12 (average)
  9978                           ;	Chosen strategy is simple_byte
  9979  0037B4  5183               	movf	??_calcSpeed& (0+255),w,b
  9980  0037B6  0A00               	xorlw	0	; case 0
  9981  0037B8  B4D8               	btfsc	status,2,c
  9982  0037BA  EF5D  F01B         	goto	l9035
  9983  0037BE  0A01               	xorlw	1	; case 1
  9984  0037C0  B4D8               	btfsc	status,2,c
  9985  0037C2  EF5D  F01B         	goto	l9035
  9986  0037C6  0A03               	xorlw	3	; case 2
  9987  0037C8  B4D8               	btfsc	status,2,c
  9988  0037CA  EF21  F01B         	goto	l9019
  9989  0037CE  0A01               	xorlw	1	; case 3
  9990  0037D0  B4D8               	btfsc	status,2,c
  9991  0037D2  EFC4  F01B         	goto	l9045
  9992  0037D6  0A07               	xorlw	7	; case 4
  9993  0037D8  B4D8               	btfsc	status,2,c
  9994  0037DA  EFC4  F01B         	goto	l9045
  9995  0037DE  0A01               	xorlw	1	; case 5
  9996  0037E0  B4D8               	btfsc	status,2,c
  9997  0037E2  EFCA  F01B         	goto	l9049
  9998  0037E6  0A03               	xorlw	3	; case 6
  9999  0037E8  B4D8               	btfsc	status,2,c
 10000  0037EA  EFCA  F01B         	goto	l9049
 10001  0037EE  EFF9  F01B         	goto	l9057
 10002  0037F2                     l9057:
 10003                           
 10004                           ;main.c: 327:     if (speed > (400)) {
 10005  0037F2  0100               	movlb	0	; () banked
 10006  0037F4  BF88               	btfsc	(calcSpeed@speed+1)& (0+255),7,b
 10007  0037F6  EF06  F01C         	goto	u10141
 10008  0037FA  0E91               	movlw	145
 10009  0037FC  5D87               	subwf	calcSpeed@speed& (0+255),w,b
 10010  0037FE  0E01               	movlw	1
 10011  003800  5988               	subwfb	(calcSpeed@speed+1)& (0+255),w,b
 10012  003802  A0D8               	btfss	status,0,c
 10013  003804  EF06  F01C         	goto	u10141
 10014  003808  EF08  F01C         	goto	u10140
 10015  00380C                     u10141:
 10016  00380C  EF0C  F01C         	goto	l9061
 10017  003810                     u10140:
 10018  003810                     
 10019                           ; BSR set to: 0
 10020                           ;main.c: 328:         speed = (400);
 10021  003810  0E01               	movlw	1
 10022  003812  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
 10023  003814  0E90               	movlw	144
 10024  003816  6F87               	movwf	calcSpeed@speed& (0+255),b
 10025  003818                     l9061:
 10026                           
 10027                           ; BSR set to: 0
 10028                           ;main.c: 330:     if (speed < (-250)) {
 10029  003818  AF88               	btfss	(calcSpeed@speed+1)& (0+255),7,b
 10030  00381A  EF18  F01C         	goto	u10151
 10031  00381E  0E06               	movlw	6
 10032  003820  5D87               	subwf	calcSpeed@speed& (0+255),w,b
 10033  003822  0EFF               	movlw	255
 10034  003824  5988               	subwfb	(calcSpeed@speed+1)& (0+255),w,b
 10035  003826  B0D8               	btfsc	status,0,c
 10036  003828  EF18  F01C         	goto	u10151
 10037  00382C  EF1A  F01C         	goto	u10150
 10038  003830                     u10151:
 10039  003830  EF1E  F01C         	goto	l9065
 10040  003834                     u10150:
 10041  003834                     
 10042                           ; BSR set to: 0
 10043                           ;main.c: 331:         speed = (-250);
 10044  003834  0EFF               	movlw	255
 10045  003836  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
 10046  003838  0E06               	movlw	6
 10047  00383A  6F87               	movwf	calcSpeed@speed& (0+255),b
 10048  00383C                     l9065:
 10049                           
 10050                           ; BSR set to: 0
 10051                           ;main.c: 333:     setSpeed = speed;
 10052  00383C  C087  F0EB         	movff	calcSpeed@speed,_setSpeed
 10053  003840  C088  F0EC         	movff	calcSpeed@speed+1,_setSpeed+1
 10054  003844                     
 10055                           ; BSR set to: 0
 10056  003844  0012               	return		;funcret
 10057  003846                     __end_of_calcSpeed:
 10058                           	callstack 0
 10059                           
 10060 ;; *************** function ___fladd *****************
 10061 ;; Defined at:
 10062 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
 10063 ;; Parameters:    Size  Location     Type
 10064 ;;  b               4   13[BANK0 ] void 
 10065 ;;  a               4   17[BANK0 ] void 
 10066 ;; Auto vars:     Size  Location     Type
 10067 ;;  grs             1   24[BANK0 ] unsigned char 
 10068 ;;  bexp            1   23[BANK0 ] unsigned char 
 10069 ;;  aexp            1   22[BANK0 ] unsigned char 
 10070 ;;  signs           1   21[BANK0 ] unsigned char 
 10071 ;; Return value:  Size  Location     Type
 10072 ;;                  4   13[BANK0 ] unsigned char 
 10073 ;; Registers used:
 10074 ;;		wreg, status,2, status,0
 10075 ;; Tracked objects:
 10076 ;;		On entry : 0/0
 10077 ;;		On exit  : 0/0
 10078 ;;		Unchanged: 0/0
 10079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10080 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10081 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10082 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10083 ;;      Totals:         4      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10084 ;;Total ram usage:       16 bytes
 10085 ;; Hardware stack levels used: 1
 10086 ;; Hardware stack levels required when called: 8
 10087 ;; This function calls:
 10088 ;;		Nothing
 10089 ;; This function is called by:
 10090 ;;		_calcSpeed
 10091 ;;		___flsub
 10092 ;;		_efgtoa
 10093 ;; This function uses a non-reentrant model
 10094 ;;
 10095                           
 10096                           	psect	text39
 10097  00222A                     __ptext39:
 10098                           	callstack 0
 10099  00222A                     ___fladd:
 10100                           	callstack 15
 10101  00222A  0100               	movlb	0	; () banked
 10102  00222C  5170               	movf	(___fladd@b+3)& (0+255),w,b
 10103  00222E  0B80               	andlw	128
 10104  002230  6F75               	movwf	___fladd@signs& (0+255),b
 10105  002232  5170               	movf	(___fladd@b+3)& (0+255),w,b
 10106  002234  2570               	addwf	(___fladd@b+3)& (0+255),w,b
 10107  002236  6F77               	movwf	___fladd@bexp& (0+255),b
 10108  002238                     
 10109                           ; BSR set to: 0
 10110  002238  AF6F               	btfss	(___fladd@b+2)& (0+255),7,b
 10111  00223A  EF21  F011         	goto	u7231
 10112  00223E  EF23  F011         	goto	u7230
 10113  002242                     u7231:
 10114  002242  EF24  F011         	goto	l7405
 10115  002246                     u7230:
 10116  002246                     
 10117                           ; BSR set to: 0
 10118  002246  8177               	bsf	___fladd@bexp& (0+255),0,b
 10119  002248                     l7405:
 10120                           
 10121                           ; BSR set to: 0
 10122  002248  5177               	movf	___fladd@bexp& (0+255),w,b
 10123  00224A  B4D8               	btfsc	status,2,c
 10124  00224C  EF2A  F011         	goto	u7241
 10125  002250  EF2C  F011         	goto	u7240
 10126  002254                     u7241:
 10127  002254  EF41  F011         	goto	l7415
 10128  002258                     u7240:
 10129  002258                     
 10130                           ; BSR set to: 0
 10131  002258  2977               	incf	___fladd@bexp& (0+255),w,b
 10132  00225A  A4D8               	btfss	status,2,c
 10133  00225C  EF32  F011         	goto	u7251
 10134  002260  EF34  F011         	goto	u7250
 10135  002264                     u7251:
 10136  002264  EF3C  F011         	goto	l7411
 10137  002268                     u7250:
 10138  002268                     
 10139                           ; BSR set to: 0
 10140  002268  0E00               	movlw	0
 10141  00226A  6F6D               	movwf	___fladd@b& (0+255),b
 10142  00226C  0E00               	movlw	0
 10143  00226E  6F6E               	movwf	(___fladd@b+1)& (0+255),b
 10144  002270  0E00               	movlw	0
 10145  002272  6F6F               	movwf	(___fladd@b+2)& (0+255),b
 10146  002274  0E00               	movlw	0
 10147  002276  6F70               	movwf	(___fladd@b+3)& (0+255),b
 10148  002278                     l7411:
 10149                           
 10150                           ; BSR set to: 0
 10151  002278  8F6F               	bsf	(___fladd@b+2)& (0+255),7,b
 10152  00227A                     
 10153                           ; BSR set to: 0
 10154  00227A  0E00               	movlw	0
 10155  00227C  6F70               	movwf	(___fladd@b+3)& (0+255),b
 10156  00227E  EF49  F011         	goto	l7417
 10157  002282                     l7415:
 10158                           
 10159                           ; BSR set to: 0
 10160  002282  0E00               	movlw	0
 10161  002284  6F6D               	movwf	___fladd@b& (0+255),b
 10162  002286  0E00               	movlw	0
 10163  002288  6F6E               	movwf	(___fladd@b+1)& (0+255),b
 10164  00228A  0E00               	movlw	0
 10165  00228C  6F6F               	movwf	(___fladd@b+2)& (0+255),b
 10166  00228E  0E00               	movlw	0
 10167  002290  6F70               	movwf	(___fladd@b+3)& (0+255),b
 10168  002292                     l7417:
 10169                           
 10170                           ; BSR set to: 0
 10171  002292  5174               	movf	(___fladd@a+3)& (0+255),w,b
 10172  002294  0B80               	andlw	128
 10173  002296  6F76               	movwf	___fladd@aexp& (0+255),b
 10174  002298                     
 10175                           ; BSR set to: 0
 10176  002298  5175               	movf	___fladd@signs& (0+255),w,b
 10177  00229A  1976               	xorwf	___fladd@aexp& (0+255),w,b
 10178  00229C  B4D8               	btfsc	status,2,c
 10179  00229E  EF53  F011         	goto	u7261
 10180  0022A2  EF55  F011         	goto	u7260
 10181  0022A6                     u7261:
 10182  0022A6  EF56  F011         	goto	l7423
 10183  0022AA                     u7260:
 10184  0022AA                     
 10185                           ; BSR set to: 0
 10186  0022AA  8D75               	bsf	___fladd@signs& (0+255),6,b
 10187  0022AC                     l7423:
 10188                           
 10189                           ; BSR set to: 0
 10190  0022AC  5174               	movf	(___fladd@a+3)& (0+255),w,b
 10191  0022AE  2574               	addwf	(___fladd@a+3)& (0+255),w,b
 10192  0022B0  6F76               	movwf	___fladd@aexp& (0+255),b
 10193  0022B2                     
 10194                           ; BSR set to: 0
 10195  0022B2  AF73               	btfss	(___fladd@a+2)& (0+255),7,b
 10196  0022B4  EF5E  F011         	goto	u7271
 10197  0022B8  EF60  F011         	goto	u7270
 10198  0022BC                     u7271:
 10199  0022BC  EF61  F011         	goto	l7429
 10200  0022C0                     u7270:
 10201  0022C0                     
 10202                           ; BSR set to: 0
 10203  0022C0  8176               	bsf	___fladd@aexp& (0+255),0,b
 10204  0022C2                     l7429:
 10205                           
 10206                           ; BSR set to: 0
 10207  0022C2  5176               	movf	___fladd@aexp& (0+255),w,b
 10208  0022C4  B4D8               	btfsc	status,2,c
 10209  0022C6  EF67  F011         	goto	u7281
 10210  0022CA  EF69  F011         	goto	u7280
 10211  0022CE                     u7281:
 10212  0022CE  EF7E  F011         	goto	l7439
 10213  0022D2                     u7280:
 10214  0022D2                     
 10215                           ; BSR set to: 0
 10216  0022D2  2976               	incf	___fladd@aexp& (0+255),w,b
 10217  0022D4  A4D8               	btfss	status,2,c
 10218  0022D6  EF6F  F011         	goto	u7291
 10219  0022DA  EF71  F011         	goto	u7290
 10220  0022DE                     u7291:
 10221  0022DE  EF79  F011         	goto	l7435
 10222  0022E2                     u7290:
 10223  0022E2                     
 10224                           ; BSR set to: 0
 10225  0022E2  0E00               	movlw	0
 10226  0022E4  6F71               	movwf	___fladd@a& (0+255),b
 10227  0022E6  0E00               	movlw	0
 10228  0022E8  6F72               	movwf	(___fladd@a+1)& (0+255),b
 10229  0022EA  0E00               	movlw	0
 10230  0022EC  6F73               	movwf	(___fladd@a+2)& (0+255),b
 10231  0022EE  0E00               	movlw	0
 10232  0022F0  6F74               	movwf	(___fladd@a+3)& (0+255),b
 10233  0022F2                     l7435:
 10234                           
 10235                           ; BSR set to: 0
 10236  0022F2  8F73               	bsf	(___fladd@a+2)& (0+255),7,b
 10237  0022F4                     
 10238                           ; BSR set to: 0
 10239  0022F4  0E00               	movlw	0
 10240  0022F6  6F74               	movwf	(___fladd@a+3)& (0+255),b
 10241  0022F8  EF86  F011         	goto	l7441
 10242  0022FC                     l7439:
 10243                           
 10244                           ; BSR set to: 0
 10245  0022FC  0E00               	movlw	0
 10246  0022FE  6F71               	movwf	___fladd@a& (0+255),b
 10247  002300  0E00               	movlw	0
 10248  002302  6F72               	movwf	(___fladd@a+1)& (0+255),b
 10249  002304  0E00               	movlw	0
 10250  002306  6F73               	movwf	(___fladd@a+2)& (0+255),b
 10251  002308  0E00               	movlw	0
 10252  00230A  6F74               	movwf	(___fladd@a+3)& (0+255),b
 10253  00230C                     l7441:
 10254                           
 10255                           ; BSR set to: 0
 10256  00230C  5177               	movf	___fladd@bexp& (0+255),w,b
 10257  00230E  5D76               	subwf	___fladd@aexp& (0+255),w,b
 10258  002310  B0D8               	btfsc	status,0,c
 10259  002312  EF8D  F011         	goto	u7301
 10260  002316  EF8F  F011         	goto	u7300
 10261  00231A                     u7301:
 10262  00231A  EFB6  F011         	goto	l7477
 10263  00231E                     u7300:
 10264  00231E                     
 10265                           ; BSR set to: 0
 10266  00231E  AD75               	btfss	___fladd@signs& (0+255),6,b
 10267  002320  EF94  F011         	goto	u7311
 10268  002324  EF96  F011         	goto	u7310
 10269  002328                     u7311:
 10270  002328  EF98  F011         	goto	l7447
 10271  00232C                     u7310:
 10272  00232C                     
 10273                           ; BSR set to: 0
 10274  00232C  0E80               	movlw	128
 10275  00232E  1B75               	xorwf	___fladd@signs& (0+255),f,b
 10276  002330                     l7447:
 10277                           
 10278                           ; BSR set to: 0
 10279  002330  C077  F078         	movff	___fladd@bexp,___fladd@grs
 10280  002334                     
 10281                           ; BSR set to: 0
 10282  002334  C076  F077         	movff	___fladd@aexp,___fladd@bexp
 10283  002338                     
 10284                           ; BSR set to: 0
 10285  002338  C078  F076         	movff	___fladd@grs,___fladd@aexp
 10286  00233C                     
 10287                           ; BSR set to: 0
 10288  00233C  C06D  F078         	movff	___fladd@b,___fladd@grs
 10289  002340                     
 10290                           ; BSR set to: 0
 10291  002340  C071  F06D         	movff	___fladd@a,___fladd@b
 10292  002344                     
 10293                           ; BSR set to: 0
 10294  002344  C078  F071         	movff	___fladd@grs,___fladd@a
 10295  002348                     
 10296                           ; BSR set to: 0
 10297  002348  C06E  F078         	movff	___fladd@b+1,___fladd@grs
 10298  00234C                     
 10299                           ; BSR set to: 0
 10300  00234C  C072  F06E         	movff	___fladd@a+1,___fladd@b+1
 10301  002350                     
 10302                           ; BSR set to: 0
 10303  002350  C078  F072         	movff	___fladd@grs,___fladd@a+1
 10304  002354                     
 10305                           ; BSR set to: 0
 10306  002354  C06F  F078         	movff	___fladd@b+2,___fladd@grs
 10307  002358                     
 10308                           ; BSR set to: 0
 10309  002358  C073  F06F         	movff	___fladd@a+2,___fladd@b+2
 10310  00235C                     
 10311                           ; BSR set to: 0
 10312  00235C  C078  F073         	movff	___fladd@grs,___fladd@a+2
 10313  002360                     
 10314                           ; BSR set to: 0
 10315  002360  C070  F078         	movff	___fladd@b+3,___fladd@grs
 10316  002364                     
 10317                           ; BSR set to: 0
 10318  002364  C074  F070         	movff	___fladd@a+3,___fladd@b+3
 10319  002368                     
 10320                           ; BSR set to: 0
 10321  002368  C078  F074         	movff	___fladd@grs,___fladd@a+3
 10322  00236C                     l7477:
 10323                           
 10324                           ; BSR set to: 0
 10325  00236C  0E00               	movlw	0
 10326  00236E  6F78               	movwf	___fladd@grs& (0+255),b
 10327  002370                     
 10328                           ; BSR set to: 0
 10329  002370  5177               	movf	___fladd@bexp& (0+255),w,b
 10330  002372  C076  F036         	movff	___fladd@aexp,??___fladd
 10331  002376  6A37               	clrf	(??___fladd+1)^0,c
 10332  002378  5E36               	subwf	??___fladd^0,f,c
 10333  00237A  0E00               	movlw	0
 10334  00237C  5A37               	subwfb	(??___fladd+1)^0,f,c
 10335  00237E  BE37               	btfsc	(??___fladd+1)^0,7,c
 10336  002380  EFCB  F011         	goto	u7321
 10337  002384  5037               	movf	(??___fladd+1)^0,w,c
 10338  002386  E109               	bnz	u7320
 10339  002388  0E1A               	movlw	26
 10340  00238A  5C36               	subwf	??___fladd^0,w,c
 10341  00238C  A0D8               	btfss	status,0,c
 10342  00238E  EFCB  F011         	goto	u7321
 10343  002392  EFCD  F011         	goto	u7320
 10344  002396                     u7321:
 10345  002396  EF04  F012         	goto	l1926
 10346  00239A                     u7320:
 10347  00239A                     
 10348                           ; BSR set to: 0
 10349  00239A  516D               	movf	___fladd@b& (0+255),w,b
 10350  00239C  116E               	iorwf	(___fladd@b+1)& (0+255),w,b
 10351  00239E  116F               	iorwf	(___fladd@b+2)& (0+255),w,b
 10352  0023A0  1170               	iorwf	(___fladd@b+3)& (0+255),w,b
 10353  0023A2  A4D8               	btfss	status,2,c
 10354  0023A4  EFD6  F011         	goto	u7331
 10355  0023A8  EFD9  F011         	goto	u7330
 10356  0023AC                     u7331:
 10357  0023AC  0E01               	movlw	1
 10358  0023AE  EFDA  F011         	goto	u7340
 10359  0023B2                     u7330:
 10360  0023B2  0E00               	movlw	0
 10361  0023B4                     u7340:
 10362  0023B4  6F78               	movwf	___fladd@grs& (0+255),b
 10363  0023B6                     
 10364                           ; BSR set to: 0
 10365  0023B6  0E00               	movlw	0
 10366  0023B8  6F6D               	movwf	___fladd@b& (0+255),b
 10367  0023BA  0E00               	movlw	0
 10368  0023BC  6F6E               	movwf	(___fladd@b+1)& (0+255),b
 10369  0023BE  0E00               	movlw	0
 10370  0023C0  6F6F               	movwf	(___fladd@b+2)& (0+255),b
 10371  0023C2  0E00               	movlw	0
 10372  0023C4  6F70               	movwf	(___fladd@b+3)& (0+255),b
 10373  0023C6                     
 10374                           ; BSR set to: 0
 10375  0023C6  C076  F077         	movff	___fladd@aexp,___fladd@bexp
 10376  0023CA  EF0D  F012         	goto	l1925
 10377  0023CE                     l1927:
 10378                           
 10379                           ; BSR set to: 0
 10380  0023CE  A178               	btfss	___fladd@grs& (0+255),0,b
 10381  0023D0  EFEC  F011         	goto	u7351
 10382  0023D4  EFEE  F011         	goto	u7350
 10383  0023D8                     u7351:
 10384  0023D8  EFF4  F011         	goto	l7489
 10385  0023DC                     u7350:
 10386  0023DC                     
 10387                           ; BSR set to: 0
 10388  0023DC  90D8               	bcf	status,0,c
 10389  0023DE  3178               	rrcf	___fladd@grs& (0+255),w,b
 10390  0023E0  0901               	iorlw	1
 10391  0023E2  6F78               	movwf	___fladd@grs& (0+255),b
 10392  0023E4  EFF6  F011         	goto	l7491
 10393  0023E8                     l7489:
 10394                           
 10395                           ; BSR set to: 0
 10396  0023E8  90D8               	bcf	status,0,c
 10397  0023EA  3378               	rrcf	___fladd@grs& (0+255),f,b
 10398  0023EC                     l7491:
 10399                           
 10400                           ; BSR set to: 0
 10401  0023EC  A16D               	btfss	___fladd@b& (0+255),0,b
 10402  0023EE  EFFB  F011         	goto	u7361
 10403  0023F2  EFFD  F011         	goto	u7360
 10404  0023F6                     u7361:
 10405  0023F6  EFFE  F011         	goto	l7495
 10406  0023FA                     u7360:
 10407  0023FA                     
 10408                           ; BSR set to: 0
 10409  0023FA  8F78               	bsf	___fladd@grs& (0+255),7,b
 10410  0023FC                     l7495:
 10411                           
 10412                           ; BSR set to: 0
 10413  0023FC  3570               	rlcf	(___fladd@b+3)& (0+255),w,b
 10414  0023FE  3370               	rrcf	(___fladd@b+3)& (0+255),f,b
 10415  002400  336F               	rrcf	(___fladd@b+2)& (0+255),f,b
 10416  002402  336E               	rrcf	(___fladd@b+1)& (0+255),f,b
 10417  002404  336D               	rrcf	___fladd@b& (0+255),f,b
 10418  002406                     
 10419                           ; BSR set to: 0
 10420  002406  2B77               	incf	___fladd@bexp& (0+255),f,b
 10421  002408                     l1926:
 10422                           
 10423                           ; BSR set to: 0
 10424  002408  5176               	movf	___fladd@aexp& (0+255),w,b
 10425  00240A  5D77               	subwf	___fladd@bexp& (0+255),w,b
 10426  00240C  A0D8               	btfss	status,0,c
 10427  00240E  EF0B  F012         	goto	u7371
 10428  002412  EF0D  F012         	goto	u7370
 10429  002416                     u7371:
 10430  002416  EFE7  F011         	goto	l1927
 10431  00241A                     u7370:
 10432  00241A                     l1925:
 10433                           
 10434                           ; BSR set to: 0
 10435  00241A  BD75               	btfsc	___fladd@signs& (0+255),6,b
 10436  00241C  EF12  F012         	goto	u7381
 10437  002420  EF14  F012         	goto	u7380
 10438  002424                     u7381:
 10439  002424  EF54  F012         	goto	l7523
 10440  002428                     u7380:
 10441  002428                     
 10442                           ; BSR set to: 0
 10443  002428  5177               	movf	___fladd@bexp& (0+255),w,b
 10444  00242A  A4D8               	btfss	status,2,c
 10445  00242C  EF1A  F012         	goto	u7391
 10446  002430  EF1C  F012         	goto	u7390
 10447  002434                     u7391:
 10448  002434  EF26  F012         	goto	l7505
 10449  002438                     u7390:
 10450  002438                     
 10451                           ; BSR set to: 0
 10452  002438  0E00               	movlw	0
 10453  00243A  6F6D               	movwf	?___fladd& (0+255),b
 10454  00243C  0E00               	movlw	0
 10455  00243E  6F6E               	movwf	(?___fladd+1)& (0+255),b
 10456  002440  0E00               	movlw	0
 10457  002442  6F6F               	movwf	(?___fladd+2)& (0+255),b
 10458  002444  0E00               	movlw	0
 10459  002446  6F70               	movwf	(?___fladd+3)& (0+255),b
 10460  002448  EF75  F013         	goto	l1934
 10461  00244C                     l7505:
 10462                           
 10463                           ; BSR set to: 0
 10464  00244C  5171               	movf	___fladd@a& (0+255),w,b
 10465  00244E  276D               	addwf	___fladd@b& (0+255),f,b
 10466  002450  5172               	movf	(___fladd@a+1)& (0+255),w,b
 10467  002452  236E               	addwfc	(___fladd@b+1)& (0+255),f,b
 10468  002454  5173               	movf	(___fladd@a+2)& (0+255),w,b
 10469  002456  236F               	addwfc	(___fladd@b+2)& (0+255),f,b
 10470  002458  5174               	movf	(___fladd@a+3)& (0+255),w,b
 10471  00245A  2370               	addwfc	(___fladd@b+3)& (0+255),f,b
 10472  00245C                     
 10473                           ; BSR set to: 0
 10474  00245C  A170               	btfss	(___fladd@b+3)& (0+255),0,b
 10475  00245E  EF33  F012         	goto	u7401
 10476  002462  EF35  F012         	goto	u7400
 10477  002466                     u7401:
 10478  002466  EFE1  F012         	goto	l7559
 10479  00246A                     u7400:
 10480  00246A                     
 10481                           ; BSR set to: 0
 10482  00246A  A178               	btfss	___fladd@grs& (0+255),0,b
 10483  00246C  EF3A  F012         	goto	u7411
 10484  002470  EF3C  F012         	goto	u7410
 10485  002474                     u7411:
 10486  002474  EF42  F012         	goto	l7513
 10487  002478                     u7410:
 10488  002478                     
 10489                           ; BSR set to: 0
 10490  002478  90D8               	bcf	status,0,c
 10491  00247A  3178               	rrcf	___fladd@grs& (0+255),w,b
 10492  00247C  0901               	iorlw	1
 10493  00247E  6F78               	movwf	___fladd@grs& (0+255),b
 10494  002480  EF44  F012         	goto	l7515
 10495  002484                     l7513:
 10496                           
 10497                           ; BSR set to: 0
 10498  002484  90D8               	bcf	status,0,c
 10499  002486  3378               	rrcf	___fladd@grs& (0+255),f,b
 10500  002488                     l7515:
 10501                           
 10502                           ; BSR set to: 0
 10503  002488  A16D               	btfss	___fladd@b& (0+255),0,b
 10504  00248A  EF49  F012         	goto	u7421
 10505  00248E  EF4B  F012         	goto	u7420
 10506  002492                     u7421:
 10507  002492  EF4C  F012         	goto	l7519
 10508  002496                     u7420:
 10509  002496                     
 10510                           ; BSR set to: 0
 10511  002496  8F78               	bsf	___fladd@grs& (0+255),7,b
 10512  002498                     l7519:
 10513                           
 10514                           ; BSR set to: 0
 10515  002498  3570               	rlcf	(___fladd@b+3)& (0+255),w,b
 10516  00249A  3370               	rrcf	(___fladd@b+3)& (0+255),f,b
 10517  00249C  336F               	rrcf	(___fladd@b+2)& (0+255),f,b
 10518  00249E  336E               	rrcf	(___fladd@b+1)& (0+255),f,b
 10519  0024A0  336D               	rrcf	___fladd@b& (0+255),f,b
 10520  0024A2                     
 10521                           ; BSR set to: 0
 10522  0024A2  2B77               	incf	___fladd@bexp& (0+255),f,b
 10523  0024A4  EFE1  F012         	goto	l7559
 10524  0024A8                     l7523:
 10525                           
 10526                           ; BSR set to: 0
 10527  0024A8  5171               	movf	___fladd@a& (0+255),w,b
 10528  0024AA  5D6D               	subwf	___fladd@b& (0+255),w,b
 10529  0024AC  5172               	movf	(___fladd@a+1)& (0+255),w,b
 10530  0024AE  596E               	subwfb	(___fladd@b+1)& (0+255),w,b
 10531  0024B0  5173               	movf	(___fladd@a+2)& (0+255),w,b
 10532  0024B2  596F               	subwfb	(___fladd@b+2)& (0+255),w,b
 10533  0024B4  5170               	movf	(___fladd@b+3)& (0+255),w,b
 10534  0024B6  0A80               	xorlw	128
 10535  0024B8  6E36               	movwf	??___fladd^0,c
 10536  0024BA  5174               	movf	(___fladd@a+3)& (0+255),w,b
 10537  0024BC  0A80               	xorlw	128
 10538  0024BE  5836               	subwfb	??___fladd^0,w,c
 10539  0024C0  B0D8               	btfsc	status,0,c
 10540  0024C2  EF65  F012         	goto	u7431
 10541  0024C6  EF67  F012         	goto	u7430
 10542  0024CA                     u7431:
 10543  0024CA  EF92  F012         	goto	l7533
 10544  0024CE                     u7430:
 10545  0024CE                     
 10546                           ; BSR set to: 0
 10547  0024CE  516D               	movf	___fladd@b& (0+255),w,b
 10548  0024D0  5D71               	subwf	___fladd@a& (0+255),w,b
 10549  0024D2  6E36               	movwf	??___fladd^0,c
 10550  0024D4  516E               	movf	(___fladd@b+1)& (0+255),w,b
 10551  0024D6  5972               	subwfb	(___fladd@a+1)& (0+255),w,b
 10552  0024D8  6E37               	movwf	(??___fladd+1)^0,c
 10553  0024DA  516F               	movf	(___fladd@b+2)& (0+255),w,b
 10554  0024DC  5973               	subwfb	(___fladd@a+2)& (0+255),w,b
 10555  0024DE  6E38               	movwf	(??___fladd+2)^0,c
 10556  0024E0  5170               	movf	(___fladd@b+3)& (0+255),w,b
 10557  0024E2  5974               	subwfb	(___fladd@a+3)& (0+255),w,b
 10558  0024E4  6E39               	movwf	(??___fladd+3)^0,c
 10559  0024E6  0EFF               	movlw	255
 10560  0024E8  2436               	addwf	??___fladd^0,w,c
 10561  0024EA  6F6D               	movwf	___fladd@b& (0+255),b
 10562  0024EC  0EFF               	movlw	255
 10563  0024EE  2037               	addwfc	(??___fladd+1)^0,w,c
 10564  0024F0  6F6E               	movwf	(___fladd@b+1)& (0+255),b
 10565  0024F2  0EFF               	movlw	255
 10566  0024F4  2038               	addwfc	(??___fladd+2)^0,w,c
 10567  0024F6  6F6F               	movwf	(___fladd@b+2)& (0+255),b
 10568  0024F8  0EFF               	movlw	255
 10569  0024FA  2039               	addwfc	(??___fladd+3)^0,w,c
 10570  0024FC  6F70               	movwf	(___fladd@b+3)& (0+255),b
 10571  0024FE  0E80               	movlw	128
 10572  002500  1B75               	xorwf	___fladd@signs& (0+255),f,b
 10573  002502                     
 10574                           ; BSR set to: 0
 10575  002502  6D78               	negf	___fladd@grs& (0+255),b
 10576  002504                     
 10577                           ; BSR set to: 0
 10578  002504  5178               	movf	___fladd@grs& (0+255),w,b
 10579  002506  A4D8               	btfss	status,2,c
 10580  002508  EF88  F012         	goto	u7441
 10581  00250C  EF8A  F012         	goto	u7440
 10582  002510                     u7441:
 10583  002510  EF9A  F012         	goto	l1942
 10584  002514                     u7440:
 10585  002514                     
 10586                           ; BSR set to: 0
 10587  002514  0E01               	movlw	1
 10588  002516  276D               	addwf	___fladd@b& (0+255),f,b
 10589  002518  0E00               	movlw	0
 10590  00251A  236E               	addwfc	(___fladd@b+1)& (0+255),f,b
 10591  00251C  236F               	addwfc	(___fladd@b+2)& (0+255),f,b
 10592  00251E  2370               	addwfc	(___fladd@b+3)& (0+255),f,b
 10593  002520  EF9A  F012         	goto	l1942
 10594  002524                     l7533:
 10595                           
 10596                           ; BSR set to: 0
 10597  002524  5171               	movf	___fladd@a& (0+255),w,b
 10598  002526  5F6D               	subwf	___fladd@b& (0+255),f,b
 10599  002528  5172               	movf	(___fladd@a+1)& (0+255),w,b
 10600  00252A  5B6E               	subwfb	(___fladd@b+1)& (0+255),f,b
 10601  00252C  5173               	movf	(___fladd@a+2)& (0+255),w,b
 10602  00252E  5B6F               	subwfb	(___fladd@b+2)& (0+255),f,b
 10603  002530  5174               	movf	(___fladd@a+3)& (0+255),w,b
 10604  002532  5B70               	subwfb	(___fladd@b+3)& (0+255),f,b
 10605  002534                     l1942:
 10606                           
 10607                           ; BSR set to: 0
 10608  002534  516D               	movf	___fladd@b& (0+255),w,b
 10609  002536  116E               	iorwf	(___fladd@b+1)& (0+255),w,b
 10610  002538  116F               	iorwf	(___fladd@b+2)& (0+255),w,b
 10611  00253A  1170               	iorwf	(___fladd@b+3)& (0+255),w,b
 10612  00253C  A4D8               	btfss	status,2,c
 10613  00253E  EFA3  F012         	goto	u7451
 10614  002542  EFA5  F012         	goto	u7450
 10615  002546                     u7451:
 10616  002546  EFDA  F012         	goto	l7557
 10617  00254A                     u7450:
 10618  00254A                     
 10619                           ; BSR set to: 0
 10620  00254A  5178               	movf	___fladd@grs& (0+255),w,b
 10621  00254C  A4D8               	btfss	status,2,c
 10622  00254E  EFAB  F012         	goto	u7461
 10623  002552  EFAD  F012         	goto	u7460
 10624  002556                     u7461:
 10625  002556  EFDA  F012         	goto	l7557
 10626  00255A                     u7460:
 10627  00255A                     
 10628                           ; BSR set to: 0
 10629  00255A  0E00               	movlw	0
 10630  00255C  6F6D               	movwf	?___fladd& (0+255),b
 10631  00255E  0E00               	movlw	0
 10632  002560  6F6E               	movwf	(?___fladd+1)& (0+255),b
 10633  002562  0E00               	movlw	0
 10634  002564  6F6F               	movwf	(?___fladd+2)& (0+255),b
 10635  002566  0E00               	movlw	0
 10636  002568  6F70               	movwf	(?___fladd+3)& (0+255),b
 10637  00256A  EF75  F013         	goto	l1934
 10638  00256E                     l7541:
 10639                           
 10640                           ; BSR set to: 0
 10641  00256E  90D8               	bcf	status,0,c
 10642  002570  376D               	rlcf	___fladd@b& (0+255),f,b
 10643  002572  376E               	rlcf	(___fladd@b+1)& (0+255),f,b
 10644  002574  376F               	rlcf	(___fladd@b+2)& (0+255),f,b
 10645  002576  3770               	rlcf	(___fladd@b+3)& (0+255),f,b
 10646  002578                     
 10647                           ; BSR set to: 0
 10648  002578  AF78               	btfss	___fladd@grs& (0+255),7,b
 10649  00257A  EFC1  F012         	goto	u7471
 10650  00257E  EFC3  F012         	goto	u7470
 10651  002582                     u7471:
 10652  002582  EFC4  F012         	goto	l7547
 10653  002586                     u7470:
 10654  002586                     
 10655                           ; BSR set to: 0
 10656  002586  816D               	bsf	___fladd@b& (0+255),0,b
 10657  002588                     l7547:
 10658                           
 10659                           ; BSR set to: 0
 10660  002588  A178               	btfss	___fladd@grs& (0+255),0,b
 10661  00258A  EFC9  F012         	goto	u7481
 10662  00258E  EFCB  F012         	goto	u7480
 10663  002592                     u7481:
 10664  002592  EFCF  F012         	goto	l7551
 10665  002596                     u7480:
 10666  002596                     
 10667                           ; BSR set to: 0
 10668  002596  80D8               	bsf	status,0,c
 10669  002598  3778               	rlcf	___fladd@grs& (0+255),f,b
 10670  00259A  EFD1  F012         	goto	l7553
 10671  00259E                     l7551:
 10672                           
 10673                           ; BSR set to: 0
 10674  00259E  90D8               	bcf	status,0,c
 10675  0025A0  3778               	rlcf	___fladd@grs& (0+255),f,b
 10676  0025A2                     l7553:
 10677                           
 10678                           ; BSR set to: 0
 10679  0025A2  5177               	movf	___fladd@bexp& (0+255),w,b
 10680  0025A4  B4D8               	btfsc	status,2,c
 10681  0025A6  EFD7  F012         	goto	u7491
 10682  0025AA  EFD9  F012         	goto	u7490
 10683  0025AE                     u7491:
 10684  0025AE  EFDA  F012         	goto	l7557
 10685  0025B2                     u7490:
 10686  0025B2                     
 10687                           ; BSR set to: 0
 10688  0025B2  0777               	decf	___fladd@bexp& (0+255),f,b
 10689  0025B4                     l7557:
 10690                           
 10691                           ; BSR set to: 0
 10692  0025B4  AF6F               	btfss	(___fladd@b+2)& (0+255),7,b
 10693  0025B6  EFDF  F012         	goto	u7501
 10694  0025BA  EFE1  F012         	goto	u7500
 10695  0025BE                     u7501:
 10696  0025BE  EFB7  F012         	goto	l7541
 10697  0025C2                     u7500:
 10698  0025C2                     l7559:
 10699                           
 10700                           ; BSR set to: 0
 10701  0025C2  0E00               	movlw	0
 10702  0025C4  6F76               	movwf	___fladd@aexp& (0+255),b
 10703  0025C6                     
 10704                           ; BSR set to: 0
 10705  0025C6  AF78               	btfss	___fladd@grs& (0+255),7,b
 10706  0025C8  EFE8  F012         	goto	u7511
 10707  0025CC  EFEA  F012         	goto	u7510
 10708  0025D0                     u7511:
 10709  0025D0  EF02  F013         	goto	l1951
 10710  0025D4                     u7510:
 10711  0025D4                     
 10712                           ; BSR set to: 0
 10713  0025D4  C078  F036         	movff	___fladd@grs,??___fladd
 10714  0025D8  0E7F               	movlw	127
 10715  0025DA  1636               	andwf	??___fladd^0,f,c
 10716  0025DC  B4D8               	btfsc	status,2,c
 10717  0025DE  EFF3  F012         	goto	u7521
 10718  0025E2  EFF5  F012         	goto	u7520
 10719  0025E6                     u7521:
 10720  0025E6  EFF9  F012         	goto	l1952
 10721  0025EA                     u7520:
 10722  0025EA                     l7565:
 10723                           
 10724                           ; BSR set to: 0
 10725  0025EA  0E01               	movlw	1
 10726  0025EC  6F76               	movwf	___fladd@aexp& (0+255),b
 10727  0025EE  EF02  F013         	goto	l1951
 10728  0025F2                     l1952:
 10729                           
 10730                           ; BSR set to: 0
 10731  0025F2  A16D               	btfss	___fladd@b& (0+255),0,b
 10732  0025F4  EFFE  F012         	goto	u7531
 10733  0025F8  EF00  F013         	goto	u7530
 10734  0025FC                     u7531:
 10735  0025FC  EF02  F013         	goto	l1951
 10736  002600                     u7530:
 10737  002600  EFF5  F012         	goto	l7565
 10738  002604                     l1951:
 10739                           
 10740                           ; BSR set to: 0
 10741  002604  5176               	movf	___fladd@aexp& (0+255),w,b
 10742  002606  B4D8               	btfsc	status,2,c
 10743  002608  EF08  F013         	goto	u7541
 10744  00260C  EF0A  F013         	goto	u7540
 10745  002610                     u7541:
 10746  002610  EF35  F013         	goto	l7577
 10747  002614                     u7540:
 10748  002614                     
 10749                           ; BSR set to: 0
 10750  002614  0E01               	movlw	1
 10751  002616  276D               	addwf	___fladd@b& (0+255),f,b
 10752  002618  0E00               	movlw	0
 10753  00261A  236E               	addwfc	(___fladd@b+1)& (0+255),f,b
 10754  00261C  236F               	addwfc	(___fladd@b+2)& (0+255),f,b
 10755  00261E  2370               	addwfc	(___fladd@b+3)& (0+255),f,b
 10756  002620                     
 10757                           ; BSR set to: 0
 10758  002620  A170               	btfss	(___fladd@b+3)& (0+255),0,b
 10759  002622  EF15  F013         	goto	u7551
 10760  002626  EF17  F013         	goto	u7550
 10761  00262A                     u7551:
 10762  00262A  EF35  F013         	goto	l7577
 10763  00262E                     u7550:
 10764  00262E                     
 10765                           ; BSR set to: 0
 10766  00262E  C06D  F036         	movff	___fladd@b,??___fladd
 10767  002632  C06E  F037         	movff	___fladd@b+1,??___fladd+1
 10768  002636  C06F  F038         	movff	___fladd@b+2,??___fladd+2
 10769  00263A  C070  F039         	movff	___fladd@b+3,??___fladd+3
 10770  00263E  3439               	rlcf	(??___fladd+3)^0,w,c
 10771  002640  3239               	rrcf	(??___fladd+3)^0,f,c
 10772  002642  3238               	rrcf	(??___fladd+2)^0,f,c
 10773  002644  3237               	rrcf	(??___fladd+1)^0,f,c
 10774  002646  3236               	rrcf	??___fladd^0,f,c
 10775  002648  C036  F06D         	movff	??___fladd,___fladd@b
 10776  00264C  C037  F06E         	movff	??___fladd+1,___fladd@b+1
 10777  002650  C038  F06F         	movff	??___fladd+2,___fladd@b+2
 10778  002654  C039  F070         	movff	??___fladd+3,___fladd@b+3
 10779  002658  2977               	incf	___fladd@bexp& (0+255),w,b
 10780  00265A  B4D8               	btfsc	status,2,c
 10781  00265C  EF32  F013         	goto	u7561
 10782  002660  EF34  F013         	goto	u7560
 10783  002664                     u7561:
 10784  002664  EF35  F013         	goto	l7577
 10785  002668                     u7560:
 10786  002668                     
 10787                           ; BSR set to: 0
 10788  002668  2B77               	incf	___fladd@bexp& (0+255),f,b
 10789  00266A                     l7577:
 10790                           
 10791                           ; BSR set to: 0
 10792  00266A  2977               	incf	___fladd@bexp& (0+255),w,b
 10793  00266C  B4D8               	btfsc	status,2,c
 10794  00266E  EF3B  F013         	goto	u7571
 10795  002672  EF3D  F013         	goto	u7570
 10796  002676                     u7571:
 10797  002676  EF45  F013         	goto	l7581
 10798  00267A                     u7570:
 10799  00267A                     
 10800                           ; BSR set to: 0
 10801  00267A  5177               	movf	___fladd@bexp& (0+255),w,b
 10802  00267C  A4D8               	btfss	status,2,c
 10803  00267E  EF43  F013         	goto	u7581
 10804  002682  EF45  F013         	goto	u7580
 10805  002686                     u7581:
 10806  002686  EF57  F013         	goto	l7585
 10807  00268A                     u7580:
 10808  00268A                     l7581:
 10809                           
 10810                           ; BSR set to: 0
 10811  00268A  0E00               	movlw	0
 10812  00268C  6F6D               	movwf	___fladd@b& (0+255),b
 10813  00268E  0E00               	movlw	0
 10814  002690  6F6E               	movwf	(___fladd@b+1)& (0+255),b
 10815  002692  0E00               	movlw	0
 10816  002694  6F6F               	movwf	(___fladd@b+2)& (0+255),b
 10817  002696  0E00               	movlw	0
 10818  002698  6F70               	movwf	(___fladd@b+3)& (0+255),b
 10819  00269A  5177               	movf	___fladd@bexp& (0+255),w,b
 10820  00269C  A4D8               	btfss	status,2,c
 10821  00269E  EF53  F013         	goto	u7591
 10822  0026A2  EF55  F013         	goto	u7590
 10823  0026A6                     u7591:
 10824  0026A6  EF57  F013         	goto	l7585
 10825  0026AA                     u7590:
 10826  0026AA                     
 10827                           ; BSR set to: 0
 10828  0026AA  0E00               	movlw	0
 10829  0026AC  6F75               	movwf	___fladd@signs& (0+255),b
 10830  0026AE                     l7585:
 10831                           
 10832                           ; BSR set to: 0
 10833  0026AE  A177               	btfss	___fladd@bexp& (0+255),0,b
 10834  0026B0  EF5C  F013         	goto	u7601
 10835  0026B4  EF5E  F013         	goto	u7600
 10836  0026B8                     u7601:
 10837  0026B8  EF61  F013         	goto	l7589
 10838  0026BC                     u7600:
 10839  0026BC                     
 10840                           ; BSR set to: 0
 10841  0026BC  8F6F               	bsf	(___fladd@b+2)& (0+255),7,b
 10842  0026BE  EF62  F013         	goto	l7591
 10843  0026C2                     l7589:
 10844                           
 10845                           ; BSR set to: 0
 10846  0026C2  9F6F               	bcf	(___fladd@b+2)& (0+255),7,b
 10847  0026C4                     l7591:
 10848                           
 10849                           ; BSR set to: 0
 10850  0026C4  90D8               	bcf	status,0,c
 10851  0026C6  3177               	rrcf	___fladd@bexp& (0+255),w,b
 10852  0026C8  6F70               	movwf	(___fladd@b+3)& (0+255),b
 10853  0026CA                     
 10854                           ; BSR set to: 0
 10855  0026CA  AF75               	btfss	___fladd@signs& (0+255),7,b
 10856  0026CC  EF6A  F013         	goto	u7611
 10857  0026D0  EF6C  F013         	goto	u7610
 10858  0026D4                     u7611:
 10859  0026D4  EF6D  F013         	goto	l7597
 10860  0026D8                     u7610:
 10861  0026D8                     
 10862                           ; BSR set to: 0
 10863  0026D8  8F70               	bsf	(___fladd@b+3)& (0+255),7,b
 10864  0026DA                     l7597:
 10865                           
 10866                           ; BSR set to: 0
 10867  0026DA  C06D  F06D         	movff	___fladd@b,?___fladd
 10868  0026DE  C06E  F06E         	movff	___fladd@b+1,?___fladd+1
 10869  0026E2  C06F  F06F         	movff	___fladd@b+2,?___fladd+2
 10870  0026E6  C070  F070         	movff	___fladd@b+3,?___fladd+3
 10871  0026EA                     l1934:
 10872                           
 10873                           ; BSR set to: 0
 10874  0026EA  0012               	return		;funcret
 10875  0026EC                     __end_of___fladd:
 10876                           	callstack 0
 10877                           
 10878 ;; *************** function _calcMotorPow *****************
 10879 ;; Defined at:
 10880 ;;		line 336 in file "main.c"
 10881 ;; Parameters:    Size  Location     Type
 10882 ;;		None
 10883 ;; Auto vars:     Size  Location     Type
 10884 ;;  oldSpeedDelt    2   39[BANK0 ] short 
 10885 ;;  setSpeedDelt    2   37[BANK0 ] short 
 10886 ;;  addMPow         1   41[BANK0 ] char 
 10887 ;; Return value:  Size  Location     Type
 10888 ;;                  1    wreg      void 
 10889 ;; Registers used:
 10890 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10891 ;; Tracked objects:
 10892 ;;		On entry : 0/0
 10893 ;;		On exit  : 0/0
 10894 ;;		Unchanged: 0/0
 10895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10897 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10898 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10899 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10900 ;;Total ram usage:        7 bytes
 10901 ;; Hardware stack levels used: 1
 10902 ;; Hardware stack levels required when called: 10
 10903 ;; This function calls:
 10904 ;;		___awdiv
 10905 ;;		___flmul
 10906 ;;		___fltol
 10907 ;;		___xxtofl
 10908 ;;		_actSpeed
 10909 ;;		_setMotor
 10910 ;; This function is called by:
 10911 ;;		_loop
 10912 ;; This function uses a non-reentrant model
 10913 ;;
 10914                           
 10915                           	psect	text40
 10916  0041DC                     __ptext40:
 10917                           	callstack 0
 10918  0041DC                     _calcMotorPow:
 10919                           	callstack 19
 10920  0041DC                     
 10921                           ;main.c: 337:     currentSpeed = actSpeed();
 10922  0041DC  EC7B  F028         	call	_actSpeed	;wreg free
 10923  0041E0  C022  F0E9         	movff	?_actSpeed,_currentSpeed
 10924  0041E4  C023  F0EA         	movff	?_actSpeed+1,_currentSpeed+1
 10925  0041E8                     
 10926                           ;main.c: 339:     int16_t setSpeedDelta = setSpeed - currentSpeed;
 10927  0041E8  0100               	movlb	0	; () banked
 10928  0041EA  51E9               	movf	_currentSpeed& (0+255),w,b
 10929  0041EC  5DEB               	subwf	_setSpeed& (0+255),w,b
 10930  0041EE  6F85               	movwf	calcMotorPow@setSpeedDelta& (0+255),b
 10931  0041F0  51EA               	movf	(_currentSpeed+1)& (0+255),w,b
 10932  0041F2  59EC               	subwfb	(_setSpeed+1)& (0+255),w,b
 10933  0041F4  6F86               	movwf	(calcMotorPow@setSpeedDelta+1)& (0+255),b
 10934  0041F6                     
 10935                           ; BSR set to: 0
 10936                           ;main.c: 340:     int16_t oldSpeedDelta = currentSpeed - oldSpeed;
 10937  0041F6  0101               	movlb	1	; () banked
 10938  0041F8  512C               	movf	_oldSpeed& (0+255),w,b
 10939  0041FA  0100               	movlb	0	; () banked
 10940  0041FC  5DE9               	subwf	_currentSpeed& (0+255),w,b
 10941  0041FE  6F87               	movwf	calcMotorPow@oldSpeedDelta& (0+255),b
 10942  004200  0101               	movlb	1	; () banked
 10943  004202  512D               	movf	(_oldSpeed+1)& (0+255),w,b
 10944  004204  0100               	movlb	0	; () banked
 10945  004206  59EA               	subwfb	(_currentSpeed+1)& (0+255),w,b
 10946  004208  6F88               	movwf	(calcMotorPow@oldSpeedDelta+1)& (0+255),b
 10947  00420A                     
 10948                           ; BSR set to: 0
 10949                           ;main.c: 346:     addMPow = (int8_t) ((0.020) * (setSpeedDelta - (oldSpeedDelta / (2))))
      +                          ;
 10950  00420A  0E0A               	movlw	10
 10951  00420C  6E2E               	movwf	___flmul@a^0,c
 10952  00420E  0ED7               	movlw	215
 10953  004210  6E2F               	movwf	(___flmul@a+1)^0,c
 10954  004212  0EA3               	movlw	163
 10955  004214  6E30               	movwf	(___flmul@a+2)^0,c
 10956  004216  0E3C               	movlw	60
 10957  004218  6E31               	movwf	(___flmul@a+3)^0,c
 10958  00421A  0E00               	movlw	0
 10959  00421C  6E17               	movwf	(___awdiv@divisor+1)^0,c
 10960  00421E  0E02               	movlw	2
 10961  004220  6E16               	movwf	___awdiv@divisor^0,c
 10962  004222  C087  F014         	movff	calcMotorPow@oldSpeedDelta,___awdiv@dividend
 10963  004226  C088  F015         	movff	calcMotorPow@oldSpeedDelta+1,___awdiv@dividend+1
 10964  00422A  EC0E  F026         	call	___awdiv	;wreg free
 10965  00422E  C085  F083         	movff	calcMotorPow@setSpeedDelta,??_calcMotorPow
 10966  004232  C086  F084         	movff	calcMotorPow@setSpeedDelta+1,??_calcMotorPow+1
 10967  004236  5014               	movf	?___awdiv^0,w,c
 10968  004238  0100               	movlb	0	; () banked
 10969  00423A  5F83               	subwf	??_calcMotorPow& (0+255),f,b
 10970  00423C  5015               	movf	(?___awdiv+1)^0,w,c
 10971  00423E  5B84               	subwfb	(??_calcMotorPow+1)& (0+255),f,b
 10972  004240  C083  F01C         	movff	??_calcMotorPow,___xxtofl@val
 10973  004244  C084  F01D         	movff	??_calcMotorPow+1,___xxtofl@val+1
 10974  004248  0E00               	movlw	0
 10975  00424A  BE1D               	btfsc	(___xxtofl@val+1)^0,7,c
 10976  00424C  0EFF               	movlw	-1
 10977  00424E  6E1E               	movwf	(___xxtofl@val+2)^0,c
 10978  004250  6E1F               	movwf	(___xxtofl@val+3)^0,c
 10979  004252  0E01               	movlw	1
 10980  004254  EC0D  F01D         	call	___xxtofl
 10981  004258  C01C  F02A         	movff	?___xxtofl,___flmul@b
 10982  00425C  C01D  F02B         	movff	?___xxtofl+1,___flmul@b+1
 10983  004260  C01E  F02C         	movff	?___xxtofl+2,___flmul@b+2
 10984  004264  C01F  F02D         	movff	?___xxtofl+3,___flmul@b+3
 10985  004268  EC76  F013         	call	___flmul	;wreg free
 10986  00426C  C02A  F079         	movff	?___flmul,___fltol@f1
 10987  004270  C02B  F07A         	movff	?___flmul+1,___fltol@f1+1
 10988  004274  C02C  F07B         	movff	?___flmul+2,___fltol@f1+2
 10989  004278  C02D  F07C         	movff	?___flmul+3,___fltol@f1+3
 10990  00427C  ECB5  F022         	call	___fltol	;wreg free
 10991  004280  0100               	movlb	0	; () banked
 10992  004282  5179               	movf	?___fltol& (0+255),w,b
 10993  004284  6F89               	movwf	calcMotorPow@addMPow& (0+255),b
 10994  004286                     
 10995                           ; BSR set to: 0
 10996                           ;main.c: 348:     if (addMPow > (5)) {
 10997  004286  5189               	movf	calcMotorPow@addMPow& (0+255),w,b
 10998  004288  0A80               	xorlw	128
 10999  00428A  0F7A               	addlw	-134
 11000  00428C  A0D8               	btfss	status,0,c
 11001  00428E  EF4B  F021         	goto	u10161
 11002  004292  EF4D  F021         	goto	u10160
 11003  004296                     u10161:
 11004  004296  EF51  F021         	goto	l9085
 11005  00429A                     u10160:
 11006  00429A                     
 11007                           ; BSR set to: 0
 11008                           ;main.c: 349:         addMPow = (5);
 11009  00429A  0E05               	movlw	5
 11010  00429C  6F89               	movwf	calcMotorPow@addMPow& (0+255),b
 11011                           
 11012                           ;main.c: 350:     } else if (addMPow < -(5)) {
 11013  00429E  EF5D  F021         	goto	l9089
 11014  0042A2                     l9085:
 11015                           
 11016                           ; BSR set to: 0
 11017  0042A2  5189               	movf	calcMotorPow@addMPow& (0+255),w,b
 11018  0042A4  0A80               	xorlw	128
 11019  0042A6  0F85               	addlw	133
 11020  0042A8  B0D8               	btfsc	status,0,c
 11021  0042AA  EF59  F021         	goto	u10171
 11022  0042AE  EF5B  F021         	goto	u10170
 11023  0042B2                     u10171:
 11024  0042B2  EF5D  F021         	goto	l9089
 11025  0042B6                     u10170:
 11026  0042B6                     
 11027                           ; BSR set to: 0
 11028                           ;main.c: 351:         addMPow = -(5);
 11029  0042B6  0EFB               	movlw	251
 11030  0042B8  6F89               	movwf	calcMotorPow@addMPow& (0+255),b
 11031  0042BA                     l9089:
 11032                           
 11033                           ; BSR set to: 0
 11034                           ;main.c: 354:     actMotorPow += addMPow;
 11035  0042BA  5189               	movf	calcMotorPow@addMPow& (0+255),w,b
 11036  0042BC  27E7               	addwf	_actMotorPow& (0+255),f,b
 11037  0042BE  0E00               	movlw	0
 11038  0042C0  BF89               	btfsc	calcMotorPow@addMPow& (0+255),7,b
 11039  0042C2  0EFF               	movlw	255
 11040  0042C4  23E8               	addwfc	(_actMotorPow+1)& (0+255),f,b
 11041  0042C6                     
 11042                           ; BSR set to: 0
 11043                           ;main.c: 356:     if (actMotorPow > (700)) {
 11044  0042C6  BFE8               	btfsc	(_actMotorPow+1)& (0+255),7,b
 11045  0042C8  EF6F  F021         	goto	u10181
 11046  0042CC  0EBD               	movlw	189
 11047  0042CE  5DE7               	subwf	_actMotorPow& (0+255),w,b
 11048  0042D0  0E02               	movlw	2
 11049  0042D2  59E8               	subwfb	(_actMotorPow+1)& (0+255),w,b
 11050  0042D4  A0D8               	btfss	status,0,c
 11051  0042D6  EF6F  F021         	goto	u10181
 11052  0042DA  EF71  F021         	goto	u10180
 11053  0042DE                     u10181:
 11054  0042DE  EF77  F021         	goto	l9095
 11055  0042E2                     u10180:
 11056  0042E2                     
 11057                           ; BSR set to: 0
 11058                           ;main.c: 357:         actMotorPow = (700);
 11059  0042E2  0E02               	movlw	2
 11060  0042E4  6FE8               	movwf	(_actMotorPow+1)& (0+255),b
 11061  0042E6  0EBC               	movlw	188
 11062  0042E8  6FE7               	movwf	_actMotorPow& (0+255),b
 11063                           
 11064                           ;main.c: 358:     } else if (actMotorPow < (-400)) {
 11065  0042EA  EF89  F021         	goto	l9099
 11066  0042EE                     l9095:
 11067                           
 11068                           ; BSR set to: 0
 11069  0042EE  AFE8               	btfss	(_actMotorPow+1)& (0+255),7,b
 11070  0042F0  EF83  F021         	goto	u10191
 11071  0042F4  0E70               	movlw	112
 11072  0042F6  5DE7               	subwf	_actMotorPow& (0+255),w,b
 11073  0042F8  0EFE               	movlw	254
 11074  0042FA  59E8               	subwfb	(_actMotorPow+1)& (0+255),w,b
 11075  0042FC  B0D8               	btfsc	status,0,c
 11076  0042FE  EF83  F021         	goto	u10191
 11077  004302  EF85  F021         	goto	u10190
 11078  004306                     u10191:
 11079  004306  EF89  F021         	goto	l9099
 11080  00430A                     u10190:
 11081  00430A                     
 11082                           ; BSR set to: 0
 11083                           ;main.c: 359:         actMotorPow = (-400);
 11084  00430A  0EFE               	movlw	254
 11085  00430C  6FE8               	movwf	(_actMotorPow+1)& (0+255),b
 11086  00430E  0E70               	movlw	112
 11087  004310  6FE7               	movwf	_actMotorPow& (0+255),b
 11088  004312                     l9099:
 11089                           
 11090                           ; BSR set to: 0
 11091                           ;main.c: 362:     setMotor(actMotorPow);
 11092  004312  C0E7  F018         	movff	_actMotorPow,setMotor@motorPower
 11093  004316  C0E8  F019         	movff	_actMotorPow+1,setMotor@motorPower+1
 11094  00431A  EC38  F025         	call	_setMotor	;wreg free
 11095  00431E                     
 11096                           ;main.c: 364:     oldSpeed = currentSpeed;
 11097  00431E  C0E9  F12C         	movff	_currentSpeed,_oldSpeed
 11098  004322  C0EA  F12D         	movff	_currentSpeed+1,_oldSpeed+1
 11099  004326  0012               	return		;funcret
 11100  004328                     __end_of_calcMotorPow:
 11101                           	callstack 0
 11102                           
 11103 ;; *************** function _setMotor *****************
 11104 ;; Defined at:
 11105 ;;		line 367 in file "main.c"
 11106 ;; Parameters:    Size  Location     Type
 11107 ;;  motorPower      2   23[COMRAM] short 
 11108 ;; Auto vars:     Size  Location     Type
 11109 ;;		None
 11110 ;; Return value:  Size  Location     Type
 11111 ;;                  1    wreg      void 
 11112 ;; Registers used:
 11113 ;;		wreg, status,2, status,0, cstack
 11114 ;; Tracked objects:
 11115 ;;		On entry : 0/0
 11116 ;;		On exit  : 0/0
 11117 ;;		Unchanged: 0/0
 11118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11119 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11121 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11122 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11123 ;;Total ram usage:        4 bytes
 11124 ;; Hardware stack levels used: 1
 11125 ;; Hardware stack levels required when called: 9
 11126 ;; This function calls:
 11127 ;;		_PWM7_LoadDutyValue
 11128 ;;		_PWM8_LoadDutyValue
 11129 ;; This function is called by:
 11130 ;;		_loop
 11131 ;;		_startAccell
 11132 ;;		_calcMotorPow
 11133 ;; This function uses a non-reentrant model
 11134 ;;
 11135                           
 11136                           	psect	text41
 11137  004A70                     __ptext41:
 11138                           	callstack 0
 11139  004A70                     _setMotor:
 11140                           	callstack 19
 11141  004A70                     
 11142                           ;main.c: 368:     if (motorPower >= (40)) {
 11143  004A70  BE19               	btfsc	(setMotor@motorPower+1)^0,7,c
 11144  004A72  EF44  F025         	goto	u9701
 11145  004A76  5019               	movf	(setMotor@motorPower+1)^0,w,c
 11146  004A78  E109               	bnz	u9700
 11147  004A7A  0E28               	movlw	40
 11148  004A7C  5C18               	subwf	setMotor@motorPower^0,w,c
 11149  004A7E  A0D8               	btfss	status,0,c
 11150  004A80  EF44  F025         	goto	u9701
 11151  004A84  EF46  F025         	goto	u9700
 11152  004A88                     u9701:
 11153  004A88  EF66  F025         	goto	l8773
 11154  004A8C                     u9700:
 11155  004A8C                     
 11156                           ;main.c: 369:         if (motorPower > (700)) {
 11157  004A8C  BE19               	btfsc	(setMotor@motorPower+1)^0,7,c
 11158  004A8E  EF52  F025         	goto	u9711
 11159  004A92  0EBD               	movlw	189
 11160  004A94  5C18               	subwf	setMotor@motorPower^0,w,c
 11161  004A96  0E02               	movlw	2
 11162  004A98  5819               	subwfb	(setMotor@motorPower+1)^0,w,c
 11163  004A9A  A0D8               	btfss	status,0,c
 11164  004A9C  EF52  F025         	goto	u9711
 11165  004AA0  EF54  F025         	goto	u9710
 11166  004AA4                     u9711:
 11167  004AA4  EF58  F025         	goto	l8769
 11168  004AA8                     u9710:
 11169  004AA8                     
 11170                           ;main.c: 370:             motorPower = (700);
 11171  004AA8  0E02               	movlw	2
 11172  004AAA  6E19               	movwf	(setMotor@motorPower+1)^0,c
 11173  004AAC  0EBC               	movlw	188
 11174  004AAE  6E18               	movwf	setMotor@motorPower^0,c
 11175  004AB0                     l8769:
 11176                           
 11177                           ;main.c: 372:         PWM7_LoadDutyValue((uint16_t) (motorPower));
 11178  004AB0  C018  F014         	movff	setMotor@motorPower,PWM7_LoadDutyValue@dutyValue
 11179  004AB4  C019  F015         	movff	setMotor@motorPower+1,PWM7_LoadDutyValue@dutyValue+1
 11180  004AB8  EC98  F02C         	call	_PWM7_LoadDutyValue	;wreg free
 11181  004ABC                     
 11182                           ;main.c: 373:         PWM8_LoadDutyValue(0);
 11183  004ABC  0E00               	movlw	0
 11184  004ABE  6E15               	movwf	(PWM8_LoadDutyValue@dutyValue+1)^0,c
 11185  004AC0  0E00               	movlw	0
 11186  004AC2  6E14               	movwf	PWM8_LoadDutyValue@dutyValue^0,c
 11187  004AC4  EC7E  F02C         	call	_PWM8_LoadDutyValue	;wreg free
 11188                           
 11189                           ;main.c: 374:     } else if (motorPower <= -(40)) {
 11190  004AC8  EFA8  F025         	goto	l1377
 11191  004ACC                     l8773:
 11192  004ACC  AE19               	btfss	(setMotor@motorPower+1)^0,7,c
 11193  004ACE  EF72  F025         	goto	u9721
 11194  004AD2  0ED9               	movlw	217
 11195  004AD4  5C18               	subwf	setMotor@motorPower^0,w,c
 11196  004AD6  0EFF               	movlw	255
 11197  004AD8  5819               	subwfb	(setMotor@motorPower+1)^0,w,c
 11198  004ADA  B0D8               	btfsc	status,0,c
 11199  004ADC  EF72  F025         	goto	u9721
 11200  004AE0  EF74  F025         	goto	u9720
 11201  004AE4                     u9721:
 11202  004AE4  EF9C  F025         	goto	l8783
 11203  004AE8                     u9720:
 11204  004AE8                     
 11205                           ;main.c: 375:         if (motorPower < (-400)) {
 11206  004AE8  AE19               	btfss	(setMotor@motorPower+1)^0,7,c
 11207  004AEA  EF80  F025         	goto	u9731
 11208  004AEE  0E70               	movlw	112
 11209  004AF0  5C18               	subwf	setMotor@motorPower^0,w,c
 11210  004AF2  0EFE               	movlw	254
 11211  004AF4  5819               	subwfb	(setMotor@motorPower+1)^0,w,c
 11212  004AF6  B0D8               	btfsc	status,0,c
 11213  004AF8  EF80  F025         	goto	u9731
 11214  004AFC  EF82  F025         	goto	u9730
 11215  004B00                     u9731:
 11216  004B00  EF86  F025         	goto	l8779
 11217  004B04                     u9730:
 11218  004B04                     
 11219                           ;main.c: 376:             motorPower = (-400);
 11220  004B04  0EFE               	movlw	254
 11221  004B06  6E19               	movwf	(setMotor@motorPower+1)^0,c
 11222  004B08  0E70               	movlw	112
 11223  004B0A  6E18               	movwf	setMotor@motorPower^0,c
 11224  004B0C                     l8779:
 11225                           
 11226                           ;main.c: 378:         PWM7_LoadDutyValue(0);
 11227  004B0C  0E00               	movlw	0
 11228  004B0E  6E15               	movwf	(PWM7_LoadDutyValue@dutyValue+1)^0,c
 11229  004B10  0E00               	movlw	0
 11230  004B12  6E14               	movwf	PWM7_LoadDutyValue@dutyValue^0,c
 11231  004B14  EC98  F02C         	call	_PWM7_LoadDutyValue	;wreg free
 11232  004B18                     
 11233                           ;main.c: 379:         PWM8_LoadDutyValue((uint16_t) (-motorPower));
 11234  004B18  C018  F01A         	movff	setMotor@motorPower,??_setMotor
 11235  004B1C  C019  F01B         	movff	setMotor@motorPower+1,??_setMotor+1
 11236  004B20  1E1A               	comf	??_setMotor^0,f,c
 11237  004B22  1E1B               	comf	(??_setMotor+1)^0,f,c
 11238  004B24  4A1A               	infsnz	??_setMotor^0,f,c
 11239  004B26  2A1B               	incf	(??_setMotor+1)^0,f,c
 11240  004B28  C01A  F014         	movff	??_setMotor,PWM8_LoadDutyValue@dutyValue
 11241  004B2C  C01B  F015         	movff	??_setMotor+1,PWM8_LoadDutyValue@dutyValue+1
 11242  004B30  EC7E  F02C         	call	_PWM8_LoadDutyValue	;wreg free
 11243                           
 11244                           ;main.c: 380:     } else {
 11245  004B34  EFA8  F025         	goto	l1377
 11246  004B38                     l8783:
 11247                           
 11248                           ;main.c: 382:         PWM7_LoadDutyValue(0);
 11249  004B38  0E00               	movlw	0
 11250  004B3A  6E15               	movwf	(PWM7_LoadDutyValue@dutyValue+1)^0,c
 11251  004B3C  0E00               	movlw	0
 11252  004B3E  6E14               	movwf	PWM7_LoadDutyValue@dutyValue^0,c
 11253  004B40  EC98  F02C         	call	_PWM7_LoadDutyValue	;wreg free
 11254                           
 11255                           ;main.c: 383:         PWM8_LoadDutyValue(0);
 11256  004B44  0E00               	movlw	0
 11257  004B46  6E15               	movwf	(PWM8_LoadDutyValue@dutyValue+1)^0,c
 11258  004B48  0E00               	movlw	0
 11259  004B4A  6E14               	movwf	PWM8_LoadDutyValue@dutyValue^0,c
 11260  004B4C  EC7E  F02C         	call	_PWM8_LoadDutyValue	;wreg free
 11261  004B50                     l1377:
 11262  004B50  0012               	return		;funcret
 11263  004B52                     __end_of_setMotor:
 11264                           	callstack 0
 11265                           
 11266 ;; *************** function _PWM8_LoadDutyValue *****************
 11267 ;; Defined at:
 11268 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 11269 ;; Parameters:    Size  Location     Type
 11270 ;;  dutyValue       2   19[COMRAM] unsigned short 
 11271 ;; Auto vars:     Size  Location     Type
 11272 ;;		None
 11273 ;; Return value:  Size  Location     Type
 11274 ;;                  1    wreg      void 
 11275 ;; Registers used:
 11276 ;;		wreg, status,2, status,0
 11277 ;; Tracked objects:
 11278 ;;		On entry : 0/0
 11279 ;;		On exit  : 0/0
 11280 ;;		Unchanged: 0/0
 11281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11282 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11284 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11285 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11286 ;;Total ram usage:        4 bytes
 11287 ;; Hardware stack levels used: 1
 11288 ;; Hardware stack levels required when called: 8
 11289 ;; This function calls:
 11290 ;;		Nothing
 11291 ;; This function is called by:
 11292 ;;		_setMotor
 11293 ;; This function uses a non-reentrant model
 11294 ;;
 11295                           
 11296                           	psect	text42
 11297  0058FC                     __ptext42:
 11298                           	callstack 0
 11299  0058FC                     _PWM8_LoadDutyValue:
 11300                           	callstack 19
 11301  0058FC                     
 11302                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 11303  0058FC  C014  F016         	movff	PWM8_LoadDutyValue@dutyValue,??_PWM8_LoadDutyValue
 11304  005900  C015  F017         	movff	PWM8_LoadDutyValue@dutyValue+1,??_PWM8_LoadDutyValue+1
 11305  005904  90D8               	bcf	status,0,c
 11306  005906  3217               	rrcf	(??_PWM8_LoadDutyValue+1)^0,f,c
 11307  005908  3216               	rrcf	??_PWM8_LoadDutyValue^0,f,c
 11308  00590A  90D8               	bcf	status,0,c
 11309  00590C  3217               	rrcf	(??_PWM8_LoadDutyValue+1)^0,f,c
 11310  00590E  3216               	rrcf	??_PWM8_LoadDutyValue^0,f,c
 11311  005910  5016               	movf	??_PWM8_LoadDutyValue^0,w,c
 11312  005912  6E61               	movwf	97,c	;volatile
 11313                           
 11314                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 11315  005914  C014  F016         	movff	PWM8_LoadDutyValue@dutyValue,??_PWM8_LoadDutyValue
 11316  005918  0E03               	movlw	3
 11317  00591A  1616               	andwf	??_PWM8_LoadDutyValue^0,f,c
 11318  00591C  0E06               	movlw	6
 11319  00591E  6E17               	movwf	(??_PWM8_LoadDutyValue+1)^0,c
 11320  005920                     u9645:
 11321  005920  90D8               	bcf	status,0,c
 11322  005922  3616               	rlcf	??_PWM8_LoadDutyValue^0,f,c
 11323  005924  2E17               	decfsz	(??_PWM8_LoadDutyValue+1)^0,f,c
 11324  005926  EF90  F02C         	goto	u9645
 11325  00592A  5016               	movf	??_PWM8_LoadDutyValue^0,w,c
 11326  00592C  6E60               	movwf	96,c	;volatile
 11327  00592E  0012               	return		;funcret
 11328  005930                     __end_of_PWM8_LoadDutyValue:
 11329                           	callstack 0
 11330                           
 11331 ;; *************** function _PWM7_LoadDutyValue *****************
 11332 ;; Defined at:
 11333 ;;		line 74 in file "mcc_generated_files/pwm7.c"
 11334 ;; Parameters:    Size  Location     Type
 11335 ;;  dutyValue       2   19[COMRAM] unsigned short 
 11336 ;; Auto vars:     Size  Location     Type
 11337 ;;		None
 11338 ;; Return value:  Size  Location     Type
 11339 ;;                  1    wreg      void 
 11340 ;; Registers used:
 11341 ;;		wreg, status,2, status,0
 11342 ;; Tracked objects:
 11343 ;;		On entry : 0/0
 11344 ;;		On exit  : 0/0
 11345 ;;		Unchanged: 0/0
 11346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11347 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11349 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11350 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11351 ;;Total ram usage:        4 bytes
 11352 ;; Hardware stack levels used: 1
 11353 ;; Hardware stack levels required when called: 8
 11354 ;; This function calls:
 11355 ;;		Nothing
 11356 ;; This function is called by:
 11357 ;;		_setMotor
 11358 ;; This function uses a non-reentrant model
 11359 ;;
 11360                           
 11361                           	psect	text43
 11362  005930                     __ptext43:
 11363                           	callstack 0
 11364  005930                     _PWM7_LoadDutyValue:
 11365                           	callstack 19
 11366  005930                     
 11367                           ;mcc_generated_files/pwm7.c: 74:  void PWM7_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm7.c: 75:  {;mcc_generated_files/pwm7.c: 77:      PWM7DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 11368  005930  C014  F016         	movff	PWM7_LoadDutyValue@dutyValue,??_PWM7_LoadDutyValue
 11369  005934  C015  F017         	movff	PWM7_LoadDutyValue@dutyValue+1,??_PWM7_LoadDutyValue+1
 11370  005938  90D8               	bcf	status,0,c
 11371  00593A  3217               	rrcf	(??_PWM7_LoadDutyValue+1)^0,f,c
 11372  00593C  3216               	rrcf	??_PWM7_LoadDutyValue^0,f,c
 11373  00593E  90D8               	bcf	status,0,c
 11374  005940  3217               	rrcf	(??_PWM7_LoadDutyValue+1)^0,f,c
 11375  005942  3216               	rrcf	??_PWM7_LoadDutyValue^0,f,c
 11376  005944  5016               	movf	??_PWM7_LoadDutyValue^0,w,c
 11377  005946  6E65               	movwf	101,c	;volatile
 11378                           
 11379                           ;mcc_generated_files/pwm7.c: 80:      PWM7DCL = (dutyValue & 0x0003)<<6;
 11380  005948  C014  F016         	movff	PWM7_LoadDutyValue@dutyValue,??_PWM7_LoadDutyValue
 11381  00594C  0E03               	movlw	3
 11382  00594E  1616               	andwf	??_PWM7_LoadDutyValue^0,f,c
 11383  005950  0E06               	movlw	6
 11384  005952  6E17               	movwf	(??_PWM7_LoadDutyValue+1)^0,c
 11385  005954                     u9635:
 11386  005954  90D8               	bcf	status,0,c
 11387  005956  3616               	rlcf	??_PWM7_LoadDutyValue^0,f,c
 11388  005958  2E17               	decfsz	(??_PWM7_LoadDutyValue+1)^0,f,c
 11389  00595A  EFAA  F02C         	goto	u9635
 11390  00595E  5016               	movf	??_PWM7_LoadDutyValue^0,w,c
 11391  005960  6E64               	movwf	100,c	;volatile
 11392  005962  0012               	return		;funcret
 11393  005964                     __end_of_PWM7_LoadDutyValue:
 11394                           	callstack 0
 11395                           
 11396 ;; *************** function _actSpeed *****************
 11397 ;; Defined at:
 11398 ;;		line 66 in file "main.c"
 11399 ;; Parameters:    Size  Location     Type
 11400 ;;		None
 11401 ;; Auto vars:     Size  Location     Type
 11402 ;;  speed           2   35[COMRAM] short 
 11403 ;; Return value:  Size  Location     Type
 11404 ;;                  2   33[COMRAM] short 
 11405 ;; Registers used:
 11406 ;;		wreg, status,2, status,0, cstack
 11407 ;; Tracked objects:
 11408 ;;		On entry : 0/0
 11409 ;;		On exit  : 0/0
 11410 ;;		Unchanged: 0/0
 11411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11412 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11413 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11415 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11416 ;;Total ram usage:        4 bytes
 11417 ;; Hardware stack levels used: 1
 11418 ;; Hardware stack levels required when called: 9
 11419 ;; This function calls:
 11420 ;;		___aldiv
 11421 ;; This function is called by:
 11422 ;;		_calcMotorPow
 11423 ;; This function uses a non-reentrant model
 11424 ;;
 11425                           
 11426                           	psect	text44
 11427  0050F6                     __ptext44:
 11428                           	callstack 0
 11429  0050F6                     _actSpeed:
 11430                           	callstack 19
 11431  0050F6                     
 11432                           ;main.c: 67:     int16_t speed = 0;
 11433  0050F6  0E00               	movlw	0
 11434  0050F8  6E25               	movwf	(actSpeed@speed+1)^0,c
 11435  0050FA  0E00               	movlw	0
 11436  0050FC  6E24               	movwf	actSpeed@speed^0,c
 11437  0050FE                     
 11438                           ;main.c: 68:     if (smtPeriod) {
 11439  0050FE  5048               	movf	_smtPeriod^0,w,c	;volatile
 11440  005100  1049               	iorwf	(_smtPeriod+1)^0,w,c	;volatile
 11441  005102  104A               	iorwf	(_smtPeriod+2)^0,w,c	;volatile
 11442  005104  104B               	iorwf	(_smtPeriod+3)^0,w,c	;volatile
 11443  005106  B4D8               	btfsc	status,2,c
 11444  005108  EF88  F028         	goto	u6311
 11445  00510C  EF8A  F028         	goto	u6310
 11446  005110                     u6311:
 11447  005110  EFC0  F028         	goto	l6605
 11448  005114                     u6310:
 11449  005114                     
 11450                           ;main.c: 69:         if (CLC3CONbits.LC3OUT) {
 11451  005114  013C               	movlb	60	; () banked
 11452  005116  AB60               	btfss	96,5,b	;volatile
 11453  005118  EF90  F028         	goto	u6321
 11454  00511C  EF92  F028         	goto	u6320
 11455  005120                     u6321:
 11456  005120  EFAA  F028         	goto	l6603
 11457  005124                     u6320:
 11458  005124                     
 11459                           ; BSR set to: 60
 11460                           ;main.c: 70:             speed = (int16_t) ((int32_t) (500000 / (int32_t) smtPeriod));
 11461  005124  0E20               	movlw	32
 11462  005126  6E14               	movwf	___aldiv@dividend^0,c
 11463  005128  0EA1               	movlw	161
 11464  00512A  6E15               	movwf	(___aldiv@dividend+1)^0,c
 11465  00512C  0E07               	movlw	7
 11466  00512E  6E16               	movwf	(___aldiv@dividend+2)^0,c
 11467  005130  0E00               	movlw	0
 11468  005132  6E17               	movwf	(___aldiv@dividend+3)^0,c
 11469  005134  C048  F018         	movff	_smtPeriod,___aldiv@divisor	;volatile
 11470  005138  C049  F019         	movff	_smtPeriod+1,___aldiv@divisor+1	;volatile
 11471  00513C  C04A  F01A         	movff	_smtPeriod+2,___aldiv@divisor+2	;volatile
 11472  005140  C04B  F01B         	movff	_smtPeriod+3,___aldiv@divisor+3	;volatile
 11473  005144  EC2F  F022         	call	___aldiv	;wreg free
 11474  005148  C014  F024         	movff	?___aldiv,actSpeed@speed
 11475  00514C  C015  F025         	movff	?___aldiv+1,actSpeed@speed+1
 11476                           
 11477                           ;main.c: 71:         } else {
 11478  005150  EFC0  F028         	goto	l6605
 11479  005154                     l6603:
 11480                           
 11481                           ; BSR set to: 60
 11482                           ;main.c: 72:             speed = (int16_t) ((int32_t) (-500000 / (int32_t) smtPeriod));
 11483  005154  0EE0               	movlw	224
 11484  005156  6E14               	movwf	___aldiv@dividend^0,c
 11485  005158  0E5E               	movlw	94
 11486  00515A  6E15               	movwf	(___aldiv@dividend+1)^0,c
 11487  00515C  0EF8               	movlw	248
 11488  00515E  6E16               	movwf	(___aldiv@dividend+2)^0,c
 11489  005160  0EFF               	movlw	255
 11490  005162  6E17               	movwf	(___aldiv@dividend+3)^0,c
 11491  005164  C048  F018         	movff	_smtPeriod,___aldiv@divisor	;volatile
 11492  005168  C049  F019         	movff	_smtPeriod+1,___aldiv@divisor+1	;volatile
 11493  00516C  C04A  F01A         	movff	_smtPeriod+2,___aldiv@divisor+2	;volatile
 11494  005170  C04B  F01B         	movff	_smtPeriod+3,___aldiv@divisor+3	;volatile
 11495  005174  EC2F  F022         	call	___aldiv	;wreg free
 11496  005178  C014  F024         	movff	?___aldiv,actSpeed@speed
 11497  00517C  C015  F025         	movff	?___aldiv+1,actSpeed@speed+1
 11498  005180                     l6605:
 11499                           
 11500                           ;main.c: 75:     return speed;
 11501  005180  C024  F022         	movff	actSpeed@speed,?_actSpeed
 11502  005184  C025  F023         	movff	actSpeed@speed+1,?_actSpeed+1
 11503  005188  0012               	return		;funcret
 11504  00518A                     __end_of_actSpeed:
 11505                           	callstack 0
 11506                           
 11507 ;; *************** function ___aldiv *****************
 11508 ;; Defined at:
 11509 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aldiv.c"
 11510 ;; Parameters:    Size  Location     Type
 11511 ;;  dividend        4   19[COMRAM] long 
 11512 ;;  divisor         4   23[COMRAM] long 
 11513 ;; Auto vars:     Size  Location     Type
 11514 ;;  quotient        4   29[COMRAM] long 
 11515 ;;  sign            1   28[COMRAM] unsigned char 
 11516 ;;  counter         1   27[COMRAM] unsigned char 
 11517 ;; Return value:  Size  Location     Type
 11518 ;;                  4   19[COMRAM] long 
 11519 ;; Registers used:
 11520 ;;		wreg, status,2, status,0
 11521 ;; Tracked objects:
 11522 ;;		On entry : 0/0
 11523 ;;		On exit  : 0/0
 11524 ;;		Unchanged: 0/0
 11525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11526 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11527 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11529 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11530 ;;Total ram usage:       14 bytes
 11531 ;; Hardware stack levels used: 1
 11532 ;; Hardware stack levels required when called: 8
 11533 ;; This function calls:
 11534 ;;		Nothing
 11535 ;; This function is called by:
 11536 ;;		_actSpeed
 11537 ;; This function uses a non-reentrant model
 11538 ;;
 11539                           
 11540                           	psect	text45
 11541  00445E                     __ptext45:
 11542                           	callstack 0
 11543  00445E                     ___aldiv:
 11544                           	callstack 19
 11545  00445E  0E00               	movlw	0
 11546  004460  6E1D               	movwf	___aldiv@sign^0,c
 11547  004462  BE1B               	btfsc	(___aldiv@divisor+3)^0,7,c
 11548  004464  EF38  F022         	goto	u6140
 11549  004468  EF36  F022         	goto	u6141
 11550  00446C                     u6141:
 11551  00446C  EF42  F022         	goto	l6427
 11552  004470                     u6140:
 11553  004470  1E1B               	comf	(___aldiv@divisor+3)^0,f,c
 11554  004472  1E1A               	comf	(___aldiv@divisor+2)^0,f,c
 11555  004474  1E19               	comf	(___aldiv@divisor+1)^0,f,c
 11556  004476  6C18               	negf	___aldiv@divisor^0,c
 11557  004478  0E00               	movlw	0
 11558  00447A  2219               	addwfc	(___aldiv@divisor+1)^0,f,c
 11559  00447C  221A               	addwfc	(___aldiv@divisor+2)^0,f,c
 11560  00447E  221B               	addwfc	(___aldiv@divisor+3)^0,f,c
 11561  004480  0E01               	movlw	1
 11562  004482  6E1D               	movwf	___aldiv@sign^0,c
 11563  004484                     l6427:
 11564  004484  BE17               	btfsc	(___aldiv@dividend+3)^0,7,c
 11565  004486  EF49  F022         	goto	u6150
 11566  00448A  EF47  F022         	goto	u6151
 11567  00448E                     u6151:
 11568  00448E  EF53  F022         	goto	l6433
 11569  004492                     u6150:
 11570  004492  1E17               	comf	(___aldiv@dividend+3)^0,f,c
 11571  004494  1E16               	comf	(___aldiv@dividend+2)^0,f,c
 11572  004496  1E15               	comf	(___aldiv@dividend+1)^0,f,c
 11573  004498  6C14               	negf	___aldiv@dividend^0,c
 11574  00449A  0E00               	movlw	0
 11575  00449C  2215               	addwfc	(___aldiv@dividend+1)^0,f,c
 11576  00449E  2216               	addwfc	(___aldiv@dividend+2)^0,f,c
 11577  0044A0  2217               	addwfc	(___aldiv@dividend+3)^0,f,c
 11578  0044A2  0E01               	movlw	1
 11579  0044A4  1A1D               	xorwf	___aldiv@sign^0,f,c
 11580  0044A6                     l6433:
 11581  0044A6  0E00               	movlw	0
 11582  0044A8  6E1E               	movwf	___aldiv@quotient^0,c
 11583  0044AA  0E00               	movlw	0
 11584  0044AC  6E1F               	movwf	(___aldiv@quotient+1)^0,c
 11585  0044AE  0E00               	movlw	0
 11586  0044B0  6E20               	movwf	(___aldiv@quotient+2)^0,c
 11587  0044B2  0E00               	movlw	0
 11588  0044B4  6E21               	movwf	(___aldiv@quotient+3)^0,c
 11589  0044B6  5018               	movf	___aldiv@divisor^0,w,c
 11590  0044B8  1019               	iorwf	(___aldiv@divisor+1)^0,w,c
 11591  0044BA  101A               	iorwf	(___aldiv@divisor+2)^0,w,c
 11592  0044BC  101B               	iorwf	(___aldiv@divisor+3)^0,w,c
 11593  0044BE  B4D8               	btfsc	status,2,c
 11594  0044C0  EF64  F022         	goto	u6161
 11595  0044C4  EF66  F022         	goto	u6160
 11596  0044C8                     u6161:
 11597  0044C8  EF9C  F022         	goto	l6455
 11598  0044CC                     u6160:
 11599  0044CC  0E01               	movlw	1
 11600  0044CE  6E1C               	movwf	___aldiv@counter^0,c
 11601  0044D0  EF70  F022         	goto	l6441
 11602  0044D4                     l6439:
 11603  0044D4  90D8               	bcf	status,0,c
 11604  0044D6  3618               	rlcf	___aldiv@divisor^0,f,c
 11605  0044D8  3619               	rlcf	(___aldiv@divisor+1)^0,f,c
 11606  0044DA  361A               	rlcf	(___aldiv@divisor+2)^0,f,c
 11607  0044DC  361B               	rlcf	(___aldiv@divisor+3)^0,f,c
 11608  0044DE  2A1C               	incf	___aldiv@counter^0,f,c
 11609  0044E0                     l6441:
 11610  0044E0  AE1B               	btfss	(___aldiv@divisor+3)^0,7,c
 11611  0044E2  EF75  F022         	goto	u6171
 11612  0044E6  EF77  F022         	goto	u6170
 11613  0044EA                     u6171:
 11614  0044EA  EF6A  F022         	goto	l6439
 11615  0044EE                     u6170:
 11616  0044EE                     l6443:
 11617  0044EE  90D8               	bcf	status,0,c
 11618  0044F0  361E               	rlcf	___aldiv@quotient^0,f,c
 11619  0044F2  361F               	rlcf	(___aldiv@quotient+1)^0,f,c
 11620  0044F4  3620               	rlcf	(___aldiv@quotient+2)^0,f,c
 11621  0044F6  3621               	rlcf	(___aldiv@quotient+3)^0,f,c
 11622  0044F8  5018               	movf	___aldiv@divisor^0,w,c
 11623  0044FA  5C14               	subwf	___aldiv@dividend^0,w,c
 11624  0044FC  5019               	movf	(___aldiv@divisor+1)^0,w,c
 11625  0044FE  5815               	subwfb	(___aldiv@dividend+1)^0,w,c
 11626  004500  501A               	movf	(___aldiv@divisor+2)^0,w,c
 11627  004502  5816               	subwfb	(___aldiv@dividend+2)^0,w,c
 11628  004504  501B               	movf	(___aldiv@divisor+3)^0,w,c
 11629  004506  5817               	subwfb	(___aldiv@dividend+3)^0,w,c
 11630  004508  A0D8               	btfss	status,0,c
 11631  00450A  EF89  F022         	goto	u6181
 11632  00450E  EF8B  F022         	goto	u6180
 11633  004512                     u6181:
 11634  004512  EF94  F022         	goto	l6451
 11635  004516                     u6180:
 11636  004516  5018               	movf	___aldiv@divisor^0,w,c
 11637  004518  5E14               	subwf	___aldiv@dividend^0,f,c
 11638  00451A  5019               	movf	(___aldiv@divisor+1)^0,w,c
 11639  00451C  5A15               	subwfb	(___aldiv@dividend+1)^0,f,c
 11640  00451E  501A               	movf	(___aldiv@divisor+2)^0,w,c
 11641  004520  5A16               	subwfb	(___aldiv@dividend+2)^0,f,c
 11642  004522  501B               	movf	(___aldiv@divisor+3)^0,w,c
 11643  004524  5A17               	subwfb	(___aldiv@dividend+3)^0,f,c
 11644  004526  801E               	bsf	___aldiv@quotient^0,0,c
 11645  004528                     l6451:
 11646  004528  90D8               	bcf	status,0,c
 11647  00452A  321B               	rrcf	(___aldiv@divisor+3)^0,f,c
 11648  00452C  321A               	rrcf	(___aldiv@divisor+2)^0,f,c
 11649  00452E  3219               	rrcf	(___aldiv@divisor+1)^0,f,c
 11650  004530  3218               	rrcf	___aldiv@divisor^0,f,c
 11651  004532  2E1C               	decfsz	___aldiv@counter^0,f,c
 11652  004534  EF77  F022         	goto	l6443
 11653  004538                     l6455:
 11654  004538  501D               	movf	___aldiv@sign^0,w,c
 11655  00453A  B4D8               	btfsc	status,2,c
 11656  00453C  EFA2  F022         	goto	u6191
 11657  004540  EFA4  F022         	goto	u6190
 11658  004544                     u6191:
 11659  004544  EFAC  F022         	goto	l6459
 11660  004548                     u6190:
 11661  004548  1E21               	comf	(___aldiv@quotient+3)^0,f,c
 11662  00454A  1E20               	comf	(___aldiv@quotient+2)^0,f,c
 11663  00454C  1E1F               	comf	(___aldiv@quotient+1)^0,f,c
 11664  00454E  6C1E               	negf	___aldiv@quotient^0,c
 11665  004550  0E00               	movlw	0
 11666  004552  221F               	addwfc	(___aldiv@quotient+1)^0,f,c
 11667  004554  2220               	addwfc	(___aldiv@quotient+2)^0,f,c
 11668  004556  2221               	addwfc	(___aldiv@quotient+3)^0,f,c
 11669  004558                     l6459:
 11670  004558  C01E  F014         	movff	___aldiv@quotient,?___aldiv
 11671  00455C  C01F  F015         	movff	___aldiv@quotient+1,?___aldiv+1
 11672  004560  C020  F016         	movff	___aldiv@quotient+2,?___aldiv+2
 11673  004564  C021  F017         	movff	___aldiv@quotient+3,?___aldiv+3
 11674  004568  0012               	return		;funcret
 11675  00456A                     __end_of___aldiv:
 11676                           	callstack 0
 11677                           
 11678 ;; *************** function ___xxtofl *****************
 11679 ;; Defined at:
 11680 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
 11681 ;; Parameters:    Size  Location     Type
 11682 ;;  sign            1    wreg     unsigned char 
 11683 ;;  val             4   27[COMRAM] long 
 11684 ;; Auto vars:     Size  Location     Type
 11685 ;;  sign            1   35[COMRAM] unsigned char 
 11686 ;;  arg             4   37[COMRAM] unsigned long 
 11687 ;;  exp             1   36[COMRAM] unsigned char 
 11688 ;; Return value:  Size  Location     Type
 11689 ;;                  4   27[COMRAM] unsigned char 
 11690 ;; Registers used:
 11691 ;;		wreg, status,2, status,0
 11692 ;; Tracked objects:
 11693 ;;		On entry : 0/0
 11694 ;;		On exit  : 0/0
 11695 ;;		Unchanged: 0/0
 11696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11697 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11698 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11699 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11700 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11701 ;;Total ram usage:       14 bytes
 11702 ;; Hardware stack levels used: 1
 11703 ;; Hardware stack levels required when called: 8
 11704 ;; This function calls:
 11705 ;;		Nothing
 11706 ;; This function is called by:
 11707 ;;		_loop
 11708 ;;		_checkBatt
 11709 ;;		_startAccell
 11710 ;;		_calcSteering
 11711 ;;		_calcSpeed
 11712 ;;		_calcMotorPow
 11713 ;; This function uses a non-reentrant model
 11714 ;;
 11715                           
 11716                           	psect	text46
 11717  003A1A                     __ptext46:
 11718                           	callstack 0
 11719  003A1A                     ___xxtofl:
 11720                           	callstack 20
 11721                           
 11722                           ;incstack = 0
 11723                           ;___xxtofl@sign stored from wreg
 11724  003A1A  6E24               	movwf	___xxtofl@sign^0,c
 11725  003A1C  5024               	movf	___xxtofl@sign^0,w,c
 11726  003A1E  B4D8               	btfsc	status,2,c
 11727  003A20  EF14  F01D         	goto	u9781
 11728  003A24  EF16  F01D         	goto	u9780
 11729  003A28                     u9781:
 11730  003A28  EF38  F01D         	goto	l2052
 11731  003A2C                     u9780:
 11732  003A2C  BE1F               	btfsc	(___xxtofl@val+3)^0,7,c
 11733  003A2E  EF1D  F01D         	goto	u9790
 11734  003A32  EF1B  F01D         	goto	u9791
 11735  003A36                     u9791:
 11736  003A36  EF38  F01D         	goto	l2052
 11737  003A3A                     u9790:
 11738  003A3A  C01C  F020         	movff	___xxtofl@val,??___xxtofl
 11739  003A3E  C01D  F021         	movff	___xxtofl@val+1,??___xxtofl+1
 11740  003A42  C01E  F022         	movff	___xxtofl@val+2,??___xxtofl+2
 11741  003A46  C01F  F023         	movff	___xxtofl@val+3,??___xxtofl+3
 11742  003A4A  1E20               	comf	??___xxtofl^0,f,c
 11743  003A4C  1E21               	comf	(??___xxtofl+1)^0,f,c
 11744  003A4E  1E22               	comf	(??___xxtofl+2)^0,f,c
 11745  003A50  1E23               	comf	(??___xxtofl+3)^0,f,c
 11746  003A52  2A20               	incf	??___xxtofl^0,f,c
 11747  003A54  0E00               	movlw	0
 11748  003A56  2221               	addwfc	(??___xxtofl+1)^0,f,c
 11749  003A58  2222               	addwfc	(??___xxtofl+2)^0,f,c
 11750  003A5A  2223               	addwfc	(??___xxtofl+3)^0,f,c
 11751  003A5C  C020  F026         	movff	??___xxtofl,___xxtofl@arg
 11752  003A60  C021  F027         	movff	??___xxtofl+1,___xxtofl@arg+1
 11753  003A64  C022  F028         	movff	??___xxtofl+2,___xxtofl@arg+2
 11754  003A68  C023  F029         	movff	??___xxtofl+3,___xxtofl@arg+3
 11755  003A6C  EF40  F01D         	goto	l8849
 11756  003A70                     l2052:
 11757  003A70  C01C  F026         	movff	___xxtofl@val,___xxtofl@arg
 11758  003A74  C01D  F027         	movff	___xxtofl@val+1,___xxtofl@arg+1
 11759  003A78  C01E  F028         	movff	___xxtofl@val+2,___xxtofl@arg+2
 11760  003A7C  C01F  F029         	movff	___xxtofl@val+3,___xxtofl@arg+3
 11761  003A80                     l8849:
 11762  003A80  501C               	movf	___xxtofl@val^0,w,c
 11763  003A82  101D               	iorwf	(___xxtofl@val+1)^0,w,c
 11764  003A84  101E               	iorwf	(___xxtofl@val+2)^0,w,c
 11765  003A86  101F               	iorwf	(___xxtofl@val+3)^0,w,c
 11766  003A88  A4D8               	btfss	status,2,c
 11767  003A8A  EF49  F01D         	goto	u9801
 11768  003A8E  EF4B  F01D         	goto	u9800
 11769  003A92                     u9801:
 11770  003A92  EF55  F01D         	goto	l8855
 11771  003A96                     u9800:
 11772  003A96  0E00               	movlw	0
 11773  003A98  6E1C               	movwf	?___xxtofl^0,c
 11774  003A9A  0E00               	movlw	0
 11775  003A9C  6E1D               	movwf	(?___xxtofl+1)^0,c
 11776  003A9E  0E00               	movlw	0
 11777  003AA0  6E1E               	movwf	(?___xxtofl+2)^0,c
 11778  003AA2  0E00               	movlw	0
 11779  003AA4  6E1F               	movwf	(?___xxtofl+3)^0,c
 11780  003AA6  EFE6  F01D         	goto	l2055
 11781  003AAA                     l8855:
 11782  003AAA  0E96               	movlw	150
 11783  003AAC  6E25               	movwf	___xxtofl@exp^0,c
 11784  003AAE  EF5F  F01D         	goto	l8859
 11785  003AB2                     l8857:
 11786  003AB2  2A25               	incf	___xxtofl@exp^0,f,c
 11787  003AB4  90D8               	bcf	status,0,c
 11788  003AB6  3229               	rrcf	(___xxtofl@arg+3)^0,f,c
 11789  003AB8  3228               	rrcf	(___xxtofl@arg+2)^0,f,c
 11790  003ABA  3227               	rrcf	(___xxtofl@arg+1)^0,f,c
 11791  003ABC  3226               	rrcf	___xxtofl@arg^0,f,c
 11792  003ABE                     l8859:
 11793  003ABE  0E00               	movlw	0
 11794  003AC0  1426               	andwf	___xxtofl@arg^0,w,c
 11795  003AC2  6E20               	movwf	??___xxtofl^0,c
 11796  003AC4  0E00               	movlw	0
 11797  003AC6  1427               	andwf	(___xxtofl@arg+1)^0,w,c
 11798  003AC8  6E21               	movwf	(??___xxtofl+1)^0,c
 11799  003ACA  0E00               	movlw	0
 11800  003ACC  1428               	andwf	(___xxtofl@arg+2)^0,w,c
 11801  003ACE  6E22               	movwf	(??___xxtofl+2)^0,c
 11802  003AD0  0EFE               	movlw	254
 11803  003AD2  1429               	andwf	(___xxtofl@arg+3)^0,w,c
 11804  003AD4  6E23               	movwf	(??___xxtofl+3)^0,c
 11805  003AD6  5020               	movf	??___xxtofl^0,w,c
 11806  003AD8  1021               	iorwf	(??___xxtofl+1)^0,w,c
 11807  003ADA  1022               	iorwf	(??___xxtofl+2)^0,w,c
 11808  003ADC  1023               	iorwf	(??___xxtofl+3)^0,w,c
 11809  003ADE  A4D8               	btfss	status,2,c
 11810  003AE0  EF74  F01D         	goto	u9811
 11811  003AE4  EF76  F01D         	goto	u9810
 11812  003AE8                     u9811:
 11813  003AE8  EF59  F01D         	goto	l8857
 11814  003AEC                     u9810:
 11815  003AEC  EF84  F01D         	goto	l2059
 11816  003AF0                     l8861:
 11817  003AF0  2A25               	incf	___xxtofl@exp^0,f,c
 11818  003AF2  0E01               	movlw	1
 11819  003AF4  2626               	addwf	___xxtofl@arg^0,f,c
 11820  003AF6  0E00               	movlw	0
 11821  003AF8  2227               	addwfc	(___xxtofl@arg+1)^0,f,c
 11822  003AFA  2228               	addwfc	(___xxtofl@arg+2)^0,f,c
 11823  003AFC  2229               	addwfc	(___xxtofl@arg+3)^0,f,c
 11824  003AFE  90D8               	bcf	status,0,c
 11825  003B00  3229               	rrcf	(___xxtofl@arg+3)^0,f,c
 11826  003B02  3228               	rrcf	(___xxtofl@arg+2)^0,f,c
 11827  003B04  3227               	rrcf	(___xxtofl@arg+1)^0,f,c
 11828  003B06  3226               	rrcf	___xxtofl@arg^0,f,c
 11829  003B08                     l2059:
 11830  003B08  0E00               	movlw	0
 11831  003B0A  1426               	andwf	___xxtofl@arg^0,w,c
 11832  003B0C  6E20               	movwf	??___xxtofl^0,c
 11833  003B0E  0E00               	movlw	0
 11834  003B10  1427               	andwf	(___xxtofl@arg+1)^0,w,c
 11835  003B12  6E21               	movwf	(??___xxtofl+1)^0,c
 11836  003B14  0E00               	movlw	0
 11837  003B16  1428               	andwf	(___xxtofl@arg+2)^0,w,c
 11838  003B18  6E22               	movwf	(??___xxtofl+2)^0,c
 11839  003B1A  0EFF               	movlw	255
 11840  003B1C  1429               	andwf	(___xxtofl@arg+3)^0,w,c
 11841  003B1E  6E23               	movwf	(??___xxtofl+3)^0,c
 11842  003B20  5020               	movf	??___xxtofl^0,w,c
 11843  003B22  1021               	iorwf	(??___xxtofl+1)^0,w,c
 11844  003B24  1022               	iorwf	(??___xxtofl+2)^0,w,c
 11845  003B26  1023               	iorwf	(??___xxtofl+3)^0,w,c
 11846  003B28  A4D8               	btfss	status,2,c
 11847  003B2A  EF99  F01D         	goto	u9821
 11848  003B2E  EF9B  F01D         	goto	u9820
 11849  003B32                     u9821:
 11850  003B32  EF78  F01D         	goto	l8861
 11851  003B36                     u9820:
 11852  003B36  EFA3  F01D         	goto	l8869
 11853  003B3A                     l8867:
 11854  003B3A  0625               	decf	___xxtofl@exp^0,f,c
 11855  003B3C  90D8               	bcf	status,0,c
 11856  003B3E  3626               	rlcf	___xxtofl@arg^0,f,c
 11857  003B40  3627               	rlcf	(___xxtofl@arg+1)^0,f,c
 11858  003B42  3628               	rlcf	(___xxtofl@arg+2)^0,f,c
 11859  003B44  3629               	rlcf	(___xxtofl@arg+3)^0,f,c
 11860  003B46                     l8869:
 11861  003B46  BE28               	btfsc	(___xxtofl@arg+2)^0,7,c
 11862  003B48  EFA8  F01D         	goto	u9831
 11863  003B4C  EFAA  F01D         	goto	u9830
 11864  003B50                     u9831:
 11865  003B50  EFB2  F01D         	goto	l2066
 11866  003B54                     u9830:
 11867  003B54  0E02               	movlw	2
 11868  003B56  6025               	cpfslt	___xxtofl@exp^0,c
 11869  003B58  EFB0  F01D         	goto	u9841
 11870  003B5C  EFB2  F01D         	goto	u9840
 11871  003B60                     u9841:
 11872  003B60  EF9D  F01D         	goto	l8867
 11873  003B64                     u9840:
 11874  003B64                     l2066:
 11875  003B64  B025               	btfsc	___xxtofl@exp^0,0,c
 11876  003B66  EFB7  F01D         	goto	u9851
 11877  003B6A  EFB9  F01D         	goto	u9850
 11878  003B6E                     u9851:
 11879  003B6E  EFBA  F01D         	goto	l8875
 11880  003B72                     u9850:
 11881  003B72  9E28               	bcf	(___xxtofl@arg+2)^0,7,c
 11882  003B74                     l8875:
 11883  003B74  90D8               	bcf	status,0,c
 11884  003B76  3225               	rrcf	___xxtofl@exp^0,f,c
 11885  003B78  C025  F020         	movff	___xxtofl@exp,??___xxtofl
 11886  003B7C  6A21               	clrf	(??___xxtofl+1)^0,c
 11887  003B7E  6A22               	clrf	(??___xxtofl+2)^0,c
 11888  003B80  6A23               	clrf	(??___xxtofl+3)^0,c
 11889  003B82  C020  F023         	movff	??___xxtofl,??___xxtofl+3
 11890  003B86  6A22               	clrf	(??___xxtofl+2)^0,c
 11891  003B88  6A21               	clrf	(??___xxtofl+1)^0,c
 11892  003B8A  6A20               	clrf	??___xxtofl^0,c
 11893  003B8C  5020               	movf	??___xxtofl^0,w,c
 11894  003B8E  1226               	iorwf	___xxtofl@arg^0,f,c
 11895  003B90  5021               	movf	(??___xxtofl+1)^0,w,c
 11896  003B92  1227               	iorwf	(___xxtofl@arg+1)^0,f,c
 11897  003B94  5022               	movf	(??___xxtofl+2)^0,w,c
 11898  003B96  1228               	iorwf	(___xxtofl@arg+2)^0,f,c
 11899  003B98  5023               	movf	(??___xxtofl+3)^0,w,c
 11900  003B9A  1229               	iorwf	(___xxtofl@arg+3)^0,f,c
 11901  003B9C  5024               	movf	___xxtofl@sign^0,w,c
 11902  003B9E  B4D8               	btfsc	status,2,c
 11903  003BA0  EFD4  F01D         	goto	u9861
 11904  003BA4  EFD6  F01D         	goto	u9860
 11905  003BA8                     u9861:
 11906  003BA8  EFDE  F01D         	goto	l8885
 11907  003BAC                     u9860:
 11908  003BAC  BE1F               	btfsc	(___xxtofl@val+3)^0,7,c
 11909  003BAE  EFDD  F01D         	goto	u9870
 11910  003BB2  EFDB  F01D         	goto	u9871
 11911  003BB6                     u9871:
 11912  003BB6  EFDE  F01D         	goto	l8885
 11913  003BBA                     u9870:
 11914  003BBA  8E29               	bsf	(___xxtofl@arg+3)^0,7,c
 11915  003BBC                     l8885:
 11916  003BBC  C026  F01C         	movff	___xxtofl@arg,?___xxtofl
 11917  003BC0  C027  F01D         	movff	___xxtofl@arg+1,?___xxtofl+1
 11918  003BC4  C028  F01E         	movff	___xxtofl@arg+2,?___xxtofl+2
 11919  003BC8  C029  F01F         	movff	___xxtofl@arg+3,?___xxtofl+3
 11920  003BCC                     l2055:
 11921  003BCC  0012               	return		;funcret
 11922  003BCE                     __end_of___xxtofl:
 11923                           	callstack 0
 11924                           
 11925 ;; *************** function ___fltol *****************
 11926 ;; Defined at:
 11927 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
 11928 ;; Parameters:    Size  Location     Type
 11929 ;;  f1              4   25[BANK0 ] unsigned char 
 11930 ;; Auto vars:     Size  Location     Type
 11931 ;;  exp1            1   34[BANK0 ] unsigned char 
 11932 ;;  sign1           1   33[BANK0 ] unsigned char 
 11933 ;; Return value:  Size  Location     Type
 11934 ;;                  4   25[BANK0 ] long 
 11935 ;; Registers used:
 11936 ;;		wreg, status,2, status,0
 11937 ;; Tracked objects:
 11938 ;;		On entry : 0/0
 11939 ;;		On exit  : 0/0
 11940 ;;		Unchanged: 0/0
 11941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11942 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11943 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11944 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11945 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11946 ;;Total ram usage:       10 bytes
 11947 ;; Hardware stack levels used: 1
 11948 ;; Hardware stack levels required when called: 8
 11949 ;; This function calls:
 11950 ;;		Nothing
 11951 ;; This function is called by:
 11952 ;;		_startAccell
 11953 ;;		_calcSteering
 11954 ;;		_calcSpeed
 11955 ;;		_calcMotorPow
 11956 ;;		_efgtoa
 11957 ;; This function uses a non-reentrant model
 11958 ;;
 11959                           
 11960                           	psect	text47
 11961  00456A                     __ptext47:
 11962                           	callstack 0
 11963  00456A                     ___fltol:
 11964                           	callstack 16
 11965  00456A  0100               	movlb	0	; () banked
 11966  00456C  357B               	rlcf	(___fltol@f1+2)& (0+255),w,b
 11967  00456E  357C               	rlcf	(___fltol@f1+3)& (0+255),w,b
 11968  004570  6F82               	movwf	___fltol@exp1& (0+255),b
 11969  004572  5182               	movf	___fltol@exp1& (0+255),w,b
 11970  004574  A4D8               	btfss	status,2,c
 11971  004576  EFBF  F022         	goto	u8421
 11972  00457A  EFC1  F022         	goto	u8420
 11973  00457E                     u8421:
 11974  00457E  EFCB  F022         	goto	l8109
 11975  004582                     u8420:
 11976  004582                     l8105:
 11977                           
 11978                           ; BSR set to: 0
 11979  004582  0E00               	movlw	0
 11980  004584  6F79               	movwf	?___fltol& (0+255),b
 11981  004586  0E00               	movlw	0
 11982  004588  6F7A               	movwf	(?___fltol+1)& (0+255),b
 11983  00458A  0E00               	movlw	0
 11984  00458C  6F7B               	movwf	(?___fltol+2)& (0+255),b
 11985  00458E  0E00               	movlw	0
 11986  004590  6F7C               	movwf	(?___fltol+3)& (0+255),b
 11987  004592  EF38  F023         	goto	l1694
 11988  004596                     l8109:
 11989                           
 11990                           ; BSR set to: 0
 11991  004596  C079  F07D         	movff	___fltol@f1,??___fltol
 11992  00459A  C07A  F07E         	movff	___fltol@f1+1,??___fltol+1
 11993  00459E  C07B  F07F         	movff	___fltol@f1+2,??___fltol+2
 11994  0045A2  C07C  F080         	movff	___fltol@f1+3,??___fltol+3
 11995  0045A6  0E20               	movlw	32
 11996  0045A8  EFDB  F022         	goto	u8430
 11997  0045AC                     u8435:
 11998  0045AC  90D8               	bcf	status,0,c
 11999  0045AE  3380               	rrcf	(??___fltol+3)& (0+255),f,b
 12000  0045B0  337F               	rrcf	(??___fltol+2)& (0+255),f,b
 12001  0045B2  337E               	rrcf	(??___fltol+1)& (0+255),f,b
 12002  0045B4  337D               	rrcf	??___fltol& (0+255),f,b
 12003  0045B6                     u8430:
 12004  0045B6  2EE8               	decfsz	wreg,f,c
 12005  0045B8  EFD6  F022         	goto	u8435
 12006  0045BC  517D               	movf	??___fltol& (0+255),w,b
 12007  0045BE  6F81               	movwf	___fltol@sign1& (0+255),b
 12008  0045C0                     
 12009                           ; BSR set to: 0
 12010  0045C0  8F7B               	bsf	(___fltol@f1+2)& (0+255),7,b
 12011  0045C2                     
 12012                           ; BSR set to: 0
 12013  0045C2  0EFF               	movlw	255
 12014  0045C4  1779               	andwf	___fltol@f1& (0+255),f,b
 12015  0045C6  0EFF               	movlw	255
 12016  0045C8  177A               	andwf	(___fltol@f1+1)& (0+255),f,b
 12017  0045CA  0EFF               	movlw	255
 12018  0045CC  177B               	andwf	(___fltol@f1+2)& (0+255),f,b
 12019  0045CE  0E00               	movlw	0
 12020  0045D0  177C               	andwf	(___fltol@f1+3)& (0+255),f,b
 12021  0045D2                     
 12022                           ; BSR set to: 0
 12023  0045D2  0E96               	movlw	150
 12024  0045D4  5F82               	subwf	___fltol@exp1& (0+255),f,b
 12025  0045D6                     
 12026                           ; BSR set to: 0
 12027  0045D6  BF82               	btfsc	___fltol@exp1& (0+255),7,b
 12028  0045D8  EFF2  F022         	goto	u8440
 12029  0045DC  EFF0  F022         	goto	u8441
 12030  0045E0                     u8441:
 12031  0045E0  EF08  F023         	goto	l8129
 12032  0045E4                     u8440:
 12033  0045E4                     
 12034                           ; BSR set to: 0
 12035  0045E4  5182               	movf	___fltol@exp1& (0+255),w,b
 12036  0045E6  0A80               	xorlw	128
 12037  0045E8  0F97               	addlw	151
 12038  0045EA  B0D8               	btfsc	status,0,c
 12039  0045EC  EFFA  F022         	goto	u8451
 12040  0045F0  EFFC  F022         	goto	u8450
 12041  0045F4                     u8451:
 12042  0045F4  EFFE  F022         	goto	l8125
 12043  0045F8                     u8450:
 12044  0045F8  EFC1  F022         	goto	l8105
 12045  0045FC                     l8125:
 12046                           
 12047                           ; BSR set to: 0
 12048  0045FC  90D8               	bcf	status,0,c
 12049  0045FE  337C               	rrcf	(___fltol@f1+3)& (0+255),f,b
 12050  004600  337B               	rrcf	(___fltol@f1+2)& (0+255),f,b
 12051  004602  337A               	rrcf	(___fltol@f1+1)& (0+255),f,b
 12052  004604  3379               	rrcf	___fltol@f1& (0+255),f,b
 12053  004606                     
 12054                           ; BSR set to: 0
 12055  004606  3F82               	incfsz	___fltol@exp1& (0+255),f,b
 12056  004608  EFFE  F022         	goto	l8125
 12057  00460C  EF20  F023         	goto	l8139
 12058  004610                     l8129:
 12059                           
 12060                           ; BSR set to: 0
 12061  004610  0E1F               	movlw	31
 12062  004612  6582               	cpfsgt	___fltol@exp1& (0+255),b
 12063  004614  EF0E  F023         	goto	u8461
 12064  004618  EF10  F023         	goto	u8460
 12065  00461C                     u8461:
 12066  00461C  EF18  F023         	goto	l8137
 12067  004620                     u8460:
 12068  004620  EFC1  F022         	goto	l8105
 12069  004624                     l8135:
 12070                           
 12071                           ; BSR set to: 0
 12072  004624  90D8               	bcf	status,0,c
 12073  004626  3779               	rlcf	___fltol@f1& (0+255),f,b
 12074  004628  377A               	rlcf	(___fltol@f1+1)& (0+255),f,b
 12075  00462A  377B               	rlcf	(___fltol@f1+2)& (0+255),f,b
 12076  00462C  377C               	rlcf	(___fltol@f1+3)& (0+255),f,b
 12077  00462E  0782               	decf	___fltol@exp1& (0+255),f,b
 12078  004630                     l8137:
 12079                           
 12080                           ; BSR set to: 0
 12081  004630  5182               	movf	___fltol@exp1& (0+255),w,b
 12082  004632  A4D8               	btfss	status,2,c
 12083  004634  EF1E  F023         	goto	u8471
 12084  004638  EF20  F023         	goto	u8470
 12085  00463C                     u8471:
 12086  00463C  EF12  F023         	goto	l8135
 12087  004640                     u8470:
 12088  004640                     l8139:
 12089                           
 12090                           ; BSR set to: 0
 12091  004640  5181               	movf	___fltol@sign1& (0+255),w,b
 12092  004642  B4D8               	btfsc	status,2,c
 12093  004644  EF26  F023         	goto	u8481
 12094  004648  EF28  F023         	goto	u8480
 12095  00464C                     u8481:
 12096  00464C  EF30  F023         	goto	l8143
 12097  004650                     u8480:
 12098  004650                     
 12099                           ; BSR set to: 0
 12100  004650  1F7C               	comf	(___fltol@f1+3)& (0+255),f,b
 12101  004652  1F7B               	comf	(___fltol@f1+2)& (0+255),f,b
 12102  004654  1F7A               	comf	(___fltol@f1+1)& (0+255),f,b
 12103  004656  6D79               	negf	___fltol@f1& (0+255),b
 12104  004658  0E00               	movlw	0
 12105  00465A  237A               	addwfc	(___fltol@f1+1)& (0+255),f,b
 12106  00465C  237B               	addwfc	(___fltol@f1+2)& (0+255),f,b
 12107  00465E  237C               	addwfc	(___fltol@f1+3)& (0+255),f,b
 12108  004660                     l8143:
 12109                           
 12110                           ; BSR set to: 0
 12111  004660  C079  F079         	movff	___fltol@f1,?___fltol
 12112  004664  C07A  F07A         	movff	___fltol@f1+1,?___fltol+1
 12113  004668  C07B  F07B         	movff	___fltol@f1+2,?___fltol+2
 12114  00466C  C07C  F07C         	movff	___fltol@f1+3,?___fltol+3
 12115  004670                     l1694:
 12116                           
 12117                           ; BSR set to: 0
 12118  004670  0012               	return		;funcret
 12119  004672                     __end_of___fltol:
 12120                           	callstack 0
 12121                           
 12122 ;; *************** function ___flmul *****************
 12123 ;; Defined at:
 12124 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
 12125 ;; Parameters:    Size  Location     Type
 12126 ;;  b               4   41[COMRAM] long 
 12127 ;;  a               4   45[COMRAM] long 
 12128 ;; Auto vars:     Size  Location     Type
 12129 ;;  prod            4    7[BANK0 ] struct .
 12130 ;;  grs             4    2[BANK0 ] unsigned long 
 12131 ;;  temp            2   11[BANK0 ] struct .
 12132 ;;  bexp            1    6[BANK0 ] unsigned char 
 12133 ;;  aexp            1    1[BANK0 ] unsigned char 
 12134 ;;  sign            1    0[BANK0 ] unsigned char 
 12135 ;; Return value:  Size  Location     Type
 12136 ;;                  4   41[COMRAM] unsigned char 
 12137 ;; Registers used:
 12138 ;;		wreg, status,2, status,0, prodl, prodh
 12139 ;; Tracked objects:
 12140 ;;		On entry : 0/0
 12141 ;;		On exit  : 0/0
 12142 ;;		Unchanged: 0/0
 12143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12144 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12145 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12146 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12147 ;;      Totals:        12      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12148 ;;Total ram usage:       25 bytes
 12149 ;; Hardware stack levels used: 1
 12150 ;; Hardware stack levels required when called: 8
 12151 ;; This function calls:
 12152 ;;		Nothing
 12153 ;; This function is called by:
 12154 ;;		_startAccell
 12155 ;;		_calcSteering
 12156 ;;		_calcSpeed
 12157 ;;		_calcMotorPow
 12158 ;;		_efgtoa
 12159 ;; This function uses a non-reentrant model
 12160 ;;
 12161                           
 12162                           	psect	text48
 12163  0026EC                     __ptext48:
 12164                           	callstack 0
 12165  0026EC                     ___flmul:
 12166                           	callstack 16
 12167  0026EC  502D               	movf	(___flmul@b+3)^0,w,c
 12168  0026EE  0B80               	andlw	128
 12169  0026F0  0100               	movlb	0	; () banked
 12170  0026F2  6F60               	movwf	___flmul@sign& (0+255),b
 12171  0026F4  502D               	movf	(___flmul@b+3)^0,w,c
 12172  0026F6  242D               	addwf	(___flmul@b+3)^0,w,c
 12173  0026F8  6F66               	movwf	___flmul@bexp& (0+255),b
 12174  0026FA                     
 12175                           ; BSR set to: 0
 12176  0026FA  AE2C               	btfss	(___flmul@b+2)^0,7,c
 12177  0026FC  EF82  F013         	goto	u8021
 12178  002700  EF84  F013         	goto	u8020
 12179  002704                     u8021:
 12180  002704  EF85  F013         	goto	l7847
 12181  002708                     u8020:
 12182  002708                     
 12183                           ; BSR set to: 0
 12184  002708  8166               	bsf	___flmul@bexp& (0+255),0,b
 12185  00270A                     l7847:
 12186                           
 12187                           ; BSR set to: 0
 12188  00270A  5166               	movf	___flmul@bexp& (0+255),w,b
 12189  00270C  B4D8               	btfsc	status,2,c
 12190  00270E  EF8B  F013         	goto	u8031
 12191  002712  EF8D  F013         	goto	u8030
 12192  002716                     u8031:
 12193  002716  EFA0  F013         	goto	l7855
 12194  00271A                     u8030:
 12195  00271A                     
 12196                           ; BSR set to: 0
 12197  00271A  2966               	incf	___flmul@bexp& (0+255),w,b
 12198  00271C  A4D8               	btfss	status,2,c
 12199  00271E  EF93  F013         	goto	u8041
 12200  002722  EF95  F013         	goto	u8040
 12201  002726                     u8041:
 12202  002726  EF9D  F013         	goto	l7853
 12203  00272A                     u8040:
 12204  00272A                     
 12205                           ; BSR set to: 0
 12206  00272A  0E00               	movlw	0
 12207  00272C  6E2A               	movwf	___flmul@b^0,c
 12208  00272E  0E00               	movlw	0
 12209  002730  6E2B               	movwf	(___flmul@b+1)^0,c
 12210  002732  0E00               	movlw	0
 12211  002734  6E2C               	movwf	(___flmul@b+2)^0,c
 12212  002736  0E00               	movlw	0
 12213  002738  6E2D               	movwf	(___flmul@b+3)^0,c
 12214  00273A                     l7853:
 12215                           
 12216                           ; BSR set to: 0
 12217  00273A  8E2C               	bsf	(___flmul@b+2)^0,7,c
 12218  00273C  EFA8  F013         	goto	l7857
 12219  002740                     l7855:
 12220                           
 12221                           ; BSR set to: 0
 12222  002740  0E00               	movlw	0
 12223  002742  6E2A               	movwf	___flmul@b^0,c
 12224  002744  0E00               	movlw	0
 12225  002746  6E2B               	movwf	(___flmul@b+1)^0,c
 12226  002748  0E00               	movlw	0
 12227  00274A  6E2C               	movwf	(___flmul@b+2)^0,c
 12228  00274C  0E00               	movlw	0
 12229  00274E  6E2D               	movwf	(___flmul@b+3)^0,c
 12230  002750                     l7857:
 12231                           
 12232                           ; BSR set to: 0
 12233  002750  5031               	movf	(___flmul@a+3)^0,w,c
 12234  002752  0B80               	andlw	128
 12235  002754  1B60               	xorwf	___flmul@sign& (0+255),f,b
 12236  002756                     
 12237                           ; BSR set to: 0
 12238  002756  5031               	movf	(___flmul@a+3)^0,w,c
 12239  002758  2431               	addwf	(___flmul@a+3)^0,w,c
 12240  00275A  6F61               	movwf	___flmul@aexp& (0+255),b
 12241  00275C                     
 12242                           ; BSR set to: 0
 12243  00275C  AE30               	btfss	(___flmul@a+2)^0,7,c
 12244  00275E  EFB3  F013         	goto	u8051
 12245  002762  EFB5  F013         	goto	u8050
 12246  002766                     u8051:
 12247  002766  EFB6  F013         	goto	l7865
 12248  00276A                     u8050:
 12249  00276A                     
 12250                           ; BSR set to: 0
 12251  00276A  8161               	bsf	___flmul@aexp& (0+255),0,b
 12252  00276C                     l7865:
 12253                           
 12254                           ; BSR set to: 0
 12255  00276C  5161               	movf	___flmul@aexp& (0+255),w,b
 12256  00276E  B4D8               	btfsc	status,2,c
 12257  002770  EFBC  F013         	goto	u8061
 12258  002774  EFBE  F013         	goto	u8060
 12259  002778                     u8061:
 12260  002778  EFD1  F013         	goto	l7873
 12261  00277C                     u8060:
 12262  00277C                     
 12263                           ; BSR set to: 0
 12264  00277C  2961               	incf	___flmul@aexp& (0+255),w,b
 12265  00277E  A4D8               	btfss	status,2,c
 12266  002780  EFC4  F013         	goto	u8071
 12267  002784  EFC6  F013         	goto	u8070
 12268  002788                     u8071:
 12269  002788  EFCE  F013         	goto	l7871
 12270  00278C                     u8070:
 12271  00278C                     
 12272                           ; BSR set to: 0
 12273  00278C  0E00               	movlw	0
 12274  00278E  6E2E               	movwf	___flmul@a^0,c
 12275  002790  0E00               	movlw	0
 12276  002792  6E2F               	movwf	(___flmul@a+1)^0,c
 12277  002794  0E00               	movlw	0
 12278  002796  6E30               	movwf	(___flmul@a+2)^0,c
 12279  002798  0E00               	movlw	0
 12280  00279A  6E31               	movwf	(___flmul@a+3)^0,c
 12281  00279C                     l7871:
 12282                           
 12283                           ; BSR set to: 0
 12284  00279C  8E30               	bsf	(___flmul@a+2)^0,7,c
 12285  00279E  EFD9  F013         	goto	l2011
 12286  0027A2                     l7873:
 12287                           
 12288                           ; BSR set to: 0
 12289  0027A2  0E00               	movlw	0
 12290  0027A4  6E2E               	movwf	___flmul@a^0,c
 12291  0027A6  0E00               	movlw	0
 12292  0027A8  6E2F               	movwf	(___flmul@a+1)^0,c
 12293  0027AA  0E00               	movlw	0
 12294  0027AC  6E30               	movwf	(___flmul@a+2)^0,c
 12295  0027AE  0E00               	movlw	0
 12296  0027B0  6E31               	movwf	(___flmul@a+3)^0,c
 12297  0027B2                     l2011:
 12298                           
 12299                           ; BSR set to: 0
 12300  0027B2  5161               	movf	___flmul@aexp& (0+255),w,b
 12301  0027B4  B4D8               	btfsc	status,2,c
 12302  0027B6  EFDF  F013         	goto	u8081
 12303  0027BA  EFE1  F013         	goto	u8080
 12304  0027BE                     u8081:
 12305  0027BE  EFE9  F013         	goto	l7877
 12306  0027C2                     u8080:
 12307  0027C2                     
 12308                           ; BSR set to: 0
 12309  0027C2  5166               	movf	___flmul@bexp& (0+255),w,b
 12310  0027C4  A4D8               	btfss	status,2,c
 12311  0027C6  EFE7  F013         	goto	u8091
 12312  0027CA  EFE9  F013         	goto	u8090
 12313  0027CE                     u8091:
 12314  0027CE  EFF3  F013         	goto	l7881
 12315  0027D2                     u8090:
 12316  0027D2                     l7877:
 12317                           
 12318                           ; BSR set to: 0
 12319  0027D2  0E00               	movlw	0
 12320  0027D4  6E2A               	movwf	?___flmul^0,c
 12321  0027D6  0E00               	movlw	0
 12322  0027D8  6E2B               	movwf	(?___flmul+1)^0,c
 12323  0027DA  0E00               	movlw	0
 12324  0027DC  6E2C               	movwf	(?___flmul+2)^0,c
 12325  0027DE  0E00               	movlw	0
 12326  0027E0  6E2D               	movwf	(?___flmul+3)^0,c
 12327  0027E2  EF9D  F015         	goto	l2015
 12328  0027E6                     l7881:
 12329                           
 12330                           ; BSR set to: 0
 12331  0027E6  5030               	movf	(___flmul@a+2)^0,w,c
 12332  0027E8  022A               	mulwf	___flmul@b^0,c
 12333  0027EA  006F FFCC  F06B    	movff	prodl,___flmul@temp
 12334  0027F0  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 12335  0027F6                     
 12336                           ; BSR set to: 0
 12337  0027F6  516B               	movf	___flmul@temp& (0+255),w,b
 12338  0027F8  6F62               	movwf	___flmul@grs& (0+255),b
 12339  0027FA  6B63               	clrf	(___flmul@grs+1)& (0+255),b
 12340  0027FC  6B64               	clrf	(___flmul@grs+2)& (0+255),b
 12341  0027FE  6B65               	clrf	(___flmul@grs+3)& (0+255),b
 12342  002800                     
 12343                           ; BSR set to: 0
 12344  002800  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12345  002802  6F67               	movwf	___flmul@prod& (0+255),b
 12346  002804  6B68               	clrf	(___flmul@prod+1)& (0+255),b
 12347  002806  6B69               	clrf	(___flmul@prod+2)& (0+255),b
 12348  002808  6B6A               	clrf	(___flmul@prod+3)& (0+255),b
 12349  00280A  502F               	movf	(___flmul@a+1)^0,w,c
 12350  00280C  022B               	mulwf	(___flmul@b+1)^0,c
 12351  00280E  006F FFCC  F06B    	movff	prodl,___flmul@temp
 12352  002814  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 12353  00281A                     
 12354                           ; BSR set to: 0
 12355  00281A  516B               	movf	___flmul@temp& (0+255),w,b
 12356  00281C  2762               	addwf	___flmul@grs& (0+255),f,b
 12357  00281E  0E00               	movlw	0
 12358  002820  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 12359  002822  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 12360  002824  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 12361  002826                     
 12362                           ; BSR set to: 0
 12363  002826  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12364  002828  2767               	addwf	___flmul@prod& (0+255),f,b
 12365  00282A  0E00               	movlw	0
 12366  00282C  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 12367  00282E  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12368  002830  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12369  002832  502E               	movf	___flmul@a^0,w,c
 12370  002834  022C               	mulwf	(___flmul@b+2)^0,c
 12371  002836  006F FFCC  F06B    	movff	prodl,___flmul@temp
 12372  00283C  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 12373  002842                     
 12374                           ; BSR set to: 0
 12375  002842  516B               	movf	___flmul@temp& (0+255),w,b
 12376  002844  2762               	addwf	___flmul@grs& (0+255),f,b
 12377  002846  0E00               	movlw	0
 12378  002848  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 12379  00284A  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 12380  00284C  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 12381  00284E                     
 12382                           ; BSR set to: 0
 12383  00284E  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12384  002850  2767               	addwf	___flmul@prod& (0+255),f,b
 12385  002852  0E00               	movlw	0
 12386  002854  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 12387  002856  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12388  002858  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12389  00285A                     
 12390                           ; BSR set to: 0
 12391  00285A  C064  F065         	movff	___flmul@grs+2,___flmul@grs+3
 12392  00285E  C063  F064         	movff	___flmul@grs+1,___flmul@grs+2
 12393  002862  C062  F063         	movff	___flmul@grs,___flmul@grs+1
 12394  002866  6B62               	clrf	___flmul@grs& (0+255),b
 12395  002868                     
 12396                           ; BSR set to: 0
 12397  002868  502E               	movf	___flmul@a^0,w,c
 12398  00286A  022B               	mulwf	(___flmul@b+1)^0,c
 12399  00286C  006F FFCC  F06B    	movff	prodl,___flmul@temp
 12400  002872  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 12401  002878                     
 12402                           ; BSR set to: 0
 12403  002878  516B               	movf	___flmul@temp& (0+255),w,b
 12404  00287A  2762               	addwf	___flmul@grs& (0+255),f,b
 12405  00287C  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12406  00287E  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 12407  002880  0E00               	movlw	0
 12408  002882  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 12409  002884  0E00               	movlw	0
 12410  002886  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 12411  002888                     
 12412                           ; BSR set to: 0
 12413  002888  502F               	movf	(___flmul@a+1)^0,w,c
 12414  00288A  022A               	mulwf	___flmul@b^0,c
 12415  00288C  006F FFCC  F06B    	movff	prodl,___flmul@temp
 12416  002892  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 12417  002898                     
 12418                           ; BSR set to: 0
 12419  002898  516B               	movf	___flmul@temp& (0+255),w,b
 12420  00289A  2762               	addwf	___flmul@grs& (0+255),f,b
 12421  00289C  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12422  00289E  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 12423  0028A0  0E00               	movlw	0
 12424  0028A2  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 12425  0028A4  0E00               	movlw	0
 12426  0028A6  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 12427  0028A8                     
 12428                           ; BSR set to: 0
 12429  0028A8  C064  F065         	movff	___flmul@grs+2,___flmul@grs+3
 12430  0028AC  C063  F064         	movff	___flmul@grs+1,___flmul@grs+2
 12431  0028B0  C062  F063         	movff	___flmul@grs,___flmul@grs+1
 12432  0028B4  6B62               	clrf	___flmul@grs& (0+255),b
 12433  0028B6  502E               	movf	___flmul@a^0,w,c
 12434  0028B8  022A               	mulwf	___flmul@b^0,c
 12435  0028BA  006F FFCC  F06B    	movff	prodl,___flmul@temp
 12436  0028C0  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 12437  0028C6                     
 12438                           ; BSR set to: 0
 12439  0028C6  516B               	movf	___flmul@temp& (0+255),w,b
 12440  0028C8  2762               	addwf	___flmul@grs& (0+255),f,b
 12441  0028CA  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12442  0028CC  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 12443  0028CE  0E00               	movlw	0
 12444  0028D0  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 12445  0028D2  0E00               	movlw	0
 12446  0028D4  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 12447  0028D6                     
 12448                           ; BSR set to: 0
 12449  0028D6  5030               	movf	(___flmul@a+2)^0,w,c
 12450  0028D8  022B               	mulwf	(___flmul@b+1)^0,c
 12451  0028DA  006F FFCC  F06B    	movff	prodl,___flmul@temp
 12452  0028E0  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 12453  0028E6  516B               	movf	___flmul@temp& (0+255),w,b
 12454  0028E8  2767               	addwf	___flmul@prod& (0+255),f,b
 12455  0028EA  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12456  0028EC  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 12457  0028EE  0E00               	movlw	0
 12458  0028F0  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12459  0028F2  0E00               	movlw	0
 12460  0028F4  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12461  0028F6                     
 12462                           ; BSR set to: 0
 12463  0028F6  502F               	movf	(___flmul@a+1)^0,w,c
 12464  0028F8  022C               	mulwf	(___flmul@b+2)^0,c
 12465  0028FA  006F FFCC  F06B    	movff	prodl,___flmul@temp
 12466  002900  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 12467  002906                     
 12468                           ; BSR set to: 0
 12469  002906  516B               	movf	___flmul@temp& (0+255),w,b
 12470  002908  2767               	addwf	___flmul@prod& (0+255),f,b
 12471  00290A  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12472  00290C  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 12473  00290E  0E00               	movlw	0
 12474  002910  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12475  002912  0E00               	movlw	0
 12476  002914  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12477  002916  5030               	movf	(___flmul@a+2)^0,w,c
 12478  002918  022C               	mulwf	(___flmul@b+2)^0,c
 12479  00291A  006F FFCC  F06B    	movff	prodl,___flmul@temp
 12480  002920  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 12481  002926                     
 12482                           ; BSR set to: 0
 12483  002926  516B               	movf	___flmul@temp& (0+255),w,b
 12484  002928  6E32               	movwf	??___flmul^0,c
 12485  00292A  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12486  00292C  6E33               	movwf	(??___flmul+1)^0,c
 12487  00292E  6A34               	clrf	(??___flmul+2)^0,c
 12488  002930  6A35               	clrf	(??___flmul+3)^0,c
 12489  002932  C034  F035         	movff	??___flmul+2,??___flmul+3
 12490  002936  C033  F034         	movff	??___flmul+1,??___flmul+2
 12491  00293A  C032  F033         	movff	??___flmul,??___flmul+1
 12492  00293E  6A32               	clrf	??___flmul^0,c
 12493  002940  5032               	movf	??___flmul^0,w,c
 12494  002942  2767               	addwf	___flmul@prod& (0+255),f,b
 12495  002944  5033               	movf	(??___flmul+1)^0,w,c
 12496  002946  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 12497  002948  5034               	movf	(??___flmul+2)^0,w,c
 12498  00294A  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12499  00294C  5035               	movf	(??___flmul+3)^0,w,c
 12500  00294E  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12501  002950                     
 12502                           ; BSR set to: 0
 12503  002950  C062  F032         	movff	___flmul@grs,??___flmul
 12504  002954  C063  F033         	movff	___flmul@grs+1,??___flmul+1
 12505  002958  C064  F034         	movff	___flmul@grs+2,??___flmul+2
 12506  00295C  C065  F035         	movff	___flmul@grs+3,??___flmul+3
 12507  002960  0E19               	movlw	25
 12508  002962  EFB8  F014         	goto	u8100
 12509  002966                     u8105:
 12510  002966  90D8               	bcf	status,0,c
 12511  002968  3235               	rrcf	(??___flmul+3)^0,f,c
 12512  00296A  3234               	rrcf	(??___flmul+2)^0,f,c
 12513  00296C  3233               	rrcf	(??___flmul+1)^0,f,c
 12514  00296E  3232               	rrcf	??___flmul^0,f,c
 12515  002970                     u8100:
 12516  002970  2EE8               	decfsz	wreg,f,c
 12517  002972  EFB3  F014         	goto	u8105
 12518  002976  5032               	movf	??___flmul^0,w,c
 12519  002978  2767               	addwf	___flmul@prod& (0+255),f,b
 12520  00297A  5033               	movf	(??___flmul+1)^0,w,c
 12521  00297C  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 12522  00297E  5034               	movf	(??___flmul+2)^0,w,c
 12523  002980  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12524  002982  5035               	movf	(??___flmul+3)^0,w,c
 12525  002984  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12526  002986                     
 12527                           ; BSR set to: 0
 12528  002986  C064  F065         	movff	___flmul@grs+2,___flmul@grs+3
 12529  00298A  C063  F064         	movff	___flmul@grs+1,___flmul@grs+2
 12530  00298E  C062  F063         	movff	___flmul@grs,___flmul@grs+1
 12531  002992  6B62               	clrf	___flmul@grs& (0+255),b
 12532  002994                     
 12533                           ; BSR set to: 0
 12534  002994  5161               	movf	___flmul@aexp& (0+255),w,b
 12535  002996  C066  F032         	movff	___flmul@bexp,??___flmul
 12536  00299A  6A33               	clrf	(??___flmul+1)^0,c
 12537  00299C  2632               	addwf	??___flmul^0,f,c
 12538  00299E  0E00               	movlw	0
 12539  0029A0  2233               	addwfc	(??___flmul+1)^0,f,c
 12540  0029A2  0E82               	movlw	130
 12541  0029A4  2432               	addwf	??___flmul^0,w,c
 12542  0029A6  6F6B               	movwf	___flmul@temp& (0+255),b
 12543  0029A8  0EFF               	movlw	255
 12544  0029AA  2033               	addwfc	(??___flmul+1)^0,w,c
 12545  0029AC  6F6C               	movwf	(___flmul@temp+1)& (0+255),b
 12546  0029AE  EFEE  F014         	goto	l7929
 12547  0029B2                     l7923:
 12548                           
 12549                           ; BSR set to: 0
 12550  0029B2  90D8               	bcf	status,0,c
 12551  0029B4  3767               	rlcf	___flmul@prod& (0+255),f,b
 12552  0029B6  3768               	rlcf	(___flmul@prod+1)& (0+255),f,b
 12553  0029B8  3769               	rlcf	(___flmul@prod+2)& (0+255),f,b
 12554  0029BA  376A               	rlcf	(___flmul@prod+3)& (0+255),f,b
 12555  0029BC                     
 12556                           ; BSR set to: 0
 12557  0029BC  AF65               	btfss	(___flmul@grs+3)& (0+255),7,b
 12558  0029BE  EFE3  F014         	goto	u8111
 12559  0029C2  EFE5  F014         	goto	u8110
 12560  0029C6                     u8111:
 12561  0029C6  EFE6  F014         	goto	l2018
 12562  0029CA                     u8110:
 12563  0029CA                     
 12564                           ; BSR set to: 0
 12565  0029CA  8167               	bsf	___flmul@prod& (0+255),0,b
 12566  0029CC                     l2018:
 12567                           
 12568                           ; BSR set to: 0
 12569  0029CC  90D8               	bcf	status,0,c
 12570  0029CE  3762               	rlcf	___flmul@grs& (0+255),f,b
 12571  0029D0  3763               	rlcf	(___flmul@grs+1)& (0+255),f,b
 12572  0029D2  3764               	rlcf	(___flmul@grs+2)& (0+255),f,b
 12573  0029D4  3765               	rlcf	(___flmul@grs+3)& (0+255),f,b
 12574  0029D6  076B               	decf	___flmul@temp& (0+255),f,b
 12575  0029D8  A0D8               	btfss	status,0,c
 12576  0029DA  076C               	decf	(___flmul@temp+1)& (0+255),f,b
 12577  0029DC                     l7929:
 12578                           
 12579                           ; BSR set to: 0
 12580  0029DC  AF69               	btfss	(___flmul@prod+2)& (0+255),7,b
 12581  0029DE  EFF3  F014         	goto	u8121
 12582  0029E2  EFF5  F014         	goto	u8120
 12583  0029E6                     u8121:
 12584  0029E6  EFD9  F014         	goto	l7923
 12585  0029EA                     u8120:
 12586  0029EA                     
 12587                           ; BSR set to: 0
 12588  0029EA  0E00               	movlw	0
 12589  0029EC  6F61               	movwf	___flmul@aexp& (0+255),b
 12590  0029EE                     
 12591                           ; BSR set to: 0
 12592  0029EE  AF65               	btfss	(___flmul@grs+3)& (0+255),7,b
 12593  0029F0  EFFC  F014         	goto	u8131
 12594  0029F4  EFFE  F014         	goto	u8130
 12595  0029F8                     u8131:
 12596  0029F8  EF22  F015         	goto	l2020
 12597  0029FC                     u8130:
 12598  0029FC                     
 12599                           ; BSR set to: 0
 12600  0029FC  0EFF               	movlw	255
 12601  0029FE  1562               	andwf	___flmul@grs& (0+255),w,b
 12602  002A00  6E32               	movwf	??___flmul^0,c
 12603  002A02  0EFF               	movlw	255
 12604  002A04  1563               	andwf	(___flmul@grs+1)& (0+255),w,b
 12605  002A06  6E33               	movwf	(??___flmul+1)^0,c
 12606  002A08  0EFF               	movlw	255
 12607  002A0A  1564               	andwf	(___flmul@grs+2)& (0+255),w,b
 12608  002A0C  6E34               	movwf	(??___flmul+2)^0,c
 12609  002A0E  0E7F               	movlw	127
 12610  002A10  1565               	andwf	(___flmul@grs+3)& (0+255),w,b
 12611  002A12  6E35               	movwf	(??___flmul+3)^0,c
 12612  002A14  5032               	movf	??___flmul^0,w,c
 12613  002A16  1033               	iorwf	(??___flmul+1)^0,w,c
 12614  002A18  1034               	iorwf	(??___flmul+2)^0,w,c
 12615  002A1A  1035               	iorwf	(??___flmul+3)^0,w,c
 12616  002A1C  B4D8               	btfsc	status,2,c
 12617  002A1E  EF13  F015         	goto	u8141
 12618  002A22  EF15  F015         	goto	u8140
 12619  002A26                     u8141:
 12620  002A26  EF19  F015         	goto	l2021
 12621  002A2A                     u8140:
 12622  002A2A                     l7937:
 12623                           
 12624                           ; BSR set to: 0
 12625  002A2A  0E01               	movlw	1
 12626  002A2C  6F61               	movwf	___flmul@aexp& (0+255),b
 12627  002A2E  EF22  F015         	goto	l2020
 12628  002A32                     l2021:
 12629                           
 12630                           ; BSR set to: 0
 12631  002A32  A167               	btfss	___flmul@prod& (0+255),0,b
 12632  002A34  EF1E  F015         	goto	u8151
 12633  002A38  EF20  F015         	goto	u8150
 12634  002A3C                     u8151:
 12635  002A3C  EF22  F015         	goto	l2020
 12636  002A40                     u8150:
 12637  002A40  EF15  F015         	goto	l7937
 12638  002A44                     l2020:
 12639                           
 12640                           ; BSR set to: 0
 12641  002A44  5161               	movf	___flmul@aexp& (0+255),w,b
 12642  002A46  B4D8               	btfsc	status,2,c
 12643  002A48  EF28  F015         	goto	u8161
 12644  002A4C  EF2A  F015         	goto	u8160
 12645  002A50                     u8161:
 12646  002A50  EF4E  F015         	goto	l7949
 12647  002A54                     u8160:
 12648  002A54                     
 12649                           ; BSR set to: 0
 12650  002A54  0E01               	movlw	1
 12651  002A56  2767               	addwf	___flmul@prod& (0+255),f,b
 12652  002A58  0E00               	movlw	0
 12653  002A5A  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 12654  002A5C  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12655  002A5E  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12656  002A60                     
 12657                           ; BSR set to: 0
 12658  002A60  A16A               	btfss	(___flmul@prod+3)& (0+255),0,b
 12659  002A62  EF35  F015         	goto	u8171
 12660  002A66  EF37  F015         	goto	u8170
 12661  002A6A                     u8171:
 12662  002A6A  EF4E  F015         	goto	l7949
 12663  002A6E                     u8170:
 12664  002A6E                     
 12665                           ; BSR set to: 0
 12666  002A6E  C067  F032         	movff	___flmul@prod,??___flmul
 12667  002A72  C068  F033         	movff	___flmul@prod+1,??___flmul+1
 12668  002A76  C069  F034         	movff	___flmul@prod+2,??___flmul+2
 12669  002A7A  C06A  F035         	movff	___flmul@prod+3,??___flmul+3
 12670  002A7E  3435               	rlcf	(??___flmul+3)^0,w,c
 12671  002A80  3235               	rrcf	(??___flmul+3)^0,f,c
 12672  002A82  3234               	rrcf	(??___flmul+2)^0,f,c
 12673  002A84  3233               	rrcf	(??___flmul+1)^0,f,c
 12674  002A86  3232               	rrcf	??___flmul^0,f,c
 12675  002A88  C032  F067         	movff	??___flmul,___flmul@prod
 12676  002A8C  C033  F068         	movff	??___flmul+1,___flmul@prod+1
 12677  002A90  C034  F069         	movff	??___flmul+2,___flmul@prod+2
 12678  002A94  C035  F06A         	movff	??___flmul+3,___flmul@prod+3
 12679  002A98                     
 12680                           ; BSR set to: 0
 12681  002A98  4B6B               	infsnz	___flmul@temp& (0+255),f,b
 12682  002A9A  2B6C               	incf	(___flmul@temp+1)& (0+255),f,b
 12683  002A9C                     l7949:
 12684                           
 12685                           ; BSR set to: 0
 12686  002A9C  BF6C               	btfsc	(___flmul@temp+1)& (0+255),7,b
 12687  002A9E  EF59  F015         	goto	u8181
 12688  002AA2  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12689  002AA4  E108               	bnz	u8180
 12690  002AA6  296B               	incf	___flmul@temp& (0+255),w,b
 12691  002AA8  A0D8               	btfss	status,0,c
 12692  002AAA  EF59  F015         	goto	u8181
 12693  002AAE  EF5B  F015         	goto	u8180
 12694  002AB2                     u8181:
 12695  002AB2  EF65  F015         	goto	l7953
 12696  002AB6                     u8180:
 12697  002AB6                     
 12698                           ; BSR set to: 0
 12699  002AB6  0E00               	movlw	0
 12700  002AB8  6F67               	movwf	___flmul@prod& (0+255),b
 12701  002ABA  0E00               	movlw	0
 12702  002ABC  6F68               	movwf	(___flmul@prod+1)& (0+255),b
 12703  002ABE  0E80               	movlw	128
 12704  002AC0  6F69               	movwf	(___flmul@prod+2)& (0+255),b
 12705  002AC2  0E7F               	movlw	127
 12706  002AC4  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
 12707  002AC6  EF93  F015         	goto	l7965
 12708  002ACA                     l7953:
 12709                           
 12710                           ; BSR set to: 0
 12711  002ACA  BF6C               	btfsc	(___flmul@temp+1)& (0+255),7,b
 12712  002ACC  EF72  F015         	goto	u8190
 12713  002AD0  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12714  002AD2  E106               	bnz	u8191
 12715  002AD4  056B               	decf	___flmul@temp& (0+255),w,b
 12716  002AD6  B0D8               	btfsc	status,0,c
 12717  002AD8  EF70  F015         	goto	u8191
 12718  002ADC  EF72  F015         	goto	u8190
 12719  002AE0                     u8191:
 12720  002AE0  EF7E  F015         	goto	l2028
 12721  002AE4                     u8190:
 12722  002AE4                     
 12723                           ; BSR set to: 0
 12724  002AE4  0E00               	movlw	0
 12725  002AE6  6F67               	movwf	___flmul@prod& (0+255),b
 12726  002AE8  0E00               	movlw	0
 12727  002AEA  6F68               	movwf	(___flmul@prod+1)& (0+255),b
 12728  002AEC  0E00               	movlw	0
 12729  002AEE  6F69               	movwf	(___flmul@prod+2)& (0+255),b
 12730  002AF0  0E00               	movlw	0
 12731  002AF2  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
 12732  002AF4  0E00               	movlw	0
 12733  002AF6  6F60               	movwf	___flmul@sign& (0+255),b
 12734  002AF8  EF93  F015         	goto	l7965
 12735  002AFC                     l2028:
 12736                           
 12737                           ; BSR set to: 0
 12738  002AFC  C06B  F066         	movff	___flmul@temp,___flmul@bexp
 12739  002B00                     
 12740                           ; BSR set to: 0
 12741  002B00  0EFF               	movlw	255
 12742  002B02  1767               	andwf	___flmul@prod& (0+255),f,b
 12743  002B04  0EFF               	movlw	255
 12744  002B06  1768               	andwf	(___flmul@prod+1)& (0+255),f,b
 12745  002B08  0E7F               	movlw	127
 12746  002B0A  1769               	andwf	(___flmul@prod+2)& (0+255),f,b
 12747  002B0C  0E00               	movlw	0
 12748  002B0E  176A               	andwf	(___flmul@prod+3)& (0+255),f,b
 12749  002B10                     
 12750                           ; BSR set to: 0
 12751  002B10  A166               	btfss	___flmul@bexp& (0+255),0,b
 12752  002B12  EF8D  F015         	goto	u8201
 12753  002B16  EF8F  F015         	goto	u8200
 12754  002B1A                     u8201:
 12755  002B1A  EF90  F015         	goto	l7963
 12756  002B1E                     u8200:
 12757  002B1E                     
 12758                           ; BSR set to: 0
 12759  002B1E  8F69               	bsf	(___flmul@prod+2)& (0+255),7,b
 12760  002B20                     l7963:
 12761                           
 12762                           ; BSR set to: 0
 12763  002B20  90D8               	bcf	status,0,c
 12764  002B22  3166               	rrcf	___flmul@bexp& (0+255),w,b
 12765  002B24  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
 12766  002B26                     l7965:
 12767                           
 12768                           ; BSR set to: 0
 12769  002B26  5160               	movf	___flmul@sign& (0+255),w,b
 12770  002B28  136A               	iorwf	(___flmul@prod+3)& (0+255),f,b
 12771  002B2A                     
 12772                           ; BSR set to: 0
 12773  002B2A  C067  F02A         	movff	___flmul@prod,?___flmul
 12774  002B2E  C068  F02B         	movff	___flmul@prod+1,?___flmul+1
 12775  002B32  C069  F02C         	movff	___flmul@prod+2,?___flmul+2
 12776  002B36  C06A  F02D         	movff	___flmul@prod+3,?___flmul+3
 12777  002B3A                     l2015:
 12778                           
 12779                           ; BSR set to: 0
 12780  002B3A  0012               	return		;funcret
 12781  002B3C                     __end_of___flmul:
 12782                           	callstack 0
 12783                           
 12784 ;; *************** function ___awdiv *****************
 12785 ;; Defined at:
 12786 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
 12787 ;; Parameters:    Size  Location     Type
 12788 ;;  dividend        2   19[COMRAM] int 
 12789 ;;  divisor         2   21[COMRAM] int 
 12790 ;; Auto vars:     Size  Location     Type
 12791 ;;  quotient        2   25[COMRAM] int 
 12792 ;;  sign            1   24[COMRAM] unsigned char 
 12793 ;;  counter         1   23[COMRAM] unsigned char 
 12794 ;; Return value:  Size  Location     Type
 12795 ;;                  2   19[COMRAM] int 
 12796 ;; Registers used:
 12797 ;;		wreg, status,2, status,0
 12798 ;; Tracked objects:
 12799 ;;		On entry : 0/0
 12800 ;;		On exit  : 0/0
 12801 ;;		Unchanged: 0/0
 12802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12803 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12804 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12806 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12807 ;;Total ram usage:        8 bytes
 12808 ;; Hardware stack levels used: 1
 12809 ;; Hardware stack levels required when called: 8
 12810 ;; This function calls:
 12811 ;;		Nothing
 12812 ;; This function is called by:
 12813 ;;		_calcSteering
 12814 ;;		_calcMotorPow
 12815 ;;		_setSteering
 12816 ;;		_efgtoa
 12817 ;; This function uses a non-reentrant model
 12818 ;;
 12819                           
 12820                           	psect	text49
 12821  004C1C                     __ptext49:
 12822                           	callstack 0
 12823  004C1C                     ___awdiv:
 12824                           	callstack 19
 12825  004C1C  0E00               	movlw	0
 12826  004C1E  6E19               	movwf	___awdiv@sign^0,c
 12827  004C20  BE17               	btfsc	(___awdiv@divisor+1)^0,7,c
 12828  004C22  EF17  F026         	goto	u8210
 12829  004C26  EF15  F026         	goto	u8211
 12830  004C2A                     u8211:
 12831  004C2A  EF1D  F026         	goto	l7985
 12832  004C2E                     u8210:
 12833  004C2E  6C16               	negf	___awdiv@divisor^0,c
 12834  004C30  1E17               	comf	(___awdiv@divisor+1)^0,f,c
 12835  004C32  B0D8               	btfsc	status,0,c
 12836  004C34  2A17               	incf	(___awdiv@divisor+1)^0,f,c
 12837  004C36  0E01               	movlw	1
 12838  004C38  6E19               	movwf	___awdiv@sign^0,c
 12839  004C3A                     l7985:
 12840  004C3A  BE15               	btfsc	(___awdiv@dividend+1)^0,7,c
 12841  004C3C  EF24  F026         	goto	u8220
 12842  004C40  EF22  F026         	goto	u8221
 12843  004C44                     u8221:
 12844  004C44  EF2A  F026         	goto	l7991
 12845  004C48                     u8220:
 12846  004C48  6C14               	negf	___awdiv@dividend^0,c
 12847  004C4A  1E15               	comf	(___awdiv@dividend+1)^0,f,c
 12848  004C4C  B0D8               	btfsc	status,0,c
 12849  004C4E  2A15               	incf	(___awdiv@dividend+1)^0,f,c
 12850  004C50  0E01               	movlw	1
 12851  004C52  1A19               	xorwf	___awdiv@sign^0,f,c
 12852  004C54                     l7991:
 12853  004C54  0E00               	movlw	0
 12854  004C56  6E1B               	movwf	(___awdiv@quotient+1)^0,c
 12855  004C58  0E00               	movlw	0
 12856  004C5A  6E1A               	movwf	___awdiv@quotient^0,c
 12857  004C5C  5016               	movf	___awdiv@divisor^0,w,c
 12858  004C5E  1017               	iorwf	(___awdiv@divisor+1)^0,w,c
 12859  004C60  B4D8               	btfsc	status,2,c
 12860  004C62  EF35  F026         	goto	u8231
 12861  004C66  EF37  F026         	goto	u8230
 12862  004C6A                     u8231:
 12863  004C6A  EF5F  F026         	goto	l8013
 12864  004C6E                     u8230:
 12865  004C6E  0E01               	movlw	1
 12866  004C70  6E18               	movwf	___awdiv@counter^0,c
 12867  004C72  EF3F  F026         	goto	l7999
 12868  004C76                     l7997:
 12869  004C76  90D8               	bcf	status,0,c
 12870  004C78  3616               	rlcf	___awdiv@divisor^0,f,c
 12871  004C7A  3617               	rlcf	(___awdiv@divisor+1)^0,f,c
 12872  004C7C  2A18               	incf	___awdiv@counter^0,f,c
 12873  004C7E                     l7999:
 12874  004C7E  AE17               	btfss	(___awdiv@divisor+1)^0,7,c
 12875  004C80  EF44  F026         	goto	u8241
 12876  004C84  EF46  F026         	goto	u8240
 12877  004C88                     u8241:
 12878  004C88  EF3B  F026         	goto	l7997
 12879  004C8C                     u8240:
 12880  004C8C                     l8001:
 12881  004C8C  90D8               	bcf	status,0,c
 12882  004C8E  361A               	rlcf	___awdiv@quotient^0,f,c
 12883  004C90  361B               	rlcf	(___awdiv@quotient+1)^0,f,c
 12884  004C92  5016               	movf	___awdiv@divisor^0,w,c
 12885  004C94  5C14               	subwf	___awdiv@dividend^0,w,c
 12886  004C96  5017               	movf	(___awdiv@divisor+1)^0,w,c
 12887  004C98  5815               	subwfb	(___awdiv@dividend+1)^0,w,c
 12888  004C9A  A0D8               	btfss	status,0,c
 12889  004C9C  EF52  F026         	goto	u8251
 12890  004CA0  EF54  F026         	goto	u8250
 12891  004CA4                     u8251:
 12892  004CA4  EF59  F026         	goto	l8009
 12893  004CA8                     u8250:
 12894  004CA8  5016               	movf	___awdiv@divisor^0,w,c
 12895  004CAA  5E14               	subwf	___awdiv@dividend^0,f,c
 12896  004CAC  5017               	movf	(___awdiv@divisor+1)^0,w,c
 12897  004CAE  5A15               	subwfb	(___awdiv@dividend+1)^0,f,c
 12898  004CB0  801A               	bsf	___awdiv@quotient^0,0,c
 12899  004CB2                     l8009:
 12900  004CB2  90D8               	bcf	status,0,c
 12901  004CB4  3217               	rrcf	(___awdiv@divisor+1)^0,f,c
 12902  004CB6  3216               	rrcf	___awdiv@divisor^0,f,c
 12903  004CB8  2E18               	decfsz	___awdiv@counter^0,f,c
 12904  004CBA  EF46  F026         	goto	l8001
 12905  004CBE                     l8013:
 12906  004CBE  5019               	movf	___awdiv@sign^0,w,c
 12907  004CC0  B4D8               	btfsc	status,2,c
 12908  004CC2  EF65  F026         	goto	u8261
 12909  004CC6  EF67  F026         	goto	u8260
 12910  004CCA                     u8261:
 12911  004CCA  EF6B  F026         	goto	l8017
 12912  004CCE                     u8260:
 12913  004CCE  6C1A               	negf	___awdiv@quotient^0,c
 12914  004CD0  1E1B               	comf	(___awdiv@quotient+1)^0,f,c
 12915  004CD2  B0D8               	btfsc	status,0,c
 12916  004CD4  2A1B               	incf	(___awdiv@quotient+1)^0,f,c
 12917  004CD6                     l8017:
 12918  004CD6  C01A  F014         	movff	___awdiv@quotient,?___awdiv
 12919  004CDA  C01B  F015         	movff	___awdiv@quotient+1,?___awdiv+1
 12920  004CDE  0012               	return		;funcret
 12921  004CE0                     __end_of___awdiv:
 12922                           	callstack 0
 12923                           
 12924 ;; *************** function _SYSTEM_Initialize *****************
 12925 ;; Defined at:
 12926 ;;		line 50 in file "mcc_generated_files/mcc.c"
 12927 ;; Parameters:    Size  Location     Type
 12928 ;;		None
 12929 ;; Auto vars:     Size  Location     Type
 12930 ;;		None
 12931 ;; Return value:  Size  Location     Type
 12932 ;;                  1    wreg      void 
 12933 ;; Registers used:
 12934 ;;		wreg, status,2, status,0, cstack
 12935 ;; Tracked objects:
 12936 ;;		On entry : 0/0
 12937 ;;		On exit  : 0/0
 12938 ;;		Unchanged: 0/0
 12939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12943 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12944 ;;Total ram usage:        0 bytes
 12945 ;; Hardware stack levels used: 1
 12946 ;; Hardware stack levels required when called: 10
 12947 ;; This function calls:
 12948 ;;		_ADCC_Initialize
 12949 ;;		_CCP3_Initialize
 12950 ;;		_CCP4_Initialize
 12951 ;;		_CLC3_Initialize
 12952 ;;		_INTERRUPT_Initialize
 12953 ;;		_OSCILLATOR_Initialize
 12954 ;;		_PIN_MANAGER_Initialize
 12955 ;;		_PMD_Initialize
 12956 ;;		_PWM5_Initialize
 12957 ;;		_PWM6_Initialize
 12958 ;;		_PWM7_Initialize
 12959 ;;		_PWM8_Initialize
 12960 ;;		_SMT1_Initialize
 12961 ;;		_TMR2_Initialize
 12962 ;;		_TMR3_Initialize
 12963 ;;		_TMR4_Initialize
 12964 ;;		_TMR5_Initialize
 12965 ;;		_UART1_Initialize
 12966 ;; This function is called by:
 12967 ;;		_main
 12968 ;; This function uses a non-reentrant model
 12969 ;;
 12970                           
 12971                           	psect	text50
 12972  005514                     __ptext50:
 12973                           	callstack 0
 12974  005514                     _SYSTEM_Initialize:
 12975                           	callstack 20
 12976  005514                     
 12977                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 12978  005514  EC64  F02A         	call	_INTERRUPT_Initialize	;wreg free
 12979                           
 12980                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 12981  005518  EC26  F02E         	call	_PMD_Initialize	;wreg free
 12982                           
 12983                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 12984  00551C  ECA9  F025         	call	_PIN_MANAGER_Initialize	;wreg free
 12985                           
 12986                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 12987  005520  ECA7  F02E         	call	_OSCILLATOR_Initialize	;wreg free
 12988  005524                     
 12989                           ;mcc_generated_files/mcc.c: 56:     CCP3_Initialize();
 12990  005524  EC78  F02D         	call	_CCP3_Initialize	;wreg free
 12991  005528                     
 12992                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 12993  005528  EC0C  F02A         	call	_ADCC_Initialize	;wreg free
 12994                           
 12995                           ;mcc_generated_files/mcc.c: 58:     TMR4_Initialize();
 12996  00552C  ECA6  F02D         	call	_TMR4_Initialize	;wreg free
 12997  005530                     
 12998                           ;mcc_generated_files/mcc.c: 59:     SMT1_Initialize();
 12999  005530  EC19  F02D         	call	_SMT1_Initialize	;wreg free
 13000  005534                     
 13001                           ;mcc_generated_files/mcc.c: 60:     TMR2_Initialize();
 13002  005534  EC69  F02E         	call	_TMR2_Initialize	;wreg free
 13003  005538                     
 13004                           ;mcc_generated_files/mcc.c: 61:     PWM8_Initialize();
 13005  005538  EC77  F02E         	call	_PWM8_Initialize	;wreg free
 13006  00553C                     
 13007                           ;mcc_generated_files/mcc.c: 62:     PWM6_Initialize();
 13008  00553C  EC8F  F02E         	call	_PWM6_Initialize	;wreg free
 13009                           
 13010                           ;mcc_generated_files/mcc.c: 63:     CCP4_Initialize();
 13011  005540  EC61  F02D         	call	_CCP4_Initialize	;wreg free
 13012  005544                     
 13013                           ;mcc_generated_files/mcc.c: 64:     CLC3_Initialize();
 13014  005544  ECBC  F02D         	call	_CLC3_Initialize	;wreg free
 13015  005548                     
 13016                           ;mcc_generated_files/mcc.c: 65:     TMR3_Initialize();
 13017  005548  EC11  F02C         	call	_TMR3_Initialize	;wreg free
 13018                           
 13019                           ;mcc_generated_files/mcc.c: 66:     PWM5_Initialize();
 13020  00554C  EC9B  F02E         	call	_PWM5_Initialize	;wreg free
 13021  005550                     
 13022                           ;mcc_generated_files/mcc.c: 67:     TMR5_Initialize();
 13023  005550  ECAF  F02A         	call	_TMR5_Initialize	;wreg free
 13024  005554                     
 13025                           ;mcc_generated_files/mcc.c: 68:     PWM7_Initialize();
 13026  005554  EC83  F02E         	call	_PWM7_Initialize	;wreg free
 13027                           
 13028                           ;mcc_generated_files/mcc.c: 69:     UART1_Initialize();
 13029  005558  ECDE  F027         	call	_UART1_Initialize	;wreg free
 13030  00555C  0012               	return		;funcret
 13031  00555E                     __end_of_SYSTEM_Initialize:
 13032                           	callstack 0
 13033                           
 13034 ;; *************** function _UART1_Initialize *****************
 13035 ;; Defined at:
 13036 ;;		line 87 in file "mcc_generated_files/uart1.c"
 13037 ;; Parameters:    Size  Location     Type
 13038 ;;		None
 13039 ;; Auto vars:     Size  Location     Type
 13040 ;;		None
 13041 ;; Return value:  Size  Location     Type
 13042 ;;                  1    wreg      void 
 13043 ;; Registers used:
 13044 ;;		wreg, status,2, status,0, cstack
 13045 ;; Tracked objects:
 13046 ;;		On entry : 0/0
 13047 ;;		On exit  : 0/0
 13048 ;;		Unchanged: 0/0
 13049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13053 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13054 ;;Total ram usage:        0 bytes
 13055 ;; Hardware stack levels used: 1
 13056 ;; Hardware stack levels required when called: 9
 13057 ;; This function calls:
 13058 ;;		_UART1_SetErrorHandler
 13059 ;;		_UART1_SetFramingErrorHandler
 13060 ;;		_UART1_SetOverrunErrorHandler
 13061 ;;		_UART1_SetRxInterruptHandler
 13062 ;;		_UART1_SetTxInterruptHandler
 13063 ;; This function is called by:
 13064 ;;		_SYSTEM_Initialize
 13065 ;; This function uses a non-reentrant model
 13066 ;;
 13067                           
 13068                           	psect	text51
 13069  004FBC                     __ptext51:
 13070                           	callstack 0
 13071  004FBC                     _UART1_Initialize:
 13072                           	callstack 20
 13073  004FBC                     
 13074                           ;mcc_generated_files/uart1.c: 90:     PIE3bits.U1RXIE = 0;
 13075  004FBC  0139               	movlb	57	; () banked
 13076  004FBE  9793               	bcf	147,3,b	;volatile
 13077  004FC0                     
 13078                           ; BSR set to: 57
 13079                           ;mcc_generated_files/uart1.c: 91:     UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 13080  004FC0  0EA2               	movlw	low _UART1_Receive_ISR
 13081  004FC2  6E14               	movwf	UART1_SetRxInterruptHandler@InterruptHandler^0,c
 13082  004FC4  0E4D               	movlw	high _UART1_Receive_ISR
 13083  004FC6  6E15               	movwf	(UART1_SetRxInterruptHandler@InterruptHandler+1)^0,c
 13084  004FC8  ECCC  F02E         	call	_UART1_SetRxInterruptHandler	;wreg free
 13085  004FCC                     
 13086                           ;mcc_generated_files/uart1.c: 92:     PIE3bits.U1TXIE = 0;
 13087  004FCC  0139               	movlb	57	; () banked
 13088  004FCE  9993               	bcf	147,4,b	;volatile
 13089                           
 13090                           ;mcc_generated_files/uart1.c: 93:     UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 13091  004FD0  0E7E               	movlw	low _UART1_Transmit_ISR
 13092  004FD2  6E14               	movwf	UART1_SetTxInterruptHandler@InterruptHandler^0,c
 13093  004FD4  0E56               	movlw	high _UART1_Transmit_ISR
 13094  004FD6  6E15               	movwf	(UART1_SetTxInterruptHandler@InterruptHandler+1)^0,c
 13095  004FD8  ECC7  F02E         	call	_UART1_SetTxInterruptHandler	;wreg free
 13096  004FDC                     
 13097                           ;mcc_generated_files/uart1.c: 98:     U1P1L = 0x00;
 13098  004FDC  0E00               	movlw	0
 13099  004FDE  013D               	movlb	61	; () banked
 13100  004FE0  6FEC               	movwf	236,b	;volatile
 13101  004FE2                     
 13102                           ; BSR set to: 61
 13103                           ;mcc_generated_files/uart1.c: 101:     U1P1H = 0x00;
 13104  004FE2  0E00               	movlw	0
 13105  004FE4  6FED               	movwf	237,b	;volatile
 13106  004FE6                     
 13107                           ; BSR set to: 61
 13108                           ;mcc_generated_files/uart1.c: 104:     U1P2L = 0x00;
 13109  004FE6  0E00               	movlw	0
 13110  004FE8  6FEE               	movwf	238,b	;volatile
 13111  004FEA                     
 13112                           ; BSR set to: 61
 13113                           ;mcc_generated_files/uart1.c: 107:     U1P2H = 0x00;
 13114  004FEA  0E00               	movlw	0
 13115  004FEC  6FEF               	movwf	239,b	;volatile
 13116  004FEE                     
 13117                           ; BSR set to: 61
 13118                           ;mcc_generated_files/uart1.c: 110:     U1P3L = 0x00;
 13119  004FEE  0E00               	movlw	0
 13120  004FF0  6FF0               	movwf	240,b	;volatile
 13121  004FF2                     
 13122                           ; BSR set to: 61
 13123                           ;mcc_generated_files/uart1.c: 113:     U1P3H = 0x00;
 13124  004FF2  0E00               	movlw	0
 13125  004FF4  6FF1               	movwf	241,b	;volatile
 13126  004FF6                     
 13127                           ; BSR set to: 61
 13128                           ;mcc_generated_files/uart1.c: 116:     U1CON0 = 0xB0;
 13129  004FF6  0EB0               	movlw	176
 13130  004FF8  6FF2               	movwf	242,b	;volatile
 13131  004FFA                     
 13132                           ; BSR set to: 61
 13133                           ;mcc_generated_files/uart1.c: 119:     U1CON1 = 0x80;
 13134  004FFA  0E80               	movlw	128
 13135  004FFC  6FF3               	movwf	243,b	;volatile
 13136  004FFE                     
 13137                           ; BSR set to: 61
 13138                           ;mcc_generated_files/uart1.c: 122:     U1CON2 = 0x00;
 13139  004FFE  0E00               	movlw	0
 13140  005000  6FF4               	movwf	244,b	;volatile
 13141  005002                     
 13142                           ; BSR set to: 61
 13143                           ;mcc_generated_files/uart1.c: 125:     U1BRGL = 0x8A;
 13144  005002  0E8A               	movlw	138
 13145  005004  6FF5               	movwf	245,b	;volatile
 13146  005006                     
 13147                           ; BSR set to: 61
 13148                           ;mcc_generated_files/uart1.c: 128:     U1BRGH = 0x00;
 13149  005006  0E00               	movlw	0
 13150  005008  6FF6               	movwf	246,b	;volatile
 13151  00500A                     
 13152                           ; BSR set to: 61
 13153                           ;mcc_generated_files/uart1.c: 131:     U1FIFO = 0x00;
 13154  00500A  0E00               	movlw	0
 13155  00500C  6FF7               	movwf	247,b	;volatile
 13156  00500E                     
 13157                           ; BSR set to: 61
 13158                           ;mcc_generated_files/uart1.c: 134:     U1UIR = 0x00;
 13159  00500E  0E00               	movlw	0
 13160  005010  6FF8               	movwf	248,b	;volatile
 13161  005012                     
 13162                           ; BSR set to: 61
 13163                           ;mcc_generated_files/uart1.c: 137:     U1ERRIR = 0x00;
 13164  005012  0E00               	movlw	0
 13165  005014  6FF9               	movwf	249,b	;volatile
 13166  005016                     
 13167                           ; BSR set to: 61
 13168                           ;mcc_generated_files/uart1.c: 140:     U1ERRIE = 0x00;
 13169  005016  0E00               	movlw	0
 13170  005018  6FFA               	movwf	250,b	;volatile
 13171  00501A                     
 13172                           ; BSR set to: 61
 13173                           ;mcc_generated_files/uart1.c: 143:     UART1_SetFramingErrorHandler(UART1_DefaultFraming
      +                          ErrorHandler);
 13174  00501A  0EF8               	movlw	low _UART1_DefaultFramingErrorHandler
 13175  00501C  6E14               	movwf	UART1_SetFramingErrorHandler@interruptHandler^0,c
 13176  00501E  0E5D               	movlw	high _UART1_DefaultFramingErrorHandler
 13177  005020  6E15               	movwf	(UART1_SetFramingErrorHandler@interruptHandler+1)^0,c
 13178  005022  ECD6  F02E         	call	_UART1_SetFramingErrorHandler	;wreg free
 13179  005026                     
 13180                           ;mcc_generated_files/uart1.c: 144:     UART1_SetOverrunErrorHandler(UART1_DefaultOverrun
      +                          ErrorHandler);
 13181  005026  0EF6               	movlw	low _UART1_DefaultOverrunErrorHandler
 13182  005028  6E14               	movwf	UART1_SetOverrunErrorHandler@interruptHandler^0,c
 13183  00502A  0E5D               	movlw	high _UART1_DefaultOverrunErrorHandler
 13184  00502C  6E15               	movwf	(UART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
 13185  00502E  ECD1  F02E         	call	_UART1_SetOverrunErrorHandler	;wreg free
 13186  005032                     
 13187                           ;mcc_generated_files/uart1.c: 145:     UART1_SetErrorHandler(UART1_DefaultErrorHandler);
 13188  005032  0EE8               	movlw	low _UART1_DefaultErrorHandler
 13189  005034  6E14               	movwf	UART1_SetErrorHandler@interruptHandler^0,c
 13190  005036  0E5D               	movlw	high _UART1_DefaultErrorHandler
 13191  005038  6E15               	movwf	(UART1_SetErrorHandler@interruptHandler+1)^0,c
 13192  00503A  ECDB  F02E         	call	_UART1_SetErrorHandler	;wreg free
 13193                           
 13194                           ;mcc_generated_files/uart1.c: 147:     uart1RxLastError.status = 0;
 13195  00503E  0E00               	movlw	0
 13196  005040  6E42               	movwf	_uart1RxLastError^0,c	;volatile
 13197                           
 13198                           ;mcc_generated_files/uart1.c: 150:     uart1TxHead = 0;
 13199  005042  0E00               	movlw	0
 13200  005044  6E47               	movwf	_uart1TxHead^0,c	;volatile
 13201                           
 13202                           ;mcc_generated_files/uart1.c: 151:     uart1TxTail = 0;
 13203  005046  0E00               	movlw	0
 13204  005048  6E46               	movwf	_uart1TxTail^0,c	;volatile
 13205                           
 13206                           ;mcc_generated_files/uart1.c: 152:     uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 13207  00504A  0E08               	movlw	8
 13208  00504C  6E4C               	movwf	_uart1TxBufferRemaining^0,c	;volatile
 13209                           
 13210                           ;mcc_generated_files/uart1.c: 153:     uart1RxHead = 0;
 13211  00504E  0E00               	movlw	0
 13212  005050  6E45               	movwf	_uart1RxHead^0,c	;volatile
 13213                           
 13214                           ;mcc_generated_files/uart1.c: 154:     uart1RxTail = 0;
 13215  005052  0E00               	movlw	0
 13216  005054  6E44               	movwf	_uart1RxTail^0,c	;volatile
 13217                           
 13218                           ;mcc_generated_files/uart1.c: 155:     uart1RxCount = 0;
 13219  005056  0E00               	movlw	0
 13220  005058  6E43               	movwf	_uart1RxCount^0,c	;volatile
 13221  00505A                     
 13222                           ;mcc_generated_files/uart1.c: 158:     PIE3bits.U1RXIE = 1;
 13223  00505A  0139               	movlb	57	; () banked
 13224  00505C  8793               	bsf	147,3,b	;volatile
 13225  00505E                     
 13226                           ; BSR set to: 57
 13227  00505E  0012               	return		;funcret
 13228  005060                     __end_of_UART1_Initialize:
 13229                           	callstack 0
 13230                           
 13231 ;; *************** function _UART1_SetTxInterruptHandler *****************
 13232 ;; Defined at:
 13233 ;;		line 333 in file "mcc_generated_files/uart1.c"
 13234 ;; Parameters:    Size  Location     Type
 13235 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
 13236 ;;		 -> UART1_Transmit_ISR(1), 
 13237 ;; Auto vars:     Size  Location     Type
 13238 ;;		None
 13239 ;; Return value:  Size  Location     Type
 13240 ;;                  1    wreg      void 
 13241 ;; Registers used:
 13242 ;;		wreg, status,2, status,0
 13243 ;; Tracked objects:
 13244 ;;		On entry : 0/0
 13245 ;;		On exit  : 0/0
 13246 ;;		Unchanged: 0/0
 13247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13248 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13251 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13252 ;;Total ram usage:        2 bytes
 13253 ;; Hardware stack levels used: 1
 13254 ;; Hardware stack levels required when called: 8
 13255 ;; This function calls:
 13256 ;;		Nothing
 13257 ;; This function is called by:
 13258 ;;		_UART1_Initialize
 13259 ;; This function uses a non-reentrant model
 13260 ;;
 13261                           
 13262                           	psect	text52
 13263  005D8E                     __ptext52:
 13264                           	callstack 0
 13265  005D8E                     _UART1_SetTxInterruptHandler:
 13266                           	callstack 20
 13267  005D8E                     
 13268                           ;mcc_generated_files/uart1.c: 334:     UART1_TxInterruptHandler = InterruptHandler;
 13269  005D8E  C014  F196         	movff	UART1_SetTxInterruptHandler@InterruptHandler,_UART1_TxInterruptHandler
 13270  005D92  C015  F197         	movff	UART1_SetTxInterruptHandler@InterruptHandler+1,_UART1_TxInterruptHandler+1
 13271  005D96  0012               	return		;funcret
 13272  005D98                     __end_of_UART1_SetTxInterruptHandler:
 13273                           	callstack 0
 13274                           
 13275 ;; *************** function _UART1_SetRxInterruptHandler *****************
 13276 ;; Defined at:
 13277 ;;		line 329 in file "mcc_generated_files/uart1.c"
 13278 ;; Parameters:    Size  Location     Type
 13279 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
 13280 ;;		 -> UART1_Receive_ISR(1), 
 13281 ;; Auto vars:     Size  Location     Type
 13282 ;;		None
 13283 ;; Return value:  Size  Location     Type
 13284 ;;                  1    wreg      void 
 13285 ;; Registers used:
 13286 ;;		wreg, status,2, status,0
 13287 ;; Tracked objects:
 13288 ;;		On entry : 0/0
 13289 ;;		On exit  : 0/0
 13290 ;;		Unchanged: 0/0
 13291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13292 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13295 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13296 ;;Total ram usage:        2 bytes
 13297 ;; Hardware stack levels used: 1
 13298 ;; Hardware stack levels required when called: 8
 13299 ;; This function calls:
 13300 ;;		Nothing
 13301 ;; This function is called by:
 13302 ;;		_UART1_Initialize
 13303 ;; This function uses a non-reentrant model
 13304 ;;
 13305                           
 13306                           	psect	text53
 13307  005D98                     __ptext53:
 13308                           	callstack 0
 13309  005D98                     _UART1_SetRxInterruptHandler:
 13310                           	callstack 20
 13311  005D98                     
 13312                           ;mcc_generated_files/uart1.c: 330:     UART1_RxInterruptHandler = InterruptHandler;
 13313  005D98  C014  F198         	movff	UART1_SetRxInterruptHandler@InterruptHandler,_UART1_RxInterruptHandler
 13314  005D9C  C015  F199         	movff	UART1_SetRxInterruptHandler@InterruptHandler+1,_UART1_RxInterruptHandler+1
 13315  005DA0  0012               	return		;funcret
 13316  005DA2                     __end_of_UART1_SetRxInterruptHandler:
 13317                           	callstack 0
 13318                           
 13319 ;; *************** function _UART1_SetOverrunErrorHandler *****************
 13320 ;; Defined at:
 13321 ;;		line 319 in file "mcc_generated_files/uart1.c"
 13322 ;; Parameters:    Size  Location     Type
 13323 ;;  interruptHan    2   19[COMRAM] PTR FTN()void 
 13324 ;;		 -> UART1_DefaultOverrunErrorHandler(1), 
 13325 ;; Auto vars:     Size  Location     Type
 13326 ;;		None
 13327 ;; Return value:  Size  Location     Type
 13328 ;;                  1    wreg      void 
 13329 ;; Registers used:
 13330 ;;		wreg, status,2, status,0
 13331 ;; Tracked objects:
 13332 ;;		On entry : 0/0
 13333 ;;		On exit  : 0/0
 13334 ;;		Unchanged: 0/0
 13335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13336 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13339 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13340 ;;Total ram usage:        2 bytes
 13341 ;; Hardware stack levels used: 1
 13342 ;; Hardware stack levels required when called: 8
 13343 ;; This function calls:
 13344 ;;		Nothing
 13345 ;; This function is called by:
 13346 ;;		_UART1_Initialize
 13347 ;; This function uses a non-reentrant model
 13348 ;;
 13349                           
 13350                           	psect	text54
 13351  005DA2                     __ptext54:
 13352                           	callstack 0
 13353  005DA2                     _UART1_SetOverrunErrorHandler:
 13354                           	callstack 20
 13355  005DA2                     
 13356                           ;mcc_generated_files/uart1.c: 320:     UART1_OverrunErrorHandler = interruptHandler;
 13357  005DA2  C014  F192         	movff	UART1_SetOverrunErrorHandler@interruptHandler,_UART1_OverrunErrorHandler
 13358  005DA6  C015  F193         	movff	UART1_SetOverrunErrorHandler@interruptHandler+1,_UART1_OverrunErrorHandler+1
 13359  005DAA  0012               	return		;funcret
 13360  005DAC                     __end_of_UART1_SetOverrunErrorHandler:
 13361                           	callstack 0
 13362                           
 13363 ;; *************** function _UART1_SetFramingErrorHandler *****************
 13364 ;; Defined at:
 13365 ;;		line 315 in file "mcc_generated_files/uart1.c"
 13366 ;; Parameters:    Size  Location     Type
 13367 ;;  interruptHan    2   19[COMRAM] PTR FTN()void 
 13368 ;;		 -> UART1_DefaultFramingErrorHandler(1), 
 13369 ;; Auto vars:     Size  Location     Type
 13370 ;;		None
 13371 ;; Return value:  Size  Location     Type
 13372 ;;                  1    wreg      void 
 13373 ;; Registers used:
 13374 ;;		wreg, status,2, status,0
 13375 ;; Tracked objects:
 13376 ;;		On entry : 0/0
 13377 ;;		On exit  : 0/0
 13378 ;;		Unchanged: 0/0
 13379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13380 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13383 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13384 ;;Total ram usage:        2 bytes
 13385 ;; Hardware stack levels used: 1
 13386 ;; Hardware stack levels required when called: 8
 13387 ;; This function calls:
 13388 ;;		Nothing
 13389 ;; This function is called by:
 13390 ;;		_UART1_Initialize
 13391 ;; This function uses a non-reentrant model
 13392 ;;
 13393                           
 13394                           	psect	text55
 13395  005DAC                     __ptext55:
 13396                           	callstack 0
 13397  005DAC                     _UART1_SetFramingErrorHandler:
 13398                           	callstack 20
 13399  005DAC                     
 13400                           ;mcc_generated_files/uart1.c: 316:     UART1_FramingErrorHandler = interruptHandler;
 13401  005DAC  C014  F194         	movff	UART1_SetFramingErrorHandler@interruptHandler,_UART1_FramingErrorHandler
 13402  005DB0  C015  F195         	movff	UART1_SetFramingErrorHandler@interruptHandler+1,_UART1_FramingErrorHandler+1
 13403  005DB4  0012               	return		;funcret
 13404  005DB6                     __end_of_UART1_SetFramingErrorHandler:
 13405                           	callstack 0
 13406                           
 13407 ;; *************** function _UART1_SetErrorHandler *****************
 13408 ;; Defined at:
 13409 ;;		line 323 in file "mcc_generated_files/uart1.c"
 13410 ;; Parameters:    Size  Location     Type
 13411 ;;  interruptHan    2   19[COMRAM] PTR FTN()void 
 13412 ;;		 -> UART1_DefaultErrorHandler(1), 
 13413 ;; Auto vars:     Size  Location     Type
 13414 ;;		None
 13415 ;; Return value:  Size  Location     Type
 13416 ;;                  1    wreg      void 
 13417 ;; Registers used:
 13418 ;;		wreg, status,2, status,0
 13419 ;; Tracked objects:
 13420 ;;		On entry : 0/0
 13421 ;;		On exit  : 0/0
 13422 ;;		Unchanged: 0/0
 13423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13424 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13427 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13428 ;;Total ram usage:        2 bytes
 13429 ;; Hardware stack levels used: 1
 13430 ;; Hardware stack levels required when called: 8
 13431 ;; This function calls:
 13432 ;;		Nothing
 13433 ;; This function is called by:
 13434 ;;		_UART1_Initialize
 13435 ;; This function uses a non-reentrant model
 13436 ;;
 13437                           
 13438                           	psect	text56
 13439  005DB6                     __ptext56:
 13440                           	callstack 0
 13441  005DB6                     _UART1_SetErrorHandler:
 13442                           	callstack 20
 13443  005DB6                     
 13444                           ;mcc_generated_files/uart1.c: 324:     UART1_ErrorHandler = interruptHandler;
 13445  005DB6  C014  F190         	movff	UART1_SetErrorHandler@interruptHandler,_UART1_ErrorHandler
 13446  005DBA  C015  F191         	movff	UART1_SetErrorHandler@interruptHandler+1,_UART1_ErrorHandler+1
 13447  005DBE  0012               	return		;funcret
 13448  005DC0                     __end_of_UART1_SetErrorHandler:
 13449                           	callstack 0
 13450                           
 13451 ;; *************** function _TMR5_Initialize *****************
 13452 ;; Defined at:
 13453 ;;		line 67 in file "mcc_generated_files/tmr5.c"
 13454 ;; Parameters:    Size  Location     Type
 13455 ;;		None
 13456 ;; Auto vars:     Size  Location     Type
 13457 ;;		None
 13458 ;; Return value:  Size  Location     Type
 13459 ;;                  1    wreg      void 
 13460 ;; Registers used:
 13461 ;;		wreg, status,2, status,0, cstack
 13462 ;; Tracked objects:
 13463 ;;		On entry : 0/0
 13464 ;;		On exit  : 0/0
 13465 ;;		Unchanged: 0/0
 13466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13469 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13470 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13471 ;;Total ram usage:        2 bytes
 13472 ;; Hardware stack levels used: 1
 13473 ;; Hardware stack levels required when called: 9
 13474 ;; This function calls:
 13475 ;;		_TMR5_SetGateInterruptHandler
 13476 ;; This function is called by:
 13477 ;;		_SYSTEM_Initialize
 13478 ;; This function uses a non-reentrant model
 13479 ;;
 13480                           
 13481                           	psect	text57
 13482  00555E                     __ptext57:
 13483                           	callstack 0
 13484  00555E                     _TMR5_Initialize:
 13485                           	callstack 20
 13486  00555E                     
 13487                           ;mcc_generated_files/tmr5.c: 72:     T5GCON = 0xC0;
 13488  00555E  0EC0               	movlw	192
 13489  005560  6E9B               	movwf	155,c	;volatile
 13490                           
 13491                           ;mcc_generated_files/tmr5.c: 75:     T5GATE = 0x00;
 13492  005562  0E00               	movlw	0
 13493  005564  6E9C               	movwf	156,c	;volatile
 13494                           
 13495                           ;mcc_generated_files/tmr5.c: 78:     T5CLK = 0x05;
 13496  005566  0E05               	movlw	5
 13497  005568  6E9D               	movwf	157,c	;volatile
 13498                           
 13499                           ;mcc_generated_files/tmr5.c: 81:     TMR5H = 0x00;
 13500  00556A  0E00               	movlw	0
 13501  00556C  6E99               	movwf	153,c	;volatile
 13502                           
 13503                           ;mcc_generated_files/tmr5.c: 84:     TMR5L = 0x00;
 13504  00556E  0E00               	movlw	0
 13505  005570  6E98               	movwf	152,c	;volatile
 13506  005572                     
 13507                           ;mcc_generated_files/tmr5.c: 87:     PIR8bits.TMR5IF = 0;
 13508  005572  0139               	movlb	57	; () banked
 13509  005574  9DA8               	bcf	168,6,b	;volatile
 13510  005576                     
 13511                           ; BSR set to: 57
 13512                           ;mcc_generated_files/tmr5.c: 90:     timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
 13513  005576  5098               	movf	152,w,c	;volatile
 13514  005578  006F FE64  F016    	movff	16281,??_TMR5_Initialize	;volatile
 13515  00557E  6A17               	clrf	(??_TMR5_Initialize+1)^0,c
 13516  005580  C016  F017         	movff	??_TMR5_Initialize,??_TMR5_Initialize+1
 13517  005584  6A16               	clrf	??_TMR5_Initialize^0,c
 13518  005586  1016               	iorwf	??_TMR5_Initialize^0,w,c
 13519  005588  0101               	movlb	1	; () banked
 13520  00558A  6F8A               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 13521  00558C  5017               	movf	(??_TMR5_Initialize+1)^0,w,c
 13522  00558E  6F8B               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 13523  005590                     
 13524                           ; BSR set to: 1
 13525                           ;mcc_generated_files/tmr5.c: 93:     PIR8bits.TMR5GIF = 0;
 13526  005590  0139               	movlb	57	; () banked
 13527  005592  9FA8               	bcf	168,7,b	;volatile
 13528  005594                     
 13529                           ; BSR set to: 57
 13530                           ;mcc_generated_files/tmr5.c: 96:     PIE8bits.TMR5GIE = 1;
 13531  005594  8F98               	bsf	152,7,b	;volatile
 13532  005596                     
 13533                           ; BSR set to: 57
 13534                           ;mcc_generated_files/tmr5.c: 99:     TMR5_SetGateInterruptHandler(TMR5_DefaultGateInterr
      +                          uptHandler);
 13535  005596  0EB4               	movlw	low _TMR5_DefaultGateInterruptHandler
 13536  005598  6E14               	movwf	TMR5_SetGateInterruptHandler@InterruptHandler^0,c
 13537  00559A  0E5C               	movlw	high _TMR5_DefaultGateInterruptHandler
 13538  00559C  6E15               	movwf	(TMR5_SetGateInterruptHandler@InterruptHandler+1)^0,c
 13539  00559E  ECE0  F02E         	call	_TMR5_SetGateInterruptHandler	;wreg free
 13540  0055A2                     
 13541                           ;mcc_generated_files/tmr5.c: 102:     T5CON = 0x03;
 13542  0055A2  0E03               	movlw	3
 13543  0055A4  6E9A               	movwf	154,c	;volatile
 13544  0055A6  0012               	return		;funcret
 13545  0055A8                     __end_of_TMR5_Initialize:
 13546                           	callstack 0
 13547                           
 13548 ;; *************** function _TMR5_SetGateInterruptHandler *****************
 13549 ;; Defined at:
 13550 ;;		line 186 in file "mcc_generated_files/tmr5.c"
 13551 ;; Parameters:    Size  Location     Type
 13552 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
 13553 ;;		 -> TMR5_DefaultGateInterruptHandler(1), 
 13554 ;; Auto vars:     Size  Location     Type
 13555 ;;		None
 13556 ;; Return value:  Size  Location     Type
 13557 ;;                  1    wreg      void 
 13558 ;; Registers used:
 13559 ;;		wreg, status,2, status,0
 13560 ;; Tracked objects:
 13561 ;;		On entry : 0/0
 13562 ;;		On exit  : 0/0
 13563 ;;		Unchanged: 0/0
 13564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13565 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13568 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13569 ;;Total ram usage:        2 bytes
 13570 ;; Hardware stack levels used: 1
 13571 ;; Hardware stack levels required when called: 8
 13572 ;; This function calls:
 13573 ;;		Nothing
 13574 ;; This function is called by:
 13575 ;;		_TMR5_Initialize
 13576 ;; This function uses a non-reentrant model
 13577 ;;
 13578                           
 13579                           	psect	text58
 13580  005DC0                     __ptext58:
 13581                           	callstack 0
 13582  005DC0                     _TMR5_SetGateInterruptHandler:
 13583                           	callstack 20
 13584  005DC0                     
 13585                           ;mcc_generated_files/tmr5.c: 187:     TMR5_GateInterruptHandler = InterruptHandler;
 13586  005DC0  C014  F188         	movff	TMR5_SetGateInterruptHandler@InterruptHandler,_TMR5_GateInterruptHandler
 13587  005DC4  C015  F189         	movff	TMR5_SetGateInterruptHandler@InterruptHandler+1,_TMR5_GateInterruptHandler+1
 13588  005DC8  0012               	return		;funcret
 13589  005DCA                     __end_of_TMR5_SetGateInterruptHandler:
 13590                           	callstack 0
 13591                           
 13592 ;; *************** function _TMR4_Initialize *****************
 13593 ;; Defined at:
 13594 ;;		line 65 in file "mcc_generated_files/tmr4.c"
 13595 ;; Parameters:    Size  Location     Type
 13596 ;;		None
 13597 ;; Auto vars:     Size  Location     Type
 13598 ;;		None
 13599 ;; Return value:  Size  Location     Type
 13600 ;;                  1    wreg      void 
 13601 ;; Registers used:
 13602 ;;		wreg, status,2, status,0, cstack
 13603 ;; Tracked objects:
 13604 ;;		On entry : 0/0
 13605 ;;		On exit  : 0/0
 13606 ;;		Unchanged: 0/0
 13607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13611 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13612 ;;Total ram usage:        0 bytes
 13613 ;; Hardware stack levels used: 1
 13614 ;; Hardware stack levels required when called: 9
 13615 ;; This function calls:
 13616 ;;		_TMR4_SetInterruptHandler
 13617 ;; This function is called by:
 13618 ;;		_SYSTEM_Initialize
 13619 ;; This function uses a non-reentrant model
 13620 ;;
 13621                           
 13622                           	psect	text59
 13623  005B4C                     __ptext59:
 13624                           	callstack 0
 13625  005B4C                     _TMR4_Initialize:
 13626                           	callstack 20
 13627  005B4C                     
 13628                           ;mcc_generated_files/tmr4.c: 70:     T4CLKCON = 0x01;
 13629  005B4C  0E01               	movlw	1
 13630  005B4E  6EA2               	movwf	162,c	;volatile
 13631                           
 13632                           ;mcc_generated_files/tmr4.c: 73:     T4HLT = 0x00;
 13633  005B50  0E00               	movlw	0
 13634  005B52  6EA1               	movwf	161,c	;volatile
 13635                           
 13636                           ;mcc_generated_files/tmr4.c: 76:     T4RST = 0x00;
 13637  005B54  0E00               	movlw	0
 13638  005B56  6EA3               	movwf	163,c	;volatile
 13639                           
 13640                           ;mcc_generated_files/tmr4.c: 79:     T4PR = 0xF9;
 13641  005B58  0EF9               	movlw	249
 13642  005B5A  6E9F               	movwf	159,c	;volatile
 13643                           
 13644                           ;mcc_generated_files/tmr4.c: 82:     T4TMR = 0x00;
 13645  005B5C  0E00               	movlw	0
 13646  005B5E  6E9E               	movwf	158,c	;volatile
 13647  005B60                     
 13648                           ;mcc_generated_files/tmr4.c: 85:     PIR7bits.TMR4IF = 0;
 13649  005B60  0139               	movlb	57	; () banked
 13650  005B62  91A7               	bcf	167,0,b	;volatile
 13651  005B64                     
 13652                           ; BSR set to: 57
 13653                           ;mcc_generated_files/tmr4.c: 88:     PIE7bits.TMR4IE = 1;
 13654  005B64  8197               	bsf	151,0,b	;volatile
 13655  005B66                     
 13656                           ; BSR set to: 57
 13657                           ;mcc_generated_files/tmr4.c: 91:     TMR4_SetInterruptHandler(TMR4_DefaultInterruptHandl
      +                          er);
 13658  005B66  0EFA               	movlw	low _TMR4_DefaultInterruptHandler
 13659  005B68  6E14               	movwf	TMR4_SetInterruptHandler@InterruptHandler^0,c
 13660  005B6A  0E5D               	movlw	high _TMR4_DefaultInterruptHandler
 13661  005B6C  6E15               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)^0,c
 13662  005B6E  ECE5  F02E         	call	_TMR4_SetInterruptHandler	;wreg free
 13663  005B72                     
 13664                           ;mcc_generated_files/tmr4.c: 94:     T4CON = 0xE0;
 13665  005B72  0EE0               	movlw	224
 13666  005B74  6EA0               	movwf	160,c	;volatile
 13667  005B76  0012               	return		;funcret
 13668  005B78                     __end_of_TMR4_Initialize:
 13669                           	callstack 0
 13670                           
 13671 ;; *************** function _TMR4_SetInterruptHandler *****************
 13672 ;; Defined at:
 13673 ;;		line 194 in file "mcc_generated_files/tmr4.c"
 13674 ;; Parameters:    Size  Location     Type
 13675 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
 13676 ;;		 -> TMR4_10msISR(1), TMR4_DefaultInterruptHandler(1), 
 13677 ;; Auto vars:     Size  Location     Type
 13678 ;;		None
 13679 ;; Return value:  Size  Location     Type
 13680 ;;                  1    wreg      void 
 13681 ;; Registers used:
 13682 ;;		wreg, status,2, status,0
 13683 ;; Tracked objects:
 13684 ;;		On entry : 0/0
 13685 ;;		On exit  : 0/0
 13686 ;;		Unchanged: 0/0
 13687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13688 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13691 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13692 ;;Total ram usage:        2 bytes
 13693 ;; Hardware stack levels used: 1
 13694 ;; Hardware stack levels required when called: 8
 13695 ;; This function calls:
 13696 ;;		Nothing
 13697 ;; This function is called by:
 13698 ;;		_TMR4_Initialize
 13699 ;;		_main
 13700 ;; This function uses a non-reentrant model
 13701 ;;
 13702                           
 13703                           	psect	text60
 13704  005DCA                     __ptext60:
 13705                           	callstack 0
 13706  005DCA                     _TMR4_SetInterruptHandler:
 13707                           	callstack 22
 13708  005DCA                     
 13709                           ;mcc_generated_files/tmr4.c: 195:     TMR4_InterruptHandler = InterruptHandler;
 13710  005DCA  C014  F184         	movff	TMR4_SetInterruptHandler@InterruptHandler,_TMR4_InterruptHandler
 13711  005DCE  C015  F185         	movff	TMR4_SetInterruptHandler@InterruptHandler+1,_TMR4_InterruptHandler+1
 13712  005DD2  0012               	return		;funcret
 13713  005DD4                     __end_of_TMR4_SetInterruptHandler:
 13714                           	callstack 0
 13715                           
 13716 ;; *************** function _TMR3_Initialize *****************
 13717 ;; Defined at:
 13718 ;;		line 63 in file "mcc_generated_files/tmr3.c"
 13719 ;; Parameters:    Size  Location     Type
 13720 ;;		None
 13721 ;; Auto vars:     Size  Location     Type
 13722 ;;		None
 13723 ;; Return value:  Size  Location     Type
 13724 ;;                  1    wreg      void 
 13725 ;; Registers used:
 13726 ;;		wreg, status,2, status,0
 13727 ;; Tracked objects:
 13728 ;;		On entry : 0/0
 13729 ;;		On exit  : 0/0
 13730 ;;		Unchanged: 0/0
 13731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13734 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13735 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13736 ;;Total ram usage:        2 bytes
 13737 ;; Hardware stack levels used: 1
 13738 ;; Hardware stack levels required when called: 8
 13739 ;; This function calls:
 13740 ;;		Nothing
 13741 ;; This function is called by:
 13742 ;;		_SYSTEM_Initialize
 13743 ;; This function uses a non-reentrant model
 13744 ;;
 13745                           
 13746                           	psect	text61
 13747  005822                     __ptext61:
 13748                           	callstack 0
 13749  005822                     _TMR3_Initialize:
 13750                           	callstack 21
 13751  005822                     
 13752                           ;mcc_generated_files/tmr3.c: 68:     T3GCON = 0x00;
 13753  005822  0E00               	movlw	0
 13754  005824  6EA7               	movwf	167,c	;volatile
 13755                           
 13756                           ;mcc_generated_files/tmr3.c: 71:     T3GATE = 0x00;
 13757  005826  0E00               	movlw	0
 13758  005828  6EA8               	movwf	168,c	;volatile
 13759                           
 13760                           ;mcc_generated_files/tmr3.c: 74:     T3CLK = 0x05;
 13761  00582A  0E05               	movlw	5
 13762  00582C  6EA9               	movwf	169,c	;volatile
 13763                           
 13764                           ;mcc_generated_files/tmr3.c: 77:     TMR3H = 0x00;
 13765  00582E  0E00               	movlw	0
 13766  005830  6EA5               	movwf	165,c	;volatile
 13767                           
 13768                           ;mcc_generated_files/tmr3.c: 80:     TMR3L = 0x00;
 13769  005832  0E00               	movlw	0
 13770  005834  6EA4               	movwf	164,c	;volatile
 13771  005836                     
 13772                           ;mcc_generated_files/tmr3.c: 83:     PIR6bits.TMR3IF = 0;
 13773  005836  0139               	movlb	57	; () banked
 13774  005838  9DA6               	bcf	166,6,b	;volatile
 13775  00583A                     
 13776                           ; BSR set to: 57
 13777                           ;mcc_generated_files/tmr3.c: 86:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 13778  00583A  50A4               	movf	164,w,c	;volatile
 13779  00583C  006F FE94  F014    	movff	16293,??_TMR3_Initialize	;volatile
 13780  005842  6A15               	clrf	(??_TMR3_Initialize+1)^0,c
 13781  005844  C014  F015         	movff	??_TMR3_Initialize,??_TMR3_Initialize+1
 13782  005848  6A14               	clrf	??_TMR3_Initialize^0,c
 13783  00584A  1014               	iorwf	??_TMR3_Initialize^0,w,c
 13784  00584C  0101               	movlb	1	; () banked
 13785  00584E  6F86               	movwf	_timer3ReloadVal& (0+255),b	;volatile
 13786  005850  5015               	movf	(??_TMR3_Initialize+1)^0,w,c
 13787  005852  6F87               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
 13788  005854                     
 13789                           ; BSR set to: 1
 13790                           ;mcc_generated_files/tmr3.c: 89:     T3CON = 0x01;
 13791  005854  0E01               	movlw	1
 13792  005856  6EA6               	movwf	166,c	;volatile
 13793  005858                     
 13794                           ; BSR set to: 1
 13795  005858  0012               	return		;funcret
 13796  00585A                     __end_of_TMR3_Initialize:
 13797                           	callstack 0
 13798                           
 13799 ;; *************** function _TMR2_Initialize *****************
 13800 ;; Defined at:
 13801 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 13802 ;; Parameters:    Size  Location     Type
 13803 ;;		None
 13804 ;; Auto vars:     Size  Location     Type
 13805 ;;		None
 13806 ;; Return value:  Size  Location     Type
 13807 ;;                  1    wreg      void 
 13808 ;; Registers used:
 13809 ;;		wreg, status,2
 13810 ;; Tracked objects:
 13811 ;;		On entry : 0/0
 13812 ;;		On exit  : 0/0
 13813 ;;		Unchanged: 0/0
 13814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13818 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13819 ;;Total ram usage:        0 bytes
 13820 ;; Hardware stack levels used: 1
 13821 ;; Hardware stack levels required when called: 8
 13822 ;; This function calls:
 13823 ;;		Nothing
 13824 ;; This function is called by:
 13825 ;;		_SYSTEM_Initialize
 13826 ;; This function uses a non-reentrant model
 13827 ;;
 13828                           
 13829                           	psect	text62
 13830  005CD2                     __ptext62:
 13831                           	callstack 0
 13832  005CD2                     _TMR2_Initialize:
 13833                           	callstack 21
 13834  005CD2                     
 13835                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x05;
 13836  005CD2  0E05               	movlw	5
 13837  005CD4  6EAE               	movwf	174,c	;volatile
 13838                           
 13839                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 13840  005CD6  0E00               	movlw	0
 13841  005CD8  6EAD               	movwf	173,c	;volatile
 13842                           
 13843                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 13844  005CDA  0E00               	movlw	0
 13845  005CDC  6EAF               	movwf	175,c	;volatile
 13846  005CDE                     
 13847                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0xFF;
 13848  005CDE  68AB               	setf	171,c	;volatile
 13849                           
 13850                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 13851  005CE0  0E00               	movlw	0
 13852  005CE2  6EAA               	movwf	170,c	;volatile
 13853  005CE4                     
 13854                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 13855  005CE4  0139               	movlb	57	; () banked
 13856  005CE6  95A4               	bcf	164,2,b	;volatile
 13857                           
 13858                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xB0;
 13859  005CE8  0EB0               	movlw	176
 13860  005CEA  6EAC               	movwf	172,c	;volatile
 13861  005CEC                     
 13862                           ; BSR set to: 57
 13863  005CEC  0012               	return		;funcret
 13864  005CEE                     __end_of_TMR2_Initialize:
 13865                           	callstack 0
 13866                           
 13867 ;; *************** function _SMT1_Initialize *****************
 13868 ;; Defined at:
 13869 ;;		line 60 in file "mcc_generated_files/smt1.c"
 13870 ;; Parameters:    Size  Location     Type
 13871 ;;		None
 13872 ;; Auto vars:     Size  Location     Type
 13873 ;;		None
 13874 ;; Return value:  Size  Location     Type
 13875 ;;                  1    wreg      void 
 13876 ;; Registers used:
 13877 ;;		wreg, status,2
 13878 ;; Tracked objects:
 13879 ;;		On entry : 0/0
 13880 ;;		On exit  : 0/0
 13881 ;;		Unchanged: 0/0
 13882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13887 ;;Total ram usage:        0 bytes
 13888 ;; Hardware stack levels used: 1
 13889 ;; Hardware stack levels required when called: 8
 13890 ;; This function calls:
 13891 ;;		Nothing
 13892 ;; This function is called by:
 13893 ;;		_SYSTEM_Initialize
 13894 ;; This function uses a non-reentrant model
 13895 ;;
 13896                           
 13897                           	psect	text63
 13898  005A32                     __ptext63:
 13899                           	callstack 0
 13900  005A32                     _SMT1_Initialize:
 13901                           	callstack 21
 13902  005A32                     
 13903                           ;mcc_generated_files/smt1.c: 63:     SMT1CON0 = 0x80;
 13904  005A32  0E80               	movlw	128
 13905  005A34  013F               	movlb	63	; () banked
 13906  005A36  6F1E               	movwf	30,b	;volatile
 13907                           
 13908                           ;mcc_generated_files/smt1.c: 66:     SMT1CON1 = 0x42;
 13909  005A38  0E42               	movlw	66
 13910  005A3A  6F1F               	movwf	31,b	;volatile
 13911                           
 13912                           ;mcc_generated_files/smt1.c: 69:     SMT1STAT = 0x00;
 13913  005A3C  0E00               	movlw	0
 13914  005A3E  6F20               	movwf	32,b	;volatile
 13915                           
 13916                           ;mcc_generated_files/smt1.c: 72:     SMT1CLK = 0x04;
 13917  005A40  0E04               	movlw	4
 13918  005A42  6F21               	movwf	33,b	;volatile
 13919                           
 13920                           ;mcc_generated_files/smt1.c: 75:     SMT1WIN = 0x00;
 13921  005A44  0E00               	movlw	0
 13922  005A46  6F23               	movwf	35,b	;volatile
 13923                           
 13924                           ;mcc_generated_files/smt1.c: 78:     SMT1SIG = 0x00;
 13925  005A48  0E00               	movlw	0
 13926  005A4A  6F22               	movwf	34,b	;volatile
 13927                           
 13928                           ;mcc_generated_files/smt1.c: 81:     SMT1PRU = 0x01;
 13929  005A4C  0E01               	movlw	1
 13930  005A4E  6F1D               	movwf	29,b	;volatile
 13931  005A50                     
 13932                           ; BSR set to: 63
 13933                           ;mcc_generated_files/smt1.c: 84:     SMT1PRH = 0xFF;
 13934  005A50  691C               	setf	28,b	;volatile
 13935  005A52                     
 13936                           ; BSR set to: 63
 13937                           ;mcc_generated_files/smt1.c: 87:     SMT1PRL = 0xFF;
 13938  005A52  691B               	setf	27,b	;volatile
 13939  005A54                     
 13940                           ; BSR set to: 63
 13941                           ;mcc_generated_files/smt1.c: 90:     PIE1bits.SMT1IE = 1;
 13942  005A54  0139               	movlb	57	; () banked
 13943  005A56  8B91               	bsf	145,5,b	;volatile
 13944  005A58                     
 13945                           ; BSR set to: 57
 13946                           ;mcc_generated_files/smt1.c: 93:     PIE1bits.SMT1PWAIE = 1;
 13947  005A58  8F91               	bsf	145,7,b	;volatile
 13948  005A5A                     
 13949                           ; BSR set to: 57
 13950                           ;mcc_generated_files/smt1.c: 96:     PIE1bits.SMT1PRAIE = 1;
 13951  005A5A  8D91               	bsf	145,6,b	;volatile
 13952  005A5C                     
 13953                           ; BSR set to: 57
 13954                           ;mcc_generated_files/smt1.c: 99:     SMT1CON1bits.SMT1GO = 1;
 13955  005A5C  013F               	movlb	63	; () banked
 13956  005A5E  8F1F               	bsf	31,7,b	;volatile
 13957  005A60                     
 13958                           ; BSR set to: 63
 13959  005A60  0012               	return		;funcret
 13960  005A62                     __end_of_SMT1_Initialize:
 13961                           	callstack 0
 13962                           
 13963 ;; *************** function _PWM8_Initialize *****************
 13964 ;; Defined at:
 13965 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 13966 ;; Parameters:    Size  Location     Type
 13967 ;;		None
 13968 ;; Auto vars:     Size  Location     Type
 13969 ;;		None
 13970 ;; Return value:  Size  Location     Type
 13971 ;;                  1    wreg      void 
 13972 ;; Registers used:
 13973 ;;		wreg, status,2
 13974 ;; Tracked objects:
 13975 ;;		On entry : 0/0
 13976 ;;		On exit  : 0/0
 13977 ;;		Unchanged: 0/0
 13978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13982 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13983 ;;Total ram usage:        0 bytes
 13984 ;; Hardware stack levels used: 1
 13985 ;; Hardware stack levels required when called: 8
 13986 ;; This function calls:
 13987 ;;		Nothing
 13988 ;; This function is called by:
 13989 ;;		_SYSTEM_Initialize
 13990 ;; This function uses a non-reentrant model
 13991 ;;
 13992                           
 13993                           	psect	text64
 13994  005CEE                     __ptext64:
 13995                           	callstack 0
 13996  005CEE                     _PWM8_Initialize:
 13997                           	callstack 21
 13998  005CEE                     
 13999                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 14000  005CEE  0E80               	movlw	128
 14001  005CF0  6E62               	movwf	98,c	;volatile
 14002                           
 14003                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 14004  005CF2  0E00               	movlw	0
 14005  005CF4  6E61               	movwf	97,c	;volatile
 14006                           
 14007                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x00;
 14008  005CF6  0E00               	movlw	0
 14009  005CF8  6E60               	movwf	96,c	;volatile
 14010                           
 14011                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 2;
 14012  005CFA  013F               	movlb	63	; () banked
 14013  005CFC  515F               	movf	95,w,b	;volatile
 14014  005CFE  0B3F               	andlw	-193
 14015  005D00  0980               	iorlw	128
 14016  005D02  6F5F               	movwf	95,b	;volatile
 14017  005D04                     
 14018                           ; BSR set to: 63
 14019  005D04  0012               	return		;funcret
 14020  005D06                     __end_of_PWM8_Initialize:
 14021                           	callstack 0
 14022                           
 14023 ;; *************** function _PWM7_Initialize *****************
 14024 ;; Defined at:
 14025 ;;		line 58 in file "mcc_generated_files/pwm7.c"
 14026 ;; Parameters:    Size  Location     Type
 14027 ;;		None
 14028 ;; Auto vars:     Size  Location     Type
 14029 ;;		None
 14030 ;; Return value:  Size  Location     Type
 14031 ;;                  1    wreg      void 
 14032 ;; Registers used:
 14033 ;;		wreg, status,2
 14034 ;; Tracked objects:
 14035 ;;		On entry : 0/0
 14036 ;;		On exit  : 0/0
 14037 ;;		Unchanged: 0/0
 14038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14042 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14043 ;;Total ram usage:        0 bytes
 14044 ;; Hardware stack levels used: 1
 14045 ;; Hardware stack levels required when called: 8
 14046 ;; This function calls:
 14047 ;;		Nothing
 14048 ;; This function is called by:
 14049 ;;		_SYSTEM_Initialize
 14050 ;; This function uses a non-reentrant model
 14051 ;;
 14052                           
 14053                           	psect	text65
 14054  005D06                     __ptext65:
 14055                           	callstack 0
 14056  005D06                     _PWM7_Initialize:
 14057                           	callstack 21
 14058  005D06                     
 14059                           ;mcc_generated_files/pwm7.c: 62:     PWM7CON = 0x80;
 14060  005D06  0E80               	movlw	128
 14061  005D08  6E66               	movwf	102,c	;volatile
 14062                           
 14063                           ;mcc_generated_files/pwm7.c: 65:     PWM7DCH = 0x00;
 14064  005D0A  0E00               	movlw	0
 14065  005D0C  6E65               	movwf	101,c	;volatile
 14066                           
 14067                           ;mcc_generated_files/pwm7.c: 68:     PWM7DCL = 0x00;
 14068  005D0E  0E00               	movlw	0
 14069  005D10  6E64               	movwf	100,c	;volatile
 14070                           
 14071                           ;mcc_generated_files/pwm7.c: 71:     CCPTMRS1bits.P7TSEL = 2;
 14072  005D12  013F               	movlb	63	; () banked
 14073  005D14  515F               	movf	95,w,b	;volatile
 14074  005D16  0BCF               	andlw	-49
 14075  005D18  0920               	iorlw	32
 14076  005D1A  6F5F               	movwf	95,b	;volatile
 14077  005D1C                     
 14078                           ; BSR set to: 63
 14079  005D1C  0012               	return		;funcret
 14080  005D1E                     __end_of_PWM7_Initialize:
 14081                           	callstack 0
 14082                           
 14083 ;; *************** function _PWM6_Initialize *****************
 14084 ;; Defined at:
 14085 ;;		line 58 in file "mcc_generated_files/pwm6.c"
 14086 ;; Parameters:    Size  Location     Type
 14087 ;;		None
 14088 ;; Auto vars:     Size  Location     Type
 14089 ;;		None
 14090 ;; Return value:  Size  Location     Type
 14091 ;;                  1    wreg      void 
 14092 ;; Registers used:
 14093 ;;		wreg, status,2
 14094 ;; Tracked objects:
 14095 ;;		On entry : 0/0
 14096 ;;		On exit  : 0/0
 14097 ;;		Unchanged: 0/0
 14098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14102 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14103 ;;Total ram usage:        0 bytes
 14104 ;; Hardware stack levels used: 1
 14105 ;; Hardware stack levels required when called: 8
 14106 ;; This function calls:
 14107 ;;		Nothing
 14108 ;; This function is called by:
 14109 ;;		_SYSTEM_Initialize
 14110 ;; This function uses a non-reentrant model
 14111 ;;
 14112                           
 14113                           	psect	text66
 14114  005D1E                     __ptext66:
 14115                           	callstack 0
 14116  005D1E                     _PWM6_Initialize:
 14117                           	callstack 21
 14118  005D1E                     
 14119                           ;mcc_generated_files/pwm6.c: 62:     PWM6CON = 0x80;
 14120  005D1E  0E80               	movlw	128
 14121  005D20  6E6A               	movwf	106,c	;volatile
 14122                           
 14123                           ;mcc_generated_files/pwm6.c: 65:     PWM6DCH = 0x59;
 14124  005D22  0E59               	movlw	89
 14125  005D24  6E69               	movwf	105,c	;volatile
 14126                           
 14127                           ;mcc_generated_files/pwm6.c: 68:     PWM6DCL = 0x40;
 14128  005D26  0E40               	movlw	64
 14129  005D28  6E68               	movwf	104,c	;volatile
 14130                           
 14131                           ;mcc_generated_files/pwm6.c: 71:     CCPTMRS1bits.P6TSEL = 1;
 14132  005D2A  013F               	movlb	63	; () banked
 14133  005D2C  515F               	movf	95,w,b	;volatile
 14134  005D2E  0BF3               	andlw	-13
 14135  005D30  0904               	iorlw	4
 14136  005D32  6F5F               	movwf	95,b	;volatile
 14137  005D34                     
 14138                           ; BSR set to: 63
 14139  005D34  0012               	return		;funcret
 14140  005D36                     __end_of_PWM6_Initialize:
 14141                           	callstack 0
 14142                           
 14143 ;; *************** function _PWM5_Initialize *****************
 14144 ;; Defined at:
 14145 ;;		line 58 in file "mcc_generated_files/pwm5.c"
 14146 ;; Parameters:    Size  Location     Type
 14147 ;;		None
 14148 ;; Auto vars:     Size  Location     Type
 14149 ;;		None
 14150 ;; Return value:  Size  Location     Type
 14151 ;;                  1    wreg      void 
 14152 ;; Registers used:
 14153 ;;		wreg, status,2
 14154 ;; Tracked objects:
 14155 ;;		On entry : 0/0
 14156 ;;		On exit  : 0/0
 14157 ;;		Unchanged: 0/0
 14158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14162 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14163 ;;Total ram usage:        0 bytes
 14164 ;; Hardware stack levels used: 1
 14165 ;; Hardware stack levels required when called: 8
 14166 ;; This function calls:
 14167 ;;		Nothing
 14168 ;; This function is called by:
 14169 ;;		_SYSTEM_Initialize
 14170 ;; This function uses a non-reentrant model
 14171 ;;
 14172                           
 14173                           	psect	text67
 14174  005D36                     __ptext67:
 14175                           	callstack 0
 14176  005D36                     _PWM5_Initialize:
 14177                           	callstack 21
 14178  005D36                     
 14179                           ;mcc_generated_files/pwm5.c: 62:     PWM5CON = 0x80;
 14180  005D36  0E80               	movlw	128
 14181  005D38  6E6E               	movwf	110,c	;volatile
 14182                           
 14183                           ;mcc_generated_files/pwm5.c: 65:     PWM5DCH = 0x59;
 14184  005D3A  0E59               	movlw	89
 14185  005D3C  6E6D               	movwf	109,c	;volatile
 14186                           
 14187                           ;mcc_generated_files/pwm5.c: 68:     PWM5DCL = 0x40;
 14188  005D3E  0E40               	movlw	64
 14189  005D40  6E6C               	movwf	108,c	;volatile
 14190                           
 14191                           ;mcc_generated_files/pwm5.c: 71:     CCPTMRS1bits.P5TSEL = 1;
 14192  005D42  013F               	movlb	63	; () banked
 14193  005D44  515F               	movf	95,w,b	;volatile
 14194  005D46  0BFC               	andlw	-4
 14195  005D48  0901               	iorlw	1
 14196  005D4A  6F5F               	movwf	95,b	;volatile
 14197  005D4C                     
 14198                           ; BSR set to: 63
 14199  005D4C  0012               	return		;funcret
 14200  005D4E                     __end_of_PWM5_Initialize:
 14201                           	callstack 0
 14202                           
 14203 ;; *************** function _PMD_Initialize *****************
 14204 ;; Defined at:
 14205 ;;		line 86 in file "mcc_generated_files/mcc.c"
 14206 ;; Parameters:    Size  Location     Type
 14207 ;;		None
 14208 ;; Auto vars:     Size  Location     Type
 14209 ;;		None
 14210 ;; Return value:  Size  Location     Type
 14211 ;;                  1    wreg      void 
 14212 ;; Registers used:
 14213 ;;		wreg, status,2
 14214 ;; Tracked objects:
 14215 ;;		On entry : 0/0
 14216 ;;		On exit  : 0/0
 14217 ;;		Unchanged: 0/0
 14218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14222 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14223 ;;Total ram usage:        0 bytes
 14224 ;; Hardware stack levels used: 1
 14225 ;; Hardware stack levels required when called: 8
 14226 ;; This function calls:
 14227 ;;		Nothing
 14228 ;; This function is called by:
 14229 ;;		_SYSTEM_Initialize
 14230 ;; This function uses a non-reentrant model
 14231 ;;
 14232                           
 14233                           	psect	text68
 14234  005C4C                     __ptext68:
 14235                           	callstack 0
 14236  005C4C                     _PMD_Initialize:
 14237                           	callstack 21
 14238  005C4C                     
 14239                           ;mcc_generated_files/mcc.c: 89:     PMD0 = 0x00;
 14240  005C4C  0E00               	movlw	0
 14241  005C4E  0139               	movlb	57	; () banked
 14242  005C50  6FC0               	movwf	192,b	;volatile
 14243                           
 14244                           ;mcc_generated_files/mcc.c: 91:     PMD1 = 0x00;
 14245  005C52  0E00               	movlw	0
 14246  005C54  6FC1               	movwf	193,b	;volatile
 14247                           
 14248                           ;mcc_generated_files/mcc.c: 93:     PMD2 = 0x00;
 14249  005C56  0E00               	movlw	0
 14250  005C58  6FC2               	movwf	194,b	;volatile
 14251                           
 14252                           ;mcc_generated_files/mcc.c: 95:     PMD3 = 0x00;
 14253  005C5A  0E00               	movlw	0
 14254  005C5C  6FC3               	movwf	195,b	;volatile
 14255                           
 14256                           ;mcc_generated_files/mcc.c: 97:     PMD4 = 0x00;
 14257  005C5E  0E00               	movlw	0
 14258  005C60  6FC4               	movwf	196,b	;volatile
 14259                           
 14260                           ;mcc_generated_files/mcc.c: 99:     PMD5 = 0x00;
 14261  005C62  0E00               	movlw	0
 14262  005C64  6FC5               	movwf	197,b	;volatile
 14263                           
 14264                           ;mcc_generated_files/mcc.c: 101:     PMD6 = 0x00;
 14265  005C66  0E00               	movlw	0
 14266  005C68  6FC6               	movwf	198,b	;volatile
 14267                           
 14268                           ;mcc_generated_files/mcc.c: 103:     PMD7 = 0x00;
 14269  005C6A  0E00               	movlw	0
 14270  005C6C  6FC7               	movwf	199,b	;volatile
 14271  005C6E                     
 14272                           ; BSR set to: 57
 14273  005C6E  0012               	return		;funcret
 14274  005C70                     __end_of_PMD_Initialize:
 14275                           	callstack 0
 14276                           
 14277 ;; *************** function _PIN_MANAGER_Initialize *****************
 14278 ;; Defined at:
 14279 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 14280 ;; Parameters:    Size  Location     Type
 14281 ;;		None
 14282 ;; Auto vars:     Size  Location     Type
 14283 ;;		None
 14284 ;; Return value:  Size  Location     Type
 14285 ;;                  1    wreg      void 
 14286 ;; Registers used:
 14287 ;;		wreg, status,2
 14288 ;; Tracked objects:
 14289 ;;		On entry : 0/0
 14290 ;;		On exit  : 0/0
 14291 ;;		Unchanged: 0/0
 14292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14296 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14297 ;;Total ram usage:        0 bytes
 14298 ;; Hardware stack levels used: 1
 14299 ;; Hardware stack levels required when called: 8
 14300 ;; This function calls:
 14301 ;;		Nothing
 14302 ;; This function is called by:
 14303 ;;		_SYSTEM_Initialize
 14304 ;; This function uses a non-reentrant model
 14305 ;;
 14306                           
 14307                           	psect	text69
 14308  004B52                     __ptext69:
 14309                           	callstack 0
 14310  004B52                     _PIN_MANAGER_Initialize:
 14311                           	callstack 21
 14312  004B52                     
 14313                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
 14314  004B52  0E00               	movlw	0
 14315  004B54  6EBE               	movwf	190,c	;volatile
 14316                           
 14317                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
 14318  004B56  0E00               	movlw	0
 14319  004B58  6EBD               	movwf	189,c	;volatile
 14320                           
 14321                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x24;
 14322  004B5A  0E24               	movlw	36
 14323  004B5C  6EBA               	movwf	186,c	;volatile
 14324                           
 14325                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
 14326  004B5E  0E00               	movlw	0
 14327  004B60  6EBB               	movwf	187,c	;volatile
 14328                           
 14329                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
 14330  004B62  0E00               	movlw	0
 14331  004B64  6EBC               	movwf	188,c	;volatile
 14332                           
 14333                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
 14334  004B66  0E07               	movlw	7
 14335  004B68  6EC6               	movwf	198,c	;volatile
 14336                           
 14337                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xC0;
 14338  004B6A  0EC0               	movlw	192
 14339  004B6C  6EC2               	movwf	194,c	;volatile
 14340                           
 14341                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xF7;
 14342  004B6E  0EF7               	movlw	247
 14343  004B70  6EC3               	movwf	195,c	;volatile
 14344  004B72                     
 14345                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xFF;
 14346  004B72  68C4               	setf	196,c	;volatile
 14347  004B74                     
 14348                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
 14349  004B74  68C5               	setf	197,c	;volatile
 14350                           
 14351                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0x1F;
 14352  004B76  0E1F               	movlw	31
 14353  004B78  013A               	movlb	58	; () banked
 14354  004B7A  6F70               	movwf	112,b	;volatile
 14355  004B7C                     
 14356                           ; BSR set to: 58
 14357                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0xFF;
 14358  004B7C  6960               	setf	96,b	;volatile
 14359                           
 14360                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0xC0;
 14361  004B7E  0EC0               	movlw	192
 14362  004B80  6F50               	movwf	80,b	;volatile
 14363                           
 14364                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
 14365  004B82  0E07               	movlw	7
 14366  004B84  6F80               	movwf	128,b	;volatile
 14367                           
 14368                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x7F;
 14369  004B86  0E7F               	movlw	127
 14370  004B88  6F40               	movwf	64,b	;volatile
 14371                           
 14372                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
 14373  004B8A  0E00               	movlw	0
 14374  004B8C  6F71               	movwf	113,b	;volatile
 14375                           
 14376                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
 14377  004B8E  0E00               	movlw	0
 14378  004B90  6F81               	movwf	129,b	;volatile
 14379                           
 14380                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
 14381  004B92  0E00               	movlw	0
 14382  004B94  6F51               	movwf	81,b	;volatile
 14383                           
 14384                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
 14385  004B96  0E00               	movlw	0
 14386  004B98  6F41               	movwf	65,b	;volatile
 14387                           
 14388                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
 14389  004B9A  0E00               	movlw	0
 14390  004B9C  6F61               	movwf	97,b	;volatile
 14391                           
 14392                           ;mcc_generated_files/pin_manager.c: 96:     RB1I2C = 0x00;
 14393  004B9E  0E00               	movlw	0
 14394  004BA0  6F5A               	movwf	90,b	;volatile
 14395                           
 14396                           ;mcc_generated_files/pin_manager.c: 97:     RB2I2C = 0x00;
 14397  004BA2  0E00               	movlw	0
 14398  004BA4  6F5B               	movwf	91,b	;volatile
 14399                           
 14400                           ;mcc_generated_files/pin_manager.c: 98:     RC3I2C = 0x00;
 14401  004BA6  0E00               	movlw	0
 14402  004BA8  6F6A               	movwf	106,b	;volatile
 14403                           
 14404                           ;mcc_generated_files/pin_manager.c: 99:     RC4I2C = 0x00;
 14405  004BAA  0E00               	movlw	0
 14406  004BAC  6F6B               	movwf	107,b	;volatile
 14407                           
 14408                           ;mcc_generated_files/pin_manager.c: 100:     RD0I2C = 0x00;
 14409  004BAE  0E00               	movlw	0
 14410  004BB0  6F7A               	movwf	122,b	;volatile
 14411                           
 14412                           ;mcc_generated_files/pin_manager.c: 101:     RD1I2C = 0x00;
 14413  004BB2  0E00               	movlw	0
 14414  004BB4  6F7B               	movwf	123,b	;volatile
 14415                           
 14416                           ;mcc_generated_files/pin_manager.c: 106:     ODCONE = 0x00;
 14417  004BB6  0E00               	movlw	0
 14418  004BB8  6F82               	movwf	130,b	;volatile
 14419                           
 14420                           ;mcc_generated_files/pin_manager.c: 107:     ODCONA = 0x00;
 14421  004BBA  0E00               	movlw	0
 14422  004BBC  6F42               	movwf	66,b	;volatile
 14423                           
 14424                           ;mcc_generated_files/pin_manager.c: 108:     ODCONB = 0x00;
 14425  004BBE  0E00               	movlw	0
 14426  004BC0  6F52               	movwf	82,b	;volatile
 14427                           
 14428                           ;mcc_generated_files/pin_manager.c: 109:     ODCONC = 0x00;
 14429  004BC2  0E00               	movlw	0
 14430  004BC4  6F62               	movwf	98,b	;volatile
 14431                           
 14432                           ;mcc_generated_files/pin_manager.c: 110:     ODCOND = 0x00;
 14433  004BC6  0E00               	movlw	0
 14434  004BC8  6F72               	movwf	114,b	;volatile
 14435  004BCA                     
 14436                           ; BSR set to: 58
 14437                           ;mcc_generated_files/pin_manager.c: 115:     SLRCONA = 0xFF;
 14438  004BCA  6943               	setf	67,b	;volatile
 14439  004BCC                     
 14440                           ; BSR set to: 58
 14441                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONB = 0xFF;
 14442  004BCC  6953               	setf	83,b	;volatile
 14443  004BCE                     
 14444                           ; BSR set to: 58
 14445                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONC = 0xFF;
 14446  004BCE  6963               	setf	99,b	;volatile
 14447  004BD0                     
 14448                           ; BSR set to: 58
 14449                           ;mcc_generated_files/pin_manager.c: 118:     SLRCOND = 0xFF;
 14450  004BD0  6973               	setf	115,b	;volatile
 14451                           
 14452                           ;mcc_generated_files/pin_manager.c: 119:     SLRCONE = 0x07;
 14453  004BD2  0E07               	movlw	7
 14454  004BD4  6F83               	movwf	131,b	;volatile
 14455  004BD6                     
 14456                           ; BSR set to: 58
 14457                           ;mcc_generated_files/pin_manager.c: 124:     INLVLA = 0xFF;
 14458  004BD6  6944               	setf	68,b	;volatile
 14459  004BD8                     
 14460                           ; BSR set to: 58
 14461                           ;mcc_generated_files/pin_manager.c: 125:     INLVLB = 0xFF;
 14462  004BD8  6954               	setf	84,b	;volatile
 14463  004BDA                     
 14464                           ; BSR set to: 58
 14465                           ;mcc_generated_files/pin_manager.c: 126:     INLVLC = 0xFF;
 14466  004BDA  6964               	setf	100,b	;volatile
 14467  004BDC                     
 14468                           ; BSR set to: 58
 14469                           ;mcc_generated_files/pin_manager.c: 127:     INLVLD = 0xFF;
 14470  004BDC  6974               	setf	116,b	;volatile
 14471                           
 14472                           ;mcc_generated_files/pin_manager.c: 128:     INLVLE = 0x0F;
 14473  004BDE  0E0F               	movlw	15
 14474  004BE0  6F84               	movwf	132,b	;volatile
 14475                           
 14476                           ;mcc_generated_files/pin_manager.c: 137:     CCP3PPS = 0x1F;
 14477  004BE2  0E1F               	movlw	31
 14478  004BE4  6FCF               	movwf	207,b	;volatile
 14479                           
 14480                           ;mcc_generated_files/pin_manager.c: 138:     CLCIN3PPS = 0x09;
 14481  004BE6  0E09               	movlw	9
 14482  004BE8  6FDC               	movwf	220,b	;volatile
 14483                           
 14484                           ;mcc_generated_files/pin_manager.c: 139:     RA1PPS = 0x0E;
 14485  004BEA  0E0E               	movlw	14
 14486  004BEC  6F01               	movwf	1,b	;volatile
 14487                           
 14488                           ;mcc_generated_files/pin_manager.c: 140:     U1RXPPS = 0x0A;
 14489  004BEE  0E0A               	movlw	10
 14490  004BF0  6FE5               	movwf	229,b	;volatile
 14491                           
 14492                           ;mcc_generated_files/pin_manager.c: 141:     RA0PPS = 0x0D;
 14493  004BF2  0E0D               	movlw	13
 14494  004BF4  6F00               	movwf	0,b	;volatile
 14495                           
 14496                           ;mcc_generated_files/pin_manager.c: 142:     T5GPPS = 0x1D;
 14497  004BF6  0E1D               	movlw	29
 14498  004BF8  6FC9               	movwf	201,b	;volatile
 14499                           
 14500                           ;mcc_generated_files/pin_manager.c: 143:     RA4PPS = 0x10;
 14501  004BFA  0E10               	movlw	16
 14502  004BFC  6F04               	movwf	4,b	;volatile
 14503                           
 14504                           ;mcc_generated_files/pin_manager.c: 144:     CLCIN0PPS = 0x07;
 14505  004BFE  0E07               	movlw	7
 14506  004C00  6FD9               	movwf	217,b	;volatile
 14507                           
 14508                           ;mcc_generated_files/pin_manager.c: 145:     SMT1WINPPS = 0x09;
 14509  004C02  0E09               	movlw	9
 14510  004C04  6FD1               	movwf	209,b	;volatile
 14511                           
 14512                           ;mcc_generated_files/pin_manager.c: 146:     RA3PPS = 0x0F;
 14513  004C06  0E0F               	movlw	15
 14514  004C08  6F03               	movwf	3,b	;volatile
 14515                           
 14516                           ;mcc_generated_files/pin_manager.c: 147:     RB3PPS = 0x13;
 14517  004C0A  0E13               	movlw	19
 14518  004C0C  6F0B               	movwf	11,b	;volatile
 14519                           
 14520                           ;mcc_generated_files/pin_manager.c: 148:     CLCIN2PPS = 0x08;
 14521  004C0E  0E08               	movlw	8
 14522  004C10  6FDB               	movwf	219,b	;volatile
 14523                           
 14524                           ;mcc_generated_files/pin_manager.c: 149:     SMT1SIGPPS = 0x08;
 14525  004C12  0E08               	movlw	8
 14526  004C14  6FD2               	movwf	210,b	;volatile
 14527                           
 14528                           ;mcc_generated_files/pin_manager.c: 150:     CCP4PPS = 0x1E;
 14529  004C16  0E1E               	movlw	30
 14530  004C18  6FD0               	movwf	208,b	;volatile
 14531  004C1A                     
 14532                           ; BSR set to: 58
 14533  004C1A  0012               	return		;funcret
 14534  004C1C                     __end_of_PIN_MANAGER_Initialize:
 14535                           	callstack 0
 14536                           
 14537 ;; *************** function _OSCILLATOR_Initialize *****************
 14538 ;; Defined at:
 14539 ;;		line 72 in file "mcc_generated_files/mcc.c"
 14540 ;; Parameters:    Size  Location     Type
 14541 ;;		None
 14542 ;; Auto vars:     Size  Location     Type
 14543 ;;		None
 14544 ;; Return value:  Size  Location     Type
 14545 ;;                  1    wreg      void 
 14546 ;; Registers used:
 14547 ;;		wreg, status,2
 14548 ;; Tracked objects:
 14549 ;;		On entry : 0/0
 14550 ;;		On exit  : 0/0
 14551 ;;		Unchanged: 0/0
 14552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14556 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14557 ;;Total ram usage:        0 bytes
 14558 ;; Hardware stack levels used: 1
 14559 ;; Hardware stack levels required when called: 8
 14560 ;; This function calls:
 14561 ;;		Nothing
 14562 ;; This function is called by:
 14563 ;;		_SYSTEM_Initialize
 14564 ;; This function uses a non-reentrant model
 14565 ;;
 14566                           
 14567                           	psect	text70
 14568  005D4E                     __ptext70:
 14569                           	callstack 0
 14570  005D4E                     _OSCILLATOR_Initialize:
 14571                           	callstack 21
 14572  005D4E                     
 14573                           ;mcc_generated_files/mcc.c: 75:     OSCCON1 = 0x60;
 14574  005D4E  0E60               	movlw	96
 14575  005D50  0139               	movlb	57	; () banked
 14576  005D52  6FD9               	movwf	217,b	;volatile
 14577                           
 14578                           ;mcc_generated_files/mcc.c: 77:     OSCCON3 = 0x00;
 14579  005D54  0E00               	movlw	0
 14580  005D56  6FDB               	movwf	219,b	;volatile
 14581                           
 14582                           ;mcc_generated_files/mcc.c: 79:     OSCEN = 0x00;
 14583  005D58  0E00               	movlw	0
 14584  005D5A  6FDD               	movwf	221,b	;volatile
 14585                           
 14586                           ;mcc_generated_files/mcc.c: 81:     OSCFRQ = 0x08;
 14587  005D5C  0E08               	movlw	8
 14588  005D5E  6FDF               	movwf	223,b	;volatile
 14589                           
 14590                           ;mcc_generated_files/mcc.c: 83:     OSCTUNE = 0x00;
 14591  005D60  0E00               	movlw	0
 14592  005D62  6FDE               	movwf	222,b	;volatile
 14593  005D64                     
 14594                           ; BSR set to: 57
 14595  005D64  0012               	return		;funcret
 14596  005D66                     __end_of_OSCILLATOR_Initialize:
 14597                           	callstack 0
 14598                           
 14599 ;; *************** function _INTERRUPT_Initialize *****************
 14600 ;; Defined at:
 14601 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 14602 ;; Parameters:    Size  Location     Type
 14603 ;;		None
 14604 ;; Auto vars:     Size  Location     Type
 14605 ;;  state           1   19[COMRAM] _Bool 
 14606 ;; Return value:  Size  Location     Type
 14607 ;;                  1    wreg      void 
 14608 ;; Registers used:
 14609 ;;		wreg, status,2
 14610 ;; Tracked objects:
 14611 ;;		On entry : 0/0
 14612 ;;		On exit  : 0/0
 14613 ;;		Unchanged: 0/0
 14614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14616 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14618 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14619 ;;Total ram usage:        1 bytes
 14620 ;; Hardware stack levels used: 1
 14621 ;; Hardware stack levels required when called: 8
 14622 ;; This function calls:
 14623 ;;		Nothing
 14624 ;; This function is called by:
 14625 ;;		_SYSTEM_Initialize
 14626 ;; This function uses a non-reentrant model
 14627 ;;
 14628                           
 14629                           	psect	text71
 14630  0054C8                     __ptext71:
 14631                           	callstack 0
 14632  0054C8                     _INTERRUPT_Initialize:
 14633                           	callstack 21
 14634  0054C8                     
 14635                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 14636  0054C8  8AD2               	bsf	210,5,c	;volatile
 14637  0054CA                     
 14638                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 14639  0054CA  0E00               	movlw	0
 14640  0054CC  BED2               	btfsc	16338,7,c	;volatile
 14641  0054CE  0E01               	movlw	1
 14642  0054D0  6E14               	movwf	INTERRUPT_Initialize@state^0,c
 14643  0054D2                     
 14644                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 14645  0054D2  9ED2               	bcf	16338,7,c	;volatile
 14646                           
 14647                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 14648  0054D4  0E55               	movlw	85
 14649  0054D6  6ED4               	movwf	212,c	;volatile
 14650                           
 14651                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 14652  0054D8  0EAA               	movlw	170
 14653  0054DA  6ED4               	movwf	212,c	;volatile
 14654  0054DC                     
 14655                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 14656  0054DC  90D4               	bcf	212,0,c	;volatile
 14657                           
 14658                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTBASEU = 0;
 14659  0054DE  0E00               	movlw	0
 14660  0054E0  6ED7               	movwf	215,c	;volatile
 14661                           
 14662                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTBASEH = 0;
 14663  0054E2  0E00               	movlw	0
 14664  0054E4  6ED6               	movwf	214,c	;volatile
 14665                           
 14666                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTBASEL = 8;
 14667  0054E6  0E08               	movlw	8
 14668  0054E8  6ED5               	movwf	213,c	;volatile
 14669                           
 14670                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 14671  0054EA  0E55               	movlw	85
 14672  0054EC  6ED4               	movwf	212,c	;volatile
 14673                           
 14674                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 14675  0054EE  0EAA               	movlw	170
 14676  0054F0  6ED4               	movwf	212,c	;volatile
 14677  0054F2                     
 14678                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 14679  0054F2  80D4               	bsf	212,0,c	;volatile
 14680  0054F4                     
 14681                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 14682  0054F4  B014               	btfsc	INTERRUPT_Initialize@state^0,0,c
 14683  0054F6  D002               	bra	u2845
 14684  0054F8  9ED2               	bcf	16338,7,c	;volatile
 14685  0054FA  D001               	bra	u2846
 14686  0054FC                     u2845:
 14687  0054FC  8ED2               	bsf	16338,7,c	;volatile
 14688  0054FE                     u2846:
 14689  0054FE                     
 14690                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR3bits.U1TXIP = 0;
 14691  0054FE  0139               	movlb	57	; () banked
 14692  005500  9983               	bcf	131,4,b	;volatile
 14693  005502                     
 14694                           ; BSR set to: 57
 14695                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR3bits.U1RXIP = 0;
 14696  005502  9783               	bcf	131,3,b	;volatile
 14697  005504                     
 14698                           ; BSR set to: 57
 14699                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR1bits.SMT1PWAIP = 1;
 14700  005504  8F81               	bsf	129,7,b	;volatile
 14701  005506                     
 14702                           ; BSR set to: 57
 14703                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR1bits.SMT1IP = 1;
 14704  005506  8B81               	bsf	129,5,b	;volatile
 14705  005508                     
 14706                           ; BSR set to: 57
 14707                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR1bits.SMT1PRAIP = 1;
 14708  005508  8D81               	bsf	129,6,b	;volatile
 14709  00550A                     
 14710                           ; BSR set to: 57
 14711                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR10bits.CCP4IP = 1;
 14712  00550A  818A               	bsf	138,0,b	;volatile
 14713  00550C                     
 14714                           ; BSR set to: 57
 14715                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR8bits.TMR5GIP = 1;
 14716  00550C  8F88               	bsf	136,7,b	;volatile
 14717  00550E                     
 14718                           ; BSR set to: 57
 14719                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR7bits.TMR4IP = 0;
 14720  00550E  9187               	bcf	135,0,b	;volatile
 14721  005510                     
 14722                           ; BSR set to: 57
 14723                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR9bits.CCP3IP = 1;
 14724  005510  8389               	bsf	137,1,b	;volatile
 14725  005512                     
 14726                           ; BSR set to: 57
 14727  005512  0012               	return		;funcret
 14728  005514                     __end_of_INTERRUPT_Initialize:
 14729                           	callstack 0
 14730                           
 14731 ;; *************** function _CLC3_Initialize *****************
 14732 ;; Defined at:
 14733 ;;		line 58 in file "mcc_generated_files/clc3.c"
 14734 ;; Parameters:    Size  Location     Type
 14735 ;;		None
 14736 ;; Auto vars:     Size  Location     Type
 14737 ;;		None
 14738 ;; Return value:  Size  Location     Type
 14739 ;;                  1    wreg      void 
 14740 ;; Registers used:
 14741 ;;		wreg, status,2
 14742 ;; Tracked objects:
 14743 ;;		On entry : 0/0
 14744 ;;		On exit  : 0/0
 14745 ;;		Unchanged: 0/0
 14746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14750 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14751 ;;Total ram usage:        0 bytes
 14752 ;; Hardware stack levels used: 1
 14753 ;; Hardware stack levels required when called: 8
 14754 ;; This function calls:
 14755 ;;		Nothing
 14756 ;; This function is called by:
 14757 ;;		_SYSTEM_Initialize
 14758 ;; This function uses a non-reentrant model
 14759 ;;
 14760                           
 14761                           	psect	text72
 14762  005B78                     __ptext72:
 14763                           	callstack 0
 14764  005B78                     _CLC3_Initialize:
 14765                           	callstack 21
 14766  005B78                     
 14767                           ;mcc_generated_files/clc3.c: 63:     CLC3POL = 0x00;
 14768  005B78  0E00               	movlw	0
 14769  005B7A  013C               	movlb	60	; () banked
 14770  005B7C  6F61               	movwf	97,b	;volatile
 14771                           
 14772                           ;mcc_generated_files/clc3.c: 65:     CLC3SEL0 = 0x03;
 14773  005B7E  0E03               	movlw	3
 14774  005B80  6F62               	movwf	98,b	;volatile
 14775                           
 14776                           ;mcc_generated_files/clc3.c: 67:     CLC3SEL1 = 0x02;
 14777  005B82  0E02               	movlw	2
 14778  005B84  6F63               	movwf	99,b	;volatile
 14779                           
 14780                           ;mcc_generated_files/clc3.c: 69:     CLC3SEL2 = 0x00;
 14781  005B86  0E00               	movlw	0
 14782  005B88  6F64               	movwf	100,b	;volatile
 14783                           
 14784                           ;mcc_generated_files/clc3.c: 71:     CLC3SEL3 = 0x00;
 14785  005B8A  0E00               	movlw	0
 14786  005B8C  6F65               	movwf	101,b	;volatile
 14787                           
 14788                           ;mcc_generated_files/clc3.c: 73:     CLC3GLS0 = 0x02;
 14789  005B8E  0E02               	movlw	2
 14790  005B90  6F66               	movwf	102,b	;volatile
 14791                           
 14792                           ;mcc_generated_files/clc3.c: 75:     CLC3GLS1 = 0x08;
 14793  005B92  0E08               	movlw	8
 14794  005B94  6F67               	movwf	103,b	;volatile
 14795                           
 14796                           ;mcc_generated_files/clc3.c: 77:     CLC3GLS2 = 0x00;
 14797  005B96  0E00               	movlw	0
 14798  005B98  6F68               	movwf	104,b	;volatile
 14799                           
 14800                           ;mcc_generated_files/clc3.c: 79:     CLC3GLS3 = 0x00;
 14801  005B9A  0E00               	movlw	0
 14802  005B9C  6F69               	movwf	105,b	;volatile
 14803                           
 14804                           ;mcc_generated_files/clc3.c: 81:     CLC3CON = 0x85;
 14805  005B9E  0E85               	movlw	133
 14806  005BA0  6F60               	movwf	96,b	;volatile
 14807  005BA2                     
 14808                           ; BSR set to: 60
 14809  005BA2  0012               	return		;funcret
 14810  005BA4                     __end_of_CLC3_Initialize:
 14811                           	callstack 0
 14812                           
 14813 ;; *************** function _CCP4_Initialize *****************
 14814 ;; Defined at:
 14815 ;;		line 78 in file "mcc_generated_files/ccp4.c"
 14816 ;; Parameters:    Size  Location     Type
 14817 ;;		None
 14818 ;; Auto vars:     Size  Location     Type
 14819 ;;		None
 14820 ;; Return value:  Size  Location     Type
 14821 ;;                  1    wreg      void 
 14822 ;; Registers used:
 14823 ;;		wreg, status,2, status,0, cstack
 14824 ;; Tracked objects:
 14825 ;;		On entry : 0/0
 14826 ;;		On exit  : 0/0
 14827 ;;		Unchanged: 0/0
 14828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14832 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14833 ;;Total ram usage:        0 bytes
 14834 ;; Hardware stack levels used: 1
 14835 ;; Hardware stack levels required when called: 9
 14836 ;; This function calls:
 14837 ;;		_CCP4_SetCallBack
 14838 ;; This function is called by:
 14839 ;;		_SYSTEM_Initialize
 14840 ;; This function uses a non-reentrant model
 14841 ;;
 14842                           
 14843                           	psect	text73
 14844  005AC2                     __ptext73:
 14845                           	callstack 0
 14846  005AC2                     _CCP4_Initialize:
 14847                           	callstack 20
 14848  005AC2                     
 14849                           ;mcc_generated_files/ccp4.c: 83:  CCP4CON = 0x83;
 14850  005AC2  0E83               	movlw	131
 14851  005AC4  6E72               	movwf	114,c	;volatile
 14852                           
 14853                           ;mcc_generated_files/ccp4.c: 86:  CCP4CAP = 0x00;
 14854  005AC6  0E00               	movlw	0
 14855  005AC8  6E73               	movwf	115,c	;volatile
 14856                           
 14857                           ;mcc_generated_files/ccp4.c: 89:  CCPR4H = 0x00;
 14858  005ACA  0E00               	movlw	0
 14859  005ACC  6E71               	movwf	113,c	;volatile
 14860                           
 14861                           ;mcc_generated_files/ccp4.c: 92:  CCPR4L = 0x00;
 14862  005ACE  0E00               	movlw	0
 14863  005AD0  6E70               	movwf	112,c	;volatile
 14864  005AD2                     
 14865                           ;mcc_generated_files/ccp4.c: 95:     CCP4_SetCallBack(CCP4_DefaultCallBack);
 14866  005AD2  0E92               	movlw	low _CCP4_DefaultCallBack
 14867  005AD4  6E14               	movwf	CCP4_SetCallBack@customCallBack^0,c
 14868  005AD6  0E5A               	movlw	high _CCP4_DefaultCallBack
 14869  005AD8  6E15               	movwf	(CCP4_SetCallBack@customCallBack+1)^0,c
 14870  005ADA  ECEA  F02E         	call	_CCP4_SetCallBack	;wreg free
 14871  005ADE                     
 14872                           ;mcc_generated_files/ccp4.c: 98:  CCPTMRS0bits.C4TSEL = 0x2;
 14873  005ADE  013F               	movlb	63	; () banked
 14874  005AE0  515E               	movf	94,w,b	;volatile
 14875  005AE2  0B3F               	andlw	-193
 14876  005AE4  0980               	iorlw	128
 14877  005AE6  6F5E               	movwf	94,b	;volatile
 14878  005AE8                     
 14879                           ; BSR set to: 63
 14880                           ;mcc_generated_files/ccp4.c: 101:     PIR10bits.CCP4IF = 0;
 14881  005AE8  0139               	movlb	57	; () banked
 14882  005AEA  91AA               	bcf	170,0,b	;volatile
 14883  005AEC                     
 14884                           ; BSR set to: 57
 14885                           ;mcc_generated_files/ccp4.c: 104:     PIE10bits.CCP4IE = 1;
 14886  005AEC  819A               	bsf	154,0,b	;volatile
 14887  005AEE                     
 14888                           ; BSR set to: 57
 14889  005AEE  0012               	return		;funcret
 14890  005AF0                     __end_of_CCP4_Initialize:
 14891                           	callstack 0
 14892                           
 14893 ;; *************** function _CCP4_SetCallBack *****************
 14894 ;; Defined at:
 14895 ;;		line 75 in file "mcc_generated_files/ccp4.c"
 14896 ;; Parameters:    Size  Location     Type
 14897 ;;  customCallBa    2   19[COMRAM] PTR FTN(unsigned short ,
 14898 ;;		 -> CCP4_DefaultCallBack(1), 
 14899 ;; Auto vars:     Size  Location     Type
 14900 ;;		None
 14901 ;; Return value:  Size  Location     Type
 14902 ;;                  1    wreg      void 
 14903 ;; Registers used:
 14904 ;;		wreg, status,2, status,0
 14905 ;; Tracked objects:
 14906 ;;		On entry : 0/0
 14907 ;;		On exit  : 0/0
 14908 ;;		Unchanged: 0/0
 14909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14910 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14913 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14914 ;;Total ram usage:        2 bytes
 14915 ;; Hardware stack levels used: 1
 14916 ;; Hardware stack levels required when called: 8
 14917 ;; This function calls:
 14918 ;;		Nothing
 14919 ;; This function is called by:
 14920 ;;		_CCP4_Initialize
 14921 ;; This function uses a non-reentrant model
 14922 ;;
 14923                           
 14924                           	psect	text74
 14925  005DD4                     __ptext74:
 14926                           	callstack 0
 14927  005DD4                     _CCP4_SetCallBack:
 14928                           	callstack 20
 14929  005DD4                     
 14930                           ;mcc_generated_files/ccp4.c: 76:     CCP4_CallBack = customCallBack;
 14931  005DD4  C014  F18C         	movff	CCP4_SetCallBack@customCallBack,_CCP4_CallBack
 14932  005DD8  C015  F18D         	movff	CCP4_SetCallBack@customCallBack+1,_CCP4_CallBack+1
 14933  005DDC  0012               	return		;funcret
 14934  005DDE                     __end_of_CCP4_SetCallBack:
 14935                           	callstack 0
 14936                           
 14937 ;; *************** function _CCP3_Initialize *****************
 14938 ;; Defined at:
 14939 ;;		line 75 in file "mcc_generated_files/ccp3.c"
 14940 ;; Parameters:    Size  Location     Type
 14941 ;;		None
 14942 ;; Auto vars:     Size  Location     Type
 14943 ;;		None
 14944 ;; Return value:  Size  Location     Type
 14945 ;;                  1    wreg      void 
 14946 ;; Registers used:
 14947 ;;		wreg, status,2, status,0, cstack
 14948 ;; Tracked objects:
 14949 ;;		On entry : 0/0
 14950 ;;		On exit  : 0/0
 14951 ;;		Unchanged: 0/0
 14952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14956 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14957 ;;Total ram usage:        0 bytes
 14958 ;; Hardware stack levels used: 1
 14959 ;; Hardware stack levels required when called: 9
 14960 ;; This function calls:
 14961 ;;		_CCP3_SetCallBack
 14962 ;; This function is called by:
 14963 ;;		_SYSTEM_Initialize
 14964 ;; This function uses a non-reentrant model
 14965 ;;
 14966                           
 14967                           	psect	text75
 14968  005AF0                     __ptext75:
 14969                           	callstack 0
 14970  005AF0                     _CCP3_Initialize:
 14971                           	callstack 20
 14972  005AF0                     
 14973                           ;mcc_generated_files/ccp3.c: 80:  CCP3CON = 0x83;
 14974  005AF0  0E83               	movlw	131
 14975  005AF2  6E76               	movwf	118,c	;volatile
 14976                           
 14977                           ;mcc_generated_files/ccp3.c: 83:  CCP3CAP = 0x00;
 14978  005AF4  0E00               	movlw	0
 14979  005AF6  6E77               	movwf	119,c	;volatile
 14980                           
 14981                           ;mcc_generated_files/ccp3.c: 86:  CCPR3H = 0x00;
 14982  005AF8  0E00               	movlw	0
 14983  005AFA  6E75               	movwf	117,c	;volatile
 14984                           
 14985                           ;mcc_generated_files/ccp3.c: 89:  CCPR3L = 0x00;
 14986  005AFC  0E00               	movlw	0
 14987  005AFE  6E74               	movwf	116,c	;volatile
 14988  005B00                     
 14989                           ;mcc_generated_files/ccp3.c: 92:     CCP3_SetCallBack(CCP3_DefaultCallBack);
 14990  005B00  0E62               	movlw	low _CCP3_DefaultCallBack
 14991  005B02  6E14               	movwf	CCP3_SetCallBack@customCallBack^0,c
 14992  005B04  0E5A               	movlw	high _CCP3_DefaultCallBack
 14993  005B06  6E15               	movwf	(CCP3_SetCallBack@customCallBack+1)^0,c
 14994  005B08  ECEF  F02E         	call	_CCP3_SetCallBack	;wreg free
 14995  005B0C                     
 14996                           ;mcc_generated_files/ccp3.c: 95:  CCPTMRS0bits.C3TSEL = 0x2;
 14997  005B0C  013F               	movlb	63	; () banked
 14998  005B0E  515E               	movf	94,w,b	;volatile
 14999  005B10  0BCF               	andlw	-49
 15000  005B12  0920               	iorlw	32
 15001  005B14  6F5E               	movwf	94,b	;volatile
 15002  005B16                     
 15003                           ; BSR set to: 63
 15004                           ;mcc_generated_files/ccp3.c: 98:     PIR9bits.CCP3IF = 0;
 15005  005B16  0139               	movlb	57	; () banked
 15006  005B18  93A9               	bcf	169,1,b	;volatile
 15007  005B1A                     
 15008                           ; BSR set to: 57
 15009                           ;mcc_generated_files/ccp3.c: 101:     PIE9bits.CCP3IE = 1;
 15010  005B1A  8399               	bsf	153,1,b	;volatile
 15011  005B1C                     
 15012                           ; BSR set to: 57
 15013  005B1C  0012               	return		;funcret
 15014  005B1E                     __end_of_CCP3_Initialize:
 15015                           	callstack 0
 15016                           
 15017 ;; *************** function _CCP3_SetCallBack *****************
 15018 ;; Defined at:
 15019 ;;		line 119 in file "mcc_generated_files/ccp3.c"
 15020 ;; Parameters:    Size  Location     Type
 15021 ;;  customCallBa    2   19[COMRAM] PTR FTN(unsigned short ,
 15022 ;;		 -> CCP3_DefaultCallBack(1), 
 15023 ;; Auto vars:     Size  Location     Type
 15024 ;;		None
 15025 ;; Return value:  Size  Location     Type
 15026 ;;                  1    wreg      void 
 15027 ;; Registers used:
 15028 ;;		wreg, status,2, status,0
 15029 ;; Tracked objects:
 15030 ;;		On entry : 0/0
 15031 ;;		On exit  : 0/0
 15032 ;;		Unchanged: 0/0
 15033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15034 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15037 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15038 ;;Total ram usage:        2 bytes
 15039 ;; Hardware stack levels used: 1
 15040 ;; Hardware stack levels required when called: 8
 15041 ;; This function calls:
 15042 ;;		Nothing
 15043 ;; This function is called by:
 15044 ;;		_CCP3_Initialize
 15045 ;; This function uses a non-reentrant model
 15046 ;;
 15047                           
 15048                           	psect	text76
 15049  005DDE                     __ptext76:
 15050                           	callstack 0
 15051  005DDE                     _CCP3_SetCallBack:
 15052                           	callstack 20
 15053  005DDE                     
 15054                           ;mcc_generated_files/ccp3.c: 120:     CCP3_CallBack = customCallBack;
 15055  005DDE  C014  F18E         	movff	CCP3_SetCallBack@customCallBack,_CCP3_CallBack
 15056  005DE2  C015  F18F         	movff	CCP3_SetCallBack@customCallBack+1,_CCP3_CallBack+1
 15057  005DE6  0012               	return		;funcret
 15058  005DE8                     __end_of_CCP3_SetCallBack:
 15059                           	callstack 0
 15060                           
 15061 ;; *************** function _ADCC_Initialize *****************
 15062 ;; Defined at:
 15063 ;;		line 62 in file "mcc_generated_files/adcc.c"
 15064 ;; Parameters:    Size  Location     Type
 15065 ;;		None
 15066 ;; Auto vars:     Size  Location     Type
 15067 ;;		None
 15068 ;; Return value:  Size  Location     Type
 15069 ;;                  1    wreg      void 
 15070 ;; Registers used:
 15071 ;;		wreg, status,2
 15072 ;; Tracked objects:
 15073 ;;		On entry : 0/0
 15074 ;;		On exit  : 0/0
 15075 ;;		Unchanged: 0/0
 15076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15080 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15081 ;;Total ram usage:        0 bytes
 15082 ;; Hardware stack levels used: 1
 15083 ;; Hardware stack levels required when called: 8
 15084 ;; This function calls:
 15085 ;;		Nothing
 15086 ;; This function is called by:
 15087 ;;		_SYSTEM_Initialize
 15088 ;; This function uses a non-reentrant model
 15089 ;;
 15090                           
 15091                           	psect	text77
 15092  005418                     __ptext77:
 15093                           	callstack 0
 15094  005418                     _ADCC_Initialize:
 15095                           	callstack 21
 15096  005418                     
 15097                           ;mcc_generated_files/adcc.c: 66:     ADLTHL = 0x00;
 15098  005418  0E00               	movlw	0
 15099  00541A  013E               	movlb	62	; () banked
 15100  00541C  6FDE               	movwf	222,b	;volatile
 15101                           
 15102                           ;mcc_generated_files/adcc.c: 68:     ADLTHH = 0x00;
 15103  00541E  0E00               	movlw	0
 15104  005420  6FDF               	movwf	223,b	;volatile
 15105                           
 15106                           ;mcc_generated_files/adcc.c: 70:     ADUTHL = 0x00;
 15107  005422  0E00               	movlw	0
 15108  005424  6FE0               	movwf	224,b	;volatile
 15109                           
 15110                           ;mcc_generated_files/adcc.c: 72:     ADUTHH = 0x00;
 15111  005426  0E00               	movlw	0
 15112  005428  6FE1               	movwf	225,b	;volatile
 15113                           
 15114                           ;mcc_generated_files/adcc.c: 74:     ADSTPTL = 0x00;
 15115  00542A  0E00               	movlw	0
 15116  00542C  6FE4               	movwf	228,b	;volatile
 15117                           
 15118                           ;mcc_generated_files/adcc.c: 76:     ADSTPTH = 0x00;
 15119  00542E  0E00               	movlw	0
 15120  005430  6FE5               	movwf	229,b	;volatile
 15121                           
 15122                           ;mcc_generated_files/adcc.c: 78:     ADACCU = 0x00;
 15123  005432  0E00               	movlw	0
 15124  005434  6FEA               	movwf	234,b	;volatile
 15125                           
 15126                           ;mcc_generated_files/adcc.c: 80:     ADRPT = 0x00;
 15127  005436  0E00               	movlw	0
 15128  005438  6FEC               	movwf	236,b	;volatile
 15129                           
 15130                           ;mcc_generated_files/adcc.c: 82:     ADPCH = 0x00;
 15131  00543A  0E00               	movlw	0
 15132  00543C  6FF1               	movwf	241,b	;volatile
 15133                           
 15134                           ;mcc_generated_files/adcc.c: 84:     ADACQL = 0x58;
 15135  00543E  0E58               	movlw	88
 15136  005440  6FF3               	movwf	243,b	;volatile
 15137                           
 15138                           ;mcc_generated_files/adcc.c: 86:     ADACQH = 0x02;
 15139  005442  0E02               	movlw	2
 15140  005444  6FF4               	movwf	244,b	;volatile
 15141                           
 15142                           ;mcc_generated_files/adcc.c: 88:     ADCAP = 0x00;
 15143  005446  0E00               	movlw	0
 15144  005448  6FF5               	movwf	245,b	;volatile
 15145                           
 15146                           ;mcc_generated_files/adcc.c: 90:     ADPREL = 0x00;
 15147  00544A  0E00               	movlw	0
 15148  00544C  6FF6               	movwf	246,b	;volatile
 15149                           
 15150                           ;mcc_generated_files/adcc.c: 92:     ADPREH = 0x00;
 15151  00544E  0E00               	movlw	0
 15152  005450  6FF7               	movwf	247,b	;volatile
 15153                           
 15154                           ;mcc_generated_files/adcc.c: 94:     ADCON1 = 0x00;
 15155  005452  0E00               	movlw	0
 15156  005454  6FF9               	movwf	249,b	;volatile
 15157                           
 15158                           ;mcc_generated_files/adcc.c: 96:     ADCON2 = 0x00;
 15159  005456  0E00               	movlw	0
 15160  005458  6FFA               	movwf	250,b	;volatile
 15161                           
 15162                           ;mcc_generated_files/adcc.c: 98:     ADCON3 = 0x00;
 15163  00545A  0E00               	movlw	0
 15164  00545C  6FFB               	movwf	251,b	;volatile
 15165                           
 15166                           ;mcc_generated_files/adcc.c: 100:     ADSTAT = 0x00;
 15167  00545E  0E00               	movlw	0
 15168  005460  6FFC               	movwf	252,b	;volatile
 15169                           
 15170                           ;mcc_generated_files/adcc.c: 102:     ADREF = 0x00;
 15171  005462  0E00               	movlw	0
 15172  005464  6FFD               	movwf	253,b	;volatile
 15173                           
 15174                           ;mcc_generated_files/adcc.c: 104:     ADACT = 0x00;
 15175  005466  0E00               	movlw	0
 15176  005468  6FFE               	movwf	254,b	;volatile
 15177                           
 15178                           ;mcc_generated_files/adcc.c: 106:     ADCLK = 0x1F;
 15179  00546A  0E1F               	movlw	31
 15180  00546C  6FFF               	movwf	255,b	;volatile
 15181                           
 15182                           ;mcc_generated_files/adcc.c: 108:     ADCON0 = 0x84;
 15183  00546E  0E84               	movlw	132
 15184  005470  6FF8               	movwf	248,b	;volatile
 15185  005472                     
 15186                           ; BSR set to: 62
 15187  005472  0012               	return		;funcret
 15188  005474                     __end_of_ADCC_Initialize:
 15189                           	callstack 0
 15190                           
 15191 ;; *************** function _UART1_tx_vect_isr *****************
 15192 ;; Defined at:
 15193 ;;		line 235 in file "mcc_generated_files/uart1.c"
 15194 ;; Parameters:    Size  Location     Type
 15195 ;;		None
 15196 ;; Auto vars:     Size  Location     Type
 15197 ;;		None
 15198 ;; Return value:  Size  Location     Type
 15199 ;;                  1    wreg      void 
 15200 ;; Registers used:
 15201 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 15202 ;; Tracked objects:
 15203 ;;		On entry : 0/0
 15204 ;;		On exit  : 0/0
 15205 ;;		Unchanged: 0/0
 15206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15209 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15210 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15211 ;;Total ram usage:        1 bytes
 15212 ;; Hardware stack levels used: 1
 15213 ;; Hardware stack levels required when called: 5
 15214 ;; This function calls:
 15215 ;;		Absolute function
 15216 ;;		_UART1_Transmit_ISR
 15217 ;; This function is called by:
 15218 ;;		Interrupt level 1
 15219 ;; This function uses a non-reentrant model
 15220 ;;
 15221                           
 15222                           	psect	text78
 15223  00573C                     __ptext78:
 15224                           	callstack 0
 15225  00573C                     _UART1_tx_vect_isr:
 15226                           	callstack 14
 15227                           
 15228                           ; BSR set to: 62
 15229                           ;incstack = 0
 15230  00573C  006F FF60  F011    	movff	status,??_UART1_tx_vect_isr
 15231  005742                     
 15232                           ;mcc_generated_files/uart1.c: 237:     if(UART1_TxInterruptHandler)
 15233  005742  0101               	movlb	1	; () banked
 15234  005744  5196               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 15235  005746  1197               	iorwf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 15236  005748  B4D8               	btfsc	status,2,c
 15237  00574A  EFA9  F02B         	goto	i1u705_21
 15238  00574E  EFAB  F02B         	goto	i1u705_20
 15239  005752                     i1u705_21:
 15240  005752  EFB7  F02B         	goto	i1l324
 15241  005756                     i1u705_20:
 15242  005756                     
 15243                           ; BSR set to: 1
 15244                           ;mcc_generated_files/uart1.c: 238:     {;mcc_generated_files/uart1.c: 239:         UART1
      +                          _TxInterruptHandler();
 15245  005756  D802               	call	i1u706_28
 15246  005758  EFB7  F02B         	goto	i1u706_29
 15247  00575C                     i1u706_28:
 15248  00575C  0005               	push	
 15249  00575E  6EFA               	movwf	pclath,c
 15250  005760  5196               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 15251  005762  6EFD               	movwf	tosl,c
 15252  005764  5197               	movf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 15253  005766  6EFE               	movwf	tosh,c
 15254  005768  6AFF               	clrf	tosu,c
 15255  00576A  50FA               	movf	pclath,w,c
 15256  00576C  0012               	return		;indir
 15257  00576E                     i1u706_29:
 15258  00576E                     i1l324:
 15259  00576E  0060  F047  FFD8   	movff	??_UART1_tx_vect_isr,status
 15260  005774  0011               	retfie		f
 15261  005776                     __end_of_UART1_tx_vect_isr:
 15262                           	callstack 0
 15263                           
 15264 ;; *************** function _UART1_Transmit_ISR *****************
 15265 ;; Defined at:
 15266 ;;		line 253 in file "mcc_generated_files/uart1.c"
 15267 ;; Parameters:    Size  Location     Type
 15268 ;;		None
 15269 ;; Auto vars:     Size  Location     Type
 15270 ;;		None
 15271 ;; Return value:  Size  Location     Type
 15272 ;;                  1    wreg      void 
 15273 ;; Registers used:
 15274 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15275 ;; Tracked objects:
 15276 ;;		On entry : 0/0
 15277 ;;		On exit  : 0/0
 15278 ;;		Unchanged: 0/0
 15279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15283 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15284 ;;Total ram usage:        0 bytes
 15285 ;; Hardware stack levels used: 1
 15286 ;; Hardware stack levels required when called: 4
 15287 ;; This function calls:
 15288 ;;		Nothing
 15289 ;; This function is called by:
 15290 ;;		_UART1_Initialize
 15291 ;;		_UART1_tx_vect_isr
 15292 ;; This function uses a non-reentrant model
 15293 ;;
 15294                           
 15295                           	psect	text79
 15296  00567E                     __ptext79:
 15297                           	callstack 0
 15298  00567E                     _UART1_Transmit_ISR:
 15299                           	callstack 14
 15300  00567E                     
 15301                           ;mcc_generated_files/uart1.c: 256:     if(sizeof(uart1TxBuffer) > uart1TxBufferRemaining
      +                          )
 15302  00567E  0E08               	movlw	8
 15303  005680  604C               	cpfslt	_uart1TxBufferRemaining^0,c	;volatile
 15304  005682  EF45  F02B         	goto	i1u686_21
 15305  005686  EF47  F02B         	goto	i1u686_20
 15306  00568A                     i1u686_21:
 15307  00568A  EF5E  F02B         	goto	i1l333
 15308  00568E                     i1u686_20:
 15309  00568E                     
 15310                           ;mcc_generated_files/uart1.c: 257:     {;mcc_generated_files/uart1.c: 258:         U1TXB
      +                           = uart1TxBuffer[uart1TxTail++];
 15311  00568E  0E10               	movlw	low _uart1TxBuffer
 15312  005690  2446               	addwf	_uart1TxTail^0,w,c	;volatile
 15313  005692  6ED9               	movwf	fsr2l,c
 15314  005694  6ADA               	clrf	fsr2h,c
 15315  005696  0E01               	movlw	high _uart1TxBuffer
 15316  005698  22DA               	addwfc	fsr2h,f,c
 15317  00569A  50DF               	movf	indf2,w,c
 15318  00569C  013D               	movlb	61	; () banked
 15319  00569E  6FEA               	movwf	234,b	;volatile
 15320  0056A0                     
 15321                           ; BSR set to: 61
 15322  0056A0  2A46               	incf	_uart1TxTail^0,f,c	;volatile
 15323  0056A2                     
 15324                           ; BSR set to: 61
 15325                           ;mcc_generated_files/uart1.c: 259:        if(sizeof(uart1TxBuffer) <= uart1TxTail)
 15326  0056A2  0E07               	movlw	7
 15327  0056A4  6446               	cpfsgt	_uart1TxTail^0,c	;volatile
 15328  0056A6  EF57  F02B         	goto	i1u687_21
 15329  0056AA  EF59  F02B         	goto	i1u687_20
 15330  0056AE                     i1u687_21:
 15331  0056AE  EF5B  F02B         	goto	i1l7067
 15332  0056B2                     i1u687_20:
 15333  0056B2                     
 15334                           ; BSR set to: 61
 15335                           ;mcc_generated_files/uart1.c: 260:         {;mcc_generated_files/uart1.c: 261:          
      +                             uart1TxTail = 0;
 15336  0056B2  0E00               	movlw	0
 15337  0056B4  6E46               	movwf	_uart1TxTail^0,c	;volatile
 15338  0056B6                     i1l7067:
 15339                           
 15340                           ; BSR set to: 61
 15341                           ;mcc_generated_files/uart1.c: 263:         uart1TxBufferRemaining++;
 15342  0056B6  2A4C               	incf	_uart1TxBufferRemaining^0,f,c	;volatile
 15343                           
 15344                           ;mcc_generated_files/uart1.c: 264:     }
 15345  0056B8  EF60  F02B         	goto	i1l336
 15346  0056BC                     i1l333:
 15347                           
 15348                           ;mcc_generated_files/uart1.c: 266:     {;mcc_generated_files/uart1.c: 267:         PIE3b
      +                          its.U1TXIE = 0;
 15349  0056BC  0139               	movlb	57	; () banked
 15350  0056BE  9993               	bcf	147,4,b	;volatile
 15351  0056C0                     i1l336:
 15352  0056C0  0012               	return		;funcret
 15353  0056C2                     __end_of_UART1_Transmit_ISR:
 15354                           	callstack 0
 15355                           
 15356 ;; *************** function _UART1_rx_vect_isr *****************
 15357 ;; Defined at:
 15358 ;;		line 243 in file "mcc_generated_files/uart1.c"
 15359 ;; Parameters:    Size  Location     Type
 15360 ;;		None
 15361 ;; Auto vars:     Size  Location     Type
 15362 ;;		None
 15363 ;; Return value:  Size  Location     Type
 15364 ;;                  1    wreg      void 
 15365 ;; Registers used:
 15366 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 15367 ;; Tracked objects:
 15368 ;;		On entry : 0/0
 15369 ;;		On exit  : 0/0
 15370 ;;		Unchanged: 0/0
 15371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15374 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15375 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15376 ;;Total ram usage:        1 bytes
 15377 ;; Hardware stack levels used: 1
 15378 ;; Hardware stack levels required when called: 7
 15379 ;; This function calls:
 15380 ;;		Absolute function
 15381 ;;		_UART1_Receive_ISR
 15382 ;; This function is called by:
 15383 ;;		Interrupt level 1
 15384 ;; This function uses a non-reentrant model
 15385 ;;
 15386                           
 15387                           	psect	text80
 15388  005778                     __ptext80:
 15389                           	callstack 0
 15390  005778                     _UART1_rx_vect_isr:
 15391                           	callstack 12
 15392                           
 15393                           ;incstack = 0
 15394  005778  006F FF60  F012    	movff	status,??_UART1_rx_vect_isr
 15395  00577E                     
 15396                           ;mcc_generated_files/uart1.c: 245:     if(UART1_RxInterruptHandler)
 15397  00577E  0101               	movlb	1	; () banked
 15398  005780  5198               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 15399  005782  1199               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 15400  005784  B4D8               	btfsc	status,2,c
 15401  005786  EFC7  F02B         	goto	i1u707_21
 15402  00578A  EFC9  F02B         	goto	i1u707_20
 15403  00578E                     i1u707_21:
 15404  00578E  EFD5  F02B         	goto	i1l330
 15405  005792                     i1u707_20:
 15406  005792                     
 15407                           ; BSR set to: 1
 15408                           ;mcc_generated_files/uart1.c: 246:     {;mcc_generated_files/uart1.c: 247:         UART1
      +                          _RxInterruptHandler();
 15409  005792  D802               	call	i1u708_28
 15410  005794  EFD5  F02B         	goto	i1u708_29
 15411  005798                     i1u708_28:
 15412  005798  0005               	push	
 15413  00579A  6EFA               	movwf	pclath,c
 15414  00579C  5198               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 15415  00579E  6EFD               	movwf	tosl,c
 15416  0057A0  5199               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 15417  0057A2  6EFE               	movwf	tosh,c
 15418  0057A4  6AFF               	clrf	tosu,c
 15419  0057A6  50FA               	movf	pclath,w,c
 15420  0057A8  0012               	return		;indir
 15421  0057AA                     i1u708_29:
 15422  0057AA                     i1l330:
 15423  0057AA  0060  F04B  FFD8   	movff	??_UART1_rx_vect_isr,status
 15424  0057B0  0011               	retfie		f
 15425  0057B2                     __end_of_UART1_rx_vect_isr:
 15426                           	callstack 0
 15427                           
 15428 ;; *************** function _UART1_Receive_ISR *****************
 15429 ;; Defined at:
 15430 ;;		line 273 in file "mcc_generated_files/uart1.c"
 15431 ;; Parameters:    Size  Location     Type
 15432 ;;		None
 15433 ;; Auto vars:     Size  Location     Type
 15434 ;;		None
 15435 ;; Return value:  Size  Location     Type
 15436 ;;                  1    wreg      void 
 15437 ;; Registers used:
 15438 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 15439 ;; Tracked objects:
 15440 ;;		On entry : 0/0
 15441 ;;		On exit  : 0/0
 15442 ;;		Unchanged: 0/0
 15443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15447 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15448 ;;Total ram usage:        0 bytes
 15449 ;; Hardware stack levels used: 1
 15450 ;; Hardware stack levels required when called: 6
 15451 ;; This function calls:
 15452 ;;		Absolute function
 15453 ;;		_UART1_DefaultErrorHandler
 15454 ;;		_UART1_DefaultFramingErrorHandler
 15455 ;;		_UART1_DefaultOverrunErrorHandler
 15456 ;;		_UART1_RxDataHandler
 15457 ;; This function is called by:
 15458 ;;		_UART1_Initialize
 15459 ;;		_UART1_rx_vect_isr
 15460 ;; This function uses a non-reentrant model
 15461 ;;
 15462                           
 15463                           	psect	text81
 15464  004DA2                     __ptext81:
 15465                           	callstack 0
 15466  004DA2                     _UART1_Receive_ISR:
 15467                           	callstack 12
 15468  004DA2                     
 15469                           ;mcc_generated_files/uart1.c: 276:     uart1RxStatusBuffer[uart1RxHead].status = 0;
 15470  004DA2  0E00               	movlw	low _uart1RxStatusBuffer
 15471  004DA4  2445               	addwf	_uart1RxHead^0,w,c	;volatile
 15472  004DA6  6ED9               	movwf	fsr2l,c
 15473  004DA8  6ADA               	clrf	fsr2h,c
 15474  004DAA  0E01               	movlw	high _uart1RxStatusBuffer
 15475  004DAC  22DA               	addwfc	fsr2h,f,c
 15476  004DAE  0E00               	movlw	0
 15477  004DB0  6EDF               	movwf	indf2,c
 15478  004DB2                     
 15479                           ;mcc_generated_files/uart1.c: 278:     if(U1ERRIRbits.FERIF){
 15480  004DB2  013D               	movlb	61	; () banked
 15481  004DB4  A7F9               	btfss	249,3,b	;volatile
 15482  004DB6  EFDF  F026         	goto	i1u688_21
 15483  004DBA  EFE1  F026         	goto	i1u688_20
 15484  004DBE                     i1u688_21:
 15485  004DBE  EFF5  F026         	goto	i1l7077
 15486  004DC2                     i1u688_20:
 15487  004DC2                     
 15488                           ; BSR set to: 61
 15489                           ;mcc_generated_files/uart1.c: 279:         uart1RxStatusBuffer[uart1RxHead].ferr = 1;
 15490  004DC2  0E00               	movlw	low _uart1RxStatusBuffer
 15491  004DC4  2445               	addwf	_uart1RxHead^0,w,c	;volatile
 15492  004DC6  6ED9               	movwf	fsr2l,c
 15493  004DC8  6ADA               	clrf	fsr2h,c
 15494  004DCA  0E01               	movlw	high _uart1RxStatusBuffer
 15495  004DCC  22DA               	addwfc	fsr2h,f,c
 15496  004DCE  0101               	movlb	1	; () banked
 15497  004DD0  82DF               	bsf	indf2,1,c
 15498  004DD2                     
 15499                           ; BSR set to: 1
 15500                           ;mcc_generated_files/uart1.c: 280:         UART1_FramingErrorHandler();
 15501  004DD2  D802               	call	i1u689_28
 15502  004DD4  EFF5  F026         	goto	i1u689_29
 15503  004DD8                     i1u689_28:
 15504  004DD8  0005               	push	
 15505  004DDA  6EFA               	movwf	pclath,c
 15506  004DDC  5194               	movf	_UART1_FramingErrorHandler& (0+255),w,b
 15507  004DDE  6EFD               	movwf	tosl,c
 15508  004DE0  5195               	movf	(_UART1_FramingErrorHandler+1)& (0+255),w,b
 15509  004DE2  6EFE               	movwf	tosh,c
 15510  004DE4  6AFF               	clrf	tosu,c
 15511  004DE6  50FA               	movf	pclath,w,c
 15512  004DE8  0012               	return		;indir
 15513  004DEA                     i1u689_29:
 15514  004DEA                     i1l7077:
 15515                           
 15516                           ;mcc_generated_files/uart1.c: 283:     if(U1ERRIRbits.RXFOIF){
 15517  004DEA  013D               	movlb	61	; () banked
 15518  004DEC  A3F9               	btfss	249,1,b	;volatile
 15519  004DEE  EFFB  F026         	goto	i1u690_21
 15520  004DF2  EFFD  F026         	goto	i1u690_20
 15521  004DF6                     i1u690_21:
 15522  004DF6  EF11  F027         	goto	i1l7083
 15523  004DFA                     i1u690_20:
 15524  004DFA                     
 15525                           ; BSR set to: 61
 15526                           ;mcc_generated_files/uart1.c: 284:         uart1RxStatusBuffer[uart1RxHead].oerr = 1;
 15527  004DFA  0E00               	movlw	low _uart1RxStatusBuffer
 15528  004DFC  2445               	addwf	_uart1RxHead^0,w,c	;volatile
 15529  004DFE  6ED9               	movwf	fsr2l,c
 15530  004E00  6ADA               	clrf	fsr2h,c
 15531  004E02  0E01               	movlw	high _uart1RxStatusBuffer
 15532  004E04  22DA               	addwfc	fsr2h,f,c
 15533  004E06  0101               	movlb	1	; () banked
 15534  004E08  84DF               	bsf	indf2,2,c
 15535  004E0A                     
 15536                           ; BSR set to: 1
 15537                           ;mcc_generated_files/uart1.c: 285:         UART1_OverrunErrorHandler();
 15538  004E0A  D802               	call	i1u691_28
 15539  004E0C  EF11  F027         	goto	i1u691_29
 15540  004E10                     i1u691_28:
 15541  004E10  0005               	push	
 15542  004E12  6EFA               	movwf	pclath,c
 15543  004E14  5192               	movf	_UART1_OverrunErrorHandler& (0+255),w,b
 15544  004E16  6EFD               	movwf	tosl,c
 15545  004E18  5193               	movf	(_UART1_OverrunErrorHandler+1)& (0+255),w,b
 15546  004E1A  6EFE               	movwf	tosh,c
 15547  004E1C  6AFF               	clrf	tosu,c
 15548  004E1E  50FA               	movf	pclath,w,c
 15549  004E20  0012               	return		;indir
 15550  004E22                     i1u691_29:
 15551  004E22                     i1l7083:
 15552                           
 15553                           ;mcc_generated_files/uart1.c: 288:     if(uart1RxStatusBuffer[uart1RxHead].status){
 15554  004E22  0E00               	movlw	low _uart1RxStatusBuffer
 15555  004E24  2445               	addwf	_uart1RxHead^0,w,c	;volatile
 15556  004E26  6ED9               	movwf	fsr2l,c
 15557  004E28  6ADA               	clrf	fsr2h,c
 15558  004E2A  0E01               	movlw	high _uart1RxStatusBuffer
 15559  004E2C  22DA               	addwfc	fsr2h,f,c
 15560  004E2E  50DF               	movf	indf2,w,c
 15561  004E30  B4D8               	btfsc	status,2,c
 15562  004E32  EF1D  F027         	goto	i1u692_21
 15563  004E36  EF1F  F027         	goto	i1u692_20
 15564  004E3A                     i1u692_21:
 15565  004E3A  EF2E  F027         	goto	i1l7087
 15566  004E3E                     i1u692_20:
 15567  004E3E                     
 15568                           ;mcc_generated_files/uart1.c: 289:         UART1_ErrorHandler();
 15569  004E3E  D802               	call	i1u693_28
 15570  004E40  EF2C  F027         	goto	i1u693_29
 15571  004E44                     i1u693_28:
 15572  004E44  0005               	push	
 15573  004E46  6EFA               	movwf	pclath,c
 15574  004E48  0101               	movlb	1	; () banked
 15575  004E4A  5190               	movf	_UART1_ErrorHandler& (0+255),w,b
 15576  004E4C  6EFD               	movwf	tosl,c
 15577  004E4E  5191               	movf	(_UART1_ErrorHandler+1)& (0+255),w,b
 15578  004E50  6EFE               	movwf	tosh,c
 15579  004E52  6AFF               	clrf	tosu,c
 15580  004E54  50FA               	movf	pclath,w,c
 15581  004E56  0012               	return		;indir
 15582  004E58                     i1u693_29:
 15583                           
 15584                           ;mcc_generated_files/uart1.c: 290:     } else {
 15585  004E58  EF30  F027         	goto	i1l343
 15586  004E5C                     i1l7087:
 15587                           
 15588                           ;mcc_generated_files/uart1.c: 291:         UART1_RxDataHandler();
 15589  004E5C  ECD2  F02D         	call	_UART1_RxDataHandler	;wreg free
 15590  004E60                     i1l343:
 15591  004E60  0012               	return		;funcret
 15592  004E62                     __end_of_UART1_Receive_ISR:
 15593                           	callstack 0
 15594                           
 15595 ;; *************** function _UART1_DefaultOverrunErrorHandler *****************
 15596 ;; Defined at:
 15597 ;;		line 309 in file "mcc_generated_files/uart1.c"
 15598 ;; Parameters:    Size  Location     Type
 15599 ;;		None
 15600 ;; Auto vars:     Size  Location     Type
 15601 ;;		None
 15602 ;; Return value:  Size  Location     Type
 15603 ;;                  1    wreg      void 
 15604 ;; Registers used:
 15605 ;;		None
 15606 ;; Tracked objects:
 15607 ;;		On entry : 0/0
 15608 ;;		On exit  : 0/0
 15609 ;;		Unchanged: 0/0
 15610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15614 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15615 ;;Total ram usage:        0 bytes
 15616 ;; Hardware stack levels used: 1
 15617 ;; Hardware stack levels required when called: 4
 15618 ;; This function calls:
 15619 ;;		Nothing
 15620 ;; This function is called by:
 15621 ;;		_UART1_Initialize
 15622 ;;		_UART1_Receive_ISR
 15623 ;; This function uses a non-reentrant model
 15624 ;;
 15625                           
 15626                           	psect	text82
 15627  005DF6                     __ptext82:
 15628                           	callstack 0
 15629  005DF6                     _UART1_DefaultOverrunErrorHandler:
 15630                           	callstack 13
 15631  005DF6  0012               	return		;funcret
 15632  005DF8                     __end_of_UART1_DefaultOverrunErrorHandler:
 15633                           	callstack 0
 15634                           
 15635 ;; *************** function _UART1_DefaultFramingErrorHandler *****************
 15636 ;; Defined at:
 15637 ;;		line 307 in file "mcc_generated_files/uart1.c"
 15638 ;; Parameters:    Size  Location     Type
 15639 ;;		None
 15640 ;; Auto vars:     Size  Location     Type
 15641 ;;		None
 15642 ;; Return value:  Size  Location     Type
 15643 ;;                  1    wreg      void 
 15644 ;; Registers used:
 15645 ;;		None
 15646 ;; Tracked objects:
 15647 ;;		On entry : 0/0
 15648 ;;		On exit  : 0/0
 15649 ;;		Unchanged: 0/0
 15650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15654 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15655 ;;Total ram usage:        0 bytes
 15656 ;; Hardware stack levels used: 1
 15657 ;; Hardware stack levels required when called: 4
 15658 ;; This function calls:
 15659 ;;		Nothing
 15660 ;; This function is called by:
 15661 ;;		_UART1_Initialize
 15662 ;;		_UART1_Receive_ISR
 15663 ;; This function uses a non-reentrant model
 15664 ;;
 15665                           
 15666                           	psect	text83
 15667  005DF8                     __ptext83:
 15668                           	callstack 0
 15669  005DF8                     _UART1_DefaultFramingErrorHandler:
 15670                           	callstack 13
 15671  005DF8  0012               	return		;funcret
 15672  005DFA                     __end_of_UART1_DefaultFramingErrorHandler:
 15673                           	callstack 0
 15674                           
 15675 ;; *************** function _UART1_DefaultErrorHandler *****************
 15676 ;; Defined at:
 15677 ;;		line 311 in file "mcc_generated_files/uart1.c"
 15678 ;; Parameters:    Size  Location     Type
 15679 ;;		None
 15680 ;; Auto vars:     Size  Location     Type
 15681 ;;		None
 15682 ;; Return value:  Size  Location     Type
 15683 ;;                  1    wreg      void 
 15684 ;; Registers used:
 15685 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15686 ;; Tracked objects:
 15687 ;;		On entry : 0/0
 15688 ;;		On exit  : 0/0
 15689 ;;		Unchanged: 0/0
 15690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15694 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15695 ;;Total ram usage:        0 bytes
 15696 ;; Hardware stack levels used: 1
 15697 ;; Hardware stack levels required when called: 5
 15698 ;; This function calls:
 15699 ;;		_UART1_RxDataHandler
 15700 ;; This function is called by:
 15701 ;;		_UART1_Initialize
 15702 ;;		_UART1_Receive_ISR
 15703 ;; This function uses a non-reentrant model
 15704 ;;
 15705                           
 15706                           	psect	text84
 15707  005DE8                     __ptext84:
 15708                           	callstack 0
 15709  005DE8                     _UART1_DefaultErrorHandler:
 15710                           	callstack 12
 15711  005DE8                     
 15712                           ;mcc_generated_files/uart1.c: 312:     UART1_RxDataHandler();
 15713  005DE8  ECD2  F02D         	call	_UART1_RxDataHandler	;wreg free
 15714  005DEC  0012               	return		;funcret
 15715  005DEE                     __end_of_UART1_DefaultErrorHandler:
 15716                           	callstack 0
 15717                           
 15718 ;; *************** function _UART1_RxDataHandler *****************
 15719 ;; Defined at:
 15720 ;;		line 297 in file "mcc_generated_files/uart1.c"
 15721 ;; Parameters:    Size  Location     Type
 15722 ;;		None
 15723 ;; Auto vars:     Size  Location     Type
 15724 ;;		None
 15725 ;; Return value:  Size  Location     Type
 15726 ;;                  1    wreg      void 
 15727 ;; Registers used:
 15728 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15729 ;; Tracked objects:
 15730 ;;		On entry : 0/0
 15731 ;;		On exit  : 0/0
 15732 ;;		Unchanged: 0/0
 15733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15737 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15738 ;;Total ram usage:        0 bytes
 15739 ;; Hardware stack levels used: 1
 15740 ;; Hardware stack levels required when called: 4
 15741 ;; This function calls:
 15742 ;;		Nothing
 15743 ;; This function is called by:
 15744 ;;		_UART1_Receive_ISR
 15745 ;;		_UART1_DefaultErrorHandler
 15746 ;; This function uses a non-reentrant model
 15747 ;;
 15748                           
 15749                           	psect	text85
 15750  005BA4                     __ptext85:
 15751                           	callstack 0
 15752  005BA4                     _UART1_RxDataHandler:
 15753                           	callstack 13
 15754  005BA4                     
 15755                           ;mcc_generated_files/uart1.c: 299:     uart1RxBuffer[uart1RxHead++] = U1RXB;
 15756  005BA4  0E08               	movlw	low _uart1RxBuffer
 15757  005BA6  2445               	addwf	_uart1RxHead^0,w,c	;volatile
 15758  005BA8  6ED9               	movwf	fsr2l,c
 15759  005BAA  6ADA               	clrf	fsr2h,c
 15760  005BAC  0E01               	movlw	high _uart1RxBuffer
 15761  005BAE  22DA               	addwfc	fsr2h,f,c
 15762  005BB0  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 15763  005BB6  2A45               	incf	_uart1RxHead^0,f,c	;volatile
 15764  005BB8                     
 15765                           ;mcc_generated_files/uart1.c: 300:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 15766  005BB8  0E07               	movlw	7
 15767  005BBA  6445               	cpfsgt	_uart1RxHead^0,c	;volatile
 15768  005BBC  EFE2  F02D         	goto	i1u621_21
 15769  005BC0  EFE4  F02D         	goto	i1u621_20
 15770  005BC4                     i1u621_21:
 15771  005BC4  EFE6  F02D         	goto	i1l6489
 15772  005BC8                     i1u621_20:
 15773  005BC8                     
 15774                           ;mcc_generated_files/uart1.c: 301:     {;mcc_generated_files/uart1.c: 302:         uart1
      +                          RxHead = 0;
 15775  005BC8  0E00               	movlw	0
 15776  005BCA  6E45               	movwf	_uart1RxHead^0,c	;volatile
 15777  005BCC                     i1l6489:
 15778                           
 15779                           ;mcc_generated_files/uart1.c: 304:     uart1RxCount++;
 15780  005BCC  2A43               	incf	_uart1RxCount^0,f,c	;volatile
 15781  005BCE  0012               	return		;funcret
 15782  005BD0                     __end_of_UART1_RxDataHandler:
 15783                           	callstack 0
 15784                           
 15785 ;; *************** function _TMR4_ISR *****************
 15786 ;; Defined at:
 15787 ;;		line 166 in file "mcc_generated_files/tmr4.c"
 15788 ;; Parameters:    Size  Location     Type
 15789 ;;		None
 15790 ;; Auto vars:     Size  Location     Type
 15791 ;;		None
 15792 ;; Return value:  Size  Location     Type
 15793 ;;                  1    wreg      void 
 15794 ;; Registers used:
 15795 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 15796 ;; Tracked objects:
 15797 ;;		On entry : 0/0
 15798 ;;		On exit  : 0/0
 15799 ;;		Unchanged: 0/0
 15800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15803 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15804 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15805 ;;Total ram usage:        1 bytes
 15806 ;; Hardware stack levels used: 1
 15807 ;; Hardware stack levels required when called: 6
 15808 ;; This function calls:
 15809 ;;		_TMR4_CallBack
 15810 ;; This function is called by:
 15811 ;;		Interrupt level 1
 15812 ;; This function uses a non-reentrant model
 15813 ;;
 15814                           
 15815                           	psect	text86
 15816  00585C                     __ptext86:
 15817                           	callstack 0
 15818  00585C                     _TMR4_ISR:
 15819                           	callstack 13
 15820                           
 15821                           ;incstack = 0
 15822  00585C  006F FF60  F013    	movff	status,??_TMR4_ISR
 15823  005862                     
 15824                           ;mcc_generated_files/tmr4.c: 168:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr4.c: 171:     PIR7bits.TMR4IF = 0;
 15825  005862  0139               	movlb	57	; () banked
 15826  005864  91A7               	bcf	167,0,b	;volatile
 15827  005866                     
 15828                           ; BSR set to: 57
 15829                           ;mcc_generated_files/tmr4.c: 174:     if (++CountCallBack >= 10)
 15830  005866  4A40               	infsnz	TMR4_ISR@CountCallBack^0,f,c	;volatile
 15831  005868  2A41               	incf	(TMR4_ISR@CountCallBack+1)^0,f,c	;volatile
 15832  00586A  5041               	movf	(TMR4_ISR@CountCallBack+1)^0,w,c	;volatile
 15833  00586C  E109               	bnz	i1u713_20
 15834  00586E  0E0A               	movlw	10
 15835  005870  5C40               	subwf	TMR4_ISR@CountCallBack^0,w,c	;volatile
 15836  005872  A0D8               	btfss	status,0,c
 15837  005874  EF3E  F02C         	goto	i1u713_21
 15838  005878  EF40  F02C         	goto	i1u713_20
 15839  00587C                     i1u713_21:
 15840  00587C  EF46  F02C         	goto	i1l688
 15841  005880                     i1u713_20:
 15842  005880                     
 15843                           ; BSR set to: 57
 15844                           ;mcc_generated_files/tmr4.c: 175:     {;mcc_generated_files/tmr4.c: 177:         TMR4_Ca
      +                          llBack();
 15845  005880  EC8F  F02D         	call	_TMR4_CallBack	;wreg free
 15846  005884                     
 15847                           ;mcc_generated_files/tmr4.c: 180:         CountCallBack = 0;
 15848  005884  0E00               	movlw	0
 15849  005886  6E41               	movwf	(TMR4_ISR@CountCallBack+1)^0,c	;volatile
 15850  005888  0E00               	movlw	0
 15851  00588A  6E40               	movwf	TMR4_ISR@CountCallBack^0,c	;volatile
 15852  00588C                     i1l688:
 15853  00588C  0060  F04F  FFD8   	movff	??_TMR4_ISR,status
 15854  005892  0011               	retfie		f
 15855  005894                     __end_of_TMR4_ISR:
 15856                           	callstack 0
 15857                           
 15858 ;; *************** function _TMR4_CallBack *****************
 15859 ;; Defined at:
 15860 ;;		line 184 in file "mcc_generated_files/tmr4.c"
 15861 ;; Parameters:    Size  Location     Type
 15862 ;;		None
 15863 ;; Auto vars:     Size  Location     Type
 15864 ;;		None
 15865 ;; Return value:  Size  Location     Type
 15866 ;;                  1    wreg      void 
 15867 ;; Registers used:
 15868 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 15869 ;; Tracked objects:
 15870 ;;		On entry : 0/0
 15871 ;;		On exit  : 0/0
 15872 ;;		Unchanged: 0/0
 15873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15877 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15878 ;;Total ram usage:        0 bytes
 15879 ;; Hardware stack levels used: 1
 15880 ;; Hardware stack levels required when called: 5
 15881 ;; This function calls:
 15882 ;;		Absolute function
 15883 ;;		_TMR4_10msISR
 15884 ;;		_TMR4_DefaultInterruptHandler
 15885 ;; This function is called by:
 15886 ;;		_TMR4_ISR
 15887 ;; This function uses a non-reentrant model
 15888 ;;
 15889                           
 15890                           	psect	text87
 15891  005B1E                     __ptext87:
 15892                           	callstack 0
 15893  005B1E                     _TMR4_CallBack:
 15894                           	callstack 13
 15895  005B1E                     
 15896                           ;mcc_generated_files/tmr4.c: 188:     if(TMR4_InterruptHandler)
 15897  005B1E  0101               	movlb	1	; () banked
 15898  005B20  5184               	movf	_TMR4_InterruptHandler& (0+255),w,b
 15899  005B22  1185               	iorwf	(_TMR4_InterruptHandler+1)& (0+255),w,b
 15900  005B24  B4D8               	btfsc	status,2,c
 15901  005B26  EF97  F02D         	goto	i1u697_21
 15902  005B2A  EF99  F02D         	goto	i1u697_20
 15903  005B2E                     i1u697_21:
 15904  005B2E  EFA5  F02D         	goto	i1l692
 15905  005B32                     i1u697_20:
 15906  005B32                     
 15907                           ; BSR set to: 1
 15908                           ;mcc_generated_files/tmr4.c: 189:     {;mcc_generated_files/tmr4.c: 190:         TMR4_In
      +                          terruptHandler();
 15909  005B32  D802               	call	i1u698_28
 15910  005B34  EFA5  F02D         	goto	i1u698_29
 15911  005B38                     i1u698_28:
 15912  005B38  0005               	push	
 15913  005B3A  6EFA               	movwf	pclath,c
 15914  005B3C  5184               	movf	_TMR4_InterruptHandler& (0+255),w,b
 15915  005B3E  6EFD               	movwf	tosl,c
 15916  005B40  5185               	movf	(_TMR4_InterruptHandler+1)& (0+255),w,b
 15917  005B42  6EFE               	movwf	tosh,c
 15918  005B44  6AFF               	clrf	tosu,c
 15919  005B46  50FA               	movf	pclath,w,c
 15920  005B48  0012               	return		;indir
 15921  005B4A                     i1u698_29:
 15922  005B4A                     i1l692:
 15923  005B4A  0012               	return		;funcret
 15924  005B4C                     __end_of_TMR4_CallBack:
 15925                           	callstack 0
 15926                           
 15927 ;; *************** function _TMR4_10msISR *****************
 15928 ;; Defined at:
 15929 ;;		line 62 in file "main.c"
 15930 ;; Parameters:    Size  Location     Type
 15931 ;;		None
 15932 ;; Auto vars:     Size  Location     Type
 15933 ;;		None
 15934 ;; Return value:  Size  Location     Type
 15935 ;;                  1    wreg      void 
 15936 ;; Registers used:
 15937 ;;		status,2, status,0
 15938 ;; Tracked objects:
 15939 ;;		On entry : 0/0
 15940 ;;		On exit  : 0/0
 15941 ;;		Unchanged: 0/0
 15942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15946 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15947 ;;Total ram usage:        0 bytes
 15948 ;; Hardware stack levels used: 1
 15949 ;; Hardware stack levels required when called: 4
 15950 ;; This function calls:
 15951 ;;		Nothing
 15952 ;; This function is called by:
 15953 ;;		_main
 15954 ;;		_TMR4_CallBack
 15955 ;; This function uses a non-reentrant model
 15956 ;;
 15957                           
 15958                           	psect	text88
 15959  005DEE                     __ptext88:
 15960                           	callstack 0
 15961  005DEE                     _TMR4_10msISR:
 15962                           	callstack 13
 15963  005DEE                     
 15964                           ;main.c: 63:     ++cycle10ms;
 15965  005DEE  0100               	movlb	0	; () banked
 15966  005DF0  2BFA               	incf	_cycle10ms& (0+255),f,b	;volatile
 15967  005DF2                     
 15968                           ; BSR set to: 0
 15969  005DF2  0012               	return		;funcret
 15970  005DF4                     __end_of_TMR4_10msISR:
 15971                           	callstack 0
 15972                           
 15973 ;; *************** function _TMR4_DefaultInterruptHandler *****************
 15974 ;; Defined at:
 15975 ;;		line 198 in file "mcc_generated_files/tmr4.c"
 15976 ;; Parameters:    Size  Location     Type
 15977 ;;		None
 15978 ;; Auto vars:     Size  Location     Type
 15979 ;;		None
 15980 ;; Return value:  Size  Location     Type
 15981 ;;                  1    wreg      void 
 15982 ;; Registers used:
 15983 ;;		None
 15984 ;; Tracked objects:
 15985 ;;		On entry : 0/0
 15986 ;;		On exit  : 0/0
 15987 ;;		Unchanged: 0/0
 15988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15992 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15993 ;;Total ram usage:        0 bytes
 15994 ;; Hardware stack levels used: 1
 15995 ;; Hardware stack levels required when called: 4
 15996 ;; This function calls:
 15997 ;;		Nothing
 15998 ;; This function is called by:
 15999 ;;		_TMR4_Initialize
 16000 ;;		_TMR4_CallBack
 16001 ;; This function uses a non-reentrant model
 16002 ;;
 16003                           
 16004                           	psect	text89
 16005  005DFA                     __ptext89:
 16006                           	callstack 0
 16007  005DFA                     _TMR4_DefaultInterruptHandler:
 16008                           	callstack 13
 16009  005DFA  0012               	return		;funcret
 16010  005DFC                     __end_of_TMR4_DefaultInterruptHandler:
 16011                           	callstack 0
 16012                           
 16013 ;; *************** function _Default_ISR *****************
 16014 ;; Defined at:
 16015 ;;		line 83 in file "mcc_generated_files/interrupt_manager.c"
 16016 ;; Parameters:    Size  Location     Type
 16017 ;;		None
 16018 ;; Auto vars:     Size  Location     Type
 16019 ;;		None
 16020 ;; Return value:  Size  Location     Type
 16021 ;;                  1    wreg      void 
 16022 ;; Registers used:
 16023 ;;		None
 16024 ;; Tracked objects:
 16025 ;;		On entry : 0/0
 16026 ;;		On exit  : 0/0
 16027 ;;		Unchanged: 0/0
 16028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16032 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16033 ;;Total ram usage:        0 bytes
 16034 ;; Hardware stack levels used: 1
 16035 ;; This function calls:
 16036 ;;		Nothing
 16037 ;; This function is called by:
 16038 ;;		Interrupt level 2
 16039 ;; This function uses a non-reentrant model
 16040 ;;
 16041                           
 16042                           	psect	text90
 16043  005DFC                     __ptext90:
 16044                           	callstack 0
 16045  005DFC                     _Default_ISR:
 16046                           	callstack 15
 16047  005DFC  0011               	retfie		f
 16048  005DFE                     __end_of_Default_ISR:
 16049                           	callstack 0
 16050                           
 16051 ;; *************** function _CCP3_CaptureISR *****************
 16052 ;; Defined at:
 16053 ;;		line 104 in file "mcc_generated_files/ccp3.c"
 16054 ;; Parameters:    Size  Location     Type
 16055 ;;		None
 16056 ;; Auto vars:     Size  Location     Type
 16057 ;;  module          2    2[COMRAM] struct CCPR3Reg_tag
 16058 ;; Return value:  Size  Location     Type
 16059 ;;                  1    wreg      void 
 16060 ;; Registers used:
 16061 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 16062 ;; Tracked objects:
 16063 ;;		On entry : 0/0
 16064 ;;		On exit  : 0/0
 16065 ;;		Unchanged: 0/0
 16066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16068 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16070 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16071 ;;Total ram usage:        2 bytes
 16072 ;; Hardware stack levels used: 1
 16073 ;; Hardware stack levels required when called: 1
 16074 ;; This function calls:
 16075 ;;		Absolute function
 16076 ;;		_CCP3_DefaultCallBack
 16077 ;; This function is called by:
 16078 ;;		Interrupt level 2
 16079 ;; This function uses a non-reentrant model
 16080 ;;
 16081                           
 16082                           	psect	text91
 16083  005964                     __ptext91:
 16084                           	callstack 0
 16085  005964                     _CCP3_CaptureISR:
 16086                           	callstack 14
 16087  005964                     
 16088                           ;mcc_generated_files/ccp3.c: 106:     CCP3_PERIOD_REG_T module;;mcc_generated_files/ccp3
      +                          .c: 109:     PIR9bits.CCP3IF = 0;
 16089  005964  0139               	movlb	57	; () banked
 16090  005966  93A9               	bcf	169,1,b	;volatile
 16091                           
 16092                           ;mcc_generated_files/ccp3.c: 112:     module.ccpr3l = CCPR3L;
 16093  005968  006F FDD0  F003    	movff	16244,CCP3_CaptureISR@module	;volatile
 16094                           
 16095                           ;mcc_generated_files/ccp3.c: 113:     module.ccpr3h = CCPR3H;
 16096  00596E  006F FDD4  F004    	movff	16245,CCP3_CaptureISR@module+1	;volatile
 16097  005974                     
 16098                           ; BSR set to: 57
 16099                           ;mcc_generated_files/ccp3.c: 116:     CCP3_CallBack(module.ccpr3_16Bit);
 16100  005974  C003  F001         	movff	CCP3_CaptureISR@module,CCP3_DefaultCallBack@capturedValue
 16101  005978  C004  F002         	movff	CCP3_CaptureISR@module+1,CCP3_DefaultCallBack@capturedValue+1
 16102  00597C  D802               	call	i2u709_48
 16103  00597E  EFCB  F02C         	goto	i2u709_49
 16104  005982                     i2u709_48:
 16105  005982  0005               	push	
 16106  005984  6EFA               	movwf	pclath,c
 16107  005986  0101               	movlb	1	; () banked
 16108  005988  518E               	movf	_CCP3_CallBack& (0+255),w,b
 16109  00598A  6EFD               	movwf	tosl,c
 16110  00598C  518F               	movf	(_CCP3_CallBack+1)& (0+255),w,b
 16111  00598E  6EFE               	movwf	tosh,c
 16112  005990  6AFF               	clrf	tosu,c
 16113  005992  50FA               	movf	pclath,w,c
 16114  005994  0012               	return		;indir
 16115  005996                     i2u709_49:
 16116  005996  0011               	retfie		f
 16117  005998                     __end_of_CCP3_CaptureISR:
 16118                           	callstack 0
 16119                           
 16120 ;; *************** function _CCP3_DefaultCallBack *****************
 16121 ;; Defined at:
 16122 ;;		line 64 in file "mcc_generated_files/ccp3.c"
 16123 ;; Parameters:    Size  Location     Type
 16124 ;;  capturedValu    2    0[COMRAM] unsigned short 
 16125 ;; Auto vars:     Size  Location     Type
 16126 ;;		None
 16127 ;; Return value:  Size  Location     Type
 16128 ;;                  1    wreg      void 
 16129 ;; Registers used:
 16130 ;;		wreg, status,2, status,0
 16131 ;; Tracked objects:
 16132 ;;		On entry : 0/0
 16133 ;;		On exit  : 0/0
 16134 ;;		Unchanged: 0/0
 16135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16136 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16139 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16140 ;;Total ram usage:        2 bytes
 16141 ;; Hardware stack levels used: 1
 16142 ;; This function calls:
 16143 ;;		Nothing
 16144 ;; This function is called by:
 16145 ;;		_CCP3_Initialize
 16146 ;;		_CCP3_CaptureISR
 16147 ;; This function uses a non-reentrant model
 16148 ;;
 16149                           
 16150                           	psect	text92
 16151  005A62                     __ptext92:
 16152                           	callstack 0
 16153  005A62                     _CCP3_DefaultCallBack:
 16154                           	callstack 14
 16155  005A62                     
 16156                           ;mcc_generated_files/ccp3.c: 64: static void CCP3_DefaultCallBack(uint16_t capturedValue
      +                          );mcc_generated_files/ccp3.c: 65: {;mcc_generated_files/ccp3.c: 67:     if(PORTDbits.RD7
      +                          ) {
 16157  005A62  AECD               	btfss	205,7,c	;volatile
 16158  005A64  EF36  F02D         	goto	i2u694_41
 16159  005A68  EF38  F02D         	goto	i2u694_40
 16160  005A6C                     i2u694_41:
 16161  005A6C  EF3E  F02D         	goto	i2l7093
 16162  005A70                     i2u694_40:
 16163  005A70                     
 16164                           ;mcc_generated_files/ccp3.c: 68:         distLeftM = capturedValue;
 16165  005A70  C001  F0F5         	movff	CCP3_DefaultCallBack@capturedValue,_distLeftM
 16166  005A74  C002  F0F6         	movff	CCP3_DefaultCallBack@capturedValue+1,_distLeftM+1
 16167                           
 16168                           ;mcc_generated_files/ccp3.c: 69:     } else {
 16169  005A78  EF48  F02D         	goto	i2l438
 16170  005A7C                     i2l7093:
 16171                           
 16172                           ;mcc_generated_files/ccp3.c: 70:         distLeft = capturedValue - distLeftM;
 16173  005A7C  0100               	movlb	0	; () banked
 16174  005A7E  51F5               	movf	_distLeftM& (0+255),w,b
 16175  005A80  5C01               	subwf	CCP3_DefaultCallBack@capturedValue^0,w,c
 16176  005A82  6FF7               	movwf	_distLeft& (0+255),b	;volatile
 16177  005A84  51F6               	movf	(_distLeftM+1)& (0+255),w,b
 16178  005A86  5802               	subwfb	(CCP3_DefaultCallBack@capturedValue+1)^0,w,c
 16179  005A88  6FF8               	movwf	(_distLeft+1)& (0+255),b	;volatile
 16180  005A8A                     
 16181                           ; BSR set to: 0
 16182                           ;mcc_generated_files/ccp3.c: 71:         distLeft >>= 1;
 16183  005A8A  90D8               	bcf	status,0,c
 16184  005A8C  33F8               	rrcf	(_distLeft+1)& (0+255),f,b	;volatile
 16185  005A8E  33F7               	rrcf	_distLeft& (0+255),f,b	;volatile
 16186  005A90                     i2l438:
 16187  005A90  0012               	return		;funcret
 16188  005A92                     __end_of_CCP3_DefaultCallBack:
 16189                           	callstack 0
 16190                           
 16191 ;; *************** function _CCP4_CaptureISR *****************
 16192 ;; Defined at:
 16193 ;;		line 107 in file "mcc_generated_files/ccp4.c"
 16194 ;; Parameters:    Size  Location     Type
 16195 ;;		None
 16196 ;; Auto vars:     Size  Location     Type
 16197 ;;  module          2    6[COMRAM] struct CCPR4Reg_tag
 16198 ;; Return value:  Size  Location     Type
 16199 ;;                  1    wreg      void 
 16200 ;; Registers used:
 16201 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 16202 ;; Tracked objects:
 16203 ;;		On entry : 0/0
 16204 ;;		On exit  : 0/0
 16205 ;;		Unchanged: 0/0
 16206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16208 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16210 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16211 ;;Total ram usage:        2 bytes
 16212 ;; Hardware stack levels used: 1
 16213 ;; Hardware stack levels required when called: 1
 16214 ;; This function calls:
 16215 ;;		Absolute function
 16216 ;;		_CCP4_DefaultCallBack
 16217 ;; This function is called by:
 16218 ;;		Interrupt level 2
 16219 ;; This function uses a non-reentrant model
 16220 ;;
 16221                           
 16222                           	psect	text93
 16223  005998                     __ptext93:
 16224                           	callstack 0
 16225  005998                     _CCP4_CaptureISR:
 16226                           	callstack 14
 16227  005998                     
 16228                           ;mcc_generated_files/ccp4.c: 109:     CCP4_PERIOD_REG_T module;;mcc_generated_files/ccp4
      +                          .c: 112:     PIR10bits.CCP4IF = 0;
 16229  005998  0139               	movlb	57	; () banked
 16230  00599A  91AA               	bcf	170,0,b	;volatile
 16231                           
 16232                           ;mcc_generated_files/ccp4.c: 115:     module.ccpr4l = CCPR4L;
 16233  00599C  006F FDC0  F007    	movff	16240,CCP4_CaptureISR@module	;volatile
 16234                           
 16235                           ;mcc_generated_files/ccp4.c: 116:     module.ccpr4h = CCPR4H;
 16236  0059A2  006F FDC4  F008    	movff	16241,CCP4_CaptureISR@module+1	;volatile
 16237  0059A8                     
 16238                           ; BSR set to: 57
 16239                           ;mcc_generated_files/ccp4.c: 119:     CCP4_CallBack(module.ccpr4_16Bit);
 16240  0059A8  C007  F005         	movff	CCP4_CaptureISR@module,CCP4_DefaultCallBack@capturedValue
 16241  0059AC  C008  F006         	movff	CCP4_CaptureISR@module+1,CCP4_DefaultCallBack@capturedValue+1
 16242  0059B0  D802               	call	i2u710_48
 16243  0059B2  EFE5  F02C         	goto	i2u710_49
 16244  0059B6                     i2u710_48:
 16245  0059B6  0005               	push	
 16246  0059B8  6EFA               	movwf	pclath,c
 16247  0059BA  0101               	movlb	1	; () banked
 16248  0059BC  518C               	movf	_CCP4_CallBack& (0+255),w,b
 16249  0059BE  6EFD               	movwf	tosl,c
 16250  0059C0  518D               	movf	(_CCP4_CallBack+1)& (0+255),w,b
 16251  0059C2  6EFE               	movwf	tosh,c
 16252  0059C4  6AFF               	clrf	tosu,c
 16253  0059C6  50FA               	movf	pclath,w,c
 16254  0059C8  0012               	return		;indir
 16255  0059CA                     i2u710_49:
 16256  0059CA  0011               	retfie		f
 16257  0059CC                     __end_of_CCP4_CaptureISR:
 16258                           	callstack 0
 16259                           
 16260 ;; *************** function _CCP4_DefaultCallBack *****************
 16261 ;; Defined at:
 16262 ;;		line 64 in file "mcc_generated_files/ccp4.c"
 16263 ;; Parameters:    Size  Location     Type
 16264 ;;  capturedValu    2    4[COMRAM] unsigned short 
 16265 ;; Auto vars:     Size  Location     Type
 16266 ;;		None
 16267 ;; Return value:  Size  Location     Type
 16268 ;;                  1    wreg      void 
 16269 ;; Registers used:
 16270 ;;		wreg, status,2, status,0
 16271 ;; Tracked objects:
 16272 ;;		On entry : 0/0
 16273 ;;		On exit  : 0/0
 16274 ;;		Unchanged: 0/0
 16275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16276 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16279 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16280 ;;Total ram usage:        2 bytes
 16281 ;; Hardware stack levels used: 1
 16282 ;; This function calls:
 16283 ;;		Nothing
 16284 ;; This function is called by:
 16285 ;;		_CCP4_Initialize
 16286 ;;		_CCP4_CaptureISR
 16287 ;; This function uses a non-reentrant model
 16288 ;;
 16289                           
 16290                           	psect	text94
 16291  005A92                     __ptext94:
 16292                           	callstack 0
 16293  005A92                     _CCP4_DefaultCallBack:
 16294                           	callstack 14
 16295  005A92                     
 16296                           ;mcc_generated_files/ccp4.c: 64: static void CCP4_DefaultCallBack(uint16_t capturedValue
      +                          );mcc_generated_files/ccp4.c: 65: {;mcc_generated_files/ccp4.c: 67:     if(PORTDbits.RD6
      +                          ) {
 16297  005A92  ACCD               	btfss	205,6,c	;volatile
 16298  005A94  EF4E  F02D         	goto	i2u695_41
 16299  005A98  EF50  F02D         	goto	i2u695_40
 16300  005A9C                     i2u695_41:
 16301  005A9C  EF56  F02D         	goto	i2l7101
 16302  005AA0                     i2u695_40:
 16303  005AA0                     
 16304                           ;mcc_generated_files/ccp4.c: 68:         distRightM = capturedValue;
 16305  005AA0  C005  F0F1         	movff	CCP4_DefaultCallBack@capturedValue,_distRightM
 16306  005AA4  C006  F0F2         	movff	CCP4_DefaultCallBack@capturedValue+1,_distRightM+1
 16307                           
 16308                           ;mcc_generated_files/ccp4.c: 70:     } else {
 16309  005AA8  EF60  F02D         	goto	i2l476
 16310  005AAC                     i2l7101:
 16311                           
 16312                           ;mcc_generated_files/ccp4.c: 71:         distRight = capturedValue - distRightM;
 16313  005AAC  0100               	movlb	0	; () banked
 16314  005AAE  51F1               	movf	_distRightM& (0+255),w,b
 16315  005AB0  5C05               	subwf	CCP4_DefaultCallBack@capturedValue^0,w,c
 16316  005AB2  6FF3               	movwf	_distRight& (0+255),b	;volatile
 16317  005AB4  51F2               	movf	(_distRightM+1)& (0+255),w,b
 16318  005AB6  5806               	subwfb	(CCP4_DefaultCallBack@capturedValue+1)^0,w,c
 16319  005AB8  6FF4               	movwf	(_distRight+1)& (0+255),b	;volatile
 16320  005ABA                     
 16321                           ; BSR set to: 0
 16322                           ;mcc_generated_files/ccp4.c: 72:         distRight >>= 1;
 16323  005ABA  90D8               	bcf	status,0,c
 16324  005ABC  33F4               	rrcf	(_distRight+1)& (0+255),f,b	;volatile
 16325  005ABE  33F3               	rrcf	_distRight& (0+255),f,b	;volatile
 16326  005AC0                     i2l476:
 16327  005AC0  0012               	return		;funcret
 16328  005AC2                     __end_of_CCP4_DefaultCallBack:
 16329                           	callstack 0
 16330                           
 16331 ;; *************** function _TMR5_GATE_ISR *****************
 16332 ;; Defined at:
 16333 ;;		line 175 in file "mcc_generated_files/tmr5.c"
 16334 ;; Parameters:    Size  Location     Type
 16335 ;;		None
 16336 ;; Auto vars:     Size  Location     Type
 16337 ;;		None
 16338 ;; Return value:  Size  Location     Type
 16339 ;;                  1    wreg      void 
 16340 ;; Registers used:
 16341 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 16342 ;; Tracked objects:
 16343 ;;		On entry : 0/0
 16344 ;;		On exit  : 0/0
 16345 ;;		Unchanged: 0/0
 16346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16350 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16351 ;;Total ram usage:        0 bytes
 16352 ;; Hardware stack levels used: 1
 16353 ;; Hardware stack levels required when called: 3
 16354 ;; This function calls:
 16355 ;;		Absolute function
 16356 ;;		_TMR5_DefaultGateInterruptHandler
 16357 ;; This function is called by:
 16358 ;;		Interrupt level 2
 16359 ;; This function uses a non-reentrant model
 16360 ;;
 16361                           
 16362                           	psect	text95
 16363  005A00                     __ptext95:
 16364                           	callstack 0
 16365  005A00                     _TMR5_GATE_ISR:
 16366                           	callstack 12
 16367  005A00                     
 16368                           ;mcc_generated_files/tmr5.c: 178:     PIR8bits.TMR5GIF = 0;
 16369  005A00  0139               	movlb	57	; () banked
 16370  005A02  9FA8               	bcf	168,7,b	;volatile
 16371  005A04                     
 16372                           ; BSR set to: 57
 16373                           ;mcc_generated_files/tmr5.c: 180:     if(TMR5_GateInterruptHandler)
 16374  005A04  0101               	movlb	1	; () banked
 16375  005A06  5188               	movf	_TMR5_GateInterruptHandler& (0+255),w,b
 16376  005A08  1189               	iorwf	(_TMR5_GateInterruptHandler+1)& (0+255),w,b
 16377  005A0A  B4D8               	btfsc	status,2,c
 16378  005A0C  EF0A  F02D         	goto	i2u711_41
 16379  005A10  EF0C  F02D         	goto	i2u711_40
 16380  005A14                     i2u711_41:
 16381  005A14  EF18  F02D         	goto	i2l552
 16382  005A18                     i2u711_40:
 16383  005A18                     
 16384                           ; BSR set to: 1
 16385                           ;mcc_generated_files/tmr5.c: 181:     {;mcc_generated_files/tmr5.c: 182:         TMR5_Ga
      +                          teInterruptHandler();
 16386  005A18  D802               	call	i2u712_48
 16387  005A1A  EF18  F02D         	goto	i2u712_49
 16388  005A1E                     i2u712_48:
 16389  005A1E  0005               	push	
 16390  005A20  6EFA               	movwf	pclath,c
 16391  005A22  5188               	movf	_TMR5_GateInterruptHandler& (0+255),w,b
 16392  005A24  6EFD               	movwf	tosl,c
 16393  005A26  5189               	movf	(_TMR5_GateInterruptHandler+1)& (0+255),w,b
 16394  005A28  6EFE               	movwf	tosh,c
 16395  005A2A  6AFF               	clrf	tosu,c
 16396  005A2C  50FA               	movf	pclath,w,c
 16397  005A2E  0012               	return		;indir
 16398  005A30                     i2u712_49:
 16399  005A30                     i2l552:
 16400  005A30  0011               	retfie		f
 16401  005A32                     __end_of_TMR5_GATE_ISR:
 16402                           	callstack 0
 16403                           
 16404 ;; *************** function _TMR5_DefaultGateInterruptHandler *****************
 16405 ;; Defined at:
 16406 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 16407 ;; Parameters:    Size  Location     Type
 16408 ;;		None
 16409 ;; Auto vars:     Size  Location     Type
 16410 ;;		None
 16411 ;; Return value:  Size  Location     Type
 16412 ;;                  1    wreg      void 
 16413 ;; Registers used:
 16414 ;;		wreg, status,2, status,0, cstack
 16415 ;; Tracked objects:
 16416 ;;		On entry : 0/0
 16417 ;;		On exit  : 0/0
 16418 ;;		Unchanged: 0/0
 16419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16423 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16424 ;;Total ram usage:        0 bytes
 16425 ;; Hardware stack levels used: 1
 16426 ;; Hardware stack levels required when called: 2
 16427 ;; This function calls:
 16428 ;;		_TMR5_ReadTimer
 16429 ;;		_TMR5_Reload
 16430 ;; This function is called by:
 16431 ;;		_TMR5_Initialize
 16432 ;;		_TMR5_GATE_ISR
 16433 ;; This function uses a non-reentrant model
 16434 ;;
 16435                           
 16436                           	psect	text96
 16437  005CB4                     __ptext96:
 16438                           	callstack 0
 16439  005CB4                     _TMR5_DefaultGateInterruptHandler:
 16440                           	callstack 12
 16441  005CB4                     
 16442                           ;mcc_generated_files/tmr5.c: 194:     distFront = TMR5_ReadTimer();
 16443  005CB4  EC38  F02E         	call	_TMR5_ReadTimer	;wreg free
 16444  005CB8  C009  F0FC         	movff	?_TMR5_ReadTimer,_distFront	;volatile
 16445  005CBC  C00A  F0FD         	movff	?_TMR5_ReadTimer+1,_distFront+1	;volatile
 16446  005CC0                     
 16447                           ;mcc_generated_files/tmr5.c: 195:     distFront >>= 1;
 16448  005CC0  0100               	movlb	0	; () banked
 16449  005CC2  90D8               	bcf	status,0,c
 16450  005CC4  33FD               	rrcf	(_distFront+1)& (0+255),f,b	;volatile
 16451  005CC6  33FC               	rrcf	_distFront& (0+255),f,b	;volatile
 16452  005CC8                     
 16453                           ; BSR set to: 0
 16454                           ;mcc_generated_files/tmr5.c: 196:     TMR5_Reload();
 16455  005CC8  ECBB  F02E         	call	_TMR5_Reload	;wreg free
 16456  005CCC                     
 16457                           ;mcc_generated_files/tmr5.c: 197:     PIR8bits.TMR5GIF = 0;
 16458  005CCC  0139               	movlb	57	; () banked
 16459  005CCE  9FA8               	bcf	168,7,b	;volatile
 16460  005CD0                     
 16461                           ; BSR set to: 57
 16462  005CD0  0012               	return		;funcret
 16463  005CD2                     __end_of_TMR5_DefaultGateInterruptHandler:
 16464                           	callstack 0
 16465                           
 16466 ;; *************** function _TMR5_Reload *****************
 16467 ;; Defined at:
 16468 ;;		line 155 in file "mcc_generated_files/tmr5.c"
 16469 ;; Parameters:    Size  Location     Type
 16470 ;;		None
 16471 ;; Auto vars:     Size  Location     Type
 16472 ;;		None
 16473 ;; Return value:  Size  Location     Type
 16474 ;;                  1    wreg      void 
 16475 ;; Registers used:
 16476 ;;		wreg, status,2, cstack
 16477 ;; Tracked objects:
 16478 ;;		On entry : 0/0
 16479 ;;		On exit  : 0/0
 16480 ;;		Unchanged: 0/0
 16481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16483 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16485 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16486 ;;Total ram usage:        0 bytes
 16487 ;; Hardware stack levels used: 1
 16488 ;; Hardware stack levels required when called: 1
 16489 ;; This function calls:
 16490 ;;		_TMR5_WriteTimer
 16491 ;; This function is called by:
 16492 ;;		_TMR5_DefaultGateInterruptHandler
 16493 ;; This function uses a non-reentrant model
 16494 ;;
 16495                           
 16496                           	psect	text97
 16497  005D76                     __ptext97:
 16498                           	callstack 0
 16499  005D76                     _TMR5_Reload:
 16500                           	callstack 12
 16501  005D76                     
 16502                           ;mcc_generated_files/tmr5.c: 157:     TMR5_WriteTimer(timer5ReloadVal);
 16503  005D76  C18A  F009         	movff	_timer5ReloadVal,TMR5_WriteTimer@timerVal	;volatile
 16504  005D7A  C18B  F00A         	movff	_timer5ReloadVal+1,TMR5_WriteTimer@timerVal+1	;volatile
 16505  005D7E  ECE8  F02D         	call	_TMR5_WriteTimer	;wreg free
 16506  005D82  0012               	return		;funcret
 16507  005D84                     __end_of_TMR5_Reload:
 16508                           	callstack 0
 16509                           
 16510 ;; *************** function _TMR5_WriteTimer *****************
 16511 ;; Defined at:
 16512 ;;		line 133 in file "mcc_generated_files/tmr5.c"
 16513 ;; Parameters:    Size  Location     Type
 16514 ;;  timerVal        2    8[COMRAM] unsigned short 
 16515 ;; Auto vars:     Size  Location     Type
 16516 ;;		None
 16517 ;; Return value:  Size  Location     Type
 16518 ;;                  1    wreg      void 
 16519 ;; Registers used:
 16520 ;;		wreg, status,2
 16521 ;; Tracked objects:
 16522 ;;		On entry : 0/0
 16523 ;;		On exit  : 0/0
 16524 ;;		Unchanged: 0/0
 16525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16526 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16529 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16530 ;;Total ram usage:        2 bytes
 16531 ;; Hardware stack levels used: 1
 16532 ;; This function calls:
 16533 ;;		Nothing
 16534 ;; This function is called by:
 16535 ;;		_TMR5_Reload
 16536 ;; This function uses a non-reentrant model
 16537 ;;
 16538                           
 16539                           	psect	text98
 16540  005BD0                     __ptext98:
 16541                           	callstack 0
 16542  005BD0                     _TMR5_WriteTimer:
 16543                           	callstack 12
 16544  005BD0                     
 16545                           ;mcc_generated_files/tmr5.c: 133: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 134: {;mcc_generated_files/tmr5.c: 135:     if (T5CONbits.NOT_SYNC == 1)
 16546  005BD0  A49A               	btfss	154,2,c	;volatile
 16547  005BD2  EFED  F02D         	goto	i2u622_41
 16548  005BD6  EFEF  F02D         	goto	i2u622_40
 16549  005BDA                     i2u622_41:
 16550  005BDA  EFF8  F02D         	goto	i2l6507
 16551  005BDE                     i2u622_40:
 16552  005BDE                     
 16553                           ;mcc_generated_files/tmr5.c: 136:     {;mcc_generated_files/tmr5.c: 138:         T5CONbi
      +                          ts.TMR5ON = 0;
 16554  005BDE  909A               	bcf	154,0,c	;volatile
 16555  005BE0                     
 16556                           ;mcc_generated_files/tmr5.c: 141:         TMR5H = (uint8_t)(timerVal >> 8);
 16557  005BE0  500A               	movf	(TMR5_WriteTimer@timerVal+1)^0,w,c
 16558  005BE2  6E99               	movwf	153,c	;volatile
 16559  005BE4                     
 16560                           ;mcc_generated_files/tmr5.c: 142:         TMR5L = (uint8_t)timerVal;
 16561  005BE4  0060  F027  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
 16562  005BEA                     
 16563                           ;mcc_generated_files/tmr5.c: 145:         T5CONbits.TMR5ON =1;
 16564  005BEA  809A               	bsf	154,0,c	;volatile
 16565                           
 16566                           ;mcc_generated_files/tmr5.c: 146:     }
 16567  005BEC  EFFD  F02D         	goto	i2l534
 16568  005BF0                     i2l6507:
 16569                           
 16570                           ;mcc_generated_files/tmr5.c: 148:     {;mcc_generated_files/tmr5.c: 150:         TMR5H =
      +                           (uint8_t)(timerVal >> 8);
 16571  005BF0  500A               	movf	(TMR5_WriteTimer@timerVal+1)^0,w,c
 16572  005BF2  6E99               	movwf	153,c	;volatile
 16573  005BF4                     
 16574                           ;mcc_generated_files/tmr5.c: 151:         TMR5L = (uint8_t)timerVal;
 16575  005BF4  0060  F027  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
 16576  005BFA                     i2l534:
 16577  005BFA  0012               	return		;funcret
 16578  005BFC                     __end_of_TMR5_WriteTimer:
 16579                           	callstack 0
 16580                           
 16581 ;; *************** function _TMR5_ReadTimer *****************
 16582 ;; Defined at:
 16583 ;;		line 117 in file "mcc_generated_files/tmr5.c"
 16584 ;; Parameters:    Size  Location     Type
 16585 ;;		None
 16586 ;; Auto vars:     Size  Location     Type
 16587 ;;  readVal         2   12[COMRAM] unsigned short 
 16588 ;;  readValLow      1   15[COMRAM] unsigned char 
 16589 ;;  readValHigh     1   14[COMRAM] unsigned char 
 16590 ;; Return value:  Size  Location     Type
 16591 ;;                  2    8[COMRAM] unsigned short 
 16592 ;; Registers used:
 16593 ;;		wreg, status,2
 16594 ;; Tracked objects:
 16595 ;;		On entry : 0/0
 16596 ;;		On exit  : 0/0
 16597 ;;		Unchanged: 0/0
 16598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16599 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16600 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16601 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16602 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16603 ;;Total ram usage:        8 bytes
 16604 ;; Hardware stack levels used: 1
 16605 ;; This function calls:
 16606 ;;		Nothing
 16607 ;; This function is called by:
 16608 ;;		_TMR5_DefaultGateInterruptHandler
 16609 ;; This function uses a non-reentrant model
 16610 ;;
 16611                           
 16612                           	psect	text99
 16613  005C70                     __ptext99:
 16614                           	callstack 0
 16615  005C70                     _TMR5_ReadTimer:
 16616                           	callstack 13
 16617  005C70                     
 16618                           ;mcc_generated_files/tmr5.c: 119:     uint16_t readVal;;mcc_generated_files/tmr5.c: 120:
      +                               uint8_t readValHigh;;mcc_generated_files/tmr5.c: 121:     uint8_t readValLow;;mcc_g
      +                          enerated_files/tmr5.c: 123:     T5CONbits.T5RD16 = 1;
 16619  005C70  829A               	bsf	154,1,c	;volatile
 16620                           
 16621                           ;mcc_generated_files/tmr5.c: 125:     readValLow = TMR5L;
 16622  005C72  006F FE60  F010    	movff	16280,TMR5_ReadTimer@readValLow	;volatile
 16623                           
 16624                           ;mcc_generated_files/tmr5.c: 126:     readValHigh = TMR5H;
 16625  005C78  006F FE64  F00F    	movff	16281,TMR5_ReadTimer@readValHigh	;volatile
 16626  005C7E                     
 16627                           ;mcc_generated_files/tmr5.c: 128:     readVal = ((uint16_t)readValHigh << 8) | readValLo
      +                          w;
 16628  005C7E  500F               	movf	TMR5_ReadTimer@readValHigh^0,w,c
 16629  005C80  6E0B               	movwf	??_TMR5_ReadTimer^0,c
 16630  005C82  5010               	movf	TMR5_ReadTimer@readValLow^0,w,c
 16631  005C84  6E0D               	movwf	TMR5_ReadTimer@readVal^0,c
 16632  005C86  C00B  F00E         	movff	??_TMR5_ReadTimer,TMR5_ReadTimer@readVal+1
 16633  005C8A                     
 16634                           ;mcc_generated_files/tmr5.c: 130:     return readVal;
 16635  005C8A  C00D  F009         	movff	TMR5_ReadTimer@readVal,?_TMR5_ReadTimer
 16636  005C8E  C00E  F00A         	movff	TMR5_ReadTimer@readVal+1,?_TMR5_ReadTimer+1
 16637  005C92  0012               	return		;funcret
 16638  005C94                     __end_of_TMR5_ReadTimer:
 16639                           	callstack 0
 16640                           
 16641 ;; *************** function _SMT1_PR_ACQ_ISR *****************
 16642 ;; Defined at:
 16643 ;;		line 192 in file "mcc_generated_files/smt1.c"
 16644 ;; Parameters:    Size  Location     Type
 16645 ;;		None
 16646 ;; Auto vars:     Size  Location     Type
 16647 ;;		None
 16648 ;; Return value:  Size  Location     Type
 16649 ;;                  1    wreg      void 
 16650 ;; Registers used:
 16651 ;;		wreg, status,2, status,0
 16652 ;; Tracked objects:
 16653 ;;		On entry : 0/0
 16654 ;;		On exit  : 0/0
 16655 ;;		Unchanged: 0/0
 16656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16660 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16661 ;;Total ram usage:        0 bytes
 16662 ;; Hardware stack levels used: 1
 16663 ;; This function calls:
 16664 ;;		Nothing
 16665 ;; This function is called by:
 16666 ;;		Interrupt level 2
 16667 ;; This function uses a non-reentrant model
 16668 ;;
 16669                           
 16670                           	psect	text100
 16671  0055A8                     __ptext100:
 16672                           	callstack 0
 16673  0055A8                     _SMT1_PR_ACQ_ISR:
 16674                           	callstack 15
 16675  0055A8                     
 16676                           ;mcc_generated_files/smt1.c: 196:     PIR1bits.SMT1PRAIF = 0;
 16677  0055A8  0139               	movlb	57	; () banked
 16678  0055AA  9DA1               	bcf	161,6,b	;volatile
 16679  0055AC                     
 16680                           ; BSR set to: 57
 16681                           ;mcc_generated_files/smt1.c: 197:     smtPeriod = SMT1CPR;
 16682  0055AC  013F               	movlb	63	; () banked
 16683  0055AE  5115               	movf	21,w,b	;volatile
 16684  0055B0  6E48               	movwf	_smtPeriod^0,c	;volatile
 16685  0055B2  5116               	movf	22,w,b	;volatile
 16686  0055B4  6E49               	movwf	(_smtPeriod+1)^0,c	;volatile
 16687  0055B6  5117               	movf	23,w,b	;volatile
 16688  0055B8  6E4A               	movwf	(_smtPeriod+2)^0,c	;volatile
 16689  0055BA  6A4B               	clrf	(_smtPeriod+3)^0,c	;volatile
 16690  0055BC                     
 16691                           ; BSR set to: 63
 16692                           ;mcc_generated_files/smt1.c: 198:     if(CLC3CONbits.LC3OUT) smtWay++;
 16693  0055BC  013C               	movlb	60	; () banked
 16694  0055BE  AB60               	btfss	96,5,b	;volatile
 16695  0055C0  EFE4  F02A         	goto	i2u714_41
 16696  0055C4  EFE6  F02A         	goto	i2u714_40
 16697  0055C8                     i2u714_41:
 16698  0055C8  EFEF  F02A         	goto	i2l7221
 16699  0055CC                     i2u714_40:
 16700  0055CC                     
 16701                           ; BSR set to: 60
 16702  0055CC  0E01               	movlw	1
 16703  0055CE  0101               	movlb	1	; () banked
 16704  0055D0  2720               	addwf	_smtWay& (0+255),f,b	;volatile
 16705  0055D2  0E00               	movlw	0
 16706  0055D4  2321               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 16707  0055D6  2322               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 16708  0055D8  2323               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 16709  0055DA  EFF8  F02A         	goto	i2l856
 16710  0055DE                     i2l7221:
 16711                           
 16712                           ; BSR set to: 60
 16713  0055DE  0EFF               	movlw	255
 16714  0055E0  0101               	movlb	1	; () banked
 16715  0055E2  2720               	addwf	_smtWay& (0+255),f,b	;volatile
 16716  0055E4  0EFF               	movlw	255
 16717  0055E6  2321               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 16718  0055E8  0EFF               	movlw	255
 16719  0055EA  2322               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 16720  0055EC  0EFF               	movlw	255
 16721  0055EE  2323               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 16722  0055F0                     i2l856:
 16723                           
 16724                           ; BSR set to: 1
 16725  0055F0  0011               	retfie		f
 16726  0055F2                     __end_of_SMT1_PR_ACQ_ISR:
 16727                           	callstack 0
 16728                           
 16729 ;; *************** function _SMT1_PW_ACQ_ISR *****************
 16730 ;; Defined at:
 16731 ;;		line 203 in file "mcc_generated_files/smt1.c"
 16732 ;; Parameters:    Size  Location     Type
 16733 ;;		None
 16734 ;; Auto vars:     Size  Location     Type
 16735 ;;		None
 16736 ;; Return value:  Size  Location     Type
 16737 ;;                  1    wreg      void 
 16738 ;; Registers used:
 16739 ;;		wreg, status,2, status,0
 16740 ;; Tracked objects:
 16741 ;;		On entry : 0/0
 16742 ;;		On exit  : 0/0
 16743 ;;		Unchanged: 0/0
 16744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16748 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16749 ;;Total ram usage:        0 bytes
 16750 ;; Hardware stack levels used: 1
 16751 ;; This function calls:
 16752 ;;		Nothing
 16753 ;; This function is called by:
 16754 ;;		Interrupt level 2
 16755 ;; This function uses a non-reentrant model
 16756 ;;
 16757                           
 16758                           	psect	text101
 16759  005474                     __ptext101:
 16760                           	callstack 0
 16761  005474                     _SMT1_PW_ACQ_ISR:
 16762                           	callstack 15
 16763  005474                     
 16764                           ;mcc_generated_files/smt1.c: 207:     PIR1bits.SMT1PWAIF = 0;
 16765  005474  0139               	movlb	57	; () banked
 16766  005476  9FA1               	bcf	161,7,b	;volatile
 16767  005478                     
 16768                           ; BSR set to: 57
 16769                           ;mcc_generated_files/smt1.c: 208:     smtDuty = SMT1CPW;
 16770  005478  013F               	movlb	63	; () banked
 16771  00547A  5118               	movf	24,w,b	;volatile
 16772  00547C  0101               	movlb	1	; () banked
 16773  00547E  6F24               	movwf	_smtDuty& (0+255),b	;volatile
 16774  005480  013F               	movlb	63	; () banked
 16775  005482  5119               	movf	25,w,b	;volatile
 16776  005484  0101               	movlb	1	; () banked
 16777  005486  6F25               	movwf	(_smtDuty+1)& (0+255),b	;volatile
 16778  005488  013F               	movlb	63	; () banked
 16779  00548A  511A               	movf	26,w,b	;volatile
 16780  00548C  0101               	movlb	1	; () banked
 16781  00548E  6F26               	movwf	(_smtDuty+2)& (0+255),b	;volatile
 16782  005490  6B27               	clrf	(_smtDuty+3)& (0+255),b	;volatile
 16783  005492                     
 16784                           ; BSR set to: 1
 16785                           ;mcc_generated_files/smt1.c: 209:     if(CLC3CONbits.LC3OUT) smtWay++;
 16786  005492  013C               	movlb	60	; () banked
 16787  005494  AB60               	btfss	96,5,b	;volatile
 16788  005496  EF4F  F02A         	goto	i2u715_41
 16789  00549A  EF51  F02A         	goto	i2u715_40
 16790  00549E                     i2u715_41:
 16791  00549E  EF5A  F02A         	goto	i2l7231
 16792  0054A2                     i2u715_40:
 16793  0054A2                     
 16794                           ; BSR set to: 60
 16795  0054A2  0E01               	movlw	1
 16796  0054A4  0101               	movlb	1	; () banked
 16797  0054A6  2720               	addwf	_smtWay& (0+255),f,b	;volatile
 16798  0054A8  0E00               	movlw	0
 16799  0054AA  2321               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 16800  0054AC  2322               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 16801  0054AE  2323               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 16802  0054B0  EF63  F02A         	goto	i2l863
 16803  0054B4                     i2l7231:
 16804                           
 16805                           ; BSR set to: 60
 16806  0054B4  0EFF               	movlw	255
 16807  0054B6  0101               	movlb	1	; () banked
 16808  0054B8  2720               	addwf	_smtWay& (0+255),f,b	;volatile
 16809  0054BA  0EFF               	movlw	255
 16810  0054BC  2321               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 16811  0054BE  0EFF               	movlw	255
 16812  0054C0  2322               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 16813  0054C2  0EFF               	movlw	255
 16814  0054C4  2323               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 16815  0054C6                     i2l863:
 16816                           
 16817                           ; BSR set to: 1
 16818  0054C6  0011               	retfie		f
 16819  0054C8                     __end_of_SMT1_PW_ACQ_ISR:
 16820                           	callstack 0
 16821                           
 16822 ;; *************** function _SMT1_Overflow_ISR *****************
 16823 ;; Defined at:
 16824 ;;		line 213 in file "mcc_generated_files/smt1.c"
 16825 ;; Parameters:    Size  Location     Type
 16826 ;;		None
 16827 ;; Auto vars:     Size  Location     Type
 16828 ;;		None
 16829 ;; Return value:  Size  Location     Type
 16830 ;;                  1    wreg      void 
 16831 ;; Registers used:
 16832 ;;		wreg, status,2
 16833 ;; Tracked objects:
 16834 ;;		On entry : 0/0
 16835 ;;		On exit  : 0/0
 16836 ;;		Unchanged: 0/0
 16837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16841 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16842 ;;Total ram usage:        0 bytes
 16843 ;; Hardware stack levels used: 1
 16844 ;; This function calls:
 16845 ;;		Nothing
 16846 ;; This function is called by:
 16847 ;;		Interrupt level 2
 16848 ;; This function uses a non-reentrant model
 16849 ;;
 16850                           
 16851                           	psect	text102
 16852  005C24                     __ptext102:
 16853                           	callstack 0
 16854  005C24                     _SMT1_Overflow_ISR:
 16855                           	callstack 15
 16856  005C24                     
 16857                           ;mcc_generated_files/smt1.c: 217:     PIR1bits.SMT1IF = 0;
 16858  005C24  0139               	movlb	57	; () banked
 16859  005C26  9BA1               	bcf	161,5,b	;volatile
 16860  005C28                     
 16861                           ; BSR set to: 57
 16862                           ;mcc_generated_files/smt1.c: 218:     smtPeriod = 0;
 16863  005C28  0E00               	movlw	0
 16864  005C2A  6E48               	movwf	_smtPeriod^0,c	;volatile
 16865  005C2C  0E00               	movlw	0
 16866  005C2E  6E49               	movwf	(_smtPeriod+1)^0,c	;volatile
 16867  005C30  0E00               	movlw	0
 16868  005C32  6E4A               	movwf	(_smtPeriod+2)^0,c	;volatile
 16869  005C34  0E00               	movlw	0
 16870  005C36  6E4B               	movwf	(_smtPeriod+3)^0,c	;volatile
 16871                           
 16872                           ;mcc_generated_files/smt1.c: 219:     smtDuty = 0;
 16873  005C38  0E00               	movlw	0
 16874  005C3A  0101               	movlb	1	; () banked
 16875  005C3C  6F24               	movwf	_smtDuty& (0+255),b	;volatile
 16876  005C3E  0E00               	movlw	0
 16877  005C40  6F25               	movwf	(_smtDuty+1)& (0+255),b	;volatile
 16878  005C42  0E00               	movlw	0
 16879  005C44  6F26               	movwf	(_smtDuty+2)& (0+255),b	;volatile
 16880  005C46  0E00               	movlw	0
 16881  005C48  6F27               	movwf	(_smtDuty+3)& (0+255),b	;volatile
 16882  005C4A                     
 16883                           ; BSR set to: 1
 16884  005C4A  0011               	retfie		f
 16885  005C4C                     __end_of_SMT1_Overflow_ISR:
 16886                           	callstack 0
 16887                           
 16888                           ;
 16889                           ; Interrupt Vector Table @ 0x8
 16890                           ;
 16891                           
 16892                           	psect	ivt0x8
 16893  000008                     __pivt0x8:
 16894                           	callstack 0
 16895  000008                     ivt0x8_base:
 16896                           	callstack 0
 16897                           
 16898                           ; Vector 0 : SWINT
 16899  000008  177F               	dw	_Default_ISR shr (0+2)
 16900                           
 16901                           ; Vector 1 : HLVD
 16902  00000A  177F               	dw	_Default_ISR shr (0+2)
 16903                           
 16904                           ; Vector 2 : OSF
 16905  00000C  177F               	dw	_Default_ISR shr (0+2)
 16906                           
 16907                           ; Vector 3 : CSW
 16908  00000E  177F               	dw	_Default_ISR shr (0+2)
 16909                           
 16910                           ; Vector 4 : NVM
 16911  000010  177F               	dw	_Default_ISR shr (0+2)
 16912                           
 16913                           ; Vector 5 : SCAN
 16914  000012  177F               	dw	_Default_ISR shr (0+2)
 16915                           
 16916                           ; Vector 6 : CRC
 16917  000014  177F               	dw	_Default_ISR shr (0+2)
 16918                           
 16919                           ; Vector 7 : IOC
 16920  000016  177F               	dw	_Default_ISR shr (0+2)
 16921                           
 16922                           ; Vector 8 : INT0
 16923  000018  177F               	dw	_Default_ISR shr (0+2)
 16924                           
 16925                           ; Vector 9 : ZCD
 16926  00001A  177F               	dw	_Default_ISR shr (0+2)
 16927                           
 16928                           ; Vector 10 : AD
 16929  00001C  177F               	dw	_Default_ISR shr (0+2)
 16930                           
 16931                           ; Vector 11 : ADT
 16932  00001E  177F               	dw	_Default_ISR shr (0+2)
 16933                           
 16934                           ; Vector 12 : CMP1
 16935  000020  177F               	dw	_Default_ISR shr (0+2)
 16936                           
 16937                           ; Vector 13 : SMT1
 16938  000022  1709               	dw	_SMT1_Overflow_ISR shr (0+2)
 16939                           
 16940                           ; Vector 14 : SMT1PRA
 16941  000024  156A               	dw	_SMT1_PR_ACQ_ISR shr (0+2)
 16942                           
 16943                           ; Vector 15 : SMT1PRW
 16944  000026  151D               	dw	_SMT1_PW_ACQ_ISR shr (0+2)
 16945                           
 16946                           ; Vector 16 : DMA1SCNT
 16947  000028  177F               	dw	_Default_ISR shr (0+2)
 16948                           
 16949                           ; Vector 17 : DMA1DCNT
 16950  00002A  177F               	dw	_Default_ISR shr (0+2)
 16951                           
 16952                           ; Vector 18 : DMA1OR
 16953  00002C  177F               	dw	_Default_ISR shr (0+2)
 16954                           
 16955                           ; Vector 19 : DMA1A
 16956  00002E  177F               	dw	_Default_ISR shr (0+2)
 16957                           
 16958                           ; Vector 20 : SPI1RX
 16959  000030  177F               	dw	_Default_ISR shr (0+2)
 16960                           
 16961                           ; Vector 21 : SPI1TX
 16962  000032  177F               	dw	_Default_ISR shr (0+2)
 16963                           
 16964                           ; Vector 22 : SPI1
 16965  000034  177F               	dw	_Default_ISR shr (0+2)
 16966                           
 16967                           ; Vector 23 : I2C1RX
 16968  000036  177F               	dw	_Default_ISR shr (0+2)
 16969                           
 16970                           ; Vector 24 : I2C1TX
 16971  000038  177F               	dw	_Default_ISR shr (0+2)
 16972                           
 16973                           ; Vector 25 : I2C1
 16974  00003A  177F               	dw	_Default_ISR shr (0+2)
 16975                           
 16976                           ; Vector 26 : I2C1E
 16977  00003C  177F               	dw	_Default_ISR shr (0+2)
 16978                           
 16979                           ; Vector 27 : U1RX
 16980  00003E  15DE               	dw	_UART1_rx_vect_isr shr (0+2)
 16981                           
 16982                           ; Vector 28 : U1TX
 16983  000040  15CF               	dw	_UART1_tx_vect_isr shr (0+2)
 16984                           
 16985                           ; Vector 29 : U1E
 16986  000042  177F               	dw	_Default_ISR shr (0+2)
 16987                           
 16988                           ; Vector 30 : U1
 16989  000044  177F               	dw	_Default_ISR shr (0+2)
 16990                           
 16991                           ; Vector 31 : TMR0
 16992  000046  177F               	dw	_Default_ISR shr (0+2)
 16993                           
 16994                           ; Vector 32 : TMR1
 16995  000048  177F               	dw	_Default_ISR shr (0+2)
 16996                           
 16997                           ; Vector 33 : TMR1G
 16998  00004A  177F               	dw	_Default_ISR shr (0+2)
 16999                           
 17000                           ; Vector 34 : TMR2
 17001  00004C  177F               	dw	_Default_ISR shr (0+2)
 17002                           
 17003                           ; Vector 35 : CCP1
 17004  00004E  177F               	dw	_Default_ISR shr (0+2)
 17005                           
 17006                           ; Vector 36 : Undefined
 17007  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 17008                           
 17009                           ; Vector 37 : NCO1
 17010  000052  177F               	dw	_Default_ISR shr (0+2)
 17011                           
 17012                           ; Vector 38 : CWG1
 17013  000054  177F               	dw	_Default_ISR shr (0+2)
 17014                           
 17015                           ; Vector 39 : CLC1
 17016  000056  177F               	dw	_Default_ISR shr (0+2)
 17017                           
 17018                           ; Vector 40 : INT1
 17019  000058  177F               	dw	_Default_ISR shr (0+2)
 17020                           
 17021                           ; Vector 41 : CMP2
 17022  00005A  177F               	dw	_Default_ISR shr (0+2)
 17023                           
 17024                           ; Vector 42 : DMA2SCNT
 17025  00005C  177F               	dw	_Default_ISR shr (0+2)
 17026                           
 17027                           ; Vector 43 : DMA2DCNT
 17028  00005E  177F               	dw	_Default_ISR shr (0+2)
 17029                           
 17030                           ; Vector 44 : DMA2OR
 17031  000060  177F               	dw	_Default_ISR shr (0+2)
 17032                           
 17033                           ; Vector 45 : DMA2A
 17034  000062  177F               	dw	_Default_ISR shr (0+2)
 17035                           
 17036                           ; Vector 46 : I2C2RX
 17037  000064  177F               	dw	_Default_ISR shr (0+2)
 17038                           
 17039                           ; Vector 47 : I2C2TX
 17040  000066  177F               	dw	_Default_ISR shr (0+2)
 17041                           
 17042                           ; Vector 48 : I2C2
 17043  000068  177F               	dw	_Default_ISR shr (0+2)
 17044                           
 17045                           ; Vector 49 : I2C2E
 17046  00006A  177F               	dw	_Default_ISR shr (0+2)
 17047                           
 17048                           ; Vector 50 : U2RX
 17049  00006C  177F               	dw	_Default_ISR shr (0+2)
 17050                           
 17051                           ; Vector 51 : U2TX
 17052  00006E  177F               	dw	_Default_ISR shr (0+2)
 17053                           
 17054                           ; Vector 52 : U2E
 17055  000070  177F               	dw	_Default_ISR shr (0+2)
 17056                           
 17057                           ; Vector 53 : U2
 17058  000072  177F               	dw	_Default_ISR shr (0+2)
 17059                           
 17060                           ; Vector 54 : TMR3
 17061  000074  177F               	dw	_Default_ISR shr (0+2)
 17062                           
 17063                           ; Vector 55 : TMR3G
 17064  000076  177F               	dw	_Default_ISR shr (0+2)
 17065                           
 17066                           ; Vector 56 : TMR4
 17067  000078  1617               	dw	_TMR4_ISR shr (0+2)
 17068                           
 17069                           ; Vector 57 : CCP2
 17070  00007A  177F               	dw	_Default_ISR shr (0+2)
 17071                           
 17072                           ; Vector 58 : Undefined
 17073  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 17074                           
 17075                           ; Vector 59 : CWG2
 17076  00007E  177F               	dw	_Default_ISR shr (0+2)
 17077                           
 17078                           ; Vector 60 : CLC2
 17079  000080  177F               	dw	_Default_ISR shr (0+2)
 17080                           
 17081                           ; Vector 61 : INT2
 17082  000082  177F               	dw	_Default_ISR shr (0+2)
 17083                           
 17084                           ; Vector 62 : Undefined
 17085  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 17086                           
 17087                           ; Vector 63 : Undefined
 17088  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 17089                           
 17090                           ; Vector 64 : Undefined
 17091  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 17092                           
 17093                           ; Vector 65 : Undefined
 17094  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 17095                           
 17096                           ; Vector 66 : Undefined
 17097  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 17098                           
 17099                           ; Vector 67 : Undefined
 17100  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 17101                           
 17102                           ; Vector 68 : Undefined
 17103  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 17104                           
 17105                           ; Vector 69 : Undefined
 17106  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 17107                           
 17108                           ; Vector 70 : TMR5
 17109  000094  177F               	dw	_Default_ISR shr (0+2)
 17110                           
 17111                           ; Vector 71 : TMR5G
 17112  000096  1680               	dw	_TMR5_GATE_ISR shr (0+2)
 17113                           
 17114                           ; Vector 72 : TMR6
 17115  000098  177F               	dw	_Default_ISR shr (0+2)
 17116                           
 17117                           ; Vector 73 : CCP3
 17118  00009A  1659               	dw	_CCP3_CaptureISR shr (0+2)
 17119                           
 17120                           ; Vector 74 : CWG3
 17121  00009C  177F               	dw	_Default_ISR shr (0+2)
 17122                           
 17123                           ; Vector 75 : CLC3
 17124  00009E  177F               	dw	_Default_ISR shr (0+2)
 17125                           
 17126                           ; Vector 76 : Undefined
 17127  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 17128                           
 17129                           ; Vector 77 : Undefined
 17130  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 17131                           
 17132                           ; Vector 78 : Undefined
 17133  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 17134                           
 17135                           ; Vector 79 : Undefined
 17136  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 17137                           
 17138                           ; Vector 80 : CCP4
 17139  0000A8  1666               	dw	_CCP4_CaptureISR shr (0+2)
 17140                           
 17141                           ; Vector 81 : CLC4
 17142  0000AA  177F               	dw	_Default_ISR shr (0+2)
 17143  0000AC                     ivt0x8_undefint:
 17144                           	callstack 0
 17145  0000AC  00FF               	reset	
 17146                           
 17147                           	psect	text103
 17148  000000                     __ptext103:
 17149                           	callstack 0
 17150  000000                     
 17151                           	psect	rparam
 17152  0000                     
 17153                           	psect	idloc
 17154                           
 17155                           ;Config register IDLOC0 @ 0x200000
 17156                           ;	unspecified, using default values
 17157  200000                     	org	2097152
 17158  200000  0FFF               	dw	4095
 17159                           
 17160                           ;Config register IDLOC1 @ 0x200002
 17161                           ;	unspecified, using default values
 17162  200002                     	org	2097154
 17163  200002  0FFF               	dw	4095
 17164                           
 17165                           ;Config register IDLOC2 @ 0x200004
 17166                           ;	unspecified, using default values
 17167  200004                     	org	2097156
 17168  200004  0FFF               	dw	4095
 17169                           
 17170                           ;Config register IDLOC3 @ 0x200006
 17171                           ;	unspecified, using default values
 17172  200006                     	org	2097158
 17173  200006  0FFF               	dw	4095
 17174                           
 17175                           ;Config register IDLOC4 @ 0x200008
 17176                           ;	unspecified, using default values
 17177  200008                     	org	2097160
 17178  200008  0FFF               	dw	4095
 17179                           
 17180                           ;Config register IDLOC5 @ 0x20000A
 17181                           ;	unspecified, using default values
 17182  20000A                     	org	2097162
 17183  20000A  0FFF               	dw	4095
 17184                           
 17185                           ;Config register IDLOC6 @ 0x20000C
 17186                           ;	unspecified, using default values
 17187  20000C                     	org	2097164
 17188  20000C  0FFF               	dw	4095
 17189                           
 17190                           ;Config register IDLOC7 @ 0x20000E
 17191                           ;	unspecified, using default values
 17192  20000E                     	org	2097166
 17193  20000E  0FFF               	dw	4095
 17194                           
 17195                           	psect	config
 17196                           
 17197                           ;Config register CONFIG1L @ 0x300000
 17198                           ;	External Oscillator Selection
 17199                           ;	FEXTOSC = OFF, Oscillator not enabled
 17200                           ;	Reset Oscillator Selection
 17201                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
 17202  300000                     	org	3145728
 17203  300000  8C                 	db	140
 17204                           
 17205                           ;Config register CONFIG1H @ 0x300001
 17206                           ;	Clock out Enable bit
 17207                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 17208                           ;	PRLOCKED One-Way Set Enable bit
 17209                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
 17210                           ;	Clock Switch Enable bit
 17211                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 17212                           ;	Fail-Safe Clock Monitor Enable bit
 17213                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 17214  300001                     	org	3145729
 17215  300001  FF                 	db	255
 17216                           
 17217                           ;Config register CONFIG2L @ 0x300002
 17218                           ;	MCLR Enable bit
 17219                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 17220                           ;	Power-up timer selection bits
 17221                           ;	PWRTS = PWRT_OFF, PWRT is disabled
 17222                           ;	Multi-vector enable bit
 17223                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
 17224                           ;	IVTLOCK bit One-way set enable bit
 17225                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
 17226                           ;	Low Power BOR Enable bit
 17227                           ;	LPBOREN = OFF, ULPBOR disabled
 17228                           ;	Brown-out Reset Enable bits
 17229                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 17230  300002                     	org	3145730
 17231  300002  FF                 	db	255
 17232                           
 17233                           ;Config register CONFIG2H @ 0x300003
 17234                           ;	Brown-out Reset Voltage Selection bits
 17235                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
 17236                           ;	ZCD Disable bit
 17237                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 17238                           ;	PPSLOCK bit One-Way Set Enable bit
 17239                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
 17240                           ;	Stack Full/Underflow Reset Enable bit
 17241                           ;	STVREN = ON, Stack full/underflow will cause Reset
 17242                           ;	Debugger Enable bit
 17243                           ;	DEBUG = OFF, Background debugger disabled
 17244                           ;	Extended Instruction Set Enable bit
 17245                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 17246  300003                     	org	3145731
 17247  300003  FF                 	db	255
 17248                           
 17249                           ;Config register CONFIG3L @ 0x300004
 17250                           ;	WDT Period selection bits
 17251                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 17252                           ;	WDT operating mode
 17253                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
 17254  300004                     	org	3145732
 17255  300004  9F                 	db	159
 17256                           
 17257                           ;Config register CONFIG3H @ 0x300005
 17258                           ;	WDT Window Select bits
 17259                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 17260                           ;	WDT input clock selector
 17261                           ;	WDTCCS = SC, Software Control
 17262  300005                     	org	3145733
 17263  300005  FF                 	db	255
 17264                           
 17265                           ;Config register CONFIG4L @ 0x300006
 17266                           ;	Boot Block Size selection bits
 17267                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
 17268                           ;	Boot Block enable bit
 17269                           ;	BBEN = OFF, Boot block disabled
 17270                           ;	Storage Area Flash enable bit
 17271                           ;	SAFEN = OFF, SAF disabled
 17272                           ;	Application Block write protection bit
 17273                           ;	WRTAPP = OFF, Application Block not write protected
 17274  300006                     	org	3145734
 17275  300006  FF                 	db	255
 17276                           
 17277                           ;Config register CONFIG4H @ 0x300007
 17278                           ;	Configuration Register Write Protection bit
 17279                           ;	WRTB = OFF, Configuration registers (300000-30000Bh) not write-protected
 17280                           ;	Boot Block Write Protection bit
 17281                           ;	WRTC = OFF, Boot Block (000000-0007FFh) not write-protected
 17282                           ;	Data EEPROM Write Protection bit
 17283                           ;	WRTD = OFF, Data EEPROM not write-protected
 17284                           ;	SAF Write protection bit
 17285                           ;	WRTSAF = OFF, SAF not Write Protected
 17286                           ;	Low Voltage Programming Enable bit
 17287                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
 17288  300007                     	org	3145735
 17289  300007  FF                 	db	255
 17290                           
 17291                           ;Config register CONFIG5L @ 0x300008
 17292                           ;	PFM and Data EEPROM Code Protection bit
 17293                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
 17294  300008                     	org	3145736
 17295  300008  FF                 	db	255
 17296                           
 17297                           ;Config register CONFIG5H @ 0x300009
 17298                           ;	unspecified, using default values
 17299  300009                     	org	3145737
 17300  300009  FF                 	db	255
 17301                           tosu	equ	0x3FFF
 17302                           tosh	equ	0x3FFE
 17303                           tosl	equ	0x3FFD
 17304                           stkptr	equ	0x3FFC
 17305                           pclatu	equ	0x3FFB
 17306                           pclath	equ	0x3FFA
 17307                           pcl	equ	0x3FF9
 17308                           tblptru	equ	0x3FF8
 17309                           tblptrh	equ	0x3FF7
 17310                           tblptrl	equ	0x3FF6
 17311                           tablat	equ	0x3FF5
 17312                           prodh	equ	0x3FF4
 17313                           prodl	equ	0x3FF3
 17314                           indf0	equ	0x3FEF
 17315                           postinc0	equ	0x3FEE
 17316                           postdec0	equ	0x3FED
 17317                           preinc0	equ	0x3FEC
 17318                           plusw0	equ	0x3FEB
 17319                           fsr0h	equ	0x3FEA
 17320                           fsr0l	equ	0x3FE9
 17321                           wreg	equ	0x3FE8
 17322                           indf1	equ	0x3FE7
 17323                           postinc1	equ	0x3FE6
 17324                           postdec1	equ	0x3FE5
 17325                           preinc1	equ	0x3FE4
 17326                           plusw1	equ	0x3FE3
 17327                           fsr1h	equ	0x3FE2
 17328                           fsr1l	equ	0x3FE1
 17329                           bsr	equ	0x3FE0
 17330                           indf2	equ	0x3FDF
 17331                           postinc2	equ	0x3FDE
 17332                           postdec2	equ	0x3FDD
 17333                           preinc2	equ	0x3FDC
 17334                           plusw2	equ	0x3FDB
 17335                           fsr2h	equ	0x3FDA
 17336                           fsr2l	equ	0x3FD9
 17337                           status	equ	0x3FD8

Data Sizes:
    Strings     88
    Constant    0
    Data        3
    BSS         175
    Persistent  23
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     57      76
    BANK0           160    133     159
    BANK1           256     20     176
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_16(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_16(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_11(CODE[4]), STR_10(CODE[4]), STR_7(CODE[4]), STR_6(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_11(CODE[4]), STR_10(CODE[4]), STR_7(CODE[4]), STR_6(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S3431_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_5(CODE[14]), STR_4(CODE[20]), STR_3(CODE[13]), STR_2(CODE[10]), 
		 -> STR_1(CODE[12]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 20
		 -> STR_5(CODE[14]), STR_4(CODE[20]), STR_3(CODE[13]), STR_2(CODE[10]), 
		 -> STR_1(CODE[12]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_5(CODE[14]), STR_4(CODE[20]), STR_3(CODE[13]), STR_2(CODE[10]), 
		 -> STR_1(CODE[12]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK1[2]), 

    TMR4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_10msISR(), TMR4_DefaultInterruptHandler(), 

    TMR4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_10msISR(), TMR4_DefaultInterruptHandler(), Absolute function(), 

    TMR5_SetGateInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR5_DefaultGateInterruptHandler(), 

    TMR5_GateInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR5_DefaultGateInterruptHandler(), Absolute function(), 

    CCP4_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP4_DefaultCallBack(), 

    CCP4_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP4_DefaultCallBack(), Absolute function(), 

    CCP3_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP3_DefaultCallBack(), 

    CCP3_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP3_DefaultCallBack(), Absolute function(), 

    UART1_SetTxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    UART1_SetRxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultErrorHandler(), 

    UART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), 

    UART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), 

    UART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultErrorHandler(), 

    UART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultOverrunErrorHandler(), 

    UART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultFramingErrorHandler(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_Receive_ISR(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_Transmit_ISR(), 


Critical Paths under _main in COMRAM

    _loop->___flge
    _startAccell->___flge
    _calcSteering->_setSteering
    _efgtoa->___fladd
    _efgtoa->___flge
    _tolower->_isupper
    _floorf->___fldiv
    ___flsub->___fladd
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_UART1_Write
    _abs->___aomod
    _checkBatt->___flge
    _setSteering->___awdiv
    _getBatteryVoltage->_ADCC_GetSingleConversion
    ___flge->___flmul
    _calcSpeed->___fladd
    ___fladd->___flmul
    _setMotor->_PWM7_LoadDutyValue
    _setMotor->_PWM8_LoadDutyValue
    _actSpeed->___aldiv
    ___xxtofl->___awdiv
    ___fltol->___fladd
    ___flmul->___xxtofl
    _SYSTEM_Initialize->_TMR5_Initialize
    _UART1_Initialize->_UART1_SetErrorHandler
    _UART1_Initialize->_UART1_SetFramingErrorHandler
    _UART1_Initialize->_UART1_SetOverrunErrorHandler
    _UART1_Initialize->_UART1_SetRxInterruptHandler
    _UART1_Initialize->_UART1_SetTxInterruptHandler
    _TMR5_Initialize->_TMR5_SetGateInterruptHandler
    _TMR4_Initialize->_TMR4_SetInterruptHandler
    _CCP4_Initialize->_CCP4_SetCallBack
    _CCP3_Initialize->_CCP3_SetCallBack

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR4_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _CCP3_CaptureISR in COMRAM

    _CCP3_CaptureISR->_CCP3_DefaultCallBack

Critical Paths under _CCP4_CaptureISR in COMRAM

    _CCP4_CaptureISR->_CCP4_DefaultCallBack

Critical Paths under _TMR5_GATE_ISR in COMRAM

    _TMR5_DefaultGateInterruptHandler->_TMR5_ReadTimer
    _TMR5_Reload->_TMR5_WriteTimer

Critical Paths under _SMT1_PR_ACQ_ISR in COMRAM

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in COMRAM

    None.

Critical Paths under _SMT1_Overflow_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___fltol
    ___flsub->___fladd
    _checkBatt->___flge
    ___flge->___flmul
    _calcSpeed->___fltol
    ___fladd->___flmul
    _calcMotorPow->___fltol
    ___fltol->___fladd

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR4_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _CCP3_CaptureISR in BANK0

    None.

Critical Paths under _CCP4_CaptureISR in BANK0

    None.

Critical Paths under _TMR5_GATE_ISR in BANK0

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK0

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK0

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _loop->_getCurve
    _startAccell->_printf
    _getCurve->_printf
    _printf->_vfprintf

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR4_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _CCP3_CaptureISR in BANK1

    None.

Critical Paths under _CCP4_CaptureISR in BANK1

    None.

Critical Paths under _TMR5_GATE_ISR in BANK1

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK1

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK1

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR4_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _CCP3_CaptureISR in BANK2

    None.

Critical Paths under _CCP4_CaptureISR in BANK2

    None.

Critical Paths under _TMR5_GATE_ISR in BANK2

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK2

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK2

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR4_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _CCP3_CaptureISR in BANK3

    None.

Critical Paths under _CCP4_CaptureISR in BANK3

    None.

Critical Paths under _TMR5_GATE_ISR in BANK3

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK3

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK3

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR4_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _CCP3_CaptureISR in BANK4

    None.

Critical Paths under _CCP4_CaptureISR in BANK4

    None.

Critical Paths under _TMR5_GATE_ISR in BANK4

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK4

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK4

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR4_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _CCP3_CaptureISR in BANK5

    None.

Critical Paths under _CCP4_CaptureISR in BANK5

    None.

Critical Paths under _TMR5_GATE_ISR in BANK5

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK5

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK5

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR4_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _CCP3_CaptureISR in BANK6

    None.

Critical Paths under _CCP4_CaptureISR in BANK6

    None.

Critical Paths under _TMR5_GATE_ISR in BANK6

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK6

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK6

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR4_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _CCP3_CaptureISR in BANK7

    None.

Critical Paths under _CCP4_CaptureISR in BANK7

    None.

Critical Paths under _TMR5_GATE_ISR in BANK7

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK7

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK7

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR4_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _CCP3_CaptureISR in BANK8

    None.

Critical Paths under _CCP4_CaptureISR in BANK8

    None.

Critical Paths under _TMR5_GATE_ISR in BANK8

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK8

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK8

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR4_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _CCP3_CaptureISR in BANK9

    None.

Critical Paths under _CCP4_CaptureISR in BANK9

    None.

Critical Paths under _TMR5_GATE_ISR in BANK9

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK9

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK9

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR4_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _CCP3_CaptureISR in BANK10

    None.

Critical Paths under _CCP4_CaptureISR in BANK10

    None.

Critical Paths under _TMR5_GATE_ISR in BANK10

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK10

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK10

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR4_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _CCP3_CaptureISR in BANK11

    None.

Critical Paths under _CCP4_CaptureISR in BANK11

    None.

Critical Paths under _TMR5_GATE_ISR in BANK11

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK11

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK11

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR4_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _CCP3_CaptureISR in BANK12

    None.

Critical Paths under _CCP4_CaptureISR in BANK12

    None.

Critical Paths under _TMR5_GATE_ISR in BANK12

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK12

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK12

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR4_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _CCP3_CaptureISR in BANK13

    None.

Critical Paths under _CCP4_CaptureISR in BANK13

    None.

Critical Paths under _TMR5_GATE_ISR in BANK13

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK13

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK13

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR4_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _CCP3_CaptureISR in BANK14

    None.

Critical Paths under _CCP4_CaptureISR in BANK14

    None.

Critical Paths under _TMR5_GATE_ISR in BANK14

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK14

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK14

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR4_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _CCP3_CaptureISR in BANK15

    None.

Critical Paths under _CCP4_CaptureISR in BANK15

    None.

Critical Paths under _TMR5_GATE_ISR in BANK15

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK15

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK15

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  194539
                  _SYSTEM_Initialize
           _TMR4_SetInterruptHandler
                               _loop
 ---------------------------------------------------------------------------------
 (1) _loop                                                 0     0      0  193392
                             ___flge
                           ___xxtofl
                       _calcMotorPow
                          _calcSpeed
                       _calcSteering
                          _checkBatt
                  _getBatteryVoltage
                           _getCurve
                         _getReverse
                             _printf
                           _setMotor
                        _setSteering
                        _startAccell
 ---------------------------------------------------------------------------------
 (2) _startAccell                                          4     4      0   63825
                                             14 BANK1      4     4      0
                             ___flge
                            ___flmul
                            ___fltol
                           ___xxtofl
                       _calcSteering
                             _printf
                           _setMotor
                        _setSteering
 ---------------------------------------------------------------------------------
 (3) _calcSteering                                         6     6      0    5753
                                             36 COMRAM     6     6      0
                            ___awdiv
                        _setSteering
 ---------------------------------------------------------------------------------
 (2) _getReverse                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _getCurve                                             6     6      0   44883
                                             14 BANK1      6     6      0
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                              10     4      6   44722
                                              6 BANK1      8     2      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6   44173
                                            131 BANK0      2     2      0
                                              0 BANK1      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           46    40      6   43667
                                            103 BANK0     28    22      6
                               _dtoa
                             _efgtoa
                              _fputc
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (6) _strncmp                                             11     5      6     595
                                             19 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _efgtoa                                              68    61      7   32288
                                             35 BANK0     68    61      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (6) _tolower                                              8     6      2    1142
                                             25 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (7) _isupper                                              6     4      2     551
                                             19 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _strcpy                                              10     6      4    1037
                                             19 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (7) _floorf                                              20    16      4     669
                                             44 COMRAM    10     6      4
                                              0 BANK0     10    10      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fpclassifyf                                       14    10      4     375
                                             19 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (7) ___flsub                                              8     0      8    4187
                                             25 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flneg                                              4     0      4     155
                                             19 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (7) ___fleq                                              12     4      8     770
                                             19 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (7) ___fldiv                                             25    17      8    2723
                                             19 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4     613
                                             19 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    6493
                                             48 COMRAM     8     8      0
                                              0 BANK0     28    18     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    4227
                                             37 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     220
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1537
                                             30 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4    1037
                                             21 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0      93
                                             20 COMRAM     1     1      0
                        _UART1_Write
 ---------------------------------------------------------------------------------
 (8) _UART1_Write                                          1     1      0      62
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     183
                                             37 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     613
                                             19 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     625
                                             19 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (2) _checkBatt                                            0     0      0    6878
                             ___flge
                           ___xxtofl
                  _getBatteryVoltage
                        _setSteering
 ---------------------------------------------------------------------------------
 (3) _setSteering                                          9     6      3    4328
                                             27 COMRAM     9     6      3
                 _PWM5_LoadDutyValue
                 _PWM6_LoadDutyValue
                            ___awdiv
 ---------------------------------------------------------------------------------
 (4) _PWM6_LoadDutyValue                                   4     2      2     152
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _PWM5_LoadDutyValue                                   4     2      2     152
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _getBatteryVoltage                                    0     0      0      22
           _ADCC_GetSingleConversion
 ---------------------------------------------------------------------------------
 (3) _ADCC_GetSingleConversion                             5     3      2      22
                                             19 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (7) ___flge                                              12     4      8    1526
                                             53 COMRAM     4     4      0
                                             13 BANK0      8     0      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _calcSpeed                                            6     6      0    9904
                                             35 BANK0      6     6      0
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (8) ___fladd                                             16     8      8    3622
                                             53 COMRAM     4     4      0
                                             13 BANK0     12     4      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _calcMotorPow                                         7     7      0    9333
                                             35 BANK0      7     7      0
                            ___awdiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                           _actSpeed
                           _setMotor
 ---------------------------------------------------------------------------------
 (3) _setMotor                                             4     2      2    1216
                                             23 COMRAM     4     2      2
                 _PWM7_LoadDutyValue
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (4) _PWM8_LoadDutyValue                                   4     2      2     332
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _PWM7_LoadDutyValue                                   4     2      2     332
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _actSpeed                                             4     2      2     629
                                             33 COMRAM     4     2      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             14     6      8     604
                                             19 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4    1002
                                             27 COMRAM    14    10      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fltol                                             10     6      4     863
                                             25 BANK0     10     6      4
                            ___awdiv (ARG)
                            ___fladd (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flmul                                             25    17      8    4285
                                             41 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                            ___awdiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    1165
                                             19 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     973
                    _ADCC_Initialize
                    _CCP3_Initialize
                    _CCP4_Initialize
                    _CLC3_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM5_Initialize
                    _PWM6_Initialize
                    _PWM7_Initialize
                    _PWM8_Initialize
                    _SMT1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR4_Initialize
                    _TMR5_Initialize
                   _UART1_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0     490
              _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetOverrunErrorHandler                         2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetFramingErrorHandler                         2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetErrorHandler                                2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      2     2      0      98
                                             21 COMRAM     2     2      0
       _TMR5_SetGateInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetGateInterruptHandler                         2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0     174
           _TMR4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR4_SetInterruptHandler                             2     0      2     174
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      2     2      0       0
                                             19 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMT1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM7_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      15
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _CLC3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP4_Initialize                                      0     0      0      98
                   _CCP4_SetCallBack
 ---------------------------------------------------------------------------------
 (3) _CCP4_SetCallBack                                     2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CCP3_Initialize                                      0     0      0      98
                   _CCP3_SetCallBack
 ---------------------------------------------------------------------------------
 (3) _CCP3_SetCallBack                                     2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_tx_vect_isr                                   1     1      0       0
                                             16 COMRAM     1     1      0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_rx_vect_isr                                   1     1      0       0
                                             17 COMRAM     1     1      0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Receive_ISR                                   0     0      0       0
                   Absolute function *
          _UART1_DefaultErrorHandler *
   _UART1_DefaultFramingErrorHandler *
   _UART1_DefaultOverrunErrorHandler *
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (14) _UART1_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _UART1_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _UART1_DefaultErrorHandler                           0     0      0       0
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (14) _UART1_RxDataHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TMR4_ISR                                            1     1      0       0
                                             18 COMRAM     1     1      0
                      _TMR4_CallBack
 ---------------------------------------------------------------------------------
 (13) _TMR4_CallBack                                       0     0      0       0
                   Absolute function *
                       _TMR4_10msISR *
       _TMR4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _TMR4_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _TMR4_10msISR                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _CCP3_CaptureISR                                     2     2      0     144
                                              2 COMRAM     2     2      0
                   Absolute function *
               _CCP3_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (17) _CCP3_DefaultCallBack                                2     0      2      97
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _CCP4_CaptureISR                                     2     2      0     144
                                              6 COMRAM     2     2      0
                   Absolute function *
               _CCP4_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (17) _CCP4_DefaultCallBack                                2     0      2      97
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _TMR5_GATE_ISR                                       0     0      0     233
                   Absolute function *
   _TMR5_DefaultGateInterruptHandler *
 ---------------------------------------------------------------------------------
 (17) _TMR5_DefaultGateInterruptHandler                    0     0      0     233
                     _TMR5_ReadTimer
                        _TMR5_Reload
 ---------------------------------------------------------------------------------
 (18) _TMR5_Reload                                         0     0      0     164
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (19) _TMR5_WriteTimer                                     2     0      2     164
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (18) _TMR5_ReadTimer                                      8     6      2      69
                                              8 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _SMT1_PR_ACQ_ISR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _SMT1_PW_ACQ_ISR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _SMT1_Overflow_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
     _CCP3_Initialize
       _CCP3_SetCallBack
     _CCP4_Initialize
       _CCP4_SetCallBack
     _CLC3_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM5_Initialize
     _PWM6_Initialize
     _PWM7_Initialize
     _PWM8_Initialize
     _SMT1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
     _TMR4_Initialize
       _TMR4_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetGateInterruptHandler
     _UART1_Initialize
       _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
   _TMR4_SetInterruptHandler
   _loop
     ___flge
       ___flmul (ARG)
         ___awdiv (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
       ___xxtofl (ARG)
     ___xxtofl
     _calcMotorPow
       ___awdiv
       ___flmul
       ___fltol
         ___awdiv (ARG)
         ___fladd (ARG)
           ___flmul (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl
       _actSpeed
         ___aldiv
       _setMotor
         _PWM7_LoadDutyValue
         _PWM8_LoadDutyValue
     _calcSpeed
       ___fladd
       ___flmul
       ___fltol
       ___xxtofl
     _calcSteering
       ___awdiv
       _setSteering
         _PWM5_LoadDutyValue
         _PWM6_LoadDutyValue
         ___awdiv
     _checkBatt
       ___flge
       ___xxtofl
       _getBatteryVoltage
         _ADCC_GetSingleConversion
       _setSteering
     _getBatteryVoltage
     _getCurve
       _printf
         _vfprintf
           _vfpfcnvrt
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                 _fputs
                   _fputc
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
                 ___flmul (ARG)
               ___fltol
               ___fpclassifyf
               _floorf
                 ___fldiv (ARG)
               _isupper
               _pad
               _strcpy
               _tolower
                 _isupper
             _fputc
             _isupper
             _strncmp
             _tolower
     _getReverse
     _printf
     _setMotor
     _setSteering
     _startAccell
       ___flge
       ___flmul
       ___fltol
       ___xxtofl
       _calcSteering
       _printf
       _setMotor
       _setSteering

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *
     Absolute function(Fake) *
     _UART1_DefaultErrorHandler *
       _UART1_RxDataHandler
     _UART1_DefaultFramingErrorHandler *
     _UART1_DefaultOverrunErrorHandler *
     _UART1_RxDataHandler *

 _TMR4_ISR (ROOT)
   _TMR4_CallBack
     Absolute function(Fake) *
     _TMR4_10msISR *
     _TMR4_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _CCP3_CaptureISR (ROOT)
   Absolute function(Fake) *
   _CCP3_DefaultCallBack *

 _CCP4_CaptureISR (ROOT)
   Absolute function(Fake) *
   _CCP4_DefaultCallBack *

 _TMR5_GATE_ISR (ROOT)
   Absolute function(Fake) *
   _TMR5_DefaultGateInterruptHandler *
     _TMR5_ReadTimer
     _TMR5_Reload
       _TMR5_WriteTimer

 _SMT1_PR_ACQ_ISR (ROOT)

 _SMT1_PW_ACQ_ISR (ROOT)

 _SMT1_Overflow_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FFF      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK15          100      0       0      30        0.0%
BANK15             100      0       0      31        0.0%
BITBANK14          100      0       0      28        0.0%
BANK14             100      0       0      29        0.0%
BITBANK13          100      0       0      36        0.0%
BANK13             100      0       0      27        0.0%
BITBANK12          100      0       0      35        0.0%
BANK12             100      0       0      26        0.0%
BITBANK11          100      0       0      34        0.0%
BANK11             100      0       0      25        0.0%
BITBANK10          100      0       0      33        0.0%
BANK10             100      0       0      24        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     14      B0       7       68.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     85      9F       5       99.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     39      4C       1       80.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     19B      32        0.0%
DATA                 0      0     19B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Jan 31 16:07:23 2024

                             _CCP4_Initialize 5AC2                        ??_CCP3_DefaultCallBack 0003  
                                ___fldiv@aexp 002C                                  ___fldiv@bexp 002B  
                                 _startAccell 3EFA                                  ___fldiv@sign 0024  
                                          l72 5D64                                            l75 5C6E  
                                          l69 555C                                  ___awdiv@sign 0019  
                           ??_TMR5_WriteTimer 000B                   __size_of_PWM6_LoadDutyValue 0034  
                                         l312 5416                                           l404 5512  
                                         l308 53CE                                           l309 53E8  
                                         l318 5D8C                                           l520 55A6  
                                         l441 5B1C                                           l362 5DAA  
                                         l371 5D96                                           l188 4C1A  
                                         l284 505E                                           l365 5DBE  
                                         l359 5DB4                                           l368 5DA0  
                                         l712 5962                                           l449 5DE6  
                                         l482 5AEE                                           l723 5D04  
                                         l555 5DC8                                           l644 5B76  
                                         l740 58FA                                           l709 5D1C  
                                         l581 5858                                           l726 592E  
                                         l479 5DDC                                           l751 5D34  
                                         l737 5D4C                                           l754 58C6  
                                         l923 5CEC                                           l695 5DD2  
                                         l795 5A60                                           l893 5BA2  
                                         _GIE 01FE97                                           _PR2 003FAB  
                                         _PR4 003F9F                                           _abs 56C2  
                                         _pad 4CE0                       __size_of_PMD_Initialize 0024  
                                ___awmod@sign 0019                               _TMR2_Initialize 5CD2  
              CCP4_SetCallBack@customCallBack 0014                                           tosl 003FFD  
                                         wreg 003FE8                              _CCP4_SetCallBack 5DD4  
                                ___flmul@aexp 0061                                  ___flmul@bexp 0066  
                          _UART1_Transmit_ISR 567E                                  ___flmul@sign 0060  
                                ___flmul@temp 006B                                  ___flmul@prod 0067  
                     __end_of_CCP4_CaptureISR 59CC                                  ___fltol@exp1 0082  
                                        l1042 5472                                          l2011 27B2  
                                        ?_abs 0026                                          l2020 2A44  
                                        l2021 2A32                                          l1054 59DC  
                                        l1310 4776                                          l2015 2B3A  
                                        l1240 445C                                          l1224 4344  
                                        l1057 59FC                                          l2018 29CC  
                                        l2114 4D24                                          l1322 38F6  
                                        l2028 2AFC                                          l2052 3A70  
                                        l1252 5D74                                          l2117 4D66  
                                        l2125 2F76                                          l1309 4764  
                                        l1317 3864                                          l2055 3BCC  
                                        l1511 3EF8                                          l2311 50F4  
                                        l2119 4DA0                                          l2127 2F7E  
                                        l4001 54FE                                          l1249 5188  
                                        l1257 521A                                          l2145 31BA  
                                        l2209 18B6                                          l1337 3A18  
                                        l2066 3B64                                          l4011 550A  
                                        l4003 5502                                          l2059 3B08  
                                        l2331 573A                                          l2163 1D06  
                                        l2075 5C22                               _timer3ReloadVal 0186  
                                        l1524 41DA                                          l4013 550C  
                                        l4005 5504                                          l4021 4B52  
                                        l1381 3BDA                                          l2325 52F4  
                                        l2181 1478                                          l2261 5282  
                                        l1277 340C                                          l1269 4076  
                                        l2350 53BA                                          l2262 528A  
                                        l4103 5B78                                          l4015 550E  
                                        l4007 5506                                          l4031 4BCC  
                                        l4023 4B72                                          l1359 3844  
                                        l1383 3BFE                                          l2319 567C  
                                        l2335 4A6E                                          l2255 2122  
                                        l2247 2228                                          l1295 341C  
                                        l1368 4326                                          l1384 3C12  
                                        l2280 5700                                          l2272 497A  
                                        l4017 5510                                          l4009 5508  
                                        l4041 4BDA                                          l4033 4BCE  
                                        l4025 4B74                                          l4113 5D36  
                                        l1377 4B50                                          l1385 3C3A  
                                        l1641 4F10                                          l2345 53B2  
                                        l1394 3D70                                          l4043 4BDC  
                                        l4035 4BD0                                          l4027 4B7C  
                                        l4019 5C4C                                          l1628 4CDE  
                                        l1476 4568                                          l4045 5D4E  
                                        l4037 4BD6                                          l4029 4BCA  
                                        l2277 56F8                                          l1662 4836  
                                        l2286 3632                                          l4039 4BD8  
                                        l4071 5A50                                          l1671 5820  
                                        l1656 4FBA                                          l2296 57E8  
                                        l4057 5418                                          l4129 5D06  
                                        l4081 5A5C                                          l4073 5A52  
                                        l2289 3576                                          l4091 5D1E  
                                        l4075 5A54                                          l4083 5CD2  
                                        l1667 487C                                          l4077 5A58  
                                        l4069 5A32                                          l4085 5CDE  
                                        l1925 241A                                          l1694 4670  
                                        l1942 2534                                          l1934 26EA  
                                        l1926 2408                                          l4079 5A5A  
                                        l4087 5CE4                                          l1951 2604  
                                        l1927 23CE                                          l1952 25F2  
                                        l4089 5CEE                                          l7021 5534  
                                        l7013 5514                                          l1981 2D34  
                                        l1990 2D7A                                          ?_pad 0026  
                                        l7031 5550                                          l7023 5538  
                                        l7015 5524                                          l1967 5638  
                                        l1992 2DF2                                          l1984 2CF8  
                                        l7033 5554                                          l7025 553C  
                                        l7017 5528                                          l8001 4C8C  
                                        l1993 2DE0                                          l7027 5544  
                                        l7019 5530                                          l8011 4CB8  
                                        l8003 4C92                                          l1979 2ED4  
                                        l7029 5548                                          l8005 4CA8  
                                        l8013 4CBE                                          l6421 4462  
                                        l8021 4E62                                          l6511 5DCA  
                                        l8015 4CCE                                          l8007 4CB0  
                                        l8111 45C0                                          l8103 456A  
                                        l6431 44A2                                          l6423 4470  
                                        l8031 4E8E                                          l8023 4E66  
                                        l8017 4CD6                                          l8009 4CB2  
                                        l8113 45C2                                          l8105 4582  
                                        l6441 44E0                                          l6433 44A6  
                                        l6425 4480                                          l6601 5124  
                                        l7401 2238                                          l8041 4EC6  
                                        l8033 4E96                                          l8025 4E74  
                                        l8115 45D2                                          l6451 4528  
                                        l6443 44EE                                          l6435 44B6  
                                        l6427 4484                                          l6419 445E  
                                        l6603 5154                                          l7411 2278  
                                        l7403 2246                                          l6371 59D8  
                                        l8051 4F00                                          l8043 4EDC  
                                        l8035 4EA8                                          l8027 4E7C  
                                        l8211 343E                                          l8203 5392  
                                        l9003 33B0                                          l9011 33CE  
                                        l6701 5594                                          l8141 4650  
                                        l8125 45FC                                          l8117 45D6  
                                        l8109 4596                                          l6453 4532  
                                        l6445 44F8                                          l6437 44CC  
                                        l6429 4492                                          l6605 5180  
                                        l9101 431E                                          l7501 2438  
                                        l7421 22AA                                          l7413 227A  
                                        l7405 2248                                          l9021 3658  
                                        l6373 59DA                                          l8053 4F08  
                                        l8045 4EE4                                          l8037 4EB0  
                                        l8029 4E80                                          l8061 4F50  
                                        l8221 352A                                          l8213 3496  
                                        l8205 53A4                                          l8301 1064  
                                        l9005 33C2                                          l3991 54CA  
                                        l6703 5596                                          l6471 5D98  
                                        l6711 4FCC                                          l8143 4660  
                                        l8135 4624                                          l8127 4606  
                                        l8119 45E4                                          l6447 4516  
                                        l6439 44D4                                          l6455 4538  
                                        l7511 2478                                          l7431 22D2  
                                        l7423 22AC                                          l7407 2258  
                                        l7415 2282                                          l9031 36A2  
                                        l9023 365C                                          l6375 59EA  
                                        l6367 59CE                                          l6535 5D66  
                                        l8151 4D02                                          l8047 4EEA  
                                        l8039 4EB8                                          l8063 4F7E  
                                        l8231 3612                                          l8223 3566  
                                        l8215 34AA                                          l8311 10B8  
                                        l8303 1074                                          l9111 436C  
                                        l9103 4328                                          l3993 54D2  
                                        l6705 55A2                                          l6473 5D8E  
                                        l6721 4FEE                                          l6713 4FDC  
                                        l8137 4630                                          l8129 4610  
                                        l6457 4548                                          l6449 4526  
                                        l7521 24A2                                          l7513 2484  
                                        l7505 244C                                          l7441 230C  
                                        l7433 22E2                                          l7425 22B2  
                                        l7417 2292                                          l7409 2268  
                                        l9041 36EA                                          l9025 3678  
                                        l9033 36AE                                          l9017 3634  
                                        l8081 47F6                                          l8073 4778  
                                        l6369 59D4                                          l7601 563A  
                                        l8161 4D48                                          l8153 4D10  
                                        l8241 2F20                                          l8049 4EF0  
                                        l8065 4F8E                                          l8057 4F12  
                                        l8233 3622                                          l8217 34B8  
                                        l8225 359A                                          l8209 341E  
                                        l8321 10FE                                          l8313 10C0  
                                        l8305 1082                                          l9121 43CA  
                                        l9113 43B4                                          l9105 4352  
                                        l6491 5DDE                                          l3995 54DC  
                                        l6475 5DAC                                          l6731 5002  
                                        l6723 4FF2                                          l6715 4FE2  
                                        l6707 4FBC                                          l8139 4640  
                                        l6459 4558                                          l7531 2514  
                                        l7515 2488                                          l7507 245C  
                                        l7523 24A8                                          l7451 2338  
                                        l7443 231E                                          l7435 22F2  
                                        l7427 22C0                                          l7419 2298  
                                        l9043 377C                                          l9035 36BA  
                                        l9027 3680                                          l9019 3642  
                                        l8091 487A                                          l8083 4804  
                                        l8075 47A8                                          l8171 56DC  
                                        l7371 53EA                                          l7603 5646  
                                        l7611 570E                                          l8163 4D74  
                                        l8155 4D1C                                          l8147 4CE0  
                                        l8251 2F86                                          l8243 2F40  
                                        l8067 4FB2                                          l8059 4F40  
                                        l8227 35D6                                          l8411 1502  
                                        l8403 1496                                          l8331 113A  
                                        l8323 1106                                          l8315 10D2  
                                        l8307 108A                                          l9131 43FA  
                                        l9123 43D2                                          l9115 43B8  
                                        l9107 4364                                          l6661 5B16  
                                        l6493 5DD4                                          l3997 54F2  
                                        l3989 54C8                                          l6477 5DA2  
                                        l6741 5016                                          l6733 5006  
                                        l6725 4FF6                                          l6717 4FE6  
                                        l6709 4FC0                                          l7541 256E  
                                        l7525 24CE                                          l7533 2524  
                                        l7517 2496                                          l7509 246A  
                                        l7461 234C                                          l7453 233C  
                                        l7445 232C                                          l7437 22F4  
                                        l7429 22C2                                          l9061 3818  
                                        l9045 3788                                          l9037 36D0  
                                        l9029 3696                                          l8085 4816  
                                        l8077 47B8                                          l7373 53FC  
                                        l7381 5414                                          l7365 53BE  
                                        l7605 5658                                          l7613 5712  
                                        l8165 4D88                                          l8157 4D30  
                                        l8149 4CEE                                          l8261 2FBE  
                                        l8253 2F98                                          l8245 2F4E  
                                        l8237 2ED6                                          l8069 4FB8  
                                        l8181 4910                                          l8173 487E  
                                        l8229 35EA                                          l8501 19B6  
                                        l8421 1540                                          l8405 14A8  
                                        l8413 1506                                          l8341 11B6  
                                        l8325 110A                                          l8317 10E0  
                                        l8309 10AE                                          l6901 46C2  
                                        l9141 4448                                          l9133 440A  
                                        l9125 43D6                                          l9117 43BE  
                                        l9109 4368                                          l6663 5B1A  
                                        l6655 5AF0                                          l3999 54F4  
                                        l6671 5B66                                          l6495 5DC0  
                                        l6479 5DB6                                          l6743 501A  
                                        l6735 500A                                          l6727 4FFA  
                                        l6719 4FEA                                          l9071 41DC  
                                        l7551 259E                                          l7543 2578  
                                        l7535 254A                                          l7527 2502  
                                        l7519 2498                                          l7471 2360  
                                        l7463 2350                                          l7455 2340  
                                        l7447 2330                                          l7439 22FC  
                                        l9063 3834                                          l9039 36D4  
                                        l9055 37A0                                          l8087 4824  
                                        l8079 47E6                                          l7631 3DA8  
                                        l7623 3D72                                          l7375 53FE  
                                        l7367 53BE                                          l7383 5D86  
                                        l7391 508E                                          l7607 565C  
                                        l7615 572E                                          l8159 4D44  
                                        l8263 2FC4                                          l8271 30B8  
                                        l8255 2FA6                                          l8247 2F50  
                                        l8239 2EF6                                          l7711 2B68  
                                        l7703 2B3C                                          l8095 57EA  
                                        l8191 4972                                          l8175 489E  
                                        l8511 19E2                                          l8503 19BC  
                                        l8431 158E                                          l8423 1544  
                                        l8415 150E                                          l8407 14C4  
                                        l8343 11C0                                          l8335 1170  
                                        l8327 110E                                          l8319 10F2  
                                        l6911 471A                                          l6903 46DA  
                                        l9143 444C                                          l9135 441E  
                                        l9127 43E8                                          l9119 43C2  
                                        l9151 5C98                                          l6657 5B00  
                                        l6681 5AE8                                          l6673 5B72  
                                        l6665 5B4C                                          l6745 5026  
                                        l6737 500E                                          l6729 4FFE  
                                        l9081 4286                                          l9073 41E8  
                                        l7561 25C6                                          l7553 25A2  
                                        l7545 2586                                          l7537 255A  
                                        l7529 2504                                          l7481 239A  
                                        l7473 2364                                          l7465 2354  
                                        l7457 2344                                          l7449 2334  
                                        l9065 383C                                          l9049 3794  
                                        l9057 37F2                                          l8089 4874  
                                        l7641 3E04                                          l7633 3DB6  
                                        l7625 3D76                                          l8169 56C2  
                                        l7377 540E                                          l7369 53DE  
                                        l7393 50AC                                          l7385 5060  
                                        l7609 5702                                          l8273 30D4  
                                        l8281 3134                                          l8265 3046  
                                        l8257 2FAC                                          l8249 2F6A  
                                        l7801 2D9C                                          l7721 2BA2  
                                        l7713 2B78                                          l7705 2B48  
                                        l8097 5800                                          l8177 48DC  
                                        l8185 491C                                          l8601 1CC6  
                                        l8505 19C8                                          l8513 19E8  
                                        l8521 1A16                                          l8441 1626  
                                        l8425 1556                                          l8433 1596  
                                        l8417 1520                                          l8409 14FA  
                                        l8361 1294                                          l8353 1244  
                                        l8337 1182                                          l8329 1114  
                                        l6921 475E                                          l6913 4722  
                                        l6905 46DE                                          l9145 4450  
                                        l9137 4432                                          l9129 43EC  
                                        l9153 5C9A                                          l6659 5B0C  
                                        l6683 5AEC                                          l6675 5AC2  
                                        l6691 5854                                          l6667 5B60  
                                        l6747 5032                                          l6739 5012  
                                        l6595 50F6                                          l9091 42C6  
                                        l9083 429A                                          l9075 41F6  
                                        l7571 2620                                          l7563 25D4  
                                        l7555 25B2                                          l7547 2588  
                                        l7491 23EC                                          l7483 23B6  
                                        l7475 2368                                          l7467 2358  
                                        l7459 2348                                          l9059 3810  
                                        l7651 3E6E                                          l7643 3E0C  
                                        l7635 3DD6                                          l7627 3D84  
                                        l7379 5412                                          l7395 50E2  
                                        l7387 5072                                          l8291 3178  
                                        l8283 3146                                          l8275 30F2  
                                        l8267 304E                                          l8259 2FB4  
                                        l7811 2E0E                                          l7803 2DAA  
                                        l7731 2BCE                                          l7723 2BA8  
                                        l7715 2B88                                          l7707 2B56  
                                        l8099 5810                                          l8187 492E  
                                        l8179 4904                                          l8195 528C  
                                        l7619 57B2                                          l8603 1CE2  
                                        l8531 1ACC                                          l8523 1A6E  
                                        l8515 19FA                                          l8507 19D8  
                                        l8451 170A                                          l8443 167E  
                                        l8435 159E                                          l8427 1564  
                                        l8419 1532                                          l8371 130C  
                                        l8355 1256                                          l8339 119E  
                                        l8347 11E8                                          l6907 46F2  
                                        l6915 4726                                          l9147 4454  
                                        l9139 4444                                          l9155 5CA8  
                                        l6677 5AD2                                          l6685 5822  
                                        l6669 5B64                                          l6693 555E  
                                        l6749 505A                                          l7901 2888  
                                        l6597 50FE                                          l9093 42E2  
                                        l9085 42A2                                          l9077 420A  
                                        l7581 268A                                          l7573 262E  
                                        l7565 25EA                                          l7549 2596  
                                        l7557 25B4                                          l7493 23FA  
                                        l7485 23C6                                          l7469 235C  
                                        l7477 236C                                          l7661 3EB8  
                                        l7653 3E8E                                          l7645 3E20  
                                        l7637 3DDA                                          l7629 3DA4  
                                        l7389 5084                                          l8293 3180  
                                        l8285 3154                                          l8277 310C  
                                        l8269 3054                                          l7821 2E7A  
                                        l7813 2E1C                                          l7805 2DD8  
                                        l7741 2C08                                          l7733 2BDE  
                                        l7725 2BAE                                          l7717 2B8A  
                                        l7709 2B58                                          l8197 529C  
                                        l8541 1B1C                                          l8533 1AE8  
                                        l8525 1AA2                                          l8517 1A0C  
                                        l8509 19DC                                          l8461 17A4  
                                        l8453 173E                                          l8445 16B2  
                                        l8437 15AE                                          l8429 157C  
                                        l8381 13DE                                          l8373 1340  
                                        l8357 1272                                          l8349 120E  
                                        l8365 12BC                                          l8621 4A10  
                                        l8613 49B2                                          l6917 473C  
                                        l6909 4704                                          l9149 5C94  
                                        l6679 5ADE                                          l6687 5836  
                                        l6695 5572                                          l7911 28F6  
                                        l7903 2898                                          l6599 5114  
                                        l8711 5930                                          l9095 42EE  
                                        l9087 42B6                                          l9079 420A  
                                        l7591 26C4                                          l7583 26AA  
                                        l7575 2668                                          l7559 25C2  
                                        l7495 23FC                                          l7487 23DC  
                                        l7479 2370                                          l7399 222A  
                                        l7663 3ED8                                          l7655 3E90  
                                        l7647 3E2E                                          l7639 3DE6  
                                        l7671 408A                                          l8287 315A  
                                        l8295 3192                                          l8279 3126  
                                        l7831 2EC8                                          l7823 2E94  
                                        l7815 2E46                                          l7743 2C1E  
                                        l7735 2BEE                                          l7727 2BBC  
                                        l7719 2B92                                          l8199 535C  
                                        l8551 1B5E                                          l8543 1B2C  
                                        l8535 1AFA                                          l8527 1AAA  
                                        l8519 1A10                                          l8471 187C  
                                        l8463 17D8                                          l8455 1752  
                                        l8439 15C2                                          l8447 16B8  
                                        l8391 144A                                          l8375 1346  
                                        l8383 1412                                          l8367 12D6  
                                        l8359 128A                                          l8623 4A42  
                                        l8615 49C0                                          l8607 497C  
                                        l8703 21E4                                          l8631 1D08  
                                        l6919 475E                                          l6689 583A  
                                        l6697 5576                                          l7921 2994  
                                        l7913 2906                                          l7905 28A8  
                                        l7841 26EC                                          l8713 58FC  
                                        l9097 430A                                          l9089 42BA  
                                        l7593 26CA                                          l7585 26AE  
                                        l7569 2614                                          l7577 266A  
                                        l7497 2406                                          l7489 23E8  
                                        l8721 3C4E                                          l7657 3EA2  
                                        l7649 3E40                                          l7681 40FA  
                                        l7673 40AA                                          l8289 316C  
                                        l7833 2ECA                                          l7825 2EB0  
                                        l7809 2E02                                          l7817 2E4A  
                                        l7761 2C72                                          l7745 2C2E  
                                        l7753 2C4E                                          l7737 2BF0  
                                        l7729 2BBE                                          l8561 1B8E  
                                        l8553 1B6C                                          l8545 1B3E  
                                        l8537 1B08                                          l8481 18D2  
                                        l8529 1AAE                                          l8465 1830  
                                        l8473 1880                                          l8457 1784  
                                        l8449 16D6                                          l8393 1452  
                                        l8385 1422                                          l8377 13A2  
                                        l8617 49DC                                          l8609 49A6  
                                        l8705 2212                                          l8641 1D88  
                                        l8633 1D36                                          l9281 33E6  
                                        l6699 5590                                          l7931 29EA  
                                        l7923 29B2                                          l7915 2926  
                                        l7907 28C6                                          l7851 272A  
                                        l7843 26FA                                          l9099 4312  
                                        l7595 26D8                                          l7587 26BC  
                                        l7579 267A                                          l7499 2428  
                                        l8627 58C8                                          l9283 3C8A  
                                        l8723 3C56                                          l8731 3CB8  
                                        l8715 3BCE                                          l7659 3EA8  
                                        l7691 4172                                          l7683 4102  
                                        l7675 40AE                                          l7667 4078  
                                        l7827 2EB4                                          l7819 2E64  
                                        l7771 2CC4                                          l7763 2C8C  
                                        l7755 2C5E                                          l7747 2C36  
                                        l7739 2BF8                                          l8571 1BF0  
                                        l8563 1BB4                                          l8555 1B74  
                                        l8547 1B46                                          l8539 1B18  
                                        l8491 1978                                          l8483 1936  
                                        l8475 1890                                          l8467 1834  
                                        l8459 1794                                          l8395 146C  
                                        l8387 1426                                          l8379 13D6  
                                        l8299 105A                                          l8619 49FE  
                                        l8651 1E56                                          l8643 1D98  
                                        l8635 1D48                                          l6891 4672  
                                        l8811 3952                                          l8803 38B4  
                                        l7941 2A54                                          l7933 29EE  
                                        l7925 29BC                                          l7917 2950  
                                        l7909 28D6                                          l7861 275C  
                                        l7853 273A                                          l7845 2708  
                                        l7597 26DA                                          l7589 26C2  
                                        l9285 37B4                                          l8629 5894  
                                        l8741 3D20                                          l8733 3CD4  
                                        l8725 3C62                                          l8717 3C1A  
                                        l7693 4184                                          l7685 4116  
                                        l7677 40BC                                          l7669 407C  
                                        l7829 2EC2                                          l7781 2D20  
                                        l7773 2CD4                                          l7765 2C9C  
                                        l7757 2C5E                                          l7749 2C3A  
                                        l8581 1C36                                          l8573 1C0A  
                                        l8565 1BD0                                          l8557 1B7C  
                                        l8549 1B56                                          l8485 1944  
                                        l8493 1980                                          l8477 18A2  
                                        l8469 1868                                          l8389 1438  
                                        l8397 1484                                          l8661 1F2A  
                                        l8653 1E84                                          l8645 1DD8  
                                        l8637 1D58                                          l6893 468A  
                                        l8821 39A0                                          l8813 3966  
                                        l8805 38FA                                          l9277 38C8  
                                        l8901 3FB2                                          l7951 2AB6  
                                        l7943 2A60                                          l7935 29FC  
                                        l7927 29CA                                          l7919 2986  
                                        l7871 279C                                          l7863 276A  
                                        l7855 2740                                          l7847 270A  
                                        l8743 3D2C                                          l8735 3CE0  
                                        l8719 3C42                                          l7687 4124  
                                        l7695 418A                                          l7679 40DC  
                                        l7791 2D60                                          l7783 2D22  
                                        l7775 2CE8                                          l7767 2CAC  
                                        l8591 1C88                                          l8583 1C48  
                                        l8575 1C10                                          l8567 1BD8  
                                        l8559 1B88                                          l8495 1994  
                                        l8487 1958                                          l8479 18AE  
                                        l8663 1F4C                                          l8671 1FCE  
                                        l8655 1EE0                                          l8647 1DE8  
                                        l8639 1D5C                                          l6895 4694  
                                        l9279 39DA                                          l8823 39B2  
                                        l8815 397A                                          l8807 390E  
                                        l8903 3FBE                                          l8911 3FEE  
                                        l7961 2B1E                                          l7953 2ACA  
                                        l7945 2A6E                                          l7937 2A2A  
                                        l7929 29DC                                          l7881 27E6  
                                        l7873 27A2                                          l7865 276C  
                                        l7857 2750                                          l7849 271A  
                                        l8745 3D48                                          l8737 3CFC  
                                        l8729 3C76                                          l7697 419A  
                                        l7689 4152                                          l7793 2D6A  
                                        l7785 2D32                                          l7777 2CF6  
                                        l7769 2CBC                                          l8593 1C9A  
                                        l8585 1C4E                                          l8577 1C22  
                                        l8569 1BDE                                          l8497 19A2  
                                        l8489 196A                                          l8681 20DE  
                                        l8673 1FFC                                          l8665 1F5E  
                                        l8649 1E28                                          l8761 5260  
                                        l6897 46A6                                          l8817 398C  
                                        l8809 3922                                          l8921 4058  
                                        l8913 4024                                          l8905 3FD4  
                                        l7963 2B20                                          l7955 2AE4  
                                        l7947 2A98                                          l7891 2842  
                                        l7883 27F6                                          l7875 27C2  
                                        l7867 277C                                          l7859 2756  
                                        l8851 3A96                                          l8843 3A1C  
                                        l8771 4ABC                                          l8763 4A70  
                                        l8747 3D50                                          l8739 3D04  
                                        l8931 5190                                          l7699 41BA  
                                        l7795 2D78                                          l7787 2D44  
                                        l7779 2D02                                          l7971 55F2  
                                        l8595 1CA6                                          l8587 1C54  
                                        l8579 1C2E                                          l8499 19B2  
                                        l8691 21A2                                          l8683 2136  
                                        l8667 1FA2                                          l8659 1F18  
                                        l8755 521C                                          l6899 46B8  
                                        l8923 405C                                          l8915 402C  
                                        l8907 3FD8                                          l7981 4C2E  
                                        l7957 2B00                                          l7965 2B26  
                                        l7949 2A9C                                          l7893 284E  
                                        l7885 2800                                          l7877 27D2  
                                        l7869 278C                                          l8861 3AF0  
                                        l8845 3A2C                                          l8781 4B18  
                                        l8765 4A8C                                          l8773 4ACC  
                                        l8749 3D60                                          l8941 5202  
                                        l8933 51A6                                          l7789 2D5A  
                                        l7797 2D8A                                          l7973 5604  
                                        l8597 1CAE                                          l8693 21B6  
                                        l8677 2084                                          l8757 5224  
                                        l8829 39C6                                          l8925 406E  
                                        l8917 4038                                          l8909 3FDE  
                                        l7991 4C54                                          l7983 4C36  
                                        l7967 2B2A                                          l7959 2B10  
                                        l7895 285A                                          l7887 281A  
                                        l8871 3B54                                          l8863 3AF2  
                                        l8855 3AAA                                          l8847 3A3A  
                                        l8775 4AE8                                          l8783 4B38  
                                        l8767 4AA8                                          l8943 5212  
                                        l8935 51AE                                          l7799 2D98  
                                        l8599 1CC0                                          l8679 2096  
                                        l8687 2162                                          l8759 5232  
                                        l8951 31BC                                          l8791 3846  
                                        l8927 4072                                          l8919 404E  
                                        l7993 4C5C                                          l7985 4C3A  
                                        l7977 4C1C                                          l7897 2868  
                                        l7889 2826                                          l8881 3BAC  
                                        l8873 3B72                                          l8865 3AFE  
                                        l8857 3AB2                                          l8849 3A80  
                                        l8777 4B04                                          l8769 4AB0  
                                        l8937 51B2                                          l8929 518A  
                                        l8689 2190                                          l8697 21C4  
                                        l8785 5BFC                                          l8961 3248  
                                        l8953 31E8                                          l8793 3864  
                                        l7995 4C6E                                          l7987 4C48  
                                        l7979 4C20                                          l7899 2878  
                                        l8883 3BBA                                          l8875 3B74  
                                        l8867 3B3A                                          l8859 3ABE  
                                        l8779 4B0C                                          l8939 51FA  
                                        l8947 5218                                          l8699 21D6  
                                        l8787 5C06                                          l8971 32BC  
                                        l8963 3266                                          l8955 3204  
                                        l8795 3880                                          l8891 3F0A  
                                        l7997 4C76                                          l7989 4C50  
                                        l8885 3BBC                                          l8877 3B78  
                                        l8869 3B46                                          l8981 330A  
                                        l8973 32C8                                          l8965 3282  
                                        l8957 3220                                          l8797 388C  
                                        l8893 3F10                                          l7999 4C7E  
                                        l8879 3B9C                                          l8991 3362  
                                        l8983 331C                                          l8975 32D0  
                                        l8967 329A                                          l8959 3238  
                                        l8799 38A8                                          l8895 3F40  
                                        STR_1 1030                                          STR_2 103C  
                                        l8993 3366                                          l8985 3332  
                                        l8977 32E2                                          l8969 32AA  
                                        l8897 3F62                                          l8889 3EFA  
                                        STR_3 1023                                          STR_4 1001  
                                        l8995 336E                                          l8987 3348  
                                        l8979 32F4                                          l8899 3F96  
                                        STR_5 1015                                          STR_6 1046  
                                        l8997 3380                                          l8989 335C  
                                        STR_7 104E                                          l8999 339E  
                                        _LATA 003FBA                                          _LATB 003FBB  
                                        _LATC 003FBC                                          _LATD 003FBD  
                                        _LATE 003FBE                                          _T2PR 003FAB  
                                        _T4PR 003F9F                                          u6140 4470  
                                        _PMD0 0039C0                                          u2845 54FC  
                                        u6141 446C                                          _PMD1 0039C1  
                                        u2846 54FE                                          u6150 4492  
                                        u6310 5114                                          _PMD2 0039C2  
                                        u6151 448E                                          u6311 5110  
                                        _PMD3 0039C3                                          u6160 44CC  
                                        u6320 5124                                          u7200 5084  
                                        u8000 2E94                                          _PMD4 0039C4  
                                        u6161 44C8                                          u6321 5120  
                                        u7201 5080                                          u8001 2E90  
                                        _PMD5 0039C5                                          u6170 44EE  
                                        u6090 59EA                                          u7210 50AC  
                                        u8010 2EC2                                          _PMD6 0039C6  
                                        u6171 44EA                                          u6091 59E6  
                                        u7211 50A8                                          u8011 2EBE  
                                        _PMD7 0039C7                                          u8100 2970  
                                        u8020 2708                                          u6180 4516  
                                        u7300 231E                                          u7220 50E2  
                                        u8021 2704                                          u6181 4512  
                                        u7301 231A                                          u7221 50DE  
                                        u8110 29CA                                          u8030 271A  
                                        u6190 4548                                          u7310 232C  
                                        u7230 2246                                          u8111 29C6  
                                        u8031 2716                                          u6191 4544  
                                        u7311 2328                                          u7231 2242  
                                        u8200 2B1E                                          u8120 29EA  
                                        u8040 272A                                          u7400 246A  
                                        u7320 239A                                          u7240 2258  
                                        u7160 53CE                                          u9000 123E  
                                        u8201 2B1A                                          u8121 29E6  
                                        u8105 2966                                          u8041 2726  
                                        u7401 2466                                          u7321 2396  
                                        u7241 2254                                          u7161 53CA  
                                        u9001 1238                                          u8210 4C2E  
                                        u8130 29FC                                          u8050 276A  
                                        u7410 2478                                          u7330 23B2  
                                        u7250 2268                                          u7170 53DE  
                                        u9010 1240                                          u8211 4C2A  
                                        u8131 29F8                                          u8051 2766  
                                        u7411 2474                                          u7331 23AC  
                                        u7251 2264                                          u7171 53DA  
                                        u8220 4C48                                          u8140 2A2A  
                                        u8060 277C                                          u7500 25C2  
                                        u7420 2496                                          u7340 23B4  
                                        u7260 22AA                                          u7180 540E  
                                        u8300 4EC6                                          u9100 14A8  
                                        u9020 1256                                          u6700 471A  
                                        u8221 4C44                                          u8141 2A26  
                                        u8061 2778                                          u7501 25BE  
                                        u7421 2492                                          u7261 22A6  
                                        u7181 540A                                          u8301 4EC2  
                                        u9101 14A4                                          u9021 1252  
                                        u6701 4716                                          u8230 4C6E  
                                        u8150 2A40                                          u8070 278C  
                                        u7510 25D4                                          u7430 24CE  
                                        u7350 23DC                                          u7270 22C0  
                                        u7190 5072                                          u8310 4EDC  
                                        u9110 14C4                                          u9030 1308  
                                        u6710 473C                                          u8231 4C6A  
                                        u8151 2A3C                                          u8071 2788  
                                        u7511 25D0                                          u7431 24CA  
                                        u7351 23D8                                          u7271 22BC  
                                        u7191 506E                                          u8311 4ED8  
                                        u9111 14C0                                          u9031 1304  
                                        u6711 4738                                          u8240 4C8C  
                                        u8160 2A54                                          u8080 27C2  
                                        u7600 26BC                                          u7520 25EA  
                                        u7440 2514                                          u7360 23FA  
                                        u7280 22D2                                          u8400 4874  
                                        u8320 4F00                                          u9200 173E  
                                        u9120 14FA                                          u9040 139E  
                                        u6720 475A                                          u6640 468A  
                                        u8241 4C88                                          u8161 2A50  
                                        u8081 27BE                                          u7601 26B8  
                                        u7521 25E6                                          u7441 2510  
                                        u7361 23F6                                          u7281 22CE  
                                        u8401 4870                                          u8321 4EFC  
                                        u9201 173A                                          u9121 14F6  
                                        u9041 139A                                          u6721 4756  
                                        u6641 4686                                          u8250 4CA8  
                                        u8170 2A6E                                          u8090 27D2  
                                        u7610 26D8                                          u7530 2600  
                                        u7450 254A                                          u7370 241A  
                                        u7290 22E2                                          u8330 4F40  
                                        u8410 5800                                          u9210 1784  
                                        u9130 1520                                          u9050 1412  
                                        u6650 46A6                                          u8251 4CA4  
                                        u8171 2A6A                                          u8091 27CE  
                                        u7611 26D4                                          u7531 25FC  
                                        u7451 2546                                          u7371 2416  
                                        u7291 22DE                                          u8331 4F3C  
                                        u8411 57FC                                          u9211 1780  
                                        u9131 151C                                          u9051 140E  
                                        u6651 46A2                                          u8260 4CCE  
                                        u8180 2AB6                                          u8420 4582  
                                        u7540 2614                                          u7460 255A  
                                        u7380 2428                                          u7700 3E2E  
                                        u7620 567C                                          u8500 4D10  
                                        u8340 4F7E                                          u9300 1994  
                                        u9220 1794                                          u9140 1532  
                                        u9060 1438                                          u6660 46B8  
                                        u8261 4CCA                                          u8181 2AB2  
                                        u8421 457E                                          u7541 2610  
                                        u7461 2556                                          u7381 2424  
                                        u7701 3E2A                                          u7621 5678  
                                        u8501 4D0C                                          u8341 4F7A  
                                        u9301 1990                                          u9221 1790  
                                        u9141 152E                                          u9061 1434  
                                        u6661 46B4                                          u8190 2AE4  
                                        u8430 45B6                                          u7550 262E  
                                        u7470 2586                                          u7390 2438  
                                        u7710 3E6E                                          u7630 572E  
                                        u8510 4D66                                          u8270 4E74  
                                        u8350 4FB2                                          u9310 19A2  
                                        u9230 1830                                          u9150 1540  
                                        u9070 144A                                          u6670 46DA  
                                        u8191 2AE0                                          u7551 262A  
                                        u7471 2582                                          u7391 2434  
                                        u7711 3E6A                                          u7631 572A  
                                        u8511 4D62                                          u8271 4E70  
                                        u8351 4FAE                                          u9311 199E  
                                        u9231 182C                                          u9151 153C  
                                        u9071 1446                                          u6671 46D6  
                                        u8440 45E4                                          u7560 2668  
                                        u7480 2596                                          u8360 47A8  
                                        u7720 3EB8                                          u8520 4D74  
                                        u8280 4E8E                                          u7800 2B68  
                                        u8600 496A                                          u7640 57E2  
                                        u9400 1C0A                                          u9320 19FA  
                                        u9240 187C                                          u9160 1556  
                                        u9080 146C                                          u6680 46F2  
                                        u8441 45E0                                          u7561 2664  
                                        u7481 2592                                          u8361 47A4  
                                        u7721 3EB4                                          u8521 4D70  
                                        u8281 4E8A                                          u7801 2B64  
                                        u7641 57DC                                          u9401 1C06  
                                        u9321 19F6                                          u9241 1878  
                                        u9161 1552                                          u9081 1468  
                                        u6681 46EE                                          u8450 45F8  
                                        u7570 267A                                          u7490 25B2  
                                        u8370 47E6                                          u7730 408A  
                                        u8530 56DC                                          u8290 4EA8  
                                        u7810 2B78                                          u8610 52E2  
                                        u7650 57E4                                          u9410 1C22  
                                        u9330 1ACC                                          u9250 18A2  
                                        u9170 1564                                          u9090 1492  
                                        u6690 4704                                          u8451 45F4  
                                        u8435 45AC                                          u7571 2676  
                                        u7491 25AE                                          u8371 47E2  
                                        u7731 4086                                          u8531 56D8  
                                        u8291 4EA4                                          u7811 2B74  
                                        u9411 1C1E                                          u9331 1AC8  
                                        u9251 189E                                          u9171 1560  
                                        u9091 148E                                          u6691 4700  
                                        u8460 4620                                          u7580 268A  
                                        u8380 4804                                          u7660 3D84  
                                        u7740 40BC                                          u7900 2D44  
                                        u7820 2BBC                                          u8540 48BE  
                                        u8700 3526                                          u8620 52F4  
                                        u9420 1C82                                          u9340 1AE8  
                                        u9260 1944                                          u9180 158E  
                                        u8461 461C                                          u7581 2686  
                                        u8381 4800                                          u7661 3D80  
                                        u7741 40B8                                          u7901 2D40  
                                        u7821 2BB8                                          u8701 3522  
                                        u8621 52F0                                          u9421 1C7C  
                                        u9341 1AE4                                          u9261 1940  
                                        u9181 158A                                          u8470 4640  
                                        u7590 26AA                                          u8390 4824  
                                        u7670 3DB6                                          u7750 40FA  
                                        u7910 2D5A                                          u7830 2BCE  
                                        u8550 48DC                                          u8710 354A  
                                        u8630 538C                                          u9430 1C84  
                                        u9350 1AFA                                          u9270 1958  
                                        u9190 16D6                                          u8471 463C  
                                        u7591 26A6                                          u8391 4820  
                                        u7671 3DB2                                          u7751 40F6  
                                        u7911 2D56                                          u7831 2BCA  
                                        u8551 48D8                                          u8631 5386  
                                        u9351 1AF6                                          u9271 1954  
                                        u9191 16D2                                          u8480 4650  
                                        u7760 4124                                          u8800 2F6A  
                                        u7920 2D78                                          u7840 2BDE  
                                        u8560 4904                                          u8720 3566  
                                        u8640 538E                                          u9440 1C9A  
                                        u9360 1B08                                          u9280 196A  
                                        u9600 2080                                          u9520 1D36  
                                        u8481 464C                                          u9505 58EC  
                                        u7681 3DE0                                          u7761 4120  
                                        u8801 2F66                                          u7921 2D74  
                                        u7841 2BDA                                          u8561 4900  
                                        u8545 48B4                                          u8721 3562  
                                        u8617 52D4                                          u9441 1C96  
                                        u9361 1B04                                          u9281 1966  
                                        u9521 1D32                                          u7690 3E04  
                                        u7770 4152                                          u8490 4CEE  
                                        u8810 2F98                                          u7930 2D98  
                                        u7850 2C1E                                          u8570 492E  
                                        u8730 35BA                                          u8650 53A4  
                                        u9370 1B3E                                          u9290 1978  
                                        u9450 49A6                                          u9610 2096  
                                        u9530 1D98                                          u9515 58B8  
                                        u7691 3E00                                          u7771 414E  
                                        u8491 4CEA                                          u8811 2F94  
                                        u7931 2D94                                          u7851 2C1A  
                                        u8571 492A                                          u8715 3540  
                                        u8651 53A0                                          u9371 1B3A  
                                        u9291 1974                                          u9451 49A2  
                                        u9611 2092                                          u9531 1D94  
                                        u9700 4A8C                                          u7780 419A  
                                        u8900 316C                                          u8820 2FA6  
                                        u7940 2DAA                                          u7860 2C5E  
                                        u8740 35D6                                          u8660 3466  
                                        u9380 1B6C                                          u9460 49DC  
                                        u9620 2190                                          u9540 1DE8  
                                        u9701 4A88                                          u7781 4196  
                                        u8901 3168                                          u8821 2FA2  
                                        u7941 2DA6                                          u7861 2C5A  
                                        u8741 35D2                                          u9381 1B68  
                                        u9461 49D8                                          u9621 218C  
                                        u9541 1DE4                                          u9710 4AA8  
                                        u8830 30D4                                          u7950 2DD8  
                                        u7870 2CD4                                          u7790 2B56  
                                        u8590 4968                                          u8750 3612  
                                        u8670 3496                                          u9390 1BF0  
                                        u8910 1082                                          u9470 49FE  
                                        u9550 1E56                                          u9711 4AA4  
                                        u8831 30D0                                          u7951 2DD4  
                                        u7871 2CD0                                          u7791 2B52  
                                        u8591 4962                                          u8751 360E  
                                        u8735 35B0                                          u8671 3492  
                                        u9391 1BEC                                          u8911 107E  
                                        u9471 49FA                                          u9551 1E52  
                                        u9800 3A96                                          u9720 4AE8  
                                        u8840 30F2                                          u8760 2F08  
                                        u7960 2DEE                                          u7880 2CF6  
                                        u8680 34B8                                          u8920 10D2  
                                        u9480 4A10                                          u9560 1E84  
                                        u9801 3A92                                          u9721 4AE4  
                                        u8841 30EE                                          u8761 2F02  
                                        u7961 2DEA                                          u7881 2CF2  
                                        u8585 4940                                          u8681 34B4  
                                        u8665 345C                                          u8921 10CE  
                                        u9481 4A0C                                          u9561 1E80  
                                        u9810 3AEC                                          u9730 4B04  
                                        u9650 3CD4                                          u8850 310C  
                                        u8770 2F0A                                          u7970 2E02  
                                        u7890 2D20                                          u8930 10E0  
                                        u9490 4A42                                          u9570 1F2A  
                                        u9811 3AE8                                          u9635 5954  
                                        u9731 4B00                                          u9651 3CD0  
                                        u8851 3108                                          u7971 2DFE  
                                        u7891 2D1C                                          u8931 10DC  
                                        u9491 4A3E                                          u9571 1F26  
                                        u9820 3B36                                          u9660 3CFC  
                                        u8860 3126                                          u8780 2F20  
                                        u7980 2E1C                                          u8940 10F2  
                                        u9580 1FFC                                          u9740 3880  
                                        u9900 406E                                          u9821 3B32  
                                        u9645 5920                                          u9661 3CF8  
                                        u8861 3122                                          u8781 2F1C  
                                        u7981 2E18                                          u8941 10EE  
                                        u9581 1FF8                                          u9741 387C  
                                        u9901 406A                                          u9830 3B54  
                                        u9670 3D20                                          u9910 51A6  
                                        u8870 3134                                          u8790 2F4E  
                                        u7990 2E64                                          u8950 113A  
                                        u9590 207E                                          u9750 38A8  
                                        u9831 3B50                                          u9671 3D1C  
                                        u9911 51A2                                          u8871 3130  
                                        u8791 2F4A                                          u7991 2E60  
                                        u8695 34CC                                          u8951 1136  
                                        u9591 2078                                          u9751 38A4  
                                        u9840 3B64                                          u9680 3D48  
                                        u9920 51FA                                          u8880 3146  
                                        u8696 34D6                                          u8960 116A  
                                        u9760 398C                                          u9841 3B60  
                                        u9681 3D44                                          u9921 51F6  
                                        u8881 3142                                          u8697 34E6  
                                        u8961 1164                                          u9761 3988  
                                        u9850 3B72                                          u8890 3154  
                                        u8970 116C                                          u9690 5282  
                                        u9930 3204                                          u9770 39B2  
                                        u9851 3B6E                                          u8891 3150  
                                        u9691 527E                                          u9931 3200  
                                        u9771 39AE                                          u9860 3BAC  
                                        u9780 3A2C                                          u8980 1182  
                                        u9940 3220                                          u9861 3BA8  
                                        u9781 3A28                                          u8981 117E  
                                        u9941 321C                                          u9870 3BBA  
                                        u9790 3A3A                                          u8990 120E  
                                        u9950 3238                                          u9871 3BB6  
                                        u9791 3A36                                          u8991 120A  
                                        u9951 3234                                          u9960 3266  
                                        u9880 3FEE                                          u9961 3262  
                                        u9881 3FEA                                          u9970 3282  
                                        u9890 4024                                          _TMR2 003FAA  
                                        u9971 327E                                          u9891 4020  
                                        u9980 329A                                          _TMR4 003F9E  
                                        u9981 3296                                          u9990 32BC  
                                        u9991 32B8                                          _WPUA 003A41  
                                        _WPUB 003A51                                          _WPUC 003A61  
                                        _WPUD 003A71                                          _WPUE 003A81  
                         ?_UART1_Transmit_ISR 0001                                          abs@a 0026  
                                        _dbuf 0134                                          _main 5C94  
                                        _dtoa 2ED6                                          _loop 4328  
                                        _prec 003C                                          _nout 0128  
                                        pad@i 002D                                          pad@p 002A  
                                        fsr1h 003FE2                                          fsr2h 003FDA  
                                        indf1 003FE7                                          indf2 003FDF  
                                        fsr1l 003FE1                                          pad@w 002F  
                                        fsr2l 003FD9                                 ___fpclassifyf 487E  
                                        prodh 003FF4                                          prodl 003FF3  
                                        start 00AE                               _timer5ReloadVal 018A  
                             ___fldiv@new_exp 0025                               _TMR3_Initialize 5822  
                             _PWM5_Initialize 5D36                             ??_CLC3_Initialize 0014  
               ??_UART1_SetTxInterruptHandler 0016                                  _tolower$3674 0020  
                  ??_TMR4_SetInterruptHandler 0016                             _UART1_rx_vect_isr 5778  
                                ___param_bank 000000                    __end_of_PWM5_LoadDutyValue 58FC  
                          ?_UART1_rx_vect_isr 0001                                         ??_abs 0028  
                                       ??_pad 002C                __size_of_OSCILLATOR_Initialize 0018  
                        ??_UART1_Transmit_ISR 0011                 __end_of_OSCILLATOR_Initialize 5D66  
                               ___fltol@sign1 0081                               __end_of___aldiv 456A  
                             __end_of___aodiv 3EFA                                         _ADCAP 003EF5  
                                       _ADACT 003EFE                       __end_of_CCP3_Initialize 5B1E  
                             __end_of___fladd 26EC                                         ?_main 0001  
                                       ?_dtoa 0060                                         _ADCLK 003EFF  
                             __end_of___aomod 41DC                                         _ADCNT 003EEB  
                                       _ADPCH 003EF1                               __end_of___fldiv 2ED6  
                                       _ADREF 003EFD                               __end_of___awdiv 4CE0  
                             __end_of___flneg 5822                                         ?_loop 0001  
                                       STR_10 104A                                         STR_11 1052  
                                       STR_14 1056                                         STR_16 1056  
                             __end_of___awmod 4F12                                         _ADRPT 003EEC  
                      ??_CCP4_DefaultCallBack 0007                               __end_of___flmul 2B3C  
                    TMR5_ReadTimer@readValLow 0010                               __end_of___flsub 563A  
                             __end_of___fltol 4672                                         u10000 32E2  
                                       u10001 32DE                                         u10010 32F4  
                                       u10011 32F0                                         u10100 3678  
                                       u10020 330A                                         u10101 3674  
                                       u10021 3306                                         u10110 3696  
                                       u10030 331C                                         u10111 3692  
                                       u10031 3318                                         u10120 36D0  
                                       u10040 3332                                         u10200 4352  
                                       u10121 36CC                                         u10041 332E  
                                       u10201 434E                                         u10130 36EA  
                                       u10050 3348                                         u10210 4364  
                                       u10131 36E6                                         u10051 3344  
                                       u10211 4360                                         u10140 3810  
                                       u10060 3380                                         u10220 43B4  
                                       u10141 380C                                         u10061 337C  
                                       u10221 43B0                                         u10150 3834  
                                       u10070 339E                                         u10230 43E8  
                                       u10151 3830                                         u10071 339A  
                                       u10231 43E4                                         u10160 429A  
                                       u10080 33C2                                         u10240 43FA  
                                       u10161 4296                                         u10081 33BE  
                                       u10241 43F6                                         u10170 42B6  
                                       u10090 3658                                         u10250 4432  
                                       u10171 42B2                                         u10091 3654  
                                       u10251 442E                                         u10180 42E2  
                                       u10181 42DE                                         u10190 430A  
                                       u10191 4306                               ___awdiv@divisor 0016  
                                       _U1P1H 003DED                                         _U1P2H 003DEF  
                                       _U1P1L 003DEC                                         _U1P3H 003DF1  
                                       _T3CLK 003FA9                                         _T2CON 003FAC  
                                       _U1P2L 003DEE                                         _U1P3L 003DF0  
                                       _T3CON 003FA6                                         _T5CLK 003F9D  
                                       _T4CON 003FA0                                         _T2HLT 003FAD  
                                       _T5CON 003F9A                                         _T4HLT 003FA1  
                                       _T2TMR 003FAA                                         _U1UIR 003DF8  
                                       i1l330 57AA                                         _T2RST 003FAF  
                                       _U1RXB 003DE8                                         i1l324 576E  
                                       i1l333 56BC                                         i1l350 5DF8  
                                       i1l343 4E60                                         i1l336 56C0  
                                       i1l353 5DF6                                         _U1TXB 003DEA  
                                       i1l347 5BCE                                         i1l356 5DEC  
                                       _T4TMR 003F9E                                         _T4RST 003FA3  
                                       i2l409 5DFC                                         i1l692 5B4A  
                                       i2l534 5BFA                                         i2l438 5A90  
                                       i2l446 5996                                         i2l552 5A30  
                                       i1l688 588C                                         i2l529 5C92  
                                       i2l537 5D82                                         i1l698 5DFA  
                                       i2l476 5AC0                                         i2l558 5CD0  
                                       i2l487 59CA                           ??_UART1_rx_vect_isr 0012  
                                       i2l863 54C6                                         i2l856 55F0  
                                       i2l868 5C4A                               ___awdiv@counter 0018  
                                       _OSCEN 0039DD                                  vfpfcnvrt@fmt 00C9  
                                       _TMR3H 003FA5                                         _TMR5H 003F99  
                                       _TMR3L 003FA4                                         _TMR5L 003F98  
                                       _TRISA 003FC2                                         _TRISB 003FC3  
                                       _TRISC 003FC4                                         _TRISD 003FC5  
                                       _TRISE 003FC6                                   _Default_ISR 5DFC  
                             _TMR4_Initialize 5B4C                               _PWM6_Initialize 5D1E  
                           _UART1_tx_vect_isr 573C                              __end_of_TMR4_ISR 5894  
                     setSteering@steeringMode 001E                                         _delay 00F9  
                                       _flags 003E                                         _fputc 5060  
                                       _fputs 563A                         __size_of_calcMotorPow 014C  
                          ?_UART1_tx_vect_isr 0001                                         pad@fp 0026  
                                       _width 003A                                         _putch 5D84  
                                       dtoa@d 0062                                         dtoa@i 007A  
                                       dtoa@n 0072                                         dtoa@p 006C  
                                       dtoa@s 0070                                         dtoa@w 006E  
                            ?_SMT1_Initialize 0001                               __end_of_isupper 57EA  
                                       pclath 003FFA                                         tablat 003FF5  
                                 _BatteryVolt 00E5                         __size_of_calcSteering 01D4  
                                       status 003FD8           __end_of_UART1_SetRxInterruptHandler 5DA2  
                 _UART1_SetRxInterruptHandler 5D98                       __end_of_CCP4_Initialize 5AF0  
                              ?___fpclassifyf 0014                               __end_of_tolower 53BC  
                             __end_of_strncmp 4A70           fp__UART1_DefaultFramingErrorHandler 0000  
    __end_of_UART1_DefaultFramingErrorHandler 5DFA     __size_of_UART1_DefaultFramingErrorHandler 0002  
          ??_UART1_DefaultFramingErrorHandler 0012             ?_UART1_DefaultFramingErrorHandler 0001  
            _UART1_DefaultFramingErrorHandler 5DF8                           ??_UART1_tx_vect_isr 0011  
                   __end_of_UART1_rx_vect_isr 57B2                               _TMR5_Initialize 555E  
                             _PWM7_Initialize 5D06                               __initialization 52F6  
                       TMR5_ReadTimer@readVal 000D                              ?_CCP3_CaptureISR 0001  
                                __end_of_main 5CB4                                  __end_of_dtoa 31BC  
                                __end_of_loop 445E                   ??_UART1_DefaultErrorHandler 0012  
                     __end_of_TMR2_Initialize 5CEE                                  ?_UART1_Write 0001  
                                      ??_main 003A                                        ??_dtoa 0031  
                                      ??_loop 003A                                 __activetblptr 000003  
                                _calcMotorPow 41DC          __size_of_UART1_SetTxInterruptHandler 000A  
                   __end_of_UART1_tx_vect_isr 5776                               _PWM8_Initialize 5CEE  
                            _UART1_Initialize 4FBC                                  _calcSteering 3846  
                            ?_CCP4_CaptureISR 0001                                        _ADACCH 003EE9  
                                      _ADACCL 003EE8                                        _ADACCU 003EEA  
                                      _ADACQH 003EF4                                        _ADACQL 003EF3  
                                      _ADCON0 003EF8                                        _ADCON1 003EF9  
                                      _ADCON2 003EFA                                        _ADCON3 003EFB  
                                      _ADERRH 003EE3                                        _ADERRL 003EE2  
                                      ?_fputc 0016                                        _ADLTHH 003EDF  
                                      _ADLTHL 003EDE                                        ?_fputs 001F  
                                      _ADRESH 003EF0                                        _ADRESL 003EEF  
                                      _ADPREH 003EF7                                        _ADPREL 003EF6  
                                      _CCPR3H 003F75                                        _CCPR4H 003F71  
                                      _CCPR3L 003F74                                        _CCPR4L 003F70  
                                      _ADSTAT 003EFC                                        _ADUTHH 003EE1  
                            ___awdiv@dividend 0014                                        _ADUTHL 003EE0  
                          _PWM8_LoadDutyValue 58FC                                        _ANSELA 003A40  
                                      ?_putch 0001                                        _ANSELB 003A50  
                                      _ANSELC 003A60                                        _ANSELD 003A70  
                                      _ANSELE 003A80                                        _RB1I2C 003A5A  
                                      _RB2I2C 003A5B                                        _RD0I2C 003A7A  
                                      _U1CON0 003DF2                                        _U1CON1 003DF3  
                                      _U1CON2 003DF4                                        _RC3I2C 003A6A  
                                      _RD1I2C 003A7B                                        _T3GATE 003FA8  
                                      _RC4I2C 003A6B                                        _U1BRGH 003DF6  
                                      _U1FIFO 003DF7                                        _T3GCON 003FA7  
                                      _U1BRGL 003DF5                                        _T5GATE 003F9C  
                                      _T5GCON 003F9B                                        _RA0PPS 003A00  
                                      _RA1PPS 003A01                                        _RA3PPS 003A03  
                                      _RA4PPS 003A04                                        _RB3PPS 003A0B  
                                      _T5GPPS 003AC9                                        i1l1243 5DF2  
                                      _ODCONA 003A42                                        _ODCONB 003A52  
                                      _ODCONC 003A62                                        _ODCOND 003A72  
                                      _ODCONE 003A82                       __end_of_PWM5_Initialize 5D4E  
                     __end_of_TMR3_Initialize 585A                                        i1l7011 5DEE  
                                      i1l7211 5884                                        i1l7205 5862  
                                      i1l7061 56A0                                        i1l7127 5B1E  
                                      i1l7207 5866                                        i1l7071 4DB2  
                                      i1l7063 56A2                                        i1l7129 5B32  
                                      i1l7209 5880                                        i1l7081 4E0A  
                                      i1l7073 4DC2                                        i1l7065 56B2  
                                      i1l7057 567E                                        i1l7083 4E22  
                                      i1l7075 4DD2                                        i1l7067 56B6  
                                      i1l7059 568E                                        i1l7085 4E3E  
                                      i1l7077 4DEA                                        i1l7069 4DA2  
                                      i1l7181 5742                                        i1l7087 4E5C  
                                      i1l7079 4DFA                                        i1l7183 5756  
                                      i1l6481 5BA4                                        i1l7185 577E  
                                      i1l6483 5BB6                                        i1l7187 5792  
                                      i1l6485 5BB8                                        i1l6487 5BC8  
                                      i1l6751 5DE8                                        i1l6489 5BCC  
                                      i2l7101 5AAC                                        i2l7111 5CCC  
                                      i2l7103 5ABA                                        i2l7105 5CB4  
                                      i2l7201 5A18                                        _INLVLA 003A44  
                                      _INLVLB 003A54                                        i2l7107 5CC0  
                                      _INLVLC 003A64                                        _INLVLD 003A74  
                                      i2l7221 55DE                                        i2l7213 55A8  
                                      i2l6501 5BE0                                        i2l7109 5CC8  
                                      _INLVLE 003A84                                        i2l7231 54B4  
                                      i2l7223 5474                                        i2l7215 55AC  
                                      i2l6503 5BE4                                        i2l7233 5C24  
                                      i2l7225 5478                                        i2l7217 55BC  
                                      i2l6505 5BEA                                        i2l7235 5C28  
                                      i2l7227 5492                                        i2l7219 55CC  
                                      i2l6507 5BF0                                        i2l7091 5A70  
                                      i2l7229 54A2                                        i2l6509 5BF4  
                                      i2l7093 5A7C                                        i2l7095 5A8A  
                                      i2l7191 5974                                        i2l7097 5A92  
                                      i2l7193 5998                                        i2l7089 5A62  
                                      i2l7099 5AA0                                        i2l7195 59A8  
                                      i2l7197 5A00                                        i2l7189 5964  
                                      i2l7199 5A04                                        i2l6753 5C70  
                                      i2l6497 5BD0                                        i2l6761 5D76  
                                      i2l6755 5C7E                                        i2l6499 5BDE  
                                      i2l6757 5C8A                                  ?_setSteering 001C  
                                      _OSCFRQ 0039DF                              __end_of_actSpeed 518A  
                                      _SMT1PR 003F1B                         _UART1_SetErrorHandler 5DB6  
                            __end_of___xxtofl 3BCE                           ?_PWM8_LoadDutyValue 0014  
                            __end_of_getCurve 341E                      __end_of_CCP3_SetCallBack 5DE8  
                                _CCPTMRS0bits 003F5E                                  _CCPTMRS1bits 003F5F  
                                vfprintf@cfmt 00E3                                        ___flge 4778  
                                      ___fleq 4F12                                     ??___aldiv 001C  
                                   ??___aodiv 0024                                     ??___fladd 0036  
                                   ??___aomod 0024                                     ??___fldiv 001C  
                                   ??___awdiv 0018                                     ??___flneg 0018  
                                   ??___awmod 0018                                     ??___flmul 0032  
                                   ??___flsub 003A                                     ??___fltol 007D  
                                      _efgtoa 105A                                 _CCP3_CallBack 018E  
                                      _floorf 341E                                  ?_TMR5_Reload 0001  
                     __end_of_PWM6_Initialize 5D36                       __end_of_TMR4_Initialize 5B78  
                                      clear_0 532C                                        clear_1 5338  
                                      clear_2 5344                              ___awdiv@quotient 001A  
                                      _motPow 012E                               ___awmod@divisor 0016  
                     fp__CCP3_DefaultCallBack 0000                                        isa$std 000001  
                             ___awmod@counter 0018                                 _CCP4_CallBack 018C  
                                      _smtWay 0120                                        _printf 5BFC  
                                      pad@buf 0028                                        dtoa@fp 0060  
                            ?_CCP3_Initialize 0001                                        _strcpy 528C  
                                      _strlen 5702                          ??_PWM8_LoadDutyValue 0016  
                            __end_of_setMotor 4B52                               _ADCC_Initialize 5418  
        __end_of_TMR4_DefaultInterruptHandler 5DFC         __size_of_TMR4_DefaultInterruptHandler 0002  
                _TMR4_DefaultInterruptHandler 5DFA                                        fputc@c 0016  
                              _PMD_Initialize 5C4C                                        fputs@c 0023  
                                      fputs@i 0024                                        fputs@s 001F  
                             ___fpclassifyf@e 001C                               ___fpclassifyf@u 001E  
                             ___fpclassifyf@x 0014                                  __mediumconst 0000  
                       __end_of_TMR5_GATE_ISR 5A32                                        tblptrh 003FF7  
                                   ??_isupper 0016                                        tblptrl 003FF6  
                                      tblptru 003FF8             __size_of_ADCC_GetSingleConversion 0032  
                            __end_of_vfprintf 528C                     ?_ADCC_GetSingleConversion 0014  
    TMR4_SetInterruptHandler@InterruptHandler 0014  TMR5_SetGateInterruptHandler@InterruptHandler 0014  
 UART1_SetTxInterruptHandler@InterruptHandler 0014   UART1_SetRxInterruptHandler@InterruptHandler 0014  
        __end_of_UART1_SetOverrunErrorHandler 5DAC         __size_of_UART1_SetOverrunErrorHandler 000A  
                _UART1_SetOverrunErrorHandler 5DA2                     _UART1_DefaultErrorHandler 5DE8  
                                   ??_tolower 001C                                     ??_strncmp 001A  
               __size_of_INTERRUPT_Initialize 004C                  __size_of_UART1_RxDataHandler 002C  
                           getCurve@deltaLeft 01AC                                    ___flge@ff1 006D  
                             ??___fpclassifyf 0018                                    ___flge@ff2 0071  
                     __end_of_PWM7_Initialize 5D1E                       __end_of_TMR5_Initialize 55A8  
                                ___xxtofl@arg 0026                                  ___xxtofl@exp 0025  
                           _SYSTEM_Initialize 5514                                  ___xxtofl@val 001C  
                                  ___fleq@ff1 0014                                    ___fleq@ff2 0018  
                                  __accesstop 0060                       __end_of__initialization 5356  
                                  ___flneg@f1 0014                              ?_CCP4_Initialize 0001  
                         setSteering@steering 001C                            ?_SYSTEM_Initialize 0001  
                               ___rparam_used 000001                    __size_of_UART1_rx_vect_isr 003A  
                                  ___fltol@f1 0079                               _TMR5_WriteTimer 5BD0  
                          __size_of_calcSpeed 0212                     calcMotorPow@setSpeedDelta 0085  
                    __end_of_CCP4_SetCallBack 5DDE                                __pcstackCOMRAM 0001  
                       __end_of_TMR4_CallBack 5B4C                                  __pidataBANK0 5DFE  
                                __pidataBANK1 5DF4                            __size_of_checkBatt 0092  
                                ?_startAccell 0001                           ??_SYSTEM_Initialize 0018  
                                   ?_TMR4_ISR 0001                               startAccell@MPow 01A8  
                              ivt0x8_undefint 00AC                                 __end_of_fputc 50F6  
                               __end_of_fputs 567E                               fp__TMR4_10msISR 0000  
                               __end_of_putch 5D8E                              ?_TMR2_Initialize 0001  
                     __end_of_PWM8_Initialize 5D06                        __end_of_PMD_Initialize 5C70  
                 __size_of_PWM7_LoadDutyValue 0034                         CCP3_CaptureISR@module 0003  
                  __size_of_UART1_tx_vect_isr 003A                CCP3_SetCallBack@customCallBack 0014  
                   _UART1_FramingErrorHandler 0194               fp__TMR4_DefaultInterruptHandler 0000  
               ?_TMR4_DefaultInterruptHandler 0001                       fp__CCP4_DefaultCallBack 0000  
                    __size_of_SMT1_PR_ACQ_ISR 004A                             _calcSteering$4172 0027  
                                     ??_fputc 001A                     __end_of_SYSTEM_Initialize 555E  
                                     ??_fputs 0023                               _CLC3_Initialize 5B78  
                                     ??_putch 0015                   PWM7_LoadDutyValue@dutyValue 0014  
                                  __pbssBANK0 00E5                                    __pbssBANK1 0100  
               ?_UART1_SetOverrunErrorHandler 0014                        ?_UART1_SetErrorHandler 0014  
                            ?_PWM5_Initialize 0001                              ?_TMR3_Initialize 0001  
                                  __pnvCOMRAM 004C                      __size_of_SMT1_PW_ACQ_ISR 0054  
                       _TMR4_InterruptHandler 0184                                       IVTBASEH 003FD6  
                                     IVTBASEL 003FD5                                       IVTBASEU 003FD7  
                                     ?___flge 006D                                       ?___fleq 0014  
                                  ??_TMR4_ISR 0013                       __end_of_ADCC_Initialize 5474  
                  __end_of_PWM6_LoadDutyValue 58C8                                       ?_efgtoa 0083  
        __end_of_TMR5_SetGateInterruptHandler 5DCA         __size_of_TMR5_SetGateInterruptHandler 000A  
                _TMR5_SetGateInterruptHandler 5DC0                                       _CCP3CAP 003F77  
                                     _CCP4CAP 003F73                                       _CCP3CON 003F76  
                                     _CCP4CON 003F72                                       _ADFLTRH 003EE7  
                                     ?_floorf 002D                                       _ADFLTRL 003EE6  
               __size_of_CCP3_DefaultCallBack 0030                                       _CCP3PPS 003ACF  
                                     _CCP4PPS 003AD0                                       _CLC3CON 003C60  
                                     _CLC3POL 003C61                                       _ADPREVH 003EEE  
                                     _ADPREVL 003EED                              ?_PWM6_Initialize 0001  
                            ?_TMR4_Initialize 0001                                       _ADSTPTH 003EE5  
                                     _ADSTPTL 003EE4                                       ?_printf 01A0  
                             ?_PMD_Initialize 0001                             _UART1_Receive_ISR 4DA2  
                                  _getReverse 4672                                       ?_strcpy 0014  
                                     ?_strlen 0014                                       _U1ERRIE 003DFA  
                                   ?_actSpeed 0022                                       _U1ERRIR 003DF9  
                               ?_TMR4_10msISR 0001                                  ?_Default_ISR 0001  
                        __size_of_UART1_Write 005C                            ?_UART1_Receive_ISR 0001  
                                     _U1RXPPS 003AE5                                     ?___xxtofl 001C  
                          _PWM5_LoadDutyValue 58C8                                    _distRightM 00F1  
                     __size_of_TMR5_ReadTimer 0024                                       _OSCCON1 0039D9  
                                     _OSCCON3 0039DB                             __end_of_calcSpeed 3846  
                                     _IVTLOCK 003FD4                            __size_of_vfpfcnvrt 0522  
                                     _SMT1CLK 003F21                                       _OSCTUNE 0039DE  
                                     _SMT1CPR 003F15                                       _SMT1CPW 003F18  
                                     _PWM5DCH 003F6D                                       _PWM5DCL 003F6C  
                                     _PWM6DCH 003F69                                       _PWM6DCL 003F68  
                                     _PWM7DCH 003F65                                       _PWM7DCL 003F64  
                                     _SMT1SIG 003F22                                       _PWM8DCH 003F61  
                                     _PWM5CON 003F6E                                       _PWM8DCL 003F60  
                                     _SMT1PRH 003F1C                                       _PWM6CON 003F6A  
                                     _SMT1PRL 003F1B                                       _PWM7CON 003F66  
                                     _SMT1PRU 003F1D                                     ?_getCurve 0001  
                                     _SMT1WIN 003F23                                       _SMT1TMR 003F12  
                                     _PWM8CON 003F62                                       _SLRCONA 003A43  
                                     _SLRCONB 003A53                                       _SLRCONC 003A63  
                                     _SLRCOND 003A73                                       _SLRCONE 003A83  
                           __end_of_checkBatt 521C                           ??_UART1_Receive_ISR 0012  
                     __end_of_TMR5_WriteTimer 5BFC                           ?_PWM5_LoadDutyValue 0014  
                            ?_PWM7_Initialize 0001                              ?_TMR5_Initialize 0001  
                   INTERRUPT_Initialize@state 0014                          __size_of_setSteering 01A4  
                                   _CLCIN0PPS 003AD9                                     _CLCIN2PPS 003ADB  
                                   _CLCIN3PPS 003ADC                                       __Hparam 0000  
                                   ?_setMotor 0018                                       __Lparam 0000  
                    __end_of_UART1_Initialize 5060                                       ___aldiv 445E  
                             __size_of___flge 0106                               __size_of___fleq 00AA  
                                     ___aodiv 3D72                                       ___fladd 222A  
                                     ___aomod 4078                                       ___fldiv 2B3C  
                                     ___awdiv 4C1C                                       ___flneg 57EA  
                                     ___awmod 4E62                                       ___flmul 26EC  
                                     ___flsub 55F2                                       ___fltol 456A  
                   __end_of_UART1_Receive_ISR 4E62                                     ?_vfprintf 019A  
                        ??_PWM5_LoadDutyValue 0016                                  __psmallconst 1000  
                             __size_of_efgtoa 0CAE                               __size_of_floorf 0216  
                                     __pcinit 52F6                     _TMR5_GateInterruptHandler 0188  
                            ?_PWM8_Initialize 0001                                       __ramtop 1000  
                 __size_of_UART1_Transmit_ISR 0044                 ?_TMR5_SetGateInterruptHandler 0014  
                                     __ptext0 5C94                                       __ptext1 4328  
                                     __ptext2 3EFA                                       __ptext3 3846  
                                     __ptext4 4672                                       __ptext5 31BC  
                                     __ptext6 5BFC                                       __ptext7 521C  
                                     __ptext8 1D08                                       __ptext9 497C  
                             __size_of_printf 0028                                ??_TMR4_10msISR 0013  
                        __size_of_TMR5_Reload 000E                                    ??_actSpeed 0024  
                             __size_of_strcpy 006A                               __size_of_strlen 003A  
                     __end_of_CLC3_Initialize 5BA4                         _OSCILLATOR_Initialize 5D4E  
                                   _T2CONbits 003FAC                                  __size_of_abs 0040  
                                __size_of_pad 00C2                                    ??___xxtofl 0020  
                                   _T3CONbits 003FA6                              ___awmod@dividend 0014  
               __size_of_CCP4_DefaultCallBack 0030                              ___aldiv@dividend 0014  
                                   _T4CONbits 003FA0                      ??_PIN_MANAGER_Initialize 0014  
           __size_of_TMR4_SetInterruptHandler 000A                                     _T2HLTbits 003FAD  
                                   _T5CONbits 003F9A                     ?_TMR4_SetInterruptHandler 0014  
                                     _isupper 57B2                                       efgtoa@c 0089  
                                     efgtoa@d 00A7                                       efgtoa@e 00BF  
                                     efgtoa@f 0085                                       efgtoa@g 00BB  
                                     efgtoa@h 00B1                                       efgtoa@i 00B9  
                                     efgtoa@l 00B5                                       efgtoa@m 00A1  
                                     efgtoa@n 00C1                                       efgtoa@p 00AB  
                                     efgtoa@t 009B                                       efgtoa@u 00C3  
                                     efgtoa@w 00AD                                     _IPR10bits 00398A  
                                     _smtDuty 0124                                     _T4HLTbits 003FA1  
                                  ??_getCurve 01A8                                     _PIE10bits 00399A  
                  __size_of_SYSTEM_Initialize 004A                                       _tolower 535C  
                                     _strncmp 497C                          end_of_initialization 5356  
                                     floorf@e 0064                                     _T2RSTbits 003FAF  
                                     floorf@m 0060                                       floorf@u 0066  
                                     floorf@x 002D                ??_TMR4_DefaultInterruptHandler 0013  
                                   _T4RSTbits 003FA3                                     _PIR10bits 0039AA  
                                     fputc@fp 0018                             ??_SMT1_PR_ACQ_ISR 0011  
         __end_of_UART1_SetTxInterruptHandler 5D98                   _UART1_SetTxInterruptHandler 5D8E  
                                     fputs@fp 0021                ??_UART1_SetOverrunErrorHandler 0016  
                                  ??_setMotor 001A                      __size_of_SMT1_Initialize 0030  
                           __end_of_vfpfcnvrt 222A                                    efgtoa@mode 00B0  
                           ?_CCP3_SetCallBack 0014                                    efgtoa@sign 00A9  
                            ___aldiv@quotient 001E                                       postdec2 003FDD  
                           ??_SMT1_PW_ACQ_ISR 0011                                       postinc0 003FEE  
                                     postinc1 003FE6                                       postinc2 003FDE  
                            ?_ADCC_Initialize 0001                            ??_CCP3_SetCallBack 0016  
                                  ??_vfprintf 003A              __end_of_ADCC_GetSingleConversion 59FE  
                           UART1_Write@txData 0014                           _UART1_RxDataHandler 5BA4  
                                     strcpy@d 001C                                       strlen@a 0016  
                                     strcpy@s 001A                                       strlen@s 0014  
                        __size_of_startAccell 017E                                   ?_getReverse 0001  
                                   _PORTBbits 003FCB                                     _PORTDbits 003FCD  
                    __size_of_CCP3_CaptureISR 0034                                   ___fladd@grs 0078  
                          getCurve@deltaRight 01AA                                 ___xxtofl@sign 0024  
                                 ___fldiv@grs 0027                                   ___fldiv@rem 0020  
                        ?_UART1_RxDataHandler 0001                              ?_TMR5_WriteTimer 0009  
                        setSteering@steeringB 0023                          setSteering@steeringF 0021  
                     TMR5_WriteTimer@timerVal 0009                                   ___flmul@grs 0062  
                    __size_of_CCP4_CaptureISR 0034             CCP4_DefaultCallBack@capturedValue 0005  
                           ?_CCP4_SetCallBack 0014                  __end_of_INTERRUPT_Initialize 5514  
                              __end_of___flge 487E                                __end_of___fleq 4FBC  
                  __size_of_UART1_Receive_ISR 00C0                            ??_CCP4_SetCallBack 0016  
                                 _CLC3CONbits 003C60                                   vfpfcnvrt@ap 00CB  
                                 vfpfcnvrt@ct 00DF                                   vfpfcnvrt@fp 00C7  
                                 vfpfcnvrt@ll 00D1                                __end_of_efgtoa 1D08  
                           __size_of_TMR4_ISR 0038                                __end_of_floorf 3634  
                      ?_OSCILLATOR_Initialize 0001                                    floorf@F527 0118  
                              __end_of_printf 5C24                   __size_of_PWM8_LoadDutyValue 0034  
                            ?_CLC3_Initialize 0001                                __end_of_strcpy 52F6  
                              __end_of_strlen 573C                                _TMR5_ReadTimer 5C70  
                         start_initialization 52F6                ??_TMR5_SetGateInterruptHandler 0016  
             __size_of_PIN_MANAGER_Initialize 00CA                                   __end_of_abs 5702  
                                 __end_of_pad 4DA2                          __size_of_Default_ISR 0002  
                     ??_UART1_SetErrorHandler 0016                      __size_of_CCP3_Initialize 002E  
                       ??_UART1_RxDataHandler 0012                                   putch@txData 0015  
                                  ivt0x8_base 0008                                 _uart1RxBuffer 0108  
                                 _actMotorPow 00E7                         __end_of___fpclassifyf 497C  
                               _uart1TxBuffer 0110                           __size_of_getReverse 0106  
                        __end_of_TMR4_10msISR 5DF4                                  _middleOffSet 01AE  
                                 vfprintf@fmt 019C                                      ??___flge 0036  
                                    ??___fleq 001C                              ??_PMD_Initialize 0014  
                      __size_of_TMR5_GATE_ISR 0032                                  _oldDistRight 00ED  
                    __size_of_CCP4_Initialize 002E                                      ??_efgtoa 008A  
                                 __pdataBANK0 00FE                                   __pdataBANK1 01AE  
                                    ??_floorf 0031                    __end_of_PWM7_LoadDutyValue 5964  
                           ??_SMT1_Initialize 0014                                      ??_printf 003A  
                                    ??_strcpy 0018                                      ??_strlen 0016  
                      __end_of_TMR5_ReadTimer 5C94                         CCP4_CaptureISR@module 0007  
                                   ___fladd@a 0071                                     ___fladd@b 006D  
                         calcMotorPow@addMPow 0089                      _ADCC_GetSingleConversion 59CC  
                                   ___fldiv@a 0018                                     ___fldiv@b 0014  
                 PWM5_LoadDutyValue@dutyValue 0014                         TMR4_ISR@CountCallBack 0040  
                                   ___flmul@a 002E                                     ___flmul@b 002A  
                                 __pbssCOMRAM 003A                                     ___flsub@a 007D  
                                   ___flsub@b 0079                            _UART1_ErrorHandler 0190  
                               __pcstackBANK0 0060                                 __pcstackBANK1 019A  
                           __size_of_actSpeed 0094                              ___aodiv@dividend 0014  
                          _PWM6_LoadDutyValue 5894                      __size_of_TMR2_Initialize 001C  
                           __size_of___xxtofl 01B4                      _UART1_RxInterruptHandler 0198  
                           ??_CCP3_CaptureISR 0003                  __end_of_CCP3_DefaultCallBack 5A92  
                      __size_of_TMR4_CallBack 002E                                     _calcSpeed 3634  
                           __size_of_getCurve 0262                           ?_PWM6_LoadDutyValue 0014  
                 PWM8_LoadDutyValue@dutyValue 0014                  fp__UART1_DefaultErrorHandler 0000  
                                   _checkBatt 518A                                  _currentSpeed 00E9  
                ?_UART1_SetRxInterruptHandler 0014                                     __pnvBANK1 0184  
                                 _efgtoa$3552 008F                                   _efgtoa$3561 0095  
                                 _efgtoa$3553 0091                                   _efgtoa$3562 0097  
                                 _efgtoa$3563 0099                                   _efgtoa$3557 0093  
                          setMotor@motorPower 0018                        _PIN_MANAGER_Initialize 4B52  
                                   _dtoa$3528 006A                      __size_of_PWM5_Initialize 0018  
                    __size_of_TMR3_Initialize 0038                             ?_UART1_Initialize 0001  
        __end_of_UART1_SetFramingErrorHandler 5DB6         __size_of_UART1_SetFramingErrorHandler 000A  
                _UART1_SetFramingErrorHandler 5DAC                                      ?___aldiv 0014  
             ADCC_GetSingleConversion@channel 0018                                      ?___aodiv 0014  
                                    ?___fladd 006D                                      ?___aomod 0014  
                           __size_of_setMotor 00E2              __end_of_TMR4_SetInterruptHandler 5DD4  
                                    ?___fldiv 0014                                      ?___awdiv 0014  
                                   __ptext100 55A8                                     __ptext101 5474  
                                   __ptext102 5C24                              ___aodiv@quotient 0026  
                                    ?___flneg 0014                                     __ptext103 0000  
           CCP3_DefaultCallBack@capturedValue 0001                                      ?___awmod 0014  
                           ??_CCP4_CaptureISR 0007                                      ?___flmul 002A  
                                    ?___flsub 0079                                      ?___fltol 0079  
                          ??_UART1_Initialize 0016                                     _distLeftM 00F5  
                                   _distFront 00FC                              _uart1RxLastError 0042  
                               ??_UART1_Write 0014                                     _distRight 00F3  
                        ??_PWM6_LoadDutyValue 0016                                     _cycle10ms 00FA  
                           __size_of_vfprintf 0070                               ?_TMR5_ReadTimer 0009  
                               ?_calcMotorPow 0001                                   __smallconst 1000  
                                    _CLC3GLS0 003C66                                      _CLC3GLS1 003C67  
                                    _CLC3GLS2 003C68                                      _CLC3GLS3 003C69  
                                   _driveMode 00FE           fp__UART1_DefaultOverrunErrorHandler 0000  
    __end_of_UART1_DefaultOverrunErrorHandler 5DF8     __size_of_UART1_DefaultOverrunErrorHandler 0002  
          ??_UART1_DefaultOverrunErrorHandler 0012             ?_UART1_DefaultOverrunErrorHandler 0001  
            _UART1_DefaultOverrunErrorHandler 5DF6                                      _CLC3SEL0 003C62  
                                    _CLC3SEL1 003C63                                      _CLC3SEL2 003C64  
                                    _CLC3SEL3 003C65                               _SMT1_PR_ACQ_ISR 55A8  
                               ?_calcSteering 0001                                      ?_isupper 0014  
                    __size_of_PWM6_Initialize 0018                      __size_of_TMR4_Initialize 002C  
                               _TMR5_GATE_ISR 5A00                                     _curveMode 00FB  
                                    ?_tolower 001A                                __size_of_fputc 0096  
                                    _T2CLKCON 003FAE                                __size_of_fputs 0044  
                                    ?_strncmp 0014                                   _U1ERRIRbits 003DF9  
                                    _T4CLKCON 003FA2                                __size_of_putch 000A  
                                  ?_calcSpeed 0001                          _INTERRUPT_Initialize 54C8  
                               ??_setSteering 001F                               ___aldiv@divisor 0018  
                             _SMT1_PW_ACQ_ISR 5474                               ___aldiv@counter 001C  
                                  ?_checkBatt 0001         UART1_SetErrorHandler@interruptHandler 0014  
                                    _IPR1bits 003981                  __end_of_CCP4_DefaultCallBack 5AC2  
                           ??_CCP3_Initialize 0016                                      _IPR3bits 003983  
                                    _PIE1bits 003991                                      _PIE3bits 003993  
                                    _IPR7bits 003987                                      _IPR8bits 003988  
                                    _IPR9bits 003989                                      _PIE7bits 003997  
                                    _PIE8bits 003998                                      _PIE9bits 003999  
                                    _IVTBASEH 003FD6                                      _IVTBASEL 003FD5  
                                    _IVTBASEU 003FD7                 ??_UART1_SetRxInterruptHandler 0016  
                                    i1u621_20 5BC8                                      i1u621_21 5BC4  
                                    i1u713_20 5880                                      i1u705_20 5756  
                                    i1u713_21 587C                                      i1u705_21 5752  
                                    i1u707_20 5792                                      i1u706_28 575C  
                                    i1u707_21 578E                                      i1u706_29 576E  
                                    i1u708_28 5798                                      i1u708_29 57AA  
                                    _PIR1bits 0039A1                                      i1u690_20 4DFA  
                                    i1u690_21 4DF6                                      i1u692_20 4E3E  
                                    i1u691_28 4E10                                      i1u692_21 4E3A  
                                    i1u691_29 4E22                                      i1u693_28 4E44  
                                    i1u686_20 568E                                      i1u693_29 4E58  
                                    i1u686_21 568A                                      i2u622_40 5BDE  
                                    i2u622_41 5BDA                                      i1u687_20 56B2  
                                    i1u687_21 56AE                                      i2u711_40 5A18  
                                    i2u710_48 59B6                                      i2u711_41 5A14  
                                    i2u710_49 59CA                                      _PIR4bits 0039A4  
                                    i1u688_20 4DC2                                      i1u688_21 4DBE  
                                    i1u697_20 5B32                                      i1u697_21 5B2E  
                                    i2u712_48 5A1E                                      i2u712_49 5A30  
                                    i1u689_28 4DD8                                      i1u689_29 4DEA  
                                    i2u714_40 55CC                                      i2u714_41 55C8  
                                    i1u698_28 5B38                                      i1u698_29 5B4A  
                                    i2u715_40 54A2                                      i2u715_41 549E  
                                    _PIR6bits 0039A6                                      _PIR7bits 0039A7  
                                    i2u709_48 5982                                      i2u709_49 5996  
                                    _PIR8bits 0039A8                                      _PIR9bits 0039A9  
                                    i2u694_40 5A70                                      i2u694_41 5A6C  
                                    i2u695_40 5AA0                                      i2u695_41 5A9C  
                                    _SMT1CON0 003F1E                                      _SMT1CON1 003F1F  
                    __size_of_PWM7_Initialize 0018                      __size_of_TMR5_Initialize 004A  
                                    _SMT1STAT 003F20                             _SMT1_Overflow_ISR 5C24  
                                    _TMR4_ISR 585C                    __end_of_UART1_Transmit_ISR 56C2  
                               _TMR4_CallBack 5B1E                                     _smtPeriod 0048  
               ?_UART1_SetFramingErrorHandler 0014                                 ??_TMR5_Reload 000B  
                 __size_of_PWM5_LoadDutyValue 0034                                     _vfpfcnvrt 1D08  
                          ?_SMT1_Overflow_ISR 0001                             _getBatteryVoltage 5D66  
                                ??_getReverse 0014                                ??_calcMotorPow 0083  
                                  _ADCON0bits 003EF8                                    _ADCON1bits 003EF9  
                                  _ADCON2bits 003EFA                                    _ADCON3bits 003EFB  
                          ?_getBatteryVoltage 0001                             ??_CCP4_Initialize 0016  
                              ??_calcSteering 0025                           ??_SMT1_Overflow_ISR 0011  
                   TMR5_ReadTimer@readValHigh 000F                     __size_of_CCP3_SetCallBack 000A  
                              ?_TMR5_GATE_ISR 0001                           __end_of_UART1_Write 5418  
                    __size_of_PWM8_Initialize 0018                                  _SMT1CON0bits 003F1E  
                                _SMT1CON1bits 003F1F                                    vfpfcnvrt@c 00E2  
                                  vfpfcnvrt@f 00DB                           ??_getBatteryVoltage 0019  
                                 _INTCON0bits 003FD2                         ?_INTERRUPT_Initialize 0001  
                       __size_of_TMR4_10msISR 0006                          fp__UART1_Receive_ISR 0000  
                      _uart1TxBufferRemaining 004C                             ??_TMR2_Initialize 0014  
                                _uart1RxCount 0043                            __end_of_getReverse 4778  
                                  _ADSTATbits 003EFC                                      __Hrparam 0000  
                   __end_of_SMT1_Overflow_ISR 5C4C                           __end_of_setSteering 3D72  
                                  vfprintf@ap 019E                                      __Lrparam 0000  
                                  vfprintf@fp 019A                                   _oldDistLeft 00EF  
                               ??_startAccell 003A                                ?_TMR4_CallBack 0001  
                              calcSpeed@speed 0087                     __end_of_getBatteryVoltage 5D76  
                     ??_OSCILLATOR_Initialize 0014                              __size_of___aldiv 010C  
                            __size_of___aodiv 0188                              __size_of___fladd 04C2  
                            __size_of___aomod 0164                              __size_of___fldiv 039A  
                            __size_of___awdiv 00C4                              __size_of___flneg 0038  
                            __size_of___awmod 00B0                              __size_of___flmul 0450  
                            __size_of___flsub 0048                              __size_of___fltol 0108  
                                _SMT1STATbits 003F20                          _CCP3_DefaultCallBack 5A62  
                     __end_of_SMT1_PR_ACQ_ISR 55F2                                    ?_vfpfcnvrt 00C7  
                             ___aodiv@divisor 001C                             ??_PWM5_Initialize 0014  
                           ??_TMR3_Initialize 0014                               ___aodiv@counter 0024  
                    _TMR4_SetInterruptHandler 5DCA                            ___fpclassifyf@F465 011C  
                                    _actSpeed 50F6          __size_of_UART1_SetRxInterruptHandler 000A  
                                _TMR4_10msISR 5DEE                                      ___xxtofl 3A1A  
                    __size_of_ADCC_Initialize 005C                           __end_of_TMR5_Reload 5D84  
                   __size_of_CCP4_SetCallBack 000A                                      __pivt0x8 0008  
                     __end_of_SMT1_PW_ACQ_ISR 54C8                                      _getCurve 31BC  
                                    __ptext10 105A                                      __ptext11 535C  
                                    __ptext20 4E62                                      __ptext12 57B2  
                                    __ptext21 2ED6                                      __ptext13 528C  
                                    __ptext30 3D72                                      __ptext22 4CE0  
                                    __ptext14 341E                                      __ptext31 518A  
                                    __ptext23 5702                                      __ptext15 487E  
                                    __ptext40 41DC                                      __ptext32 3BCE  
                                    __ptext24 563A                                      __ptext16 55F2  
                                    __ptext41 4A70                                      __ptext33 5894  
                                    __ptext25 5060                                      __ptext17 57EA  
                                    __ptext50 5514                                      __ptext42 58FC  
                                    __ptext34 58C8                                      __ptext26 5D84  
                                    __ptext18 4F12                                      __ptext51 4FBC  
                                    __ptext43 5930                                      __ptext35 5D66  
                                    __ptext27 53BC                                      __ptext19 2B3C  
                                    __ptext60 5DCA                                      __ptext52 5D8E  
                                    __ptext44 50F6                                      __ptext36 59CC  
                                    __ptext28 56C2                                      __ptext61 5822  
                                    __ptext53 5D98                                      __ptext45 445E  
                                    __ptext37 4778                                      __ptext29 4078  
                                    __ptext70 5D4E                                      __ptext62 5CD2  
                                    __ptext54 5DA2                                      __ptext46 3A1A  
                                    __ptext38 3634                                      __ptext71 54C8  
                                    __ptext63 5A32                                      __ptext55 5DAC  
                                    __ptext47 456A                                      __ptext39 222A  
                                    __ptext80 5778                                      __ptext72 5B78  
                                    __ptext64 5CEE                                      __ptext56 5DB6  
                                    __ptext48 26EC                                      __ptext81 4DA2  
                                    __ptext73 5AC2                                      __ptext65 5D06  
                                    __ptext57 555E                                      __ptext49 4C1C  
                                    __ptext90 5DFC                                      __ptext82 5DF6  
                                    __ptext74 5DD4                                      __ptext66 5D1E  
                                    __ptext58 5DC0                                      __ptext91 5964  
                                    __ptext83 5DF8                                      __ptext75 5AF0  
                                    __ptext67 5D36                                      __ptext59 5B4C  
                                    __ptext92 5A62                                      __ptext84 5DE8  
                                    __ptext76 5DDE                                      __ptext68 5C4C  
                                    __ptext93 5998                                      __ptext85 5BA4  
                                    __ptext77 5418                                      __ptext69 4B52  
                                    __ptext94 5A92                                      __ptext86 585C  
                                    __ptext78 573C                                      __ptext95 5A00  
                                    __ptext87 5B1E                                      __ptext79 567E  
                                    __ptext96 5CB4                                      __ptext88 5DEE  
                                    __ptext97 5D76                                      __ptext89 5DFA  
                                    __ptext98 5BD0                                      __ptext99 5C70  
                            __size_of_isupper 0038                                      _distLeft 00F7  
              __size_of_UART1_SetErrorHandler 000A                                   ??_calcSpeed 0083  
               __end_of_UART1_SetErrorHandler 5DC0                              __size_of_tolower 0060  
                                  _T3GCONbits 003FA7                                    strcpy@dest 0014  
                            __size_of_strncmp 00F4                                   ??_checkBatt 003A  
                           ??_TMR4_Initialize 0016                             ??_PWM6_Initialize 0014  
                               __size_of_main 0020                                 __size_of_dtoa 02E6  
                                    _oldSpeed 012C                                    _T5GCONbits 003F9B  
                               __size_of_loop 0136                               _SMT1_Initialize 5A32  
                                 _IVTLOCKbits 003FD4                                      _setMotor 4A70  
                                    _setSpeed 00EB                      __size_of_TMR5_WriteTimer 002C  
                                    efgtoa@fp 0083                                      efgtoa@ne 009F  
                                    efgtoa@pp 009D                                      efgtoa@ou 00A3  
                   _UART1_OverrunErrorHandler 0192  UART1_SetOverrunErrorHandler@interruptHandler 0014  
                                    isa$xinst 000000            __size_of_UART1_DefaultErrorHandler 0006  
                  ??_ADCC_GetSingleConversion 0016                    ?_UART1_DefaultErrorHandler 0001  
                       ?_CCP3_DefaultCallBack 0001                                      _vfprintf 521C  
                                   printf@fmt 01A0                    __end_of_PWM8_LoadDutyValue 5930  
                             _CCP3_CaptureISR 5964                                   _UART1_Write 53BC  
                       fp__UART1_Transmit_ISR 0000                             ??_TMR5_Initialize 0016  
                           ??_PWM7_Initialize 0014           fp__TMR5_DefaultGateInterruptHandler 0000  
    __end_of_TMR5_DefaultGateInterruptHandler 5CD2     __size_of_TMR5_DefaultGateInterruptHandler 001E  
          ??_TMR5_DefaultGateInterruptHandler 0011             ?_TMR5_DefaultGateInterruptHandler 0001  
            _TMR5_DefaultGateInterruptHandler 5CB4                              ___aomod@dividend 0014  
                         __end_of_startAccell 4078                                _battCheckCount 0130  
                               ??_Default_ISR 0001                ??_UART1_SetFramingErrorHandler 0016  
                                _reverseCount 0132                               ??_TMR5_GATE_ISR 0011  
                              _vfpfcnvrt$3581 00D9                   __end_of_UART1_RxDataHandler 5BD0  
                                 _uart1RxHead 0045                          _CCP4_DefaultCallBack 5A92  
                                 _uart1TxHead 0047                                   _uart1RxTail 0044  
                                 _uart1TxTail 0046                        ??_INTERRUPT_Initialize 0014  
                          _PWM7_LoadDutyValue 5930                                      intlevel1 0000  
                                    intlevel2 0000                      __size_of_CLC3_Initialize 002C  
                                 _setSteering 3BCE                               _CCP4_CaptureISR 5998  
                     ?_PIN_MANAGER_Initialize 0001                             ??_PWM8_Initialize 0014  
                         ?_PWM7_LoadDutyValue 0014                          __end_of_calcMotorPow 4328  
                                   strcpy@src 0016                                      isupper@c 0014  
                                   strncmp@_l 0014                                     strncmp@_r 0016  
                             ??_TMR4_CallBack 0013                    __size_of_SMT1_Overflow_ISR 0028  
                        __end_of_calcSteering 3A1A                           _uart1RxStatusBuffer 0100  
                                 efgtoa@nmode 00AF                                      printf@ap 01A6  
                            ??_TMR5_ReadTimer 000B                    __size_of_getBatteryVoltage 0010  
UART1_SetFramingErrorHandler@interruptHandler 0014             __end_of_UART1_DefaultErrorHandler 5DEE  
                             ___aomod@divisor 001C                                   ??_vfpfcnvrt 00CD  
                                 _reverseTime 012A                               ___aomod@counter 0024  
                            ?_SMT1_PR_ACQ_ISR 0001                                   _TMR5_Reload 5D76  
                                  _SMT1SIGPPS 003AD2                                    _SMT1WINPPS 003AD1  
                        ??_PWM7_LoadDutyValue 0016                                      tolower@c 001A  
                               actSpeed@speed 0024                        __size_of___fpclassifyf 00FE  
                       ?_CCP4_DefaultCallBack 0005                     calcMotorPow@oldSpeedDelta 0087  
                                    strncmp@l 001B                                      strncmp@n 0018  
                            _CCP3_SetCallBack 5DDE                                      strncmp@r 001D  
                   __size_of_UART1_Initialize 00A4                                  ___aldiv@sign 001D  
                            ?_SMT1_PW_ACQ_ISR 0001                               _CCP3_Initialize 5AF0  
                 PWM6_LoadDutyValue@dutyValue 0014                             calcSteering@delta 0029  
                    _UART1_TxInterruptHandler 0196                                 ___fladd@signs 0075  
                         __end_of_Default_ISR 5DFE                       __end_of_SMT1_Initialize 5A62  
                                ___aodiv@sign 0025                __end_of_PIN_MANAGER_Initialize 4C1C  
                           ??_ADCC_Initialize 0014                                  ___fladd@aexp 0076  
                                ___fladd@bexp 0077                  ?_UART1_SetTxInterruptHandler 0014  
                                ___aomod@sign 0025                       __end_of_CCP3_CaptureISR 5998  
