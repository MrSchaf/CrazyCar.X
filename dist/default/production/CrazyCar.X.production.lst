

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Jan 30 14:25:24 2024

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F46K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=3
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=3
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=3
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=3
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text54,global,reloc=2,class=CODE,delta=1
    69                           	psect	text55,global,reloc=2,class=CODE,delta=1
    70                           	psect	text56,global,reloc=2,class=CODE,delta=1
    71                           	psect	text57,global,reloc=2,class=CODE,delta=1
    72                           	psect	text58,global,reloc=2,class=CODE,delta=1
    73                           	psect	text59,global,reloc=2,class=CODE,delta=1
    74                           	psect	text60,global,reloc=2,class=CODE,delta=1
    75                           	psect	text61,global,reloc=2,class=CODE,delta=1
    76                           	psect	text62,global,reloc=2,class=CODE,delta=1
    77                           	psect	text63,global,reloc=2,class=CODE,delta=1
    78                           	psect	text64,global,reloc=2,class=CODE,delta=1
    79                           	psect	text65,global,reloc=2,class=CODE,delta=1
    80                           	psect	text66,global,reloc=2,class=CODE,delta=1
    81                           	psect	text67,global,reloc=2,class=CODE,delta=1
    82                           	psect	text68,global,reloc=2,class=CODE,delta=1
    83                           	psect	text69,global,reloc=2,class=CODE,delta=1
    84                           	psect	text70,global,reloc=2,class=CODE,delta=1
    85                           	psect	text71,global,reloc=2,class=CODE,delta=1
    86                           	psect	text72,global,reloc=2,class=CODE,delta=1
    87                           	psect	text73,global,reloc=2,class=CODE,delta=1
    88                           	psect	text74,global,reloc=2,class=CODE,delta=1
    89                           	psect	text75,global,reloc=2,class=CODE,delta=1
    90                           	psect	text76,global,reloc=2,class=CODE,delta=1
    91                           	psect	text77,global,reloc=2,class=CODE,delta=1
    92                           	psect	text78,global,reloc=2,class=CODE,delta=1
    93                           	psect	text79,global,reloc=2,class=CODE,delta=1
    94                           	psect	text80,global,reloc=2,class=CODE,delta=1
    95                           	psect	text81,global,reloc=2,class=CODE,delta=1
    96                           	psect	text82,global,reloc=4,class=CODE,delta=1
    97                           	psect	text83,global,reloc=2,class=CODE,delta=1
    98                           	psect	text84,global,reloc=4,class=CODE,delta=1
    99                           	psect	text85,global,reloc=2,class=CODE,delta=1
   100                           	psect	text86,global,reloc=2,class=CODE,delta=1
   101                           	psect	text87,global,reloc=2,class=CODE,delta=1
   102                           	psect	text88,global,reloc=2,class=CODE,delta=1
   103                           	psect	text89,global,reloc=2,class=CODE,delta=1
   104                           	psect	text90,global,reloc=4,class=CODE,delta=1
   105                           	psect	text91,global,reloc=2,class=CODE,delta=1
   106                           	psect	text92,global,reloc=2,class=CODE,delta=1
   107                           	psect	text93,global,reloc=2,class=CODE,delta=1
   108                           	psect	text94,global,reloc=4,class=CODE,delta=1
   109                           	psect	text95,global,reloc=4,class=CODE,delta=1
   110                           	psect	text96,global,reloc=2,class=CODE,delta=1
   111                           	psect	text97,global,reloc=4,class=CODE,delta=1
   112                           	psect	text98,global,reloc=2,class=CODE,delta=1
   113                           	psect	text99,global,reloc=4,class=CODE,delta=1
   114                           	psect	text100,global,reloc=2,class=CODE,delta=1
   115                           	psect	text101,global,reloc=2,class=CODE,delta=1
   116                           	psect	text102,global,reloc=2,class=CODE,delta=1
   117                           	psect	text103,global,reloc=2,class=CODE,delta=1
   118                           	psect	text104,global,reloc=4,class=CODE,delta=1
   119                           	psect	text105,global,reloc=4,class=CODE,delta=1
   120                           	psect	text106,global,reloc=4,class=CODE,delta=1
   121                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   122                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   123                           	psect	text107,global,reloc=4,class=CODE,delta=1
   124                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   125                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   126                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   127  0000                     
   128                           ; Version 2.20
   129                           ; Generated 05/05/2020 GMT
   130                           ; 
   131                           ; Copyright © 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   132                           ; All rights reserved.
   133                           ; 
   134                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   135                           ; 
   136                           ; Redistribution and use in source and binary forms, with or without modification, are
   137                           ; permitted provided that the following conditions are met:
   138                           ; 
   139                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   140                           ;        conditions and the following disclaimer.
   141                           ; 
   142                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   143                           ;        of conditions and the following disclaimer in the documentation and/or other
   144                           ;        materials provided with the distribution.
   145                           ; 
   146                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   147                           ;        software without specific prior written permission.
   148                           ; 
   149                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   150                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   151                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   152                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   153                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   154                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   155                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   156                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   157                           ; 
   158                           ; 
   159                           ; Code-generator required, PIC18F46K42 Definitions
   160                           ; 
   161                           ; SFR Addresses
   162  0000                     
   163                           	psect	nvBANK1
   164  000195                     __pnvBANK1:
   165                           	callstack 0
   166  000195                     _TMR4_InterruptHandler:
   167                           	callstack 0
   168  000195                     	ds	2
   169  000197                     _timer3ReloadVal:
   170                           	callstack 0
   171  000197                     	ds	2
   172  000199                     _TMR5_GateInterruptHandler:
   173                           	callstack 0
   174  000199                     	ds	2
   175  00019B                     _timer5ReloadVal:
   176                           	callstack 0
   177  00019B                     	ds	2
   178  00019D                     _CCP4_CallBack:
   179                           	callstack 0
   180  00019D                     	ds	2
   181  00019F                     _CCP3_CallBack:
   182                           	callstack 0
   183  00019F                     	ds	2
   184  0001A1                     _UART1_ErrorHandler:
   185                           	callstack 0
   186  0001A1                     	ds	2
   187  0001A3                     _UART1_OverrunErrorHandler:
   188                           	callstack 0
   189  0001A3                     	ds	2
   190  0001A5                     _UART1_FramingErrorHandler:
   191                           	callstack 0
   192  0001A5                     	ds	2
   193  0001A7                     _UART1_TxInterruptHandler:
   194                           	callstack 0
   195  0001A7                     	ds	2
   196  0001A9                     _UART1_RxInterruptHandler:
   197                           	callstack 0
   198  0001A9                     	ds	2
   199  0001AB                     _uart1TxBufferRemaining:
   200                           	callstack 0
   201  0001AB                     	ds	1
   202  0000                     _PIR4bits	set	14756
   203  0000                     _PIR1bits	set	14753
   204  0000                     _PIE1bits	set	14737
   205  0000                     _PIE7bits	set	14743
   206  0000                     _PIR7bits	set	14759
   207  0000                     _PIR6bits	set	14758
   208  0000                     _PIE8bits	set	14744
   209  0000                     _PIR8bits	set	14760
   210  0000                     _PIE10bits	set	14746
   211  0000                     _PIR10bits	set	14762
   212  0000                     _PIE9bits	set	14745
   213  0000                     _PIR9bits	set	14761
   214  0000                     _IPR9bits	set	14729
   215  0000                     _IPR7bits	set	14727
   216  0000                     _IPR8bits	set	14728
   217  0000                     _IPR10bits	set	14730
   218  0000                     _IPR1bits	set	14721
   219  0000                     _IPR3bits	set	14723
   220  0000                     _PIE3bits	set	14739
   221  0000                     _PMD7	set	14791
   222  0000                     _PMD6	set	14790
   223  0000                     _PMD5	set	14789
   224  0000                     _PMD4	set	14788
   225  0000                     _PMD3	set	14787
   226  0000                     _PMD2	set	14786
   227  0000                     _PMD1	set	14785
   228  0000                     _PMD0	set	14784
   229  0000                     _OSCTUNE	set	14814
   230  0000                     _OSCFRQ	set	14815
   231  0000                     _OSCEN	set	14813
   232  0000                     _OSCCON3	set	14811
   233  0000                     _OSCCON1	set	14809
   234  0000                     _CCP4PPS	set	15056
   235  0000                     _SMT1SIGPPS	set	15058
   236  0000                     _CLCIN2PPS	set	15067
   237  0000                     _RB3PPS	set	14859
   238  0000                     _RA3PPS	set	14851
   239  0000                     _SMT1WINPPS	set	15057
   240  0000                     _CLCIN0PPS	set	15065
   241  0000                     _RA4PPS	set	14852
   242  0000                     _T5GPPS	set	15049
   243  0000                     _RA0PPS	set	14848
   244  0000                     _U1RXPPS	set	15077
   245  0000                     _RA1PPS	set	14849
   246  0000                     _CLCIN3PPS	set	15068
   247  0000                     _CCP3PPS	set	15055
   248  0000                     _INLVLE	set	14980
   249  0000                     _INLVLD	set	14964
   250  0000                     _INLVLC	set	14948
   251  0000                     _INLVLB	set	14932
   252  0000                     _INLVLA	set	14916
   253  0000                     _SLRCONE	set	14979
   254  0000                     _SLRCOND	set	14963
   255  0000                     _SLRCONC	set	14947
   256  0000                     _SLRCONB	set	14931
   257  0000                     _SLRCONA	set	14915
   258  0000                     _ODCOND	set	14962
   259  0000                     _ODCONC	set	14946
   260  0000                     _ODCONB	set	14930
   261  0000                     _ODCONA	set	14914
   262  0000                     _ODCONE	set	14978
   263  0000                     _RD1I2C	set	14971
   264  0000                     _RD0I2C	set	14970
   265  0000                     _RC4I2C	set	14955
   266  0000                     _RC3I2C	set	14954
   267  0000                     _RB2I2C	set	14939
   268  0000                     _RB1I2C	set	14938
   269  0000                     _WPUC	set	14945
   270  0000                     _WPUA	set	14913
   271  0000                     _WPUB	set	14929
   272  0000                     _WPUE	set	14977
   273  0000                     _WPUD	set	14961
   274  0000                     _ANSELA	set	14912
   275  0000                     _ANSELE	set	14976
   276  0000                     _ANSELB	set	14928
   277  0000                     _ANSELC	set	14944
   278  0000                     _ANSELD	set	14960
   279  0000                     _CLC3CON	set	15456
   280  0000                     _CLC3GLS3	set	15465
   281  0000                     _CLC3GLS2	set	15464
   282  0000                     _CLC3GLS1	set	15463
   283  0000                     _CLC3GLS0	set	15462
   284  0000                     _CLC3SEL3	set	15461
   285  0000                     _CLC3SEL2	set	15460
   286  0000                     _CLC3SEL1	set	15459
   287  0000                     _CLC3SEL0	set	15458
   288  0000                     _CLC3POL	set	15457
   289  0000                     _CLC3CONbits	set	15456
   290  0000                     _U1RXB	set	15848
   291  0000                     _U1TXB	set	15850
   292  0000                     _U1ERRIRbits	set	15865
   293  0000                     _U1ERRIE	set	15866
   294  0000                     _U1ERRIR	set	15865
   295  0000                     _U1UIR	set	15864
   296  0000                     _U1FIFO	set	15863
   297  0000                     _U1BRGH	set	15862
   298  0000                     _U1BRGL	set	15861
   299  0000                     _U1CON2	set	15860
   300  0000                     _U1CON1	set	15859
   301  0000                     _U1CON0	set	15858
   302  0000                     _U1P3H	set	15857
   303  0000                     _U1P3L	set	15856
   304  0000                     _U1P2H	set	15855
   305  0000                     _U1P2L	set	15854
   306  0000                     _U1P1H	set	15853
   307  0000                     _U1P1L	set	15852
   308  0000                     _ADCON1bits	set	16121
   309  0000                     _ADERRL	set	16098
   310  0000                     _ADERRH	set	16099
   311  0000                     _ADPREVL	set	16109
   312  0000                     _ADPREVH	set	16110
   313  0000                     _ADFLTRL	set	16102
   314  0000                     _ADFLTRH	set	16103
   315  0000                     _ADSTATbits	set	16124
   316  0000                     _ADACCL	set	16104
   317  0000                     _ADACCH	set	16105
   318  0000                     _ADCON2bits	set	16122
   319  0000                     _ADCNT	set	16107
   320  0000                     _ADCON3bits	set	16123
   321  0000                     _ADRESL	set	16111
   322  0000                     _ADRESH	set	16112
   323  0000                     _ADCON0bits	set	16120
   324  0000                     _ADCON0	set	16120
   325  0000                     _ADCLK	set	16127
   326  0000                     _ADACT	set	16126
   327  0000                     _ADREF	set	16125
   328  0000                     _ADSTAT	set	16124
   329  0000                     _ADCON3	set	16123
   330  0000                     _ADCON2	set	16122
   331  0000                     _ADCON1	set	16121
   332  0000                     _ADPREH	set	16119
   333  0000                     _ADPREL	set	16118
   334  0000                     _ADCAP	set	16117
   335  0000                     _ADACQH	set	16116
   336  0000                     _ADACQL	set	16115
   337  0000                     _ADPCH	set	16113
   338  0000                     _ADRPT	set	16108
   339  0000                     _ADACCU	set	16106
   340  0000                     _ADSTPTH	set	16101
   341  0000                     _ADSTPTL	set	16100
   342  0000                     _ADUTHH	set	16097
   343  0000                     _ADUTHL	set	16096
   344  0000                     _ADLTHH	set	16095
   345  0000                     _ADLTHL	set	16094
   346  0000                     _SMT1TMR	set	16146
   347  0000                     _SMT1CPR	set	16149
   348  0000                     _SMT1CPW	set	16152
   349  0000                     _SMT1PR	set	16155
   350  0000                     _SMT1STATbits	set	16160
   351  0000                     _SMT1CON0bits	set	16158
   352  0000                     _SMT1CON1bits	set	16159
   353  0000                     _SMT1PRL	set	16155
   354  0000                     _SMT1PRH	set	16156
   355  0000                     _SMT1PRU	set	16157
   356  0000                     _SMT1SIG	set	16162
   357  0000                     _SMT1WIN	set	16163
   358  0000                     _SMT1CLK	set	16161
   359  0000                     _SMT1STAT	set	16160
   360  0000                     _SMT1CON1	set	16159
   361  0000                     _SMT1CON0	set	16158
   362  0000                     _CCPTMRS1bits	set	16223
   363  0000                     _CCPTMRS0bits	set	16222
   364  0000                     _PORTBbits	set	16331
   365  0000                     _PR2	set	16299
   366  0000                     _TMR2	set	16298
   367  0000                     _T2CONbits	set	16300
   368  0000                     _T2RSTbits	set	16303
   369  0000                     _T2HLTbits	set	16301
   370  0000                     _T2CON	set	16300
   371  0000                     _T2TMR	set	16298
   372  0000                     _T2PR	set	16299
   373  0000                     _T2RST	set	16303
   374  0000                     _T2HLT	set	16301
   375  0000                     _T2CLKCON	set	16302
   376  0000                     _PWM6DCL	set	16232
   377  0000                     _PWM6DCH	set	16233
   378  0000                     _PWM6CON	set	16234
   379  0000                     _PWM5DCL	set	16236
   380  0000                     _PWM5DCH	set	16237
   381  0000                     _PWM5CON	set	16238
   382  0000                     _PWM8DCL	set	16224
   383  0000                     _PWM8DCH	set	16225
   384  0000                     _PWM8CON	set	16226
   385  0000                     _PWM7DCL	set	16228
   386  0000                     _PWM7DCH	set	16229
   387  0000                     _PWM7CON	set	16230
   388  0000                     _PR4	set	16287
   389  0000                     _TMR4	set	16286
   390  0000                     _T4CONbits	set	16288
   391  0000                     _T4RSTbits	set	16291
   392  0000                     _T4HLTbits	set	16289
   393  0000                     _T4CON	set	16288
   394  0000                     _T4TMR	set	16286
   395  0000                     _T4PR	set	16287
   396  0000                     _T4RST	set	16291
   397  0000                     _T4HLT	set	16289
   398  0000                     _T4CLKCON	set	16290
   399  0000                     _T3GCONbits	set	16295
   400  0000                     _T3CONbits	set	16294
   401  0000                     _T3CON	set	16294
   402  0000                     _TMR3L	set	16292
   403  0000                     _TMR3H	set	16293
   404  0000                     _T3CLK	set	16297
   405  0000                     _T3GATE	set	16296
   406  0000                     _T3GCON	set	16295
   407  0000                     _T5GCONbits	set	16283
   408  0000                     _T5CONbits	set	16282
   409  0000                     _T5CON	set	16282
   410  0000                     _TMR5L	set	16280
   411  0000                     _TMR5H	set	16281
   412  0000                     _T5CLK	set	16285
   413  0000                     _T5GATE	set	16284
   414  0000                     _T5GCON	set	16283
   415  0000                     _CCPR4L	set	16240
   416  0000                     _CCPR4H	set	16241
   417  0000                     _CCP4CAP	set	16243
   418  0000                     _CCP4CON	set	16242
   419  0000                     _CCPR3L	set	16244
   420  0000                     _CCPR3H	set	16245
   421  0000                     _CCP3CAP	set	16247
   422  0000                     _CCP3CON	set	16246
   423  0000                     _PORTDbits	set	16333
   424  0000                     _IVTBASEL	set	16341
   425  0000                     _IVTBASEH	set	16342
   426  0000                     _IVTBASEU	set	16343
   427  0000                     _IVTLOCKbits	set	16340
   428  0000                     _IVTLOCK	set	16340
   429  0000                     _INTCON0bits	set	16338
   430  0000                     _TRISD	set	16325
   431  0000                     _TRISC	set	16324
   432  0000                     _TRISB	set	16323
   433  0000                     _TRISA	set	16322
   434  0000                     _TRISE	set	16326
   435  0000                     _LATC	set	16316
   436  0000                     _LATB	set	16315
   437  0000                     _LATA	set	16314
   438  0000                     _LATD	set	16317
   439  0000                     _LATE	set	16318
   440  0000                     _GIE	set	130711
   441                           
   442                           	psect	smallconst
   443  001000                     __psmallconst:
   444                           	callstack 0
   445  001000  00                 	db	0
   446  001001                     STR_3:
   447                           
   448                           ; BSR set to: 1
   449  001001  43                 	db	67	;'C'
   450  001002  75                 	db	117	;'u'
   451  001003  72                 	db	114	;'r'
   452  001004  76                 	db	118	;'v'
   453  001005  65                 	db	101	;'e'
   454  001006  4C                 	db	76	;'L'
   455  001007  65                 	db	101	;'e'
   456  001008  66                 	db	102	;'f'
   457  001009  74                 	db	116	;'t'
   458  00100A  43                 	db	67	;'C'
   459  00100B  6F                 	db	111	;'o'
   460  00100C  75                 	db	117	;'u'
   461  00100D  6E                 	db	110	;'n'
   462  00100E  74                 	db	116	;'t'
   463  00100F  3A                 	db	58	;':'
   464  001010  20                 	db	32
   465  001011  25                 	db	37
   466  001012  75                 	db	117	;'u'
   467  001013  20                 	db	32
   468  001014  20                 	db	32
   469  001015  20                 	db	32
   470  001016  7C                 	db	124
   471  001017  20                 	db	32
   472  001018  20                 	db	32
   473  001019  20                 	db	32
   474  00101A  00                 	db	0
   475  00101B                     STR_2:
   476                           
   477                           ; BSR set to: 1
   478  00101B  52                 	db	82	;'R'
   479  00101C  65                 	db	101	;'e'
   480  00101D  73                 	db	115	;'s'
   481  00101E  65                 	db	101	;'e'
   482  00101F  74                 	db	116	;'t'
   483  001020  20                 	db	32
   484  001021  43                 	db	67	;'C'
   485  001022  75                 	db	117	;'u'
   486  001023  72                 	db	114	;'r'
   487  001024  76                 	db	118	;'v'
   488  001025  65                 	db	101	;'e'
   489  001026  43                 	db	67	;'C'
   490  001027  6F                 	db	111	;'o'
   491  001028  75                 	db	117	;'u'
   492  001029  6E                 	db	110	;'n'
   493  00102A  74                 	db	116	;'t'
   494  00102B  21                 	db	33
   495  00102C  20                 	db	32
   496  00102D  20                 	db	32
   497  00102E  7C                 	db	124
   498  00102F  20                 	db	32
   499  001030  20                 	db	32
   500  001031  20                 	db	32
   501  001032  00                 	db	0
   502  001033                     STR_4:
   503                           
   504                           ; BSR set to: 1
   505  001033  43                 	db	67	;'C'
   506  001034  75                 	db	117	;'u'
   507  001035  72                 	db	114	;'r'
   508  001036  76                 	db	118	;'v'
   509  001037  65                 	db	101	;'e'
   510  001038  52                 	db	82	;'R'
   511  001039  69                 	db	105	;'i'
   512  00103A  67                 	db	103	;'g'
   513  00103B  68                 	db	104	;'h'
   514  00103C  74                 	db	116	;'t'
   515  00103D  43                 	db	67	;'C'
   516  00103E  6F                 	db	111	;'o'
   517  00103F  75                 	db	117	;'u'
   518  001040  6E                 	db	110	;'n'
   519  001041  74                 	db	116	;'t'
   520  001042  3A                 	db	58	;':'
   521  001043  20                 	db	32
   522  001044  25                 	db	37
   523  001045  75                 	db	117	;'u'
   524  001046  0A                 	db	10
   525  001047  00                 	db	0
   526  001048                     
   527                           ; BSR set to: 1
   528  001048  73                 	db	115	;'s'
   529  001049  74                 	db	116	;'t'
   530  00104A  61                 	db	97	;'a'
   531  00104B  72                 	db	114	;'r'
   532  00104C  41                 	db	65	;'A'
   533  00104D  63                 	db	99	;'c'
   534  00104E  63                 	db	99	;'c'
   535  00104F  65                 	db	101	;'e'
   536  001050  6C                 	db	108	;'l'
   537  001051  50                 	db	80	;'P'
   538  001052  6F                 	db	111	;'o'
   539  001053  77                 	db	119	;'w'
   540  001054  65                 	db	101	;'e'
   541  001055  72                 	db	114	;'r'
   542  001056  3A                 	db	58	;':'
   543  001057  20                 	db	32
   544  001058  25                 	db	37
   545  001059  64                 	db	100	;'d'
   546  00105A  0A                 	db	10
   547  00105B  00                 	db	0
   548  00105C                     STR_5:
   549                           
   550                           ; BSR set to: 1
   551  00105C  52                 	db	82	;'R'
   552  00105D  6F                 	db	111	;'o'
   553  00105E  75                 	db	117	;'u'
   554  00105F  6E                 	db	110	;'n'
   555  001060  64                 	db	100	;'d'
   556  001061  54                 	db	84	;'T'
   557  001062  69                 	db	105	;'i'
   558  001063  6D                 	db	109	;'m'
   559  001064  65                 	db	101	;'e'
   560  001065  3A                 	db	58	;':'
   561  001066  20                 	db	32
   562  001067  25                 	db	37
   563  001068  66                 	db	102	;'f'
   564  001069  0A                 	db	10
   565  00106A  0A                 	db	10
   566  00106B  00                 	db	0
   567  00106C                     STR_12:
   568                           
   569                           ; BSR set to: 1
   570  00106C  53                 	db	83	;'S'
   571  00106D  74                 	db	116	;'t'
   572  00106E  6F                 	db	111	;'o'
   573  00106F  70                 	db	112	;'p'
   574  001070  20                 	db	32
   575  001071  52                 	db	82	;'R'
   576  001072  65                 	db	101	;'e'
   577  001073  76                 	db	118	;'v'
   578  001074  65                 	db	101	;'e'
   579  001075  72                 	db	114	;'r'
   580  001076  73                 	db	115	;'s'
   581  001077  65                 	db	101	;'e'
   582  001078  0A                 	db	10
   583  001079  00                 	db	0
   584  00107A                     STR_10:
   585                           
   586                           ; BSR set to: 1
   587  00107A  52                 	db	82	;'R'
   588  00107B  65                 	db	101	;'e'
   589  00107C  76                 	db	118	;'v'
   590  00107D  65                 	db	101	;'e'
   591  00107E  72                 	db	114	;'r'
   592  00107F  73                 	db	115	;'s'
   593  001080  65                 	db	101	;'e'
   594  001081  52                 	db	82	;'R'
   595  001082  69                 	db	105	;'i'
   596  001083  67                 	db	103	;'g'
   597  001084  74                 	db	116	;'t'
   598  001085  68                 	db	104	;'h'
   599  001086  0A                 	db	10
   600  001087  00                 	db	0
   601  001088                     STR_7:
   602                           
   603                           ; BSR set to: 1
   604  001088  46                 	db	70	;'F'
   605  001089  6F                 	db	111	;'o'
   606  00108A  6C                 	db	108	;'l'
   607  00108B  6C                 	db	108	;'l'
   608  00108C  6F                 	db	111	;'o'
   609  00108D  77                 	db	119	;'w'
   610  00108E  20                 	db	32
   611  00108F  52                 	db	82	;'R'
   612  001090  69                 	db	105	;'i'
   613  001091  67                 	db	103	;'g'
   614  001092  68                 	db	104	;'h'
   615  001093  74                 	db	116	;'t'
   616  001094  0A                 	db	10
   617  001095  00                 	db	0
   618  001096                     STR_8:
   619                           
   620                           ; BSR set to: 1
   621  001096  46                 	db	70	;'F'
   622  001097  6F                 	db	111	;'o'
   623  001098  6C                 	db	108	;'l'
   624  001099  6C                 	db	108	;'l'
   625  00109A  6F                 	db	111	;'o'
   626  00109B  77                 	db	119	;'w'
   627  00109C  20                 	db	32
   628  00109D  4C                 	db	76	;'L'
   629  00109E  65                 	db	101	;'e'
   630  00109F  66                 	db	102	;'f'
   631  0010A0  74                 	db	116	;'t'
   632  0010A1  0A                 	db	10
   633  0010A2  00                 	db	0
   634  0010A3                     STR_11:
   635                           
   636                           ; BSR set to: 1
   637  0010A3  52                 	db	82	;'R'
   638  0010A4  65                 	db	101	;'e'
   639  0010A5  76                 	db	118	;'v'
   640  0010A6  65                 	db	101	;'e'
   641  0010A7  72                 	db	114	;'r'
   642  0010A8  73                 	db	115	;'s'
   643  0010A9  65                 	db	101	;'e'
   644  0010AA  4C                 	db	76	;'L'
   645  0010AB  65                 	db	101	;'e'
   646  0010AC  66                 	db	102	;'f'
   647  0010AD  74                 	db	116	;'t'
   648  0010AE  0A                 	db	10
   649  0010AF  00                 	db	0
   650  0010B0                     STR_13:
   651                           
   652                           ; BSR set to: 1
   653  0010B0  45                 	db	69	;'E'
   654  0010B1  6E                 	db	110	;'n'
   655  0010B2  64                 	db	100	;'d'
   656  0010B3  65                 	db	101	;'e'
   657  0010B4  20                 	db	32
   658  0010B5  46                 	db	70	;'F'
   659  0010B6  6F                 	db	111	;'o'
   660  0010B7  6C                 	db	108	;'l'
   661  0010B8  6C                 	db	108	;'l'
   662  0010B9  6F                 	db	111	;'o'
   663  0010BA  77                 	db	119	;'w'
   664  0010BB  0A                 	db	10
   665  0010BC  00                 	db	0
   666  0010BD                     STR_6:
   667                           
   668                           ; BSR set to: 1
   669  0010BD  72                 	db	114	;'r'
   670  0010BE  61                 	db	97	;'a'
   671  0010BF  74                 	db	116	;'t'
   672  0010C0  69                 	db	105	;'i'
   673  0010C1  6F                 	db	111	;'o'
   674  0010C2  3A                 	db	58	;':'
   675  0010C3  20                 	db	32
   676  0010C4  26                 	db	38
   677  0010C5  66                 	db	102	;'f'
   678  0010C6  20                 	db	32
   679  0010C7  20                 	db	32
   680  0010C8  20                 	db	32
   681  0010C9  00                 	db	0
   682  0010CA                     STR_9:
   683                           
   684                           ; BSR set to: 1
   685  0010CA  53                 	db	83	;'S'
   686  0010CB  74                 	db	116	;'t'
   687  0010CC  72                 	db	114	;'r'
   688  0010CD  61                 	db	97	;'a'
   689  0010CE  69                 	db	105	;'i'
   690  0010CF  74                 	db	116	;'t'
   691  0010D0  0A                 	db	10
   692  0010D1  00                 	db	0
   693  0010D2                     STR_14:
   694                           
   695                           ; BSR set to: 1
   696  0010D2  49                 	db	73	;'I'
   697  0010D3  4E                 	db	78	;'N'
   698  0010D4  46                 	db	70	;'F'
   699  0010D5  00                 	db	0
   700  0010D6                     STR_18:
   701                           
   702                           ; BSR set to: 1
   703  0010D6  4E                 	db	78	;'N'
   704  0010D7  41                 	db	65	;'A'
   705  0010D8  4E                 	db	78	;'N'
   706  0010D9  00                 	db	0
   707  0010DA                     STR_15:
   708                           
   709                           ; BSR set to: 1
   710  0010DA  69                 	db	105	;'i'
   711  0010DB  6E                 	db	110	;'n'
   712  0010DC  66                 	db	102	;'f'
   713  0010DD  00                 	db	0
   714  0010DE                     STR_19:
   715                           
   716                           ; BSR set to: 1
   717  0010DE  6E                 	db	110	;'n'
   718  0010DF  61                 	db	97	;'a'
   719  0010E0  6E                 	db	110	;'n'
   720  0010E1  00                 	db	0
   721  0010E2                     STR_22:
   722                           
   723                           ; BSR set to: 1
   724  0010E2  6C                 	db	108	;'l'
   725  0010E3  66                 	db	102	;'f'
   726  0010E4  00                 	db	0
   727  0010E5  00                 	db	0	; dummy byte at the end
   728  0000                     
   729                           ; #config settings
   730                           
   731                           	psect	cinit
   732  005ECA                     __pcinit:
   733                           	callstack 0
   734  005ECA                     start_initialization:
   735                           	callstack 0
   736  005ECA                     __initialization:
   737                           	callstack 0
   738                           
   739                           ; Clear objects allocated to BANK1 (149 bytes)
   740  005ECA  EE00  F100         	lfsr	0,__pbssBANK1
   741  005ECE  0E95               	movlw	149
   742  005ED0                     clear_0:
   743  005ED0  6AEE               	clrf	postinc0,c
   744  005ED2  06E8               	decf	wreg,f,c
   745  005ED4  E1FD               	bnz	clear_0
   746                           
   747                           ; Clear objects allocated to BANK0 (14 bytes)
   748  005ED6  EE00  F0F1         	lfsr	0,__pbssBANK0
   749  005EDA  0E0E               	movlw	14
   750  005EDC                     clear_1:
   751  005EDC  6AEE               	clrf	postinc0,c
   752  005EDE  06E8               	decf	wreg,f,c
   753  005EE0  E1FD               	bnz	clear_1
   754                           
   755                           ; Clear objects allocated to COMRAM (19 bytes)
   756  005EE2  EE00  F03A         	lfsr	0,__pbssCOMRAM
   757  005EE6  0E13               	movlw	19
   758  005EE8                     clear_2:
   759  005EE8  6AEE               	clrf	postinc0,c
   760  005EEA  06E8               	decf	wreg,f,c
   761  005EEC  E1FD               	bnz	clear_2
   762                           
   763                           ;
   764                           ; Setup IVTBASE
   765                           ;
   766  005EEE  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   767  005EF0  6ED5               	movwf	213,c
   768  005EF2  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   769  005EF4  6ED6               	movwf	214,c
   770  005EF6  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   771  005EF8  6ED7               	movwf	215,c
   772  005EFA                     end_of_initialization:
   773                           	callstack 0
   774  005EFA                     __end_of__initialization:
   775                           	callstack 0
   776  005EFA  0100               	movlb	0
   777  005EFC  EF88  F031         	goto	_main	;jump to C main() function
   778                           
   779                           	psect	bssCOMRAM
   780  00003A                     __pbssCOMRAM:
   781                           	callstack 0
   782  00003A                     _prec:
   783                           	callstack 0
   784  00003A                     	ds	2
   785  00003C                     _flags:
   786                           	callstack 0
   787  00003C                     	ds	2
   788  00003E                     _currentSpeed:
   789                           	callstack 0
   790  00003E                     	ds	2
   791  000040                     _setSpeed:
   792                           	callstack 0
   793  000040                     	ds	2
   794  000042                     _curveRightCount:
   795                           	callstack 0
   796  000042                     	ds	1
   797  000043                     _curveLeftCount:
   798                           	callstack 0
   799  000043                     	ds	1
   800  000044                     _uart1RxCount:
   801                           	callstack 0
   802  000044                     	ds	1
   803  000045                     _uart1RxTail:
   804                           	callstack 0
   805  000045                     	ds	1
   806  000046                     _uart1RxHead:
   807                           	callstack 0
   808  000046                     	ds	1
   809  000047                     _uart1TxTail:
   810                           	callstack 0
   811  000047                     	ds	1
   812  000048                     _uart1TxHead:
   813                           	callstack 0
   814  000048                     	ds	1
   815  000049                     _smtPeriod:
   816                           	callstack 0
   817  000049                     	ds	4
   818                           
   819                           	psect	bssBANK0
   820  0000F1                     __pbssBANK0:
   821                           	callstack 0
   822  0000F1                     _actMotorPow:
   823                           	callstack 0
   824  0000F1                     	ds	2
   825  0000F3                     _roundTimeCount:
   826                           	callstack 0
   827  0000F3                     	ds	2
   828  0000F5                     _distRight:
   829                           	callstack 0
   830  0000F5                     	ds	2
   831  0000F7                     _distLeft:
   832                           	callstack 0
   833  0000F7                     	ds	2
   834  0000F9                     _delay:
   835                           	callstack 0
   836  0000F9                     	ds	1
   837  0000FA                     _cycle10ms:
   838                           	callstack 0
   839  0000FA                     	ds	1
   840  0000FB                     _curveMode:
   841                           	callstack 0
   842  0000FB                     	ds	1
   843  0000FC                     _driveMode:
   844                           	callstack 0
   845  0000FC                     	ds	1
   846  0000FD                     _distFront:
   847                           	callstack 0
   848  0000FD                     	ds	2
   849                           
   850                           	psect	bssBANK1
   851  000100                     __pbssBANK1:
   852                           	callstack 0
   853  000100                     _uart1RxStatusBuffer:
   854                           	callstack 0
   855  000100                     	ds	8
   856  000108                     _uart1RxBuffer:
   857                           	callstack 0
   858  000108                     	ds	8
   859  000110                     _uart1TxBuffer:
   860                           	callstack 0
   861  000110                     	ds	8
   862  000118                     floorf@F527:
   863                           	callstack 0
   864  000118                     	ds	4
   865  00011C                     ___fpclassifyf@F465:
   866                           	callstack 0
   867  00011C                     	ds	4
   868  000120                     _smtWay:
   869                           	callstack 0
   870  000120                     	ds	4
   871  000124                     _smtDuty:
   872                           	callstack 0
   873  000124                     	ds	4
   874  000128                     _nout:
   875                           	callstack 0
   876  000128                     	ds	2
   877  00012A                     _width:
   878                           	callstack 0
   879  00012A                     	ds	2
   880  00012C                     _BatteryVolt:
   881                           	callstack 0
   882  00012C                     	ds	2
   883  00012E                     _reverseTime:
   884                           	callstack 0
   885  00012E                     	ds	2
   886  000130                     _oldSpeed:
   887                           	callstack 0
   888  000130                     	ds	2
   889  000132                     _motPow:
   890                           	callstack 0
   891  000132                     	ds	2
   892  000134                     _followCount:
   893                           	callstack 0
   894  000134                     	ds	2
   895  000136                     _battCheckCount:
   896                           	callstack 0
   897  000136                     	ds	2
   898  000138                     _oldDistRight:
   899                           	callstack 0
   900  000138                     	ds	2
   901  00013A                     _oldDistLeft:
   902                           	callstack 0
   903  00013A                     	ds	2
   904  00013C                     _reverseCount:
   905                           	callstack 0
   906  00013C                     	ds	2
   907  00013E                     TMR4_ISR@CountCallBack:
   908                           	callstack 0
   909  00013E                     	ds	2
   910  000140                     _distRightM:
   911                           	callstack 0
   912  000140                     	ds	2
   913  000142                     _distLeftM:
   914                           	callstack 0
   915  000142                     	ds	2
   916  000144                     _uart1RxLastError:
   917                           	callstack 0
   918  000144                     	ds	1
   919  000145                     _dbuf:
   920                           	callstack 0
   921  000145                     	ds	80
   922                           
   923                           	psect	cstackBANK1
   924  0001AC                     __pcstackBANK1:
   925                           	callstack 0
   926  0001AC                     vfprintf@cfmt:
   927                           	callstack 0
   928                           
   929                           ; 2 bytes @ 0x0
   930  0001AC                     	ds	2
   931  0001AE                     ?_printf:
   932                           	callstack 0
   933  0001AE                     printf@fmt:
   934                           	callstack 0
   935                           
   936                           ; 2 bytes @ 0x2
   937  0001AE                     	ds	6
   938  0001B4                     printf@ap:
   939                           	callstack 0
   940                           
   941                           ; 2 bytes @ 0x8
   942  0001B4                     	ds	2
   943  0001B6                     ??_getCurve:
   944  0001B6                     ??_calcSteering:
   945  0001B6                     checkCurveCount@roundTime:
   946                           	callstack 0
   947                           
   948                           ; 4 bytes @ 0xA
   949  0001B6                     	ds	2
   950  0001B8                     getCurve@deltaLeft:
   951                           	callstack 0
   952  0001B8                     calcSteering@delta:
   953                           	callstack 0
   954                           
   955                           ; 2 bytes @ 0xC
   956  0001B8                     	ds	2
   957  0001BA                     getCurve@deltaRight:
   958                           	callstack 0
   959                           
   960                           ; 2 bytes @ 0xE
   961  0001BA                     	ds	2
   962  0001BC                     getCurve@ratio:
   963                           	callstack 0
   964                           
   965                           ; 4 bytes @ 0x10
   966  0001BC                     	ds	4
   967                           
   968                           	psect	cstackBANK0
   969  000060                     __pcstackBANK0:
   970                           	callstack 0
   971  000060                     ?_dtoa:
   972                           	callstack 0
   973  000060                     ?_utoa:
   974                           	callstack 0
   975  000060                     ___flmul@sign:
   976                           	callstack 0
   977  000060                     dtoa@fp:
   978                           	callstack 0
   979  000060                     utoa@fp:
   980                           	callstack 0
   981  000060                     ___fldiv@rem:
   982                           	callstack 0
   983                           
   984                           ; 4 bytes @ 0x0
   985  000060                     	ds	1
   986  000061                     ___flmul@aexp:
   987                           	callstack 0
   988                           
   989                           ; 1 bytes @ 0x1
   990  000061                     	ds	1
   991  000062                     ___flmul@grs:
   992                           	callstack 0
   993  000062                     dtoa@d:
   994                           	callstack 0
   995  000062                     utoa@d:
   996                           	callstack 0
   997                           
   998                           ; 8 bytes @ 0x2
   999  000062                     	ds	2
  1000  000064                     ___fldiv@sign:
  1001                           	callstack 0
  1002                           
  1003                           ; 1 bytes @ 0x4
  1004  000064                     	ds	1
  1005  000065                     ___fldiv@new_exp:
  1006                           	callstack 0
  1007                           
  1008                           ; 2 bytes @ 0x5
  1009  000065                     	ds	1
  1010  000066                     ___flmul@bexp:
  1011                           	callstack 0
  1012                           
  1013                           ; 1 bytes @ 0x6
  1014  000066                     	ds	1
  1015  000067                     ___fldiv@grs:
  1016                           	callstack 0
  1017  000067                     ___flmul@prod:
  1018                           	callstack 0
  1019                           
  1020                           ; 4 bytes @ 0x7
  1021  000067                     	ds	3
  1022  00006A                     _dtoa$3544:
  1023                           	callstack 0
  1024  00006A                     utoa@p:
  1025                           	callstack 0
  1026                           
  1027                           ; 2 bytes @ 0xA
  1028  00006A                     	ds	1
  1029  00006B                     ___fldiv@bexp:
  1030                           	callstack 0
  1031  00006B                     ___flmul@temp:
  1032                           	callstack 0
  1033                           
  1034                           ; 2 bytes @ 0xB
  1035  00006B                     	ds	1
  1036  00006C                     ___fldiv@aexp:
  1037                           	callstack 0
  1038  00006C                     dtoa@p:
  1039                           	callstack 0
  1040  00006C                     utoa@w:
  1041                           	callstack 0
  1042                           
  1043                           ; 2 bytes @ 0xC
  1044  00006C                     	ds	1
  1045  00006D                     ??_floorf:
  1046  00006D                     ?___fladd:
  1047                           	callstack 0
  1048  00006D                     ___flge@ff1:
  1049                           	callstack 0
  1050  00006D                     ___fladd@b:
  1051                           	callstack 0
  1052                           
  1053                           ; 4 bytes @ 0xD
  1054  00006D                     	ds	1
  1055  00006E                     dtoa@w:
  1056                           	callstack 0
  1057  00006E                     utoa@n:
  1058                           	callstack 0
  1059                           
  1060                           ; 8 bytes @ 0xE
  1061  00006E                     	ds	2
  1062  000070                     dtoa@s:
  1063                           	callstack 0
  1064                           
  1065                           ; 2 bytes @ 0x10
  1066  000070                     	ds	1
  1067  000071                     ___flge@ff2:
  1068                           	callstack 0
  1069  000071                     ___fladd@a:
  1070                           	callstack 0
  1071                           
  1072                           ; 4 bytes @ 0x11
  1073  000071                     	ds	1
  1074  000072                     dtoa@n:
  1075                           	callstack 0
  1076                           
  1077                           ; 8 bytes @ 0x12
  1078  000072                     	ds	1
  1079  000073                     floorf@m:
  1080                           	callstack 0
  1081                           
  1082                           ; 4 bytes @ 0x13
  1083  000073                     	ds	2
  1084  000075                     ___fladd@signs:
  1085                           	callstack 0
  1086                           
  1087                           ; 1 bytes @ 0x15
  1088  000075                     	ds	1
  1089  000076                     ___fladd@aexp:
  1090                           	callstack 0
  1091  000076                     utoa@i:
  1092                           	callstack 0
  1093                           
  1094                           ; 2 bytes @ 0x16
  1095  000076                     	ds	1
  1096  000077                     ___fladd@bexp:
  1097                           	callstack 0
  1098  000077                     floorf@e:
  1099                           	callstack 0
  1100                           
  1101                           ; 2 bytes @ 0x17
  1102  000077                     	ds	1
  1103  000078                     ___fladd@grs:
  1104                           	callstack 0
  1105                           
  1106                           ; 1 bytes @ 0x18
  1107  000078                     	ds	1
  1108  000079                     ?___flsub:
  1109                           	callstack 0
  1110  000079                     ?___fltol:
  1111                           	callstack 0
  1112  000079                     ___fltol@f1:
  1113                           	callstack 0
  1114  000079                     ___flsub@b:
  1115                           	callstack 0
  1116  000079                     floorf@u:
  1117                           	callstack 0
  1118                           
  1119                           ; 4 bytes @ 0x19
  1120  000079                     	ds	1
  1121  00007A                     dtoa@i:
  1122                           	callstack 0
  1123                           
  1124                           ; 2 bytes @ 0x1A
  1125  00007A                     	ds	3
  1126  00007D                     ??___fltol:
  1127  00007D                     ___flsub@a:
  1128                           	callstack 0
  1129                           
  1130                           ; 4 bytes @ 0x1D
  1131  00007D                     	ds	4
  1132  000081                     ___fltol@sign1:
  1133                           	callstack 0
  1134                           
  1135                           ; 1 bytes @ 0x21
  1136  000081                     	ds	1
  1137  000082                     ___fltol@exp1:
  1138                           	callstack 0
  1139                           
  1140                           ; 1 bytes @ 0x22
  1141  000082                     	ds	1
  1142  000083                     ??_calcSpeed:
  1143  000083                     ??_calcMotorPow:
  1144  000083                     ?_efgtoa:
  1145                           	callstack 0
  1146  000083                     setSteering@steering:
  1147                           	callstack 0
  1148  000083                     efgtoa@fp:
  1149                           	callstack 0
  1150                           
  1151                           ; 2 bytes @ 0x23
  1152  000083                     	ds	2
  1153  000085                     setSteering@steeringMode:
  1154                           	callstack 0
  1155  000085                     calcMotorPow@setSpeedDelta:
  1156                           	callstack 0
  1157  000085                     efgtoa@f:
  1158                           	callstack 0
  1159                           
  1160                           ; 4 bytes @ 0x25
  1161  000085                     	ds	1
  1162  000086                     ??_setSteering:
  1163                           
  1164                           ; 1 bytes @ 0x26
  1165  000086                     	ds	1
  1166  000087                     calcSpeed@speed:
  1167                           	callstack 0
  1168  000087                     calcMotorPow@oldSpeedDelta:
  1169                           	callstack 0
  1170                           
  1171                           ; 2 bytes @ 0x27
  1172  000087                     	ds	1
  1173  000088                     setSteering@steeringF:
  1174                           	callstack 0
  1175                           
  1176                           ; 2 bytes @ 0x28
  1177  000088                     	ds	1
  1178  000089                     calcMotorPow@addMPow:
  1179                           	callstack 0
  1180  000089                     efgtoa@c:
  1181                           	callstack 0
  1182                           
  1183                           ; 1 bytes @ 0x29
  1184  000089                     	ds	1
  1185  00008A                     ??_efgtoa:
  1186  00008A                     setSteering@steeringB:
  1187                           	callstack 0
  1188                           
  1189                           ; 2 bytes @ 0x2A
  1190  00008A                     	ds	5
  1191  00008F                     _efgtoa$3568:
  1192                           	callstack 0
  1193                           
  1194                           ; 2 bytes @ 0x2F
  1195  00008F                     	ds	2
  1196  000091                     _efgtoa$3569:
  1197                           	callstack 0
  1198                           
  1199                           ; 2 bytes @ 0x31
  1200  000091                     	ds	2
  1201  000093                     _efgtoa$3573:
  1202                           	callstack 0
  1203                           
  1204                           ; 2 bytes @ 0x33
  1205  000093                     	ds	2
  1206  000095                     _efgtoa$3577:
  1207                           	callstack 0
  1208                           
  1209                           ; 2 bytes @ 0x35
  1210  000095                     	ds	2
  1211  000097                     _efgtoa$3578:
  1212                           	callstack 0
  1213                           
  1214                           ; 2 bytes @ 0x37
  1215  000097                     	ds	2
  1216  000099                     _efgtoa$3579:
  1217                           	callstack 0
  1218                           
  1219                           ; 2 bytes @ 0x39
  1220  000099                     	ds	2
  1221  00009B                     efgtoa@t:
  1222                           	callstack 0
  1223                           
  1224                           ; 2 bytes @ 0x3B
  1225  00009B                     	ds	2
  1226  00009D                     efgtoa@pp:
  1227                           	callstack 0
  1228                           
  1229                           ; 2 bytes @ 0x3D
  1230  00009D                     	ds	2
  1231  00009F                     efgtoa@ne:
  1232                           	callstack 0
  1233                           
  1234                           ; 2 bytes @ 0x3F
  1235  00009F                     	ds	2
  1236  0000A1                     efgtoa@m:
  1237                           	callstack 0
  1238                           
  1239                           ; 2 bytes @ 0x41
  1240  0000A1                     	ds	2
  1241  0000A3                     efgtoa@ou:
  1242                           	callstack 0
  1243                           
  1244                           ; 4 bytes @ 0x43
  1245  0000A3                     	ds	4
  1246  0000A7                     efgtoa@d:
  1247                           	callstack 0
  1248                           
  1249                           ; 2 bytes @ 0x47
  1250  0000A7                     	ds	2
  1251  0000A9                     efgtoa@sign:
  1252                           	callstack 0
  1253                           
  1254                           ; 2 bytes @ 0x49
  1255  0000A9                     	ds	2
  1256  0000AB                     efgtoa@p:
  1257                           	callstack 0
  1258                           
  1259                           ; 2 bytes @ 0x4B
  1260  0000AB                     	ds	2
  1261  0000AD                     efgtoa@w:
  1262                           	callstack 0
  1263                           
  1264                           ; 2 bytes @ 0x4D
  1265  0000AD                     	ds	2
  1266  0000AF                     efgtoa@nmode:
  1267                           	callstack 0
  1268                           
  1269                           ; 1 bytes @ 0x4F
  1270  0000AF                     	ds	1
  1271  0000B0                     efgtoa@mode:
  1272                           	callstack 0
  1273                           
  1274                           ; 1 bytes @ 0x50
  1275  0000B0                     	ds	1
  1276  0000B1                     efgtoa@h:
  1277                           	callstack 0
  1278                           
  1279                           ; 4 bytes @ 0x51
  1280  0000B1                     	ds	4
  1281  0000B5                     efgtoa@l:
  1282                           	callstack 0
  1283                           
  1284                           ; 4 bytes @ 0x55
  1285  0000B5                     	ds	4
  1286  0000B9                     efgtoa@i:
  1287                           	callstack 0
  1288                           
  1289                           ; 2 bytes @ 0x59
  1290  0000B9                     	ds	2
  1291  0000BB                     efgtoa@g:
  1292                           	callstack 0
  1293                           
  1294                           ; 4 bytes @ 0x5B
  1295  0000BB                     	ds	4
  1296  0000BF                     efgtoa@e:
  1297                           	callstack 0
  1298                           
  1299                           ; 2 bytes @ 0x5F
  1300  0000BF                     	ds	2
  1301  0000C1                     efgtoa@n:
  1302                           	callstack 0
  1303                           
  1304                           ; 2 bytes @ 0x61
  1305  0000C1                     	ds	2
  1306  0000C3                     efgtoa@u:
  1307                           	callstack 0
  1308                           
  1309                           ; 4 bytes @ 0x63
  1310  0000C3                     	ds	4
  1311  0000C7                     ?_vfpfcnvrt:
  1312                           	callstack 0
  1313  0000C7                     vfpfcnvrt@fp:
  1314                           	callstack 0
  1315                           
  1316                           ; 2 bytes @ 0x67
  1317  0000C7                     	ds	2
  1318  0000C9                     vfpfcnvrt@fmt:
  1319                           	callstack 0
  1320                           
  1321                           ; 2 bytes @ 0x69
  1322  0000C9                     	ds	2
  1323  0000CB                     vfpfcnvrt@ap:
  1324                           	callstack 0
  1325                           
  1326                           ; 2 bytes @ 0x6B
  1327  0000CB                     	ds	2
  1328  0000CD                     ??_vfpfcnvrt:
  1329                           
  1330                           ; 1 bytes @ 0x6D
  1331  0000CD                     	ds	4
  1332  0000D1                     vfpfcnvrt@ll:
  1333                           	callstack 0
  1334                           
  1335                           ; 8 bytes @ 0x71
  1336  0000D1                     	ds	8
  1337  0000D9                     vfpfcnvrt@llu:
  1338                           	callstack 0
  1339                           
  1340                           ; 8 bytes @ 0x79
  1341  0000D9                     	ds	8
  1342  0000E1                     _vfpfcnvrt$3604:
  1343                           	callstack 0
  1344                           
  1345                           ; 2 bytes @ 0x81
  1346  0000E1                     	ds	2
  1347  0000E3                     vfpfcnvrt@f:
  1348                           	callstack 0
  1349                           
  1350                           ; 4 bytes @ 0x83
  1351  0000E3                     	ds	4
  1352  0000E7                     vfpfcnvrt@ct:
  1353                           	callstack 0
  1354                           
  1355                           ; 3 bytes @ 0x87
  1356  0000E7                     	ds	3
  1357  0000EA                     vfpfcnvrt@c:
  1358                           	callstack 0
  1359                           
  1360                           ; 1 bytes @ 0x8A
  1361  0000EA                     	ds	1
  1362  0000EB                     ?_vfprintf:
  1363                           	callstack 0
  1364  0000EB                     vfprintf@fp:
  1365                           	callstack 0
  1366                           
  1367                           ; 2 bytes @ 0x8B
  1368  0000EB                     	ds	2
  1369  0000ED                     vfprintf@fmt:
  1370                           	callstack 0
  1371                           
  1372                           ; 2 bytes @ 0x8D
  1373  0000ED                     	ds	2
  1374  0000EF                     vfprintf@ap:
  1375                           	callstack 0
  1376                           
  1377                           ; 2 bytes @ 0x8F
  1378  0000EF                     	ds	2
  1379                           
  1380                           	psect	cstackCOMRAM
  1381  000001                     __pcstackCOMRAM:
  1382                           	callstack 0
  1383  000001                     CCP3_DefaultCallBack@capturedValue:
  1384                           	callstack 0
  1385                           
  1386                           ; 2 bytes @ 0x0
  1387  000001                     	ds	2
  1388  000003                     CCP3_CaptureISR@module:
  1389                           	callstack 0
  1390                           
  1391                           ; 2 bytes @ 0x2
  1392  000003                     	ds	2
  1393  000005                     CCP4_DefaultCallBack@capturedValue:
  1394                           	callstack 0
  1395                           
  1396                           ; 2 bytes @ 0x4
  1397  000005                     	ds	2
  1398  000007                     CCP4_CaptureISR@module:
  1399                           	callstack 0
  1400                           
  1401                           ; 2 bytes @ 0x6
  1402  000007                     	ds	2
  1403  000009                     ?_TMR5_ReadTimer:
  1404                           	callstack 0
  1405  000009                     TMR5_WriteTimer@timerVal:
  1406                           	callstack 0
  1407                           
  1408                           ; 2 bytes @ 0x8
  1409  000009                     	ds	2
  1410  00000B                     ??_TMR5_ReadTimer:
  1411  00000B                     
  1412                           ; 1 bytes @ 0xA
  1413  00000B                     	ds	2
  1414  00000D                     TMR5_ReadTimer@readVal:
  1415                           	callstack 0
  1416                           
  1417                           ; 2 bytes @ 0xC
  1418  00000D                     	ds	2
  1419  00000F                     TMR5_ReadTimer@readValHigh:
  1420                           	callstack 0
  1421                           
  1422                           ; 1 bytes @ 0xE
  1423  00000F                     	ds	1
  1424  000010                     TMR5_ReadTimer@readValLow:
  1425                           	callstack 0
  1426                           
  1427                           ; 1 bytes @ 0xF
  1428  000010                     	ds	1
  1429  000011                     ??_UART1_tx_vect_isr:
  1430  000011                     
  1431                           ; 1 bytes @ 0x10
  1432  000011                     	ds	1
  1433  000012                     ??_UART1_rx_vect_isr:
  1434                           
  1435                           ; 1 bytes @ 0x11
  1436  000012                     	ds	1
  1437  000013                     ??_TMR4_ISR:
  1438                           
  1439                           ; 1 bytes @ 0x12
  1440  000013                     	ds	1
  1441  000014                     ??_TMR3_Initialize:
  1442  000014                     ?_strlen:
  1443                           	callstack 0
  1444  000014                     ?___fpclassifyf:
  1445                           	callstack 0
  1446  000014                     ?_isupper:
  1447                           	callstack 0
  1448  000014                     ?_strncmp:
  1449                           	callstack 0
  1450  000014                     ?_ADCC_GetSingleConversion:
  1451                           	callstack 0
  1452  000014                     ?___awdiv:
  1453                           	callstack 0
  1454  000014                     ?___awmod:
  1455                           	callstack 0
  1456  000014                     ?___lwdiv:
  1457                           	callstack 0
  1458  000014                     ?___aldiv:
  1459                           	callstack 0
  1460  000014                     ?___flneg:
  1461                           	callstack 0
  1462  000014                     ?___aodiv:
  1463                           	callstack 0
  1464  000014                     ?___aomod:
  1465                           	callstack 0
  1466  000014                     ?___lodiv:
  1467                           	callstack 0
  1468  000014                     ?___lomod:
  1469                           	callstack 0
  1470  000014                     UART1_Write@txData:
  1471                           	callstack 0
  1472  000014                     INTERRUPT_Initialize@state:
  1473                           	callstack 0
  1474  000014                     UART1_SetFramingErrorHandler@interruptHandler:
  1475                           	callstack 0
  1476  000014                     UART1_SetOverrunErrorHandler@interruptHandler:
  1477                           	callstack 0
  1478  000014                     UART1_SetErrorHandler@interruptHandler:
  1479                           	callstack 0
  1480  000014                     UART1_SetRxInterruptHandler@InterruptHandler:
  1481                           	callstack 0
  1482  000014                     UART1_SetTxInterruptHandler@InterruptHandler:
  1483                           	callstack 0
  1484  000014                     CCP3_SetCallBack@customCallBack:
  1485                           	callstack 0
  1486  000014                     CCP4_SetCallBack@customCallBack:
  1487                           	callstack 0
  1488  000014                     TMR5_SetGateInterruptHandler@InterruptHandler:
  1489                           	callstack 0
  1490  000014                     TMR4_SetInterruptHandler@InterruptHandler:
  1491                           	callstack 0
  1492  000014                     PWM7_LoadDutyValue@dutyValue:
  1493                           	callstack 0
  1494  000014                     PWM8_LoadDutyValue@dutyValue:
  1495                           	callstack 0
  1496  000014                     PWM5_LoadDutyValue@dutyValue:
  1497                           	callstack 0
  1498  000014                     PWM6_LoadDutyValue@dutyValue:
  1499                           	callstack 0
  1500  000014                     ___awdiv@dividend:
  1501                           	callstack 0
  1502  000014                     ___awmod@dividend:
  1503                           	callstack 0
  1504  000014                     ___lwdiv@dividend:
  1505                           	callstack 0
  1506  000014                     isupper@c:
  1507                           	callstack 0
  1508  000014                     strcpy@dest:
  1509                           	callstack 0
  1510  000014                     strlen@s:
  1511                           	callstack 0
  1512  000014                     strncmp@_l:
  1513                           	callstack 0
  1514  000014                     ___aldiv@dividend:
  1515                           	callstack 0
  1516  000014                     ___fleq@ff1:
  1517                           	callstack 0
  1518  000014                     ___flneg@f1:
  1519                           	callstack 0
  1520  000014                     ___fpclassifyf@x:
  1521                           	callstack 0
  1522  000014                     ___aodiv@dividend:
  1523                           	callstack 0
  1524  000014                     ___aomod@dividend:
  1525                           	callstack 0
  1526  000014                     ___lodiv@dividend:
  1527                           	callstack 0
  1528  000014                     ___lomod@dividend:
  1529                           	callstack 0
  1530                           
  1531                           ; 8 bytes @ 0x13
  1532  000014                     	ds	1
  1533  000015                     putch@txData:
  1534                           	callstack 0
  1535                           
  1536                           ; 1 bytes @ 0x14
  1537  000015                     	ds	1
  1538  000016                     ??_TMR5_Initialize:
  1539  000016                     ??_isupper:
  1540  000016                     ??_PWM7_LoadDutyValue:
  1541  000016                     ??_PWM8_LoadDutyValue:
  1542  000016                     ??_PWM5_LoadDutyValue:
  1543  000016                     ??_PWM6_LoadDutyValue:
  1544  000016                     ??_ADCC_GetSingleConversion:
  1545  000016                     ___awdiv@divisor:
  1546                           	callstack 0
  1547  000016                     ___awmod@divisor:
  1548                           	callstack 0
  1549  000016                     ___lwdiv@divisor:
  1550                           	callstack 0
  1551  000016                     fputc@c:
  1552                           	callstack 0
  1553  000016                     strcpy@src:
  1554                           	callstack 0
  1555  000016                     strlen@a:
  1556                           	callstack 0
  1557  000016                     strncmp@_r:
  1558                           	callstack 0
  1559                           
  1560                           ; 2 bytes @ 0x15
  1561  000016                     	ds	2
  1562  000018                     ??___fpclassifyf:
  1563  000018                     ??_strcpy:
  1564  000018                     ADCC_GetSingleConversion@channel:
  1565                           	callstack 0
  1566  000018                     ___awdiv@counter:
  1567                           	callstack 0
  1568  000018                     ___awmod@counter:
  1569                           	callstack 0
  1570  000018                     ___lwdiv@counter:
  1571                           	callstack 0
  1572  000018                     setMotor@motorPower:
  1573                           	callstack 0
  1574  000018                     fputc@fp:
  1575                           	callstack 0
  1576  000018                     strncmp@n:
  1577                           	callstack 0
  1578  000018                     ___aldiv@divisor:
  1579                           	callstack 0
  1580  000018                     ___fleq@ff2:
  1581                           	callstack 0
  1582                           
  1583                           ; 4 bytes @ 0x17
  1584  000018                     	ds	1
  1585  000019                     ___awdiv@sign:
  1586                           	callstack 0
  1587  000019                     ___awmod@sign:
  1588                           	callstack 0
  1589  000019                     ___lwdiv@quotient:
  1590                           	callstack 0
  1591                           
  1592                           ; 2 bytes @ 0x18
  1593  000019                     	ds	1
  1594  00001A                     ??_setMotor:
  1595  00001A                     ??_fputc:
  1596  00001A                     ??_strncmp:
  1597  00001A                     ?_tolower:
  1598                           	callstack 0
  1599  00001A                     ___awdiv@quotient:
  1600                           	callstack 0
  1601  00001A                     strcpy@s:
  1602                           	callstack 0
  1603  00001A                     tolower@c:
  1604                           	callstack 0
  1605                           
  1606                           ; 2 bytes @ 0x19
  1607  00001A                     	ds	1
  1608  00001B                     strncmp@l:
  1609                           	callstack 0
  1610                           
  1611                           ; 2 bytes @ 0x1A
  1612  00001B                     	ds	1
  1613  00001C                     ??_tolower:
  1614  00001C                     ??___fleq:
  1615  00001C                     ?___xxtofl:
  1616                           	callstack 0
  1617  00001C                     ___aldiv@counter:
  1618                           	callstack 0
  1619  00001C                     ___fpclassifyf@e:
  1620                           	callstack 0
  1621  00001C                     strcpy@d:
  1622                           	callstack 0
  1623  00001C                     ___xxtofl@val:
  1624                           	callstack 0
  1625  00001C                     ___aodiv@divisor:
  1626                           	callstack 0
  1627  00001C                     ___aomod@divisor:
  1628                           	callstack 0
  1629  00001C                     ___lodiv@divisor:
  1630                           	callstack 0
  1631  00001C                     ___lomod@divisor:
  1632                           	callstack 0
  1633                           
  1634                           ; 8 bytes @ 0x1B
  1635  00001C                     	ds	1
  1636  00001D                     ___aldiv@sign:
  1637                           	callstack 0
  1638  00001D                     strncmp@r:
  1639                           	callstack 0
  1640                           
  1641                           ; 2 bytes @ 0x1C
  1642  00001D                     	ds	1
  1643  00001E                     ___aldiv@quotient:
  1644                           	callstack 0
  1645  00001E                     ___fpclassifyf@u:
  1646                           	callstack 0
  1647                           
  1648                           ; 4 bytes @ 0x1D
  1649  00001E                     	ds	1
  1650  00001F                     fputs@s:
  1651                           	callstack 0
  1652                           
  1653                           ; 2 bytes @ 0x1E
  1654  00001F                     	ds	1
  1655  000020                     ??___xxtofl:
  1656  000020                     _tolower$3698:
  1657                           	callstack 0
  1658                           
  1659                           ; 2 bytes @ 0x1F
  1660  000020                     	ds	1
  1661  000021                     fputs@fp:
  1662                           	callstack 0
  1663                           
  1664                           ; 2 bytes @ 0x20
  1665  000021                     	ds	1
  1666  000022                     ?_actSpeed:
  1667                           	callstack 0
  1668                           
  1669                           ; 2 bytes @ 0x21
  1670  000022                     	ds	1
  1671  000023                     fputs@c:
  1672                           	callstack 0
  1673                           
  1674                           ; 1 bytes @ 0x22
  1675  000023                     	ds	1
  1676  000024                     ___aodiv@counter:
  1677                           	callstack 0
  1678  000024                     ___aomod@counter:
  1679                           	callstack 0
  1680  000024                     ___lomod@counter:
  1681                           	callstack 0
  1682  000024                     ___xxtofl@sign:
  1683                           	callstack 0
  1684  000024                     actSpeed@speed:
  1685                           	callstack 0
  1686  000024                     fputs@i:
  1687                           	callstack 0
  1688  000024                     ___lodiv@quotient:
  1689                           	callstack 0
  1690                           
  1691                           ; 8 bytes @ 0x23
  1692  000024                     	ds	1
  1693  000025                     ___aodiv@sign:
  1694                           	callstack 0
  1695  000025                     ___aomod@sign:
  1696                           	callstack 0
  1697  000025                     ___xxtofl@exp:
  1698                           	callstack 0
  1699                           
  1700                           ; 1 bytes @ 0x24
  1701  000025                     	ds	1
  1702  000026                     ?_abs:
  1703                           	callstack 0
  1704  000026                     ?_pad:
  1705                           	callstack 0
  1706  000026                     pad@fp:
  1707                           	callstack 0
  1708  000026                     abs@a:
  1709                           	callstack 0
  1710  000026                     ___xxtofl@arg:
  1711                           	callstack 0
  1712  000026                     ___aodiv@quotient:
  1713                           	callstack 0
  1714                           
  1715                           ; 8 bytes @ 0x25
  1716  000026                     	ds	2
  1717  000028                     ??_abs:
  1718  000028                     pad@buf:
  1719                           	callstack 0
  1720                           
  1721                           ; 2 bytes @ 0x27
  1722  000028                     	ds	2
  1723  00002A                     ?___fldiv:
  1724                           	callstack 0
  1725  00002A                     ?___flmul:
  1726                           	callstack 0
  1727  00002A                     pad@p:
  1728                           	callstack 0
  1729  00002A                     ___fldiv@b:
  1730                           	callstack 0
  1731  00002A                     ___flmul@b:
  1732                           	callstack 0
  1733                           
  1734                           ; 4 bytes @ 0x29
  1735  00002A                     	ds	2
  1736  00002C                     ??_pad:
  1737  00002C                     ___lodiv@counter:
  1738                           	callstack 0
  1739                           
  1740                           ; 1 bytes @ 0x2B
  1741  00002C                     	ds	1
  1742  00002D                     pad@i:
  1743                           	callstack 0
  1744                           
  1745                           ; 2 bytes @ 0x2C
  1746  00002D                     	ds	1
  1747  00002E                     ___fldiv@a:
  1748                           	callstack 0
  1749  00002E                     ___flmul@a:
  1750                           	callstack 0
  1751                           
  1752                           ; 4 bytes @ 0x2D
  1753  00002E                     	ds	1
  1754  00002F                     pad@w:
  1755                           	callstack 0
  1756                           
  1757                           ; 2 bytes @ 0x2E
  1758  00002F                     	ds	2
  1759  000031                     ??_dtoa:
  1760  000031                     ??_utoa:
  1761                           
  1762                           ; 1 bytes @ 0x30
  1763  000031                     	ds	1
  1764  000032                     ??___fldiv:
  1765  000032                     ??___flmul:
  1766                           
  1767                           ; 1 bytes @ 0x31
  1768  000032                     	ds	4
  1769  000036                     ??___fladd:
  1770  000036                     ??___flge:
  1771  000036                     ?_floorf:
  1772                           	callstack 0
  1773  000036                     floorf@x:
  1774                           	callstack 0
  1775                           
  1776                           ; 4 bytes @ 0x35
  1777  000036                     	ds	4
  1778  00003A                     
  1779                           ; 1 bytes @ 0x39
  1780 ;;
  1781 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1782 ;;
  1783 ;; *************** function _main *****************
  1784 ;; Defined at:
  1785 ;;		line 8 in file "main.c"
  1786 ;; Parameters:    Size  Location     Type
  1787 ;;		None
  1788 ;; Auto vars:     Size  Location     Type
  1789 ;;		None
  1790 ;; Return value:  Size  Location     Type
  1791 ;;                  1    wreg      void 
  1792 ;; Registers used:
  1793 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1794 ;; Tracked objects:
  1795 ;;		On entry : 0/0
  1796 ;;		On exit  : 0/0
  1797 ;;		Unchanged: 0/0
  1798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1802 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1803 ;;Total ram usage:        0 bytes
  1804 ;; Hardware stack levels required when called: 19
  1805 ;; This function calls:
  1806 ;;		_SYSTEM_Initialize
  1807 ;;		_TMR4_SetInterruptHandler
  1808 ;;		_loop
  1809 ;; This function is called by:
  1810 ;;		Startup code after reset
  1811 ;; This function uses a non-reentrant model
  1812 ;;
  1813                           
  1814                           	psect	text0
  1815  006310                     __ptext0:
  1816                           	callstack 0
  1817  006310                     _main:
  1818                           	callstack 12
  1819  006310                     
  1820                           ;main.c: 9:     SYSTEM_Initialize();
  1821  006310  ECA0  F02D         	call	_SYSTEM_Initialize	;wreg free
  1822  006314                     
  1823                           ;main.c: 10:     (INTCON0bits.GIEH = 1);
  1824  006314  8ED2               	bsf	210,7,c	;volatile
  1825  006316                     
  1826                           ;main.c: 11:     (INTCON0bits.GIEL = 1);
  1827  006316  8CD2               	bsf	210,6,c	;volatile
  1828                           
  1829                           ;main.c: 12:     TMR4_SetInterruptHandler(TMR4_10msISR);
  1830  006318  0E64               	movlw	low _TMR4_10msISR
  1831  00631A  6E14               	movwf	TMR4_SetInterruptHandler@InterruptHandler^0,c
  1832  00631C  0E64               	movlw	high _TMR4_10msISR
  1833  00631E  6E15               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)^0,c
  1834  006320  EC23  F032         	call	_TMR4_SetInterruptHandler	;wreg free
  1835  006324                     l9598:
  1836                           
  1837                           ;main.c: 15:         loop();
  1838  006324  ECE7  F023         	call	_loop	;wreg free
  1839  006328  EF92  F031         	goto	l9598
  1840  00632C  EF57  F000         	goto	start
  1841  006330                     __end_of_main:
  1842                           	callstack 0
  1843                           
  1844 ;; *************** function _loop *****************
  1845 ;; Defined at:
  1846 ;;		line 19 in file "main.c"
  1847 ;; Parameters:    Size  Location     Type
  1848 ;;		None
  1849 ;; Auto vars:     Size  Location     Type
  1850 ;;		None
  1851 ;; Return value:  Size  Location     Type
  1852 ;;                  1    wreg      void 
  1853 ;; Registers used:
  1854 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1855 ;; Tracked objects:
  1856 ;;		On entry : 0/0
  1857 ;;		On exit  : 0/0
  1858 ;;		Unchanged: 0/0
  1859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1863 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1864 ;;Total ram usage:        0 bytes
  1865 ;; Hardware stack levels used: 1
  1866 ;; Hardware stack levels required when called: 18
  1867 ;; This function calls:
  1868 ;;		___flge
  1869 ;;		___xxtofl
  1870 ;;		_calcMotorPow
  1871 ;;		_calcSpeed
  1872 ;;		_calcSteering
  1873 ;;		_checkBatt
  1874 ;;		_checkCurveCount
  1875 ;;		_getBatteryVoltage
  1876 ;;		_getCurve
  1877 ;;		_getReverse
  1878 ;;		_setMotor
  1879 ;;		_setSteering
  1880 ;; This function is called by:
  1881 ;;		_main
  1882 ;; This function uses a non-reentrant model
  1883 ;;
  1884                           
  1885                           	psect	text1
  1886  0047CE                     __ptext1:
  1887                           	callstack 0
  1888  0047CE                     _loop:
  1889                           	callstack 12
  1890  0047CE                     
  1891                           ;main.c: 20:     setMotor(0);
  1892  0047CE  0E00               	movlw	0
  1893  0047D0  6E19               	movwf	(setMotor@motorPower+1)^0,c
  1894  0047D2  0E00               	movlw	0
  1895  0047D4  6E18               	movwf	setMotor@motorPower^0,c
  1896  0047D6  EC75  F027         	call	_setMotor	;wreg free
  1897                           
  1898                           ;main.c: 21:     setSteering(0, Front);
  1899  0047DA  0E00               	movlw	0
  1900  0047DC  0100               	movlb	0	; () banked
  1901  0047DE  6F84               	movwf	(setSteering@steering+1)& (0+255),b
  1902  0047E0  0E00               	movlw	0
  1903  0047E2  6F83               	movwf	setSteering@steering& (0+255),b
  1904  0047E4  0E03               	movlw	3
  1905  0047E6  6F85               	movwf	setSteering@steeringMode& (0+255),b
  1906  0047E8  EC4F  F01F         	call	_setSteering	;wreg free
  1907  0047EC                     l1230:
  1908  0047EC  B8CB               	btfsc	203,4,c	;volatile
  1909  0047EE  EFFB  F023         	goto	u10861
  1910  0047F2  EFFD  F023         	goto	u10860
  1911  0047F6                     u10861:
  1912  0047F6  EFF6  F023         	goto	l1230
  1913  0047FA                     u10860:
  1914  0047FA                     l9562:
  1915  0047FA  0100               	movlb	0	; () banked
  1916  0047FC  51FA               	movf	_cycle10ms& (0+255),w,b	;volatile
  1917  0047FE  B4D8               	btfsc	status,2,c
  1918  004800  EF04  F024         	goto	u10871
  1919  004804  EF06  F024         	goto	u10870
  1920  004808                     u10871:
  1921  004808  EFFD  F023         	goto	l9562
  1922  00480C                     u10870:
  1923  00480C                     
  1924                           ; BSR set to: 0
  1925                           ;main.c: 26:         cycle10ms = 0;
  1926  00480C  0E00               	movlw	0
  1927  00480E  6FFA               	movwf	_cycle10ms& (0+255),b	;volatile
  1928  004810                     
  1929                           ; BSR set to: 0
  1930                           ;main.c: 28:         getBatteryVoltage();
  1931  004810  ECF1  F031         	call	_getBatteryVoltage	;wreg free
  1932  004814                     
  1933                           ;main.c: 29:     } while (BatteryVolt < ((7.4) * 409.6));
  1934  004814  C12C  F01C         	movff	_BatteryVolt,___xxtofl@val
  1935  004818  C12D  F01D         	movff	_BatteryVolt+1,___xxtofl@val+1
  1936  00481C  6A1E               	clrf	(___xxtofl@val+2)^0,c
  1937  00481E  6A1F               	clrf	(___xxtofl@val+3)^0,c
  1938  004820  0E00               	movlw	0
  1939  004822  EC4A  F020         	call	___xxtofl
  1940  004826  C01C  F06D         	movff	?___xxtofl,___flge@ff1
  1941  00482A  C01D  F06E         	movff	?___xxtofl+1,___flge@ff1+1
  1942  00482E  C01E  F06F         	movff	?___xxtofl+2,___flge@ff1+2
  1943  004832  C01F  F070         	movff	?___xxtofl+3,___flge@ff1+3
  1944  004836  0EA4               	movlw	164
  1945  004838  0100               	movlb	0	; () banked
  1946  00483A  6F71               	movwf	___flge@ff2& (0+255),b
  1947  00483C  0E70               	movlw	112
  1948  00483E  6F72               	movwf	(___flge@ff2+1)& (0+255),b
  1949  004840  0E3D               	movlw	61
  1950  004842  6F73               	movwf	(___flge@ff2+2)& (0+255),b
  1951  004844  0E45               	movlw	69
  1952  004846  6F74               	movwf	(___flge@ff2+3)& (0+255),b
  1953  004848  EC81  F025         	call	___flge	;wreg free
  1954  00484C  0100               	movlb	0	; () banked
  1955  00484E  A0D8               	btfss	status,0,c
  1956  004850  EF2C  F024         	goto	u10881
  1957  004854  EF2E  F024         	goto	u10880
  1958  004858                     u10881:
  1959  004858  EFFD  F023         	goto	l9562
  1960  00485C                     u10880:
  1961  00485C                     
  1962                           ; BSR set to: 0
  1963                           ;main.c: 33:     oldDistLeft = distLeft;
  1964  00485C  C0F7  F13A         	movff	_distLeft,_oldDistLeft	;volatile
  1965  004860  C0F8  F13B         	movff	_distLeft+1,_oldDistLeft+1	;volatile
  1966                           
  1967                           ;main.c: 34:     oldDistRight = distRight;
  1968  004864  C0F5  F138         	movff	_distRight,_oldDistRight	;volatile
  1969  004868  C0F6  F139         	movff	_distRight+1,_oldDistRight+1	;volatile
  1970  00486C                     
  1971                           ; BSR set to: 0
  1972                           ;main.c: 35:     cycle10ms = 0;
  1973  00486C  0E00               	movlw	0
  1974  00486E  6FFA               	movwf	_cycle10ms& (0+255),b	;volatile
  1975  004870                     l9572:
  1976  004870  0100               	movlb	0	; () banked
  1977  004872  51FA               	movf	_cycle10ms& (0+255),w,b	;volatile
  1978  004874  B4D8               	btfsc	status,2,c
  1979  004876  EF3F  F024         	goto	u10891
  1980  00487A  EF41  F024         	goto	u10890
  1981  00487E                     u10891:
  1982  00487E  EF38  F024         	goto	l9572
  1983  004882                     u10890:
  1984  004882                     
  1985                           ; BSR set to: 0
  1986                           ;main.c: 38:         cycle10ms = 0;
  1987  004882  0E00               	movlw	0
  1988  004884  6FFA               	movwf	_cycle10ms& (0+255),b	;volatile
  1989  004886                     
  1990                           ; BSR set to: 0
  1991                           ;main.c: 40:         if (!PORTBbits.RB5) {
  1992  004886  BACB               	btfsc	203,5,c	;volatile
  1993  004888  EF48  F024         	goto	u10901
  1994  00488C  EF4A  F024         	goto	u10900
  1995  004890                     u10901:
  1996  004890  EF5C  F024         	goto	l9582
  1997  004894                     u10900:
  1998  004894                     
  1999                           ; BSR set to: 0
  2000                           ;main.c: 41:             setSpeed = 0;
  2001  004894  0E00               	movlw	0
  2002  004896  6E41               	movwf	(_setSpeed+1)^0,c
  2003  004898  0E00               	movlw	0
  2004  00489A  6E40               	movwf	_setSpeed^0,c
  2005                           
  2006                           ;main.c: 42:             actMotorPow = 0;
  2007  00489C  0E00               	movlw	0
  2008  00489E  6FF2               	movwf	(_actMotorPow+1)& (0+255),b
  2009  0048A0  0E00               	movlw	0
  2010  0048A2  6FF1               	movwf	_actMotorPow& (0+255),b
  2011  0048A4                     
  2012                           ; BSR set to: 0
  2013                           ;main.c: 43:             setSteering(0, Front);
  2014  0048A4  0E00               	movlw	0
  2015  0048A6  6F84               	movwf	(setSteering@steering+1)& (0+255),b
  2016  0048A8  0E00               	movlw	0
  2017  0048AA  6F83               	movwf	setSteering@steering& (0+255),b
  2018  0048AC  0E03               	movlw	3
  2019  0048AE  6F85               	movwf	setSteering@steeringMode& (0+255),b
  2020  0048B0  EC4F  F01F         	call	_setSteering	;wreg free
  2021                           
  2022                           ;main.c: 44:             break;
  2023  0048B4  EF76  F024         	goto	l1246
  2024  0048B8                     l9582:
  2025                           
  2026                           ; BSR set to: 0
  2027                           ;main.c: 53:         if (checkBatt()) {
  2028  0048B8  ECD1  F02B         	call	_checkBatt	;wreg free
  2029  0048BC  0900               	iorlw	0
  2030  0048BE  B4D8               	btfsc	status,2,c
  2031  0048C0  EF64  F024         	goto	u10911
  2032  0048C4  EF66  F024         	goto	u10910
  2033  0048C8                     u10911:
  2034  0048C8  EF68  F024         	goto	l9586
  2035  0048CC                     u10910:
  2036  0048CC  EF76  F024         	goto	l1246
  2037  0048D0                     l9586:
  2038                           
  2039                           ;main.c: 57:         getCurve();
  2040  0048D0  EC16  F018         	call	_getCurve	;wreg free
  2041                           
  2042                           ;main.c: 58:         getReverse();
  2043  0048D4  EC9A  F022         	call	_getReverse	;wreg free
  2044                           
  2045                           ;main.c: 60:         calcSteering();
  2046  0048D8  ECFC  F01A         	call	_calcSteering	;wreg free
  2047  0048DC                     
  2048                           ;main.c: 61:         calcSpeed();
  2049  0048DC  EC33  F01C         	call	_calcSpeed	;wreg free
  2050  0048E0                     
  2051                           ;main.c: 62:         calcMotorPow();
  2052  0048E0  EC41  F023         	call	_calcMotorPow	;wreg free
  2053                           
  2054                           ;main.c: 64:         checkCurveCount();
  2055  0048E4  EC4E  F028         	call	_checkCurveCount	;wreg free
  2056  0048E8  EF38  F024         	goto	l9572
  2057  0048EC                     l1246:
  2058  0048EC  0012               	return		;funcret
  2059  0048EE                     __end_of_loop:
  2060                           	callstack 0
  2061                           
  2062 ;; *************** function _getReverse *****************
  2063 ;; Defined at:
  2064 ;;		line 214 in file "main.c"
  2065 ;; Parameters:    Size  Location     Type
  2066 ;;		None
  2067 ;; Auto vars:     Size  Location     Type
  2068 ;;		None
  2069 ;; Return value:  Size  Location     Type
  2070 ;;                  1    wreg      void 
  2071 ;; Registers used:
  2072 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2073 ;; Tracked objects:
  2074 ;;		On entry : 0/0
  2075 ;;		On exit  : 0/0
  2076 ;;		Unchanged: 0/0
  2077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2081 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2082 ;;Total ram usage:        0 bytes
  2083 ;; Hardware stack levels used: 1
  2084 ;; Hardware stack levels required when called: 17
  2085 ;; This function calls:
  2086 ;;		_printf
  2087 ;; This function is called by:
  2088 ;;		_loop
  2089 ;; This function uses a non-reentrant model
  2090 ;;
  2091                           
  2092                           	psect	text2
  2093  004534                     __ptext2:
  2094                           	callstack 0
  2095  004534                     _getReverse:
  2096                           	callstack 12
  2097  004534                     
  2098                           ;main.c: 215:     if (distFront < (15)) {
  2099  004534  0100               	movlb	0	; () banked
  2100  004536  51FE               	movf	(_distFront+1)& (0+255),w,b	;volatile
  2101  004538  E107               	bnz	u10561
  2102  00453A  0E0F               	movlw	15
  2103  00453C  5DFD               	subwf	_distFront& (0+255),w,b	;volatile
  2104  00453E  B0D8               	btfsc	status,0,c
  2105  004540  EFA4  F022         	goto	u10561
  2106  004544  EFA6  F022         	goto	u10560
  2107  004548                     u10561:
  2108  004548  EFAB  F022         	goto	l9346
  2109  00454C                     u10560:
  2110  00454C                     
  2111                           ; BSR set to: 0
  2112                           ;main.c: 216:         ++reverseCount;
  2113  00454C  0101               	movlb	1	; () banked
  2114  00454E  4B3C               	infsnz	_reverseCount& (0+255),f,b
  2115  004550  2B3D               	incf	(_reverseCount+1)& (0+255),f,b
  2116                           
  2117                           ;main.c: 217:     } else if(driveMode != ReverseRight && driveMode != ReverseLeft) {
  2118  004552  EFC2  F022         	goto	l9352
  2119  004556                     l9346:
  2120                           
  2121                           ; BSR set to: 0
  2122  004556  0E02               	movlw	2
  2123  004558  19FC               	xorwf	_driveMode& (0+255),w,b
  2124  00455A  B4D8               	btfsc	status,2,c
  2125  00455C  EFB2  F022         	goto	u10571
  2126  004560  EFB4  F022         	goto	u10570
  2127  004564                     u10571:
  2128  004564  EFC2  F022         	goto	l9352
  2129  004568                     u10570:
  2130  004568                     
  2131                           ; BSR set to: 0
  2132  004568  0E03               	movlw	3
  2133  00456A  19FC               	xorwf	_driveMode& (0+255),w,b
  2134  00456C  B4D8               	btfsc	status,2,c
  2135  00456E  EFBB  F022         	goto	u10581
  2136  004572  EFBD  F022         	goto	u10580
  2137  004576                     u10581:
  2138  004576  EFC2  F022         	goto	l9352
  2139  00457A                     u10580:
  2140  00457A                     
  2141                           ; BSR set to: 0
  2142                           ;main.c: 218:         reverseCount = 0;
  2143  00457A  0E00               	movlw	0
  2144  00457C  0101               	movlb	1	; () banked
  2145  00457E  6F3D               	movwf	(_reverseCount+1)& (0+255),b
  2146  004580  0E00               	movlw	0
  2147  004582  6F3C               	movwf	_reverseCount& (0+255),b
  2148  004584                     l9352:
  2149                           
  2150                           ;main.c: 221:     if (reverseCount > (50)) {
  2151  004584  0101               	movlb	1	; () banked
  2152  004586  513D               	movf	(_reverseCount+1)& (0+255),w,b
  2153  004588  E109               	bnz	u10590
  2154  00458A  0E33               	movlw	51
  2155  00458C  5D3C               	subwf	_reverseCount& (0+255),w,b
  2156  00458E  A0D8               	btfss	status,0,c
  2157  004590  EFCC  F022         	goto	u10591
  2158  004594  EFCE  F022         	goto	u10590
  2159  004598                     u10591:
  2160  004598  EF40  F023         	goto	l1318
  2161  00459C                     u10590:
  2162  00459C                     
  2163                           ; BSR set to: 1
  2164                           ;main.c: 222:         ++reverseTime;
  2165  00459C  4B2E               	infsnz	_reverseTime& (0+255),f,b
  2166  00459E  2B2F               	incf	(_reverseTime+1)& (0+255),f,b
  2167  0045A0                     
  2168                           ; BSR set to: 1
  2169                           ;main.c: 224:         if (driveMode != ReverseRight && driveMode != ReverseLeft) {
  2170  0045A0  0E02               	movlw	2
  2171  0045A2  0100               	movlb	0	; () banked
  2172  0045A4  19FC               	xorwf	_driveMode& (0+255),w,b
  2173  0045A6  B4D8               	btfsc	status,2,c
  2174  0045A8  EFD8  F022         	goto	u10601
  2175  0045AC  EFDA  F022         	goto	u10600
  2176  0045B0                     u10601:
  2177  0045B0  EF04  F023         	goto	l9370
  2178  0045B4                     u10600:
  2179  0045B4                     
  2180                           ; BSR set to: 0
  2181  0045B4  0E03               	movlw	3
  2182  0045B6  19FC               	xorwf	_driveMode& (0+255),w,b
  2183  0045B8  B4D8               	btfsc	status,2,c
  2184  0045BA  EFE1  F022         	goto	u10611
  2185  0045BE  EFE3  F022         	goto	u10610
  2186  0045C2                     u10611:
  2187  0045C2  EF04  F023         	goto	l9370
  2188  0045C6                     u10610:
  2189  0045C6                     
  2190                           ; BSR set to: 0
  2191                           ;main.c: 225:             if (distLeft > distRight) {
  2192  0045C6  51F7               	movf	_distLeft& (0+255),w,b	;volatile
  2193  0045C8  5DF5               	subwf	_distRight& (0+255),w,b	;volatile
  2194  0045CA  51F8               	movf	(_distLeft+1)& (0+255),w,b	;volatile
  2195  0045CC  59F6               	subwfb	(_distRight+1)& (0+255),w,b	;volatile
  2196  0045CE  B0D8               	btfsc	status,0,c
  2197  0045D0  EFEC  F022         	goto	u10621
  2198  0045D4  EFEE  F022         	goto	u10620
  2199  0045D8                     u10621:
  2200  0045D8  EFFA  F022         	goto	l9366
  2201  0045DC                     u10620:
  2202  0045DC                     
  2203                           ; BSR set to: 0
  2204                           ;main.c: 226:                 printf("ReverseRigth\n");
  2205  0045DC  0E7A               	movlw	low STR_10
  2206  0045DE  0101               	movlb	1	; () banked
  2207  0045E0  6FAE               	movwf	printf@fmt& (0+255),b
  2208  0045E2  0E10               	movlw	high STR_10
  2209  0045E4  6FAF               	movwf	(printf@fmt+1)& (0+255),b
  2210  0045E6  EC3A  F031         	call	_printf	;wreg free
  2211  0045EA                     
  2212                           ;main.c: 227:                 driveMode = ReverseRight;
  2213  0045EA  0E02               	movlw	2
  2214  0045EC  0100               	movlb	0	; () banked
  2215  0045EE  6FFC               	movwf	_driveMode& (0+255),b
  2216                           
  2217                           ;main.c: 228:             } else {
  2218  0045F0  EF04  F023         	goto	l9370
  2219  0045F4                     l9366:
  2220                           
  2221                           ; BSR set to: 0
  2222                           ;main.c: 229:                 printf("ReverseLeft\n");
  2223  0045F4  0EA3               	movlw	low STR_11
  2224  0045F6  0101               	movlb	1	; () banked
  2225  0045F8  6FAE               	movwf	printf@fmt& (0+255),b
  2226  0045FA  0E10               	movlw	high STR_11
  2227  0045FC  6FAF               	movwf	(printf@fmt+1)& (0+255),b
  2228  0045FE  EC3A  F031         	call	_printf	;wreg free
  2229  004602                     
  2230                           ;main.c: 230:                 driveMode = ReverseLeft;
  2231  004602  0E03               	movlw	3
  2232  004604  0100               	movlb	0	; () banked
  2233  004606  6FFC               	movwf	_driveMode& (0+255),b
  2234  004608                     l9370:
  2235                           
  2236                           ; BSR set to: 0
  2237                           ;main.c: 234:         if (distFront > (35) || reverseTime > (300)) {
  2238  004608  51FE               	movf	(_distFront+1)& (0+255),w,b	;volatile
  2239  00460A  E107               	bnz	u10631
  2240  00460C  0E24               	movlw	36
  2241  00460E  5DFD               	subwf	_distFront& (0+255),w,b	;volatile
  2242  004610  B0D8               	btfsc	status,0,c
  2243  004612  EF0D  F023         	goto	u10631
  2244  004616  EF0F  F023         	goto	u10630
  2245  00461A                     u10631:
  2246  00461A  EF1E  F023         	goto	l9374
  2247  00461E                     u10630:
  2248  00461E                     
  2249                           ; BSR set to: 0
  2250  00461E  0101               	movlb	1	; () banked
  2251  004620  BF2F               	btfsc	(_reverseTime+1)& (0+255),7,b
  2252  004622  EF1C  F023         	goto	u10641
  2253  004626  0E2D               	movlw	45
  2254  004628  5D2E               	subwf	_reverseTime& (0+255),w,b
  2255  00462A  0E01               	movlw	1
  2256  00462C  592F               	subwfb	(_reverseTime+1)& (0+255),w,b
  2257  00462E  A0D8               	btfss	status,0,c
  2258  004630  EF1C  F023         	goto	u10641
  2259  004634  EF1E  F023         	goto	u10640
  2260  004638                     u10641:
  2261  004638  EF40  F023         	goto	l1318
  2262  00463C                     u10640:
  2263  00463C                     l9374:
  2264                           
  2265                           ;main.c: 235:             printf("Stop Reverse\n");
  2266  00463C  0E6C               	movlw	low STR_12
  2267  00463E  0101               	movlb	1	; () banked
  2268  004640  6FAE               	movwf	printf@fmt& (0+255),b
  2269  004642  0E10               	movlw	high STR_12
  2270  004644  6FAF               	movwf	(printf@fmt+1)& (0+255),b
  2271  004646  EC3A  F031         	call	_printf	;wreg free
  2272  00464A                     
  2273                           ;main.c: 236:             if (distLeft > distRight) {
  2274  00464A  0100               	movlb	0	; () banked
  2275  00464C  51F7               	movf	_distLeft& (0+255),w,b	;volatile
  2276  00464E  5DF5               	subwf	_distRight& (0+255),w,b	;volatile
  2277  004650  51F8               	movf	(_distLeft+1)& (0+255),w,b	;volatile
  2278  004652  59F6               	subwfb	(_distRight+1)& (0+255),w,b	;volatile
  2279  004654  B0D8               	btfsc	status,0,c
  2280  004656  EF2F  F023         	goto	u10651
  2281  00465A  EF31  F023         	goto	u10650
  2282  00465E                     u10651:
  2283  00465E  EF35  F023         	goto	l9380
  2284  004662                     u10650:
  2285  004662                     
  2286                           ; BSR set to: 0
  2287                           ;main.c: 237:                 driveMode = CurveLeft;
  2288  004662  0E04               	movlw	4
  2289  004664  6FFC               	movwf	_driveMode& (0+255),b
  2290                           
  2291                           ;main.c: 238:             } else {
  2292  004666  EF37  F023         	goto	l1317
  2293  00466A                     l9380:
  2294                           
  2295                           ; BSR set to: 0
  2296                           ;main.c: 239:                 driveMode = CurveRight;
  2297  00466A  0E05               	movlw	5
  2298  00466C  6FFC               	movwf	_driveMode& (0+255),b
  2299  00466E                     l1317:
  2300                           
  2301                           ; BSR set to: 0
  2302                           ;main.c: 242:             reverseCount = 0;
  2303  00466E  0E00               	movlw	0
  2304  004670  0101               	movlb	1	; () banked
  2305  004672  6F3D               	movwf	(_reverseCount+1)& (0+255),b
  2306  004674  0E00               	movlw	0
  2307  004676  6F3C               	movwf	_reverseCount& (0+255),b
  2308                           
  2309                           ;main.c: 243:             reverseTime = 0;
  2310  004678  0E00               	movlw	0
  2311  00467A  6F2F               	movwf	(_reverseTime+1)& (0+255),b
  2312  00467C  0E00               	movlw	0
  2313  00467E  6F2E               	movwf	_reverseTime& (0+255),b
  2314  004680                     l1318:
  2315                           
  2316                           ; BSR set to: 1
  2317  004680  0012               	return		;funcret
  2318  004682                     __end_of_getReverse:
  2319                           	callstack 0
  2320                           
  2321 ;; *************** function _getCurve *****************
  2322 ;; Defined at:
  2323 ;;		line 133 in file "main.c"
  2324 ;; Parameters:    Size  Location     Type
  2325 ;;		None
  2326 ;; Auto vars:     Size  Location     Type
  2327 ;;  ratio           4   16[BANK1 ] float 
  2328 ;;  delta           2    0        short 
  2329 ;;  deltaRight      2   14[BANK1 ] short 
  2330 ;;  deltaLeft       2   12[BANK1 ] short 
  2331 ;; Return value:  Size  Location     Type
  2332 ;;                  1    wreg      void 
  2333 ;; Registers used:
  2334 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2335 ;; Tracked objects:
  2336 ;;		On entry : 0/0
  2337 ;;		On exit  : 0/0
  2338 ;;		Unchanged: 0/0
  2339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2341 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2342 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2343 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2344 ;;Total ram usage:       10 bytes
  2345 ;; Hardware stack levels used: 1
  2346 ;; Hardware stack levels required when called: 17
  2347 ;; This function calls:
  2348 ;;		___flge
  2349 ;;		___lwdiv
  2350 ;;		___xxtofl
  2351 ;;		_printf
  2352 ;; This function is called by:
  2353 ;;		_loop
  2354 ;; This function uses a non-reentrant model
  2355 ;;
  2356                           
  2357                           	psect	text3
  2358  00302C                     __ptext3:
  2359                           	callstack 0
  2360  00302C                     _getCurve:
  2361                           	callstack 12
  2362  00302C                     
  2363                           ;main.c: 134:     int16_t deltaLeft;;main.c: 135:     int16_t deltaRight;;main.c: 137:  
      +                             switch (curveMode) {
  2364  00302C  EF61  F019         	goto	l9336
  2365  003030                     l9266:
  2366                           
  2367                           ; BSR set to: 1
  2368                           ;main.c: 139:             deltaLeft = (int16_t) (distLeft - oldDistLeft);
  2369  003030  513A               	movf	_oldDistLeft& (0+255),w,b
  2370  003032  0100               	movlb	0	; () banked
  2371  003034  5DF7               	subwf	_distLeft& (0+255),w,b	;volatile
  2372  003036  0101               	movlb	1	; () banked
  2373  003038  6FB8               	movwf	getCurve@deltaLeft& (0+255),b
  2374  00303A  513B               	movf	(_oldDistLeft+1)& (0+255),w,b
  2375  00303C  0100               	movlb	0	; () banked
  2376  00303E  59F8               	subwfb	(_distLeft+1)& (0+255),w,b	;volatile
  2377  003040  0101               	movlb	1	; () banked
  2378  003042  6FB9               	movwf	(getCurve@deltaLeft+1)& (0+255),b
  2379                           
  2380                           ;main.c: 140:             deltaRight = (int16_t) (distRight - oldDistRight);
  2381  003044  5138               	movf	_oldDistRight& (0+255),w,b
  2382  003046  0100               	movlb	0	; () banked
  2383  003048  5DF5               	subwf	_distRight& (0+255),w,b	;volatile
  2384  00304A  0101               	movlb	1	; () banked
  2385  00304C  6FBA               	movwf	getCurve@deltaRight& (0+255),b
  2386  00304E  5139               	movf	(_oldDistRight+1)& (0+255),w,b
  2387  003050  0100               	movlb	0	; () banked
  2388  003052  59F6               	subwfb	(_distRight+1)& (0+255),w,b	;volatile
  2389  003054  0101               	movlb	1	; () banked
  2390  003056  6FBB               	movwf	(getCurve@deltaRight+1)& (0+255),b
  2391                           
  2392                           ;main.c: 143:             if (deltaLeft > (30) && deltaLeft < (300) && oldDistLeft < (12
      +                          5)) {
  2393  003058  BFB9               	btfsc	(getCurve@deltaLeft+1)& (0+255),7,b
  2394  00305A  EF38  F018         	goto	u10421
  2395  00305E  51B9               	movf	(getCurve@deltaLeft+1)& (0+255),w,b
  2396  003060  E109               	bnz	u10420
  2397  003062  0E1F               	movlw	31
  2398  003064  5DB8               	subwf	getCurve@deltaLeft& (0+255),w,b
  2399  003066  A0D8               	btfss	status,0,c
  2400  003068  EF38  F018         	goto	u10421
  2401  00306C  EF3A  F018         	goto	u10420
  2402  003070                     u10421:
  2403  003070  EF5D  F018         	goto	l9276
  2404  003074                     u10420:
  2405  003074                     
  2406                           ; BSR set to: 1
  2407  003074  BFB9               	btfsc	(getCurve@deltaLeft+1)& (0+255),7,b
  2408  003076  EF48  F018         	goto	u10430
  2409  00307A  0E2C               	movlw	44
  2410  00307C  5DB8               	subwf	getCurve@deltaLeft& (0+255),w,b
  2411  00307E  0E01               	movlw	1
  2412  003080  59B9               	subwfb	(getCurve@deltaLeft+1)& (0+255),w,b
  2413  003082  B0D8               	btfsc	status,0,c
  2414  003084  EF46  F018         	goto	u10431
  2415  003088  EF48  F018         	goto	u10430
  2416  00308C                     u10431:
  2417  00308C  EF5D  F018         	goto	l9276
  2418  003090                     u10430:
  2419  003090                     
  2420                           ; BSR set to: 1
  2421  003090  513B               	movf	(_oldDistLeft+1)& (0+255),w,b
  2422  003092  E107               	bnz	u10441
  2423  003094  0E7D               	movlw	125
  2424  003096  5D3A               	subwf	_oldDistLeft& (0+255),w,b
  2425  003098  B0D8               	btfsc	status,0,c
  2426  00309A  EF51  F018         	goto	u10441
  2427  00309E  EF53  F018         	goto	u10440
  2428  0030A2                     u10441:
  2429  0030A2  EF5D  F018         	goto	l9276
  2430  0030A6                     u10440:
  2431  0030A6                     
  2432                           ; BSR set to: 1
  2433                           ;main.c: 144:                 delay = 0;
  2434  0030A6  0E00               	movlw	0
  2435  0030A8  0100               	movlb	0	; () banked
  2436  0030AA  6FF9               	movwf	_delay& (0+255),b
  2437                           
  2438                           ;main.c: 145:                 curveMode = BeforeCurve;
  2439  0030AC  0E01               	movlw	1
  2440  0030AE  6FFB               	movwf	_curveMode& (0+255),b
  2441                           
  2442                           ;main.c: 146:                 driveMode = CurveLeft;
  2443  0030B0  0E04               	movlw	4
  2444  0030B2  6FFC               	movwf	_driveMode& (0+255),b
  2445  0030B4                     
  2446                           ; BSR set to: 0
  2447                           ;main.c: 147:                 ++curveLeftCount;
  2448  0030B4  2A43               	incf	_curveLeftCount^0,f,c
  2449                           
  2450                           ;main.c: 150:             } else if (deltaRight > (30) && deltaRight < (300) && oldDistR
      +                          ight < (125)) {
  2451  0030B6  EF80  F019         	goto	l1286
  2452  0030BA                     l9276:
  2453                           
  2454                           ; BSR set to: 1
  2455  0030BA  BFBB               	btfsc	(getCurve@deltaRight+1)& (0+255),7,b
  2456  0030BC  EF69  F018         	goto	u10451
  2457  0030C0  51BB               	movf	(getCurve@deltaRight+1)& (0+255),w,b
  2458  0030C2  E109               	bnz	u10450
  2459  0030C4  0E1F               	movlw	31
  2460  0030C6  5DBA               	subwf	getCurve@deltaRight& (0+255),w,b
  2461  0030C8  A0D8               	btfss	status,0,c
  2462  0030CA  EF69  F018         	goto	u10451
  2463  0030CE  EF6B  F018         	goto	u10450
  2464  0030D2                     u10451:
  2465  0030D2  EF80  F019         	goto	l1286
  2466  0030D6                     u10450:
  2467  0030D6                     
  2468                           ; BSR set to: 1
  2469  0030D6  BFBB               	btfsc	(getCurve@deltaRight+1)& (0+255),7,b
  2470  0030D8  EF79  F018         	goto	u10460
  2471  0030DC  0E2C               	movlw	44
  2472  0030DE  5DBA               	subwf	getCurve@deltaRight& (0+255),w,b
  2473  0030E0  0E01               	movlw	1
  2474  0030E2  59BB               	subwfb	(getCurve@deltaRight+1)& (0+255),w,b
  2475  0030E4  B0D8               	btfsc	status,0,c
  2476  0030E6  EF77  F018         	goto	u10461
  2477  0030EA  EF79  F018         	goto	u10460
  2478  0030EE                     u10461:
  2479  0030EE  EF80  F019         	goto	l1286
  2480  0030F2                     u10460:
  2481  0030F2                     
  2482                           ; BSR set to: 1
  2483  0030F2  5139               	movf	(_oldDistRight+1)& (0+255),w,b
  2484  0030F4  E107               	bnz	u10471
  2485  0030F6  0E7D               	movlw	125
  2486  0030F8  5D38               	subwf	_oldDistRight& (0+255),w,b
  2487  0030FA  B0D8               	btfsc	status,0,c
  2488  0030FC  EF82  F018         	goto	u10471
  2489  003100  EF84  F018         	goto	u10470
  2490  003104                     u10471:
  2491  003104  EF80  F019         	goto	l1286
  2492  003108                     u10470:
  2493  003108                     
  2494                           ; BSR set to: 1
  2495                           ;main.c: 151:                 delay = 0;
  2496  003108  0E00               	movlw	0
  2497  00310A  0100               	movlb	0	; () banked
  2498  00310C  6FF9               	movwf	_delay& (0+255),b
  2499                           
  2500                           ;main.c: 152:                 curveMode = BeforeCurve;
  2501  00310E  0E01               	movlw	1
  2502  003110  6FFB               	movwf	_curveMode& (0+255),b
  2503                           
  2504                           ;main.c: 153:                 driveMode = CurveRight;
  2505  003112  0E05               	movlw	5
  2506  003114  6FFC               	movwf	_driveMode& (0+255),b
  2507  003116                     
  2508                           ; BSR set to: 0
  2509                           ;main.c: 154:                 ++curveRightCount;
  2510  003116  2A42               	incf	_curveRightCount^0,f,c
  2511  003118  EF80  F019         	goto	l1286
  2512  00311C                     l9286:
  2513                           
  2514                           ; BSR set to: 1
  2515                           ;main.c: 162:             if (delay >= (15)) {
  2516  00311C  0E0E               	movlw	14
  2517  00311E  0100               	movlb	0	; () banked
  2518  003120  65F9               	cpfsgt	_delay& (0+255),b
  2519  003122  EF95  F018         	goto	u10481
  2520  003126  EF97  F018         	goto	u10480
  2521  00312A                     u10481:
  2522  00312A  EF9D  F018         	goto	l9290
  2523  00312E                     u10480:
  2524  00312E                     
  2525                           ; BSR set to: 0
  2526                           ;main.c: 163:                 delay = 0;
  2527  00312E  0E00               	movlw	0
  2528  003130  6FF9               	movwf	_delay& (0+255),b
  2529                           
  2530                           ;main.c: 164:                 curveMode = InCurve;
  2531  003132  0E02               	movlw	2
  2532  003134  6FFB               	movwf	_curveMode& (0+255),b
  2533                           
  2534                           ;main.c: 166:             } else {
  2535  003136  EF80  F019         	goto	l1286
  2536  00313A                     l9290:
  2537                           
  2538                           ; BSR set to: 0
  2539                           ;main.c: 167:                 ++delay;
  2540  00313A  2BF9               	incf	_delay& (0+255),f,b
  2541  00313C  EF80  F019         	goto	l1286
  2542  003140                     l9292:
  2543                           
  2544                           ; BSR set to: 1
  2545                           ;main.c: 171:             if (delay >= (20)) {
  2546  003140  0E13               	movlw	19
  2547  003142  0100               	movlb	0	; () banked
  2548  003144  65F9               	cpfsgt	_delay& (0+255),b
  2549  003146  EFA7  F018         	goto	u10491
  2550  00314A  EFA9  F018         	goto	u10490
  2551  00314E                     u10491:
  2552  00314E  EF9D  F018         	goto	l9290
  2553  003152                     u10490:
  2554  003152                     
  2555                           ; BSR set to: 0
  2556                           ;main.c: 172:                 if (distLeft < (45) || distRight < (45) || distFront > (30
      +                          0)) {
  2557  003152  51F8               	movf	(_distLeft+1)& (0+255),w,b	;volatile
  2558  003154  E109               	bnz	u10500
  2559  003156  0E2D               	movlw	45
  2560  003158  5DF7               	subwf	_distLeft& (0+255),w,b	;volatile
  2561  00315A  A0D8               	btfss	status,0,c
  2562  00315C  EFB2  F018         	goto	u10501
  2563  003160  EFB4  F018         	goto	u10500
  2564  003164                     u10501:
  2565  003164  EFCA  F018         	goto	l9300
  2566  003168                     u10500:
  2567  003168                     
  2568                           ; BSR set to: 0
  2569  003168  51F6               	movf	(_distRight+1)& (0+255),w,b	;volatile
  2570  00316A  E109               	bnz	u10510
  2571  00316C  0E2D               	movlw	45
  2572  00316E  5DF5               	subwf	_distRight& (0+255),w,b	;volatile
  2573  003170  A0D8               	btfss	status,0,c
  2574  003172  EFBD  F018         	goto	u10511
  2575  003176  EFBF  F018         	goto	u10510
  2576  00317A                     u10511:
  2577  00317A  EFCA  F018         	goto	l9300
  2578  00317E                     u10510:
  2579  00317E                     
  2580                           ; BSR set to: 0
  2581  00317E  0E2D               	movlw	45
  2582  003180  5DFD               	subwf	_distFront& (0+255),w,b	;volatile
  2583  003182  0E01               	movlw	1
  2584  003184  59FE               	subwfb	(_distFront+1)& (0+255),w,b	;volatile
  2585  003186  A0D8               	btfss	status,0,c
  2586  003188  EFC8  F018         	goto	u10521
  2587  00318C  EFCA  F018         	goto	u10520
  2588  003190                     u10521:
  2589  003190  EF80  F019         	goto	l1286
  2590  003194                     u10520:
  2591  003194                     l9300:
  2592                           
  2593                           ; BSR set to: 0
  2594                           ;main.c: 173:                     delay = 0;
  2595  003194  0E00               	movlw	0
  2596  003196  6FF9               	movwf	_delay& (0+255),b
  2597                           
  2598                           ;main.c: 174:                     curveMode = AfterCurve;
  2599  003198  0E03               	movlw	3
  2600  00319A  6FFB               	movwf	_curveMode& (0+255),b
  2601  00319C                     
  2602                           ; BSR set to: 0
  2603                           ;main.c: 177:                     float ratio = (distLeft / distRight);
  2604  00319C  C0F5  F016         	movff	_distRight,___lwdiv@divisor	;volatile
  2605  0031A0  C0F6  F017         	movff	_distRight+1,___lwdiv@divisor+1	;volatile
  2606  0031A4  C0F7  F014         	movff	_distLeft,___lwdiv@dividend	;volatile
  2607  0031A8  C0F8  F015         	movff	_distLeft+1,___lwdiv@dividend+1	;volatile
  2608  0031AC  EC1A  F02C         	call	___lwdiv	;wreg free
  2609  0031B0  C014  F01C         	movff	?___lwdiv,___xxtofl@val
  2610  0031B4  C015  F01D         	movff	?___lwdiv+1,___xxtofl@val+1
  2611  0031B8  6A1E               	clrf	(___xxtofl@val+2)^0,c
  2612  0031BA  6A1F               	clrf	(___xxtofl@val+3)^0,c
  2613  0031BC  0E00               	movlw	0
  2614  0031BE  EC4A  F020         	call	___xxtofl
  2615  0031C2  C01C  F1BC         	movff	?___xxtofl,getCurve@ratio
  2616  0031C6  C01D  F1BD         	movff	?___xxtofl+1,getCurve@ratio+1
  2617  0031CA  C01E  F1BE         	movff	?___xxtofl+2,getCurve@ratio+2
  2618  0031CE  C01F  F1BF         	movff	?___xxtofl+3,getCurve@ratio+3
  2619  0031D2                     
  2620                           ;main.c: 178:                     printf("ratio: &f   ",ratio);
  2621  0031D2  0EBD               	movlw	low STR_6
  2622  0031D4  0101               	movlb	1	; () banked
  2623  0031D6  6FAE               	movwf	printf@fmt& (0+255),b
  2624  0031D8  0E10               	movlw	high STR_6
  2625  0031DA  6FAF               	movwf	(printf@fmt+1)& (0+255),b
  2626  0031DC  C1BC  F1B0         	movff	getCurve@ratio,?_printf+2
  2627  0031E0  C1BD  F1B1         	movff	getCurve@ratio+1,?_printf+3
  2628  0031E4  C1BE  F1B2         	movff	getCurve@ratio+2,?_printf+4
  2629  0031E8  C1BF  F1B3         	movff	getCurve@ratio+3,?_printf+5
  2630  0031EC  EC3A  F031         	call	_printf	;wreg free
  2631  0031F0                     
  2632                           ;main.c: 179:                     if(ratio >= (2)){
  2633  0031F0  C1BC  F06D         	movff	getCurve@ratio,___flge@ff1
  2634  0031F4  C1BD  F06E         	movff	getCurve@ratio+1,___flge@ff1+1
  2635  0031F8  C1BE  F06F         	movff	getCurve@ratio+2,___flge@ff1+2
  2636  0031FC  C1BF  F070         	movff	getCurve@ratio+3,___flge@ff1+3
  2637  003200  0E00               	movlw	0
  2638  003202  0100               	movlb	0	; () banked
  2639  003204  6F71               	movwf	___flge@ff2& (0+255),b
  2640  003206  0E00               	movlw	0
  2641  003208  6F72               	movwf	(___flge@ff2+1)& (0+255),b
  2642  00320A  0E00               	movlw	0
  2643  00320C  6F73               	movwf	(___flge@ff2+2)& (0+255),b
  2644  00320E  0E40               	movlw	64
  2645  003210  6F74               	movwf	(___flge@ff2+3)& (0+255),b
  2646  003212  EC81  F025         	call	___flge	;wreg free
  2647  003216  0100               	movlb	0	; () banked
  2648  003218  A0D8               	btfss	status,0,c
  2649  00321A  EF11  F019         	goto	u10531
  2650  00321E  EF13  F019         	goto	u10530
  2651  003222                     u10531:
  2652  003222  EF21  F019         	goto	l9314
  2653  003226                     u10530:
  2654  003226                     
  2655                           ; BSR set to: 0
  2656                           ;main.c: 181:                         printf("Follow Right\n");
  2657  003226  0E88               	movlw	low STR_7
  2658  003228  0101               	movlb	1	; () banked
  2659  00322A  6FAE               	movwf	printf@fmt& (0+255),b
  2660  00322C  0E10               	movlw	high STR_7
  2661  00322E  6FAF               	movwf	(printf@fmt+1)& (0+255),b
  2662  003230  EC3A  F031         	call	_printf	;wreg free
  2663  003234                     l9312:
  2664                           
  2665                           ;main.c: 182:                         followCount = 0;
  2666  003234  0E00               	movlw	0
  2667  003236  0101               	movlb	1	; () banked
  2668  003238  6F35               	movwf	(_followCount+1)& (0+255),b
  2669  00323A  0E00               	movlw	0
  2670  00323C  6F34               	movwf	_followCount& (0+255),b
  2671                           
  2672                           ;main.c: 183:                     } else if(ratio <= (1 / (2))){
  2673  00323E  EF4D  F019         	goto	l9324
  2674  003242                     l9314:
  2675                           
  2676                           ; BSR set to: 0
  2677  003242  0E00               	movlw	0
  2678  003244  6F6D               	movwf	___flge@ff1& (0+255),b
  2679  003246  0E00               	movlw	0
  2680  003248  6F6E               	movwf	(___flge@ff1+1)& (0+255),b
  2681  00324A  0E00               	movlw	0
  2682  00324C  6F6F               	movwf	(___flge@ff1+2)& (0+255),b
  2683  00324E  0E00               	movlw	0
  2684  003250  6F70               	movwf	(___flge@ff1+3)& (0+255),b
  2685  003252  C1BC  F071         	movff	getCurve@ratio,___flge@ff2
  2686  003256  C1BD  F072         	movff	getCurve@ratio+1,___flge@ff2+1
  2687  00325A  C1BE  F073         	movff	getCurve@ratio+2,___flge@ff2+2
  2688  00325E  C1BF  F074         	movff	getCurve@ratio+3,___flge@ff2+3
  2689  003262  EC81  F025         	call	___flge	;wreg free
  2690  003266  0100               	movlb	0	; () banked
  2691  003268  A0D8               	btfss	status,0,c
  2692  00326A  EF39  F019         	goto	u10541
  2693  00326E  EF3B  F019         	goto	u10540
  2694  003272                     u10541:
  2695  003272  EF44  F019         	goto	l9320
  2696  003276                     u10540:
  2697  003276                     
  2698                           ; BSR set to: 0
  2699                           ;main.c: 185:                         printf("Follow Left\n");
  2700  003276  0E96               	movlw	low STR_8
  2701  003278  0101               	movlb	1	; () banked
  2702  00327A  6FAE               	movwf	printf@fmt& (0+255),b
  2703  00327C  0E10               	movlw	high STR_8
  2704  00327E  6FAF               	movwf	(printf@fmt+1)& (0+255),b
  2705  003280  EC3A  F031         	call	_printf	;wreg free
  2706  003284  EF1A  F019         	goto	l9312
  2707  003288                     l9320:
  2708                           
  2709                           ; BSR set to: 0
  2710                           ;main.c: 188:                         driveMode = Straight;
  2711  003288  0E00               	movlw	0
  2712  00328A  6FFC               	movwf	_driveMode& (0+255),b
  2713  00328C                     
  2714                           ; BSR set to: 0
  2715                           ;main.c: 189:                         printf("Strait\n");
  2716  00328C  0ECA               	movlw	low STR_9
  2717  00328E  0101               	movlb	1	; () banked
  2718  003290  6FAE               	movwf	printf@fmt& (0+255),b
  2719  003292  0E10               	movlw	high STR_9
  2720  003294  6FAF               	movwf	(printf@fmt+1)& (0+255),b
  2721  003296  EC3A  F031         	call	_printf	;wreg free
  2722  00329A                     l9324:
  2723                           
  2724                           ;main.c: 192:                     driveMode = Straight;
  2725  00329A  0E00               	movlw	0
  2726  00329C  0100               	movlb	0	; () banked
  2727  00329E  6FFC               	movwf	_driveMode& (0+255),b
  2728  0032A0  EF80  F019         	goto	l1286
  2729  0032A4                     l9328:
  2730                           
  2731                           ; BSR set to: 1
  2732                           ;main.c: 201:             if (delay >= (1)) {
  2733  0032A4  0100               	movlb	0	; () banked
  2734  0032A6  51F9               	movf	_delay& (0+255),w,b
  2735  0032A8  B4D8               	btfsc	status,2,c
  2736  0032AA  EF59  F019         	goto	u10551
  2737  0032AE  EF5B  F019         	goto	u10550
  2738  0032B2                     u10551:
  2739  0032B2  EF9D  F018         	goto	l9290
  2740  0032B6                     u10550:
  2741  0032B6                     
  2742                           ; BSR set to: 0
  2743                           ;main.c: 202:                 delay = 0;
  2744  0032B6  0E00               	movlw	0
  2745  0032B8  6FF9               	movwf	_delay& (0+255),b
  2746                           
  2747                           ;main.c: 203:                 curveMode = OutCurve;
  2748  0032BA  0E00               	movlw	0
  2749  0032BC  6FFB               	movwf	_curveMode& (0+255),b
  2750                           
  2751                           ;main.c: 205:             } else {
  2752  0032BE  EF80  F019         	goto	l1286
  2753  0032C2                     l9336:
  2754  0032C2  0100               	movlb	0	; () banked
  2755  0032C4  51FB               	movf	_curveMode& (0+255),w,b
  2756  0032C6  0101               	movlb	1	; () banked
  2757  0032C8  6FB6               	movwf	??_getCurve& (0+255),b
  2758  0032CA  6BB7               	clrf	(??_getCurve+1)& (0+255),b
  2759                           
  2760                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2761                           ; Switch size 1, requested type "simple"
  2762                           ; Number of cases is 1, Range of values is 0 to 0
  2763                           ; switch strategies available:
  2764                           ; Name         Instructions Cycles
  2765                           ; simple_byte            4     3 (average)
  2766                           ;	Chosen strategy is simple_byte
  2767  0032CC  51B7               	movf	(??_getCurve+1)& (0+255),w,b
  2768  0032CE  0A00               	xorlw	0	; case 0
  2769  0032D0  B4D8               	btfsc	status,2,c
  2770  0032D2  EF6D  F019         	goto	l9758
  2771  0032D6  EF80  F019         	goto	l1286
  2772  0032DA                     l9758:
  2773                           
  2774                           ; BSR set to: 1
  2775                           ; Switch size 1, requested type "simple"
  2776                           ; Number of cases is 4, Range of values is 0 to 3
  2777                           ; switch strategies available:
  2778                           ; Name         Instructions Cycles
  2779                           ; simple_byte           13     7 (average)
  2780                           ;	Chosen strategy is simple_byte
  2781  0032DA  51B6               	movf	??_getCurve& (0+255),w,b
  2782  0032DC  0A00               	xorlw	0	; case 0
  2783  0032DE  B4D8               	btfsc	status,2,c
  2784  0032E0  EF18  F018         	goto	l9266
  2785  0032E4  0A01               	xorlw	1	; case 1
  2786  0032E6  B4D8               	btfsc	status,2,c
  2787  0032E8  EF8E  F018         	goto	l9286
  2788  0032EC  0A03               	xorlw	3	; case 2
  2789  0032EE  B4D8               	btfsc	status,2,c
  2790  0032F0  EFA0  F018         	goto	l9292
  2791  0032F4  0A01               	xorlw	1	; case 3
  2792  0032F6  B4D8               	btfsc	status,2,c
  2793  0032F8  EF52  F019         	goto	l9328
  2794  0032FC  EF80  F019         	goto	l1286
  2795  003300                     l1286:
  2796                           
  2797                           ;main.c: 210:     oldDistLeft = distLeft;
  2798  003300  C0F7  F13A         	movff	_distLeft,_oldDistLeft	;volatile
  2799  003304  C0F8  F13B         	movff	_distLeft+1,_oldDistLeft+1	;volatile
  2800                           
  2801                           ;main.c: 211:     oldDistRight = distRight;
  2802  003308  C0F5  F138         	movff	_distRight,_oldDistRight	;volatile
  2803  00330C  C0F6  F139         	movff	_distRight+1,_oldDistRight+1	;volatile
  2804  003310  0012               	return		;funcret
  2805  003312                     __end_of_getCurve:
  2806                           	callstack 0
  2807                           
  2808 ;; *************** function _checkCurveCount *****************
  2809 ;; Defined at:
  2810 ;;		line 120 in file "main.c"
  2811 ;; Parameters:    Size  Location     Type
  2812 ;;		None
  2813 ;; Auto vars:     Size  Location     Type
  2814 ;;  roundTime       4   10[BANK1 ] float 
  2815 ;; Return value:  Size  Location     Type
  2816 ;;                  1    wreg      void 
  2817 ;; Registers used:
  2818 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2819 ;; Tracked objects:
  2820 ;;		On entry : 0/0
  2821 ;;		On exit  : 0/0
  2822 ;;		Unchanged: 0/0
  2823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2825 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2827 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2828 ;;Total ram usage:        4 bytes
  2829 ;; Hardware stack levels used: 1
  2830 ;; Hardware stack levels required when called: 17
  2831 ;; This function calls:
  2832 ;;		___lwdiv
  2833 ;;		___xxtofl
  2834 ;;		_printf
  2835 ;; This function is called by:
  2836 ;;		_loop
  2837 ;; This function uses a non-reentrant model
  2838 ;;
  2839                           
  2840                           	psect	text4
  2841  00509C                     __ptext4:
  2842                           	callstack 0
  2843  00509C                     _checkCurveCount:
  2844                           	callstack 12
  2845  00509C                     
  2846                           ;main.c: 121:     if (distFront > 480 && roundTimeCount > 500 ) {
  2847  00509C  0EE1               	movlw	225
  2848  00509E  0100               	movlb	0	; () banked
  2849  0050A0  5DFD               	subwf	_distFront& (0+255),w,b	;volatile
  2850  0050A2  0E01               	movlw	1
  2851  0050A4  59FE               	subwfb	(_distFront+1)& (0+255),w,b	;volatile
  2852  0050A6  A0D8               	btfss	status,0,c
  2853  0050A8  EF58  F028         	goto	u10841
  2854  0050AC  EF5A  F028         	goto	u10840
  2855  0050B0                     u10841:
  2856  0050B0  EFB3  F028         	goto	l1278
  2857  0050B4                     u10840:
  2858  0050B4                     
  2859                           ; BSR set to: 0
  2860  0050B4  0EF5               	movlw	245
  2861  0050B6  5DF3               	subwf	_roundTimeCount& (0+255),w,b	;volatile
  2862  0050B8  0E01               	movlw	1
  2863  0050BA  59F4               	subwfb	(_roundTimeCount+1)& (0+255),w,b	;volatile
  2864  0050BC  A0D8               	btfss	status,0,c
  2865  0050BE  EF63  F028         	goto	u10851
  2866  0050C2  EF65  F028         	goto	u10850
  2867  0050C6                     u10851:
  2868  0050C6  EFB3  F028         	goto	l1278
  2869  0050CA                     u10850:
  2870  0050CA                     
  2871                           ; BSR set to: 0
  2872                           ;main.c: 122:         float roundTime = roundTimeCount / 100;
  2873  0050CA  0E00               	movlw	0
  2874  0050CC  6E17               	movwf	(___lwdiv@divisor+1)^0,c
  2875  0050CE  0E64               	movlw	100
  2876  0050D0  6E16               	movwf	___lwdiv@divisor^0,c
  2877  0050D2  C0F3  F014         	movff	_roundTimeCount,___lwdiv@dividend	;volatile
  2878  0050D6  C0F4  F015         	movff	_roundTimeCount+1,___lwdiv@dividend+1	;volatile
  2879  0050DA  EC1A  F02C         	call	___lwdiv	;wreg free
  2880  0050DE  C014  F01C         	movff	?___lwdiv,___xxtofl@val
  2881  0050E2  C015  F01D         	movff	?___lwdiv+1,___xxtofl@val+1
  2882  0050E6  6A1E               	clrf	(___xxtofl@val+2)^0,c
  2883  0050E8  6A1F               	clrf	(___xxtofl@val+3)^0,c
  2884  0050EA  0E00               	movlw	0
  2885  0050EC  EC4A  F020         	call	___xxtofl
  2886  0050F0  C01C  F1B6         	movff	?___xxtofl,checkCurveCount@roundTime
  2887  0050F4  C01D  F1B7         	movff	?___xxtofl+1,checkCurveCount@roundTime+1
  2888  0050F8  C01E  F1B8         	movff	?___xxtofl+2,checkCurveCount@roundTime+2
  2889  0050FC  C01F  F1B9         	movff	?___xxtofl+3,checkCurveCount@roundTime+3
  2890  005100                     
  2891                           ;main.c: 123:         printf("Reset CurveCount!  |   ");
  2892  005100  0E1B               	movlw	low STR_2
  2893  005102  0101               	movlb	1	; () banked
  2894  005104  6FAE               	movwf	printf@fmt& (0+255),b
  2895  005106  0E10               	movlw	high STR_2
  2896  005108  6FAF               	movwf	(printf@fmt+1)& (0+255),b
  2897  00510A  EC3A  F031         	call	_printf	;wreg free
  2898  00510E                     
  2899                           ;main.c: 124:         printf("CurveLeftCount: %u   |   ", curveLeftCount);
  2900  00510E  0E01               	movlw	low STR_3
  2901  005110  0101               	movlb	1	; () banked
  2902  005112  6FAE               	movwf	printf@fmt& (0+255),b
  2903  005114  0E10               	movlw	high STR_3
  2904  005116  6FAF               	movwf	(printf@fmt+1)& (0+255),b
  2905  005118  C043  F1B0         	movff	_curveLeftCount,?_printf+2
  2906  00511C  6BB1               	clrf	(?_printf+3)& (0+255),b
  2907  00511E  EC3A  F031         	call	_printf	;wreg free
  2908  005122                     
  2909                           ;main.c: 125:         printf("CurveRightCount: %u\n", curveRightCount);
  2910  005122  0E33               	movlw	low STR_4
  2911  005124  0101               	movlb	1	; () banked
  2912  005126  6FAE               	movwf	printf@fmt& (0+255),b
  2913  005128  0E10               	movlw	high STR_4
  2914  00512A  6FAF               	movwf	(printf@fmt+1)& (0+255),b
  2915  00512C  C042  F1B0         	movff	_curveRightCount,?_printf+2
  2916  005130  6BB1               	clrf	(?_printf+3)& (0+255),b
  2917  005132  EC3A  F031         	call	_printf	;wreg free
  2918  005136                     
  2919                           ;main.c: 126:         printf("RoundTime: %f\n\n", roundTime);
  2920  005136  0E5C               	movlw	low STR_5
  2921  005138  0101               	movlb	1	; () banked
  2922  00513A  6FAE               	movwf	printf@fmt& (0+255),b
  2923  00513C  0E10               	movlw	high STR_5
  2924  00513E  6FAF               	movwf	(printf@fmt+1)& (0+255),b
  2925  005140  C1B6  F1B0         	movff	checkCurveCount@roundTime,?_printf+2
  2926  005144  C1B7  F1B1         	movff	checkCurveCount@roundTime+1,?_printf+3
  2927  005148  C1B8  F1B2         	movff	checkCurveCount@roundTime+2,?_printf+4
  2928  00514C  C1B9  F1B3         	movff	checkCurveCount@roundTime+3,?_printf+5
  2929  005150  EC3A  F031         	call	_printf	;wreg free
  2930  005154                     
  2931                           ;main.c: 127:         roundTimeCount = 0;
  2932  005154  0E00               	movlw	0
  2933  005156  0100               	movlb	0	; () banked
  2934  005158  6FF4               	movwf	(_roundTimeCount+1)& (0+255),b	;volatile
  2935  00515A  0E00               	movlw	0
  2936  00515C  6FF3               	movwf	_roundTimeCount& (0+255),b	;volatile
  2937  00515E                     
  2938                           ; BSR set to: 0
  2939                           ;main.c: 128:         curveRightCount = 0;
  2940  00515E  0E00               	movlw	0
  2941  005160  6E42               	movwf	_curveRightCount^0,c
  2942  005162                     
  2943                           ; BSR set to: 0
  2944                           ;main.c: 129:         curveLeftCount = 0;
  2945  005162  0E00               	movlw	0
  2946  005164  6E43               	movwf	_curveLeftCount^0,c
  2947  005166                     l1278:
  2948                           
  2949                           ; BSR set to: 0
  2950  005166  0012               	return		;funcret
  2951  005168                     __end_of_checkCurveCount:
  2952                           	callstack 0
  2953                           
  2954 ;; *************** function ___lwdiv *****************
  2955 ;; Defined at:
  2956 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lwdiv.c"
  2957 ;; Parameters:    Size  Location     Type
  2958 ;;  dividend        2   19[COMRAM] unsigned int 
  2959 ;;  divisor         2   21[COMRAM] unsigned int 
  2960 ;; Auto vars:     Size  Location     Type
  2961 ;;  quotient        2   24[COMRAM] unsigned int 
  2962 ;;  counter         1   23[COMRAM] unsigned char 
  2963 ;; Return value:  Size  Location     Type
  2964 ;;                  2   19[COMRAM] unsigned int 
  2965 ;; Registers used:
  2966 ;;		wreg, status,2, status,0
  2967 ;; Tracked objects:
  2968 ;;		On entry : 0/0
  2969 ;;		On exit  : 0/0
  2970 ;;		Unchanged: 0/0
  2971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2972 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2973 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2975 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2976 ;;Total ram usage:        7 bytes
  2977 ;; Hardware stack levels used: 1
  2978 ;; Hardware stack levels required when called: 8
  2979 ;; This function calls:
  2980 ;;		Nothing
  2981 ;; This function is called by:
  2982 ;;		_checkCurveCount
  2983 ;;		_getCurve
  2984 ;; This function uses a non-reentrant model
  2985 ;;
  2986                           
  2987                           	psect	text5
  2988  005834                     __ptext5:
  2989                           	callstack 0
  2990  005834                     ___lwdiv:
  2991                           	callstack 20
  2992  005834  0E00               	movlw	0
  2993  005836  6E1A               	movwf	(___lwdiv@quotient+1)^0,c
  2994  005838  0E00               	movlw	0
  2995  00583A  6E19               	movwf	___lwdiv@quotient^0,c
  2996  00583C  5016               	movf	___lwdiv@divisor^0,w,c
  2997  00583E  1017               	iorwf	(___lwdiv@divisor+1)^0,w,c
  2998  005840  B4D8               	btfsc	status,2,c
  2999  005842  EF25  F02C         	goto	u10371
  3000  005846  EF27  F02C         	goto	u10370
  3001  00584A                     u10371:
  3002  00584A  EF4F  F02C         	goto	l1901
  3003  00584E                     u10370:
  3004  00584E  0E01               	movlw	1
  3005  005850  6E18               	movwf	___lwdiv@counter^0,c
  3006  005852  EF2F  F02C         	goto	l9228
  3007  005856                     l9226:
  3008  005856  90D8               	bcf	status,0,c
  3009  005858  3616               	rlcf	___lwdiv@divisor^0,f,c
  3010  00585A  3617               	rlcf	(___lwdiv@divisor+1)^0,f,c
  3011  00585C  2A18               	incf	___lwdiv@counter^0,f,c
  3012  00585E                     l9228:
  3013  00585E  AE17               	btfss	(___lwdiv@divisor+1)^0,7,c
  3014  005860  EF34  F02C         	goto	u10381
  3015  005864  EF36  F02C         	goto	u10380
  3016  005868                     u10381:
  3017  005868  EF2B  F02C         	goto	l9226
  3018  00586C                     u10380:
  3019  00586C                     l9230:
  3020  00586C  90D8               	bcf	status,0,c
  3021  00586E  3619               	rlcf	___lwdiv@quotient^0,f,c
  3022  005870  361A               	rlcf	(___lwdiv@quotient+1)^0,f,c
  3023  005872  5016               	movf	___lwdiv@divisor^0,w,c
  3024  005874  5C14               	subwf	___lwdiv@dividend^0,w,c
  3025  005876  5017               	movf	(___lwdiv@divisor+1)^0,w,c
  3026  005878  5815               	subwfb	(___lwdiv@dividend+1)^0,w,c
  3027  00587A  A0D8               	btfss	status,0,c
  3028  00587C  EF42  F02C         	goto	u10391
  3029  005880  EF44  F02C         	goto	u10390
  3030  005884                     u10391:
  3031  005884  EF49  F02C         	goto	l9238
  3032  005888                     u10390:
  3033  005888  5016               	movf	___lwdiv@divisor^0,w,c
  3034  00588A  5E14               	subwf	___lwdiv@dividend^0,f,c
  3035  00588C  5017               	movf	(___lwdiv@divisor+1)^0,w,c
  3036  00588E  5A15               	subwfb	(___lwdiv@dividend+1)^0,f,c
  3037  005890  8019               	bsf	___lwdiv@quotient^0,0,c
  3038  005892                     l9238:
  3039  005892  90D8               	bcf	status,0,c
  3040  005894  3217               	rrcf	(___lwdiv@divisor+1)^0,f,c
  3041  005896  3216               	rrcf	___lwdiv@divisor^0,f,c
  3042  005898  2E18               	decfsz	___lwdiv@counter^0,f,c
  3043  00589A  EF36  F02C         	goto	l9230
  3044  00589E                     l1901:
  3045  00589E  C019  F014         	movff	___lwdiv@quotient,?___lwdiv
  3046  0058A2  C01A  F015         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3047  0058A6  0012               	return		;funcret
  3048  0058A8                     __end_of___lwdiv:
  3049                           	callstack 0
  3050                           
  3051 ;; *************** function _checkBatt *****************
  3052 ;; Defined at:
  3053 ;;		line 90 in file "main.c"
  3054 ;; Parameters:    Size  Location     Type
  3055 ;;		None
  3056 ;; Auto vars:     Size  Location     Type
  3057 ;;		None
  3058 ;; Return value:  Size  Location     Type
  3059 ;;                  1    wreg      _Bool 
  3060 ;; Registers used:
  3061 ;;		wreg, status,2, status,0, cstack
  3062 ;; Tracked objects:
  3063 ;;		On entry : 0/0
  3064 ;;		On exit  : 0/0
  3065 ;;		Unchanged: 0/0
  3066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3070 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3071 ;;Total ram usage:        0 bytes
  3072 ;; Hardware stack levels used: 1
  3073 ;; Hardware stack levels required when called: 10
  3074 ;; This function calls:
  3075 ;;		___flge
  3076 ;;		___xxtofl
  3077 ;;		_getBatteryVoltage
  3078 ;;		_setSteering
  3079 ;; This function is called by:
  3080 ;;		_loop
  3081 ;; This function uses a non-reentrant model
  3082 ;;
  3083                           
  3084                           	psect	text6
  3085  0057A2                     __ptext6:
  3086                           	callstack 0
  3087  0057A2                     _checkBatt:
  3088                           	callstack 19
  3089  0057A2                     
  3090                           ;main.c: 91:     ++battCheckCount;
  3091  0057A2  0101               	movlb	1	; () banked
  3092  0057A4  4B36               	infsnz	_battCheckCount& (0+255),f,b
  3093  0057A6  2B37               	incf	(_battCheckCount+1)& (0+255),f,b
  3094  0057A8                     
  3095                           ; BSR set to: 1
  3096                           ;main.c: 92:     if (battCheckCount > (500)) {
  3097  0057A8  0EF5               	movlw	245
  3098  0057AA  5D36               	subwf	_battCheckCount& (0+255),w,b
  3099  0057AC  0E01               	movlw	1
  3100  0057AE  5937               	subwfb	(_battCheckCount+1)& (0+255),w,b
  3101  0057B0  A0D8               	btfss	status,0,c
  3102  0057B2  EFDD  F02B         	goto	u10401
  3103  0057B6  EFDF  F02B         	goto	u10400
  3104  0057BA                     u10401:
  3105  0057BA  EF18  F02C         	goto	l9260
  3106  0057BE                     u10400:
  3107  0057BE                     
  3108                           ; BSR set to: 1
  3109                           ;main.c: 93:         battCheckCount = 0;
  3110  0057BE  0E00               	movlw	0
  3111  0057C0  6F37               	movwf	(_battCheckCount+1)& (0+255),b
  3112  0057C2  0E00               	movlw	0
  3113  0057C4  6F36               	movwf	_battCheckCount& (0+255),b
  3114  0057C6                     
  3115                           ; BSR set to: 1
  3116                           ;main.c: 94:         getBatteryVoltage();
  3117  0057C6  ECF1  F031         	call	_getBatteryVoltage	;wreg free
  3118  0057CA                     
  3119                           ;main.c: 96:         if (BatteryVolt < (7.4) * 409.6) {
  3120  0057CA  C12C  F01C         	movff	_BatteryVolt,___xxtofl@val
  3121  0057CE  C12D  F01D         	movff	_BatteryVolt+1,___xxtofl@val+1
  3122  0057D2  6A1E               	clrf	(___xxtofl@val+2)^0,c
  3123  0057D4  6A1F               	clrf	(___xxtofl@val+3)^0,c
  3124  0057D6  0E00               	movlw	0
  3125  0057D8  EC4A  F020         	call	___xxtofl
  3126  0057DC  C01C  F06D         	movff	?___xxtofl,___flge@ff1
  3127  0057E0  C01D  F06E         	movff	?___xxtofl+1,___flge@ff1+1
  3128  0057E4  C01E  F06F         	movff	?___xxtofl+2,___flge@ff1+2
  3129  0057E8  C01F  F070         	movff	?___xxtofl+3,___flge@ff1+3
  3130  0057EC  0EA4               	movlw	164
  3131  0057EE  0100               	movlb	0	; () banked
  3132  0057F0  6F71               	movwf	___flge@ff2& (0+255),b
  3133  0057F2  0E70               	movlw	112
  3134  0057F4  6F72               	movwf	(___flge@ff2+1)& (0+255),b
  3135  0057F6  0E3D               	movlw	61
  3136  0057F8  6F73               	movwf	(___flge@ff2+2)& (0+255),b
  3137  0057FA  0E45               	movlw	69
  3138  0057FC  6F74               	movwf	(___flge@ff2+3)& (0+255),b
  3139  0057FE  EC81  F025         	call	___flge	;wreg free
  3140  005802  0100               	movlb	0	; () banked
  3141  005804  B0D8               	btfsc	status,0,c
  3142  005806  EF07  F02C         	goto	u10411
  3143  00580A  EF09  F02C         	goto	u10410
  3144  00580E                     u10411:
  3145  00580E  EF18  F02C         	goto	l9260
  3146  005812                     u10410:
  3147  005812                     
  3148                           ; BSR set to: 0
  3149                           ;main.c: 97:             setSpeed = 0;
  3150  005812  0E00               	movlw	0
  3151  005814  6E41               	movwf	(_setSpeed+1)^0,c
  3152  005816  0E00               	movlw	0
  3153  005818  6E40               	movwf	_setSpeed^0,c
  3154  00581A                     
  3155                           ; BSR set to: 0
  3156                           ;main.c: 98:             setSteering(0, Front);
  3157  00581A  0E00               	movlw	0
  3158  00581C  6F84               	movwf	(setSteering@steering+1)& (0+255),b
  3159  00581E  0E00               	movlw	0
  3160  005820  6F83               	movwf	setSteering@steering& (0+255),b
  3161  005822  0E03               	movlw	3
  3162  005824  6F85               	movwf	setSteering@steeringMode& (0+255),b
  3163  005826  EC4F  F01F         	call	_setSteering	;wreg free
  3164  00582A                     
  3165                           ;main.c: 99:             return 1;
  3166  00582A  0E01               	movlw	1
  3167  00582C  EF19  F02C         	goto	l1263
  3168  005830                     l9260:
  3169                           
  3170                           ;main.c: 102:     return 0;
  3171  005830  0E00               	movlw	0
  3172  005832                     l1263:
  3173  005832  0012               	return		;funcret
  3174  005834                     __end_of_checkBatt:
  3175                           	callstack 0
  3176                           
  3177 ;; *************** function _getBatteryVoltage *****************
  3178 ;; Defined at:
  3179 ;;		line 85 in file "main.c"
  3180 ;; Parameters:    Size  Location     Type
  3181 ;;		None
  3182 ;; Auto vars:     Size  Location     Type
  3183 ;;		None
  3184 ;; Return value:  Size  Location     Type
  3185 ;;                  1    wreg      void 
  3186 ;; Registers used:
  3187 ;;		wreg, status,2, status,0, cstack
  3188 ;; Tracked objects:
  3189 ;;		On entry : 0/0
  3190 ;;		On exit  : 0/0
  3191 ;;		Unchanged: 0/0
  3192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3196 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3197 ;;Total ram usage:        0 bytes
  3198 ;; Hardware stack levels used: 1
  3199 ;; Hardware stack levels required when called: 9
  3200 ;; This function calls:
  3201 ;;		_ADCC_GetSingleConversion
  3202 ;; This function is called by:
  3203 ;;		_loop
  3204 ;;		_checkBatt
  3205 ;; This function uses a non-reentrant model
  3206 ;;
  3207                           
  3208                           	psect	text7
  3209  0063E2                     __ptext7:
  3210                           	callstack 0
  3211  0063E2                     _getBatteryVoltage:
  3212                           	callstack 20
  3213  0063E2                     
  3214                           ;main.c: 86:     BatteryVolt = ADCC_GetSingleConversion(aiBatt);
  3215  0063E2  0E22               	movlw	34
  3216  0063E4  EC52  F030         	call	_ADCC_GetSingleConversion
  3217  0063E8  C014  F12C         	movff	?_ADCC_GetSingleConversion,_BatteryVolt
  3218  0063EC  C015  F12D         	movff	?_ADCC_GetSingleConversion+1,_BatteryVolt+1
  3219  0063F0  0012               	return		;funcret
  3220  0063F2                     __end_of_getBatteryVoltage:
  3221                           	callstack 0
  3222                           
  3223 ;; *************** function _ADCC_GetSingleConversion *****************
  3224 ;; Defined at:
  3225 ;;		line 137 in file "mcc_generated_files/adcc.c"
  3226 ;; Parameters:    Size  Location     Type
  3227 ;;  channel         1    wreg     enum E16058
  3228 ;; Auto vars:     Size  Location     Type
  3229 ;;  channel         1   23[COMRAM] enum E16058
  3230 ;; Return value:  Size  Location     Type
  3231 ;;                  2   19[COMRAM] unsigned short 
  3232 ;; Registers used:
  3233 ;;		wreg, status,2, status,0
  3234 ;; Tracked objects:
  3235 ;;		On entry : 0/0
  3236 ;;		On exit  : 0/0
  3237 ;;		Unchanged: 0/0
  3238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3239 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3240 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3241 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3242 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3243 ;;Total ram usage:        5 bytes
  3244 ;; Hardware stack levels used: 1
  3245 ;; Hardware stack levels required when called: 8
  3246 ;; This function calls:
  3247 ;;		Nothing
  3248 ;; This function is called by:
  3249 ;;		_getBatteryVoltage
  3250 ;; This function uses a non-reentrant model
  3251 ;;
  3252                           
  3253                           	psect	text8
  3254  0060A4                     __ptext8:
  3255                           	callstack 0
  3256  0060A4                     _ADCC_GetSingleConversion:
  3257                           	callstack 20
  3258                           
  3259                           ;incstack = 0
  3260                           ;ADCC_GetSingleConversion@channel stored from wreg
  3261  0060A4  6E18               	movwf	ADCC_GetSingleConversion@channel^0,c
  3262  0060A6                     
  3263                           ;mcc_generated_files/adcc.c: 137: adc_result_t ADCC_GetSingleConversion(adcc_channel_t c
      +                          hannel);mcc_generated_files/adcc.c: 138: {;mcc_generated_files/adcc.c: 140:     ADPCH = 
      +                          channel;
  3264  0060A6  0060  F063  FEF1   	movff	ADCC_GetSingleConversion@channel,16113	;volatile
  3265  0060AC                     
  3266                           ;mcc_generated_files/adcc.c: 143:     ADCON0bits.ADON = 1;
  3267  0060AC  013E               	movlb	62	; () banked
  3268  0060AE  8FF8               	bsf	248,7,b	;volatile
  3269  0060B0                     
  3270                           ; BSR set to: 62
  3271                           ;mcc_generated_files/adcc.c: 146:     ADCON0bits.ADCONT = 0;
  3272  0060B0  9DF8               	bcf	248,6,b	;volatile
  3273  0060B2                     
  3274                           ; BSR set to: 62
  3275                           ;mcc_generated_files/adcc.c: 149:     ADCON0bits.ADGO = 1;
  3276  0060B2  81F8               	bsf	248,0,b	;volatile
  3277  0060B4                     l1054:
  3278                           
  3279                           ; BSR set to: 62
  3280                           ;mcc_generated_files/adcc.c: 153:     while (ADCON0bits.ADGO)
  3281  0060B4  B1F8               	btfsc	248,0,b	;volatile
  3282  0060B6  EF5F  F030         	goto	u6461
  3283  0060BA  EF61  F030         	goto	u6460
  3284  0060BE                     u6461:
  3285  0060BE  EF5A  F030         	goto	l1054
  3286  0060C2                     u6460:
  3287  0060C2                     
  3288                           ; BSR set to: 62
  3289                           ;mcc_generated_files/adcc.c: 159:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  3290  0060C2  51F0               	movf	240,w,b	;volatile
  3291  0060C4  6E17               	movwf	(??_ADCC_GetSingleConversion+1)^0,c
  3292  0060C6  6A16               	clrf	??_ADCC_GetSingleConversion^0,c
  3293  0060C8  51EF               	movf	239,w,b	;volatile
  3294  0060CA  2416               	addwf	??_ADCC_GetSingleConversion^0,w,c
  3295  0060CC  6E14               	movwf	?_ADCC_GetSingleConversion^0,c
  3296  0060CE  0E00               	movlw	0
  3297  0060D0  2017               	addwfc	(??_ADCC_GetSingleConversion+1)^0,w,c
  3298  0060D2  6E15               	movwf	(?_ADCC_GetSingleConversion+1)^0,c
  3299  0060D4                     
  3300                           ; BSR set to: 62
  3301  0060D4  0012               	return		;funcret
  3302  0060D6                     __end_of_ADCC_GetSingleConversion:
  3303                           	callstack 0
  3304                           
  3305 ;; *************** function _calcSteering *****************
  3306 ;; Defined at:
  3307 ;;		line 248 in file "main.c"
  3308 ;; Parameters:    Size  Location     Type
  3309 ;;		None
  3310 ;; Auto vars:     Size  Location     Type
  3311 ;;  delta           2   12[BANK1 ] short 
  3312 ;; Return value:  Size  Location     Type
  3313 ;;                  1    wreg      void 
  3314 ;; Registers used:
  3315 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3316 ;; Tracked objects:
  3317 ;;		On entry : 0/0
  3318 ;;		On exit  : 0/0
  3319 ;;		Unchanged: 0/0
  3320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3322 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3323 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3324 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3325 ;;Total ram usage:        4 bytes
  3326 ;; Hardware stack levels used: 1
  3327 ;; Hardware stack levels required when called: 17
  3328 ;; This function calls:
  3329 ;;		_printf
  3330 ;;		_setSteering
  3331 ;; This function is called by:
  3332 ;;		_loop
  3333 ;; This function uses a non-reentrant model
  3334 ;;
  3335                           
  3336                           	psect	text9
  3337  0035F8                     __ptext9:
  3338                           	callstack 0
  3339  0035F8                     _calcSteering:
  3340                           	callstack 12
  3341  0035F8                     
  3342                           ;main.c: 249:     int16_t delta = (int16_t) (distLeft - distRight) - (int16_t) ((0) * 1.
      +                          4142135);
  3343  0035F8  0100               	movlb	0	; () banked
  3344  0035FA  51F5               	movf	_distRight& (0+255),w,b	;volatile
  3345  0035FC  5DF7               	subwf	_distLeft& (0+255),w,b	;volatile
  3346  0035FE  0101               	movlb	1	; () banked
  3347  003600  6FB8               	movwf	calcSteering@delta& (0+255),b
  3348  003602  0100               	movlb	0	; () banked
  3349  003604  51F6               	movf	(_distRight+1)& (0+255),w,b	;volatile
  3350  003606  59F8               	subwfb	(_distLeft+1)& (0+255),w,b	;volatile
  3351  003608  0101               	movlb	1	; () banked
  3352  00360A  6FB9               	movwf	(calcSteering@delta+1)& (0+255),b
  3353                           
  3354                           ;main.c: 253:     switch (driveMode) {
  3355  00360C  EF30  F01B         	goto	l9394
  3356  003610                     l1324:
  3357  003610                     l9384:
  3358                           
  3359                           ; BSR set to: 1
  3360                           ;main.c: 258:             if (delta > (40)) {
  3361  003610  BFB9               	btfsc	(calcSteering@delta+1)& (0+255),7,b
  3362  003612  EF14  F01B         	goto	u10661
  3363  003616  51B9               	movf	(calcSteering@delta+1)& (0+255),w,b
  3364  003618  E109               	bnz	u10660
  3365  00361A  0E29               	movlw	41
  3366  00361C  5DB8               	subwf	calcSteering@delta& (0+255),w,b
  3367  00361E  A0D8               	btfss	status,0,c
  3368  003620  EF14  F01B         	goto	u10661
  3369  003624  EF16  F01B         	goto	u10660
  3370  003628                     u10661:
  3371  003628  EF1C  F01B         	goto	l9388
  3372  00362C                     u10660:
  3373  00362C                     
  3374                           ; BSR set to: 1
  3375                           ;main.c: 259:                 delta = (40);
  3376  00362C  0E00               	movlw	0
  3377  00362E  6FB9               	movwf	(calcSteering@delta+1)& (0+255),b
  3378  003630  0E28               	movlw	40
  3379  003632  6FB8               	movwf	calcSteering@delta& (0+255),b
  3380                           
  3381                           ;main.c: 260:             } else if (delta < -(40)) {
  3382  003634  EFD2  F01B         	goto	l9426
  3383  003638                     l9388:
  3384                           
  3385                           ; BSR set to: 1
  3386  003638  AFB9               	btfss	(calcSteering@delta+1)& (0+255),7,b
  3387  00363A  EF28  F01B         	goto	u10671
  3388  00363E  0ED8               	movlw	216
  3389  003640  5DB8               	subwf	calcSteering@delta& (0+255),w,b
  3390  003642  0EFF               	movlw	255
  3391  003644  59B9               	subwfb	(calcSteering@delta+1)& (0+255),w,b
  3392  003646  B0D8               	btfsc	status,0,c
  3393  003648  EF28  F01B         	goto	u10671
  3394  00364C  EF2A  F01B         	goto	u10670
  3395  003650                     u10671:
  3396  003650  EF4F  F01B         	goto	l1329
  3397  003654                     u10670:
  3398  003654                     
  3399                           ; BSR set to: 1
  3400                           ;main.c: 261:                 delta = -(40);
  3401  003654  0EFF               	movlw	255
  3402  003656  6FB9               	movwf	(calcSteering@delta+1)& (0+255),b
  3403  003658  0ED8               	movlw	216
  3404  00365A  6FB8               	movwf	calcSteering@delta& (0+255),b
  3405  00365C  EFD2  F01B         	goto	l9426
  3406  003660                     l9394:
  3407                           
  3408                           ; BSR set to: 1
  3409  003660  0100               	movlb	0	; () banked
  3410  003662  51FC               	movf	_driveMode& (0+255),w,b
  3411  003664  0101               	movlb	1	; () banked
  3412  003666  6FB6               	movwf	??_calcSteering& (0+255),b
  3413  003668  6BB7               	clrf	(??_calcSteering+1)& (0+255),b
  3414                           
  3415                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3416                           ; Switch size 1, requested type "simple"
  3417                           ; Number of cases is 1, Range of values is 0 to 0
  3418                           ; switch strategies available:
  3419                           ; Name         Instructions Cycles
  3420                           ; simple_byte            4     3 (average)
  3421                           ;	Chosen strategy is simple_byte
  3422  00366A  51B7               	movf	(??_calcSteering+1)& (0+255),w,b
  3423  00366C  0A00               	xorlw	0	; case 0
  3424  00366E  B4D8               	btfsc	status,2,c
  3425  003670  EF3C  F01B         	goto	l9760
  3426  003674  EFD2  F01B         	goto	l9426
  3427  003678                     l9760:
  3428                           
  3429                           ; BSR set to: 1
  3430                           ; Switch size 1, requested type "simple"
  3431                           ; Number of cases is 4, Range of values is 0 to 5
  3432                           ; switch strategies available:
  3433                           ; Name         Instructions Cycles
  3434                           ; simple_byte           13     7 (average)
  3435                           ;	Chosen strategy is simple_byte
  3436  003678  51B6               	movf	??_calcSteering& (0+255),w,b
  3437  00367A  0A00               	xorlw	0	; case 0
  3438  00367C  B4D8               	btfsc	status,2,c
  3439  00367E  EF08  F01B         	goto	l9384
  3440  003682  0A01               	xorlw	1	; case 1
  3441  003684  B4D8               	btfsc	status,2,c
  3442  003686  EF08  F01B         	goto	l1324
  3443  00368A  0A05               	xorlw	5	; case 4
  3444  00368C  B4D8               	btfsc	status,2,c
  3445  00368E  EF08  F01B         	goto	l9384
  3446  003692  0A01               	xorlw	1	; case 5
  3447  003694  B4D8               	btfsc	status,2,c
  3448  003696  EF08  F01B         	goto	l9384
  3449  00369A  EFD2  F01B         	goto	l9426
  3450  00369E                     l1329:
  3451                           
  3452                           ; BSR set to: 1
  3453                           ;main.c: 268:     switch (driveMode) {
  3454  00369E  EFD2  F01B         	goto	l9426
  3455  0036A2                     l9396:
  3456                           
  3457                           ; BSR set to: 1
  3458                           ;main.c: 270:             setSteering(delta, Ratio);
  3459  0036A2  C1B8  F083         	movff	calcSteering@delta,setSteering@steering
  3460  0036A6  C1B9  F084         	movff	calcSteering@delta+1,setSteering@steering+1
  3461  0036AA  0E02               	movlw	2
  3462  0036AC  0100               	movlb	0	; () banked
  3463  0036AE  6F85               	movwf	setSteering@steeringMode& (0+255),b
  3464  0036B0  EC4F  F01F         	call	_setSteering	;wreg free
  3465                           
  3466                           ;main.c: 271:             break;
  3467  0036B4  EF01  F01C         	goto	l9428
  3468  0036B8                     l9398:
  3469                           
  3470                           ;main.c: 273:             setSteering(delta, Front);
  3471  0036B8  C1B8  F083         	movff	calcSteering@delta,setSteering@steering
  3472  0036BC  C1B9  F084         	movff	calcSteering@delta+1,setSteering@steering+1
  3473  0036C0  0E03               	movlw	3
  3474  0036C2  0100               	movlb	0	; () banked
  3475  0036C4  6F85               	movwf	setSteering@steeringMode& (0+255),b
  3476  0036C6  EC4F  F01F         	call	_setSteering	;wreg free
  3477                           
  3478                           ;main.c: 274:             break;
  3479  0036CA  EF01  F01C         	goto	l9428
  3480  0036CE                     l9400:
  3481                           
  3482                           ; BSR set to: 1
  3483                           ;main.c: 276:             setSteering(-(50), Inverted);
  3484  0036CE  0EFF               	movlw	255
  3485  0036D0  0100               	movlb	0	; () banked
  3486  0036D2  6F84               	movwf	(setSteering@steering+1)& (0+255),b
  3487  0036D4  0ECE               	movlw	206
  3488  0036D6  6F83               	movwf	setSteering@steering& (0+255),b
  3489  0036D8  0E00               	movlw	0
  3490  0036DA  6F85               	movwf	setSteering@steeringMode& (0+255),b
  3491  0036DC  EC4F  F01F         	call	_setSteering	;wreg free
  3492                           
  3493                           ;main.c: 277:             break;
  3494  0036E0  EF01  F01C         	goto	l9428
  3495  0036E4                     l9402:
  3496                           
  3497                           ; BSR set to: 1
  3498                           ;main.c: 279:             setSteering((50), Inverted);
  3499  0036E4  0E00               	movlw	0
  3500  0036E6  0100               	movlb	0	; () banked
  3501  0036E8  6F84               	movwf	(setSteering@steering+1)& (0+255),b
  3502  0036EA  0E32               	movlw	50
  3503  0036EC  6F83               	movwf	setSteering@steering& (0+255),b
  3504  0036EE  0E00               	movlw	0
  3505  0036F0  6F85               	movwf	setSteering@steeringMode& (0+255),b
  3506  0036F2  EC4F  F01F         	call	_setSteering	;wreg free
  3507                           
  3508                           ;main.c: 280:             break;
  3509  0036F6  EF01  F01C         	goto	l9428
  3510  0036FA                     l9404:
  3511                           
  3512                           ; BSR set to: 1
  3513                           ;main.c: 282:             if (curveMode == InCurve) {
  3514  0036FA  0E02               	movlw	2
  3515  0036FC  0100               	movlb	0	; () banked
  3516  0036FE  19FB               	xorwf	_curveMode& (0+255),w,b
  3517  003700  A4D8               	btfss	status,2,c
  3518  003702  EF85  F01B         	goto	u10681
  3519  003706  EF87  F01B         	goto	u10680
  3520  00370A                     u10681:
  3521  00370A  EF5C  F01B         	goto	l9398
  3522  00370E                     u10680:
  3523  00370E                     
  3524                           ; BSR set to: 0
  3525                           ;main.c: 283:                 setSteering((50), Ratio);
  3526  00370E  0E00               	movlw	0
  3527  003710  6F84               	movwf	(setSteering@steering+1)& (0+255),b
  3528  003712  0E32               	movlw	50
  3529  003714  6F83               	movwf	setSteering@steering& (0+255),b
  3530  003716  0E02               	movlw	2
  3531  003718  6F85               	movwf	setSteering@steeringMode& (0+255),b
  3532  00371A  EC4F  F01F         	call	_setSteering	;wreg free
  3533                           
  3534                           ;main.c: 284:             } else {
  3535  00371E  EF01  F01C         	goto	l9428
  3536  003722                     l9410:
  3537                           
  3538                           ; BSR set to: 1
  3539                           ;main.c: 289:             if (curveMode == InCurve) {
  3540  003722  0E02               	movlw	2
  3541  003724  0100               	movlb	0	; () banked
  3542  003726  19FB               	xorwf	_curveMode& (0+255),w,b
  3543  003728  A4D8               	btfss	status,2,c
  3544  00372A  EF99  F01B         	goto	u10691
  3545  00372E  EF9B  F01B         	goto	u10690
  3546  003732                     u10691:
  3547  003732  EF5C  F01B         	goto	l9398
  3548  003736                     u10690:
  3549  003736                     
  3550                           ; BSR set to: 0
  3551                           ;main.c: 290:                 setSteering(-(50), Ratio);
  3552  003736  0EFF               	movlw	255
  3553  003738  6F84               	movwf	(setSteering@steering+1)& (0+255),b
  3554  00373A  0ECE               	movlw	206
  3555  00373C  6F83               	movwf	setSteering@steering& (0+255),b
  3556  00373E  0E02               	movlw	2
  3557  003740  6F85               	movwf	setSteering@steeringMode& (0+255),b
  3558  003742  EC4F  F01F         	call	_setSteering	;wreg free
  3559                           
  3560                           ;main.c: 291:             } else {
  3561  003746  EF01  F01C         	goto	l9428
  3562  00374A                     l9416:
  3563                           
  3564                           ; BSR set to: 1
  3565                           ;main.c: 296:             delta = (50) - distLeft;
  3566  00374A  0100               	movlb	0	; () banked
  3567  00374C  51F7               	movf	_distLeft& (0+255),w,b	;volatile
  3568  00374E  0832               	sublw	50
  3569  003750  0101               	movlb	1	; () banked
  3570  003752  6FB8               	movwf	calcSteering@delta& (0+255),b
  3571  003754  0100               	movlb	0	; () banked
  3572  003756  51F8               	movf	(_distLeft+1)& (0+255),w,b	;volatile
  3573  003758  A0D8               	btfss	status,0,c
  3574  00375A  2AE8               	incf	wreg,f,c
  3575  00375C  0800               	sublw	0
  3576  00375E  0101               	movlb	1	; () banked
  3577  003760  6FB9               	movwf	(calcSteering@delta+1)& (0+255),b
  3578  003762  EF5C  F01B         	goto	l9398
  3579  003766                     l9420:
  3580                           
  3581                           ; BSR set to: 1
  3582                           ;main.c: 300:             delta = (50) - distRight;
  3583  003766  0100               	movlb	0	; () banked
  3584  003768  51F5               	movf	_distRight& (0+255),w,b	;volatile
  3585  00376A  0832               	sublw	50
  3586  00376C  0101               	movlb	1	; () banked
  3587  00376E  6FB8               	movwf	calcSteering@delta& (0+255),b
  3588  003770  0100               	movlb	0	; () banked
  3589  003772  51F6               	movf	(_distRight+1)& (0+255),w,b	;volatile
  3590  003774  A0D8               	btfss	status,0,c
  3591  003776  2AE8               	incf	wreg,f,c
  3592  003778  0800               	sublw	0
  3593  00377A  0101               	movlb	1	; () banked
  3594  00377C  6FB9               	movwf	(calcSteering@delta+1)& (0+255),b
  3595  00377E                     
  3596                           ; BSR set to: 1
  3597                           ;main.c: 301:             setSteering(-delta, Front);
  3598  00377E  C1B8  F1B6         	movff	calcSteering@delta,??_calcSteering
  3599  003782  C1B9  F1B7         	movff	calcSteering@delta+1,??_calcSteering+1
  3600  003786  1FB6               	comf	??_calcSteering& (0+255),f,b
  3601  003788  1FB7               	comf	(??_calcSteering+1)& (0+255),f,b
  3602  00378A  4BB6               	infsnz	??_calcSteering& (0+255),f,b
  3603  00378C  2BB7               	incf	(??_calcSteering+1)& (0+255),f,b
  3604  00378E  C1B6  F083         	movff	??_calcSteering,setSteering@steering
  3605  003792  C1B7  F084         	movff	??_calcSteering+1,setSteering@steering+1
  3606  003796  0E03               	movlw	3
  3607  003798  0100               	movlb	0	; () banked
  3608  00379A  6F85               	movwf	setSteering@steeringMode& (0+255),b
  3609  00379C  EC4F  F01F         	call	_setSteering	;wreg free
  3610                           
  3611                           ;main.c: 302:             break;
  3612  0037A0  EF01  F01C         	goto	l9428
  3613  0037A4                     l9426:
  3614                           
  3615                           ; BSR set to: 1
  3616  0037A4  0100               	movlb	0	; () banked
  3617  0037A6  51FC               	movf	_driveMode& (0+255),w,b
  3618  0037A8  0101               	movlb	1	; () banked
  3619  0037AA  6FB6               	movwf	??_calcSteering& (0+255),b
  3620  0037AC  6BB7               	clrf	(??_calcSteering+1)& (0+255),b
  3621                           
  3622                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3623                           ; Switch size 1, requested type "simple"
  3624                           ; Number of cases is 1, Range of values is 0 to 0
  3625                           ; switch strategies available:
  3626                           ; Name         Instructions Cycles
  3627                           ; simple_byte            4     3 (average)
  3628                           ;	Chosen strategy is simple_byte
  3629  0037AE  51B7               	movf	(??_calcSteering+1)& (0+255),w,b
  3630  0037B0  0A00               	xorlw	0	; case 0
  3631  0037B2  B4D8               	btfsc	status,2,c
  3632  0037B4  EFDE  F01B         	goto	l9762
  3633  0037B8  EF01  F01C         	goto	l9428
  3634  0037BC                     l9762:
  3635                           
  3636                           ; BSR set to: 1
  3637                           ; Switch size 1, requested type "simple"
  3638                           ; Number of cases is 8, Range of values is 0 to 7
  3639                           ; switch strategies available:
  3640                           ; Name         Instructions Cycles
  3641                           ; simple_byte           25    13 (average)
  3642                           ;	Chosen strategy is simple_byte
  3643  0037BC  51B6               	movf	??_calcSteering& (0+255),w,b
  3644  0037BE  0A00               	xorlw	0	; case 0
  3645  0037C0  B4D8               	btfsc	status,2,c
  3646  0037C2  EF5C  F01B         	goto	l9398
  3647  0037C6  0A01               	xorlw	1	; case 1
  3648  0037C8  B4D8               	btfsc	status,2,c
  3649  0037CA  EF51  F01B         	goto	l9396
  3650  0037CE  0A03               	xorlw	3	; case 2
  3651  0037D0  B4D8               	btfsc	status,2,c
  3652  0037D2  EF67  F01B         	goto	l9400
  3653  0037D6  0A01               	xorlw	1	; case 3
  3654  0037D8  B4D8               	btfsc	status,2,c
  3655  0037DA  EF72  F01B         	goto	l9402
  3656  0037DE  0A07               	xorlw	7	; case 4
  3657  0037E0  B4D8               	btfsc	status,2,c
  3658  0037E2  EF7D  F01B         	goto	l9404
  3659  0037E6  0A01               	xorlw	1	; case 5
  3660  0037E8  B4D8               	btfsc	status,2,c
  3661  0037EA  EF91  F01B         	goto	l9410
  3662  0037EE  0A03               	xorlw	3	; case 6
  3663  0037F0  B4D8               	btfsc	status,2,c
  3664  0037F2  EFA5  F01B         	goto	l9416
  3665  0037F6  0A01               	xorlw	1	; case 7
  3666  0037F8  B4D8               	btfsc	status,2,c
  3667  0037FA  EFB3  F01B         	goto	l9420
  3668  0037FE  EF01  F01C         	goto	l9428
  3669  003802                     l9428:
  3670                           
  3671                           ;main.c: 305:     if(driveMode == FollowLeft || driveMode == FollowRight){
  3672  003802  0E06               	movlw	6
  3673  003804  0100               	movlb	0	; () banked
  3674  003806  19FC               	xorwf	_driveMode& (0+255),w,b
  3675  003808  B4D8               	btfsc	status,2,c
  3676  00380A  EF09  F01C         	goto	u10701
  3677  00380E  EF0B  F01C         	goto	u10700
  3678  003812                     u10701:
  3679  003812  EF14  F01C         	goto	l9432
  3680  003816                     u10700:
  3681  003816                     
  3682                           ; BSR set to: 0
  3683  003816  0E07               	movlw	7
  3684  003818  19FC               	xorwf	_driveMode& (0+255),w,b
  3685  00381A  A4D8               	btfss	status,2,c
  3686  00381C  EF12  F01C         	goto	u10711
  3687  003820  EF14  F01C         	goto	u10710
  3688  003824                     u10711:
  3689  003824  EF32  F01C         	goto	l1350
  3690  003828                     u10710:
  3691  003828                     l9432:
  3692                           
  3693                           ; BSR set to: 0
  3694                           ;main.c: 306:         if(followCount >= (100)){
  3695  003828  0101               	movlb	1	; () banked
  3696  00382A  5135               	movf	(_followCount+1)& (0+255),w,b
  3697  00382C  E109               	bnz	u10720
  3698  00382E  0E64               	movlw	100
  3699  003830  5D34               	subwf	_followCount& (0+255),w,b
  3700  003832  A0D8               	btfss	status,0,c
  3701  003834  EF1E  F01C         	goto	u10721
  3702  003838  EF20  F01C         	goto	u10720
  3703  00383C                     u10721:
  3704  00383C  EF30  F01C         	goto	l9438
  3705  003840                     u10720:
  3706  003840                     
  3707                           ; BSR set to: 1
  3708                           ;main.c: 307:             driveMode = Straight;
  3709  003840  0E00               	movlw	0
  3710  003842  0100               	movlb	0	; () banked
  3711  003844  6FFC               	movwf	_driveMode& (0+255),b
  3712                           
  3713                           ;main.c: 308:             followCount = 0;
  3714  003846  0E00               	movlw	0
  3715  003848  0101               	movlb	1	; () banked
  3716  00384A  6F35               	movwf	(_followCount+1)& (0+255),b
  3717  00384C  0E00               	movlw	0
  3718  00384E  6F34               	movwf	_followCount& (0+255),b
  3719  003850                     
  3720                           ; BSR set to: 1
  3721                           ;main.c: 309:             printf("Ende Follow\n");
  3722  003850  0EB0               	movlw	low STR_13
  3723  003852  6FAE               	movwf	printf@fmt& (0+255),b
  3724  003854  0E10               	movlw	high STR_13
  3725  003856  6FAF               	movwf	(printf@fmt+1)& (0+255),b
  3726  003858  EC3A  F031         	call	_printf	;wreg free
  3727                           
  3728                           ;main.c: 310:         } else {
  3729  00385C  EF32  F01C         	goto	l1350
  3730  003860                     l9438:
  3731                           
  3732                           ; BSR set to: 1
  3733                           ;main.c: 311:             followCount++;
  3734  003860  4B34               	infsnz	_followCount& (0+255),f,b
  3735  003862  2B35               	incf	(_followCount+1)& (0+255),f,b
  3736  003864                     l1350:
  3737  003864  0012               	return		;funcret
  3738  003866                     __end_of_calcSteering:
  3739                           	callstack 0
  3740                           
  3741 ;; *************** function _setSteering *****************
  3742 ;; Defined at:
  3743 ;;		line 427 in file "main.c"
  3744 ;; Parameters:    Size  Location     Type
  3745 ;;  steering        2   35[BANK0 ] short 
  3746 ;;  steeringMode    1   37[BANK0 ] enum E17305
  3747 ;; Auto vars:     Size  Location     Type
  3748 ;;  steeringB       2   42[BANK0 ] short 
  3749 ;;  steeringF       2   40[BANK0 ] short 
  3750 ;; Return value:  Size  Location     Type
  3751 ;;                  1    wreg      void 
  3752 ;; Registers used:
  3753 ;;		wreg, status,2, status,0, cstack
  3754 ;; Tracked objects:
  3755 ;;		On entry : 0/0
  3756 ;;		On exit  : 0/0
  3757 ;;		Unchanged: 0/0
  3758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3759 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3760 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3761 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3762 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3763 ;;Total ram usage:        9 bytes
  3764 ;; Hardware stack levels used: 1
  3765 ;; Hardware stack levels required when called: 9
  3766 ;; This function calls:
  3767 ;;		_PWM5_LoadDutyValue
  3768 ;;		_PWM6_LoadDutyValue
  3769 ;;		___fldiv
  3770 ;;		___fltol
  3771 ;;		___xxtofl
  3772 ;; This function is called by:
  3773 ;;		_loop
  3774 ;;		_checkBatt
  3775 ;;		_calcSteering
  3776 ;;		_startAccell
  3777 ;; This function uses a non-reentrant model
  3778 ;;
  3779                           
  3780                           	psect	text10
  3781  003E9E                     __ptext10:
  3782                           	callstack 0
  3783  003E9E                     _setSteering:
  3784                           	callstack 20
  3785  003E9E  0E00               	movlw	0
  3786  003EA0  0100               	movlb	0	; () banked
  3787  003EA2  6F8B               	movwf	(setSteering@steeringB+1)& (0+255),b
  3788  003EA4  0E00               	movlw	0
  3789  003EA6  6F8A               	movwf	setSteering@steeringB& (0+255),b
  3790                           
  3791                           ;main.c: 429:     switch (steeringMode) {
  3792  003EA8  EFCA  F01F         	goto	l9186
  3793  003EAC                     l1394:
  3794                           
  3795                           ; BSR set to: 0
  3796                           ;main.c: 431:             steeringF = (+steering);
  3797  003EAC  C083  F088         	movff	setSteering@steering,setSteering@steeringF
  3798  003EB0  C084  F089         	movff	setSteering@steering+1,setSteering@steeringF+1
  3799                           
  3800                           ;main.c: 432:             steeringB = -steering;
  3801  003EB4  C083  F086         	movff	setSteering@steering,??_setSteering
  3802  003EB8  C084  F087         	movff	setSteering@steering+1,??_setSteering+1
  3803  003EBC  1F86               	comf	??_setSteering& (0+255),f,b
  3804  003EBE  1F87               	comf	(??_setSteering+1)& (0+255),f,b
  3805  003EC0  4B86               	infsnz	??_setSteering& (0+255),f,b
  3806  003EC2  2B87               	incf	(??_setSteering+1)& (0+255),f,b
  3807  003EC4  C086  F08A         	movff	??_setSteering,setSteering@steeringB
  3808  003EC8  C087  F08B         	movff	??_setSteering+1,setSteering@steeringB+1
  3809                           
  3810                           ;main.c: 433:             break;
  3811  003ECC  EFEB  F01F         	goto	l9188
  3812  003ED0                     l1396:
  3813                           
  3814                           ; BSR set to: 0
  3815                           ;main.c: 435:             steeringF = (+steering);
  3816  003ED0  C083  F088         	movff	setSteering@steering,setSteering@steeringF
  3817  003ED4  C084  F089         	movff	setSteering@steering+1,setSteering@steeringF+1
  3818                           
  3819                           ;main.c: 436:             steeringB = (+steering);
  3820  003ED8  C083  F08A         	movff	setSteering@steering,setSteering@steeringB
  3821  003EDC  C084  F08B         	movff	setSteering@steering+1,setSteering@steeringB+1
  3822                           
  3823                           ;main.c: 437:             break;
  3824  003EE0  EFEB  F01F         	goto	l9188
  3825  003EE4                     l1397:
  3826                           
  3827                           ; BSR set to: 0
  3828                           ;main.c: 439:             steeringF = (+steering);
  3829  003EE4  C083  F088         	movff	setSteering@steering,setSteering@steeringF
  3830  003EE8  C084  F089         	movff	setSteering@steering+1,setSteering@steeringF+1
  3831  003EEC                     
  3832                           ; BSR set to: 0
  3833                           ;main.c: 440:             steeringB = (-steering / (1.25));
  3834  003EEC  0E00               	movlw	0
  3835  003EEE  6E2E               	movwf	___fldiv@a^0,c
  3836  003EF0  0E00               	movlw	0
  3837  003EF2  6E2F               	movwf	(___fldiv@a+1)^0,c
  3838  003EF4  0EA0               	movlw	160
  3839  003EF6  6E30               	movwf	(___fldiv@a+2)^0,c
  3840  003EF8  0E3F               	movlw	63
  3841  003EFA  6E31               	movwf	(___fldiv@a+3)^0,c
  3842  003EFC  C083  F086         	movff	setSteering@steering,??_setSteering
  3843  003F00  C084  F087         	movff	setSteering@steering+1,??_setSteering+1
  3844  003F04  1F86               	comf	??_setSteering& (0+255),f,b
  3845  003F06  1F87               	comf	(??_setSteering+1)& (0+255),f,b
  3846  003F08  4B86               	infsnz	??_setSteering& (0+255),f,b
  3847  003F0A  2B87               	incf	(??_setSteering+1)& (0+255),f,b
  3848  003F0C  C086  F01C         	movff	??_setSteering,___xxtofl@val
  3849  003F10  C087  F01D         	movff	??_setSteering+1,___xxtofl@val+1
  3850  003F14  0E00               	movlw	0
  3851  003F16  BE1D               	btfsc	(___xxtofl@val+1)^0,7,c
  3852  003F18  0EFF               	movlw	-1
  3853  003F1A  6E1E               	movwf	(___xxtofl@val+2)^0,c
  3854  003F1C  6E1F               	movwf	(___xxtofl@val+3)^0,c
  3855  003F1E  0E01               	movlw	1
  3856  003F20  EC4A  F020         	call	___xxtofl
  3857  003F24  C01C  F02A         	movff	?___xxtofl,___fldiv@b
  3858  003F28  C01D  F02B         	movff	?___xxtofl+1,___fldiv@b+1
  3859  003F2C  C01E  F02C         	movff	?___xxtofl+2,___fldiv@b+2
  3860  003F30  C01F  F02D         	movff	?___xxtofl+3,___fldiv@b+3
  3861  003F34  EC48  F016         	call	___fldiv	;wreg free
  3862  003F38  C02A  F079         	movff	?___fldiv,___fltol@f1
  3863  003F3C  C02B  F07A         	movff	?___fldiv+1,___fltol@f1+1
  3864  003F40  C02C  F07B         	movff	?___fldiv+2,___fltol@f1+2
  3865  003F44  C02D  F07C         	movff	?___fldiv+3,___fltol@f1+3
  3866  003F48  ECFD  F024         	call	___fltol	;wreg free
  3867  003F4C  C079  F08A         	movff	?___fltol,setSteering@steeringB
  3868  003F50  C07A  F08B         	movff	?___fltol+1,setSteering@steeringB+1
  3869                           
  3870                           ;main.c: 441:             break;
  3871  003F54  EFEB  F01F         	goto	l9188
  3872  003F58                     l1398:
  3873                           
  3874                           ; BSR set to: 0
  3875                           ;main.c: 443:             steeringF = (+steering);
  3876  003F58  C083  F088         	movff	setSteering@steering,setSteering@steeringF
  3877  003F5C  C084  F089         	movff	setSteering@steering+1,setSteering@steeringF+1
  3878  003F60                     
  3879                           ; BSR set to: 0
  3880                           ;main.c: 444:             steeringB = 0;
  3881  003F60  0E00               	movlw	0
  3882  003F62  6F8B               	movwf	(setSteering@steeringB+1)& (0+255),b
  3883  003F64  0E00               	movlw	0
  3884  003F66  6F8A               	movwf	setSteering@steeringB& (0+255),b
  3885                           
  3886                           ;main.c: 445:             break;
  3887  003F68  EFEB  F01F         	goto	l9188
  3888  003F6C                     l9178:
  3889                           
  3890                           ; BSR set to: 0
  3891                           ;main.c: 447:             steeringF = 0;
  3892  003F6C  0E00               	movlw	0
  3893  003F6E  6F89               	movwf	(setSteering@steeringF+1)& (0+255),b
  3894  003F70  0E00               	movlw	0
  3895  003F72  6F88               	movwf	setSteering@steeringF& (0+255),b
  3896  003F74                     
  3897                           ; BSR set to: 0
  3898                           ;main.c: 448:             steeringB = (+steering);
  3899  003F74  C083  F08A         	movff	setSteering@steering,setSteering@steeringB
  3900  003F78  C084  F08B         	movff	setSteering@steering+1,setSteering@steeringB+1
  3901                           
  3902                           ;main.c: 449:             break;
  3903  003F7C  EFEB  F01F         	goto	l9188
  3904  003F80                     l9182:
  3905                           
  3906                           ; BSR set to: 0
  3907                           ;main.c: 451:             steeringF = 0;
  3908  003F80  0E00               	movlw	0
  3909  003F82  6F89               	movwf	(setSteering@steeringF+1)& (0+255),b
  3910  003F84  0E00               	movlw	0
  3911  003F86  6F88               	movwf	setSteering@steeringF& (0+255),b
  3912                           
  3913                           ;main.c: 452:             steeringB = 0;
  3914  003F88  0E00               	movlw	0
  3915  003F8A  6F8B               	movwf	(setSteering@steeringB+1)& (0+255),b
  3916  003F8C  0E00               	movlw	0
  3917  003F8E  6F8A               	movwf	setSteering@steeringB& (0+255),b
  3918                           
  3919                           ;main.c: 453:             break;
  3920  003F90  EFEB  F01F         	goto	l9188
  3921  003F94                     l9186:
  3922                           
  3923                           ; BSR set to: 0
  3924  003F94  5185               	movf	setSteering@steeringMode& (0+255),w,b
  3925  003F96  6F86               	movwf	??_setSteering& (0+255),b
  3926  003F98  6B87               	clrf	(??_setSteering+1)& (0+255),b
  3927                           
  3928                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3929                           ; Switch size 1, requested type "simple"
  3930                           ; Number of cases is 1, Range of values is 0 to 0
  3931                           ; switch strategies available:
  3932                           ; Name         Instructions Cycles
  3933                           ; simple_byte            4     3 (average)
  3934                           ;	Chosen strategy is simple_byte
  3935  003F9A  5187               	movf	(??_setSteering+1)& (0+255),w,b
  3936  003F9C  0A00               	xorlw	0	; case 0
  3937  003F9E  B4D8               	btfsc	status,2,c
  3938  003FA0  EFD4  F01F         	goto	l9764
  3939  003FA4  EFC0  F01F         	goto	l9182
  3940  003FA8                     l9764:
  3941                           
  3942                           ; BSR set to: 0
  3943                           ; Switch size 1, requested type "simple"
  3944                           ; Number of cases is 5, Range of values is 0 to 4
  3945                           ; switch strategies available:
  3946                           ; Name         Instructions Cycles
  3947                           ; simple_byte           16     9 (average)
  3948                           ;	Chosen strategy is simple_byte
  3949  003FA8  5186               	movf	??_setSteering& (0+255),w,b
  3950  003FAA  0A00               	xorlw	0	; case 0
  3951  003FAC  B4D8               	btfsc	status,2,c
  3952  003FAE  EF56  F01F         	goto	l1394
  3953  003FB2  0A01               	xorlw	1	; case 1
  3954  003FB4  B4D8               	btfsc	status,2,c
  3955  003FB6  EF68  F01F         	goto	l1396
  3956  003FBA  0A03               	xorlw	3	; case 2
  3957  003FBC  B4D8               	btfsc	status,2,c
  3958  003FBE  EF72  F01F         	goto	l1397
  3959  003FC2  0A01               	xorlw	1	; case 3
  3960  003FC4  B4D8               	btfsc	status,2,c
  3961  003FC6  EFAC  F01F         	goto	l1398
  3962  003FCA  0A07               	xorlw	7	; case 4
  3963  003FCC  B4D8               	btfsc	status,2,c
  3964  003FCE  EFB6  F01F         	goto	l9178
  3965  003FD2  EFC0  F01F         	goto	l9182
  3966  003FD6                     l9188:
  3967                           
  3968                           ;main.c: 456:     if (steeringF > ((65))) {
  3969  003FD6  0100               	movlb	0	; () banked
  3970  003FD8  BF89               	btfsc	(setSteering@steeringF+1)& (0+255),7,b
  3971  003FDA  EFF8  F01F         	goto	u10331
  3972  003FDE  5189               	movf	(setSteering@steeringF+1)& (0+255),w,b
  3973  003FE0  E109               	bnz	u10330
  3974  003FE2  0E42               	movlw	66
  3975  003FE4  5D88               	subwf	setSteering@steeringF& (0+255),w,b
  3976  003FE6  A0D8               	btfss	status,0,c
  3977  003FE8  EFF8  F01F         	goto	u10331
  3978  003FEC  EFFA  F01F         	goto	u10330
  3979  003FF0                     u10331:
  3980  003FF0  EF00  F020         	goto	l9192
  3981  003FF4                     u10330:
  3982  003FF4                     
  3983                           ; BSR set to: 0
  3984                           ;main.c: 457:         steeringF = ((65));
  3985  003FF4  0E00               	movlw	0
  3986  003FF6  6F89               	movwf	(setSteering@steeringF+1)& (0+255),b
  3987  003FF8  0E41               	movlw	65
  3988  003FFA  6F88               	movwf	setSteering@steeringF& (0+255),b
  3989                           
  3990                           ;main.c: 458:     } else if (steeringF < (-(65))) {
  3991  003FFC  EF12  F020         	goto	l9196
  3992  004000                     l9192:
  3993                           
  3994                           ; BSR set to: 0
  3995  004000  AF89               	btfss	(setSteering@steeringF+1)& (0+255),7,b
  3996  004002  EF0C  F020         	goto	u10341
  3997  004006  0EBF               	movlw	191
  3998  004008  5D88               	subwf	setSteering@steeringF& (0+255),w,b
  3999  00400A  0EFF               	movlw	255
  4000  00400C  5989               	subwfb	(setSteering@steeringF+1)& (0+255),w,b
  4001  00400E  B0D8               	btfsc	status,0,c
  4002  004010  EF0C  F020         	goto	u10341
  4003  004014  EF0E  F020         	goto	u10340
  4004  004018                     u10341:
  4005  004018  EF12  F020         	goto	l9196
  4006  00401C                     u10340:
  4007  00401C                     
  4008                           ; BSR set to: 0
  4009                           ;main.c: 459:         steeringF = (-(65));
  4010  00401C  0EFF               	movlw	255
  4011  00401E  6F89               	movwf	(setSteering@steeringF+1)& (0+255),b
  4012  004020  0EBF               	movlw	191
  4013  004022  6F88               	movwf	setSteering@steeringF& (0+255),b
  4014  004024                     l9196:
  4015                           
  4016                           ; BSR set to: 0
  4017                           ;main.c: 462:     if (steeringB > ((40))) {
  4018  004024  BF8B               	btfsc	(setSteering@steeringB+1)& (0+255),7,b
  4019  004026  EF1E  F020         	goto	u10351
  4020  00402A  518B               	movf	(setSteering@steeringB+1)& (0+255),w,b
  4021  00402C  E109               	bnz	u10350
  4022  00402E  0E29               	movlw	41
  4023  004030  5D8A               	subwf	setSteering@steeringB& (0+255),w,b
  4024  004032  A0D8               	btfss	status,0,c
  4025  004034  EF1E  F020         	goto	u10351
  4026  004038  EF20  F020         	goto	u10350
  4027  00403C                     u10351:
  4028  00403C  EF26  F020         	goto	l9200
  4029  004040                     u10350:
  4030  004040                     
  4031                           ; BSR set to: 0
  4032                           ;main.c: 463:         steeringB = ((40));
  4033  004040  0E00               	movlw	0
  4034  004042  6F8B               	movwf	(setSteering@steeringB+1)& (0+255),b
  4035  004044  0E28               	movlw	40
  4036  004046  6F8A               	movwf	setSteering@steeringB& (0+255),b
  4037                           
  4038                           ;main.c: 464:     } else if (steeringB < (-(40))) {
  4039  004048  EF38  F020         	goto	l9204
  4040  00404C                     l9200:
  4041                           
  4042                           ; BSR set to: 0
  4043  00404C  AF8B               	btfss	(setSteering@steeringB+1)& (0+255),7,b
  4044  00404E  EF32  F020         	goto	u10361
  4045  004052  0ED8               	movlw	216
  4046  004054  5D8A               	subwf	setSteering@steeringB& (0+255),w,b
  4047  004056  0EFF               	movlw	255
  4048  004058  598B               	subwfb	(setSteering@steeringB+1)& (0+255),w,b
  4049  00405A  B0D8               	btfsc	status,0,c
  4050  00405C  EF32  F020         	goto	u10361
  4051  004060  EF34  F020         	goto	u10360
  4052  004064                     u10361:
  4053  004064  EF38  F020         	goto	l9204
  4054  004068                     u10360:
  4055  004068                     
  4056                           ; BSR set to: 0
  4057                           ;main.c: 465:         steeringB = (-(40));
  4058  004068  0EFF               	movlw	255
  4059  00406A  6F8B               	movwf	(setSteering@steeringB+1)& (0+255),b
  4060  00406C  0ED8               	movlw	216
  4061  00406E  6F8A               	movwf	setSteering@steeringB& (0+255),b
  4062  004070                     l9204:
  4063                           
  4064                           ; BSR set to: 0
  4065                           ;main.c: 469:     PWM6_LoadDutyValue((uint16_t) ((352) + steeringF));
  4066  004070  0E60               	movlw	96
  4067  004072  2588               	addwf	setSteering@steeringF& (0+255),w,b
  4068  004074  6E14               	movwf	PWM6_LoadDutyValue@dutyValue^0,c
  4069  004076  0E01               	movlw	1
  4070  004078  2189               	addwfc	(setSteering@steeringF+1)& (0+255),w,b
  4071  00407A  6E15               	movwf	(PWM6_LoadDutyValue@dutyValue+1)^0,c
  4072  00407C  ECB6  F02F         	call	_PWM6_LoadDutyValue	;wreg free
  4073  004080                     
  4074                           ;main.c: 470:     PWM5_LoadDutyValue((uint16_t) ((357) + steeringB));
  4075  004080  0E65               	movlw	101
  4076  004082  0100               	movlb	0	; () banked
  4077  004084  258A               	addwf	setSteering@steeringB& (0+255),w,b
  4078  004086  6E14               	movwf	PWM5_LoadDutyValue@dutyValue^0,c
  4079  004088  0E01               	movlw	1
  4080  00408A  218B               	addwfc	(setSteering@steeringB+1)& (0+255),w,b
  4081  00408C  6E15               	movwf	(PWM5_LoadDutyValue@dutyValue+1)^0,c
  4082  00408E  ECD0  F02F         	call	_PWM5_LoadDutyValue	;wreg free
  4083  004092  0012               	return		;funcret
  4084  004094                     __end_of_setSteering:
  4085                           	callstack 0
  4086                           
  4087 ;; *************** function _PWM6_LoadDutyValue *****************
  4088 ;; Defined at:
  4089 ;;		line 74 in file "mcc_generated_files/pwm6.c"
  4090 ;; Parameters:    Size  Location     Type
  4091 ;;  dutyValue       2   19[COMRAM] unsigned short 
  4092 ;; Auto vars:     Size  Location     Type
  4093 ;;		None
  4094 ;; Return value:  Size  Location     Type
  4095 ;;                  1    wreg      void 
  4096 ;; Registers used:
  4097 ;;		wreg, status,2, status,0
  4098 ;; Tracked objects:
  4099 ;;		On entry : 0/0
  4100 ;;		On exit  : 0/0
  4101 ;;		Unchanged: 0/0
  4102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4103 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4105 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4106 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4107 ;;Total ram usage:        4 bytes
  4108 ;; Hardware stack levels used: 1
  4109 ;; Hardware stack levels required when called: 8
  4110 ;; This function calls:
  4111 ;;		Nothing
  4112 ;; This function is called by:
  4113 ;;		_setSteering
  4114 ;; This function uses a non-reentrant model
  4115 ;;
  4116                           
  4117                           	psect	text11
  4118  005F6C                     __ptext11:
  4119                           	callstack 0
  4120  005F6C                     _PWM6_LoadDutyValue:
  4121                           	callstack 20
  4122  005F6C                     
  4123                           ;mcc_generated_files/pwm6.c: 74:  void PWM6_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm6.c: 75:  {;mcc_generated_files/pwm6.c: 77:      PWM6DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  4124  005F6C  C014  F016         	movff	PWM6_LoadDutyValue@dutyValue,??_PWM6_LoadDutyValue
  4125  005F70  C015  F017         	movff	PWM6_LoadDutyValue@dutyValue+1,??_PWM6_LoadDutyValue+1
  4126  005F74  90D8               	bcf	status,0,c
  4127  005F76  3217               	rrcf	(??_PWM6_LoadDutyValue+1)^0,f,c
  4128  005F78  3216               	rrcf	??_PWM6_LoadDutyValue^0,f,c
  4129  005F7A  90D8               	bcf	status,0,c
  4130  005F7C  3217               	rrcf	(??_PWM6_LoadDutyValue+1)^0,f,c
  4131  005F7E  3216               	rrcf	??_PWM6_LoadDutyValue^0,f,c
  4132  005F80  5016               	movf	??_PWM6_LoadDutyValue^0,w,c
  4133  005F82  6E69               	movwf	105,c	;volatile
  4134                           
  4135                           ;mcc_generated_files/pwm6.c: 80:      PWM6DCL = (dutyValue & 0x0003)<<6;
  4136  005F84  C014  F016         	movff	PWM6_LoadDutyValue@dutyValue,??_PWM6_LoadDutyValue
  4137  005F88  0E03               	movlw	3
  4138  005F8A  1616               	andwf	??_PWM6_LoadDutyValue^0,f,c
  4139  005F8C  0E06               	movlw	6
  4140  005F8E  6E17               	movwf	(??_PWM6_LoadDutyValue+1)^0,c
  4141  005F90                     u10215:
  4142  005F90  90D8               	bcf	status,0,c
  4143  005F92  3616               	rlcf	??_PWM6_LoadDutyValue^0,f,c
  4144  005F94  2E17               	decfsz	(??_PWM6_LoadDutyValue+1)^0,f,c
  4145  005F96  EFC8  F02F         	goto	u10215
  4146  005F9A  5016               	movf	??_PWM6_LoadDutyValue^0,w,c
  4147  005F9C  6E68               	movwf	104,c	;volatile
  4148  005F9E  0012               	return		;funcret
  4149  005FA0                     __end_of_PWM6_LoadDutyValue:
  4150                           	callstack 0
  4151                           
  4152 ;; *************** function _PWM5_LoadDutyValue *****************
  4153 ;; Defined at:
  4154 ;;		line 74 in file "mcc_generated_files/pwm5.c"
  4155 ;; Parameters:    Size  Location     Type
  4156 ;;  dutyValue       2   19[COMRAM] unsigned short 
  4157 ;; Auto vars:     Size  Location     Type
  4158 ;;		None
  4159 ;; Return value:  Size  Location     Type
  4160 ;;                  1    wreg      void 
  4161 ;; Registers used:
  4162 ;;		wreg, status,2, status,0
  4163 ;; Tracked objects:
  4164 ;;		On entry : 0/0
  4165 ;;		On exit  : 0/0
  4166 ;;		Unchanged: 0/0
  4167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4168 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4170 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4171 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4172 ;;Total ram usage:        4 bytes
  4173 ;; Hardware stack levels used: 1
  4174 ;; Hardware stack levels required when called: 8
  4175 ;; This function calls:
  4176 ;;		Nothing
  4177 ;; This function is called by:
  4178 ;;		_setSteering
  4179 ;; This function uses a non-reentrant model
  4180 ;;
  4181                           
  4182                           	psect	text12
  4183  005FA0                     __ptext12:
  4184                           	callstack 0
  4185  005FA0                     _PWM5_LoadDutyValue:
  4186                           	callstack 20
  4187  005FA0                     
  4188                           ;mcc_generated_files/pwm5.c: 74:  void PWM5_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm5.c: 75:  {;mcc_generated_files/pwm5.c: 77:      PWM5DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  4189  005FA0  C014  F016         	movff	PWM5_LoadDutyValue@dutyValue,??_PWM5_LoadDutyValue
  4190  005FA4  C015  F017         	movff	PWM5_LoadDutyValue@dutyValue+1,??_PWM5_LoadDutyValue+1
  4191  005FA8  90D8               	bcf	status,0,c
  4192  005FAA  3217               	rrcf	(??_PWM5_LoadDutyValue+1)^0,f,c
  4193  005FAC  3216               	rrcf	??_PWM5_LoadDutyValue^0,f,c
  4194  005FAE  90D8               	bcf	status,0,c
  4195  005FB0  3217               	rrcf	(??_PWM5_LoadDutyValue+1)^0,f,c
  4196  005FB2  3216               	rrcf	??_PWM5_LoadDutyValue^0,f,c
  4197  005FB4  5016               	movf	??_PWM5_LoadDutyValue^0,w,c
  4198  005FB6  6E6D               	movwf	109,c	;volatile
  4199                           
  4200                           ;mcc_generated_files/pwm5.c: 80:      PWM5DCL = (dutyValue & 0x0003)<<6;
  4201  005FB8  C014  F016         	movff	PWM5_LoadDutyValue@dutyValue,??_PWM5_LoadDutyValue
  4202  005FBC  0E03               	movlw	3
  4203  005FBE  1616               	andwf	??_PWM5_LoadDutyValue^0,f,c
  4204  005FC0  0E06               	movlw	6
  4205  005FC2  6E17               	movwf	(??_PWM5_LoadDutyValue+1)^0,c
  4206  005FC4                     u10205:
  4207  005FC4  90D8               	bcf	status,0,c
  4208  005FC6  3616               	rlcf	??_PWM5_LoadDutyValue^0,f,c
  4209  005FC8  2E17               	decfsz	(??_PWM5_LoadDutyValue+1)^0,f,c
  4210  005FCA  EFE2  F02F         	goto	u10205
  4211  005FCE  5016               	movf	??_PWM5_LoadDutyValue^0,w,c
  4212  005FD0  6E6C               	movwf	108,c	;volatile
  4213  005FD2  0012               	return		;funcret
  4214  005FD4                     __end_of_PWM5_LoadDutyValue:
  4215                           	callstack 0
  4216                           
  4217 ;; *************** function _printf *****************
  4218 ;; Defined at:
  4219 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\printf.c"
  4220 ;; Parameters:    Size  Location     Type
  4221 ;;  fmt             2    2[BANK1 ] PTR const unsigned char 
  4222 ;;		 -> STR_13(13), STR_12(14), STR_11(13), STR_10(14), 
  4223 ;;		 -> STR_9(8), STR_8(13), STR_7(14), STR_6(13), 
  4224 ;;		 -> STR_5(16), STR_4(21), STR_3(26), STR_2(24), 
  4225 ;;		 -> STR_1(20), 
  4226 ;; Auto vars:     Size  Location     Type
  4227 ;;  ap              2    8[BANK1 ] PTR void [1]
  4228 ;;		 -> ?_printf(2), 
  4229 ;;  ret             2    0        int 
  4230 ;; Return value:  Size  Location     Type
  4231 ;;                  2    2[BANK1 ] int 
  4232 ;; Registers used:
  4233 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4234 ;; Tracked objects:
  4235 ;;		On entry : 0/0
  4236 ;;		On exit  : 0/0
  4237 ;;		Unchanged: 0/0
  4238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4239 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4240 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4242 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4243 ;;Total ram usage:        8 bytes
  4244 ;; Hardware stack levels used: 1
  4245 ;; Hardware stack levels required when called: 16
  4246 ;; This function calls:
  4247 ;;		_vfprintf
  4248 ;; This function is called by:
  4249 ;;		_checkCurveCount
  4250 ;;		_getCurve
  4251 ;;		_getReverse
  4252 ;;		_calcSteering
  4253 ;;		_startAccell
  4254 ;; This function uses a non-reentrant model
  4255 ;;
  4256                           
  4257                           	psect	text13
  4258  006274                     __ptext13:
  4259                           	callstack 0
  4260  006274                     _printf:
  4261                           	callstack 12
  4262  006274  0EB0               	movlw	low (?_printf+2)
  4263  006276  0101               	movlb	1	; () banked
  4264  006278  6FB4               	movwf	printf@ap& (0+255),b
  4265  00627A  0E01               	movlw	high (?_printf+2)
  4266  00627C  6FB5               	movwf	(printf@ap+1)& (0+255),b
  4267  00627E                     
  4268                           ; BSR set to: 1
  4269  00627E  0E00               	movlw	0
  4270  006280  0100               	movlb	0	; () banked
  4271  006282  6FEB               	movwf	vfprintf@fp& (0+255),b
  4272  006284  0E00               	movlw	0
  4273  006286  6FEC               	movwf	(vfprintf@fp+1)& (0+255),b
  4274  006288  C1AE  F0ED         	movff	printf@fmt,vfprintf@fmt
  4275  00628C  C1AF  F0EE         	movff	printf@fmt+1,vfprintf@fmt+1
  4276  006290  0EB4               	movlw	low printf@ap
  4277  006292  6FEF               	movwf	vfprintf@ap& (0+255),b
  4278  006294  0E01               	movlw	high printf@ap
  4279  006296  6FF0               	movwf	(vfprintf@ap+1)& (0+255),b
  4280  006298  EC54  F02C         	call	_vfprintf	;wreg free
  4281  00629C  0012               	return		;funcret
  4282  00629E                     __end_of_printf:
  4283                           	callstack 0
  4284                           
  4285 ;; *************** function _vfprintf *****************
  4286 ;; Defined at:
  4287 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4288 ;; Parameters:    Size  Location     Type
  4289 ;;  fp              2  139[BANK0 ] PTR struct _IO_FILE
  4290 ;;		 -> NULL(0), 
  4291 ;;  fmt             2  141[BANK0 ] PTR const unsigned char 
  4292 ;;		 -> STR_13(13), STR_12(14), STR_11(13), STR_10(14), 
  4293 ;;		 -> STR_9(8), STR_8(13), STR_7(14), STR_6(13), 
  4294 ;;		 -> STR_5(16), STR_4(21), STR_3(26), STR_2(24), 
  4295 ;;		 -> STR_1(20), 
  4296 ;;  ap              2  143[BANK0 ] PTR PTR void 
  4297 ;;		 -> printf@ap(2), 
  4298 ;; Auto vars:     Size  Location     Type
  4299 ;;  cfmt            2    0[BANK1 ] PTR unsigned char 
  4300 ;;		 -> STR_13(13), STR_12(14), STR_11(13), STR_10(14), 
  4301 ;;		 -> STR_9(8), STR_8(13), STR_7(14), STR_6(13), 
  4302 ;;		 -> STR_5(16), STR_4(21), STR_3(26), STR_2(24), 
  4303 ;;		 -> STR_1(20), 
  4304 ;; Return value:  Size  Location     Type
  4305 ;;                  2  139[BANK0 ] int 
  4306 ;; Registers used:
  4307 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4308 ;; Tracked objects:
  4309 ;;		On entry : 0/0
  4310 ;;		On exit  : 0/0
  4311 ;;		Unchanged: 0/0
  4312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4313 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4314 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4316 ;;      Totals:         0       6       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4317 ;;Total ram usage:        8 bytes
  4318 ;; Hardware stack levels used: 1
  4319 ;; Hardware stack levels required when called: 15
  4320 ;; This function calls:
  4321 ;;		_vfpfcnvrt
  4322 ;; This function is called by:
  4323 ;;		_printf
  4324 ;; This function uses a non-reentrant model
  4325 ;;
  4326                           
  4327                           	psect	text14
  4328  0058A8                     __ptext14:
  4329                           	callstack 0
  4330  0058A8                     _vfprintf:
  4331                           	callstack 12
  4332  0058A8                     
  4333                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  4334  0058A8  C0ED  F1AC         	movff	vfprintf@fmt,vfprintf@cfmt
  4335  0058AC  C0EE  F1AD         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  4336  0058B0                     
  4337                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  4338  0058B0  0E00               	movlw	0
  4339  0058B2  0101               	movlb	1	; () banked
  4340  0058B4  6F29               	movwf	(_nout+1)& (0+255),b
  4341  0058B6  0E00               	movlw	0
  4342  0058B8  6F28               	movwf	_nout& (0+255),b
  4343                           
  4344                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  4345  0058BA  EF76  F02C         	goto	l9170
  4346  0058BE                     l9168:
  4347                           
  4348                           ; BSR set to: 1
  4349                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  4350  0058BE  C0EB  F0C7         	movff	vfprintf@fp,vfpfcnvrt@fp
  4351  0058C2  C0EC  F0C8         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  4352  0058C6  0EAC               	movlw	low vfprintf@cfmt
  4353  0058C8  0100               	movlb	0	; () banked
  4354  0058CA  6FC9               	movwf	vfpfcnvrt@fmt& (0+255),b
  4355  0058CC  0E01               	movlw	high vfprintf@cfmt
  4356  0058CE  6FCA               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  4357  0058D0  C0EF  F0CB         	movff	vfprintf@ap,vfpfcnvrt@ap
  4358  0058D4  C0F0  F0CC         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  4359  0058D8  ECCA  F00E         	call	_vfpfcnvrt	;wreg free
  4360  0058DC  0100               	movlb	0	; () banked
  4361  0058DE  51C7               	movf	?_vfpfcnvrt& (0+255),w,b
  4362  0058E0  0101               	movlb	1	; () banked
  4363  0058E2  2728               	addwf	_nout& (0+255),f,b
  4364  0058E4  0100               	movlb	0	; () banked
  4365  0058E6  51C8               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  4366  0058E8  0101               	movlb	1	; () banked
  4367  0058EA  2329               	addwfc	(_nout+1)& (0+255),f,b
  4368  0058EC                     l9170:
  4369                           
  4370                           ; BSR set to: 1
  4371                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  4372  0058EC  0060  F6B3  FFF6   	movff	vfprintf@cfmt,tblptrl
  4373  0058F2  0060  F6B7  FFF7   	movff	vfprintf@cfmt+1,tblptrh
  4374  0058F8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4375  0058F8  6AF8               	clrf	tblptru,c
  4376  0058FA                     	endif
  4377  0058FA                     	if	0	;tblptru may be non-zero
  4378  0058FA                     	endif
  4379  0058FA  0008               	tblrd		*
  4380  0058FC  50F5               	movf	tablat,w,c
  4381  0058FE  0900               	iorlw	0
  4382  005900  A4D8               	btfss	status,2,c
  4383  005902  EF85  F02C         	goto	u10321
  4384  005906  EF87  F02C         	goto	u10320
  4385  00590A                     u10321:
  4386  00590A  EF5F  F02C         	goto	l9168
  4387  00590E                     u10320:
  4388  00590E                     
  4389                           ; BSR set to: 1
  4390                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  4391  00590E  C128  F0EB         	movff	_nout,?_vfprintf
  4392  005912  C129  F0EC         	movff	_nout+1,?_vfprintf+1
  4393  005916                     
  4394                           ; BSR set to: 1
  4395  005916  0012               	return		;funcret
  4396  005918                     __end_of_vfprintf:
  4397                           	callstack 0
  4398                           
  4399 ;; *************** function _vfpfcnvrt *****************
  4400 ;; Defined at:
  4401 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4402 ;; Parameters:    Size  Location     Type
  4403 ;;  fp              2  103[BANK0 ] PTR struct _IO_FILE
  4404 ;;		 -> NULL(0), 
  4405 ;;  fmt             2  105[BANK0 ] PTR PTR unsigned char 
  4406 ;;		 -> vfprintf@cfmt(2), 
  4407 ;;  ap              2  107[BANK0 ] PTR PTR void 
  4408 ;;		 -> printf@ap(2), 
  4409 ;; Auto vars:     Size  Location     Type
  4410 ;;  llu             8  121[BANK0 ] unsigned long long 
  4411 ;;  ll              8  113[BANK0 ] long long 
  4412 ;;  f               4  131[BANK0 ] long long 
  4413 ;;  ct              3  135[BANK0 ] unsigned char [3]
  4414 ;;  vp              3    0        PTR void 
  4415 ;;  cp              3    0        PTR unsigned char 
  4416 ;;  i               2    0        int 
  4417 ;;  done            2    0        int 
  4418 ;;  c               1  138[BANK0 ] unsigned char 
  4419 ;; Return value:  Size  Location     Type
  4420 ;;                  2  103[BANK0 ] int 
  4421 ;; Registers used:
  4422 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4423 ;; Tracked objects:
  4424 ;;		On entry : 0/0
  4425 ;;		On exit  : 0/0
  4426 ;;		Unchanged: 0/0
  4427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4428 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4429 ;;      Locals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4430 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4431 ;;      Totals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4432 ;;Total ram usage:       36 bytes
  4433 ;; Hardware stack levels used: 1
  4434 ;; Hardware stack levels required when called: 14
  4435 ;; This function calls:
  4436 ;;		_dtoa
  4437 ;;		_efgtoa
  4438 ;;		_fputc
  4439 ;;		_isupper
  4440 ;;		_strncmp
  4441 ;;		_tolower
  4442 ;;		_utoa
  4443 ;; This function is called by:
  4444 ;;		_vfprintf
  4445 ;; This function uses a non-reentrant model
  4446 ;;
  4447                           
  4448                           	psect	text15
  4449  001D94                     __ptext15:
  4450                           	callstack 0
  4451  001D94                     _vfpfcnvrt:
  4452                           	callstack 12
  4453  001D94                     
  4454                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  4455  001D94  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4456  001D9A  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4457  001DA0  006F FF7B FFF6     	movff	postinc2,tblptrl
  4458  001DA6  006F FF77 FFF7     	movff	postdec2,tblptrh
  4459  001DAC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4460  001DAC  6AF8               	clrf	tblptru,c
  4461  001DAE                     	endif
  4462  001DAE                     	if	0	;tblptru may be non-zero
  4463  001DAE                     	endif
  4464  001DAE  0008               	tblrd		*
  4465  001DB0  50F5               	movf	tablat,w,c
  4466  001DB2  0A25               	xorlw	37
  4467  001DB4  A4D8               	btfss	status,2,c
  4468  001DB6  EFDF  F00E         	goto	u10081
  4469  001DBA  EFE1  F00E         	goto	u10080
  4470  001DBE                     u10081:
  4471  001DBE  EF9C  F011         	goto	l9106
  4472  001DC2                     u10080:
  4473  001DC2                     
  4474                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  4475  001DC2  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4476  001DC8  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4477  001DCE  2ADE               	incf	postinc2,f,c
  4478  001DD0  0E00               	movlw	0
  4479  001DD2  22DD               	addwfc	postdec2,f,c
  4480  001DD4                     
  4481                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  4482  001DD4  0E00               	movlw	0
  4483  001DD6  0101               	movlb	1	; () banked
  4484  001DD8  6F2B               	movwf	(_width+1)& (0+255),b
  4485  001DDA  0E00               	movlw	0
  4486  001DDC  6F2A               	movwf	_width& (0+255),b
  4487  001DDE  C12A  F03C         	movff	_width,_flags
  4488  001DE2  C12B  F03D         	movff	_width+1,_flags+1
  4489  001DE6                     
  4490                           ; BSR set to: 1
  4491                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  4492  001DE6  683A               	setf	_prec^0,c
  4493  001DE8  683B               	setf	(_prec+1)^0,c
  4494  001DEA                     
  4495                           ; BSR set to: 1
  4496                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  4497  001DEA  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4498  001DF0  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4499  001DF6  006F FF7B FFF6     	movff	postinc2,tblptrl
  4500  001DFC  006F FF77 FFF7     	movff	postdec2,tblptrh
  4501  001E02                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4502  001E02  6AF8               	clrf	tblptru,c
  4503  001E04                     	endif
  4504  001E04                     	if	0	;tblptru may be non-zero
  4505  001E04                     	endif
  4506  001E04  0008               	tblrd		*
  4507  001E06  50F5               	movf	tablat,w,c
  4508  001E08  6E1A               	movwf	tolower@c^0,c
  4509  001E0A  6A1B               	clrf	(tolower@c+1)^0,c
  4510  001E0C  ECF2  F02C         	call	_tolower	;wreg free
  4511  001E10  501A               	movf	?_tolower^0,w,c
  4512  001E12  0100               	movlb	0	; () banked
  4513  001E14  6FE7               	movwf	vfpfcnvrt@ct& (0+255),b
  4514  001E16                     
  4515                           ; BSR set to: 0
  4516                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  4517  001E16  51E7               	movf	vfpfcnvrt@ct& (0+255),w,b
  4518  001E18  B4D8               	btfsc	status,2,c
  4519  001E1A  EF11  F00F         	goto	u10091
  4520  001E1E  EF13  F00F         	goto	u10090
  4521  001E22                     u10091:
  4522  001E22  EF5B  F00F         	goto	l9044
  4523  001E26                     u10090:
  4524  001E26                     
  4525                           ; BSR set to: 0
  4526                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  4527  001E26  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4528  001E2C  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4529  001E32  006F FF78  F0CD    	movff	postinc2,??_vfpfcnvrt
  4530  001E38  006F FF74  F0CE    	movff	postdec2,??_vfpfcnvrt+1
  4531  001E3E  0E01               	movlw	1
  4532  001E40  27CD               	addwf	??_vfpfcnvrt& (0+255),f,b
  4533  001E42  0E00               	movlw	0
  4534  001E44  23CE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  4535  001E46  0060  F337  FFF6   	movff	??_vfpfcnvrt,tblptrl
  4536  001E4C  0060  F33B  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  4537  001E52                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4538  001E52  6AF8               	clrf	tblptru,c
  4539  001E54                     	endif
  4540  001E54                     	if	0	;tblptru may be non-zero
  4541  001E54                     	endif
  4542  001E54  0008               	tblrd		*
  4543  001E56  50F5               	movf	tablat,w,c
  4544  001E58  6E1A               	movwf	tolower@c^0,c
  4545  001E5A  6A1B               	clrf	(tolower@c+1)^0,c
  4546  001E5C  ECF2  F02C         	call	_tolower	;wreg free
  4547  001E60  501A               	movf	?_tolower^0,w,c
  4548  001E62  0100               	movlb	0	; () banked
  4549  001E64  6FE8               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  4550  001E66                     
  4551                           ; BSR set to: 0
  4552                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  4553  001E66  51E8               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  4554  001E68  B4D8               	btfsc	status,2,c
  4555  001E6A  EF39  F00F         	goto	u10101
  4556  001E6E  EF3B  F00F         	goto	u10100
  4557  001E72                     u10101:
  4558  001E72  EF5B  F00F         	goto	l9044
  4559  001E76                     u10100:
  4560  001E76                     
  4561                           ; BSR set to: 0
  4562                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  4563  001E76  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4564  001E7C  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4565  001E82  006F FF78  F0CD    	movff	postinc2,??_vfpfcnvrt
  4566  001E88  006F FF74  F0CE    	movff	postdec2,??_vfpfcnvrt+1
  4567  001E8E  0E02               	movlw	2
  4568  001E90  27CD               	addwf	??_vfpfcnvrt& (0+255),f,b
  4569  001E92  0E00               	movlw	0
  4570  001E94  23CE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  4571  001E96  0060  F337  FFF6   	movff	??_vfpfcnvrt,tblptrl
  4572  001E9C  0060  F33B  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  4573  001EA2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4574  001EA2  6AF8               	clrf	tblptru,c
  4575  001EA4                     	endif
  4576  001EA4                     	if	0	;tblptru may be non-zero
  4577  001EA4                     	endif
  4578  001EA4  0008               	tblrd		*
  4579  001EA6  50F5               	movf	tablat,w,c
  4580  001EA8  6E1A               	movwf	tolower@c^0,c
  4581  001EAA  6A1B               	clrf	(tolower@c+1)^0,c
  4582  001EAC  ECF2  F02C         	call	_tolower	;wreg free
  4583  001EB0  501A               	movf	?_tolower^0,w,c
  4584  001EB2  0100               	movlb	0	; () banked
  4585  001EB4  6FE9               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  4586  001EB6                     l9044:
  4587                           
  4588                           ; BSR set to: 0
  4589                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  4590  001EB6  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4591  001EBC  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4592  001EC2  006F FF7B FFF6     	movff	postinc2,tblptrl
  4593  001EC8  006F FF77 FFF7     	movff	postdec2,tblptrh
  4594  001ECE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4595  001ECE  6AF8               	clrf	tblptru,c
  4596  001ED0                     	endif
  4597  001ED0                     	if	0	;tblptru may be non-zero
  4598  001ED0                     	endif
  4599  001ED0  0008               	tblrd		*
  4600  001ED2  50F5               	movf	tablat,w,c
  4601  001ED4  0A64               	xorlw	100
  4602  001ED6  B4D8               	btfsc	status,2,c
  4603  001ED8  EF70  F00F         	goto	u10111
  4604  001EDC  EF72  F00F         	goto	u10110
  4605  001EE0                     u10111:
  4606  001EE0  EF89  F00F         	goto	l9048
  4607  001EE4                     u10110:
  4608  001EE4                     
  4609                           ; BSR set to: 0
  4610  001EE4  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4611  001EEA  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4612  001EF0  006F FF7B FFF6     	movff	postinc2,tblptrl
  4613  001EF6  006F FF77 FFF7     	movff	postdec2,tblptrh
  4614  001EFC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4615  001EFC  6AF8               	clrf	tblptru,c
  4616  001EFE                     	endif
  4617  001EFE                     	if	0	;tblptru may be non-zero
  4618  001EFE                     	endif
  4619  001EFE  0008               	tblrd		*
  4620  001F00  50F5               	movf	tablat,w,c
  4621  001F02  0A69               	xorlw	105
  4622  001F04  A4D8               	btfss	status,2,c
  4623  001F06  EF87  F00F         	goto	u10121
  4624  001F0A  EF89  F00F         	goto	u10120
  4625  001F0E                     u10121:
  4626  001F0E  EFD3  F00F         	goto	l9054
  4627  001F12                     u10120:
  4628  001F12                     l9048:
  4629                           
  4630                           ; BSR set to: 0
  4631                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  4632  001F12  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4633  001F18  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4634  001F1E  2ADE               	incf	postinc2,f,c
  4635  001F20  0E00               	movlw	0
  4636  001F22  22DD               	addwfc	postdec2,f,c
  4637                           
  4638                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  4639  001F24  0060  F32F  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  4640  001F2A  0060  F333  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  4641  001F30  006F FF7C  F0CD    	movff	indf2,??_vfpfcnvrt
  4642  001F36  0E02               	movlw	2
  4643  001F38  26DE               	addwf	postinc2,f,c
  4644  001F3A  006F FF7C  F0CE    	movff	indf2,??_vfpfcnvrt+1
  4645  001F40  0E00               	movlw	0
  4646  001F42  22DD               	addwfc	postdec2,f,c
  4647  001F44  0060  F337  FFD9   	movff	??_vfpfcnvrt,fsr2l
  4648  001F4A  0060  F33B  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  4649  001F50  006F FF78  F0D1    	movff	postinc2,vfpfcnvrt@ll
  4650  001F56  006F FF74  F0D2    	movff	postdec2,vfpfcnvrt@ll+1
  4651  001F5C  0E00               	movlw	0
  4652  001F5E  BFD2               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  4653  001F60  0EFF               	movlw	-1
  4654  001F62  6FD3               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  4655  001F64  6FD4               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  4656  001F66  6FD5               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  4657  001F68  6FD6               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  4658  001F6A  6FD7               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  4659  001F6C  6FD8               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  4660  001F6E                     
  4661                           ; BSR set to: 0
  4662                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  4663  001F6E  C0C7  F060         	movff	vfpfcnvrt@fp,dtoa@fp
  4664  001F72  C0C8  F061         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  4665  001F76  C0D1  F062         	movff	vfpfcnvrt@ll,dtoa@d
  4666  001F7A  C0D2  F063         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  4667  001F7E  C0D3  F064         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  4668  001F82  C0D4  F065         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  4669  001F86  C0D5  F066         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  4670  001F8A  C0D6  F067         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  4671  001F8E  C0D7  F068         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  4672  001F92  C0D8  F069         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  4673  001F96  EC89  F019         	call	_dtoa	;wreg free
  4674  001F9A  C060  F0C7         	movff	?_dtoa,?_vfpfcnvrt
  4675  001F9E  C061  F0C8         	movff	?_dtoa+1,?_vfpfcnvrt+1
  4676  001FA2  EFBE  F011         	goto	l2275
  4677  001FA6                     l9054:
  4678                           
  4679                           ; BSR set to: 0
  4680                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  4681  001FA6  0E66               	movlw	102
  4682  001FA8  19E7               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  4683  001FAA  A4D8               	btfss	status,2,c
  4684  001FAC  EFDA  F00F         	goto	u10131
  4685  001FB0  EFDC  F00F         	goto	u10130
  4686  001FB4                     u10131:
  4687  001FB4  EF2E  F010         	goto	l9066
  4688  001FB8                     u10130:
  4689  001FB8                     
  4690                           ; BSR set to: 0
  4691                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  4692  001FB8  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4693  001FBE  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4694  001FC4  006F FF7B FFF6     	movff	postinc2,tblptrl
  4695  001FCA  006F FF77 FFF7     	movff	postdec2,tblptrh
  4696  001FD0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4697  001FD0  6AF8               	clrf	tblptru,c
  4698  001FD2                     	endif
  4699  001FD2                     	if	0	;tblptru may be non-zero
  4700  001FD2                     	endif
  4701  001FD2  0008               	tblrd		*
  4702  001FD4  006F FFD4  F0EA    	movff	tablat,vfpfcnvrt@c
  4703  001FDA                     
  4704                           ; BSR set to: 0
  4705                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  4706  001FDA  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4707  001FE0  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4708  001FE6  2ADE               	incf	postinc2,f,c
  4709  001FE8  0E00               	movlw	0
  4710  001FEA  22DD               	addwfc	postdec2,f,c
  4711  001FEC                     
  4712                           ; BSR set to: 0
  4713                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  4714  001FEC  0060  F32F  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  4715  001FF2  0060  F333  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  4716  001FF8  006F FF7C  F0CD    	movff	indf2,??_vfpfcnvrt
  4717  001FFE  0E04               	movlw	4
  4718  002000  26DE               	addwf	postinc2,f,c
  4719  002002  006F FF7C  F0CE    	movff	indf2,??_vfpfcnvrt+1
  4720  002008  0E00               	movlw	0
  4721  00200A  22DD               	addwfc	postdec2,f,c
  4722  00200C  0060  F337  FFD9   	movff	??_vfpfcnvrt,fsr2l
  4723  002012  0060  F33B  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  4724  002018  006F FF78  F0E3    	movff	postinc2,vfpfcnvrt@f
  4725  00201E  006F FF78  F0E4    	movff	postinc2,vfpfcnvrt@f+1
  4726  002024  006F FF78  F0E5    	movff	postinc2,vfpfcnvrt@f+2
  4727  00202A  006F FF78  F0E6    	movff	postinc2,vfpfcnvrt@f+3
  4728  002030                     
  4729                           ; BSR set to: 0
  4730                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  4731  002030  C0C7  F083         	movff	vfpfcnvrt@fp,efgtoa@fp
  4732  002034  C0C8  F084         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  4733  002038  C0E3  F085         	movff	vfpfcnvrt@f,efgtoa@f
  4734  00203C  C0E4  F086         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  4735  002040  C0E5  F087         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  4736  002044  C0E6  F088         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  4737  002048  C0EA  F089         	movff	vfpfcnvrt@c,efgtoa@c
  4738  00204C  EC73  F008         	call	_efgtoa	;wreg free
  4739  002050  C083  F0C7         	movff	?_efgtoa,?_vfpfcnvrt
  4740  002054  C084  F0C8         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  4741  002058  EFBE  F011         	goto	l2275
  4742  00205C                     l9066:
  4743                           
  4744                           ; BSR set to: 0
  4745                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  4746  00205C  0EE7               	movlw	low vfpfcnvrt@ct
  4747  00205E  6E14               	movwf	strncmp@_l^0,c
  4748  002060  0E00               	movlw	high vfpfcnvrt@ct
  4749  002062  6E15               	movwf	(strncmp@_l+1)^0,c
  4750  002064  0EE2               	movlw	low STR_22
  4751  002066  6E16               	movwf	strncmp@_r^0,c
  4752  002068  0E10               	movlw	high STR_22
  4753  00206A  6E17               	movwf	(strncmp@_r+1)^0,c
  4754  00206C  0E00               	movlw	0
  4755  00206E  6E19               	movwf	(strncmp@n+1)^0,c
  4756  002070  0E02               	movlw	2
  4757  002072  6E18               	movwf	strncmp@n^0,c
  4758  002074  EC83  F026         	call	_strncmp	;wreg free
  4759  002078  5014               	movf	?_strncmp^0,w,c
  4760  00207A  1015               	iorwf	(?_strncmp+1)^0,w,c
  4761  00207C  A4D8               	btfss	status,2,c
  4762  00207E  EF43  F010         	goto	u10141
  4763  002082  EF45  F010         	goto	u10140
  4764  002086                     u10141:
  4765  002086  EFF8  F010         	goto	l9082
  4766  00208A                     u10140:
  4767  00208A                     
  4768                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 953:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  4769  00208A  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4770  002090  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4771  002096  006F FF78  F0CD    	movff	postinc2,??_vfpfcnvrt
  4772  00209C  006F FF74  F0CE    	movff	postdec2,??_vfpfcnvrt+1
  4773  0020A2  0E01               	movlw	1
  4774  0020A4  0100               	movlb	0	; () banked
  4775  0020A6  27CD               	addwf	??_vfpfcnvrt& (0+255),f,b
  4776  0020A8  0E00               	movlw	0
  4777  0020AA  23CE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  4778  0020AC  0060  F337  FFF6   	movff	??_vfpfcnvrt,tblptrl
  4779  0020B2  0060  F33B  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  4780  0020B8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4781  0020B8  6AF8               	clrf	tblptru,c
  4782  0020BA                     	endif
  4783  0020BA                     	if	0	;tblptru may be non-zero
  4784  0020BA                     	endif
  4785  0020BA  0008               	tblrd		*
  4786  0020BC  006F FFD4  F0EA    	movff	tablat,vfpfcnvrt@c
  4787  0020C2  0EBF               	movlw	191
  4788  0020C4  6FCD               	movwf	??_vfpfcnvrt& (0+255),b
  4789  0020C6  0EFF               	movlw	255
  4790  0020C8  6FCE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  4791  0020CA  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4792  0020D0  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4793  0020D6  006F FF7B FFF6     	movff	postinc2,tblptrl
  4794  0020DC  006F FF77 FFF7     	movff	postdec2,tblptrh
  4795  0020E2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4796  0020E2  6AF8               	clrf	tblptru,c
  4797  0020E4                     	endif
  4798  0020E4                     	if	0	;tblptru may be non-zero
  4799  0020E4                     	endif
  4800  0020E4  0008               	tblrd		*
  4801  0020E6  50F5               	movf	tablat,w,c
  4802  0020E8  6FCF               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  4803  0020EA  6BD0               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  4804  0020EC  51CD               	movf	??_vfpfcnvrt& (0+255),w,b
  4805  0020EE  27CF               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  4806  0020F0  51CE               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  4807  0020F2  23D0               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  4808  0020F4  51D0               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  4809  0020F6  E10A               	bnz	u10150
  4810  0020F8  0E1A               	movlw	26
  4811  0020FA  5DCF               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  4812  0020FC  A0D8               	btfss	status,0,c
  4813  0020FE  EF83  F010         	goto	u10151
  4814  002102  EF86  F010         	goto	u10150
  4815  002106                     u10151:
  4816  002106  0E01               	movlw	1
  4817  002108  EF87  F010         	goto	u10160
  4818  00210C                     u10150:
  4819  00210C  0E00               	movlw	0
  4820  00210E                     u10160:
  4821  00210E  6FE1               	movwf	_vfpfcnvrt$3604& (0+255),b
  4822  002110  6BE2               	clrf	(_vfpfcnvrt$3604+1)& (0+255),b
  4823  002112                     
  4824                           ; BSR set to: 0
  4825  002112  51E1               	movf	_vfpfcnvrt$3604& (0+255),w,b
  4826  002114  11E2               	iorwf	(_vfpfcnvrt$3604+1)& (0+255),w,b
  4827  002116  B4D8               	btfsc	status,2,c
  4828  002118  EF90  F010         	goto	u10171
  4829  00211C  EF92  F010         	goto	u10170
  4830  002120                     u10171:
  4831  002120  EFB6  F010         	goto	l9076
  4832  002124                     u10170:
  4833  002124                     
  4834                           ; BSR set to: 0
  4835                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  4836  002124  0060  F32F  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  4837  00212A  0060  F333  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  4838  002130  006F FF7C  F0CD    	movff	indf2,??_vfpfcnvrt
  4839  002136  0E04               	movlw	4
  4840  002138  26DE               	addwf	postinc2,f,c
  4841  00213A  006F FF7C  F0CE    	movff	indf2,??_vfpfcnvrt+1
  4842  002140  0E00               	movlw	0
  4843  002142  22DD               	addwfc	postdec2,f,c
  4844  002144  0060  F337  FFD9   	movff	??_vfpfcnvrt,fsr2l
  4845  00214A  0060  F33B  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  4846  002150  006F FF78  F0E3    	movff	postinc2,vfpfcnvrt@f
  4847  002156  006F FF78  F0E4    	movff	postinc2,vfpfcnvrt@f+1
  4848  00215C  006F FF78  F0E5    	movff	postinc2,vfpfcnvrt@f+2
  4849  002162  006F FF78  F0E6    	movff	postinc2,vfpfcnvrt@f+3
  4850                           
  4851                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  4852  002168  EFD8  F010         	goto	l2283
  4853  00216C                     l9076:
  4854                           
  4855                           ; BSR set to: 0
  4856                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  4857  00216C  0060  F32F  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  4858  002172  0060  F333  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  4859  002178  006F FF7C  F0CD    	movff	indf2,??_vfpfcnvrt
  4860  00217E  0E04               	movlw	4
  4861  002180  26DE               	addwf	postinc2,f,c
  4862  002182  006F FF7C  F0CE    	movff	indf2,??_vfpfcnvrt+1
  4863  002188  0E00               	movlw	0
  4864  00218A  22DD               	addwfc	postdec2,f,c
  4865  00218C  0060  F337  FFD9   	movff	??_vfpfcnvrt,fsr2l
  4866  002192  0060  F33B  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  4867  002198  006F FF78  F0E3    	movff	postinc2,vfpfcnvrt@f
  4868  00219E  006F FF78  F0E4    	movff	postinc2,vfpfcnvrt@f+1
  4869  0021A4  006F FF78  F0E5    	movff	postinc2,vfpfcnvrt@f+2
  4870  0021AA  006F FF78  F0E6    	movff	postinc2,vfpfcnvrt@f+3
  4871  0021B0                     l2283:
  4872                           
  4873                           ; BSR set to: 0
  4874                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  4875  0021B0  0E02               	movlw	2
  4876  0021B2  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4877  0021B8  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4878  0021BE  26DE               	addwf	postinc2,f,c
  4879  0021C0  0E00               	movlw	0
  4880  0021C2  22DD               	addwfc	postdec2,f,c
  4881  0021C4                     
  4882                           ; BSR set to: 0
  4883                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 960:             
      +                          return efgtoa(fp, f, c);
  4884  0021C4  C0C7  F083         	movff	vfpfcnvrt@fp,efgtoa@fp
  4885  0021C8  C0C8  F084         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  4886  0021CC  C0E3  F085         	movff	vfpfcnvrt@f,efgtoa@f
  4887  0021D0  C0E4  F086         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  4888  0021D4  C0E5  F087         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  4889  0021D8  C0E6  F088         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  4890  0021DC  C0EA  F089         	movff	vfpfcnvrt@c,efgtoa@c
  4891  0021E0  EC73  F008         	call	_efgtoa	;wreg free
  4892  0021E4  C083  F0C7         	movff	?_efgtoa,?_vfpfcnvrt
  4893  0021E8  C084  F0C8         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  4894  0021EC  EFBE  F011         	goto	l2275
  4895  0021F0                     l9082:
  4896                           
  4897                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1204:         if 
      +                          (*fmt[0] == 'u') {
  4898  0021F0  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4899  0021F6  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4900  0021FC  006F FF7B FFF6     	movff	postinc2,tblptrl
  4901  002202  006F FF77 FFF7     	movff	postdec2,tblptrh
  4902  002208                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4903  002208  6AF8               	clrf	tblptru,c
  4904  00220A                     	endif
  4905  00220A                     	if	0	;tblptru may be non-zero
  4906  00220A                     	endif
  4907  00220A  0008               	tblrd		*
  4908  00220C  50F5               	movf	tablat,w,c
  4909  00220E  0A75               	xorlw	117
  4910  002210  A4D8               	btfss	status,2,c
  4911  002212  EF0D  F011         	goto	u10181
  4912  002216  EF0F  F011         	goto	u10180
  4913  00221A                     u10181:
  4914  00221A  EF5B  F011         	goto	l9090
  4915  00221E                     u10180:
  4916  00221E                     
  4917                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1206:            
      +                           ++*fmt;
  4918  00221E  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4919  002224  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4920  00222A  2ADE               	incf	postinc2,f,c
  4921  00222C  0E00               	movlw	0
  4922  00222E  22DD               	addwfc	postdec2,f,c
  4923                           
  4924                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1207:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  4925  002230  0060  F32F  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  4926  002236  0060  F333  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  4927  00223C  006F FF7C  F0CD    	movff	indf2,??_vfpfcnvrt
  4928  002242  0E02               	movlw	2
  4929  002244  26DE               	addwf	postinc2,f,c
  4930  002246  006F FF7C  F0CE    	movff	indf2,??_vfpfcnvrt+1
  4931  00224C  0E00               	movlw	0
  4932  00224E  22DD               	addwfc	postdec2,f,c
  4933  002250  0060  F337  FFD9   	movff	??_vfpfcnvrt,fsr2l
  4934  002256  0060  F33B  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  4935  00225C  006F FF78  F0CF    	movff	postinc2,??_vfpfcnvrt+2
  4936  002262  006F FF74  F0D0    	movff	postdec2,??_vfpfcnvrt+3
  4937  002268  C0CF  F0D9         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  4938  00226C  C0D0  F0DA         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4939  002270  0100               	movlb	0	; () banked
  4940  002272  6BDB               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  4941  002274  6BDC               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  4942  002276  6BDD               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  4943  002278  6BDE               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  4944  00227A  6BDF               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  4945  00227C  6BE0               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  4946  00227E                     
  4947                           ; BSR set to: 0
  4948                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1209:            
      +                           return utoa(fp, llu);
  4949  00227E  C0C7  F060         	movff	vfpfcnvrt@fp,utoa@fp
  4950  002282  C0C8  F061         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  4951  002286  C0D9  F062         	movff	vfpfcnvrt@llu,utoa@d
  4952  00228A  C0DA  F063         	movff	vfpfcnvrt@llu+1,utoa@d+1
  4953  00228E  C0DB  F064         	movff	vfpfcnvrt@llu+2,utoa@d+2
  4954  002292  C0DC  F065         	movff	vfpfcnvrt@llu+3,utoa@d+3
  4955  002296  C0DD  F066         	movff	vfpfcnvrt@llu+4,utoa@d+4
  4956  00229A  C0DE  F067         	movff	vfpfcnvrt@llu+5,utoa@d+5
  4957  00229E  C0DF  F068         	movff	vfpfcnvrt@llu+6,utoa@d+6
  4958  0022A2  C0E0  F069         	movff	vfpfcnvrt@llu+7,utoa@d+7
  4959  0022A6  EC4B  F01E         	call	_utoa	;wreg free
  4960  0022AA  C060  F0C7         	movff	?_utoa,?_vfpfcnvrt
  4961  0022AE  C061  F0C8         	movff	?_utoa+1,?_vfpfcnvrt+1
  4962  0022B2  EFBE  F011         	goto	l2275
  4963  0022B6                     l9090:
  4964                           
  4965                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  4966  0022B6  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4967  0022BC  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4968  0022C2  006F FF7B FFF6     	movff	postinc2,tblptrl
  4969  0022C8  006F FF77 FFF7     	movff	postdec2,tblptrh
  4970  0022CE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4971  0022CE  6AF8               	clrf	tblptru,c
  4972  0022D0                     	endif
  4973  0022D0                     	if	0	;tblptru may be non-zero
  4974  0022D0                     	endif
  4975  0022D0  0008               	tblrd		*
  4976  0022D2  50F5               	movf	tablat,w,c
  4977  0022D4  0A25               	xorlw	37
  4978  0022D6  A4D8               	btfss	status,2,c
  4979  0022D8  EF70  F011         	goto	u10191
  4980  0022DC  EF72  F011         	goto	u10190
  4981  0022E0                     u10191:
  4982  0022E0  EF8C  F011         	goto	l9100
  4983  0022E4                     u10190:
  4984  0022E4                     
  4985                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  4986  0022E4  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4987  0022EA  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4988  0022F0  2ADE               	incf	postinc2,f,c
  4989  0022F2  0E00               	movlw	0
  4990  0022F4  22DD               	addwfc	postdec2,f,c
  4991  0022F6                     
  4992                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  4993  0022F6  0E00               	movlw	0
  4994  0022F8  6E17               	movwf	(fputc@c+1)^0,c
  4995  0022FA  0E25               	movlw	37
  4996  0022FC  6E16               	movwf	fputc@c^0,c
  4997  0022FE  C0C7  F018         	movff	vfpfcnvrt@fp,fputc@fp
  4998  002302  C0C8  F019         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4999  002306  EC3C  F02B         	call	_fputc	;wreg free
  5000  00230A                     l9096:
  5001                           
  5002                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  5003  00230A  0E00               	movlw	0
  5004  00230C  0100               	movlb	0	; () banked
  5005  00230E  6FC8               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  5006  002310  0E01               	movlw	1
  5007  002312  6FC7               	movwf	?_vfpfcnvrt& (0+255),b
  5008  002314  EFBE  F011         	goto	l2275
  5009  002318                     l9100:
  5010                           
  5011                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  5012  002318  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  5013  00231E  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  5014  002324  2ADE               	incf	postinc2,f,c
  5015  002326  0E00               	movlw	0
  5016  002328  22DD               	addwfc	postdec2,f,c
  5017  00232A                     
  5018                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  5019  00232A  0E00               	movlw	0
  5020  00232C  0100               	movlb	0	; () banked
  5021  00232E  6FC8               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  5022  002330  0E00               	movlw	0
  5023  002332  6FC7               	movwf	?_vfpfcnvrt& (0+255),b
  5024  002334  EFBE  F011         	goto	l2275
  5025  002338                     l9106:
  5026                           
  5027                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  5028  002338  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  5029  00233E  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  5030  002344  006F FF7B FFF6     	movff	postinc2,tblptrl
  5031  00234A  006F FF77 FFF7     	movff	postdec2,tblptrh
  5032  002350                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5033  002350  6AF8               	clrf	tblptru,c
  5034  002352                     	endif
  5035  002352                     	if	0	;tblptru may be non-zero
  5036  002352                     	endif
  5037  002352  0008               	tblrd		*
  5038  002354  50F5               	movf	tablat,w,c
  5039  002356  6E16               	movwf	fputc@c^0,c
  5040  002358  6A17               	clrf	(fputc@c+1)^0,c
  5041  00235A  C0C7  F018         	movff	vfpfcnvrt@fp,fputc@fp
  5042  00235E  C0C8  F019         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5043  002362  EC3C  F02B         	call	_fputc	;wreg free
  5044  002366                     
  5045                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  5046  002366  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  5047  00236C  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  5048  002372  2ADE               	incf	postinc2,f,c
  5049  002374  0E00               	movlw	0
  5050  002376  22DD               	addwfc	postdec2,f,c
  5051  002378  EF85  F011         	goto	l9096
  5052  00237C                     l2275:
  5053  00237C  0012               	return		;funcret
  5054  00237E                     __end_of_vfpfcnvrt:
  5055                           	callstack 0
  5056                           
  5057 ;; *************** function _utoa *****************
  5058 ;; Defined at:
  5059 ;;		line 615 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  5060 ;; Parameters:    Size  Location     Type
  5061 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  5062 ;;		 -> NULL(0), 
  5063 ;;  d               8    2[BANK0 ] unsigned long long 
  5064 ;; Auto vars:     Size  Location     Type
  5065 ;;  n               8   14[BANK0 ] unsigned long long 
  5066 ;;  i               2   22[BANK0 ] int 
  5067 ;;  w               2   12[BANK0 ] int 
  5068 ;;  p               2   10[BANK0 ] int 
  5069 ;; Return value:  Size  Location     Type
  5070 ;;                  2    0[BANK0 ] int 
  5071 ;; Registers used:
  5072 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5073 ;; Tracked objects:
  5074 ;;		On entry : 0/0
  5075 ;;		On exit  : 0/0
  5076 ;;		Unchanged: 0/0
  5077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5078 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5079 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5080 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5081 ;;      Totals:         8      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5082 ;;Total ram usage:       32 bytes
  5083 ;; Hardware stack levels used: 1
  5084 ;; Hardware stack levels required when called: 13
  5085 ;; This function calls:
  5086 ;;		___lodiv
  5087 ;;		___lomod
  5088 ;;		_pad
  5089 ;; This function is called by:
  5090 ;;		_vfpfcnvrt
  5091 ;; This function uses a non-reentrant model
  5092 ;;
  5093                           
  5094                           	psect	text16
  5095  003C96                     __ptext16:
  5096                           	callstack 0
  5097  003C96                     _utoa:
  5098                           	callstack 12
  5099  003C96                     
  5100                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 615: static int u
      +                          toa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99
      +                          \common\doprnt.c: 616: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\dop
      +                          rnt.c: 617:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common
      +                          \doprnt.c: 618:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sourc
      +                          es\c99\common\doprnt.c: 621:     if (!(prec < 0)) {
  5101  003C96  BE3B               	btfsc	(_prec+1)^0,7,c
  5102  003C98  EF50  F01E         	goto	u9961
  5103  003C9C  EF52  F01E         	goto	u9960
  5104  003CA0                     u9961:
  5105  003CA0  EF53  F01E         	goto	l8974
  5106  003CA4                     u9960:
  5107  003CA4                     
  5108                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 622:         flag
      +                          s &= ~(1 << 1);
  5109  003CA4  923C               	bcf	_flags^0,1,c
  5110  003CA6                     l8974:
  5111                           
  5112                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 624:     p = (0 <
      +                           prec) ? prec : 1;
  5113  003CA6  BE3B               	btfsc	(_prec+1)^0,7,c
  5114  003CA8  EF60  F01E         	goto	u9970
  5115  003CAC  503B               	movf	(_prec+1)^0,w,c
  5116  003CAE  E106               	bnz	u9971
  5117  003CB0  043A               	decf	_prec^0,w,c
  5118  003CB2  B0D8               	btfsc	status,0,c
  5119  003CB4  EF5E  F01E         	goto	u9971
  5120  003CB8  EF60  F01E         	goto	u9970
  5121  003CBC                     u9971:
  5122  003CBC  EF67  F01E         	goto	l2256
  5123  003CC0                     u9970:
  5124  003CC0  0E00               	movlw	0
  5125  003CC2  0100               	movlb	0	; () banked
  5126  003CC4  6F6B               	movwf	(utoa@p+1)& (0+255),b
  5127  003CC6  0E01               	movlw	1
  5128  003CC8  6F6A               	movwf	utoa@p& (0+255),b
  5129  003CCA  EF6B  F01E         	goto	l2258
  5130  003CCE                     l2256:
  5131  003CCE  C03A  F06A         	movff	_prec,utoa@p
  5132  003CD2  C03B  F06B         	movff	_prec+1,utoa@p+1
  5133  003CD6                     l2258:
  5134                           
  5135                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 625:     w = widt
      +                          h;
  5136  003CD6  C12A  F06C         	movff	_width,utoa@w
  5137  003CDA  C12B  F06D         	movff	_width+1,utoa@w+1
  5138                           
  5139                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 628:     n = d;
  5140  003CDE  C062  F06E         	movff	utoa@d,utoa@n
  5141  003CE2  C063  F06F         	movff	utoa@d+1,utoa@n+1
  5142  003CE6  C064  F070         	movff	utoa@d+2,utoa@n+2
  5143  003CEA  C065  F071         	movff	utoa@d+3,utoa@n+3
  5144  003CEE  C066  F072         	movff	utoa@d+4,utoa@n+4
  5145  003CF2  C067  F073         	movff	utoa@d+5,utoa@n+5
  5146  003CF6  C068  F074         	movff	utoa@d+6,utoa@n+6
  5147  003CFA  C069  F075         	movff	utoa@d+7,utoa@n+7
  5148  003CFE                     
  5149                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 629:     i = size
      +                          of(dbuf) - 1;
  5150  003CFE  0E00               	movlw	0
  5151  003D00  0100               	movlb	0	; () banked
  5152  003D02  6F77               	movwf	(utoa@i+1)& (0+255),b
  5153  003D04  0E4F               	movlw	79
  5154  003D06  6F76               	movwf	utoa@i& (0+255),b
  5155  003D08                     
  5156                           ; BSR set to: 0
  5157                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 630:     dbuf[i] 
      +                          = '\0';
  5158  003D08  0E00               	movlw	0
  5159  003D0A  0101               	movlb	1	; () banked
  5160  003D0C  6F94               	movwf	(_dbuf+79)& (0+255),b
  5161                           
  5162                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5163  003D0E  EF00  F01F         	goto	l8992
  5164  003D12                     l8982:
  5165                           
  5166                           ; BSR set to: 0
  5167                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 632:         --i;
  5168  003D12  0776               	decf	utoa@i& (0+255),f,b
  5169  003D14  A0D8               	btfss	status,0,c
  5170  003D16  0777               	decf	(utoa@i+1)& (0+255),f,b
  5171  003D18                     
  5172                           ; BSR set to: 0
  5173                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 633:         dbuf
      +                          [i] = '0' + (n % 10);
  5174  003D18  0E45               	movlw	low _dbuf
  5175  003D1A  2576               	addwf	utoa@i& (0+255),w,b
  5176  003D1C  6ED9               	movwf	fsr2l,c
  5177  003D1E  0E01               	movlw	high _dbuf
  5178  003D20  2177               	addwfc	(utoa@i+1)& (0+255),w,b
  5179  003D22  6EDA               	movwf	fsr2h,c
  5180  003D24  C06E  F014         	movff	utoa@n,___lomod@dividend
  5181  003D28  C06F  F015         	movff	utoa@n+1,___lomod@dividend+1
  5182  003D2C  C070  F016         	movff	utoa@n+2,___lomod@dividend+2
  5183  003D30  C071  F017         	movff	utoa@n+3,___lomod@dividend+3
  5184  003D34  C072  F018         	movff	utoa@n+4,___lomod@dividend+4
  5185  003D38  C073  F019         	movff	utoa@n+5,___lomod@dividend+5
  5186  003D3C  C074  F01A         	movff	utoa@n+6,___lomod@dividend+6
  5187  003D40  C075  F01B         	movff	utoa@n+7,___lomod@dividend+7
  5188  003D44  0E0A               	movlw	10
  5189  003D46  6E1C               	movwf	___lomod@divisor^0,c
  5190  003D48  0E00               	movlw	0
  5191  003D4A  6E1D               	movwf	(___lomod@divisor+1)^0,c
  5192  003D4C  0E00               	movlw	0
  5193  003D4E  6E1E               	movwf	(___lomod@divisor+2)^0,c
  5194  003D50  0E00               	movlw	0
  5195  003D52  6E1F               	movwf	(___lomod@divisor+3)^0,c
  5196  003D54  0E00               	movlw	0
  5197  003D56  6E20               	movwf	(___lomod@divisor+4)^0,c
  5198  003D58  0E00               	movlw	0
  5199  003D5A  6E21               	movwf	(___lomod@divisor+5)^0,c
  5200  003D5C  0E00               	movlw	0
  5201  003D5E  6E22               	movwf	(___lomod@divisor+6)^0,c
  5202  003D60  0E00               	movlw	0
  5203  003D62  6E23               	movwf	(___lomod@divisor+7)^0,c
  5204  003D64  ECE6  F027         	call	___lomod	;wreg free
  5205  003D68  C014  F031         	movff	?___lomod,??_utoa
  5206  003D6C  C015  F032         	movff	?___lomod+1,??_utoa+1
  5207  003D70  C016  F033         	movff	?___lomod+2,??_utoa+2
  5208  003D74  C017  F034         	movff	?___lomod+3,??_utoa+3
  5209  003D78  C018  F035         	movff	?___lomod+4,??_utoa+4
  5210  003D7C  C019  F036         	movff	?___lomod+5,??_utoa+5
  5211  003D80  C01A  F037         	movff	?___lomod+6,??_utoa+6
  5212  003D84  C01B  F038         	movff	?___lomod+7,??_utoa+7
  5213  003D88  5031               	movf	??_utoa^0,w,c
  5214  003D8A  0F30               	addlw	48
  5215  003D8C  6EDF               	movwf	indf2,c
  5216  003D8E                     
  5217                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 634:         --p;
  5218  003D8E  0100               	movlb	0	; () banked
  5219  003D90  076A               	decf	utoa@p& (0+255),f,b
  5220  003D92  A0D8               	btfss	status,0,c
  5221  003D94  076B               	decf	(utoa@p+1)& (0+255),f,b
  5222  003D96                     
  5223                           ; BSR set to: 0
  5224                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 635:         --w;
  5225  003D96  076C               	decf	utoa@w& (0+255),f,b
  5226  003D98  A0D8               	btfss	status,0,c
  5227  003D9A  076D               	decf	(utoa@w+1)& (0+255),f,b
  5228  003D9C                     
  5229                           ; BSR set to: 0
  5230                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 636:         n = 
      +                          n / 10;
  5231  003D9C  C06E  F014         	movff	utoa@n,___lodiv@dividend
  5232  003DA0  C06F  F015         	movff	utoa@n+1,___lodiv@dividend+1
  5233  003DA4  C070  F016         	movff	utoa@n+2,___lodiv@dividend+2
  5234  003DA8  C071  F017         	movff	utoa@n+3,___lodiv@dividend+3
  5235  003DAC  C072  F018         	movff	utoa@n+4,___lodiv@dividend+4
  5236  003DB0  C073  F019         	movff	utoa@n+5,___lodiv@dividend+5
  5237  003DB4  C074  F01A         	movff	utoa@n+6,___lodiv@dividend+6
  5238  003DB8  C075  F01B         	movff	utoa@n+7,___lodiv@dividend+7
  5239  003DBC  0E0A               	movlw	10
  5240  003DBE  6E1C               	movwf	___lodiv@divisor^0,c
  5241  003DC0  0E00               	movlw	0
  5242  003DC2  6E1D               	movwf	(___lodiv@divisor+1)^0,c
  5243  003DC4  0E00               	movlw	0
  5244  003DC6  6E1E               	movwf	(___lodiv@divisor+2)^0,c
  5245  003DC8  0E00               	movlw	0
  5246  003DCA  6E1F               	movwf	(___lodiv@divisor+3)^0,c
  5247  003DCC  0E00               	movlw	0
  5248  003DCE  6E20               	movwf	(___lodiv@divisor+4)^0,c
  5249  003DD0  0E00               	movlw	0
  5250  003DD2  6E21               	movwf	(___lodiv@divisor+5)^0,c
  5251  003DD4  0E00               	movlw	0
  5252  003DD6  6E22               	movwf	(___lodiv@divisor+6)^0,c
  5253  003DD8  0E00               	movlw	0
  5254  003DDA  6E23               	movwf	(___lodiv@divisor+7)^0,c
  5255  003DDC  ECFD  F026         	call	___lodiv	;wreg free
  5256  003DE0  C014  F06E         	movff	?___lodiv,utoa@n
  5257  003DE4  C015  F06F         	movff	?___lodiv+1,utoa@n+1
  5258  003DE8  C016  F070         	movff	?___lodiv+2,utoa@n+2
  5259  003DEC  C017  F071         	movff	?___lodiv+3,utoa@n+3
  5260  003DF0  C018  F072         	movff	?___lodiv+4,utoa@n+4
  5261  003DF4  C019  F073         	movff	?___lodiv+5,utoa@n+5
  5262  003DF8  C01A  F074         	movff	?___lodiv+6,utoa@n+6
  5263  003DFC  C01B  F075         	movff	?___lodiv+7,utoa@n+7
  5264  003E00                     l8992:
  5265                           
  5266                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5267  003E00  0100               	movlb	0	; () banked
  5268  003E02  5176               	movf	utoa@i& (0+255),w,b
  5269  003E04  1177               	iorwf	(utoa@i+1)& (0+255),w,b
  5270  003E06  B4D8               	btfsc	status,2,c
  5271  003E08  EF08  F01F         	goto	u9981
  5272  003E0C  EF0A  F01F         	goto	u9980
  5273  003E10                     u9981:
  5274  003E10  EF3A  F01F         	goto	l9002
  5275  003E14                     u9980:
  5276  003E14                     
  5277                           ; BSR set to: 0
  5278  003E14  516E               	movf	utoa@n& (0+255),w,b
  5279  003E16  116F               	iorwf	(utoa@n+1)& (0+255),w,b
  5280  003E18  1170               	iorwf	(utoa@n+2)& (0+255),w,b
  5281  003E1A  1171               	iorwf	(utoa@n+3)& (0+255),w,b
  5282  003E1C  1172               	iorwf	(utoa@n+4)& (0+255),w,b
  5283  003E1E  1173               	iorwf	(utoa@n+5)& (0+255),w,b
  5284  003E20  1174               	iorwf	(utoa@n+6)& (0+255),w,b
  5285  003E22  1175               	iorwf	(utoa@n+7)& (0+255),w,b
  5286  003E24  A4D8               	btfss	status,2,c
  5287  003E26  EF17  F01F         	goto	u9991
  5288  003E2A  EF19  F01F         	goto	u9990
  5289  003E2E                     u9991:
  5290  003E2E  EF89  F01E         	goto	l8982
  5291  003E32                     u9990:
  5292  003E32                     
  5293                           ; BSR set to: 0
  5294  003E32  BF6B               	btfsc	(utoa@p+1)& (0+255),7,b
  5295  003E34  EF26  F01F         	goto	u10000
  5296  003E38  516B               	movf	(utoa@p+1)& (0+255),w,b
  5297  003E3A  E106               	bnz	u10001
  5298  003E3C  056A               	decf	utoa@p& (0+255),w,b
  5299  003E3E  B0D8               	btfsc	status,0,c
  5300  003E40  EF24  F01F         	goto	u10001
  5301  003E44  EF26  F01F         	goto	u10000
  5302  003E48                     u10001:
  5303  003E48  EF89  F01E         	goto	l8982
  5304  003E4C                     u10000:
  5305  003E4C                     
  5306                           ; BSR set to: 0
  5307  003E4C  BF6D               	btfsc	(utoa@w+1)& (0+255),7,b
  5308  003E4E  EF31  F01F         	goto	u10011
  5309  003E52  516D               	movf	(utoa@w+1)& (0+255),w,b
  5310  003E54  E108               	bnz	u10010
  5311  003E56  056C               	decf	utoa@w& (0+255),w,b
  5312  003E58  A0D8               	btfss	status,0,c
  5313  003E5A  EF31  F01F         	goto	u10011
  5314  003E5E  EF33  F01F         	goto	u10010
  5315  003E62                     u10011:
  5316  003E62  EF3A  F01F         	goto	l9002
  5317  003E66                     u10010:
  5318  003E66                     
  5319                           ; BSR set to: 0
  5320  003E66  B23C               	btfsc	_flags^0,1,c
  5321  003E68  EF38  F01F         	goto	u10021
  5322  003E6C  EF3A  F01F         	goto	u10020
  5323  003E70                     u10021:
  5324  003E70  EF89  F01E         	goto	l8982
  5325  003E74                     u10020:
  5326  003E74                     l9002:
  5327                           
  5328                           ; BSR set to: 0
  5329                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 640:     return p
      +                          ad(fp, &dbuf[i], w);
  5330  003E74  C060  F026         	movff	utoa@fp,pad@fp
  5331  003E78  C061  F027         	movff	utoa@fp+1,pad@fp+1
  5332  003E7C  0E45               	movlw	low _dbuf
  5333  003E7E  2576               	addwf	utoa@i& (0+255),w,b
  5334  003E80  6E28               	movwf	pad@buf^0,c
  5335  003E82  0E01               	movlw	high _dbuf
  5336  003E84  2177               	addwfc	(utoa@i+1)& (0+255),w,b
  5337  003E86  6E29               	movwf	(pad@buf+1)^0,c
  5338  003E88  C06C  F02A         	movff	utoa@w,pad@p
  5339  003E8C  C06D  F02B         	movff	utoa@w+1,pad@p+1
  5340  003E90  EC7B  F029         	call	_pad	;wreg free
  5341  003E94  C026  F060         	movff	?_pad,?_utoa
  5342  003E98  C027  F061         	movff	?_pad+1,?_utoa+1
  5343  003E9C  0012               	return		;funcret
  5344  003E9E                     __end_of_utoa:
  5345                           	callstack 0
  5346                           
  5347 ;; *************** function ___lomod *****************
  5348 ;; Defined at:
  5349 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lomod.c"
  5350 ;; Parameters:    Size  Location     Type
  5351 ;;  dividend        8   19[COMRAM] unsigned long long 
  5352 ;;  divisor         8   27[COMRAM] unsigned long long 
  5353 ;; Auto vars:     Size  Location     Type
  5354 ;;  counter         1   35[COMRAM] unsigned char 
  5355 ;; Return value:  Size  Location     Type
  5356 ;;                  8   19[COMRAM] unsigned long long 
  5357 ;; Registers used:
  5358 ;;		wreg, status,2, status,0
  5359 ;; Tracked objects:
  5360 ;;		On entry : 0/0
  5361 ;;		On exit  : 0/0
  5362 ;;		Unchanged: 0/0
  5363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5364 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5365 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5367 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5368 ;;Total ram usage:       17 bytes
  5369 ;; Hardware stack levels used: 1
  5370 ;; Hardware stack levels required when called: 8
  5371 ;; This function calls:
  5372 ;;		Nothing
  5373 ;; This function is called by:
  5374 ;;		_utoa
  5375 ;; This function uses a non-reentrant model
  5376 ;;
  5377                           
  5378                           	psect	text17
  5379  004FCC                     __ptext17:
  5380                           	callstack 0
  5381  004FCC                     ___lomod:
  5382                           	callstack 16
  5383  004FCC  501C               	movf	___lomod@divisor^0,w,c
  5384  004FCE  101D               	iorwf	(___lomod@divisor+1)^0,w,c
  5385  004FD0  101E               	iorwf	(___lomod@divisor+2)^0,w,c
  5386  004FD2  101F               	iorwf	(___lomod@divisor+3)^0,w,c
  5387  004FD4  1020               	iorwf	(___lomod@divisor+4)^0,w,c
  5388  004FD6  1021               	iorwf	(___lomod@divisor+5)^0,w,c
  5389  004FD8  1022               	iorwf	(___lomod@divisor+6)^0,w,c
  5390  004FDA  1023               	iorwf	(___lomod@divisor+7)^0,w,c
  5391  004FDC  B4D8               	btfsc	status,2,c
  5392  004FDE  EFF3  F027         	goto	u8971
  5393  004FE2  EFF5  F027         	goto	u8970
  5394  004FE6                     u8971:
  5395  004FE6  EF3D  F028         	goto	l1858
  5396  004FEA                     u8970:
  5397  004FEA  0E01               	movlw	1
  5398  004FEC  6E24               	movwf	___lomod@counter^0,c
  5399  004FEE  EF03  F028         	goto	l8500
  5400  004FF2                     l8498:
  5401  004FF2  90D8               	bcf	status,0,c
  5402  004FF4  361C               	rlcf	___lomod@divisor^0,f,c
  5403  004FF6  361D               	rlcf	(___lomod@divisor+1)^0,f,c
  5404  004FF8  361E               	rlcf	(___lomod@divisor+2)^0,f,c
  5405  004FFA  361F               	rlcf	(___lomod@divisor+3)^0,f,c
  5406  004FFC  3620               	rlcf	(___lomod@divisor+4)^0,f,c
  5407  004FFE  3621               	rlcf	(___lomod@divisor+5)^0,f,c
  5408  005000  3622               	rlcf	(___lomod@divisor+6)^0,f,c
  5409  005002  3623               	rlcf	(___lomod@divisor+7)^0,f,c
  5410  005004  2A24               	incf	___lomod@counter^0,f,c
  5411  005006                     l8500:
  5412  005006  AE23               	btfss	(___lomod@divisor+7)^0,7,c
  5413  005008  EF08  F028         	goto	u8981
  5414  00500C  EF0A  F028         	goto	u8980
  5415  005010                     u8981:
  5416  005010  EFF9  F027         	goto	l8498
  5417  005014                     u8980:
  5418  005014                     l8502:
  5419  005014  501C               	movf	___lomod@divisor^0,w,c
  5420  005016  5C14               	subwf	___lomod@dividend^0,w,c
  5421  005018  501D               	movf	(___lomod@divisor+1)^0,w,c
  5422  00501A  5815               	subwfb	(___lomod@dividend+1)^0,w,c
  5423  00501C  501E               	movf	(___lomod@divisor+2)^0,w,c
  5424  00501E  5816               	subwfb	(___lomod@dividend+2)^0,w,c
  5425  005020  501F               	movf	(___lomod@divisor+3)^0,w,c
  5426  005022  5817               	subwfb	(___lomod@dividend+3)^0,w,c
  5427  005024  5020               	movf	(___lomod@divisor+4)^0,w,c
  5428  005026  5818               	subwfb	(___lomod@dividend+4)^0,w,c
  5429  005028  5021               	movf	(___lomod@divisor+5)^0,w,c
  5430  00502A  5819               	subwfb	(___lomod@dividend+5)^0,w,c
  5431  00502C  5022               	movf	(___lomod@divisor+6)^0,w,c
  5432  00502E  581A               	subwfb	(___lomod@dividend+6)^0,w,c
  5433  005030  5023               	movf	(___lomod@divisor+7)^0,w,c
  5434  005032  581B               	subwfb	(___lomod@dividend+7)^0,w,c
  5435  005034  A0D8               	btfss	status,0,c
  5436  005036  EF1F  F028         	goto	u8991
  5437  00503A  EF21  F028         	goto	u8990
  5438  00503E                     u8991:
  5439  00503E  EF31  F028         	goto	l8506
  5440  005042                     u8990:
  5441  005042  501C               	movf	___lomod@divisor^0,w,c
  5442  005044  5E14               	subwf	___lomod@dividend^0,f,c
  5443  005046  501D               	movf	(___lomod@divisor+1)^0,w,c
  5444  005048  5A15               	subwfb	(___lomod@dividend+1)^0,f,c
  5445  00504A  501E               	movf	(___lomod@divisor+2)^0,w,c
  5446  00504C  5A16               	subwfb	(___lomod@dividend+2)^0,f,c
  5447  00504E  501F               	movf	(___lomod@divisor+3)^0,w,c
  5448  005050  5A17               	subwfb	(___lomod@dividend+3)^0,f,c
  5449  005052  5020               	movf	(___lomod@divisor+4)^0,w,c
  5450  005054  5A18               	subwfb	(___lomod@dividend+4)^0,f,c
  5451  005056  5021               	movf	(___lomod@divisor+5)^0,w,c
  5452  005058  5A19               	subwfb	(___lomod@dividend+5)^0,f,c
  5453  00505A  5022               	movf	(___lomod@divisor+6)^0,w,c
  5454  00505C  5A1A               	subwfb	(___lomod@dividend+6)^0,f,c
  5455  00505E  5023               	movf	(___lomod@divisor+7)^0,w,c
  5456  005060  5A1B               	subwfb	(___lomod@dividend+7)^0,f,c
  5457  005062                     l8506:
  5458  005062  90D8               	bcf	status,0,c
  5459  005064  3223               	rrcf	(___lomod@divisor+7)^0,f,c
  5460  005066  3222               	rrcf	(___lomod@divisor+6)^0,f,c
  5461  005068  3221               	rrcf	(___lomod@divisor+5)^0,f,c
  5462  00506A  3220               	rrcf	(___lomod@divisor+4)^0,f,c
  5463  00506C  321F               	rrcf	(___lomod@divisor+3)^0,f,c
  5464  00506E  321E               	rrcf	(___lomod@divisor+2)^0,f,c
  5465  005070  321D               	rrcf	(___lomod@divisor+1)^0,f,c
  5466  005072  321C               	rrcf	___lomod@divisor^0,f,c
  5467  005074  2E24               	decfsz	___lomod@counter^0,f,c
  5468  005076  EF0A  F028         	goto	l8502
  5469  00507A                     l1858:
  5470  00507A  C014  F014         	movff	___lomod@dividend,?___lomod
  5471  00507E  C015  F015         	movff	___lomod@dividend+1,?___lomod+1
  5472  005082  C016  F016         	movff	___lomod@dividend+2,?___lomod+2
  5473  005086  C017  F017         	movff	___lomod@dividend+3,?___lomod+3
  5474  00508A  C018  F018         	movff	___lomod@dividend+4,?___lomod+4
  5475  00508E  C019  F019         	movff	___lomod@dividend+5,?___lomod+5
  5476  005092  C01A  F01A         	movff	___lomod@dividend+6,?___lomod+6
  5477  005096  C01B  F01B         	movff	___lomod@dividend+7,?___lomod+7
  5478  00509A  0012               	return		;funcret
  5479  00509C                     __end_of___lomod:
  5480                           	callstack 0
  5481                           
  5482 ;; *************** function ___lodiv *****************
  5483 ;; Defined at:
  5484 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lodiv.c"
  5485 ;; Parameters:    Size  Location     Type
  5486 ;;  dividend        8   19[COMRAM] unsigned long long 
  5487 ;;  divisor         8   27[COMRAM] unsigned long long 
  5488 ;; Auto vars:     Size  Location     Type
  5489 ;;  quotient        8   35[COMRAM] unsigned long long 
  5490 ;;  counter         1   43[COMRAM] unsigned char 
  5491 ;; Return value:  Size  Location     Type
  5492 ;;                  8   19[COMRAM] unsigned long long 
  5493 ;; Registers used:
  5494 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5495 ;; Tracked objects:
  5496 ;;		On entry : 0/0
  5497 ;;		On exit  : 0/0
  5498 ;;		Unchanged: 0/0
  5499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5500 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5501 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5503 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5504 ;;Total ram usage:       25 bytes
  5505 ;; Hardware stack levels used: 1
  5506 ;; Hardware stack levels required when called: 8
  5507 ;; This function calls:
  5508 ;;		Nothing
  5509 ;; This function is called by:
  5510 ;;		_utoa
  5511 ;; This function uses a non-reentrant model
  5512 ;;
  5513                           
  5514                           	psect	text18
  5515  004DFA                     __ptext18:
  5516                           	callstack 0
  5517  004DFA                     ___lodiv:
  5518                           	callstack 16
  5519  004DFA  EE20  F024         	lfsr	2,___lodiv@quotient
  5520  004DFE  0E07               	movlw	7
  5521  004E00                     u8931:
  5522  004E00  6ADE               	clrf	postinc2,c
  5523  004E02  06E8               	decf	wreg,f,c
  5524  004E04  E2FD               	bc	u8931
  5525  004E06  501C               	movf	___lodiv@divisor^0,w,c
  5526  004E08  101D               	iorwf	(___lodiv@divisor+1)^0,w,c
  5527  004E0A  101E               	iorwf	(___lodiv@divisor+2)^0,w,c
  5528  004E0C  101F               	iorwf	(___lodiv@divisor+3)^0,w,c
  5529  004E0E  1020               	iorwf	(___lodiv@divisor+4)^0,w,c
  5530  004E10  1021               	iorwf	(___lodiv@divisor+5)^0,w,c
  5531  004E12  1022               	iorwf	(___lodiv@divisor+6)^0,w,c
  5532  004E14  1023               	iorwf	(___lodiv@divisor+7)^0,w,c
  5533  004E16  B4D8               	btfsc	status,2,c
  5534  004E18  EF10  F027         	goto	u8941
  5535  004E1C  EF12  F027         	goto	u8940
  5536  004E20                     u8941:
  5537  004E20  EF64  F027         	goto	l1848
  5538  004E24                     u8940:
  5539  004E24  0E01               	movlw	1
  5540  004E26  6E2C               	movwf	___lodiv@counter^0,c
  5541  004E28  EF20  F027         	goto	l8480
  5542  004E2C                     l8478:
  5543  004E2C  90D8               	bcf	status,0,c
  5544  004E2E  361C               	rlcf	___lodiv@divisor^0,f,c
  5545  004E30  361D               	rlcf	(___lodiv@divisor+1)^0,f,c
  5546  004E32  361E               	rlcf	(___lodiv@divisor+2)^0,f,c
  5547  004E34  361F               	rlcf	(___lodiv@divisor+3)^0,f,c
  5548  004E36  3620               	rlcf	(___lodiv@divisor+4)^0,f,c
  5549  004E38  3621               	rlcf	(___lodiv@divisor+5)^0,f,c
  5550  004E3A  3622               	rlcf	(___lodiv@divisor+6)^0,f,c
  5551  004E3C  3623               	rlcf	(___lodiv@divisor+7)^0,f,c
  5552  004E3E  2A2C               	incf	___lodiv@counter^0,f,c
  5553  004E40                     l8480:
  5554  004E40  AE23               	btfss	(___lodiv@divisor+7)^0,7,c
  5555  004E42  EF25  F027         	goto	u8951
  5556  004E46  EF27  F027         	goto	u8950
  5557  004E4A                     u8951:
  5558  004E4A  EF16  F027         	goto	l8478
  5559  004E4E                     u8950:
  5560  004E4E                     l8482:
  5561  004E4E  90D8               	bcf	status,0,c
  5562  004E50  3624               	rlcf	___lodiv@quotient^0,f,c
  5563  004E52  3625               	rlcf	(___lodiv@quotient+1)^0,f,c
  5564  004E54  3626               	rlcf	(___lodiv@quotient+2)^0,f,c
  5565  004E56  3627               	rlcf	(___lodiv@quotient+3)^0,f,c
  5566  004E58  3628               	rlcf	(___lodiv@quotient+4)^0,f,c
  5567  004E5A  3629               	rlcf	(___lodiv@quotient+5)^0,f,c
  5568  004E5C  362A               	rlcf	(___lodiv@quotient+6)^0,f,c
  5569  004E5E  362B               	rlcf	(___lodiv@quotient+7)^0,f,c
  5570  004E60  501C               	movf	___lodiv@divisor^0,w,c
  5571  004E62  5C14               	subwf	___lodiv@dividend^0,w,c
  5572  004E64  501D               	movf	(___lodiv@divisor+1)^0,w,c
  5573  004E66  5815               	subwfb	(___lodiv@dividend+1)^0,w,c
  5574  004E68  501E               	movf	(___lodiv@divisor+2)^0,w,c
  5575  004E6A  5816               	subwfb	(___lodiv@dividend+2)^0,w,c
  5576  004E6C  501F               	movf	(___lodiv@divisor+3)^0,w,c
  5577  004E6E  5817               	subwfb	(___lodiv@dividend+3)^0,w,c
  5578  004E70  5020               	movf	(___lodiv@divisor+4)^0,w,c
  5579  004E72  5818               	subwfb	(___lodiv@dividend+4)^0,w,c
  5580  004E74  5021               	movf	(___lodiv@divisor+5)^0,w,c
  5581  004E76  5819               	subwfb	(___lodiv@dividend+5)^0,w,c
  5582  004E78  5022               	movf	(___lodiv@divisor+6)^0,w,c
  5583  004E7A  581A               	subwfb	(___lodiv@dividend+6)^0,w,c
  5584  004E7C  5023               	movf	(___lodiv@divisor+7)^0,w,c
  5585  004E7E  581B               	subwfb	(___lodiv@dividend+7)^0,w,c
  5586  004E80  A0D8               	btfss	status,0,c
  5587  004E82  EF45  F027         	goto	u8961
  5588  004E86  EF47  F027         	goto	u8960
  5589  004E8A                     u8961:
  5590  004E8A  EF58  F027         	goto	l8490
  5591  004E8E                     u8960:
  5592  004E8E  501C               	movf	___lodiv@divisor^0,w,c
  5593  004E90  5E14               	subwf	___lodiv@dividend^0,f,c
  5594  004E92  501D               	movf	(___lodiv@divisor+1)^0,w,c
  5595  004E94  5A15               	subwfb	(___lodiv@dividend+1)^0,f,c
  5596  004E96  501E               	movf	(___lodiv@divisor+2)^0,w,c
  5597  004E98  5A16               	subwfb	(___lodiv@dividend+2)^0,f,c
  5598  004E9A  501F               	movf	(___lodiv@divisor+3)^0,w,c
  5599  004E9C  5A17               	subwfb	(___lodiv@dividend+3)^0,f,c
  5600  004E9E  5020               	movf	(___lodiv@divisor+4)^0,w,c
  5601  004EA0  5A18               	subwfb	(___lodiv@dividend+4)^0,f,c
  5602  004EA2  5021               	movf	(___lodiv@divisor+5)^0,w,c
  5603  004EA4  5A19               	subwfb	(___lodiv@dividend+5)^0,f,c
  5604  004EA6  5022               	movf	(___lodiv@divisor+6)^0,w,c
  5605  004EA8  5A1A               	subwfb	(___lodiv@dividend+6)^0,f,c
  5606  004EAA  5023               	movf	(___lodiv@divisor+7)^0,w,c
  5607  004EAC  5A1B               	subwfb	(___lodiv@dividend+7)^0,f,c
  5608  004EAE  8024               	bsf	___lodiv@quotient^0,0,c
  5609  004EB0                     l8490:
  5610  004EB0  90D8               	bcf	status,0,c
  5611  004EB2  3223               	rrcf	(___lodiv@divisor+7)^0,f,c
  5612  004EB4  3222               	rrcf	(___lodiv@divisor+6)^0,f,c
  5613  004EB6  3221               	rrcf	(___lodiv@divisor+5)^0,f,c
  5614  004EB8  3220               	rrcf	(___lodiv@divisor+4)^0,f,c
  5615  004EBA  321F               	rrcf	(___lodiv@divisor+3)^0,f,c
  5616  004EBC  321E               	rrcf	(___lodiv@divisor+2)^0,f,c
  5617  004EBE  321D               	rrcf	(___lodiv@divisor+1)^0,f,c
  5618  004EC0  321C               	rrcf	___lodiv@divisor^0,f,c
  5619  004EC2  2E2C               	decfsz	___lodiv@counter^0,f,c
  5620  004EC4  EF27  F027         	goto	l8482
  5621  004EC8                     l1848:
  5622  004EC8  C024  F014         	movff	___lodiv@quotient,?___lodiv
  5623  004ECC  C025  F015         	movff	___lodiv@quotient+1,?___lodiv+1
  5624  004ED0  C026  F016         	movff	___lodiv@quotient+2,?___lodiv+2
  5625  004ED4  C027  F017         	movff	___lodiv@quotient+3,?___lodiv+3
  5626  004ED8  C028  F018         	movff	___lodiv@quotient+4,?___lodiv+4
  5627  004EDC  C029  F019         	movff	___lodiv@quotient+5,?___lodiv+5
  5628  004EE0  C02A  F01A         	movff	___lodiv@quotient+6,?___lodiv+6
  5629  004EE4  C02B  F01B         	movff	___lodiv@quotient+7,?___lodiv+7
  5630  004EE8  0012               	return		;funcret
  5631  004EEA                     __end_of___lodiv:
  5632                           	callstack 0
  5633                           
  5634 ;; *************** function _strncmp *****************
  5635 ;; Defined at:
  5636 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strncmp.c"
  5637 ;; Parameters:    Size  Location     Type
  5638 ;;  _l              2   19[COMRAM] PTR const unsigned char 
  5639 ;;		 -> vfpfcnvrt@ct(3), 
  5640 ;;  _r              2   21[COMRAM] PTR const unsigned char 
  5641 ;;		 -> STR_24(3), 
  5642 ;;  n               2   23[COMRAM] unsigned int 
  5643 ;; Auto vars:     Size  Location     Type
  5644 ;;  r               2   28[COMRAM] PTR const unsigned char 
  5645 ;;		 -> STR_24(3), 
  5646 ;;  l               2   26[COMRAM] PTR const unsigned char 
  5647 ;;		 -> vfpfcnvrt@ct(3), 
  5648 ;; Return value:  Size  Location     Type
  5649 ;;                  2   19[COMRAM] int 
  5650 ;; Registers used:
  5651 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5652 ;; Tracked objects:
  5653 ;;		On entry : 0/0
  5654 ;;		On exit  : 0/0
  5655 ;;		Unchanged: 0/0
  5656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5657 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5658 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5659 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5660 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5661 ;;Total ram usage:       11 bytes
  5662 ;; Hardware stack levels used: 1
  5663 ;; Hardware stack levels required when called: 8
  5664 ;; This function calls:
  5665 ;;		Nothing
  5666 ;; This function is called by:
  5667 ;;		_vfpfcnvrt
  5668 ;; This function uses a non-reentrant model
  5669 ;;
  5670                           
  5671                           	psect	text19
  5672  004D06                     __ptext19:
  5673                           	callstack 0
  5674  004D06                     _strncmp:
  5675                           	callstack 17
  5676  004D06  C014  F01B         	movff	strncmp@_l,strncmp@l
  5677  004D0A  C015  F01C         	movff	strncmp@_l+1,strncmp@l+1
  5678  004D0E  C016  F01D         	movff	strncmp@_r,strncmp@r
  5679  004D12  C017  F01E         	movff	strncmp@_r+1,strncmp@r+1
  5680  004D16  0618               	decf	strncmp@n^0,f,c
  5681  004D18  A0D8               	btfss	status,0,c
  5682  004D1A  0619               	decf	(strncmp@n+1)^0,f,c
  5683  004D1C  2818               	incf	strncmp@n^0,w,c
  5684  004D1E  E106               	bnz	u10031
  5685  004D20  2819               	incf	(strncmp@n+1)^0,w,c
  5686  004D22  A4D8               	btfss	status,2,c
  5687  004D24  EF96  F026         	goto	u10031
  5688  004D28  EF98  F026         	goto	u10030
  5689  004D2C                     u10031:
  5690  004D2C  EFA5  F026         	goto	l9014
  5691  004D30                     u10030:
  5692  004D30  0E00               	movlw	0
  5693  004D32  6E15               	movwf	(?_strncmp+1)^0,c
  5694  004D34  0E00               	movlw	0
  5695  004D36  6E14               	movwf	?_strncmp^0,c
  5696  004D38  EFFC  F026         	goto	l2364
  5697  004D3C                     l9012:
  5698  004D3C  4A1B               	infsnz	strncmp@l^0,f,c
  5699  004D3E  2A1C               	incf	(strncmp@l+1)^0,f,c
  5700  004D40  4A1D               	infsnz	strncmp@r^0,f,c
  5701  004D42  2A1E               	incf	(strncmp@r+1)^0,f,c
  5702  004D44  0618               	decf	strncmp@n^0,f,c
  5703  004D46  A0D8               	btfss	status,0,c
  5704  004D48  0619               	decf	(strncmp@n+1)^0,f,c
  5705  004D4A                     l9014:
  5706  004D4A  0060  F06F  FFD9   	movff	strncmp@l,fsr2l
  5707  004D50  0060  F073  FFDA   	movff	strncmp@l+1,fsr2h
  5708  004D56  50DF               	movf	indf2,w,c
  5709  004D58  B4D8               	btfsc	status,2,c
  5710  004D5A  EFB1  F026         	goto	u10041
  5711  004D5E  EFB3  F026         	goto	u10040
  5712  004D62                     u10041:
  5713  004D62  EFE6  F026         	goto	l9022
  5714  004D66                     u10040:
  5715  004D66  0060  F077  FFF6   	movff	strncmp@r,tblptrl
  5716  004D6C  0060  F07B  FFF7   	movff	strncmp@r+1,tblptrh
  5717  004D72                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5718  004D72  6AF8               	clrf	tblptru,c
  5719  004D74                     	endif
  5720  004D74                     	if	0	;tblptru may be non-zero
  5721  004D74                     	endif
  5722  004D74  0008               	tblrd		*
  5723  004D76  50F5               	movf	tablat,w,c
  5724  004D78  0900               	iorlw	0
  5725  004D7A  B4D8               	btfsc	status,2,c
  5726  004D7C  EFC2  F026         	goto	u10051
  5727  004D80  EFC4  F026         	goto	u10050
  5728  004D84                     u10051:
  5729  004D84  EFE6  F026         	goto	l9022
  5730  004D88                     u10050:
  5731  004D88  5018               	movf	strncmp@n^0,w,c
  5732  004D8A  1019               	iorwf	(strncmp@n+1)^0,w,c
  5733  004D8C  B4D8               	btfsc	status,2,c
  5734  004D8E  EFCB  F026         	goto	u10061
  5735  004D92  EFCD  F026         	goto	u10060
  5736  004D96                     u10061:
  5737  004D96  EFE6  F026         	goto	l9022
  5738  004D9A                     u10060:
  5739  004D9A  0060  F06F  FFD9   	movff	strncmp@l,fsr2l
  5740  004DA0  0060  F073  FFDA   	movff	strncmp@l+1,fsr2h
  5741  004DA6  50DF               	movf	indf2,w,c
  5742  004DA8  6E1A               	movwf	??_strncmp^0,c
  5743  004DAA  0060  F077  FFF6   	movff	strncmp@r,tblptrl
  5744  004DB0  0060  F07B  FFF7   	movff	strncmp@r+1,tblptrh
  5745  004DB6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5746  004DB6  6AF8               	clrf	tblptru,c
  5747  004DB8                     	endif
  5748  004DB8                     	if	0	;tblptru may be non-zero
  5749  004DB8                     	endif
  5750  004DB8  0008               	tblrd		*
  5751  004DBA  50F5               	movf	tablat,w,c
  5752  004DBC  181A               	xorwf	??_strncmp^0,w,c
  5753  004DBE  B4D8               	btfsc	status,2,c
  5754  004DC0  EFE4  F026         	goto	u10071
  5755  004DC4  EFE6  F026         	goto	u10070
  5756  004DC8                     u10071:
  5757  004DC8  EF9E  F026         	goto	l9012
  5758  004DCC                     u10070:
  5759  004DCC                     l9022:
  5760  004DCC  0060  F06F  FFD9   	movff	strncmp@l,fsr2l
  5761  004DD2  0060  F073  FFDA   	movff	strncmp@l+1,fsr2h
  5762  004DD8  50DF               	movf	indf2,w,c
  5763  004DDA  6E1A               	movwf	??_strncmp^0,c
  5764  004DDC  0060  F077  FFF6   	movff	strncmp@r,tblptrl
  5765  004DE2  0060  F07B  FFF7   	movff	strncmp@r+1,tblptrh
  5766  004DE8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5767  004DE8  6AF8               	clrf	tblptru,c
  5768  004DEA                     	endif
  5769  004DEA                     	if	0	;tblptru may be non-zero
  5770  004DEA                     	endif
  5771  004DEA  0008               	tblrd		*
  5772  004DEC  50F5               	movf	tablat,w,c
  5773  004DEE  5C1A               	subwf	??_strncmp^0,w,c
  5774  004DF0  6E14               	movwf	?_strncmp^0,c
  5775  004DF2  6A15               	clrf	(?_strncmp+1)^0,c
  5776  004DF4  A0D8               	btfss	status,0,c
  5777  004DF6  0615               	decf	(?_strncmp+1)^0,f,c
  5778  004DF8                     l2364:
  5779  004DF8  0012               	return		;funcret
  5780  004DFA                     __end_of_strncmp:
  5781                           	callstack 0
  5782                           
  5783 ;; *************** function _efgtoa *****************
  5784 ;; Defined at:
  5785 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  5786 ;; Parameters:    Size  Location     Type
  5787 ;;  fp              2   35[BANK0 ] PTR struct _IO_FILE
  5788 ;;		 -> NULL(0), 
  5789 ;;  f               4   37[BANK0 ] PTR struct _IO_FILE
  5790 ;;  c               1   41[BANK0 ] unsigned char 
  5791 ;; Auto vars:     Size  Location     Type
  5792 ;;  u               4   99[BANK0 ] unsigned char 
  5793 ;;  g               4   91[BANK0 ] unsigned char 
  5794 ;;  l               4   85[BANK0 ] unsigned char 
  5795 ;;  h               4   81[BANK0 ] unsigned char 
  5796 ;;  ou              4   67[BANK0 ] unsigned char 
  5797 ;;  n               2   97[BANK0 ] int 
  5798 ;;  e               2   95[BANK0 ] int 
  5799 ;;  i               2   89[BANK0 ] int 
  5800 ;;  w               2   77[BANK0 ] int 
  5801 ;;  p               2   75[BANK0 ] int 
  5802 ;;  sign            2   73[BANK0 ] int 
  5803 ;;  d               2   71[BANK0 ] int 
  5804 ;;  m               2   65[BANK0 ] int 
  5805 ;;  ne              2   63[BANK0 ] int 
  5806 ;;  pp              2   61[BANK0 ] int 
  5807 ;;  t               2   59[BANK0 ] int 
  5808 ;;  mode            1   80[BANK0 ] unsigned char 
  5809 ;;  nmode           1   79[BANK0 ] unsigned char 
  5810 ;; Return value:  Size  Location     Type
  5811 ;;                  2   35[BANK0 ] int 
  5812 ;; Registers used:
  5813 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5814 ;; Tracked objects:
  5815 ;;		On entry : 0/0
  5816 ;;		On exit  : 0/0
  5817 ;;		Unchanged: 0/0
  5818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5819 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5820 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5821 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5822 ;;      Totals:         0      68       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5823 ;;Total ram usage:       68 bytes
  5824 ;; Hardware stack levels used: 1
  5825 ;; Hardware stack levels required when called: 13
  5826 ;; This function calls:
  5827 ;;		___awdiv
  5828 ;;		___awmod
  5829 ;;		___fladd
  5830 ;;		___fldiv
  5831 ;;		___fleq
  5832 ;;		___flge
  5833 ;;		___flmul
  5834 ;;		___flneg
  5835 ;;		___flsub
  5836 ;;		___fltol
  5837 ;;		___fpclassifyf
  5838 ;;		_floorf
  5839 ;;		_isupper
  5840 ;;		_pad
  5841 ;;		_strcpy
  5842 ;;		_tolower
  5843 ;; This function is called by:
  5844 ;;		_vfpfcnvrt
  5845 ;; This function uses a non-reentrant model
  5846 ;;
  5847                           
  5848                           	psect	text20
  5849  0010E6                     __ptext20:
  5850                           	callstack 0
  5851  0010E6                     _efgtoa:
  5852                           	callstack 12
  5853  0010E6                     
  5854                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.32\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  5855  0010E6  0E00               	movlw	0
  5856  0010E8  0100               	movlb	0	; () banked
  5857  0010EA  6FAA               	movwf	(efgtoa@sign+1)& (0+255),b
  5858  0010EC  0E00               	movlw	0
  5859  0010EE  6FA9               	movwf	efgtoa@sign& (0+255),b
  5860  0010F0                     
  5861                           ; BSR set to: 0
  5862                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 340:     g = f;
  5863  0010F0  C085  F0BB         	movff	efgtoa@f,efgtoa@g
  5864  0010F4  C086  F0BC         	movff	efgtoa@f+1,efgtoa@g+1
  5865  0010F8  C087  F0BD         	movff	efgtoa@f+2,efgtoa@g+2
  5866  0010FC  C088  F0BE         	movff	efgtoa@f+3,efgtoa@g+3
  5867  001100                     
  5868                           ; BSR set to: 0
  5869                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  5870  001100  BFBE               	btfsc	(efgtoa@g+3)& (0+255),7,b
  5871  001102  EF87  F008         	goto	u9420
  5872  001106  EF85  F008         	goto	u9421
  5873  00110A                     u9421:
  5874  00110A  EF9D  F008         	goto	l8672
  5875  00110E                     u9420:
  5876  00110E                     
  5877                           ; BSR set to: 0
  5878                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  5879  00110E  0E00               	movlw	0
  5880  001110  6FAA               	movwf	(efgtoa@sign+1)& (0+255),b
  5881  001112  0E01               	movlw	1
  5882  001114  6FA9               	movwf	efgtoa@sign& (0+255),b
  5883  001116                     
  5884                           ; BSR set to: 0
  5885                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  5886  001116  C0BB  F014         	movff	efgtoa@g,___flneg@f1
  5887  00111A  C0BC  F015         	movff	efgtoa@g+1,___flneg@f1+1
  5888  00111E  C0BD  F016         	movff	efgtoa@g+2,___flneg@f1+2
  5889  001122  C0BE  F017         	movff	efgtoa@g+3,___flneg@f1+3
  5890  001126  EC2D  F02F         	call	___flneg	;wreg free
  5891  00112A  C014  F0BB         	movff	?___flneg,efgtoa@g
  5892  00112E  C015  F0BC         	movff	?___flneg+1,efgtoa@g+1
  5893  001132  C016  F0BD         	movff	?___flneg+2,efgtoa@g+2
  5894  001136  C017  F0BE         	movff	?___flneg+3,efgtoa@g+3
  5895  00113A                     l8672:
  5896                           
  5897                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  5898  00113A  0E00               	movlw	0
  5899  00113C  0100               	movlb	0	; () banked
  5900  00113E  6FC2               	movwf	(efgtoa@n+1)& (0+255),b
  5901  001140  0E00               	movlw	0
  5902  001142  6FC1               	movwf	efgtoa@n& (0+255),b
  5903  001144                     
  5904                           ; BSR set to: 0
  5905                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  5906  001144  C12A  F0AD         	movff	_width,efgtoa@w
  5907  001148  C12B  F0AE         	movff	_width+1,efgtoa@w+1
  5908  00114C                     
  5909                           ; BSR set to: 0
  5910                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  5911  00114C  51A9               	movf	efgtoa@sign& (0+255),w,b
  5912  00114E  11AA               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  5913  001150  A4D8               	btfss	status,2,c
  5914  001152  EFAD  F008         	goto	u9431
  5915  001156  EFAF  F008         	goto	u9430
  5916  00115A                     u9431:
  5917  00115A  EFB6  F008         	goto	l8680
  5918  00115E                     u9430:
  5919  00115E                     
  5920                           ; BSR set to: 0
  5921  00115E  A43C               	btfss	_flags^0,2,c
  5922  001160  EFB4  F008         	goto	u9441
  5923  001164  EFB6  F008         	goto	u9440
  5924  001168                     u9441:
  5925  001168  EFD0  F008         	goto	l8692
  5926  00116C                     u9440:
  5927  00116C                     l8680:
  5928                           
  5929                           ; BSR set to: 0
  5930                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  5931  00116C  51A9               	movf	efgtoa@sign& (0+255),w,b
  5932  00116E  11AA               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  5933  001170  A4D8               	btfss	status,2,c
  5934  001172  EFBD  F008         	goto	u9451
  5935  001176  EFBF  F008         	goto	u9450
  5936  00117A                     u9451:
  5937  00117A  EFC5  F008         	goto	l8684
  5938  00117E                     u9450:
  5939  00117E                     
  5940                           ; BSR set to: 0
  5941  00117E  0E00               	movlw	0
  5942  001180  6F90               	movwf	(_efgtoa$3568+1)& (0+255),b
  5943  001182  0E2B               	movlw	43
  5944  001184  6F8F               	movwf	_efgtoa$3568& (0+255),b
  5945  001186  EFC9  F008         	goto	l8686
  5946  00118A                     l8684:
  5947                           
  5948                           ; BSR set to: 0
  5949  00118A  0E00               	movlw	0
  5950  00118C  6F90               	movwf	(_efgtoa$3568+1)& (0+255),b
  5951  00118E  0E2D               	movlw	45
  5952  001190  6F8F               	movwf	_efgtoa$3568& (0+255),b
  5953  001192                     l8686:
  5954                           
  5955                           ; BSR set to: 0
  5956  001192  C08F  F145         	movff	_efgtoa$3568,_dbuf
  5957  001196                     
  5958                           ; BSR set to: 0
  5959                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 351:         ++n;
  5960  001196  4BC1               	infsnz	efgtoa@n& (0+255),f,b
  5961  001198  2BC2               	incf	(efgtoa@n+1)& (0+255),f,b
  5962  00119A                     
  5963                           ; BSR set to: 0
  5964                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 352:         --w;
  5965  00119A  07AD               	decf	efgtoa@w& (0+255),f,b
  5966  00119C  A0D8               	btfss	status,0,c
  5967  00119E  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  5968  0011A0                     l8692:
  5969                           
  5970                           ; BSR set to: 0
  5971                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 357:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  5972  0011A0  C0BB  F014         	movff	efgtoa@g,___fpclassifyf@x
  5973  0011A4  C0BC  F015         	movff	efgtoa@g+1,___fpclassifyf@x+1
  5974  0011A8  C0BD  F016         	movff	efgtoa@g+2,___fpclassifyf@x+2
  5975  0011AC  C0BE  F017         	movff	efgtoa@g+3,___fpclassifyf@x+3
  5976  0011B0  EC04  F026         	call	___fpclassifyf	;wreg free
  5977  0011B4  0414               	decf	?___fpclassifyf^0,w,c
  5978  0011B6  1015               	iorwf	(?___fpclassifyf+1)^0,w,c
  5979  0011B8  A4D8               	btfss	status,2,c
  5980  0011BA  EFE1  F008         	goto	u9461
  5981  0011BE  EFE3  F008         	goto	u9460
  5982  0011C2                     u9461:
  5983  0011C2  EF3A  F009         	goto	l8710
  5984  0011C6                     u9460:
  5985  0011C6  0EBF               	movlw	191
  5986  0011C8  0100               	movlb	0	; () banked
  5987  0011CA  6F8A               	movwf	??_efgtoa& (0+255),b
  5988  0011CC  0EFF               	movlw	255
  5989  0011CE  6F8B               	movwf	(??_efgtoa+1)& (0+255),b
  5990  0011D0  5189               	movf	efgtoa@c& (0+255),w,b
  5991  0011D2  6F8C               	movwf	(??_efgtoa+2)& (0+255),b
  5992  0011D4  6B8D               	clrf	(??_efgtoa+3)& (0+255),b
  5993  0011D6  518A               	movf	??_efgtoa& (0+255),w,b
  5994  0011D8  278C               	addwf	(??_efgtoa+2)& (0+255),f,b
  5995  0011DA  518B               	movf	(??_efgtoa+1)& (0+255),w,b
  5996  0011DC  238D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  5997  0011DE  518D               	movf	(??_efgtoa+3)& (0+255),w,b
  5998  0011E0  E10A               	bnz	u9470
  5999  0011E2  0E1A               	movlw	26
  6000  0011E4  5D8C               	subwf	(??_efgtoa+2)& (0+255),w,b
  6001  0011E6  A0D8               	btfss	status,0,c
  6002  0011E8  EFF8  F008         	goto	u9471
  6003  0011EC  EFFB  F008         	goto	u9470
  6004  0011F0                     u9471:
  6005  0011F0  0E01               	movlw	1
  6006  0011F2  EFFC  F008         	goto	u9480
  6007  0011F6                     u9470:
  6008  0011F6  0E00               	movlw	0
  6009  0011F8                     u9480:
  6010  0011F8  6F91               	movwf	_efgtoa$3569& (0+255),b
  6011  0011FA  6B92               	clrf	(_efgtoa$3569+1)& (0+255),b
  6012  0011FC                     
  6013                           ; BSR set to: 0
  6014  0011FC  5191               	movf	_efgtoa$3569& (0+255),w,b
  6015  0011FE  1192               	iorwf	(_efgtoa$3569+1)& (0+255),w,b
  6016  001200  B4D8               	btfsc	status,2,c
  6017  001202  EF05  F009         	goto	u9491
  6018  001206  EF07  F009         	goto	u9490
  6019  00120A                     u9491:
  6020  00120A  EF15  F009         	goto	l8702
  6021  00120E                     u9490:
  6022  00120E                     
  6023                           ; BSR set to: 0
  6024                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  6025  00120E  0E45               	movlw	low _dbuf
  6026  001210  25C1               	addwf	efgtoa@n& (0+255),w,b
  6027  001212  6E14               	movwf	strcpy@dest^0,c
  6028  001214  0E01               	movlw	high _dbuf
  6029  001216  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6030  001218  6E15               	movwf	(strcpy@dest+1)^0,c
  6031  00121A  0ED2               	movlw	low STR_14
  6032  00121C  6E16               	movwf	strcpy@src^0,c
  6033  00121E  0E10               	movlw	high STR_14
  6034  001220  6E17               	movwf	(strcpy@src+1)^0,c
  6035  001222  EC8C  F02C         	call	_strcpy	;wreg free
  6036                           
  6037                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  6038  001226  EF21  F009         	goto	l8704
  6039  00122A                     l8702:
  6040                           
  6041                           ; BSR set to: 0
  6042                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  6043  00122A  0E45               	movlw	low _dbuf
  6044  00122C  25C1               	addwf	efgtoa@n& (0+255),w,b
  6045  00122E  6E14               	movwf	strcpy@dest^0,c
  6046  001230  0E01               	movlw	high _dbuf
  6047  001232  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6048  001234  6E15               	movwf	(strcpy@dest+1)^0,c
  6049  001236  0EDA               	movlw	low STR_15
  6050  001238  6E16               	movwf	strcpy@src^0,c
  6051  00123A  0E10               	movlw	high STR_15
  6052  00123C  6E17               	movwf	(strcpy@src+1)^0,c
  6053  00123E  EC8C  F02C         	call	_strcpy	;wreg free
  6054  001242                     l8704:
  6055                           
  6056                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  6057  001242  0100               	movlb	0	; () banked
  6058  001244  0EFD               	movlw	253
  6059  001246  27AD               	addwf	efgtoa@w& (0+255),f,b
  6060  001248  0EFF               	movlw	255
  6061  00124A  23AE               	addwfc	(efgtoa@w+1)& (0+255),f,b
  6062  00124C                     
  6063                           ; BSR set to: 0
  6064                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  6065  00124C  C083  F026         	movff	efgtoa@fp,pad@fp
  6066  001250  C084  F027         	movff	efgtoa@fp+1,pad@fp+1
  6067  001254  0E45               	movlw	low _dbuf
  6068  001256  6E28               	movwf	pad@buf^0,c
  6069  001258  0E01               	movlw	high _dbuf
  6070  00125A  6E29               	movwf	(pad@buf+1)^0,c
  6071  00125C  C0AD  F02A         	movff	efgtoa@w,pad@p
  6072  001260  C0AE  F02B         	movff	efgtoa@w+1,pad@p+1
  6073  001264  EC7B  F029         	call	_pad	;wreg free
  6074  001268  C026  F083         	movff	?_pad,?_efgtoa
  6075  00126C  C027  F084         	movff	?_pad+1,?_efgtoa+1
  6076  001270  EFC9  F00E         	goto	l2176
  6077  001274                     l8710:
  6078                           
  6079                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 366:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  6080  001274  C0BB  F014         	movff	efgtoa@g,___fpclassifyf@x
  6081  001278  C0BC  F015         	movff	efgtoa@g+1,___fpclassifyf@x+1
  6082  00127C  C0BD  F016         	movff	efgtoa@g+2,___fpclassifyf@x+2
  6083  001280  C0BE  F017         	movff	efgtoa@g+3,___fpclassifyf@x+3
  6084  001284  EC04  F026         	call	___fpclassifyf	;wreg free
  6085  001288  5014               	movf	?___fpclassifyf^0,w,c
  6086  00128A  1015               	iorwf	(?___fpclassifyf+1)^0,w,c
  6087  00128C  A4D8               	btfss	status,2,c
  6088  00128E  EF4B  F009         	goto	u9501
  6089  001292  EF4D  F009         	goto	u9500
  6090  001296                     u9501:
  6091  001296  EFA4  F009         	goto	l8728
  6092  00129A                     u9500:
  6093  00129A  0EBF               	movlw	191
  6094  00129C  0100               	movlb	0	; () banked
  6095  00129E  6F8A               	movwf	??_efgtoa& (0+255),b
  6096  0012A0  0EFF               	movlw	255
  6097  0012A2  6F8B               	movwf	(??_efgtoa+1)& (0+255),b
  6098  0012A4  5189               	movf	efgtoa@c& (0+255),w,b
  6099  0012A6  6F8C               	movwf	(??_efgtoa+2)& (0+255),b
  6100  0012A8  6B8D               	clrf	(??_efgtoa+3)& (0+255),b
  6101  0012AA  518A               	movf	??_efgtoa& (0+255),w,b
  6102  0012AC  278C               	addwf	(??_efgtoa+2)& (0+255),f,b
  6103  0012AE  518B               	movf	(??_efgtoa+1)& (0+255),w,b
  6104  0012B0  238D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  6105  0012B2  518D               	movf	(??_efgtoa+3)& (0+255),w,b
  6106  0012B4  E10A               	bnz	u9510
  6107  0012B6  0E1A               	movlw	26
  6108  0012B8  5D8C               	subwf	(??_efgtoa+2)& (0+255),w,b
  6109  0012BA  A0D8               	btfss	status,0,c
  6110  0012BC  EF62  F009         	goto	u9511
  6111  0012C0  EF65  F009         	goto	u9510
  6112  0012C4                     u9511:
  6113  0012C4  0E01               	movlw	1
  6114  0012C6  EF66  F009         	goto	u9520
  6115  0012CA                     u9510:
  6116  0012CA  0E00               	movlw	0
  6117  0012CC                     u9520:
  6118  0012CC  6F93               	movwf	_efgtoa$3573& (0+255),b
  6119  0012CE  6B94               	clrf	(_efgtoa$3573+1)& (0+255),b
  6120  0012D0                     
  6121                           ; BSR set to: 0
  6122  0012D0  5193               	movf	_efgtoa$3573& (0+255),w,b
  6123  0012D2  1194               	iorwf	(_efgtoa$3573+1)& (0+255),w,b
  6124  0012D4  B4D8               	btfsc	status,2,c
  6125  0012D6  EF6F  F009         	goto	u9531
  6126  0012DA  EF71  F009         	goto	u9530
  6127  0012DE                     u9531:
  6128  0012DE  EF7F  F009         	goto	l8720
  6129  0012E2                     u9530:
  6130  0012E2                     
  6131                           ; BSR set to: 0
  6132                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  6133  0012E2  0E45               	movlw	low _dbuf
  6134  0012E4  25C1               	addwf	efgtoa@n& (0+255),w,b
  6135  0012E6  6E14               	movwf	strcpy@dest^0,c
  6136  0012E8  0E01               	movlw	high _dbuf
  6137  0012EA  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6138  0012EC  6E15               	movwf	(strcpy@dest+1)^0,c
  6139  0012EE  0ED6               	movlw	low STR_18
  6140  0012F0  6E16               	movwf	strcpy@src^0,c
  6141  0012F2  0E10               	movlw	high STR_18
  6142  0012F4  6E17               	movwf	(strcpy@src+1)^0,c
  6143  0012F6  EC8C  F02C         	call	_strcpy	;wreg free
  6144                           
  6145                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  6146  0012FA  EF8B  F009         	goto	l8722
  6147  0012FE                     l8720:
  6148                           
  6149                           ; BSR set to: 0
  6150                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  6151  0012FE  0E45               	movlw	low _dbuf
  6152  001300  25C1               	addwf	efgtoa@n& (0+255),w,b
  6153  001302  6E14               	movwf	strcpy@dest^0,c
  6154  001304  0E01               	movlw	high _dbuf
  6155  001306  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6156  001308  6E15               	movwf	(strcpy@dest+1)^0,c
  6157  00130A  0EDE               	movlw	low STR_19
  6158  00130C  6E16               	movwf	strcpy@src^0,c
  6159  00130E  0E10               	movlw	high STR_19
  6160  001310  6E17               	movwf	(strcpy@src+1)^0,c
  6161  001312  EC8C  F02C         	call	_strcpy	;wreg free
  6162  001316                     l8722:
  6163                           
  6164                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 371:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  6165  001316  0100               	movlb	0	; () banked
  6166  001318  0EFD               	movlw	253
  6167  00131A  27AD               	addwf	efgtoa@w& (0+255),f,b
  6168  00131C  0EFF               	movlw	255
  6169  00131E  23AE               	addwfc	(efgtoa@w+1)& (0+255),f,b
  6170  001320                     
  6171                           ; BSR set to: 0
  6172                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 372:         retu
      +                          rn pad(fp, &dbuf[0], w);
  6173  001320  C083  F026         	movff	efgtoa@fp,pad@fp
  6174  001324  C084  F027         	movff	efgtoa@fp+1,pad@fp+1
  6175  001328  0E45               	movlw	low _dbuf
  6176  00132A  6E28               	movwf	pad@buf^0,c
  6177  00132C  0E01               	movlw	high _dbuf
  6178  00132E  6E29               	movwf	(pad@buf+1)^0,c
  6179  001330  C0AD  F02A         	movff	efgtoa@w,pad@p
  6180  001334  C0AE  F02B         	movff	efgtoa@w+1,pad@p+1
  6181  001338  EC7B  F029         	call	_pad	;wreg free
  6182  00133C  C026  F083         	movff	?_pad,?_efgtoa
  6183  001340  C027  F084         	movff	?_pad+1,?_efgtoa+1
  6184  001344  EFC9  F00E         	goto	l2176
  6185  001348                     l8728:
  6186                           
  6187                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  6188  001348  0E00               	movlw	0
  6189  00134A  0100               	movlb	0	; () banked
  6190  00134C  6FC3               	movwf	efgtoa@u& (0+255),b
  6191  00134E  0E00               	movlw	0
  6192  001350  6FC4               	movwf	(efgtoa@u+1)& (0+255),b
  6193  001352  0E80               	movlw	128
  6194  001354  6FC5               	movwf	(efgtoa@u+2)& (0+255),b
  6195  001356  0E3F               	movlw	63
  6196  001358  6FC6               	movwf	(efgtoa@u+3)& (0+255),b
  6197                           
  6198                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  6199  00135A  0E00               	movlw	0
  6200  00135C  6FC0               	movwf	(efgtoa@e+1)& (0+255),b
  6201  00135E  0E00               	movlw	0
  6202  001360  6FBF               	movwf	efgtoa@e& (0+255),b
  6203  001362                     
  6204                           ; BSR set to: 0
  6205                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  6206  001362  C0BB  F014         	movff	efgtoa@g,___fleq@ff1
  6207  001366  C0BC  F015         	movff	efgtoa@g+1,___fleq@ff1+1
  6208  00136A  C0BD  F016         	movff	efgtoa@g+2,___fleq@ff1+2
  6209  00136E  C0BE  F017         	movff	efgtoa@g+3,___fleq@ff1+3
  6210  001372  0E00               	movlw	0
  6211  001374  6E18               	movwf	___fleq@ff2^0,c
  6212  001376  0E00               	movlw	0
  6213  001378  6E19               	movwf	(___fleq@ff2+1)^0,c
  6214  00137A  0E00               	movlw	0
  6215  00137C  6E1A               	movwf	(___fleq@ff2+2)^0,c
  6216  00137E  0E00               	movlw	0
  6217  001380  6E1B               	movwf	(___fleq@ff2+3)^0,c
  6218  001382  EC94  F02A         	call	___fleq	;wreg free
  6219  001386  B0D8               	btfsc	status,0,c
  6220  001388  EFC8  F009         	goto	u9541
  6221  00138C  EFCA  F009         	goto	u9540
  6222  001390                     u9541:
  6223  001390  EF4F  F00A         	goto	l8746
  6224  001394                     u9540:
  6225  001394  EFE9  F009         	goto	l8738
  6226  001398                     l8734:
  6227                           
  6228                           ; BSR set to: 0
  6229                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  6230  001398  C0C3  F02A         	movff	efgtoa@u,___flmul@b
  6231  00139C  C0C4  F02B         	movff	efgtoa@u+1,___flmul@b+1
  6232  0013A0  C0C5  F02C         	movff	efgtoa@u+2,___flmul@b+2
  6233  0013A4  C0C6  F02D         	movff	efgtoa@u+3,___flmul@b+3
  6234  0013A8  0E00               	movlw	0
  6235  0013AA  6E2E               	movwf	___flmul@a^0,c
  6236  0013AC  0E00               	movlw	0
  6237  0013AE  6E2F               	movwf	(___flmul@a+1)^0,c
  6238  0013B0  0E20               	movlw	32
  6239  0013B2  6E30               	movwf	(___flmul@a+2)^0,c
  6240  0013B4  0E41               	movlw	65
  6241  0013B6  6E31               	movwf	(___flmul@a+3)^0,c
  6242  0013B8  EC20  F014         	call	___flmul	;wreg free
  6243  0013BC  C02A  F0C3         	movff	?___flmul,efgtoa@u
  6244  0013C0  C02B  F0C4         	movff	?___flmul+1,efgtoa@u+1
  6245  0013C4  C02C  F0C5         	movff	?___flmul+2,efgtoa@u+2
  6246  0013C8  C02D  F0C6         	movff	?___flmul+3,efgtoa@u+3
  6247  0013CC                     
  6248                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  6249  0013CC  0100               	movlb	0	; () banked
  6250  0013CE  4BBF               	infsnz	efgtoa@e& (0+255),f,b
  6251  0013D0  2BC0               	incf	(efgtoa@e+1)& (0+255),f,b
  6252  0013D2                     l8738:
  6253                           
  6254                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  6255  0013D2  C0BB  F06D         	movff	efgtoa@g,___flge@ff1
  6256  0013D6  C0BC  F06E         	movff	efgtoa@g+1,___flge@ff1+1
  6257  0013DA  C0BD  F06F         	movff	efgtoa@g+2,___flge@ff1+2
  6258  0013DE  C0BE  F070         	movff	efgtoa@g+3,___flge@ff1+3
  6259  0013E2  0E00               	movlw	0
  6260  0013E4  6E2E               	movwf	___flmul@a^0,c
  6261  0013E6  0E00               	movlw	0
  6262  0013E8  6E2F               	movwf	(___flmul@a+1)^0,c
  6263  0013EA  0E20               	movlw	32
  6264  0013EC  6E30               	movwf	(___flmul@a+2)^0,c
  6265  0013EE  0E41               	movlw	65
  6266  0013F0  6E31               	movwf	(___flmul@a+3)^0,c
  6267  0013F2  C0C3  F02A         	movff	efgtoa@u,___flmul@b
  6268  0013F6  C0C4  F02B         	movff	efgtoa@u+1,___flmul@b+1
  6269  0013FA  C0C5  F02C         	movff	efgtoa@u+2,___flmul@b+2
  6270  0013FE  C0C6  F02D         	movff	efgtoa@u+3,___flmul@b+3
  6271  001402  EC20  F014         	call	___flmul	;wreg free
  6272  001406  C02A  F071         	movff	?___flmul,___flge@ff2
  6273  00140A  C02B  F072         	movff	?___flmul+1,___flge@ff2+1
  6274  00140E  C02C  F073         	movff	?___flmul+2,___flge@ff2+2
  6275  001412  C02D  F074         	movff	?___flmul+3,___flge@ff2+3
  6276  001416  EC81  F025         	call	___flge	;wreg free
  6277  00141A  0100               	movlb	0	; () banked
  6278  00141C  B0D8               	btfsc	status,0,c
  6279  00141E  EF13  F00A         	goto	u9551
  6280  001422  EF15  F00A         	goto	u9550
  6281  001426                     u9551:
  6282  001426  EFCC  F009         	goto	l8734
  6283  00142A                     u9550:
  6284  00142A  EF35  F00A         	goto	l8744
  6285  00142E                     l8740:
  6286                           
  6287                           ; BSR set to: 0
  6288                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  6289  00142E  C0C3  F02A         	movff	efgtoa@u,___fldiv@b
  6290  001432  C0C4  F02B         	movff	efgtoa@u+1,___fldiv@b+1
  6291  001436  C0C5  F02C         	movff	efgtoa@u+2,___fldiv@b+2
  6292  00143A  C0C6  F02D         	movff	efgtoa@u+3,___fldiv@b+3
  6293  00143E  0E00               	movlw	0
  6294  001440  6E2E               	movwf	___fldiv@a^0,c
  6295  001442  0E00               	movlw	0
  6296  001444  6E2F               	movwf	(___fldiv@a+1)^0,c
  6297  001446  0E20               	movlw	32
  6298  001448  6E30               	movwf	(___fldiv@a+2)^0,c
  6299  00144A  0E41               	movlw	65
  6300  00144C  6E31               	movwf	(___fldiv@a+3)^0,c
  6301  00144E  EC48  F016         	call	___fldiv	;wreg free
  6302  001452  C02A  F0C3         	movff	?___fldiv,efgtoa@u
  6303  001456  C02B  F0C4         	movff	?___fldiv+1,efgtoa@u+1
  6304  00145A  C02C  F0C5         	movff	?___fldiv+2,efgtoa@u+2
  6305  00145E  C02D  F0C6         	movff	?___fldiv+3,efgtoa@u+3
  6306  001462                     
  6307                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  6308  001462  0100               	movlb	0	; () banked
  6309  001464  07BF               	decf	efgtoa@e& (0+255),f,b
  6310  001466  A0D8               	btfss	status,0,c
  6311  001468  07C0               	decf	(efgtoa@e+1)& (0+255),f,b
  6312  00146A                     l8744:
  6313                           
  6314                           ; BSR set to: 0
  6315                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  6316  00146A  C0BB  F06D         	movff	efgtoa@g,___flge@ff1
  6317  00146E  C0BC  F06E         	movff	efgtoa@g+1,___flge@ff1+1
  6318  001472  C0BD  F06F         	movff	efgtoa@g+2,___flge@ff1+2
  6319  001476  C0BE  F070         	movff	efgtoa@g+3,___flge@ff1+3
  6320  00147A  C0C3  F071         	movff	efgtoa@u,___flge@ff2
  6321  00147E  C0C4  F072         	movff	efgtoa@u+1,___flge@ff2+1
  6322  001482  C0C5  F073         	movff	efgtoa@u+2,___flge@ff2+2
  6323  001486  C0C6  F074         	movff	efgtoa@u+3,___flge@ff2+3
  6324  00148A  EC81  F025         	call	___flge	;wreg free
  6325  00148E  0100               	movlb	0	; () banked
  6326  001490  A0D8               	btfss	status,0,c
  6327  001492  EF4D  F00A         	goto	u9561
  6328  001496  EF4F  F00A         	goto	u9560
  6329  00149A                     u9561:
  6330  00149A  EF17  F00A         	goto	l8740
  6331  00149E                     u9560:
  6332  00149E                     l8746:
  6333                           
  6334                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  6335  00149E  C089  F01A         	movff	efgtoa@c,tolower@c
  6336  0014A2  6A1B               	clrf	(tolower@c+1)^0,c
  6337  0014A4  ECF2  F02C         	call	_tolower	;wreg free
  6338  0014A8  501A               	movf	?_tolower^0,w,c
  6339  0014AA  0100               	movlb	0	; () banked
  6340  0014AC  6FB0               	movwf	efgtoa@mode& (0+255),b
  6341  0014AE                     
  6342                           ; BSR set to: 0
  6343                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  6344  0014AE  C0B0  F0AF         	movff	efgtoa@mode,efgtoa@nmode
  6345  0014B2                     
  6346                           ; BSR set to: 0
  6347                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  6348  0014B2  0E67               	movlw	103
  6349  0014B4  19B0               	xorwf	efgtoa@mode& (0+255),w,b
  6350  0014B6  A4D8               	btfss	status,2,c
  6351  0014B8  EF60  F00A         	goto	u9571
  6352  0014BC  EF62  F00A         	goto	u9570
  6353  0014C0                     u9571:
  6354  0014C0  EF88  F00A         	goto	l8760
  6355  0014C4                     u9570:
  6356  0014C4                     
  6357                           ; BSR set to: 0
  6358                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  6359  0014C4  503A               	movf	_prec^0,w,c
  6360  0014C6  103B               	iorwf	(_prec+1)^0,w,c
  6361  0014C8  A4D8               	btfss	status,2,c
  6362  0014CA  EF69  F00A         	goto	u9581
  6363  0014CE  EF6B  F00A         	goto	u9580
  6364  0014D2                     u9581:
  6365  0014D2  EF6F  F00A         	goto	l8756
  6366  0014D6                     u9580:
  6367  0014D6                     
  6368                           ; BSR set to: 0
  6369                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  6370  0014D6  0E00               	movlw	0
  6371  0014D8  6E3B               	movwf	(_prec+1)^0,c
  6372  0014DA  0E01               	movlw	1
  6373  0014DC  6E3A               	movwf	_prec^0,c
  6374  0014DE                     l8756:
  6375                           
  6376                           ; BSR set to: 0
  6377                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  6378  0014DE  BE3B               	btfsc	(_prec+1)^0,7,c
  6379  0014E0  EF7C  F00A         	goto	u9590
  6380  0014E4  503B               	movf	(_prec+1)^0,w,c
  6381  0014E6  E106               	bnz	u9591
  6382  0014E8  043A               	decf	_prec^0,w,c
  6383  0014EA  B0D8               	btfsc	status,0,c
  6384  0014EC  EF7A  F00A         	goto	u9591
  6385  0014F0  EF7C  F00A         	goto	u9590
  6386  0014F4                     u9591:
  6387  0014F4  EF82  F00A         	goto	l2194
  6388  0014F8                     u9590:
  6389  0014F8                     l8758:
  6390                           
  6391                           ; BSR set to: 0
  6392  0014F8  0E00               	movlw	0
  6393  0014FA  6FAC               	movwf	(efgtoa@p+1)& (0+255),b
  6394  0014FC  0E06               	movlw	6
  6395  0014FE  6FAB               	movwf	efgtoa@p& (0+255),b
  6396  001500  EF91  F00A         	goto	l8766
  6397  001504                     l2194:
  6398                           
  6399                           ; BSR set to: 0
  6400  001504  C03A  F0AB         	movff	_prec,efgtoa@p
  6401  001508  C03B  F0AC         	movff	_prec+1,efgtoa@p+1
  6402  00150C  EF91  F00A         	goto	l8766
  6403  001510                     l8760:
  6404                           
  6405                           ; BSR set to: 0
  6406                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  6407  001510  BE3B               	btfsc	(_prec+1)^0,7,c
  6408  001512  EF8D  F00A         	goto	u9601
  6409  001516  EF8F  F00A         	goto	u9600
  6410  00151A                     u9601:
  6411  00151A  EF7C  F00A         	goto	l8758
  6412  00151E                     u9600:
  6413  00151E  EF82  F00A         	goto	l2194
  6414  001522                     l8766:
  6415                           
  6416                           ; BSR set to: 0
  6417                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  6418  001522  0E67               	movlw	103
  6419  001524  19B0               	xorwf	efgtoa@mode& (0+255),w,b
  6420  001526  A4D8               	btfss	status,2,c
  6421  001528  EF98  F00A         	goto	u9611
  6422  00152C  EF9A  F00A         	goto	u9610
  6423  001530                     u9611:
  6424  001530  EFC9  F00A         	goto	l8776
  6425  001534                     u9610:
  6426  001534                     
  6427                           ; BSR set to: 0
  6428                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  6429  001534  AFC0               	btfss	(efgtoa@e+1)& (0+255),7,b
  6430  001536  EFA8  F00A         	goto	u9620
  6431  00153A  0EFC               	movlw	252
  6432  00153C  5DBF               	subwf	efgtoa@e& (0+255),w,b
  6433  00153E  0EFF               	movlw	255
  6434  001540  59C0               	subwfb	(efgtoa@e+1)& (0+255),w,b
  6435  001542  A0D8               	btfss	status,0,c
  6436  001544  EFA6  F00A         	goto	u9621
  6437  001548  EFA8  F00A         	goto	u9620
  6438  00154C                     u9621:
  6439  00154C  EFC7  F00A         	goto	l8774
  6440  001550                     u9620:
  6441  001550                     
  6442                           ; BSR set to: 0
  6443  001550  0EFF               	movlw	255
  6444  001552  6F8A               	movwf	??_efgtoa& (0+255),b
  6445  001554  0EFF               	movlw	255
  6446  001556  6F8B               	movwf	(??_efgtoa+1)& (0+255),b
  6447  001558  C0AB  F08C         	movff	efgtoa@p,??_efgtoa+2
  6448  00155C  C0AC  F08D         	movff	efgtoa@p+1,??_efgtoa+3
  6449  001560  518A               	movf	??_efgtoa& (0+255),w,b
  6450  001562  278C               	addwf	(??_efgtoa+2)& (0+255),f,b
  6451  001564  518B               	movf	(??_efgtoa+1)& (0+255),w,b
  6452  001566  238D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  6453  001568  51BF               	movf	efgtoa@e& (0+255),w,b
  6454  00156A  5D8C               	subwf	(??_efgtoa+2)& (0+255),w,b
  6455  00156C  518D               	movf	(??_efgtoa+3)& (0+255),w,b
  6456  00156E  0A80               	xorlw	128
  6457  001570  6F8E               	movwf	(??_efgtoa+4)& (0+255),b
  6458  001572  51C0               	movf	(efgtoa@e+1)& (0+255),w,b
  6459  001574  0A80               	xorlw	128
  6460  001576  598E               	subwfb	(??_efgtoa+4)& (0+255),w,b
  6461  001578  A0D8               	btfss	status,0,c
  6462  00157A  EFC1  F00A         	goto	u9631
  6463  00157E  EFC3  F00A         	goto	u9630
  6464  001582                     u9631:
  6465  001582  EFC7  F00A         	goto	l8774
  6466  001586                     u9630:
  6467  001586                     
  6468                           ; BSR set to: 0
  6469                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  6470  001586  0E66               	movlw	102
  6471  001588  6FAF               	movwf	efgtoa@nmode& (0+255),b
  6472                           
  6473                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  6474  00158A  EFC9  F00A         	goto	l8776
  6475  00158E                     l8774:
  6476                           
  6477                           ; BSR set to: 0
  6478                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  6479  00158E  0E65               	movlw	101
  6480  001590  6FAF               	movwf	efgtoa@nmode& (0+255),b
  6481  001592                     l8776:
  6482                           
  6483                           ; BSR set to: 0
  6484                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 411:     m = p;
  6485  001592  C0AB  F0A1         	movff	efgtoa@p,efgtoa@m
  6486  001596  C0AC  F0A2         	movff	efgtoa@p+1,efgtoa@m+1
  6487  00159A                     
  6488                           ; BSR set to: 0
  6489                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  6490  00159A  0E67               	movlw	103
  6491  00159C  19B0               	xorwf	efgtoa@mode& (0+255),w,b
  6492  00159E  A4D8               	btfss	status,2,c
  6493  0015A0  EFD4  F00A         	goto	u9641
  6494  0015A4  EFD6  F00A         	goto	u9640
  6495  0015A8                     u9641:
  6496  0015A8  EFE6  F00A         	goto	l8784
  6497  0015AC                     u9640:
  6498  0015AC                     
  6499                           ; BSR set to: 0
  6500  0015AC  0E66               	movlw	102
  6501  0015AE  19AF               	xorwf	efgtoa@nmode& (0+255),w,b
  6502  0015B0  A4D8               	btfss	status,2,c
  6503  0015B2  EFDD  F00A         	goto	u9651
  6504  0015B6  EFDF  F00A         	goto	u9650
  6505  0015BA                     u9651:
  6506  0015BA  EFE8  F00A         	goto	l8786
  6507  0015BE                     u9650:
  6508  0015BE                     
  6509                           ; BSR set to: 0
  6510  0015BE  BFC0               	btfsc	(efgtoa@e+1)& (0+255),7,b
  6511  0015C0  EFE6  F00A         	goto	u9660
  6512  0015C4  EFE4  F00A         	goto	u9661
  6513  0015C8                     u9661:
  6514  0015C8  EFE8  F00A         	goto	l8786
  6515  0015CC                     u9660:
  6516  0015CC                     l8784:
  6517                           
  6518                           ; BSR set to: 0
  6519                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 413:         ++m;
  6520  0015CC  4BA1               	infsnz	efgtoa@m& (0+255),f,b
  6521  0015CE  2BA2               	incf	(efgtoa@m+1)& (0+255),f,b
  6522  0015D0                     l8786:
  6523                           
  6524                           ; BSR set to: 0
  6525                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  6526  0015D0  0E66               	movlw	102
  6527  0015D2  19AF               	xorwf	efgtoa@nmode& (0+255),w,b
  6528  0015D4  A4D8               	btfss	status,2,c
  6529  0015D6  EFEF  F00A         	goto	u9671
  6530  0015DA  EFF1  F00A         	goto	u9670
  6531  0015DE                     u9671:
  6532  0015DE  EF11  F00B         	goto	l8796
  6533  0015E2                     u9670:
  6534  0015E2                     
  6535                           ; BSR set to: 0
  6536                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  6537  0015E2  BFC0               	btfsc	(efgtoa@e+1)& (0+255),7,b
  6538  0015E4  EFF8  F00A         	goto	u9680
  6539  0015E8  EFF6  F00A         	goto	u9681
  6540  0015EC                     u9681:
  6541  0015EC  EF04  F00B         	goto	l8792
  6542  0015F0                     u9680:
  6543  0015F0                     
  6544                           ; BSR set to: 0
  6545                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  6546  0015F0  0E00               	movlw	0
  6547  0015F2  6FC3               	movwf	efgtoa@u& (0+255),b
  6548  0015F4  0E00               	movlw	0
  6549  0015F6  6FC4               	movwf	(efgtoa@u+1)& (0+255),b
  6550  0015F8  0E80               	movlw	128
  6551  0015FA  6FC5               	movwf	(efgtoa@u+2)& (0+255),b
  6552  0015FC  0E3F               	movlw	63
  6553  0015FE  6FC6               	movwf	(efgtoa@u+3)& (0+255),b
  6554                           
  6555                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  6556  001600  0E00               	movlw	0
  6557  001602  6FC0               	movwf	(efgtoa@e+1)& (0+255),b
  6558  001604  0E00               	movlw	0
  6559  001606  6FBF               	movwf	efgtoa@e& (0+255),b
  6560  001608                     l8792:
  6561                           
  6562                           ; BSR set to: 0
  6563                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  6564  001608  0E67               	movlw	103
  6565  00160A  19B0               	xorwf	efgtoa@mode& (0+255),w,b
  6566  00160C  B4D8               	btfsc	status,2,c
  6567  00160E  EF0B  F00B         	goto	u9691
  6568  001612  EF0D  F00B         	goto	u9690
  6569  001616                     u9691:
  6570  001616  EF11  F00B         	goto	l8796
  6571  00161A                     u9690:
  6572  00161A                     
  6573                           ; BSR set to: 0
  6574                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  6575  00161A  51BF               	movf	efgtoa@e& (0+255),w,b
  6576  00161C  27A1               	addwf	efgtoa@m& (0+255),f,b
  6577  00161E  51C0               	movf	(efgtoa@e+1)& (0+255),w,b
  6578  001620  23A2               	addwfc	(efgtoa@m+1)& (0+255),f,b
  6579  001622                     l8796:
  6580                           
  6581                           ; BSR set to: 0
  6582                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  6583  001622  0E00               	movlw	0
  6584  001624  6FBA               	movwf	(efgtoa@i+1)& (0+255),b
  6585  001626  0E00               	movlw	0
  6586  001628  6FB9               	movwf	efgtoa@i& (0+255),b
  6587  00162A                     
  6588                           ; BSR set to: 0
  6589                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 429:     h = g;
  6590  00162A  C0BB  F0B1         	movff	efgtoa@g,efgtoa@h
  6591  00162E  C0BC  F0B2         	movff	efgtoa@g+1,efgtoa@h+1
  6592  001632  C0BD  F0B3         	movff	efgtoa@g+2,efgtoa@h+2
  6593  001636  C0BE  F0B4         	movff	efgtoa@g+3,efgtoa@h+3
  6594  00163A                     
  6595                           ; BSR set to: 0
  6596                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  6597  00163A  C0C3  F0A3         	movff	efgtoa@u,efgtoa@ou
  6598  00163E  C0C4  F0A4         	movff	efgtoa@u+1,efgtoa@ou+1
  6599  001642  C0C5  F0A5         	movff	efgtoa@u+2,efgtoa@ou+2
  6600  001646  C0C6  F0A6         	movff	efgtoa@u+3,efgtoa@ou+3
  6601                           
  6602                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  6603  00164A  EFA2  F00B         	goto	l8810
  6604  00164E                     l8802:
  6605                           
  6606                           ; BSR set to: 0
  6607                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  6608  00164E  C0B1  F02A         	movff	efgtoa@h,___fldiv@b
  6609  001652  C0B2  F02B         	movff	efgtoa@h+1,___fldiv@b+1
  6610  001656  C0B3  F02C         	movff	efgtoa@h+2,___fldiv@b+2
  6611  00165A  C0B4  F02D         	movff	efgtoa@h+3,___fldiv@b+3
  6612  00165E  C0C3  F02E         	movff	efgtoa@u,___fldiv@a
  6613  001662  C0C4  F02F         	movff	efgtoa@u+1,___fldiv@a+1
  6614  001666  C0C5  F030         	movff	efgtoa@u+2,___fldiv@a+2
  6615  00166A  C0C6  F031         	movff	efgtoa@u+3,___fldiv@a+3
  6616  00166E  EC48  F016         	call	___fldiv	;wreg free
  6617  001672  C02A  F036         	movff	?___fldiv,floorf@x
  6618  001676  C02B  F037         	movff	?___fldiv+1,floorf@x+1
  6619  00167A  C02C  F038         	movff	?___fldiv+2,floorf@x+2
  6620  00167E  C02D  F039         	movff	?___fldiv+3,floorf@x+3
  6621  001682  EC40  F01D         	call	_floorf	;wreg free
  6622  001686  C036  F0B5         	movff	?_floorf,efgtoa@l
  6623  00168A  C037  F0B6         	movff	?_floorf+1,efgtoa@l+1
  6624  00168E  C038  F0B7         	movff	?_floorf+2,efgtoa@l+2
  6625  001692  C039  F0B8         	movff	?_floorf+3,efgtoa@l+3
  6626                           
  6627                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  6628  001696  C0B5  F079         	movff	efgtoa@l,___fltol@f1
  6629  00169A  C0B6  F07A         	movff	efgtoa@l+1,___fltol@f1+1
  6630  00169E  C0B7  F07B         	movff	efgtoa@l+2,___fltol@f1+2
  6631  0016A2  C0B8  F07C         	movff	efgtoa@l+3,___fltol@f1+3
  6632  0016A6  ECFD  F024         	call	___fltol	;wreg free
  6633  0016AA  C079  F0A7         	movff	?___fltol,efgtoa@d
  6634  0016AE  C07A  F0A8         	movff	?___fltol+1,efgtoa@d+1
  6635  0016B2                     
  6636                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  6637  0016B2  C0B1  F079         	movff	efgtoa@h,___flsub@b
  6638  0016B6  C0B2  F07A         	movff	efgtoa@h+1,___flsub@b+1
  6639  0016BA  C0B3  F07B         	movff	efgtoa@h+2,___flsub@b+2
  6640  0016BE  C0B4  F07C         	movff	efgtoa@h+3,___flsub@b+3
  6641  0016C2  C0C3  F02E         	movff	efgtoa@u,___flmul@a
  6642  0016C6  C0C4  F02F         	movff	efgtoa@u+1,___flmul@a+1
  6643  0016CA  C0C5  F030         	movff	efgtoa@u+2,___flmul@a+2
  6644  0016CE  C0C6  F031         	movff	efgtoa@u+3,___flmul@a+3
  6645  0016D2  C0B5  F02A         	movff	efgtoa@l,___flmul@b
  6646  0016D6  C0B6  F02B         	movff	efgtoa@l+1,___flmul@b+1
  6647  0016DA  C0B7  F02C         	movff	efgtoa@l+2,___flmul@b+2
  6648  0016DE  C0B8  F02D         	movff	efgtoa@l+3,___flmul@b+3
  6649  0016E2  EC20  F014         	call	___flmul	;wreg free
  6650  0016E6  C02A  F07D         	movff	?___flmul,___flsub@a
  6651  0016EA  C02B  F07E         	movff	?___flmul+1,___flsub@a+1
  6652  0016EE  C02C  F07F         	movff	?___flmul+2,___flsub@a+2
  6653  0016F2  C02D  F080         	movff	?___flmul+3,___flsub@a+3
  6654  0016F6  EC0F  F02E         	call	___flsub	;wreg free
  6655  0016FA  C079  F0B1         	movff	?___flsub,efgtoa@h
  6656  0016FE  C07A  F0B2         	movff	?___flsub+1,efgtoa@h+1
  6657  001702  C07B  F0B3         	movff	?___flsub+2,efgtoa@h+2
  6658  001706  C07C  F0B4         	movff	?___flsub+3,efgtoa@h+3
  6659  00170A                     
  6660                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  6661  00170A  C0C3  F02A         	movff	efgtoa@u,___fldiv@b
  6662  00170E  C0C4  F02B         	movff	efgtoa@u+1,___fldiv@b+1
  6663  001712  C0C5  F02C         	movff	efgtoa@u+2,___fldiv@b+2
  6664  001716  C0C6  F02D         	movff	efgtoa@u+3,___fldiv@b+3
  6665  00171A  0E00               	movlw	0
  6666  00171C  6E2E               	movwf	___fldiv@a^0,c
  6667  00171E  0E00               	movlw	0
  6668  001720  6E2F               	movwf	(___fldiv@a+1)^0,c
  6669  001722  0E20               	movlw	32
  6670  001724  6E30               	movwf	(___fldiv@a+2)^0,c
  6671  001726  0E41               	movlw	65
  6672  001728  6E31               	movwf	(___fldiv@a+3)^0,c
  6673  00172A  EC48  F016         	call	___fldiv	;wreg free
  6674  00172E  C02A  F0C3         	movff	?___fldiv,efgtoa@u
  6675  001732  C02B  F0C4         	movff	?___fldiv+1,efgtoa@u+1
  6676  001736  C02C  F0C5         	movff	?___fldiv+2,efgtoa@u+2
  6677  00173A  C02D  F0C6         	movff	?___fldiv+3,efgtoa@u+3
  6678  00173E                     
  6679                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 436:         ++i;
  6680  00173E  0100               	movlb	0	; () banked
  6681  001740  4BB9               	infsnz	efgtoa@i& (0+255),f,b
  6682  001742  2BBA               	incf	(efgtoa@i+1)& (0+255),f,b
  6683  001744                     l8810:
  6684                           
  6685                           ; BSR set to: 0
  6686                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  6687  001744  51A1               	movf	efgtoa@m& (0+255),w,b
  6688  001746  5DB9               	subwf	efgtoa@i& (0+255),w,b
  6689  001748  51BA               	movf	(efgtoa@i+1)& (0+255),w,b
  6690  00174A  0A80               	xorlw	128
  6691  00174C  6F8A               	movwf	??_efgtoa& (0+255),b
  6692  00174E  51A2               	movf	(efgtoa@m+1)& (0+255),w,b
  6693  001750  0A80               	xorlw	128
  6694  001752  598A               	subwfb	??_efgtoa& (0+255),w,b
  6695  001754  A0D8               	btfss	status,0,c
  6696  001756  EFAF  F00B         	goto	u9701
  6697  00175A  EFB1  F00B         	goto	u9700
  6698  00175E                     u9701:
  6699  00175E  EF27  F00B         	goto	l8802
  6700  001762                     u9700:
  6701  001762                     
  6702                           ; BSR set to: 0
  6703                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  6704  001762  C0C3  F02A         	movff	efgtoa@u,___flmul@b
  6705  001766  C0C4  F02B         	movff	efgtoa@u+1,___flmul@b+1
  6706  00176A  C0C5  F02C         	movff	efgtoa@u+2,___flmul@b+2
  6707  00176E  C0C6  F02D         	movff	efgtoa@u+3,___flmul@b+3
  6708  001772  0E00               	movlw	0
  6709  001774  6E2E               	movwf	___flmul@a^0,c
  6710  001776  0E00               	movlw	0
  6711  001778  6E2F               	movwf	(___flmul@a+1)^0,c
  6712  00177A  0EA0               	movlw	160
  6713  00177C  6E30               	movwf	(___flmul@a+2)^0,c
  6714  00177E  0E40               	movlw	64
  6715  001780  6E31               	movwf	(___flmul@a+3)^0,c
  6716  001782  EC20  F014         	call	___flmul	;wreg free
  6717  001786  C02A  F0B5         	movff	?___flmul,efgtoa@l
  6718  00178A  C02B  F0B6         	movff	?___flmul+1,efgtoa@l+1
  6719  00178E  C02C  F0B7         	movff	?___flmul+2,efgtoa@l+2
  6720  001792  C02D  F0B8         	movff	?___flmul+3,efgtoa@l+3
  6721  001796                     
  6722                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  6723  001796  C0B1  F06D         	movff	efgtoa@h,___flge@ff1
  6724  00179A  C0B2  F06E         	movff	efgtoa@h+1,___flge@ff1+1
  6725  00179E  C0B3  F06F         	movff	efgtoa@h+2,___flge@ff1+2
  6726  0017A2  C0B4  F070         	movff	efgtoa@h+3,___flge@ff1+3
  6727  0017A6  C0B5  F071         	movff	efgtoa@l,___flge@ff2
  6728  0017AA  C0B6  F072         	movff	efgtoa@l+1,___flge@ff2+1
  6729  0017AE  C0B7  F073         	movff	efgtoa@l+2,___flge@ff2+2
  6730  0017B2  C0B8  F074         	movff	efgtoa@l+3,___flge@ff2+3
  6731  0017B6  EC81  F025         	call	___flge	;wreg free
  6732  0017BA  0100               	movlb	0	; () banked
  6733  0017BC  B0D8               	btfsc	status,0,c
  6734  0017BE  EFE3  F00B         	goto	u9711
  6735  0017C2  EFE5  F00B         	goto	u9710
  6736  0017C6                     u9711:
  6737  0017C6  EFEF  F00B         	goto	l8818
  6738  0017CA                     u9710:
  6739  0017CA                     
  6740                           ; BSR set to: 0
  6741                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  6742  0017CA  0E00               	movlw	0
  6743  0017CC  6FB5               	movwf	efgtoa@l& (0+255),b
  6744  0017CE  0E00               	movlw	0
  6745  0017D0  6FB6               	movwf	(efgtoa@l+1)& (0+255),b
  6746  0017D2  0E00               	movlw	0
  6747  0017D4  6FB7               	movwf	(efgtoa@l+2)& (0+255),b
  6748  0017D6  0E00               	movlw	0
  6749  0017D8  6FB8               	movwf	(efgtoa@l+3)& (0+255),b
  6750                           
  6751                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 443:     } else {
  6752  0017DA  EF18  F00C         	goto	l8824
  6753  0017DE                     l8818:
  6754                           
  6755                           ; BSR set to: 0
  6756                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  6757  0017DE  C0B1  F014         	movff	efgtoa@h,___fleq@ff1
  6758  0017E2  C0B2  F015         	movff	efgtoa@h+1,___fleq@ff1+1
  6759  0017E6  C0B3  F016         	movff	efgtoa@h+2,___fleq@ff1+2
  6760  0017EA  C0B4  F017         	movff	efgtoa@h+3,___fleq@ff1+3
  6761  0017EE  C0B5  F018         	movff	efgtoa@l,___fleq@ff2
  6762  0017F2  C0B6  F019         	movff	efgtoa@l+1,___fleq@ff2+1
  6763  0017F6  C0B7  F01A         	movff	efgtoa@l+2,___fleq@ff2+2
  6764  0017FA  C0B8  F01B         	movff	efgtoa@l+3,___fleq@ff2+3
  6765  0017FE  EC94  F02A         	call	___fleq	;wreg free
  6766  001802  A0D8               	btfss	status,0,c
  6767  001804  EF06  F00C         	goto	u9721
  6768  001808  EF08  F00C         	goto	u9720
  6769  00180C                     u9721:
  6770  00180C  EF18  F00C         	goto	l8824
  6771  001810                     u9720:
  6772  001810  0100               	movlb	0	; () banked
  6773  001812  B1A7               	btfsc	efgtoa@d& (0+255),0,b
  6774  001814  EF0E  F00C         	goto	u9731
  6775  001818  EF10  F00C         	goto	u9730
  6776  00181C                     u9731:
  6777  00181C  EF18  F00C         	goto	l8824
  6778  001820                     u9730:
  6779  001820                     
  6780                           ; BSR set to: 0
  6781                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  6782  001820  0E00               	movlw	0
  6783  001822  6FB5               	movwf	efgtoa@l& (0+255),b
  6784  001824  0E00               	movlw	0
  6785  001826  6FB6               	movwf	(efgtoa@l+1)& (0+255),b
  6786  001828  0E00               	movlw	0
  6787  00182A  6FB7               	movwf	(efgtoa@l+2)& (0+255),b
  6788  00182C  0E00               	movlw	0
  6789  00182E  6FB8               	movwf	(efgtoa@l+3)& (0+255),b
  6790  001830                     l8824:
  6791                           
  6792                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  6793  001830  C0BB  F06D         	movff	efgtoa@g,___fladd@b
  6794  001834  C0BC  F06E         	movff	efgtoa@g+1,___fladd@b+1
  6795  001838  C0BD  F06F         	movff	efgtoa@g+2,___fladd@b+2
  6796  00183C  C0BE  F070         	movff	efgtoa@g+3,___fladd@b+3
  6797  001840  C0B5  F071         	movff	efgtoa@l,___fladd@a
  6798  001844  C0B6  F072         	movff	efgtoa@l+1,___fladd@a+1
  6799  001848  C0B7  F073         	movff	efgtoa@l+2,___fladd@a+2
  6800  00184C  C0B8  F074         	movff	efgtoa@l+3,___fladd@a+3
  6801  001850  ECBF  F011         	call	___fladd	;wreg free
  6802  001854  C06D  F0B1         	movff	?___fladd,efgtoa@h
  6803  001858  C06E  F0B2         	movff	?___fladd+1,efgtoa@h+1
  6804  00185C  C06F  F0B3         	movff	?___fladd+2,efgtoa@h+2
  6805  001860  C070  F0B4         	movff	?___fladd+3,efgtoa@h+3
  6806  001864                     
  6807                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  6808  001864  C0B1  F06D         	movff	efgtoa@h,___flge@ff1
  6809  001868  C0B2  F06E         	movff	efgtoa@h+1,___flge@ff1+1
  6810  00186C  C0B3  F06F         	movff	efgtoa@h+2,___flge@ff1+2
  6811  001870  C0B4  F070         	movff	efgtoa@h+3,___flge@ff1+3
  6812  001874  0E00               	movlw	0
  6813  001876  6E2E               	movwf	___flmul@a^0,c
  6814  001878  0E00               	movlw	0
  6815  00187A  6E2F               	movwf	(___flmul@a+1)^0,c
  6816  00187C  0E20               	movlw	32
  6817  00187E  6E30               	movwf	(___flmul@a+2)^0,c
  6818  001880  0E41               	movlw	65
  6819  001882  6E31               	movwf	(___flmul@a+3)^0,c
  6820  001884  C0A3  F02A         	movff	efgtoa@ou,___flmul@b
  6821  001888  C0A4  F02B         	movff	efgtoa@ou+1,___flmul@b+1
  6822  00188C  C0A5  F02C         	movff	efgtoa@ou+2,___flmul@b+2
  6823  001890  C0A6  F02D         	movff	efgtoa@ou+3,___flmul@b+3
  6824  001894  EC20  F014         	call	___flmul	;wreg free
  6825  001898  C02A  F071         	movff	?___flmul,___flge@ff2
  6826  00189C  C02B  F072         	movff	?___flmul+1,___flge@ff2+1
  6827  0018A0  C02C  F073         	movff	?___flmul+2,___flge@ff2+2
  6828  0018A4  C02D  F074         	movff	?___flmul+3,___flge@ff2+3
  6829  0018A8  EC81  F025         	call	___flge	;wreg free
  6830  0018AC  0100               	movlb	0	; () banked
  6831  0018AE  A0D8               	btfss	status,0,c
  6832  0018B0  EF5C  F00C         	goto	u9741
  6833  0018B4  EF5E  F00C         	goto	u9740
  6834  0018B8                     u9741:
  6835  0018B8  EF86  F00C         	goto	l8836
  6836  0018BC                     u9740:
  6837  0018BC                     
  6838                           ; BSR set to: 0
  6839                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 454:   e++;
  6840  0018BC  4BBF               	infsnz	efgtoa@e& (0+255),f,b
  6841  0018BE  2BC0               	incf	(efgtoa@e+1)& (0+255),f,b
  6842  0018C0                     
  6843                           ; BSR set to: 0
  6844                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  6845  0018C0  C0A3  F02A         	movff	efgtoa@ou,___flmul@b
  6846  0018C4  C0A4  F02B         	movff	efgtoa@ou+1,___flmul@b+1
  6847  0018C8  C0A5  F02C         	movff	efgtoa@ou+2,___flmul@b+2
  6848  0018CC  C0A6  F02D         	movff	efgtoa@ou+3,___flmul@b+3
  6849  0018D0  0E00               	movlw	0
  6850  0018D2  6E2E               	movwf	___flmul@a^0,c
  6851  0018D4  0E00               	movlw	0
  6852  0018D6  6E2F               	movwf	(___flmul@a+1)^0,c
  6853  0018D8  0E20               	movlw	32
  6854  0018DA  6E30               	movwf	(___flmul@a+2)^0,c
  6855  0018DC  0E41               	movlw	65
  6856  0018DE  6E31               	movwf	(___flmul@a+3)^0,c
  6857  0018E0  EC20  F014         	call	___flmul	;wreg free
  6858  0018E4  C02A  F0A3         	movff	?___flmul,efgtoa@ou
  6859  0018E8  C02B  F0A4         	movff	?___flmul+1,efgtoa@ou+1
  6860  0018EC  C02C  F0A5         	movff	?___flmul+2,efgtoa@ou+2
  6861  0018F0  C02D  F0A6         	movff	?___flmul+3,efgtoa@ou+3
  6862  0018F4                     
  6863                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  6864  0018F4  0E66               	movlw	102
  6865  0018F6  0100               	movlb	0	; () banked
  6866  0018F8  19AF               	xorwf	efgtoa@nmode& (0+255),w,b
  6867  0018FA  A4D8               	btfss	status,2,c
  6868  0018FC  EF82  F00C         	goto	u9751
  6869  001900  EF84  F00C         	goto	u9750
  6870  001904                     u9751:
  6871  001904  EF86  F00C         	goto	l8836
  6872  001908                     u9750:
  6873  001908                     
  6874                           ; BSR set to: 0
  6875                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 458:    m++;
  6876  001908  4BA1               	infsnz	efgtoa@m& (0+255),f,b
  6877  00190A  2BA2               	incf	(efgtoa@m+1)& (0+255),f,b
  6878  00190C                     l8836:
  6879                           
  6880                           ; BSR set to: 0
  6881                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  6882  00190C  C0A3  F0C3         	movff	efgtoa@ou,efgtoa@u
  6883  001910  C0A4  F0C4         	movff	efgtoa@ou+1,efgtoa@u+1
  6884  001914  C0A5  F0C5         	movff	efgtoa@ou+2,efgtoa@u+2
  6885  001918  C0A6  F0C6         	movff	efgtoa@ou+3,efgtoa@u+3
  6886  00191C                     
  6887                           ; BSR set to: 0
  6888                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  6889  00191C  0E65               	movlw	101
  6890  00191E  19AF               	xorwf	efgtoa@nmode& (0+255),w,b
  6891  001920  B4D8               	btfsc	status,2,c
  6892  001922  EF95  F00C         	goto	u9761
  6893  001926  EF97  F00C         	goto	u9760
  6894  00192A                     u9761:
  6895  00192A  EF9D  F00C         	goto	l8842
  6896  00192E                     u9760:
  6897  00192E                     
  6898                           ; BSR set to: 0
  6899  00192E  C0BF  F09F         	movff	efgtoa@e,efgtoa@ne
  6900  001932  C0C0  F0A0         	movff	efgtoa@e+1,efgtoa@ne+1
  6901  001936  EFA1  F00C         	goto	l2222
  6902  00193A                     l8842:
  6903                           
  6904                           ; BSR set to: 0
  6905  00193A  0E00               	movlw	0
  6906  00193C  6FA0               	movwf	(efgtoa@ne+1)& (0+255),b
  6907  00193E  0E00               	movlw	0
  6908  001940  6F9F               	movwf	efgtoa@ne& (0+255),b
  6909  001942                     l2222:
  6910                           
  6911                           ; BSR set to: 0
  6912                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  6913  001942  0E00               	movlw	0
  6914  001944  6F9E               	movwf	(efgtoa@pp+1)& (0+255),b
  6915  001946  0E00               	movlw	0
  6916  001948  6F9D               	movwf	efgtoa@pp& (0+255),b
  6917                           
  6918                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  6919  00194A  0E00               	movlw	0
  6920  00194C  6F9C               	movwf	(efgtoa@t+1)& (0+255),b
  6921  00194E  0E00               	movlw	0
  6922  001950  6F9B               	movwf	efgtoa@t& (0+255),b
  6923                           
  6924                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  6925  001952  0E00               	movlw	0
  6926  001954  6FBA               	movwf	(efgtoa@i+1)& (0+255),b
  6927  001956  0E00               	movlw	0
  6928  001958  6FB9               	movwf	efgtoa@i& (0+255),b
  6929                           
  6930                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  6931  00195A  EF9D  F00D         	goto	l8892
  6932  00195E                     l8844:
  6933                           
  6934                           ; BSR set to: 0
  6935                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  6936  00195E  C0B1  F02A         	movff	efgtoa@h,___fldiv@b
  6937  001962  C0B2  F02B         	movff	efgtoa@h+1,___fldiv@b+1
  6938  001966  C0B3  F02C         	movff	efgtoa@h+2,___fldiv@b+2
  6939  00196A  C0B4  F02D         	movff	efgtoa@h+3,___fldiv@b+3
  6940  00196E  C0C3  F02E         	movff	efgtoa@u,___fldiv@a
  6941  001972  C0C4  F02F         	movff	efgtoa@u+1,___fldiv@a+1
  6942  001976  C0C5  F030         	movff	efgtoa@u+2,___fldiv@a+2
  6943  00197A  C0C6  F031         	movff	efgtoa@u+3,___fldiv@a+3
  6944  00197E  EC48  F016         	call	___fldiv	;wreg free
  6945  001982  C02A  F036         	movff	?___fldiv,floorf@x
  6946  001986  C02B  F037         	movff	?___fldiv+1,floorf@x+1
  6947  00198A  C02C  F038         	movff	?___fldiv+2,floorf@x+2
  6948  00198E  C02D  F039         	movff	?___fldiv+3,floorf@x+3
  6949  001992  EC40  F01D         	call	_floorf	;wreg free
  6950  001996  C036  F0B5         	movff	?_floorf,efgtoa@l
  6951  00199A  C037  F0B6         	movff	?_floorf+1,efgtoa@l+1
  6952  00199E  C038  F0B7         	movff	?_floorf+2,efgtoa@l+2
  6953  0019A2  C039  F0B8         	movff	?_floorf+3,efgtoa@l+3
  6954                           
  6955                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  6956  0019A6  C0B5  F079         	movff	efgtoa@l,___fltol@f1
  6957  0019AA  C0B6  F07A         	movff	efgtoa@l+1,___fltol@f1+1
  6958  0019AE  C0B7  F07B         	movff	efgtoa@l+2,___fltol@f1+2
  6959  0019B2  C0B8  F07C         	movff	efgtoa@l+3,___fltol@f1+3
  6960  0019B6  ECFD  F024         	call	___fltol	;wreg free
  6961  0019BA  C079  F0A7         	movff	?___fltol,efgtoa@d
  6962  0019BE  C07A  F0A8         	movff	?___fltol+1,efgtoa@d+1
  6963  0019C2                     
  6964                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  6965  0019C2  B83C               	btfsc	_flags^0,4,c
  6966  0019C4  EFE6  F00C         	goto	u9771
  6967  0019C8  EFE8  F00C         	goto	u9770
  6968  0019CC                     u9771:
  6969  0019CC  EF06  F00D         	goto	l8856
  6970  0019D0                     u9770:
  6971  0019D0  0100               	movlb	0	; () banked
  6972  0019D2  51A7               	movf	efgtoa@d& (0+255),w,b
  6973  0019D4  11A8               	iorwf	(efgtoa@d+1)& (0+255),w,b
  6974  0019D6  A4D8               	btfss	status,2,c
  6975  0019D8  EFF0  F00C         	goto	u9781
  6976  0019DC  EFF2  F00C         	goto	u9780
  6977  0019E0                     u9781:
  6978  0019E0  EF06  F00D         	goto	l8856
  6979  0019E4                     u9780:
  6980  0019E4                     
  6981                           ; BSR set to: 0
  6982  0019E4  0E67               	movlw	103
  6983  0019E6  19B0               	xorwf	efgtoa@mode& (0+255),w,b
  6984  0019E8  A4D8               	btfss	status,2,c
  6985  0019EA  EFF9  F00C         	goto	u9791
  6986  0019EE  EFFB  F00C         	goto	u9790
  6987  0019F2                     u9791:
  6988  0019F2  EF06  F00D         	goto	l8856
  6989  0019F6                     u9790:
  6990  0019F6                     
  6991                           ; BSR set to: 0
  6992  0019F6  BFA0               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  6993  0019F8  EF02  F00D         	goto	u9800
  6994  0019FC  EF00  F00D         	goto	u9801
  6995  001A00                     u9801:
  6996  001A00  EF06  F00D         	goto	l8856
  6997  001A04                     u9800:
  6998  001A04                     
  6999                           ; BSR set to: 0
  7000                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  7001  001A04  4B9B               	infsnz	efgtoa@t& (0+255),f,b
  7002  001A06  2B9C               	incf	(efgtoa@t+1)& (0+255),f,b
  7003                           
  7004                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  7005  001A08  EF51  F00D         	goto	l8884
  7006  001A0C                     l8856:
  7007                           
  7008                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  7009  001A0C  0100               	movlb	0	; () banked
  7010  001A0E  519D               	movf	efgtoa@pp& (0+255),w,b
  7011  001A10  119E               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  7012  001A12  A4D8               	btfss	status,2,c
  7013  001A14  EF0E  F00D         	goto	u9811
  7014  001A18  EF10  F00D         	goto	u9810
  7015  001A1C                     u9811:
  7016  001A1C  EF3A  F00D         	goto	l8876
  7017  001A20                     u9810:
  7018  001A20                     
  7019                           ; BSR set to: 0
  7020  001A20  BFA0               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  7021  001A22  EF17  F00D         	goto	u9820
  7022  001A26  EF15  F00D         	goto	u9821
  7023  001A2A                     u9821:
  7024  001A2A  EF3A  F00D         	goto	l8876
  7025  001A2E                     u9820:
  7026  001A2E                     
  7027                           ; BSR set to: 0
  7028                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  7029  001A2E  0E45               	movlw	low _dbuf
  7030  001A30  25C1               	addwf	efgtoa@n& (0+255),w,b
  7031  001A32  6ED9               	movwf	fsr2l,c
  7032  001A34  0E01               	movlw	high _dbuf
  7033  001A36  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7034  001A38  6EDA               	movwf	fsr2h,c
  7035  001A3A  0E2E               	movlw	46
  7036  001A3C  6EDF               	movwf	indf2,c
  7037  001A3E                     
  7038                           ; BSR set to: 0
  7039  001A3E  4BC1               	infsnz	efgtoa@n& (0+255),f,b
  7040  001A40  2BC2               	incf	(efgtoa@n+1)& (0+255),f,b
  7041  001A42                     
  7042                           ; BSR set to: 0
  7043                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  7044  001A42  07AD               	decf	efgtoa@w& (0+255),f,b
  7045  001A44  A0D8               	btfss	status,0,c
  7046  001A46  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  7047  001A48                     
  7048                           ; BSR set to: 0
  7049                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  7050  001A48  0E00               	movlw	0
  7051  001A4A  6F9E               	movwf	(efgtoa@pp+1)& (0+255),b
  7052  001A4C  0E01               	movlw	1
  7053  001A4E  6F9D               	movwf	efgtoa@pp& (0+255),b
  7054  001A50  EF3A  F00D         	goto	l8876
  7055  001A54                     l8868:
  7056                           
  7057                           ; BSR set to: 0
  7058                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  7059  001A54  0E45               	movlw	low _dbuf
  7060  001A56  25C1               	addwf	efgtoa@n& (0+255),w,b
  7061  001A58  6ED9               	movwf	fsr2l,c
  7062  001A5A  0E01               	movlw	high _dbuf
  7063  001A5C  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7064  001A5E  6EDA               	movwf	fsr2h,c
  7065  001A60  0E30               	movlw	48
  7066  001A62  6EDF               	movwf	indf2,c
  7067  001A64                     
  7068                           ; BSR set to: 0
  7069  001A64  4BC1               	infsnz	efgtoa@n& (0+255),f,b
  7070  001A66  2BC2               	incf	(efgtoa@n+1)& (0+255),f,b
  7071  001A68                     
  7072                           ; BSR set to: 0
  7073                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  7074  001A68  07AD               	decf	efgtoa@w& (0+255),f,b
  7075  001A6A  A0D8               	btfss	status,0,c
  7076  001A6C  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  7077  001A6E                     
  7078                           ; BSR set to: 0
  7079                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  7080  001A6E  079B               	decf	efgtoa@t& (0+255),f,b
  7081  001A70  A0D8               	btfss	status,0,c
  7082  001A72  079C               	decf	(efgtoa@t+1)& (0+255),f,b
  7083  001A74                     l8876:
  7084                           
  7085                           ; BSR set to: 0
  7086                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  7087  001A74  519B               	movf	efgtoa@t& (0+255),w,b
  7088  001A76  119C               	iorwf	(efgtoa@t+1)& (0+255),w,b
  7089  001A78  A4D8               	btfss	status,2,c
  7090  001A7A  EF41  F00D         	goto	u9831
  7091  001A7E  EF43  F00D         	goto	u9830
  7092  001A82                     u9831:
  7093  001A82  EF2A  F00D         	goto	l8868
  7094  001A86                     u9830:
  7095  001A86                     
  7096                           ; BSR set to: 0
  7097                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  7098  001A86  0E45               	movlw	low _dbuf
  7099  001A88  25C1               	addwf	efgtoa@n& (0+255),w,b
  7100  001A8A  6ED9               	movwf	fsr2l,c
  7101  001A8C  0E01               	movlw	high _dbuf
  7102  001A8E  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7103  001A90  6EDA               	movwf	fsr2h,c
  7104  001A92  51A7               	movf	efgtoa@d& (0+255),w,b
  7105  001A94  0F30               	addlw	48
  7106  001A96  6EDF               	movwf	indf2,c
  7107  001A98                     
  7108                           ; BSR set to: 0
  7109  001A98  4BC1               	infsnz	efgtoa@n& (0+255),f,b
  7110  001A9A  2BC2               	incf	(efgtoa@n+1)& (0+255),f,b
  7111  001A9C                     
  7112                           ; BSR set to: 0
  7113                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  7114  001A9C  07AD               	decf	efgtoa@w& (0+255),f,b
  7115  001A9E  A0D8               	btfss	status,0,c
  7116  001AA0  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  7117  001AA2                     l8884:
  7118                           
  7119                           ; BSR set to: 0
  7120                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  7121  001AA2  C0B1  F079         	movff	efgtoa@h,___flsub@b
  7122  001AA6  C0B2  F07A         	movff	efgtoa@h+1,___flsub@b+1
  7123  001AAA  C0B3  F07B         	movff	efgtoa@h+2,___flsub@b+2
  7124  001AAE  C0B4  F07C         	movff	efgtoa@h+3,___flsub@b+3
  7125  001AB2  C0C3  F02E         	movff	efgtoa@u,___flmul@a
  7126  001AB6  C0C4  F02F         	movff	efgtoa@u+1,___flmul@a+1
  7127  001ABA  C0C5  F030         	movff	efgtoa@u+2,___flmul@a+2
  7128  001ABE  C0C6  F031         	movff	efgtoa@u+3,___flmul@a+3
  7129  001AC2  C0B5  F02A         	movff	efgtoa@l,___flmul@b
  7130  001AC6  C0B6  F02B         	movff	efgtoa@l+1,___flmul@b+1
  7131  001ACA  C0B7  F02C         	movff	efgtoa@l+2,___flmul@b+2
  7132  001ACE  C0B8  F02D         	movff	efgtoa@l+3,___flmul@b+3
  7133  001AD2  EC20  F014         	call	___flmul	;wreg free
  7134  001AD6  C02A  F07D         	movff	?___flmul,___flsub@a
  7135  001ADA  C02B  F07E         	movff	?___flmul+1,___flsub@a+1
  7136  001ADE  C02C  F07F         	movff	?___flmul+2,___flsub@a+2
  7137  001AE2  C02D  F080         	movff	?___flmul+3,___flsub@a+3
  7138  001AE6  EC0F  F02E         	call	___flsub	;wreg free
  7139  001AEA  C079  F0B1         	movff	?___flsub,efgtoa@h
  7140  001AEE  C07A  F0B2         	movff	?___flsub+1,efgtoa@h+1
  7141  001AF2  C07B  F0B3         	movff	?___flsub+2,efgtoa@h+2
  7142  001AF6  C07C  F0B4         	movff	?___flsub+3,efgtoa@h+3
  7143  001AFA                     
  7144                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  7145  001AFA  C0C3  F02A         	movff	efgtoa@u,___fldiv@b
  7146  001AFE  C0C4  F02B         	movff	efgtoa@u+1,___fldiv@b+1
  7147  001B02  C0C5  F02C         	movff	efgtoa@u+2,___fldiv@b+2
  7148  001B06  C0C6  F02D         	movff	efgtoa@u+3,___fldiv@b+3
  7149  001B0A  0E00               	movlw	0
  7150  001B0C  6E2E               	movwf	___fldiv@a^0,c
  7151  001B0E  0E00               	movlw	0
  7152  001B10  6E2F               	movwf	(___fldiv@a+1)^0,c
  7153  001B12  0E20               	movlw	32
  7154  001B14  6E30               	movwf	(___fldiv@a+2)^0,c
  7155  001B16  0E41               	movlw	65
  7156  001B18  6E31               	movwf	(___fldiv@a+3)^0,c
  7157  001B1A  EC48  F016         	call	___fldiv	;wreg free
  7158  001B1E  C02A  F0C3         	movff	?___fldiv,efgtoa@u
  7159  001B22  C02B  F0C4         	movff	?___fldiv+1,efgtoa@u+1
  7160  001B26  C02C  F0C5         	movff	?___fldiv+2,efgtoa@u+2
  7161  001B2A  C02D  F0C6         	movff	?___fldiv+3,efgtoa@u+3
  7162  001B2E                     
  7163                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  7164  001B2E  0100               	movlb	0	; () banked
  7165  001B30  079F               	decf	efgtoa@ne& (0+255),f,b
  7166  001B32  A0D8               	btfss	status,0,c
  7167  001B34  07A0               	decf	(efgtoa@ne+1)& (0+255),f,b
  7168  001B36                     
  7169                           ; BSR set to: 0
  7170                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 490:         ++i;
  7171  001B36  4BB9               	infsnz	efgtoa@i& (0+255),f,b
  7172  001B38  2BBA               	incf	(efgtoa@i+1)& (0+255),f,b
  7173  001B3A                     l8892:
  7174                           
  7175                           ; BSR set to: 0
  7176                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  7177  001B3A  51A1               	movf	efgtoa@m& (0+255),w,b
  7178  001B3C  5DB9               	subwf	efgtoa@i& (0+255),w,b
  7179  001B3E  51BA               	movf	(efgtoa@i+1)& (0+255),w,b
  7180  001B40  0A80               	xorlw	128
  7181  001B42  6F8A               	movwf	??_efgtoa& (0+255),b
  7182  001B44  51A2               	movf	(efgtoa@m+1)& (0+255),w,b
  7183  001B46  0A80               	xorlw	128
  7184  001B48  598A               	subwfb	??_efgtoa& (0+255),w,b
  7185  001B4A  B0D8               	btfsc	status,0,c
  7186  001B4C  EFAA  F00D         	goto	u9841
  7187  001B50  EFAC  F00D         	goto	u9840
  7188  001B54                     u9841:
  7189  001B54  EFBA  F00D         	goto	l8896
  7190  001B58                     u9840:
  7191  001B58                     
  7192                           ; BSR set to: 0
  7193  001B58  BFC2               	btfsc	(efgtoa@n+1)& (0+255),7,b
  7194  001B5A  EFB8  F00D         	goto	u9851
  7195  001B5E  51C2               	movf	(efgtoa@n+1)& (0+255),w,b
  7196  001B60  E109               	bnz	u9850
  7197  001B62  0E4B               	movlw	75
  7198  001B64  5DC1               	subwf	efgtoa@n& (0+255),w,b
  7199  001B66  A0D8               	btfss	status,0,c
  7200  001B68  EFB8  F00D         	goto	u9851
  7201  001B6C  EFBA  F00D         	goto	u9850
  7202  001B70                     u9851:
  7203  001B70  EFAF  F00C         	goto	l8844
  7204  001B74                     u9850:
  7205  001B74                     l8896:
  7206                           
  7207                           ; BSR set to: 0
  7208                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  7209  001B74  519D               	movf	efgtoa@pp& (0+255),w,b
  7210  001B76  119E               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  7211  001B78  A4D8               	btfss	status,2,c
  7212  001B7A  EFC1  F00D         	goto	u9861
  7213  001B7E  EFC3  F00D         	goto	u9860
  7214  001B82                     u9861:
  7215  001B82  EFD4  F00D         	goto	l8904
  7216  001B86                     u9860:
  7217  001B86                     
  7218                           ; BSR set to: 0
  7219  001B86  A83C               	btfss	_flags^0,4,c
  7220  001B88  EFC8  F00D         	goto	u9871
  7221  001B8C  EFCA  F00D         	goto	u9870
  7222  001B90                     u9871:
  7223  001B90  EFD4  F00D         	goto	l8904
  7224  001B94                     u9870:
  7225  001B94                     
  7226                           ; BSR set to: 0
  7227                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  7228  001B94  0E45               	movlw	low _dbuf
  7229  001B96  25C1               	addwf	efgtoa@n& (0+255),w,b
  7230  001B98  6ED9               	movwf	fsr2l,c
  7231  001B9A  0E01               	movlw	high _dbuf
  7232  001B9C  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7233  001B9E  6EDA               	movwf	fsr2h,c
  7234  001BA0  0E2E               	movlw	46
  7235  001BA2  6EDF               	movwf	indf2,c
  7236  001BA4                     
  7237                           ; BSR set to: 0
  7238  001BA4  4BC1               	infsnz	efgtoa@n& (0+255),f,b
  7239  001BA6  2BC2               	incf	(efgtoa@n+1)& (0+255),f,b
  7240  001BA8                     l8904:
  7241                           
  7242                           ; BSR set to: 0
  7243                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  7244  001BA8  0E45               	movlw	low _dbuf
  7245  001BAA  25C1               	addwf	efgtoa@n& (0+255),w,b
  7246  001BAC  6ED9               	movwf	fsr2l,c
  7247  001BAE  0E01               	movlw	high _dbuf
  7248  001BB0  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7249  001BB2  6EDA               	movwf	fsr2h,c
  7250  001BB4  0E00               	movlw	0
  7251  001BB6  6EDF               	movwf	indf2,c
  7252  001BB8                     
  7253                           ; BSR set to: 0
  7254                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  7255  001BB8  0E65               	movlw	101
  7256  001BBA  19AF               	xorwf	efgtoa@nmode& (0+255),w,b
  7257  001BBC  A4D8               	btfss	status,2,c
  7258  001BBE  EFE3  F00D         	goto	u9881
  7259  001BC2  EFE5  F00D         	goto	u9880
  7260  001BC6                     u9881:
  7261  001BC6  EFB7  F00E         	goto	l8966
  7262  001BCA                     u9880:
  7263  001BCA                     
  7264                           ; BSR set to: 0
  7265                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  7266  001BCA  0E00               	movlw	0
  7267  001BCC  6FBA               	movwf	(efgtoa@i+1)& (0+255),b
  7268  001BCE  0E4F               	movlw	79
  7269  001BD0  6FB9               	movwf	efgtoa@i& (0+255),b
  7270  001BD2                     
  7271                           ; BSR set to: 0
  7272                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  7273  001BD2  0E45               	movlw	low _dbuf
  7274  001BD4  25B9               	addwf	efgtoa@i& (0+255),w,b
  7275  001BD6  6ED9               	movwf	fsr2l,c
  7276  001BD8  0E01               	movlw	high _dbuf
  7277  001BDA  21BA               	addwfc	(efgtoa@i+1)& (0+255),w,b
  7278  001BDC  6EDA               	movwf	fsr2h,c
  7279  001BDE  0E00               	movlw	0
  7280  001BE0  6EDF               	movwf	indf2,c
  7281  001BE2                     
  7282                           ; BSR set to: 0
  7283                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  7284  001BE2  0E00               	movlw	0
  7285  001BE4  6FAA               	movwf	(efgtoa@sign+1)& (0+255),b
  7286  001BE6  0E00               	movlw	0
  7287  001BE8  6FA9               	movwf	efgtoa@sign& (0+255),b
  7288  001BEA                     
  7289                           ; BSR set to: 0
  7290                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  7291  001BEA  BFC0               	btfsc	(efgtoa@e+1)& (0+255),7,b
  7292  001BEC  EFFC  F00D         	goto	u9890
  7293  001BF0  EFFA  F00D         	goto	u9891
  7294  001BF4                     u9891:
  7295  001BF4  EF04  F00E         	goto	l8920
  7296  001BF8                     u9890:
  7297  001BF8                     
  7298                           ; BSR set to: 0
  7299                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  7300  001BF8  0E00               	movlw	0
  7301  001BFA  6FAA               	movwf	(efgtoa@sign+1)& (0+255),b
  7302  001BFC  0E01               	movlw	1
  7303  001BFE  6FA9               	movwf	efgtoa@sign& (0+255),b
  7304  001C00                     
  7305                           ; BSR set to: 0
  7306                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  7307  001C00  6DBF               	negf	efgtoa@e& (0+255),b
  7308  001C02  1FC0               	comf	(efgtoa@e+1)& (0+255),f,b
  7309  001C04  B0D8               	btfsc	status,0,c
  7310  001C06  2BC0               	incf	(efgtoa@e+1)& (0+255),f,b
  7311  001C08                     l8920:
  7312                           
  7313                           ; BSR set to: 0
  7314                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  7315  001C08  0E00               	movlw	0
  7316  001C0A  6FAC               	movwf	(efgtoa@p+1)& (0+255),b
  7317  001C0C  0E02               	movlw	2
  7318  001C0E  6FAB               	movwf	efgtoa@p& (0+255),b
  7319                           
  7320                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  7321  001C10  EF35  F00E         	goto	l8932
  7322  001C14                     l8922:
  7323                           
  7324                           ; BSR set to: 0
  7325                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  7326  001C14  07B9               	decf	efgtoa@i& (0+255),f,b
  7327  001C16  A0D8               	btfss	status,0,c
  7328  001C18  07BA               	decf	(efgtoa@i+1)& (0+255),f,b
  7329  001C1A                     
  7330                           ; BSR set to: 0
  7331                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  7332  001C1A  0E45               	movlw	low _dbuf
  7333  001C1C  25B9               	addwf	efgtoa@i& (0+255),w,b
  7334  001C1E  6ED9               	movwf	fsr2l,c
  7335  001C20  0E01               	movlw	high _dbuf
  7336  001C22  21BA               	addwfc	(efgtoa@i+1)& (0+255),w,b
  7337  001C24  6EDA               	movwf	fsr2h,c
  7338  001C26  C0BF  F014         	movff	efgtoa@e,___awmod@dividend
  7339  001C2A  C0C0  F015         	movff	efgtoa@e+1,___awmod@dividend+1
  7340  001C2E  0E00               	movlw	0
  7341  001C30  6E17               	movwf	(___awmod@divisor+1)^0,c
  7342  001C32  0E0A               	movlw	10
  7343  001C34  6E16               	movwf	___awmod@divisor^0,c
  7344  001C36  EC3C  F02A         	call	___awmod	;wreg free
  7345  001C3A  5014               	movf	?___awmod^0,w,c
  7346  001C3C  0F30               	addlw	48
  7347  001C3E  6EDF               	movwf	indf2,c
  7348  001C40                     
  7349                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  7350  001C40  C0BF  F014         	movff	efgtoa@e,___awdiv@dividend
  7351  001C44  C0C0  F015         	movff	efgtoa@e+1,___awdiv@dividend+1
  7352  001C48  0E00               	movlw	0
  7353  001C4A  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7354  001C4C  0E0A               	movlw	10
  7355  001C4E  6E16               	movwf	___awdiv@divisor^0,c
  7356  001C50  EC19  F029         	call	___awdiv	;wreg free
  7357  001C54  C014  F0BF         	movff	?___awdiv,efgtoa@e
  7358  001C58  C015  F0C0         	movff	?___awdiv+1,efgtoa@e+1
  7359  001C5C                     
  7360                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  7361  001C5C  0100               	movlb	0	; () banked
  7362  001C5E  07AB               	decf	efgtoa@p& (0+255),f,b
  7363  001C60  A0D8               	btfss	status,0,c
  7364  001C62  07AC               	decf	(efgtoa@p+1)& (0+255),f,b
  7365  001C64                     
  7366                           ; BSR set to: 0
  7367                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  7368  001C64  07AD               	decf	efgtoa@w& (0+255),f,b
  7369  001C66  A0D8               	btfss	status,0,c
  7370  001C68  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  7371  001C6A                     l8932:
  7372                           
  7373                           ; BSR set to: 0
  7374                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  7375  001C6A  51BF               	movf	efgtoa@e& (0+255),w,b
  7376  001C6C  11C0               	iorwf	(efgtoa@e+1)& (0+255),w,b
  7377  001C6E  A4D8               	btfss	status,2,c
  7378  001C70  EF3C  F00E         	goto	u9901
  7379  001C74  EF3E  F00E         	goto	u9900
  7380  001C78                     u9901:
  7381  001C78  EF0A  F00E         	goto	l8922
  7382  001C7C                     u9900:
  7383  001C7C                     
  7384                           ; BSR set to: 0
  7385  001C7C  BFAC               	btfsc	(efgtoa@p+1)& (0+255),7,b
  7386  001C7E  EF4B  F00E         	goto	u9910
  7387  001C82  51AC               	movf	(efgtoa@p+1)& (0+255),w,b
  7388  001C84  E106               	bnz	u9911
  7389  001C86  05AB               	decf	efgtoa@p& (0+255),w,b
  7390  001C88  B0D8               	btfsc	status,0,c
  7391  001C8A  EF49  F00E         	goto	u9911
  7392  001C8E  EF4B  F00E         	goto	u9910
  7393  001C92                     u9911:
  7394  001C92  EF0A  F00E         	goto	l8922
  7395  001C96                     u9910:
  7396  001C96                     
  7397                           ; BSR set to: 0
  7398                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 514:         --i;
  7399  001C96  07B9               	decf	efgtoa@i& (0+255),f,b
  7400  001C98  A0D8               	btfss	status,0,c
  7401  001C9A  07BA               	decf	(efgtoa@i+1)& (0+255),f,b
  7402  001C9C                     
  7403                           ; BSR set to: 0
  7404                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  7405  001C9C  51A9               	movf	efgtoa@sign& (0+255),w,b
  7406  001C9E  11AA               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  7407  001CA0  A4D8               	btfss	status,2,c
  7408  001CA2  EF55  F00E         	goto	u9921
  7409  001CA6  EF57  F00E         	goto	u9920
  7410  001CAA                     u9921:
  7411  001CAA  EF5D  F00E         	goto	l8942
  7412  001CAE                     u9920:
  7413  001CAE                     
  7414                           ; BSR set to: 0
  7415  001CAE  0E00               	movlw	0
  7416  001CB0  6F96               	movwf	(_efgtoa$3577+1)& (0+255),b
  7417  001CB2  0E2B               	movlw	43
  7418  001CB4  6F95               	movwf	_efgtoa$3577& (0+255),b
  7419  001CB6  EF61  F00E         	goto	l8944
  7420  001CBA                     l8942:
  7421                           
  7422                           ; BSR set to: 0
  7423  001CBA  0E00               	movlw	0
  7424  001CBC  6F96               	movwf	(_efgtoa$3577+1)& (0+255),b
  7425  001CBE  0E2D               	movlw	45
  7426  001CC0  6F95               	movwf	_efgtoa$3577& (0+255),b
  7427  001CC2                     l8944:
  7428                           
  7429                           ; BSR set to: 0
  7430  001CC2  0E45               	movlw	low _dbuf
  7431  001CC4  25B9               	addwf	efgtoa@i& (0+255),w,b
  7432  001CC6  6ED9               	movwf	fsr2l,c
  7433  001CC8  0E01               	movlw	high _dbuf
  7434  001CCA  21BA               	addwfc	(efgtoa@i+1)& (0+255),w,b
  7435  001CCC  6EDA               	movwf	fsr2h,c
  7436  001CCE  0060  F257  FFDF   	movff	_efgtoa$3577,indf2
  7437  001CD4                     
  7438                           ; BSR set to: 0
  7439                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 516:         --w;
  7440  001CD4  07AD               	decf	efgtoa@w& (0+255),f,b
  7441  001CD6  A0D8               	btfss	status,0,c
  7442  001CD8  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  7443  001CDA                     
  7444                           ; BSR set to: 0
  7445                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 518:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  7446  001CDA  07B9               	decf	efgtoa@i& (0+255),f,b
  7447  001CDC  A0D8               	btfss	status,0,c
  7448  001CDE  07BA               	decf	(efgtoa@i+1)& (0+255),f,b
  7449  001CE0                     
  7450                           ; BSR set to: 0
  7451  001CE0  0EBF               	movlw	191
  7452  001CE2  6F8A               	movwf	??_efgtoa& (0+255),b
  7453  001CE4  0EFF               	movlw	255
  7454  001CE6  6F8B               	movwf	(??_efgtoa+1)& (0+255),b
  7455  001CE8  5189               	movf	efgtoa@c& (0+255),w,b
  7456  001CEA  6F8C               	movwf	(??_efgtoa+2)& (0+255),b
  7457  001CEC  6B8D               	clrf	(??_efgtoa+3)& (0+255),b
  7458  001CEE  518A               	movf	??_efgtoa& (0+255),w,b
  7459  001CF0  278C               	addwf	(??_efgtoa+2)& (0+255),f,b
  7460  001CF2  518B               	movf	(??_efgtoa+1)& (0+255),w,b
  7461  001CF4  238D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  7462  001CF6  518D               	movf	(??_efgtoa+3)& (0+255),w,b
  7463  001CF8  E10A               	bnz	u9930
  7464  001CFA  0E1A               	movlw	26
  7465  001CFC  5D8C               	subwf	(??_efgtoa+2)& (0+255),w,b
  7466  001CFE  A0D8               	btfss	status,0,c
  7467  001D00  EF84  F00E         	goto	u9931
  7468  001D04  EF87  F00E         	goto	u9930
  7469  001D08                     u9931:
  7470  001D08  0E01               	movlw	1
  7471  001D0A  EF88  F00E         	goto	u9940
  7472  001D0E                     u9930:
  7473  001D0E  0E00               	movlw	0
  7474  001D10                     u9940:
  7475  001D10  6F99               	movwf	_efgtoa$3579& (0+255),b
  7476  001D12  6B9A               	clrf	(_efgtoa$3579+1)& (0+255),b
  7477  001D14                     
  7478                           ; BSR set to: 0
  7479  001D14  5199               	movf	_efgtoa$3579& (0+255),w,b
  7480  001D16  119A               	iorwf	(_efgtoa$3579+1)& (0+255),w,b
  7481  001D18  A4D8               	btfss	status,2,c
  7482  001D1A  EF91  F00E         	goto	u9951
  7483  001D1E  EF93  F00E         	goto	u9950
  7484  001D22                     u9951:
  7485  001D22  EF99  F00E         	goto	l8958
  7486  001D26                     u9950:
  7487  001D26                     
  7488                           ; BSR set to: 0
  7489  001D26  0E00               	movlw	0
  7490  001D28  6F98               	movwf	(_efgtoa$3578+1)& (0+255),b
  7491  001D2A  0E65               	movlw	101
  7492  001D2C  6F97               	movwf	_efgtoa$3578& (0+255),b
  7493  001D2E  EF9D  F00E         	goto	l8960
  7494  001D32                     l8958:
  7495                           
  7496                           ; BSR set to: 0
  7497  001D32  0E00               	movlw	0
  7498  001D34  6F98               	movwf	(_efgtoa$3578+1)& (0+255),b
  7499  001D36  0E45               	movlw	69
  7500  001D38  6F97               	movwf	_efgtoa$3578& (0+255),b
  7501  001D3A                     l8960:
  7502                           
  7503                           ; BSR set to: 0
  7504  001D3A  0E45               	movlw	low _dbuf
  7505  001D3C  25B9               	addwf	efgtoa@i& (0+255),w,b
  7506  001D3E  6ED9               	movwf	fsr2l,c
  7507  001D40  0E01               	movlw	high _dbuf
  7508  001D42  21BA               	addwfc	(efgtoa@i+1)& (0+255),w,b
  7509  001D44  6EDA               	movwf	fsr2h,c
  7510  001D46  0060  F25F  FFDF   	movff	_efgtoa$3578,indf2
  7511  001D4C                     
  7512                           ; BSR set to: 0
  7513                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 519:         --w;
  7514  001D4C  07AD               	decf	efgtoa@w& (0+255),f,b
  7515  001D4E  A0D8               	btfss	status,0,c
  7516  001D50  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  7517  001D52                     
  7518                           ; BSR set to: 0
  7519                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  7520  001D52  0E45               	movlw	low _dbuf
  7521  001D54  25C1               	addwf	efgtoa@n& (0+255),w,b
  7522  001D56  6E14               	movwf	strcpy@dest^0,c
  7523  001D58  0E01               	movlw	high _dbuf
  7524  001D5A  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7525  001D5C  6E15               	movwf	(strcpy@dest+1)^0,c
  7526  001D5E  0E45               	movlw	low _dbuf
  7527  001D60  25B9               	addwf	efgtoa@i& (0+255),w,b
  7528  001D62  6E16               	movwf	strcpy@src^0,c
  7529  001D64  0E01               	movlw	high _dbuf
  7530  001D66  21BA               	addwfc	(efgtoa@i+1)& (0+255),w,b
  7531  001D68  6E17               	movwf	(strcpy@src+1)^0,c
  7532  001D6A  EC8C  F02C         	call	_strcpy	;wreg free
  7533  001D6E                     l8966:
  7534                           
  7535                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 524:     return p
      +                          ad(fp, &dbuf[0], w);
  7536  001D6E  C083  F026         	movff	efgtoa@fp,pad@fp
  7537  001D72  C084  F027         	movff	efgtoa@fp+1,pad@fp+1
  7538  001D76  0E45               	movlw	low _dbuf
  7539  001D78  6E28               	movwf	pad@buf^0,c
  7540  001D7A  0E01               	movlw	high _dbuf
  7541  001D7C  6E29               	movwf	(pad@buf+1)^0,c
  7542  001D7E  C0AD  F02A         	movff	efgtoa@w,pad@p
  7543  001D82  C0AE  F02B         	movff	efgtoa@w+1,pad@p+1
  7544  001D86  EC7B  F029         	call	_pad	;wreg free
  7545  001D8A  C026  F083         	movff	?_pad,?_efgtoa
  7546  001D8E  C027  F084         	movff	?_pad+1,?_efgtoa+1
  7547  001D92                     l2176:
  7548  001D92  0012               	return		;funcret
  7549  001D94                     __end_of_efgtoa:
  7550                           	callstack 0
  7551                           
  7552 ;; *************** function _tolower *****************
  7553 ;; Defined at:
  7554 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\tolower.c"
  7555 ;; Parameters:    Size  Location     Type
  7556 ;;  c               2   25[COMRAM] int 
  7557 ;; Auto vars:     Size  Location     Type
  7558 ;;		None
  7559 ;; Return value:  Size  Location     Type
  7560 ;;                  2   25[COMRAM] int 
  7561 ;; Registers used:
  7562 ;;		wreg, status,2, status,0
  7563 ;; Tracked objects:
  7564 ;;		On entry : 0/0
  7565 ;;		On exit  : 0/0
  7566 ;;		Unchanged: 0/0
  7567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7568 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7569 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7570 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7571 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7572 ;;Total ram usage:        8 bytes
  7573 ;; Hardware stack levels used: 1
  7574 ;; Hardware stack levels required when called: 9
  7575 ;; This function calls:
  7576 ;;		_isupper
  7577 ;; This function is called by:
  7578 ;;		_efgtoa
  7579 ;;		_vfpfcnvrt
  7580 ;; This function uses a non-reentrant model
  7581 ;;
  7582                           
  7583                           	psect	text21
  7584  0059E4                     __ptext21:
  7585                           	callstack 0
  7586  0059E4                     _tolower:
  7587                           	callstack 16
  7588  0059E4  0EBF               	movlw	191
  7589  0059E6  6E1C               	movwf	??_tolower^0,c
  7590  0059E8  0EFF               	movlw	255
  7591  0059EA  6E1D               	movwf	(??_tolower+1)^0,c
  7592  0059EC  C01A  F01E         	movff	tolower@c,??_tolower+2
  7593  0059F0  C01B  F01F         	movff	tolower@c+1,??_tolower+3
  7594  0059F4  501C               	movf	??_tolower^0,w,c
  7595  0059F6  261E               	addwf	(??_tolower+2)^0,f,c
  7596  0059F8  501D               	movf	(??_tolower+1)^0,w,c
  7597  0059FA  221F               	addwfc	(??_tolower+3)^0,f,c
  7598  0059FC  501F               	movf	(??_tolower+3)^0,w,c
  7599  0059FE  E10A               	bnz	u9140
  7600  005A00  0E1A               	movlw	26
  7601  005A02  5C1E               	subwf	(??_tolower+2)^0,w,c
  7602  005A04  A0D8               	btfss	status,0,c
  7603  005A06  EF07  F02D         	goto	u9141
  7604  005A0A  EF0A  F02D         	goto	u9140
  7605  005A0E                     u9141:
  7606  005A0E  0E01               	movlw	1
  7607  005A10  EF0B  F02D         	goto	u9150
  7608  005A14                     u9140:
  7609  005A14  0E00               	movlw	0
  7610  005A16                     u9150:
  7611  005A16  6E20               	movwf	_tolower$3698^0,c
  7612  005A18  6A21               	clrf	(_tolower$3698+1)^0,c
  7613  005A1A  5020               	movf	_tolower$3698^0,w,c
  7614  005A1C  1021               	iorwf	(_tolower$3698+1)^0,w,c
  7615  005A1E  B4D8               	btfsc	status,2,c
  7616  005A20  EF14  F02D         	goto	u9161
  7617  005A24  EF16  F02D         	goto	u9160
  7618  005A28                     u9161:
  7619  005A28  EF1D  F02D         	goto	l2374
  7620  005A2C                     u9160:
  7621  005A2C  0E20               	movlw	32
  7622  005A2E  101A               	iorwf	tolower@c^0,w,c
  7623  005A30  6E1A               	movwf	?_tolower^0,c
  7624  005A32  501B               	movf	(tolower@c+1)^0,w,c
  7625  005A34  6E1B               	movwf	(?_tolower+1)^0,c
  7626  005A36  EF21  F02D         	goto	l2379
  7627  005A3A                     l2374:
  7628  005A3A  C01A  F01A         	movff	tolower@c,?_tolower
  7629  005A3E  C01B  F01B         	movff	tolower@c+1,?_tolower+1
  7630  005A42                     l2379:
  7631  005A42  0012               	return		;funcret
  7632  005A44                     __end_of_tolower:
  7633                           	callstack 0
  7634                           
  7635 ;; *************** function _isupper *****************
  7636 ;; Defined at:
  7637 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isupper.c"
  7638 ;; Parameters:    Size  Location     Type
  7639 ;;  c               2   19[COMRAM] int 
  7640 ;; Auto vars:     Size  Location     Type
  7641 ;;		None
  7642 ;; Return value:  Size  Location     Type
  7643 ;;                  2   19[COMRAM] int 
  7644 ;; Registers used:
  7645 ;;		wreg, status,2, status,0
  7646 ;; Tracked objects:
  7647 ;;		On entry : 0/0
  7648 ;;		On exit  : 0/0
  7649 ;;		Unchanged: 0/0
  7650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7651 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7653 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7654 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7655 ;;Total ram usage:        6 bytes
  7656 ;; Hardware stack levels used: 1
  7657 ;; Hardware stack levels required when called: 8
  7658 ;; This function calls:
  7659 ;;		Nothing
  7660 ;; This function is called by:
  7661 ;;		_efgtoa
  7662 ;;		_vfpfcnvrt
  7663 ;;		_tolower
  7664 ;; This function uses a non-reentrant model
  7665 ;;
  7666                           
  7667                           	psect	text22
  7668  005E22                     __ptext22:
  7669                           	callstack 0
  7670  005E22                     _isupper:
  7671                           	callstack 16
  7672  005E22  0EBF               	movlw	191
  7673  005E24  6E16               	movwf	??_isupper^0,c
  7674  005E26  0EFF               	movlw	255
  7675  005E28  6E17               	movwf	(??_isupper+1)^0,c
  7676  005E2A  C014  F018         	movff	isupper@c,??_isupper+2
  7677  005E2E  C015  F019         	movff	isupper@c+1,??_isupper+3
  7678  005E32  5016               	movf	??_isupper^0,w,c
  7679  005E34  2618               	addwf	(??_isupper+2)^0,f,c
  7680  005E36  5017               	movf	(??_isupper+1)^0,w,c
  7681  005E38  2219               	addwfc	(??_isupper+3)^0,f,c
  7682  005E3A  5019               	movf	(??_isupper+3)^0,w,c
  7683  005E3C  E10A               	bnz	u8080
  7684  005E3E  0E1A               	movlw	26
  7685  005E40  5C18               	subwf	(??_isupper+2)^0,w,c
  7686  005E42  A0D8               	btfss	status,0,c
  7687  005E44  EF26  F02F         	goto	u8081
  7688  005E48  EF29  F02F         	goto	u8080
  7689  005E4C                     u8081:
  7690  005E4C  0E01               	movlw	1
  7691  005E4E  EF2A  F02F         	goto	u8090
  7692  005E52                     u8080:
  7693  005E52  0E00               	movlw	0
  7694  005E54                     u8090:
  7695  005E54  6E14               	movwf	?_isupper^0,c
  7696  005E56  6A15               	clrf	(?_isupper+1)^0,c
  7697  005E58  0012               	return		;funcret
  7698  005E5A                     __end_of_isupper:
  7699                           	callstack 0
  7700                           
  7701 ;; *************** function _strcpy *****************
  7702 ;; Defined at:
  7703 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strcpy.c"
  7704 ;; Parameters:    Size  Location     Type
  7705 ;;  dest            2   19[COMRAM] PTR unsigned char 
  7706 ;;		 -> dbuf(80), 
  7707 ;;  src             2   21[COMRAM] PTR const unsigned char 
  7708 ;;		 -> STR_19(4), STR_18(4), STR_15(4), STR_14(4), 
  7709 ;;		 -> dbuf(80), 
  7710 ;; Auto vars:     Size  Location     Type
  7711 ;;  d               2   27[COMRAM] PTR unsigned char 
  7712 ;;		 -> dbuf(80), 
  7713 ;;  s               2   25[COMRAM] PTR const unsigned char 
  7714 ;;		 -> STR_19(4), STR_18(4), STR_15(4), STR_14(4), 
  7715 ;;		 -> dbuf(80), 
  7716 ;; Return value:  Size  Location     Type
  7717 ;;                  2   19[COMRAM] PTR unsigned char 
  7718 ;; Registers used:
  7719 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  7720 ;; Tracked objects:
  7721 ;;		On entry : 0/0
  7722 ;;		On exit  : 0/0
  7723 ;;		Unchanged: 0/0
  7724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7725 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7726 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7727 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7728 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7729 ;;Total ram usage:       10 bytes
  7730 ;; Hardware stack levels used: 1
  7731 ;; Hardware stack levels required when called: 8
  7732 ;; This function calls:
  7733 ;;		Nothing
  7734 ;; This function is called by:
  7735 ;;		_efgtoa
  7736 ;; This function uses a non-reentrant model
  7737 ;;
  7738                           
  7739                           	psect	text23
  7740  005918                     __ptext23:
  7741                           	callstack 0
  7742  005918                     _strcpy:
  7743                           	callstack 16
  7744  005918  C016  F01A         	movff	strcpy@src,strcpy@s
  7745  00591C  C017  F01B         	movff	strcpy@src+1,strcpy@s+1
  7746  005920  C014  F01C         	movff	strcpy@dest,strcpy@d
  7747  005924  C015  F01D         	movff	strcpy@dest+1,strcpy@d+1
  7748  005928                     l8560:
  7749  005928  501A               	movf	strcpy@s^0,w,c
  7750  00592A  6E18               	movwf	??_strcpy^0,c
  7751  00592C  501B               	movf	(strcpy@s+1)^0,w,c
  7752  00592E  6E19               	movwf	(??_strcpy+1)^0,c
  7753  005930  4A1A               	infsnz	strcpy@s^0,f,c
  7754  005932  2A1B               	incf	(strcpy@s+1)^0,f,c
  7755  005934  0060  F063  FFF6   	movff	??_strcpy,tblptrl
  7756  00593A  0060  F067  FFF7   	movff	??_strcpy+1,tblptrh
  7757  005940  0E00               	movlw	low (__smallconst shr (0+16))
  7758  005942  6EF8               	movwf	tblptru,c
  7759  005944  0060  F073  FFD9   	movff	strcpy@d,fsr2l
  7760  00594A  0060  F077  FFDA   	movff	strcpy@d+1,fsr2h
  7761  005950  4A1C               	infsnz	strcpy@d^0,f,c
  7762  005952  2A1D               	incf	(strcpy@d+1)^0,f,c
  7763  005954  0E0F               	movlw	(high __ramtop+-1)
  7764  005956  64F7               	cpfsgt	tblptrh,c
  7765  005958  D003               	bra	u9127
  7766  00595A  0008               	tblrd		*
  7767  00595C  50F5               	movf	tablat,w,c
  7768  00595E  D007               	bra	u9120
  7769  005960                     u9127:
  7770  005960  006F FFDB FFE1     	movff	tblptrl,fsr1l
  7771  005966  006F FFDF FFE2     	movff	tblptrh,fsr1h
  7772  00596C  50E7               	movf	indf1,w,c
  7773  00596E                     u9120:
  7774  00596E  6EDF               	movwf	indf2,c
  7775  005970  50DF               	movf	indf2,w,c
  7776  005972  A4D8               	btfss	status,2,c
  7777  005974  EFBE  F02C         	goto	u9131
  7778  005978  EFC0  F02C         	goto	u9130
  7779  00597C                     u9131:
  7780  00597C  EF94  F02C         	goto	l8560
  7781  005980                     u9130:
  7782  005980  0012               	return		;funcret
  7783  005982                     __end_of_strcpy:
  7784                           	callstack 0
  7785                           
  7786 ;; *************** function _floorf *****************
  7787 ;; Defined at:
  7788 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\floorf.c"
  7789 ;; Parameters:    Size  Location     Type
  7790 ;;  x               4   53[COMRAM] float 
  7791 ;; Auto vars:     Size  Location     Type
  7792 ;;  u               4   25[BANK0 ] struct .
  7793 ;;  m               4   19[BANK0 ] unsigned long 
  7794 ;;  e               2   23[BANK0 ] int 
  7795 ;; Return value:  Size  Location     Type
  7796 ;;                  4   53[COMRAM] float 
  7797 ;; Registers used:
  7798 ;;		wreg, status,2, status,0
  7799 ;; Tracked objects:
  7800 ;;		On entry : 0/0
  7801 ;;		On exit  : 0/0
  7802 ;;		Unchanged: 0/0
  7803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7804 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7805 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7806 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7807 ;;      Totals:         4      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7808 ;;Total ram usage:       20 bytes
  7809 ;; Hardware stack levels used: 1
  7810 ;; Hardware stack levels required when called: 8
  7811 ;; This function calls:
  7812 ;;		Nothing
  7813 ;; This function is called by:
  7814 ;;		_efgtoa
  7815 ;; This function uses a non-reentrant model
  7816 ;;
  7817                           
  7818                           	psect	text24
  7819  003A80                     __ptext24:
  7820                           	callstack 0
  7821  003A80                     _floorf:
  7822                           	callstack 16
  7823  003A80  C118  F079         	movff	floorf@F527,floorf@u
  7824  003A84  C119  F07A         	movff	floorf@F527+1,floorf@u+1
  7825  003A88  C11A  F07B         	movff	floorf@F527+2,floorf@u+2
  7826  003A8C  C11B  F07C         	movff	floorf@F527+3,floorf@u+3
  7827  003A90  C036  F079         	movff	floorf@x,floorf@u
  7828  003A94  C037  F07A         	movff	floorf@x+1,floorf@u+1
  7829  003A98  C038  F07B         	movff	floorf@x+2,floorf@u+2
  7830  003A9C  C039  F07C         	movff	floorf@x+3,floorf@u+3
  7831  003AA0  0E81               	movlw	129
  7832  003AA2  0100               	movlb	0	; () banked
  7833  003AA4  6F6D               	movwf	??_floorf& (0+255),b
  7834  003AA6  0EFF               	movlw	255
  7835  003AA8  6F6E               	movwf	(??_floorf+1)& (0+255),b
  7836  003AAA  C079  F06F         	movff	floorf@u,??_floorf+2
  7837  003AAE  C07A  F070         	movff	floorf@u+1,??_floorf+3
  7838  003AB2  C07B  F071         	movff	floorf@u+2,??_floorf+4
  7839  003AB6  C07C  F072         	movff	floorf@u+3,??_floorf+5
  7840  003ABA  0E18               	movlw	24
  7841  003ABC  EF65  F01D         	goto	u9170
  7842  003AC0                     u9175:
  7843  003AC0  90D8               	bcf	status,0,c
  7844  003AC2  3372               	rrcf	(??_floorf+5)& (0+255),f,b
  7845  003AC4  3371               	rrcf	(??_floorf+4)& (0+255),f,b
  7846  003AC6  3370               	rrcf	(??_floorf+3)& (0+255),f,b
  7847  003AC8  336F               	rrcf	(??_floorf+2)& (0+255),f,b
  7848  003ACA                     u9170:
  7849  003ACA  2EE8               	decfsz	wreg,f,c
  7850  003ACC  EF60  F01D         	goto	u9175
  7851  003AD0  516F               	movf	(??_floorf+2)& (0+255),w,b
  7852  003AD2  256D               	addwf	??_floorf& (0+255),w,b
  7853  003AD4  6F77               	movwf	floorf@e& (0+255),b
  7854  003AD6  0E00               	movlw	0
  7855  003AD8  216E               	addwfc	(??_floorf+1)& (0+255),w,b
  7856  003ADA  6F78               	movwf	(floorf@e+1)& (0+255),b
  7857  003ADC  BF78               	btfsc	(floorf@e+1)& (0+255),7,b
  7858  003ADE  EF7A  F01D         	goto	u9181
  7859  003AE2  5178               	movf	(floorf@e+1)& (0+255),w,b
  7860  003AE4  E109               	bnz	u9180
  7861  003AE6  0E17               	movlw	23
  7862  003AE8  5D77               	subwf	floorf@e& (0+255),w,b
  7863  003AEA  A0D8               	btfss	status,0,c
  7864  003AEC  EF7A  F01D         	goto	u9181
  7865  003AF0  EF7C  F01D         	goto	u9180
  7866  003AF4                     u9181:
  7867  003AF4  EF86  F01D         	goto	l8578
  7868  003AF8                     u9180:
  7869  003AF8                     l8576:
  7870                           
  7871                           ; BSR set to: 0
  7872  003AF8  C036  F036         	movff	floorf@x,?_floorf
  7873  003AFC  C037  F037         	movff	floorf@x+1,?_floorf+1
  7874  003B00  C038  F038         	movff	floorf@x+2,?_floorf+2
  7875  003B04  C039  F039         	movff	floorf@x+3,?_floorf+3
  7876  003B08  EF4A  F01E         	goto	l2315
  7877  003B0C                     l8578:
  7878                           
  7879                           ; BSR set to: 0
  7880  003B0C  BF78               	btfsc	(floorf@e+1)& (0+255),7,b
  7881  003B0E  EF8B  F01D         	goto	u9191
  7882  003B12  EF8D  F01D         	goto	u9190
  7883  003B16                     u9191:
  7884  003B16  EFFE  F01D         	goto	l8588
  7885  003B1A                     u9190:
  7886  003B1A                     
  7887                           ; BSR set to: 0
  7888  003B1A  C077  F06D         	movff	floorf@e,??_floorf
  7889  003B1E  0EFF               	movlw	255
  7890  003B20  6F6E               	movwf	(??_floorf+1)& (0+255),b
  7891  003B22  0EFF               	movlw	255
  7892  003B24  6F6F               	movwf	(??_floorf+2)& (0+255),b
  7893  003B26  0E7F               	movlw	127
  7894  003B28  6F70               	movwf	(??_floorf+3)& (0+255),b
  7895  003B2A  0E00               	movlw	0
  7896  003B2C  6F71               	movwf	(??_floorf+4)& (0+255),b
  7897  003B2E                     u9205:
  7898  003B2E  676D               	tstfsz	??_floorf& (0+255),b
  7899  003B30  EF9C  F01D         	goto	u9206
  7900  003B34  EFA4  F01D         	goto	u9207
  7901  003B38                     u9206:
  7902  003B38  3571               	rlcf	(??_floorf+4)& (0+255),w,b
  7903  003B3A  3371               	rrcf	(??_floorf+4)& (0+255),f,b
  7904  003B3C  3370               	rrcf	(??_floorf+3)& (0+255),f,b
  7905  003B3E  336F               	rrcf	(??_floorf+2)& (0+255),f,b
  7906  003B40  336E               	rrcf	(??_floorf+1)& (0+255),f,b
  7907  003B42  2F6D               	decfsz	??_floorf& (0+255),f,b
  7908  003B44  EF97  F01D         	goto	u9205
  7909  003B48                     u9207:
  7910  003B48  C06E  F073         	movff	??_floorf+1,floorf@m
  7911  003B4C  C06F  F074         	movff	??_floorf+2,floorf@m+1
  7912  003B50  C070  F075         	movff	??_floorf+3,floorf@m+2
  7913  003B54  C071  F076         	movff	??_floorf+4,floorf@m+3
  7914  003B58  0100               	movlb	0	; () banked
  7915  003B5A  5173               	movf	floorf@m& (0+255),w,b
  7916  003B5C  1579               	andwf	floorf@u& (0+255),w,b
  7917  003B5E  6F6D               	movwf	??_floorf& (0+255),b
  7918  003B60  5174               	movf	(floorf@m+1)& (0+255),w,b
  7919  003B62  157A               	andwf	(floorf@u+1)& (0+255),w,b
  7920  003B64  6F6E               	movwf	(??_floorf+1)& (0+255),b
  7921  003B66  5175               	movf	(floorf@m+2)& (0+255),w,b
  7922  003B68  157B               	andwf	(floorf@u+2)& (0+255),w,b
  7923  003B6A  6F6F               	movwf	(??_floorf+2)& (0+255),b
  7924  003B6C  5176               	movf	(floorf@m+3)& (0+255),w,b
  7925  003B6E  157C               	andwf	(floorf@u+3)& (0+255),w,b
  7926  003B70  6F70               	movwf	(??_floorf+3)& (0+255),b
  7927  003B72  516D               	movf	??_floorf& (0+255),w,b
  7928  003B74  116E               	iorwf	(??_floorf+1)& (0+255),w,b
  7929  003B76  116F               	iorwf	(??_floorf+2)& (0+255),w,b
  7930  003B78  1170               	iorwf	(??_floorf+3)& (0+255),w,b
  7931  003B7A  A4D8               	btfss	status,2,c
  7932  003B7C  EFC2  F01D         	goto	u9211
  7933  003B80  EFC4  F01D         	goto	u9210
  7934  003B84                     u9211:
  7935  003B84  EFC6  F01D         	goto	l8584
  7936  003B88                     u9210:
  7937  003B88  EF7C  F01D         	goto	l8576
  7938  003B8C                     l8584:
  7939                           
  7940                           ; BSR set to: 0
  7941  003B8C  C079  F06D         	movff	floorf@u,??_floorf
  7942  003B90  C07A  F06E         	movff	floorf@u+1,??_floorf+1
  7943  003B94  C07B  F06F         	movff	floorf@u+2,??_floorf+2
  7944  003B98  C07C  F070         	movff	floorf@u+3,??_floorf+3
  7945  003B9C  0E20               	movlw	32
  7946  003B9E  EFD6  F01D         	goto	u9220
  7947  003BA2                     u9225:
  7948  003BA2  90D8               	bcf	status,0,c
  7949  003BA4  3370               	rrcf	(??_floorf+3)& (0+255),f,b
  7950  003BA6  336F               	rrcf	(??_floorf+2)& (0+255),f,b
  7951  003BA8  336E               	rrcf	(??_floorf+1)& (0+255),f,b
  7952  003BAA  336D               	rrcf	??_floorf& (0+255),f,b
  7953  003BAC                     u9220:
  7954  003BAC  2EE8               	decfsz	wreg,f,c
  7955  003BAE  EFD1  F01D         	goto	u9225
  7956  003BB2  516D               	movf	??_floorf& (0+255),w,b
  7957  003BB4  116E               	iorwf	(??_floorf+1)& (0+255),w,b
  7958  003BB6  116F               	iorwf	(??_floorf+2)& (0+255),w,b
  7959  003BB8  1170               	iorwf	(??_floorf+3)& (0+255),w,b
  7960  003BBA  B4D8               	btfsc	status,2,c
  7961  003BBC  EFE2  F01D         	goto	u9231
  7962  003BC0  EFE4  F01D         	goto	u9230
  7963  003BC4                     u9231:
  7964  003BC4  EFEC  F01D         	goto	l2318
  7965  003BC8                     u9230:
  7966  003BC8                     
  7967                           ; BSR set to: 0
  7968  003BC8  5173               	movf	floorf@m& (0+255),w,b
  7969  003BCA  2779               	addwf	floorf@u& (0+255),f,b
  7970  003BCC  5174               	movf	(floorf@m+1)& (0+255),w,b
  7971  003BCE  237A               	addwfc	(floorf@u+1)& (0+255),f,b
  7972  003BD0  5175               	movf	(floorf@m+2)& (0+255),w,b
  7973  003BD2  237B               	addwfc	(floorf@u+2)& (0+255),f,b
  7974  003BD4  5176               	movf	(floorf@m+3)& (0+255),w,b
  7975  003BD6  237C               	addwfc	(floorf@u+3)& (0+255),f,b
  7976  003BD8                     l2318:
  7977                           
  7978                           ; BSR set to: 0
  7979  003BD8  1D73               	comf	floorf@m& (0+255),w,b
  7980  003BDA  6F6D               	movwf	??_floorf& (0+255),b
  7981  003BDC  1D74               	comf	(floorf@m+1)& (0+255),w,b
  7982  003BDE  6F6E               	movwf	(??_floorf+1)& (0+255),b
  7983  003BE0  1D75               	comf	(floorf@m+2)& (0+255),w,b
  7984  003BE2  6F6F               	movwf	(??_floorf+2)& (0+255),b
  7985  003BE4  1D76               	comf	(floorf@m+3)& (0+255),w,b
  7986  003BE6  6F70               	movwf	(??_floorf+3)& (0+255),b
  7987  003BE8  516D               	movf	??_floorf& (0+255),w,b
  7988  003BEA  1779               	andwf	floorf@u& (0+255),f,b
  7989  003BEC  516E               	movf	(??_floorf+1)& (0+255),w,b
  7990  003BEE  177A               	andwf	(floorf@u+1)& (0+255),f,b
  7991  003BF0  516F               	movf	(??_floorf+2)& (0+255),w,b
  7992  003BF2  177B               	andwf	(floorf@u+2)& (0+255),f,b
  7993  003BF4  5170               	movf	(??_floorf+3)& (0+255),w,b
  7994  003BF6  177C               	andwf	(floorf@u+3)& (0+255),f,b
  7995  003BF8  EF42  F01E         	goto	l8596
  7996  003BFC                     l8588:
  7997                           
  7998                           ; BSR set to: 0
  7999  003BFC  C079  F06D         	movff	floorf@u,??_floorf
  8000  003C00  C07A  F06E         	movff	floorf@u+1,??_floorf+1
  8001  003C04  C07B  F06F         	movff	floorf@u+2,??_floorf+2
  8002  003C08  C07C  F070         	movff	floorf@u+3,??_floorf+3
  8003  003C0C  0E20               	movlw	32
  8004  003C0E  EF0E  F01E         	goto	u9240
  8005  003C12                     u9245:
  8006  003C12  90D8               	bcf	status,0,c
  8007  003C14  3370               	rrcf	(??_floorf+3)& (0+255),f,b
  8008  003C16  336F               	rrcf	(??_floorf+2)& (0+255),f,b
  8009  003C18  336E               	rrcf	(??_floorf+1)& (0+255),f,b
  8010  003C1A  336D               	rrcf	??_floorf& (0+255),f,b
  8011  003C1C                     u9240:
  8012  003C1C  2EE8               	decfsz	wreg,f,c
  8013  003C1E  EF09  F01E         	goto	u9245
  8014  003C22  516D               	movf	??_floorf& (0+255),w,b
  8015  003C24  116E               	iorwf	(??_floorf+1)& (0+255),w,b
  8016  003C26  116F               	iorwf	(??_floorf+2)& (0+255),w,b
  8017  003C28  1170               	iorwf	(??_floorf+3)& (0+255),w,b
  8018  003C2A  A4D8               	btfss	status,2,c
  8019  003C2C  EF1A  F01E         	goto	u9251
  8020  003C30  EF1C  F01E         	goto	u9250
  8021  003C34                     u9251:
  8022  003C34  EF26  F01E         	goto	l8592
  8023  003C38                     u9250:
  8024  003C38                     
  8025                           ; BSR set to: 0
  8026  003C38  0E00               	movlw	0
  8027  003C3A  6F79               	movwf	floorf@u& (0+255),b
  8028  003C3C  0E00               	movlw	0
  8029  003C3E  6F7A               	movwf	(floorf@u+1)& (0+255),b
  8030  003C40  0E00               	movlw	0
  8031  003C42  6F7B               	movwf	(floorf@u+2)& (0+255),b
  8032  003C44  0E00               	movlw	0
  8033  003C46  6F7C               	movwf	(floorf@u+3)& (0+255),b
  8034  003C48  EF42  F01E         	goto	l8596
  8035  003C4C                     l8592:
  8036                           
  8037                           ; BSR set to: 0
  8038  003C4C  90D8               	bcf	status,0,c
  8039  003C4E  3579               	rlcf	floorf@u& (0+255),w,b
  8040  003C50  6F6D               	movwf	??_floorf& (0+255),b
  8041  003C52  357A               	rlcf	(floorf@u+1)& (0+255),w,b
  8042  003C54  6F6E               	movwf	(??_floorf+1)& (0+255),b
  8043  003C56  357B               	rlcf	(floorf@u+2)& (0+255),w,b
  8044  003C58  6F6F               	movwf	(??_floorf+2)& (0+255),b
  8045  003C5A  357C               	rlcf	(floorf@u+3)& (0+255),w,b
  8046  003C5C  6F70               	movwf	(??_floorf+3)& (0+255),b
  8047  003C5E  516D               	movf	??_floorf& (0+255),w,b
  8048  003C60  116E               	iorwf	(??_floorf+1)& (0+255),w,b
  8049  003C62  116F               	iorwf	(??_floorf+2)& (0+255),w,b
  8050  003C64  1170               	iorwf	(??_floorf+3)& (0+255),w,b
  8051  003C66  B4D8               	btfsc	status,2,c
  8052  003C68  EF38  F01E         	goto	u9261
  8053  003C6C  EF3A  F01E         	goto	u9260
  8054  003C70                     u9261:
  8055  003C70  EF42  F01E         	goto	l8596
  8056  003C74                     u9260:
  8057  003C74                     
  8058                           ; BSR set to: 0
  8059  003C74  0E00               	movlw	0
  8060  003C76  6F79               	movwf	floorf@u& (0+255),b
  8061  003C78  0E00               	movlw	0
  8062  003C7A  6F7A               	movwf	(floorf@u+1)& (0+255),b
  8063  003C7C  0E80               	movlw	128
  8064  003C7E  6F7B               	movwf	(floorf@u+2)& (0+255),b
  8065  003C80  0EBF               	movlw	191
  8066  003C82  6F7C               	movwf	(floorf@u+3)& (0+255),b
  8067  003C84                     l8596:
  8068                           
  8069                           ; BSR set to: 0
  8070  003C84  C079  F036         	movff	floorf@u,?_floorf
  8071  003C88  C07A  F037         	movff	floorf@u+1,?_floorf+1
  8072  003C8C  C07B  F038         	movff	floorf@u+2,?_floorf+2
  8073  003C90  C07C  F039         	movff	floorf@u+3,?_floorf+3
  8074  003C94                     l2315:
  8075                           
  8076                           ; BSR set to: 0
  8077  003C94  0012               	return		;funcret
  8078  003C96                     __end_of_floorf:
  8079                           	callstack 0
  8080                           
  8081 ;; *************** function ___fpclassifyf *****************
  8082 ;; Defined at:
  8083 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__fpclassifyf.c"
  8084 ;; Parameters:    Size  Location     Type
  8085 ;;  x               4   19[COMRAM] float 
  8086 ;; Auto vars:     Size  Location     Type
  8087 ;;  u               4   29[COMRAM] struct .
  8088 ;;  e               2   27[COMRAM] int 
  8089 ;; Return value:  Size  Location     Type
  8090 ;;                  2   19[COMRAM] int 
  8091 ;; Registers used:
  8092 ;;		wreg, status,2, status,0
  8093 ;; Tracked objects:
  8094 ;;		On entry : 0/0
  8095 ;;		On exit  : 0/0
  8096 ;;		Unchanged: 0/0
  8097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8098 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8099 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8100 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8101 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8102 ;;Total ram usage:       14 bytes
  8103 ;; Hardware stack levels used: 1
  8104 ;; Hardware stack levels required when called: 8
  8105 ;; This function calls:
  8106 ;;		Nothing
  8107 ;; This function is called by:
  8108 ;;		_efgtoa
  8109 ;; This function uses a non-reentrant model
  8110 ;;
  8111                           
  8112                           	psect	text25
  8113  004C08                     __ptext25:
  8114                           	callstack 0
  8115  004C08                     ___fpclassifyf:
  8116                           	callstack 16
  8117  004C08  C11C  F01E         	movff	___fpclassifyf@F465,___fpclassifyf@u
  8118  004C0C  C11D  F01F         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  8119  004C10  C11E  F020         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  8120  004C14  C11F  F021         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  8121  004C18  C014  F01E         	movff	___fpclassifyf@x,___fpclassifyf@u
  8122  004C1C  C015  F01F         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  8123  004C20  C016  F020         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  8124  004C24  C017  F021         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  8125  004C28  C01E  F018         	movff	___fpclassifyf@u,??___fpclassifyf
  8126  004C2C  C01F  F019         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  8127  004C30  C020  F01A         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  8128  004C34  C021  F01B         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  8129  004C38  0E18               	movlw	24
  8130  004C3A  EF24  F026         	goto	u9050
  8131  004C3E                     u9055:
  8132  004C3E  90D8               	bcf	status,0,c
  8133  004C40  321B               	rrcf	(??___fpclassifyf+3)^0,f,c
  8134  004C42  321A               	rrcf	(??___fpclassifyf+2)^0,f,c
  8135  004C44  3219               	rrcf	(??___fpclassifyf+1)^0,f,c
  8136  004C46  3218               	rrcf	??___fpclassifyf^0,f,c
  8137  004C48                     u9050:
  8138  004C48  2EE8               	decfsz	wreg,f,c
  8139  004C4A  EF1F  F026         	goto	u9055
  8140  004C4E  5018               	movf	??___fpclassifyf^0,w,c
  8141  004C50  6E1C               	movwf	___fpclassifyf@e^0,c
  8142  004C52  6A1D               	clrf	(___fpclassifyf@e+1)^0,c
  8143  004C54  501C               	movf	___fpclassifyf@e^0,w,c
  8144  004C56  101D               	iorwf	(___fpclassifyf@e+1)^0,w,c
  8145  004C58  A4D8               	btfss	status,2,c
  8146  004C5A  EF31  F026         	goto	u9061
  8147  004C5E  EF33  F026         	goto	u9060
  8148  004C62                     u9061:
  8149  004C62  EF53  F026         	goto	l8548
  8150  004C66                     u9060:
  8151  004C66  90D8               	bcf	status,0,c
  8152  004C68  341E               	rlcf	___fpclassifyf@u^0,w,c
  8153  004C6A  6E18               	movwf	??___fpclassifyf^0,c
  8154  004C6C  341F               	rlcf	(___fpclassifyf@u+1)^0,w,c
  8155  004C6E  6E19               	movwf	(??___fpclassifyf+1)^0,c
  8156  004C70  3420               	rlcf	(___fpclassifyf@u+2)^0,w,c
  8157  004C72  6E1A               	movwf	(??___fpclassifyf+2)^0,c
  8158  004C74  3421               	rlcf	(___fpclassifyf@u+3)^0,w,c
  8159  004C76  6E1B               	movwf	(??___fpclassifyf+3)^0,c
  8160  004C78  5018               	movf	??___fpclassifyf^0,w,c
  8161  004C7A  1019               	iorwf	(??___fpclassifyf+1)^0,w,c
  8162  004C7C  101A               	iorwf	(??___fpclassifyf+2)^0,w,c
  8163  004C7E  101B               	iorwf	(??___fpclassifyf+3)^0,w,c
  8164  004C80  A4D8               	btfss	status,2,c
  8165  004C82  EF45  F026         	goto	u9071
  8166  004C86  EF47  F026         	goto	u9070
  8167  004C8A                     u9071:
  8168  004C8A  EF4D  F026         	goto	l8544
  8169  004C8E                     u9070:
  8170  004C8E  0E00               	movlw	0
  8171  004C90  6E15               	movwf	(?___fpclassifyf+1)^0,c
  8172  004C92  0E02               	movlw	2
  8173  004C94  6E14               	movwf	?___fpclassifyf^0,c
  8174  004C96  EF82  F026         	goto	l2301
  8175  004C9A                     l8544:
  8176  004C9A  0E00               	movlw	0
  8177  004C9C  6E15               	movwf	(?___fpclassifyf+1)^0,c
  8178  004C9E  0E03               	movlw	3
  8179  004CA0  6E14               	movwf	?___fpclassifyf^0,c
  8180  004CA2  EF82  F026         	goto	l2301
  8181  004CA6                     l8548:
  8182  004CA6  281C               	incf	___fpclassifyf@e^0,w,c
  8183  004CA8  101D               	iorwf	(___fpclassifyf@e+1)^0,w,c
  8184  004CAA  A4D8               	btfss	status,2,c
  8185  004CAC  EF5A  F026         	goto	u9081
  8186  004CB0  EF5C  F026         	goto	u9080
  8187  004CB4                     u9081:
  8188  004CB4  EF7E  F026         	goto	l8554
  8189  004CB8                     u9080:
  8190  004CB8  C01E  F018         	movff	___fpclassifyf@u,??___fpclassifyf
  8191  004CBC  C01F  F019         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  8192  004CC0  C020  F01A         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  8193  004CC4  C021  F01B         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  8194  004CC8  0E09               	movlw	9
  8195  004CCA                     u9095:
  8196  004CCA  90D8               	bcf	status,0,c
  8197  004CCC  3618               	rlcf	??___fpclassifyf^0,f,c
  8198  004CCE  3619               	rlcf	(??___fpclassifyf+1)^0,f,c
  8199  004CD0  361A               	rlcf	(??___fpclassifyf+2)^0,f,c
  8200  004CD2  361B               	rlcf	(??___fpclassifyf+3)^0,f,c
  8201  004CD4  2EE8               	decfsz	wreg,f,c
  8202  004CD6  EF65  F026         	goto	u9095
  8203  004CDA  5018               	movf	??___fpclassifyf^0,w,c
  8204  004CDC  1019               	iorwf	(??___fpclassifyf+1)^0,w,c
  8205  004CDE  101A               	iorwf	(??___fpclassifyf+2)^0,w,c
  8206  004CE0  101B               	iorwf	(??___fpclassifyf+3)^0,w,c
  8207  004CE2  B4D8               	btfsc	status,2,c
  8208  004CE4  EF76  F026         	goto	u9101
  8209  004CE8  EF79  F026         	goto	u9100
  8210  004CEC                     u9101:
  8211  004CEC  0E01               	movlw	1
  8212  004CEE  EF7A  F026         	goto	u9110
  8213  004CF2                     u9100:
  8214  004CF2  0E00               	movlw	0
  8215  004CF4                     u9110:
  8216  004CF4  6E14               	movwf	?___fpclassifyf^0,c
  8217  004CF6  6A15               	clrf	(?___fpclassifyf+1)^0,c
  8218  004CF8  EF82  F026         	goto	l2301
  8219  004CFC                     l8554:
  8220  004CFC  0E00               	movlw	0
  8221  004CFE  6E15               	movwf	(?___fpclassifyf+1)^0,c
  8222  004D00  0E04               	movlw	4
  8223  004D02  6E14               	movwf	?___fpclassifyf^0,c
  8224  004D04                     l2301:
  8225  004D04  0012               	return		;funcret
  8226  004D06                     __end_of___fpclassifyf:
  8227                           	callstack 0
  8228                           
  8229 ;; *************** function ___flsub *****************
  8230 ;; Defined at:
  8231 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  8232 ;; Parameters:    Size  Location     Type
  8233 ;;  b               4   25[BANK0 ] int 
  8234 ;;  a               4   29[BANK0 ] int 
  8235 ;; Auto vars:     Size  Location     Type
  8236 ;;		None
  8237 ;; Return value:  Size  Location     Type
  8238 ;;                  4   25[BANK0 ] int 
  8239 ;; Registers used:
  8240 ;;		wreg, status,2, status,0, cstack
  8241 ;; Tracked objects:
  8242 ;;		On entry : 0/0
  8243 ;;		On exit  : 0/0
  8244 ;;		Unchanged: 0/0
  8245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8246 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8249 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8250 ;;Total ram usage:        8 bytes
  8251 ;; Hardware stack levels used: 1
  8252 ;; Hardware stack levels required when called: 9
  8253 ;; This function calls:
  8254 ;;		___fladd
  8255 ;; This function is called by:
  8256 ;;		_efgtoa
  8257 ;; This function uses a non-reentrant model
  8258 ;;
  8259                           
  8260                           	psect	text26
  8261  005C1E                     __ptext26:
  8262                           	callstack 0
  8263  005C1E                     ___flsub:
  8264                           	callstack 15
  8265  005C1E  0E00               	movlw	0
  8266  005C20  0100               	movlb	0	; () banked
  8267  005C22  1B7D               	xorwf	___flsub@a& (0+255),f,b
  8268  005C24  0E00               	movlw	0
  8269  005C26  1B7E               	xorwf	(___flsub@a+1)& (0+255),f,b
  8270  005C28  0E00               	movlw	0
  8271  005C2A  1B7F               	xorwf	(___flsub@a+2)& (0+255),f,b
  8272  005C2C  0E80               	movlw	128
  8273  005C2E  1B80               	xorwf	(___flsub@a+3)& (0+255),f,b
  8274  005C30                     
  8275                           ; BSR set to: 0
  8276  005C30  C079  F06D         	movff	___flsub@b,___fladd@b
  8277  005C34  C07A  F06E         	movff	___flsub@b+1,___fladd@b+1
  8278  005C38  C07B  F06F         	movff	___flsub@b+2,___fladd@b+2
  8279  005C3C  C07C  F070         	movff	___flsub@b+3,___fladd@b+3
  8280  005C40  C07D  F071         	movff	___flsub@a,___fladd@a
  8281  005C44  C07E  F072         	movff	___flsub@a+1,___fladd@a+1
  8282  005C48  C07F  F073         	movff	___flsub@a+2,___fladd@a+2
  8283  005C4C  C080  F074         	movff	___flsub@a+3,___fladd@a+3
  8284  005C50  ECBF  F011         	call	___fladd	;wreg free
  8285  005C54  C06D  F079         	movff	?___fladd,?___flsub
  8286  005C58  C06E  F07A         	movff	?___fladd+1,?___flsub+1
  8287  005C5C  C06F  F07B         	movff	?___fladd+2,?___flsub+2
  8288  005C60  C070  F07C         	movff	?___fladd+3,?___flsub+3
  8289  005C64  0012               	return		;funcret
  8290  005C66                     __end_of___flsub:
  8291                           	callstack 0
  8292                           
  8293 ;; *************** function ___flneg *****************
  8294 ;; Defined at:
  8295 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flneg.c"
  8296 ;; Parameters:    Size  Location     Type
  8297 ;;  f1              4   19[COMRAM] int 
  8298 ;; Auto vars:     Size  Location     Type
  8299 ;;		None
  8300 ;; Return value:  Size  Location     Type
  8301 ;;                  4   19[COMRAM] int 
  8302 ;; Registers used:
  8303 ;;		wreg, status,2, status,0
  8304 ;; Tracked objects:
  8305 ;;		On entry : 0/0
  8306 ;;		On exit  : 0/0
  8307 ;;		Unchanged: 0/0
  8308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8309 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8312 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8313 ;;Total ram usage:        4 bytes
  8314 ;; Hardware stack levels used: 1
  8315 ;; Hardware stack levels required when called: 8
  8316 ;; This function calls:
  8317 ;;		Nothing
  8318 ;; This function is called by:
  8319 ;;		_efgtoa
  8320 ;; This function uses a non-reentrant model
  8321 ;;
  8322                           
  8323                           	psect	text27
  8324  005E5A                     __ptext27:
  8325                           	callstack 0
  8326  005E5A                     ___flneg:
  8327                           	callstack 16
  8328  005E5A  5014               	movf	___flneg@f1^0,w,c
  8329  005E5C  1015               	iorwf	(___flneg@f1+1)^0,w,c
  8330  005E5E  1016               	iorwf	(___flneg@f1+2)^0,w,c
  8331  005E60  1017               	iorwf	(___flneg@f1+3)^0,w,c
  8332  005E62  B4D8               	btfsc	status,2,c
  8333  005E64  EF36  F02F         	goto	u8851
  8334  005E68  EF38  F02F         	goto	u8850
  8335  005E6C                     u8851:
  8336  005E6C  EF40  F02F         	goto	l8424
  8337  005E70                     u8850:
  8338  005E70  0E00               	movlw	0
  8339  005E72  1A14               	xorwf	___flneg@f1^0,f,c
  8340  005E74  0E00               	movlw	0
  8341  005E76  1A15               	xorwf	(___flneg@f1+1)^0,f,c
  8342  005E78  0E00               	movlw	0
  8343  005E7A  1A16               	xorwf	(___flneg@f1+2)^0,f,c
  8344  005E7C  0E80               	movlw	128
  8345  005E7E  1A17               	xorwf	(___flneg@f1+3)^0,f,c
  8346  005E80                     l8424:
  8347  005E80  C014  F014         	movff	___flneg@f1,?___flneg
  8348  005E84  C015  F015         	movff	___flneg@f1+1,?___flneg+1
  8349  005E88  C016  F016         	movff	___flneg@f1+2,?___flneg+2
  8350  005E8C  C017  F017         	movff	___flneg@f1+3,?___flneg+3
  8351  005E90  0012               	return		;funcret
  8352  005E92                     __end_of___flneg:
  8353                           	callstack 0
  8354                           
  8355 ;; *************** function ___flge *****************
  8356 ;; Defined at:
  8357 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  8358 ;; Parameters:    Size  Location     Type
  8359 ;;  ff1             4   13[BANK0 ] int 
  8360 ;;  ff2             4   17[BANK0 ] int 
  8361 ;; Auto vars:     Size  Location     Type
  8362 ;;		None
  8363 ;; Return value:  Size  Location     Type
  8364 ;;		None               void
  8365 ;; Registers used:
  8366 ;;		wreg, status,2, status,0
  8367 ;; Tracked objects:
  8368 ;;		On entry : 0/0
  8369 ;;		On exit  : 0/0
  8370 ;;		Unchanged: 0/0
  8371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8372 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8374 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8375 ;;      Totals:         4       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8376 ;;Total ram usage:       12 bytes
  8377 ;; Hardware stack levels used: 1
  8378 ;; Hardware stack levels required when called: 8
  8379 ;; This function calls:
  8380 ;;		Nothing
  8381 ;; This function is called by:
  8382 ;;		_loop
  8383 ;;		_checkBatt
  8384 ;;		_getCurve
  8385 ;;		_efgtoa
  8386 ;; This function uses a non-reentrant model
  8387 ;;
  8388                           
  8389                           	psect	text28
  8390  004B02                     __ptext28:
  8391                           	callstack 0
  8392  004B02                     ___flge:
  8393                           	callstack 16
  8394  004B02  0E00               	movlw	0
  8395  004B04  0100               	movlb	0	; () banked
  8396  004B06  156D               	andwf	___flge@ff1& (0+255),w,b
  8397  004B08  6E36               	movwf	??___flge^0,c
  8398  004B0A  0E00               	movlw	0
  8399  004B0C  156E               	andwf	(___flge@ff1+1)& (0+255),w,b
  8400  004B0E  6E37               	movwf	(??___flge+1)^0,c
  8401  004B10  0E80               	movlw	128
  8402  004B12  156F               	andwf	(___flge@ff1+2)& (0+255),w,b
  8403  004B14  6E38               	movwf	(??___flge+2)^0,c
  8404  004B16  0E7F               	movlw	127
  8405  004B18  1570               	andwf	(___flge@ff1+3)& (0+255),w,b
  8406  004B1A  6E39               	movwf	(??___flge+3)^0,c
  8407  004B1C  5036               	movf	??___flge^0,w,c
  8408  004B1E  1037               	iorwf	(??___flge+1)^0,w,c
  8409  004B20  1038               	iorwf	(??___flge+2)^0,w,c
  8410  004B22  1039               	iorwf	(??___flge+3)^0,w,c
  8411  004B24  A4D8               	btfss	status,2,c
  8412  004B26  EF97  F025         	goto	u8801
  8413  004B2A  EF99  F025         	goto	u8800
  8414  004B2E                     u8801:
  8415  004B2E  EFA1  F025         	goto	l8402
  8416  004B32                     u8800:
  8417  004B32                     
  8418                           ; BSR set to: 0
  8419  004B32  0E00               	movlw	0
  8420  004B34  6F6D               	movwf	___flge@ff1& (0+255),b
  8421  004B36  0E00               	movlw	0
  8422  004B38  6F6E               	movwf	(___flge@ff1+1)& (0+255),b
  8423  004B3A  0E00               	movlw	0
  8424  004B3C  6F6F               	movwf	(___flge@ff1+2)& (0+255),b
  8425  004B3E  0E00               	movlw	0
  8426  004B40  6F70               	movwf	(___flge@ff1+3)& (0+255),b
  8427  004B42                     l8402:
  8428                           
  8429                           ; BSR set to: 0
  8430  004B42  0E00               	movlw	0
  8431  004B44  1571               	andwf	___flge@ff2& (0+255),w,b
  8432  004B46  6E36               	movwf	??___flge^0,c
  8433  004B48  0E00               	movlw	0
  8434  004B4A  1572               	andwf	(___flge@ff2+1)& (0+255),w,b
  8435  004B4C  6E37               	movwf	(??___flge+1)^0,c
  8436  004B4E  0E80               	movlw	128
  8437  004B50  1573               	andwf	(___flge@ff2+2)& (0+255),w,b
  8438  004B52  6E38               	movwf	(??___flge+2)^0,c
  8439  004B54  0E7F               	movlw	127
  8440  004B56  1574               	andwf	(___flge@ff2+3)& (0+255),w,b
  8441  004B58  6E39               	movwf	(??___flge+3)^0,c
  8442  004B5A  5036               	movf	??___flge^0,w,c
  8443  004B5C  1037               	iorwf	(??___flge+1)^0,w,c
  8444  004B5E  1038               	iorwf	(??___flge+2)^0,w,c
  8445  004B60  1039               	iorwf	(??___flge+3)^0,w,c
  8446  004B62  A4D8               	btfss	status,2,c
  8447  004B64  EFB6  F025         	goto	u8811
  8448  004B68  EFB8  F025         	goto	u8810
  8449  004B6C                     u8811:
  8450  004B6C  EFC0  F025         	goto	l8406
  8451  004B70                     u8810:
  8452  004B70                     
  8453                           ; BSR set to: 0
  8454  004B70  0E00               	movlw	0
  8455  004B72  6F71               	movwf	___flge@ff2& (0+255),b
  8456  004B74  0E00               	movlw	0
  8457  004B76  6F72               	movwf	(___flge@ff2+1)& (0+255),b
  8458  004B78  0E00               	movlw	0
  8459  004B7A  6F73               	movwf	(___flge@ff2+2)& (0+255),b
  8460  004B7C  0E00               	movlw	0
  8461  004B7E  6F74               	movwf	(___flge@ff2+3)& (0+255),b
  8462  004B80                     l8406:
  8463                           
  8464                           ; BSR set to: 0
  8465  004B80  AF70               	btfss	(___flge@ff1+3)& (0+255),7,b
  8466  004B82  EFC5  F025         	goto	u8821
  8467  004B86  EFC7  F025         	goto	u8820
  8468  004B8A                     u8821:
  8469  004B8A  EFD0  F025         	goto	l8410
  8470  004B8E                     u8820:
  8471  004B8E                     
  8472                           ; BSR set to: 0
  8473  004B8E  6D6D               	negf	___flge@ff1& (0+255),b
  8474  004B90  1F6E               	comf	(___flge@ff1+1)& (0+255),f,b
  8475  004B92  B0D8               	btfsc	status,0,c
  8476  004B94  2B6E               	incf	(___flge@ff1+1)& (0+255),f,b
  8477  004B96  1F6F               	comf	(___flge@ff1+2)& (0+255),f,b
  8478  004B98  B0D8               	btfsc	status,0,c
  8479  004B9A  2B6F               	incf	(___flge@ff1+2)& (0+255),f,b
  8480  004B9C  0E80               	movlw	128
  8481  004B9E  5770               	subfwb	(___flge@ff1+3)& (0+255),f,b
  8482  004BA0                     l8410:
  8483                           
  8484                           ; BSR set to: 0
  8485  004BA0  AF74               	btfss	(___flge@ff2+3)& (0+255),7,b
  8486  004BA2  EFD5  F025         	goto	u8831
  8487  004BA6  EFD7  F025         	goto	u8830
  8488  004BAA                     u8831:
  8489  004BAA  EFE0  F025         	goto	l1675
  8490  004BAE                     u8830:
  8491  004BAE                     
  8492                           ; BSR set to: 0
  8493  004BAE  6D71               	negf	___flge@ff2& (0+255),b
  8494  004BB0  1F72               	comf	(___flge@ff2+1)& (0+255),f,b
  8495  004BB2  B0D8               	btfsc	status,0,c
  8496  004BB4  2B72               	incf	(___flge@ff2+1)& (0+255),f,b
  8497  004BB6  1F73               	comf	(___flge@ff2+2)& (0+255),f,b
  8498  004BB8  B0D8               	btfsc	status,0,c
  8499  004BBA  2B73               	incf	(___flge@ff2+2)& (0+255),f,b
  8500  004BBC  0E80               	movlw	128
  8501  004BBE  5774               	subfwb	(___flge@ff2+3)& (0+255),f,b
  8502  004BC0                     l1675:
  8503                           
  8504                           ; BSR set to: 0
  8505  004BC0  0E00               	movlw	0
  8506  004BC2  1B6D               	xorwf	___flge@ff1& (0+255),f,b
  8507  004BC4  0E00               	movlw	0
  8508  004BC6  1B6E               	xorwf	(___flge@ff1+1)& (0+255),f,b
  8509  004BC8  0E00               	movlw	0
  8510  004BCA  1B6F               	xorwf	(___flge@ff1+2)& (0+255),f,b
  8511  004BCC  0E80               	movlw	128
  8512  004BCE  1B70               	xorwf	(___flge@ff1+3)& (0+255),f,b
  8513  004BD0  0E00               	movlw	0
  8514  004BD2  1B71               	xorwf	___flge@ff2& (0+255),f,b
  8515  004BD4  0E00               	movlw	0
  8516  004BD6  1B72               	xorwf	(___flge@ff2+1)& (0+255),f,b
  8517  004BD8  0E00               	movlw	0
  8518  004BDA  1B73               	xorwf	(___flge@ff2+2)& (0+255),f,b
  8519  004BDC  0E80               	movlw	128
  8520  004BDE  1B74               	xorwf	(___flge@ff2+3)& (0+255),f,b
  8521  004BE0  5171               	movf	___flge@ff2& (0+255),w,b
  8522  004BE2  5D6D               	subwf	___flge@ff1& (0+255),w,b
  8523  004BE4  5172               	movf	(___flge@ff2+1)& (0+255),w,b
  8524  004BE6  596E               	subwfb	(___flge@ff1+1)& (0+255),w,b
  8525  004BE8  5173               	movf	(___flge@ff2+2)& (0+255),w,b
  8526  004BEA  596F               	subwfb	(___flge@ff1+2)& (0+255),w,b
  8527  004BEC  5174               	movf	(___flge@ff2+3)& (0+255),w,b
  8528  004BEE  5970               	subwfb	(___flge@ff1+3)& (0+255),w,b
  8529  004BF0  B0D8               	btfsc	status,0,c
  8530  004BF2  EFFD  F025         	goto	u8841
  8531  004BF6  EFFF  F025         	goto	u8840
  8532  004BFA                     u8841:
  8533  004BFA  EF02  F026         	goto	l8416
  8534  004BFE                     u8840:
  8535  004BFE                     
  8536                           ; BSR set to: 0
  8537  004BFE  90D8               	bcf	status,0,c
  8538  004C00  EF03  F026         	goto	l1680
  8539  004C04                     l8416:
  8540                           
  8541                           ; BSR set to: 0
  8542  004C04  80D8               	bsf	status,0,c
  8543  004C06                     l1680:
  8544                           
  8545                           ; BSR set to: 0
  8546  004C06  0012               	return		;funcret
  8547  004C08                     __end_of___flge:
  8548                           	callstack 0
  8549                           
  8550 ;; *************** function ___fleq *****************
  8551 ;; Defined at:
  8552 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fleq.c"
  8553 ;; Parameters:    Size  Location     Type
  8554 ;;  ff1             4   19[COMRAM] int 
  8555 ;;  ff2             4   23[COMRAM] int 
  8556 ;; Auto vars:     Size  Location     Type
  8557 ;;		None
  8558 ;; Return value:  Size  Location     Type
  8559 ;;		None               void
  8560 ;; Registers used:
  8561 ;;		wreg, status,2, status,0
  8562 ;; Tracked objects:
  8563 ;;		On entry : 0/0
  8564 ;;		On exit  : 0/0
  8565 ;;		Unchanged: 0/0
  8566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8567 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8569 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8570 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8571 ;;Total ram usage:       12 bytes
  8572 ;; Hardware stack levels used: 1
  8573 ;; Hardware stack levels required when called: 8
  8574 ;; This function calls:
  8575 ;;		Nothing
  8576 ;; This function is called by:
  8577 ;;		_efgtoa
  8578 ;; This function uses a non-reentrant model
  8579 ;;
  8580                           
  8581                           	psect	text29
  8582  005528                     __ptext29:
  8583                           	callstack 0
  8584  005528                     ___fleq:
  8585                           	callstack 16
  8586  005528  0E00               	movlw	0
  8587  00552A  1414               	andwf	___fleq@ff1^0,w,c
  8588  00552C  6E1C               	movwf	??___fleq^0,c
  8589  00552E  0E00               	movlw	0
  8590  005530  1415               	andwf	(___fleq@ff1+1)^0,w,c
  8591  005532  6E1D               	movwf	(??___fleq+1)^0,c
  8592  005534  0E80               	movlw	128
  8593  005536  1416               	andwf	(___fleq@ff1+2)^0,w,c
  8594  005538  6E1E               	movwf	(??___fleq+2)^0,c
  8595  00553A  0E7F               	movlw	127
  8596  00553C  1417               	andwf	(___fleq@ff1+3)^0,w,c
  8597  00553E  6E1F               	movwf	(??___fleq+3)^0,c
  8598  005540  501C               	movf	??___fleq^0,w,c
  8599  005542  101D               	iorwf	(??___fleq+1)^0,w,c
  8600  005544  101E               	iorwf	(??___fleq+2)^0,w,c
  8601  005546  101F               	iorwf	(??___fleq+3)^0,w,c
  8602  005548  A4D8               	btfss	status,2,c
  8603  00554A  EFA9  F02A         	goto	u8771
  8604  00554E  EFAB  F02A         	goto	u8770
  8605  005552                     u8771:
  8606  005552  EFB3  F02A         	goto	l8386
  8607  005556                     u8770:
  8608  005556  0E00               	movlw	0
  8609  005558  6E14               	movwf	___fleq@ff1^0,c
  8610  00555A  0E00               	movlw	0
  8611  00555C  6E15               	movwf	(___fleq@ff1+1)^0,c
  8612  00555E  0E00               	movlw	0
  8613  005560  6E16               	movwf	(___fleq@ff1+2)^0,c
  8614  005562  0E00               	movlw	0
  8615  005564  6E17               	movwf	(___fleq@ff1+3)^0,c
  8616  005566                     l8386:
  8617  005566  0E00               	movlw	0
  8618  005568  1418               	andwf	___fleq@ff2^0,w,c
  8619  00556A  6E1C               	movwf	??___fleq^0,c
  8620  00556C  0E00               	movlw	0
  8621  00556E  1419               	andwf	(___fleq@ff2+1)^0,w,c
  8622  005570  6E1D               	movwf	(??___fleq+1)^0,c
  8623  005572  0E80               	movlw	128
  8624  005574  141A               	andwf	(___fleq@ff2+2)^0,w,c
  8625  005576  6E1E               	movwf	(??___fleq+2)^0,c
  8626  005578  0E7F               	movlw	127
  8627  00557A  141B               	andwf	(___fleq@ff2+3)^0,w,c
  8628  00557C  6E1F               	movwf	(??___fleq+3)^0,c
  8629  00557E  501C               	movf	??___fleq^0,w,c
  8630  005580  101D               	iorwf	(??___fleq+1)^0,w,c
  8631  005582  101E               	iorwf	(??___fleq+2)^0,w,c
  8632  005584  101F               	iorwf	(??___fleq+3)^0,w,c
  8633  005586  A4D8               	btfss	status,2,c
  8634  005588  EFC8  F02A         	goto	u8781
  8635  00558C  EFCA  F02A         	goto	u8780
  8636  005590                     u8781:
  8637  005590  EFD2  F02A         	goto	l8390
  8638  005594                     u8780:
  8639  005594  0E00               	movlw	0
  8640  005596  6E18               	movwf	___fleq@ff2^0,c
  8641  005598  0E00               	movlw	0
  8642  00559A  6E19               	movwf	(___fleq@ff2+1)^0,c
  8643  00559C  0E00               	movlw	0
  8644  00559E  6E1A               	movwf	(___fleq@ff2+2)^0,c
  8645  0055A0  0E00               	movlw	0
  8646  0055A2  6E1B               	movwf	(___fleq@ff2+3)^0,c
  8647  0055A4                     l8390:
  8648  0055A4  5018               	movf	___fleq@ff2^0,w,c
  8649  0055A6  1814               	xorwf	___fleq@ff1^0,w,c
  8650  0055A8  E10F               	bnz	u8790
  8651  0055AA  5019               	movf	(___fleq@ff2+1)^0,w,c
  8652  0055AC  1815               	xorwf	(___fleq@ff1+1)^0,w,c
  8653  0055AE  E10C               	bnz	u8790
  8654  0055B0  501A               	movf	(___fleq@ff2+2)^0,w,c
  8655  0055B2  1816               	xorwf	(___fleq@ff1+2)^0,w,c
  8656  0055B4  E109               	bnz	u8790
  8657  0055B6  501B               	movf	(___fleq@ff2+3)^0,w,c
  8658  0055B8  1817               	xorwf	(___fleq@ff1+3)^0,w,c
  8659  0055BA  B4D8               	btfsc	status,2,c
  8660  0055BC  EFE2  F02A         	goto	u8791
  8661  0055C0  EFE4  F02A         	goto	u8790
  8662  0055C4                     u8791:
  8663  0055C4  EFE7  F02A         	goto	l8394
  8664  0055C8                     u8790:
  8665  0055C8  90D8               	bcf	status,0,c
  8666  0055CA  EFE8  F02A         	goto	l1669
  8667  0055CE                     l8394:
  8668  0055CE  80D8               	bsf	status,0,c
  8669  0055D0                     l1669:
  8670  0055D0  0012               	return		;funcret
  8671  0055D2                     __end_of___fleq:
  8672                           	callstack 0
  8673                           
  8674 ;; *************** function ___fldiv *****************
  8675 ;; Defined at:
  8676 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
  8677 ;; Parameters:    Size  Location     Type
  8678 ;;  b               4   41[COMRAM] int 
  8679 ;;  a               4   45[COMRAM] int 
  8680 ;; Auto vars:     Size  Location     Type
  8681 ;;  grs             4    7[BANK0 ] unsigned long 
  8682 ;;  rem             4    0[BANK0 ] unsigned long 
  8683 ;;  new_exp         2    5[BANK0 ] short 
  8684 ;;  aexp            1   12[BANK0 ] unsigned char 
  8685 ;;  bexp            1   11[BANK0 ] unsigned char 
  8686 ;;  sign            1    4[BANK0 ] unsigned char 
  8687 ;; Return value:  Size  Location     Type
  8688 ;;                  4   41[COMRAM] unsigned char 
  8689 ;; Registers used:
  8690 ;;		wreg, status,2, status,0
  8691 ;; Tracked objects:
  8692 ;;		On entry : 0/0
  8693 ;;		On exit  : 0/0
  8694 ;;		Unchanged: 0/0
  8695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8696 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8697 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8698 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8699 ;;      Totals:        12      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8700 ;;Total ram usage:       25 bytes
  8701 ;; Hardware stack levels used: 1
  8702 ;; Hardware stack levels required when called: 8
  8703 ;; This function calls:
  8704 ;;		Nothing
  8705 ;; This function is called by:
  8706 ;;		_setSteering
  8707 ;;		_efgtoa
  8708 ;; This function uses a non-reentrant model
  8709 ;;
  8710                           
  8711                           	psect	text30
  8712  002C90                     __ptext30:
  8713                           	callstack 0
  8714  002C90                     ___fldiv:
  8715                           	callstack 20
  8716  002C90  502D               	movf	(___fldiv@b+3)^0,w,c
  8717  002C92  0B80               	andlw	128
  8718  002C94  0100               	movlb	0	; () banked
  8719  002C96  6F64               	movwf	___fldiv@sign& (0+255),b
  8720  002C98  502D               	movf	(___fldiv@b+3)^0,w,c
  8721  002C9A  242D               	addwf	(___fldiv@b+3)^0,w,c
  8722  002C9C  6F6B               	movwf	___fldiv@bexp& (0+255),b
  8723  002C9E                     
  8724                           ; BSR set to: 0
  8725  002C9E  AE2C               	btfss	(___fldiv@b+2)^0,7,c
  8726  002CA0  EF54  F016         	goto	u8231
  8727  002CA4  EF56  F016         	goto	u8230
  8728  002CA8                     u8231:
  8729  002CA8  EF57  F016         	goto	l8034
  8730  002CAC                     u8230:
  8731  002CAC                     
  8732                           ; BSR set to: 0
  8733  002CAC  816B               	bsf	___fldiv@bexp& (0+255),0,b
  8734  002CAE                     l8034:
  8735                           
  8736                           ; BSR set to: 0
  8737  002CAE  516B               	movf	___fldiv@bexp& (0+255),w,b
  8738  002CB0  B4D8               	btfsc	status,2,c
  8739  002CB2  EF5D  F016         	goto	u8241
  8740  002CB6  EF5F  F016         	goto	u8240
  8741  002CBA                     u8241:
  8742  002CBA  EF74  F016         	goto	l8044
  8743  002CBE                     u8240:
  8744  002CBE                     
  8745                           ; BSR set to: 0
  8746  002CBE  296B               	incf	___fldiv@bexp& (0+255),w,b
  8747  002CC0  A4D8               	btfss	status,2,c
  8748  002CC2  EF65  F016         	goto	u8251
  8749  002CC6  EF67  F016         	goto	u8250
  8750  002CCA                     u8251:
  8751  002CCA  EF6F  F016         	goto	l8040
  8752  002CCE                     u8250:
  8753  002CCE                     
  8754                           ; BSR set to: 0
  8755  002CCE  0E00               	movlw	0
  8756  002CD0  6E2A               	movwf	___fldiv@b^0,c
  8757  002CD2  0E00               	movlw	0
  8758  002CD4  6E2B               	movwf	(___fldiv@b+1)^0,c
  8759  002CD6  0E00               	movlw	0
  8760  002CD8  6E2C               	movwf	(___fldiv@b+2)^0,c
  8761  002CDA  0E00               	movlw	0
  8762  002CDC  6E2D               	movwf	(___fldiv@b+3)^0,c
  8763  002CDE                     l8040:
  8764                           
  8765                           ; BSR set to: 0
  8766  002CDE  8E2C               	bsf	(___fldiv@b+2)^0,7,c
  8767  002CE0                     
  8768                           ; BSR set to: 0
  8769  002CE0  0E00               	movlw	0
  8770  002CE2  6E2D               	movwf	(___fldiv@b+3)^0,c
  8771  002CE4  EF7C  F016         	goto	l8046
  8772  002CE8                     l8044:
  8773                           
  8774                           ; BSR set to: 0
  8775  002CE8  0E00               	movlw	0
  8776  002CEA  6E2A               	movwf	___fldiv@b^0,c
  8777  002CEC  0E00               	movlw	0
  8778  002CEE  6E2B               	movwf	(___fldiv@b+1)^0,c
  8779  002CF0  0E00               	movlw	0
  8780  002CF2  6E2C               	movwf	(___fldiv@b+2)^0,c
  8781  002CF4  0E00               	movlw	0
  8782  002CF6  6E2D               	movwf	(___fldiv@b+3)^0,c
  8783  002CF8                     l8046:
  8784                           
  8785                           ; BSR set to: 0
  8786  002CF8  5031               	movf	(___fldiv@a+3)^0,w,c
  8787  002CFA  0B80               	andlw	128
  8788  002CFC  1B64               	xorwf	___fldiv@sign& (0+255),f,b
  8789  002CFE                     
  8790                           ; BSR set to: 0
  8791  002CFE  5031               	movf	(___fldiv@a+3)^0,w,c
  8792  002D00  2431               	addwf	(___fldiv@a+3)^0,w,c
  8793  002D02  6F6C               	movwf	___fldiv@aexp& (0+255),b
  8794  002D04                     
  8795                           ; BSR set to: 0
  8796  002D04  AE30               	btfss	(___fldiv@a+2)^0,7,c
  8797  002D06  EF87  F016         	goto	u8261
  8798  002D0A  EF89  F016         	goto	u8260
  8799  002D0E                     u8261:
  8800  002D0E  EF8A  F016         	goto	l8054
  8801  002D12                     u8260:
  8802  002D12                     
  8803                           ; BSR set to: 0
  8804  002D12  816C               	bsf	___fldiv@aexp& (0+255),0,b
  8805  002D14                     l8054:
  8806                           
  8807                           ; BSR set to: 0
  8808  002D14  516C               	movf	___fldiv@aexp& (0+255),w,b
  8809  002D16  B4D8               	btfsc	status,2,c
  8810  002D18  EF90  F016         	goto	u8271
  8811  002D1C  EF92  F016         	goto	u8270
  8812  002D20                     u8271:
  8813  002D20  EFA7  F016         	goto	l8064
  8814  002D24                     u8270:
  8815  002D24                     
  8816                           ; BSR set to: 0
  8817  002D24  296C               	incf	___fldiv@aexp& (0+255),w,b
  8818  002D26  A4D8               	btfss	status,2,c
  8819  002D28  EF98  F016         	goto	u8281
  8820  002D2C  EF9A  F016         	goto	u8280
  8821  002D30                     u8281:
  8822  002D30  EFA2  F016         	goto	l8060
  8823  002D34                     u8280:
  8824  002D34                     
  8825                           ; BSR set to: 0
  8826  002D34  0E00               	movlw	0
  8827  002D36  6E2E               	movwf	___fldiv@a^0,c
  8828  002D38  0E00               	movlw	0
  8829  002D3A  6E2F               	movwf	(___fldiv@a+1)^0,c
  8830  002D3C  0E00               	movlw	0
  8831  002D3E  6E30               	movwf	(___fldiv@a+2)^0,c
  8832  002D40  0E00               	movlw	0
  8833  002D42  6E31               	movwf	(___fldiv@a+3)^0,c
  8834  002D44                     l8060:
  8835                           
  8836                           ; BSR set to: 0
  8837  002D44  8E30               	bsf	(___fldiv@a+2)^0,7,c
  8838  002D46                     
  8839                           ; BSR set to: 0
  8840  002D46  0E00               	movlw	0
  8841  002D48  6E31               	movwf	(___fldiv@a+3)^0,c
  8842  002D4A  EFAF  F016         	goto	l8066
  8843  002D4E                     l8064:
  8844                           
  8845                           ; BSR set to: 0
  8846  002D4E  0E00               	movlw	0
  8847  002D50  6E2E               	movwf	___fldiv@a^0,c
  8848  002D52  0E00               	movlw	0
  8849  002D54  6E2F               	movwf	(___fldiv@a+1)^0,c
  8850  002D56  0E00               	movlw	0
  8851  002D58  6E30               	movwf	(___fldiv@a+2)^0,c
  8852  002D5A  0E00               	movlw	0
  8853  002D5C  6E31               	movwf	(___fldiv@a+3)^0,c
  8854  002D5E                     l8066:
  8855                           
  8856                           ; BSR set to: 0
  8857  002D5E  502E               	movf	___fldiv@a^0,w,c
  8858  002D60  102F               	iorwf	(___fldiv@a+1)^0,w,c
  8859  002D62  1030               	iorwf	(___fldiv@a+2)^0,w,c
  8860  002D64  1031               	iorwf	(___fldiv@a+3)^0,w,c
  8861  002D66  A4D8               	btfss	status,2,c
  8862  002D68  EFB8  F016         	goto	u8291
  8863  002D6C  EFBA  F016         	goto	u8290
  8864  002D70                     u8291:
  8865  002D70  EFD2  F016         	goto	l8078
  8866  002D74                     u8290:
  8867  002D74                     
  8868                           ; BSR set to: 0
  8869  002D74  0E00               	movlw	0
  8870  002D76  6E2A               	movwf	___fldiv@b^0,c
  8871  002D78  0E00               	movlw	0
  8872  002D7A  6E2B               	movwf	(___fldiv@b+1)^0,c
  8873  002D7C  0E00               	movlw	0
  8874  002D7E  6E2C               	movwf	(___fldiv@b+2)^0,c
  8875  002D80  0E00               	movlw	0
  8876  002D82  6E2D               	movwf	(___fldiv@b+3)^0,c
  8877  002D84                     
  8878                           ; BSR set to: 0
  8879  002D84  0E80               	movlw	128
  8880  002D86  122C               	iorwf	(___fldiv@b+2)^0,f,c
  8881  002D88  0E7F               	movlw	127
  8882  002D8A  122D               	iorwf	(___fldiv@b+3)^0,f,c
  8883  002D8C                     l8072:
  8884                           
  8885                           ; BSR set to: 0
  8886  002D8C  5164               	movf	___fldiv@sign& (0+255),w,b
  8887  002D8E  122D               	iorwf	(___fldiv@b+3)^0,f,c
  8888  002D90                     
  8889                           ; BSR set to: 0
  8890  002D90  C02A  F02A         	movff	___fldiv@b,?___fldiv
  8891  002D94  C02B  F02B         	movff	___fldiv@b+1,?___fldiv+1
  8892  002D98  C02C  F02C         	movff	___fldiv@b+2,?___fldiv+2
  8893  002D9C  C02D  F02D         	movff	___fldiv@b+3,?___fldiv+3
  8894  002DA0  EF15  F018         	goto	l1992
  8895  002DA4                     l8078:
  8896                           
  8897                           ; BSR set to: 0
  8898  002DA4  516B               	movf	___fldiv@bexp& (0+255),w,b
  8899  002DA6  A4D8               	btfss	status,2,c
  8900  002DA8  EFD8  F016         	goto	u8301
  8901  002DAC  EFDA  F016         	goto	u8300
  8902  002DB0                     u8301:
  8903  002DB0  EFE4  F016         	goto	l8086
  8904  002DB4                     u8300:
  8905  002DB4                     
  8906                           ; BSR set to: 0
  8907  002DB4  0E00               	movlw	0
  8908  002DB6  6E2A               	movwf	?___fldiv^0,c
  8909  002DB8  0E00               	movlw	0
  8910  002DBA  6E2B               	movwf	(?___fldiv+1)^0,c
  8911  002DBC  0E00               	movlw	0
  8912  002DBE  6E2C               	movwf	(?___fldiv+2)^0,c
  8913  002DC0  0E00               	movlw	0
  8914  002DC2  6E2D               	movwf	(?___fldiv+3)^0,c
  8915  002DC4  EF15  F018         	goto	l1992
  8916  002DC8                     l8086:
  8917                           
  8918                           ; BSR set to: 0
  8919  002DC8  516C               	movf	___fldiv@aexp& (0+255),w,b
  8920  002DCA  C06B  F032         	movff	___fldiv@bexp,??___fldiv
  8921  002DCE  6A33               	clrf	(??___fldiv+1)^0,c
  8922  002DD0  5E32               	subwf	??___fldiv^0,f,c
  8923  002DD2  0E00               	movlw	0
  8924  002DD4  5A33               	subwfb	(??___fldiv+1)^0,f,c
  8925  002DD6  0E7F               	movlw	127
  8926  002DD8  2432               	addwf	??___fldiv^0,w,c
  8927  002DDA  6F65               	movwf	___fldiv@new_exp& (0+255),b
  8928  002DDC  0E00               	movlw	0
  8929  002DDE  2033               	addwfc	(??___fldiv+1)^0,w,c
  8930  002DE0  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
  8931  002DE2                     
  8932                           ; BSR set to: 0
  8933  002DE2  C02A  F060         	movff	___fldiv@b,___fldiv@rem
  8934  002DE6  C02B  F061         	movff	___fldiv@b+1,___fldiv@rem+1
  8935  002DEA  C02C  F062         	movff	___fldiv@b+2,___fldiv@rem+2
  8936  002DEE  C02D  F063         	movff	___fldiv@b+3,___fldiv@rem+3
  8937  002DF2                     
  8938                           ; BSR set to: 0
  8939  002DF2  0E00               	movlw	0
  8940  002DF4  6E2A               	movwf	___fldiv@b^0,c
  8941  002DF6  0E00               	movlw	0
  8942  002DF8  6E2B               	movwf	(___fldiv@b+1)^0,c
  8943  002DFA  0E00               	movlw	0
  8944  002DFC  6E2C               	movwf	(___fldiv@b+2)^0,c
  8945  002DFE  0E00               	movlw	0
  8946  002E00  6E2D               	movwf	(___fldiv@b+3)^0,c
  8947  002E02                     
  8948                           ; BSR set to: 0
  8949  002E02  0E00               	movlw	0
  8950  002E04  6F67               	movwf	___fldiv@grs& (0+255),b
  8951  002E06  0E00               	movlw	0
  8952  002E08  6F68               	movwf	(___fldiv@grs+1)& (0+255),b
  8953  002E0A  0E00               	movlw	0
  8954  002E0C  6F69               	movwf	(___fldiv@grs+2)& (0+255),b
  8955  002E0E  0E00               	movlw	0
  8956  002E10  6F6A               	movwf	(___fldiv@grs+3)& (0+255),b
  8957  002E12                     
  8958                           ; BSR set to: 0
  8959  002E12  0E00               	movlw	0
  8960  002E14  6F6C               	movwf	___fldiv@aexp& (0+255),b
  8961  002E16  EF45  F017         	goto	l1994
  8962  002E1A                     l8096:
  8963                           
  8964                           ; BSR set to: 0
  8965  002E1A  516C               	movf	___fldiv@aexp& (0+255),w,b
  8966  002E1C  B4D8               	btfsc	status,2,c
  8967  002E1E  EF13  F017         	goto	u8311
  8968  002E22  EF15  F017         	goto	u8310
  8969  002E26                     u8311:
  8970  002E26  EF2C  F017         	goto	l8104
  8971  002E2A                     u8310:
  8972  002E2A                     
  8973                           ; BSR set to: 0
  8974  002E2A  90D8               	bcf	status,0,c
  8975  002E2C  3760               	rlcf	___fldiv@rem& (0+255),f,b
  8976  002E2E  3761               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  8977  002E30  3762               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  8978  002E32  3763               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  8979  002E34  90D8               	bcf	status,0,c
  8980  002E36  362A               	rlcf	___fldiv@b^0,f,c
  8981  002E38  362B               	rlcf	(___fldiv@b+1)^0,f,c
  8982  002E3A  362C               	rlcf	(___fldiv@b+2)^0,f,c
  8983  002E3C  362D               	rlcf	(___fldiv@b+3)^0,f,c
  8984  002E3E                     
  8985                           ; BSR set to: 0
  8986  002E3E  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
  8987  002E40  EF24  F017         	goto	u8321
  8988  002E44  EF26  F017         	goto	u8320
  8989  002E48                     u8321:
  8990  002E48  EF27  F017         	goto	l1997
  8991  002E4C                     u8320:
  8992  002E4C                     
  8993                           ; BSR set to: 0
  8994  002E4C  802A               	bsf	___fldiv@b^0,0,c
  8995  002E4E                     l1997:
  8996                           
  8997                           ; BSR set to: 0
  8998  002E4E  90D8               	bcf	status,0,c
  8999  002E50  3767               	rlcf	___fldiv@grs& (0+255),f,b
  9000  002E52  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  9001  002E54  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  9002  002E56  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  9003  002E58                     l8104:
  9004                           
  9005                           ; BSR set to: 0
  9006  002E58  502E               	movf	___fldiv@a^0,w,c
  9007  002E5A  5D60               	subwf	___fldiv@rem& (0+255),w,b
  9008  002E5C  502F               	movf	(___fldiv@a+1)^0,w,c
  9009  002E5E  5961               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  9010  002E60  5030               	movf	(___fldiv@a+2)^0,w,c
  9011  002E62  5962               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  9012  002E64  5031               	movf	(___fldiv@a+3)^0,w,c
  9013  002E66  5963               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  9014  002E68  A0D8               	btfss	status,0,c
  9015  002E6A  EF39  F017         	goto	u8331
  9016  002E6E  EF3B  F017         	goto	u8330
  9017  002E72                     u8331:
  9018  002E72  EF44  F017         	goto	l8110
  9019  002E76                     u8330:
  9020  002E76                     
  9021                           ; BSR set to: 0
  9022  002E76  8D6A               	bsf	(___fldiv@grs+3)& (0+255),6,b
  9023  002E78                     
  9024                           ; BSR set to: 0
  9025  002E78  502E               	movf	___fldiv@a^0,w,c
  9026  002E7A  5F60               	subwf	___fldiv@rem& (0+255),f,b
  9027  002E7C  502F               	movf	(___fldiv@a+1)^0,w,c
  9028  002E7E  5B61               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  9029  002E80  5030               	movf	(___fldiv@a+2)^0,w,c
  9030  002E82  5B62               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  9031  002E84  5031               	movf	(___fldiv@a+3)^0,w,c
  9032  002E86  5B63               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  9033  002E88                     l8110:
  9034                           
  9035                           ; BSR set to: 0
  9036  002E88  2B6C               	incf	___fldiv@aexp& (0+255),f,b
  9037  002E8A                     l1994:
  9038                           
  9039                           ; BSR set to: 0
  9040  002E8A  0E19               	movlw	25
  9041  002E8C  656C               	cpfsgt	___fldiv@aexp& (0+255),b
  9042  002E8E  EF4B  F017         	goto	u8341
  9043  002E92  EF4D  F017         	goto	u8340
  9044  002E96                     u8341:
  9045  002E96  EF0D  F017         	goto	l8096
  9046  002E9A                     u8340:
  9047  002E9A                     
  9048                           ; BSR set to: 0
  9049  002E9A  5160               	movf	___fldiv@rem& (0+255),w,b
  9050  002E9C  1161               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  9051  002E9E  1162               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  9052  002EA0  1163               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  9053  002EA2  B4D8               	btfsc	status,2,c
  9054  002EA4  EF56  F017         	goto	u8351
  9055  002EA8  EF58  F017         	goto	u8350
  9056  002EAC                     u8351:
  9057  002EAC  EF70  F017         	goto	l8122
  9058  002EB0                     u8350:
  9059  002EB0                     
  9060                           ; BSR set to: 0
  9061  002EB0  8167               	bsf	___fldiv@grs& (0+255),0,b
  9062  002EB2  EF70  F017         	goto	l8122
  9063  002EB6                     l8116:
  9064                           
  9065                           ; BSR set to: 0
  9066  002EB6  90D8               	bcf	status,0,c
  9067  002EB8  362A               	rlcf	___fldiv@b^0,f,c
  9068  002EBA  362B               	rlcf	(___fldiv@b+1)^0,f,c
  9069  002EBC  362C               	rlcf	(___fldiv@b+2)^0,f,c
  9070  002EBE  362D               	rlcf	(___fldiv@b+3)^0,f,c
  9071  002EC0                     
  9072                           ; BSR set to: 0
  9073  002EC0  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
  9074  002EC2  EF65  F017         	goto	u8361
  9075  002EC6  EF67  F017         	goto	u8360
  9076  002ECA                     u8361:
  9077  002ECA  EF68  F017         	goto	l2003
  9078  002ECE                     u8360:
  9079  002ECE                     
  9080                           ; BSR set to: 0
  9081  002ECE  802A               	bsf	___fldiv@b^0,0,c
  9082  002ED0                     l2003:
  9083                           
  9084                           ; BSR set to: 0
  9085  002ED0  90D8               	bcf	status,0,c
  9086  002ED2  3767               	rlcf	___fldiv@grs& (0+255),f,b
  9087  002ED4  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  9088  002ED6  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  9089  002ED8  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  9090  002EDA  0765               	decf	___fldiv@new_exp& (0+255),f,b
  9091  002EDC  A0D8               	btfss	status,0,c
  9092  002EDE  0766               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  9093  002EE0                     l8122:
  9094                           
  9095                           ; BSR set to: 0
  9096  002EE0  AE2C               	btfss	(___fldiv@b+2)^0,7,c
  9097  002EE2  EF75  F017         	goto	u8371
  9098  002EE6  EF77  F017         	goto	u8370
  9099  002EEA                     u8371:
  9100  002EEA  EF5B  F017         	goto	l8116
  9101  002EEE                     u8370:
  9102  002EEE                     
  9103                           ; BSR set to: 0
  9104  002EEE  0E00               	movlw	0
  9105  002EF0  6F6C               	movwf	___fldiv@aexp& (0+255),b
  9106  002EF2                     
  9107                           ; BSR set to: 0
  9108  002EF2  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
  9109  002EF4  EF7E  F017         	goto	u8381
  9110  002EF8  EF80  F017         	goto	u8380
  9111  002EFC                     u8381:
  9112  002EFC  EFA4  F017         	goto	l2005
  9113  002F00                     u8380:
  9114  002F00                     
  9115                           ; BSR set to: 0
  9116  002F00  0EFF               	movlw	255
  9117  002F02  1567               	andwf	___fldiv@grs& (0+255),w,b
  9118  002F04  6E32               	movwf	??___fldiv^0,c
  9119  002F06  0EFF               	movlw	255
  9120  002F08  1568               	andwf	(___fldiv@grs+1)& (0+255),w,b
  9121  002F0A  6E33               	movwf	(??___fldiv+1)^0,c
  9122  002F0C  0EFF               	movlw	255
  9123  002F0E  1569               	andwf	(___fldiv@grs+2)& (0+255),w,b
  9124  002F10  6E34               	movwf	(??___fldiv+2)^0,c
  9125  002F12  0E7F               	movlw	127
  9126  002F14  156A               	andwf	(___fldiv@grs+3)& (0+255),w,b
  9127  002F16  6E35               	movwf	(??___fldiv+3)^0,c
  9128  002F18  5032               	movf	??___fldiv^0,w,c
  9129  002F1A  1033               	iorwf	(??___fldiv+1)^0,w,c
  9130  002F1C  1034               	iorwf	(??___fldiv+2)^0,w,c
  9131  002F1E  1035               	iorwf	(??___fldiv+3)^0,w,c
  9132  002F20  B4D8               	btfsc	status,2,c
  9133  002F22  EF95  F017         	goto	u8391
  9134  002F26  EF97  F017         	goto	u8390
  9135  002F2A                     u8391:
  9136  002F2A  EF9B  F017         	goto	l2006
  9137  002F2E                     u8390:
  9138  002F2E                     l8130:
  9139                           
  9140                           ; BSR set to: 0
  9141  002F2E  0E01               	movlw	1
  9142  002F30  6F6C               	movwf	___fldiv@aexp& (0+255),b
  9143  002F32  EFA4  F017         	goto	l2005
  9144  002F36                     l2006:
  9145                           
  9146                           ; BSR set to: 0
  9147  002F36  A02A               	btfss	___fldiv@b^0,0,c
  9148  002F38  EFA0  F017         	goto	u8401
  9149  002F3C  EFA2  F017         	goto	u8400
  9150  002F40                     u8401:
  9151  002F40  EFA4  F017         	goto	l2005
  9152  002F44                     u8400:
  9153  002F44  EF97  F017         	goto	l8130
  9154  002F48                     l2005:
  9155                           
  9156                           ; BSR set to: 0
  9157  002F48  516C               	movf	___fldiv@aexp& (0+255),w,b
  9158  002F4A  B4D8               	btfsc	status,2,c
  9159  002F4C  EFAA  F017         	goto	u8411
  9160  002F50  EFAC  F017         	goto	u8410
  9161  002F54                     u8411:
  9162  002F54  EFD0  F017         	goto	l8142
  9163  002F58                     u8410:
  9164  002F58                     
  9165                           ; BSR set to: 0
  9166  002F58  0E01               	movlw	1
  9167  002F5A  262A               	addwf	___fldiv@b^0,f,c
  9168  002F5C  0E00               	movlw	0
  9169  002F5E  222B               	addwfc	(___fldiv@b+1)^0,f,c
  9170  002F60  222C               	addwfc	(___fldiv@b+2)^0,f,c
  9171  002F62  222D               	addwfc	(___fldiv@b+3)^0,f,c
  9172  002F64                     
  9173                           ; BSR set to: 0
  9174  002F64  A02D               	btfss	(___fldiv@b+3)^0,0,c
  9175  002F66  EFB7  F017         	goto	u8421
  9176  002F6A  EFB9  F017         	goto	u8420
  9177  002F6E                     u8421:
  9178  002F6E  EFD0  F017         	goto	l8142
  9179  002F72                     u8420:
  9180  002F72                     
  9181                           ; BSR set to: 0
  9182  002F72  C02A  F032         	movff	___fldiv@b,??___fldiv
  9183  002F76  C02B  F033         	movff	___fldiv@b+1,??___fldiv+1
  9184  002F7A  C02C  F034         	movff	___fldiv@b+2,??___fldiv+2
  9185  002F7E  C02D  F035         	movff	___fldiv@b+3,??___fldiv+3
  9186  002F82  3435               	rlcf	(??___fldiv+3)^0,w,c
  9187  002F84  3235               	rrcf	(??___fldiv+3)^0,f,c
  9188  002F86  3234               	rrcf	(??___fldiv+2)^0,f,c
  9189  002F88  3233               	rrcf	(??___fldiv+1)^0,f,c
  9190  002F8A  3232               	rrcf	??___fldiv^0,f,c
  9191  002F8C  C032  F02A         	movff	??___fldiv,___fldiv@b
  9192  002F90  C033  F02B         	movff	??___fldiv+1,___fldiv@b+1
  9193  002F94  C034  F02C         	movff	??___fldiv+2,___fldiv@b+2
  9194  002F98  C035  F02D         	movff	??___fldiv+3,___fldiv@b+3
  9195  002F9C                     
  9196                           ; BSR set to: 0
  9197  002F9C  4B65               	infsnz	___fldiv@new_exp& (0+255),f,b
  9198  002F9E  2B66               	incf	(___fldiv@new_exp+1)& (0+255),f,b
  9199  002FA0                     l8142:
  9200                           
  9201                           ; BSR set to: 0
  9202  002FA0  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  9203  002FA2  EFDB  F017         	goto	u8431
  9204  002FA6  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  9205  002FA8  E108               	bnz	u8430
  9206  002FAA  2965               	incf	___fldiv@new_exp& (0+255),w,b
  9207  002FAC  A0D8               	btfss	status,0,c
  9208  002FAE  EFDB  F017         	goto	u8431
  9209  002FB2  EFDD  F017         	goto	u8430
  9210  002FB6                     u8431:
  9211  002FB6  EFE8  F017         	goto	l8146
  9212  002FBA                     u8430:
  9213  002FBA                     
  9214                           ; BSR set to: 0
  9215  002FBA  0E00               	movlw	0
  9216  002FBC  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
  9217  002FBE  6965               	setf	___fldiv@new_exp& (0+255),b
  9218  002FC0  0E00               	movlw	0
  9219  002FC2  6E2A               	movwf	___fldiv@b^0,c
  9220  002FC4  0E00               	movlw	0
  9221  002FC6  6E2B               	movwf	(___fldiv@b+1)^0,c
  9222  002FC8  0E00               	movlw	0
  9223  002FCA  6E2C               	movwf	(___fldiv@b+2)^0,c
  9224  002FCC  0E00               	movlw	0
  9225  002FCE  6E2D               	movwf	(___fldiv@b+3)^0,c
  9226  002FD0                     l8146:
  9227                           
  9228                           ; BSR set to: 0
  9229  002FD0  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  9230  002FD2  EFF5  F017         	goto	u8440
  9231  002FD6  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  9232  002FD8  E106               	bnz	u8441
  9233  002FDA  0565               	decf	___fldiv@new_exp& (0+255),w,b
  9234  002FDC  B0D8               	btfsc	status,0,c
  9235  002FDE  EFF3  F017         	goto	u8441
  9236  002FE2  EFF5  F017         	goto	u8440
  9237  002FE6                     u8441:
  9238  002FE6  EF03  F018         	goto	l8150
  9239  002FEA                     u8440:
  9240  002FEA                     
  9241                           ; BSR set to: 0
  9242  002FEA  0E00               	movlw	0
  9243  002FEC  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
  9244  002FEE  0E00               	movlw	0
  9245  002FF0  6F65               	movwf	___fldiv@new_exp& (0+255),b
  9246  002FF2  0E00               	movlw	0
  9247  002FF4  6E2A               	movwf	___fldiv@b^0,c
  9248  002FF6  0E00               	movlw	0
  9249  002FF8  6E2B               	movwf	(___fldiv@b+1)^0,c
  9250  002FFA  0E00               	movlw	0
  9251  002FFC  6E2C               	movwf	(___fldiv@b+2)^0,c
  9252  002FFE  0E00               	movlw	0
  9253  003000  6E2D               	movwf	(___fldiv@b+3)^0,c
  9254  003002  0E00               	movlw	0
  9255  003004  6F64               	movwf	___fldiv@sign& (0+255),b
  9256  003006                     l8150:
  9257                           
  9258                           ; BSR set to: 0
  9259  003006  C065  F06B         	movff	___fldiv@new_exp,___fldiv@bexp
  9260  00300A                     
  9261                           ; BSR set to: 0
  9262  00300A  A16B               	btfss	___fldiv@bexp& (0+255),0,b
  9263  00300C  EF0A  F018         	goto	u8451
  9264  003010  EF0C  F018         	goto	u8450
  9265  003014                     u8451:
  9266  003014  EF0F  F018         	goto	l8156
  9267  003018                     u8450:
  9268  003018                     
  9269                           ; BSR set to: 0
  9270  003018  8E2C               	bsf	(___fldiv@b+2)^0,7,c
  9271  00301A  EF10  F018         	goto	l8158
  9272  00301E                     l8156:
  9273                           
  9274                           ; BSR set to: 0
  9275  00301E  9E2C               	bcf	(___fldiv@b+2)^0,7,c
  9276  003020                     l8158:
  9277                           
  9278                           ; BSR set to: 0
  9279  003020  90D8               	bcf	status,0,c
  9280  003022  316B               	rrcf	___fldiv@bexp& (0+255),w,b
  9281  003024  6E2D               	movwf	(___fldiv@b+3)^0,c
  9282  003026  EFC6  F016         	goto	l8072
  9283  00302A                     l1992:
  9284                           
  9285                           ; BSR set to: 0
  9286  00302A  0012               	return		;funcret
  9287  00302C                     __end_of___fldiv:
  9288                           	callstack 0
  9289                           
  9290 ;; *************** function ___awmod *****************
  9291 ;; Defined at:
  9292 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  9293 ;; Parameters:    Size  Location     Type
  9294 ;;  dividend        2   19[COMRAM] int 
  9295 ;;  divisor         2   21[COMRAM] int 
  9296 ;; Auto vars:     Size  Location     Type
  9297 ;;  sign            1   24[COMRAM] unsigned char 
  9298 ;;  counter         1   23[COMRAM] unsigned char 
  9299 ;; Return value:  Size  Location     Type
  9300 ;;                  2   19[COMRAM] int 
  9301 ;; Registers used:
  9302 ;;		wreg, status,2, status,0
  9303 ;; Tracked objects:
  9304 ;;		On entry : 0/0
  9305 ;;		On exit  : 0/0
  9306 ;;		Unchanged: 0/0
  9307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9308 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9309 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9311 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9312 ;;Total ram usage:        6 bytes
  9313 ;; Hardware stack levels used: 1
  9314 ;; Hardware stack levels required when called: 8
  9315 ;; This function calls:
  9316 ;;		Nothing
  9317 ;; This function is called by:
  9318 ;;		_efgtoa
  9319 ;; This function uses a non-reentrant model
  9320 ;;
  9321                           
  9322                           	psect	text31
  9323  005478                     __ptext31:
  9324                           	callstack 0
  9325  005478                     ___awmod:
  9326                           	callstack 16
  9327  005478  0E00               	movlw	0
  9328  00547A  6E19               	movwf	___awmod@sign^0,c
  9329  00547C  BE15               	btfsc	(___awmod@dividend+1)^0,7,c
  9330  00547E  EF45  F02A         	goto	u8710
  9331  005482  EF43  F02A         	goto	u8711
  9332  005486                     u8711:
  9333  005486  EF4B  F02A         	goto	l8354
  9334  00548A                     u8710:
  9335  00548A  6C14               	negf	___awmod@dividend^0,c
  9336  00548C  1E15               	comf	(___awmod@dividend+1)^0,f,c
  9337  00548E  B0D8               	btfsc	status,0,c
  9338  005490  2A15               	incf	(___awmod@dividend+1)^0,f,c
  9339  005492  0E01               	movlw	1
  9340  005494  6E19               	movwf	___awmod@sign^0,c
  9341  005496                     l8354:
  9342  005496  BE17               	btfsc	(___awmod@divisor+1)^0,7,c
  9343  005498  EF52  F02A         	goto	u8720
  9344  00549C  EF50  F02A         	goto	u8721
  9345  0054A0                     u8721:
  9346  0054A0  EF56  F02A         	goto	l8358
  9347  0054A4                     u8720:
  9348  0054A4  6C16               	negf	___awmod@divisor^0,c
  9349  0054A6  1E17               	comf	(___awmod@divisor+1)^0,f,c
  9350  0054A8  B0D8               	btfsc	status,0,c
  9351  0054AA  2A17               	incf	(___awmod@divisor+1)^0,f,c
  9352  0054AC                     l8358:
  9353  0054AC  5016               	movf	___awmod@divisor^0,w,c
  9354  0054AE  1017               	iorwf	(___awmod@divisor+1)^0,w,c
  9355  0054B0  B4D8               	btfsc	status,2,c
  9356  0054B2  EF5D  F02A         	goto	u8731
  9357  0054B6  EF5F  F02A         	goto	u8730
  9358  0054BA                     u8731:
  9359  0054BA  EF83  F02A         	goto	l8374
  9360  0054BE                     u8730:
  9361  0054BE  0E01               	movlw	1
  9362  0054C0  6E18               	movwf	___awmod@counter^0,c
  9363  0054C2  EF67  F02A         	goto	l8364
  9364  0054C6                     l8362:
  9365  0054C6  90D8               	bcf	status,0,c
  9366  0054C8  3616               	rlcf	___awmod@divisor^0,f,c
  9367  0054CA  3617               	rlcf	(___awmod@divisor+1)^0,f,c
  9368  0054CC  2A18               	incf	___awmod@counter^0,f,c
  9369  0054CE                     l8364:
  9370  0054CE  AE17               	btfss	(___awmod@divisor+1)^0,7,c
  9371  0054D0  EF6C  F02A         	goto	u8741
  9372  0054D4  EF6E  F02A         	goto	u8740
  9373  0054D8                     u8741:
  9374  0054D8  EF63  F02A         	goto	l8362
  9375  0054DC                     u8740:
  9376  0054DC                     l8366:
  9377  0054DC  5016               	movf	___awmod@divisor^0,w,c
  9378  0054DE  5C14               	subwf	___awmod@dividend^0,w,c
  9379  0054E0  5017               	movf	(___awmod@divisor+1)^0,w,c
  9380  0054E2  5815               	subwfb	(___awmod@dividend+1)^0,w,c
  9381  0054E4  A0D8               	btfss	status,0,c
  9382  0054E6  EF77  F02A         	goto	u8751
  9383  0054EA  EF79  F02A         	goto	u8750
  9384  0054EE                     u8751:
  9385  0054EE  EF7D  F02A         	goto	l8370
  9386  0054F2                     u8750:
  9387  0054F2  5016               	movf	___awmod@divisor^0,w,c
  9388  0054F4  5E14               	subwf	___awmod@dividend^0,f,c
  9389  0054F6  5017               	movf	(___awmod@divisor+1)^0,w,c
  9390  0054F8  5A15               	subwfb	(___awmod@dividend+1)^0,f,c
  9391  0054FA                     l8370:
  9392  0054FA  90D8               	bcf	status,0,c
  9393  0054FC  3217               	rrcf	(___awmod@divisor+1)^0,f,c
  9394  0054FE  3216               	rrcf	___awmod@divisor^0,f,c
  9395  005500  2E18               	decfsz	___awmod@counter^0,f,c
  9396  005502  EF6E  F02A         	goto	l8366
  9397  005506                     l8374:
  9398  005506  5019               	movf	___awmod@sign^0,w,c
  9399  005508  B4D8               	btfsc	status,2,c
  9400  00550A  EF89  F02A         	goto	u8761
  9401  00550E  EF8B  F02A         	goto	u8760
  9402  005512                     u8761:
  9403  005512  EF8F  F02A         	goto	l8378
  9404  005516                     u8760:
  9405  005516  6C14               	negf	___awmod@dividend^0,c
  9406  005518  1E15               	comf	(___awmod@dividend+1)^0,f,c
  9407  00551A  B0D8               	btfsc	status,0,c
  9408  00551C  2A15               	incf	(___awmod@dividend+1)^0,f,c
  9409  00551E                     l8378:
  9410  00551E  C014  F014         	movff	___awmod@dividend,?___awmod
  9411  005522  C015  F015         	movff	___awmod@dividend+1,?___awmod+1
  9412  005526  0012               	return		;funcret
  9413  005528                     __end_of___awmod:
  9414                           	callstack 0
  9415                           
  9416 ;; *************** function _dtoa *****************
  9417 ;; Defined at:
  9418 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  9419 ;; Parameters:    Size  Location     Type
  9420 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  9421 ;;		 -> NULL(0), 
  9422 ;;  d               8    2[BANK0 ] long long 
  9423 ;; Auto vars:     Size  Location     Type
  9424 ;;  n               8   18[BANK0 ] long long 
  9425 ;;  i               2   26[BANK0 ] int 
  9426 ;;  s               2   16[BANK0 ] int 
  9427 ;;  w               2   14[BANK0 ] int 
  9428 ;;  p               2   12[BANK0 ] int 
  9429 ;; Return value:  Size  Location     Type
  9430 ;;                  2    0[BANK0 ] int 
  9431 ;; Registers used:
  9432 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9433 ;; Tracked objects:
  9434 ;;		On entry : 0/0
  9435 ;;		On exit  : 0/0
  9436 ;;		Unchanged: 0/0
  9437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9438 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9439 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9440 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9441 ;;      Totals:         8      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9442 ;;Total ram usage:       36 bytes
  9443 ;; Hardware stack levels used: 1
  9444 ;; Hardware stack levels required when called: 13
  9445 ;; This function calls:
  9446 ;;		___aodiv
  9447 ;;		___aomod
  9448 ;;		_abs
  9449 ;;		_pad
  9450 ;; This function is called by:
  9451 ;;		_vfpfcnvrt
  9452 ;; This function uses a non-reentrant model
  9453 ;;
  9454                           
  9455                           	psect	text32
  9456  003312                     __ptext32:
  9457                           	callstack 0
  9458  003312                     _dtoa:
  9459                           	callstack 12
  9460  003312                     
  9461                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  9462  003312  C062  F072         	movff	dtoa@d,dtoa@n
  9463  003316  C063  F073         	movff	dtoa@d+1,dtoa@n+1
  9464  00331A  C064  F074         	movff	dtoa@d+2,dtoa@n+2
  9465  00331E  C065  F075         	movff	dtoa@d+3,dtoa@n+3
  9466  003322  C066  F076         	movff	dtoa@d+4,dtoa@n+4
  9467  003326  C067  F077         	movff	dtoa@d+5,dtoa@n+5
  9468  00332A  C068  F078         	movff	dtoa@d+6,dtoa@n+6
  9469  00332E  C069  F079         	movff	dtoa@d+7,dtoa@n+7
  9470  003332                     
  9471                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  9472  003332  0100               	movlb	0	; () banked
  9473  003334  BF79               	btfsc	(dtoa@n+7)& (0+255),7,b
  9474  003336  EF9F  F019         	goto	u9271
  9475  00333A  EFA2  F019         	goto	u9270
  9476  00333E                     u9271:
  9477  00333E  0E01               	movlw	1
  9478  003340  EFA3  F019         	goto	u9280
  9479  003344                     u9270:
  9480  003344  0E00               	movlw	0
  9481  003346                     u9280:
  9482  003346  6F70               	movwf	dtoa@s& (0+255),b
  9483  003348  6B71               	clrf	(dtoa@s+1)& (0+255),b
  9484                           
  9485                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  9486  00334A  5170               	movf	dtoa@s& (0+255),w,b
  9487  00334C  1171               	iorwf	(dtoa@s+1)& (0+255),w,b
  9488  00334E  B4D8               	btfsc	status,2,c
  9489  003350  EFAC  F019         	goto	u9291
  9490  003354  EFAE  F019         	goto	u9290
  9491  003358                     u9291:
  9492  003358  EFBE  F019         	goto	l8606
  9493  00335C                     u9290:
  9494  00335C                     
  9495                           ; BSR set to: 0
  9496                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  9497  00335C  1F79               	comf	(dtoa@n+7)& (0+255),f,b
  9498  00335E  1F78               	comf	(dtoa@n+6)& (0+255),f,b
  9499  003360  1F77               	comf	(dtoa@n+5)& (0+255),f,b
  9500  003362  1F76               	comf	(dtoa@n+4)& (0+255),f,b
  9501  003364  1F75               	comf	(dtoa@n+3)& (0+255),f,b
  9502  003366  1F74               	comf	(dtoa@n+2)& (0+255),f,b
  9503  003368  1F73               	comf	(dtoa@n+1)& (0+255),f,b
  9504  00336A  6D72               	negf	dtoa@n& (0+255),b
  9505  00336C  0E00               	movlw	0
  9506  00336E  2373               	addwfc	(dtoa@n+1)& (0+255),f,b
  9507  003370  2374               	addwfc	(dtoa@n+2)& (0+255),f,b
  9508  003372  2375               	addwfc	(dtoa@n+3)& (0+255),f,b
  9509  003374  2376               	addwfc	(dtoa@n+4)& (0+255),f,b
  9510  003376  2377               	addwfc	(dtoa@n+5)& (0+255),f,b
  9511  003378  2378               	addwfc	(dtoa@n+6)& (0+255),f,b
  9512  00337A  2379               	addwfc	(dtoa@n+7)& (0+255),f,b
  9513  00337C                     l8606:
  9514                           
  9515                           ; BSR set to: 0
  9516                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  9517  00337C  BE3B               	btfsc	(_prec+1)^0,7,c
  9518  00337E  EFC3  F019         	goto	u9301
  9519  003382  EFC5  F019         	goto	u9300
  9520  003386                     u9301:
  9521  003386  EFC6  F019         	goto	l8610
  9522  00338A                     u9300:
  9523  00338A                     
  9524                           ; BSR set to: 0
  9525                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  9526  00338A  923C               	bcf	_flags^0,1,c
  9527  00338C                     l8610:
  9528                           
  9529                           ; BSR set to: 0
  9530                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  9531  00338C  BE3B               	btfsc	(_prec+1)^0,7,c
  9532  00338E  EFD3  F019         	goto	u9310
  9533  003392  503B               	movf	(_prec+1)^0,w,c
  9534  003394  E106               	bnz	u9311
  9535  003396  043A               	decf	_prec^0,w,c
  9536  003398  B0D8               	btfsc	status,0,c
  9537  00339A  EFD1  F019         	goto	u9311
  9538  00339E  EFD3  F019         	goto	u9310
  9539  0033A2                     u9311:
  9540  0033A2  EFD9  F019         	goto	l2138
  9541  0033A6                     u9310:
  9542  0033A6                     
  9543                           ; BSR set to: 0
  9544  0033A6  0E00               	movlw	0
  9545  0033A8  6F6D               	movwf	(dtoa@p+1)& (0+255),b
  9546  0033AA  0E01               	movlw	1
  9547  0033AC  6F6C               	movwf	dtoa@p& (0+255),b
  9548  0033AE  EFDD  F019         	goto	l2140
  9549  0033B2                     l2138:
  9550                           
  9551                           ; BSR set to: 0
  9552  0033B2  C03A  F06C         	movff	_prec,dtoa@p
  9553  0033B6  C03B  F06D         	movff	_prec+1,dtoa@p+1
  9554  0033BA                     l2140:
  9555                           
  9556                           ; BSR set to: 0
  9557                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  9558  0033BA  C12A  F06E         	movff	_width,dtoa@w
  9559  0033BE  C12B  F06F         	movff	_width+1,dtoa@w+1
  9560  0033C2                     
  9561                           ; BSR set to: 0
  9562                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  9563  0033C2  5170               	movf	dtoa@s& (0+255),w,b
  9564  0033C4  1171               	iorwf	(dtoa@s+1)& (0+255),w,b
  9565  0033C6  A4D8               	btfss	status,2,c
  9566  0033C8  EFE8  F019         	goto	u9321
  9567  0033CC  EFEA  F019         	goto	u9320
  9568  0033D0                     u9321:
  9569  0033D0  EFF1  F019         	goto	l8618
  9570  0033D4                     u9320:
  9571  0033D4                     
  9572                           ; BSR set to: 0
  9573  0033D4  A43C               	btfss	_flags^0,2,c
  9574  0033D6  EFEF  F019         	goto	u9331
  9575  0033DA  EFF1  F019         	goto	u9330
  9576  0033DE                     u9331:
  9577  0033DE  EFF4  F019         	goto	l8620
  9578  0033E2                     u9330:
  9579  0033E2                     l8618:
  9580                           
  9581                           ; BSR set to: 0
  9582                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  9583  0033E2  076E               	decf	dtoa@w& (0+255),f,b
  9584  0033E4  A0D8               	btfss	status,0,c
  9585  0033E6  076F               	decf	(dtoa@w+1)& (0+255),f,b
  9586  0033E8                     l8620:
  9587                           
  9588                           ; BSR set to: 0
  9589                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  9590  0033E8  0E00               	movlw	0
  9591  0033EA  6F7B               	movwf	(dtoa@i+1)& (0+255),b
  9592  0033EC  0E4F               	movlw	79
  9593  0033EE  6F7A               	movwf	dtoa@i& (0+255),b
  9594  0033F0                     
  9595                           ; BSR set to: 0
  9596                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  9597  0033F0  0E00               	movlw	0
  9598  0033F2  0101               	movlb	1	; () banked
  9599  0033F4  6F94               	movwf	(_dbuf+79)& (0+255),b
  9600                           
  9601                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9602  0033F6  EF7A  F01A         	goto	l8634
  9603  0033FA                     l8624:
  9604                           
  9605                           ; BSR set to: 0
  9606                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  9607  0033FA  077A               	decf	dtoa@i& (0+255),f,b
  9608  0033FC  A0D8               	btfss	status,0,c
  9609  0033FE  077B               	decf	(dtoa@i+1)& (0+255),f,b
  9610  003400                     
  9611                           ; BSR set to: 0
  9612                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  9613  003400  0E45               	movlw	low _dbuf
  9614  003402  257A               	addwf	dtoa@i& (0+255),w,b
  9615  003404  6ED9               	movwf	fsr2l,c
  9616  003406  0E01               	movlw	high _dbuf
  9617  003408  217B               	addwfc	(dtoa@i+1)& (0+255),w,b
  9618  00340A  6EDA               	movwf	fsr2h,c
  9619  00340C  C072  F014         	movff	dtoa@n,___aomod@dividend
  9620  003410  C073  F015         	movff	dtoa@n+1,___aomod@dividend+1
  9621  003414  C074  F016         	movff	dtoa@n+2,___aomod@dividend+2
  9622  003418  C075  F017         	movff	dtoa@n+3,___aomod@dividend+3
  9623  00341C  C076  F018         	movff	dtoa@n+4,___aomod@dividend+4
  9624  003420  C077  F019         	movff	dtoa@n+5,___aomod@dividend+5
  9625  003424  C078  F01A         	movff	dtoa@n+6,___aomod@dividend+6
  9626  003428  C079  F01B         	movff	dtoa@n+7,___aomod@dividend+7
  9627  00342C  0E0A               	movlw	10
  9628  00342E  6E1C               	movwf	___aomod@divisor^0,c
  9629  003430  0E00               	movlw	0
  9630  003432  6E1D               	movwf	(___aomod@divisor+1)^0,c
  9631  003434  0E00               	movlw	0
  9632  003436  6E1E               	movwf	(___aomod@divisor+2)^0,c
  9633  003438  0E00               	movlw	0
  9634  00343A  6E1F               	movwf	(___aomod@divisor+3)^0,c
  9635  00343C  0E00               	movlw	0
  9636  00343E  6E20               	movwf	(___aomod@divisor+4)^0,c
  9637  003440  0E00               	movlw	0
  9638  003442  6E21               	movwf	(___aomod@divisor+5)^0,c
  9639  003444  0E00               	movlw	0
  9640  003446  6E22               	movwf	(___aomod@divisor+6)^0,c
  9641  003448  0E00               	movlw	0
  9642  00344A  6E23               	movwf	(___aomod@divisor+7)^0,c
  9643  00344C  ECE8  F021         	call	___aomod	;wreg free
  9644  003450  C014  F031         	movff	?___aomod,??_dtoa
  9645  003454  C015  F032         	movff	?___aomod+1,??_dtoa+1
  9646  003458  C016  F033         	movff	?___aomod+2,??_dtoa+2
  9647  00345C  C017  F034         	movff	?___aomod+3,??_dtoa+3
  9648  003460  C018  F035         	movff	?___aomod+4,??_dtoa+4
  9649  003464  C019  F036         	movff	?___aomod+5,??_dtoa+5
  9650  003468  C01A  F037         	movff	?___aomod+6,??_dtoa+6
  9651  00346C  C01B  F038         	movff	?___aomod+7,??_dtoa+7
  9652  003470  C031  F026         	movff	??_dtoa,abs@a
  9653  003474  C033  F027         	movff	??_dtoa+2,abs@a+1
  9654  003478  EC79  F02E         	call	_abs	;wreg free
  9655  00347C  5026               	movf	?_abs^0,w,c
  9656  00347E  0F30               	addlw	48
  9657  003480  6EDF               	movwf	indf2,c
  9658  003482                     
  9659                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  9660  003482  0100               	movlb	0	; () banked
  9661  003484  076C               	decf	dtoa@p& (0+255),f,b
  9662  003486  A0D8               	btfss	status,0,c
  9663  003488  076D               	decf	(dtoa@p+1)& (0+255),f,b
  9664  00348A                     
  9665                           ; BSR set to: 0
  9666                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  9667  00348A  076E               	decf	dtoa@w& (0+255),f,b
  9668  00348C  A0D8               	btfss	status,0,c
  9669  00348E  076F               	decf	(dtoa@w+1)& (0+255),f,b
  9670  003490                     
  9671                           ; BSR set to: 0
  9672                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  9673  003490  C072  F014         	movff	dtoa@n,___aodiv@dividend
  9674  003494  C073  F015         	movff	dtoa@n+1,___aodiv@dividend+1
  9675  003498  C074  F016         	movff	dtoa@n+2,___aodiv@dividend+2
  9676  00349C  C075  F017         	movff	dtoa@n+3,___aodiv@dividend+3
  9677  0034A0  C076  F018         	movff	dtoa@n+4,___aodiv@dividend+4
  9678  0034A4  C077  F019         	movff	dtoa@n+5,___aodiv@dividend+5
  9679  0034A8  C078  F01A         	movff	dtoa@n+6,___aodiv@dividend+6
  9680  0034AC  C079  F01B         	movff	dtoa@n+7,___aodiv@dividend+7
  9681  0034B0  0E0A               	movlw	10
  9682  0034B2  6E1C               	movwf	___aodiv@divisor^0,c
  9683  0034B4  0E00               	movlw	0
  9684  0034B6  6E1D               	movwf	(___aodiv@divisor+1)^0,c
  9685  0034B8  0E00               	movlw	0
  9686  0034BA  6E1E               	movwf	(___aodiv@divisor+2)^0,c
  9687  0034BC  0E00               	movlw	0
  9688  0034BE  6E1F               	movwf	(___aodiv@divisor+3)^0,c
  9689  0034C0  0E00               	movlw	0
  9690  0034C2  6E20               	movwf	(___aodiv@divisor+4)^0,c
  9691  0034C4  0E00               	movlw	0
  9692  0034C6  6E21               	movwf	(___aodiv@divisor+5)^0,c
  9693  0034C8  0E00               	movlw	0
  9694  0034CA  6E22               	movwf	(___aodiv@divisor+6)^0,c
  9695  0034CC  0E00               	movlw	0
  9696  0034CE  6E23               	movwf	(___aodiv@divisor+7)^0,c
  9697  0034D0  EC24  F021         	call	___aodiv	;wreg free
  9698  0034D4  C014  F072         	movff	?___aodiv,dtoa@n
  9699  0034D8  C015  F073         	movff	?___aodiv+1,dtoa@n+1
  9700  0034DC  C016  F074         	movff	?___aodiv+2,dtoa@n+2
  9701  0034E0  C017  F075         	movff	?___aodiv+3,dtoa@n+3
  9702  0034E4  C018  F076         	movff	?___aodiv+4,dtoa@n+4
  9703  0034E8  C019  F077         	movff	?___aodiv+5,dtoa@n+5
  9704  0034EC  C01A  F078         	movff	?___aodiv+6,dtoa@n+6
  9705  0034F0  C01B  F079         	movff	?___aodiv+7,dtoa@n+7
  9706  0034F4                     l8634:
  9707                           
  9708                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9709  0034F4  0100               	movlb	0	; () banked
  9710  0034F6  BF7B               	btfsc	(dtoa@i+1)& (0+255),7,b
  9711  0034F8  EF86  F01A         	goto	u9341
  9712  0034FC  517B               	movf	(dtoa@i+1)& (0+255),w,b
  9713  0034FE  E108               	bnz	u9340
  9714  003500  057A               	decf	dtoa@i& (0+255),w,b
  9715  003502  A0D8               	btfss	status,0,c
  9716  003504  EF86  F01A         	goto	u9341
  9717  003508  EF88  F01A         	goto	u9340
  9718  00350C                     u9341:
  9719  00350C  EFB8  F01A         	goto	l8644
  9720  003510                     u9340:
  9721  003510                     
  9722                           ; BSR set to: 0
  9723  003510  5172               	movf	dtoa@n& (0+255),w,b
  9724  003512  1173               	iorwf	(dtoa@n+1)& (0+255),w,b
  9725  003514  1174               	iorwf	(dtoa@n+2)& (0+255),w,b
  9726  003516  1175               	iorwf	(dtoa@n+3)& (0+255),w,b
  9727  003518  1176               	iorwf	(dtoa@n+4)& (0+255),w,b
  9728  00351A  1177               	iorwf	(dtoa@n+5)& (0+255),w,b
  9729  00351C  1178               	iorwf	(dtoa@n+6)& (0+255),w,b
  9730  00351E  1179               	iorwf	(dtoa@n+7)& (0+255),w,b
  9731  003520  A4D8               	btfss	status,2,c
  9732  003522  EF95  F01A         	goto	u9351
  9733  003526  EF97  F01A         	goto	u9350
  9734  00352A                     u9351:
  9735  00352A  EFFD  F019         	goto	l8624
  9736  00352E                     u9350:
  9737  00352E                     
  9738                           ; BSR set to: 0
  9739  00352E  BF6D               	btfsc	(dtoa@p+1)& (0+255),7,b
  9740  003530  EFA4  F01A         	goto	u9360
  9741  003534  516D               	movf	(dtoa@p+1)& (0+255),w,b
  9742  003536  E106               	bnz	u9361
  9743  003538  056C               	decf	dtoa@p& (0+255),w,b
  9744  00353A  B0D8               	btfsc	status,0,c
  9745  00353C  EFA2  F01A         	goto	u9361
  9746  003540  EFA4  F01A         	goto	u9360
  9747  003544                     u9361:
  9748  003544  EFFD  F019         	goto	l8624
  9749  003548                     u9360:
  9750  003548                     
  9751                           ; BSR set to: 0
  9752  003548  BF6F               	btfsc	(dtoa@w+1)& (0+255),7,b
  9753  00354A  EFAF  F01A         	goto	u9371
  9754  00354E  516F               	movf	(dtoa@w+1)& (0+255),w,b
  9755  003550  E108               	bnz	u9370
  9756  003552  056E               	decf	dtoa@w& (0+255),w,b
  9757  003554  A0D8               	btfss	status,0,c
  9758  003556  EFAF  F01A         	goto	u9371
  9759  00355A  EFB1  F01A         	goto	u9370
  9760  00355E                     u9371:
  9761  00355E  EFB8  F01A         	goto	l8644
  9762  003562                     u9370:
  9763  003562                     
  9764                           ; BSR set to: 0
  9765  003562  B23C               	btfsc	_flags^0,1,c
  9766  003564  EFB6  F01A         	goto	u9381
  9767  003568  EFB8  F01A         	goto	u9380
  9768  00356C                     u9381:
  9769  00356C  EFFD  F019         	goto	l8624
  9770  003570                     u9380:
  9771  003570                     l8644:
  9772                           
  9773                           ; BSR set to: 0
  9774                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  9775  003570  5170               	movf	dtoa@s& (0+255),w,b
  9776  003572  1171               	iorwf	(dtoa@s+1)& (0+255),w,b
  9777  003574  A4D8               	btfss	status,2,c
  9778  003576  EFBF  F01A         	goto	u9391
  9779  00357A  EFC1  F01A         	goto	u9390
  9780  00357E                     u9391:
  9781  00357E  EFC8  F01A         	goto	l8648
  9782  003582                     u9390:
  9783  003582                     
  9784                           ; BSR set to: 0
  9785  003582  A43C               	btfss	_flags^0,2,c
  9786  003584  EFC6  F01A         	goto	u9401
  9787  003588  EFC8  F01A         	goto	u9400
  9788  00358C                     u9401:
  9789  00358C  EFE7  F01A         	goto	l8658
  9790  003590                     u9400:
  9791  003590                     l8648:
  9792                           
  9793                           ; BSR set to: 0
  9794                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  9795  003590  077A               	decf	dtoa@i& (0+255),f,b
  9796  003592  A0D8               	btfss	status,0,c
  9797  003594  077B               	decf	(dtoa@i+1)& (0+255),f,b
  9798  003596                     
  9799                           ; BSR set to: 0
  9800                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  9801  003596  5170               	movf	dtoa@s& (0+255),w,b
  9802  003598  1171               	iorwf	(dtoa@s+1)& (0+255),w,b
  9803  00359A  A4D8               	btfss	status,2,c
  9804  00359C  EFD2  F01A         	goto	u9411
  9805  0035A0  EFD4  F01A         	goto	u9410
  9806  0035A4                     u9411:
  9807  0035A4  EFDA  F01A         	goto	l8654
  9808  0035A8                     u9410:
  9809  0035A8                     
  9810                           ; BSR set to: 0
  9811  0035A8  0E00               	movlw	0
  9812  0035AA  6F6B               	movwf	(_dtoa$3544+1)& (0+255),b
  9813  0035AC  0E2B               	movlw	43
  9814  0035AE  6F6A               	movwf	_dtoa$3544& (0+255),b
  9815  0035B0  EFDE  F01A         	goto	l8656
  9816  0035B4                     l8654:
  9817                           
  9818                           ; BSR set to: 0
  9819  0035B4  0E00               	movlw	0
  9820  0035B6  6F6B               	movwf	(_dtoa$3544+1)& (0+255),b
  9821  0035B8  0E2D               	movlw	45
  9822  0035BA  6F6A               	movwf	_dtoa$3544& (0+255),b
  9823  0035BC                     l8656:
  9824                           
  9825                           ; BSR set to: 0
  9826  0035BC  0E45               	movlw	low _dbuf
  9827  0035BE  257A               	addwf	dtoa@i& (0+255),w,b
  9828  0035C0  6ED9               	movwf	fsr2l,c
  9829  0035C2  0E01               	movlw	high _dbuf
  9830  0035C4  217B               	addwfc	(dtoa@i+1)& (0+255),w,b
  9831  0035C6  6EDA               	movwf	fsr2h,c
  9832  0035C8  0060  F1AB  FFDF   	movff	_dtoa$3544,indf2
  9833  0035CE                     l8658:
  9834                           
  9835                           ; BSR set to: 0
  9836                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  9837  0035CE  C060  F026         	movff	dtoa@fp,pad@fp
  9838  0035D2  C061  F027         	movff	dtoa@fp+1,pad@fp+1
  9839  0035D6  0E45               	movlw	low _dbuf
  9840  0035D8  257A               	addwf	dtoa@i& (0+255),w,b
  9841  0035DA  6E28               	movwf	pad@buf^0,c
  9842  0035DC  0E01               	movlw	high _dbuf
  9843  0035DE  217B               	addwfc	(dtoa@i+1)& (0+255),w,b
  9844  0035E0  6E29               	movwf	(pad@buf+1)^0,c
  9845  0035E2  C06E  F02A         	movff	dtoa@w,pad@p
  9846  0035E6  C06F  F02B         	movff	dtoa@w+1,pad@p+1
  9847  0035EA  EC7B  F029         	call	_pad	;wreg free
  9848  0035EE  C026  F060         	movff	?_pad,?_dtoa
  9849  0035F2  C027  F061         	movff	?_pad+1,?_dtoa+1
  9850  0035F6  0012               	return		;funcret
  9851  0035F8                     __end_of_dtoa:
  9852                           	callstack 0
  9853                           
  9854 ;; *************** function _pad *****************
  9855 ;; Defined at:
  9856 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  9857 ;; Parameters:    Size  Location     Type
  9858 ;;  fp              2   37[COMRAM] PTR struct _IO_FILE
  9859 ;;		 -> NULL(0), 
  9860 ;;  buf             2   39[COMRAM] PTR unsigned char 
  9861 ;;		 -> dbuf(80), 
  9862 ;;  p               2   41[COMRAM] int 
  9863 ;; Auto vars:     Size  Location     Type
  9864 ;;  w               2   46[COMRAM] int 
  9865 ;;  i               2   44[COMRAM] int 
  9866 ;; Return value:  Size  Location     Type
  9867 ;;                  2   37[COMRAM] int 
  9868 ;; Registers used:
  9869 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9870 ;; Tracked objects:
  9871 ;;		On entry : 0/0
  9872 ;;		On exit  : 0/0
  9873 ;;		Unchanged: 0/0
  9874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9875 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9876 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9877 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9878 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9879 ;;Total ram usage:       11 bytes
  9880 ;; Hardware stack levels used: 1
  9881 ;; Hardware stack levels required when called: 12
  9882 ;; This function calls:
  9883 ;;		_fputc
  9884 ;;		_fputs
  9885 ;;		_strlen
  9886 ;; This function is called by:
  9887 ;;		_dtoa
  9888 ;;		_efgtoa
  9889 ;;		_utoa
  9890 ;; This function uses a non-reentrant model
  9891 ;;
  9892                           
  9893                           	psect	text33
  9894  0052F6                     __ptext33:
  9895                           	callstack 0
  9896  0052F6                     _pad:
  9897                           	callstack 12
  9898  0052F6                     
  9899                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  9900  0052F6  A03C               	btfss	_flags^0,0,c
  9901  0052F8  EF80  F029         	goto	u9001
  9902  0052FC  EF82  F029         	goto	u9000
  9903  005300                     u9001:
  9904  005300  EF8C  F029         	goto	l8514
  9905  005304                     u9000:
  9906  005304                     
  9907                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  9908  005304  C028  F01F         	movff	pad@buf,fputs@s
  9909  005308  C029  F020         	movff	pad@buf+1,fputs@s+1
  9910  00530C  C026  F021         	movff	pad@fp,fputs@fp
  9911  005310  C027  F022         	movff	pad@fp+1,fputs@fp+1
  9912  005314  EC57  F02E         	call	_fputs	;wreg free
  9913  005318                     l8514:
  9914                           
  9915                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  9916  005318  BE2B               	btfsc	(pad@p+1)^0,7,c
  9917  00531A  EF91  F029         	goto	u9011
  9918  00531E  EF93  F029         	goto	u9010
  9919  005322                     u9011:
  9920  005322  EF99  F029         	goto	l8518
  9921  005326                     u9010:
  9922  005326  C02A  F02F         	movff	pad@p,pad@w
  9923  00532A  C02B  F030         	movff	pad@p+1,pad@w+1
  9924  00532E  EF9D  F029         	goto	l2127
  9925  005332                     l8518:
  9926  005332  0E00               	movlw	0
  9927  005334  6E30               	movwf	(pad@w+1)^0,c
  9928  005336  0E00               	movlw	0
  9929  005338  6E2F               	movwf	pad@w^0,c
  9930  00533A                     l2127:
  9931                           
  9932                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  9933  00533A  0E00               	movlw	0
  9934  00533C  6E2E               	movwf	(pad@i+1)^0,c
  9935  00533E  0E00               	movlw	0
  9936  005340  6E2D               	movwf	pad@i^0,c
  9937                           
  9938                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  9939  005342  EFAF  F029         	goto	l8524
  9940  005346                     l8520:
  9941                           
  9942                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  9943  005346  0E00               	movlw	0
  9944  005348  6E17               	movwf	(fputc@c+1)^0,c
  9945  00534A  0E20               	movlw	32
  9946  00534C  6E16               	movwf	fputc@c^0,c
  9947  00534E  C026  F018         	movff	pad@fp,fputc@fp
  9948  005352  C027  F019         	movff	pad@fp+1,fputc@fp+1
  9949  005356  EC3C  F02B         	call	_fputc	;wreg free
  9950  00535A                     
  9951                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  9952  00535A  4A2D               	infsnz	pad@i^0,f,c
  9953  00535C  2A2E               	incf	(pad@i+1)^0,f,c
  9954  00535E                     l8524:
  9955                           
  9956                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  9957  00535E  502F               	movf	pad@w^0,w,c
  9958  005360  5C2D               	subwf	pad@i^0,w,c
  9959  005362  502E               	movf	(pad@i+1)^0,w,c
  9960  005364  0A80               	xorlw	128
  9961  005366  6E2C               	movwf	??_pad^0,c
  9962  005368  5030               	movf	(pad@w+1)^0,w,c
  9963  00536A  0A80               	xorlw	128
  9964  00536C  582C               	subwfb	??_pad^0,w,c
  9965  00536E  A0D8               	btfss	status,0,c
  9966  005370  EFBC  F029         	goto	u9021
  9967  005374  EFBE  F029         	goto	u9020
  9968  005378                     u9021:
  9969  005378  EFA3  F029         	goto	l8520
  9970  00537C                     u9020:
  9971  00537C                     
  9972                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  9973  00537C  B03C               	btfsc	_flags^0,0,c
  9974  00537E  EFC3  F029         	goto	u9031
  9975  005382  EFC5  F029         	goto	u9030
  9976  005386                     u9031:
  9977  005386  EFCF  F029         	goto	l8528
  9978  00538A                     u9030:
  9979  00538A                     
  9980                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  9981  00538A  C028  F01F         	movff	pad@buf,fputs@s
  9982  00538E  C029  F020         	movff	pad@buf+1,fputs@s+1
  9983  005392  C026  F021         	movff	pad@fp,fputs@fp
  9984  005396  C027  F022         	movff	pad@fp+1,fputs@fp+1
  9985  00539A  EC57  F02E         	call	_fputs	;wreg free
  9986  00539E                     l8528:
  9987                           
  9988                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  9989  00539E  C028  F014         	movff	pad@buf,strlen@s
  9990  0053A2  C029  F015         	movff	pad@buf+1,strlen@s+1
  9991  0053A6  ECB8  F02E         	call	_strlen	;wreg free
  9992  0053AA  502F               	movf	pad@w^0,w,c
  9993  0053AC  2414               	addwf	?_strlen^0,w,c
  9994  0053AE  6E26               	movwf	?_pad^0,c
  9995  0053B0  5030               	movf	(pad@w+1)^0,w,c
  9996  0053B2  2015               	addwfc	(?_strlen+1)^0,w,c
  9997  0053B4  6E27               	movwf	(?_pad+1)^0,c
  9998  0053B6  0012               	return		;funcret
  9999  0053B8                     __end_of_pad:
 10000                           	callstack 0
 10001                           
 10002 ;; *************** function _strlen *****************
 10003 ;; Defined at:
 10004 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
 10005 ;; Parameters:    Size  Location     Type
 10006 ;;  s               2   19[COMRAM] PTR const unsigned char 
 10007 ;;		 -> dbuf(80), 
 10008 ;; Auto vars:     Size  Location     Type
 10009 ;;  a               2   21[COMRAM] PTR const unsigned char 
 10010 ;;		 -> dbuf(80), 
 10011 ;; Return value:  Size  Location     Type
 10012 ;;                  2   19[COMRAM] unsigned int 
 10013 ;; Registers used:
 10014 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10015 ;; Tracked objects:
 10016 ;;		On entry : 0/0
 10017 ;;		On exit  : 0/0
 10018 ;;		Unchanged: 0/0
 10019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10020 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10021 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10023 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10024 ;;Total ram usage:        4 bytes
 10025 ;; Hardware stack levels used: 1
 10026 ;; Hardware stack levels required when called: 8
 10027 ;; This function calls:
 10028 ;;		Nothing
 10029 ;; This function is called by:
 10030 ;;		_pad
 10031 ;; This function uses a non-reentrant model
 10032 ;;
 10033                           
 10034                           	psect	text34
 10035  005D70                     __ptext34:
 10036                           	callstack 0
 10037  005D70                     _strlen:
 10038                           	callstack 15
 10039  005D70  C014  F016         	movff	strlen@s,strlen@a
 10040  005D74  C015  F017         	movff	strlen@s+1,strlen@a+1
 10041  005D78  EFC0  F02E         	goto	l7938
 10042  005D7C                     l7936:
 10043  005D7C  4A14               	infsnz	strlen@s^0,f,c
 10044  005D7E  2A15               	incf	(strlen@s+1)^0,f,c
 10045  005D80                     l7938:
 10046  005D80  0060  F053  FFD9   	movff	strlen@s,fsr2l
 10047  005D86  0060  F057  FFDA   	movff	strlen@s+1,fsr2h
 10048  005D8C  50DF               	movf	indf2,w,c
 10049  005D8E  A4D8               	btfss	status,2,c
 10050  005D90  EFCC  F02E         	goto	u8071
 10051  005D94  EFCE  F02E         	goto	u8070
 10052  005D98                     u8071:
 10053  005D98  EFBE  F02E         	goto	l7936
 10054  005D9C                     u8070:
 10055  005D9C  5016               	movf	strlen@a^0,w,c
 10056  005D9E  5C14               	subwf	strlen@s^0,w,c
 10057  005DA0  6E14               	movwf	?_strlen^0,c
 10058  005DA2  5017               	movf	(strlen@a+1)^0,w,c
 10059  005DA4  5815               	subwfb	(strlen@s+1)^0,w,c
 10060  005DA6  6E15               	movwf	(?_strlen+1)^0,c
 10061  005DA8  0012               	return		;funcret
 10062  005DAA                     __end_of_strlen:
 10063                           	callstack 0
 10064                           
 10065 ;; *************** function _fputs *****************
 10066 ;; Defined at:
 10067 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
 10068 ;; Parameters:    Size  Location     Type
 10069 ;;  s               2   30[COMRAM] PTR const unsigned char 
 10070 ;;		 -> dbuf(80), 
 10071 ;;  fp              2   32[COMRAM] PTR struct _IO_FILE
 10072 ;;		 -> NULL(0), 
 10073 ;; Auto vars:     Size  Location     Type
 10074 ;;  i               2   35[COMRAM] int 
 10075 ;;  c               1   34[COMRAM] unsigned char 
 10076 ;; Return value:  Size  Location     Type
 10077 ;;                  2   30[COMRAM] int 
 10078 ;; Registers used:
 10079 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10080 ;; Tracked objects:
 10081 ;;		On entry : 0/0
 10082 ;;		On exit  : 0/0
 10083 ;;		Unchanged: 0/0
 10084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10085 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10086 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10088 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10089 ;;Total ram usage:        7 bytes
 10090 ;; Hardware stack levels used: 1
 10091 ;; Hardware stack levels required when called: 11
 10092 ;; This function calls:
 10093 ;;		_fputc
 10094 ;; This function is called by:
 10095 ;;		_pad
 10096 ;; This function uses a non-reentrant model
 10097 ;;
 10098                           
 10099                           	psect	text35
 10100  005CAE                     __ptext35:
 10101                           	callstack 0
 10102  005CAE                     _fputs:
 10103                           	callstack 12
 10104  005CAE  0E00               	movlw	0
 10105  005CB0  6E25               	movwf	(fputs@i+1)^0,c
 10106  005CB2  0E00               	movlw	0
 10107  005CB4  6E24               	movwf	fputs@i^0,c
 10108  005CB6  EF68  F02E         	goto	l7932
 10109  005CBA                     l7928:
 10110  005CBA  C023  F016         	movff	fputs@c,fputc@c
 10111  005CBE  6A17               	clrf	(fputc@c+1)^0,c
 10112  005CC0  C021  F018         	movff	fputs@fp,fputc@fp
 10113  005CC4  C022  F019         	movff	fputs@fp+1,fputc@fp+1
 10114  005CC8  EC3C  F02B         	call	_fputc	;wreg free
 10115  005CCC  4A24               	infsnz	fputs@i^0,f,c
 10116  005CCE  2A25               	incf	(fputs@i+1)^0,f,c
 10117  005CD0                     l7932:
 10118  005CD0  5024               	movf	fputs@i^0,w,c
 10119  005CD2  241F               	addwf	fputs@s^0,w,c
 10120  005CD4  6ED9               	movwf	fsr2l,c
 10121  005CD6  5025               	movf	(fputs@i+1)^0,w,c
 10122  005CD8  2020               	addwfc	(fputs@s+1)^0,w,c
 10123  005CDA  6EDA               	movwf	fsr2h,c
 10124  005CDC  50DF               	movf	indf2,w,c
 10125  005CDE  6E23               	movwf	fputs@c^0,c
 10126  005CE0  5023               	movf	fputs@c^0,w,c
 10127  005CE2  A4D8               	btfss	status,2,c
 10128  005CE4  EF76  F02E         	goto	u8061
 10129  005CE8  EF78  F02E         	goto	u8060
 10130  005CEC                     u8061:
 10131  005CEC  EF5D  F02E         	goto	l7928
 10132  005CF0                     u8060:
 10133  005CF0  0012               	return		;funcret
 10134  005CF2                     __end_of_fputs:
 10135                           	callstack 0
 10136                           
 10137 ;; *************** function _fputc *****************
 10138 ;; Defined at:
 10139 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
 10140 ;; Parameters:    Size  Location     Type
 10141 ;;  c               2   21[COMRAM] int 
 10142 ;;  fp              2   23[COMRAM] PTR struct _IO_FILE
 10143 ;;		 -> NULL(0), 
 10144 ;; Auto vars:     Size  Location     Type
 10145 ;;		None
 10146 ;; Return value:  Size  Location     Type
 10147 ;;                  2   21[COMRAM] int 
 10148 ;; Registers used:
 10149 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10150 ;; Tracked objects:
 10151 ;;		On entry : 0/0
 10152 ;;		On exit  : 0/0
 10153 ;;		Unchanged: 0/0
 10154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10155 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10157 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10158 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10159 ;;Total ram usage:        9 bytes
 10160 ;; Hardware stack levels used: 1
 10161 ;; Hardware stack levels required when called: 10
 10162 ;; This function calls:
 10163 ;;		_putch
 10164 ;; This function is called by:
 10165 ;;		_pad
 10166 ;;		_vfpfcnvrt
 10167 ;;		_fputs
 10168 ;; This function uses a non-reentrant model
 10169 ;;
 10170                           
 10171                           	psect	text36
 10172  005678                     __ptext36:
 10173                           	callstack 0
 10174  005678                     _fputc:
 10175                           	callstack 12
 10176  005678  5018               	movf	fputc@fp^0,w,c
 10177  00567A  1019               	iorwf	(fputc@fp+1)^0,w,c
 10178  00567C  B4D8               	btfsc	status,2,c
 10179  00567E  EF43  F02B         	goto	u7631
 10180  005682  EF45  F02B         	goto	u7630
 10181  005686                     u7631:
 10182  005686  EF4E  F02B         	goto	l7714
 10183  00568A                     u7630:
 10184  00568A  5018               	movf	fputc@fp^0,w,c
 10185  00568C  1019               	iorwf	(fputc@fp+1)^0,w,c
 10186  00568E  A4D8               	btfss	status,2,c
 10187  005690  EF4C  F02B         	goto	u7641
 10188  005694  EF4E  F02B         	goto	u7640
 10189  005698                     u7641:
 10190  005698  EF53  F02B         	goto	l7716
 10191  00569C                     u7640:
 10192  00569C                     l7714:
 10193  00569C  5016               	movf	fputc@c^0,w,c
 10194  00569E  EC00  F032         	call	_putch
 10195  0056A2  EF86  F02B         	goto	l2340
 10196  0056A6                     l7716:
 10197  0056A6  EE20 F004          	lfsr	2,4
 10198  0056AA  5018               	movf	fputc@fp^0,w,c
 10199  0056AC  26D9               	addwf	fsr2l,f,c
 10200  0056AE  5019               	movf	(fputc@fp+1)^0,w,c
 10201  0056B0  22DA               	addwfc	fsr2h,f,c
 10202  0056B2  50DE               	movf	postinc2,w,c
 10203  0056B4  10DE               	iorwf	postinc2,w,c
 10204  0056B6  B4D8               	btfsc	status,2,c
 10205  0056B8  EF60  F02B         	goto	u7651
 10206  0056BC  EF62  F02B         	goto	u7650
 10207  0056C0                     u7651:
 10208  0056C0  EF7D  F02B         	goto	l7720
 10209  0056C4                     u7650:
 10210  0056C4  EE20 F004          	lfsr	2,4
 10211  0056C8  5018               	movf	fputc@fp^0,w,c
 10212  0056CA  26D9               	addwf	fsr2l,f,c
 10213  0056CC  5019               	movf	(fputc@fp+1)^0,w,c
 10214  0056CE  22DA               	addwfc	fsr2h,f,c
 10215  0056D0  EE10 F002          	lfsr	1,2
 10216  0056D4  5018               	movf	fputc@fp^0,w,c
 10217  0056D6  26E1               	addwf	fsr1l,f,c
 10218  0056D8  5019               	movf	(fputc@fp+1)^0,w,c
 10219  0056DA  22E2               	addwfc	fsr1h,f,c
 10220  0056DC  50DE               	movf	postinc2,w,c
 10221  0056DE  5CE6               	subwf	postinc1,w,c
 10222  0056E0  50E6               	movf	postinc1,w,c
 10223  0056E2  0A80               	xorlw	128
 10224  0056E4  6E1E               	movwf	(??_fputc+4)^0,c
 10225  0056E6  50DE               	movf	postinc2,w,c
 10226  0056E8  0A80               	xorlw	128
 10227  0056EA  581E               	subwfb	(??_fputc+4)^0,w,c
 10228  0056EC  B0D8               	btfsc	status,0,c
 10229  0056EE  EF7B  F02B         	goto	u7661
 10230  0056F2  EF7D  F02B         	goto	u7660
 10231  0056F6                     u7661:
 10232  0056F6  EF86  F02B         	goto	l2340
 10233  0056FA                     u7660:
 10234  0056FA                     l7720:
 10235  0056FA  EE20 F002          	lfsr	2,2
 10236  0056FE  5018               	movf	fputc@fp^0,w,c
 10237  005700  26D9               	addwf	fsr2l,f,c
 10238  005702  5019               	movf	(fputc@fp+1)^0,w,c
 10239  005704  22DA               	addwfc	fsr2h,f,c
 10240  005706  2ADE               	incf	postinc2,f,c
 10241  005708  0E00               	movlw	0
 10242  00570A  22DD               	addwfc	postdec2,f,c
 10243  00570C                     l2340:
 10244  00570C  0012               	return		;funcret
 10245  00570E                     __end_of_fputc:
 10246                           	callstack 0
 10247                           
 10248 ;; *************** function _putch *****************
 10249 ;; Defined at:
 10250 ;;		line 230 in file "mcc_generated_files/uart1.c"
 10251 ;; Parameters:    Size  Location     Type
 10252 ;;  txData          1    wreg     unsigned char 
 10253 ;; Auto vars:     Size  Location     Type
 10254 ;;  txData          1   20[COMRAM] unsigned char 
 10255 ;; Return value:  Size  Location     Type
 10256 ;;                  1    wreg      void 
 10257 ;; Registers used:
 10258 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10259 ;; Tracked objects:
 10260 ;;		On entry : 0/0
 10261 ;;		On exit  : 0/0
 10262 ;;		Unchanged: 0/0
 10263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10265 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10267 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10268 ;;Total ram usage:        1 bytes
 10269 ;; Hardware stack levels used: 1
 10270 ;; Hardware stack levels required when called: 9
 10271 ;; This function calls:
 10272 ;;		_UART1_Write
 10273 ;; This function is called by:
 10274 ;;		_fputc
 10275 ;; This function uses a non-reentrant model
 10276 ;;
 10277                           
 10278                           	psect	text37
 10279  006400                     __ptext37:
 10280                           	callstack 0
 10281  006400                     _putch:
 10282                           	callstack 12
 10283                           
 10284                           ;incstack = 0
 10285                           ;putch@txData stored from wreg
 10286  006400  6E15               	movwf	putch@txData^0,c
 10287  006402                     
 10288                           ;mcc_generated_files/uart1.c: 230: void putch(char txData);mcc_generated_files/uart1.c: 
      +                          231: {;mcc_generated_files/uart1.c: 232:     UART1_Write(txData);
 10289  006402  5015               	movf	putch@txData^0,w,c
 10290  006404  ECC1  F02C         	call	_UART1_Write
 10291  006408  0012               	return		;funcret
 10292  00640A                     __end_of_putch:
 10293                           	callstack 0
 10294                           
 10295 ;; *************** function _UART1_Write *****************
 10296 ;; Defined at:
 10297 ;;		line 202 in file "mcc_generated_files/uart1.c"
 10298 ;; Parameters:    Size  Location     Type
 10299 ;;  txData          1    wreg     unsigned char 
 10300 ;; Auto vars:     Size  Location     Type
 10301 ;;  txData          1   19[COMRAM] unsigned char 
 10302 ;; Return value:  Size  Location     Type
 10303 ;;                  1    wreg      void 
 10304 ;; Registers used:
 10305 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10306 ;; Tracked objects:
 10307 ;;		On entry : 0/0
 10308 ;;		On exit  : 0/0
 10309 ;;		Unchanged: 0/0
 10310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10312 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10314 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10315 ;;Total ram usage:        1 bytes
 10316 ;; Hardware stack levels used: 1
 10317 ;; Hardware stack levels required when called: 8
 10318 ;; This function calls:
 10319 ;;		Nothing
 10320 ;; This function is called by:
 10321 ;;		_putch
 10322 ;; This function uses a non-reentrant model
 10323 ;;
 10324                           
 10325                           	psect	text38
 10326  005982                     __ptext38:
 10327                           	callstack 0
 10328  005982                     _UART1_Write:
 10329                           	callstack 12
 10330                           
 10331                           ;incstack = 0
 10332                           ;UART1_Write@txData stored from wreg
 10333  005982  6E14               	movwf	UART1_Write@txData^0,c
 10334  005984                     l7692:
 10335                           
 10336                           ;mcc_generated_files/uart1.c: 204:     while(0 == uart1TxBufferRemaining)
 10337  005984  0101               	movlb	1	; () banked
 10338  005986  51AB               	movf	_uart1TxBufferRemaining& (0+255),w,b	;volatile
 10339  005988  B4D8               	btfsc	status,2,c
 10340  00598A  EFC9  F02C         	goto	u7601
 10341  00598E  EFCB  F02C         	goto	u7600
 10342  005992                     u7601:
 10343  005992  EFC2  F02C         	goto	l7692
 10344  005996                     u7600:
 10345  005996                     
 10346                           ; BSR set to: 1
 10347                           ;mcc_generated_files/uart1.c: 208:     if(0 == PIE3bits.U1TXIE)
 10348  005996  0139               	movlb	57	; () banked
 10349  005998  B993               	btfsc	147,4,b	;volatile
 10350  00599A  EFD1  F02C         	goto	u7611
 10351  00599E  EFD3  F02C         	goto	u7610
 10352  0059A2                     u7611:
 10353  0059A2  EFD8  F02C         	goto	l309
 10354  0059A6                     u7610:
 10355  0059A6                     
 10356                           ; BSR set to: 57
 10357                           ;mcc_generated_files/uart1.c: 209:     {;mcc_generated_files/uart1.c: 210:         U1TXB
      +                           = txData;
 10358  0059A6  0060  F053  FDEA   	movff	UART1_Write@txData,15850	;volatile
 10359                           
 10360                           ;mcc_generated_files/uart1.c: 211:     }
 10361  0059AC  EFEF  F02C         	goto	l7706
 10362  0059B0                     l309:
 10363                           
 10364                           ; BSR set to: 57
 10365                           ;mcc_generated_files/uart1.c: 213:     {;mcc_generated_files/uart1.c: 214:         PIE3b
      +                          its.U1TXIE = 0;
 10366  0059B0  9993               	bcf	147,4,b	;volatile
 10367  0059B2                     
 10368                           ; BSR set to: 57
 10369                           ;mcc_generated_files/uart1.c: 215:         uart1TxBuffer[uart1TxHead++] = txData;
 10370  0059B2  0E10               	movlw	low _uart1TxBuffer
 10371  0059B4  2448               	addwf	_uart1TxHead^0,w,c	;volatile
 10372  0059B6  6ED9               	movwf	fsr2l,c
 10373  0059B8  6ADA               	clrf	fsr2h,c
 10374  0059BA  0E01               	movlw	high _uart1TxBuffer
 10375  0059BC  22DA               	addwfc	fsr2h,f,c
 10376  0059BE  0060  F053  FFDF   	movff	UART1_Write@txData,indf2
 10377  0059C4                     
 10378                           ; BSR set to: 57
 10379  0059C4  2A48               	incf	_uart1TxHead^0,f,c	;volatile
 10380  0059C6                     
 10381                           ; BSR set to: 57
 10382                           ;mcc_generated_files/uart1.c: 216:         if(sizeof(uart1TxBuffer) <= uart1TxHead)
 10383  0059C6  0E07               	movlw	7
 10384  0059C8  6448               	cpfsgt	_uart1TxHead^0,c	;volatile
 10385  0059CA  EFE9  F02C         	goto	u7621
 10386  0059CE  EFEB  F02C         	goto	u7620
 10387  0059D2                     u7621:
 10388  0059D2  EFED  F02C         	goto	l7704
 10389  0059D6                     u7620:
 10390  0059D6                     
 10391                           ; BSR set to: 57
 10392                           ;mcc_generated_files/uart1.c: 217:         {;mcc_generated_files/uart1.c: 218:          
      +                             uart1TxHead = 0;
 10393  0059D6  0E00               	movlw	0
 10394  0059D8  6E48               	movwf	_uart1TxHead^0,c	;volatile
 10395  0059DA                     l7704:
 10396                           
 10397                           ; BSR set to: 57
 10398                           ;mcc_generated_files/uart1.c: 220:         uart1TxBufferRemaining--;
 10399  0059DA  0101               	movlb	1	; () banked
 10400  0059DC  07AB               	decf	_uart1TxBufferRemaining& (0+255),f,b	;volatile
 10401  0059DE                     l7706:
 10402                           
 10403                           ;mcc_generated_files/uart1.c: 222:     PIE3bits.U1TXIE = 1;
 10404  0059DE  0139               	movlb	57	; () banked
 10405  0059E0  8993               	bsf	147,4,b	;volatile
 10406  0059E2                     
 10407                           ; BSR set to: 57
 10408  0059E2  0012               	return		;funcret
 10409  0059E4                     __end_of_UART1_Write:
 10410                           	callstack 0
 10411                           
 10412 ;; *************** function _abs *****************
 10413 ;; Defined at:
 10414 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
 10415 ;; Parameters:    Size  Location     Type
 10416 ;;  a               2   37[COMRAM] int 
 10417 ;; Auto vars:     Size  Location     Type
 10418 ;;		None
 10419 ;; Return value:  Size  Location     Type
 10420 ;;                  2   37[COMRAM] int 
 10421 ;; Registers used:
 10422 ;;		wreg, status,2, status,0
 10423 ;; Tracked objects:
 10424 ;;		On entry : 0/0
 10425 ;;		On exit  : 0/0
 10426 ;;		Unchanged: 0/0
 10427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10428 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10430 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10431 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10432 ;;Total ram usage:        4 bytes
 10433 ;; Hardware stack levels used: 1
 10434 ;; Hardware stack levels required when called: 8
 10435 ;; This function calls:
 10436 ;;		Nothing
 10437 ;; This function is called by:
 10438 ;;		_dtoa
 10439 ;; This function uses a non-reentrant model
 10440 ;;
 10441                           
 10442                           	psect	text39
 10443  005CF2                     __ptext39:
 10444                           	callstack 0
 10445  005CF2                     _abs:
 10446                           	callstack 16
 10447  005CF2  BE27               	btfsc	(abs@a+1)^0,7,c
 10448  005CF4  EF86  F02E         	goto	u9040
 10449  005CF8  5027               	movf	(abs@a+1)^0,w,c
 10450  005CFA  E106               	bnz	u9041
 10451  005CFC  0426               	decf	abs@a^0,w,c
 10452  005CFE  B0D8               	btfsc	status,0,c
 10453  005D00  EF84  F02E         	goto	u9041
 10454  005D04  EF86  F02E         	goto	u9040
 10455  005D08                     u9041:
 10456  005D08  EF94  F02E         	goto	l2306
 10457  005D0C                     u9040:
 10458  005D0C  C026  F028         	movff	abs@a,??_abs
 10459  005D10  C027  F029         	movff	abs@a+1,??_abs+1
 10460  005D14  1E28               	comf	??_abs^0,f,c
 10461  005D16  1E29               	comf	(??_abs+1)^0,f,c
 10462  005D18  4A28               	infsnz	??_abs^0,f,c
 10463  005D1A  2A29               	incf	(??_abs+1)^0,f,c
 10464  005D1C  C028  F026         	movff	??_abs,?_abs
 10465  005D20  C029  F027         	movff	??_abs+1,?_abs+1
 10466  005D24  EF98  F02E         	goto	l2309
 10467  005D28                     l2306:
 10468  005D28  C026  F026         	movff	abs@a,?_abs
 10469  005D2C  C027  F027         	movff	abs@a+1,?_abs+1
 10470  005D30                     l2309:
 10471  005D30  0012               	return		;funcret
 10472  005D32                     __end_of_abs:
 10473                           	callstack 0
 10474                           
 10475 ;; *************** function ___aomod *****************
 10476 ;; Defined at:
 10477 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
 10478 ;; Parameters:    Size  Location     Type
 10479 ;;  dividend        8   19[COMRAM] long long 
 10480 ;;  divisor         8   27[COMRAM] long long 
 10481 ;; Auto vars:     Size  Location     Type
 10482 ;;  sign            1   36[COMRAM] unsigned char 
 10483 ;;  counter         1   35[COMRAM] unsigned char 
 10484 ;; Return value:  Size  Location     Type
 10485 ;;                  8   19[COMRAM] long long 
 10486 ;; Registers used:
 10487 ;;		wreg, status,2, status,0
 10488 ;; Tracked objects:
 10489 ;;		On entry : 0/0
 10490 ;;		On exit  : 0/0
 10491 ;;		Unchanged: 0/0
 10492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10493 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10494 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10496 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10497 ;;Total ram usage:       18 bytes
 10498 ;; Hardware stack levels used: 1
 10499 ;; Hardware stack levels required when called: 8
 10500 ;; This function calls:
 10501 ;;		Nothing
 10502 ;; This function is called by:
 10503 ;;		_dtoa
 10504 ;; This function uses a non-reentrant model
 10505 ;;
 10506                           
 10507                           	psect	text40
 10508  0043D0                     __ptext40:
 10509                           	callstack 0
 10510  0043D0                     ___aomod:
 10511                           	callstack 16
 10512  0043D0  0E00               	movlw	0
 10513  0043D2  6E25               	movwf	___aomod@sign^0,c
 10514  0043D4  BE1B               	btfsc	(___aomod@dividend+7)^0,7,c
 10515  0043D6  EFF1  F021         	goto	u8170
 10516  0043DA  EFEF  F021         	goto	u8171
 10517  0043DE                     u8171:
 10518  0043DE  EF03  F022         	goto	l8000
 10519  0043E2                     u8170:
 10520  0043E2  1E1B               	comf	(___aomod@dividend+7)^0,f,c
 10521  0043E4  1E1A               	comf	(___aomod@dividend+6)^0,f,c
 10522  0043E6  1E19               	comf	(___aomod@dividend+5)^0,f,c
 10523  0043E8  1E18               	comf	(___aomod@dividend+4)^0,f,c
 10524  0043EA  1E17               	comf	(___aomod@dividend+3)^0,f,c
 10525  0043EC  1E16               	comf	(___aomod@dividend+2)^0,f,c
 10526  0043EE  1E15               	comf	(___aomod@dividend+1)^0,f,c
 10527  0043F0  6C14               	negf	___aomod@dividend^0,c
 10528  0043F2  0E00               	movlw	0
 10529  0043F4  2215               	addwfc	(___aomod@dividend+1)^0,f,c
 10530  0043F6  2216               	addwfc	(___aomod@dividend+2)^0,f,c
 10531  0043F8  2217               	addwfc	(___aomod@dividend+3)^0,f,c
 10532  0043FA  2218               	addwfc	(___aomod@dividend+4)^0,f,c
 10533  0043FC  2219               	addwfc	(___aomod@dividend+5)^0,f,c
 10534  0043FE  221A               	addwfc	(___aomod@dividend+6)^0,f,c
 10535  004400  221B               	addwfc	(___aomod@dividend+7)^0,f,c
 10536  004402  0E01               	movlw	1
 10537  004404  6E25               	movwf	___aomod@sign^0,c
 10538  004406                     l8000:
 10539  004406  BE23               	btfsc	(___aomod@divisor+7)^0,7,c
 10540  004408  EF0A  F022         	goto	u8180
 10541  00440C  EF08  F022         	goto	u8181
 10542  004410                     u8181:
 10543  004410  EF1A  F022         	goto	l8004
 10544  004414                     u8180:
 10545  004414  1E23               	comf	(___aomod@divisor+7)^0,f,c
 10546  004416  1E22               	comf	(___aomod@divisor+6)^0,f,c
 10547  004418  1E21               	comf	(___aomod@divisor+5)^0,f,c
 10548  00441A  1E20               	comf	(___aomod@divisor+4)^0,f,c
 10549  00441C  1E1F               	comf	(___aomod@divisor+3)^0,f,c
 10550  00441E  1E1E               	comf	(___aomod@divisor+2)^0,f,c
 10551  004420  1E1D               	comf	(___aomod@divisor+1)^0,f,c
 10552  004422  6C1C               	negf	___aomod@divisor^0,c
 10553  004424  0E00               	movlw	0
 10554  004426  221D               	addwfc	(___aomod@divisor+1)^0,f,c
 10555  004428  221E               	addwfc	(___aomod@divisor+2)^0,f,c
 10556  00442A  221F               	addwfc	(___aomod@divisor+3)^0,f,c
 10557  00442C  2220               	addwfc	(___aomod@divisor+4)^0,f,c
 10558  00442E  2221               	addwfc	(___aomod@divisor+5)^0,f,c
 10559  004430  2222               	addwfc	(___aomod@divisor+6)^0,f,c
 10560  004432  2223               	addwfc	(___aomod@divisor+7)^0,f,c
 10561  004434                     l8004:
 10562  004434  501C               	movf	___aomod@divisor^0,w,c
 10563  004436  101D               	iorwf	(___aomod@divisor+1)^0,w,c
 10564  004438  101E               	iorwf	(___aomod@divisor+2)^0,w,c
 10565  00443A  101F               	iorwf	(___aomod@divisor+3)^0,w,c
 10566  00443C  1020               	iorwf	(___aomod@divisor+4)^0,w,c
 10567  00443E  1021               	iorwf	(___aomod@divisor+5)^0,w,c
 10568  004440  1022               	iorwf	(___aomod@divisor+6)^0,w,c
 10569  004442  1023               	iorwf	(___aomod@divisor+7)^0,w,c
 10570  004444  B4D8               	btfsc	status,2,c
 10571  004446  EF27  F022         	goto	u8191
 10572  00444A  EF29  F022         	goto	u8190
 10573  00444E                     u8191:
 10574  00444E  EF71  F022         	goto	l8020
 10575  004452                     u8190:
 10576  004452  0E01               	movlw	1
 10577  004454  6E24               	movwf	___aomod@counter^0,c
 10578  004456  EF37  F022         	goto	l8010
 10579  00445A                     l8008:
 10580  00445A  90D8               	bcf	status,0,c
 10581  00445C  361C               	rlcf	___aomod@divisor^0,f,c
 10582  00445E  361D               	rlcf	(___aomod@divisor+1)^0,f,c
 10583  004460  361E               	rlcf	(___aomod@divisor+2)^0,f,c
 10584  004462  361F               	rlcf	(___aomod@divisor+3)^0,f,c
 10585  004464  3620               	rlcf	(___aomod@divisor+4)^0,f,c
 10586  004466  3621               	rlcf	(___aomod@divisor+5)^0,f,c
 10587  004468  3622               	rlcf	(___aomod@divisor+6)^0,f,c
 10588  00446A  3623               	rlcf	(___aomod@divisor+7)^0,f,c
 10589  00446C  2A24               	incf	___aomod@counter^0,f,c
 10590  00446E                     l8010:
 10591  00446E  AE23               	btfss	(___aomod@divisor+7)^0,7,c
 10592  004470  EF3C  F022         	goto	u8201
 10593  004474  EF3E  F022         	goto	u8200
 10594  004478                     u8201:
 10595  004478  EF2D  F022         	goto	l8008
 10596  00447C                     u8200:
 10597  00447C                     l8012:
 10598  00447C  501C               	movf	___aomod@divisor^0,w,c
 10599  00447E  5C14               	subwf	___aomod@dividend^0,w,c
 10600  004480  501D               	movf	(___aomod@divisor+1)^0,w,c
 10601  004482  5815               	subwfb	(___aomod@dividend+1)^0,w,c
 10602  004484  501E               	movf	(___aomod@divisor+2)^0,w,c
 10603  004486  5816               	subwfb	(___aomod@dividend+2)^0,w,c
 10604  004488  501F               	movf	(___aomod@divisor+3)^0,w,c
 10605  00448A  5817               	subwfb	(___aomod@dividend+3)^0,w,c
 10606  00448C  5020               	movf	(___aomod@divisor+4)^0,w,c
 10607  00448E  5818               	subwfb	(___aomod@dividend+4)^0,w,c
 10608  004490  5021               	movf	(___aomod@divisor+5)^0,w,c
 10609  004492  5819               	subwfb	(___aomod@dividend+5)^0,w,c
 10610  004494  5022               	movf	(___aomod@divisor+6)^0,w,c
 10611  004496  581A               	subwfb	(___aomod@dividend+6)^0,w,c
 10612  004498  5023               	movf	(___aomod@divisor+7)^0,w,c
 10613  00449A  581B               	subwfb	(___aomod@dividend+7)^0,w,c
 10614  00449C  A0D8               	btfss	status,0,c
 10615  00449E  EF53  F022         	goto	u8211
 10616  0044A2  EF55  F022         	goto	u8210
 10617  0044A6                     u8211:
 10618  0044A6  EF65  F022         	goto	l8016
 10619  0044AA                     u8210:
 10620  0044AA  501C               	movf	___aomod@divisor^0,w,c
 10621  0044AC  5E14               	subwf	___aomod@dividend^0,f,c
 10622  0044AE  501D               	movf	(___aomod@divisor+1)^0,w,c
 10623  0044B0  5A15               	subwfb	(___aomod@dividend+1)^0,f,c
 10624  0044B2  501E               	movf	(___aomod@divisor+2)^0,w,c
 10625  0044B4  5A16               	subwfb	(___aomod@dividend+2)^0,f,c
 10626  0044B6  501F               	movf	(___aomod@divisor+3)^0,w,c
 10627  0044B8  5A17               	subwfb	(___aomod@dividend+3)^0,f,c
 10628  0044BA  5020               	movf	(___aomod@divisor+4)^0,w,c
 10629  0044BC  5A18               	subwfb	(___aomod@dividend+4)^0,f,c
 10630  0044BE  5021               	movf	(___aomod@divisor+5)^0,w,c
 10631  0044C0  5A19               	subwfb	(___aomod@dividend+5)^0,f,c
 10632  0044C2  5022               	movf	(___aomod@divisor+6)^0,w,c
 10633  0044C4  5A1A               	subwfb	(___aomod@dividend+6)^0,f,c
 10634  0044C6  5023               	movf	(___aomod@divisor+7)^0,w,c
 10635  0044C8  5A1B               	subwfb	(___aomod@dividend+7)^0,f,c
 10636  0044CA                     l8016:
 10637  0044CA  90D8               	bcf	status,0,c
 10638  0044CC  3223               	rrcf	(___aomod@divisor+7)^0,f,c
 10639  0044CE  3222               	rrcf	(___aomod@divisor+6)^0,f,c
 10640  0044D0  3221               	rrcf	(___aomod@divisor+5)^0,f,c
 10641  0044D2  3220               	rrcf	(___aomod@divisor+4)^0,f,c
 10642  0044D4  321F               	rrcf	(___aomod@divisor+3)^0,f,c
 10643  0044D6  321E               	rrcf	(___aomod@divisor+2)^0,f,c
 10644  0044D8  321D               	rrcf	(___aomod@divisor+1)^0,f,c
 10645  0044DA  321C               	rrcf	___aomod@divisor^0,f,c
 10646  0044DC  2E24               	decfsz	___aomod@counter^0,f,c
 10647  0044DE  EF3E  F022         	goto	l8012
 10648  0044E2                     l8020:
 10649  0044E2  5025               	movf	___aomod@sign^0,w,c
 10650  0044E4  B4D8               	btfsc	status,2,c
 10651  0044E6  EF77  F022         	goto	u8221
 10652  0044EA  EF79  F022         	goto	u8220
 10653  0044EE                     u8221:
 10654  0044EE  EF89  F022         	goto	l8024
 10655  0044F2                     u8220:
 10656  0044F2  1E1B               	comf	(___aomod@dividend+7)^0,f,c
 10657  0044F4  1E1A               	comf	(___aomod@dividend+6)^0,f,c
 10658  0044F6  1E19               	comf	(___aomod@dividend+5)^0,f,c
 10659  0044F8  1E18               	comf	(___aomod@dividend+4)^0,f,c
 10660  0044FA  1E17               	comf	(___aomod@dividend+3)^0,f,c
 10661  0044FC  1E16               	comf	(___aomod@dividend+2)^0,f,c
 10662  0044FE  1E15               	comf	(___aomod@dividend+1)^0,f,c
 10663  004500  6C14               	negf	___aomod@dividend^0,c
 10664  004502  0E00               	movlw	0
 10665  004504  2215               	addwfc	(___aomod@dividend+1)^0,f,c
 10666  004506  2216               	addwfc	(___aomod@dividend+2)^0,f,c
 10667  004508  2217               	addwfc	(___aomod@dividend+3)^0,f,c
 10668  00450A  2218               	addwfc	(___aomod@dividend+4)^0,f,c
 10669  00450C  2219               	addwfc	(___aomod@dividend+5)^0,f,c
 10670  00450E  221A               	addwfc	(___aomod@dividend+6)^0,f,c
 10671  004510  221B               	addwfc	(___aomod@dividend+7)^0,f,c
 10672  004512                     l8024:
 10673  004512  C014  F014         	movff	___aomod@dividend,?___aomod
 10674  004516  C015  F015         	movff	___aomod@dividend+1,?___aomod+1
 10675  00451A  C016  F016         	movff	___aomod@dividend+2,?___aomod+2
 10676  00451E  C017  F017         	movff	___aomod@dividend+3,?___aomod+3
 10677  004522  C018  F018         	movff	___aomod@dividend+4,?___aomod+4
 10678  004526  C019  F019         	movff	___aomod@dividend+5,?___aomod+5
 10679  00452A  C01A  F01A         	movff	___aomod@dividend+6,?___aomod+6
 10680  00452E  C01B  F01B         	movff	___aomod@dividend+7,?___aomod+7
 10681  004532  0012               	return		;funcret
 10682  004534                     __end_of___aomod:
 10683                           	callstack 0
 10684                           
 10685 ;; *************** function ___aodiv *****************
 10686 ;; Defined at:
 10687 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
 10688 ;; Parameters:    Size  Location     Type
 10689 ;;  dividend        8   19[COMRAM] long long 
 10690 ;;  divisor         8   27[COMRAM] long long 
 10691 ;; Auto vars:     Size  Location     Type
 10692 ;;  quotient        8   37[COMRAM] long long 
 10693 ;;  sign            1   36[COMRAM] unsigned char 
 10694 ;;  counter         1   35[COMRAM] unsigned char 
 10695 ;; Return value:  Size  Location     Type
 10696 ;;                  8   19[COMRAM] long long 
 10697 ;; Registers used:
 10698 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10699 ;; Tracked objects:
 10700 ;;		On entry : 0/0
 10701 ;;		On exit  : 0/0
 10702 ;;		Unchanged: 0/0
 10703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10704 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10705 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10707 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10708 ;;Total ram usage:       26 bytes
 10709 ;; Hardware stack levels used: 1
 10710 ;; Hardware stack levels required when called: 8
 10711 ;; This function calls:
 10712 ;;		Nothing
 10713 ;; This function is called by:
 10714 ;;		_dtoa
 10715 ;; This function uses a non-reentrant model
 10716 ;;
 10717                           
 10718                           	psect	text41
 10719  004248                     __ptext41:
 10720                           	callstack 0
 10721  004248                     ___aodiv:
 10722                           	callstack 16
 10723  004248  0E00               	movlw	0
 10724  00424A  6E25               	movwf	___aodiv@sign^0,c
 10725  00424C  BE23               	btfsc	(___aodiv@divisor+7)^0,7,c
 10726  00424E  EF2D  F021         	goto	u8100
 10727  004252  EF2B  F021         	goto	u8101
 10728  004256                     u8101:
 10729  004256  EF3F  F021         	goto	l7956
 10730  00425A                     u8100:
 10731  00425A  1E23               	comf	(___aodiv@divisor+7)^0,f,c
 10732  00425C  1E22               	comf	(___aodiv@divisor+6)^0,f,c
 10733  00425E  1E21               	comf	(___aodiv@divisor+5)^0,f,c
 10734  004260  1E20               	comf	(___aodiv@divisor+4)^0,f,c
 10735  004262  1E1F               	comf	(___aodiv@divisor+3)^0,f,c
 10736  004264  1E1E               	comf	(___aodiv@divisor+2)^0,f,c
 10737  004266  1E1D               	comf	(___aodiv@divisor+1)^0,f,c
 10738  004268  6C1C               	negf	___aodiv@divisor^0,c
 10739  00426A  0E00               	movlw	0
 10740  00426C  221D               	addwfc	(___aodiv@divisor+1)^0,f,c
 10741  00426E  221E               	addwfc	(___aodiv@divisor+2)^0,f,c
 10742  004270  221F               	addwfc	(___aodiv@divisor+3)^0,f,c
 10743  004272  2220               	addwfc	(___aodiv@divisor+4)^0,f,c
 10744  004274  2221               	addwfc	(___aodiv@divisor+5)^0,f,c
 10745  004276  2222               	addwfc	(___aodiv@divisor+6)^0,f,c
 10746  004278  2223               	addwfc	(___aodiv@divisor+7)^0,f,c
 10747  00427A  0E01               	movlw	1
 10748  00427C  6E25               	movwf	___aodiv@sign^0,c
 10749  00427E                     l7956:
 10750  00427E  BE1B               	btfsc	(___aodiv@dividend+7)^0,7,c
 10751  004280  EF46  F021         	goto	u8110
 10752  004284  EF44  F021         	goto	u8111
 10753  004288                     u8111:
 10754  004288  EF58  F021         	goto	l7962
 10755  00428C                     u8110:
 10756  00428C  1E1B               	comf	(___aodiv@dividend+7)^0,f,c
 10757  00428E  1E1A               	comf	(___aodiv@dividend+6)^0,f,c
 10758  004290  1E19               	comf	(___aodiv@dividend+5)^0,f,c
 10759  004292  1E18               	comf	(___aodiv@dividend+4)^0,f,c
 10760  004294  1E17               	comf	(___aodiv@dividend+3)^0,f,c
 10761  004296  1E16               	comf	(___aodiv@dividend+2)^0,f,c
 10762  004298  1E15               	comf	(___aodiv@dividend+1)^0,f,c
 10763  00429A  6C14               	negf	___aodiv@dividend^0,c
 10764  00429C  0E00               	movlw	0
 10765  00429E  2215               	addwfc	(___aodiv@dividend+1)^0,f,c
 10766  0042A0  2216               	addwfc	(___aodiv@dividend+2)^0,f,c
 10767  0042A2  2217               	addwfc	(___aodiv@dividend+3)^0,f,c
 10768  0042A4  2218               	addwfc	(___aodiv@dividend+4)^0,f,c
 10769  0042A6  2219               	addwfc	(___aodiv@dividend+5)^0,f,c
 10770  0042A8  221A               	addwfc	(___aodiv@dividend+6)^0,f,c
 10771  0042AA  221B               	addwfc	(___aodiv@dividend+7)^0,f,c
 10772  0042AC  0E01               	movlw	1
 10773  0042AE  1A25               	xorwf	___aodiv@sign^0,f,c
 10774  0042B0                     l7962:
 10775  0042B0  EE20  F026         	lfsr	2,___aodiv@quotient
 10776  0042B4  0E07               	movlw	7
 10777  0042B6                     u8121:
 10778  0042B6  6ADE               	clrf	postinc2,c
 10779  0042B8  06E8               	decf	wreg,f,c
 10780  0042BA  E2FD               	bc	u8121
 10781  0042BC  501C               	movf	___aodiv@divisor^0,w,c
 10782  0042BE  101D               	iorwf	(___aodiv@divisor+1)^0,w,c
 10783  0042C0  101E               	iorwf	(___aodiv@divisor+2)^0,w,c
 10784  0042C2  101F               	iorwf	(___aodiv@divisor+3)^0,w,c
 10785  0042C4  1020               	iorwf	(___aodiv@divisor+4)^0,w,c
 10786  0042C6  1021               	iorwf	(___aodiv@divisor+5)^0,w,c
 10787  0042C8  1022               	iorwf	(___aodiv@divisor+6)^0,w,c
 10788  0042CA  1023               	iorwf	(___aodiv@divisor+7)^0,w,c
 10789  0042CC  B4D8               	btfsc	status,2,c
 10790  0042CE  EF6B  F021         	goto	u8131
 10791  0042D2  EF6D  F021         	goto	u8130
 10792  0042D6                     u8131:
 10793  0042D6  EFBF  F021         	goto	l7984
 10794  0042DA                     u8130:
 10795  0042DA  0E01               	movlw	1
 10796  0042DC  6E24               	movwf	___aodiv@counter^0,c
 10797  0042DE  EF7B  F021         	goto	l7970
 10798  0042E2                     l7968:
 10799  0042E2  90D8               	bcf	status,0,c
 10800  0042E4  361C               	rlcf	___aodiv@divisor^0,f,c
 10801  0042E6  361D               	rlcf	(___aodiv@divisor+1)^0,f,c
 10802  0042E8  361E               	rlcf	(___aodiv@divisor+2)^0,f,c
 10803  0042EA  361F               	rlcf	(___aodiv@divisor+3)^0,f,c
 10804  0042EC  3620               	rlcf	(___aodiv@divisor+4)^0,f,c
 10805  0042EE  3621               	rlcf	(___aodiv@divisor+5)^0,f,c
 10806  0042F0  3622               	rlcf	(___aodiv@divisor+6)^0,f,c
 10807  0042F2  3623               	rlcf	(___aodiv@divisor+7)^0,f,c
 10808  0042F4  2A24               	incf	___aodiv@counter^0,f,c
 10809  0042F6                     l7970:
 10810  0042F6  AE23               	btfss	(___aodiv@divisor+7)^0,7,c
 10811  0042F8  EF80  F021         	goto	u8141
 10812  0042FC  EF82  F021         	goto	u8140
 10813  004300                     u8141:
 10814  004300  EF71  F021         	goto	l7968
 10815  004304                     u8140:
 10816  004304                     l7972:
 10817  004304  90D8               	bcf	status,0,c
 10818  004306  3626               	rlcf	___aodiv@quotient^0,f,c
 10819  004308  3627               	rlcf	(___aodiv@quotient+1)^0,f,c
 10820  00430A  3628               	rlcf	(___aodiv@quotient+2)^0,f,c
 10821  00430C  3629               	rlcf	(___aodiv@quotient+3)^0,f,c
 10822  00430E  362A               	rlcf	(___aodiv@quotient+4)^0,f,c
 10823  004310  362B               	rlcf	(___aodiv@quotient+5)^0,f,c
 10824  004312  362C               	rlcf	(___aodiv@quotient+6)^0,f,c
 10825  004314  362D               	rlcf	(___aodiv@quotient+7)^0,f,c
 10826  004316  501C               	movf	___aodiv@divisor^0,w,c
 10827  004318  5C14               	subwf	___aodiv@dividend^0,w,c
 10828  00431A  501D               	movf	(___aodiv@divisor+1)^0,w,c
 10829  00431C  5815               	subwfb	(___aodiv@dividend+1)^0,w,c
 10830  00431E  501E               	movf	(___aodiv@divisor+2)^0,w,c
 10831  004320  5816               	subwfb	(___aodiv@dividend+2)^0,w,c
 10832  004322  501F               	movf	(___aodiv@divisor+3)^0,w,c
 10833  004324  5817               	subwfb	(___aodiv@dividend+3)^0,w,c
 10834  004326  5020               	movf	(___aodiv@divisor+4)^0,w,c
 10835  004328  5818               	subwfb	(___aodiv@dividend+4)^0,w,c
 10836  00432A  5021               	movf	(___aodiv@divisor+5)^0,w,c
 10837  00432C  5819               	subwfb	(___aodiv@dividend+5)^0,w,c
 10838  00432E  5022               	movf	(___aodiv@divisor+6)^0,w,c
 10839  004330  581A               	subwfb	(___aodiv@dividend+6)^0,w,c
 10840  004332  5023               	movf	(___aodiv@divisor+7)^0,w,c
 10841  004334  581B               	subwfb	(___aodiv@dividend+7)^0,w,c
 10842  004336  A0D8               	btfss	status,0,c
 10843  004338  EFA0  F021         	goto	u8151
 10844  00433C  EFA2  F021         	goto	u8150
 10845  004340                     u8151:
 10846  004340  EFB3  F021         	goto	l7980
 10847  004344                     u8150:
 10848  004344  501C               	movf	___aodiv@divisor^0,w,c
 10849  004346  5E14               	subwf	___aodiv@dividend^0,f,c
 10850  004348  501D               	movf	(___aodiv@divisor+1)^0,w,c
 10851  00434A  5A15               	subwfb	(___aodiv@dividend+1)^0,f,c
 10852  00434C  501E               	movf	(___aodiv@divisor+2)^0,w,c
 10853  00434E  5A16               	subwfb	(___aodiv@dividend+2)^0,f,c
 10854  004350  501F               	movf	(___aodiv@divisor+3)^0,w,c
 10855  004352  5A17               	subwfb	(___aodiv@dividend+3)^0,f,c
 10856  004354  5020               	movf	(___aodiv@divisor+4)^0,w,c
 10857  004356  5A18               	subwfb	(___aodiv@dividend+4)^0,f,c
 10858  004358  5021               	movf	(___aodiv@divisor+5)^0,w,c
 10859  00435A  5A19               	subwfb	(___aodiv@dividend+5)^0,f,c
 10860  00435C  5022               	movf	(___aodiv@divisor+6)^0,w,c
 10861  00435E  5A1A               	subwfb	(___aodiv@dividend+6)^0,f,c
 10862  004360  5023               	movf	(___aodiv@divisor+7)^0,w,c
 10863  004362  5A1B               	subwfb	(___aodiv@dividend+7)^0,f,c
 10864  004364  8026               	bsf	___aodiv@quotient^0,0,c
 10865  004366                     l7980:
 10866  004366  90D8               	bcf	status,0,c
 10867  004368  3223               	rrcf	(___aodiv@divisor+7)^0,f,c
 10868  00436A  3222               	rrcf	(___aodiv@divisor+6)^0,f,c
 10869  00436C  3221               	rrcf	(___aodiv@divisor+5)^0,f,c
 10870  00436E  3220               	rrcf	(___aodiv@divisor+4)^0,f,c
 10871  004370  321F               	rrcf	(___aodiv@divisor+3)^0,f,c
 10872  004372  321E               	rrcf	(___aodiv@divisor+2)^0,f,c
 10873  004374  321D               	rrcf	(___aodiv@divisor+1)^0,f,c
 10874  004376  321C               	rrcf	___aodiv@divisor^0,f,c
 10875  004378  2E24               	decfsz	___aodiv@counter^0,f,c
 10876  00437A  EF82  F021         	goto	l7972
 10877  00437E                     l7984:
 10878  00437E  5025               	movf	___aodiv@sign^0,w,c
 10879  004380  B4D8               	btfsc	status,2,c
 10880  004382  EFC5  F021         	goto	u8161
 10881  004386  EFC7  F021         	goto	u8160
 10882  00438A                     u8161:
 10883  00438A  EFD7  F021         	goto	l7988
 10884  00438E                     u8160:
 10885  00438E  1E2D               	comf	(___aodiv@quotient+7)^0,f,c
 10886  004390  1E2C               	comf	(___aodiv@quotient+6)^0,f,c
 10887  004392  1E2B               	comf	(___aodiv@quotient+5)^0,f,c
 10888  004394  1E2A               	comf	(___aodiv@quotient+4)^0,f,c
 10889  004396  1E29               	comf	(___aodiv@quotient+3)^0,f,c
 10890  004398  1E28               	comf	(___aodiv@quotient+2)^0,f,c
 10891  00439A  1E27               	comf	(___aodiv@quotient+1)^0,f,c
 10892  00439C  6C26               	negf	___aodiv@quotient^0,c
 10893  00439E  0E00               	movlw	0
 10894  0043A0  2227               	addwfc	(___aodiv@quotient+1)^0,f,c
 10895  0043A2  2228               	addwfc	(___aodiv@quotient+2)^0,f,c
 10896  0043A4  2229               	addwfc	(___aodiv@quotient+3)^0,f,c
 10897  0043A6  222A               	addwfc	(___aodiv@quotient+4)^0,f,c
 10898  0043A8  222B               	addwfc	(___aodiv@quotient+5)^0,f,c
 10899  0043AA  222C               	addwfc	(___aodiv@quotient+6)^0,f,c
 10900  0043AC  222D               	addwfc	(___aodiv@quotient+7)^0,f,c
 10901  0043AE                     l7988:
 10902  0043AE  C026  F014         	movff	___aodiv@quotient,?___aodiv
 10903  0043B2  C027  F015         	movff	___aodiv@quotient+1,?___aodiv+1
 10904  0043B6  C028  F016         	movff	___aodiv@quotient+2,?___aodiv+2
 10905  0043BA  C029  F017         	movff	___aodiv@quotient+3,?___aodiv+3
 10906  0043BE  C02A  F018         	movff	___aodiv@quotient+4,?___aodiv+4
 10907  0043C2  C02B  F019         	movff	___aodiv@quotient+5,?___aodiv+5
 10908  0043C6  C02C  F01A         	movff	___aodiv@quotient+6,?___aodiv+6
 10909  0043CA  C02D  F01B         	movff	___aodiv@quotient+7,?___aodiv+7
 10910  0043CE  0012               	return		;funcret
 10911  0043D0                     __end_of___aodiv:
 10912                           	callstack 0
 10913                           
 10914 ;; *************** function _calcSpeed *****************
 10915 ;; Defined at:
 10916 ;;		line 316 in file "main.c"
 10917 ;; Parameters:    Size  Location     Type
 10918 ;;		None
 10919 ;; Auto vars:     Size  Location     Type
 10920 ;;  speed           2   39[BANK0 ] short 
 10921 ;; Return value:  Size  Location     Type
 10922 ;;                  1    wreg      void 
 10923 ;; Registers used:
 10924 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10925 ;; Tracked objects:
 10926 ;;		On entry : 0/0
 10927 ;;		On exit  : 0/0
 10928 ;;		Unchanged: 0/0
 10929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10931 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10932 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10933 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10934 ;;Total ram usage:        6 bytes
 10935 ;; Hardware stack levels used: 1
 10936 ;; Hardware stack levels required when called: 9
 10937 ;; This function calls:
 10938 ;;		___fladd
 10939 ;;		___flmul
 10940 ;;		___fltol
 10941 ;;		___xxtofl
 10942 ;; This function is called by:
 10943 ;;		_loop
 10944 ;; This function uses a non-reentrant model
 10945 ;;
 10946                           
 10947                           	psect	text42
 10948  003866                     __ptext42:
 10949                           	callstack 0
 10950  003866                     _calcSpeed:
 10951                           	callstack 20
 10952  003866                     
 10953                           ;main.c: 317:     int16_t speed = 0;
 10954  003866  0E00               	movlw	0
 10955  003868  0100               	movlb	0	; () banked
 10956  00386A  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
 10957  00386C  0E00               	movlw	0
 10958  00386E  6F87               	movwf	calcSpeed@speed& (0+255),b
 10959                           
 10960                           ;main.c: 319:     switch (driveMode) {
 10961  003870  EFE9  F01C         	goto	l9492
 10962  003874                     l9454:
 10963                           
 10964                           ; BSR set to: 0
 10965                           ;main.c: 321:             if (distFront > (30)) {
 10966  003874  51FE               	movf	(_distFront+1)& (0+255),w,b	;volatile
 10967  003876  E109               	bnz	u10730
 10968  003878  0E1F               	movlw	31
 10969  00387A  5DFD               	subwf	_distFront& (0+255),w,b	;volatile
 10970  00387C  A0D8               	btfss	status,0,c
 10971  00387E  EF43  F01C         	goto	u10731
 10972  003882  EF45  F01C         	goto	u10730
 10973  003886                     u10731:
 10974  003886  EF47  F01C         	goto	l9458
 10975  00388A                     u10730:
 10976  00388A                     
 10977                           ; BSR set to: 0
 10978                           ;main.c: 322:                 driveMode = Straight;
 10979  00388A  0E00               	movlw	0
 10980  00388C  6FFC               	movwf	_driveMode& (0+255),b
 10981  00388E                     l9458:
 10982                           
 10983                           ; BSR set to: 0
 10984                           ;main.c: 324:             if (setSpeed > (115)) {
 10985  00388E  BE41               	btfsc	(_setSpeed+1)^0,7,c
 10986  003890  EF53  F01C         	goto	u10741
 10987  003894  5041               	movf	(_setSpeed+1)^0,w,c
 10988  003896  E109               	bnz	u10740
 10989  003898  0E74               	movlw	116
 10990  00389A  5C40               	subwf	_setSpeed^0,w,c
 10991  00389C  A0D8               	btfss	status,0,c
 10992  00389E  EF53  F01C         	goto	u10741
 10993  0038A2  EF55  F01C         	goto	u10740
 10994  0038A6                     u10741:
 10995  0038A6  EF16  F01D         	goto	l9494
 10996  0038AA                     u10740:
 10997  0038AA                     
 10998                           ; BSR set to: 0
 10999                           ;main.c: 325:                     speed = setSpeed;
 11000  0038AA  C040  F087         	movff	_setSpeed,calcSpeed@speed
 11001  0038AE  C041  F088         	movff	_setSpeed+1,calcSpeed@speed+1
 11002  0038B2                     
 11003                           ; BSR set to: 0
 11004                           ;main.c: 326:                 if (distFront < (15)) {
 11005  0038B2  51FE               	movf	(_distFront+1)& (0+255),w,b	;volatile
 11006  0038B4  E107               	bnz	u10751
 11007  0038B6  0E0F               	movlw	15
 11008  0038B8  5DFD               	subwf	_distFront& (0+255),w,b	;volatile
 11009  0038BA  B0D8               	btfsc	status,0,c
 11010  0038BC  EF62  F01C         	goto	u10751
 11011  0038C0  EF64  F01C         	goto	u10750
 11012  0038C4                     u10751:
 11013  0038C4  EF6A  F01C         	goto	l9466
 11014  0038C8                     u10750:
 11015  0038C8                     
 11016                           ; BSR set to: 0
 11017                           ;main.c: 327:                     speed -= 4;
 11018  0038C8  0EFC               	movlw	252
 11019  0038CA  2787               	addwf	calcSpeed@speed& (0+255),f,b
 11020  0038CC  0EFF               	movlw	255
 11021  0038CE  2388               	addwfc	(calcSpeed@speed+1)& (0+255),f,b
 11022                           
 11023                           ;main.c: 328:                 } else {
 11024  0038D0  EF16  F01D         	goto	l9494
 11025  0038D4                     l9466:
 11026                           
 11027                           ; BSR set to: 0
 11028                           ;main.c: 329:                     speed -= 2;
 11029  0038D4  0EFE               	movlw	254
 11030  0038D6  2787               	addwf	calcSpeed@speed& (0+255),f,b
 11031  0038D8  0EFF               	movlw	255
 11032  0038DA  2388               	addwfc	(calcSpeed@speed+1)& (0+255),f,b
 11033  0038DC  EF16  F01D         	goto	l9494
 11034  0038E0                     l9468:
 11035                           
 11036                           ; BSR set to: 0
 11037                           ;main.c: 334:             if (distFront < (30)) {
 11038  0038E0  51FE               	movf	(_distFront+1)& (0+255),w,b	;volatile
 11039  0038E2  E107               	bnz	u10761
 11040  0038E4  0E1E               	movlw	30
 11041  0038E6  5DFD               	subwf	_distFront& (0+255),w,b	;volatile
 11042  0038E8  B0D8               	btfsc	status,0,c
 11043  0038EA  EF79  F01C         	goto	u10761
 11044  0038EE  EF7B  F01C         	goto	u10760
 11045  0038F2                     u10761:
 11046  0038F2  EF7D  F01C         	goto	l9472
 11047  0038F6                     u10760:
 11048  0038F6                     
 11049                           ; BSR set to: 0
 11050                           ;main.c: 335:                 driveMode = Brake;
 11051  0038F6  0E01               	movlw	1
 11052  0038F8  6FFC               	movwf	_driveMode& (0+255),b
 11053  0038FA                     l9472:
 11054                           
 11055                           ; BSR set to: 0
 11056                           ;main.c: 338:             if (distFront >= (150)) {
 11057  0038FA  51FE               	movf	(_distFront+1)& (0+255),w,b	;volatile
 11058  0038FC  E109               	bnz	u10770
 11059  0038FE  0E96               	movlw	150
 11060  003900  5DFD               	subwf	_distFront& (0+255),w,b	;volatile
 11061  003902  A0D8               	btfss	status,0,c
 11062  003904  EF86  F01C         	goto	u10771
 11063  003908  EF88  F01C         	goto	u10770
 11064  00390C                     u10771:
 11065  00390C  EFD1  F01C         	goto	l9476
 11066  003910                     u10770:
 11067  003910                     
 11068                           ; BSR set to: 0
 11069                           ;main.c: 339:                 speed = (int16_t) ((0.0) * (distFront - (150)) + (275));
 11070  003910  0E00               	movlw	0
 11071  003912  6F71               	movwf	___fladd@a& (0+255),b
 11072  003914  0E80               	movlw	128
 11073  003916  6F72               	movwf	(___fladd@a+1)& (0+255),b
 11074  003918  0E89               	movlw	137
 11075  00391A  6F73               	movwf	(___fladd@a+2)& (0+255),b
 11076  00391C  0E43               	movlw	67
 11077  00391E  6F74               	movwf	(___fladd@a+3)& (0+255),b
 11078  003920  0E00               	movlw	0
 11079  003922  6E2E               	movwf	___flmul@a^0,c
 11080  003924  0E00               	movlw	0
 11081  003926  6E2F               	movwf	(___flmul@a+1)^0,c
 11082  003928  0E00               	movlw	0
 11083  00392A  6E30               	movwf	(___flmul@a+2)^0,c
 11084  00392C  0E00               	movlw	0
 11085  00392E  6E31               	movwf	(___flmul@a+3)^0,c
 11086  003930  0E6A               	movlw	106
 11087  003932  6F83               	movwf	??_calcSpeed& (0+255),b
 11088  003934  0EFF               	movlw	255
 11089  003936  6F84               	movwf	(??_calcSpeed+1)& (0+255),b
 11090  003938  C0FD  F085         	movff	_distFront,??_calcSpeed+2	;volatile
 11091  00393C  C0FE  F086         	movff	_distFront+1,??_calcSpeed+3	;volatile
 11092  003940  5183               	movf	??_calcSpeed& (0+255),w,b
 11093  003942  2785               	addwf	(??_calcSpeed+2)& (0+255),f,b
 11094  003944  5184               	movf	(??_calcSpeed+1)& (0+255),w,b
 11095  003946  2386               	addwfc	(??_calcSpeed+3)& (0+255),f,b
 11096  003948  C085  F01C         	movff	??_calcSpeed+2,___xxtofl@val
 11097  00394C  C086  F01D         	movff	??_calcSpeed+3,___xxtofl@val+1
 11098  003950  6A1E               	clrf	(___xxtofl@val+2)^0,c
 11099  003952  6A1F               	clrf	(___xxtofl@val+3)^0,c
 11100  003954  0E00               	movlw	0
 11101  003956  EC4A  F020         	call	___xxtofl
 11102  00395A  C01C  F02A         	movff	?___xxtofl,___flmul@b
 11103  00395E  C01D  F02B         	movff	?___xxtofl+1,___flmul@b+1
 11104  003962  C01E  F02C         	movff	?___xxtofl+2,___flmul@b+2
 11105  003966  C01F  F02D         	movff	?___xxtofl+3,___flmul@b+3
 11106  00396A  EC20  F014         	call	___flmul	;wreg free
 11107  00396E  C02A  F06D         	movff	?___flmul,___fladd@b
 11108  003972  C02B  F06E         	movff	?___flmul+1,___fladd@b+1
 11109  003976  C02C  F06F         	movff	?___flmul+2,___fladd@b+2
 11110  00397A  C02D  F070         	movff	?___flmul+3,___fladd@b+3
 11111  00397E  ECBF  F011         	call	___fladd	;wreg free
 11112  003982  C06D  F079         	movff	?___fladd,___fltol@f1
 11113  003986  C06E  F07A         	movff	?___fladd+1,___fltol@f1+1
 11114  00398A  C06F  F07B         	movff	?___fladd+2,___fltol@f1+2
 11115  00398E  C070  F07C         	movff	?___fladd+3,___fltol@f1+3
 11116  003992  ECFD  F024         	call	___fltol	;wreg free
 11117  003996  C079  F087         	movff	?___fltol,calcSpeed@speed
 11118  00399A  C07A  F088         	movff	?___fltol+1,calcSpeed@speed+1
 11119                           
 11120                           ;main.c: 340:             } else {
 11121  00399E  EF16  F01D         	goto	l9494
 11122  0039A2                     l9476:
 11123                           
 11124                           ; BSR set to: 0
 11125                           ;main.c: 341:                 speed = (275);
 11126  0039A2  0E01               	movlw	1
 11127  0039A4  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
 11128  0039A6  0E13               	movlw	19
 11129  0039A8  6F87               	movwf	calcSpeed@speed& (0+255),b
 11130  0039AA  EF16  F01D         	goto	l9494
 11131  0039AE                     l9478:
 11132                           
 11133                           ; BSR set to: 0
 11134                           ;main.c: 346:             speed = (-125);
 11135  0039AE  0EFF               	movlw	255
 11136  0039B0  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
 11137  0039B2  0E83               	movlw	131
 11138  0039B4  6F87               	movwf	calcSpeed@speed& (0+255),b
 11139                           
 11140                           ;main.c: 347:             break;
 11141  0039B6  EF16  F01D         	goto	l9494
 11142  0039BA                     l9482:
 11143                           
 11144                           ; BSR set to: 0
 11145                           ;main.c: 352:             speed = (200);
 11146  0039BA  0E00               	movlw	0
 11147  0039BC  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
 11148  0039BE  0EC8               	movlw	200
 11149  0039C0  6F87               	movwf	calcSpeed@speed& (0+255),b
 11150                           
 11151                           ;main.c: 353:             break;
 11152  0039C2  EF16  F01D         	goto	l9494
 11153  0039C6                     l9486:
 11154                           
 11155                           ; BSR set to: 0
 11156                           ;main.c: 358:             speed = (250);
 11157  0039C6  0E00               	movlw	0
 11158  0039C8  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
 11159  0039CA  0EFA               	movlw	250
 11160  0039CC  6F87               	movwf	calcSpeed@speed& (0+255),b
 11161                           
 11162                           ;main.c: 359:             break;
 11163  0039CE  EF16  F01D         	goto	l9494
 11164  0039D2                     l9492:
 11165                           
 11166                           ; BSR set to: 0
 11167  0039D2  51FC               	movf	_driveMode& (0+255),w,b
 11168  0039D4  6F83               	movwf	??_calcSpeed& (0+255),b
 11169  0039D6  6B84               	clrf	(??_calcSpeed+1)& (0+255),b
 11170                           
 11171                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11172                           ; Switch size 1, requested type "simple"
 11173                           ; Number of cases is 1, Range of values is 0 to 0
 11174                           ; switch strategies available:
 11175                           ; Name         Instructions Cycles
 11176                           ; simple_byte            4     3 (average)
 11177                           ;	Chosen strategy is simple_byte
 11178  0039D8  5184               	movf	(??_calcSpeed+1)& (0+255),w,b
 11179  0039DA  0A00               	xorlw	0	; case 0
 11180  0039DC  B4D8               	btfsc	status,2,c
 11181  0039DE  EFF3  F01C         	goto	l9766
 11182  0039E2  EF16  F01D         	goto	l9494
 11183  0039E6                     l9766:
 11184                           
 11185                           ; BSR set to: 0
 11186                           ; Switch size 1, requested type "simple"
 11187                           ; Number of cases is 8, Range of values is 0 to 7
 11188                           ; switch strategies available:
 11189                           ; Name         Instructions Cycles
 11190                           ; simple_byte           25    13 (average)
 11191                           ;	Chosen strategy is simple_byte
 11192  0039E6  5183               	movf	??_calcSpeed& (0+255),w,b
 11193  0039E8  0A00               	xorlw	0	; case 0
 11194  0039EA  B4D8               	btfsc	status,2,c
 11195  0039EC  EF70  F01C         	goto	l9468
 11196  0039F0  0A01               	xorlw	1	; case 1
 11197  0039F2  B4D8               	btfsc	status,2,c
 11198  0039F4  EF3A  F01C         	goto	l9454
 11199  0039F8  0A03               	xorlw	3	; case 2
 11200  0039FA  B4D8               	btfsc	status,2,c
 11201  0039FC  EFD7  F01C         	goto	l9478
 11202  003A00  0A01               	xorlw	1	; case 3
 11203  003A02  B4D8               	btfsc	status,2,c
 11204  003A04  EFD7  F01C         	goto	l9478
 11205  003A08  0A07               	xorlw	7	; case 4
 11206  003A0A  B4D8               	btfsc	status,2,c
 11207  003A0C  EFDD  F01C         	goto	l9482
 11208  003A10  0A01               	xorlw	1	; case 5
 11209  003A12  B4D8               	btfsc	status,2,c
 11210  003A14  EFDD  F01C         	goto	l9482
 11211  003A18  0A03               	xorlw	3	; case 6
 11212  003A1A  B4D8               	btfsc	status,2,c
 11213  003A1C  EFE3  F01C         	goto	l9486
 11214  003A20  0A01               	xorlw	1	; case 7
 11215  003A22  B4D8               	btfsc	status,2,c
 11216  003A24  EFE3  F01C         	goto	l9486
 11217  003A28  EF16  F01D         	goto	l9494
 11218  003A2C                     l9494:
 11219                           
 11220                           ;main.c: 365:     if (speed > (400)) {
 11221  003A2C  0100               	movlb	0	; () banked
 11222  003A2E  BF88               	btfsc	(calcSpeed@speed+1)& (0+255),7,b
 11223  003A30  EF23  F01D         	goto	u10781
 11224  003A34  0E91               	movlw	145
 11225  003A36  5D87               	subwf	calcSpeed@speed& (0+255),w,b
 11226  003A38  0E01               	movlw	1
 11227  003A3A  5988               	subwfb	(calcSpeed@speed+1)& (0+255),w,b
 11228  003A3C  A0D8               	btfss	status,0,c
 11229  003A3E  EF23  F01D         	goto	u10781
 11230  003A42  EF25  F01D         	goto	u10780
 11231  003A46                     u10781:
 11232  003A46  EF29  F01D         	goto	l9498
 11233  003A4A                     u10780:
 11234  003A4A                     
 11235                           ; BSR set to: 0
 11236                           ;main.c: 366:         speed = (400);
 11237  003A4A  0E01               	movlw	1
 11238  003A4C  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
 11239  003A4E  0E90               	movlw	144
 11240  003A50  6F87               	movwf	calcSpeed@speed& (0+255),b
 11241  003A52                     l9498:
 11242                           
 11243                           ; BSR set to: 0
 11244                           ;main.c: 368:     if (speed < (-250)) {
 11245  003A52  AF88               	btfss	(calcSpeed@speed+1)& (0+255),7,b
 11246  003A54  EF35  F01D         	goto	u10791
 11247  003A58  0E06               	movlw	6
 11248  003A5A  5D87               	subwf	calcSpeed@speed& (0+255),w,b
 11249  003A5C  0EFF               	movlw	255
 11250  003A5E  5988               	subwfb	(calcSpeed@speed+1)& (0+255),w,b
 11251  003A60  B0D8               	btfsc	status,0,c
 11252  003A62  EF35  F01D         	goto	u10791
 11253  003A66  EF37  F01D         	goto	u10790
 11254  003A6A                     u10791:
 11255  003A6A  EF3B  F01D         	goto	l9502
 11256  003A6E                     u10790:
 11257  003A6E                     
 11258                           ; BSR set to: 0
 11259                           ;main.c: 369:         speed = (-250);
 11260  003A6E  0EFF               	movlw	255
 11261  003A70  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
 11262  003A72  0E06               	movlw	6
 11263  003A74  6F87               	movwf	calcSpeed@speed& (0+255),b
 11264  003A76                     l9502:
 11265                           
 11266                           ; BSR set to: 0
 11267                           ;main.c: 371:     setSpeed = speed;
 11268  003A76  C087  F040         	movff	calcSpeed@speed,_setSpeed
 11269  003A7A  C088  F041         	movff	calcSpeed@speed+1,_setSpeed+1
 11270  003A7E                     
 11271                           ; BSR set to: 0
 11272  003A7E  0012               	return		;funcret
 11273  003A80                     __end_of_calcSpeed:
 11274                           	callstack 0
 11275                           
 11276 ;; *************** function ___fladd *****************
 11277 ;; Defined at:
 11278 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
 11279 ;; Parameters:    Size  Location     Type
 11280 ;;  b               4   13[BANK0 ] void 
 11281 ;;  a               4   17[BANK0 ] void 
 11282 ;; Auto vars:     Size  Location     Type
 11283 ;;  grs             1   24[BANK0 ] unsigned char 
 11284 ;;  bexp            1   23[BANK0 ] unsigned char 
 11285 ;;  aexp            1   22[BANK0 ] unsigned char 
 11286 ;;  signs           1   21[BANK0 ] unsigned char 
 11287 ;; Return value:  Size  Location     Type
 11288 ;;                  4   13[BANK0 ] unsigned char 
 11289 ;; Registers used:
 11290 ;;		wreg, status,2, status,0
 11291 ;; Tracked objects:
 11292 ;;		On entry : 0/0
 11293 ;;		On exit  : 0/0
 11294 ;;		Unchanged: 0/0
 11295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11296 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11297 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11298 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11299 ;;      Totals:         4      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11300 ;;Total ram usage:       16 bytes
 11301 ;; Hardware stack levels used: 1
 11302 ;; Hardware stack levels required when called: 8
 11303 ;; This function calls:
 11304 ;;		Nothing
 11305 ;; This function is called by:
 11306 ;;		_calcSpeed
 11307 ;;		___flsub
 11308 ;;		_efgtoa
 11309 ;; This function uses a non-reentrant model
 11310 ;;
 11311                           
 11312                           	psect	text43
 11313  00237E                     __ptext43:
 11314                           	callstack 0
 11315  00237E                     ___fladd:
 11316                           	callstack 15
 11317  00237E  0100               	movlb	0	; () banked
 11318  002380  5170               	movf	(___fladd@b+3)& (0+255),w,b
 11319  002382  0B80               	andlw	128
 11320  002384  6F75               	movwf	___fladd@signs& (0+255),b
 11321  002386  5170               	movf	(___fladd@b+3)& (0+255),w,b
 11322  002388  2570               	addwf	(___fladd@b+3)& (0+255),w,b
 11323  00238A  6F77               	movwf	___fladd@bexp& (0+255),b
 11324  00238C                     
 11325                           ; BSR set to: 0
 11326  00238C  AF6F               	btfss	(___fladd@b+2)& (0+255),7,b
 11327  00238E  EFCB  F011         	goto	u7671
 11328  002392  EFCD  F011         	goto	u7670
 11329  002396                     u7671:
 11330  002396  EFCE  F011         	goto	l7730
 11331  00239A                     u7670:
 11332  00239A                     
 11333                           ; BSR set to: 0
 11334  00239A  8177               	bsf	___fladd@bexp& (0+255),0,b
 11335  00239C                     l7730:
 11336                           
 11337                           ; BSR set to: 0
 11338  00239C  5177               	movf	___fladd@bexp& (0+255),w,b
 11339  00239E  B4D8               	btfsc	status,2,c
 11340  0023A0  EFD4  F011         	goto	u7681
 11341  0023A4  EFD6  F011         	goto	u7680
 11342  0023A8                     u7681:
 11343  0023A8  EFEB  F011         	goto	l7740
 11344  0023AC                     u7680:
 11345  0023AC                     
 11346                           ; BSR set to: 0
 11347  0023AC  2977               	incf	___fladd@bexp& (0+255),w,b
 11348  0023AE  A4D8               	btfss	status,2,c
 11349  0023B0  EFDC  F011         	goto	u7691
 11350  0023B4  EFDE  F011         	goto	u7690
 11351  0023B8                     u7691:
 11352  0023B8  EFE6  F011         	goto	l7736
 11353  0023BC                     u7690:
 11354  0023BC                     
 11355                           ; BSR set to: 0
 11356  0023BC  0E00               	movlw	0
 11357  0023BE  6F6D               	movwf	___fladd@b& (0+255),b
 11358  0023C0  0E00               	movlw	0
 11359  0023C2  6F6E               	movwf	(___fladd@b+1)& (0+255),b
 11360  0023C4  0E00               	movlw	0
 11361  0023C6  6F6F               	movwf	(___fladd@b+2)& (0+255),b
 11362  0023C8  0E00               	movlw	0
 11363  0023CA  6F70               	movwf	(___fladd@b+3)& (0+255),b
 11364  0023CC                     l7736:
 11365                           
 11366                           ; BSR set to: 0
 11367  0023CC  8F6F               	bsf	(___fladd@b+2)& (0+255),7,b
 11368  0023CE                     
 11369                           ; BSR set to: 0
 11370  0023CE  0E00               	movlw	0
 11371  0023D0  6F70               	movwf	(___fladd@b+3)& (0+255),b
 11372  0023D2  EFF3  F011         	goto	l7742
 11373  0023D6                     l7740:
 11374                           
 11375                           ; BSR set to: 0
 11376  0023D6  0E00               	movlw	0
 11377  0023D8  6F6D               	movwf	___fladd@b& (0+255),b
 11378  0023DA  0E00               	movlw	0
 11379  0023DC  6F6E               	movwf	(___fladd@b+1)& (0+255),b
 11380  0023DE  0E00               	movlw	0
 11381  0023E0  6F6F               	movwf	(___fladd@b+2)& (0+255),b
 11382  0023E2  0E00               	movlw	0
 11383  0023E4  6F70               	movwf	(___fladd@b+3)& (0+255),b
 11384  0023E6                     l7742:
 11385                           
 11386                           ; BSR set to: 0
 11387  0023E6  5174               	movf	(___fladd@a+3)& (0+255),w,b
 11388  0023E8  0B80               	andlw	128
 11389  0023EA  6F76               	movwf	___fladd@aexp& (0+255),b
 11390  0023EC                     
 11391                           ; BSR set to: 0
 11392  0023EC  5175               	movf	___fladd@signs& (0+255),w,b
 11393  0023EE  1976               	xorwf	___fladd@aexp& (0+255),w,b
 11394  0023F0  B4D8               	btfsc	status,2,c
 11395  0023F2  EFFD  F011         	goto	u7701
 11396  0023F6  EFFF  F011         	goto	u7700
 11397  0023FA                     u7701:
 11398  0023FA  EF00  F012         	goto	l7748
 11399  0023FE                     u7700:
 11400  0023FE                     
 11401                           ; BSR set to: 0
 11402  0023FE  8D75               	bsf	___fladd@signs& (0+255),6,b
 11403  002400                     l7748:
 11404                           
 11405                           ; BSR set to: 0
 11406  002400  5174               	movf	(___fladd@a+3)& (0+255),w,b
 11407  002402  2574               	addwf	(___fladd@a+3)& (0+255),w,b
 11408  002404  6F76               	movwf	___fladd@aexp& (0+255),b
 11409  002406                     
 11410                           ; BSR set to: 0
 11411  002406  AF73               	btfss	(___fladd@a+2)& (0+255),7,b
 11412  002408  EF08  F012         	goto	u7711
 11413  00240C  EF0A  F012         	goto	u7710
 11414  002410                     u7711:
 11415  002410  EF0B  F012         	goto	l7754
 11416  002414                     u7710:
 11417  002414                     
 11418                           ; BSR set to: 0
 11419  002414  8176               	bsf	___fladd@aexp& (0+255),0,b
 11420  002416                     l7754:
 11421                           
 11422                           ; BSR set to: 0
 11423  002416  5176               	movf	___fladd@aexp& (0+255),w,b
 11424  002418  B4D8               	btfsc	status,2,c
 11425  00241A  EF11  F012         	goto	u7721
 11426  00241E  EF13  F012         	goto	u7720
 11427  002422                     u7721:
 11428  002422  EF28  F012         	goto	l7764
 11429  002426                     u7720:
 11430  002426                     
 11431                           ; BSR set to: 0
 11432  002426  2976               	incf	___fladd@aexp& (0+255),w,b
 11433  002428  A4D8               	btfss	status,2,c
 11434  00242A  EF19  F012         	goto	u7731
 11435  00242E  EF1B  F012         	goto	u7730
 11436  002432                     u7731:
 11437  002432  EF23  F012         	goto	l7760
 11438  002436                     u7730:
 11439  002436                     
 11440                           ; BSR set to: 0
 11441  002436  0E00               	movlw	0
 11442  002438  6F71               	movwf	___fladd@a& (0+255),b
 11443  00243A  0E00               	movlw	0
 11444  00243C  6F72               	movwf	(___fladd@a+1)& (0+255),b
 11445  00243E  0E00               	movlw	0
 11446  002440  6F73               	movwf	(___fladd@a+2)& (0+255),b
 11447  002442  0E00               	movlw	0
 11448  002444  6F74               	movwf	(___fladd@a+3)& (0+255),b
 11449  002446                     l7760:
 11450                           
 11451                           ; BSR set to: 0
 11452  002446  8F73               	bsf	(___fladd@a+2)& (0+255),7,b
 11453  002448                     
 11454                           ; BSR set to: 0
 11455  002448  0E00               	movlw	0
 11456  00244A  6F74               	movwf	(___fladd@a+3)& (0+255),b
 11457  00244C  EF30  F012         	goto	l7766
 11458  002450                     l7764:
 11459                           
 11460                           ; BSR set to: 0
 11461  002450  0E00               	movlw	0
 11462  002452  6F71               	movwf	___fladd@a& (0+255),b
 11463  002454  0E00               	movlw	0
 11464  002456  6F72               	movwf	(___fladd@a+1)& (0+255),b
 11465  002458  0E00               	movlw	0
 11466  00245A  6F73               	movwf	(___fladd@a+2)& (0+255),b
 11467  00245C  0E00               	movlw	0
 11468  00245E  6F74               	movwf	(___fladd@a+3)& (0+255),b
 11469  002460                     l7766:
 11470                           
 11471                           ; BSR set to: 0
 11472  002460  5177               	movf	___fladd@bexp& (0+255),w,b
 11473  002462  5D76               	subwf	___fladd@aexp& (0+255),w,b
 11474  002464  B0D8               	btfsc	status,0,c
 11475  002466  EF37  F012         	goto	u7741
 11476  00246A  EF39  F012         	goto	u7740
 11477  00246E                     u7741:
 11478  00246E  EF60  F012         	goto	l7802
 11479  002472                     u7740:
 11480  002472                     
 11481                           ; BSR set to: 0
 11482  002472  AD75               	btfss	___fladd@signs& (0+255),6,b
 11483  002474  EF3E  F012         	goto	u7751
 11484  002478  EF40  F012         	goto	u7750
 11485  00247C                     u7751:
 11486  00247C  EF42  F012         	goto	l7772
 11487  002480                     u7750:
 11488  002480                     
 11489                           ; BSR set to: 0
 11490  002480  0E80               	movlw	128
 11491  002482  1B75               	xorwf	___fladd@signs& (0+255),f,b
 11492  002484                     l7772:
 11493                           
 11494                           ; BSR set to: 0
 11495  002484  C077  F078         	movff	___fladd@bexp,___fladd@grs
 11496  002488                     
 11497                           ; BSR set to: 0
 11498  002488  C076  F077         	movff	___fladd@aexp,___fladd@bexp
 11499  00248C                     
 11500                           ; BSR set to: 0
 11501  00248C  C078  F076         	movff	___fladd@grs,___fladd@aexp
 11502  002490                     
 11503                           ; BSR set to: 0
 11504  002490  C06D  F078         	movff	___fladd@b,___fladd@grs
 11505  002494                     
 11506                           ; BSR set to: 0
 11507  002494  C071  F06D         	movff	___fladd@a,___fladd@b
 11508  002498                     
 11509                           ; BSR set to: 0
 11510  002498  C078  F071         	movff	___fladd@grs,___fladd@a
 11511  00249C                     
 11512                           ; BSR set to: 0
 11513  00249C  C06E  F078         	movff	___fladd@b+1,___fladd@grs
 11514  0024A0                     
 11515                           ; BSR set to: 0
 11516  0024A0  C072  F06E         	movff	___fladd@a+1,___fladd@b+1
 11517  0024A4                     
 11518                           ; BSR set to: 0
 11519  0024A4  C078  F072         	movff	___fladd@grs,___fladd@a+1
 11520  0024A8                     
 11521                           ; BSR set to: 0
 11522  0024A8  C06F  F078         	movff	___fladd@b+2,___fladd@grs
 11523  0024AC                     
 11524                           ; BSR set to: 0
 11525  0024AC  C073  F06F         	movff	___fladd@a+2,___fladd@b+2
 11526  0024B0                     
 11527                           ; BSR set to: 0
 11528  0024B0  C078  F073         	movff	___fladd@grs,___fladd@a+2
 11529  0024B4                     
 11530                           ; BSR set to: 0
 11531  0024B4  C070  F078         	movff	___fladd@b+3,___fladd@grs
 11532  0024B8                     
 11533                           ; BSR set to: 0
 11534  0024B8  C074  F070         	movff	___fladd@a+3,___fladd@b+3
 11535  0024BC                     
 11536                           ; BSR set to: 0
 11537  0024BC  C078  F074         	movff	___fladd@grs,___fladd@a+3
 11538  0024C0                     l7802:
 11539                           
 11540                           ; BSR set to: 0
 11541  0024C0  0E00               	movlw	0
 11542  0024C2  6F78               	movwf	___fladd@grs& (0+255),b
 11543  0024C4                     
 11544                           ; BSR set to: 0
 11545  0024C4  5177               	movf	___fladd@bexp& (0+255),w,b
 11546  0024C6  C076  F036         	movff	___fladd@aexp,??___fladd
 11547  0024CA  6A37               	clrf	(??___fladd+1)^0,c
 11548  0024CC  5E36               	subwf	??___fladd^0,f,c
 11549  0024CE  0E00               	movlw	0
 11550  0024D0  5A37               	subwfb	(??___fladd+1)^0,f,c
 11551  0024D2  BE37               	btfsc	(??___fladd+1)^0,7,c
 11552  0024D4  EF75  F012         	goto	u7761
 11553  0024D8  5037               	movf	(??___fladd+1)^0,w,c
 11554  0024DA  E109               	bnz	u7760
 11555  0024DC  0E1A               	movlw	26
 11556  0024DE  5C36               	subwf	??___fladd^0,w,c
 11557  0024E0  A0D8               	btfss	status,0,c
 11558  0024E2  EF75  F012         	goto	u7761
 11559  0024E6  EF77  F012         	goto	u7760
 11560  0024EA                     u7761:
 11561  0024EA  EFAE  F012         	goto	l1939
 11562  0024EE                     u7760:
 11563  0024EE                     
 11564                           ; BSR set to: 0
 11565  0024EE  516D               	movf	___fladd@b& (0+255),w,b
 11566  0024F0  116E               	iorwf	(___fladd@b+1)& (0+255),w,b
 11567  0024F2  116F               	iorwf	(___fladd@b+2)& (0+255),w,b
 11568  0024F4  1170               	iorwf	(___fladd@b+3)& (0+255),w,b
 11569  0024F6  A4D8               	btfss	status,2,c
 11570  0024F8  EF80  F012         	goto	u7771
 11571  0024FC  EF83  F012         	goto	u7770
 11572  002500                     u7771:
 11573  002500  0E01               	movlw	1
 11574  002502  EF84  F012         	goto	u7780
 11575  002506                     u7770:
 11576  002506  0E00               	movlw	0
 11577  002508                     u7780:
 11578  002508  6F78               	movwf	___fladd@grs& (0+255),b
 11579  00250A                     
 11580                           ; BSR set to: 0
 11581  00250A  0E00               	movlw	0
 11582  00250C  6F6D               	movwf	___fladd@b& (0+255),b
 11583  00250E  0E00               	movlw	0
 11584  002510  6F6E               	movwf	(___fladd@b+1)& (0+255),b
 11585  002512  0E00               	movlw	0
 11586  002514  6F6F               	movwf	(___fladd@b+2)& (0+255),b
 11587  002516  0E00               	movlw	0
 11588  002518  6F70               	movwf	(___fladd@b+3)& (0+255),b
 11589  00251A                     
 11590                           ; BSR set to: 0
 11591  00251A  C076  F077         	movff	___fladd@aexp,___fladd@bexp
 11592  00251E  EFB7  F012         	goto	l1938
 11593  002522                     l1940:
 11594                           
 11595                           ; BSR set to: 0
 11596  002522  A178               	btfss	___fladd@grs& (0+255),0,b
 11597  002524  EF96  F012         	goto	u7791
 11598  002528  EF98  F012         	goto	u7790
 11599  00252C                     u7791:
 11600  00252C  EF9E  F012         	goto	l7814
 11601  002530                     u7790:
 11602  002530                     
 11603                           ; BSR set to: 0
 11604  002530  90D8               	bcf	status,0,c
 11605  002532  3178               	rrcf	___fladd@grs& (0+255),w,b
 11606  002534  0901               	iorlw	1
 11607  002536  6F78               	movwf	___fladd@grs& (0+255),b
 11608  002538  EFA0  F012         	goto	l7816
 11609  00253C                     l7814:
 11610                           
 11611                           ; BSR set to: 0
 11612  00253C  90D8               	bcf	status,0,c
 11613  00253E  3378               	rrcf	___fladd@grs& (0+255),f,b
 11614  002540                     l7816:
 11615                           
 11616                           ; BSR set to: 0
 11617  002540  A16D               	btfss	___fladd@b& (0+255),0,b
 11618  002542  EFA5  F012         	goto	u7801
 11619  002546  EFA7  F012         	goto	u7800
 11620  00254A                     u7801:
 11621  00254A  EFA8  F012         	goto	l7820
 11622  00254E                     u7800:
 11623  00254E                     
 11624                           ; BSR set to: 0
 11625  00254E  8F78               	bsf	___fladd@grs& (0+255),7,b
 11626  002550                     l7820:
 11627                           
 11628                           ; BSR set to: 0
 11629  002550  3570               	rlcf	(___fladd@b+3)& (0+255),w,b
 11630  002552  3370               	rrcf	(___fladd@b+3)& (0+255),f,b
 11631  002554  336F               	rrcf	(___fladd@b+2)& (0+255),f,b
 11632  002556  336E               	rrcf	(___fladd@b+1)& (0+255),f,b
 11633  002558  336D               	rrcf	___fladd@b& (0+255),f,b
 11634  00255A                     
 11635                           ; BSR set to: 0
 11636  00255A  2B77               	incf	___fladd@bexp& (0+255),f,b
 11637  00255C                     l1939:
 11638                           
 11639                           ; BSR set to: 0
 11640  00255C  5176               	movf	___fladd@aexp& (0+255),w,b
 11641  00255E  5D77               	subwf	___fladd@bexp& (0+255),w,b
 11642  002560  A0D8               	btfss	status,0,c
 11643  002562  EFB5  F012         	goto	u7811
 11644  002566  EFB7  F012         	goto	u7810
 11645  00256A                     u7811:
 11646  00256A  EF91  F012         	goto	l1940
 11647  00256E                     u7810:
 11648  00256E                     l1938:
 11649                           
 11650                           ; BSR set to: 0
 11651  00256E  BD75               	btfsc	___fladd@signs& (0+255),6,b
 11652  002570  EFBC  F012         	goto	u7821
 11653  002574  EFBE  F012         	goto	u7820
 11654  002578                     u7821:
 11655  002578  EFFE  F012         	goto	l7848
 11656  00257C                     u7820:
 11657  00257C                     
 11658                           ; BSR set to: 0
 11659  00257C  5177               	movf	___fladd@bexp& (0+255),w,b
 11660  00257E  A4D8               	btfss	status,2,c
 11661  002580  EFC4  F012         	goto	u7831
 11662  002584  EFC6  F012         	goto	u7830
 11663  002588                     u7831:
 11664  002588  EFD0  F012         	goto	l7830
 11665  00258C                     u7830:
 11666  00258C                     
 11667                           ; BSR set to: 0
 11668  00258C  0E00               	movlw	0
 11669  00258E  6F6D               	movwf	?___fladd& (0+255),b
 11670  002590  0E00               	movlw	0
 11671  002592  6F6E               	movwf	(?___fladd+1)& (0+255),b
 11672  002594  0E00               	movlw	0
 11673  002596  6F6F               	movwf	(?___fladd+2)& (0+255),b
 11674  002598  0E00               	movlw	0
 11675  00259A  6F70               	movwf	(?___fladd+3)& (0+255),b
 11676  00259C  EF1F  F014         	goto	l1947
 11677  0025A0                     l7830:
 11678                           
 11679                           ; BSR set to: 0
 11680  0025A0  5171               	movf	___fladd@a& (0+255),w,b
 11681  0025A2  276D               	addwf	___fladd@b& (0+255),f,b
 11682  0025A4  5172               	movf	(___fladd@a+1)& (0+255),w,b
 11683  0025A6  236E               	addwfc	(___fladd@b+1)& (0+255),f,b
 11684  0025A8  5173               	movf	(___fladd@a+2)& (0+255),w,b
 11685  0025AA  236F               	addwfc	(___fladd@b+2)& (0+255),f,b
 11686  0025AC  5174               	movf	(___fladd@a+3)& (0+255),w,b
 11687  0025AE  2370               	addwfc	(___fladd@b+3)& (0+255),f,b
 11688  0025B0                     
 11689                           ; BSR set to: 0
 11690  0025B0  A170               	btfss	(___fladd@b+3)& (0+255),0,b
 11691  0025B2  EFDD  F012         	goto	u7841
 11692  0025B6  EFDF  F012         	goto	u7840
 11693  0025BA                     u7841:
 11694  0025BA  EF8B  F013         	goto	l7884
 11695  0025BE                     u7840:
 11696  0025BE                     
 11697                           ; BSR set to: 0
 11698  0025BE  A178               	btfss	___fladd@grs& (0+255),0,b
 11699  0025C0  EFE4  F012         	goto	u7851
 11700  0025C4  EFE6  F012         	goto	u7850
 11701  0025C8                     u7851:
 11702  0025C8  EFEC  F012         	goto	l7838
 11703  0025CC                     u7850:
 11704  0025CC                     
 11705                           ; BSR set to: 0
 11706  0025CC  90D8               	bcf	status,0,c
 11707  0025CE  3178               	rrcf	___fladd@grs& (0+255),w,b
 11708  0025D0  0901               	iorlw	1
 11709  0025D2  6F78               	movwf	___fladd@grs& (0+255),b
 11710  0025D4  EFEE  F012         	goto	l7840
 11711  0025D8                     l7838:
 11712                           
 11713                           ; BSR set to: 0
 11714  0025D8  90D8               	bcf	status,0,c
 11715  0025DA  3378               	rrcf	___fladd@grs& (0+255),f,b
 11716  0025DC                     l7840:
 11717                           
 11718                           ; BSR set to: 0
 11719  0025DC  A16D               	btfss	___fladd@b& (0+255),0,b
 11720  0025DE  EFF3  F012         	goto	u7861
 11721  0025E2  EFF5  F012         	goto	u7860
 11722  0025E6                     u7861:
 11723  0025E6  EFF6  F012         	goto	l7844
 11724  0025EA                     u7860:
 11725  0025EA                     
 11726                           ; BSR set to: 0
 11727  0025EA  8F78               	bsf	___fladd@grs& (0+255),7,b
 11728  0025EC                     l7844:
 11729                           
 11730                           ; BSR set to: 0
 11731  0025EC  3570               	rlcf	(___fladd@b+3)& (0+255),w,b
 11732  0025EE  3370               	rrcf	(___fladd@b+3)& (0+255),f,b
 11733  0025F0  336F               	rrcf	(___fladd@b+2)& (0+255),f,b
 11734  0025F2  336E               	rrcf	(___fladd@b+1)& (0+255),f,b
 11735  0025F4  336D               	rrcf	___fladd@b& (0+255),f,b
 11736  0025F6                     
 11737                           ; BSR set to: 0
 11738  0025F6  2B77               	incf	___fladd@bexp& (0+255),f,b
 11739  0025F8  EF8B  F013         	goto	l7884
 11740  0025FC                     l7848:
 11741                           
 11742                           ; BSR set to: 0
 11743  0025FC  5171               	movf	___fladd@a& (0+255),w,b
 11744  0025FE  5D6D               	subwf	___fladd@b& (0+255),w,b
 11745  002600  5172               	movf	(___fladd@a+1)& (0+255),w,b
 11746  002602  596E               	subwfb	(___fladd@b+1)& (0+255),w,b
 11747  002604  5173               	movf	(___fladd@a+2)& (0+255),w,b
 11748  002606  596F               	subwfb	(___fladd@b+2)& (0+255),w,b
 11749  002608  5170               	movf	(___fladd@b+3)& (0+255),w,b
 11750  00260A  0A80               	xorlw	128
 11751  00260C  6E36               	movwf	??___fladd^0,c
 11752  00260E  5174               	movf	(___fladd@a+3)& (0+255),w,b
 11753  002610  0A80               	xorlw	128
 11754  002612  5836               	subwfb	??___fladd^0,w,c
 11755  002614  B0D8               	btfsc	status,0,c
 11756  002616  EF0F  F013         	goto	u7871
 11757  00261A  EF11  F013         	goto	u7870
 11758  00261E                     u7871:
 11759  00261E  EF3C  F013         	goto	l7858
 11760  002622                     u7870:
 11761  002622                     
 11762                           ; BSR set to: 0
 11763  002622  516D               	movf	___fladd@b& (0+255),w,b
 11764  002624  5D71               	subwf	___fladd@a& (0+255),w,b
 11765  002626  6E36               	movwf	??___fladd^0,c
 11766  002628  516E               	movf	(___fladd@b+1)& (0+255),w,b
 11767  00262A  5972               	subwfb	(___fladd@a+1)& (0+255),w,b
 11768  00262C  6E37               	movwf	(??___fladd+1)^0,c
 11769  00262E  516F               	movf	(___fladd@b+2)& (0+255),w,b
 11770  002630  5973               	subwfb	(___fladd@a+2)& (0+255),w,b
 11771  002632  6E38               	movwf	(??___fladd+2)^0,c
 11772  002634  5170               	movf	(___fladd@b+3)& (0+255),w,b
 11773  002636  5974               	subwfb	(___fladd@a+3)& (0+255),w,b
 11774  002638  6E39               	movwf	(??___fladd+3)^0,c
 11775  00263A  0EFF               	movlw	255
 11776  00263C  2436               	addwf	??___fladd^0,w,c
 11777  00263E  6F6D               	movwf	___fladd@b& (0+255),b
 11778  002640  0EFF               	movlw	255
 11779  002642  2037               	addwfc	(??___fladd+1)^0,w,c
 11780  002644  6F6E               	movwf	(___fladd@b+1)& (0+255),b
 11781  002646  0EFF               	movlw	255
 11782  002648  2038               	addwfc	(??___fladd+2)^0,w,c
 11783  00264A  6F6F               	movwf	(___fladd@b+2)& (0+255),b
 11784  00264C  0EFF               	movlw	255
 11785  00264E  2039               	addwfc	(??___fladd+3)^0,w,c
 11786  002650  6F70               	movwf	(___fladd@b+3)& (0+255),b
 11787  002652  0E80               	movlw	128
 11788  002654  1B75               	xorwf	___fladd@signs& (0+255),f,b
 11789  002656                     
 11790                           ; BSR set to: 0
 11791  002656  6D78               	negf	___fladd@grs& (0+255),b
 11792  002658                     
 11793                           ; BSR set to: 0
 11794  002658  5178               	movf	___fladd@grs& (0+255),w,b
 11795  00265A  A4D8               	btfss	status,2,c
 11796  00265C  EF32  F013         	goto	u7881
 11797  002660  EF34  F013         	goto	u7880
 11798  002664                     u7881:
 11799  002664  EF44  F013         	goto	l1955
 11800  002668                     u7880:
 11801  002668                     
 11802                           ; BSR set to: 0
 11803  002668  0E01               	movlw	1
 11804  00266A  276D               	addwf	___fladd@b& (0+255),f,b
 11805  00266C  0E00               	movlw	0
 11806  00266E  236E               	addwfc	(___fladd@b+1)& (0+255),f,b
 11807  002670  236F               	addwfc	(___fladd@b+2)& (0+255),f,b
 11808  002672  2370               	addwfc	(___fladd@b+3)& (0+255),f,b
 11809  002674  EF44  F013         	goto	l1955
 11810  002678                     l7858:
 11811                           
 11812                           ; BSR set to: 0
 11813  002678  5171               	movf	___fladd@a& (0+255),w,b
 11814  00267A  5F6D               	subwf	___fladd@b& (0+255),f,b
 11815  00267C  5172               	movf	(___fladd@a+1)& (0+255),w,b
 11816  00267E  5B6E               	subwfb	(___fladd@b+1)& (0+255),f,b
 11817  002680  5173               	movf	(___fladd@a+2)& (0+255),w,b
 11818  002682  5B6F               	subwfb	(___fladd@b+2)& (0+255),f,b
 11819  002684  5174               	movf	(___fladd@a+3)& (0+255),w,b
 11820  002686  5B70               	subwfb	(___fladd@b+3)& (0+255),f,b
 11821  002688                     l1955:
 11822                           
 11823                           ; BSR set to: 0
 11824  002688  516D               	movf	___fladd@b& (0+255),w,b
 11825  00268A  116E               	iorwf	(___fladd@b+1)& (0+255),w,b
 11826  00268C  116F               	iorwf	(___fladd@b+2)& (0+255),w,b
 11827  00268E  1170               	iorwf	(___fladd@b+3)& (0+255),w,b
 11828  002690  A4D8               	btfss	status,2,c
 11829  002692  EF4D  F013         	goto	u7891
 11830  002696  EF4F  F013         	goto	u7890
 11831  00269A                     u7891:
 11832  00269A  EF84  F013         	goto	l7882
 11833  00269E                     u7890:
 11834  00269E                     
 11835                           ; BSR set to: 0
 11836  00269E  5178               	movf	___fladd@grs& (0+255),w,b
 11837  0026A0  A4D8               	btfss	status,2,c
 11838  0026A2  EF55  F013         	goto	u7901
 11839  0026A6  EF57  F013         	goto	u7900
 11840  0026AA                     u7901:
 11841  0026AA  EF84  F013         	goto	l7882
 11842  0026AE                     u7900:
 11843  0026AE                     
 11844                           ; BSR set to: 0
 11845  0026AE  0E00               	movlw	0
 11846  0026B0  6F6D               	movwf	?___fladd& (0+255),b
 11847  0026B2  0E00               	movlw	0
 11848  0026B4  6F6E               	movwf	(?___fladd+1)& (0+255),b
 11849  0026B6  0E00               	movlw	0
 11850  0026B8  6F6F               	movwf	(?___fladd+2)& (0+255),b
 11851  0026BA  0E00               	movlw	0
 11852  0026BC  6F70               	movwf	(?___fladd+3)& (0+255),b
 11853  0026BE  EF1F  F014         	goto	l1947
 11854  0026C2                     l7866:
 11855                           
 11856                           ; BSR set to: 0
 11857  0026C2  90D8               	bcf	status,0,c
 11858  0026C4  376D               	rlcf	___fladd@b& (0+255),f,b
 11859  0026C6  376E               	rlcf	(___fladd@b+1)& (0+255),f,b
 11860  0026C8  376F               	rlcf	(___fladd@b+2)& (0+255),f,b
 11861  0026CA  3770               	rlcf	(___fladd@b+3)& (0+255),f,b
 11862  0026CC                     
 11863                           ; BSR set to: 0
 11864  0026CC  AF78               	btfss	___fladd@grs& (0+255),7,b
 11865  0026CE  EF6B  F013         	goto	u7911
 11866  0026D2  EF6D  F013         	goto	u7910
 11867  0026D6                     u7911:
 11868  0026D6  EF6E  F013         	goto	l7872
 11869  0026DA                     u7910:
 11870  0026DA                     
 11871                           ; BSR set to: 0
 11872  0026DA  816D               	bsf	___fladd@b& (0+255),0,b
 11873  0026DC                     l7872:
 11874                           
 11875                           ; BSR set to: 0
 11876  0026DC  A178               	btfss	___fladd@grs& (0+255),0,b
 11877  0026DE  EF73  F013         	goto	u7921
 11878  0026E2  EF75  F013         	goto	u7920
 11879  0026E6                     u7921:
 11880  0026E6  EF79  F013         	goto	l7876
 11881  0026EA                     u7920:
 11882  0026EA                     
 11883                           ; BSR set to: 0
 11884  0026EA  80D8               	bsf	status,0,c
 11885  0026EC  3778               	rlcf	___fladd@grs& (0+255),f,b
 11886  0026EE  EF7B  F013         	goto	l7878
 11887  0026F2                     l7876:
 11888                           
 11889                           ; BSR set to: 0
 11890  0026F2  90D8               	bcf	status,0,c
 11891  0026F4  3778               	rlcf	___fladd@grs& (0+255),f,b
 11892  0026F6                     l7878:
 11893                           
 11894                           ; BSR set to: 0
 11895  0026F6  5177               	movf	___fladd@bexp& (0+255),w,b
 11896  0026F8  B4D8               	btfsc	status,2,c
 11897  0026FA  EF81  F013         	goto	u7931
 11898  0026FE  EF83  F013         	goto	u7930
 11899  002702                     u7931:
 11900  002702  EF84  F013         	goto	l7882
 11901  002706                     u7930:
 11902  002706                     
 11903                           ; BSR set to: 0
 11904  002706  0777               	decf	___fladd@bexp& (0+255),f,b
 11905  002708                     l7882:
 11906                           
 11907                           ; BSR set to: 0
 11908  002708  AF6F               	btfss	(___fladd@b+2)& (0+255),7,b
 11909  00270A  EF89  F013         	goto	u7941
 11910  00270E  EF8B  F013         	goto	u7940
 11911  002712                     u7941:
 11912  002712  EF61  F013         	goto	l7866
 11913  002716                     u7940:
 11914  002716                     l7884:
 11915                           
 11916                           ; BSR set to: 0
 11917  002716  0E00               	movlw	0
 11918  002718  6F76               	movwf	___fladd@aexp& (0+255),b
 11919  00271A                     
 11920                           ; BSR set to: 0
 11921  00271A  AF78               	btfss	___fladd@grs& (0+255),7,b
 11922  00271C  EF92  F013         	goto	u7951
 11923  002720  EF94  F013         	goto	u7950
 11924  002724                     u7951:
 11925  002724  EFAC  F013         	goto	l1964
 11926  002728                     u7950:
 11927  002728                     
 11928                           ; BSR set to: 0
 11929  002728  C078  F036         	movff	___fladd@grs,??___fladd
 11930  00272C  0E7F               	movlw	127
 11931  00272E  1636               	andwf	??___fladd^0,f,c
 11932  002730  B4D8               	btfsc	status,2,c
 11933  002732  EF9D  F013         	goto	u7961
 11934  002736  EF9F  F013         	goto	u7960
 11935  00273A                     u7961:
 11936  00273A  EFA3  F013         	goto	l1965
 11937  00273E                     u7960:
 11938  00273E                     l7890:
 11939                           
 11940                           ; BSR set to: 0
 11941  00273E  0E01               	movlw	1
 11942  002740  6F76               	movwf	___fladd@aexp& (0+255),b
 11943  002742  EFAC  F013         	goto	l1964
 11944  002746                     l1965:
 11945                           
 11946                           ; BSR set to: 0
 11947  002746  A16D               	btfss	___fladd@b& (0+255),0,b
 11948  002748  EFA8  F013         	goto	u7971
 11949  00274C  EFAA  F013         	goto	u7970
 11950  002750                     u7971:
 11951  002750  EFAC  F013         	goto	l1964
 11952  002754                     u7970:
 11953  002754  EF9F  F013         	goto	l7890
 11954  002758                     l1964:
 11955                           
 11956                           ; BSR set to: 0
 11957  002758  5176               	movf	___fladd@aexp& (0+255),w,b
 11958  00275A  B4D8               	btfsc	status,2,c
 11959  00275C  EFB2  F013         	goto	u7981
 11960  002760  EFB4  F013         	goto	u7980
 11961  002764                     u7981:
 11962  002764  EFDF  F013         	goto	l7902
 11963  002768                     u7980:
 11964  002768                     
 11965                           ; BSR set to: 0
 11966  002768  0E01               	movlw	1
 11967  00276A  276D               	addwf	___fladd@b& (0+255),f,b
 11968  00276C  0E00               	movlw	0
 11969  00276E  236E               	addwfc	(___fladd@b+1)& (0+255),f,b
 11970  002770  236F               	addwfc	(___fladd@b+2)& (0+255),f,b
 11971  002772  2370               	addwfc	(___fladd@b+3)& (0+255),f,b
 11972  002774                     
 11973                           ; BSR set to: 0
 11974  002774  A170               	btfss	(___fladd@b+3)& (0+255),0,b
 11975  002776  EFBF  F013         	goto	u7991
 11976  00277A  EFC1  F013         	goto	u7990
 11977  00277E                     u7991:
 11978  00277E  EFDF  F013         	goto	l7902
 11979  002782                     u7990:
 11980  002782                     
 11981                           ; BSR set to: 0
 11982  002782  C06D  F036         	movff	___fladd@b,??___fladd
 11983  002786  C06E  F037         	movff	___fladd@b+1,??___fladd+1
 11984  00278A  C06F  F038         	movff	___fladd@b+2,??___fladd+2
 11985  00278E  C070  F039         	movff	___fladd@b+3,??___fladd+3
 11986  002792  3439               	rlcf	(??___fladd+3)^0,w,c
 11987  002794  3239               	rrcf	(??___fladd+3)^0,f,c
 11988  002796  3238               	rrcf	(??___fladd+2)^0,f,c
 11989  002798  3237               	rrcf	(??___fladd+1)^0,f,c
 11990  00279A  3236               	rrcf	??___fladd^0,f,c
 11991  00279C  C036  F06D         	movff	??___fladd,___fladd@b
 11992  0027A0  C037  F06E         	movff	??___fladd+1,___fladd@b+1
 11993  0027A4  C038  F06F         	movff	??___fladd+2,___fladd@b+2
 11994  0027A8  C039  F070         	movff	??___fladd+3,___fladd@b+3
 11995  0027AC  2977               	incf	___fladd@bexp& (0+255),w,b
 11996  0027AE  B4D8               	btfsc	status,2,c
 11997  0027B0  EFDC  F013         	goto	u8001
 11998  0027B4  EFDE  F013         	goto	u8000
 11999  0027B8                     u8001:
 12000  0027B8  EFDF  F013         	goto	l7902
 12001  0027BC                     u8000:
 12002  0027BC                     
 12003                           ; BSR set to: 0
 12004  0027BC  2B77               	incf	___fladd@bexp& (0+255),f,b
 12005  0027BE                     l7902:
 12006                           
 12007                           ; BSR set to: 0
 12008  0027BE  2977               	incf	___fladd@bexp& (0+255),w,b
 12009  0027C0  B4D8               	btfsc	status,2,c
 12010  0027C2  EFE5  F013         	goto	u8011
 12011  0027C6  EFE7  F013         	goto	u8010
 12012  0027CA                     u8011:
 12013  0027CA  EFEF  F013         	goto	l7906
 12014  0027CE                     u8010:
 12015  0027CE                     
 12016                           ; BSR set to: 0
 12017  0027CE  5177               	movf	___fladd@bexp& (0+255),w,b
 12018  0027D0  A4D8               	btfss	status,2,c
 12019  0027D2  EFED  F013         	goto	u8021
 12020  0027D6  EFEF  F013         	goto	u8020
 12021  0027DA                     u8021:
 12022  0027DA  EF01  F014         	goto	l7910
 12023  0027DE                     u8020:
 12024  0027DE                     l7906:
 12025                           
 12026                           ; BSR set to: 0
 12027  0027DE  0E00               	movlw	0
 12028  0027E0  6F6D               	movwf	___fladd@b& (0+255),b
 12029  0027E2  0E00               	movlw	0
 12030  0027E4  6F6E               	movwf	(___fladd@b+1)& (0+255),b
 12031  0027E6  0E00               	movlw	0
 12032  0027E8  6F6F               	movwf	(___fladd@b+2)& (0+255),b
 12033  0027EA  0E00               	movlw	0
 12034  0027EC  6F70               	movwf	(___fladd@b+3)& (0+255),b
 12035  0027EE  5177               	movf	___fladd@bexp& (0+255),w,b
 12036  0027F0  A4D8               	btfss	status,2,c
 12037  0027F2  EFFD  F013         	goto	u8031
 12038  0027F6  EFFF  F013         	goto	u8030
 12039  0027FA                     u8031:
 12040  0027FA  EF01  F014         	goto	l7910
 12041  0027FE                     u8030:
 12042  0027FE                     
 12043                           ; BSR set to: 0
 12044  0027FE  0E00               	movlw	0
 12045  002800  6F75               	movwf	___fladd@signs& (0+255),b
 12046  002802                     l7910:
 12047                           
 12048                           ; BSR set to: 0
 12049  002802  A177               	btfss	___fladd@bexp& (0+255),0,b
 12050  002804  EF06  F014         	goto	u8041
 12051  002808  EF08  F014         	goto	u8040
 12052  00280C                     u8041:
 12053  00280C  EF0B  F014         	goto	l7914
 12054  002810                     u8040:
 12055  002810                     
 12056                           ; BSR set to: 0
 12057  002810  8F6F               	bsf	(___fladd@b+2)& (0+255),7,b
 12058  002812  EF0C  F014         	goto	l7916
 12059  002816                     l7914:
 12060                           
 12061                           ; BSR set to: 0
 12062  002816  9F6F               	bcf	(___fladd@b+2)& (0+255),7,b
 12063  002818                     l7916:
 12064                           
 12065                           ; BSR set to: 0
 12066  002818  90D8               	bcf	status,0,c
 12067  00281A  3177               	rrcf	___fladd@bexp& (0+255),w,b
 12068  00281C  6F70               	movwf	(___fladd@b+3)& (0+255),b
 12069  00281E                     
 12070                           ; BSR set to: 0
 12071  00281E  AF75               	btfss	___fladd@signs& (0+255),7,b
 12072  002820  EF14  F014         	goto	u8051
 12073  002824  EF16  F014         	goto	u8050
 12074  002828                     u8051:
 12075  002828  EF17  F014         	goto	l7922
 12076  00282C                     u8050:
 12077  00282C                     
 12078                           ; BSR set to: 0
 12079  00282C  8F70               	bsf	(___fladd@b+3)& (0+255),7,b
 12080  00282E                     l7922:
 12081                           
 12082                           ; BSR set to: 0
 12083  00282E  C06D  F06D         	movff	___fladd@b,?___fladd
 12084  002832  C06E  F06E         	movff	___fladd@b+1,?___fladd+1
 12085  002836  C06F  F06F         	movff	___fladd@b+2,?___fladd+2
 12086  00283A  C070  F070         	movff	___fladd@b+3,?___fladd+3
 12087  00283E                     l1947:
 12088                           
 12089                           ; BSR set to: 0
 12090  00283E  0012               	return		;funcret
 12091  002840                     __end_of___fladd:
 12092                           	callstack 0
 12093                           
 12094 ;; *************** function _calcMotorPow *****************
 12095 ;; Defined at:
 12096 ;;		line 374 in file "main.c"
 12097 ;; Parameters:    Size  Location     Type
 12098 ;;		None
 12099 ;; Auto vars:     Size  Location     Type
 12100 ;;  oldSpeedDelt    2   39[BANK0 ] short 
 12101 ;;  setSpeedDelt    2   37[BANK0 ] short 
 12102 ;;  addMPow         1   41[BANK0 ] char 
 12103 ;; Return value:  Size  Location     Type
 12104 ;;                  1    wreg      void 
 12105 ;; Registers used:
 12106 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12107 ;; Tracked objects:
 12108 ;;		On entry : 0/0
 12109 ;;		On exit  : 0/0
 12110 ;;		Unchanged: 0/0
 12111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12113 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12114 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12115 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12116 ;;Total ram usage:        7 bytes
 12117 ;; Hardware stack levels used: 1
 12118 ;; Hardware stack levels required when called: 10
 12119 ;; This function calls:
 12120 ;;		___awdiv
 12121 ;;		___flmul
 12122 ;;		___fltol
 12123 ;;		___xxtofl
 12124 ;;		_actSpeed
 12125 ;;		_setMotor
 12126 ;; This function is called by:
 12127 ;;		_loop
 12128 ;; This function uses a non-reentrant model
 12129 ;;
 12130                           
 12131                           	psect	text44
 12132  004682                     __ptext44:
 12133                           	callstack 0
 12134  004682                     _calcMotorPow:
 12135                           	callstack 19
 12136  004682                     
 12137                           ;main.c: 375:     currentSpeed = actSpeed();
 12138  004682  EC87  F02B         	call	_actSpeed	;wreg free
 12139  004686  C022  F03E         	movff	?_actSpeed,_currentSpeed
 12140  00468A  C023  F03F         	movff	?_actSpeed+1,_currentSpeed+1
 12141  00468E                     
 12142                           ;main.c: 377:     int16_t setSpeedDelta = setSpeed - currentSpeed;
 12143  00468E  503E               	movf	_currentSpeed^0,w,c
 12144  004690  5C40               	subwf	_setSpeed^0,w,c
 12145  004692  0100               	movlb	0	; () banked
 12146  004694  6F85               	movwf	calcMotorPow@setSpeedDelta& (0+255),b
 12147  004696  503F               	movf	(_currentSpeed+1)^0,w,c
 12148  004698  5841               	subwfb	(_setSpeed+1)^0,w,c
 12149  00469A  6F86               	movwf	(calcMotorPow@setSpeedDelta+1)& (0+255),b
 12150  00469C                     
 12151                           ; BSR set to: 0
 12152                           ;main.c: 378:     int16_t oldSpeedDelta = currentSpeed - oldSpeed;
 12153  00469C  0101               	movlb	1	; () banked
 12154  00469E  5130               	movf	_oldSpeed& (0+255),w,b
 12155  0046A0  5C3E               	subwf	_currentSpeed^0,w,c
 12156  0046A2  0100               	movlb	0	; () banked
 12157  0046A4  6F87               	movwf	calcMotorPow@oldSpeedDelta& (0+255),b
 12158  0046A6  0101               	movlb	1	; () banked
 12159  0046A8  5131               	movf	(_oldSpeed+1)& (0+255),w,b
 12160  0046AA  583F               	subwfb	(_currentSpeed+1)^0,w,c
 12161  0046AC  0100               	movlb	0	; () banked
 12162  0046AE  6F88               	movwf	(calcMotorPow@oldSpeedDelta+1)& (0+255),b
 12163  0046B0                     
 12164                           ; BSR set to: 0
 12165                           ;main.c: 384:     addMPow = (int8_t) ((0.020) * (setSpeedDelta - (oldSpeedDelta / (2))))
      +                          ;
 12166  0046B0  0E0A               	movlw	10
 12167  0046B2  6E2E               	movwf	___flmul@a^0,c
 12168  0046B4  0ED7               	movlw	215
 12169  0046B6  6E2F               	movwf	(___flmul@a+1)^0,c
 12170  0046B8  0EA3               	movlw	163
 12171  0046BA  6E30               	movwf	(___flmul@a+2)^0,c
 12172  0046BC  0E3C               	movlw	60
 12173  0046BE  6E31               	movwf	(___flmul@a+3)^0,c
 12174  0046C0  0E00               	movlw	0
 12175  0046C2  6E17               	movwf	(___awdiv@divisor+1)^0,c
 12176  0046C4  0E02               	movlw	2
 12177  0046C6  6E16               	movwf	___awdiv@divisor^0,c
 12178  0046C8  C087  F014         	movff	calcMotorPow@oldSpeedDelta,___awdiv@dividend
 12179  0046CC  C088  F015         	movff	calcMotorPow@oldSpeedDelta+1,___awdiv@dividend+1
 12180  0046D0  EC19  F029         	call	___awdiv	;wreg free
 12181  0046D4  C085  F083         	movff	calcMotorPow@setSpeedDelta,??_calcMotorPow
 12182  0046D8  C086  F084         	movff	calcMotorPow@setSpeedDelta+1,??_calcMotorPow+1
 12183  0046DC  5014               	movf	?___awdiv^0,w,c
 12184  0046DE  0100               	movlb	0	; () banked
 12185  0046E0  5F83               	subwf	??_calcMotorPow& (0+255),f,b
 12186  0046E2  5015               	movf	(?___awdiv+1)^0,w,c
 12187  0046E4  5B84               	subwfb	(??_calcMotorPow+1)& (0+255),f,b
 12188  0046E6  C083  F01C         	movff	??_calcMotorPow,___xxtofl@val
 12189  0046EA  C084  F01D         	movff	??_calcMotorPow+1,___xxtofl@val+1
 12190  0046EE  0E00               	movlw	0
 12191  0046F0  BE1D               	btfsc	(___xxtofl@val+1)^0,7,c
 12192  0046F2  0EFF               	movlw	-1
 12193  0046F4  6E1E               	movwf	(___xxtofl@val+2)^0,c
 12194  0046F6  6E1F               	movwf	(___xxtofl@val+3)^0,c
 12195  0046F8  0E01               	movlw	1
 12196  0046FA  EC4A  F020         	call	___xxtofl
 12197  0046FE  C01C  F02A         	movff	?___xxtofl,___flmul@b
 12198  004702  C01D  F02B         	movff	?___xxtofl+1,___flmul@b+1
 12199  004706  C01E  F02C         	movff	?___xxtofl+2,___flmul@b+2
 12200  00470A  C01F  F02D         	movff	?___xxtofl+3,___flmul@b+3
 12201  00470E  EC20  F014         	call	___flmul	;wreg free
 12202  004712  C02A  F079         	movff	?___flmul,___fltol@f1
 12203  004716  C02B  F07A         	movff	?___flmul+1,___fltol@f1+1
 12204  00471A  C02C  F07B         	movff	?___flmul+2,___fltol@f1+2
 12205  00471E  C02D  F07C         	movff	?___flmul+3,___fltol@f1+3
 12206  004722  ECFD  F024         	call	___fltol	;wreg free
 12207  004726  0100               	movlb	0	; () banked
 12208  004728  5179               	movf	?___fltol& (0+255),w,b
 12209  00472A  6F89               	movwf	calcMotorPow@addMPow& (0+255),b
 12210  00472C                     
 12211                           ; BSR set to: 0
 12212                           ;main.c: 386:     if (addMPow > (3)) {
 12213  00472C  5189               	movf	calcMotorPow@addMPow& (0+255),w,b
 12214  00472E  0A80               	xorlw	128
 12215  004730  0F7C               	addlw	-132
 12216  004732  A0D8               	btfss	status,0,c
 12217  004734  EF9E  F023         	goto	u10801
 12218  004738  EFA0  F023         	goto	u10800
 12219  00473C                     u10801:
 12220  00473C  EFA4  F023         	goto	l9522
 12221  004740                     u10800:
 12222  004740                     
 12223                           ; BSR set to: 0
 12224                           ;main.c: 387:         addMPow = (3);
 12225  004740  0E03               	movlw	3
 12226  004742  6F89               	movwf	calcMotorPow@addMPow& (0+255),b
 12227                           
 12228                           ;main.c: 388:     } else if (addMPow < -(3)) {
 12229  004744  EFB0  F023         	goto	l9526
 12230  004748                     l9522:
 12231                           
 12232                           ; BSR set to: 0
 12233  004748  5189               	movf	calcMotorPow@addMPow& (0+255),w,b
 12234  00474A  0A80               	xorlw	128
 12235  00474C  0F83               	addlw	131
 12236  00474E  B0D8               	btfsc	status,0,c
 12237  004750  EFAC  F023         	goto	u10811
 12238  004754  EFAE  F023         	goto	u10810
 12239  004758                     u10811:
 12240  004758  EFB0  F023         	goto	l9526
 12241  00475C                     u10810:
 12242  00475C                     
 12243                           ; BSR set to: 0
 12244                           ;main.c: 389:         addMPow = -(3);
 12245  00475C  0EFD               	movlw	253
 12246  00475E  6F89               	movwf	calcMotorPow@addMPow& (0+255),b
 12247  004760                     l9526:
 12248                           
 12249                           ; BSR set to: 0
 12250                           ;main.c: 392:     actMotorPow += addMPow;
 12251  004760  5189               	movf	calcMotorPow@addMPow& (0+255),w,b
 12252  004762  27F1               	addwf	_actMotorPow& (0+255),f,b
 12253  004764  0E00               	movlw	0
 12254  004766  BF89               	btfsc	calcMotorPow@addMPow& (0+255),7,b
 12255  004768  0EFF               	movlw	255
 12256  00476A  23F2               	addwfc	(_actMotorPow+1)& (0+255),f,b
 12257  00476C                     
 12258                           ; BSR set to: 0
 12259                           ;main.c: 394:     if (actMotorPow > (700)) {
 12260  00476C  BFF2               	btfsc	(_actMotorPow+1)& (0+255),7,b
 12261  00476E  EFC2  F023         	goto	u10821
 12262  004772  0EBD               	movlw	189
 12263  004774  5DF1               	subwf	_actMotorPow& (0+255),w,b
 12264  004776  0E02               	movlw	2
 12265  004778  59F2               	subwfb	(_actMotorPow+1)& (0+255),w,b
 12266  00477A  A0D8               	btfss	status,0,c
 12267  00477C  EFC2  F023         	goto	u10821
 12268  004780  EFC4  F023         	goto	u10820
 12269  004784                     u10821:
 12270  004784  EFCA  F023         	goto	l9532
 12271  004788                     u10820:
 12272  004788                     
 12273                           ; BSR set to: 0
 12274                           ;main.c: 395:         actMotorPow = (700);
 12275  004788  0E02               	movlw	2
 12276  00478A  6FF2               	movwf	(_actMotorPow+1)& (0+255),b
 12277  00478C  0EBC               	movlw	188
 12278  00478E  6FF1               	movwf	_actMotorPow& (0+255),b
 12279                           
 12280                           ;main.c: 396:     } else if (actMotorPow < (-400)) {
 12281  004790  EFDC  F023         	goto	l9536
 12282  004794                     l9532:
 12283                           
 12284                           ; BSR set to: 0
 12285  004794  AFF2               	btfss	(_actMotorPow+1)& (0+255),7,b
 12286  004796  EFD6  F023         	goto	u10831
 12287  00479A  0E70               	movlw	112
 12288  00479C  5DF1               	subwf	_actMotorPow& (0+255),w,b
 12289  00479E  0EFE               	movlw	254
 12290  0047A0  59F2               	subwfb	(_actMotorPow+1)& (0+255),w,b
 12291  0047A2  B0D8               	btfsc	status,0,c
 12292  0047A4  EFD6  F023         	goto	u10831
 12293  0047A8  EFD8  F023         	goto	u10830
 12294  0047AC                     u10831:
 12295  0047AC  EFDC  F023         	goto	l9536
 12296  0047B0                     u10830:
 12297  0047B0                     
 12298                           ; BSR set to: 0
 12299                           ;main.c: 397:         actMotorPow = (-400);
 12300  0047B0  0EFE               	movlw	254
 12301  0047B2  6FF2               	movwf	(_actMotorPow+1)& (0+255),b
 12302  0047B4  0E70               	movlw	112
 12303  0047B6  6FF1               	movwf	_actMotorPow& (0+255),b
 12304  0047B8                     l9536:
 12305                           
 12306                           ; BSR set to: 0
 12307                           ;main.c: 400:     setMotor(actMotorPow);
 12308  0047B8  C0F1  F018         	movff	_actMotorPow,setMotor@motorPower
 12309  0047BC  C0F2  F019         	movff	_actMotorPow+1,setMotor@motorPower+1
 12310  0047C0  EC75  F027         	call	_setMotor	;wreg free
 12311  0047C4                     
 12312                           ;main.c: 402:     oldSpeed = currentSpeed;
 12313  0047C4  C03E  F130         	movff	_currentSpeed,_oldSpeed
 12314  0047C8  C03F  F131         	movff	_currentSpeed+1,_oldSpeed+1
 12315  0047CC  0012               	return		;funcret
 12316  0047CE                     __end_of_calcMotorPow:
 12317                           	callstack 0
 12318                           
 12319 ;; *************** function _setMotor *****************
 12320 ;; Defined at:
 12321 ;;		line 405 in file "main.c"
 12322 ;; Parameters:    Size  Location     Type
 12323 ;;  motorPower      2   23[COMRAM] short 
 12324 ;; Auto vars:     Size  Location     Type
 12325 ;;		None
 12326 ;; Return value:  Size  Location     Type
 12327 ;;                  1    wreg      void 
 12328 ;; Registers used:
 12329 ;;		wreg, status,2, status,0, cstack
 12330 ;; Tracked objects:
 12331 ;;		On entry : 0/0
 12332 ;;		On exit  : 0/0
 12333 ;;		Unchanged: 0/0
 12334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12335 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12337 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12338 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12339 ;;Total ram usage:        4 bytes
 12340 ;; Hardware stack levels used: 1
 12341 ;; Hardware stack levels required when called: 9
 12342 ;; This function calls:
 12343 ;;		_PWM7_LoadDutyValue
 12344 ;;		_PWM8_LoadDutyValue
 12345 ;; This function is called by:
 12346 ;;		_loop
 12347 ;;		_calcMotorPow
 12348 ;;		_startAccell
 12349 ;; This function uses a non-reentrant model
 12350 ;;
 12351                           
 12352                           	psect	text45
 12353  004EEA                     __ptext45:
 12354                           	callstack 0
 12355  004EEA                     _setMotor:
 12356                           	callstack 20
 12357  004EEA                     
 12358                           ;main.c: 406:     if (motorPower >= (100)) {
 12359  004EEA  BE19               	btfsc	(setMotor@motorPower+1)^0,7,c
 12360  004EEC  EF81  F027         	goto	u6661
 12361  004EF0  5019               	movf	(setMotor@motorPower+1)^0,w,c
 12362  004EF2  E109               	bnz	u6660
 12363  004EF4  0E64               	movlw	100
 12364  004EF6  5C18               	subwf	setMotor@motorPower^0,w,c
 12365  004EF8  A0D8               	btfss	status,0,c
 12366  004EFA  EF81  F027         	goto	u6661
 12367  004EFE  EF83  F027         	goto	u6660
 12368  004F02                     u6661:
 12369  004F02  EFA3  F027         	goto	l6788
 12370  004F06                     u6660:
 12371  004F06                     
 12372                           ;main.c: 407:         if (motorPower > (700)) {
 12373  004F06  BE19               	btfsc	(setMotor@motorPower+1)^0,7,c
 12374  004F08  EF8F  F027         	goto	u6671
 12375  004F0C  0EBD               	movlw	189
 12376  004F0E  5C18               	subwf	setMotor@motorPower^0,w,c
 12377  004F10  0E02               	movlw	2
 12378  004F12  5819               	subwfb	(setMotor@motorPower+1)^0,w,c
 12379  004F14  A0D8               	btfss	status,0,c
 12380  004F16  EF8F  F027         	goto	u6671
 12381  004F1A  EF91  F027         	goto	u6670
 12382  004F1E                     u6671:
 12383  004F1E  EF95  F027         	goto	l6784
 12384  004F22                     u6670:
 12385  004F22                     
 12386                           ;main.c: 408:             motorPower = (700);
 12387  004F22  0E02               	movlw	2
 12388  004F24  6E19               	movwf	(setMotor@motorPower+1)^0,c
 12389  004F26  0EBC               	movlw	188
 12390  004F28  6E18               	movwf	setMotor@motorPower^0,c
 12391  004F2A                     l6784:
 12392                           
 12393                           ;main.c: 410:         PWM7_LoadDutyValue((uint16_t) (motorPower));
 12394  004F2A  C018  F014         	movff	setMotor@motorPower,PWM7_LoadDutyValue@dutyValue
 12395  004F2E  C019  F015         	movff	setMotor@motorPower+1,PWM7_LoadDutyValue@dutyValue+1
 12396  004F32  EC04  F030         	call	_PWM7_LoadDutyValue	;wreg free
 12397  004F36                     
 12398                           ;main.c: 411:         PWM8_LoadDutyValue(0);
 12399  004F36  0E00               	movlw	0
 12400  004F38  6E15               	movwf	(PWM8_LoadDutyValue@dutyValue+1)^0,c
 12401  004F3A  0E00               	movlw	0
 12402  004F3C  6E14               	movwf	PWM8_LoadDutyValue@dutyValue^0,c
 12403  004F3E  ECEA  F02F         	call	_PWM8_LoadDutyValue	;wreg free
 12404                           
 12405                           ;main.c: 412:     } else if (motorPower <= -(100)) {
 12406  004F42  EFE5  F027         	goto	l1390
 12407  004F46                     l6788:
 12408  004F46  AE19               	btfss	(setMotor@motorPower+1)^0,7,c
 12409  004F48  EFAF  F027         	goto	u6681
 12410  004F4C  0E9D               	movlw	157
 12411  004F4E  5C18               	subwf	setMotor@motorPower^0,w,c
 12412  004F50  0EFF               	movlw	255
 12413  004F52  5819               	subwfb	(setMotor@motorPower+1)^0,w,c
 12414  004F54  B0D8               	btfsc	status,0,c
 12415  004F56  EFAF  F027         	goto	u6681
 12416  004F5A  EFB1  F027         	goto	u6680
 12417  004F5E                     u6681:
 12418  004F5E  EFD9  F027         	goto	l6798
 12419  004F62                     u6680:
 12420  004F62                     
 12421                           ;main.c: 413:         if (motorPower < (-400)) {
 12422  004F62  AE19               	btfss	(setMotor@motorPower+1)^0,7,c
 12423  004F64  EFBD  F027         	goto	u6691
 12424  004F68  0E70               	movlw	112
 12425  004F6A  5C18               	subwf	setMotor@motorPower^0,w,c
 12426  004F6C  0EFE               	movlw	254
 12427  004F6E  5819               	subwfb	(setMotor@motorPower+1)^0,w,c
 12428  004F70  B0D8               	btfsc	status,0,c
 12429  004F72  EFBD  F027         	goto	u6691
 12430  004F76  EFBF  F027         	goto	u6690
 12431  004F7A                     u6691:
 12432  004F7A  EFC3  F027         	goto	l6794
 12433  004F7E                     u6690:
 12434  004F7E                     
 12435                           ;main.c: 414:             motorPower = (-400);
 12436  004F7E  0EFE               	movlw	254
 12437  004F80  6E19               	movwf	(setMotor@motorPower+1)^0,c
 12438  004F82  0E70               	movlw	112
 12439  004F84  6E18               	movwf	setMotor@motorPower^0,c
 12440  004F86                     l6794:
 12441                           
 12442                           ;main.c: 416:         PWM7_LoadDutyValue(0);
 12443  004F86  0E00               	movlw	0
 12444  004F88  6E15               	movwf	(PWM7_LoadDutyValue@dutyValue+1)^0,c
 12445  004F8A  0E00               	movlw	0
 12446  004F8C  6E14               	movwf	PWM7_LoadDutyValue@dutyValue^0,c
 12447  004F8E  EC04  F030         	call	_PWM7_LoadDutyValue	;wreg free
 12448  004F92                     
 12449                           ;main.c: 417:         PWM8_LoadDutyValue((uint16_t) (-motorPower));
 12450  004F92  C018  F01A         	movff	setMotor@motorPower,??_setMotor
 12451  004F96  C019  F01B         	movff	setMotor@motorPower+1,??_setMotor+1
 12452  004F9A  1E1A               	comf	??_setMotor^0,f,c
 12453  004F9C  1E1B               	comf	(??_setMotor+1)^0,f,c
 12454  004F9E  4A1A               	infsnz	??_setMotor^0,f,c
 12455  004FA0  2A1B               	incf	(??_setMotor+1)^0,f,c
 12456  004FA2  C01A  F014         	movff	??_setMotor,PWM8_LoadDutyValue@dutyValue
 12457  004FA6  C01B  F015         	movff	??_setMotor+1,PWM8_LoadDutyValue@dutyValue+1
 12458  004FAA  ECEA  F02F         	call	_PWM8_LoadDutyValue	;wreg free
 12459                           
 12460                           ;main.c: 418:     } else {
 12461  004FAE  EFE5  F027         	goto	l1390
 12462  004FB2                     l6798:
 12463                           
 12464                           ;main.c: 419:         PWM7_LoadDutyValue(0);
 12465  004FB2  0E00               	movlw	0
 12466  004FB4  6E15               	movwf	(PWM7_LoadDutyValue@dutyValue+1)^0,c
 12467  004FB6  0E00               	movlw	0
 12468  004FB8  6E14               	movwf	PWM7_LoadDutyValue@dutyValue^0,c
 12469  004FBA  EC04  F030         	call	_PWM7_LoadDutyValue	;wreg free
 12470                           
 12471                           ;main.c: 420:         PWM8_LoadDutyValue(0);
 12472  004FBE  0E00               	movlw	0
 12473  004FC0  6E15               	movwf	(PWM8_LoadDutyValue@dutyValue+1)^0,c
 12474  004FC2  0E00               	movlw	0
 12475  004FC4  6E14               	movwf	PWM8_LoadDutyValue@dutyValue^0,c
 12476  004FC6  ECEA  F02F         	call	_PWM8_LoadDutyValue	;wreg free
 12477  004FCA                     l1390:
 12478  004FCA  0012               	return		;funcret
 12479  004FCC                     __end_of_setMotor:
 12480                           	callstack 0
 12481                           
 12482 ;; *************** function _PWM8_LoadDutyValue *****************
 12483 ;; Defined at:
 12484 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 12485 ;; Parameters:    Size  Location     Type
 12486 ;;  dutyValue       2   19[COMRAM] unsigned short 
 12487 ;; Auto vars:     Size  Location     Type
 12488 ;;		None
 12489 ;; Return value:  Size  Location     Type
 12490 ;;                  1    wreg      void 
 12491 ;; Registers used:
 12492 ;;		wreg, status,2, status,0
 12493 ;; Tracked objects:
 12494 ;;		On entry : 0/0
 12495 ;;		On exit  : 0/0
 12496 ;;		Unchanged: 0/0
 12497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12498 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12500 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12501 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12502 ;;Total ram usage:        4 bytes
 12503 ;; Hardware stack levels used: 1
 12504 ;; Hardware stack levels required when called: 8
 12505 ;; This function calls:
 12506 ;;		Nothing
 12507 ;; This function is called by:
 12508 ;;		_setMotor
 12509 ;; This function uses a non-reentrant model
 12510 ;;
 12511                           
 12512                           	psect	text46
 12513  005FD4                     __ptext46:
 12514                           	callstack 0
 12515  005FD4                     _PWM8_LoadDutyValue:
 12516                           	callstack 20
 12517  005FD4                     
 12518                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 12519  005FD4  C014  F016         	movff	PWM8_LoadDutyValue@dutyValue,??_PWM8_LoadDutyValue
 12520  005FD8  C015  F017         	movff	PWM8_LoadDutyValue@dutyValue+1,??_PWM8_LoadDutyValue+1
 12521  005FDC  90D8               	bcf	status,0,c
 12522  005FDE  3217               	rrcf	(??_PWM8_LoadDutyValue+1)^0,f,c
 12523  005FE0  3216               	rrcf	??_PWM8_LoadDutyValue^0,f,c
 12524  005FE2  90D8               	bcf	status,0,c
 12525  005FE4  3217               	rrcf	(??_PWM8_LoadDutyValue+1)^0,f,c
 12526  005FE6  3216               	rrcf	??_PWM8_LoadDutyValue^0,f,c
 12527  005FE8  5016               	movf	??_PWM8_LoadDutyValue^0,w,c
 12528  005FEA  6E61               	movwf	97,c	;volatile
 12529                           
 12530                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 12531  005FEC  C014  F016         	movff	PWM8_LoadDutyValue@dutyValue,??_PWM8_LoadDutyValue
 12532  005FF0  0E03               	movlw	3
 12533  005FF2  1616               	andwf	??_PWM8_LoadDutyValue^0,f,c
 12534  005FF4  0E06               	movlw	6
 12535  005FF6  6E17               	movwf	(??_PWM8_LoadDutyValue+1)^0,c
 12536  005FF8                     u6435:
 12537  005FF8  90D8               	bcf	status,0,c
 12538  005FFA  3616               	rlcf	??_PWM8_LoadDutyValue^0,f,c
 12539  005FFC  2E17               	decfsz	(??_PWM8_LoadDutyValue+1)^0,f,c
 12540  005FFE  EFFC  F02F         	goto	u6435
 12541  006002  5016               	movf	??_PWM8_LoadDutyValue^0,w,c
 12542  006004  6E60               	movwf	96,c	;volatile
 12543  006006  0012               	return		;funcret
 12544  006008                     __end_of_PWM8_LoadDutyValue:
 12545                           	callstack 0
 12546                           
 12547 ;; *************** function _PWM7_LoadDutyValue *****************
 12548 ;; Defined at:
 12549 ;;		line 74 in file "mcc_generated_files/pwm7.c"
 12550 ;; Parameters:    Size  Location     Type
 12551 ;;  dutyValue       2   19[COMRAM] unsigned short 
 12552 ;; Auto vars:     Size  Location     Type
 12553 ;;		None
 12554 ;; Return value:  Size  Location     Type
 12555 ;;                  1    wreg      void 
 12556 ;; Registers used:
 12557 ;;		wreg, status,2, status,0
 12558 ;; Tracked objects:
 12559 ;;		On entry : 0/0
 12560 ;;		On exit  : 0/0
 12561 ;;		Unchanged: 0/0
 12562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12563 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12565 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12566 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12567 ;;Total ram usage:        4 bytes
 12568 ;; Hardware stack levels used: 1
 12569 ;; Hardware stack levels required when called: 8
 12570 ;; This function calls:
 12571 ;;		Nothing
 12572 ;; This function is called by:
 12573 ;;		_setMotor
 12574 ;; This function uses a non-reentrant model
 12575 ;;
 12576                           
 12577                           	psect	text47
 12578  006008                     __ptext47:
 12579                           	callstack 0
 12580  006008                     _PWM7_LoadDutyValue:
 12581                           	callstack 20
 12582  006008                     
 12583                           ;mcc_generated_files/pwm7.c: 74:  void PWM7_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm7.c: 75:  {;mcc_generated_files/pwm7.c: 77:      PWM7DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 12584  006008  C014  F016         	movff	PWM7_LoadDutyValue@dutyValue,??_PWM7_LoadDutyValue
 12585  00600C  C015  F017         	movff	PWM7_LoadDutyValue@dutyValue+1,??_PWM7_LoadDutyValue+1
 12586  006010  90D8               	bcf	status,0,c
 12587  006012  3217               	rrcf	(??_PWM7_LoadDutyValue+1)^0,f,c
 12588  006014  3216               	rrcf	??_PWM7_LoadDutyValue^0,f,c
 12589  006016  90D8               	bcf	status,0,c
 12590  006018  3217               	rrcf	(??_PWM7_LoadDutyValue+1)^0,f,c
 12591  00601A  3216               	rrcf	??_PWM7_LoadDutyValue^0,f,c
 12592  00601C  5016               	movf	??_PWM7_LoadDutyValue^0,w,c
 12593  00601E  6E65               	movwf	101,c	;volatile
 12594                           
 12595                           ;mcc_generated_files/pwm7.c: 80:      PWM7DCL = (dutyValue & 0x0003)<<6;
 12596  006020  C014  F016         	movff	PWM7_LoadDutyValue@dutyValue,??_PWM7_LoadDutyValue
 12597  006024  0E03               	movlw	3
 12598  006026  1616               	andwf	??_PWM7_LoadDutyValue^0,f,c
 12599  006028  0E06               	movlw	6
 12600  00602A  6E17               	movwf	(??_PWM7_LoadDutyValue+1)^0,c
 12601  00602C                     u6425:
 12602  00602C  90D8               	bcf	status,0,c
 12603  00602E  3616               	rlcf	??_PWM7_LoadDutyValue^0,f,c
 12604  006030  2E17               	decfsz	(??_PWM7_LoadDutyValue+1)^0,f,c
 12605  006032  EF16  F030         	goto	u6425
 12606  006036  5016               	movf	??_PWM7_LoadDutyValue^0,w,c
 12607  006038  6E64               	movwf	100,c	;volatile
 12608  00603A  0012               	return		;funcret
 12609  00603C                     __end_of_PWM7_LoadDutyValue:
 12610                           	callstack 0
 12611                           
 12612 ;; *************** function _actSpeed *****************
 12613 ;; Defined at:
 12614 ;;		line 73 in file "main.c"
 12615 ;; Parameters:    Size  Location     Type
 12616 ;;		None
 12617 ;; Auto vars:     Size  Location     Type
 12618 ;;  speed           2   35[COMRAM] short 
 12619 ;; Return value:  Size  Location     Type
 12620 ;;                  2   33[COMRAM] short 
 12621 ;; Registers used:
 12622 ;;		wreg, status,2, status,0, cstack
 12623 ;; Tracked objects:
 12624 ;;		On entry : 0/0
 12625 ;;		On exit  : 0/0
 12626 ;;		Unchanged: 0/0
 12627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12628 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12629 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12631 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12632 ;;Total ram usage:        4 bytes
 12633 ;; Hardware stack levels used: 1
 12634 ;; Hardware stack levels required when called: 9
 12635 ;; This function calls:
 12636 ;;		___aldiv
 12637 ;; This function is called by:
 12638 ;;		_calcMotorPow
 12639 ;; This function uses a non-reentrant model
 12640 ;;
 12641                           
 12642                           	psect	text48
 12643  00570E                     __ptext48:
 12644                           	callstack 0
 12645  00570E                     _actSpeed:
 12646                           	callstack 19
 12647  00570E                     
 12648                           ;main.c: 74:     int16_t speed = 0;
 12649  00570E  0E00               	movlw	0
 12650  005710  6E25               	movwf	(actSpeed@speed+1)^0,c
 12651  005712  0E00               	movlw	0
 12652  005714  6E24               	movwf	actSpeed@speed^0,c
 12653  005716                     
 12654                           ;main.c: 75:     if (smtPeriod) {
 12655  005716  5049               	movf	_smtPeriod^0,w,c	;volatile
 12656  005718  104A               	iorwf	(_smtPeriod+1)^0,w,c	;volatile
 12657  00571A  104B               	iorwf	(_smtPeriod+2)^0,w,c	;volatile
 12658  00571C  104C               	iorwf	(_smtPeriod+3)^0,w,c	;volatile
 12659  00571E  B4D8               	btfsc	status,2,c
 12660  005720  EF94  F02B         	goto	u6741
 12661  005724  EF96  F02B         	goto	u6740
 12662  005728                     u6741:
 12663  005728  EFCC  F02B         	goto	l6854
 12664  00572C                     u6740:
 12665  00572C                     
 12666                           ;main.c: 76:         if (CLC3CONbits.LC3OUT) {
 12667  00572C  013C               	movlb	60	; () banked
 12668  00572E  AB60               	btfss	96,5,b	;volatile
 12669  005730  EF9C  F02B         	goto	u6751
 12670  005734  EF9E  F02B         	goto	u6750
 12671  005738                     u6751:
 12672  005738  EFB6  F02B         	goto	l6852
 12673  00573C                     u6750:
 12674  00573C                     
 12675                           ; BSR set to: 60
 12676                           ;main.c: 77:             speed = (int16_t) ((int32_t) (500000 / (int32_t) smtPeriod));
 12677  00573C  0E20               	movlw	32
 12678  00573E  6E14               	movwf	___aldiv@dividend^0,c
 12679  005740  0EA1               	movlw	161
 12680  005742  6E15               	movwf	(___aldiv@dividend+1)^0,c
 12681  005744  0E07               	movlw	7
 12682  005746  6E16               	movwf	(___aldiv@dividend+2)^0,c
 12683  005748  0E00               	movlw	0
 12684  00574A  6E17               	movwf	(___aldiv@dividend+3)^0,c
 12685  00574C  C049  F018         	movff	_smtPeriod,___aldiv@divisor	;volatile
 12686  005750  C04A  F019         	movff	_smtPeriod+1,___aldiv@divisor+1	;volatile
 12687  005754  C04B  F01A         	movff	_smtPeriod+2,___aldiv@divisor+2	;volatile
 12688  005758  C04C  F01B         	movff	_smtPeriod+3,___aldiv@divisor+3	;volatile
 12689  00575C  EC77  F024         	call	___aldiv	;wreg free
 12690  005760  C014  F024         	movff	?___aldiv,actSpeed@speed
 12691  005764  C015  F025         	movff	?___aldiv+1,actSpeed@speed+1
 12692                           
 12693                           ;main.c: 78:         } else {
 12694  005768  EFCC  F02B         	goto	l6854
 12695  00576C                     l6852:
 12696                           
 12697                           ; BSR set to: 60
 12698                           ;main.c: 79:             speed = (int16_t) ((int32_t) (-500000 / (int32_t) smtPeriod));
 12699  00576C  0EE0               	movlw	224
 12700  00576E  6E14               	movwf	___aldiv@dividend^0,c
 12701  005770  0E5E               	movlw	94
 12702  005772  6E15               	movwf	(___aldiv@dividend+1)^0,c
 12703  005774  0EF8               	movlw	248
 12704  005776  6E16               	movwf	(___aldiv@dividend+2)^0,c
 12705  005778  0EFF               	movlw	255
 12706  00577A  6E17               	movwf	(___aldiv@dividend+3)^0,c
 12707  00577C  C049  F018         	movff	_smtPeriod,___aldiv@divisor	;volatile
 12708  005780  C04A  F019         	movff	_smtPeriod+1,___aldiv@divisor+1	;volatile
 12709  005784  C04B  F01A         	movff	_smtPeriod+2,___aldiv@divisor+2	;volatile
 12710  005788  C04C  F01B         	movff	_smtPeriod+3,___aldiv@divisor+3	;volatile
 12711  00578C  EC77  F024         	call	___aldiv	;wreg free
 12712  005790  C014  F024         	movff	?___aldiv,actSpeed@speed
 12713  005794  C015  F025         	movff	?___aldiv+1,actSpeed@speed+1
 12714  005798                     l6854:
 12715                           
 12716                           ;main.c: 82:     return speed;
 12717  005798  C024  F022         	movff	actSpeed@speed,?_actSpeed
 12718  00579C  C025  F023         	movff	actSpeed@speed+1,?_actSpeed+1
 12719  0057A0  0012               	return		;funcret
 12720  0057A2                     __end_of_actSpeed:
 12721                           	callstack 0
 12722                           
 12723 ;; *************** function ___aldiv *****************
 12724 ;; Defined at:
 12725 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aldiv.c"
 12726 ;; Parameters:    Size  Location     Type
 12727 ;;  dividend        4   19[COMRAM] long 
 12728 ;;  divisor         4   23[COMRAM] long 
 12729 ;; Auto vars:     Size  Location     Type
 12730 ;;  quotient        4   29[COMRAM] long 
 12731 ;;  sign            1   28[COMRAM] unsigned char 
 12732 ;;  counter         1   27[COMRAM] unsigned char 
 12733 ;; Return value:  Size  Location     Type
 12734 ;;                  4   19[COMRAM] long 
 12735 ;; Registers used:
 12736 ;;		wreg, status,2, status,0
 12737 ;; Tracked objects:
 12738 ;;		On entry : 0/0
 12739 ;;		On exit  : 0/0
 12740 ;;		Unchanged: 0/0
 12741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12742 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12743 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12745 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12746 ;;Total ram usage:       14 bytes
 12747 ;; Hardware stack levels used: 1
 12748 ;; Hardware stack levels required when called: 8
 12749 ;; This function calls:
 12750 ;;		Nothing
 12751 ;; This function is called by:
 12752 ;;		_actSpeed
 12753 ;; This function uses a non-reentrant model
 12754 ;;
 12755                           
 12756                           	psect	text49
 12757  0048EE                     __ptext49:
 12758                           	callstack 0
 12759  0048EE                     ___aldiv:
 12760                           	callstack 19
 12761  0048EE  0E00               	movlw	0
 12762  0048F0  6E1D               	movwf	___aldiv@sign^0,c
 12763  0048F2  BE1B               	btfsc	(___aldiv@divisor+3)^0,7,c
 12764  0048F4  EF80  F024         	goto	u6470
 12765  0048F8  EF7E  F024         	goto	u6471
 12766  0048FC                     u6471:
 12767  0048FC  EF8A  F024         	goto	l6646
 12768  004900                     u6470:
 12769  004900  1E1B               	comf	(___aldiv@divisor+3)^0,f,c
 12770  004902  1E1A               	comf	(___aldiv@divisor+2)^0,f,c
 12771  004904  1E19               	comf	(___aldiv@divisor+1)^0,f,c
 12772  004906  6C18               	negf	___aldiv@divisor^0,c
 12773  004908  0E00               	movlw	0
 12774  00490A  2219               	addwfc	(___aldiv@divisor+1)^0,f,c
 12775  00490C  221A               	addwfc	(___aldiv@divisor+2)^0,f,c
 12776  00490E  221B               	addwfc	(___aldiv@divisor+3)^0,f,c
 12777  004910  0E01               	movlw	1
 12778  004912  6E1D               	movwf	___aldiv@sign^0,c
 12779  004914                     l6646:
 12780  004914  BE17               	btfsc	(___aldiv@dividend+3)^0,7,c
 12781  004916  EF91  F024         	goto	u6480
 12782  00491A  EF8F  F024         	goto	u6481
 12783  00491E                     u6481:
 12784  00491E  EF9B  F024         	goto	l6652
 12785  004922                     u6480:
 12786  004922  1E17               	comf	(___aldiv@dividend+3)^0,f,c
 12787  004924  1E16               	comf	(___aldiv@dividend+2)^0,f,c
 12788  004926  1E15               	comf	(___aldiv@dividend+1)^0,f,c
 12789  004928  6C14               	negf	___aldiv@dividend^0,c
 12790  00492A  0E00               	movlw	0
 12791  00492C  2215               	addwfc	(___aldiv@dividend+1)^0,f,c
 12792  00492E  2216               	addwfc	(___aldiv@dividend+2)^0,f,c
 12793  004930  2217               	addwfc	(___aldiv@dividend+3)^0,f,c
 12794  004932  0E01               	movlw	1
 12795  004934  1A1D               	xorwf	___aldiv@sign^0,f,c
 12796  004936                     l6652:
 12797  004936  0E00               	movlw	0
 12798  004938  6E1E               	movwf	___aldiv@quotient^0,c
 12799  00493A  0E00               	movlw	0
 12800  00493C  6E1F               	movwf	(___aldiv@quotient+1)^0,c
 12801  00493E  0E00               	movlw	0
 12802  004940  6E20               	movwf	(___aldiv@quotient+2)^0,c
 12803  004942  0E00               	movlw	0
 12804  004944  6E21               	movwf	(___aldiv@quotient+3)^0,c
 12805  004946  5018               	movf	___aldiv@divisor^0,w,c
 12806  004948  1019               	iorwf	(___aldiv@divisor+1)^0,w,c
 12807  00494A  101A               	iorwf	(___aldiv@divisor+2)^0,w,c
 12808  00494C  101B               	iorwf	(___aldiv@divisor+3)^0,w,c
 12809  00494E  B4D8               	btfsc	status,2,c
 12810  004950  EFAC  F024         	goto	u6491
 12811  004954  EFAE  F024         	goto	u6490
 12812  004958                     u6491:
 12813  004958  EFE4  F024         	goto	l6674
 12814  00495C                     u6490:
 12815  00495C  0E01               	movlw	1
 12816  00495E  6E1C               	movwf	___aldiv@counter^0,c
 12817  004960  EFB8  F024         	goto	l6660
 12818  004964                     l6658:
 12819  004964  90D8               	bcf	status,0,c
 12820  004966  3618               	rlcf	___aldiv@divisor^0,f,c
 12821  004968  3619               	rlcf	(___aldiv@divisor+1)^0,f,c
 12822  00496A  361A               	rlcf	(___aldiv@divisor+2)^0,f,c
 12823  00496C  361B               	rlcf	(___aldiv@divisor+3)^0,f,c
 12824  00496E  2A1C               	incf	___aldiv@counter^0,f,c
 12825  004970                     l6660:
 12826  004970  AE1B               	btfss	(___aldiv@divisor+3)^0,7,c
 12827  004972  EFBD  F024         	goto	u6501
 12828  004976  EFBF  F024         	goto	u6500
 12829  00497A                     u6501:
 12830  00497A  EFB2  F024         	goto	l6658
 12831  00497E                     u6500:
 12832  00497E                     l6662:
 12833  00497E  90D8               	bcf	status,0,c
 12834  004980  361E               	rlcf	___aldiv@quotient^0,f,c
 12835  004982  361F               	rlcf	(___aldiv@quotient+1)^0,f,c
 12836  004984  3620               	rlcf	(___aldiv@quotient+2)^0,f,c
 12837  004986  3621               	rlcf	(___aldiv@quotient+3)^0,f,c
 12838  004988  5018               	movf	___aldiv@divisor^0,w,c
 12839  00498A  5C14               	subwf	___aldiv@dividend^0,w,c
 12840  00498C  5019               	movf	(___aldiv@divisor+1)^0,w,c
 12841  00498E  5815               	subwfb	(___aldiv@dividend+1)^0,w,c
 12842  004990  501A               	movf	(___aldiv@divisor+2)^0,w,c
 12843  004992  5816               	subwfb	(___aldiv@dividend+2)^0,w,c
 12844  004994  501B               	movf	(___aldiv@divisor+3)^0,w,c
 12845  004996  5817               	subwfb	(___aldiv@dividend+3)^0,w,c
 12846  004998  A0D8               	btfss	status,0,c
 12847  00499A  EFD1  F024         	goto	u6511
 12848  00499E  EFD3  F024         	goto	u6510
 12849  0049A2                     u6511:
 12850  0049A2  EFDC  F024         	goto	l6670
 12851  0049A6                     u6510:
 12852  0049A6  5018               	movf	___aldiv@divisor^0,w,c
 12853  0049A8  5E14               	subwf	___aldiv@dividend^0,f,c
 12854  0049AA  5019               	movf	(___aldiv@divisor+1)^0,w,c
 12855  0049AC  5A15               	subwfb	(___aldiv@dividend+1)^0,f,c
 12856  0049AE  501A               	movf	(___aldiv@divisor+2)^0,w,c
 12857  0049B0  5A16               	subwfb	(___aldiv@dividend+2)^0,f,c
 12858  0049B2  501B               	movf	(___aldiv@divisor+3)^0,w,c
 12859  0049B4  5A17               	subwfb	(___aldiv@dividend+3)^0,f,c
 12860  0049B6  801E               	bsf	___aldiv@quotient^0,0,c
 12861  0049B8                     l6670:
 12862  0049B8  90D8               	bcf	status,0,c
 12863  0049BA  321B               	rrcf	(___aldiv@divisor+3)^0,f,c
 12864  0049BC  321A               	rrcf	(___aldiv@divisor+2)^0,f,c
 12865  0049BE  3219               	rrcf	(___aldiv@divisor+1)^0,f,c
 12866  0049C0  3218               	rrcf	___aldiv@divisor^0,f,c
 12867  0049C2  2E1C               	decfsz	___aldiv@counter^0,f,c
 12868  0049C4  EFBF  F024         	goto	l6662
 12869  0049C8                     l6674:
 12870  0049C8  501D               	movf	___aldiv@sign^0,w,c
 12871  0049CA  B4D8               	btfsc	status,2,c
 12872  0049CC  EFEA  F024         	goto	u6521
 12873  0049D0  EFEC  F024         	goto	u6520
 12874  0049D4                     u6521:
 12875  0049D4  EFF4  F024         	goto	l6678
 12876  0049D8                     u6520:
 12877  0049D8  1E21               	comf	(___aldiv@quotient+3)^0,f,c
 12878  0049DA  1E20               	comf	(___aldiv@quotient+2)^0,f,c
 12879  0049DC  1E1F               	comf	(___aldiv@quotient+1)^0,f,c
 12880  0049DE  6C1E               	negf	___aldiv@quotient^0,c
 12881  0049E0  0E00               	movlw	0
 12882  0049E2  221F               	addwfc	(___aldiv@quotient+1)^0,f,c
 12883  0049E4  2220               	addwfc	(___aldiv@quotient+2)^0,f,c
 12884  0049E6  2221               	addwfc	(___aldiv@quotient+3)^0,f,c
 12885  0049E8                     l6678:
 12886  0049E8  C01E  F014         	movff	___aldiv@quotient,?___aldiv
 12887  0049EC  C01F  F015         	movff	___aldiv@quotient+1,?___aldiv+1
 12888  0049F0  C020  F016         	movff	___aldiv@quotient+2,?___aldiv+2
 12889  0049F4  C021  F017         	movff	___aldiv@quotient+3,?___aldiv+3
 12890  0049F8  0012               	return		;funcret
 12891  0049FA                     __end_of___aldiv:
 12892                           	callstack 0
 12893                           
 12894 ;; *************** function ___xxtofl *****************
 12895 ;; Defined at:
 12896 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
 12897 ;; Parameters:    Size  Location     Type
 12898 ;;  sign            1    wreg     unsigned char 
 12899 ;;  val             4   27[COMRAM] long 
 12900 ;; Auto vars:     Size  Location     Type
 12901 ;;  sign            1   35[COMRAM] unsigned char 
 12902 ;;  arg             4   37[COMRAM] unsigned long 
 12903 ;;  exp             1   36[COMRAM] unsigned char 
 12904 ;; Return value:  Size  Location     Type
 12905 ;;                  4   27[COMRAM] unsigned char 
 12906 ;; Registers used:
 12907 ;;		wreg, status,2, status,0
 12908 ;; Tracked objects:
 12909 ;;		On entry : 0/0
 12910 ;;		On exit  : 0/0
 12911 ;;		Unchanged: 0/0
 12912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12913 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12914 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12915 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12916 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12917 ;;Total ram usage:       14 bytes
 12918 ;; Hardware stack levels used: 1
 12919 ;; Hardware stack levels required when called: 8
 12920 ;; This function calls:
 12921 ;;		Nothing
 12922 ;; This function is called by:
 12923 ;;		_loop
 12924 ;;		_checkBatt
 12925 ;;		_checkCurveCount
 12926 ;;		_getCurve
 12927 ;;		_calcSpeed
 12928 ;;		_calcMotorPow
 12929 ;;		_setSteering
 12930 ;; This function uses a non-reentrant model
 12931 ;;
 12932                           
 12933                           	psect	text50
 12934  004094                     __ptext50:
 12935                           	callstack 0
 12936  004094                     ___xxtofl:
 12937                           	callstack 20
 12938                           
 12939                           ;incstack = 0
 12940                           ;___xxtofl@sign stored from wreg
 12941  004094  6E24               	movwf	___xxtofl@sign^0,c
 12942  004096  5024               	movf	___xxtofl@sign^0,w,c
 12943  004098  B4D8               	btfsc	status,2,c
 12944  00409A  EF51  F020         	goto	u10221
 12945  00409E  EF53  F020         	goto	u10220
 12946  0040A2                     u10221:
 12947  0040A2  EF75  F020         	goto	l2065
 12948  0040A6                     u10220:
 12949  0040A6  BE1F               	btfsc	(___xxtofl@val+3)^0,7,c
 12950  0040A8  EF5A  F020         	goto	u10230
 12951  0040AC  EF58  F020         	goto	u10231
 12952  0040B0                     u10231:
 12953  0040B0  EF75  F020         	goto	l2065
 12954  0040B4                     u10230:
 12955  0040B4  C01C  F020         	movff	___xxtofl@val,??___xxtofl
 12956  0040B8  C01D  F021         	movff	___xxtofl@val+1,??___xxtofl+1
 12957  0040BC  C01E  F022         	movff	___xxtofl@val+2,??___xxtofl+2
 12958  0040C0  C01F  F023         	movff	___xxtofl@val+3,??___xxtofl+3
 12959  0040C4  1E20               	comf	??___xxtofl^0,f,c
 12960  0040C6  1E21               	comf	(??___xxtofl+1)^0,f,c
 12961  0040C8  1E22               	comf	(??___xxtofl+2)^0,f,c
 12962  0040CA  1E23               	comf	(??___xxtofl+3)^0,f,c
 12963  0040CC  2A20               	incf	??___xxtofl^0,f,c
 12964  0040CE  0E00               	movlw	0
 12965  0040D0  2221               	addwfc	(??___xxtofl+1)^0,f,c
 12966  0040D2  2222               	addwfc	(??___xxtofl+2)^0,f,c
 12967  0040D4  2223               	addwfc	(??___xxtofl+3)^0,f,c
 12968  0040D6  C020  F026         	movff	??___xxtofl,___xxtofl@arg
 12969  0040DA  C021  F027         	movff	??___xxtofl+1,___xxtofl@arg+1
 12970  0040DE  C022  F028         	movff	??___xxtofl+2,___xxtofl@arg+2
 12971  0040E2  C023  F029         	movff	??___xxtofl+3,___xxtofl@arg+3
 12972  0040E6  EF7D  F020         	goto	l9124
 12973  0040EA                     l2065:
 12974  0040EA  C01C  F026         	movff	___xxtofl@val,___xxtofl@arg
 12975  0040EE  C01D  F027         	movff	___xxtofl@val+1,___xxtofl@arg+1
 12976  0040F2  C01E  F028         	movff	___xxtofl@val+2,___xxtofl@arg+2
 12977  0040F6  C01F  F029         	movff	___xxtofl@val+3,___xxtofl@arg+3
 12978  0040FA                     l9124:
 12979  0040FA  501C               	movf	___xxtofl@val^0,w,c
 12980  0040FC  101D               	iorwf	(___xxtofl@val+1)^0,w,c
 12981  0040FE  101E               	iorwf	(___xxtofl@val+2)^0,w,c
 12982  004100  101F               	iorwf	(___xxtofl@val+3)^0,w,c
 12983  004102  A4D8               	btfss	status,2,c
 12984  004104  EF86  F020         	goto	u10241
 12985  004108  EF88  F020         	goto	u10240
 12986  00410C                     u10241:
 12987  00410C  EF92  F020         	goto	l9130
 12988  004110                     u10240:
 12989  004110  0E00               	movlw	0
 12990  004112  6E1C               	movwf	?___xxtofl^0,c
 12991  004114  0E00               	movlw	0
 12992  004116  6E1D               	movwf	(?___xxtofl+1)^0,c
 12993  004118  0E00               	movlw	0
 12994  00411A  6E1E               	movwf	(?___xxtofl+2)^0,c
 12995  00411C  0E00               	movlw	0
 12996  00411E  6E1F               	movwf	(?___xxtofl+3)^0,c
 12997  004120  EF23  F021         	goto	l2068
 12998  004124                     l9130:
 12999  004124  0E96               	movlw	150
 13000  004126  6E25               	movwf	___xxtofl@exp^0,c
 13001  004128  EF9C  F020         	goto	l9134
 13002  00412C                     l9132:
 13003  00412C  2A25               	incf	___xxtofl@exp^0,f,c
 13004  00412E  90D8               	bcf	status,0,c
 13005  004130  3229               	rrcf	(___xxtofl@arg+3)^0,f,c
 13006  004132  3228               	rrcf	(___xxtofl@arg+2)^0,f,c
 13007  004134  3227               	rrcf	(___xxtofl@arg+1)^0,f,c
 13008  004136  3226               	rrcf	___xxtofl@arg^0,f,c
 13009  004138                     l9134:
 13010  004138  0E00               	movlw	0
 13011  00413A  1426               	andwf	___xxtofl@arg^0,w,c
 13012  00413C  6E20               	movwf	??___xxtofl^0,c
 13013  00413E  0E00               	movlw	0
 13014  004140  1427               	andwf	(___xxtofl@arg+1)^0,w,c
 13015  004142  6E21               	movwf	(??___xxtofl+1)^0,c
 13016  004144  0E00               	movlw	0
 13017  004146  1428               	andwf	(___xxtofl@arg+2)^0,w,c
 13018  004148  6E22               	movwf	(??___xxtofl+2)^0,c
 13019  00414A  0EFE               	movlw	254
 13020  00414C  1429               	andwf	(___xxtofl@arg+3)^0,w,c
 13021  00414E  6E23               	movwf	(??___xxtofl+3)^0,c
 13022  004150  5020               	movf	??___xxtofl^0,w,c
 13023  004152  1021               	iorwf	(??___xxtofl+1)^0,w,c
 13024  004154  1022               	iorwf	(??___xxtofl+2)^0,w,c
 13025  004156  1023               	iorwf	(??___xxtofl+3)^0,w,c
 13026  004158  A4D8               	btfss	status,2,c
 13027  00415A  EFB1  F020         	goto	u10251
 13028  00415E  EFB3  F020         	goto	u10250
 13029  004162                     u10251:
 13030  004162  EF96  F020         	goto	l9132
 13031  004166                     u10250:
 13032  004166  EFC1  F020         	goto	l2072
 13033  00416A                     l9136:
 13034  00416A  2A25               	incf	___xxtofl@exp^0,f,c
 13035  00416C  0E01               	movlw	1
 13036  00416E  2626               	addwf	___xxtofl@arg^0,f,c
 13037  004170  0E00               	movlw	0
 13038  004172  2227               	addwfc	(___xxtofl@arg+1)^0,f,c
 13039  004174  2228               	addwfc	(___xxtofl@arg+2)^0,f,c
 13040  004176  2229               	addwfc	(___xxtofl@arg+3)^0,f,c
 13041  004178  90D8               	bcf	status,0,c
 13042  00417A  3229               	rrcf	(___xxtofl@arg+3)^0,f,c
 13043  00417C  3228               	rrcf	(___xxtofl@arg+2)^0,f,c
 13044  00417E  3227               	rrcf	(___xxtofl@arg+1)^0,f,c
 13045  004180  3226               	rrcf	___xxtofl@arg^0,f,c
 13046  004182                     l2072:
 13047  004182  0E00               	movlw	0
 13048  004184  1426               	andwf	___xxtofl@arg^0,w,c
 13049  004186  6E20               	movwf	??___xxtofl^0,c
 13050  004188  0E00               	movlw	0
 13051  00418A  1427               	andwf	(___xxtofl@arg+1)^0,w,c
 13052  00418C  6E21               	movwf	(??___xxtofl+1)^0,c
 13053  00418E  0E00               	movlw	0
 13054  004190  1428               	andwf	(___xxtofl@arg+2)^0,w,c
 13055  004192  6E22               	movwf	(??___xxtofl+2)^0,c
 13056  004194  0EFF               	movlw	255
 13057  004196  1429               	andwf	(___xxtofl@arg+3)^0,w,c
 13058  004198  6E23               	movwf	(??___xxtofl+3)^0,c
 13059  00419A  5020               	movf	??___xxtofl^0,w,c
 13060  00419C  1021               	iorwf	(??___xxtofl+1)^0,w,c
 13061  00419E  1022               	iorwf	(??___xxtofl+2)^0,w,c
 13062  0041A0  1023               	iorwf	(??___xxtofl+3)^0,w,c
 13063  0041A2  A4D8               	btfss	status,2,c
 13064  0041A4  EFD6  F020         	goto	u10261
 13065  0041A8  EFD8  F020         	goto	u10260
 13066  0041AC                     u10261:
 13067  0041AC  EFB5  F020         	goto	l9136
 13068  0041B0                     u10260:
 13069  0041B0  EFE0  F020         	goto	l9144
 13070  0041B4                     l9142:
 13071  0041B4  0625               	decf	___xxtofl@exp^0,f,c
 13072  0041B6  90D8               	bcf	status,0,c
 13073  0041B8  3626               	rlcf	___xxtofl@arg^0,f,c
 13074  0041BA  3627               	rlcf	(___xxtofl@arg+1)^0,f,c
 13075  0041BC  3628               	rlcf	(___xxtofl@arg+2)^0,f,c
 13076  0041BE  3629               	rlcf	(___xxtofl@arg+3)^0,f,c
 13077  0041C0                     l9144:
 13078  0041C0  BE28               	btfsc	(___xxtofl@arg+2)^0,7,c
 13079  0041C2  EFE5  F020         	goto	u10271
 13080  0041C6  EFE7  F020         	goto	u10270
 13081  0041CA                     u10271:
 13082  0041CA  EFEF  F020         	goto	l2079
 13083  0041CE                     u10270:
 13084  0041CE  0E02               	movlw	2
 13085  0041D0  6025               	cpfslt	___xxtofl@exp^0,c
 13086  0041D2  EFED  F020         	goto	u10281
 13087  0041D6  EFEF  F020         	goto	u10280
 13088  0041DA                     u10281:
 13089  0041DA  EFDA  F020         	goto	l9142
 13090  0041DE                     u10280:
 13091  0041DE                     l2079:
 13092  0041DE  B025               	btfsc	___xxtofl@exp^0,0,c
 13093  0041E0  EFF4  F020         	goto	u10291
 13094  0041E4  EFF6  F020         	goto	u10290
 13095  0041E8                     u10291:
 13096  0041E8  EFF7  F020         	goto	l9150
 13097  0041EC                     u10290:
 13098  0041EC  9E28               	bcf	(___xxtofl@arg+2)^0,7,c
 13099  0041EE                     l9150:
 13100  0041EE  90D8               	bcf	status,0,c
 13101  0041F0  3225               	rrcf	___xxtofl@exp^0,f,c
 13102  0041F2  C025  F020         	movff	___xxtofl@exp,??___xxtofl
 13103  0041F6  6A21               	clrf	(??___xxtofl+1)^0,c
 13104  0041F8  6A22               	clrf	(??___xxtofl+2)^0,c
 13105  0041FA  6A23               	clrf	(??___xxtofl+3)^0,c
 13106  0041FC  C020  F023         	movff	??___xxtofl,??___xxtofl+3
 13107  004200  6A22               	clrf	(??___xxtofl+2)^0,c
 13108  004202  6A21               	clrf	(??___xxtofl+1)^0,c
 13109  004204  6A20               	clrf	??___xxtofl^0,c
 13110  004206  5020               	movf	??___xxtofl^0,w,c
 13111  004208  1226               	iorwf	___xxtofl@arg^0,f,c
 13112  00420A  5021               	movf	(??___xxtofl+1)^0,w,c
 13113  00420C  1227               	iorwf	(___xxtofl@arg+1)^0,f,c
 13114  00420E  5022               	movf	(??___xxtofl+2)^0,w,c
 13115  004210  1228               	iorwf	(___xxtofl@arg+2)^0,f,c
 13116  004212  5023               	movf	(??___xxtofl+3)^0,w,c
 13117  004214  1229               	iorwf	(___xxtofl@arg+3)^0,f,c
 13118  004216  5024               	movf	___xxtofl@sign^0,w,c
 13119  004218  B4D8               	btfsc	status,2,c
 13120  00421A  EF11  F021         	goto	u10301
 13121  00421E  EF13  F021         	goto	u10300
 13122  004222                     u10301:
 13123  004222  EF1B  F021         	goto	l9160
 13124  004226                     u10300:
 13125  004226  BE1F               	btfsc	(___xxtofl@val+3)^0,7,c
 13126  004228  EF1A  F021         	goto	u10310
 13127  00422C  EF18  F021         	goto	u10311
 13128  004230                     u10311:
 13129  004230  EF1B  F021         	goto	l9160
 13130  004234                     u10310:
 13131  004234  8E29               	bsf	(___xxtofl@arg+3)^0,7,c
 13132  004236                     l9160:
 13133  004236  C026  F01C         	movff	___xxtofl@arg,?___xxtofl
 13134  00423A  C027  F01D         	movff	___xxtofl@arg+1,?___xxtofl+1
 13135  00423E  C028  F01E         	movff	___xxtofl@arg+2,?___xxtofl+2
 13136  004242  C029  F01F         	movff	___xxtofl@arg+3,?___xxtofl+3
 13137  004246                     l2068:
 13138  004246  0012               	return		;funcret
 13139  004248                     __end_of___xxtofl:
 13140                           	callstack 0
 13141                           
 13142 ;; *************** function ___fltol *****************
 13143 ;; Defined at:
 13144 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
 13145 ;; Parameters:    Size  Location     Type
 13146 ;;  f1              4   25[BANK0 ] unsigned char 
 13147 ;; Auto vars:     Size  Location     Type
 13148 ;;  exp1            1   34[BANK0 ] unsigned char 
 13149 ;;  sign1           1   33[BANK0 ] unsigned char 
 13150 ;; Return value:  Size  Location     Type
 13151 ;;                  4   25[BANK0 ] long 
 13152 ;; Registers used:
 13153 ;;		wreg, status,2, status,0
 13154 ;; Tracked objects:
 13155 ;;		On entry : 0/0
 13156 ;;		On exit  : 0/0
 13157 ;;		Unchanged: 0/0
 13158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13159 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13160 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13161 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13162 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13163 ;;Total ram usage:       10 bytes
 13164 ;; Hardware stack levels used: 1
 13165 ;; Hardware stack levels required when called: 8
 13166 ;; This function calls:
 13167 ;;		Nothing
 13168 ;; This function is called by:
 13169 ;;		_calcSpeed
 13170 ;;		_calcMotorPow
 13171 ;;		_setSteering
 13172 ;;		_efgtoa
 13173 ;; This function uses a non-reentrant model
 13174 ;;
 13175                           
 13176                           	psect	text51
 13177  0049FA                     __ptext51:
 13178                           	callstack 0
 13179  0049FA                     ___fltol:
 13180                           	callstack 20
 13181  0049FA  0100               	movlb	0	; () banked
 13182  0049FC  357B               	rlcf	(___fltol@f1+2)& (0+255),w,b
 13183  0049FE  357C               	rlcf	(___fltol@f1+3)& (0+255),w,b
 13184  004A00  6F82               	movwf	___fltol@exp1& (0+255),b
 13185  004A02  5182               	movf	___fltol@exp1& (0+255),w,b
 13186  004A04  A4D8               	btfss	status,2,c
 13187  004A06  EF07  F025         	goto	u8861
 13188  004A0A  EF09  F025         	goto	u8860
 13189  004A0E                     u8861:
 13190  004A0E  EF13  F025         	goto	l8434
 13191  004A12                     u8860:
 13192  004A12                     l8430:
 13193                           
 13194                           ; BSR set to: 0
 13195  004A12  0E00               	movlw	0
 13196  004A14  6F79               	movwf	?___fltol& (0+255),b
 13197  004A16  0E00               	movlw	0
 13198  004A18  6F7A               	movwf	(?___fltol+1)& (0+255),b
 13199  004A1A  0E00               	movlw	0
 13200  004A1C  6F7B               	movwf	(?___fltol+2)& (0+255),b
 13201  004A1E  0E00               	movlw	0
 13202  004A20  6F7C               	movwf	(?___fltol+3)& (0+255),b
 13203  004A22  EF80  F025         	goto	l1707
 13204  004A26                     l8434:
 13205                           
 13206                           ; BSR set to: 0
 13207  004A26  C079  F07D         	movff	___fltol@f1,??___fltol
 13208  004A2A  C07A  F07E         	movff	___fltol@f1+1,??___fltol+1
 13209  004A2E  C07B  F07F         	movff	___fltol@f1+2,??___fltol+2
 13210  004A32  C07C  F080         	movff	___fltol@f1+3,??___fltol+3
 13211  004A36  0E20               	movlw	32
 13212  004A38  EF23  F025         	goto	u8870
 13213  004A3C                     u8875:
 13214  004A3C  90D8               	bcf	status,0,c
 13215  004A3E  3380               	rrcf	(??___fltol+3)& (0+255),f,b
 13216  004A40  337F               	rrcf	(??___fltol+2)& (0+255),f,b
 13217  004A42  337E               	rrcf	(??___fltol+1)& (0+255),f,b
 13218  004A44  337D               	rrcf	??___fltol& (0+255),f,b
 13219  004A46                     u8870:
 13220  004A46  2EE8               	decfsz	wreg,f,c
 13221  004A48  EF1E  F025         	goto	u8875
 13222  004A4C  517D               	movf	??___fltol& (0+255),w,b
 13223  004A4E  6F81               	movwf	___fltol@sign1& (0+255),b
 13224  004A50                     
 13225                           ; BSR set to: 0
 13226  004A50  8F7B               	bsf	(___fltol@f1+2)& (0+255),7,b
 13227  004A52                     
 13228                           ; BSR set to: 0
 13229  004A52  0EFF               	movlw	255
 13230  004A54  1779               	andwf	___fltol@f1& (0+255),f,b
 13231  004A56  0EFF               	movlw	255
 13232  004A58  177A               	andwf	(___fltol@f1+1)& (0+255),f,b
 13233  004A5A  0EFF               	movlw	255
 13234  004A5C  177B               	andwf	(___fltol@f1+2)& (0+255),f,b
 13235  004A5E  0E00               	movlw	0
 13236  004A60  177C               	andwf	(___fltol@f1+3)& (0+255),f,b
 13237  004A62                     
 13238                           ; BSR set to: 0
 13239  004A62  0E96               	movlw	150
 13240  004A64  5F82               	subwf	___fltol@exp1& (0+255),f,b
 13241  004A66                     
 13242                           ; BSR set to: 0
 13243  004A66  BF82               	btfsc	___fltol@exp1& (0+255),7,b
 13244  004A68  EF3A  F025         	goto	u8880
 13245  004A6C  EF38  F025         	goto	u8881
 13246  004A70                     u8881:
 13247  004A70  EF50  F025         	goto	l8454
 13248  004A74                     u8880:
 13249  004A74                     
 13250                           ; BSR set to: 0
 13251  004A74  5182               	movf	___fltol@exp1& (0+255),w,b
 13252  004A76  0A80               	xorlw	128
 13253  004A78  0F97               	addlw	151
 13254  004A7A  B0D8               	btfsc	status,0,c
 13255  004A7C  EF42  F025         	goto	u8891
 13256  004A80  EF44  F025         	goto	u8890
 13257  004A84                     u8891:
 13258  004A84  EF46  F025         	goto	l8450
 13259  004A88                     u8890:
 13260  004A88  EF09  F025         	goto	l8430
 13261  004A8C                     l8450:
 13262                           
 13263                           ; BSR set to: 0
 13264  004A8C  90D8               	bcf	status,0,c
 13265  004A8E  337C               	rrcf	(___fltol@f1+3)& (0+255),f,b
 13266  004A90  337B               	rrcf	(___fltol@f1+2)& (0+255),f,b
 13267  004A92  337A               	rrcf	(___fltol@f1+1)& (0+255),f,b
 13268  004A94  3379               	rrcf	___fltol@f1& (0+255),f,b
 13269  004A96                     
 13270                           ; BSR set to: 0
 13271  004A96  3F82               	incfsz	___fltol@exp1& (0+255),f,b
 13272  004A98  EF46  F025         	goto	l8450
 13273  004A9C  EF68  F025         	goto	l8464
 13274  004AA0                     l8454:
 13275                           
 13276                           ; BSR set to: 0
 13277  004AA0  0E1F               	movlw	31
 13278  004AA2  6582               	cpfsgt	___fltol@exp1& (0+255),b
 13279  004AA4  EF56  F025         	goto	u8901
 13280  004AA8  EF58  F025         	goto	u8900
 13281  004AAC                     u8901:
 13282  004AAC  EF60  F025         	goto	l8462
 13283  004AB0                     u8900:
 13284  004AB0  EF09  F025         	goto	l8430
 13285  004AB4                     l8460:
 13286                           
 13287                           ; BSR set to: 0
 13288  004AB4  90D8               	bcf	status,0,c
 13289  004AB6  3779               	rlcf	___fltol@f1& (0+255),f,b
 13290  004AB8  377A               	rlcf	(___fltol@f1+1)& (0+255),f,b
 13291  004ABA  377B               	rlcf	(___fltol@f1+2)& (0+255),f,b
 13292  004ABC  377C               	rlcf	(___fltol@f1+3)& (0+255),f,b
 13293  004ABE  0782               	decf	___fltol@exp1& (0+255),f,b
 13294  004AC0                     l8462:
 13295                           
 13296                           ; BSR set to: 0
 13297  004AC0  5182               	movf	___fltol@exp1& (0+255),w,b
 13298  004AC2  A4D8               	btfss	status,2,c
 13299  004AC4  EF66  F025         	goto	u8911
 13300  004AC8  EF68  F025         	goto	u8910
 13301  004ACC                     u8911:
 13302  004ACC  EF5A  F025         	goto	l8460
 13303  004AD0                     u8910:
 13304  004AD0                     l8464:
 13305                           
 13306                           ; BSR set to: 0
 13307  004AD0  5181               	movf	___fltol@sign1& (0+255),w,b
 13308  004AD2  B4D8               	btfsc	status,2,c
 13309  004AD4  EF6E  F025         	goto	u8921
 13310  004AD8  EF70  F025         	goto	u8920
 13311  004ADC                     u8921:
 13312  004ADC  EF78  F025         	goto	l8468
 13313  004AE0                     u8920:
 13314  004AE0                     
 13315                           ; BSR set to: 0
 13316  004AE0  1F7C               	comf	(___fltol@f1+3)& (0+255),f,b
 13317  004AE2  1F7B               	comf	(___fltol@f1+2)& (0+255),f,b
 13318  004AE4  1F7A               	comf	(___fltol@f1+1)& (0+255),f,b
 13319  004AE6  6D79               	negf	___fltol@f1& (0+255),b
 13320  004AE8  0E00               	movlw	0
 13321  004AEA  237A               	addwfc	(___fltol@f1+1)& (0+255),f,b
 13322  004AEC  237B               	addwfc	(___fltol@f1+2)& (0+255),f,b
 13323  004AEE  237C               	addwfc	(___fltol@f1+3)& (0+255),f,b
 13324  004AF0                     l8468:
 13325                           
 13326                           ; BSR set to: 0
 13327  004AF0  C079  F079         	movff	___fltol@f1,?___fltol
 13328  004AF4  C07A  F07A         	movff	___fltol@f1+1,?___fltol+1
 13329  004AF8  C07B  F07B         	movff	___fltol@f1+2,?___fltol+2
 13330  004AFC  C07C  F07C         	movff	___fltol@f1+3,?___fltol+3
 13331  004B00                     l1707:
 13332                           
 13333                           ; BSR set to: 0
 13334  004B00  0012               	return		;funcret
 13335  004B02                     __end_of___fltol:
 13336                           	callstack 0
 13337                           
 13338 ;; *************** function ___flmul *****************
 13339 ;; Defined at:
 13340 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
 13341 ;; Parameters:    Size  Location     Type
 13342 ;;  b               4   41[COMRAM] long 
 13343 ;;  a               4   45[COMRAM] long 
 13344 ;; Auto vars:     Size  Location     Type
 13345 ;;  prod            4    7[BANK0 ] struct .
 13346 ;;  grs             4    2[BANK0 ] unsigned long 
 13347 ;;  temp            2   11[BANK0 ] struct .
 13348 ;;  bexp            1    6[BANK0 ] unsigned char 
 13349 ;;  aexp            1    1[BANK0 ] unsigned char 
 13350 ;;  sign            1    0[BANK0 ] unsigned char 
 13351 ;; Return value:  Size  Location     Type
 13352 ;;                  4   41[COMRAM] unsigned char 
 13353 ;; Registers used:
 13354 ;;		wreg, status,2, status,0, prodl, prodh
 13355 ;; Tracked objects:
 13356 ;;		On entry : 0/0
 13357 ;;		On exit  : 0/0
 13358 ;;		Unchanged: 0/0
 13359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13360 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13361 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13362 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13363 ;;      Totals:        12      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13364 ;;Total ram usage:       25 bytes
 13365 ;; Hardware stack levels used: 1
 13366 ;; Hardware stack levels required when called: 8
 13367 ;; This function calls:
 13368 ;;		Nothing
 13369 ;; This function is called by:
 13370 ;;		_calcSpeed
 13371 ;;		_calcMotorPow
 13372 ;;		_efgtoa
 13373 ;; This function uses a non-reentrant model
 13374 ;;
 13375                           
 13376                           	psect	text52
 13377  002840                     __ptext52:
 13378                           	callstack 0
 13379  002840                     ___flmul:
 13380                           	callstack 16
 13381  002840  502D               	movf	(___flmul@b+3)^0,w,c
 13382  002842  0B80               	andlw	128
 13383  002844  0100               	movlb	0	; () banked
 13384  002846  6F60               	movwf	___flmul@sign& (0+255),b
 13385  002848  502D               	movf	(___flmul@b+3)^0,w,c
 13386  00284A  242D               	addwf	(___flmul@b+3)^0,w,c
 13387  00284C  6F66               	movwf	___flmul@bexp& (0+255),b
 13388  00284E                     
 13389                           ; BSR set to: 0
 13390  00284E  AE2C               	btfss	(___flmul@b+2)^0,7,c
 13391  002850  EF2C  F014         	goto	u8461
 13392  002854  EF2E  F014         	goto	u8460
 13393  002858                     u8461:
 13394  002858  EF2F  F014         	goto	l8172
 13395  00285C                     u8460:
 13396  00285C                     
 13397                           ; BSR set to: 0
 13398  00285C  8166               	bsf	___flmul@bexp& (0+255),0,b
 13399  00285E                     l8172:
 13400                           
 13401                           ; BSR set to: 0
 13402  00285E  5166               	movf	___flmul@bexp& (0+255),w,b
 13403  002860  B4D8               	btfsc	status,2,c
 13404  002862  EF35  F014         	goto	u8471
 13405  002866  EF37  F014         	goto	u8470
 13406  00286A                     u8471:
 13407  00286A  EF4A  F014         	goto	l8180
 13408  00286E                     u8470:
 13409  00286E                     
 13410                           ; BSR set to: 0
 13411  00286E  2966               	incf	___flmul@bexp& (0+255),w,b
 13412  002870  A4D8               	btfss	status,2,c
 13413  002872  EF3D  F014         	goto	u8481
 13414  002876  EF3F  F014         	goto	u8480
 13415  00287A                     u8481:
 13416  00287A  EF47  F014         	goto	l8178
 13417  00287E                     u8480:
 13418  00287E                     
 13419                           ; BSR set to: 0
 13420  00287E  0E00               	movlw	0
 13421  002880  6E2A               	movwf	___flmul@b^0,c
 13422  002882  0E00               	movlw	0
 13423  002884  6E2B               	movwf	(___flmul@b+1)^0,c
 13424  002886  0E00               	movlw	0
 13425  002888  6E2C               	movwf	(___flmul@b+2)^0,c
 13426  00288A  0E00               	movlw	0
 13427  00288C  6E2D               	movwf	(___flmul@b+3)^0,c
 13428  00288E                     l8178:
 13429                           
 13430                           ; BSR set to: 0
 13431  00288E  8E2C               	bsf	(___flmul@b+2)^0,7,c
 13432  002890  EF52  F014         	goto	l8182
 13433  002894                     l8180:
 13434                           
 13435                           ; BSR set to: 0
 13436  002894  0E00               	movlw	0
 13437  002896  6E2A               	movwf	___flmul@b^0,c
 13438  002898  0E00               	movlw	0
 13439  00289A  6E2B               	movwf	(___flmul@b+1)^0,c
 13440  00289C  0E00               	movlw	0
 13441  00289E  6E2C               	movwf	(___flmul@b+2)^0,c
 13442  0028A0  0E00               	movlw	0
 13443  0028A2  6E2D               	movwf	(___flmul@b+3)^0,c
 13444  0028A4                     l8182:
 13445                           
 13446                           ; BSR set to: 0
 13447  0028A4  5031               	movf	(___flmul@a+3)^0,w,c
 13448  0028A6  0B80               	andlw	128
 13449  0028A8  1B60               	xorwf	___flmul@sign& (0+255),f,b
 13450  0028AA                     
 13451                           ; BSR set to: 0
 13452  0028AA  5031               	movf	(___flmul@a+3)^0,w,c
 13453  0028AC  2431               	addwf	(___flmul@a+3)^0,w,c
 13454  0028AE  6F61               	movwf	___flmul@aexp& (0+255),b
 13455  0028B0                     
 13456                           ; BSR set to: 0
 13457  0028B0  AE30               	btfss	(___flmul@a+2)^0,7,c
 13458  0028B2  EF5D  F014         	goto	u8491
 13459  0028B6  EF5F  F014         	goto	u8490
 13460  0028BA                     u8491:
 13461  0028BA  EF60  F014         	goto	l8190
 13462  0028BE                     u8490:
 13463  0028BE                     
 13464                           ; BSR set to: 0
 13465  0028BE  8161               	bsf	___flmul@aexp& (0+255),0,b
 13466  0028C0                     l8190:
 13467                           
 13468                           ; BSR set to: 0
 13469  0028C0  5161               	movf	___flmul@aexp& (0+255),w,b
 13470  0028C2  B4D8               	btfsc	status,2,c
 13471  0028C4  EF66  F014         	goto	u8501
 13472  0028C8  EF68  F014         	goto	u8500
 13473  0028CC                     u8501:
 13474  0028CC  EF7B  F014         	goto	l8198
 13475  0028D0                     u8500:
 13476  0028D0                     
 13477                           ; BSR set to: 0
 13478  0028D0  2961               	incf	___flmul@aexp& (0+255),w,b
 13479  0028D2  A4D8               	btfss	status,2,c
 13480  0028D4  EF6E  F014         	goto	u8511
 13481  0028D8  EF70  F014         	goto	u8510
 13482  0028DC                     u8511:
 13483  0028DC  EF78  F014         	goto	l8196
 13484  0028E0                     u8510:
 13485  0028E0                     
 13486                           ; BSR set to: 0
 13487  0028E0  0E00               	movlw	0
 13488  0028E2  6E2E               	movwf	___flmul@a^0,c
 13489  0028E4  0E00               	movlw	0
 13490  0028E6  6E2F               	movwf	(___flmul@a+1)^0,c
 13491  0028E8  0E00               	movlw	0
 13492  0028EA  6E30               	movwf	(___flmul@a+2)^0,c
 13493  0028EC  0E00               	movlw	0
 13494  0028EE  6E31               	movwf	(___flmul@a+3)^0,c
 13495  0028F0                     l8196:
 13496                           
 13497                           ; BSR set to: 0
 13498  0028F0  8E30               	bsf	(___flmul@a+2)^0,7,c
 13499  0028F2  EF83  F014         	goto	l2024
 13500  0028F6                     l8198:
 13501                           
 13502                           ; BSR set to: 0
 13503  0028F6  0E00               	movlw	0
 13504  0028F8  6E2E               	movwf	___flmul@a^0,c
 13505  0028FA  0E00               	movlw	0
 13506  0028FC  6E2F               	movwf	(___flmul@a+1)^0,c
 13507  0028FE  0E00               	movlw	0
 13508  002900  6E30               	movwf	(___flmul@a+2)^0,c
 13509  002902  0E00               	movlw	0
 13510  002904  6E31               	movwf	(___flmul@a+3)^0,c
 13511  002906                     l2024:
 13512                           
 13513                           ; BSR set to: 0
 13514  002906  5161               	movf	___flmul@aexp& (0+255),w,b
 13515  002908  B4D8               	btfsc	status,2,c
 13516  00290A  EF89  F014         	goto	u8521
 13517  00290E  EF8B  F014         	goto	u8520
 13518  002912                     u8521:
 13519  002912  EF93  F014         	goto	l8202
 13520  002916                     u8520:
 13521  002916                     
 13522                           ; BSR set to: 0
 13523  002916  5166               	movf	___flmul@bexp& (0+255),w,b
 13524  002918  A4D8               	btfss	status,2,c
 13525  00291A  EF91  F014         	goto	u8531
 13526  00291E  EF93  F014         	goto	u8530
 13527  002922                     u8531:
 13528  002922  EF9D  F014         	goto	l8206
 13529  002926                     u8530:
 13530  002926                     l8202:
 13531                           
 13532                           ; BSR set to: 0
 13533  002926  0E00               	movlw	0
 13534  002928  6E2A               	movwf	?___flmul^0,c
 13535  00292A  0E00               	movlw	0
 13536  00292C  6E2B               	movwf	(?___flmul+1)^0,c
 13537  00292E  0E00               	movlw	0
 13538  002930  6E2C               	movwf	(?___flmul+2)^0,c
 13539  002932  0E00               	movlw	0
 13540  002934  6E2D               	movwf	(?___flmul+3)^0,c
 13541  002936  EF47  F016         	goto	l2028
 13542  00293A                     l8206:
 13543                           
 13544                           ; BSR set to: 0
 13545  00293A  5030               	movf	(___flmul@a+2)^0,w,c
 13546  00293C  022A               	mulwf	___flmul@b^0,c
 13547  00293E  006F FFCC  F06B    	movff	prodl,___flmul@temp
 13548  002944  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 13549  00294A                     
 13550                           ; BSR set to: 0
 13551  00294A  516B               	movf	___flmul@temp& (0+255),w,b
 13552  00294C  6F62               	movwf	___flmul@grs& (0+255),b
 13553  00294E  6B63               	clrf	(___flmul@grs+1)& (0+255),b
 13554  002950  6B64               	clrf	(___flmul@grs+2)& (0+255),b
 13555  002952  6B65               	clrf	(___flmul@grs+3)& (0+255),b
 13556  002954                     
 13557                           ; BSR set to: 0
 13558  002954  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 13559  002956  6F67               	movwf	___flmul@prod& (0+255),b
 13560  002958  6B68               	clrf	(___flmul@prod+1)& (0+255),b
 13561  00295A  6B69               	clrf	(___flmul@prod+2)& (0+255),b
 13562  00295C  6B6A               	clrf	(___flmul@prod+3)& (0+255),b
 13563  00295E  502F               	movf	(___flmul@a+1)^0,w,c
 13564  002960  022B               	mulwf	(___flmul@b+1)^0,c
 13565  002962  006F FFCC  F06B    	movff	prodl,___flmul@temp
 13566  002968  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 13567  00296E                     
 13568                           ; BSR set to: 0
 13569  00296E  516B               	movf	___flmul@temp& (0+255),w,b
 13570  002970  2762               	addwf	___flmul@grs& (0+255),f,b
 13571  002972  0E00               	movlw	0
 13572  002974  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 13573  002976  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 13574  002978  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 13575  00297A                     
 13576                           ; BSR set to: 0
 13577  00297A  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 13578  00297C  2767               	addwf	___flmul@prod& (0+255),f,b
 13579  00297E  0E00               	movlw	0
 13580  002980  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 13581  002982  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 13582  002984  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 13583  002986  502E               	movf	___flmul@a^0,w,c
 13584  002988  022C               	mulwf	(___flmul@b+2)^0,c
 13585  00298A  006F FFCC  F06B    	movff	prodl,___flmul@temp
 13586  002990  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 13587  002996                     
 13588                           ; BSR set to: 0
 13589  002996  516B               	movf	___flmul@temp& (0+255),w,b
 13590  002998  2762               	addwf	___flmul@grs& (0+255),f,b
 13591  00299A  0E00               	movlw	0
 13592  00299C  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 13593  00299E  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 13594  0029A0  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 13595  0029A2                     
 13596                           ; BSR set to: 0
 13597  0029A2  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 13598  0029A4  2767               	addwf	___flmul@prod& (0+255),f,b
 13599  0029A6  0E00               	movlw	0
 13600  0029A8  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 13601  0029AA  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 13602  0029AC  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 13603  0029AE                     
 13604                           ; BSR set to: 0
 13605  0029AE  C064  F065         	movff	___flmul@grs+2,___flmul@grs+3
 13606  0029B2  C063  F064         	movff	___flmul@grs+1,___flmul@grs+2
 13607  0029B6  C062  F063         	movff	___flmul@grs,___flmul@grs+1
 13608  0029BA  6B62               	clrf	___flmul@grs& (0+255),b
 13609  0029BC                     
 13610                           ; BSR set to: 0
 13611  0029BC  502E               	movf	___flmul@a^0,w,c
 13612  0029BE  022B               	mulwf	(___flmul@b+1)^0,c
 13613  0029C0  006F FFCC  F06B    	movff	prodl,___flmul@temp
 13614  0029C6  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 13615  0029CC                     
 13616                           ; BSR set to: 0
 13617  0029CC  516B               	movf	___flmul@temp& (0+255),w,b
 13618  0029CE  2762               	addwf	___flmul@grs& (0+255),f,b
 13619  0029D0  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 13620  0029D2  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 13621  0029D4  0E00               	movlw	0
 13622  0029D6  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 13623  0029D8  0E00               	movlw	0
 13624  0029DA  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 13625  0029DC                     
 13626                           ; BSR set to: 0
 13627  0029DC  502F               	movf	(___flmul@a+1)^0,w,c
 13628  0029DE  022A               	mulwf	___flmul@b^0,c
 13629  0029E0  006F FFCC  F06B    	movff	prodl,___flmul@temp
 13630  0029E6  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 13631  0029EC                     
 13632                           ; BSR set to: 0
 13633  0029EC  516B               	movf	___flmul@temp& (0+255),w,b
 13634  0029EE  2762               	addwf	___flmul@grs& (0+255),f,b
 13635  0029F0  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 13636  0029F2  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 13637  0029F4  0E00               	movlw	0
 13638  0029F6  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 13639  0029F8  0E00               	movlw	0
 13640  0029FA  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 13641  0029FC                     
 13642                           ; BSR set to: 0
 13643  0029FC  C064  F065         	movff	___flmul@grs+2,___flmul@grs+3
 13644  002A00  C063  F064         	movff	___flmul@grs+1,___flmul@grs+2
 13645  002A04  C062  F063         	movff	___flmul@grs,___flmul@grs+1
 13646  002A08  6B62               	clrf	___flmul@grs& (0+255),b
 13647  002A0A  502E               	movf	___flmul@a^0,w,c
 13648  002A0C  022A               	mulwf	___flmul@b^0,c
 13649  002A0E  006F FFCC  F06B    	movff	prodl,___flmul@temp
 13650  002A14  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 13651  002A1A                     
 13652                           ; BSR set to: 0
 13653  002A1A  516B               	movf	___flmul@temp& (0+255),w,b
 13654  002A1C  2762               	addwf	___flmul@grs& (0+255),f,b
 13655  002A1E  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 13656  002A20  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 13657  002A22  0E00               	movlw	0
 13658  002A24  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 13659  002A26  0E00               	movlw	0
 13660  002A28  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 13661  002A2A                     
 13662                           ; BSR set to: 0
 13663  002A2A  5030               	movf	(___flmul@a+2)^0,w,c
 13664  002A2C  022B               	mulwf	(___flmul@b+1)^0,c
 13665  002A2E  006F FFCC  F06B    	movff	prodl,___flmul@temp
 13666  002A34  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 13667  002A3A  516B               	movf	___flmul@temp& (0+255),w,b
 13668  002A3C  2767               	addwf	___flmul@prod& (0+255),f,b
 13669  002A3E  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 13670  002A40  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 13671  002A42  0E00               	movlw	0
 13672  002A44  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 13673  002A46  0E00               	movlw	0
 13674  002A48  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 13675  002A4A                     
 13676                           ; BSR set to: 0
 13677  002A4A  502F               	movf	(___flmul@a+1)^0,w,c
 13678  002A4C  022C               	mulwf	(___flmul@b+2)^0,c
 13679  002A4E  006F FFCC  F06B    	movff	prodl,___flmul@temp
 13680  002A54  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 13681  002A5A                     
 13682                           ; BSR set to: 0
 13683  002A5A  516B               	movf	___flmul@temp& (0+255),w,b
 13684  002A5C  2767               	addwf	___flmul@prod& (0+255),f,b
 13685  002A5E  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 13686  002A60  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 13687  002A62  0E00               	movlw	0
 13688  002A64  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 13689  002A66  0E00               	movlw	0
 13690  002A68  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 13691  002A6A  5030               	movf	(___flmul@a+2)^0,w,c
 13692  002A6C  022C               	mulwf	(___flmul@b+2)^0,c
 13693  002A6E  006F FFCC  F06B    	movff	prodl,___flmul@temp
 13694  002A74  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 13695  002A7A                     
 13696                           ; BSR set to: 0
 13697  002A7A  516B               	movf	___flmul@temp& (0+255),w,b
 13698  002A7C  6E32               	movwf	??___flmul^0,c
 13699  002A7E  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 13700  002A80  6E33               	movwf	(??___flmul+1)^0,c
 13701  002A82  6A34               	clrf	(??___flmul+2)^0,c
 13702  002A84  6A35               	clrf	(??___flmul+3)^0,c
 13703  002A86  C034  F035         	movff	??___flmul+2,??___flmul+3
 13704  002A8A  C033  F034         	movff	??___flmul+1,??___flmul+2
 13705  002A8E  C032  F033         	movff	??___flmul,??___flmul+1
 13706  002A92  6A32               	clrf	??___flmul^0,c
 13707  002A94  5032               	movf	??___flmul^0,w,c
 13708  002A96  2767               	addwf	___flmul@prod& (0+255),f,b
 13709  002A98  5033               	movf	(??___flmul+1)^0,w,c
 13710  002A9A  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 13711  002A9C  5034               	movf	(??___flmul+2)^0,w,c
 13712  002A9E  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 13713  002AA0  5035               	movf	(??___flmul+3)^0,w,c
 13714  002AA2  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 13715  002AA4                     
 13716                           ; BSR set to: 0
 13717  002AA4  C062  F032         	movff	___flmul@grs,??___flmul
 13718  002AA8  C063  F033         	movff	___flmul@grs+1,??___flmul+1
 13719  002AAC  C064  F034         	movff	___flmul@grs+2,??___flmul+2
 13720  002AB0  C065  F035         	movff	___flmul@grs+3,??___flmul+3
 13721  002AB4  0E19               	movlw	25
 13722  002AB6  EF62  F015         	goto	u8540
 13723  002ABA                     u8545:
 13724  002ABA  90D8               	bcf	status,0,c
 13725  002ABC  3235               	rrcf	(??___flmul+3)^0,f,c
 13726  002ABE  3234               	rrcf	(??___flmul+2)^0,f,c
 13727  002AC0  3233               	rrcf	(??___flmul+1)^0,f,c
 13728  002AC2  3232               	rrcf	??___flmul^0,f,c
 13729  002AC4                     u8540:
 13730  002AC4  2EE8               	decfsz	wreg,f,c
 13731  002AC6  EF5D  F015         	goto	u8545
 13732  002ACA  5032               	movf	??___flmul^0,w,c
 13733  002ACC  2767               	addwf	___flmul@prod& (0+255),f,b
 13734  002ACE  5033               	movf	(??___flmul+1)^0,w,c
 13735  002AD0  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 13736  002AD2  5034               	movf	(??___flmul+2)^0,w,c
 13737  002AD4  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 13738  002AD6  5035               	movf	(??___flmul+3)^0,w,c
 13739  002AD8  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 13740  002ADA                     
 13741                           ; BSR set to: 0
 13742  002ADA  C064  F065         	movff	___flmul@grs+2,___flmul@grs+3
 13743  002ADE  C063  F064         	movff	___flmul@grs+1,___flmul@grs+2
 13744  002AE2  C062  F063         	movff	___flmul@grs,___flmul@grs+1
 13745  002AE6  6B62               	clrf	___flmul@grs& (0+255),b
 13746  002AE8                     
 13747                           ; BSR set to: 0
 13748  002AE8  5161               	movf	___flmul@aexp& (0+255),w,b
 13749  002AEA  C066  F032         	movff	___flmul@bexp,??___flmul
 13750  002AEE  6A33               	clrf	(??___flmul+1)^0,c
 13751  002AF0  2632               	addwf	??___flmul^0,f,c
 13752  002AF2  0E00               	movlw	0
 13753  002AF4  2233               	addwfc	(??___flmul+1)^0,f,c
 13754  002AF6  0E82               	movlw	130
 13755  002AF8  2432               	addwf	??___flmul^0,w,c
 13756  002AFA  6F6B               	movwf	___flmul@temp& (0+255),b
 13757  002AFC  0EFF               	movlw	255
 13758  002AFE  2033               	addwfc	(??___flmul+1)^0,w,c
 13759  002B00  6F6C               	movwf	(___flmul@temp+1)& (0+255),b
 13760  002B02  EF98  F015         	goto	l8254
 13761  002B06                     l8248:
 13762                           
 13763                           ; BSR set to: 0
 13764  002B06  90D8               	bcf	status,0,c
 13765  002B08  3767               	rlcf	___flmul@prod& (0+255),f,b
 13766  002B0A  3768               	rlcf	(___flmul@prod+1)& (0+255),f,b
 13767  002B0C  3769               	rlcf	(___flmul@prod+2)& (0+255),f,b
 13768  002B0E  376A               	rlcf	(___flmul@prod+3)& (0+255),f,b
 13769  002B10                     
 13770                           ; BSR set to: 0
 13771  002B10  AF65               	btfss	(___flmul@grs+3)& (0+255),7,b
 13772  002B12  EF8D  F015         	goto	u8551
 13773  002B16  EF8F  F015         	goto	u8550
 13774  002B1A                     u8551:
 13775  002B1A  EF90  F015         	goto	l2031
 13776  002B1E                     u8550:
 13777  002B1E                     
 13778                           ; BSR set to: 0
 13779  002B1E  8167               	bsf	___flmul@prod& (0+255),0,b
 13780  002B20                     l2031:
 13781                           
 13782                           ; BSR set to: 0
 13783  002B20  90D8               	bcf	status,0,c
 13784  002B22  3762               	rlcf	___flmul@grs& (0+255),f,b
 13785  002B24  3763               	rlcf	(___flmul@grs+1)& (0+255),f,b
 13786  002B26  3764               	rlcf	(___flmul@grs+2)& (0+255),f,b
 13787  002B28  3765               	rlcf	(___flmul@grs+3)& (0+255),f,b
 13788  002B2A  076B               	decf	___flmul@temp& (0+255),f,b
 13789  002B2C  A0D8               	btfss	status,0,c
 13790  002B2E  076C               	decf	(___flmul@temp+1)& (0+255),f,b
 13791  002B30                     l8254:
 13792                           
 13793                           ; BSR set to: 0
 13794  002B30  AF69               	btfss	(___flmul@prod+2)& (0+255),7,b
 13795  002B32  EF9D  F015         	goto	u8561
 13796  002B36  EF9F  F015         	goto	u8560
 13797  002B3A                     u8561:
 13798  002B3A  EF83  F015         	goto	l8248
 13799  002B3E                     u8560:
 13800  002B3E                     
 13801                           ; BSR set to: 0
 13802  002B3E  0E00               	movlw	0
 13803  002B40  6F61               	movwf	___flmul@aexp& (0+255),b
 13804  002B42                     
 13805                           ; BSR set to: 0
 13806  002B42  AF65               	btfss	(___flmul@grs+3)& (0+255),7,b
 13807  002B44  EFA6  F015         	goto	u8571
 13808  002B48  EFA8  F015         	goto	u8570
 13809  002B4C                     u8571:
 13810  002B4C  EFCC  F015         	goto	l2033
 13811  002B50                     u8570:
 13812  002B50                     
 13813                           ; BSR set to: 0
 13814  002B50  0EFF               	movlw	255
 13815  002B52  1562               	andwf	___flmul@grs& (0+255),w,b
 13816  002B54  6E32               	movwf	??___flmul^0,c
 13817  002B56  0EFF               	movlw	255
 13818  002B58  1563               	andwf	(___flmul@grs+1)& (0+255),w,b
 13819  002B5A  6E33               	movwf	(??___flmul+1)^0,c
 13820  002B5C  0EFF               	movlw	255
 13821  002B5E  1564               	andwf	(___flmul@grs+2)& (0+255),w,b
 13822  002B60  6E34               	movwf	(??___flmul+2)^0,c
 13823  002B62  0E7F               	movlw	127
 13824  002B64  1565               	andwf	(___flmul@grs+3)& (0+255),w,b
 13825  002B66  6E35               	movwf	(??___flmul+3)^0,c
 13826  002B68  5032               	movf	??___flmul^0,w,c
 13827  002B6A  1033               	iorwf	(??___flmul+1)^0,w,c
 13828  002B6C  1034               	iorwf	(??___flmul+2)^0,w,c
 13829  002B6E  1035               	iorwf	(??___flmul+3)^0,w,c
 13830  002B70  B4D8               	btfsc	status,2,c
 13831  002B72  EFBD  F015         	goto	u8581
 13832  002B76  EFBF  F015         	goto	u8580
 13833  002B7A                     u8581:
 13834  002B7A  EFC3  F015         	goto	l2034
 13835  002B7E                     u8580:
 13836  002B7E                     l8262:
 13837                           
 13838                           ; BSR set to: 0
 13839  002B7E  0E01               	movlw	1
 13840  002B80  6F61               	movwf	___flmul@aexp& (0+255),b
 13841  002B82  EFCC  F015         	goto	l2033
 13842  002B86                     l2034:
 13843                           
 13844                           ; BSR set to: 0
 13845  002B86  A167               	btfss	___flmul@prod& (0+255),0,b
 13846  002B88  EFC8  F015         	goto	u8591
 13847  002B8C  EFCA  F015         	goto	u8590
 13848  002B90                     u8591:
 13849  002B90  EFCC  F015         	goto	l2033
 13850  002B94                     u8590:
 13851  002B94  EFBF  F015         	goto	l8262
 13852  002B98                     l2033:
 13853                           
 13854                           ; BSR set to: 0
 13855  002B98  5161               	movf	___flmul@aexp& (0+255),w,b
 13856  002B9A  B4D8               	btfsc	status,2,c
 13857  002B9C  EFD2  F015         	goto	u8601
 13858  002BA0  EFD4  F015         	goto	u8600
 13859  002BA4                     u8601:
 13860  002BA4  EFF8  F015         	goto	l8274
 13861  002BA8                     u8600:
 13862  002BA8                     
 13863                           ; BSR set to: 0
 13864  002BA8  0E01               	movlw	1
 13865  002BAA  2767               	addwf	___flmul@prod& (0+255),f,b
 13866  002BAC  0E00               	movlw	0
 13867  002BAE  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 13868  002BB0  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 13869  002BB2  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 13870  002BB4                     
 13871                           ; BSR set to: 0
 13872  002BB4  A16A               	btfss	(___flmul@prod+3)& (0+255),0,b
 13873  002BB6  EFDF  F015         	goto	u8611
 13874  002BBA  EFE1  F015         	goto	u8610
 13875  002BBE                     u8611:
 13876  002BBE  EFF8  F015         	goto	l8274
 13877  002BC2                     u8610:
 13878  002BC2                     
 13879                           ; BSR set to: 0
 13880  002BC2  C067  F032         	movff	___flmul@prod,??___flmul
 13881  002BC6  C068  F033         	movff	___flmul@prod+1,??___flmul+1
 13882  002BCA  C069  F034         	movff	___flmul@prod+2,??___flmul+2
 13883  002BCE  C06A  F035         	movff	___flmul@prod+3,??___flmul+3
 13884  002BD2  3435               	rlcf	(??___flmul+3)^0,w,c
 13885  002BD4  3235               	rrcf	(??___flmul+3)^0,f,c
 13886  002BD6  3234               	rrcf	(??___flmul+2)^0,f,c
 13887  002BD8  3233               	rrcf	(??___flmul+1)^0,f,c
 13888  002BDA  3232               	rrcf	??___flmul^0,f,c
 13889  002BDC  C032  F067         	movff	??___flmul,___flmul@prod
 13890  002BE0  C033  F068         	movff	??___flmul+1,___flmul@prod+1
 13891  002BE4  C034  F069         	movff	??___flmul+2,___flmul@prod+2
 13892  002BE8  C035  F06A         	movff	??___flmul+3,___flmul@prod+3
 13893  002BEC                     
 13894                           ; BSR set to: 0
 13895  002BEC  4B6B               	infsnz	___flmul@temp& (0+255),f,b
 13896  002BEE  2B6C               	incf	(___flmul@temp+1)& (0+255),f,b
 13897  002BF0                     l8274:
 13898                           
 13899                           ; BSR set to: 0
 13900  002BF0  BF6C               	btfsc	(___flmul@temp+1)& (0+255),7,b
 13901  002BF2  EF03  F016         	goto	u8621
 13902  002BF6  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 13903  002BF8  E108               	bnz	u8620
 13904  002BFA  296B               	incf	___flmul@temp& (0+255),w,b
 13905  002BFC  A0D8               	btfss	status,0,c
 13906  002BFE  EF03  F016         	goto	u8621
 13907  002C02  EF05  F016         	goto	u8620
 13908  002C06                     u8621:
 13909  002C06  EF0F  F016         	goto	l8278
 13910  002C0A                     u8620:
 13911  002C0A                     
 13912                           ; BSR set to: 0
 13913  002C0A  0E00               	movlw	0
 13914  002C0C  6F67               	movwf	___flmul@prod& (0+255),b
 13915  002C0E  0E00               	movlw	0
 13916  002C10  6F68               	movwf	(___flmul@prod+1)& (0+255),b
 13917  002C12  0E80               	movlw	128
 13918  002C14  6F69               	movwf	(___flmul@prod+2)& (0+255),b
 13919  002C16  0E7F               	movlw	127
 13920  002C18  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
 13921  002C1A  EF3D  F016         	goto	l8290
 13922  002C1E                     l8278:
 13923                           
 13924                           ; BSR set to: 0
 13925  002C1E  BF6C               	btfsc	(___flmul@temp+1)& (0+255),7,b
 13926  002C20  EF1C  F016         	goto	u8630
 13927  002C24  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 13928  002C26  E106               	bnz	u8631
 13929  002C28  056B               	decf	___flmul@temp& (0+255),w,b
 13930  002C2A  B0D8               	btfsc	status,0,c
 13931  002C2C  EF1A  F016         	goto	u8631
 13932  002C30  EF1C  F016         	goto	u8630
 13933  002C34                     u8631:
 13934  002C34  EF28  F016         	goto	l2041
 13935  002C38                     u8630:
 13936  002C38                     
 13937                           ; BSR set to: 0
 13938  002C38  0E00               	movlw	0
 13939  002C3A  6F67               	movwf	___flmul@prod& (0+255),b
 13940  002C3C  0E00               	movlw	0
 13941  002C3E  6F68               	movwf	(___flmul@prod+1)& (0+255),b
 13942  002C40  0E00               	movlw	0
 13943  002C42  6F69               	movwf	(___flmul@prod+2)& (0+255),b
 13944  002C44  0E00               	movlw	0
 13945  002C46  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
 13946  002C48  0E00               	movlw	0
 13947  002C4A  6F60               	movwf	___flmul@sign& (0+255),b
 13948  002C4C  EF3D  F016         	goto	l8290
 13949  002C50                     l2041:
 13950                           
 13951                           ; BSR set to: 0
 13952  002C50  C06B  F066         	movff	___flmul@temp,___flmul@bexp
 13953  002C54                     
 13954                           ; BSR set to: 0
 13955  002C54  0EFF               	movlw	255
 13956  002C56  1767               	andwf	___flmul@prod& (0+255),f,b
 13957  002C58  0EFF               	movlw	255
 13958  002C5A  1768               	andwf	(___flmul@prod+1)& (0+255),f,b
 13959  002C5C  0E7F               	movlw	127
 13960  002C5E  1769               	andwf	(___flmul@prod+2)& (0+255),f,b
 13961  002C60  0E00               	movlw	0
 13962  002C62  176A               	andwf	(___flmul@prod+3)& (0+255),f,b
 13963  002C64                     
 13964                           ; BSR set to: 0
 13965  002C64  A166               	btfss	___flmul@bexp& (0+255),0,b
 13966  002C66  EF37  F016         	goto	u8641
 13967  002C6A  EF39  F016         	goto	u8640
 13968  002C6E                     u8641:
 13969  002C6E  EF3A  F016         	goto	l8288
 13970  002C72                     u8640:
 13971  002C72                     
 13972                           ; BSR set to: 0
 13973  002C72  8F69               	bsf	(___flmul@prod+2)& (0+255),7,b
 13974  002C74                     l8288:
 13975                           
 13976                           ; BSR set to: 0
 13977  002C74  90D8               	bcf	status,0,c
 13978  002C76  3166               	rrcf	___flmul@bexp& (0+255),w,b
 13979  002C78  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
 13980  002C7A                     l8290:
 13981                           
 13982                           ; BSR set to: 0
 13983  002C7A  5160               	movf	___flmul@sign& (0+255),w,b
 13984  002C7C  136A               	iorwf	(___flmul@prod+3)& (0+255),f,b
 13985  002C7E                     
 13986                           ; BSR set to: 0
 13987  002C7E  C067  F02A         	movff	___flmul@prod,?___flmul
 13988  002C82  C068  F02B         	movff	___flmul@prod+1,?___flmul+1
 13989  002C86  C069  F02C         	movff	___flmul@prod+2,?___flmul+2
 13990  002C8A  C06A  F02D         	movff	___flmul@prod+3,?___flmul+3
 13991  002C8E                     l2028:
 13992                           
 13993                           ; BSR set to: 0
 13994  002C8E  0012               	return		;funcret
 13995  002C90                     __end_of___flmul:
 13996                           	callstack 0
 13997                           
 13998 ;; *************** function ___awdiv *****************
 13999 ;; Defined at:
 14000 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
 14001 ;; Parameters:    Size  Location     Type
 14002 ;;  dividend        2   19[COMRAM] int 
 14003 ;;  divisor         2   21[COMRAM] int 
 14004 ;; Auto vars:     Size  Location     Type
 14005 ;;  quotient        2   25[COMRAM] int 
 14006 ;;  sign            1   24[COMRAM] unsigned char 
 14007 ;;  counter         1   23[COMRAM] unsigned char 
 14008 ;; Return value:  Size  Location     Type
 14009 ;;                  2   19[COMRAM] int 
 14010 ;; Registers used:
 14011 ;;		wreg, status,2, status,0
 14012 ;; Tracked objects:
 14013 ;;		On entry : 0/0
 14014 ;;		On exit  : 0/0
 14015 ;;		Unchanged: 0/0
 14016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14017 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14018 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14020 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14021 ;;Total ram usage:        8 bytes
 14022 ;; Hardware stack levels used: 1
 14023 ;; Hardware stack levels required when called: 8
 14024 ;; This function calls:
 14025 ;;		Nothing
 14026 ;; This function is called by:
 14027 ;;		_calcMotorPow
 14028 ;;		_efgtoa
 14029 ;; This function uses a non-reentrant model
 14030 ;;
 14031                           
 14032                           	psect	text53
 14033  005232                     __ptext53:
 14034                           	callstack 0
 14035  005232                     ___awdiv:
 14036                           	callstack 16
 14037  005232  0E00               	movlw	0
 14038  005234  6E19               	movwf	___awdiv@sign^0,c
 14039  005236  BE17               	btfsc	(___awdiv@divisor+1)^0,7,c
 14040  005238  EF22  F029         	goto	u8650
 14041  00523C  EF20  F029         	goto	u8651
 14042  005240                     u8651:
 14043  005240  EF28  F029         	goto	l8310
 14044  005244                     u8650:
 14045  005244  6C16               	negf	___awdiv@divisor^0,c
 14046  005246  1E17               	comf	(___awdiv@divisor+1)^0,f,c
 14047  005248  B0D8               	btfsc	status,0,c
 14048  00524A  2A17               	incf	(___awdiv@divisor+1)^0,f,c
 14049  00524C  0E01               	movlw	1
 14050  00524E  6E19               	movwf	___awdiv@sign^0,c
 14051  005250                     l8310:
 14052  005250  BE15               	btfsc	(___awdiv@dividend+1)^0,7,c
 14053  005252  EF2F  F029         	goto	u8660
 14054  005256  EF2D  F029         	goto	u8661
 14055  00525A                     u8661:
 14056  00525A  EF35  F029         	goto	l8316
 14057  00525E                     u8660:
 14058  00525E  6C14               	negf	___awdiv@dividend^0,c
 14059  005260  1E15               	comf	(___awdiv@dividend+1)^0,f,c
 14060  005262  B0D8               	btfsc	status,0,c
 14061  005264  2A15               	incf	(___awdiv@dividend+1)^0,f,c
 14062  005266  0E01               	movlw	1
 14063  005268  1A19               	xorwf	___awdiv@sign^0,f,c
 14064  00526A                     l8316:
 14065  00526A  0E00               	movlw	0
 14066  00526C  6E1B               	movwf	(___awdiv@quotient+1)^0,c
 14067  00526E  0E00               	movlw	0
 14068  005270  6E1A               	movwf	___awdiv@quotient^0,c
 14069  005272  5016               	movf	___awdiv@divisor^0,w,c
 14070  005274  1017               	iorwf	(___awdiv@divisor+1)^0,w,c
 14071  005276  B4D8               	btfsc	status,2,c
 14072  005278  EF40  F029         	goto	u8671
 14073  00527C  EF42  F029         	goto	u8670
 14074  005280                     u8671:
 14075  005280  EF6A  F029         	goto	l8338
 14076  005284                     u8670:
 14077  005284  0E01               	movlw	1
 14078  005286  6E18               	movwf	___awdiv@counter^0,c
 14079  005288  EF4A  F029         	goto	l8324
 14080  00528C                     l8322:
 14081  00528C  90D8               	bcf	status,0,c
 14082  00528E  3616               	rlcf	___awdiv@divisor^0,f,c
 14083  005290  3617               	rlcf	(___awdiv@divisor+1)^0,f,c
 14084  005292  2A18               	incf	___awdiv@counter^0,f,c
 14085  005294                     l8324:
 14086  005294  AE17               	btfss	(___awdiv@divisor+1)^0,7,c
 14087  005296  EF4F  F029         	goto	u8681
 14088  00529A  EF51  F029         	goto	u8680
 14089  00529E                     u8681:
 14090  00529E  EF46  F029         	goto	l8322
 14091  0052A2                     u8680:
 14092  0052A2                     l8326:
 14093  0052A2  90D8               	bcf	status,0,c
 14094  0052A4  361A               	rlcf	___awdiv@quotient^0,f,c
 14095  0052A6  361B               	rlcf	(___awdiv@quotient+1)^0,f,c
 14096  0052A8  5016               	movf	___awdiv@divisor^0,w,c
 14097  0052AA  5C14               	subwf	___awdiv@dividend^0,w,c
 14098  0052AC  5017               	movf	(___awdiv@divisor+1)^0,w,c
 14099  0052AE  5815               	subwfb	(___awdiv@dividend+1)^0,w,c
 14100  0052B0  A0D8               	btfss	status,0,c
 14101  0052B2  EF5D  F029         	goto	u8691
 14102  0052B6  EF5F  F029         	goto	u8690
 14103  0052BA                     u8691:
 14104  0052BA  EF64  F029         	goto	l8334
 14105  0052BE                     u8690:
 14106  0052BE  5016               	movf	___awdiv@divisor^0,w,c
 14107  0052C0  5E14               	subwf	___awdiv@dividend^0,f,c
 14108  0052C2  5017               	movf	(___awdiv@divisor+1)^0,w,c
 14109  0052C4  5A15               	subwfb	(___awdiv@dividend+1)^0,f,c
 14110  0052C6  801A               	bsf	___awdiv@quotient^0,0,c
 14111  0052C8                     l8334:
 14112  0052C8  90D8               	bcf	status,0,c
 14113  0052CA  3217               	rrcf	(___awdiv@divisor+1)^0,f,c
 14114  0052CC  3216               	rrcf	___awdiv@divisor^0,f,c
 14115  0052CE  2E18               	decfsz	___awdiv@counter^0,f,c
 14116  0052D0  EF51  F029         	goto	l8326
 14117  0052D4                     l8338:
 14118  0052D4  5019               	movf	___awdiv@sign^0,w,c
 14119  0052D6  B4D8               	btfsc	status,2,c
 14120  0052D8  EF70  F029         	goto	u8701
 14121  0052DC  EF72  F029         	goto	u8700
 14122  0052E0                     u8701:
 14123  0052E0  EF76  F029         	goto	l8342
 14124  0052E4                     u8700:
 14125  0052E4  6C1A               	negf	___awdiv@quotient^0,c
 14126  0052E6  1E1B               	comf	(___awdiv@quotient+1)^0,f,c
 14127  0052E8  B0D8               	btfsc	status,0,c
 14128  0052EA  2A1B               	incf	(___awdiv@quotient+1)^0,f,c
 14129  0052EC                     l8342:
 14130  0052EC  C01A  F014         	movff	___awdiv@quotient,?___awdiv
 14131  0052F0  C01B  F015         	movff	___awdiv@quotient+1,?___awdiv+1
 14132  0052F4  0012               	return		;funcret
 14133  0052F6                     __end_of___awdiv:
 14134                           	callstack 0
 14135                           
 14136 ;; *************** function _SYSTEM_Initialize *****************
 14137 ;; Defined at:
 14138 ;;		line 50 in file "mcc_generated_files/mcc.c"
 14139 ;; Parameters:    Size  Location     Type
 14140 ;;		None
 14141 ;; Auto vars:     Size  Location     Type
 14142 ;;		None
 14143 ;; Return value:  Size  Location     Type
 14144 ;;                  1    wreg      void 
 14145 ;; Registers used:
 14146 ;;		wreg, status,2, status,0, cstack
 14147 ;; Tracked objects:
 14148 ;;		On entry : 0/0
 14149 ;;		On exit  : 0/0
 14150 ;;		Unchanged: 0/0
 14151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14155 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14156 ;;Total ram usage:        0 bytes
 14157 ;; Hardware stack levels used: 1
 14158 ;; Hardware stack levels required when called: 10
 14159 ;; This function calls:
 14160 ;;		_ADCC_Initialize
 14161 ;;		_CCP3_Initialize
 14162 ;;		_CCP4_Initialize
 14163 ;;		_CLC3_Initialize
 14164 ;;		_INTERRUPT_Initialize
 14165 ;;		_OSCILLATOR_Initialize
 14166 ;;		_PIN_MANAGER_Initialize
 14167 ;;		_PMD_Initialize
 14168 ;;		_PWM5_Initialize
 14169 ;;		_PWM6_Initialize
 14170 ;;		_PWM7_Initialize
 14171 ;;		_PWM8_Initialize
 14172 ;;		_SMT1_Initialize
 14173 ;;		_TMR2_Initialize
 14174 ;;		_TMR3_Initialize
 14175 ;;		_TMR4_Initialize
 14176 ;;		_TMR5_Initialize
 14177 ;;		_UART1_Initialize
 14178 ;; This function is called by:
 14179 ;;		_main
 14180 ;; This function uses a non-reentrant model
 14181 ;;
 14182                           
 14183                           	psect	text54
 14184  005B40                     __ptext54:
 14185                           	callstack 0
 14186  005B40                     _SYSTEM_Initialize:
 14187                           	callstack 20
 14188  005B40                     
 14189                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 14190  005B40  EC7A  F02D         	call	_INTERRUPT_Initialize	;wreg free
 14191                           
 14192                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 14193  005B44  EC64  F031         	call	_PMD_Initialize	;wreg free
 14194                           
 14195                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 14196  005B48  ECB4  F028         	call	_PIN_MANAGER_Initialize	;wreg free
 14197                           
 14198                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 14199  005B4C  ECE5  F031         	call	_OSCILLATOR_Initialize	;wreg free
 14200  005B50                     
 14201                           ;mcc_generated_files/mcc.c: 56:     CCP3_Initialize();
 14202  005B50  ECB4  F030         	call	_CCP3_Initialize	;wreg free
 14203  005B54                     
 14204                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 14205  005B54  EC22  F02D         	call	_ADCC_Initialize	;wreg free
 14206                           
 14207                           ;mcc_generated_files/mcc.c: 58:     TMR4_Initialize();
 14208  005B58  ECE2  F030         	call	_TMR4_Initialize	;wreg free
 14209  005B5C                     
 14210                           ;mcc_generated_files/mcc.c: 59:     SMT1_Initialize();
 14211  005B5C  EC85  F030         	call	_SMT1_Initialize	;wreg free
 14212  005B60                     
 14213                           ;mcc_generated_files/mcc.c: 60:     PWM8_Initialize();
 14214  005B60  ECB5  F031         	call	_PWM8_Initialize	;wreg free
 14215  005B64                     
 14216                           ;mcc_generated_files/mcc.c: 61:     TMR2_Initialize();
 14217  005B64  ECA7  F031         	call	_TMR2_Initialize	;wreg free
 14218  005B68                     
 14219                           ;mcc_generated_files/mcc.c: 62:     PWM6_Initialize();
 14220  005B68  ECCD  F031         	call	_PWM6_Initialize	;wreg free
 14221                           
 14222                           ;mcc_generated_files/mcc.c: 63:     CCP4_Initialize();
 14223  005B6C  EC9D  F030         	call	_CCP4_Initialize	;wreg free
 14224  005B70                     
 14225                           ;mcc_generated_files/mcc.c: 64:     CLC3_Initialize();
 14226  005B70  ECF8  F030         	call	_CLC3_Initialize	;wreg free
 14227  005B74                     
 14228                           ;mcc_generated_files/mcc.c: 65:     TMR3_Initialize();
 14229  005B74  EC49  F02F         	call	_TMR3_Initialize	;wreg free
 14230                           
 14231                           ;mcc_generated_files/mcc.c: 66:     PWM5_Initialize();
 14232  005B78  ECD9  F031         	call	_PWM5_Initialize	;wreg free
 14233  005B7C                     
 14234                           ;mcc_generated_files/mcc.c: 67:     TMR5_Initialize();
 14235  005B7C  ECC5  F02D         	call	_TMR5_Initialize	;wreg free
 14236  005B80                     
 14237                           ;mcc_generated_files/mcc.c: 68:     PWM7_Initialize();
 14238  005B80  ECC1  F031         	call	_PWM7_Initialize	;wreg free
 14239                           
 14240                           ;mcc_generated_files/mcc.c: 69:     UART1_Initialize();
 14241  005B84  ECE9  F02A         	call	_UART1_Initialize	;wreg free
 14242  005B88  0012               	return		;funcret
 14243  005B8A                     __end_of_SYSTEM_Initialize:
 14244                           	callstack 0
 14245                           
 14246 ;; *************** function _UART1_Initialize *****************
 14247 ;; Defined at:
 14248 ;;		line 87 in file "mcc_generated_files/uart1.c"
 14249 ;; Parameters:    Size  Location     Type
 14250 ;;		None
 14251 ;; Auto vars:     Size  Location     Type
 14252 ;;		None
 14253 ;; Return value:  Size  Location     Type
 14254 ;;                  1    wreg      void 
 14255 ;; Registers used:
 14256 ;;		wreg, status,2, status,0, cstack
 14257 ;; Tracked objects:
 14258 ;;		On entry : 0/0
 14259 ;;		On exit  : 0/0
 14260 ;;		Unchanged: 0/0
 14261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14265 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14266 ;;Total ram usage:        0 bytes
 14267 ;; Hardware stack levels used: 1
 14268 ;; Hardware stack levels required when called: 9
 14269 ;; This function calls:
 14270 ;;		_UART1_SetErrorHandler
 14271 ;;		_UART1_SetFramingErrorHandler
 14272 ;;		_UART1_SetOverrunErrorHandler
 14273 ;;		_UART1_SetRxInterruptHandler
 14274 ;;		_UART1_SetTxInterruptHandler
 14275 ;; This function is called by:
 14276 ;;		_SYSTEM_Initialize
 14277 ;; This function uses a non-reentrant model
 14278 ;;
 14279                           
 14280                           	psect	text55
 14281  0055D2                     __ptext55:
 14282                           	callstack 0
 14283  0055D2                     _UART1_Initialize:
 14284                           	callstack 20
 14285  0055D2                     
 14286                           ;mcc_generated_files/uart1.c: 90:     PIE3bits.U1RXIE = 0;
 14287  0055D2  0139               	movlb	57	; () banked
 14288  0055D4  9793               	bcf	147,3,b	;volatile
 14289  0055D6                     
 14290                           ; BSR set to: 57
 14291                           ;mcc_generated_files/uart1.c: 91:     UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 14292  0055D6  0EB8               	movlw	low _UART1_Receive_ISR
 14293  0055D8  6E14               	movwf	UART1_SetRxInterruptHandler@InterruptHandler^0,c
 14294  0055DA  0E53               	movlw	high _UART1_Receive_ISR
 14295  0055DC  6E15               	movwf	(UART1_SetRxInterruptHandler@InterruptHandler+1)^0,c
 14296  0055DE  EC0A  F032         	call	_UART1_SetRxInterruptHandler	;wreg free
 14297  0055E2                     
 14298                           ;mcc_generated_files/uart1.c: 92:     PIE3bits.U1TXIE = 0;
 14299  0055E2  0139               	movlb	57	; () banked
 14300  0055E4  9993               	bcf	147,4,b	;volatile
 14301                           
 14302                           ;mcc_generated_files/uart1.c: 93:     UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 14303  0055E6  0E66               	movlw	low _UART1_Transmit_ISR
 14304  0055E8  6E14               	movwf	UART1_SetTxInterruptHandler@InterruptHandler^0,c
 14305  0055EA  0E5C               	movlw	high _UART1_Transmit_ISR
 14306  0055EC  6E15               	movwf	(UART1_SetTxInterruptHandler@InterruptHandler+1)^0,c
 14307  0055EE  EC05  F032         	call	_UART1_SetTxInterruptHandler	;wreg free
 14308  0055F2                     
 14309                           ;mcc_generated_files/uart1.c: 98:     U1P1L = 0x00;
 14310  0055F2  0E00               	movlw	0
 14311  0055F4  013D               	movlb	61	; () banked
 14312  0055F6  6FEC               	movwf	236,b	;volatile
 14313  0055F8                     
 14314                           ; BSR set to: 61
 14315                           ;mcc_generated_files/uart1.c: 101:     U1P1H = 0x00;
 14316  0055F8  0E00               	movlw	0
 14317  0055FA  6FED               	movwf	237,b	;volatile
 14318  0055FC                     
 14319                           ; BSR set to: 61
 14320                           ;mcc_generated_files/uart1.c: 104:     U1P2L = 0x00;
 14321  0055FC  0E00               	movlw	0
 14322  0055FE  6FEE               	movwf	238,b	;volatile
 14323  005600                     
 14324                           ; BSR set to: 61
 14325                           ;mcc_generated_files/uart1.c: 107:     U1P2H = 0x00;
 14326  005600  0E00               	movlw	0
 14327  005602  6FEF               	movwf	239,b	;volatile
 14328  005604                     
 14329                           ; BSR set to: 61
 14330                           ;mcc_generated_files/uart1.c: 110:     U1P3L = 0x00;
 14331  005604  0E00               	movlw	0
 14332  005606  6FF0               	movwf	240,b	;volatile
 14333  005608                     
 14334                           ; BSR set to: 61
 14335                           ;mcc_generated_files/uart1.c: 113:     U1P3H = 0x00;
 14336  005608  0E00               	movlw	0
 14337  00560A  6FF1               	movwf	241,b	;volatile
 14338  00560C                     
 14339                           ; BSR set to: 61
 14340                           ;mcc_generated_files/uart1.c: 116:     U1CON0 = 0xB0;
 14341  00560C  0EB0               	movlw	176
 14342  00560E  6FF2               	movwf	242,b	;volatile
 14343  005610                     
 14344                           ; BSR set to: 61
 14345                           ;mcc_generated_files/uart1.c: 119:     U1CON1 = 0x80;
 14346  005610  0E80               	movlw	128
 14347  005612  6FF3               	movwf	243,b	;volatile
 14348  005614                     
 14349                           ; BSR set to: 61
 14350                           ;mcc_generated_files/uart1.c: 122:     U1CON2 = 0x00;
 14351  005614  0E00               	movlw	0
 14352  005616  6FF4               	movwf	244,b	;volatile
 14353  005618                     
 14354                           ; BSR set to: 61
 14355                           ;mcc_generated_files/uart1.c: 125:     U1BRGL = 0x8A;
 14356  005618  0E8A               	movlw	138
 14357  00561A  6FF5               	movwf	245,b	;volatile
 14358  00561C                     
 14359                           ; BSR set to: 61
 14360                           ;mcc_generated_files/uart1.c: 128:     U1BRGH = 0x00;
 14361  00561C  0E00               	movlw	0
 14362  00561E  6FF6               	movwf	246,b	;volatile
 14363  005620                     
 14364                           ; BSR set to: 61
 14365                           ;mcc_generated_files/uart1.c: 131:     U1FIFO = 0x00;
 14366  005620  0E00               	movlw	0
 14367  005622  6FF7               	movwf	247,b	;volatile
 14368  005624                     
 14369                           ; BSR set to: 61
 14370                           ;mcc_generated_files/uart1.c: 134:     U1UIR = 0x00;
 14371  005624  0E00               	movlw	0
 14372  005626  6FF8               	movwf	248,b	;volatile
 14373  005628                     
 14374                           ; BSR set to: 61
 14375                           ;mcc_generated_files/uart1.c: 137:     U1ERRIR = 0x00;
 14376  005628  0E00               	movlw	0
 14377  00562A  6FF9               	movwf	249,b	;volatile
 14378  00562C                     
 14379                           ; BSR set to: 61
 14380                           ;mcc_generated_files/uart1.c: 140:     U1ERRIE = 0x00;
 14381  00562C  0E00               	movlw	0
 14382  00562E  6FFA               	movwf	250,b	;volatile
 14383  005630                     
 14384                           ; BSR set to: 61
 14385                           ;mcc_generated_files/uart1.c: 143:     UART1_SetFramingErrorHandler(UART1_DefaultFraming
      +                          ErrorHandler);
 14386  005630  0E76               	movlw	low _UART1_DefaultFramingErrorHandler
 14387  005632  6E14               	movwf	UART1_SetFramingErrorHandler@interruptHandler^0,c
 14388  005634  0E64               	movlw	high _UART1_DefaultFramingErrorHandler
 14389  005636  6E15               	movwf	(UART1_SetFramingErrorHandler@interruptHandler+1)^0,c
 14390  005638  EC14  F032         	call	_UART1_SetFramingErrorHandler	;wreg free
 14391  00563C                     
 14392                           ;mcc_generated_files/uart1.c: 144:     UART1_SetOverrunErrorHandler(UART1_DefaultOverrun
      +                          ErrorHandler);
 14393  00563C  0E74               	movlw	low _UART1_DefaultOverrunErrorHandler
 14394  00563E  6E14               	movwf	UART1_SetOverrunErrorHandler@interruptHandler^0,c
 14395  005640  0E64               	movlw	high _UART1_DefaultOverrunErrorHandler
 14396  005642  6E15               	movwf	(UART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
 14397  005644  EC0F  F032         	call	_UART1_SetOverrunErrorHandler	;wreg free
 14398  005648                     
 14399                           ;mcc_generated_files/uart1.c: 145:     UART1_SetErrorHandler(UART1_DefaultErrorHandler);
 14400  005648  0E6E               	movlw	low _UART1_DefaultErrorHandler
 14401  00564A  6E14               	movwf	UART1_SetErrorHandler@interruptHandler^0,c
 14402  00564C  0E64               	movlw	high _UART1_DefaultErrorHandler
 14403  00564E  6E15               	movwf	(UART1_SetErrorHandler@interruptHandler+1)^0,c
 14404  005650  EC19  F032         	call	_UART1_SetErrorHandler	;wreg free
 14405                           
 14406                           ;mcc_generated_files/uart1.c: 147:     uart1RxLastError.status = 0;
 14407  005654  0E00               	movlw	0
 14408  005656  0101               	movlb	1	; () banked
 14409  005658  6F44               	movwf	_uart1RxLastError& (0+255),b	;volatile
 14410                           
 14411                           ;mcc_generated_files/uart1.c: 150:     uart1TxHead = 0;
 14412  00565A  0E00               	movlw	0
 14413  00565C  6E48               	movwf	_uart1TxHead^0,c	;volatile
 14414                           
 14415                           ;mcc_generated_files/uart1.c: 151:     uart1TxTail = 0;
 14416  00565E  0E00               	movlw	0
 14417  005660  6E47               	movwf	_uart1TxTail^0,c	;volatile
 14418                           
 14419                           ;mcc_generated_files/uart1.c: 152:     uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 14420  005662  0E08               	movlw	8
 14421  005664  6FAB               	movwf	_uart1TxBufferRemaining& (0+255),b	;volatile
 14422                           
 14423                           ;mcc_generated_files/uart1.c: 153:     uart1RxHead = 0;
 14424  005666  0E00               	movlw	0
 14425  005668  6E46               	movwf	_uart1RxHead^0,c	;volatile
 14426                           
 14427                           ;mcc_generated_files/uart1.c: 154:     uart1RxTail = 0;
 14428  00566A  0E00               	movlw	0
 14429  00566C  6E45               	movwf	_uart1RxTail^0,c	;volatile
 14430                           
 14431                           ;mcc_generated_files/uart1.c: 155:     uart1RxCount = 0;
 14432  00566E  0E00               	movlw	0
 14433  005670  6E44               	movwf	_uart1RxCount^0,c	;volatile
 14434  005672                     
 14435                           ; BSR set to: 1
 14436                           ;mcc_generated_files/uart1.c: 158:     PIE3bits.U1RXIE = 1;
 14437  005672  0139               	movlb	57	; () banked
 14438  005674  8793               	bsf	147,3,b	;volatile
 14439  005676                     
 14440                           ; BSR set to: 57
 14441  005676  0012               	return		;funcret
 14442  005678                     __end_of_UART1_Initialize:
 14443                           	callstack 0
 14444                           
 14445 ;; *************** function _UART1_SetTxInterruptHandler *****************
 14446 ;; Defined at:
 14447 ;;		line 333 in file "mcc_generated_files/uart1.c"
 14448 ;; Parameters:    Size  Location     Type
 14449 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
 14450 ;;		 -> UART1_Transmit_ISR(1), 
 14451 ;; Auto vars:     Size  Location     Type
 14452 ;;		None
 14453 ;; Return value:  Size  Location     Type
 14454 ;;                  1    wreg      void 
 14455 ;; Registers used:
 14456 ;;		wreg, status,2, status,0
 14457 ;; Tracked objects:
 14458 ;;		On entry : 0/0
 14459 ;;		On exit  : 0/0
 14460 ;;		Unchanged: 0/0
 14461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14462 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14465 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14466 ;;Total ram usage:        2 bytes
 14467 ;; Hardware stack levels used: 1
 14468 ;; Hardware stack levels required when called: 8
 14469 ;; This function calls:
 14470 ;;		Nothing
 14471 ;; This function is called by:
 14472 ;;		_UART1_Initialize
 14473 ;; This function uses a non-reentrant model
 14474 ;;
 14475                           
 14476                           	psect	text56
 14477  00640A                     __ptext56:
 14478                           	callstack 0
 14479  00640A                     _UART1_SetTxInterruptHandler:
 14480                           	callstack 20
 14481  00640A                     
 14482                           ;mcc_generated_files/uart1.c: 334:     UART1_TxInterruptHandler = InterruptHandler;
 14483  00640A  C014  F1A7         	movff	UART1_SetTxInterruptHandler@InterruptHandler,_UART1_TxInterruptHandler
 14484  00640E  C015  F1A8         	movff	UART1_SetTxInterruptHandler@InterruptHandler+1,_UART1_TxInterruptHandler+1
 14485  006412  0012               	return		;funcret
 14486  006414                     __end_of_UART1_SetTxInterruptHandler:
 14487                           	callstack 0
 14488                           
 14489 ;; *************** function _UART1_SetRxInterruptHandler *****************
 14490 ;; Defined at:
 14491 ;;		line 329 in file "mcc_generated_files/uart1.c"
 14492 ;; Parameters:    Size  Location     Type
 14493 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
 14494 ;;		 -> UART1_Receive_ISR(1), 
 14495 ;; Auto vars:     Size  Location     Type
 14496 ;;		None
 14497 ;; Return value:  Size  Location     Type
 14498 ;;                  1    wreg      void 
 14499 ;; Registers used:
 14500 ;;		wreg, status,2, status,0
 14501 ;; Tracked objects:
 14502 ;;		On entry : 0/0
 14503 ;;		On exit  : 0/0
 14504 ;;		Unchanged: 0/0
 14505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14506 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14509 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14510 ;;Total ram usage:        2 bytes
 14511 ;; Hardware stack levels used: 1
 14512 ;; Hardware stack levels required when called: 8
 14513 ;; This function calls:
 14514 ;;		Nothing
 14515 ;; This function is called by:
 14516 ;;		_UART1_Initialize
 14517 ;; This function uses a non-reentrant model
 14518 ;;
 14519                           
 14520                           	psect	text57
 14521  006414                     __ptext57:
 14522                           	callstack 0
 14523  006414                     _UART1_SetRxInterruptHandler:
 14524                           	callstack 20
 14525  006414                     
 14526                           ;mcc_generated_files/uart1.c: 330:     UART1_RxInterruptHandler = InterruptHandler;
 14527  006414  C014  F1A9         	movff	UART1_SetRxInterruptHandler@InterruptHandler,_UART1_RxInterruptHandler
 14528  006418  C015  F1AA         	movff	UART1_SetRxInterruptHandler@InterruptHandler+1,_UART1_RxInterruptHandler+1
 14529  00641C  0012               	return		;funcret
 14530  00641E                     __end_of_UART1_SetRxInterruptHandler:
 14531                           	callstack 0
 14532                           
 14533 ;; *************** function _UART1_SetOverrunErrorHandler *****************
 14534 ;; Defined at:
 14535 ;;		line 319 in file "mcc_generated_files/uart1.c"
 14536 ;; Parameters:    Size  Location     Type
 14537 ;;  interruptHan    2   19[COMRAM] PTR FTN()void 
 14538 ;;		 -> UART1_DefaultOverrunErrorHandler(1), 
 14539 ;; Auto vars:     Size  Location     Type
 14540 ;;		None
 14541 ;; Return value:  Size  Location     Type
 14542 ;;                  1    wreg      void 
 14543 ;; Registers used:
 14544 ;;		wreg, status,2, status,0
 14545 ;; Tracked objects:
 14546 ;;		On entry : 0/0
 14547 ;;		On exit  : 0/0
 14548 ;;		Unchanged: 0/0
 14549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14550 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14553 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14554 ;;Total ram usage:        2 bytes
 14555 ;; Hardware stack levels used: 1
 14556 ;; Hardware stack levels required when called: 8
 14557 ;; This function calls:
 14558 ;;		Nothing
 14559 ;; This function is called by:
 14560 ;;		_UART1_Initialize
 14561 ;; This function uses a non-reentrant model
 14562 ;;
 14563                           
 14564                           	psect	text58
 14565  00641E                     __ptext58:
 14566                           	callstack 0
 14567  00641E                     _UART1_SetOverrunErrorHandler:
 14568                           	callstack 20
 14569  00641E                     
 14570                           ;mcc_generated_files/uart1.c: 320:     UART1_OverrunErrorHandler = interruptHandler;
 14571  00641E  C014  F1A3         	movff	UART1_SetOverrunErrorHandler@interruptHandler,_UART1_OverrunErrorHandler
 14572  006422  C015  F1A4         	movff	UART1_SetOverrunErrorHandler@interruptHandler+1,_UART1_OverrunErrorHandler+1
 14573  006426  0012               	return		;funcret
 14574  006428                     __end_of_UART1_SetOverrunErrorHandler:
 14575                           	callstack 0
 14576                           
 14577 ;; *************** function _UART1_SetFramingErrorHandler *****************
 14578 ;; Defined at:
 14579 ;;		line 315 in file "mcc_generated_files/uart1.c"
 14580 ;; Parameters:    Size  Location     Type
 14581 ;;  interruptHan    2   19[COMRAM] PTR FTN()void 
 14582 ;;		 -> UART1_DefaultFramingErrorHandler(1), 
 14583 ;; Auto vars:     Size  Location     Type
 14584 ;;		None
 14585 ;; Return value:  Size  Location     Type
 14586 ;;                  1    wreg      void 
 14587 ;; Registers used:
 14588 ;;		wreg, status,2, status,0
 14589 ;; Tracked objects:
 14590 ;;		On entry : 0/0
 14591 ;;		On exit  : 0/0
 14592 ;;		Unchanged: 0/0
 14593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14594 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14597 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14598 ;;Total ram usage:        2 bytes
 14599 ;; Hardware stack levels used: 1
 14600 ;; Hardware stack levels required when called: 8
 14601 ;; This function calls:
 14602 ;;		Nothing
 14603 ;; This function is called by:
 14604 ;;		_UART1_Initialize
 14605 ;; This function uses a non-reentrant model
 14606 ;;
 14607                           
 14608                           	psect	text59
 14609  006428                     __ptext59:
 14610                           	callstack 0
 14611  006428                     _UART1_SetFramingErrorHandler:
 14612                           	callstack 20
 14613  006428                     
 14614                           ;mcc_generated_files/uart1.c: 316:     UART1_FramingErrorHandler = interruptHandler;
 14615  006428  C014  F1A5         	movff	UART1_SetFramingErrorHandler@interruptHandler,_UART1_FramingErrorHandler
 14616  00642C  C015  F1A6         	movff	UART1_SetFramingErrorHandler@interruptHandler+1,_UART1_FramingErrorHandler+1
 14617  006430  0012               	return		;funcret
 14618  006432                     __end_of_UART1_SetFramingErrorHandler:
 14619                           	callstack 0
 14620                           
 14621 ;; *************** function _UART1_SetErrorHandler *****************
 14622 ;; Defined at:
 14623 ;;		line 323 in file "mcc_generated_files/uart1.c"
 14624 ;; Parameters:    Size  Location     Type
 14625 ;;  interruptHan    2   19[COMRAM] PTR FTN()void 
 14626 ;;		 -> UART1_DefaultErrorHandler(1), 
 14627 ;; Auto vars:     Size  Location     Type
 14628 ;;		None
 14629 ;; Return value:  Size  Location     Type
 14630 ;;                  1    wreg      void 
 14631 ;; Registers used:
 14632 ;;		wreg, status,2, status,0
 14633 ;; Tracked objects:
 14634 ;;		On entry : 0/0
 14635 ;;		On exit  : 0/0
 14636 ;;		Unchanged: 0/0
 14637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14638 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14641 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14642 ;;Total ram usage:        2 bytes
 14643 ;; Hardware stack levels used: 1
 14644 ;; Hardware stack levels required when called: 8
 14645 ;; This function calls:
 14646 ;;		Nothing
 14647 ;; This function is called by:
 14648 ;;		_UART1_Initialize
 14649 ;; This function uses a non-reentrant model
 14650 ;;
 14651                           
 14652                           	psect	text60
 14653  006432                     __ptext60:
 14654                           	callstack 0
 14655  006432                     _UART1_SetErrorHandler:
 14656                           	callstack 20
 14657  006432                     
 14658                           ;mcc_generated_files/uart1.c: 324:     UART1_ErrorHandler = interruptHandler;
 14659  006432  C014  F1A1         	movff	UART1_SetErrorHandler@interruptHandler,_UART1_ErrorHandler
 14660  006436  C015  F1A2         	movff	UART1_SetErrorHandler@interruptHandler+1,_UART1_ErrorHandler+1
 14661  00643A  0012               	return		;funcret
 14662  00643C                     __end_of_UART1_SetErrorHandler:
 14663                           	callstack 0
 14664                           
 14665 ;; *************** function _TMR5_Initialize *****************
 14666 ;; Defined at:
 14667 ;;		line 67 in file "mcc_generated_files/tmr5.c"
 14668 ;; Parameters:    Size  Location     Type
 14669 ;;		None
 14670 ;; Auto vars:     Size  Location     Type
 14671 ;;		None
 14672 ;; Return value:  Size  Location     Type
 14673 ;;                  1    wreg      void 
 14674 ;; Registers used:
 14675 ;;		wreg, status,2, status,0, cstack
 14676 ;; Tracked objects:
 14677 ;;		On entry : 0/0
 14678 ;;		On exit  : 0/0
 14679 ;;		Unchanged: 0/0
 14680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14683 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14684 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14685 ;;Total ram usage:        2 bytes
 14686 ;; Hardware stack levels used: 1
 14687 ;; Hardware stack levels required when called: 9
 14688 ;; This function calls:
 14689 ;;		_TMR5_SetGateInterruptHandler
 14690 ;; This function is called by:
 14691 ;;		_SYSTEM_Initialize
 14692 ;; This function uses a non-reentrant model
 14693 ;;
 14694                           
 14695                           	psect	text61
 14696  005B8A                     __ptext61:
 14697                           	callstack 0
 14698  005B8A                     _TMR5_Initialize:
 14699                           	callstack 20
 14700  005B8A                     
 14701                           ;mcc_generated_files/tmr5.c: 72:     T5GCON = 0xC0;
 14702  005B8A  0EC0               	movlw	192
 14703  005B8C  6E9B               	movwf	155,c	;volatile
 14704                           
 14705                           ;mcc_generated_files/tmr5.c: 75:     T5GATE = 0x00;
 14706  005B8E  0E00               	movlw	0
 14707  005B90  6E9C               	movwf	156,c	;volatile
 14708                           
 14709                           ;mcc_generated_files/tmr5.c: 78:     T5CLK = 0x05;
 14710  005B92  0E05               	movlw	5
 14711  005B94  6E9D               	movwf	157,c	;volatile
 14712                           
 14713                           ;mcc_generated_files/tmr5.c: 81:     TMR5H = 0x00;
 14714  005B96  0E00               	movlw	0
 14715  005B98  6E99               	movwf	153,c	;volatile
 14716                           
 14717                           ;mcc_generated_files/tmr5.c: 84:     TMR5L = 0x00;
 14718  005B9A  0E00               	movlw	0
 14719  005B9C  6E98               	movwf	152,c	;volatile
 14720  005B9E                     
 14721                           ;mcc_generated_files/tmr5.c: 87:     PIR8bits.TMR5IF = 0;
 14722  005B9E  0139               	movlb	57	; () banked
 14723  005BA0  9DA8               	bcf	168,6,b	;volatile
 14724  005BA2                     
 14725                           ; BSR set to: 57
 14726                           ;mcc_generated_files/tmr5.c: 90:     timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
 14727  005BA2  5098               	movf	152,w,c	;volatile
 14728  005BA4  006F FE64  F016    	movff	16281,??_TMR5_Initialize	;volatile
 14729  005BAA  6A17               	clrf	(??_TMR5_Initialize+1)^0,c
 14730  005BAC  C016  F017         	movff	??_TMR5_Initialize,??_TMR5_Initialize+1
 14731  005BB0  6A16               	clrf	??_TMR5_Initialize^0,c
 14732  005BB2  1016               	iorwf	??_TMR5_Initialize^0,w,c
 14733  005BB4  0101               	movlb	1	; () banked
 14734  005BB6  6F9B               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 14735  005BB8  5017               	movf	(??_TMR5_Initialize+1)^0,w,c
 14736  005BBA  6F9C               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 14737  005BBC                     
 14738                           ; BSR set to: 1
 14739                           ;mcc_generated_files/tmr5.c: 93:     PIR8bits.TMR5GIF = 0;
 14740  005BBC  0139               	movlb	57	; () banked
 14741  005BBE  9FA8               	bcf	168,7,b	;volatile
 14742  005BC0                     
 14743                           ; BSR set to: 57
 14744                           ;mcc_generated_files/tmr5.c: 96:     PIE8bits.TMR5GIE = 1;
 14745  005BC0  8F98               	bsf	152,7,b	;volatile
 14746  005BC2                     
 14747                           ; BSR set to: 57
 14748                           ;mcc_generated_files/tmr5.c: 99:     TMR5_SetGateInterruptHandler(TMR5_DefaultGateInterr
      +                          uptHandler);
 14749  005BC2  0E30               	movlw	low _TMR5_DefaultGateInterruptHandler
 14750  005BC4  6E14               	movwf	TMR5_SetGateInterruptHandler@InterruptHandler^0,c
 14751  005BC6  0E63               	movlw	high _TMR5_DefaultGateInterruptHandler
 14752  005BC8  6E15               	movwf	(TMR5_SetGateInterruptHandler@InterruptHandler+1)^0,c
 14753  005BCA  EC1E  F032         	call	_TMR5_SetGateInterruptHandler	;wreg free
 14754  005BCE                     
 14755                           ;mcc_generated_files/tmr5.c: 102:     T5CON = 0x03;
 14756  005BCE  0E03               	movlw	3
 14757  005BD0  6E9A               	movwf	154,c	;volatile
 14758  005BD2  0012               	return		;funcret
 14759  005BD4                     __end_of_TMR5_Initialize:
 14760                           	callstack 0
 14761                           
 14762 ;; *************** function _TMR5_SetGateInterruptHandler *****************
 14763 ;; Defined at:
 14764 ;;		line 186 in file "mcc_generated_files/tmr5.c"
 14765 ;; Parameters:    Size  Location     Type
 14766 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
 14767 ;;		 -> TMR5_DefaultGateInterruptHandler(1), 
 14768 ;; Auto vars:     Size  Location     Type
 14769 ;;		None
 14770 ;; Return value:  Size  Location     Type
 14771 ;;                  1    wreg      void 
 14772 ;; Registers used:
 14773 ;;		wreg, status,2, status,0
 14774 ;; Tracked objects:
 14775 ;;		On entry : 0/0
 14776 ;;		On exit  : 0/0
 14777 ;;		Unchanged: 0/0
 14778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14779 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14782 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14783 ;;Total ram usage:        2 bytes
 14784 ;; Hardware stack levels used: 1
 14785 ;; Hardware stack levels required when called: 8
 14786 ;; This function calls:
 14787 ;;		Nothing
 14788 ;; This function is called by:
 14789 ;;		_TMR5_Initialize
 14790 ;; This function uses a non-reentrant model
 14791 ;;
 14792                           
 14793                           	psect	text62
 14794  00643C                     __ptext62:
 14795                           	callstack 0
 14796  00643C                     _TMR5_SetGateInterruptHandler:
 14797                           	callstack 20
 14798  00643C                     
 14799                           ;mcc_generated_files/tmr5.c: 187:     TMR5_GateInterruptHandler = InterruptHandler;
 14800  00643C  C014  F199         	movff	TMR5_SetGateInterruptHandler@InterruptHandler,_TMR5_GateInterruptHandler
 14801  006440  C015  F19A         	movff	TMR5_SetGateInterruptHandler@InterruptHandler+1,_TMR5_GateInterruptHandler+1
 14802  006444  0012               	return		;funcret
 14803  006446                     __end_of_TMR5_SetGateInterruptHandler:
 14804                           	callstack 0
 14805                           
 14806 ;; *************** function _TMR4_Initialize *****************
 14807 ;; Defined at:
 14808 ;;		line 65 in file "mcc_generated_files/tmr4.c"
 14809 ;; Parameters:    Size  Location     Type
 14810 ;;		None
 14811 ;; Auto vars:     Size  Location     Type
 14812 ;;		None
 14813 ;; Return value:  Size  Location     Type
 14814 ;;                  1    wreg      void 
 14815 ;; Registers used:
 14816 ;;		wreg, status,2, status,0, cstack
 14817 ;; Tracked objects:
 14818 ;;		On entry : 0/0
 14819 ;;		On exit  : 0/0
 14820 ;;		Unchanged: 0/0
 14821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14825 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14826 ;;Total ram usage:        0 bytes
 14827 ;; Hardware stack levels used: 1
 14828 ;; Hardware stack levels required when called: 9
 14829 ;; This function calls:
 14830 ;;		_TMR4_SetInterruptHandler
 14831 ;; This function is called by:
 14832 ;;		_SYSTEM_Initialize
 14833 ;; This function uses a non-reentrant model
 14834 ;;
 14835                           
 14836                           	psect	text63
 14837  0061C4                     __ptext63:
 14838                           	callstack 0
 14839  0061C4                     _TMR4_Initialize:
 14840                           	callstack 20
 14841  0061C4                     
 14842                           ;mcc_generated_files/tmr4.c: 70:     T4CLKCON = 0x01;
 14843  0061C4  0E01               	movlw	1
 14844  0061C6  6EA2               	movwf	162,c	;volatile
 14845                           
 14846                           ;mcc_generated_files/tmr4.c: 73:     T4HLT = 0x00;
 14847  0061C8  0E00               	movlw	0
 14848  0061CA  6EA1               	movwf	161,c	;volatile
 14849                           
 14850                           ;mcc_generated_files/tmr4.c: 76:     T4RST = 0x00;
 14851  0061CC  0E00               	movlw	0
 14852  0061CE  6EA3               	movwf	163,c	;volatile
 14853                           
 14854                           ;mcc_generated_files/tmr4.c: 79:     T4PR = 0xF9;
 14855  0061D0  0EF9               	movlw	249
 14856  0061D2  6E9F               	movwf	159,c	;volatile
 14857                           
 14858                           ;mcc_generated_files/tmr4.c: 82:     T4TMR = 0x00;
 14859  0061D4  0E00               	movlw	0
 14860  0061D6  6E9E               	movwf	158,c	;volatile
 14861  0061D8                     
 14862                           ;mcc_generated_files/tmr4.c: 85:     PIR7bits.TMR4IF = 0;
 14863  0061D8  0139               	movlb	57	; () banked
 14864  0061DA  91A7               	bcf	167,0,b	;volatile
 14865  0061DC                     
 14866                           ; BSR set to: 57
 14867                           ;mcc_generated_files/tmr4.c: 88:     PIE7bits.TMR4IE = 1;
 14868  0061DC  8197               	bsf	151,0,b	;volatile
 14869  0061DE                     
 14870                           ; BSR set to: 57
 14871                           ;mcc_generated_files/tmr4.c: 91:     TMR4_SetInterruptHandler(TMR4_DefaultInterruptHandl
      +                          er);
 14872  0061DE  0E78               	movlw	low _TMR4_DefaultInterruptHandler
 14873  0061E0  6E14               	movwf	TMR4_SetInterruptHandler@InterruptHandler^0,c
 14874  0061E2  0E64               	movlw	high _TMR4_DefaultInterruptHandler
 14875  0061E4  6E15               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)^0,c
 14876  0061E6  EC23  F032         	call	_TMR4_SetInterruptHandler	;wreg free
 14877  0061EA                     
 14878                           ;mcc_generated_files/tmr4.c: 94:     T4CON = 0xE0;
 14879  0061EA  0EE0               	movlw	224
 14880  0061EC  6EA0               	movwf	160,c	;volatile
 14881  0061EE  0012               	return		;funcret
 14882  0061F0                     __end_of_TMR4_Initialize:
 14883                           	callstack 0
 14884                           
 14885 ;; *************** function _TMR4_SetInterruptHandler *****************
 14886 ;; Defined at:
 14887 ;;		line 194 in file "mcc_generated_files/tmr4.c"
 14888 ;; Parameters:    Size  Location     Type
 14889 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
 14890 ;;		 -> TMR4_10msISR(1), TMR4_DefaultInterruptHandler(1), 
 14891 ;; Auto vars:     Size  Location     Type
 14892 ;;		None
 14893 ;; Return value:  Size  Location     Type
 14894 ;;                  1    wreg      void 
 14895 ;; Registers used:
 14896 ;;		wreg, status,2, status,0
 14897 ;; Tracked objects:
 14898 ;;		On entry : 0/0
 14899 ;;		On exit  : 0/0
 14900 ;;		Unchanged: 0/0
 14901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14902 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14905 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14906 ;;Total ram usage:        2 bytes
 14907 ;; Hardware stack levels used: 1
 14908 ;; Hardware stack levels required when called: 8
 14909 ;; This function calls:
 14910 ;;		Nothing
 14911 ;; This function is called by:
 14912 ;;		_TMR4_Initialize
 14913 ;;		_main
 14914 ;; This function uses a non-reentrant model
 14915 ;;
 14916                           
 14917                           	psect	text64
 14918  006446                     __ptext64:
 14919                           	callstack 0
 14920  006446                     _TMR4_SetInterruptHandler:
 14921                           	callstack 22
 14922  006446                     
 14923                           ;mcc_generated_files/tmr4.c: 195:     TMR4_InterruptHandler = InterruptHandler;
 14924  006446  C014  F195         	movff	TMR4_SetInterruptHandler@InterruptHandler,_TMR4_InterruptHandler
 14925  00644A  C015  F196         	movff	TMR4_SetInterruptHandler@InterruptHandler+1,_TMR4_InterruptHandler+1
 14926  00644E  0012               	return		;funcret
 14927  006450                     __end_of_TMR4_SetInterruptHandler:
 14928                           	callstack 0
 14929                           
 14930 ;; *************** function _TMR3_Initialize *****************
 14931 ;; Defined at:
 14932 ;;		line 63 in file "mcc_generated_files/tmr3.c"
 14933 ;; Parameters:    Size  Location     Type
 14934 ;;		None
 14935 ;; Auto vars:     Size  Location     Type
 14936 ;;		None
 14937 ;; Return value:  Size  Location     Type
 14938 ;;                  1    wreg      void 
 14939 ;; Registers used:
 14940 ;;		wreg, status,2, status,0
 14941 ;; Tracked objects:
 14942 ;;		On entry : 0/0
 14943 ;;		On exit  : 0/0
 14944 ;;		Unchanged: 0/0
 14945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14948 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14949 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14950 ;;Total ram usage:        2 bytes
 14951 ;; Hardware stack levels used: 1
 14952 ;; Hardware stack levels required when called: 8
 14953 ;; This function calls:
 14954 ;;		Nothing
 14955 ;; This function is called by:
 14956 ;;		_SYSTEM_Initialize
 14957 ;; This function uses a non-reentrant model
 14958 ;;
 14959                           
 14960                           	psect	text65
 14961  005E92                     __ptext65:
 14962                           	callstack 0
 14963  005E92                     _TMR3_Initialize:
 14964                           	callstack 21
 14965  005E92                     
 14966                           ;mcc_generated_files/tmr3.c: 68:     T3GCON = 0x00;
 14967  005E92  0E00               	movlw	0
 14968  005E94  6EA7               	movwf	167,c	;volatile
 14969                           
 14970                           ;mcc_generated_files/tmr3.c: 71:     T3GATE = 0x00;
 14971  005E96  0E00               	movlw	0
 14972  005E98  6EA8               	movwf	168,c	;volatile
 14973                           
 14974                           ;mcc_generated_files/tmr3.c: 74:     T3CLK = 0x05;
 14975  005E9A  0E05               	movlw	5
 14976  005E9C  6EA9               	movwf	169,c	;volatile
 14977                           
 14978                           ;mcc_generated_files/tmr3.c: 77:     TMR3H = 0x00;
 14979  005E9E  0E00               	movlw	0
 14980  005EA0  6EA5               	movwf	165,c	;volatile
 14981                           
 14982                           ;mcc_generated_files/tmr3.c: 80:     TMR3L = 0x00;
 14983  005EA2  0E00               	movlw	0
 14984  005EA4  6EA4               	movwf	164,c	;volatile
 14985  005EA6                     
 14986                           ;mcc_generated_files/tmr3.c: 83:     PIR6bits.TMR3IF = 0;
 14987  005EA6  0139               	movlb	57	; () banked
 14988  005EA8  9DA6               	bcf	166,6,b	;volatile
 14989  005EAA                     
 14990                           ; BSR set to: 57
 14991                           ;mcc_generated_files/tmr3.c: 86:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 14992  005EAA  50A4               	movf	164,w,c	;volatile
 14993  005EAC  006F FE94  F014    	movff	16293,??_TMR3_Initialize	;volatile
 14994  005EB2  6A15               	clrf	(??_TMR3_Initialize+1)^0,c
 14995  005EB4  C014  F015         	movff	??_TMR3_Initialize,??_TMR3_Initialize+1
 14996  005EB8  6A14               	clrf	??_TMR3_Initialize^0,c
 14997  005EBA  1014               	iorwf	??_TMR3_Initialize^0,w,c
 14998  005EBC  0101               	movlb	1	; () banked
 14999  005EBE  6F97               	movwf	_timer3ReloadVal& (0+255),b	;volatile
 15000  005EC0  5015               	movf	(??_TMR3_Initialize+1)^0,w,c
 15001  005EC2  6F98               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
 15002  005EC4                     
 15003                           ; BSR set to: 1
 15004                           ;mcc_generated_files/tmr3.c: 89:     T3CON = 0x01;
 15005  005EC4  0E01               	movlw	1
 15006  005EC6  6EA6               	movwf	166,c	;volatile
 15007  005EC8                     
 15008                           ; BSR set to: 1
 15009  005EC8  0012               	return		;funcret
 15010  005ECA                     __end_of_TMR3_Initialize:
 15011                           	callstack 0
 15012                           
 15013 ;; *************** function _TMR2_Initialize *****************
 15014 ;; Defined at:
 15015 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 15016 ;; Parameters:    Size  Location     Type
 15017 ;;		None
 15018 ;; Auto vars:     Size  Location     Type
 15019 ;;		None
 15020 ;; Return value:  Size  Location     Type
 15021 ;;                  1    wreg      void 
 15022 ;; Registers used:
 15023 ;;		wreg, status,2
 15024 ;; Tracked objects:
 15025 ;;		On entry : 0/0
 15026 ;;		On exit  : 0/0
 15027 ;;		Unchanged: 0/0
 15028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15032 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15033 ;;Total ram usage:        0 bytes
 15034 ;; Hardware stack levels used: 1
 15035 ;; Hardware stack levels required when called: 8
 15036 ;; This function calls:
 15037 ;;		Nothing
 15038 ;; This function is called by:
 15039 ;;		_SYSTEM_Initialize
 15040 ;; This function uses a non-reentrant model
 15041 ;;
 15042                           
 15043                           	psect	text66
 15044  00634E                     __ptext66:
 15045                           	callstack 0
 15046  00634E                     _TMR2_Initialize:
 15047                           	callstack 21
 15048  00634E                     
 15049                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x05;
 15050  00634E  0E05               	movlw	5
 15051  006350  6EAE               	movwf	174,c	;volatile
 15052                           
 15053                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 15054  006352  0E00               	movlw	0
 15055  006354  6EAD               	movwf	173,c	;volatile
 15056                           
 15057                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 15058  006356  0E00               	movlw	0
 15059  006358  6EAF               	movwf	175,c	;volatile
 15060  00635A                     
 15061                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0xFF;
 15062  00635A  68AB               	setf	171,c	;volatile
 15063                           
 15064                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 15065  00635C  0E00               	movlw	0
 15066  00635E  6EAA               	movwf	170,c	;volatile
 15067  006360                     
 15068                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 15069  006360  0139               	movlb	57	; () banked
 15070  006362  95A4               	bcf	164,2,b	;volatile
 15071                           
 15072                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xB0;
 15073  006364  0EB0               	movlw	176
 15074  006366  6EAC               	movwf	172,c	;volatile
 15075  006368                     
 15076                           ; BSR set to: 57
 15077  006368  0012               	return		;funcret
 15078  00636A                     __end_of_TMR2_Initialize:
 15079                           	callstack 0
 15080                           
 15081 ;; *************** function _SMT1_Initialize *****************
 15082 ;; Defined at:
 15083 ;;		line 60 in file "mcc_generated_files/smt1.c"
 15084 ;; Parameters:    Size  Location     Type
 15085 ;;		None
 15086 ;; Auto vars:     Size  Location     Type
 15087 ;;		None
 15088 ;; Return value:  Size  Location     Type
 15089 ;;                  1    wreg      void 
 15090 ;; Registers used:
 15091 ;;		wreg, status,2
 15092 ;; Tracked objects:
 15093 ;;		On entry : 0/0
 15094 ;;		On exit  : 0/0
 15095 ;;		Unchanged: 0/0
 15096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15100 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15101 ;;Total ram usage:        0 bytes
 15102 ;; Hardware stack levels used: 1
 15103 ;; Hardware stack levels required when called: 8
 15104 ;; This function calls:
 15105 ;;		Nothing
 15106 ;; This function is called by:
 15107 ;;		_SYSTEM_Initialize
 15108 ;; This function uses a non-reentrant model
 15109 ;;
 15110                           
 15111                           	psect	text67
 15112  00610A                     __ptext67:
 15113                           	callstack 0
 15114  00610A                     _SMT1_Initialize:
 15115                           	callstack 21
 15116  00610A                     
 15117                           ;mcc_generated_files/smt1.c: 63:     SMT1CON0 = 0x80;
 15118  00610A  0E80               	movlw	128
 15119  00610C  013F               	movlb	63	; () banked
 15120  00610E  6F1E               	movwf	30,b	;volatile
 15121                           
 15122                           ;mcc_generated_files/smt1.c: 66:     SMT1CON1 = 0x42;
 15123  006110  0E42               	movlw	66
 15124  006112  6F1F               	movwf	31,b	;volatile
 15125                           
 15126                           ;mcc_generated_files/smt1.c: 69:     SMT1STAT = 0x00;
 15127  006114  0E00               	movlw	0
 15128  006116  6F20               	movwf	32,b	;volatile
 15129                           
 15130                           ;mcc_generated_files/smt1.c: 72:     SMT1CLK = 0x04;
 15131  006118  0E04               	movlw	4
 15132  00611A  6F21               	movwf	33,b	;volatile
 15133                           
 15134                           ;mcc_generated_files/smt1.c: 75:     SMT1WIN = 0x00;
 15135  00611C  0E00               	movlw	0
 15136  00611E  6F23               	movwf	35,b	;volatile
 15137                           
 15138                           ;mcc_generated_files/smt1.c: 78:     SMT1SIG = 0x00;
 15139  006120  0E00               	movlw	0
 15140  006122  6F22               	movwf	34,b	;volatile
 15141                           
 15142                           ;mcc_generated_files/smt1.c: 81:     SMT1PRU = 0x01;
 15143  006124  0E01               	movlw	1
 15144  006126  6F1D               	movwf	29,b	;volatile
 15145  006128                     
 15146                           ; BSR set to: 63
 15147                           ;mcc_generated_files/smt1.c: 84:     SMT1PRH = 0xFF;
 15148  006128  691C               	setf	28,b	;volatile
 15149  00612A                     
 15150                           ; BSR set to: 63
 15151                           ;mcc_generated_files/smt1.c: 87:     SMT1PRL = 0xFF;
 15152  00612A  691B               	setf	27,b	;volatile
 15153  00612C                     
 15154                           ; BSR set to: 63
 15155                           ;mcc_generated_files/smt1.c: 90:     PIE1bits.SMT1IE = 1;
 15156  00612C  0139               	movlb	57	; () banked
 15157  00612E  8B91               	bsf	145,5,b	;volatile
 15158  006130                     
 15159                           ; BSR set to: 57
 15160                           ;mcc_generated_files/smt1.c: 93:     PIE1bits.SMT1PWAIE = 1;
 15161  006130  8F91               	bsf	145,7,b	;volatile
 15162  006132                     
 15163                           ; BSR set to: 57
 15164                           ;mcc_generated_files/smt1.c: 96:     PIE1bits.SMT1PRAIE = 1;
 15165  006132  8D91               	bsf	145,6,b	;volatile
 15166  006134                     
 15167                           ; BSR set to: 57
 15168                           ;mcc_generated_files/smt1.c: 99:     SMT1CON1bits.SMT1GO = 1;
 15169  006134  013F               	movlb	63	; () banked
 15170  006136  8F1F               	bsf	31,7,b	;volatile
 15171  006138                     
 15172                           ; BSR set to: 63
 15173  006138  0012               	return		;funcret
 15174  00613A                     __end_of_SMT1_Initialize:
 15175                           	callstack 0
 15176                           
 15177 ;; *************** function _PWM8_Initialize *****************
 15178 ;; Defined at:
 15179 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 15180 ;; Parameters:    Size  Location     Type
 15181 ;;		None
 15182 ;; Auto vars:     Size  Location     Type
 15183 ;;		None
 15184 ;; Return value:  Size  Location     Type
 15185 ;;                  1    wreg      void 
 15186 ;; Registers used:
 15187 ;;		wreg, status,2
 15188 ;; Tracked objects:
 15189 ;;		On entry : 0/0
 15190 ;;		On exit  : 0/0
 15191 ;;		Unchanged: 0/0
 15192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15196 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15197 ;;Total ram usage:        0 bytes
 15198 ;; Hardware stack levels used: 1
 15199 ;; Hardware stack levels required when called: 8
 15200 ;; This function calls:
 15201 ;;		Nothing
 15202 ;; This function is called by:
 15203 ;;		_SYSTEM_Initialize
 15204 ;; This function uses a non-reentrant model
 15205 ;;
 15206                           
 15207                           	psect	text68
 15208  00636A                     __ptext68:
 15209                           	callstack 0
 15210  00636A                     _PWM8_Initialize:
 15211                           	callstack 21
 15212  00636A                     
 15213                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 15214  00636A  0E80               	movlw	128
 15215  00636C  6E62               	movwf	98,c	;volatile
 15216                           
 15217                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 15218  00636E  0E00               	movlw	0
 15219  006370  6E61               	movwf	97,c	;volatile
 15220                           
 15221                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x00;
 15222  006372  0E00               	movlw	0
 15223  006374  6E60               	movwf	96,c	;volatile
 15224                           
 15225                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 2;
 15226  006376  013F               	movlb	63	; () banked
 15227  006378  515F               	movf	95,w,b	;volatile
 15228  00637A  0B3F               	andlw	-193
 15229  00637C  0980               	iorlw	128
 15230  00637E  6F5F               	movwf	95,b	;volatile
 15231  006380                     
 15232                           ; BSR set to: 63
 15233  006380  0012               	return		;funcret
 15234  006382                     __end_of_PWM8_Initialize:
 15235                           	callstack 0
 15236                           
 15237 ;; *************** function _PWM7_Initialize *****************
 15238 ;; Defined at:
 15239 ;;		line 58 in file "mcc_generated_files/pwm7.c"
 15240 ;; Parameters:    Size  Location     Type
 15241 ;;		None
 15242 ;; Auto vars:     Size  Location     Type
 15243 ;;		None
 15244 ;; Return value:  Size  Location     Type
 15245 ;;                  1    wreg      void 
 15246 ;; Registers used:
 15247 ;;		wreg, status,2
 15248 ;; Tracked objects:
 15249 ;;		On entry : 0/0
 15250 ;;		On exit  : 0/0
 15251 ;;		Unchanged: 0/0
 15252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15256 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15257 ;;Total ram usage:        0 bytes
 15258 ;; Hardware stack levels used: 1
 15259 ;; Hardware stack levels required when called: 8
 15260 ;; This function calls:
 15261 ;;		Nothing
 15262 ;; This function is called by:
 15263 ;;		_SYSTEM_Initialize
 15264 ;; This function uses a non-reentrant model
 15265 ;;
 15266                           
 15267                           	psect	text69
 15268  006382                     __ptext69:
 15269                           	callstack 0
 15270  006382                     _PWM7_Initialize:
 15271                           	callstack 21
 15272  006382                     
 15273                           ;mcc_generated_files/pwm7.c: 62:     PWM7CON = 0x80;
 15274  006382  0E80               	movlw	128
 15275  006384  6E66               	movwf	102,c	;volatile
 15276                           
 15277                           ;mcc_generated_files/pwm7.c: 65:     PWM7DCH = 0x00;
 15278  006386  0E00               	movlw	0
 15279  006388  6E65               	movwf	101,c	;volatile
 15280                           
 15281                           ;mcc_generated_files/pwm7.c: 68:     PWM7DCL = 0x00;
 15282  00638A  0E00               	movlw	0
 15283  00638C  6E64               	movwf	100,c	;volatile
 15284                           
 15285                           ;mcc_generated_files/pwm7.c: 71:     CCPTMRS1bits.P7TSEL = 2;
 15286  00638E  013F               	movlb	63	; () banked
 15287  006390  515F               	movf	95,w,b	;volatile
 15288  006392  0BCF               	andlw	-49
 15289  006394  0920               	iorlw	32
 15290  006396  6F5F               	movwf	95,b	;volatile
 15291  006398                     
 15292                           ; BSR set to: 63
 15293  006398  0012               	return		;funcret
 15294  00639A                     __end_of_PWM7_Initialize:
 15295                           	callstack 0
 15296                           
 15297 ;; *************** function _PWM6_Initialize *****************
 15298 ;; Defined at:
 15299 ;;		line 58 in file "mcc_generated_files/pwm6.c"
 15300 ;; Parameters:    Size  Location     Type
 15301 ;;		None
 15302 ;; Auto vars:     Size  Location     Type
 15303 ;;		None
 15304 ;; Return value:  Size  Location     Type
 15305 ;;                  1    wreg      void 
 15306 ;; Registers used:
 15307 ;;		wreg, status,2
 15308 ;; Tracked objects:
 15309 ;;		On entry : 0/0
 15310 ;;		On exit  : 0/0
 15311 ;;		Unchanged: 0/0
 15312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15316 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15317 ;;Total ram usage:        0 bytes
 15318 ;; Hardware stack levels used: 1
 15319 ;; Hardware stack levels required when called: 8
 15320 ;; This function calls:
 15321 ;;		Nothing
 15322 ;; This function is called by:
 15323 ;;		_SYSTEM_Initialize
 15324 ;; This function uses a non-reentrant model
 15325 ;;
 15326                           
 15327                           	psect	text70
 15328  00639A                     __ptext70:
 15329                           	callstack 0
 15330  00639A                     _PWM6_Initialize:
 15331                           	callstack 21
 15332  00639A                     
 15333                           ;mcc_generated_files/pwm6.c: 62:     PWM6CON = 0x80;
 15334  00639A  0E80               	movlw	128
 15335  00639C  6E6A               	movwf	106,c	;volatile
 15336                           
 15337                           ;mcc_generated_files/pwm6.c: 65:     PWM6DCH = 0x59;
 15338  00639E  0E59               	movlw	89
 15339  0063A0  6E69               	movwf	105,c	;volatile
 15340                           
 15341                           ;mcc_generated_files/pwm6.c: 68:     PWM6DCL = 0x40;
 15342  0063A2  0E40               	movlw	64
 15343  0063A4  6E68               	movwf	104,c	;volatile
 15344                           
 15345                           ;mcc_generated_files/pwm6.c: 71:     CCPTMRS1bits.P6TSEL = 1;
 15346  0063A6  013F               	movlb	63	; () banked
 15347  0063A8  515F               	movf	95,w,b	;volatile
 15348  0063AA  0BF3               	andlw	-13
 15349  0063AC  0904               	iorlw	4
 15350  0063AE  6F5F               	movwf	95,b	;volatile
 15351  0063B0                     
 15352                           ; BSR set to: 63
 15353  0063B0  0012               	return		;funcret
 15354  0063B2                     __end_of_PWM6_Initialize:
 15355                           	callstack 0
 15356                           
 15357 ;; *************** function _PWM5_Initialize *****************
 15358 ;; Defined at:
 15359 ;;		line 58 in file "mcc_generated_files/pwm5.c"
 15360 ;; Parameters:    Size  Location     Type
 15361 ;;		None
 15362 ;; Auto vars:     Size  Location     Type
 15363 ;;		None
 15364 ;; Return value:  Size  Location     Type
 15365 ;;                  1    wreg      void 
 15366 ;; Registers used:
 15367 ;;		wreg, status,2
 15368 ;; Tracked objects:
 15369 ;;		On entry : 0/0
 15370 ;;		On exit  : 0/0
 15371 ;;		Unchanged: 0/0
 15372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15376 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15377 ;;Total ram usage:        0 bytes
 15378 ;; Hardware stack levels used: 1
 15379 ;; Hardware stack levels required when called: 8
 15380 ;; This function calls:
 15381 ;;		Nothing
 15382 ;; This function is called by:
 15383 ;;		_SYSTEM_Initialize
 15384 ;; This function uses a non-reentrant model
 15385 ;;
 15386                           
 15387                           	psect	text71
 15388  0063B2                     __ptext71:
 15389                           	callstack 0
 15390  0063B2                     _PWM5_Initialize:
 15391                           	callstack 21
 15392  0063B2                     
 15393                           ;mcc_generated_files/pwm5.c: 62:     PWM5CON = 0x80;
 15394  0063B2  0E80               	movlw	128
 15395  0063B4  6E6E               	movwf	110,c	;volatile
 15396                           
 15397                           ;mcc_generated_files/pwm5.c: 65:     PWM5DCH = 0x59;
 15398  0063B6  0E59               	movlw	89
 15399  0063B8  6E6D               	movwf	109,c	;volatile
 15400                           
 15401                           ;mcc_generated_files/pwm5.c: 68:     PWM5DCL = 0x40;
 15402  0063BA  0E40               	movlw	64
 15403  0063BC  6E6C               	movwf	108,c	;volatile
 15404                           
 15405                           ;mcc_generated_files/pwm5.c: 71:     CCPTMRS1bits.P5TSEL = 1;
 15406  0063BE  013F               	movlb	63	; () banked
 15407  0063C0  515F               	movf	95,w,b	;volatile
 15408  0063C2  0BFC               	andlw	-4
 15409  0063C4  0901               	iorlw	1
 15410  0063C6  6F5F               	movwf	95,b	;volatile
 15411  0063C8                     
 15412                           ; BSR set to: 63
 15413  0063C8  0012               	return		;funcret
 15414  0063CA                     __end_of_PWM5_Initialize:
 15415                           	callstack 0
 15416                           
 15417 ;; *************** function _PMD_Initialize *****************
 15418 ;; Defined at:
 15419 ;;		line 86 in file "mcc_generated_files/mcc.c"
 15420 ;; Parameters:    Size  Location     Type
 15421 ;;		None
 15422 ;; Auto vars:     Size  Location     Type
 15423 ;;		None
 15424 ;; Return value:  Size  Location     Type
 15425 ;;                  1    wreg      void 
 15426 ;; Registers used:
 15427 ;;		wreg, status,2
 15428 ;; Tracked objects:
 15429 ;;		On entry : 0/0
 15430 ;;		On exit  : 0/0
 15431 ;;		Unchanged: 0/0
 15432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15434 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15436 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15437 ;;Total ram usage:        0 bytes
 15438 ;; Hardware stack levels used: 1
 15439 ;; Hardware stack levels required when called: 8
 15440 ;; This function calls:
 15441 ;;		Nothing
 15442 ;; This function is called by:
 15443 ;;		_SYSTEM_Initialize
 15444 ;; This function uses a non-reentrant model
 15445 ;;
 15446                           
 15447                           	psect	text72
 15448  0062C8                     __ptext72:
 15449                           	callstack 0
 15450  0062C8                     _PMD_Initialize:
 15451                           	callstack 21
 15452  0062C8                     
 15453                           ;mcc_generated_files/mcc.c: 89:     PMD0 = 0x00;
 15454  0062C8  0E00               	movlw	0
 15455  0062CA  0139               	movlb	57	; () banked
 15456  0062CC  6FC0               	movwf	192,b	;volatile
 15457                           
 15458                           ;mcc_generated_files/mcc.c: 91:     PMD1 = 0x00;
 15459  0062CE  0E00               	movlw	0
 15460  0062D0  6FC1               	movwf	193,b	;volatile
 15461                           
 15462                           ;mcc_generated_files/mcc.c: 93:     PMD2 = 0x00;
 15463  0062D2  0E00               	movlw	0
 15464  0062D4  6FC2               	movwf	194,b	;volatile
 15465                           
 15466                           ;mcc_generated_files/mcc.c: 95:     PMD3 = 0x00;
 15467  0062D6  0E00               	movlw	0
 15468  0062D8  6FC3               	movwf	195,b	;volatile
 15469                           
 15470                           ;mcc_generated_files/mcc.c: 97:     PMD4 = 0x00;
 15471  0062DA  0E00               	movlw	0
 15472  0062DC  6FC4               	movwf	196,b	;volatile
 15473                           
 15474                           ;mcc_generated_files/mcc.c: 99:     PMD5 = 0x00;
 15475  0062DE  0E00               	movlw	0
 15476  0062E0  6FC5               	movwf	197,b	;volatile
 15477                           
 15478                           ;mcc_generated_files/mcc.c: 101:     PMD6 = 0x00;
 15479  0062E2  0E00               	movlw	0
 15480  0062E4  6FC6               	movwf	198,b	;volatile
 15481                           
 15482                           ;mcc_generated_files/mcc.c: 103:     PMD7 = 0x00;
 15483  0062E6  0E00               	movlw	0
 15484  0062E8  6FC7               	movwf	199,b	;volatile
 15485  0062EA                     
 15486                           ; BSR set to: 57
 15487  0062EA  0012               	return		;funcret
 15488  0062EC                     __end_of_PMD_Initialize:
 15489                           	callstack 0
 15490                           
 15491 ;; *************** function _PIN_MANAGER_Initialize *****************
 15492 ;; Defined at:
 15493 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 15494 ;; Parameters:    Size  Location     Type
 15495 ;;		None
 15496 ;; Auto vars:     Size  Location     Type
 15497 ;;		None
 15498 ;; Return value:  Size  Location     Type
 15499 ;;                  1    wreg      void 
 15500 ;; Registers used:
 15501 ;;		wreg, status,2
 15502 ;; Tracked objects:
 15503 ;;		On entry : 0/0
 15504 ;;		On exit  : 0/0
 15505 ;;		Unchanged: 0/0
 15506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15510 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15511 ;;Total ram usage:        0 bytes
 15512 ;; Hardware stack levels used: 1
 15513 ;; Hardware stack levels required when called: 8
 15514 ;; This function calls:
 15515 ;;		Nothing
 15516 ;; This function is called by:
 15517 ;;		_SYSTEM_Initialize
 15518 ;; This function uses a non-reentrant model
 15519 ;;
 15520                           
 15521                           	psect	text73
 15522  005168                     __ptext73:
 15523                           	callstack 0
 15524  005168                     _PIN_MANAGER_Initialize:
 15525                           	callstack 21
 15526  005168                     
 15527                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
 15528  005168  0E00               	movlw	0
 15529  00516A  6EBE               	movwf	190,c	;volatile
 15530                           
 15531                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
 15532  00516C  0E00               	movlw	0
 15533  00516E  6EBD               	movwf	189,c	;volatile
 15534                           
 15535                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x24;
 15536  005170  0E24               	movlw	36
 15537  005172  6EBA               	movwf	186,c	;volatile
 15538                           
 15539                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
 15540  005174  0E00               	movlw	0
 15541  005176  6EBB               	movwf	187,c	;volatile
 15542                           
 15543                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
 15544  005178  0E00               	movlw	0
 15545  00517A  6EBC               	movwf	188,c	;volatile
 15546                           
 15547                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
 15548  00517C  0E07               	movlw	7
 15549  00517E  6EC6               	movwf	198,c	;volatile
 15550                           
 15551                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xC0;
 15552  005180  0EC0               	movlw	192
 15553  005182  6EC2               	movwf	194,c	;volatile
 15554                           
 15555                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xF7;
 15556  005184  0EF7               	movlw	247
 15557  005186  6EC3               	movwf	195,c	;volatile
 15558  005188                     
 15559                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xFF;
 15560  005188  68C4               	setf	196,c	;volatile
 15561  00518A                     
 15562                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
 15563  00518A  68C5               	setf	197,c	;volatile
 15564                           
 15565                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0x1F;
 15566  00518C  0E1F               	movlw	31
 15567  00518E  013A               	movlb	58	; () banked
 15568  005190  6F70               	movwf	112,b	;volatile
 15569  005192                     
 15570                           ; BSR set to: 58
 15571                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0xFF;
 15572  005192  6960               	setf	96,b	;volatile
 15573                           
 15574                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0xC0;
 15575  005194  0EC0               	movlw	192
 15576  005196  6F50               	movwf	80,b	;volatile
 15577                           
 15578                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
 15579  005198  0E07               	movlw	7
 15580  00519A  6F80               	movwf	128,b	;volatile
 15581                           
 15582                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x7F;
 15583  00519C  0E7F               	movlw	127
 15584  00519E  6F40               	movwf	64,b	;volatile
 15585                           
 15586                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
 15587  0051A0  0E00               	movlw	0
 15588  0051A2  6F71               	movwf	113,b	;volatile
 15589                           
 15590                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
 15591  0051A4  0E00               	movlw	0
 15592  0051A6  6F81               	movwf	129,b	;volatile
 15593                           
 15594                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
 15595  0051A8  0E00               	movlw	0
 15596  0051AA  6F51               	movwf	81,b	;volatile
 15597                           
 15598                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
 15599  0051AC  0E00               	movlw	0
 15600  0051AE  6F41               	movwf	65,b	;volatile
 15601                           
 15602                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
 15603  0051B0  0E00               	movlw	0
 15604  0051B2  6F61               	movwf	97,b	;volatile
 15605                           
 15606                           ;mcc_generated_files/pin_manager.c: 96:     RB1I2C = 0x00;
 15607  0051B4  0E00               	movlw	0
 15608  0051B6  6F5A               	movwf	90,b	;volatile
 15609                           
 15610                           ;mcc_generated_files/pin_manager.c: 97:     RB2I2C = 0x00;
 15611  0051B8  0E00               	movlw	0
 15612  0051BA  6F5B               	movwf	91,b	;volatile
 15613                           
 15614                           ;mcc_generated_files/pin_manager.c: 98:     RC3I2C = 0x00;
 15615  0051BC  0E00               	movlw	0
 15616  0051BE  6F6A               	movwf	106,b	;volatile
 15617                           
 15618                           ;mcc_generated_files/pin_manager.c: 99:     RC4I2C = 0x00;
 15619  0051C0  0E00               	movlw	0
 15620  0051C2  6F6B               	movwf	107,b	;volatile
 15621                           
 15622                           ;mcc_generated_files/pin_manager.c: 100:     RD0I2C = 0x00;
 15623  0051C4  0E00               	movlw	0
 15624  0051C6  6F7A               	movwf	122,b	;volatile
 15625                           
 15626                           ;mcc_generated_files/pin_manager.c: 101:     RD1I2C = 0x00;
 15627  0051C8  0E00               	movlw	0
 15628  0051CA  6F7B               	movwf	123,b	;volatile
 15629                           
 15630                           ;mcc_generated_files/pin_manager.c: 106:     ODCONE = 0x00;
 15631  0051CC  0E00               	movlw	0
 15632  0051CE  6F82               	movwf	130,b	;volatile
 15633                           
 15634                           ;mcc_generated_files/pin_manager.c: 107:     ODCONA = 0x00;
 15635  0051D0  0E00               	movlw	0
 15636  0051D2  6F42               	movwf	66,b	;volatile
 15637                           
 15638                           ;mcc_generated_files/pin_manager.c: 108:     ODCONB = 0x00;
 15639  0051D4  0E00               	movlw	0
 15640  0051D6  6F52               	movwf	82,b	;volatile
 15641                           
 15642                           ;mcc_generated_files/pin_manager.c: 109:     ODCONC = 0x00;
 15643  0051D8  0E00               	movlw	0
 15644  0051DA  6F62               	movwf	98,b	;volatile
 15645                           
 15646                           ;mcc_generated_files/pin_manager.c: 110:     ODCOND = 0x00;
 15647  0051DC  0E00               	movlw	0
 15648  0051DE  6F72               	movwf	114,b	;volatile
 15649  0051E0                     
 15650                           ; BSR set to: 58
 15651                           ;mcc_generated_files/pin_manager.c: 115:     SLRCONA = 0xFF;
 15652  0051E0  6943               	setf	67,b	;volatile
 15653  0051E2                     
 15654                           ; BSR set to: 58
 15655                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONB = 0xFF;
 15656  0051E2  6953               	setf	83,b	;volatile
 15657  0051E4                     
 15658                           ; BSR set to: 58
 15659                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONC = 0xFF;
 15660  0051E4  6963               	setf	99,b	;volatile
 15661  0051E6                     
 15662                           ; BSR set to: 58
 15663                           ;mcc_generated_files/pin_manager.c: 118:     SLRCOND = 0xFF;
 15664  0051E6  6973               	setf	115,b	;volatile
 15665                           
 15666                           ;mcc_generated_files/pin_manager.c: 119:     SLRCONE = 0x07;
 15667  0051E8  0E07               	movlw	7
 15668  0051EA  6F83               	movwf	131,b	;volatile
 15669  0051EC                     
 15670                           ; BSR set to: 58
 15671                           ;mcc_generated_files/pin_manager.c: 124:     INLVLA = 0xFF;
 15672  0051EC  6944               	setf	68,b	;volatile
 15673  0051EE                     
 15674                           ; BSR set to: 58
 15675                           ;mcc_generated_files/pin_manager.c: 125:     INLVLB = 0xFF;
 15676  0051EE  6954               	setf	84,b	;volatile
 15677  0051F0                     
 15678                           ; BSR set to: 58
 15679                           ;mcc_generated_files/pin_manager.c: 126:     INLVLC = 0xFF;
 15680  0051F0  6964               	setf	100,b	;volatile
 15681  0051F2                     
 15682                           ; BSR set to: 58
 15683                           ;mcc_generated_files/pin_manager.c: 127:     INLVLD = 0xFF;
 15684  0051F2  6974               	setf	116,b	;volatile
 15685                           
 15686                           ;mcc_generated_files/pin_manager.c: 128:     INLVLE = 0x0F;
 15687  0051F4  0E0F               	movlw	15
 15688  0051F6  6F84               	movwf	132,b	;volatile
 15689                           
 15690                           ;mcc_generated_files/pin_manager.c: 137:     CCP3PPS = 0x1F;
 15691  0051F8  0E1F               	movlw	31
 15692  0051FA  6FCF               	movwf	207,b	;volatile
 15693                           
 15694                           ;mcc_generated_files/pin_manager.c: 138:     CLCIN3PPS = 0x09;
 15695  0051FC  0E09               	movlw	9
 15696  0051FE  6FDC               	movwf	220,b	;volatile
 15697                           
 15698                           ;mcc_generated_files/pin_manager.c: 139:     RA1PPS = 0x0E;
 15699  005200  0E0E               	movlw	14
 15700  005202  6F01               	movwf	1,b	;volatile
 15701                           
 15702                           ;mcc_generated_files/pin_manager.c: 140:     U1RXPPS = 0x0A;
 15703  005204  0E0A               	movlw	10
 15704  005206  6FE5               	movwf	229,b	;volatile
 15705                           
 15706                           ;mcc_generated_files/pin_manager.c: 141:     RA0PPS = 0x0D;
 15707  005208  0E0D               	movlw	13
 15708  00520A  6F00               	movwf	0,b	;volatile
 15709                           
 15710                           ;mcc_generated_files/pin_manager.c: 142:     T5GPPS = 0x1D;
 15711  00520C  0E1D               	movlw	29
 15712  00520E  6FC9               	movwf	201,b	;volatile
 15713                           
 15714                           ;mcc_generated_files/pin_manager.c: 143:     RA4PPS = 0x10;
 15715  005210  0E10               	movlw	16
 15716  005212  6F04               	movwf	4,b	;volatile
 15717                           
 15718                           ;mcc_generated_files/pin_manager.c: 144:     CLCIN0PPS = 0x07;
 15719  005214  0E07               	movlw	7
 15720  005216  6FD9               	movwf	217,b	;volatile
 15721                           
 15722                           ;mcc_generated_files/pin_manager.c: 145:     SMT1WINPPS = 0x09;
 15723  005218  0E09               	movlw	9
 15724  00521A  6FD1               	movwf	209,b	;volatile
 15725                           
 15726                           ;mcc_generated_files/pin_manager.c: 146:     RA3PPS = 0x0F;
 15727  00521C  0E0F               	movlw	15
 15728  00521E  6F03               	movwf	3,b	;volatile
 15729                           
 15730                           ;mcc_generated_files/pin_manager.c: 147:     RB3PPS = 0x13;
 15731  005220  0E13               	movlw	19
 15732  005222  6F0B               	movwf	11,b	;volatile
 15733                           
 15734                           ;mcc_generated_files/pin_manager.c: 148:     CLCIN2PPS = 0x08;
 15735  005224  0E08               	movlw	8
 15736  005226  6FDB               	movwf	219,b	;volatile
 15737                           
 15738                           ;mcc_generated_files/pin_manager.c: 149:     SMT1SIGPPS = 0x08;
 15739  005228  0E08               	movlw	8
 15740  00522A  6FD2               	movwf	210,b	;volatile
 15741                           
 15742                           ;mcc_generated_files/pin_manager.c: 150:     CCP4PPS = 0x1E;
 15743  00522C  0E1E               	movlw	30
 15744  00522E  6FD0               	movwf	208,b	;volatile
 15745  005230                     
 15746                           ; BSR set to: 58
 15747  005230  0012               	return		;funcret
 15748  005232                     __end_of_PIN_MANAGER_Initialize:
 15749                           	callstack 0
 15750                           
 15751 ;; *************** function _OSCILLATOR_Initialize *****************
 15752 ;; Defined at:
 15753 ;;		line 72 in file "mcc_generated_files/mcc.c"
 15754 ;; Parameters:    Size  Location     Type
 15755 ;;		None
 15756 ;; Auto vars:     Size  Location     Type
 15757 ;;		None
 15758 ;; Return value:  Size  Location     Type
 15759 ;;                  1    wreg      void 
 15760 ;; Registers used:
 15761 ;;		wreg, status,2
 15762 ;; Tracked objects:
 15763 ;;		On entry : 0/0
 15764 ;;		On exit  : 0/0
 15765 ;;		Unchanged: 0/0
 15766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15770 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15771 ;;Total ram usage:        0 bytes
 15772 ;; Hardware stack levels used: 1
 15773 ;; Hardware stack levels required when called: 8
 15774 ;; This function calls:
 15775 ;;		Nothing
 15776 ;; This function is called by:
 15777 ;;		_SYSTEM_Initialize
 15778 ;; This function uses a non-reentrant model
 15779 ;;
 15780                           
 15781                           	psect	text74
 15782  0063CA                     __ptext74:
 15783                           	callstack 0
 15784  0063CA                     _OSCILLATOR_Initialize:
 15785                           	callstack 21
 15786  0063CA                     
 15787                           ;mcc_generated_files/mcc.c: 75:     OSCCON1 = 0x60;
 15788  0063CA  0E60               	movlw	96
 15789  0063CC  0139               	movlb	57	; () banked
 15790  0063CE  6FD9               	movwf	217,b	;volatile
 15791                           
 15792                           ;mcc_generated_files/mcc.c: 77:     OSCCON3 = 0x00;
 15793  0063D0  0E00               	movlw	0
 15794  0063D2  6FDB               	movwf	219,b	;volatile
 15795                           
 15796                           ;mcc_generated_files/mcc.c: 79:     OSCEN = 0x00;
 15797  0063D4  0E00               	movlw	0
 15798  0063D6  6FDD               	movwf	221,b	;volatile
 15799                           
 15800                           ;mcc_generated_files/mcc.c: 81:     OSCFRQ = 0x08;
 15801  0063D8  0E08               	movlw	8
 15802  0063DA  6FDF               	movwf	223,b	;volatile
 15803                           
 15804                           ;mcc_generated_files/mcc.c: 83:     OSCTUNE = 0x00;
 15805  0063DC  0E00               	movlw	0
 15806  0063DE  6FDE               	movwf	222,b	;volatile
 15807  0063E0                     
 15808                           ; BSR set to: 57
 15809  0063E0  0012               	return		;funcret
 15810  0063E2                     __end_of_OSCILLATOR_Initialize:
 15811                           	callstack 0
 15812                           
 15813 ;; *************** function _INTERRUPT_Initialize *****************
 15814 ;; Defined at:
 15815 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 15816 ;; Parameters:    Size  Location     Type
 15817 ;;		None
 15818 ;; Auto vars:     Size  Location     Type
 15819 ;;  state           1   19[COMRAM] _Bool 
 15820 ;; Return value:  Size  Location     Type
 15821 ;;                  1    wreg      void 
 15822 ;; Registers used:
 15823 ;;		wreg, status,2
 15824 ;; Tracked objects:
 15825 ;;		On entry : 0/0
 15826 ;;		On exit  : 0/0
 15827 ;;		Unchanged: 0/0
 15828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15830 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15832 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15833 ;;Total ram usage:        1 bytes
 15834 ;; Hardware stack levels used: 1
 15835 ;; Hardware stack levels required when called: 8
 15836 ;; This function calls:
 15837 ;;		Nothing
 15838 ;; This function is called by:
 15839 ;;		_SYSTEM_Initialize
 15840 ;; This function uses a non-reentrant model
 15841 ;;
 15842                           
 15843                           	psect	text75
 15844  005AF4                     __ptext75:
 15845                           	callstack 0
 15846  005AF4                     _INTERRUPT_Initialize:
 15847                           	callstack 21
 15848  005AF4                     
 15849                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 15850  005AF4  8AD2               	bsf	210,5,c	;volatile
 15851  005AF6                     
 15852                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 15853  005AF6  0E00               	movlw	0
 15854  005AF8  BED2               	btfsc	16338,7,c	;volatile
 15855  005AFA  0E01               	movlw	1
 15856  005AFC  6E14               	movwf	INTERRUPT_Initialize@state^0,c
 15857  005AFE                     
 15858                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 15859  005AFE  9ED2               	bcf	16338,7,c	;volatile
 15860                           
 15861                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 15862  005B00  0E55               	movlw	85
 15863  005B02  6ED4               	movwf	212,c	;volatile
 15864                           
 15865                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 15866  005B04  0EAA               	movlw	170
 15867  005B06  6ED4               	movwf	212,c	;volatile
 15868  005B08                     
 15869                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 15870  005B08  90D4               	bcf	212,0,c	;volatile
 15871                           
 15872                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTBASEU = 0;
 15873  005B0A  0E00               	movlw	0
 15874  005B0C  6ED7               	movwf	215,c	;volatile
 15875                           
 15876                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTBASEH = 0;
 15877  005B0E  0E00               	movlw	0
 15878  005B10  6ED6               	movwf	214,c	;volatile
 15879                           
 15880                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTBASEL = 8;
 15881  005B12  0E08               	movlw	8
 15882  005B14  6ED5               	movwf	213,c	;volatile
 15883                           
 15884                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 15885  005B16  0E55               	movlw	85
 15886  005B18  6ED4               	movwf	212,c	;volatile
 15887                           
 15888                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 15889  005B1A  0EAA               	movlw	170
 15890  005B1C  6ED4               	movwf	212,c	;volatile
 15891  005B1E                     
 15892                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 15893  005B1E  80D4               	bsf	212,0,c	;volatile
 15894  005B20                     
 15895                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 15896  005B20  B014               	btfsc	INTERRUPT_Initialize@state^0,0,c
 15897  005B22  D002               	bra	u2985
 15898  005B24  9ED2               	bcf	16338,7,c	;volatile
 15899  005B26  D001               	bra	u2986
 15900  005B28                     u2985:
 15901  005B28  8ED2               	bsf	16338,7,c	;volatile
 15902  005B2A                     u2986:
 15903  005B2A                     
 15904                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR3bits.U1TXIP = 0;
 15905  005B2A  0139               	movlb	57	; () banked
 15906  005B2C  9983               	bcf	131,4,b	;volatile
 15907  005B2E                     
 15908                           ; BSR set to: 57
 15909                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR3bits.U1RXIP = 0;
 15910  005B2E  9783               	bcf	131,3,b	;volatile
 15911  005B30                     
 15912                           ; BSR set to: 57
 15913                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR1bits.SMT1PWAIP = 1;
 15914  005B30  8F81               	bsf	129,7,b	;volatile
 15915  005B32                     
 15916                           ; BSR set to: 57
 15917                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR1bits.SMT1IP = 1;
 15918  005B32  8B81               	bsf	129,5,b	;volatile
 15919  005B34                     
 15920                           ; BSR set to: 57
 15921                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR1bits.SMT1PRAIP = 1;
 15922  005B34  8D81               	bsf	129,6,b	;volatile
 15923  005B36                     
 15924                           ; BSR set to: 57
 15925                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR10bits.CCP4IP = 1;
 15926  005B36  818A               	bsf	138,0,b	;volatile
 15927  005B38                     
 15928                           ; BSR set to: 57
 15929                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR8bits.TMR5GIP = 1;
 15930  005B38  8F88               	bsf	136,7,b	;volatile
 15931  005B3A                     
 15932                           ; BSR set to: 57
 15933                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR7bits.TMR4IP = 0;
 15934  005B3A  9187               	bcf	135,0,b	;volatile
 15935  005B3C                     
 15936                           ; BSR set to: 57
 15937                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR9bits.CCP3IP = 1;
 15938  005B3C  8389               	bsf	137,1,b	;volatile
 15939  005B3E                     
 15940                           ; BSR set to: 57
 15941  005B3E  0012               	return		;funcret
 15942  005B40                     __end_of_INTERRUPT_Initialize:
 15943                           	callstack 0
 15944                           
 15945 ;; *************** function _CLC3_Initialize *****************
 15946 ;; Defined at:
 15947 ;;		line 58 in file "mcc_generated_files/clc3.c"
 15948 ;; Parameters:    Size  Location     Type
 15949 ;;		None
 15950 ;; Auto vars:     Size  Location     Type
 15951 ;;		None
 15952 ;; Return value:  Size  Location     Type
 15953 ;;                  1    wreg      void 
 15954 ;; Registers used:
 15955 ;;		wreg, status,2
 15956 ;; Tracked objects:
 15957 ;;		On entry : 0/0
 15958 ;;		On exit  : 0/0
 15959 ;;		Unchanged: 0/0
 15960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15964 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15965 ;;Total ram usage:        0 bytes
 15966 ;; Hardware stack levels used: 1
 15967 ;; Hardware stack levels required when called: 8
 15968 ;; This function calls:
 15969 ;;		Nothing
 15970 ;; This function is called by:
 15971 ;;		_SYSTEM_Initialize
 15972 ;; This function uses a non-reentrant model
 15973 ;;
 15974                           
 15975                           	psect	text76
 15976  0061F0                     __ptext76:
 15977                           	callstack 0
 15978  0061F0                     _CLC3_Initialize:
 15979                           	callstack 21
 15980  0061F0                     
 15981                           ;mcc_generated_files/clc3.c: 63:     CLC3POL = 0x00;
 15982  0061F0  0E00               	movlw	0
 15983  0061F2  013C               	movlb	60	; () banked
 15984  0061F4  6F61               	movwf	97,b	;volatile
 15985                           
 15986                           ;mcc_generated_files/clc3.c: 65:     CLC3SEL0 = 0x03;
 15987  0061F6  0E03               	movlw	3
 15988  0061F8  6F62               	movwf	98,b	;volatile
 15989                           
 15990                           ;mcc_generated_files/clc3.c: 67:     CLC3SEL1 = 0x02;
 15991  0061FA  0E02               	movlw	2
 15992  0061FC  6F63               	movwf	99,b	;volatile
 15993                           
 15994                           ;mcc_generated_files/clc3.c: 69:     CLC3SEL2 = 0x00;
 15995  0061FE  0E00               	movlw	0
 15996  006200  6F64               	movwf	100,b	;volatile
 15997                           
 15998                           ;mcc_generated_files/clc3.c: 71:     CLC3SEL3 = 0x00;
 15999  006202  0E00               	movlw	0
 16000  006204  6F65               	movwf	101,b	;volatile
 16001                           
 16002                           ;mcc_generated_files/clc3.c: 73:     CLC3GLS0 = 0x02;
 16003  006206  0E02               	movlw	2
 16004  006208  6F66               	movwf	102,b	;volatile
 16005                           
 16006                           ;mcc_generated_files/clc3.c: 75:     CLC3GLS1 = 0x08;
 16007  00620A  0E08               	movlw	8
 16008  00620C  6F67               	movwf	103,b	;volatile
 16009                           
 16010                           ;mcc_generated_files/clc3.c: 77:     CLC3GLS2 = 0x00;
 16011  00620E  0E00               	movlw	0
 16012  006210  6F68               	movwf	104,b	;volatile
 16013                           
 16014                           ;mcc_generated_files/clc3.c: 79:     CLC3GLS3 = 0x00;
 16015  006212  0E00               	movlw	0
 16016  006214  6F69               	movwf	105,b	;volatile
 16017                           
 16018                           ;mcc_generated_files/clc3.c: 81:     CLC3CON = 0x85;
 16019  006216  0E85               	movlw	133
 16020  006218  6F60               	movwf	96,b	;volatile
 16021  00621A                     
 16022                           ; BSR set to: 60
 16023  00621A  0012               	return		;funcret
 16024  00621C                     __end_of_CLC3_Initialize:
 16025                           	callstack 0
 16026                           
 16027 ;; *************** function _CCP4_Initialize *****************
 16028 ;; Defined at:
 16029 ;;		line 78 in file "mcc_generated_files/ccp4.c"
 16030 ;; Parameters:    Size  Location     Type
 16031 ;;		None
 16032 ;; Auto vars:     Size  Location     Type
 16033 ;;		None
 16034 ;; Return value:  Size  Location     Type
 16035 ;;                  1    wreg      void 
 16036 ;; Registers used:
 16037 ;;		wreg, status,2, status,0, cstack
 16038 ;; Tracked objects:
 16039 ;;		On entry : 0/0
 16040 ;;		On exit  : 0/0
 16041 ;;		Unchanged: 0/0
 16042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16046 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16047 ;;Total ram usage:        0 bytes
 16048 ;; Hardware stack levels used: 1
 16049 ;; Hardware stack levels required when called: 9
 16050 ;; This function calls:
 16051 ;;		_CCP4_SetCallBack
 16052 ;; This function is called by:
 16053 ;;		_SYSTEM_Initialize
 16054 ;; This function uses a non-reentrant model
 16055 ;;
 16056                           
 16057                           	psect	text77
 16058  00613A                     __ptext77:
 16059                           	callstack 0
 16060  00613A                     _CCP4_Initialize:
 16061                           	callstack 20
 16062  00613A                     
 16063                           ;mcc_generated_files/ccp4.c: 83:  CCP4CON = 0x83;
 16064  00613A  0E83               	movlw	131
 16065  00613C  6E72               	movwf	114,c	;volatile
 16066                           
 16067                           ;mcc_generated_files/ccp4.c: 86:  CCP4CAP = 0x00;
 16068  00613E  0E00               	movlw	0
 16069  006140  6E73               	movwf	115,c	;volatile
 16070                           
 16071                           ;mcc_generated_files/ccp4.c: 89:  CCPR4H = 0x00;
 16072  006142  0E00               	movlw	0
 16073  006144  6E71               	movwf	113,c	;volatile
 16074                           
 16075                           ;mcc_generated_files/ccp4.c: 92:  CCPR4L = 0x00;
 16076  006146  0E00               	movlw	0
 16077  006148  6E70               	movwf	112,c	;volatile
 16078  00614A                     
 16079                           ;mcc_generated_files/ccp4.c: 95:     CCP4_SetCallBack(CCP4_DefaultCallBack);
 16080  00614A  0E36               	movlw	low _CCP4_DefaultCallBack
 16081  00614C  6E14               	movwf	CCP4_SetCallBack@customCallBack^0,c
 16082  00614E  0E5F               	movlw	high _CCP4_DefaultCallBack
 16083  006150  6E15               	movwf	(CCP4_SetCallBack@customCallBack+1)^0,c
 16084  006152  EC28  F032         	call	_CCP4_SetCallBack	;wreg free
 16085  006156                     
 16086                           ;mcc_generated_files/ccp4.c: 98:  CCPTMRS0bits.C4TSEL = 0x2;
 16087  006156  013F               	movlb	63	; () banked
 16088  006158  515E               	movf	94,w,b	;volatile
 16089  00615A  0B3F               	andlw	-193
 16090  00615C  0980               	iorlw	128
 16091  00615E  6F5E               	movwf	94,b	;volatile
 16092  006160                     
 16093                           ; BSR set to: 63
 16094                           ;mcc_generated_files/ccp4.c: 101:     PIR10bits.CCP4IF = 0;
 16095  006160  0139               	movlb	57	; () banked
 16096  006162  91AA               	bcf	170,0,b	;volatile
 16097  006164                     
 16098                           ; BSR set to: 57
 16099                           ;mcc_generated_files/ccp4.c: 104:     PIE10bits.CCP4IE = 1;
 16100  006164  819A               	bsf	154,0,b	;volatile
 16101  006166                     
 16102                           ; BSR set to: 57
 16103  006166  0012               	return		;funcret
 16104  006168                     __end_of_CCP4_Initialize:
 16105                           	callstack 0
 16106                           
 16107 ;; *************** function _CCP4_SetCallBack *****************
 16108 ;; Defined at:
 16109 ;;		line 75 in file "mcc_generated_files/ccp4.c"
 16110 ;; Parameters:    Size  Location     Type
 16111 ;;  customCallBa    2   19[COMRAM] PTR FTN(unsigned short ,
 16112 ;;		 -> CCP4_DefaultCallBack(1), 
 16113 ;; Auto vars:     Size  Location     Type
 16114 ;;		None
 16115 ;; Return value:  Size  Location     Type
 16116 ;;                  1    wreg      void 
 16117 ;; Registers used:
 16118 ;;		wreg, status,2, status,0
 16119 ;; Tracked objects:
 16120 ;;		On entry : 0/0
 16121 ;;		On exit  : 0/0
 16122 ;;		Unchanged: 0/0
 16123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16124 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16127 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16128 ;;Total ram usage:        2 bytes
 16129 ;; Hardware stack levels used: 1
 16130 ;; Hardware stack levels required when called: 8
 16131 ;; This function calls:
 16132 ;;		Nothing
 16133 ;; This function is called by:
 16134 ;;		_CCP4_Initialize
 16135 ;; This function uses a non-reentrant model
 16136 ;;
 16137                           
 16138                           	psect	text78
 16139  006450                     __ptext78:
 16140                           	callstack 0
 16141  006450                     _CCP4_SetCallBack:
 16142                           	callstack 20
 16143  006450                     
 16144                           ;mcc_generated_files/ccp4.c: 76:     CCP4_CallBack = customCallBack;
 16145  006450  C014  F19D         	movff	CCP4_SetCallBack@customCallBack,_CCP4_CallBack
 16146  006454  C015  F19E         	movff	CCP4_SetCallBack@customCallBack+1,_CCP4_CallBack+1
 16147  006458  0012               	return		;funcret
 16148  00645A                     __end_of_CCP4_SetCallBack:
 16149                           	callstack 0
 16150                           
 16151 ;; *************** function _CCP3_Initialize *****************
 16152 ;; Defined at:
 16153 ;;		line 75 in file "mcc_generated_files/ccp3.c"
 16154 ;; Parameters:    Size  Location     Type
 16155 ;;		None
 16156 ;; Auto vars:     Size  Location     Type
 16157 ;;		None
 16158 ;; Return value:  Size  Location     Type
 16159 ;;                  1    wreg      void 
 16160 ;; Registers used:
 16161 ;;		wreg, status,2, status,0, cstack
 16162 ;; Tracked objects:
 16163 ;;		On entry : 0/0
 16164 ;;		On exit  : 0/0
 16165 ;;		Unchanged: 0/0
 16166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16170 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16171 ;;Total ram usage:        0 bytes
 16172 ;; Hardware stack levels used: 1
 16173 ;; Hardware stack levels required when called: 9
 16174 ;; This function calls:
 16175 ;;		_CCP3_SetCallBack
 16176 ;; This function is called by:
 16177 ;;		_SYSTEM_Initialize
 16178 ;; This function uses a non-reentrant model
 16179 ;;
 16180                           
 16181                           	psect	text79
 16182  006168                     __ptext79:
 16183                           	callstack 0
 16184  006168                     _CCP3_Initialize:
 16185                           	callstack 20
 16186  006168                     
 16187                           ;mcc_generated_files/ccp3.c: 80:  CCP3CON = 0x83;
 16188  006168  0E83               	movlw	131
 16189  00616A  6E76               	movwf	118,c	;volatile
 16190                           
 16191                           ;mcc_generated_files/ccp3.c: 83:  CCP3CAP = 0x00;
 16192  00616C  0E00               	movlw	0
 16193  00616E  6E77               	movwf	119,c	;volatile
 16194                           
 16195                           ;mcc_generated_files/ccp3.c: 86:  CCPR3H = 0x00;
 16196  006170  0E00               	movlw	0
 16197  006172  6E75               	movwf	117,c	;volatile
 16198                           
 16199                           ;mcc_generated_files/ccp3.c: 89:  CCPR3L = 0x00;
 16200  006174  0E00               	movlw	0
 16201  006176  6E74               	movwf	116,c	;volatile
 16202  006178                     
 16203                           ;mcc_generated_files/ccp3.c: 92:     CCP3_SetCallBack(CCP3_DefaultCallBack);
 16204  006178  0E00               	movlw	low _CCP3_DefaultCallBack
 16205  00617A  6E14               	movwf	CCP3_SetCallBack@customCallBack^0,c
 16206  00617C  0E5F               	movlw	high _CCP3_DefaultCallBack
 16207  00617E  6E15               	movwf	(CCP3_SetCallBack@customCallBack+1)^0,c
 16208  006180  EC2D  F032         	call	_CCP3_SetCallBack	;wreg free
 16209  006184                     
 16210                           ;mcc_generated_files/ccp3.c: 95:  CCPTMRS0bits.C3TSEL = 0x2;
 16211  006184  013F               	movlb	63	; () banked
 16212  006186  515E               	movf	94,w,b	;volatile
 16213  006188  0BCF               	andlw	-49
 16214  00618A  0920               	iorlw	32
 16215  00618C  6F5E               	movwf	94,b	;volatile
 16216  00618E                     
 16217                           ; BSR set to: 63
 16218                           ;mcc_generated_files/ccp3.c: 98:     PIR9bits.CCP3IF = 0;
 16219  00618E  0139               	movlb	57	; () banked
 16220  006190  93A9               	bcf	169,1,b	;volatile
 16221  006192                     
 16222                           ; BSR set to: 57
 16223                           ;mcc_generated_files/ccp3.c: 101:     PIE9bits.CCP3IE = 1;
 16224  006192  8399               	bsf	153,1,b	;volatile
 16225  006194                     
 16226                           ; BSR set to: 57
 16227  006194  0012               	return		;funcret
 16228  006196                     __end_of_CCP3_Initialize:
 16229                           	callstack 0
 16230                           
 16231 ;; *************** function _CCP3_SetCallBack *****************
 16232 ;; Defined at:
 16233 ;;		line 119 in file "mcc_generated_files/ccp3.c"
 16234 ;; Parameters:    Size  Location     Type
 16235 ;;  customCallBa    2   19[COMRAM] PTR FTN(unsigned short ,
 16236 ;;		 -> CCP3_DefaultCallBack(1), 
 16237 ;; Auto vars:     Size  Location     Type
 16238 ;;		None
 16239 ;; Return value:  Size  Location     Type
 16240 ;;                  1    wreg      void 
 16241 ;; Registers used:
 16242 ;;		wreg, status,2, status,0
 16243 ;; Tracked objects:
 16244 ;;		On entry : 0/0
 16245 ;;		On exit  : 0/0
 16246 ;;		Unchanged: 0/0
 16247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16248 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16251 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16252 ;;Total ram usage:        2 bytes
 16253 ;; Hardware stack levels used: 1
 16254 ;; Hardware stack levels required when called: 8
 16255 ;; This function calls:
 16256 ;;		Nothing
 16257 ;; This function is called by:
 16258 ;;		_CCP3_Initialize
 16259 ;; This function uses a non-reentrant model
 16260 ;;
 16261                           
 16262                           	psect	text80
 16263  00645A                     __ptext80:
 16264                           	callstack 0
 16265  00645A                     _CCP3_SetCallBack:
 16266                           	callstack 20
 16267  00645A                     
 16268                           ;mcc_generated_files/ccp3.c: 120:     CCP3_CallBack = customCallBack;
 16269  00645A  C014  F19F         	movff	CCP3_SetCallBack@customCallBack,_CCP3_CallBack
 16270  00645E  C015  F1A0         	movff	CCP3_SetCallBack@customCallBack+1,_CCP3_CallBack+1
 16271  006462  0012               	return		;funcret
 16272  006464                     __end_of_CCP3_SetCallBack:
 16273                           	callstack 0
 16274                           
 16275 ;; *************** function _ADCC_Initialize *****************
 16276 ;; Defined at:
 16277 ;;		line 62 in file "mcc_generated_files/adcc.c"
 16278 ;; Parameters:    Size  Location     Type
 16279 ;;		None
 16280 ;; Auto vars:     Size  Location     Type
 16281 ;;		None
 16282 ;; Return value:  Size  Location     Type
 16283 ;;                  1    wreg      void 
 16284 ;; Registers used:
 16285 ;;		wreg, status,2
 16286 ;; Tracked objects:
 16287 ;;		On entry : 0/0
 16288 ;;		On exit  : 0/0
 16289 ;;		Unchanged: 0/0
 16290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16294 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16295 ;;Total ram usage:        0 bytes
 16296 ;; Hardware stack levels used: 1
 16297 ;; Hardware stack levels required when called: 8
 16298 ;; This function calls:
 16299 ;;		Nothing
 16300 ;; This function is called by:
 16301 ;;		_SYSTEM_Initialize
 16302 ;; This function uses a non-reentrant model
 16303 ;;
 16304                           
 16305                           	psect	text81
 16306  005A44                     __ptext81:
 16307                           	callstack 0
 16308  005A44                     _ADCC_Initialize:
 16309                           	callstack 21
 16310  005A44                     
 16311                           ;mcc_generated_files/adcc.c: 66:     ADLTHL = 0x00;
 16312  005A44  0E00               	movlw	0
 16313  005A46  013E               	movlb	62	; () banked
 16314  005A48  6FDE               	movwf	222,b	;volatile
 16315                           
 16316                           ;mcc_generated_files/adcc.c: 68:     ADLTHH = 0x00;
 16317  005A4A  0E00               	movlw	0
 16318  005A4C  6FDF               	movwf	223,b	;volatile
 16319                           
 16320                           ;mcc_generated_files/adcc.c: 70:     ADUTHL = 0x00;
 16321  005A4E  0E00               	movlw	0
 16322  005A50  6FE0               	movwf	224,b	;volatile
 16323                           
 16324                           ;mcc_generated_files/adcc.c: 72:     ADUTHH = 0x00;
 16325  005A52  0E00               	movlw	0
 16326  005A54  6FE1               	movwf	225,b	;volatile
 16327                           
 16328                           ;mcc_generated_files/adcc.c: 74:     ADSTPTL = 0x00;
 16329  005A56  0E00               	movlw	0
 16330  005A58  6FE4               	movwf	228,b	;volatile
 16331                           
 16332                           ;mcc_generated_files/adcc.c: 76:     ADSTPTH = 0x00;
 16333  005A5A  0E00               	movlw	0
 16334  005A5C  6FE5               	movwf	229,b	;volatile
 16335                           
 16336                           ;mcc_generated_files/adcc.c: 78:     ADACCU = 0x00;
 16337  005A5E  0E00               	movlw	0
 16338  005A60  6FEA               	movwf	234,b	;volatile
 16339                           
 16340                           ;mcc_generated_files/adcc.c: 80:     ADRPT = 0x00;
 16341  005A62  0E00               	movlw	0
 16342  005A64  6FEC               	movwf	236,b	;volatile
 16343                           
 16344                           ;mcc_generated_files/adcc.c: 82:     ADPCH = 0x00;
 16345  005A66  0E00               	movlw	0
 16346  005A68  6FF1               	movwf	241,b	;volatile
 16347                           
 16348                           ;mcc_generated_files/adcc.c: 84:     ADACQL = 0x58;
 16349  005A6A  0E58               	movlw	88
 16350  005A6C  6FF3               	movwf	243,b	;volatile
 16351                           
 16352                           ;mcc_generated_files/adcc.c: 86:     ADACQH = 0x02;
 16353  005A6E  0E02               	movlw	2
 16354  005A70  6FF4               	movwf	244,b	;volatile
 16355                           
 16356                           ;mcc_generated_files/adcc.c: 88:     ADCAP = 0x00;
 16357  005A72  0E00               	movlw	0
 16358  005A74  6FF5               	movwf	245,b	;volatile
 16359                           
 16360                           ;mcc_generated_files/adcc.c: 90:     ADPREL = 0x00;
 16361  005A76  0E00               	movlw	0
 16362  005A78  6FF6               	movwf	246,b	;volatile
 16363                           
 16364                           ;mcc_generated_files/adcc.c: 92:     ADPREH = 0x00;
 16365  005A7A  0E00               	movlw	0
 16366  005A7C  6FF7               	movwf	247,b	;volatile
 16367                           
 16368                           ;mcc_generated_files/adcc.c: 94:     ADCON1 = 0x00;
 16369  005A7E  0E00               	movlw	0
 16370  005A80  6FF9               	movwf	249,b	;volatile
 16371                           
 16372                           ;mcc_generated_files/adcc.c: 96:     ADCON2 = 0x00;
 16373  005A82  0E00               	movlw	0
 16374  005A84  6FFA               	movwf	250,b	;volatile
 16375                           
 16376                           ;mcc_generated_files/adcc.c: 98:     ADCON3 = 0x00;
 16377  005A86  0E00               	movlw	0
 16378  005A88  6FFB               	movwf	251,b	;volatile
 16379                           
 16380                           ;mcc_generated_files/adcc.c: 100:     ADSTAT = 0x00;
 16381  005A8A  0E00               	movlw	0
 16382  005A8C  6FFC               	movwf	252,b	;volatile
 16383                           
 16384                           ;mcc_generated_files/adcc.c: 102:     ADREF = 0x00;
 16385  005A8E  0E00               	movlw	0
 16386  005A90  6FFD               	movwf	253,b	;volatile
 16387                           
 16388                           ;mcc_generated_files/adcc.c: 104:     ADACT = 0x00;
 16389  005A92  0E00               	movlw	0
 16390  005A94  6FFE               	movwf	254,b	;volatile
 16391                           
 16392                           ;mcc_generated_files/adcc.c: 106:     ADCLK = 0x1F;
 16393  005A96  0E1F               	movlw	31
 16394  005A98  6FFF               	movwf	255,b	;volatile
 16395                           
 16396                           ;mcc_generated_files/adcc.c: 108:     ADCON0 = 0x84;
 16397  005A9A  0E84               	movlw	132
 16398  005A9C  6FF8               	movwf	248,b	;volatile
 16399  005A9E                     
 16400                           ; BSR set to: 62
 16401  005A9E  0012               	return		;funcret
 16402  005AA0                     __end_of_ADCC_Initialize:
 16403                           	callstack 0
 16404                           
 16405 ;; *************** function _UART1_tx_vect_isr *****************
 16406 ;; Defined at:
 16407 ;;		line 235 in file "mcc_generated_files/uart1.c"
 16408 ;; Parameters:    Size  Location     Type
 16409 ;;		None
 16410 ;; Auto vars:     Size  Location     Type
 16411 ;;		None
 16412 ;; Return value:  Size  Location     Type
 16413 ;;                  1    wreg      void 
 16414 ;; Registers used:
 16415 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 16416 ;; Tracked objects:
 16417 ;;		On entry : 0/0
 16418 ;;		On exit  : 0/0
 16419 ;;		Unchanged: 0/0
 16420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16423 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16424 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16425 ;;Total ram usage:        1 bytes
 16426 ;; Hardware stack levels used: 1
 16427 ;; Hardware stack levels required when called: 5
 16428 ;; This function calls:
 16429 ;;		Absolute function
 16430 ;;		_UART1_Transmit_ISR
 16431 ;; This function is called by:
 16432 ;;		Interrupt level 1
 16433 ;; This function uses a non-reentrant model
 16434 ;;
 16435                           
 16436                           	psect	text82
 16437  005DAC                     __ptext82:
 16438                           	callstack 0
 16439  005DAC                     _UART1_tx_vect_isr:
 16440                           	callstack 14
 16441                           
 16442                           ; BSR set to: 62
 16443                           ;incstack = 0
 16444  005DAC  006F FF60  F011    	movff	status,??_UART1_tx_vect_isr
 16445  005DB2                     
 16446                           ;mcc_generated_files/uart1.c: 237:     if(UART1_TxInterruptHandler)
 16447  005DB2  0101               	movlb	1	; () banked
 16448  005DB4  51A7               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 16449  005DB6  11A8               	iorwf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 16450  005DB8  B4D8               	btfsc	status,2,c
 16451  005DBA  EFE1  F02E         	goto	i1u746_21
 16452  005DBE  EFE3  F02E         	goto	i1u746_20
 16453  005DC2                     i1u746_21:
 16454  005DC2  EFEF  F02E         	goto	i1l324
 16455  005DC6                     i1u746_20:
 16456  005DC6                     
 16457                           ; BSR set to: 1
 16458                           ;mcc_generated_files/uart1.c: 238:     {;mcc_generated_files/uart1.c: 239:         UART1
      +                          _TxInterruptHandler();
 16459  005DC6  D802               	call	i1u747_28
 16460  005DC8  EFEF  F02E         	goto	i1u747_29
 16461  005DCC                     i1u747_28:
 16462  005DCC  0005               	push	
 16463  005DCE  6EFA               	movwf	pclath,c
 16464  005DD0  51A7               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 16465  005DD2  6EFD               	movwf	tosl,c
 16466  005DD4  51A8               	movf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 16467  005DD6  6EFE               	movwf	tosh,c
 16468  005DD8  6AFF               	clrf	tosu,c
 16469  005DDA  50FA               	movf	pclath,w,c
 16470  005DDC  0012               	return		;indir
 16471  005DDE                     i1u747_29:
 16472  005DDE                     i1l324:
 16473  005DDE  0060  F047  FFD8   	movff	??_UART1_tx_vect_isr,status
 16474  005DE4  0011               	retfie		f
 16475  005DE6                     __end_of_UART1_tx_vect_isr:
 16476                           	callstack 0
 16477                           
 16478 ;; *************** function _UART1_Transmit_ISR *****************
 16479 ;; Defined at:
 16480 ;;		line 253 in file "mcc_generated_files/uart1.c"
 16481 ;; Parameters:    Size  Location     Type
 16482 ;;		None
 16483 ;; Auto vars:     Size  Location     Type
 16484 ;;		None
 16485 ;; Return value:  Size  Location     Type
 16486 ;;                  1    wreg      void 
 16487 ;; Registers used:
 16488 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16489 ;; Tracked objects:
 16490 ;;		On entry : 0/0
 16491 ;;		On exit  : 0/0
 16492 ;;		Unchanged: 0/0
 16493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16497 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16498 ;;Total ram usage:        0 bytes
 16499 ;; Hardware stack levels used: 1
 16500 ;; Hardware stack levels required when called: 4
 16501 ;; This function calls:
 16502 ;;		Nothing
 16503 ;; This function is called by:
 16504 ;;		_UART1_Initialize
 16505 ;;		_UART1_tx_vect_isr
 16506 ;; This function uses a non-reentrant model
 16507 ;;
 16508                           
 16509                           	psect	text83
 16510  005C66                     __ptext83:
 16511                           	callstack 0
 16512  005C66                     _UART1_Transmit_ISR:
 16513                           	callstack 14
 16514  005C66                     
 16515                           ;mcc_generated_files/uart1.c: 256:     if(sizeof(uart1TxBuffer) > uart1TxBufferRemaining
      +                          )
 16516  005C66  0E08               	movlw	8
 16517  005C68  0101               	movlb	1	; () banked
 16518  005C6A  61AB               	cpfslt	_uart1TxBufferRemaining& (0+255),b	;volatile
 16519  005C6C  EF3A  F02E         	goto	i1u727_21
 16520  005C70  EF3C  F02E         	goto	i1u727_20
 16521  005C74                     i1u727_21:
 16522  005C74  EF54  F02E         	goto	i1l333
 16523  005C78                     i1u727_20:
 16524  005C78                     
 16525                           ; BSR set to: 1
 16526                           ;mcc_generated_files/uart1.c: 257:     {;mcc_generated_files/uart1.c: 258:         U1TXB
      +                           = uart1TxBuffer[uart1TxTail++];
 16527  005C78  0E10               	movlw	low _uart1TxBuffer
 16528  005C7A  2447               	addwf	_uart1TxTail^0,w,c	;volatile
 16529  005C7C  6ED9               	movwf	fsr2l,c
 16530  005C7E  6ADA               	clrf	fsr2h,c
 16531  005C80  0E01               	movlw	high _uart1TxBuffer
 16532  005C82  22DA               	addwfc	fsr2h,f,c
 16533  005C84  50DF               	movf	indf2,w,c
 16534  005C86  013D               	movlb	61	; () banked
 16535  005C88  6FEA               	movwf	234,b	;volatile
 16536  005C8A                     
 16537                           ; BSR set to: 61
 16538  005C8A  2A47               	incf	_uart1TxTail^0,f,c	;volatile
 16539  005C8C                     
 16540                           ; BSR set to: 61
 16541                           ;mcc_generated_files/uart1.c: 259:        if(sizeof(uart1TxBuffer) <= uart1TxTail)
 16542  005C8C  0E07               	movlw	7
 16543  005C8E  6447               	cpfsgt	_uart1TxTail^0,c	;volatile
 16544  005C90  EF4C  F02E         	goto	i1u728_21
 16545  005C94  EF4E  F02E         	goto	i1u728_20
 16546  005C98                     i1u728_21:
 16547  005C98  EF50  F02E         	goto	i1l7368
 16548  005C9C                     i1u728_20:
 16549  005C9C                     
 16550                           ; BSR set to: 61
 16551                           ;mcc_generated_files/uart1.c: 260:         {;mcc_generated_files/uart1.c: 261:          
      +                             uart1TxTail = 0;
 16552  005C9C  0E00               	movlw	0
 16553  005C9E  6E47               	movwf	_uart1TxTail^0,c	;volatile
 16554  005CA0                     i1l7368:
 16555                           
 16556                           ; BSR set to: 61
 16557                           ;mcc_generated_files/uart1.c: 263:         uart1TxBufferRemaining++;
 16558  005CA0  0101               	movlb	1	; () banked
 16559  005CA2  2BAB               	incf	_uart1TxBufferRemaining& (0+255),f,b	;volatile
 16560                           
 16561                           ;mcc_generated_files/uart1.c: 264:     }
 16562  005CA4  EF56  F02E         	goto	i1l336
 16563  005CA8                     i1l333:
 16564                           
 16565                           ; BSR set to: 1
 16566                           ;mcc_generated_files/uart1.c: 266:     {;mcc_generated_files/uart1.c: 267:         PIE3b
      +                          its.U1TXIE = 0;
 16567  005CA8  0139               	movlb	57	; () banked
 16568  005CAA  9993               	bcf	147,4,b	;volatile
 16569  005CAC                     i1l336:
 16570  005CAC  0012               	return		;funcret
 16571  005CAE                     __end_of_UART1_Transmit_ISR:
 16572                           	callstack 0
 16573                           
 16574 ;; *************** function _UART1_rx_vect_isr *****************
 16575 ;; Defined at:
 16576 ;;		line 243 in file "mcc_generated_files/uart1.c"
 16577 ;; Parameters:    Size  Location     Type
 16578 ;;		None
 16579 ;; Auto vars:     Size  Location     Type
 16580 ;;		None
 16581 ;; Return value:  Size  Location     Type
 16582 ;;                  1    wreg      void 
 16583 ;; Registers used:
 16584 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 16585 ;; Tracked objects:
 16586 ;;		On entry : 0/0
 16587 ;;		On exit  : 0/0
 16588 ;;		Unchanged: 0/0
 16589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16592 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16593 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16594 ;;Total ram usage:        1 bytes
 16595 ;; Hardware stack levels used: 1
 16596 ;; Hardware stack levels required when called: 7
 16597 ;; This function calls:
 16598 ;;		Absolute function
 16599 ;;		_UART1_Receive_ISR
 16600 ;; This function is called by:
 16601 ;;		Interrupt level 1
 16602 ;; This function uses a non-reentrant model
 16603 ;;
 16604                           
 16605                           	psect	text84
 16606  005DE8                     __ptext84:
 16607                           	callstack 0
 16608  005DE8                     _UART1_rx_vect_isr:
 16609                           	callstack 12
 16610                           
 16611                           ;incstack = 0
 16612  005DE8  006F FF60  F012    	movff	status,??_UART1_rx_vect_isr
 16613  005DEE                     
 16614                           ;mcc_generated_files/uart1.c: 245:     if(UART1_RxInterruptHandler)
 16615  005DEE  0101               	movlb	1	; () banked
 16616  005DF0  51A9               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 16617  005DF2  11AA               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 16618  005DF4  B4D8               	btfsc	status,2,c
 16619  005DF6  EFFF  F02E         	goto	i1u748_21
 16620  005DFA  EF01  F02F         	goto	i1u748_20
 16621  005DFE                     i1u748_21:
 16622  005DFE  EF0D  F02F         	goto	i1l330
 16623  005E02                     i1u748_20:
 16624  005E02                     
 16625                           ; BSR set to: 1
 16626                           ;mcc_generated_files/uart1.c: 246:     {;mcc_generated_files/uart1.c: 247:         UART1
      +                          _RxInterruptHandler();
 16627  005E02  D802               	call	i1u749_28
 16628  005E04  EF0D  F02F         	goto	i1u749_29
 16629  005E08                     i1u749_28:
 16630  005E08  0005               	push	
 16631  005E0A  6EFA               	movwf	pclath,c
 16632  005E0C  51A9               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 16633  005E0E  6EFD               	movwf	tosl,c
 16634  005E10  51AA               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 16635  005E12  6EFE               	movwf	tosh,c
 16636  005E14  6AFF               	clrf	tosu,c
 16637  005E16  50FA               	movf	pclath,w,c
 16638  005E18  0012               	return		;indir
 16639  005E1A                     i1u749_29:
 16640  005E1A                     i1l330:
 16641  005E1A  0060  F04B  FFD8   	movff	??_UART1_rx_vect_isr,status
 16642  005E20  0011               	retfie		f
 16643  005E22                     __end_of_UART1_rx_vect_isr:
 16644                           	callstack 0
 16645                           
 16646 ;; *************** function _UART1_Receive_ISR *****************
 16647 ;; Defined at:
 16648 ;;		line 273 in file "mcc_generated_files/uart1.c"
 16649 ;; Parameters:    Size  Location     Type
 16650 ;;		None
 16651 ;; Auto vars:     Size  Location     Type
 16652 ;;		None
 16653 ;; Return value:  Size  Location     Type
 16654 ;;                  1    wreg      void 
 16655 ;; Registers used:
 16656 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 16657 ;; Tracked objects:
 16658 ;;		On entry : 0/0
 16659 ;;		On exit  : 0/0
 16660 ;;		Unchanged: 0/0
 16661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16665 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16666 ;;Total ram usage:        0 bytes
 16667 ;; Hardware stack levels used: 1
 16668 ;; Hardware stack levels required when called: 6
 16669 ;; This function calls:
 16670 ;;		Absolute function
 16671 ;;		_UART1_DefaultErrorHandler
 16672 ;;		_UART1_DefaultFramingErrorHandler
 16673 ;;		_UART1_DefaultOverrunErrorHandler
 16674 ;;		_UART1_RxDataHandler
 16675 ;; This function is called by:
 16676 ;;		_UART1_Initialize
 16677 ;;		_UART1_rx_vect_isr
 16678 ;; This function uses a non-reentrant model
 16679 ;;
 16680                           
 16681                           	psect	text85
 16682  0053B8                     __ptext85:
 16683                           	callstack 0
 16684  0053B8                     _UART1_Receive_ISR:
 16685                           	callstack 12
 16686  0053B8                     
 16687                           ;mcc_generated_files/uart1.c: 276:     uart1RxStatusBuffer[uart1RxHead].status = 0;
 16688  0053B8  0E00               	movlw	low _uart1RxStatusBuffer
 16689  0053BA  2446               	addwf	_uart1RxHead^0,w,c	;volatile
 16690  0053BC  6ED9               	movwf	fsr2l,c
 16691  0053BE  6ADA               	clrf	fsr2h,c
 16692  0053C0  0E01               	movlw	high _uart1RxStatusBuffer
 16693  0053C2  22DA               	addwfc	fsr2h,f,c
 16694  0053C4  0E00               	movlw	0
 16695  0053C6  6EDF               	movwf	indf2,c
 16696  0053C8                     
 16697                           ;mcc_generated_files/uart1.c: 278:     if(U1ERRIRbits.FERIF){
 16698  0053C8  013D               	movlb	61	; () banked
 16699  0053CA  A7F9               	btfss	249,3,b	;volatile
 16700  0053CC  EFEA  F029         	goto	i1u729_21
 16701  0053D0  EFEC  F029         	goto	i1u729_20
 16702  0053D4                     i1u729_21:
 16703  0053D4  EF00  F02A         	goto	i1l7378
 16704  0053D8                     i1u729_20:
 16705  0053D8                     
 16706                           ; BSR set to: 61
 16707                           ;mcc_generated_files/uart1.c: 279:         uart1RxStatusBuffer[uart1RxHead].ferr = 1;
 16708  0053D8  0E00               	movlw	low _uart1RxStatusBuffer
 16709  0053DA  2446               	addwf	_uart1RxHead^0,w,c	;volatile
 16710  0053DC  6ED9               	movwf	fsr2l,c
 16711  0053DE  6ADA               	clrf	fsr2h,c
 16712  0053E0  0E01               	movlw	high _uart1RxStatusBuffer
 16713  0053E2  22DA               	addwfc	fsr2h,f,c
 16714  0053E4  0101               	movlb	1	; () banked
 16715  0053E6  82DF               	bsf	indf2,1,c
 16716  0053E8                     
 16717                           ; BSR set to: 1
 16718                           ;mcc_generated_files/uart1.c: 280:         UART1_FramingErrorHandler();
 16719  0053E8  D802               	call	i1u730_28
 16720  0053EA  EF00  F02A         	goto	i1u730_29
 16721  0053EE                     i1u730_28:
 16722  0053EE  0005               	push	
 16723  0053F0  6EFA               	movwf	pclath,c
 16724  0053F2  51A5               	movf	_UART1_FramingErrorHandler& (0+255),w,b
 16725  0053F4  6EFD               	movwf	tosl,c
 16726  0053F6  51A6               	movf	(_UART1_FramingErrorHandler+1)& (0+255),w,b
 16727  0053F8  6EFE               	movwf	tosh,c
 16728  0053FA  6AFF               	clrf	tosu,c
 16729  0053FC  50FA               	movf	pclath,w,c
 16730  0053FE  0012               	return		;indir
 16731  005400                     i1u730_29:
 16732  005400                     i1l7378:
 16733                           
 16734                           ;mcc_generated_files/uart1.c: 283:     if(U1ERRIRbits.RXFOIF){
 16735  005400  013D               	movlb	61	; () banked
 16736  005402  A3F9               	btfss	249,1,b	;volatile
 16737  005404  EF06  F02A         	goto	i1u731_21
 16738  005408  EF08  F02A         	goto	i1u731_20
 16739  00540C                     i1u731_21:
 16740  00540C  EF1C  F02A         	goto	i1l7384
 16741  005410                     i1u731_20:
 16742  005410                     
 16743                           ; BSR set to: 61
 16744                           ;mcc_generated_files/uart1.c: 284:         uart1RxStatusBuffer[uart1RxHead].oerr = 1;
 16745  005410  0E00               	movlw	low _uart1RxStatusBuffer
 16746  005412  2446               	addwf	_uart1RxHead^0,w,c	;volatile
 16747  005414  6ED9               	movwf	fsr2l,c
 16748  005416  6ADA               	clrf	fsr2h,c
 16749  005418  0E01               	movlw	high _uart1RxStatusBuffer
 16750  00541A  22DA               	addwfc	fsr2h,f,c
 16751  00541C  0101               	movlb	1	; () banked
 16752  00541E  84DF               	bsf	indf2,2,c
 16753  005420                     
 16754                           ; BSR set to: 1
 16755                           ;mcc_generated_files/uart1.c: 285:         UART1_OverrunErrorHandler();
 16756  005420  D802               	call	i1u732_28
 16757  005422  EF1C  F02A         	goto	i1u732_29
 16758  005426                     i1u732_28:
 16759  005426  0005               	push	
 16760  005428  6EFA               	movwf	pclath,c
 16761  00542A  51A3               	movf	_UART1_OverrunErrorHandler& (0+255),w,b
 16762  00542C  6EFD               	movwf	tosl,c
 16763  00542E  51A4               	movf	(_UART1_OverrunErrorHandler+1)& (0+255),w,b
 16764  005430  6EFE               	movwf	tosh,c
 16765  005432  6AFF               	clrf	tosu,c
 16766  005434  50FA               	movf	pclath,w,c
 16767  005436  0012               	return		;indir
 16768  005438                     i1u732_29:
 16769  005438                     i1l7384:
 16770                           
 16771                           ;mcc_generated_files/uart1.c: 288:     if(uart1RxStatusBuffer[uart1RxHead].status){
 16772  005438  0E00               	movlw	low _uart1RxStatusBuffer
 16773  00543A  2446               	addwf	_uart1RxHead^0,w,c	;volatile
 16774  00543C  6ED9               	movwf	fsr2l,c
 16775  00543E  6ADA               	clrf	fsr2h,c
 16776  005440  0E01               	movlw	high _uart1RxStatusBuffer
 16777  005442  22DA               	addwfc	fsr2h,f,c
 16778  005444  50DF               	movf	indf2,w,c
 16779  005446  B4D8               	btfsc	status,2,c
 16780  005448  EF28  F02A         	goto	i1u733_21
 16781  00544C  EF2A  F02A         	goto	i1u733_20
 16782  005450                     i1u733_21:
 16783  005450  EF39  F02A         	goto	i1l7388
 16784  005454                     i1u733_20:
 16785  005454                     
 16786                           ;mcc_generated_files/uart1.c: 289:         UART1_ErrorHandler();
 16787  005454  D802               	call	i1u734_28
 16788  005456  EF37  F02A         	goto	i1u734_29
 16789  00545A                     i1u734_28:
 16790  00545A  0005               	push	
 16791  00545C  6EFA               	movwf	pclath,c
 16792  00545E  0101               	movlb	1	; () banked
 16793  005460  51A1               	movf	_UART1_ErrorHandler& (0+255),w,b
 16794  005462  6EFD               	movwf	tosl,c
 16795  005464  51A2               	movf	(_UART1_ErrorHandler+1)& (0+255),w,b
 16796  005466  6EFE               	movwf	tosh,c
 16797  005468  6AFF               	clrf	tosu,c
 16798  00546A  50FA               	movf	pclath,w,c
 16799  00546C  0012               	return		;indir
 16800  00546E                     i1u734_29:
 16801                           
 16802                           ;mcc_generated_files/uart1.c: 290:     } else {
 16803  00546E  EF3B  F02A         	goto	i1l343
 16804  005472                     i1l7388:
 16805                           
 16806                           ;mcc_generated_files/uart1.c: 291:         UART1_RxDataHandler();
 16807  005472  EC0E  F031         	call	_UART1_RxDataHandler	;wreg free
 16808  005476                     i1l343:
 16809  005476  0012               	return		;funcret
 16810  005478                     __end_of_UART1_Receive_ISR:
 16811                           	callstack 0
 16812                           
 16813 ;; *************** function _UART1_DefaultOverrunErrorHandler *****************
 16814 ;; Defined at:
 16815 ;;		line 309 in file "mcc_generated_files/uart1.c"
 16816 ;; Parameters:    Size  Location     Type
 16817 ;;		None
 16818 ;; Auto vars:     Size  Location     Type
 16819 ;;		None
 16820 ;; Return value:  Size  Location     Type
 16821 ;;                  1    wreg      void 
 16822 ;; Registers used:
 16823 ;;		None
 16824 ;; Tracked objects:
 16825 ;;		On entry : 0/0
 16826 ;;		On exit  : 0/0
 16827 ;;		Unchanged: 0/0
 16828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16832 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16833 ;;Total ram usage:        0 bytes
 16834 ;; Hardware stack levels used: 1
 16835 ;; Hardware stack levels required when called: 4
 16836 ;; This function calls:
 16837 ;;		Nothing
 16838 ;; This function is called by:
 16839 ;;		_UART1_Initialize
 16840 ;;		_UART1_Receive_ISR
 16841 ;; This function uses a non-reentrant model
 16842 ;;
 16843                           
 16844                           	psect	text86
 16845  006474                     __ptext86:
 16846                           	callstack 0
 16847  006474                     _UART1_DefaultOverrunErrorHandler:
 16848                           	callstack 13
 16849  006474  0012               	return		;funcret
 16850  006476                     __end_of_UART1_DefaultOverrunErrorHandler:
 16851                           	callstack 0
 16852                           
 16853 ;; *************** function _UART1_DefaultFramingErrorHandler *****************
 16854 ;; Defined at:
 16855 ;;		line 307 in file "mcc_generated_files/uart1.c"
 16856 ;; Parameters:    Size  Location     Type
 16857 ;;		None
 16858 ;; Auto vars:     Size  Location     Type
 16859 ;;		None
 16860 ;; Return value:  Size  Location     Type
 16861 ;;                  1    wreg      void 
 16862 ;; Registers used:
 16863 ;;		None
 16864 ;; Tracked objects:
 16865 ;;		On entry : 0/0
 16866 ;;		On exit  : 0/0
 16867 ;;		Unchanged: 0/0
 16868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16872 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16873 ;;Total ram usage:        0 bytes
 16874 ;; Hardware stack levels used: 1
 16875 ;; Hardware stack levels required when called: 4
 16876 ;; This function calls:
 16877 ;;		Nothing
 16878 ;; This function is called by:
 16879 ;;		_UART1_Initialize
 16880 ;;		_UART1_Receive_ISR
 16881 ;; This function uses a non-reentrant model
 16882 ;;
 16883                           
 16884                           	psect	text87
 16885  006476                     __ptext87:
 16886                           	callstack 0
 16887  006476                     _UART1_DefaultFramingErrorHandler:
 16888                           	callstack 13
 16889  006476  0012               	return		;funcret
 16890  006478                     __end_of_UART1_DefaultFramingErrorHandler:
 16891                           	callstack 0
 16892                           
 16893 ;; *************** function _UART1_DefaultErrorHandler *****************
 16894 ;; Defined at:
 16895 ;;		line 311 in file "mcc_generated_files/uart1.c"
 16896 ;; Parameters:    Size  Location     Type
 16897 ;;		None
 16898 ;; Auto vars:     Size  Location     Type
 16899 ;;		None
 16900 ;; Return value:  Size  Location     Type
 16901 ;;                  1    wreg      void 
 16902 ;; Registers used:
 16903 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16904 ;; Tracked objects:
 16905 ;;		On entry : 0/0
 16906 ;;		On exit  : 0/0
 16907 ;;		Unchanged: 0/0
 16908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16912 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16913 ;;Total ram usage:        0 bytes
 16914 ;; Hardware stack levels used: 1
 16915 ;; Hardware stack levels required when called: 5
 16916 ;; This function calls:
 16917 ;;		_UART1_RxDataHandler
 16918 ;; This function is called by:
 16919 ;;		_UART1_Initialize
 16920 ;;		_UART1_Receive_ISR
 16921 ;; This function uses a non-reentrant model
 16922 ;;
 16923                           
 16924                           	psect	text88
 16925  00646E                     __ptext88:
 16926                           	callstack 0
 16927  00646E                     _UART1_DefaultErrorHandler:
 16928                           	callstack 12
 16929  00646E                     
 16930                           ;mcc_generated_files/uart1.c: 312:     UART1_RxDataHandler();
 16931  00646E  EC0E  F031         	call	_UART1_RxDataHandler	;wreg free
 16932  006472  0012               	return		;funcret
 16933  006474                     __end_of_UART1_DefaultErrorHandler:
 16934                           	callstack 0
 16935                           
 16936 ;; *************** function _UART1_RxDataHandler *****************
 16937 ;; Defined at:
 16938 ;;		line 297 in file "mcc_generated_files/uart1.c"
 16939 ;; Parameters:    Size  Location     Type
 16940 ;;		None
 16941 ;; Auto vars:     Size  Location     Type
 16942 ;;		None
 16943 ;; Return value:  Size  Location     Type
 16944 ;;                  1    wreg      void 
 16945 ;; Registers used:
 16946 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16947 ;; Tracked objects:
 16948 ;;		On entry : 0/0
 16949 ;;		On exit  : 0/0
 16950 ;;		Unchanged: 0/0
 16951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16955 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16956 ;;Total ram usage:        0 bytes
 16957 ;; Hardware stack levels used: 1
 16958 ;; Hardware stack levels required when called: 4
 16959 ;; This function calls:
 16960 ;;		Nothing
 16961 ;; This function is called by:
 16962 ;;		_UART1_Receive_ISR
 16963 ;;		_UART1_DefaultErrorHandler
 16964 ;; This function uses a non-reentrant model
 16965 ;;
 16966                           
 16967                           	psect	text89
 16968  00621C                     __ptext89:
 16969                           	callstack 0
 16970  00621C                     _UART1_RxDataHandler:
 16971                           	callstack 13
 16972  00621C                     
 16973                           ;mcc_generated_files/uart1.c: 299:     uart1RxBuffer[uart1RxHead++] = U1RXB;
 16974  00621C  0E08               	movlw	low _uart1RxBuffer
 16975  00621E  2446               	addwf	_uart1RxHead^0,w,c	;volatile
 16976  006220  6ED9               	movwf	fsr2l,c
 16977  006222  6ADA               	clrf	fsr2h,c
 16978  006224  0E01               	movlw	high _uart1RxBuffer
 16979  006226  22DA               	addwfc	fsr2h,f,c
 16980  006228  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 16981  00622E  2A46               	incf	_uart1RxHead^0,f,c	;volatile
 16982  006230                     
 16983                           ;mcc_generated_files/uart1.c: 300:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 16984  006230  0E07               	movlw	7
 16985  006232  6446               	cpfsgt	_uart1RxHead^0,c	;volatile
 16986  006234  EF1E  F031         	goto	i1u664_21
 16987  006238  EF20  F031         	goto	i1u664_20
 16988  00623C                     i1u664_21:
 16989  00623C  EF22  F031         	goto	i1l6754
 16990  006240                     i1u664_20:
 16991  006240                     
 16992                           ;mcc_generated_files/uart1.c: 301:     {;mcc_generated_files/uart1.c: 302:         uart1
      +                          RxHead = 0;
 16993  006240  0E00               	movlw	0
 16994  006242  6E46               	movwf	_uart1RxHead^0,c	;volatile
 16995  006244                     i1l6754:
 16996                           
 16997                           ;mcc_generated_files/uart1.c: 304:     uart1RxCount++;
 16998  006244  2A44               	incf	_uart1RxCount^0,f,c	;volatile
 16999  006246  0012               	return		;funcret
 17000  006248                     __end_of_UART1_RxDataHandler:
 17001                           	callstack 0
 17002                           
 17003 ;; *************** function _TMR4_ISR *****************
 17004 ;; Defined at:
 17005 ;;		line 166 in file "mcc_generated_files/tmr4.c"
 17006 ;; Parameters:    Size  Location     Type
 17007 ;;		None
 17008 ;; Auto vars:     Size  Location     Type
 17009 ;;		None
 17010 ;; Return value:  Size  Location     Type
 17011 ;;                  1    wreg      void 
 17012 ;; Registers used:
 17013 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 17014 ;; Tracked objects:
 17015 ;;		On entry : 0/0
 17016 ;;		On exit  : 0/0
 17017 ;;		Unchanged: 0/0
 17018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17021 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17022 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17023 ;;Total ram usage:        1 bytes
 17024 ;; Hardware stack levels used: 1
 17025 ;; Hardware stack levels required when called: 6
 17026 ;; This function calls:
 17027 ;;		_TMR4_CallBack
 17028 ;; This function is called by:
 17029 ;;		Interrupt level 1
 17030 ;; This function uses a non-reentrant model
 17031 ;;
 17032                           
 17033                           	psect	text90
 17034  005D34                     __ptext90:
 17035                           	callstack 0
 17036  005D34                     _TMR4_ISR:
 17037                           	callstack 13
 17038                           
 17039                           ;incstack = 0
 17040  005D34  006F FF60  F013    	movff	status,??_TMR4_ISR
 17041  005D3A                     
 17042                           ;mcc_generated_files/tmr4.c: 168:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr4.c: 171:     PIR7bits.TMR4IF = 0;
 17043  005D3A  0139               	movlb	57	; () banked
 17044  005D3C  91A7               	bcf	167,0,b	;volatile
 17045  005D3E                     
 17046                           ; BSR set to: 57
 17047                           ;mcc_generated_files/tmr4.c: 174:     if (++CountCallBack >= 10)
 17048  005D3E  0101               	movlb	1	; () banked
 17049  005D40  4B3E               	infsnz	TMR4_ISR@CountCallBack& (0+255),f,b	;volatile
 17050  005D42  2B3F               	incf	(TMR4_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 17051  005D44  513F               	movf	(TMR4_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 17052  005D46  E109               	bnz	i1u754_20
 17053  005D48  0E0A               	movlw	10
 17054  005D4A  5D3E               	subwf	TMR4_ISR@CountCallBack& (0+255),w,b	;volatile
 17055  005D4C  A0D8               	btfss	status,0,c
 17056  005D4E  EFAB  F02E         	goto	i1u754_21
 17057  005D52  EFAD  F02E         	goto	i1u754_20
 17058  005D56                     i1u754_21:
 17059  005D56  EFB4  F02E         	goto	i1l688
 17060  005D5A                     i1u754_20:
 17061  005D5A                     
 17062                           ; BSR set to: 1
 17063                           ;mcc_generated_files/tmr4.c: 175:     {;mcc_generated_files/tmr4.c: 177:         TMR4_Ca
      +                          llBack();
 17064  005D5A  ECCB  F030         	call	_TMR4_CallBack	;wreg free
 17065  005D5E                     
 17066                           ;mcc_generated_files/tmr4.c: 180:         CountCallBack = 0;
 17067  005D5E  0E00               	movlw	0
 17068  005D60  0101               	movlb	1	; () banked
 17069  005D62  6F3F               	movwf	(TMR4_ISR@CountCallBack+1)& (0+255),b	;volatile
 17070  005D64  0E00               	movlw	0
 17071  005D66  6F3E               	movwf	TMR4_ISR@CountCallBack& (0+255),b	;volatile
 17072  005D68                     i1l688:
 17073                           
 17074                           ; BSR set to: 1
 17075  005D68  0060  F04F  FFD8   	movff	??_TMR4_ISR,status
 17076  005D6E  0011               	retfie		f
 17077  005D70                     __end_of_TMR4_ISR:
 17078                           	callstack 0
 17079                           
 17080 ;; *************** function _TMR4_CallBack *****************
 17081 ;; Defined at:
 17082 ;;		line 184 in file "mcc_generated_files/tmr4.c"
 17083 ;; Parameters:    Size  Location     Type
 17084 ;;		None
 17085 ;; Auto vars:     Size  Location     Type
 17086 ;;		None
 17087 ;; Return value:  Size  Location     Type
 17088 ;;                  1    wreg      void 
 17089 ;; Registers used:
 17090 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 17091 ;; Tracked objects:
 17092 ;;		On entry : 0/0
 17093 ;;		On exit  : 0/0
 17094 ;;		Unchanged: 0/0
 17095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17099 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17100 ;;Total ram usage:        0 bytes
 17101 ;; Hardware stack levels used: 1
 17102 ;; Hardware stack levels required when called: 5
 17103 ;; This function calls:
 17104 ;;		Absolute function
 17105 ;;		_TMR4_10msISR
 17106 ;;		_TMR4_DefaultInterruptHandler
 17107 ;; This function is called by:
 17108 ;;		_TMR4_ISR
 17109 ;; This function uses a non-reentrant model
 17110 ;;
 17111                           
 17112                           	psect	text91
 17113  006196                     __ptext91:
 17114                           	callstack 0
 17115  006196                     _TMR4_CallBack:
 17116                           	callstack 13
 17117  006196                     
 17118                           ;mcc_generated_files/tmr4.c: 188:     if(TMR4_InterruptHandler)
 17119  006196  0101               	movlb	1	; () banked
 17120  006198  5195               	movf	_TMR4_InterruptHandler& (0+255),w,b
 17121  00619A  1196               	iorwf	(_TMR4_InterruptHandler+1)& (0+255),w,b
 17122  00619C  B4D8               	btfsc	status,2,c
 17123  00619E  EFD3  F030         	goto	i1u738_21
 17124  0061A2  EFD5  F030         	goto	i1u738_20
 17125  0061A6                     i1u738_21:
 17126  0061A6  EFE1  F030         	goto	i1l692
 17127  0061AA                     i1u738_20:
 17128  0061AA                     
 17129                           ; BSR set to: 1
 17130                           ;mcc_generated_files/tmr4.c: 189:     {;mcc_generated_files/tmr4.c: 190:         TMR4_In
      +                          terruptHandler();
 17131  0061AA  D802               	call	i1u739_28
 17132  0061AC  EFE1  F030         	goto	i1u739_29
 17133  0061B0                     i1u739_28:
 17134  0061B0  0005               	push	
 17135  0061B2  6EFA               	movwf	pclath,c
 17136  0061B4  5195               	movf	_TMR4_InterruptHandler& (0+255),w,b
 17137  0061B6  6EFD               	movwf	tosl,c
 17138  0061B8  5196               	movf	(_TMR4_InterruptHandler+1)& (0+255),w,b
 17139  0061BA  6EFE               	movwf	tosh,c
 17140  0061BC  6AFF               	clrf	tosu,c
 17141  0061BE  50FA               	movf	pclath,w,c
 17142  0061C0  0012               	return		;indir
 17143  0061C2                     i1u739_29:
 17144  0061C2                     i1l692:
 17145  0061C2  0012               	return		;funcret
 17146  0061C4                     __end_of_TMR4_CallBack:
 17147                           	callstack 0
 17148                           
 17149 ;; *************** function _TMR4_10msISR *****************
 17150 ;; Defined at:
 17151 ;;		line 68 in file "main.c"
 17152 ;; Parameters:    Size  Location     Type
 17153 ;;		None
 17154 ;; Auto vars:     Size  Location     Type
 17155 ;;		None
 17156 ;; Return value:  Size  Location     Type
 17157 ;;                  1    wreg      void 
 17158 ;; Registers used:
 17159 ;;		status,2, status,0
 17160 ;; Tracked objects:
 17161 ;;		On entry : 0/0
 17162 ;;		On exit  : 0/0
 17163 ;;		Unchanged: 0/0
 17164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17168 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17169 ;;Total ram usage:        0 bytes
 17170 ;; Hardware stack levels used: 1
 17171 ;; Hardware stack levels required when called: 4
 17172 ;; This function calls:
 17173 ;;		Nothing
 17174 ;; This function is called by:
 17175 ;;		_main
 17176 ;;		_TMR4_CallBack
 17177 ;; This function uses a non-reentrant model
 17178 ;;
 17179                           
 17180                           	psect	text92
 17181  006464                     __ptext92:
 17182                           	callstack 0
 17183  006464                     _TMR4_10msISR:
 17184                           	callstack 13
 17185  006464                     
 17186                           ;main.c: 69:     ++cycle10ms;
 17187  006464  0100               	movlb	0	; () banked
 17188  006466  2BFA               	incf	_cycle10ms& (0+255),f,b	;volatile
 17189                           
 17190                           ;main.c: 70:     ++roundTimeCount;
 17191  006468  4BF3               	infsnz	_roundTimeCount& (0+255),f,b	;volatile
 17192  00646A  2BF4               	incf	(_roundTimeCount+1)& (0+255),f,b	;volatile
 17193  00646C                     
 17194                           ; BSR set to: 0
 17195  00646C  0012               	return		;funcret
 17196  00646E                     __end_of_TMR4_10msISR:
 17197                           	callstack 0
 17198                           
 17199 ;; *************** function _TMR4_DefaultInterruptHandler *****************
 17200 ;; Defined at:
 17201 ;;		line 198 in file "mcc_generated_files/tmr4.c"
 17202 ;; Parameters:    Size  Location     Type
 17203 ;;		None
 17204 ;; Auto vars:     Size  Location     Type
 17205 ;;		None
 17206 ;; Return value:  Size  Location     Type
 17207 ;;                  1    wreg      void 
 17208 ;; Registers used:
 17209 ;;		None
 17210 ;; Tracked objects:
 17211 ;;		On entry : 0/0
 17212 ;;		On exit  : 0/0
 17213 ;;		Unchanged: 0/0
 17214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17218 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17219 ;;Total ram usage:        0 bytes
 17220 ;; Hardware stack levels used: 1
 17221 ;; Hardware stack levels required when called: 4
 17222 ;; This function calls:
 17223 ;;		Nothing
 17224 ;; This function is called by:
 17225 ;;		_TMR4_Initialize
 17226 ;;		_TMR4_CallBack
 17227 ;; This function uses a non-reentrant model
 17228 ;;
 17229                           
 17230                           	psect	text93
 17231  006478                     __ptext93:
 17232                           	callstack 0
 17233  006478                     _TMR4_DefaultInterruptHandler:
 17234                           	callstack 13
 17235  006478  0012               	return		;funcret
 17236  00647A                     __end_of_TMR4_DefaultInterruptHandler:
 17237                           	callstack 0
 17238                           
 17239 ;; *************** function _Default_ISR *****************
 17240 ;; Defined at:
 17241 ;;		line 83 in file "mcc_generated_files/interrupt_manager.c"
 17242 ;; Parameters:    Size  Location     Type
 17243 ;;		None
 17244 ;; Auto vars:     Size  Location     Type
 17245 ;;		None
 17246 ;; Return value:  Size  Location     Type
 17247 ;;                  1    wreg      void 
 17248 ;; Registers used:
 17249 ;;		None
 17250 ;; Tracked objects:
 17251 ;;		On entry : 0/0
 17252 ;;		On exit  : 0/0
 17253 ;;		Unchanged: 0/0
 17254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17258 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17259 ;;Total ram usage:        0 bytes
 17260 ;; Hardware stack levels used: 1
 17261 ;; This function calls:
 17262 ;;		Nothing
 17263 ;; This function is called by:
 17264 ;;		Interrupt level 2
 17265 ;; This function uses a non-reentrant model
 17266 ;;
 17267                           
 17268                           	psect	text94
 17269  00647C                     __ptext94:
 17270                           	callstack 0
 17271  00647C                     _Default_ISR:
 17272                           	callstack 15
 17273  00647C  0011               	retfie		f
 17274  00647E                     __end_of_Default_ISR:
 17275                           	callstack 0
 17276                           
 17277 ;; *************** function _CCP3_CaptureISR *****************
 17278 ;; Defined at:
 17279 ;;		line 104 in file "mcc_generated_files/ccp3.c"
 17280 ;; Parameters:    Size  Location     Type
 17281 ;;		None
 17282 ;; Auto vars:     Size  Location     Type
 17283 ;;  module          2    2[COMRAM] struct CCPR3Reg_tag
 17284 ;; Return value:  Size  Location     Type
 17285 ;;                  1    wreg      void 
 17286 ;; Registers used:
 17287 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 17288 ;; Tracked objects:
 17289 ;;		On entry : 0/0
 17290 ;;		On exit  : 0/0
 17291 ;;		Unchanged: 0/0
 17292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17294 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17296 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17297 ;;Total ram usage:        2 bytes
 17298 ;; Hardware stack levels used: 1
 17299 ;; Hardware stack levels required when called: 1
 17300 ;; This function calls:
 17301 ;;		Absolute function
 17302 ;;		_CCP3_DefaultCallBack
 17303 ;; This function is called by:
 17304 ;;		Interrupt level 2
 17305 ;; This function uses a non-reentrant model
 17306 ;;
 17307                           
 17308                           	psect	text95
 17309  00603C                     __ptext95:
 17310                           	callstack 0
 17311  00603C                     _CCP3_CaptureISR:
 17312                           	callstack 14
 17313  00603C                     
 17314                           ;mcc_generated_files/ccp3.c: 106:     CCP3_PERIOD_REG_T module;;mcc_generated_files/ccp3
      +                          .c: 109:     PIR9bits.CCP3IF = 0;
 17315  00603C  0139               	movlb	57	; () banked
 17316  00603E  93A9               	bcf	169,1,b	;volatile
 17317                           
 17318                           ;mcc_generated_files/ccp3.c: 112:     module.ccpr3l = CCPR3L;
 17319  006040  006F FDD0  F003    	movff	16244,CCP3_CaptureISR@module	;volatile
 17320                           
 17321                           ;mcc_generated_files/ccp3.c: 113:     module.ccpr3h = CCPR3H;
 17322  006046  006F FDD4  F004    	movff	16245,CCP3_CaptureISR@module+1	;volatile
 17323  00604C                     
 17324                           ; BSR set to: 57
 17325                           ;mcc_generated_files/ccp3.c: 116:     CCP3_CallBack(module.ccpr3_16Bit);
 17326  00604C  C003  F001         	movff	CCP3_CaptureISR@module,CCP3_DefaultCallBack@capturedValue
 17327  006050  C004  F002         	movff	CCP3_CaptureISR@module+1,CCP3_DefaultCallBack@capturedValue+1
 17328  006054  D802               	call	i2u750_48
 17329  006056  EF37  F030         	goto	i2u750_49
 17330  00605A                     i2u750_48:
 17331  00605A  0005               	push	
 17332  00605C  6EFA               	movwf	pclath,c
 17333  00605E  0101               	movlb	1	; () banked
 17334  006060  519F               	movf	_CCP3_CallBack& (0+255),w,b
 17335  006062  6EFD               	movwf	tosl,c
 17336  006064  51A0               	movf	(_CCP3_CallBack+1)& (0+255),w,b
 17337  006066  6EFE               	movwf	tosh,c
 17338  006068  6AFF               	clrf	tosu,c
 17339  00606A  50FA               	movf	pclath,w,c
 17340  00606C  0012               	return		;indir
 17341  00606E                     i2u750_49:
 17342  00606E  0011               	retfie		f
 17343  006070                     __end_of_CCP3_CaptureISR:
 17344                           	callstack 0
 17345                           
 17346 ;; *************** function _CCP3_DefaultCallBack *****************
 17347 ;; Defined at:
 17348 ;;		line 64 in file "mcc_generated_files/ccp3.c"
 17349 ;; Parameters:    Size  Location     Type
 17350 ;;  capturedValu    2    0[COMRAM] unsigned short 
 17351 ;; Auto vars:     Size  Location     Type
 17352 ;;		None
 17353 ;; Return value:  Size  Location     Type
 17354 ;;                  1    wreg      void 
 17355 ;; Registers used:
 17356 ;;		wreg, status,2, status,0
 17357 ;; Tracked objects:
 17358 ;;		On entry : 0/0
 17359 ;;		On exit  : 0/0
 17360 ;;		Unchanged: 0/0
 17361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17362 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17365 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17366 ;;Total ram usage:        2 bytes
 17367 ;; Hardware stack levels used: 1
 17368 ;; This function calls:
 17369 ;;		Nothing
 17370 ;; This function is called by:
 17371 ;;		_CCP3_Initialize
 17372 ;;		_CCP3_CaptureISR
 17373 ;; This function uses a non-reentrant model
 17374 ;;
 17375                           
 17376                           	psect	text96
 17377  005F00                     __ptext96:
 17378                           	callstack 0
 17379  005F00                     _CCP3_DefaultCallBack:
 17380                           	callstack 14
 17381  005F00                     
 17382                           ;mcc_generated_files/ccp3.c: 64: static void CCP3_DefaultCallBack(uint16_t capturedValue
      +                          );mcc_generated_files/ccp3.c: 65: {;mcc_generated_files/ccp3.c: 67:     if(PORTDbits.RD7
      +                          ) {
 17383  005F00  AECD               	btfss	205,7,c	;volatile
 17384  005F02  EF85  F02F         	goto	i2u735_41
 17385  005F06  EF87  F02F         	goto	i2u735_40
 17386  005F0A                     i2u735_41:
 17387  005F0A  EF8D  F02F         	goto	i2l7394
 17388  005F0E                     i2u735_40:
 17389  005F0E                     
 17390                           ;mcc_generated_files/ccp3.c: 68:         distLeftM = capturedValue;
 17391  005F0E  C001  F142         	movff	CCP3_DefaultCallBack@capturedValue,_distLeftM
 17392  005F12  C002  F143         	movff	CCP3_DefaultCallBack@capturedValue+1,_distLeftM+1
 17393                           
 17394                           ;mcc_generated_files/ccp3.c: 69:     } else {
 17395  005F16  EF9A  F02F         	goto	i2l438
 17396  005F1A                     i2l7394:
 17397                           
 17398                           ;mcc_generated_files/ccp3.c: 70:         distLeft = capturedValue - distLeftM;
 17399  005F1A  0101               	movlb	1	; () banked
 17400  005F1C  5142               	movf	_distLeftM& (0+255),w,b
 17401  005F1E  5C01               	subwf	CCP3_DefaultCallBack@capturedValue^0,w,c
 17402  005F20  0100               	movlb	0	; () banked
 17403  005F22  6FF7               	movwf	_distLeft& (0+255),b	;volatile
 17404  005F24  0101               	movlb	1	; () banked
 17405  005F26  5143               	movf	(_distLeftM+1)& (0+255),w,b
 17406  005F28  5802               	subwfb	(CCP3_DefaultCallBack@capturedValue+1)^0,w,c
 17407  005F2A  0100               	movlb	0	; () banked
 17408  005F2C  6FF8               	movwf	(_distLeft+1)& (0+255),b	;volatile
 17409  005F2E                     
 17410                           ; BSR set to: 0
 17411                           ;mcc_generated_files/ccp3.c: 71:         distLeft >>= 1;
 17412  005F2E  90D8               	bcf	status,0,c
 17413  005F30  33F8               	rrcf	(_distLeft+1)& (0+255),f,b	;volatile
 17414  005F32  33F7               	rrcf	_distLeft& (0+255),f,b	;volatile
 17415  005F34                     i2l438:
 17416  005F34  0012               	return		;funcret
 17417  005F36                     __end_of_CCP3_DefaultCallBack:
 17418                           	callstack 0
 17419                           
 17420 ;; *************** function _CCP4_CaptureISR *****************
 17421 ;; Defined at:
 17422 ;;		line 107 in file "mcc_generated_files/ccp4.c"
 17423 ;; Parameters:    Size  Location     Type
 17424 ;;		None
 17425 ;; Auto vars:     Size  Location     Type
 17426 ;;  module          2    6[COMRAM] struct CCPR4Reg_tag
 17427 ;; Return value:  Size  Location     Type
 17428 ;;                  1    wreg      void 
 17429 ;; Registers used:
 17430 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 17431 ;; Tracked objects:
 17432 ;;		On entry : 0/0
 17433 ;;		On exit  : 0/0
 17434 ;;		Unchanged: 0/0
 17435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17437 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17439 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17440 ;;Total ram usage:        2 bytes
 17441 ;; Hardware stack levels used: 1
 17442 ;; Hardware stack levels required when called: 1
 17443 ;; This function calls:
 17444 ;;		Absolute function
 17445 ;;		_CCP4_DefaultCallBack
 17446 ;; This function is called by:
 17447 ;;		Interrupt level 2
 17448 ;; This function uses a non-reentrant model
 17449 ;;
 17450                           
 17451                           	psect	text97
 17452  006070                     __ptext97:
 17453                           	callstack 0
 17454  006070                     _CCP4_CaptureISR:
 17455                           	callstack 14
 17456  006070                     
 17457                           ;mcc_generated_files/ccp4.c: 109:     CCP4_PERIOD_REG_T module;;mcc_generated_files/ccp4
      +                          .c: 112:     PIR10bits.CCP4IF = 0;
 17458  006070  0139               	movlb	57	; () banked
 17459  006072  91AA               	bcf	170,0,b	;volatile
 17460                           
 17461                           ;mcc_generated_files/ccp4.c: 115:     module.ccpr4l = CCPR4L;
 17462  006074  006F FDC0  F007    	movff	16240,CCP4_CaptureISR@module	;volatile
 17463                           
 17464                           ;mcc_generated_files/ccp4.c: 116:     module.ccpr4h = CCPR4H;
 17465  00607A  006F FDC4  F008    	movff	16241,CCP4_CaptureISR@module+1	;volatile
 17466  006080                     
 17467                           ; BSR set to: 57
 17468                           ;mcc_generated_files/ccp4.c: 119:     CCP4_CallBack(module.ccpr4_16Bit);
 17469  006080  C007  F005         	movff	CCP4_CaptureISR@module,CCP4_DefaultCallBack@capturedValue
 17470  006084  C008  F006         	movff	CCP4_CaptureISR@module+1,CCP4_DefaultCallBack@capturedValue+1
 17471  006088  D802               	call	i2u751_48
 17472  00608A  EF51  F030         	goto	i2u751_49
 17473  00608E                     i2u751_48:
 17474  00608E  0005               	push	
 17475  006090  6EFA               	movwf	pclath,c
 17476  006092  0101               	movlb	1	; () banked
 17477  006094  519D               	movf	_CCP4_CallBack& (0+255),w,b
 17478  006096  6EFD               	movwf	tosl,c
 17479  006098  519E               	movf	(_CCP4_CallBack+1)& (0+255),w,b
 17480  00609A  6EFE               	movwf	tosh,c
 17481  00609C  6AFF               	clrf	tosu,c
 17482  00609E  50FA               	movf	pclath,w,c
 17483  0060A0  0012               	return		;indir
 17484  0060A2                     i2u751_49:
 17485  0060A2  0011               	retfie		f
 17486  0060A4                     __end_of_CCP4_CaptureISR:
 17487                           	callstack 0
 17488                           
 17489 ;; *************** function _CCP4_DefaultCallBack *****************
 17490 ;; Defined at:
 17491 ;;		line 64 in file "mcc_generated_files/ccp4.c"
 17492 ;; Parameters:    Size  Location     Type
 17493 ;;  capturedValu    2    4[COMRAM] unsigned short 
 17494 ;; Auto vars:     Size  Location     Type
 17495 ;;		None
 17496 ;; Return value:  Size  Location     Type
 17497 ;;                  1    wreg      void 
 17498 ;; Registers used:
 17499 ;;		wreg, status,2, status,0
 17500 ;; Tracked objects:
 17501 ;;		On entry : 0/0
 17502 ;;		On exit  : 0/0
 17503 ;;		Unchanged: 0/0
 17504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17505 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17508 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17509 ;;Total ram usage:        2 bytes
 17510 ;; Hardware stack levels used: 1
 17511 ;; This function calls:
 17512 ;;		Nothing
 17513 ;; This function is called by:
 17514 ;;		_CCP4_Initialize
 17515 ;;		_CCP4_CaptureISR
 17516 ;; This function uses a non-reentrant model
 17517 ;;
 17518                           
 17519                           	psect	text98
 17520  005F36                     __ptext98:
 17521                           	callstack 0
 17522  005F36                     _CCP4_DefaultCallBack:
 17523                           	callstack 14
 17524  005F36                     
 17525                           ;mcc_generated_files/ccp4.c: 64: static void CCP4_DefaultCallBack(uint16_t capturedValue
      +                          );mcc_generated_files/ccp4.c: 65: {;mcc_generated_files/ccp4.c: 67:     if(PORTDbits.RD6
      +                          ) {
 17526  005F36  ACCD               	btfss	205,6,c	;volatile
 17527  005F38  EFA0  F02F         	goto	i2u736_41
 17528  005F3C  EFA2  F02F         	goto	i2u736_40
 17529  005F40                     i2u736_41:
 17530  005F40  EFA8  F02F         	goto	i2l7402
 17531  005F44                     i2u736_40:
 17532  005F44                     
 17533                           ;mcc_generated_files/ccp4.c: 68:         distRightM = capturedValue;
 17534  005F44  C005  F140         	movff	CCP4_DefaultCallBack@capturedValue,_distRightM
 17535  005F48  C006  F141         	movff	CCP4_DefaultCallBack@capturedValue+1,_distRightM+1
 17536                           
 17537                           ;mcc_generated_files/ccp4.c: 70:     } else {
 17538  005F4C  EFB5  F02F         	goto	i2l476
 17539  005F50                     i2l7402:
 17540                           
 17541                           ;mcc_generated_files/ccp4.c: 71:         distRight = capturedValue - distRightM;
 17542  005F50  0101               	movlb	1	; () banked
 17543  005F52  5140               	movf	_distRightM& (0+255),w,b
 17544  005F54  5C05               	subwf	CCP4_DefaultCallBack@capturedValue^0,w,c
 17545  005F56  0100               	movlb	0	; () banked
 17546  005F58  6FF5               	movwf	_distRight& (0+255),b	;volatile
 17547  005F5A  0101               	movlb	1	; () banked
 17548  005F5C  5141               	movf	(_distRightM+1)& (0+255),w,b
 17549  005F5E  5806               	subwfb	(CCP4_DefaultCallBack@capturedValue+1)^0,w,c
 17550  005F60  0100               	movlb	0	; () banked
 17551  005F62  6FF6               	movwf	(_distRight+1)& (0+255),b	;volatile
 17552  005F64                     
 17553                           ; BSR set to: 0
 17554                           ;mcc_generated_files/ccp4.c: 72:         distRight >>= 1;
 17555  005F64  90D8               	bcf	status,0,c
 17556  005F66  33F6               	rrcf	(_distRight+1)& (0+255),f,b	;volatile
 17557  005F68  33F5               	rrcf	_distRight& (0+255),f,b	;volatile
 17558  005F6A                     i2l476:
 17559  005F6A  0012               	return		;funcret
 17560  005F6C                     __end_of_CCP4_DefaultCallBack:
 17561                           	callstack 0
 17562                           
 17563 ;; *************** function _TMR5_GATE_ISR *****************
 17564 ;; Defined at:
 17565 ;;		line 175 in file "mcc_generated_files/tmr5.c"
 17566 ;; Parameters:    Size  Location     Type
 17567 ;;		None
 17568 ;; Auto vars:     Size  Location     Type
 17569 ;;		None
 17570 ;; Return value:  Size  Location     Type
 17571 ;;                  1    wreg      void 
 17572 ;; Registers used:
 17573 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 17574 ;; Tracked objects:
 17575 ;;		On entry : 0/0
 17576 ;;		On exit  : 0/0
 17577 ;;		Unchanged: 0/0
 17578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17582 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17583 ;;Total ram usage:        0 bytes
 17584 ;; Hardware stack levels used: 1
 17585 ;; Hardware stack levels required when called: 3
 17586 ;; This function calls:
 17587 ;;		Absolute function
 17588 ;;		_TMR5_DefaultGateInterruptHandler
 17589 ;; This function is called by:
 17590 ;;		Interrupt level 2
 17591 ;; This function uses a non-reentrant model
 17592 ;;
 17593                           
 17594                           	psect	text99
 17595  0060D8                     __ptext99:
 17596                           	callstack 0
 17597  0060D8                     _TMR5_GATE_ISR:
 17598                           	callstack 12
 17599  0060D8                     
 17600                           ;mcc_generated_files/tmr5.c: 178:     PIR8bits.TMR5GIF = 0;
 17601  0060D8  0139               	movlb	57	; () banked
 17602  0060DA  9FA8               	bcf	168,7,b	;volatile
 17603  0060DC                     
 17604                           ; BSR set to: 57
 17605                           ;mcc_generated_files/tmr5.c: 180:     if(TMR5_GateInterruptHandler)
 17606  0060DC  0101               	movlb	1	; () banked
 17607  0060DE  5199               	movf	_TMR5_GateInterruptHandler& (0+255),w,b
 17608  0060E0  119A               	iorwf	(_TMR5_GateInterruptHandler+1)& (0+255),w,b
 17609  0060E2  B4D8               	btfsc	status,2,c
 17610  0060E4  EF76  F030         	goto	i2u752_41
 17611  0060E8  EF78  F030         	goto	i2u752_40
 17612  0060EC                     i2u752_41:
 17613  0060EC  EF84  F030         	goto	i2l552
 17614  0060F0                     i2u752_40:
 17615  0060F0                     
 17616                           ; BSR set to: 1
 17617                           ;mcc_generated_files/tmr5.c: 181:     {;mcc_generated_files/tmr5.c: 182:         TMR5_Ga
      +                          teInterruptHandler();
 17618  0060F0  D802               	call	i2u753_48
 17619  0060F2  EF84  F030         	goto	i2u753_49
 17620  0060F6                     i2u753_48:
 17621  0060F6  0005               	push	
 17622  0060F8  6EFA               	movwf	pclath,c
 17623  0060FA  5199               	movf	_TMR5_GateInterruptHandler& (0+255),w,b
 17624  0060FC  6EFD               	movwf	tosl,c
 17625  0060FE  519A               	movf	(_TMR5_GateInterruptHandler+1)& (0+255),w,b
 17626  006100  6EFE               	movwf	tosh,c
 17627  006102  6AFF               	clrf	tosu,c
 17628  006104  50FA               	movf	pclath,w,c
 17629  006106  0012               	return		;indir
 17630  006108                     i2u753_49:
 17631  006108                     i2l552:
 17632  006108  0011               	retfie		f
 17633  00610A                     __end_of_TMR5_GATE_ISR:
 17634                           	callstack 0
 17635                           
 17636 ;; *************** function _TMR5_DefaultGateInterruptHandler *****************
 17637 ;; Defined at:
 17638 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 17639 ;; Parameters:    Size  Location     Type
 17640 ;;		None
 17641 ;; Auto vars:     Size  Location     Type
 17642 ;;		None
 17643 ;; Return value:  Size  Location     Type
 17644 ;;                  1    wreg      void 
 17645 ;; Registers used:
 17646 ;;		wreg, status,2, status,0, cstack
 17647 ;; Tracked objects:
 17648 ;;		On entry : 0/0
 17649 ;;		On exit  : 0/0
 17650 ;;		Unchanged: 0/0
 17651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17655 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17656 ;;Total ram usage:        0 bytes
 17657 ;; Hardware stack levels used: 1
 17658 ;; Hardware stack levels required when called: 2
 17659 ;; This function calls:
 17660 ;;		_TMR5_ReadTimer
 17661 ;;		_TMR5_Reload
 17662 ;; This function is called by:
 17663 ;;		_TMR5_Initialize
 17664 ;;		_TMR5_GATE_ISR
 17665 ;; This function uses a non-reentrant model
 17666 ;;
 17667                           
 17668                           	psect	text100
 17669  006330                     __ptext100:
 17670                           	callstack 0
 17671  006330                     _TMR5_DefaultGateInterruptHandler:
 17672                           	callstack 12
 17673  006330                     
 17674                           ;mcc_generated_files/tmr5.c: 194:     distFront = TMR5_ReadTimer();
 17675  006330  EC76  F031         	call	_TMR5_ReadTimer	;wreg free
 17676  006334  C009  F0FD         	movff	?_TMR5_ReadTimer,_distFront	;volatile
 17677  006338  C00A  F0FE         	movff	?_TMR5_ReadTimer+1,_distFront+1	;volatile
 17678  00633C                     
 17679                           ;mcc_generated_files/tmr5.c: 195:     distFront >>= 1;
 17680  00633C  0100               	movlb	0	; () banked
 17681  00633E  90D8               	bcf	status,0,c
 17682  006340  33FE               	rrcf	(_distFront+1)& (0+255),f,b	;volatile
 17683  006342  33FD               	rrcf	_distFront& (0+255),f,b	;volatile
 17684  006344                     
 17685                           ; BSR set to: 0
 17686                           ;mcc_generated_files/tmr5.c: 196:     TMR5_Reload();
 17687  006344  ECF9  F031         	call	_TMR5_Reload	;wreg free
 17688  006348                     
 17689                           ;mcc_generated_files/tmr5.c: 197:     PIR8bits.TMR5GIF = 0;
 17690  006348  0139               	movlb	57	; () banked
 17691  00634A  9FA8               	bcf	168,7,b	;volatile
 17692  00634C                     
 17693                           ; BSR set to: 57
 17694  00634C  0012               	return		;funcret
 17695  00634E                     __end_of_TMR5_DefaultGateInterruptHandler:
 17696                           	callstack 0
 17697                           
 17698 ;; *************** function _TMR5_Reload *****************
 17699 ;; Defined at:
 17700 ;;		line 155 in file "mcc_generated_files/tmr5.c"
 17701 ;; Parameters:    Size  Location     Type
 17702 ;;		None
 17703 ;; Auto vars:     Size  Location     Type
 17704 ;;		None
 17705 ;; Return value:  Size  Location     Type
 17706 ;;                  1    wreg      void 
 17707 ;; Registers used:
 17708 ;;		wreg, status,2, cstack
 17709 ;; Tracked objects:
 17710 ;;		On entry : 0/0
 17711 ;;		On exit  : 0/0
 17712 ;;		Unchanged: 0/0
 17713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17718 ;;Total ram usage:        0 bytes
 17719 ;; Hardware stack levels used: 1
 17720 ;; Hardware stack levels required when called: 1
 17721 ;; This function calls:
 17722 ;;		_TMR5_WriteTimer
 17723 ;; This function is called by:
 17724 ;;		_TMR5_DefaultGateInterruptHandler
 17725 ;; This function uses a non-reentrant model
 17726 ;;
 17727                           
 17728                           	psect	text101
 17729  0063F2                     __ptext101:
 17730                           	callstack 0
 17731  0063F2                     _TMR5_Reload:
 17732                           	callstack 12
 17733  0063F2                     
 17734                           ;mcc_generated_files/tmr5.c: 157:     TMR5_WriteTimer(timer5ReloadVal);
 17735  0063F2  C19B  F009         	movff	_timer5ReloadVal,TMR5_WriteTimer@timerVal	;volatile
 17736  0063F6  C19C  F00A         	movff	_timer5ReloadVal+1,TMR5_WriteTimer@timerVal+1	;volatile
 17737  0063FA  EC24  F031         	call	_TMR5_WriteTimer	;wreg free
 17738  0063FE  0012               	return		;funcret
 17739  006400                     __end_of_TMR5_Reload:
 17740                           	callstack 0
 17741                           
 17742 ;; *************** function _TMR5_WriteTimer *****************
 17743 ;; Defined at:
 17744 ;;		line 133 in file "mcc_generated_files/tmr5.c"
 17745 ;; Parameters:    Size  Location     Type
 17746 ;;  timerVal        2    8[COMRAM] unsigned short 
 17747 ;; Auto vars:     Size  Location     Type
 17748 ;;		None
 17749 ;; Return value:  Size  Location     Type
 17750 ;;                  1    wreg      void 
 17751 ;; Registers used:
 17752 ;;		wreg, status,2
 17753 ;; Tracked objects:
 17754 ;;		On entry : 0/0
 17755 ;;		On exit  : 0/0
 17756 ;;		Unchanged: 0/0
 17757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17758 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17761 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17762 ;;Total ram usage:        2 bytes
 17763 ;; Hardware stack levels used: 1
 17764 ;; This function calls:
 17765 ;;		Nothing
 17766 ;; This function is called by:
 17767 ;;		_TMR5_Reload
 17768 ;; This function uses a non-reentrant model
 17769 ;;
 17770                           
 17771                           	psect	text102
 17772  006248                     __ptext102:
 17773                           	callstack 0
 17774  006248                     _TMR5_WriteTimer:
 17775                           	callstack 12
 17776  006248                     
 17777                           ;mcc_generated_files/tmr5.c: 133: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 134: {;mcc_generated_files/tmr5.c: 135:     if (T5CONbits.NOT_SYNC == 1)
 17778  006248  A49A               	btfss	154,2,c	;volatile
 17779  00624A  EF29  F031         	goto	i2u665_41
 17780  00624E  EF2B  F031         	goto	i2u665_40
 17781  006252                     i2u665_41:
 17782  006252  EF34  F031         	goto	i2l6772
 17783  006256                     i2u665_40:
 17784  006256                     
 17785                           ;mcc_generated_files/tmr5.c: 136:     {;mcc_generated_files/tmr5.c: 138:         T5CONbi
      +                          ts.TMR5ON = 0;
 17786  006256  909A               	bcf	154,0,c	;volatile
 17787  006258                     
 17788                           ;mcc_generated_files/tmr5.c: 141:         TMR5H = (uint8_t)(timerVal >> 8);
 17789  006258  500A               	movf	(TMR5_WriteTimer@timerVal+1)^0,w,c
 17790  00625A  6E99               	movwf	153,c	;volatile
 17791  00625C                     
 17792                           ;mcc_generated_files/tmr5.c: 142:         TMR5L = (uint8_t)timerVal;
 17793  00625C  0060  F027  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
 17794  006262                     
 17795                           ;mcc_generated_files/tmr5.c: 145:         T5CONbits.TMR5ON =1;
 17796  006262  809A               	bsf	154,0,c	;volatile
 17797                           
 17798                           ;mcc_generated_files/tmr5.c: 146:     }
 17799  006264  EF39  F031         	goto	i2l534
 17800  006268                     i2l6772:
 17801                           
 17802                           ;mcc_generated_files/tmr5.c: 148:     {;mcc_generated_files/tmr5.c: 150:         TMR5H =
      +                           (uint8_t)(timerVal >> 8);
 17803  006268  500A               	movf	(TMR5_WriteTimer@timerVal+1)^0,w,c
 17804  00626A  6E99               	movwf	153,c	;volatile
 17805  00626C                     
 17806                           ;mcc_generated_files/tmr5.c: 151:         TMR5L = (uint8_t)timerVal;
 17807  00626C  0060  F027  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
 17808  006272                     i2l534:
 17809  006272  0012               	return		;funcret
 17810  006274                     __end_of_TMR5_WriteTimer:
 17811                           	callstack 0
 17812                           
 17813 ;; *************** function _TMR5_ReadTimer *****************
 17814 ;; Defined at:
 17815 ;;		line 117 in file "mcc_generated_files/tmr5.c"
 17816 ;; Parameters:    Size  Location     Type
 17817 ;;		None
 17818 ;; Auto vars:     Size  Location     Type
 17819 ;;  readVal         2   12[COMRAM] unsigned short 
 17820 ;;  readValLow      1   15[COMRAM] unsigned char 
 17821 ;;  readValHigh     1   14[COMRAM] unsigned char 
 17822 ;; Return value:  Size  Location     Type
 17823 ;;                  2    8[COMRAM] unsigned short 
 17824 ;; Registers used:
 17825 ;;		wreg, status,2
 17826 ;; Tracked objects:
 17827 ;;		On entry : 0/0
 17828 ;;		On exit  : 0/0
 17829 ;;		Unchanged: 0/0
 17830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17831 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17832 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17833 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17834 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17835 ;;Total ram usage:        8 bytes
 17836 ;; Hardware stack levels used: 1
 17837 ;; This function calls:
 17838 ;;		Nothing
 17839 ;; This function is called by:
 17840 ;;		_TMR5_DefaultGateInterruptHandler
 17841 ;; This function uses a non-reentrant model
 17842 ;;
 17843                           
 17844                           	psect	text103
 17845  0062EC                     __ptext103:
 17846                           	callstack 0
 17847  0062EC                     _TMR5_ReadTimer:
 17848                           	callstack 13
 17849  0062EC                     
 17850                           ;mcc_generated_files/tmr5.c: 119:     uint16_t readVal;;mcc_generated_files/tmr5.c: 120:
      +                               uint8_t readValHigh;;mcc_generated_files/tmr5.c: 121:     uint8_t readValLow;;mcc_g
      +                          enerated_files/tmr5.c: 123:     T5CONbits.T5RD16 = 1;
 17851  0062EC  829A               	bsf	154,1,c	;volatile
 17852                           
 17853                           ;mcc_generated_files/tmr5.c: 125:     readValLow = TMR5L;
 17854  0062EE  006F FE60  F010    	movff	16280,TMR5_ReadTimer@readValLow	;volatile
 17855                           
 17856                           ;mcc_generated_files/tmr5.c: 126:     readValHigh = TMR5H;
 17857  0062F4  006F FE64  F00F    	movff	16281,TMR5_ReadTimer@readValHigh	;volatile
 17858  0062FA                     
 17859                           ;mcc_generated_files/tmr5.c: 128:     readVal = ((uint16_t)readValHigh << 8) | readValLo
      +                          w;
 17860  0062FA  500F               	movf	TMR5_ReadTimer@readValHigh^0,w,c
 17861  0062FC  6E0B               	movwf	??_TMR5_ReadTimer^0,c
 17862  0062FE  5010               	movf	TMR5_ReadTimer@readValLow^0,w,c
 17863  006300  6E0D               	movwf	TMR5_ReadTimer@readVal^0,c
 17864  006302  C00B  F00E         	movff	??_TMR5_ReadTimer,TMR5_ReadTimer@readVal+1
 17865  006306                     
 17866                           ;mcc_generated_files/tmr5.c: 130:     return readVal;
 17867  006306  C00D  F009         	movff	TMR5_ReadTimer@readVal,?_TMR5_ReadTimer
 17868  00630A  C00E  F00A         	movff	TMR5_ReadTimer@readVal+1,?_TMR5_ReadTimer+1
 17869  00630E  0012               	return		;funcret
 17870  006310                     __end_of_TMR5_ReadTimer:
 17871                           	callstack 0
 17872                           
 17873 ;; *************** function _SMT1_PR_ACQ_ISR *****************
 17874 ;; Defined at:
 17875 ;;		line 192 in file "mcc_generated_files/smt1.c"
 17876 ;; Parameters:    Size  Location     Type
 17877 ;;		None
 17878 ;; Auto vars:     Size  Location     Type
 17879 ;;		None
 17880 ;; Return value:  Size  Location     Type
 17881 ;;                  1    wreg      void 
 17882 ;; Registers used:
 17883 ;;		wreg, status,2, status,0
 17884 ;; Tracked objects:
 17885 ;;		On entry : 0/0
 17886 ;;		On exit  : 0/0
 17887 ;;		Unchanged: 0/0
 17888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17892 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17893 ;;Total ram usage:        0 bytes
 17894 ;; Hardware stack levels used: 1
 17895 ;; This function calls:
 17896 ;;		Nothing
 17897 ;; This function is called by:
 17898 ;;		Interrupt level 2
 17899 ;; This function uses a non-reentrant model
 17900 ;;
 17901                           
 17902                           	psect	text104
 17903  005BD4                     __ptext104:
 17904                           	callstack 0
 17905  005BD4                     _SMT1_PR_ACQ_ISR:
 17906                           	callstack 15
 17907  005BD4                     
 17908                           ;mcc_generated_files/smt1.c: 196:     PIR1bits.SMT1PRAIF = 0;
 17909  005BD4  0139               	movlb	57	; () banked
 17910  005BD6  9DA1               	bcf	161,6,b	;volatile
 17911  005BD8                     
 17912                           ; BSR set to: 57
 17913                           ;mcc_generated_files/smt1.c: 197:     smtPeriod = SMT1CPR;
 17914  005BD8  013F               	movlb	63	; () banked
 17915  005BDA  5115               	movf	21,w,b	;volatile
 17916  005BDC  6E49               	movwf	_smtPeriod^0,c	;volatile
 17917  005BDE  5116               	movf	22,w,b	;volatile
 17918  005BE0  6E4A               	movwf	(_smtPeriod+1)^0,c	;volatile
 17919  005BE2  5117               	movf	23,w,b	;volatile
 17920  005BE4  6E4B               	movwf	(_smtPeriod+2)^0,c	;volatile
 17921  005BE6  6A4C               	clrf	(_smtPeriod+3)^0,c	;volatile
 17922  005BE8                     
 17923                           ; BSR set to: 63
 17924                           ;mcc_generated_files/smt1.c: 198:     if(CLC3CONbits.LC3OUT) smtWay++;
 17925  005BE8  013C               	movlb	60	; () banked
 17926  005BEA  AB60               	btfss	96,5,b	;volatile
 17927  005BEC  EFFA  F02D         	goto	i2u755_41
 17928  005BF0  EFFC  F02D         	goto	i2u755_40
 17929  005BF4                     i2u755_41:
 17930  005BF4  EF05  F02E         	goto	i2l7508
 17931  005BF8                     i2u755_40:
 17932  005BF8                     
 17933                           ; BSR set to: 60
 17934  005BF8  0E01               	movlw	1
 17935  005BFA  0101               	movlb	1	; () banked
 17936  005BFC  2720               	addwf	_smtWay& (0+255),f,b	;volatile
 17937  005BFE  0E00               	movlw	0
 17938  005C00  2321               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 17939  005C02  2322               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 17940  005C04  2323               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 17941  005C06  EF0E  F02E         	goto	i2l856
 17942  005C0A                     i2l7508:
 17943                           
 17944                           ; BSR set to: 60
 17945  005C0A  0EFF               	movlw	255
 17946  005C0C  0101               	movlb	1	; () banked
 17947  005C0E  2720               	addwf	_smtWay& (0+255),f,b	;volatile
 17948  005C10  0EFF               	movlw	255
 17949  005C12  2321               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 17950  005C14  0EFF               	movlw	255
 17951  005C16  2322               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 17952  005C18  0EFF               	movlw	255
 17953  005C1A  2323               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 17954  005C1C                     i2l856:
 17955                           
 17956                           ; BSR set to: 1
 17957  005C1C  0011               	retfie		f
 17958  005C1E                     __end_of_SMT1_PR_ACQ_ISR:
 17959                           	callstack 0
 17960                           
 17961 ;; *************** function _SMT1_PW_ACQ_ISR *****************
 17962 ;; Defined at:
 17963 ;;		line 203 in file "mcc_generated_files/smt1.c"
 17964 ;; Parameters:    Size  Location     Type
 17965 ;;		None
 17966 ;; Auto vars:     Size  Location     Type
 17967 ;;		None
 17968 ;; Return value:  Size  Location     Type
 17969 ;;                  1    wreg      void 
 17970 ;; Registers used:
 17971 ;;		wreg, status,2, status,0
 17972 ;; Tracked objects:
 17973 ;;		On entry : 0/0
 17974 ;;		On exit  : 0/0
 17975 ;;		Unchanged: 0/0
 17976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17980 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17981 ;;Total ram usage:        0 bytes
 17982 ;; Hardware stack levels used: 1
 17983 ;; This function calls:
 17984 ;;		Nothing
 17985 ;; This function is called by:
 17986 ;;		Interrupt level 2
 17987 ;; This function uses a non-reentrant model
 17988 ;;
 17989                           
 17990                           	psect	text105
 17991  005AA0                     __ptext105:
 17992                           	callstack 0
 17993  005AA0                     _SMT1_PW_ACQ_ISR:
 17994                           	callstack 15
 17995  005AA0                     
 17996                           ;mcc_generated_files/smt1.c: 207:     PIR1bits.SMT1PWAIF = 0;
 17997  005AA0  0139               	movlb	57	; () banked
 17998  005AA2  9FA1               	bcf	161,7,b	;volatile
 17999  005AA4                     
 18000                           ; BSR set to: 57
 18001                           ;mcc_generated_files/smt1.c: 208:     smtDuty = SMT1CPW;
 18002  005AA4  013F               	movlb	63	; () banked
 18003  005AA6  5118               	movf	24,w,b	;volatile
 18004  005AA8  0101               	movlb	1	; () banked
 18005  005AAA  6F24               	movwf	_smtDuty& (0+255),b	;volatile
 18006  005AAC  013F               	movlb	63	; () banked
 18007  005AAE  5119               	movf	25,w,b	;volatile
 18008  005AB0  0101               	movlb	1	; () banked
 18009  005AB2  6F25               	movwf	(_smtDuty+1)& (0+255),b	;volatile
 18010  005AB4  013F               	movlb	63	; () banked
 18011  005AB6  511A               	movf	26,w,b	;volatile
 18012  005AB8  0101               	movlb	1	; () banked
 18013  005ABA  6F26               	movwf	(_smtDuty+2)& (0+255),b	;volatile
 18014  005ABC  6B27               	clrf	(_smtDuty+3)& (0+255),b	;volatile
 18015  005ABE                     
 18016                           ; BSR set to: 1
 18017                           ;mcc_generated_files/smt1.c: 209:     if(CLC3CONbits.LC3OUT) smtWay++;
 18018  005ABE  013C               	movlb	60	; () banked
 18019  005AC0  AB60               	btfss	96,5,b	;volatile
 18020  005AC2  EF65  F02D         	goto	i2u756_41
 18021  005AC6  EF67  F02D         	goto	i2u756_40
 18022  005ACA                     i2u756_41:
 18023  005ACA  EF70  F02D         	goto	i2l7518
 18024  005ACE                     i2u756_40:
 18025  005ACE                     
 18026                           ; BSR set to: 60
 18027  005ACE  0E01               	movlw	1
 18028  005AD0  0101               	movlb	1	; () banked
 18029  005AD2  2720               	addwf	_smtWay& (0+255),f,b	;volatile
 18030  005AD4  0E00               	movlw	0
 18031  005AD6  2321               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 18032  005AD8  2322               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 18033  005ADA  2323               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 18034  005ADC  EF79  F02D         	goto	i2l863
 18035  005AE0                     i2l7518:
 18036                           
 18037                           ; BSR set to: 60
 18038  005AE0  0EFF               	movlw	255
 18039  005AE2  0101               	movlb	1	; () banked
 18040  005AE4  2720               	addwf	_smtWay& (0+255),f,b	;volatile
 18041  005AE6  0EFF               	movlw	255
 18042  005AE8  2321               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 18043  005AEA  0EFF               	movlw	255
 18044  005AEC  2322               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 18045  005AEE  0EFF               	movlw	255
 18046  005AF0  2323               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 18047  005AF2                     i2l863:
 18048                           
 18049                           ; BSR set to: 1
 18050  005AF2  0011               	retfie		f
 18051  005AF4                     __end_of_SMT1_PW_ACQ_ISR:
 18052                           	callstack 0
 18053                           
 18054 ;; *************** function _SMT1_Overflow_ISR *****************
 18055 ;; Defined at:
 18056 ;;		line 213 in file "mcc_generated_files/smt1.c"
 18057 ;; Parameters:    Size  Location     Type
 18058 ;;		None
 18059 ;; Auto vars:     Size  Location     Type
 18060 ;;		None
 18061 ;; Return value:  Size  Location     Type
 18062 ;;                  1    wreg      void 
 18063 ;; Registers used:
 18064 ;;		wreg, status,2
 18065 ;; Tracked objects:
 18066 ;;		On entry : 0/0
 18067 ;;		On exit  : 0/0
 18068 ;;		Unchanged: 0/0
 18069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18073 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18074 ;;Total ram usage:        0 bytes
 18075 ;; Hardware stack levels used: 1
 18076 ;; This function calls:
 18077 ;;		Nothing
 18078 ;; This function is called by:
 18079 ;;		Interrupt level 2
 18080 ;; This function uses a non-reentrant model
 18081 ;;
 18082                           
 18083                           	psect	text106
 18084  0062A0                     __ptext106:
 18085                           	callstack 0
 18086  0062A0                     _SMT1_Overflow_ISR:
 18087                           	callstack 15
 18088  0062A0                     
 18089                           ;mcc_generated_files/smt1.c: 217:     PIR1bits.SMT1IF = 0;
 18090  0062A0  0139               	movlb	57	; () banked
 18091  0062A2  9BA1               	bcf	161,5,b	;volatile
 18092  0062A4                     
 18093                           ; BSR set to: 57
 18094                           ;mcc_generated_files/smt1.c: 218:     smtPeriod = 0;
 18095  0062A4  0E00               	movlw	0
 18096  0062A6  6E49               	movwf	_smtPeriod^0,c	;volatile
 18097  0062A8  0E00               	movlw	0
 18098  0062AA  6E4A               	movwf	(_smtPeriod+1)^0,c	;volatile
 18099  0062AC  0E00               	movlw	0
 18100  0062AE  6E4B               	movwf	(_smtPeriod+2)^0,c	;volatile
 18101  0062B0  0E00               	movlw	0
 18102  0062B2  6E4C               	movwf	(_smtPeriod+3)^0,c	;volatile
 18103                           
 18104                           ;mcc_generated_files/smt1.c: 219:     smtDuty = 0;
 18105  0062B4  0E00               	movlw	0
 18106  0062B6  0101               	movlb	1	; () banked
 18107  0062B8  6F24               	movwf	_smtDuty& (0+255),b	;volatile
 18108  0062BA  0E00               	movlw	0
 18109  0062BC  6F25               	movwf	(_smtDuty+1)& (0+255),b	;volatile
 18110  0062BE  0E00               	movlw	0
 18111  0062C0  6F26               	movwf	(_smtDuty+2)& (0+255),b	;volatile
 18112  0062C2  0E00               	movlw	0
 18113  0062C4  6F27               	movwf	(_smtDuty+3)& (0+255),b	;volatile
 18114  0062C6                     
 18115                           ; BSR set to: 1
 18116  0062C6  0011               	retfie		f
 18117  0062C8                     __end_of_SMT1_Overflow_ISR:
 18118                           	callstack 0
 18119                           
 18120                           ;
 18121                           ; Interrupt Vector Table @ 0x8
 18122                           ;
 18123                           
 18124                           	psect	ivt0x8
 18125  000008                     __pivt0x8:
 18126                           	callstack 0
 18127  000008                     ivt0x8_base:
 18128                           	callstack 0
 18129                           
 18130                           ; Vector 0 : SWINT
 18131  000008  191F               	dw	_Default_ISR shr (0+2)
 18132                           
 18133                           ; Vector 1 : HLVD
 18134  00000A  191F               	dw	_Default_ISR shr (0+2)
 18135                           
 18136                           ; Vector 2 : OSF
 18137  00000C  191F               	dw	_Default_ISR shr (0+2)
 18138                           
 18139                           ; Vector 3 : CSW
 18140  00000E  191F               	dw	_Default_ISR shr (0+2)
 18141                           
 18142                           ; Vector 4 : NVM
 18143  000010  191F               	dw	_Default_ISR shr (0+2)
 18144                           
 18145                           ; Vector 5 : SCAN
 18146  000012  191F               	dw	_Default_ISR shr (0+2)
 18147                           
 18148                           ; Vector 6 : CRC
 18149  000014  191F               	dw	_Default_ISR shr (0+2)
 18150                           
 18151                           ; Vector 7 : IOC
 18152  000016  191F               	dw	_Default_ISR shr (0+2)
 18153                           
 18154                           ; Vector 8 : INT0
 18155  000018  191F               	dw	_Default_ISR shr (0+2)
 18156                           
 18157                           ; Vector 9 : ZCD
 18158  00001A  191F               	dw	_Default_ISR shr (0+2)
 18159                           
 18160                           ; Vector 10 : AD
 18161  00001C  191F               	dw	_Default_ISR shr (0+2)
 18162                           
 18163                           ; Vector 11 : ADT
 18164  00001E  191F               	dw	_Default_ISR shr (0+2)
 18165                           
 18166                           ; Vector 12 : CMP1
 18167  000020  191F               	dw	_Default_ISR shr (0+2)
 18168                           
 18169                           ; Vector 13 : SMT1
 18170  000022  18A8               	dw	_SMT1_Overflow_ISR shr (0+2)
 18171                           
 18172                           ; Vector 14 : SMT1PRA
 18173  000024  16F5               	dw	_SMT1_PR_ACQ_ISR shr (0+2)
 18174                           
 18175                           ; Vector 15 : SMT1PRW
 18176  000026  16A8               	dw	_SMT1_PW_ACQ_ISR shr (0+2)
 18177                           
 18178                           ; Vector 16 : DMA1SCNT
 18179  000028  191F               	dw	_Default_ISR shr (0+2)
 18180                           
 18181                           ; Vector 17 : DMA1DCNT
 18182  00002A  191F               	dw	_Default_ISR shr (0+2)
 18183                           
 18184                           ; Vector 18 : DMA1OR
 18185  00002C  191F               	dw	_Default_ISR shr (0+2)
 18186                           
 18187                           ; Vector 19 : DMA1A
 18188  00002E  191F               	dw	_Default_ISR shr (0+2)
 18189                           
 18190                           ; Vector 20 : SPI1RX
 18191  000030  191F               	dw	_Default_ISR shr (0+2)
 18192                           
 18193                           ; Vector 21 : SPI1TX
 18194  000032  191F               	dw	_Default_ISR shr (0+2)
 18195                           
 18196                           ; Vector 22 : SPI1
 18197  000034  191F               	dw	_Default_ISR shr (0+2)
 18198                           
 18199                           ; Vector 23 : I2C1RX
 18200  000036  191F               	dw	_Default_ISR shr (0+2)
 18201                           
 18202                           ; Vector 24 : I2C1TX
 18203  000038  191F               	dw	_Default_ISR shr (0+2)
 18204                           
 18205                           ; Vector 25 : I2C1
 18206  00003A  191F               	dw	_Default_ISR shr (0+2)
 18207                           
 18208                           ; Vector 26 : I2C1E
 18209  00003C  191F               	dw	_Default_ISR shr (0+2)
 18210                           
 18211                           ; Vector 27 : U1RX
 18212  00003E  177A               	dw	_UART1_rx_vect_isr shr (0+2)
 18213                           
 18214                           ; Vector 28 : U1TX
 18215  000040  176B               	dw	_UART1_tx_vect_isr shr (0+2)
 18216                           
 18217                           ; Vector 29 : U1E
 18218  000042  191F               	dw	_Default_ISR shr (0+2)
 18219                           
 18220                           ; Vector 30 : U1
 18221  000044  191F               	dw	_Default_ISR shr (0+2)
 18222                           
 18223                           ; Vector 31 : TMR0
 18224  000046  191F               	dw	_Default_ISR shr (0+2)
 18225                           
 18226                           ; Vector 32 : TMR1
 18227  000048  191F               	dw	_Default_ISR shr (0+2)
 18228                           
 18229                           ; Vector 33 : TMR1G
 18230  00004A  191F               	dw	_Default_ISR shr (0+2)
 18231                           
 18232                           ; Vector 34 : TMR2
 18233  00004C  191F               	dw	_Default_ISR shr (0+2)
 18234                           
 18235                           ; Vector 35 : CCP1
 18236  00004E  191F               	dw	_Default_ISR shr (0+2)
 18237                           
 18238                           ; Vector 36 : Undefined
 18239  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 18240                           
 18241                           ; Vector 37 : NCO1
 18242  000052  191F               	dw	_Default_ISR shr (0+2)
 18243                           
 18244                           ; Vector 38 : CWG1
 18245  000054  191F               	dw	_Default_ISR shr (0+2)
 18246                           
 18247                           ; Vector 39 : CLC1
 18248  000056  191F               	dw	_Default_ISR shr (0+2)
 18249                           
 18250                           ; Vector 40 : INT1
 18251  000058  191F               	dw	_Default_ISR shr (0+2)
 18252                           
 18253                           ; Vector 41 : CMP2
 18254  00005A  191F               	dw	_Default_ISR shr (0+2)
 18255                           
 18256                           ; Vector 42 : DMA2SCNT
 18257  00005C  191F               	dw	_Default_ISR shr (0+2)
 18258                           
 18259                           ; Vector 43 : DMA2DCNT
 18260  00005E  191F               	dw	_Default_ISR shr (0+2)
 18261                           
 18262                           ; Vector 44 : DMA2OR
 18263  000060  191F               	dw	_Default_ISR shr (0+2)
 18264                           
 18265                           ; Vector 45 : DMA2A
 18266  000062  191F               	dw	_Default_ISR shr (0+2)
 18267                           
 18268                           ; Vector 46 : I2C2RX
 18269  000064  191F               	dw	_Default_ISR shr (0+2)
 18270                           
 18271                           ; Vector 47 : I2C2TX
 18272  000066  191F               	dw	_Default_ISR shr (0+2)
 18273                           
 18274                           ; Vector 48 : I2C2
 18275  000068  191F               	dw	_Default_ISR shr (0+2)
 18276                           
 18277                           ; Vector 49 : I2C2E
 18278  00006A  191F               	dw	_Default_ISR shr (0+2)
 18279                           
 18280                           ; Vector 50 : U2RX
 18281  00006C  191F               	dw	_Default_ISR shr (0+2)
 18282                           
 18283                           ; Vector 51 : U2TX
 18284  00006E  191F               	dw	_Default_ISR shr (0+2)
 18285                           
 18286                           ; Vector 52 : U2E
 18287  000070  191F               	dw	_Default_ISR shr (0+2)
 18288                           
 18289                           ; Vector 53 : U2
 18290  000072  191F               	dw	_Default_ISR shr (0+2)
 18291                           
 18292                           ; Vector 54 : TMR3
 18293  000074  191F               	dw	_Default_ISR shr (0+2)
 18294                           
 18295                           ; Vector 55 : TMR3G
 18296  000076  191F               	dw	_Default_ISR shr (0+2)
 18297                           
 18298                           ; Vector 56 : TMR4
 18299  000078  174D               	dw	_TMR4_ISR shr (0+2)
 18300                           
 18301                           ; Vector 57 : CCP2
 18302  00007A  191F               	dw	_Default_ISR shr (0+2)
 18303                           
 18304                           ; Vector 58 : Undefined
 18305  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 18306                           
 18307                           ; Vector 59 : CWG2
 18308  00007E  191F               	dw	_Default_ISR shr (0+2)
 18309                           
 18310                           ; Vector 60 : CLC2
 18311  000080  191F               	dw	_Default_ISR shr (0+2)
 18312                           
 18313                           ; Vector 61 : INT2
 18314  000082  191F               	dw	_Default_ISR shr (0+2)
 18315                           
 18316                           ; Vector 62 : Undefined
 18317  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 18318                           
 18319                           ; Vector 63 : Undefined
 18320  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 18321                           
 18322                           ; Vector 64 : Undefined
 18323  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 18324                           
 18325                           ; Vector 65 : Undefined
 18326  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 18327                           
 18328                           ; Vector 66 : Undefined
 18329  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 18330                           
 18331                           ; Vector 67 : Undefined
 18332  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 18333                           
 18334                           ; Vector 68 : Undefined
 18335  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 18336                           
 18337                           ; Vector 69 : Undefined
 18338  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 18339                           
 18340                           ; Vector 70 : TMR5
 18341  000094  191F               	dw	_Default_ISR shr (0+2)
 18342                           
 18343                           ; Vector 71 : TMR5G
 18344  000096  1836               	dw	_TMR5_GATE_ISR shr (0+2)
 18345                           
 18346                           ; Vector 72 : TMR6
 18347  000098  191F               	dw	_Default_ISR shr (0+2)
 18348                           
 18349                           ; Vector 73 : CCP3
 18350  00009A  180F               	dw	_CCP3_CaptureISR shr (0+2)
 18351                           
 18352                           ; Vector 74 : CWG3
 18353  00009C  191F               	dw	_Default_ISR shr (0+2)
 18354                           
 18355                           ; Vector 75 : CLC3
 18356  00009E  191F               	dw	_Default_ISR shr (0+2)
 18357                           
 18358                           ; Vector 76 : Undefined
 18359  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 18360                           
 18361                           ; Vector 77 : Undefined
 18362  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 18363                           
 18364                           ; Vector 78 : Undefined
 18365  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 18366                           
 18367                           ; Vector 79 : Undefined
 18368  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 18369                           
 18370                           ; Vector 80 : CCP4
 18371  0000A8  181C               	dw	_CCP4_CaptureISR shr (0+2)
 18372                           
 18373                           ; Vector 81 : CLC4
 18374  0000AA  191F               	dw	_Default_ISR shr (0+2)
 18375  0000AC                     ivt0x8_undefint:
 18376                           	callstack 0
 18377  0000AC  00FF               	reset	
 18378                           
 18379                           	psect	text107
 18380  000000                     __ptext107:
 18381                           	callstack 0
 18382  000000                     
 18383                           	psect	rparam
 18384  0000                     
 18385                           	psect	idloc
 18386                           
 18387                           ;Config register IDLOC0 @ 0x200000
 18388                           ;	unspecified, using default values
 18389  200000                     	org	2097152
 18390  200000  0FFF               	dw	4095
 18391                           
 18392                           ;Config register IDLOC1 @ 0x200002
 18393                           ;	unspecified, using default values
 18394  200002                     	org	2097154
 18395  200002  0FFF               	dw	4095
 18396                           
 18397                           ;Config register IDLOC2 @ 0x200004
 18398                           ;	unspecified, using default values
 18399  200004                     	org	2097156
 18400  200004  0FFF               	dw	4095
 18401                           
 18402                           ;Config register IDLOC3 @ 0x200006
 18403                           ;	unspecified, using default values
 18404  200006                     	org	2097158
 18405  200006  0FFF               	dw	4095
 18406                           
 18407                           ;Config register IDLOC4 @ 0x200008
 18408                           ;	unspecified, using default values
 18409  200008                     	org	2097160
 18410  200008  0FFF               	dw	4095
 18411                           
 18412                           ;Config register IDLOC5 @ 0x20000A
 18413                           ;	unspecified, using default values
 18414  20000A                     	org	2097162
 18415  20000A  0FFF               	dw	4095
 18416                           
 18417                           ;Config register IDLOC6 @ 0x20000C
 18418                           ;	unspecified, using default values
 18419  20000C                     	org	2097164
 18420  20000C  0FFF               	dw	4095
 18421                           
 18422                           ;Config register IDLOC7 @ 0x20000E
 18423                           ;	unspecified, using default values
 18424  20000E                     	org	2097166
 18425  20000E  0FFF               	dw	4095
 18426                           
 18427                           	psect	config
 18428                           
 18429                           ;Config register CONFIG1L @ 0x300000
 18430                           ;	External Oscillator Selection
 18431                           ;	FEXTOSC = OFF, Oscillator not enabled
 18432                           ;	Reset Oscillator Selection
 18433                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
 18434  300000                     	org	3145728
 18435  300000  8C                 	db	140
 18436                           
 18437                           ;Config register CONFIG1H @ 0x300001
 18438                           ;	Clock out Enable bit
 18439                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 18440                           ;	PRLOCKED One-Way Set Enable bit
 18441                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
 18442                           ;	Clock Switch Enable bit
 18443                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 18444                           ;	Fail-Safe Clock Monitor Enable bit
 18445                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 18446  300001                     	org	3145729
 18447  300001  FF                 	db	255
 18448                           
 18449                           ;Config register CONFIG2L @ 0x300002
 18450                           ;	MCLR Enable bit
 18451                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 18452                           ;	Power-up timer selection bits
 18453                           ;	PWRTS = PWRT_OFF, PWRT is disabled
 18454                           ;	Multi-vector enable bit
 18455                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
 18456                           ;	IVTLOCK bit One-way set enable bit
 18457                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
 18458                           ;	Low Power BOR Enable bit
 18459                           ;	LPBOREN = OFF, ULPBOR disabled
 18460                           ;	Brown-out Reset Enable bits
 18461                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 18462  300002                     	org	3145730
 18463  300002  FF                 	db	255
 18464                           
 18465                           ;Config register CONFIG2H @ 0x300003
 18466                           ;	Brown-out Reset Voltage Selection bits
 18467                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
 18468                           ;	ZCD Disable bit
 18469                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 18470                           ;	PPSLOCK bit One-Way Set Enable bit
 18471                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
 18472                           ;	Stack Full/Underflow Reset Enable bit
 18473                           ;	STVREN = ON, Stack full/underflow will cause Reset
 18474                           ;	Debugger Enable bit
 18475                           ;	DEBUG = OFF, Background debugger disabled
 18476                           ;	Extended Instruction Set Enable bit
 18477                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 18478  300003                     	org	3145731
 18479  300003  FF                 	db	255
 18480                           
 18481                           ;Config register CONFIG3L @ 0x300004
 18482                           ;	WDT Period selection bits
 18483                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 18484                           ;	WDT operating mode
 18485                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
 18486  300004                     	org	3145732
 18487  300004  9F                 	db	159
 18488                           
 18489                           ;Config register CONFIG3H @ 0x300005
 18490                           ;	WDT Window Select bits
 18491                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 18492                           ;	WDT input clock selector
 18493                           ;	WDTCCS = SC, Software Control
 18494  300005                     	org	3145733
 18495  300005  FF                 	db	255
 18496                           
 18497                           ;Config register CONFIG4L @ 0x300006
 18498                           ;	Boot Block Size selection bits
 18499                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
 18500                           ;	Boot Block enable bit
 18501                           ;	BBEN = OFF, Boot block disabled
 18502                           ;	Storage Area Flash enable bit
 18503                           ;	SAFEN = OFF, SAF disabled
 18504                           ;	Application Block write protection bit
 18505                           ;	WRTAPP = OFF, Application Block not write protected
 18506  300006                     	org	3145734
 18507  300006  FF                 	db	255
 18508                           
 18509                           ;Config register CONFIG4H @ 0x300007
 18510                           ;	Configuration Register Write Protection bit
 18511                           ;	WRTB = OFF, Configuration registers (300000-30000Bh) not write-protected
 18512                           ;	Boot Block Write Protection bit
 18513                           ;	WRTC = OFF, Boot Block (000000-0007FFh) not write-protected
 18514                           ;	Data EEPROM Write Protection bit
 18515                           ;	WRTD = OFF, Data EEPROM not write-protected
 18516                           ;	SAF Write protection bit
 18517                           ;	WRTSAF = OFF, SAF not Write Protected
 18518                           ;	Low Voltage Programming Enable bit
 18519                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
 18520  300007                     	org	3145735
 18521  300007  FF                 	db	255
 18522                           
 18523                           ;Config register CONFIG5L @ 0x300008
 18524                           ;	PFM and Data EEPROM Code Protection bit
 18525                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
 18526  300008                     	org	3145736
 18527  300008  FF                 	db	255
 18528                           
 18529                           ;Config register CONFIG5H @ 0x300009
 18530                           ;	unspecified, using default values
 18531  300009                     	org	3145737
 18532  300009  FF                 	db	255
 18533                           tosu	equ	0x3FFF
 18534                           tosh	equ	0x3FFE
 18535                           tosl	equ	0x3FFD
 18536                           stkptr	equ	0x3FFC
 18537                           pclatu	equ	0x3FFB
 18538                           pclath	equ	0x3FFA
 18539                           pcl	equ	0x3FF9
 18540                           tblptru	equ	0x3FF8
 18541                           tblptrh	equ	0x3FF7
 18542                           tblptrl	equ	0x3FF6
 18543                           tablat	equ	0x3FF5
 18544                           prodh	equ	0x3FF4
 18545                           prodl	equ	0x3FF3
 18546                           indf0	equ	0x3FEF
 18547                           postinc0	equ	0x3FEE
 18548                           postdec0	equ	0x3FED
 18549                           preinc0	equ	0x3FEC
 18550                           plusw0	equ	0x3FEB
 18551                           fsr0h	equ	0x3FEA
 18552                           fsr0l	equ	0x3FE9
 18553                           wreg	equ	0x3FE8
 18554                           indf1	equ	0x3FE7
 18555                           postinc1	equ	0x3FE6
 18556                           postdec1	equ	0x3FE5
 18557                           preinc1	equ	0x3FE4
 18558                           plusw1	equ	0x3FE3
 18559                           fsr1h	equ	0x3FE2
 18560                           fsr1l	equ	0x3FE1
 18561                           bsr	equ	0x3FE0
 18562                           indf2	equ	0x3FDF
 18563                           postinc2	equ	0x3FDE
 18564                           postdec2	equ	0x3FDD
 18565                           preinc2	equ	0x3FDC
 18566                           plusw2	equ	0x3FDB
 18567                           fsr2h	equ	0x3FDA
 18568                           fsr2l	equ	0x3FD9
 18569                           status	equ	0x3FD8

Data Sizes:
    Strings     228
    Constant    0
    Data        0
    BSS         182
    Persistent  23
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     57      76
    BANK0           160    145     159
    BANK1           256     20     192
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_24(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_24(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_19(CODE[4]), STR_18(CODE[4]), STR_15(CODE[4]), STR_14(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_19(CODE[4]), STR_18(CODE[4]), STR_15(CODE[4]), STR_14(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S3447_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_13(CODE[13]), STR_12(CODE[14]), STR_11(CODE[13]), STR_10(CODE[14]), 
		 -> STR_9(CODE[8]), STR_8(CODE[13]), STR_7(CODE[14]), STR_6(CODE[13]), 
		 -> STR_5(CODE[16]), STR_4(CODE[21]), STR_3(CODE[26]), STR_2(CODE[24]), 
		 -> STR_1(CODE[20]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 26
		 -> STR_13(CODE[13]), STR_12(CODE[14]), STR_11(CODE[13]), STR_10(CODE[14]), 
		 -> STR_9(CODE[8]), STR_8(CODE[13]), STR_7(CODE[14]), STR_6(CODE[13]), 
		 -> STR_5(CODE[16]), STR_4(CODE[21]), STR_3(CODE[26]), STR_2(CODE[24]), 
		 -> STR_1(CODE[20]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_13(CODE[13]), STR_12(CODE[14]), STR_11(CODE[13]), STR_10(CODE[14]), 
		 -> STR_9(CODE[8]), STR_8(CODE[13]), STR_7(CODE[14]), STR_6(CODE[13]), 
		 -> STR_5(CODE[16]), STR_4(CODE[21]), STR_3(CODE[26]), STR_2(CODE[24]), 
		 -> STR_1(CODE[20]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK1[2]), 

    TMR4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_10msISR(), TMR4_DefaultInterruptHandler(), 

    TMR4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_10msISR(), TMR4_DefaultInterruptHandler(), Absolute function(), 

    TMR5_SetGateInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR5_DefaultGateInterruptHandler(), 

    TMR5_GateInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR5_DefaultGateInterruptHandler(), Absolute function(), 

    CCP4_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP4_DefaultCallBack(), 

    CCP4_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP4_DefaultCallBack(), Absolute function(), 

    CCP3_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP3_DefaultCallBack(), 

    CCP3_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP3_DefaultCallBack(), Absolute function(), 

    UART1_SetTxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    UART1_SetRxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultErrorHandler(), 

    UART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), 

    UART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), 

    UART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultErrorHandler(), 

    UART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultOverrunErrorHandler(), 

    UART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultFramingErrorHandler(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_Receive_ISR(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_Transmit_ISR(), 


Critical Paths under _main in COMRAM

    _loop->___flge
    _getCurve->___flge
    _checkBatt->___flge
    _getBatteryVoltage->_ADCC_GetSingleConversion
    _utoa->_pad
    _efgtoa->___fladd
    _efgtoa->___flge
    _efgtoa->_floorf
    _tolower->_isupper
    _floorf->___fldiv
    ___flsub->___fladd
    ___flge->___flmul
    ___fldiv->___xxtofl
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_UART1_Write
    _abs->___aomod
    _calcSpeed->___fladd
    ___fladd->___flmul
    _setMotor->_PWM7_LoadDutyValue
    _setMotor->_PWM8_LoadDutyValue
    _actSpeed->___aldiv
    ___xxtofl->___awdiv
    ___fltol->___fladd
    ___flmul->___xxtofl
    _SYSTEM_Initialize->_TMR5_Initialize
    _UART1_Initialize->_UART1_SetErrorHandler
    _UART1_Initialize->_UART1_SetFramingErrorHandler
    _UART1_Initialize->_UART1_SetOverrunErrorHandler
    _UART1_Initialize->_UART1_SetRxInterruptHandler
    _UART1_Initialize->_UART1_SetTxInterruptHandler
    _TMR5_Initialize->_TMR5_SetGateInterruptHandler
    _TMR4_Initialize->_TMR4_SetInterruptHandler
    _CCP4_Initialize->_CCP4_SetCallBack
    _CCP3_Initialize->_CCP3_SetCallBack

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR4_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _CCP3_CaptureISR in COMRAM

    _CCP3_CaptureISR->_CCP3_DefaultCallBack

Critical Paths under _CCP4_CaptureISR in COMRAM

    _CCP4_CaptureISR->_CCP4_DefaultCallBack

Critical Paths under _TMR5_GATE_ISR in COMRAM

    _TMR5_DefaultGateInterruptHandler->_TMR5_ReadTimer
    _TMR5_Reload->_TMR5_WriteTimer

Critical Paths under _SMT1_PR_ACQ_ISR in COMRAM

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in COMRAM

    None.

Critical Paths under _SMT1_Overflow_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _checkBatt->_setSteering
    _setSteering->___fltol
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___fltol
    _floorf->___fldiv
    ___flsub->___fladd
    ___flge->___flmul
    _calcSpeed->___fltol
    ___fladd->___flmul
    _calcMotorPow->___fltol
    ___fltol->___fladd

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR4_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _CCP3_CaptureISR in BANK0

    None.

Critical Paths under _CCP4_CaptureISR in BANK0

    None.

Critical Paths under _TMR5_GATE_ISR in BANK0

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK0

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK0

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _loop->_getCurve
    _getReverse->_printf
    _getCurve->_printf
    _checkCurveCount->_printf
    _calcSteering->_printf
    _printf->_vfprintf

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR4_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _CCP3_CaptureISR in BANK1

    None.

Critical Paths under _CCP4_CaptureISR in BANK1

    None.

Critical Paths under _TMR5_GATE_ISR in BANK1

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK1

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK1

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR4_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _CCP3_CaptureISR in BANK2

    None.

Critical Paths under _CCP4_CaptureISR in BANK2

    None.

Critical Paths under _TMR5_GATE_ISR in BANK2

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK2

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK2

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR4_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _CCP3_CaptureISR in BANK3

    None.

Critical Paths under _CCP4_CaptureISR in BANK3

    None.

Critical Paths under _TMR5_GATE_ISR in BANK3

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK3

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK3

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR4_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _CCP3_CaptureISR in BANK4

    None.

Critical Paths under _CCP4_CaptureISR in BANK4

    None.

Critical Paths under _TMR5_GATE_ISR in BANK4

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK4

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK4

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR4_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _CCP3_CaptureISR in BANK5

    None.

Critical Paths under _CCP4_CaptureISR in BANK5

    None.

Critical Paths under _TMR5_GATE_ISR in BANK5

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK5

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK5

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR4_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _CCP3_CaptureISR in BANK6

    None.

Critical Paths under _CCP4_CaptureISR in BANK6

    None.

Critical Paths under _TMR5_GATE_ISR in BANK6

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK6

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK6

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR4_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _CCP3_CaptureISR in BANK7

    None.

Critical Paths under _CCP4_CaptureISR in BANK7

    None.

Critical Paths under _TMR5_GATE_ISR in BANK7

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK7

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK7

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR4_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _CCP3_CaptureISR in BANK8

    None.

Critical Paths under _CCP4_CaptureISR in BANK8

    None.

Critical Paths under _TMR5_GATE_ISR in BANK8

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK8

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK8

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR4_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _CCP3_CaptureISR in BANK9

    None.

Critical Paths under _CCP4_CaptureISR in BANK9

    None.

Critical Paths under _TMR5_GATE_ISR in BANK9

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK9

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK9

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR4_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _CCP3_CaptureISR in BANK10

    None.

Critical Paths under _CCP4_CaptureISR in BANK10

    None.

Critical Paths under _TMR5_GATE_ISR in BANK10

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK10

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK10

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR4_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _CCP3_CaptureISR in BANK11

    None.

Critical Paths under _CCP4_CaptureISR in BANK11

    None.

Critical Paths under _TMR5_GATE_ISR in BANK11

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK11

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK11

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR4_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _CCP3_CaptureISR in BANK12

    None.

Critical Paths under _CCP4_CaptureISR in BANK12

    None.

Critical Paths under _TMR5_GATE_ISR in BANK12

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK12

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK12

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR4_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _CCP3_CaptureISR in BANK13

    None.

Critical Paths under _CCP4_CaptureISR in BANK13

    None.

Critical Paths under _TMR5_GATE_ISR in BANK13

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK13

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK13

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR4_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _CCP3_CaptureISR in BANK14

    None.

Critical Paths under _CCP4_CaptureISR in BANK14

    None.

Critical Paths under _TMR5_GATE_ISR in BANK14

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK14

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK14

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR4_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _CCP3_CaptureISR in BANK15

    None.

Critical Paths under _CCP4_CaptureISR in BANK15

    None.

Critical Paths under _TMR5_GATE_ISR in BANK15

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK15

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK15

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  262370
                  _SYSTEM_Initialize
           _TMR4_SetInterruptHandler
                               _loop
 ---------------------------------------------------------------------------------
 (1) _loop                                                 0     0      0  261223
                             ___flge
                           ___xxtofl
                       _calcMotorPow
                          _calcSpeed
                       _calcSteering
                          _checkBatt
                    _checkCurveCount
                  _getBatteryVoltage
                           _getCurve
                         _getReverse
                           _setMotor
                        _setSteering
 ---------------------------------------------------------------------------------
 (2) _getReverse                                           0     0      0   51656
                             _printf
 ---------------------------------------------------------------------------------
 (2) _getCurve                                            12    12      0   55298
                                             10 BANK1     10    10      0
                             ___flge
                            ___lwdiv
                           ___xxtofl
                             _printf
 ---------------------------------------------------------------------------------
 (2) _checkCurveCount                                      4     4      0   53397
                                             10 BANK1      4     4      0
                            ___lwdiv
                           ___xxtofl
                             _printf
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     601
                                             19 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _checkBatt                                            0     0      0   10973
                             ___flge
                           ___xxtofl
                  _getBatteryVoltage
                        _setSteering
 ---------------------------------------------------------------------------------
 (2) _getBatteryVoltage                                    0     0      0      22
           _ADCC_GetSingleConversion
 ---------------------------------------------------------------------------------
 (3) _ADCC_GetSingleConversion                             5     3      2      22
                                             19 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _calcSteering                                         4     4      0   60058
                                             10 BANK1      4     4      0
                             _printf
                        _setSteering
 ---------------------------------------------------------------------------------
 (2) _setSteering                                          9     6      3    8139
                                             35 BANK0      9     6      3
                 _PWM5_LoadDutyValue
                 _PWM6_LoadDutyValue
                            ___fldiv
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) _PWM6_LoadDutyValue                                   4     2      2     152
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _PWM5_LoadDutyValue                                   4     2      2     152
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _printf                                              10     4      6   51656
                                              2 BANK1      8     2      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6   50381
                                            139 BANK0      6     0      6
                                              0 BANK1      2     2      0
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           46    40      6   49866
                                            103 BANK0     36    30      6
                               _dtoa
                             _efgtoa
                              _fputc
                            _isupper
                            _strncmp
                            _tolower
                               _utoa
 ---------------------------------------------------------------------------------
 (6) _utoa                                                32    22     10    5909
                                             48 COMRAM     8     8      0
                                              0 BANK0     24    14     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (7) ___lomod                                             17     1     16     412
                                             19 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (7) ___lodiv                                             25     9     16     421
                                             19 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (6) _strncmp                                             11     5      6     595
                                             19 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _efgtoa                                              68    61      7   32150
                                             35 BANK0     68    61      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (6) _tolower                                              8     6      2    1142
                                             25 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (7) _isupper                                              6     4      2     551
                                             19 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _strcpy                                              10     6      4    1037
                                             19 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (7) _floorf                                              20    16      4     669
                                             53 COMRAM     4     0      4
                                             13 BANK0     16    16      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fpclassifyf                                       14    10      4     375
                                             19 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (7) ___flsub                                              8     0      8    4187
                                             25 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flneg                                              4     0      4     155
                                             19 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (7) ___flge                                              12     4      8    1706
                                             53 COMRAM     4     4      0
                                             13 BANK0      8     0      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fleq                                              12     4      8     770
                                             19 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    2903
                                             41 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4     613
                                             19 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    6763
                                             48 COMRAM     8     8      0
                                              0 BANK0     28    18     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    4497
                                             37 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     220
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1537
                                             30 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (9) _fputc                                                9     5      4    1037
                                             21 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (10) _putch                                               1     1      0      93
                                             20 COMRAM     1     1      0
                        _UART1_Write
 ---------------------------------------------------------------------------------
 (11) _UART1_Write                                         1     1      0      62
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     183
                                             37 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     613
                                             19 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     625
                                             19 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (2) _calcSpeed                                            6     6      0    9603
                                             35 BANK0      6     6      0
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (8) ___fladd                                             16     8      8    3622
                                             53 COMRAM     4     4      0
                                             13 BANK0     12     4      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _calcMotorPow                                         7     7      0    8359
                                             35 BANK0      7     7      0
                            ___awdiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                           _actSpeed
                           _setMotor
 ---------------------------------------------------------------------------------
 (2) _setMotor                                             4     2      2     906
                                             23 COMRAM     4     2      2
                 _PWM7_LoadDutyValue
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (3) _PWM8_LoadDutyValue                                   4     2      2     272
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _PWM7_LoadDutyValue                                   4     2      2     272
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _actSpeed                                             4     2      2     629
                                             33 COMRAM     4     2      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             14     6      8     604
                                             19 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4    1106
                                             27 COMRAM    14    10      4
                            ___awdiv (ARG)
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     787
                                             25 BANK0     10     6      4
                            ___awdiv (ARG)
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flmul                                             25    17      8    3953
                                             41 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                            ___awdiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     805
                                             19 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     973
                    _ADCC_Initialize
                    _CCP3_Initialize
                    _CCP4_Initialize
                    _CLC3_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM5_Initialize
                    _PWM6_Initialize
                    _PWM7_Initialize
                    _PWM8_Initialize
                    _SMT1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR4_Initialize
                    _TMR5_Initialize
                   _UART1_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0     490
              _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetOverrunErrorHandler                         2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetFramingErrorHandler                         2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetErrorHandler                                2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      2     2      0      98
                                             21 COMRAM     2     2      0
       _TMR5_SetGateInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetGateInterruptHandler                         2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0     174
           _TMR4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR4_SetInterruptHandler                             2     0      2     174
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      2     2      0       0
                                             19 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMT1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM7_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      15
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _CLC3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP4_Initialize                                      0     0      0      98
                   _CCP4_SetCallBack
 ---------------------------------------------------------------------------------
 (3) _CCP4_SetCallBack                                     2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CCP3_Initialize                                      0     0      0      98
                   _CCP3_SetCallBack
 ---------------------------------------------------------------------------------
 (3) _CCP3_SetCallBack                                     2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_tx_vect_isr                                   1     1      0       0
                                             16 COMRAM     1     1      0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_rx_vect_isr                                   1     1      0       0
                                             17 COMRAM     1     1      0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Receive_ISR                                   0     0      0       0
                   Absolute function *
          _UART1_DefaultErrorHandler *
   _UART1_DefaultFramingErrorHandler *
   _UART1_DefaultOverrunErrorHandler *
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (14) _UART1_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _UART1_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _UART1_DefaultErrorHandler                           0     0      0       0
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (14) _UART1_RxDataHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TMR4_ISR                                            1     1      0       0
                                             18 COMRAM     1     1      0
                      _TMR4_CallBack
 ---------------------------------------------------------------------------------
 (13) _TMR4_CallBack                                       0     0      0       0
                   Absolute function *
                       _TMR4_10msISR *
       _TMR4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _TMR4_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _TMR4_10msISR                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _CCP3_CaptureISR                                     2     2      0     144
                                              2 COMRAM     2     2      0
                   Absolute function *
               _CCP3_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (17) _CCP3_DefaultCallBack                                2     0      2      97
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _CCP4_CaptureISR                                     2     2      0     144
                                              6 COMRAM     2     2      0
                   Absolute function *
               _CCP4_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (17) _CCP4_DefaultCallBack                                2     0      2      97
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _TMR5_GATE_ISR                                       0     0      0     233
                   Absolute function *
   _TMR5_DefaultGateInterruptHandler *
 ---------------------------------------------------------------------------------
 (17) _TMR5_DefaultGateInterruptHandler                    0     0      0     233
                     _TMR5_ReadTimer
                        _TMR5_Reload
 ---------------------------------------------------------------------------------
 (18) _TMR5_Reload                                         0     0      0     164
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (19) _TMR5_WriteTimer                                     2     0      2     164
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (18) _TMR5_ReadTimer                                      8     6      2      69
                                              8 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _SMT1_PR_ACQ_ISR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _SMT1_PW_ACQ_ISR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _SMT1_Overflow_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
     _CCP3_Initialize
       _CCP3_SetCallBack
     _CCP4_Initialize
       _CCP4_SetCallBack
     _CLC3_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM5_Initialize
     _PWM6_Initialize
     _PWM7_Initialize
     _PWM8_Initialize
     _SMT1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
     _TMR4_Initialize
       _TMR4_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetGateInterruptHandler
     _UART1_Initialize
       _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
   _TMR4_SetInterruptHandler
   _loop
     ___flge
       ___flmul (ARG)
         ___awdiv (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
           ___lwdiv (ARG)
       ___xxtofl (ARG)
     ___xxtofl
     _calcMotorPow
       ___awdiv
       ___flmul
       ___fltol
         ___awdiv (ARG)
         ___fladd (ARG)
           ___flmul (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl
       _actSpeed
         ___aldiv
       _setMotor
         _PWM7_LoadDutyValue
         _PWM8_LoadDutyValue
     _calcSpeed
       ___fladd
       ___flmul
       ___fltol
       ___xxtofl
     _calcSteering
       _printf
         _vfprintf
           _vfpfcnvrt
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                 _fputs
                   _fputc
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
                 ___flmul (ARG)
               ___fltol
               ___fpclassifyf
               _floorf
                 ___fldiv (ARG)
               _isupper
               _pad
               _strcpy
               _tolower
                 _isupper
             _fputc
             _isupper
             _strncmp
             _tolower
             _utoa
               ___lodiv
               ___lomod
               _pad
       _setSteering
         _PWM5_LoadDutyValue
         _PWM6_LoadDutyValue
         ___fldiv
         ___fltol
         ___xxtofl
     _checkBatt
       ___flge
       ___xxtofl
       _getBatteryVoltage
         _ADCC_GetSingleConversion
       _setSteering
     _checkCurveCount
       ___lwdiv
       ___xxtofl
       _printf
     _getBatteryVoltage
     _getCurve
       ___flge
       ___lwdiv
       ___xxtofl
       _printf
     _getReverse
       _printf
     _setMotor
     _setSteering

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *
     Absolute function(Fake) *
     _UART1_DefaultErrorHandler *
       _UART1_RxDataHandler
     _UART1_DefaultFramingErrorHandler *
     _UART1_DefaultOverrunErrorHandler *
     _UART1_RxDataHandler *

 _TMR4_ISR (ROOT)
   _TMR4_CallBack
     Absolute function(Fake) *
     _TMR4_10msISR *
     _TMR4_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _CCP3_CaptureISR (ROOT)
   Absolute function(Fake) *
   _CCP3_DefaultCallBack *

 _CCP4_CaptureISR (ROOT)
   Absolute function(Fake) *
   _CCP4_DefaultCallBack *

 _TMR5_GATE_ISR (ROOT)
   Absolute function(Fake) *
   _TMR5_DefaultGateInterruptHandler *
     _TMR5_ReadTimer
     _TMR5_Reload
       _TMR5_WriteTimer

 _SMT1_PR_ACQ_ISR (ROOT)

 _SMT1_PW_ACQ_ISR (ROOT)

 _SMT1_Overflow_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FFF      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK15          100      0       0      30        0.0%
BANK15             100      0       0      31        0.0%
BITBANK14          100      0       0      28        0.0%
BANK14             100      0       0      29        0.0%
BITBANK13          100      0       0      36        0.0%
BANK13             100      0       0      27        0.0%
BITBANK12          100      0       0      35        0.0%
BANK12             100      0       0      26        0.0%
BITBANK11          100      0       0      34        0.0%
BANK11             100      0       0      25        0.0%
BITBANK10          100      0       0      33        0.0%
BANK10             100      0       0      24        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     14      C0       7       75.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     91      9F       5       99.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     39      4C       1       80.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1AB      32        0.0%
DATA                 0      0     1AB       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Jan 30 14:25:24 2024

                             _CCP4_Initialize 613A                        ??_CCP3_DefaultCallBack 0003  
                     __end_of_checkCurveCount 5168                                  ___fldiv@aexp 006C  
                                ___fldiv@bexp 006B                                  ___fldiv@sign 0064  
                                          l72 63E0                                            l75 62EA  
                                          l69 5B88                                  ___awdiv@sign 0019  
                           ??_TMR5_WriteTimer 000B                   __size_of_PWM6_LoadDutyValue 0034  
                                         l312 59E2                                           l404 5B3E  
                                         l308 5996                                           l309 59B0  
                                         l318 6408                                           l520 5BD2  
                                         l441 6194                                           l362 6426  
                                         l371 6412                                           l188 5230  
                                         l284 5676                                           l365 643A  
                                         l359 6430                                           l368 641C  
                                         l712 603A                                           l449 6462  
                                         l482 6166                                           l723 6380  
                                         l555 6444                                           l644 61EE  
                                         l740 5FD2                                           l709 6398  
                                         l581 5EC8                                           l726 6006  
                                         l479 6458                                           l751 63B0  
                                         l737 63C8                                           l754 5F9E  
                                         l923 6368                                           l695 644E  
                                         l795 6138                                           l893 621A  
                                         _GIE 01FE97                                           _PR2 003FAB  
                                         _PR4 003F9F                                           _abs 5CF2  
                                         _pad 52F6                       __size_of_PMD_Initialize 0024  
                                ___awmod@sign 0019                               _TMR2_Initialize 634E  
              CCP4_SetCallBack@customCallBack 0014                                           tosl 003FFD  
                                         wreg 003FE8                              _CCP4_SetCallBack 6450  
                                ___flmul@aexp 0061                                  ___flmul@bexp 0066  
                          _UART1_Transmit_ISR 5C66                                  ___flmul@sign 0060  
                                ___flmul@temp 006B                                  ___flmul@prod 0067  
                     __end_of_CCP4_CaptureISR 60A4                                  ___fltol@exp1 0082  
                                        l1042 5A9E                                          l2003 2ED0  
                                        ?_abs 0026                                          l2005 2F48  
                                        l2006 2F36                                          l1054 60B4  
                                        l1230 47EC                                          l2031 2B20  
                                        l1303 3310                                          l2024 2906  
                                        l2041 2C50                                          l2033 2B98  
                                        l1057 60D4                                          l2034 2B86  
                                        l2130 537C                                          l2028 2C8E  
                                        l2132 53B6                                          l2140 33BA  
                                        l1324 3610                                          l2301 4D04  
                                        l1317 466E                                          l1237 485C  
                                        l2222 1942                                          l1350 3864  
                                        l1318 4680                                          l1246 48EC  
                                        l1255 57A0                                          l2127 533A  
                                        l1407 4092                                          l1263 5832  
                                        l2072 4182                                          l2065 40EA  
                                        l1329 369E                                          l2306 5D28  
                                        l2138 33B2                                          l1258 63F0  
                                        l2315 3C94                               _timer3ReloadVal 0197  
                                        l4100 5B3A                                          l2068 4246  
                                        l1372 3A7E                                          l1524 43CE  
                                        l2340 570C                                          l1381 47CC  
                                        l2309 5D30                                          l2325 5E58  
                                        l4102 5B3C                                          l4110 518A  
                                        l1390 4FCA                                          l2158 35F6  
                                        l2318 3BD8                                          l1278 5166  
                                        l1286 3300                                          l2079 41DE  
                                        l4120 51E6                                          l4112 5192  
                                        l4104 62C8                                          l2360 5DA8  
                                        l2176 1D92                                          l2256 3CCE  
                                        l2088 629C                                          l1641 52F4  
                                        l1537 4532                                          l4130 63CA  
                                        l4122 51EC                                          l4114 51E0  
                                        l4106 5168                                          l2354 5980  
                                        l2194 1504                                          l2266 3E9C  
                                        l2258 3CD6                                          l2290 590E  
                                        l1394 3EAC                                          l1707 4B00  
                                        l2283 21B0                                          l2275 237C  
                                        l2291 5916                                          l4124 51EE  
                                        l4116 51E2                                          l4108 5188  
                                        l2348 5CF0                                          l2364 4DF8  
                                        l1396 3ED0                                          l1397 3EE4  
                                        l1901 589E                                          l4142 5A44  
                                        l4126 51F0                                          l4118 51E4  
                                        l4214 6382                                          l1654 5526  
                                        l2374 5A3A                                          l1398 3F58  
                                        l4080 5B08                                          l4128 51F2  
                                        l4160 612C                                          l1680 4C06  
                                        l1489 49F8                                          l4090 5B30  
                                        l4082 5B1E                                          l4074 5AF4  
                                        l4162 6130                                          l4154 610A  
                                        l4170 634E                                          l1675 4BC0  
                                        l2379 5A42                                          l4092 5B32  
                                        l4084 5B20                                          l4076 5AF6  
                                        l4164 6132                                          l4156 6128  
                                        l4172 635A                                          l1940 2522  
                                        l1684 5E90                                          l1908 58A6  
                                        l1669 55D0                                          l4094 5B34  
                                        l4086 5B2A                                          l4078 5AFE  
                                        l4166 6134                                          l4158 612A  
                                        l4174 6360                                          l1855 4EE8  
                                        l4096 5B36                                          l4088 5B2E  
                                        l4176 639A                                          l4168 636A  
                                        l1848 4EC8                                          l1865 509A  
                                        l4098 5B38                                          l1938 256E  
                                        l1858 507A                                          l1955 2688  
                                        l1947 283E                                          l1939 255C  
                                        l4188 61F0                                          l1964 2758  
                                        l1980 5C64                                          l1965 2746  
                                        l4198 63B2                                          ?_pad 0026  
                                        l8000 4406                                          l1992 302A  
                                        l8010 446E                                          l8002 4414  
                                        l1994 2E8A                                          l8012 447C  
                                        l8020 44E2                                          l8004 4434  
                                        l8100 2E3E                                          l1997 2E4E  
                                        l8022 44F2                                          l8014 44AA  
                                        l8006 4452                                          l8110 2E88  
                                        l8102 2E4C                                          l8030 2C9E  
                                        l7320 5B5C                                          l8200 2916  
                                        l8024 4512                                          l8016 44CA  
                                        l8008 445A                                          l8120 2ECE  
                                        l8112 2E9A                                          l8104 2E58  
                                        l8040 2CDE                                          l8032 2CAC  
                                        l9000 3E66                                          l7330 5B74  
                                        l7322 5B60                                          l7314 5B40  
                                        l8210 2954                                          l8202 2926  
                                        l8018 44DC                                          l8130 2F2E  
                                        l8114 2EB0                                          l8122 2EE0  
                                        l8106 2E76                                          l8050 2D04  
                                        l8042 2CE0                                          l8034 2CAE  
                                        l9002 3E74                                          l7332 5B7C  
                                        l7324 5B64                                          l7316 5B50  
                                        l8220 29AE                                          l8212 296E  
                                        l6620 5FD4                                          l8140 2F9C  
                                        l8124 2EEE                                          l8116 2EB6  
                                        l8108 2E78                                          l8060 2D44  
                                        l8052 2D12                                          l8036 2CBE  
                                        l8044 2CE8                                          l8028 2C90  
                                        l9020 4D9A                                          l9012 4D3C  
                                        l9100 2318                                          l7334 5B80  
                                        l7326 5B68                                          l7318 5B54  
                                        l8310 5250                                          l8302 5232  
                                        l8230 29FC                                          l8222 29BC  
                                        l8214 297A                                          l8206 293A  
                                        l8150 3006                                          l8134 2F58  
                                        l8142 2FA0                                          l8126 2EF2  
                                        l8118 2EC0                                          l8070 2D84  
                                        l8062 2D46                                          l8054 2D14  
                                        l8046 2CF8                                          l8038 2CCE  
                                        l9022 4DCC                                          l9014 4D4A  
                                        l9006 4D06                                          l9102 232A  
                                        l9030 1DD4                                          l6630 60B0  
                                        l7328 5B70                                          l8320 5284  
                                        l8312 525E                                          l8304 5236  
                                        l8240 2A7A                                          l8232 2A1A  
                                        l8224 29CC                                          l8216 2996  
                                        l8208 294A                                          l9120 40A6  
                                        l6640 48F2                                          l8152 300A  
                                        l8144 2FBA                                          l8136 2F64  
                                        l8128 2F00                                          l8080 2DB4  
                                        l8072 2D8C                                          l8056 2D24  
                                        l8064 2D4E                                          l8048 2CFE  
                                        l8400 4B32                                          l9016 4D66  
                                        l9008 4D30                                          l9040 1E66  
                                        l9032 1DE6                                          l9200 404C  
                                        l6632 60B2                                          l8330 52BE  
                                        l8322 528C                                          l8314 5266  
                                        l8306 5244                                          l8250 2B10  
                                        l8242 2AA4                                          l8234 2A2A  
                                        l8226 29DC                                          l8218 29A2  
                                        l8170 285C                                          l9130 4124  
                                        l9122 40B4                                          l6650 4932  
                                        l6642 4900                                          l6618 6008  
                                        l8154 3018                                          l8146 2FD0  
                                        l8138 2F72                                          l8090 2DF2  
                                        l8082 2DB4                                          l8074 2D90  
                                        l8066 2D5E                                          l8058 2D34  
                                        l8410 4BA0                                          l8402 4B42  
                                        l9018 4D88                                          l9050 1F6E  
                                        l9042 1E76                                          l9034 1DEA  
                                        l9106 2338                                          l9026 1D94  
                                        l9114 5FA0                                          l9202 4068  
                                        l6634 60C2                                          l6626 60A6  
                                        l6900 61DC                                          l6740 6428  
                                        l8340 52E4                                          l8332 52C6  
                                        l8324 5294                                          l8316 526A  
                                        l8308 524C                                          l8260 2B50  
                                        l8252 2B1E                                          l8244 2ADA  
                                        l8236 2A4A                                          l8228 29EC  
                                        l8180 2894                                          l8172 285E  
                                        l9140 4178                                          l9132 412C  
                                        l9124 40FA                                          l6660 4970  
                                        l6652 4936                                          l6644 4910  
                                        l7700 59C6                                          l8156 301E  
                                        l8148 2FEA                                          l8092 2E02  
                                        l8068 2D74                                          l8412 4BAE  
                                        l8404 4B70                                          l8420 5E5A  
                                        l8500 5006                                          l9108 2366  
                                        l9060 1FEC                                          l9044 1EB6  
                                        l9036 1E16                                          l9028 1DC2  
                                        l9116 5F6C                                          l9204 4070  
                                        l6628 60AC                                          l9220 5834  
                                        l9300 3194                                          l6910 6156  
                                        l6902 61DE                                          l6742 641E  
                                        l8342 52EC                                          l8334 52C8  
                                        l8326 52A2                                          l8318 5272  
                                        l8270 2BC2                                          l8262 2B7E  
                                        l8254 2B30                                          l8246 2AE8  
                                        l8238 2A5A                                          l8190 28C0  
                                        l8182 28A4                                          l8174 286E  
                                        l8166 2840                                          l8430 4A12  
                                        l9150 41EE                                          l9142 41B4  
                                        l9134 4138                                          l9126 4110  
                                        l9118 4096                                          l6670 49B8  
                                        l6662 497E                                          l6654 4946  
                                        l6646 4914                                          l6638 48EE  
                                        l7702 59D6                                          l7710 5678  
                                        l8510 52F6                                          l8350 548A  
                                        l8158 3020                                          l8094 2E12  
                                        l8086 2DC8                                          l8078 2DA4  
                                        l8414 4BFE                                          l8406 4B80  
                                        l8422 5E70                                          l8502 5014  
                                        l9062 2030                                          l9054 1FA6  
                                        l9046 1EE4                                          l9038 1E26  
                                        l9214 6274                                          l9206 4080  
                                        l9230 586C                                          l9222 583C  
                                        l9310 3226                                          l9302 319C  
                                        l6912 6160                                          l6920 5EAA  
                                        l6904 61EA                                          l6760 643C  
                                        l6744 6432                                          l6736 6414  
                                        l8336 52CE                                          l8328 52A8  
                                        l8280 2C38                                          l8272 2BEC  
                                        l8256 2B3E                                          l8248 2B06  
                                        l8192 28D0                                          l8184 28AA  
                                        l8176 287E                                          l8168 284E  
                                        l8440 4A62                                          l9160 4236  
                                        l9152 41F2                                          l9144 41C0  
                                        l9136 416A                                          l6672 49C2  
                                        l6664 4988                                          l6656 495C  
                                        l6648 4922                                          l7800 24BC  
                                        l7704 59DA                                          l7720 56FA  
                                        l7712 568A                                          l8520 5346  
                                        l8512 5304                                          l8600 3312  
                                        l8360 54BE                                          l8352 5492  
                                        l8096 2E1A                                          l8088 2DE2  
                                        l8416 4C04                                          l8408 4B8E  
                                        l8424 5E80                                          l8504 5042  
                                        l9072 2112                                          l9056 1FB8  
                                        l9048 1F12                                          l9216 627E  
                                        l9400 36CE                                          l9240 5898  
                                        l9232 5872                                          l9224 584E  
                                        l9320 3288                                          l9312 3234  
                                        l9304 319C                                          l6914 6164  
                                        l6906 613A                                          l6922 5EC4  
                                        l6930 5BBC                                          l6738 640A  
                                        l8338 52D4                                          l8282 2C54  
                                        l8290 2C7A                                          l8266 2BA8  
                                        l8274 2BF0                                          l8258 2B42  
                                        l8194 28E0                                          l8186 28B0  
                                        l8178 288E                                          l8450 4A8C  
                                        l8442 4A66                                          l8434 4A26  
                                        l9154 4216                                          l9146 41CE  
                                        l9138 416C                                          l6666 49A6  
                                        l6658 4964                                          l6674 49C8  
                                        l6850 573C                                          l7810 251A  
                                        l7802 24C0                                          l7730 239C  
                                        l7706 59DE                                          l7714 569C  
                                        l8522 535A                                          l8514 5318  
                                        l8610 338C                                          l8602 3332  
                                        l8370 54FA                                          l8362 54C6  
                                        l8354 5496                                          l8346 5478  
                                        l8098 2E2A                                          l8506 5062  
                                        l9090 22B6                                          l9074 2124  
                                        l9082 21F0                                          l9058 1FDA  
                                        l9066 205C                                          l9170 58EC  
                                        l9410 3722                                          l9402 36E4  
                                        l6842 63E2                                          l9250 57CA  
                                        l9242 57A2                                          l9234 5888  
                                        l9226 5856                                          l9330 32B6  
                                        l9322 328C                                          l9314 3242  
                                        l9306 31D2                                          l6756 645A  
                                        l6908 614A                                          l6916 5E92  
                                        l6932 5BC0                                          l6924 5B8A  
                                        l6940 55D6                                          l8292 2C7E  
                                        l8284 2C64                                          l8276 2C0A  
                                        l8268 2BB4                                          l8196 28F0  
                                        l8188 28BE                                          l8460 4AB4  
                                        l8452 4A96                                          l8444 4A74  
                                        l8436 4A50                                          l8428 49FA  
                                        l9156 4226                                          l9148 41EC  
                                        l6676 49D8                                          l6668 49B6  
                                        l6852 576C                                          l6844 570E  
                                        l6780 4F06                                          l7900 27BC  
                                        l7820 2550                                          l7812 2530  
                                        l7804 24C4                                          l7732 23AC  
                                        l7740 23D6                                          l7724 237E  
                                        l9500 3A6E                                          l8532 5CF2  
                                        l7708 6402                                          l7716 56A6  
                                        l8524 535E                                          l8516 5326  
                                        l8620 33E8                                          l8612 33A6  
                                        l8604 335C                                          l8372 5500  
                                        l8364 54CE                                          l8356 54A4  
                                        l8348 547C                                          l8540 4C66  
                                        l8700 120E                                          l8508 5074  
                                        l9092 22E4                                          l9084 221E  
                                        l9076 216C                                          l9068 208A  
                                        l9164 58A8                                          l9180 3F74  
                                        l9172 3E9E                                          l9420 3766  
                                        l9412 3736                                          l9404 36FA  
                                        l9252 5812                                          l9260 5830  
                                        l9244 57A8                                          l9236 5890  
                                        l9228 585E                                          l9316 3276  
                                        l9324 329A                                          l9308 31F0  
                                        l6758 6450                                          l6918 5EA6  
                                        l6934 5BC2                                          l6926 5B9E  
                                        l6950 5600                                          l6942 55E2  
                                        l8286 2C72                                          l8278 2C1E  
                                        l8198 28F6                                          l8462 4AC0  
                                        l8454 4AA0                                          l8438 4A52  
                                        l9158 4234                                          l6678 49E8  
                                        l6854 5798                                          l6846 5716  
                                        l6790 4F62                                          l6782 4F22  
                                        l9510 468E                                          l7910 2802  
                                        l7902 27BE                                          l7830 25A0  
                                        l7822 255A                                          l7814 253C  
                                        l7806 24EE                                          l7750 2406  
                                        l7742 23E6                                          l7734 23BC  
                                        l7726 238C                                          l9502 3A76  
                                        l8534 5D0C                                          l7718 56C4  
                                        l8526 538A                                          l8518 5332  
                                        l8630 348A                                          l8622 33F0  
                                        l8614 33C2                                          l8606 337C  
                                        l8366 54DC                                          l8374 5506  
                                        l8358 54AC                                          l8390 55A4  
                                        l8382 5528                                          l8550 4CB8  
                                        l8542 4C8E                                          l8702 122A  
                                        l8710 1274                                          l9094 22F6  
                                        l9086 227E                                          l9078 21C4  
                                        l9166 58B0                                          l9190 3FF4  
                                        l9182 3F80                                          l9174 3EEC  
                                        l9430 3816                                          l9422 377E  
                                        l9406 370E                                          l9254 581A  
                                        l9246 57BE                                          l9238 5892  
                                        l9270 3090                                          l9350 457A  
                                        l9342 4534                                          l6776 6446  
                                        l6936 5BCE                                          l6928 5BA2  
                                        l6960 5614                                          l6952 5604  
                                        l6944 55F2                                          l8288 2C74  
                                        l8464 4AD0                                          l6848 572C  
                                        l6792 4F7E                                          l6784 4F2A  
                                        l9520 4740                                          l9512 469C  
                                        l7920 282C                                          l7912 2810  
                                        l7904 27CE                                          l7840 25DC  
                                        l7832 25B0                                          l7824 257C  
                                        l7816 2540                                          l7808 250A  
                                        l7760 2446                                          l7752 2414  
                                        l7744 23EC                                          l7736 23CC  
                                        l7728 239A                                          l8528 539E  
                                        l8640 3548                                          l8632 3490  
                                        l8624 33FA                                          l8616 33D4  
                                        l8608 338A                                          l8376 5516  
                                        l8368 54F2                                          l8392 55C8  
                                        l8384 5556                                          l8296 5C1E  
                                        l8544 4C9A                                          l8536 4C08  
                                        l8560 5928                                          l8800 163A  
                                        l8720 12FE                                          l8712 129A  
                                        l8704 1242                                          l8480 4E40  
                                        l8472 4DFA                                          l9096 230A  
                                        l9168 58BE                                          l9192 4000  
                                        l9176 3F60                                          l9432 3828  
                                        l9416 374A                                          l9256 582A  
                                        l9248 57C6                                          l9328 32A4  
                                        l9280 30F2                                          l9272 30A6  
                                        l9336 32C2                                          l9264 302C  
                                        l9360 45C6                                          l9352 4584  
                                        l9344 454C                                          l6890 6184  
                                        l6970 5628                                          l6962 5618  
                                        l6954 5608                                          l6946 55F8  
                                        l6938 55D2                                          l8466 4AE0  
                                        l6794 4F86                                          l6786 4F36  
                                        l6778 4EEA                                          l9530 4788  
                                        l9522 4748                                          l9514 46B0  
                                        l7922 282E                                          l7914 2816  
                                        l7906 27DE                                          l7850 2622  
                                        l7842 25EA                                          l7834 25BE  
                                        l7826 258C                                          l7818 254E  
                                        l7770 2480                                          l7762 2448  
                                        l7754 2416                                          l7746 23FE  
                                        l7738 23CE                                          l7690 5984  
                                        l7930 5CCC                                          l8650 3596  
                                        l8642 3562                                          l8626 3400  
                                        l8634 34F4                                          l8618 33E2  
                                        l8378 551E                                          l8394 55CE  
                                        l8386 5566                                          l8298 5C30  
                                        l8554 4CFC                                          l8538 4C28  
                                        l8562 59E4                                          l8802 164E  
                                        l8810 1744                                          l8730 1362  
                                        l8722 1316                                          l8706 124C  
                                        l8490 4EB0                                          l8482 4E4E  
                                        l8474 4E06                                          l9194 401C  
                                        l9178 3F6C                                          l9186 3F94  
                                        l9434 3840                                          l9426 37A4  
                                        l9290 313A                                          l9282 3108  
                                        l9274 30B4                                          l9266 3030  
                                        l9362 45DC                                          l9370 4608  
                                        l9354 459C                                          l9346 4556  
                                        l6892 618E                                          l6980 5672  
                                        l6972 562C                                          l6964 561C  
                                        l6956 560C                                          l6948 55FC  
                                        l8468 4AF0                                          l6796 4F92  
                                        l6788 4F46                                          l9532 4794  
                                        l9524 475C                                          l9516 46B0  
                                        l9508 4682                                          l7916 2818  
                                        l7908 27FE                                          l7860 269E  
                                        l7852 2656                                          l7844 25EC  
                                        l7836 25CC                                          l7780 2494  
                                        l7772 2484                                          l7756 2426  
                                        l7764 2450                                          l7748 2400  
                                        l9460 38AA                                          l9452 3866  
                                        l7692 5984                                          l7932 5CD0  
                                        l7940 5D9C                                          l8652 35A8  
                                        l8636 3510                                          l8644 3570  
                                        l8628 3482                                          l8388 5594  
                                        l8548 4CA6                                          l8580 3B1A  
                                        l8572 3A80                                          l8900 1B94  
                                        l8820 1810                                          l8812 1762  
                                        l8804 16B2                                          l8740 142E  
                                        l8724 1320                                          l8716 12D0  
                                        l8492 4EC2                                          l8484 4E60  
                                        l8476 4E24                                          l9196 4024  
                                        l9188 3FD6                                          l9436 3850  
                                        l9428 3802                                          l9540 509C  
                                        l9292 3140                                          l9284 3116  
                                        l9268 3074                                          l9276 30BA  
                                        l9380 466A                                          l9372 461E  
                                        l9364 45EA                                          l9356 45A0  
                                        l9348 4568                                          l6894 6192  
                                        l6886 6168                                          l6974 5630  
                                        l6966 5620                                          l6958 5610  
                                        l6798 4FB2                                          l9534 47B0  
                                        l9526 4760                                          l9518 472C  
                                        l7918 281E                                          l7870 26DA  
                                        l7862 26AE                                          l7854 2658  
                                        l7846 25F6                                          l7838 25D8  
                                        l7790 24A8                                          l7782 2498  
                                        l7774 2488                                          l7766 2460  
                                        l7758 2436                                          l9470 38F6  
                                        l9462 38B2                                          l9454 3874  
                                        l7950 424C                                          l7694 59A6  
                                        l7926 5CAE                                          l7934 5D70  
                                        l8654 35B4                                          l8646 3582  
                                        l8638 352E                                          l8398 4B02  
                                        l8590 3C38                                          l8574 3AA0  
                                        l8558 5918                                          l8566 5A1A  
                                        l8910 1BD2                                          l8902 1BA4  
                                        l8830 18C0                                          l8822 1820  
                                        l8814 1796                                          l8806 170A  
                                        l8750 14B2                                          l8742 1462  
                                        l8734 1398                                          l8718 12E2  
                                        l8670 1116                                          l8662 10E6  
                                        l8486 4E8E                                          l8478 4E2C  
                                        l8494 4FCC                                          l9198 4040  
                                        l9438 3860                                          l9390 3654  
                                        l9382 35F8                                          l9550 5122  
                                        l9542 50B4                                          l9294 3152  
                                        l9286 311C                                          l9278 30D6  
                                        l9374 463C                                          l9366 45F4  
                                        l9358 45B4                                          l6888 6178  
                                        l6896 61C4                                          l6976 563C  
                                        l6968 5624                                          l9536 47B8  
                                        l9528 476C                                          l7880 2706  
                                        l7872 26DC                                          l7856 2668  
                                        l7848 25FC                                          l7792 24AC  
                                        l7784 249C                                          l7776 248C  
                                        l7768 2472                                          l9472 38FA  
                                        l9464 38C8                                          l9456 388A  
                                        l7960 42AC                                          l7952 425A  
                                        l7696 59B2                                          l7928 5CBA  
                                        l7936 5D7C                                          l8656 35BC  
                                        l8648 3590                                          l8592 3C4C  
                                        l8584 3B8C                                          l8576 3AF8  
                                        l7944 5E22                                          l8568 5A2C  
                                        l8920 1C08                                          l8912 1BE2  
                                        l8904 1BA8                                          l8840 192E  
                                        l8832 18F4                                          l8824 1830  
                                        l8816 17CA                                          l8808 173E  
                                        l8752 14C4                                          l8760 1510  
                                        l8744 146A                                          l8736 13CC  
                                        l8728 1348                                          l8680 116C  
                                        l8672 113A                                          l8664 10F0  
                                        l8488 4EAE                                          l8496 4FEA  
                                        l9384 3610                                          l9552 5136  
                                        l9544 50CA                                          l9296 3168  
                                        l9288 312E                                          l9376 464A  
                                        l9368 4602                                          l9560 47CE  
                                        l6898 61D8                                          l6978 5648  
                                        l9538 47C4                                          l7890 273E  
                                        l7874 26EA                                          l7866 26C2  
                                        l7882 2708                                          l7858 2678  
                                        l7794 24B0                                          l7786 24A0  
                                        l7778 2490                                          l9482 39BA  
                                        l9474 3910                                          l9466 38D4  
                                        l9458 388E                                          l7970 42F6  
                                        l7962 42B0                                          l7954 427A  
                                        l7698 59C4                                          l7938 5D80  
                                        l8658 35CE                                          l8594 3C74  
                                        l8586 3BC8                                          l8578 3B0C  
                                        l8930 1C64                                          l8922 1C14  
                                        l8914 1BEA                                          l8906 1BB8  
                                        l8850 19E4                                          l8842 193A  
                                        l8834 1908                                          l8826 1864  
                                        l8818 17DE                                          l8770 1550  
                                        l8754 14D6                                          l8738 13D2  
                                        l8746 149E                                          l8690 119A  
                                        l8682 117E                                          l8674 1144  
                                        l8666 1100                                          l8498 4FF2  
                                        l9386 362C                                          l9394 3660  
                                        l9554 5154                                          l9546 5100  
                                        l9298 317E                                          l9378 4662  
                                        l9570 486C                                          l9562 47FA  
                                        l7876 26F2                                          l7868 26CC  
                                        l7884 2716                                          l7796 24B4  
                                        l7788 24A4                                          l9476 39A2  
                                        l9468 38E0                                          l9492 39D2  
                                        l7980 4366                                          l7972 4304  
                                        l7964 42BC                                          l7956 427E  
                                        l7948 4248                                          l8596 3C84  
                                        l8588 3BFC                                          l8940 1CAE  
                                        l8924 1C1A                                          l8932 1C6A  
                                        l8916 1BF8                                          l8908 1BCA  
                                        l8860 1A2E                                          l8852 19F6  
                                        l8844 195E                                          l8828 18BC  
                                        l8836 190C                                          l8780 15AC  
                                        l8772 1586                                          l8756 14DE  
                                        l8748 14AE                                          l8684 118A  
                                        l8692 11A0                                          l8676 114C  
                                        l8668 110E                                          l9396 36A2  
                                        l9388 3638                                          l9556 515E  
                                        l9548 510E                                          l9580 48A4  
                                        l9572 4870                                          l9564 480C  
                                        l7894 2768                                          l7886 271A  
                                        l7878 26F6                                          l7798 24B8  
                                        l9486 39C6                                          l9478 39AE  
                                        l9494 3A2C                                          l7982 4378  
                                        l7974 4316                                          l7966 42DA  
                                        l7958 428C                                          l8950 1CE0  
                                        l8942 1CBA                                          l8934 1C7C  
                                        l8926 1C40                                          l8918 1C00  
                                        l8870 1A64                                          l8862 1A3E  
                                        l8854 1A04                                          l8846 19C2  
                                        l8838 191C                                          l8790 15F0  
                                        l8782 15BE                                          l8774 158E  
                                        l8766 1522                                          l8758 14F8  
                                        l8694 11C6                                          l8686 1192  
                                        l8678 115E                                          l9398 36B8  
                                        l9558 5162                                          l9590 48E0  
                                        l9582 48B8                                          l9574 4882  
                                        l9566 4810                                          l7896 2774  
                                        l7888 2728                                          l9496 3A4A  
                                        l7976 4344                                          l7968 42E2  
                                        l7984 437E                                          l7992 43D0  
                                        l8960 1D3A                                          l8944 1CC2  
                                        l8936 1C96                                          l8928 1C5C  
                                        l8880 1A98                                          l8872 1A68  
                                        l8864 1A42                                          l8848 19D0  
                                        l8856 1A0C                                          l8792 1608  
                                        l8784 15CC                                          l8768 1534  
                                        l8776 1592                                          l8688 1196  
                                        l9760 3678                                          l9576 4886  
                                        l9568 4814                                          l9592 6310  
                                        l7898 2782                                          l9498 3A52  
                                        l7986 438E                                          l7978 4364  
                                        l7994 43D4                                          l8962 1D4C  
                                        l8954 1D14                                          l8946 1CD4  
                                        l8938 1C9C                                          l8890 1B36  
                                        l8882 1A9C                                          l8874 1A6E  
                                        l8866 1A48                                          l8858 1A20  
                                        l8794 161A                                          l8786 15D0  
                                        l8778 159A                                          l8698 11FC  
                                        l8970 3C96                                          l9762 37BC  
                                        l9586 48D0                                          l9578 4894  
                                        l9594 6314                                          l7988 43AE  
                                        l7996 43E2                                          l8964 1D52  
                                        l8956 1D26                                          l8948 1CDA  
                                        l8868 1A54                                          l8876 1A74  
                                        l8884 1AA2                                          l8892 1B3A  
                                        l8788 15E2                                          l8796 1622  
                                        l8980 3D08                                          l8972 3CA4  
                                        l9764 3FA8                                          l9588 48DC  
                                        l9596 6316                                          l9766 39E6  
                                        l7998 4402                                          l8958 1D32  
                                        l8966 1D6E                                          l8894 1B58  
                                        l8886 1AFA                                          l8878 1A86  
                                        l8798 162A                                          l8990 3D9C  
                                        l8982 3D12                                          l8974 3CA6  
                                        l9758 32DA                                          l9598 6324  
                                        STR_1 1048                                          l8896 1B74  
                                        l8888 1B2E                                          l8984 3D18  
                                        l8992 3E00                                          l8976 3CC0  
                                        STR_2 101B                                          STR_3 1001  
                                        l8898 1B86                                          l8994 3E14  
                                        l8986 3D8E                                          l8978 3CFE  
                                        STR_4 1033                                          STR_5 105C  
                                        l8996 3E32                                          l8988 3D96  
                                        STR_6 10BD                                          STR_7 1088  
                                        l8998 3E4C                                          STR_8 1096  
                                        STR_9 10CA                                          _LATA 003FBA  
                                        _LATB 003FBB                                          _LATC 003FBC  
                                        _LATD 003FBD                                          _LATE 003FBE  
                                        _T2PR 003FAB                                          _T4PR 003F9F  
                                        _PMD0 0039C0                                          _PMD1 0039C1  
                                        _PMD2 0039C2                                          _PMD3 0039C3  
                                        u8000 27BC                                          _PMD4 0039C4  
                                        u8001 27B8                                          _PMD5 0039C5  
                                        u8010 27CE                                          _PMD6 0039C6  
                                        u8011 27CA                                          _PMD7 0039C7  
                                        u6500 497E                                          u8020 27DE  
                                        u8100 425A                                          u6501 497A  
                                        u8021 27DA                                          u8101 4256  
                                        u6510 49A6                                          u8030 27FE  
                                        u8110 428C                                          u6511 49A2  
                                        u8031 27FA                                          u8111 4288  
                                        u6520 49D8                                          u8040 2810  
                                        u8200 447C                                          u9000 5304  
                                        u2985 5B28                                          u6521 49D4  
                                        u6425 602C                                          u8041 280C  
                                        u8121 42B6                                          u8201 4478  
                                        u9001 5300                                          u2986 5B2A  
                                        u8050 282C                                          u8130 42DA  
                                        u8210 44AA                                          u9010 5326  
                                        u6435 5FF8                                          u8051 2828  
                                        u8131 42D6                                          u8211 44A6  
                                        u9011 5322                                          u8140 4304  
                                        u8220 44F2                                          u8060 5CF0  
                                        u9020 537C                                          u8300 2DB4  
                                        u9100 4CF2                                          u6460 60C2  
                                        u8141 4300                                          u8221 44EE  
                                        u8061 5CEC                                          u9021 5378  
                                        u8301 2DB0                                          u9101 4CEC  
                                        u6461 60BE                                          u6470 4900  
                                        u8150 4344                                          u8070 5D9C  
                                        u9030 538A                                          u8310 2E2A  
                                        u8230 2CAC                                          u9110 4CF4  
                                        u6471 48FC                                          u8151 4340  
                                        u8071 5D98                                          u9031 5386  
                                        u8311 2E26                                          u8231 2CA8  
                                        u6480 4922                                          u8160 438E  
                                        u9040 5D0C                                          u7600 5996  
                                        u8400 2F44                                          u8320 2E4C  
                                        u8240 2CBE                                          u9120 596E  
                                        u8080 5E52                                          u6481 491E  
                                        u8161 438A                                          u9041 5D08  
                                        u7601 5992                                          u8401 2F40  
                                        u8321 2E48                                          u8241 2CBA  
                                        u8081 5E4C                                          u6490 495C  
                                        u8170 43E2                                          u7610 59A6  
                                        u8410 2F58                                          u8330 2E76  
                                        u8250 2CCE                                          u9050 4C48  
                                        u9210 3B88                                          u9130 5980  
                                        u8090 5E54                                          u6491 4958  
                                        u8171 43DE                                          u7611 59A2  
                                        u8411 2F54                                          u8331 2E72  
                                        u8251 2CCA                                          u9211 3B84  
                                        u9131 597C                                          u8500 28D0  
                                        u6740 572C                                          u6660 4F06  
                                        u7700 23FE                                          u8180 4414  
                                        u7620 59D6                                          u9300 338A  
                                        u8420 2F72                                          u8340 2E9A  
                                        u8260 2D12                                          u9060 4C66  
                                        u9220 3BAC                                          u9140 5A14  
                                        u8501 28CC                                          u6741 5728  
                                        u6661 4F02                                          u7701 23FA  
                                        u8181 4410                                          u7621 59D2  
                                        u9301 3386                                          u8421 2F6E  
                                        u8341 2E96                                          u8261 2D0E  
                                        u9061 4C62                                          u9205 3B2E  
                                        u9141 5A0E                                          u8510 28E0  
                                        u6750 573C                                          u6670 4F22  
                                        u7710 2414                                          u8190 4452  
                                        u7630 568A                                          u9310 33A6  
                                        u8430 2FBA                                          u8350 2EB0  
                                        u8270 2D24                                          u9070 4C8E  
                                        u9230 3BC8                                          u9206 3B38  
                                        u9150 5A16                                          u8511 28DC  
                                        u6751 5738                                          u6671 4F1E  
                                        u7711 2410                                          u8191 444E  
                                        u7631 5686                                          u9311 33A2  
                                        u8431 2FB6                                          u8351 2EAC  
                                        u8271 2D20                                          u9071 4C8A  
                                        u9055 4C3E                                          u9231 3BC4  
                                        u9207 3B48                                          u9127 5960  
                                        u8600 2BA8                                          u8520 2916  
                                        u6680 4F62                                          u7800 254E  
                                        u7720 2426                                          u7640 569C  
                                        u9400 3590                                          u9320 33D4  
                                        u8440 2FEA                                          u8360 2ECE  
                                        u8280 2D34                                          u9080 4CB8  
                                        u9240 3C1C                                          u9160 5A2C  
                                        u8601 2BA4                                          u8521 2912  
                                        u6681 4F5E                                          u7801 254A  
                                        u7721 2422                                          u7641 5698  
                                        u9401 358C                                          u9321 33D0  
                                        u8441 2FE6                                          u8361 2ECA  
                                        u8281 2D30                                          u9081 4CB4  
                                        u9225 3BA2                                          u9161 5A28  
                                        u8610 2BC2                                          u8530 2926  
                                        u6690 4F7E                                          u7810 256E  
                                        u7730 2436                                          u7650 56C4  
                                        u9410 35A8                                          u9330 33E2  
                                        u8450 3018                                          u8370 2EEE  
                                        u8290 2D74                                          u9250 3C38  
                                        u9170 3ACA                                          u8611 2BBE  
                                        u8531 2922                                          u6691 4F7A  
                                        u7811 256A                                          u7731 2432  
                                        u7651 56C0                                          u9411 35A4  
                                        u9331 33DE                                          u8451 3014  
                                        u8371 2EEA                                          u8291 2D70  
                                        u9251 3C34                                          u8700 52E4  
                                        u8620 2C0A                                          u8540 2AC4  
                                        u8460 285C                                          u7900 26AE  
                                        u7820 257C                                          u7740 2472  
                                        u7660 56FA                                          u9340 3510  
                                        u8380 2F00                                          u9260 3C74  
                                        u9180 3AF8                                          u9500 129A  
                                        u9420 110E                                          u8701 52E0  
                                        u8621 2C06                                          u8461 2858  
                                        u7901 26AA                                          u7821 2578  
                                        u7741 246E                                          u7661 56F6  
                                        u9341 350C                                          u8381 2EFC  
                                        u9261 3C70                                          u9245 3C12  
                                        u9181 3AF4                                          u9501 1296  
                                        u9421 110A                                          u8630 2C38  
                                        u8550 2B1E                                          u8470 286E  
                                        u7910 26DA                                          u7830 258C  
                                        u7750 2480                                          u7670 239A  
                                        u9350 352E                                          u9270 3344  
                                        u8710 548A                                          u8390 2F2E  
                                        u9190 3B1A                                          u9510 12CA  
                                        u9430 115E                                          u8631 2C34  
                                        u8551 2B1A                                          u8471 286A  
                                        u7911 26D6                                          u7831 2588  
                                        u7751 247C                                          u7671 2396  
                                        u9351 352A                                          u9271 333E  
                                        u8711 5486                                          u8391 2F2A  
                                        u9095 4CCA                                          u9191 3B16  
                                        u9175 3AC0                                          u9511 12C4  
                                        u9431 115A                                          u8640 2C72  
                                        u8560 2B3E                                          u8480 287E  
                                        u7920 26EA                                          u7840 25BE  
                                        u7760 24EE                                          u7680 23AC  
                                        u9360 3548                                          u9280 3346  
                                        u8720 54A4                                          u8800 4B32  
                                        u9600 151E                                          u9520 12CC  
                                        u9440 116C                                          u8641 2C6E  
                                        u8561 2B3A                                          u8545 2ABA  
                                        u8481 287A                                          u7921 26E6  
                                        u7841 25BA                                          u7761 24EA  
                                        u7681 23A8                                          u9361 3544  
                                        u8721 54A0                                          u8801 4B2E  
                                        u9601 151A                                          u9441 1168  
                                        u8650 5244                                          u8570 2B50  
                                        u8490 28BE                                          u7930 2706  
                                        u7850 25CC                                          u7770 2506  
                                        u7690 23BC                                          u9370 3562  
                                        u9290 335C                                          u8730 54BE  
                                        u8810 4B70                                          u9610 1534  
                                        u9530 12E2                                          u9450 117E  
                                        u8651 5240                                          u8571 2B4C  
                                        u8491 28BA                                          u7931 2702  
                                        u7851 25C8                                          u7771 2500  
                                        u7691 23B8                                          u9371 355E  
                                        u9291 3358                                          u8731 54BA  
                                        u8811 4B6C                                          u9611 1530  
                                        u9531 12DE                                          u9451 117A  
                                        u8660 525E                                          u8580 2B7E  
                                        u8900 4AB0                                          u7940 2716  
                                        u7860 25EA                                          u7780 2508  
                                        u9380 3570                                          u8740 54DC  
                                        u8820 4B8E                                          u9700 1762  
                                        u9620 1550                                          u9540 1394  
                                        u9460 11C6                                          u8661 525A  
                                        u8581 2B7A                                          u8901 4AAC  
                                        u7941 2712                                          u7861 25E6  
                                        u9381 356C                                          u8741 54D8  
                                        u8821 4B8A                                          u9701 175E  
                                        u9621 154C                                          u9541 1390  
                                        u9461 11C2                                          u8670 5284  
                                        u8590 2B94                                          u8910 4AD0  
                                        u7950 2728                                          u7870 2622  
                                        u7790 2530                                          u9390 3582  
                                        u8750 54F2                                          u8830 4BAE  
                                        u9710 17CA                                          u9630 1586  
                                        u9550 142A                                          u9470 11F6  
                                        u8671 5280                                          u8591 2B90  
                                        u8911 4ACC                                          u7951 2724  
                                        u7871 261E                                          u7791 252C  
                                        u9391 357E                                          u8751 54EE  
                                        u8831 4BAA                                          u9711 17C6  
                                        u9631 1582                                          u9551 1426  
                                        u9471 11F0                                          u8680 52A2  
                                        u8920 4AE0                                          u7960 273E  
                                        u7880 2668                                          u8760 5516  
                                        u8840 4BFE                                          u9800 1A04  
                                        u9720 1810                                          u9640 15AC  
                                        u9560 149E                                          u9480 11F8  
                                        u8681 529E                                          u8921 4ADC  
                                        u7961 273A                                          u7881 2664  
                                        u8761 5512                                          u8841 4BFA  
                                        u9801 1A00                                          u9721 180C  
                                        u9641 15A8                                          u9561 149A  
                                        u8690 52BE                                          u7970 2754  
                                        u7890 269E                                          u8770 5556  
                                        u8850 5E70                                          u9810 1A20  
                                        u9730 1820                                          u9650 15BE  
                                        u9570 14C4                                          u9490 120E  
                                        u8691 52BA                                          u7971 2750  
                                        u7891 269A                                          u8771 5552  
                                        u8851 5E6C                                          u9811 1A1C  
                                        u9731 181C                                          u9651 15BA  
                                        u9571 14C0                                          u9491 120A  
                                        u8931 4E00                                          u8860 4A12  
                                        u7980 2768                                          u8780 5594  
                                        u9900 1C7C                                          u9820 1A2E  
                                        u9740 18BC                                          u9660 15CC  
                                        u9580 14D6                                          u8940 4E24  
                                        u8861 4A0E                                          u7981 2764  
                                        u8781 5590                                          u9901 1C78  
                                        u9821 1A2A                                          u9741 18B8  
                                        u9661 15C8                                          u9581 14D2  
                                        u8941 4E20                                          u8870 4A46  
                                        u7990 2782                                          u8790 55C8  
                                        u9910 1C96                                          u9830 1A86  
                                        u9750 1908                                          u9670 15E2  
                                        u9590 14F8                                          u8950 4E4E  
                                        u7991 277E                                          u8791 55C4  
                                        u9911 1C92                                          u9831 1A82  
                                        u9751 1904                                          u9671 15DE  
                                        u9591 14F4                                          u8951 4E4A  
                                        u8880 4A74                                          u9920 1CAE  
                                        u9840 1B58                                          u9760 192E  
                                        u9680 15F0                                          u8960 4E8E  
                                        u8881 4A70                                          u9921 1CAA  
                                        u9841 1B54                                          u9761 192A  
                                        u9681 15EC                                          u8961 4E8A  
                                        u8890 4A88                                          u9930 1D0E  
                                        u9850 1B74                                          u9770 19D0  
                                        u9690 161A                                          u8970 4FEA  
                                        u8891 4A84                                          u8875 4A3C  
                                        u9931 1D08                                          u9851 1B70  
                                        u9771 19CC                                          u9691 1616  
                                        u8971 4FE6                                          u9940 1D10  
                                        u9860 1B86                                          u9780 19E4  
                                        u8980 5014                                          u9861 1B82  
                                        u9781 19E0                                          u8981 5010  
                                        u9950 1D26                                          u9870 1B94  
                                        u9790 19F6                                          u8990 5042  
                                        u9951 1D22                                          u9871 1B90  
                                        u9791 19F2                                          u8991 503E  
                                        u9880 1BCA                                          u9960 3CA4  
                                        u9881 1BC6                                          u9961 3CA0  
                                        u9890 1BF8                                          u9970 3CC0  
                                        _TMR2 003FAA                                          u9891 1BF4  
                                        u9971 3CBC                                          u9980 3E14  
                                        _TMR4 003F9E                                          u9981 3E10  
                                        u9990 3E32                                          u9991 3E2E  
                                        _WPUA 003A41                                          _WPUB 003A51  
                                        _WPUC 003A61                                          _WPUD 003A71  
                                        _WPUE 003A81                           ?_UART1_Transmit_ISR 0001  
                                        abs@a 0026                                          _dbuf 0145  
                                        _main 6310                                          _dtoa 3312  
                                        _loop 47CE                                          _prec 003A  
                                        _nout 0128                                          pad@i 002D  
                                        pad@p 002A                                          fsr1h 003FE2  
                                        fsr2h 003FDA                                          indf1 003FE7  
                                        indf2 003FDF                                          fsr1l 003FE1  
                                        pad@w 002F                                          fsr2l 003FD9  
                                        _utoa 3C96                                 ___fpclassifyf 4C08  
                                        prodh 003FF4                                          prodl 003FF3  
                                        start 00AE                               _timer5ReloadVal 019B  
                             ___fldiv@new_exp 0065                               _TMR3_Initialize 5E92  
                             _PWM5_Initialize 63B2                             ??_CLC3_Initialize 0014  
               ??_UART1_SetTxInterruptHandler 0016                                  _tolower$3698 0020  
                  ??_TMR4_SetInterruptHandler 0016                             _UART1_rx_vect_isr 5DE8  
                                ___param_bank 000000                    __end_of_PWM5_LoadDutyValue 5FD4  
                          ?_UART1_rx_vect_isr 0001                                         ??_abs 0028  
                                       ??_pad 002C                __size_of_OSCILLATOR_Initialize 0018  
                        ??_UART1_Transmit_ISR 0011                 __end_of_OSCILLATOR_Initialize 63E2  
                               ___fltol@sign1 0081                               __end_of___aldiv 49FA  
                             __end_of___aodiv 43D0                                         _ADCAP 003EF5  
                                       _ADACT 003EFE                       __end_of_CCP3_Initialize 6196  
                             __end_of___fladd 2840                                         ?_main 0001  
                                       ?_dtoa 0060                                         _ADCLK 003EFF  
                             __end_of___aomod 4534                                         _ADCNT 003EEB  
                                       _ADPCH 003EF1                               __end_of___fldiv 302C  
                                       _ADREF 003EFD                               __end_of___awdiv 52F6  
                             __end_of___flneg 5E92                                         ?_loop 0001  
                                       STR_10 107A                                         STR_11 10A3  
                                       STR_12 106C                                         STR_13 10B0  
                                       STR_22 10E2                                         STR_14 10D2  
                                       STR_15 10DA                                         STR_24 10E2  
                                       STR_18 10D6                                         STR_19 10DE  
                             __end_of___awmod 5528                                         _ADRPT 003EEC  
                      ??_CCP4_DefaultCallBack 0007                               __end_of___flmul 2C90  
                    TMR5_ReadTimer@readValLow 0010                               __end_of___flsub 5C66  
                             __end_of___fltol 4B02                                         u10000 3E4C  
                                       u10001 3E48                                         u10010 3E66  
                                       u10011 3E62                                         u10020 3E74  
                                       u10100 1E76                                         u10021 3E70  
                                       u10101 1E72                                         u10030 4D30  
                                       u10110 1EE4                                         u10031 4D2C  
                                       u10111 1EE0                                         ?_utoa 0060  
                                       u10040 4D66                                         u10120 1F12  
                                       u10041 4D62                                         u10121 1F0E  
                                       u10050 4D88                                         u10130 1FB8  
                                       u10051 4D84                                         u10131 1FB4  
                                       u10300 4226                                         u10220 40A6  
                                       u10060 4D9A                                         u10140 208A  
                                       u10301 4222                                         u10221 40A2  
                                       u10061 4D96                                         u10141 2086  
                                       u10205 5FC4                                         u10310 4234  
                                       u10230 40B4                                         u10070 4DCC  
                                       u10150 210C                                         u10311 4230  
                                       u10231 40B0                                         u10071 4DC8  
                                       u10151 2106                                         u10215 5F90  
                                       u10240 4110                                         u10160 210E  
                                       u10080 1DC2                                         u10320 590E  
                                       u10400 57BE                                         u10241 410C  
                                       u10081 1DBE                                         u10321 590A  
                                       u10401 57BA                                         u10250 4166  
                                       u10170 2124                                         u10090 1E26  
                                       u10330 3FF4                                         u10410 5812  
                                       u10251 4162                                         u10171 2120  
                                       u10091 1E22                                         u10331 3FF0  
                                       u10411 580E                                         u10260 41B0  
                                       u10180 221E                                         u10340 401C  
                                       u10500 3168                                         u10420 3074  
                                       u10261 41AC                                         u10181 221A  
                                       u10341 4018                                         u10501 3164  
                                       u10421 3070                                         u10270 41CE  
                                       u10190 22E4                                         u10350 4040  
                                       u10510 317E                                         u10430 3090  
                                       u10271 41CA                                         u10191 22E0  
                                       u10351 403C                                         u10511 317A  
                                       u10431 308C                                         u10280 41DE  
                                       u10360 4068                                         u10520 3194  
                                       u10440 30A6                                         u10600 45B4  
                                       u10281 41DA                                         u10361 4064  
                                       u10521 3190                                         u10441 30A2  
                                       u10601 45B0                                         u10290 41EC  
                                       u10370 584E                                         u10530 3226  
                                       u10450 30D6                                         u10610 45C6  
                                       u10291 41E8                               __end_of___lodiv 4EEA  
                                       u10371 584A                                         u10531 3222  
                                       u10451 30D2                                         u10611 45C2  
                                       u10700 3816                                         u10380 586C  
                                       u10540 3276                                         u10460 30F2  
                                       u10620 45DC                               ___awdiv@divisor 0016  
                                       u10701 3812                                         u10381 5868  
                                       u10541 3272                                         u10461 30EE  
                                       u10621 45D8                                         u10710 3828  
                                       u10390 5888                                         u10550 32B6  
                                       u10470 3108                                         u10630 461E  
                                       u10711 3824                                         u10391 5884  
                                       u10551 32B2                                         u10471 3104  
                                       u10631 461A                                         u10800 4740  
                                       u10720 3840                                         u10480 312E  
                                       u10640 463C                                         u10560 454C  
                                       u10801 473C                                         u10721 383C  
                                       u10481 312A                                         u10641 4638  
                                       u10561 4548                                         u10810 475C  
                                       u10730 388A                                         u10490 3152  
                                       u10650 4662                                         u10570 4568  
                                       _U1P1H 003DED                                         u10811 4758  
                                       u10731 3886                                         u10491 314E  
                                       u10651 465E                                         u10571 4564  
                                       u10820 4788                                         u10740 38AA  
                                       u10660 362C                                         u10580 457A  
                                       u10900 4894                                         _U1P2H 003DEF  
                                       u10821 4784                                         u10741 38A6  
                                       u10661 3628                                         u10581 4576  
                                       u10901 4890                                         u10830 47B0  
                                       u10750 38C8                                         u10670 3654  
                                       u10590 459C                                         u10910 48CC  
                                       _U1P1L 003DEC                                         _U1P3H 003DF1  
                                       u10831 47AC                                         u10751 38C4  
                                       u10671 3650                                         u10591 4598  
                                       u10911 48C8                                         _T3CLK 003FA9  
                                       u10760 38F6                                         u10680 370E  
                                       u10840 50B4                                         _T2CON 003FAC  
                                       _U1P2L 003DEE                                         u10761 38F2  
                                       u10681 370A                                         u10841 50B0  
                                       u10770 3910                                         u10690 3736  
                                       u10850 50CA                                         _U1P3L 003DF0  
                                       u10771 390C                                         u10691 3732  
                                       u10851 50C6                                         u10780 3A4A  
                                       u10860 47FA                                         u10781 3A46  
                                       u10861 47F6                                         u10790 3A6E  
                                       u10870 480C                                         u10791 3A6A  
                                       u10871 4808                                         u10880 485C  
                                       _T3CON 003FA6                                         u10881 4858  
                                       u10890 4882                                         u10891 487E  
                                       _T5CLK 003F9D                                         _T4CON 003FA0  
                             __end_of___lomod 509C                                         _T2HLT 003FAD  
                                       _T5CON 003F9A                                         _T4HLT 003FA1  
                             __end_of___lwdiv 58A8                                         _T2TMR 003FAA  
                                       _U1UIR 003DF8                                         i1l330 5E1A  
                                       _T2RST 003FAF                                         _U1RXB 003DE8  
                                       i1l324 5DDE                                         i1l333 5CA8  
                                       i1l350 6476                                         i1l343 5476  
                                       i1l336 5CAC                                         i1l353 6474  
                                       _U1TXB 003DEA                                         i1l347 6246  
                                       i1l356 6472                                         _T4TMR 003F9E  
                                       _T4RST 003FA3                                         i2l409 647C  
                                       i1l692 61C2                                         i2l534 6272  
                                       i2l438 5F34                                         i2l446 606E  
                                       i2l552 6108                                         i1l688 5D68  
                                       i2l529 630E                                         i2l537 63FE  
                                       i1l698 6478                                         i2l476 5F6A  
                                       i2l558 634C                                         i2l487 60A2  
                         ??_UART1_rx_vect_isr 0012                                         i2l863 5AF2  
                                       i2l856 5C1C                                         i2l868 62C6  
                             ___awdiv@counter 0018                                         _OSCEN 0039DD  
                                vfpfcnvrt@fmt 00C9                                  vfpfcnvrt@llu 00D9  
                                       _TMR3H 003FA5                                         _TMR5H 003F99  
                                       _TMR3L 003FA4                                         _TMR5L 003F98  
                                       _TRISA 003FC2                                         _TRISB 003FC3  
                                       _TRISC 003FC4                                         _TRISD 003FC5  
                                       _TRISE 003FC6                                   _Default_ISR 647C  
                             _TMR4_Initialize 61C4                               _PWM6_Initialize 639A  
                           _UART1_tx_vect_isr 5DAC                              __end_of_TMR4_ISR 5D70  
                     setSteering@steeringMode 0085                                         _delay 00F9  
                                       _flags 003C                                         _fputc 5678  
                                       _fputs 5CAE                         __size_of_calcMotorPow 014C  
                          ?_UART1_tx_vect_isr 0001                                         pad@fp 0026  
                                       _width 012A                                         _putch 6400  
                                       dtoa@d 0062                                         dtoa@i 007A  
                                       dtoa@n 0072                                         dtoa@p 006C  
                                       dtoa@s 0070                                         dtoa@w 006E  
                            ?_SMT1_Initialize 0001                               __end_of_isupper 5E5A  
                                       pclath 003FFA                                         tablat 003FF5  
                                 _BatteryVolt 012C                               _curveRightCount 0042  
                       __size_of_calcSteering 026E                                         utoa@d 0062  
                                       utoa@i 0076                                         utoa@n 006E  
                                       utoa@p 006A                                         utoa@w 006C  
                                       status 003FD8           __end_of_UART1_SetRxInterruptHandler 641E  
                 _UART1_SetRxInterruptHandler 6414                       __end_of_CCP4_Initialize 6168  
                              ?___fpclassifyf 0014                               __end_of_tolower 5A44  
                             __end_of_strncmp 4DFA                              ___lodiv@dividend 0014  
         fp__UART1_DefaultFramingErrorHandler 0000      __end_of_UART1_DefaultFramingErrorHandler 6478  
   __size_of_UART1_DefaultFramingErrorHandler 0002            ??_UART1_DefaultFramingErrorHandler 0012  
           ?_UART1_DefaultFramingErrorHandler 0001              _UART1_DefaultFramingErrorHandler 6476  
                         ??_UART1_tx_vect_isr 0011                     __end_of_UART1_rx_vect_isr 5E22  
                             _TMR5_Initialize 5B8A                               _PWM7_Initialize 6382  
                             __initialization 5ECA                         TMR5_ReadTimer@readVal 000D  
                            ?_CCP3_CaptureISR 0001                                  __end_of_main 6330  
                                __end_of_dtoa 35F8                                  __end_of_loop 48EE  
                            ?_checkCurveCount 0001                                  __end_of_utoa 3E9E  
                 ??_UART1_DefaultErrorHandler 0012                       __end_of_TMR2_Initialize 636A  
                              _roundTimeCount 00F3                                  ?_UART1_Write 0001  
                                      ??_main 003A                                        ??_dtoa 0031  
                                      ??_loop 003A                                        ??_utoa 0031  
                               __activetblptr 000003                                  _calcMotorPow 4682  
        __size_of_UART1_SetTxInterruptHandler 000A                     __end_of_UART1_tx_vect_isr 5DE6  
                            ___lodiv@quotient 0024                               _PWM8_Initialize 636A  
                            _UART1_Initialize 55D2                                  _calcSteering 35F8  
                            ?_CCP4_CaptureISR 0001                                        _ADACCH 003EE9  
                                      _ADACCL 003EE8                                        _ADACCU 003EEA  
                                      _ADACQH 003EF4                                        _ADACQL 003EF3  
                                      _ADCON0 003EF8                                        _ADCON1 003EF9  
                                      _ADCON2 003EFA                                        _ADCON3 003EFB  
                                      _ADERRH 003EE3                                        _ADERRL 003EE2  
                                      ?_fputc 0016                                        _ADLTHH 003EDF  
                                      _ADLTHL 003EDE                                        ?_fputs 001F  
                                      _ADRESH 003EF0                                        _ADRESL 003EEF  
                                      _ADPREH 003EF7                                        _ADPREL 003EF6  
                                      _CCPR3H 003F75                                        _CCPR4H 003F71  
                                      _CCPR3L 003F74                                        _CCPR4L 003F70  
                                      _ADSTAT 003EFC                                        _ADUTHH 003EE1  
                            ___awdiv@dividend 0014                                        _ADUTHL 003EE0  
                          _PWM8_LoadDutyValue 5FD4                                        _ANSELA 003A40  
                                      ?_putch 0001                                        _ANSELB 003A50  
                                      _ANSELC 003A60                                        _ANSELD 003A70  
                                      _ANSELE 003A80                                        _RB1I2C 003A5A  
                                      _RB2I2C 003A5B                                        _RD0I2C 003A7A  
                                      _U1CON0 003DF2                                        _U1CON1 003DF3  
                                      _U1CON2 003DF4                                        _RC3I2C 003A6A  
                                      _RD1I2C 003A7B                                        _T3GATE 003FA8  
                                      _RC4I2C 003A6B                                        _U1BRGH 003DF6  
                                      _U1FIFO 003DF7                                        _T3GCON 003FA7  
                                      _U1BRGL 003DF5                                        _T5GATE 003F9C  
                                      _T5GCON 003F9B                                        _RA0PPS 003A00  
                                      _RA1PPS 003A01                                        _RA3PPS 003A03  
                                      _RA4PPS 003A04                                        _RB3PPS 003A0B  
                                      _T5GPPS 003AC9                                        i1l1249 646C  
                                      _ODCONA 003A42                                        _ODCONB 003A52  
                                      _ODCONC 003A62                                        _ODCOND 003A72  
                                      _ODCONE 003A82                       __end_of_PWM5_Initialize 63CA  
                     __end_of_TMR3_Initialize 5ECA                                        i1l7312 6464  
                                      i1l7430 61AA                                        i1l7360 5C78  
                                      i1l7370 53B8                                        i1l7362 5C8A  
                                      i1l7428 6196                                        i1l7380 5410  
                                      i1l7372 53C8                                        i1l7364 5C8C  
                                      i1l6750 6230                                        i1l7382 5420  
                                      i1l7374 53D8                                        i1l7366 5C9C  
                                      i1l7358 5C66                                        i1l7470 5DC6  
                                      i1l6752 6240                                        i1l7384 5438  
                                      i1l7376 53E8                                        i1l7472 5DEE  
                                      i1l7368 5CA0                                        i1l6754 6244  
                                      i1l6746 621C                                        i1l7386 5454  
                                      i1l7378 5400                                        i1l7474 5E02  
                                      i1l7492 5D3A                                        i1l6748 622E  
                                      i1l7388 5472                                        i1l7468 5DB2  
                                      i1l7494 5D3E                                        i1l7496 5D5A  
                                      _INLVLA 003A44                                        i1l7498 5D5E  
                                      _INLVLB 003A54                                        _INLVLC 003A64  
                                      _INLVLD 003A74                                        _INLVLE 003A84  
                                      i1l6982 646E                                        i2l7400 5F44  
                                      i2l7410 6344                                        i2l7402 5F50  
                                      i2l7500 5BD4                                        i2l7412 6348  
                                      i2l7404 5F64                                        i2l7510 5AA0  
                                      i2l7502 5BD8                                        i2l7406 6330  
                                      i2l7520 62A0                                        i2l7512 5AA4  
                                      i2l7504 5BE8                                        i2l7408 633C  
                                      i2l7522 62A4                                        i2l7514 5ABE  
                                      i2l7506 5BF8                                        i2l7516 5ACE  
                                      i2l7508 5C0A                                        i2l7518 5AE0  
                                      i2l7390 5F00                                        i2l7480 6070  
                                      i2l7392 5F0E                                        i2l6770 6262  
                                      i2l6762 6248                                        i2l7482 6080  
                                      i2l7394 5F1A                                        i2l6764 6256  
                                      i2l6772 6268                                        i2l7484 60D8  
                                      i2l7396 5F2E                                        i2l7476 603C  
                                      i2l6774 626C                                        i2l6766 6258  
                                      i2l7486 60DC                                        i2l7398 5F36  
                                      i2l7478 604C                                        i2l6768 625C  
                                      i2l7488 60F0                                        i2l6984 62EC  
                                      i2l6992 63F2                                        i2l6986 62FA  
                                      i2l6988 6306                                  ?_setSteering 0083  
                                      _OSCFRQ 0039DF                              __end_of_actSpeed 57A2  
                                      _SMT1PR 003F1B                         _UART1_SetErrorHandler 6432  
                            __end_of___xxtofl 4248                           ?_PWM8_LoadDutyValue 0014  
                            __end_of_getCurve 3312                      __end_of_CCP3_SetCallBack 6464  
                                _CCPTMRS0bits 003F5E                                  _CCPTMRS1bits 003F5F  
                                vfprintf@cfmt 01AC                                        ___flge 4B02  
                                      ___fleq 5528                                     ??___aldiv 001C  
                                   ??___aodiv 0024                                     ??___fladd 0036  
                                   ??___aomod 0024                                     ??___fldiv 0032  
                                   ??___awdiv 0018                                     ??___flneg 0018  
                                   ??___awmod 0018                                     ??___flmul 0032  
                                   ??___flsub 003A                                     ??___fltol 007D  
                                   ??___lodiv 0024                                     ??___lomod 0024  
                                      _efgtoa 10E6                                     ??___lwdiv 0018  
                               _CCP3_CallBack 019F                                        _floorf 3A80  
                                ?_TMR5_Reload 0001                       __end_of_PWM6_Initialize 63B2  
                     __end_of_TMR4_Initialize 61F0                                        clear_0 5ED0  
                                      clear_1 5EDC                                        clear_2 5EE8  
                            ___awdiv@quotient 001A                                        _motPow 0132  
                             ___awmod@divisor 0016                       fp__CCP3_DefaultCallBack 0000  
                                      isa$std 000001                               ___awmod@counter 0018  
                               _CCP4_CallBack 019D                                        _smtWay 0120  
                                      _printf 6274                                        pad@buf 0028  
                                      dtoa@fp 0060                              ?_CCP3_Initialize 0001  
                                      _strcpy 5918                                        _strlen 5D70  
                        ??_PWM8_LoadDutyValue 0016                              __end_of_setMotor 4FCC  
                             _ADCC_Initialize 5A44          __end_of_TMR4_DefaultInterruptHandler 647A  
       __size_of_TMR4_DefaultInterruptHandler 0002                  _TMR4_DefaultInterruptHandler 6478  
                                      fputc@c 0016                                _PMD_Initialize 62C8  
                                      fputs@c 0023                                        fputs@i 0024  
                                      fputs@s 001F                               ___fpclassifyf@e 001C  
                             ___fpclassifyf@u 001E                               ___fpclassifyf@x 0014  
                                __mediumconst 0000                         __end_of_TMR5_GATE_ISR 610A  
                                      tblptrh 003FF7                                     ??_isupper 0016  
                                      tblptrl 003FF6                                        tblptru 003FF8  
           __size_of_ADCC_GetSingleConversion 0032                              __end_of_vfprintf 5918  
                   ?_ADCC_GetSingleConversion 0014                                        utoa@fp 0060  
    TMR4_SetInterruptHandler@InterruptHandler 0014  TMR5_SetGateInterruptHandler@InterruptHandler 0014  
 UART1_SetTxInterruptHandler@InterruptHandler 0014   UART1_SetRxInterruptHandler@InterruptHandler 0014  
        __end_of_UART1_SetOverrunErrorHandler 6428         __size_of_UART1_SetOverrunErrorHandler 000A  
                _UART1_SetOverrunErrorHandler 641E                     _UART1_DefaultErrorHandler 646E  
                                   ??_tolower 001C                                     ??_strncmp 001A  
               __size_of_INTERRUPT_Initialize 004C                  __size_of_UART1_RxDataHandler 002C  
                           getCurve@deltaLeft 01B8                                    ___flge@ff1 006D  
                             ??___fpclassifyf 0018                                    ___flge@ff2 0071  
                     __end_of_PWM7_Initialize 639A                       __end_of_TMR5_Initialize 5BD4  
                                ___xxtofl@arg 0026                                  ___xxtofl@exp 0025  
                           _SYSTEM_Initialize 5B40                                  ___xxtofl@val 001C  
                                  ___fleq@ff1 0014                                    ___fleq@ff2 0018  
                                  __accesstop 0060                       __end_of__initialization 5EFA  
                                  ___flneg@f1 0014                              ?_CCP4_Initialize 0001  
                         setSteering@steering 0083                            ?_SYSTEM_Initialize 0001  
                               ___rparam_used 000001                    __size_of_UART1_rx_vect_isr 003A  
                                  ___fltol@f1 0079                               _TMR5_WriteTimer 6248  
                          __size_of_calcSpeed 021A                     calcMotorPow@setSpeedDelta 0085  
                    __end_of_CCP4_SetCallBack 645A                                __pcstackCOMRAM 0001  
                       __end_of_TMR4_CallBack 61C4                            __size_of_checkBatt 0092  
                         ??_SYSTEM_Initialize 0018                                     ?_TMR4_ISR 0001  
                              ivt0x8_undefint 00AC                                 __end_of_fputc 570E  
                               __end_of_fputs 5CF2                               fp__TMR4_10msISR 0000  
                               __end_of_putch 640A                              ?_TMR2_Initialize 0001  
                     __end_of_PWM8_Initialize 6382                        __end_of_PMD_Initialize 62EC  
                 __size_of_PWM7_LoadDutyValue 0034                         CCP3_CaptureISR@module 0003  
                  __size_of_UART1_tx_vect_isr 003A                CCP3_SetCallBack@customCallBack 0014  
                   _UART1_FramingErrorHandler 01A5               fp__TMR4_DefaultInterruptHandler 0000  
               ?_TMR4_DefaultInterruptHandler 0001                       fp__CCP4_DefaultCallBack 0000  
                    __size_of_SMT1_PR_ACQ_ISR 004A                                       ??_fputc 001A  
                   __end_of_SYSTEM_Initialize 5B8A                                       ??_fputs 0023  
                             _CLC3_Initialize 61F0                                       ??_putch 0015  
                 PWM7_LoadDutyValue@dutyValue 0014                                    __pbssBANK0 00F1  
                                  __pbssBANK1 0100                 ?_UART1_SetOverrunErrorHandler 0014  
                      ?_UART1_SetErrorHandler 0014                              ?_PWM5_Initialize 0001  
                            ?_TMR3_Initialize 0001                      __size_of_SMT1_PW_ACQ_ISR 0054  
                       _TMR4_InterruptHandler 0195                                       IVTBASEH 003FD6  
                                     IVTBASEL 003FD5                                       IVTBASEU 003FD7  
                                     ?___flge 006D                                       ?___fleq 0014  
                                  ??_TMR4_ISR 0013                       __end_of_ADCC_Initialize 5AA0  
                  __end_of_PWM6_LoadDutyValue 5FA0                                       ?_efgtoa 0083  
        __end_of_TMR5_SetGateInterruptHandler 6446         __size_of_TMR5_SetGateInterruptHandler 000A  
                _TMR5_SetGateInterruptHandler 643C                                       _CCP3CAP 003F77  
                                     _CCP4CAP 003F73                                       _CCP3CON 003F76  
                                     _CCP4CON 003F72                                       _ADFLTRH 003EE7  
                                     ?_floorf 0036                                       _ADFLTRL 003EE6  
               __size_of_CCP3_DefaultCallBack 0036                                       _CCP3PPS 003ACF  
                                     _CCP4PPS 003AD0                                       _CLC3CON 003C60  
                                     _CLC3POL 003C61                                       _ADPREVH 003EEE  
                                     _ADPREVL 003EED                              ?_PWM6_Initialize 0001  
                            ?_TMR4_Initialize 0001                                       _ADSTPTH 003EE5  
                                     _ADSTPTL 003EE4                                       ?_printf 01AE  
                             ?_PMD_Initialize 0001                             _UART1_Receive_ISR 53B8  
                                  _getReverse 4534                                       ?_strcpy 0014  
                                     ?_strlen 0014                                       _U1ERRIE 003DFA  
                                   ?_actSpeed 0022                                       _U1ERRIR 003DF9  
                               ?_TMR4_10msISR 0001                                  ?_Default_ISR 0001  
                        __size_of_UART1_Write 0062                            ?_UART1_Receive_ISR 0001  
                                     _U1RXPPS 003AE5                                     ?___xxtofl 001C  
                          _PWM5_LoadDutyValue 5FA0                                    _distRightM 0140  
                     __size_of_TMR5_ReadTimer 0024                                       _OSCCON1 0039D9  
                                     _OSCCON3 0039DB                             __end_of_calcSpeed 3A80  
                                     _IVTLOCK 003FD4                            __size_of_vfpfcnvrt 05EA  
                                     _SMT1CLK 003F21                                       _OSCTUNE 0039DE  
                                     _SMT1CPR 003F15                                       _SMT1CPW 003F18  
                                     _PWM5DCH 003F6D                                       _PWM5DCL 003F6C  
                                     _PWM6DCH 003F69                                       _PWM6DCL 003F68  
                                     _PWM7DCH 003F65                                       _PWM7DCL 003F64  
                                     _SMT1SIG 003F22                                       _PWM8DCH 003F61  
                                     _PWM5CON 003F6E                                       _PWM8DCL 003F60  
                                     _SMT1PRH 003F1C                                       _PWM6CON 003F6A  
                                     _SMT1PRL 003F1B                                       _PWM7CON 003F66  
                                     _SMT1PRU 003F1D                                     ?_getCurve 0001  
                                     _SMT1WIN 003F23                                       _SMT1TMR 003F12  
                                     _PWM8CON 003F62                                       _SLRCONA 003A43  
                                     _SLRCONB 003A53                                       _SLRCONC 003A63  
                                     _SLRCOND 003A73                                       _SLRCONE 003A83  
                           __end_of_checkBatt 5834                           ??_UART1_Receive_ISR 0012  
                            ___lomod@dividend 0014                       __end_of_TMR5_WriteTimer 6274  
                         ?_PWM5_LoadDutyValue 0014                              ?_PWM7_Initialize 0001  
                            ?_TMR5_Initialize 0001                     INTERRUPT_Initialize@state 0014  
                        __size_of_setSteering 01F6                                     _CLCIN0PPS 003AD9  
                                   _CLCIN2PPS 003ADB                                     _CLCIN3PPS 003ADC  
                                     __Hparam 0000                                     ?_setMotor 0018  
                                     __Lparam 0000                      __end_of_UART1_Initialize 5678  
                                     ___aldiv 48EE                               __size_of___flge 0106  
                             __size_of___fleq 00AA                                       ___aodiv 4248  
                                     ___fladd 237E                                       ___aomod 43D0  
                                     ___fldiv 2C90                                       ___awdiv 5232  
                                     ___flneg 5E5A                                       ___awmod 5478  
                                     ___flmul 2840                                       ___flsub 5C1E  
                                     ___fltol 49FA                                       ___lodiv 4DFA  
                                     ___lomod 4FCC                                       ___lwdiv 5834  
                   __end_of_UART1_Receive_ISR 5478                                     ?_vfprintf 00EB  
                        ??_PWM5_LoadDutyValue 0016                                  __psmallconst 1000  
                             __size_of_efgtoa 0CAE                               __size_of_floorf 0216  
                                     __pcinit 5ECA                     _TMR5_GateInterruptHandler 0199  
                            ?_PWM8_Initialize 0001                                       __ramtop 1000  
                 __size_of_UART1_Transmit_ISR 0048                 ?_TMR5_SetGateInterruptHandler 0014  
                                     __ptext0 6310                                       __ptext1 47CE  
                                     __ptext2 4534                                       __ptext3 302C  
                                     __ptext4 509C                                       __ptext5 5834  
                                     __ptext6 57A2                                       __ptext7 63E2  
                                     __ptext8 60A4                                       __ptext9 35F8  
                             __size_of_printf 002A                                ??_TMR4_10msISR 0013  
                        __size_of_TMR5_Reload 000E                                    ??_actSpeed 0024  
                             __size_of_strcpy 006A                               __size_of_strlen 003A  
                     __end_of_CLC3_Initialize 621C                         _OSCILLATOR_Initialize 63CA  
                                   _T2CONbits 003FAC                                  __size_of_abs 0040  
                                __size_of_pad 00C2                                    ??___xxtofl 0020  
                                   _T3CONbits 003FA6                              ___awmod@dividend 0014  
               __size_of_CCP4_DefaultCallBack 0036                              ___aldiv@dividend 0014  
                                   _T4CONbits 003FA0                      ??_PIN_MANAGER_Initialize 0014  
           __size_of_TMR4_SetInterruptHandler 000A                                     _T2HLTbits 003FAD  
                                   _T5CONbits 003F9A                     ?_TMR4_SetInterruptHandler 0014  
                                     _isupper 5E22                                       efgtoa@c 0089  
                                     efgtoa@d 00A7                                       efgtoa@e 00BF  
                                     efgtoa@f 0085                                       efgtoa@g 00BB  
                                     efgtoa@h 00B1                                       efgtoa@i 00B9  
                                     efgtoa@l 00B5                                       efgtoa@m 00A1  
                                     efgtoa@n 00C1                                       efgtoa@p 00AB  
                                     efgtoa@t 009B                                       efgtoa@u 00C3  
                                     efgtoa@w 00AD                                     _IPR10bits 00398A  
                                     _smtDuty 0124                                     _T4HLTbits 003FA1  
                                  ??_getCurve 01B6                                     _PIE10bits 00399A  
                  __size_of_SYSTEM_Initialize 004A                                       _tolower 59E4  
                                     _strncmp 4D06                          end_of_initialization 5EFA  
                                     floorf@e 0077                                     _T2RSTbits 003FAF  
                                     floorf@m 0073                                       floorf@u 0079  
                                     floorf@x 0036                ??_TMR4_DefaultInterruptHandler 0013  
                                   _T4RSTbits 003FA3                                     _PIR10bits 0039AA  
                                     fputc@fp 0018                             ??_SMT1_PR_ACQ_ISR 0011  
         __end_of_UART1_SetTxInterruptHandler 6414                   _UART1_SetTxInterruptHandler 640A  
                                     fputs@fp 0021                ??_UART1_SetOverrunErrorHandler 0016  
                                  ??_setMotor 001A                      __size_of_SMT1_Initialize 0030  
                           __end_of_vfpfcnvrt 237E                                    efgtoa@mode 00B0  
                           ?_CCP3_SetCallBack 0014                                    efgtoa@sign 00A9  
                            ___aldiv@quotient 001E                                       postdec2 003FDD  
                           ??_SMT1_PW_ACQ_ISR 0011                                       postinc0 003FEE  
                                     postinc1 003FE6                                       postinc2 003FDE  
                            ?_ADCC_Initialize 0001                            ??_CCP3_SetCallBack 0016  
                                  ??_vfprintf 003A              __end_of_ADCC_GetSingleConversion 60D6  
                           UART1_Write@txData 0014                           _UART1_RxDataHandler 621C  
                                     strcpy@d 001C                                       strlen@a 0016  
                                     strcpy@s 001A                                       strlen@s 0014  
                                 ?_getReverse 0001                                     _PORTBbits 003FCB  
                                   _PORTDbits 003FCD                      __size_of_CCP3_CaptureISR 0034  
                    __size_of_checkCurveCount 00CC                                   ___fladd@grs 0078  
                          getCurve@deltaRight 01BA                                 ___xxtofl@sign 0024  
                                 ___fldiv@grs 0067                                   ___fldiv@rem 0060  
                        ?_UART1_RxDataHandler 0001                              ?_TMR5_WriteTimer 0009  
                        setSteering@steeringB 008A                          setSteering@steeringF 0088  
                     TMR5_WriteTimer@timerVal 0009                                   ___flmul@grs 0062  
                              _curveLeftCount 0043                      __size_of_CCP4_CaptureISR 0034  
           CCP4_DefaultCallBack@capturedValue 0005                             ?_CCP4_SetCallBack 0014  
                __end_of_INTERRUPT_Initialize 5B40                                __end_of___flge 4C08  
                              __end_of___fleq 55D2                    __size_of_UART1_Receive_ISR 00C0  
                          ??_CCP4_SetCallBack 0016                                   _CLC3CONbits 003C60  
                                 vfpfcnvrt@ap 00CB                                   vfpfcnvrt@ct 00E7  
                                 vfpfcnvrt@fp 00C7                                   vfpfcnvrt@ll 00D1  
                              __end_of_efgtoa 1D94                             __size_of_TMR4_ISR 003C  
                              __end_of_floorf 3C96                        ?_OSCILLATOR_Initialize 0001  
                                  floorf@F527 0118                                __end_of_printf 629E  
                 __size_of_PWM8_LoadDutyValue 0034                              ?_CLC3_Initialize 0001  
                              __end_of_strcpy 5982                                __end_of_strlen 5DAA  
                              _TMR5_ReadTimer 62EC                           start_initialization 5ECA  
                             ___lodiv@divisor 001C                               ___lodiv@counter 002C  
              ??_TMR5_SetGateInterruptHandler 0016               __size_of_PIN_MANAGER_Initialize 00CA  
                                 __end_of_abs 5D32                                   __end_of_pad 53B8  
                        __size_of_Default_ISR 0002                       ??_UART1_SetErrorHandler 0016  
                    __size_of_CCP3_Initialize 002E                         ??_UART1_RxDataHandler 0012  
                                 putch@txData 0015                                    ivt0x8_base 0008  
                               _uart1RxBuffer 0108                                   _actMotorPow 00F1  
                       __end_of___fpclassifyf 4D06                                 _uart1TxBuffer 0110  
                         __size_of_getReverse 014E                          __end_of_TMR4_10msISR 646E  
                                 vfprintf@fmt 00ED                                      ??___flge 0036  
                                    ??___fleq 001C                              ??_PMD_Initialize 0014  
                      __size_of_TMR5_GATE_ISR 0032                                  _oldDistRight 0138  
                    __size_of_CCP4_Initialize 002E                                      ??_efgtoa 008A  
                                    ??_floorf 006D                    __end_of_PWM7_LoadDutyValue 603C  
                           ??_SMT1_Initialize 0014                                      ??_printf 003A  
                                    ??_strcpy 0018                                      ??_strlen 0016  
                      __end_of_TMR5_ReadTimer 6310                         CCP4_CaptureISR@module 0007  
                                   ___fladd@a 0071                                     ___fladd@b 006D  
                         calcMotorPow@addMPow 0089                      _ADCC_GetSingleConversion 60A4  
                                   ___fldiv@a 002E                                     ___fldiv@b 002A  
                 PWM5_LoadDutyValue@dutyValue 0014                         TMR4_ISR@CountCallBack 013E  
                                   ___flmul@a 002E                                     ___flmul@b 002A  
                                 __pbssCOMRAM 003A                                     ___flsub@a 007D  
                                   ___flsub@b 0079                            _UART1_ErrorHandler 01A1  
                               __pcstackBANK0 0060                                 __pcstackBANK1 01AC  
                           __size_of_actSpeed 0094                              ___aodiv@dividend 0014  
                          _PWM6_LoadDutyValue 5F6C                      __size_of_TMR2_Initialize 001C  
                           __size_of___xxtofl 01B4                      _UART1_RxInterruptHandler 01A9  
                           ??_CCP3_CaptureISR 0003                  __end_of_CCP3_DefaultCallBack 5F36  
                      __size_of_TMR4_CallBack 002E                             ??_checkCurveCount 003A  
                                   _calcSpeed 3866                             __size_of_getCurve 02E6  
                         ?_PWM6_LoadDutyValue 0014                   PWM8_LoadDutyValue@dutyValue 0014  
                fp__UART1_DefaultErrorHandler 0000                                     _checkBatt 57A2  
                                _currentSpeed 003E                  ?_UART1_SetRxInterruptHandler 0014  
                                   __pnvBANK1 0195                                   _efgtoa$3573 0093  
                                 _efgtoa$3568 008F                                   _efgtoa$3577 0095  
                                 _efgtoa$3569 0091                                   _efgtoa$3578 0097  
                                 _efgtoa$3579 0099                            setMotor@motorPower 0018  
                            ___lwdiv@dividend 0014                        _PIN_MANAGER_Initialize 5168  
                                   _dtoa$3544 006A                      __size_of_PWM5_Initialize 0018  
                    __size_of_TMR3_Initialize 0038                             ?_UART1_Initialize 0001  
        __end_of_UART1_SetFramingErrorHandler 6432         __size_of_UART1_SetFramingErrorHandler 000A  
                _UART1_SetFramingErrorHandler 6428                                      ?___aldiv 0014  
             ADCC_GetSingleConversion@channel 0018                                      ?___aodiv 0014  
                                    ?___fladd 006D                                      ?___aomod 0014  
                           __size_of_setMotor 00E2              __end_of_TMR4_SetInterruptHandler 6450  
                                    ?___fldiv 002A                                      ?___awdiv 0014  
                                   __ptext100 6330                                     __ptext101 63F2  
                                   __ptext102 6248                              ___aodiv@quotient 0026  
                                    ?___flneg 0014                                     __ptext103 62EC  
                                   __ptext104 5BD4                                     __ptext105 5AA0  
                                   __ptext106 62A0                                     __ptext107 0000  
           CCP3_DefaultCallBack@capturedValue 0001                                      ?___awmod 0014  
                           ??_CCP4_CaptureISR 0007                                      ?___flmul 002A  
                                    ?___flsub 0079                                      ?___fltol 0079  
                                    ?___lodiv 0014                                      ?___lomod 0014  
                                    ?___lwdiv 0014                            ??_UART1_Initialize 0016  
                                   _distLeftM 0142                                     _distFront 00FD  
                            _uart1RxLastError 0144                                 ??_UART1_Write 0014  
                                   _distRight 00F5                          ??_PWM6_LoadDutyValue 0016  
                                   _cycle10ms 00FA                             __size_of_vfprintf 0070  
                             ?_TMR5_ReadTimer 0009                                 ?_calcMotorPow 0001  
                             ___lomod@divisor 001C                                   __smallconst 1000  
                             ___lomod@counter 0024                                      _CLC3GLS0 003C66  
                                    _CLC3GLS1 003C67                                      _CLC3GLS2 003C68  
                                    _CLC3GLS3 003C69                                     _driveMode 00FC  
         fp__UART1_DefaultOverrunErrorHandler 0000      __end_of_UART1_DefaultOverrunErrorHandler 6476  
   __size_of_UART1_DefaultOverrunErrorHandler 0002            ??_UART1_DefaultOverrunErrorHandler 0012  
           ?_UART1_DefaultOverrunErrorHandler 0001              _UART1_DefaultOverrunErrorHandler 6474  
                                    _CLC3SEL0 003C62                                      _CLC3SEL1 003C63  
                                    _CLC3SEL2 003C64                                      _CLC3SEL3 003C65  
                             _SMT1_PR_ACQ_ISR 5BD4                                 ?_calcSteering 0001  
                                    ?_isupper 0014                      __size_of_PWM6_Initialize 0018  
                    __size_of_TMR4_Initialize 002C                                 _TMR5_GATE_ISR 60D8  
                                   _curveMode 00FB                              ___lwdiv@quotient 0019  
                                    ?_tolower 001A                                __size_of_fputc 0096  
                                    _T2CLKCON 003FAE                                __size_of_fputs 0044  
                                    ?_strncmp 0014                                   _U1ERRIRbits 003DF9  
                                    _T4CLKCON 003FA2                                __size_of_putch 000A  
                                  ?_calcSpeed 0001                          _INTERRUPT_Initialize 5AF4  
                               ??_setSteering 0086                               ___aldiv@divisor 0018  
                             _SMT1_PW_ACQ_ISR 5AA0                               ___aldiv@counter 001C  
                                  ?_checkBatt 0001         UART1_SetErrorHandler@interruptHandler 0014  
                                    _IPR1bits 003981                  __end_of_CCP4_DefaultCallBack 5F6C  
                           ??_CCP3_Initialize 0016                                      _IPR3bits 003983  
                                    _PIE1bits 003991                                      _PIE3bits 003993  
                                    _IPR7bits 003987                                      _IPR8bits 003988  
                                    _IPR9bits 003989                                      _PIE7bits 003997  
                                    _PIE8bits 003998                                      _PIE9bits 003999  
                                    _IVTBASEH 003FD6                                      _IVTBASEL 003FD5  
                                    _IVTBASEU 003FD7                 ??_UART1_SetRxInterruptHandler 0016  
                                    i1u731_20 5410                                      i1u730_28 53EE  
                                    i1u731_21 540C                                      i1u730_29 5400  
                                    i1u733_20 5454                                      i1u732_28 5426  
                                    i1u733_21 5450                                      i1u732_29 5438  
                                    i1u734_28 545A                                      i1u727_20 5C78  
                                    i1u734_29 546E                                      i1u727_21 5C74  
                                    i1u664_20 6240                                      i1u728_20 5C9C  
                                    i1u664_21 623C                                      i1u728_21 5C98  
                                    i1u729_20 53D8                                      i1u729_21 53D4  
                                    _PIR1bits 0039A1                                      i1u738_20 61AA  
                                    i1u754_20 5D5A                                      i1u746_20 5DC6  
                                    i1u738_21 61A6                                      i1u754_21 5D56  
                                    i1u746_21 5DC2                                      i1u739_28 61B0  
                                    i1u748_20 5E02                                      i1u747_28 5DCC  
                                    i1u739_29 61C2                                      i1u748_21 5DFE  
                                    i1u747_29 5DDE                                      i1u749_28 5E08  
                                    i1u749_29 5E1A                                      _PIR4bits 0039A4  
                                    _PIR6bits 0039A6                                      _PIR7bits 0039A7  
                                    i2u735_40 5F0E                                      i2u750_48 605A  
                                    i2u735_41 5F0A                                      i2u750_49 606E  
                                    _PIR8bits 0039A8                                      i2u752_40 60F0  
                                    i2u736_40 5F44                                      i2u751_48 608E  
                                    i2u752_41 60EC                                      i2u736_41 5F40  
                                    i2u751_49 60A2                                      i2u665_40 6256  
                                    i2u665_41 6252                                      _PIR9bits 0039A9  
                                    i2u753_48 60F6                                      i2u753_49 6108  
                                    i2u755_40 5BF8                                      i2u755_41 5BF4  
                                    i2u756_40 5ACE                                      i2u756_41 5ACA  
                                    _SMT1CON0 003F1E                                      _SMT1CON1 003F1F  
                    __size_of_PWM7_Initialize 0018                      __size_of_TMR5_Initialize 004A  
                                    _SMT1STAT 003F20                             _SMT1_Overflow_ISR 62A0  
                                    _TMR4_ISR 5D34                    __end_of_UART1_Transmit_ISR 5CAE  
                               _TMR4_CallBack 6196                                     _smtPeriod 0049  
               ?_UART1_SetFramingErrorHandler 0014                                 ??_TMR5_Reload 000B  
                 __size_of_PWM5_LoadDutyValue 0034                                     _vfpfcnvrt 1D94  
                          ?_SMT1_Overflow_ISR 0001                             _getBatteryVoltage 63E2  
                                ??_getReverse 003A                                ??_calcMotorPow 0083  
                                  _ADCON0bits 003EF8                                    _ADCON1bits 003EF9  
                                  _ADCON2bits 003EFA                                    _ADCON3bits 003EFB  
                          ?_getBatteryVoltage 0001                             ??_CCP4_Initialize 0016  
                              ??_calcSteering 01B6                           ??_SMT1_Overflow_ISR 0011  
                   TMR5_ReadTimer@readValHigh 000F                     __size_of_CCP3_SetCallBack 000A  
                              ?_TMR5_GATE_ISR 0001                           __end_of_UART1_Write 59E4  
                               getCurve@ratio 01BC                      __size_of_PWM8_Initialize 0018  
                                _SMT1CON0bits 003F1E                                  _SMT1CON1bits 003F1F  
                                  vfpfcnvrt@c 00EA                                    vfpfcnvrt@f 00E3  
                         ??_getBatteryVoltage 0019                                   _INTCON0bits 003FD2  
                       ?_INTERRUPT_Initialize 0001                         __size_of_TMR4_10msISR 000A  
                        fp__UART1_Receive_ISR 0000                        _uart1TxBufferRemaining 01AB  
                    checkCurveCount@roundTime 01B6                             ??_TMR2_Initialize 0014  
                                _uart1RxCount 0044                            __end_of_getReverse 4682  
                                  _ADSTATbits 003EFC                                   _followCount 0134  
                                    __Hrparam 0000                     __end_of_SMT1_Overflow_ISR 62C8  
                         __end_of_setSteering 4094                                    vfprintf@ap 00EF  
                                    __Lrparam 0000                                    vfprintf@fp 00EB  
                                 _oldDistLeft 013A                                ?_TMR4_CallBack 0001  
                              calcSpeed@speed 0087                     __end_of_getBatteryVoltage 63F2  
                     ??_OSCILLATOR_Initialize 0014                              __size_of___aldiv 010C  
                            __size_of___aodiv 0188                              __size_of___fladd 04C2  
                            __size_of___aomod 0164                              __size_of___fldiv 039C  
                            __size_of___awdiv 00C4                              __size_of___flneg 0038  
                            __size_of___awmod 00B0                              __size_of___flmul 0450  
                            __size_of___flsub 0048                              __size_of___fltol 0108  
                                _SMT1STATbits 003F20                          _CCP3_DefaultCallBack 5F00  
                     __end_of_SMT1_PR_ACQ_ISR 5C1E                              __size_of___lodiv 00F0  
                            __size_of___lomod 00D0                                    ?_vfpfcnvrt 00C7  
                            __size_of___lwdiv 0074                               ___aodiv@divisor 001C  
                           ??_PWM5_Initialize 0014                             ??_TMR3_Initialize 0014  
                             ___aodiv@counter 0024                      _TMR4_SetInterruptHandler 6446  
                          ___fpclassifyf@F465 011C                                      _actSpeed 570E  
        __size_of_UART1_SetRxInterruptHandler 000A                                  _TMR4_10msISR 6464  
                                    ___xxtofl 4094                      __size_of_ADCC_Initialize 005C  
                         __end_of_TMR5_Reload 6400                     __size_of_CCP4_SetCallBack 000A  
                                    __pivt0x8 0008                               ___lwdiv@divisor 0016  
                     __end_of_SMT1_PW_ACQ_ISR 5AF4                               ___lwdiv@counter 0018  
                                    _getCurve 302C                                      __ptext10 3E9E  
                                    __ptext11 5F6C                                      __ptext20 10E6  
                                    __ptext12 5FA0                                      __ptext21 59E4  
                                    __ptext13 6274                                      __ptext30 2C90  
                                    __ptext22 5E22                                      __ptext14 58A8  
                                    __ptext31 5478                                      __ptext23 5918  
                                    __ptext15 1D94                                      __ptext40 43D0  
                                    __ptext32 3312                                      __ptext24 3A80  
                                    __ptext16 3C96                                      __ptext41 4248  
                                    __ptext33 52F6                                      __ptext25 4C08  
                                    __ptext17 4FCC                                      __ptext50 4094  
                                    __ptext42 3866                                      __ptext34 5D70  
                                    __ptext26 5C1E                                      __ptext18 4DFA  
                                    __ptext51 49FA                                      __ptext43 237E  
                                    __ptext35 5CAE                                      __ptext27 5E5A  
                                    __ptext19 4D06                                      __ptext60 6432  
                                    __ptext52 2840                                      __ptext44 4682  
                                    __ptext36 5678                                      __ptext28 4B02  
                                    __ptext61 5B8A                                      __ptext53 5232  
                                    __ptext45 4EEA                                      __ptext37 6400  
                                    __ptext29 5528                                      __ptext70 639A  
                                    __ptext62 643C                                      __ptext54 5B40  
                                    __ptext46 5FD4                                      __ptext38 5982  
                                    __ptext71 63B2                                      __ptext63 61C4  
                                    __ptext55 55D2                                      __ptext47 6008  
                                    __ptext39 5CF2                                      __ptext80 645A  
                                    __ptext72 62C8                                      __ptext64 6446  
                                    __ptext56 640A                                      __ptext48 570E  
                                    __ptext81 5A44                                      __ptext73 5168  
                                    __ptext65 5E92                                      __ptext57 6414  
                                    __ptext49 48EE                                      __ptext90 5D34  
                                    __ptext82 5DAC                                      __ptext74 63CA  
                                    __ptext66 634E                                      __ptext58 641E  
                                    __ptext91 6196                                      __ptext83 5C66  
                                    __ptext75 5AF4                                      __ptext67 610A  
                                    __ptext59 6428                                      __ptext92 6464  
                                    __ptext84 5DE8                                      __ptext76 61F0  
                                    __ptext68 636A                                      __ptext93 6478  
                                    __ptext85 53B8                                      __ptext77 613A  
                                    __ptext69 6382                                      __ptext94 647C  
                                    __ptext86 6474                                      __ptext78 6450  
                                    __ptext95 603C                                      __ptext87 6476  
                                    __ptext79 6168                                      __ptext96 5F00  
                                    __ptext88 646E                                      __ptext97 6070  
                                    __ptext89 621C                                      __ptext98 5F36  
                                    __ptext99 60D8                              __size_of_isupper 0038  
                                    _distLeft 00F7                __size_of_UART1_SetErrorHandler 000A  
                                 ??_calcSpeed 0083                 __end_of_UART1_SetErrorHandler 643C  
                            __size_of_tolower 0060                                    _T3GCONbits 003FA7  
                                  strcpy@dest 0014                              __size_of_strncmp 00F4  
                                 ??_checkBatt 003A                             ??_TMR4_Initialize 0016  
                           ??_PWM6_Initialize 0014                                 __size_of_main 0020  
                               __size_of_dtoa 02E6                                      _oldSpeed 0130  
                                  _T5GCONbits 003F9B                                 __size_of_loop 0120  
                               __size_of_utoa 0208                               _SMT1_Initialize 610A  
                                 _IVTLOCKbits 003FD4                                      _setMotor 4EEA  
                                    _setSpeed 0040                      __size_of_TMR5_WriteTimer 002C  
                                    efgtoa@fp 0083                                      efgtoa@ne 009F  
                                    efgtoa@pp 009D                                      efgtoa@ou 00A3  
                   _UART1_OverrunErrorHandler 01A3  UART1_SetOverrunErrorHandler@interruptHandler 0014  
                                    isa$xinst 000000            __size_of_UART1_DefaultErrorHandler 0006  
                  ??_ADCC_GetSingleConversion 0016                    ?_UART1_DefaultErrorHandler 0001  
                       ?_CCP3_DefaultCallBack 0001                                      _vfprintf 58A8  
                                   printf@fmt 01AE                    __end_of_PWM8_LoadDutyValue 6008  
                             _CCP3_CaptureISR 603C                                   _UART1_Write 5982  
                       fp__UART1_Transmit_ISR 0000                             ??_TMR5_Initialize 0016  
                           ??_PWM7_Initialize 0014           fp__TMR5_DefaultGateInterruptHandler 0000  
    __end_of_TMR5_DefaultGateInterruptHandler 634E     __size_of_TMR5_DefaultGateInterruptHandler 001E  
          ??_TMR5_DefaultGateInterruptHandler 0011             ?_TMR5_DefaultGateInterruptHandler 0001  
            _TMR5_DefaultGateInterruptHandler 6330                              ___aomod@dividend 0014  
                             _checkCurveCount 509C                                _battCheckCount 0136  
                               ??_Default_ISR 0001                ??_UART1_SetFramingErrorHandler 0016  
                                _reverseCount 013C                               ??_TMR5_GATE_ISR 0011  
                              _vfpfcnvrt$3604 00E1                   __end_of_UART1_RxDataHandler 6248  
                                 _uart1RxHead 0046                          _CCP4_DefaultCallBack 5F36  
                                 _uart1TxHead 0048                                   _uart1RxTail 0045  
                                 _uart1TxTail 0047                        ??_INTERRUPT_Initialize 0014  
                          _PWM7_LoadDutyValue 6008                                      intlevel1 0000  
                                    intlevel2 0000                      __size_of_CLC3_Initialize 002C  
                                 _setSteering 3E9E                               _CCP4_CaptureISR 6070  
                     ?_PIN_MANAGER_Initialize 0001                             ??_PWM8_Initialize 0014  
                         ?_PWM7_LoadDutyValue 0014                          __end_of_calcMotorPow 47CE  
                                   strcpy@src 0016                                      isupper@c 0014  
                                   strncmp@_l 0014                                     strncmp@_r 0016  
                             ??_TMR4_CallBack 0013                    __size_of_SMT1_Overflow_ISR 0028  
                        __end_of_calcSteering 3866                           _uart1RxStatusBuffer 0100  
                                 efgtoa@nmode 00AF                                      printf@ap 01B4  
                            ??_TMR5_ReadTimer 000B                    __size_of_getBatteryVoltage 0010  
UART1_SetFramingErrorHandler@interruptHandler 0014             __end_of_UART1_DefaultErrorHandler 6474  
                             ___aomod@divisor 001C                                   ??_vfpfcnvrt 00CD  
                                 _reverseTime 012E                               ___aomod@counter 0024  
                            ?_SMT1_PR_ACQ_ISR 0001                                   _TMR5_Reload 63F2  
                                  _SMT1SIGPPS 003AD2                                    _SMT1WINPPS 003AD1  
                        ??_PWM7_LoadDutyValue 0016                                      tolower@c 001A  
                               actSpeed@speed 0024                        __size_of___fpclassifyf 00FE  
                       ?_CCP4_DefaultCallBack 0005                     calcMotorPow@oldSpeedDelta 0087  
                                    strncmp@l 001B                                      strncmp@n 0018  
                            _CCP3_SetCallBack 645A                                      strncmp@r 001D  
                   __size_of_UART1_Initialize 00A6                                  ___aldiv@sign 001D  
                            ?_SMT1_PW_ACQ_ISR 0001                               _CCP3_Initialize 6168  
                 PWM6_LoadDutyValue@dutyValue 0014                             calcSteering@delta 01B8  
                    _UART1_TxInterruptHandler 01A7                                 ___fladd@signs 0075  
                         __end_of_Default_ISR 647E                       __end_of_SMT1_Initialize 613A  
                                ___aodiv@sign 0025                __end_of_PIN_MANAGER_Initialize 5232  
                           ??_ADCC_Initialize 0014                                  ___fladd@aexp 0076  
                                ___fladd@bexp 0077                  ?_UART1_SetTxInterruptHandler 0014  
                                ___aomod@sign 0025                       __end_of_CCP3_CaptureISR 6070  
