

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Jan 29 17:21:55 2024

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F46K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=3
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1
    79                           	psect	text64,global,reloc=2,class=CODE,delta=1
    80                           	psect	text65,global,reloc=2,class=CODE,delta=1
    81                           	psect	text66,global,reloc=2,class=CODE,delta=1
    82                           	psect	text67,global,reloc=2,class=CODE,delta=1
    83                           	psect	text68,global,reloc=2,class=CODE,delta=1
    84                           	psect	text69,global,reloc=2,class=CODE,delta=1
    85                           	psect	text70,global,reloc=2,class=CODE,delta=1
    86                           	psect	text71,global,reloc=2,class=CODE,delta=1
    87                           	psect	text72,global,reloc=2,class=CODE,delta=1
    88                           	psect	text73,global,reloc=2,class=CODE,delta=1
    89                           	psect	text74,global,reloc=2,class=CODE,delta=1
    90                           	psect	text75,global,reloc=2,class=CODE,delta=1
    91                           	psect	text76,global,reloc=2,class=CODE,delta=1
    92                           	psect	text77,global,reloc=2,class=CODE,delta=1
    93                           	psect	text78,global,reloc=2,class=CODE,delta=1
    94                           	psect	text79,global,reloc=2,class=CODE,delta=1
    95                           	psect	text80,global,reloc=2,class=CODE,delta=1
    96                           	psect	text81,global,reloc=2,class=CODE,delta=1
    97                           	psect	text82,global,reloc=2,class=CODE,delta=1
    98                           	psect	text83,global,reloc=4,class=CODE,delta=1
    99                           	psect	text84,global,reloc=2,class=CODE,delta=1
   100                           	psect	text85,global,reloc=4,class=CODE,delta=1
   101                           	psect	text86,global,reloc=2,class=CODE,delta=1
   102                           	psect	text87,global,reloc=2,class=CODE,delta=1
   103                           	psect	text88,global,reloc=2,class=CODE,delta=1
   104                           	psect	text89,global,reloc=2,class=CODE,delta=1
   105                           	psect	text90,global,reloc=2,class=CODE,delta=1
   106                           	psect	text91,global,reloc=4,class=CODE,delta=1
   107                           	psect	text92,global,reloc=2,class=CODE,delta=1
   108                           	psect	text93,global,reloc=2,class=CODE,delta=1
   109                           	psect	text94,global,reloc=2,class=CODE,delta=1
   110                           	psect	text95,global,reloc=4,class=CODE,delta=1
   111                           	psect	text96,global,reloc=4,class=CODE,delta=1
   112                           	psect	text97,global,reloc=2,class=CODE,delta=1
   113                           	psect	text98,global,reloc=4,class=CODE,delta=1
   114                           	psect	text99,global,reloc=2,class=CODE,delta=1
   115                           	psect	text100,global,reloc=4,class=CODE,delta=1
   116                           	psect	text101,global,reloc=2,class=CODE,delta=1
   117                           	psect	text102,global,reloc=2,class=CODE,delta=1
   118                           	psect	text103,global,reloc=2,class=CODE,delta=1
   119                           	psect	text104,global,reloc=2,class=CODE,delta=1
   120                           	psect	text105,global,reloc=4,class=CODE,delta=1
   121                           	psect	text106,global,reloc=4,class=CODE,delta=1
   122                           	psect	text107,global,reloc=4,class=CODE,delta=1
   123                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   124                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   125                           	psect	text108,global,reloc=4,class=CODE,delta=1
   126                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   127                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   128                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   129  0000                     
   130                           ; Version 2.20
   131                           ; Generated 05/05/2020 GMT
   132                           ; 
   133                           ; Copyright © 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   134                           ; All rights reserved.
   135                           ; 
   136                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   137                           ; 
   138                           ; Redistribution and use in source and binary forms, with or without modification, are
   139                           ; permitted provided that the following conditions are met:
   140                           ; 
   141                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   142                           ;        conditions and the following disclaimer.
   143                           ; 
   144                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   145                           ;        of conditions and the following disclaimer in the documentation and/or other
   146                           ;        materials provided with the distribution.
   147                           ; 
   148                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   149                           ;        software without specific prior written permission.
   150                           ; 
   151                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   152                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   153                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   154                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   155                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   156                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   157                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   158                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   159                           ; 
   160                           ; 
   161                           ; Code-generator required, PIC18F46K42 Definitions
   162                           ; 
   163                           ; SFR Addresses
   164  0000                     
   165                           	psect	nvCOMRAM
   166  00004C                     __pnvCOMRAM:
   167                           	callstack 0
   168  00004C                     _uart1TxBufferRemaining:
   169                           	callstack 0
   170  00004C                     	ds	1
   171                           
   172                           	psect	nvBANK1
   173  00018E                     __pnvBANK1:
   174                           	callstack 0
   175  00018E                     _TMR4_InterruptHandler:
   176                           	callstack 0
   177  00018E                     	ds	2
   178  000190                     _timer3ReloadVal:
   179                           	callstack 0
   180  000190                     	ds	2
   181  000192                     _TMR5_GateInterruptHandler:
   182                           	callstack 0
   183  000192                     	ds	2
   184  000194                     _timer5ReloadVal:
   185                           	callstack 0
   186  000194                     	ds	2
   187  000196                     _CCP4_CallBack:
   188                           	callstack 0
   189  000196                     	ds	2
   190  000198                     _CCP3_CallBack:
   191                           	callstack 0
   192  000198                     	ds	2
   193  00019A                     _UART1_ErrorHandler:
   194                           	callstack 0
   195  00019A                     	ds	2
   196  00019C                     _UART1_OverrunErrorHandler:
   197                           	callstack 0
   198  00019C                     	ds	2
   199  00019E                     _UART1_FramingErrorHandler:
   200                           	callstack 0
   201  00019E                     	ds	2
   202  0001A0                     _UART1_TxInterruptHandler:
   203                           	callstack 0
   204  0001A0                     	ds	2
   205  0001A2                     _UART1_RxInterruptHandler:
   206                           	callstack 0
   207  0001A2                     	ds	2
   208  0000                     _PIR4bits	set	14756
   209  0000                     _PIR1bits	set	14753
   210  0000                     _PIE1bits	set	14737
   211  0000                     _PIE7bits	set	14743
   212  0000                     _PIR7bits	set	14759
   213  0000                     _PIR6bits	set	14758
   214  0000                     _PIE8bits	set	14744
   215  0000                     _PIR8bits	set	14760
   216  0000                     _PIE10bits	set	14746
   217  0000                     _PIR10bits	set	14762
   218  0000                     _PIE9bits	set	14745
   219  0000                     _PIR9bits	set	14761
   220  0000                     _IPR9bits	set	14729
   221  0000                     _IPR7bits	set	14727
   222  0000                     _IPR8bits	set	14728
   223  0000                     _IPR10bits	set	14730
   224  0000                     _IPR1bits	set	14721
   225  0000                     _IPR3bits	set	14723
   226  0000                     _PIE3bits	set	14739
   227  0000                     _PMD7	set	14791
   228  0000                     _PMD6	set	14790
   229  0000                     _PMD5	set	14789
   230  0000                     _PMD4	set	14788
   231  0000                     _PMD3	set	14787
   232  0000                     _PMD2	set	14786
   233  0000                     _PMD1	set	14785
   234  0000                     _PMD0	set	14784
   235  0000                     _OSCTUNE	set	14814
   236  0000                     _OSCFRQ	set	14815
   237  0000                     _OSCEN	set	14813
   238  0000                     _OSCCON3	set	14811
   239  0000                     _OSCCON1	set	14809
   240  0000                     _CCP4PPS	set	15056
   241  0000                     _SMT1SIGPPS	set	15058
   242  0000                     _CLCIN2PPS	set	15067
   243  0000                     _RB3PPS	set	14859
   244  0000                     _RA3PPS	set	14851
   245  0000                     _SMT1WINPPS	set	15057
   246  0000                     _CLCIN0PPS	set	15065
   247  0000                     _RA4PPS	set	14852
   248  0000                     _T5GPPS	set	15049
   249  0000                     _RA0PPS	set	14848
   250  0000                     _U1RXPPS	set	15077
   251  0000                     _RA1PPS	set	14849
   252  0000                     _CLCIN3PPS	set	15068
   253  0000                     _CCP3PPS	set	15055
   254  0000                     _INLVLE	set	14980
   255  0000                     _INLVLD	set	14964
   256  0000                     _INLVLC	set	14948
   257  0000                     _INLVLB	set	14932
   258  0000                     _INLVLA	set	14916
   259  0000                     _SLRCONE	set	14979
   260  0000                     _SLRCOND	set	14963
   261  0000                     _SLRCONC	set	14947
   262  0000                     _SLRCONB	set	14931
   263  0000                     _SLRCONA	set	14915
   264  0000                     _ODCOND	set	14962
   265  0000                     _ODCONC	set	14946
   266  0000                     _ODCONB	set	14930
   267  0000                     _ODCONA	set	14914
   268  0000                     _ODCONE	set	14978
   269  0000                     _RD1I2C	set	14971
   270  0000                     _RD0I2C	set	14970
   271  0000                     _RC4I2C	set	14955
   272  0000                     _RC3I2C	set	14954
   273  0000                     _RB2I2C	set	14939
   274  0000                     _RB1I2C	set	14938
   275  0000                     _WPUC	set	14945
   276  0000                     _WPUA	set	14913
   277  0000                     _WPUB	set	14929
   278  0000                     _WPUE	set	14977
   279  0000                     _WPUD	set	14961
   280  0000                     _ANSELA	set	14912
   281  0000                     _ANSELE	set	14976
   282  0000                     _ANSELB	set	14928
   283  0000                     _ANSELC	set	14944
   284  0000                     _ANSELD	set	14960
   285  0000                     _CLC3CON	set	15456
   286  0000                     _CLC3GLS3	set	15465
   287  0000                     _CLC3GLS2	set	15464
   288  0000                     _CLC3GLS1	set	15463
   289  0000                     _CLC3GLS0	set	15462
   290  0000                     _CLC3SEL3	set	15461
   291  0000                     _CLC3SEL2	set	15460
   292  0000                     _CLC3SEL1	set	15459
   293  0000                     _CLC3SEL0	set	15458
   294  0000                     _CLC3POL	set	15457
   295  0000                     _CLC3CONbits	set	15456
   296  0000                     _U1RXB	set	15848
   297  0000                     _U1TXB	set	15850
   298  0000                     _U1ERRIRbits	set	15865
   299  0000                     _U1ERRIE	set	15866
   300  0000                     _U1ERRIR	set	15865
   301  0000                     _U1UIR	set	15864
   302  0000                     _U1FIFO	set	15863
   303  0000                     _U1BRGH	set	15862
   304  0000                     _U1BRGL	set	15861
   305  0000                     _U1CON2	set	15860
   306  0000                     _U1CON1	set	15859
   307  0000                     _U1CON0	set	15858
   308  0000                     _U1P3H	set	15857
   309  0000                     _U1P3L	set	15856
   310  0000                     _U1P2H	set	15855
   311  0000                     _U1P2L	set	15854
   312  0000                     _U1P1H	set	15853
   313  0000                     _U1P1L	set	15852
   314  0000                     _ADCON1bits	set	16121
   315  0000                     _ADERRL	set	16098
   316  0000                     _ADERRH	set	16099
   317  0000                     _ADPREVL	set	16109
   318  0000                     _ADPREVH	set	16110
   319  0000                     _ADFLTRL	set	16102
   320  0000                     _ADFLTRH	set	16103
   321  0000                     _ADSTATbits	set	16124
   322  0000                     _ADACCL	set	16104
   323  0000                     _ADACCH	set	16105
   324  0000                     _ADCON2bits	set	16122
   325  0000                     _ADCNT	set	16107
   326  0000                     _ADCON3bits	set	16123
   327  0000                     _ADRESL	set	16111
   328  0000                     _ADRESH	set	16112
   329  0000                     _ADCON0bits	set	16120
   330  0000                     _ADCON0	set	16120
   331  0000                     _ADCLK	set	16127
   332  0000                     _ADACT	set	16126
   333  0000                     _ADREF	set	16125
   334  0000                     _ADSTAT	set	16124
   335  0000                     _ADCON3	set	16123
   336  0000                     _ADCON2	set	16122
   337  0000                     _ADCON1	set	16121
   338  0000                     _ADPREH	set	16119
   339  0000                     _ADPREL	set	16118
   340  0000                     _ADCAP	set	16117
   341  0000                     _ADACQH	set	16116
   342  0000                     _ADACQL	set	16115
   343  0000                     _ADPCH	set	16113
   344  0000                     _ADRPT	set	16108
   345  0000                     _ADACCU	set	16106
   346  0000                     _ADSTPTH	set	16101
   347  0000                     _ADSTPTL	set	16100
   348  0000                     _ADUTHH	set	16097
   349  0000                     _ADUTHL	set	16096
   350  0000                     _ADLTHH	set	16095
   351  0000                     _ADLTHL	set	16094
   352  0000                     _SMT1TMR	set	16146
   353  0000                     _SMT1CPR	set	16149
   354  0000                     _SMT1CPW	set	16152
   355  0000                     _SMT1PR	set	16155
   356  0000                     _SMT1STATbits	set	16160
   357  0000                     _SMT1CON0bits	set	16158
   358  0000                     _SMT1CON1bits	set	16159
   359  0000                     _SMT1PRL	set	16155
   360  0000                     _SMT1PRH	set	16156
   361  0000                     _SMT1PRU	set	16157
   362  0000                     _SMT1SIG	set	16162
   363  0000                     _SMT1WIN	set	16163
   364  0000                     _SMT1CLK	set	16161
   365  0000                     _SMT1STAT	set	16160
   366  0000                     _SMT1CON1	set	16159
   367  0000                     _SMT1CON0	set	16158
   368  0000                     _CCPTMRS1bits	set	16223
   369  0000                     _CCPTMRS0bits	set	16222
   370  0000                     _PORTBbits	set	16331
   371  0000                     _PR2	set	16299
   372  0000                     _TMR2	set	16298
   373  0000                     _T2CONbits	set	16300
   374  0000                     _T2RSTbits	set	16303
   375  0000                     _T2HLTbits	set	16301
   376  0000                     _T2CON	set	16300
   377  0000                     _T2TMR	set	16298
   378  0000                     _T2PR	set	16299
   379  0000                     _T2RST	set	16303
   380  0000                     _T2HLT	set	16301
   381  0000                     _T2CLKCON	set	16302
   382  0000                     _PWM6DCL	set	16232
   383  0000                     _PWM6DCH	set	16233
   384  0000                     _PWM6CON	set	16234
   385  0000                     _PWM5DCL	set	16236
   386  0000                     _PWM5DCH	set	16237
   387  0000                     _PWM5CON	set	16238
   388  0000                     _PWM8DCL	set	16224
   389  0000                     _PWM8DCH	set	16225
   390  0000                     _PWM8CON	set	16226
   391  0000                     _PWM7DCL	set	16228
   392  0000                     _PWM7DCH	set	16229
   393  0000                     _PWM7CON	set	16230
   394  0000                     _PR4	set	16287
   395  0000                     _TMR4	set	16286
   396  0000                     _T4CONbits	set	16288
   397  0000                     _T4RSTbits	set	16291
   398  0000                     _T4HLTbits	set	16289
   399  0000                     _T4CON	set	16288
   400  0000                     _T4TMR	set	16286
   401  0000                     _T4PR	set	16287
   402  0000                     _T4RST	set	16291
   403  0000                     _T4HLT	set	16289
   404  0000                     _T4CLKCON	set	16290
   405  0000                     _T3GCONbits	set	16295
   406  0000                     _T3CONbits	set	16294
   407  0000                     _T3CON	set	16294
   408  0000                     _TMR3L	set	16292
   409  0000                     _TMR3H	set	16293
   410  0000                     _T3CLK	set	16297
   411  0000                     _T3GATE	set	16296
   412  0000                     _T3GCON	set	16295
   413  0000                     _T5GCONbits	set	16283
   414  0000                     _T5CONbits	set	16282
   415  0000                     _T5CON	set	16282
   416  0000                     _TMR5L	set	16280
   417  0000                     _TMR5H	set	16281
   418  0000                     _T5CLK	set	16285
   419  0000                     _T5GATE	set	16284
   420  0000                     _T5GCON	set	16283
   421  0000                     _CCPR4L	set	16240
   422  0000                     _CCPR4H	set	16241
   423  0000                     _CCP4CAP	set	16243
   424  0000                     _CCP4CON	set	16242
   425  0000                     _CCPR3L	set	16244
   426  0000                     _CCPR3H	set	16245
   427  0000                     _CCP3CAP	set	16247
   428  0000                     _CCP3CON	set	16246
   429  0000                     _PORTDbits	set	16333
   430  0000                     _IVTBASEL	set	16341
   431  0000                     _IVTBASEH	set	16342
   432  0000                     _IVTBASEU	set	16343
   433  0000                     _IVTLOCKbits	set	16340
   434  0000                     _IVTLOCK	set	16340
   435  0000                     _INTCON0bits	set	16338
   436  0000                     _TRISD	set	16325
   437  0000                     _TRISC	set	16324
   438  0000                     _TRISB	set	16323
   439  0000                     _TRISA	set	16322
   440  0000                     _TRISE	set	16326
   441  0000                     _LATC	set	16316
   442  0000                     _LATB	set	16315
   443  0000                     _LATA	set	16314
   444  0000                     _LATD	set	16317
   445  0000                     _LATE	set	16318
   446  0000                     _GIE	set	130711
   447                           
   448                           	psect	smallconst
   449  001000                     __psmallconst:
   450                           	callstack 0
   451  001000  00                 	db	0
   452  001001                     STR_4:
   453                           
   454                           ; BSR set to: 1
   455  001001  43                 	db	67	;'C'
   456  001002  75                 	db	117	;'u'
   457  001003  72                 	db	114	;'r'
   458  001004  76                 	db	118	;'v'
   459  001005  65                 	db	101	;'e'
   460  001006  4C                 	db	76	;'L'
   461  001007  65                 	db	101	;'e'
   462  001008  66                 	db	102	;'f'
   463  001009  74                 	db	116	;'t'
   464  00100A  43                 	db	67	;'C'
   465  00100B  6F                 	db	111	;'o'
   466  00100C  75                 	db	117	;'u'
   467  00100D  6E                 	db	110	;'n'
   468  00100E  74                 	db	116	;'t'
   469  00100F  3A                 	db	58	;':'
   470  001010  20                 	db	32
   471  001011  25                 	db	37
   472  001012  75                 	db	117	;'u'
   473  001013  20                 	db	32
   474  001014  20                 	db	32
   475  001015  20                 	db	32
   476  001016  7C                 	db	124
   477  001017  20                 	db	32
   478  001018  20                 	db	32
   479  001019  20                 	db	32
   480  00101A  00                 	db	0
   481  00101B                     STR_3:
   482                           
   483                           ; BSR set to: 1
   484  00101B  52                 	db	82	;'R'
   485  00101C  65                 	db	101	;'e'
   486  00101D  73                 	db	115	;'s'
   487  00101E  65                 	db	101	;'e'
   488  00101F  74                 	db	116	;'t'
   489  001020  20                 	db	32
   490  001021  43                 	db	67	;'C'
   491  001022  75                 	db	117	;'u'
   492  001023  72                 	db	114	;'r'
   493  001024  76                 	db	118	;'v'
   494  001025  65                 	db	101	;'e'
   495  001026  43                 	db	67	;'C'
   496  001027  6F                 	db	111	;'o'
   497  001028  75                 	db	117	;'u'
   498  001029  6E                 	db	110	;'n'
   499  00102A  74                 	db	116	;'t'
   500  00102B  21                 	db	33
   501  00102C  20                 	db	32
   502  00102D  20                 	db	32
   503  00102E  7C                 	db	124
   504  00102F  20                 	db	32
   505  001030  20                 	db	32
   506  001031  20                 	db	32
   507  001032  00                 	db	0
   508  001033                     STR_5:
   509                           
   510                           ; BSR set to: 1
   511  001033  43                 	db	67	;'C'
   512  001034  75                 	db	117	;'u'
   513  001035  72                 	db	114	;'r'
   514  001036  76                 	db	118	;'v'
   515  001037  65                 	db	101	;'e'
   516  001038  52                 	db	82	;'R'
   517  001039  69                 	db	105	;'i'
   518  00103A  67                 	db	103	;'g'
   519  00103B  68                 	db	104	;'h'
   520  00103C  74                 	db	116	;'t'
   521  00103D  43                 	db	67	;'C'
   522  00103E  6F                 	db	111	;'o'
   523  00103F  75                 	db	117	;'u'
   524  001040  6E                 	db	110	;'n'
   525  001041  74                 	db	116	;'t'
   526  001042  3A                 	db	58	;':'
   527  001043  20                 	db	32
   528  001044  25                 	db	37
   529  001045  75                 	db	117	;'u'
   530  001046  0A                 	db	10
   531  001047  00                 	db	0
   532  001048                     STR_2:
   533                           
   534                           ; BSR set to: 1
   535  001048  73                 	db	115	;'s'
   536  001049  74                 	db	116	;'t'
   537  00104A  61                 	db	97	;'a'
   538  00104B  72                 	db	114	;'r'
   539  00104C  41                 	db	65	;'A'
   540  00104D  63                 	db	99	;'c'
   541  00104E  63                 	db	99	;'c'
   542  00104F  65                 	db	101	;'e'
   543  001050  6C                 	db	108	;'l'
   544  001051  50                 	db	80	;'P'
   545  001052  6F                 	db	111	;'o'
   546  001053  77                 	db	119	;'w'
   547  001054  65                 	db	101	;'e'
   548  001055  72                 	db	114	;'r'
   549  001056  3A                 	db	58	;':'
   550  001057  20                 	db	32
   551  001058  25                 	db	37
   552  001059  64                 	db	100	;'d'
   553  00105A  0A                 	db	10
   554  00105B  00                 	db	0
   555  00105C                     STR_6:
   556                           
   557                           ; BSR set to: 1
   558  00105C  52                 	db	82	;'R'
   559  00105D  6F                 	db	111	;'o'
   560  00105E  75                 	db	117	;'u'
   561  00105F  6E                 	db	110	;'n'
   562  001060  64                 	db	100	;'d'
   563  001061  54                 	db	84	;'T'
   564  001062  69                 	db	105	;'i'
   565  001063  6D                 	db	109	;'m'
   566  001064  65                 	db	101	;'e'
   567  001065  3A                 	db	58	;':'
   568  001066  20                 	db	32
   569  001067  25                 	db	37
   570  001068  66                 	db	102	;'f'
   571  001069  0A                 	db	10
   572  00106A  0A                 	db	10
   573  00106B  00                 	db	0
   574  00106C                     STR_9:
   575                           
   576                           ; BSR set to: 1
   577  00106C  53                 	db	83	;'S'
   578  00106D  74                 	db	116	;'t'
   579  00106E  6F                 	db	111	;'o'
   580  00106F  70                 	db	112	;'p'
   581  001070  20                 	db	32
   582  001071  52                 	db	82	;'R'
   583  001072  65                 	db	101	;'e'
   584  001073  76                 	db	118	;'v'
   585  001074  65                 	db	101	;'e'
   586  001075  72                 	db	114	;'r'
   587  001076  73                 	db	115	;'s'
   588  001077  65                 	db	101	;'e'
   589  001078  0A                 	db	10
   590  001079  00                 	db	0
   591  00107A                     STR_7:
   592                           
   593                           ; BSR set to: 1
   594  00107A  52                 	db	82	;'R'
   595  00107B  65                 	db	101	;'e'
   596  00107C  76                 	db	118	;'v'
   597  00107D  65                 	db	101	;'e'
   598  00107E  72                 	db	114	;'r'
   599  00107F  73                 	db	115	;'s'
   600  001080  65                 	db	101	;'e'
   601  001081  52                 	db	82	;'R'
   602  001082  69                 	db	105	;'i'
   603  001083  67                 	db	103	;'g'
   604  001084  74                 	db	116	;'t'
   605  001085  68                 	db	104	;'h'
   606  001086  0A                 	db	10
   607  001087  00                 	db	0
   608  001088                     STR_8:
   609                           
   610                           ; BSR set to: 1
   611  001088  52                 	db	82	;'R'
   612  001089  65                 	db	101	;'e'
   613  00108A  76                 	db	118	;'v'
   614  00108B  65                 	db	101	;'e'
   615  00108C  72                 	db	114	;'r'
   616  00108D  73                 	db	115	;'s'
   617  00108E  65                 	db	101	;'e'
   618  00108F  4C                 	db	76	;'L'
   619  001090  65                 	db	101	;'e'
   620  001091  66                 	db	102	;'f'
   621  001092  74                 	db	116	;'t'
   622  001093  0A                 	db	10
   623  001094  00                 	db	0
   624  001095                     STR_1:
   625                           
   626                           ; BSR set to: 1
   627  001095  42                 	db	66	;'B'
   628  001096  56                 	db	86	;'V'
   629  001097  6F                 	db	111	;'o'
   630  001098  6C                 	db	108	;'l'
   631  001099  74                 	db	116	;'t'
   632  00109A  3A                 	db	58	;':'
   633  00109B  20                 	db	32
   634  00109C  25                 	db	37
   635  00109D  75                 	db	117	;'u'
   636  00109E  0A                 	db	10
   637  00109F  00                 	db	0
   638  0010A0                     STR_10:
   639                           
   640                           ; BSR set to: 1
   641  0010A0  49                 	db	73	;'I'
   642  0010A1  4E                 	db	78	;'N'
   643  0010A2  46                 	db	70	;'F'
   644  0010A3  00                 	db	0
   645  0010A4                     STR_14:
   646                           
   647                           ; BSR set to: 1
   648  0010A4  4E                 	db	78	;'N'
   649  0010A5  41                 	db	65	;'A'
   650  0010A6  4E                 	db	78	;'N'
   651  0010A7  00                 	db	0
   652  0010A8                     STR_11:
   653                           
   654                           ; BSR set to: 1
   655  0010A8  69                 	db	105	;'i'
   656  0010A9  6E                 	db	110	;'n'
   657  0010AA  66                 	db	102	;'f'
   658  0010AB  00                 	db	0
   659  0010AC                     STR_15:
   660                           
   661                           ; BSR set to: 1
   662  0010AC  6E                 	db	110	;'n'
   663  0010AD  61                 	db	97	;'a'
   664  0010AE  6E                 	db	110	;'n'
   665  0010AF  00                 	db	0
   666  0010B0                     STR_18:
   667                           
   668                           ; BSR set to: 1
   669  0010B0  6C                 	db	108	;'l'
   670  0010B1  66                 	db	102	;'f'
   671  0010B2  00                 	db	0
   672  0010B3  00                 	db	0	; dummy byte at the end
   673  0000                     
   674                           ; #config settings
   675                           
   676                           	psect	cinit
   677  005DCA                     __pcinit:
   678                           	callstack 0
   679  005DCA                     start_initialization:
   680                           	callstack 0
   681  005DCA                     __initialization:
   682                           	callstack 0
   683                           
   684                           ; Clear objects allocated to BANK1 (142 bytes)
   685  005DCA  EE00  F100         	lfsr	0,__pbssBANK1
   686  005DCE  0E8E               	movlw	142
   687  005DD0                     clear_0:
   688  005DD0  6AEE               	clrf	postinc0,c
   689  005DD2  06E8               	decf	wreg,f,c
   690  005DD4  E1FD               	bnz	clear_0
   691                           
   692                           ; Clear objects allocated to BANK0 (20 bytes)
   693  005DD6  EE00  F0EB         	lfsr	0,__pbssBANK0
   694  005DDA  0E14               	movlw	20
   695  005DDC                     clear_1:
   696  005DDC  6AEE               	clrf	postinc0,c
   697  005DDE  06E8               	decf	wreg,f,c
   698  005DE0  E1FD               	bnz	clear_1
   699                           
   700                           ; Clear objects allocated to COMRAM (18 bytes)
   701  005DE2  EE00  F03A         	lfsr	0,__pbssCOMRAM
   702  005DE6  0E12               	movlw	18
   703  005DE8                     clear_2:
   704  005DE8  6AEE               	clrf	postinc0,c
   705  005DEA  06E8               	decf	wreg,f,c
   706  005DEC  E1FD               	bnz	clear_2
   707                           
   708                           ;
   709                           ; Setup IVTBASE
   710                           ;
   711  005DEE  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   712  005DF0  6ED5               	movwf	213,c
   713  005DF2  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   714  005DF4  6ED6               	movwf	214,c
   715  005DF6  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   716  005DF8  6ED7               	movwf	215,c
   717  005DFA                     end_of_initialization:
   718                           	callstack 0
   719  005DFA                     __end_of__initialization:
   720                           	callstack 0
   721  005DFA  0100               	movlb	0
   722  005DFC  EF19  F031         	goto	_main	;jump to C main() function
   723                           
   724                           	psect	bssCOMRAM
   725  00003A                     __pbssCOMRAM:
   726                           	callstack 0
   727  00003A                     _width:
   728                           	callstack 0
   729  00003A                     	ds	2
   730  00003C                     _prec:
   731                           	callstack 0
   732  00003C                     	ds	2
   733  00003E                     _flags:
   734                           	callstack 0
   735  00003E                     	ds	2
   736  000040                     _delay:
   737                           	callstack 0
   738  000040                     	ds	1
   739  000041                     _curveMode:
   740                           	callstack 0
   741  000041                     	ds	1
   742  000042                     _uart1RxLastError:
   743                           	callstack 0
   744  000042                     	ds	1
   745  000043                     _uart1RxCount:
   746                           	callstack 0
   747  000043                     	ds	1
   748  000044                     _uart1RxTail:
   749                           	callstack 0
   750  000044                     	ds	1
   751  000045                     _uart1RxHead:
   752                           	callstack 0
   753  000045                     	ds	1
   754  000046                     _uart1TxTail:
   755                           	callstack 0
   756  000046                     	ds	1
   757  000047                     _uart1TxHead:
   758                           	callstack 0
   759  000047                     	ds	1
   760  000048                     _smtPeriod:
   761                           	callstack 0
   762  000048                     	ds	4
   763                           
   764                           	psect	bssBANK0
   765  0000EB                     __pbssBANK0:
   766                           	callstack 0
   767  0000EB                     _BatteryVolt:
   768                           	callstack 0
   769  0000EB                     	ds	2
   770  0000ED                     _actMotorPow:
   771                           	callstack 0
   772  0000ED                     	ds	2
   773  0000EF                     _currentSpeed:
   774                           	callstack 0
   775  0000EF                     	ds	2
   776  0000F1                     _setSpeed:
   777                           	callstack 0
   778  0000F1                     	ds	2
   779  0000F3                     _roundTimeCount:
   780                           	callstack 0
   781  0000F3                     	ds	2
   782  0000F5                     _distRight:
   783                           	callstack 0
   784  0000F5                     	ds	2
   785  0000F7                     _distLeft:
   786                           	callstack 0
   787  0000F7                     	ds	2
   788  0000F9                     _curveRightCount:
   789                           	callstack 0
   790  0000F9                     	ds	1
   791  0000FA                     _curveLeftCount:
   792                           	callstack 0
   793  0000FA                     	ds	1
   794  0000FB                     _cycle10ms:
   795                           	callstack 0
   796  0000FB                     	ds	1
   797  0000FC                     _driveMode:
   798                           	callstack 0
   799  0000FC                     	ds	1
   800  0000FD                     _distFront:
   801                           	callstack 0
   802  0000FD                     	ds	2
   803                           
   804                           	psect	bssBANK1
   805  000100                     __pbssBANK1:
   806                           	callstack 0
   807  000100                     _uart1RxStatusBuffer:
   808                           	callstack 0
   809  000100                     	ds	8
   810  000108                     _uart1RxBuffer:
   811                           	callstack 0
   812  000108                     	ds	8
   813  000110                     _uart1TxBuffer:
   814                           	callstack 0
   815  000110                     	ds	8
   816  000118                     floorf@F527:
   817                           	callstack 0
   818  000118                     	ds	4
   819  00011C                     ___fpclassifyf@F465:
   820                           	callstack 0
   821  00011C                     	ds	4
   822  000120                     _smtWay:
   823                           	callstack 0
   824  000120                     	ds	4
   825  000124                     _smtDuty:
   826                           	callstack 0
   827  000124                     	ds	4
   828  000128                     _nout:
   829                           	callstack 0
   830  000128                     	ds	2
   831  00012A                     _reverseTime:
   832                           	callstack 0
   833  00012A                     	ds	2
   834  00012C                     _oldSpeed:
   835                           	callstack 0
   836  00012C                     	ds	2
   837  00012E                     _motPow:
   838                           	callstack 0
   839  00012E                     	ds	2
   840  000130                     _battCheckCount:
   841                           	callstack 0
   842  000130                     	ds	2
   843  000132                     _oldDistRight:
   844                           	callstack 0
   845  000132                     	ds	2
   846  000134                     _oldDistLeft:
   847                           	callstack 0
   848  000134                     	ds	2
   849  000136                     _reverseCount:
   850                           	callstack 0
   851  000136                     	ds	2
   852  000138                     TMR4_ISR@CountCallBack:
   853                           	callstack 0
   854  000138                     	ds	2
   855  00013A                     _distRightM:
   856                           	callstack 0
   857  00013A                     	ds	2
   858  00013C                     _distLeftM:
   859                           	callstack 0
   860  00013C                     	ds	2
   861  00013E                     _dbuf:
   862                           	callstack 0
   863  00013E                     	ds	80
   864                           
   865                           	psect	cstackBANK1
   866  0001A4                     __pcstackBANK1:
   867                           	callstack 0
   868  0001A4                     ?_vfprintf:
   869                           	callstack 0
   870  0001A4                     vfprintf@fp:
   871                           	callstack 0
   872                           
   873                           ; 2 bytes @ 0x0
   874  0001A4                     	ds	2
   875  0001A6                     vfprintf@fmt:
   876                           	callstack 0
   877                           
   878                           ; 2 bytes @ 0x2
   879  0001A6                     	ds	2
   880  0001A8                     vfprintf@ap:
   881                           	callstack 0
   882                           
   883                           ; 2 bytes @ 0x4
   884  0001A8                     	ds	2
   885  0001AA                     vfprintf@cfmt:
   886                           	callstack 0
   887                           
   888                           ; 2 bytes @ 0x6
   889  0001AA                     	ds	2
   890  0001AC                     ?_printf:
   891                           	callstack 0
   892  0001AC                     printf@fmt:
   893                           	callstack 0
   894                           
   895                           ; 2 bytes @ 0x8
   896  0001AC                     	ds	6
   897  0001B2                     printf@ap:
   898                           	callstack 0
   899                           
   900                           ; 2 bytes @ 0xE
   901  0001B2                     	ds	2
   902  0001B4                     startAccell@i:
   903                           	callstack 0
   904  0001B4                     checkCurveCount@roundTime:
   905                           	callstack 0
   906                           
   907                           ; 4 bytes @ 0x10
   908  0001B4                     	ds	4
   909                           
   910                           	psect	cstackBANK0
   911  000060                     __pcstackBANK0:
   912                           	callstack 0
   913  000060                     ?_dtoa:
   914                           	callstack 0
   915  000060                     ?_utoa:
   916                           	callstack 0
   917  000060                     ___flmul@sign:
   918                           	callstack 0
   919  000060                     dtoa@fp:
   920                           	callstack 0
   921  000060                     utoa@fp:
   922                           	callstack 0
   923  000060                     ___fldiv@rem:
   924                           	callstack 0
   925                           
   926                           ; 4 bytes @ 0x0
   927  000060                     	ds	1
   928  000061                     ___flmul@aexp:
   929                           	callstack 0
   930                           
   931                           ; 1 bytes @ 0x1
   932  000061                     	ds	1
   933  000062                     ___flmul@grs:
   934                           	callstack 0
   935  000062                     dtoa@d:
   936                           	callstack 0
   937  000062                     utoa@d:
   938                           	callstack 0
   939                           
   940                           ; 8 bytes @ 0x2
   941  000062                     	ds	2
   942  000064                     ___fldiv@sign:
   943                           	callstack 0
   944                           
   945                           ; 1 bytes @ 0x4
   946  000064                     	ds	1
   947  000065                     ___fldiv@new_exp:
   948                           	callstack 0
   949                           
   950                           ; 2 bytes @ 0x5
   951  000065                     	ds	1
   952  000066                     ___flmul@bexp:
   953                           	callstack 0
   954                           
   955                           ; 1 bytes @ 0x6
   956  000066                     	ds	1
   957  000067                     ___fldiv@grs:
   958                           	callstack 0
   959  000067                     ___flmul@prod:
   960                           	callstack 0
   961                           
   962                           ; 4 bytes @ 0x7
   963  000067                     	ds	3
   964  00006A                     _dtoa$3539:
   965                           	callstack 0
   966  00006A                     utoa@p:
   967                           	callstack 0
   968                           
   969                           ; 2 bytes @ 0xA
   970  00006A                     	ds	1
   971  00006B                     ___fldiv@bexp:
   972                           	callstack 0
   973  00006B                     ___flmul@temp:
   974                           	callstack 0
   975                           
   976                           ; 2 bytes @ 0xB
   977  00006B                     	ds	1
   978  00006C                     ___fldiv@aexp:
   979                           	callstack 0
   980  00006C                     dtoa@p:
   981                           	callstack 0
   982  00006C                     utoa@w:
   983                           	callstack 0
   984                           
   985                           ; 2 bytes @ 0xC
   986  00006C                     	ds	1
   987  00006D                     ??_floorf:
   988  00006D                     ?___fladd:
   989                           	callstack 0
   990  00006D                     ___flge@ff1:
   991                           	callstack 0
   992  00006D                     ___fladd@b:
   993                           	callstack 0
   994                           
   995                           ; 4 bytes @ 0xD
   996  00006D                     	ds	1
   997  00006E                     dtoa@w:
   998                           	callstack 0
   999  00006E                     utoa@n:
  1000                           	callstack 0
  1001                           
  1002                           ; 8 bytes @ 0xE
  1003  00006E                     	ds	2
  1004  000070                     dtoa@s:
  1005                           	callstack 0
  1006                           
  1007                           ; 2 bytes @ 0x10
  1008  000070                     	ds	1
  1009  000071                     ___flge@ff2:
  1010                           	callstack 0
  1011  000071                     ___fladd@a:
  1012                           	callstack 0
  1013                           
  1014                           ; 4 bytes @ 0x11
  1015  000071                     	ds	1
  1016  000072                     dtoa@n:
  1017                           	callstack 0
  1018                           
  1019                           ; 8 bytes @ 0x12
  1020  000072                     	ds	1
  1021  000073                     floorf@m:
  1022                           	callstack 0
  1023                           
  1024                           ; 4 bytes @ 0x13
  1025  000073                     	ds	2
  1026  000075                     ___fladd@signs:
  1027                           	callstack 0
  1028                           
  1029                           ; 1 bytes @ 0x15
  1030  000075                     	ds	1
  1031  000076                     ___fladd@aexp:
  1032                           	callstack 0
  1033  000076                     utoa@i:
  1034                           	callstack 0
  1035                           
  1036                           ; 2 bytes @ 0x16
  1037  000076                     	ds	1
  1038  000077                     ___fladd@bexp:
  1039                           	callstack 0
  1040  000077                     floorf@e:
  1041                           	callstack 0
  1042                           
  1043                           ; 2 bytes @ 0x17
  1044  000077                     	ds	1
  1045  000078                     ___fladd@grs:
  1046                           	callstack 0
  1047                           
  1048                           ; 1 bytes @ 0x18
  1049  000078                     	ds	1
  1050  000079                     ?___flsub:
  1051                           	callstack 0
  1052  000079                     ?___fltol:
  1053                           	callstack 0
  1054  000079                     ___fltol@f1:
  1055                           	callstack 0
  1056  000079                     ___flsub@b:
  1057                           	callstack 0
  1058  000079                     floorf@u:
  1059                           	callstack 0
  1060                           
  1061                           ; 4 bytes @ 0x19
  1062  000079                     	ds	1
  1063  00007A                     dtoa@i:
  1064                           	callstack 0
  1065                           
  1066                           ; 2 bytes @ 0x1A
  1067  00007A                     	ds	3
  1068  00007D                     ??___fltol:
  1069  00007D                     ___flsub@a:
  1070                           	callstack 0
  1071                           
  1072                           ; 4 bytes @ 0x1D
  1073  00007D                     	ds	4
  1074  000081                     ___fltol@sign1:
  1075                           	callstack 0
  1076                           
  1077                           ; 1 bytes @ 0x21
  1078  000081                     	ds	1
  1079  000082                     ___fltol@exp1:
  1080                           	callstack 0
  1081                           
  1082                           ; 1 bytes @ 0x22
  1083  000082                     	ds	1
  1084  000083                     ??_calcSpeed:
  1085  000083                     ??_calcMotorPow:
  1086  000083                     ?_efgtoa:
  1087                           	callstack 0
  1088  000083                     setSteering@steering:
  1089                           	callstack 0
  1090  000083                     efgtoa@fp:
  1091                           	callstack 0
  1092                           
  1093                           ; 2 bytes @ 0x23
  1094  000083                     	ds	2
  1095  000085                     setSteering@steeringMode:
  1096                           	callstack 0
  1097  000085                     calcMotorPow@setSpeedDelta:
  1098                           	callstack 0
  1099  000085                     efgtoa@f:
  1100                           	callstack 0
  1101                           
  1102                           ; 4 bytes @ 0x25
  1103  000085                     	ds	1
  1104  000086                     ??_setSteering:
  1105                           
  1106                           ; 1 bytes @ 0x26
  1107  000086                     	ds	1
  1108  000087                     calcSpeed@speed:
  1109                           	callstack 0
  1110  000087                     calcMotorPow@oldSpeedDelta:
  1111                           	callstack 0
  1112                           
  1113                           ; 2 bytes @ 0x27
  1114  000087                     	ds	1
  1115  000088                     setSteering@steeringF:
  1116                           	callstack 0
  1117                           
  1118                           ; 2 bytes @ 0x28
  1119  000088                     	ds	1
  1120  000089                     calcMotorPow@addMPow:
  1121                           	callstack 0
  1122  000089                     efgtoa@c:
  1123                           	callstack 0
  1124                           
  1125                           ; 1 bytes @ 0x29
  1126  000089                     	ds	1
  1127  00008A                     ??_efgtoa:
  1128  00008A                     setSteering@steeringB:
  1129                           	callstack 0
  1130                           
  1131                           ; 2 bytes @ 0x2A
  1132  00008A                     	ds	2
  1133  00008C                     ??_calcSteering:
  1134                           
  1135                           ; 1 bytes @ 0x2C
  1136  00008C                     	ds	2
  1137  00008E                     calcSteering@delta:
  1138                           	callstack 0
  1139                           
  1140                           ; 2 bytes @ 0x2E
  1141  00008E                     	ds	1
  1142  00008F                     _efgtoa$3563:
  1143                           	callstack 0
  1144                           
  1145                           ; 2 bytes @ 0x2F
  1146  00008F                     	ds	2
  1147  000091                     _efgtoa$3564:
  1148                           	callstack 0
  1149                           
  1150                           ; 2 bytes @ 0x31
  1151  000091                     	ds	2
  1152  000093                     _efgtoa$3568:
  1153                           	callstack 0
  1154                           
  1155                           ; 2 bytes @ 0x33
  1156  000093                     	ds	2
  1157  000095                     _efgtoa$3572:
  1158                           	callstack 0
  1159                           
  1160                           ; 2 bytes @ 0x35
  1161  000095                     	ds	2
  1162  000097                     _efgtoa$3573:
  1163                           	callstack 0
  1164                           
  1165                           ; 2 bytes @ 0x37
  1166  000097                     	ds	2
  1167  000099                     _efgtoa$3574:
  1168                           	callstack 0
  1169                           
  1170                           ; 2 bytes @ 0x39
  1171  000099                     	ds	2
  1172  00009B                     efgtoa@t:
  1173                           	callstack 0
  1174                           
  1175                           ; 2 bytes @ 0x3B
  1176  00009B                     	ds	2
  1177  00009D                     efgtoa@pp:
  1178                           	callstack 0
  1179                           
  1180                           ; 2 bytes @ 0x3D
  1181  00009D                     	ds	2
  1182  00009F                     efgtoa@ne:
  1183                           	callstack 0
  1184                           
  1185                           ; 2 bytes @ 0x3F
  1186  00009F                     	ds	2
  1187  0000A1                     efgtoa@m:
  1188                           	callstack 0
  1189                           
  1190                           ; 2 bytes @ 0x41
  1191  0000A1                     	ds	2
  1192  0000A3                     efgtoa@ou:
  1193                           	callstack 0
  1194                           
  1195                           ; 4 bytes @ 0x43
  1196  0000A3                     	ds	4
  1197  0000A7                     efgtoa@d:
  1198                           	callstack 0
  1199                           
  1200                           ; 2 bytes @ 0x47
  1201  0000A7                     	ds	2
  1202  0000A9                     efgtoa@sign:
  1203                           	callstack 0
  1204                           
  1205                           ; 2 bytes @ 0x49
  1206  0000A9                     	ds	2
  1207  0000AB                     efgtoa@p:
  1208                           	callstack 0
  1209                           
  1210                           ; 2 bytes @ 0x4B
  1211  0000AB                     	ds	2
  1212  0000AD                     efgtoa@w:
  1213                           	callstack 0
  1214                           
  1215                           ; 2 bytes @ 0x4D
  1216  0000AD                     	ds	2
  1217  0000AF                     efgtoa@nmode:
  1218                           	callstack 0
  1219                           
  1220                           ; 1 bytes @ 0x4F
  1221  0000AF                     	ds	1
  1222  0000B0                     efgtoa@mode:
  1223                           	callstack 0
  1224                           
  1225                           ; 1 bytes @ 0x50
  1226  0000B0                     	ds	1
  1227  0000B1                     efgtoa@h:
  1228                           	callstack 0
  1229                           
  1230                           ; 4 bytes @ 0x51
  1231  0000B1                     	ds	4
  1232  0000B5                     efgtoa@l:
  1233                           	callstack 0
  1234                           
  1235                           ; 4 bytes @ 0x55
  1236  0000B5                     	ds	4
  1237  0000B9                     efgtoa@i:
  1238                           	callstack 0
  1239                           
  1240                           ; 2 bytes @ 0x59
  1241  0000B9                     	ds	2
  1242  0000BB                     efgtoa@g:
  1243                           	callstack 0
  1244                           
  1245                           ; 4 bytes @ 0x5B
  1246  0000BB                     	ds	4
  1247  0000BF                     efgtoa@e:
  1248                           	callstack 0
  1249                           
  1250                           ; 2 bytes @ 0x5F
  1251  0000BF                     	ds	2
  1252  0000C1                     efgtoa@n:
  1253                           	callstack 0
  1254                           
  1255                           ; 2 bytes @ 0x61
  1256  0000C1                     	ds	2
  1257  0000C3                     efgtoa@u:
  1258                           	callstack 0
  1259                           
  1260                           ; 4 bytes @ 0x63
  1261  0000C3                     	ds	4
  1262  0000C7                     ?_vfpfcnvrt:
  1263                           	callstack 0
  1264  0000C7                     vfpfcnvrt@fp:
  1265                           	callstack 0
  1266                           
  1267                           ; 2 bytes @ 0x67
  1268  0000C7                     	ds	2
  1269  0000C9                     vfpfcnvrt@fmt:
  1270                           	callstack 0
  1271                           
  1272                           ; 2 bytes @ 0x69
  1273  0000C9                     	ds	2
  1274  0000CB                     vfpfcnvrt@ap:
  1275                           	callstack 0
  1276                           
  1277                           ; 2 bytes @ 0x6B
  1278  0000CB                     	ds	2
  1279  0000CD                     ??_vfpfcnvrt:
  1280                           
  1281                           ; 1 bytes @ 0x6D
  1282  0000CD                     	ds	4
  1283  0000D1                     vfpfcnvrt@ll:
  1284                           	callstack 0
  1285                           
  1286                           ; 8 bytes @ 0x71
  1287  0000D1                     	ds	8
  1288  0000D9                     vfpfcnvrt@llu:
  1289                           	callstack 0
  1290                           
  1291                           ; 8 bytes @ 0x79
  1292  0000D9                     	ds	8
  1293  0000E1                     _vfpfcnvrt$3599:
  1294                           	callstack 0
  1295                           
  1296                           ; 2 bytes @ 0x81
  1297  0000E1                     	ds	2
  1298  0000E3                     vfpfcnvrt@f:
  1299                           	callstack 0
  1300                           
  1301                           ; 4 bytes @ 0x83
  1302  0000E3                     	ds	4
  1303  0000E7                     vfpfcnvrt@ct:
  1304                           	callstack 0
  1305                           
  1306                           ; 3 bytes @ 0x87
  1307  0000E7                     	ds	3
  1308  0000EA                     vfpfcnvrt@c:
  1309                           	callstack 0
  1310                           
  1311                           ; 1 bytes @ 0x8A
  1312  0000EA                     	ds	1
  1313                           
  1314                           	psect	cstackCOMRAM
  1315  000001                     __pcstackCOMRAM:
  1316                           	callstack 0
  1317  000001                     CCP3_DefaultCallBack@capturedValue:
  1318                           	callstack 0
  1319                           
  1320                           ; 2 bytes @ 0x0
  1321  000001                     	ds	2
  1322  000003                     CCP3_CaptureISR@module:
  1323                           	callstack 0
  1324                           
  1325                           ; 2 bytes @ 0x2
  1326  000003                     	ds	2
  1327  000005                     CCP4_DefaultCallBack@capturedValue:
  1328                           	callstack 0
  1329                           
  1330                           ; 2 bytes @ 0x4
  1331  000005                     	ds	2
  1332  000007                     CCP4_CaptureISR@module:
  1333                           	callstack 0
  1334                           
  1335                           ; 2 bytes @ 0x6
  1336  000007                     	ds	2
  1337  000009                     ?_TMR5_ReadTimer:
  1338                           	callstack 0
  1339  000009                     TMR5_WriteTimer@timerVal:
  1340                           	callstack 0
  1341                           
  1342                           ; 2 bytes @ 0x8
  1343  000009                     	ds	2
  1344  00000B                     ??_TMR5_ReadTimer:
  1345  00000B                     
  1346                           ; 1 bytes @ 0xA
  1347  00000B                     	ds	2
  1348  00000D                     TMR5_ReadTimer@readVal:
  1349                           	callstack 0
  1350                           
  1351                           ; 2 bytes @ 0xC
  1352  00000D                     	ds	2
  1353  00000F                     TMR5_ReadTimer@readValHigh:
  1354                           	callstack 0
  1355                           
  1356                           ; 1 bytes @ 0xE
  1357  00000F                     	ds	1
  1358  000010                     TMR5_ReadTimer@readValLow:
  1359                           	callstack 0
  1360                           
  1361                           ; 1 bytes @ 0xF
  1362  000010                     	ds	1
  1363  000011                     ??_UART1_tx_vect_isr:
  1364  000011                     
  1365                           ; 1 bytes @ 0x10
  1366  000011                     	ds	1
  1367  000012                     ??_UART1_rx_vect_isr:
  1368                           
  1369                           ; 1 bytes @ 0x11
  1370  000012                     	ds	1
  1371  000013                     ??_TMR4_ISR:
  1372                           
  1373                           ; 1 bytes @ 0x12
  1374  000013                     	ds	1
  1375  000014                     ??_TMR3_Initialize:
  1376  000014                     ??_getCurve:
  1377  000014                     ?_strlen:
  1378                           	callstack 0
  1379  000014                     ?___fpclassifyf:
  1380                           	callstack 0
  1381  000014                     ?_isupper:
  1382                           	callstack 0
  1383  000014                     ?_strncmp:
  1384                           	callstack 0
  1385  000014                     ?_ADCC_GetSingleConversion:
  1386                           	callstack 0
  1387  000014                     ?___awdiv:
  1388                           	callstack 0
  1389  000014                     ?___awmod:
  1390                           	callstack 0
  1391  000014                     ?___lwdiv:
  1392                           	callstack 0
  1393  000014                     ?___aldiv:
  1394                           	callstack 0
  1395  000014                     ?___flneg:
  1396                           	callstack 0
  1397  000014                     ?___aodiv:
  1398                           	callstack 0
  1399  000014                     ?___aomod:
  1400                           	callstack 0
  1401  000014                     ?___lodiv:
  1402                           	callstack 0
  1403  000014                     ?___lomod:
  1404                           	callstack 0
  1405  000014                     UART1_Write@txData:
  1406                           	callstack 0
  1407  000014                     INTERRUPT_Initialize@state:
  1408                           	callstack 0
  1409  000014                     UART1_SetFramingErrorHandler@interruptHandler:
  1410                           	callstack 0
  1411  000014                     UART1_SetOverrunErrorHandler@interruptHandler:
  1412                           	callstack 0
  1413  000014                     UART1_SetErrorHandler@interruptHandler:
  1414                           	callstack 0
  1415  000014                     UART1_SetRxInterruptHandler@InterruptHandler:
  1416                           	callstack 0
  1417  000014                     UART1_SetTxInterruptHandler@InterruptHandler:
  1418                           	callstack 0
  1419  000014                     CCP3_SetCallBack@customCallBack:
  1420                           	callstack 0
  1421  000014                     CCP4_SetCallBack@customCallBack:
  1422                           	callstack 0
  1423  000014                     TMR5_SetGateInterruptHandler@InterruptHandler:
  1424                           	callstack 0
  1425  000014                     TMR4_SetInterruptHandler@InterruptHandler:
  1426                           	callstack 0
  1427  000014                     PWM7_LoadDutyValue@dutyValue:
  1428                           	callstack 0
  1429  000014                     PWM8_LoadDutyValue@dutyValue:
  1430                           	callstack 0
  1431  000014                     PWM5_LoadDutyValue@dutyValue:
  1432                           	callstack 0
  1433  000014                     PWM6_LoadDutyValue@dutyValue:
  1434                           	callstack 0
  1435  000014                     ___awdiv@dividend:
  1436                           	callstack 0
  1437  000014                     ___awmod@dividend:
  1438                           	callstack 0
  1439  000014                     ___lwdiv@dividend:
  1440                           	callstack 0
  1441  000014                     isupper@c:
  1442                           	callstack 0
  1443  000014                     strcpy@dest:
  1444                           	callstack 0
  1445  000014                     strlen@s:
  1446                           	callstack 0
  1447  000014                     strncmp@_l:
  1448                           	callstack 0
  1449  000014                     ___aldiv@dividend:
  1450                           	callstack 0
  1451  000014                     ___fleq@ff1:
  1452                           	callstack 0
  1453  000014                     ___flneg@f1:
  1454                           	callstack 0
  1455  000014                     ___fpclassifyf@x:
  1456                           	callstack 0
  1457  000014                     ___aodiv@dividend:
  1458                           	callstack 0
  1459  000014                     ___aomod@dividend:
  1460                           	callstack 0
  1461  000014                     ___lodiv@dividend:
  1462                           	callstack 0
  1463  000014                     ___lomod@dividend:
  1464                           	callstack 0
  1465                           
  1466                           ; 8 bytes @ 0x13
  1467  000014                     	ds	1
  1468  000015                     putch@txData:
  1469                           	callstack 0
  1470                           
  1471                           ; 1 bytes @ 0x14
  1472  000015                     	ds	1
  1473  000016                     ??_TMR5_Initialize:
  1474  000016                     ??_isupper:
  1475  000016                     ??_PWM7_LoadDutyValue:
  1476  000016                     ??_PWM8_LoadDutyValue:
  1477  000016                     ??_PWM5_LoadDutyValue:
  1478  000016                     ??_PWM6_LoadDutyValue:
  1479  000016                     ??_ADCC_GetSingleConversion:
  1480  000016                     getCurve@deltaLeft:
  1481                           	callstack 0
  1482  000016                     ___awdiv@divisor:
  1483                           	callstack 0
  1484  000016                     ___awmod@divisor:
  1485                           	callstack 0
  1486  000016                     ___lwdiv@divisor:
  1487                           	callstack 0
  1488  000016                     fputc@c:
  1489                           	callstack 0
  1490  000016                     strcpy@src:
  1491                           	callstack 0
  1492  000016                     strlen@a:
  1493                           	callstack 0
  1494  000016                     strncmp@_r:
  1495                           	callstack 0
  1496                           
  1497                           ; 2 bytes @ 0x15
  1498  000016                     	ds	2
  1499  000018                     ??___fpclassifyf:
  1500  000018                     ??_strcpy:
  1501  000018                     ADCC_GetSingleConversion@channel:
  1502                           	callstack 0
  1503  000018                     ___awdiv@counter:
  1504                           	callstack 0
  1505  000018                     ___awmod@counter:
  1506                           	callstack 0
  1507  000018                     ___lwdiv@counter:
  1508                           	callstack 0
  1509  000018                     getCurve@deltaRight:
  1510                           	callstack 0
  1511  000018                     setMotor@motorPower:
  1512                           	callstack 0
  1513  000018                     fputc@fp:
  1514                           	callstack 0
  1515  000018                     strncmp@n:
  1516                           	callstack 0
  1517  000018                     ___aldiv@divisor:
  1518                           	callstack 0
  1519  000018                     ___fleq@ff2:
  1520                           	callstack 0
  1521                           
  1522                           ; 4 bytes @ 0x17
  1523  000018                     	ds	1
  1524  000019                     ___awdiv@sign:
  1525                           	callstack 0
  1526  000019                     ___awmod@sign:
  1527                           	callstack 0
  1528  000019                     ___lwdiv@quotient:
  1529                           	callstack 0
  1530                           
  1531                           ; 2 bytes @ 0x18
  1532  000019                     	ds	1
  1533  00001A                     ??_setMotor:
  1534  00001A                     ??_fputc:
  1535  00001A                     ??_strncmp:
  1536  00001A                     ?_tolower:
  1537                           	callstack 0
  1538  00001A                     ___awdiv@quotient:
  1539                           	callstack 0
  1540  00001A                     strcpy@s:
  1541                           	callstack 0
  1542  00001A                     tolower@c:
  1543                           	callstack 0
  1544                           
  1545                           ; 2 bytes @ 0x19
  1546  00001A                     	ds	1
  1547  00001B                     strncmp@l:
  1548                           	callstack 0
  1549                           
  1550                           ; 2 bytes @ 0x1A
  1551  00001B                     	ds	1
  1552  00001C                     ??_tolower:
  1553  00001C                     ??___fleq:
  1554  00001C                     ?___xxtofl:
  1555                           	callstack 0
  1556  00001C                     ___aldiv@counter:
  1557                           	callstack 0
  1558  00001C                     ___fpclassifyf@e:
  1559                           	callstack 0
  1560  00001C                     strcpy@d:
  1561                           	callstack 0
  1562  00001C                     ___xxtofl@val:
  1563                           	callstack 0
  1564  00001C                     ___aodiv@divisor:
  1565                           	callstack 0
  1566  00001C                     ___aomod@divisor:
  1567                           	callstack 0
  1568  00001C                     ___lodiv@divisor:
  1569                           	callstack 0
  1570  00001C                     ___lomod@divisor:
  1571                           	callstack 0
  1572                           
  1573                           ; 8 bytes @ 0x1B
  1574  00001C                     	ds	1
  1575  00001D                     ___aldiv@sign:
  1576                           	callstack 0
  1577  00001D                     strncmp@r:
  1578                           	callstack 0
  1579                           
  1580                           ; 2 bytes @ 0x1C
  1581  00001D                     	ds	1
  1582  00001E                     ___aldiv@quotient:
  1583                           	callstack 0
  1584  00001E                     ___fpclassifyf@u:
  1585                           	callstack 0
  1586                           
  1587                           ; 4 bytes @ 0x1D
  1588  00001E                     	ds	1
  1589  00001F                     fputs@s:
  1590                           	callstack 0
  1591                           
  1592                           ; 2 bytes @ 0x1E
  1593  00001F                     	ds	1
  1594  000020                     ??___xxtofl:
  1595  000020                     _tolower$3693:
  1596                           	callstack 0
  1597                           
  1598                           ; 2 bytes @ 0x1F
  1599  000020                     	ds	1
  1600  000021                     fputs@fp:
  1601                           	callstack 0
  1602                           
  1603                           ; 2 bytes @ 0x20
  1604  000021                     	ds	1
  1605  000022                     ?_actSpeed:
  1606                           	callstack 0
  1607                           
  1608                           ; 2 bytes @ 0x21
  1609  000022                     	ds	1
  1610  000023                     fputs@c:
  1611                           	callstack 0
  1612                           
  1613                           ; 1 bytes @ 0x22
  1614  000023                     	ds	1
  1615  000024                     ___aodiv@counter:
  1616                           	callstack 0
  1617  000024                     ___aomod@counter:
  1618                           	callstack 0
  1619  000024                     ___lomod@counter:
  1620                           	callstack 0
  1621  000024                     ___xxtofl@sign:
  1622                           	callstack 0
  1623  000024                     actSpeed@speed:
  1624                           	callstack 0
  1625  000024                     fputs@i:
  1626                           	callstack 0
  1627  000024                     ___lodiv@quotient:
  1628                           	callstack 0
  1629                           
  1630                           ; 8 bytes @ 0x23
  1631  000024                     	ds	1
  1632  000025                     ___aodiv@sign:
  1633                           	callstack 0
  1634  000025                     ___aomod@sign:
  1635                           	callstack 0
  1636  000025                     ___xxtofl@exp:
  1637                           	callstack 0
  1638                           
  1639                           ; 1 bytes @ 0x24
  1640  000025                     	ds	1
  1641  000026                     ?_abs:
  1642                           	callstack 0
  1643  000026                     ?_pad:
  1644                           	callstack 0
  1645  000026                     pad@fp:
  1646                           	callstack 0
  1647  000026                     abs@a:
  1648                           	callstack 0
  1649  000026                     ___xxtofl@arg:
  1650                           	callstack 0
  1651  000026                     ___aodiv@quotient:
  1652                           	callstack 0
  1653                           
  1654                           ; 8 bytes @ 0x25
  1655  000026                     	ds	2
  1656  000028                     ??_abs:
  1657  000028                     pad@buf:
  1658                           	callstack 0
  1659                           
  1660                           ; 2 bytes @ 0x27
  1661  000028                     	ds	2
  1662  00002A                     ?___fldiv:
  1663                           	callstack 0
  1664  00002A                     ?___flmul:
  1665                           	callstack 0
  1666  00002A                     pad@p:
  1667                           	callstack 0
  1668  00002A                     ___fldiv@b:
  1669                           	callstack 0
  1670  00002A                     ___flmul@b:
  1671                           	callstack 0
  1672                           
  1673                           ; 4 bytes @ 0x29
  1674  00002A                     	ds	2
  1675  00002C                     ??_pad:
  1676  00002C                     ___lodiv@counter:
  1677                           	callstack 0
  1678                           
  1679                           ; 1 bytes @ 0x2B
  1680  00002C                     	ds	1
  1681  00002D                     pad@i:
  1682                           	callstack 0
  1683                           
  1684                           ; 2 bytes @ 0x2C
  1685  00002D                     	ds	1
  1686  00002E                     ___fldiv@a:
  1687                           	callstack 0
  1688  00002E                     ___flmul@a:
  1689                           	callstack 0
  1690                           
  1691                           ; 4 bytes @ 0x2D
  1692  00002E                     	ds	1
  1693  00002F                     pad@w:
  1694                           	callstack 0
  1695                           
  1696                           ; 2 bytes @ 0x2E
  1697  00002F                     	ds	2
  1698  000031                     ??_dtoa:
  1699  000031                     ??_utoa:
  1700                           
  1701                           ; 1 bytes @ 0x30
  1702  000031                     	ds	1
  1703  000032                     ??___fldiv:
  1704  000032                     ??___flmul:
  1705                           
  1706                           ; 1 bytes @ 0x31
  1707  000032                     	ds	4
  1708  000036                     ??___fladd:
  1709  000036                     ??___flge:
  1710  000036                     ?_floorf:
  1711                           	callstack 0
  1712  000036                     floorf@x:
  1713                           	callstack 0
  1714                           
  1715                           ; 4 bytes @ 0x35
  1716  000036                     	ds	4
  1717  00003A                     
  1718                           ; 1 bytes @ 0x39
  1719 ;;
  1720 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1721 ;;
  1722 ;; *************** function _main *****************
  1723 ;; Defined at:
  1724 ;;		line 8 in file "main.c"
  1725 ;; Parameters:    Size  Location     Type
  1726 ;;		None
  1727 ;; Auto vars:     Size  Location     Type
  1728 ;;		None
  1729 ;; Return value:  Size  Location     Type
  1730 ;;                  1    wreg      void 
  1731 ;; Registers used:
  1732 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1733 ;; Tracked objects:
  1734 ;;		On entry : 0/0
  1735 ;;		On exit  : 0/0
  1736 ;;		Unchanged: 0/0
  1737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1741 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1742 ;;Total ram usage:        0 bytes
  1743 ;; Hardware stack levels required when called: 20
  1744 ;; This function calls:
  1745 ;;		_SYSTEM_Initialize
  1746 ;;		_TMR4_SetInterruptHandler
  1747 ;;		_loop
  1748 ;; This function is called by:
  1749 ;;		Startup code after reset
  1750 ;; This function uses a non-reentrant model
  1751 ;;
  1752                           
  1753                           	psect	text0
  1754  006232                     __ptext0:
  1755                           	callstack 0
  1756  006232                     _main:
  1757                           	callstack 11
  1758  006232                     
  1759                           ;main.c: 9:     SYSTEM_Initialize();
  1760  006232  EC22  F02D         	call	_SYSTEM_Initialize	;wreg free
  1761  006236                     
  1762                           ;main.c: 10:     (INTCON0bits.GIEH = 1);
  1763  006236  8ED2               	bsf	210,7,c	;volatile
  1764  006238                     
  1765                           ;main.c: 11:     (INTCON0bits.GIEL = 1);
  1766  006238  8CD2               	bsf	210,6,c	;volatile
  1767                           
  1768                           ;main.c: 12:     TMR4_SetInterruptHandler(TMR4_10msISR);
  1769  00623A  0E76               	movlw	low _TMR4_10msISR
  1770  00623C  6E14               	movwf	TMR4_SetInterruptHandler@InterruptHandler^0,c
  1771  00623E  0E63               	movlw	high _TMR4_10msISR
  1772  006240  6E15               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)^0,c
  1773  006242  ECAC  F031         	call	_TMR4_SetInterruptHandler	;wreg free
  1774  006246                     l9474:
  1775                           
  1776                           ;main.c: 15:         loop();
  1777  006246  EC19  F023         	call	_loop	;wreg free
  1778  00624A  EF23  F031         	goto	l9474
  1779  00624E  EF57  F000         	goto	start
  1780  006252                     __end_of_main:
  1781                           	callstack 0
  1782                           
  1783 ;; *************** function _loop *****************
  1784 ;; Defined at:
  1785 ;;		line 19 in file "main.c"
  1786 ;; Parameters:    Size  Location     Type
  1787 ;;		None
  1788 ;; Auto vars:     Size  Location     Type
  1789 ;;		None
  1790 ;; Return value:  Size  Location     Type
  1791 ;;                  1    wreg      void 
  1792 ;; Registers used:
  1793 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1794 ;; Tracked objects:
  1795 ;;		On entry : 0/0
  1796 ;;		On exit  : 0/0
  1797 ;;		Unchanged: 0/0
  1798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1802 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1803 ;;Total ram usage:        0 bytes
  1804 ;; Hardware stack levels used: 1
  1805 ;; Hardware stack levels required when called: 19
  1806 ;; This function calls:
  1807 ;;		___flge
  1808 ;;		___xxtofl
  1809 ;;		_calcMotorPow
  1810 ;;		_calcSpeed
  1811 ;;		_calcSteering
  1812 ;;		_checkBatt
  1813 ;;		_checkCurveCount
  1814 ;;		_getBatteryVoltage
  1815 ;;		_getCurve
  1816 ;;		_getReverse
  1817 ;;		_setMotor
  1818 ;;		_setSteering
  1819 ;;		_startAccell
  1820 ;; This function is called by:
  1821 ;;		_main
  1822 ;; This function uses a non-reentrant model
  1823 ;;
  1824                           
  1825                           	psect	text1
  1826  004632                     __ptext1:
  1827                           	callstack 0
  1828  004632                     _loop:
  1829                           	callstack 11
  1830  004632                     
  1831                           ;main.c: 20:     setMotor(0);
  1832  004632  0E00               	movlw	0
  1833  004634  6E19               	movwf	(setMotor@motorPower+1)^0,c
  1834  004636  0E00               	movlw	0
  1835  004638  6E18               	movwf	setMotor@motorPower^0,c
  1836  00463A  ECAA  F026         	call	_setMotor	;wreg free
  1837                           
  1838                           ;main.c: 21:     setSteering(0, Front);
  1839  00463E  0E00               	movlw	0
  1840  004640  0100               	movlb	0	; () banked
  1841  004642  6F84               	movwf	(setSteering@steering+1)& (0+255),b
  1842  004644  0E00               	movlw	0
  1843  004646  6F83               	movwf	setSteering@steering& (0+255),b
  1844  004648  0E03               	movlw	3
  1845  00464A  6F85               	movwf	setSteering@steeringMode& (0+255),b
  1846  00464C  EC9D  F01C         	call	_setSteering	;wreg free
  1847  004650                     l1230:
  1848  004650  B8CB               	btfsc	203,4,c	;volatile
  1849  004652  EF2D  F023         	goto	u10741
  1850  004656  EF2F  F023         	goto	u10740
  1851  00465A                     u10741:
  1852  00465A  EF28  F023         	goto	l1230
  1853  00465E                     u10740:
  1854  00465E                     l9428:
  1855  00465E  0100               	movlb	0	; () banked
  1856  004660  51FB               	movf	_cycle10ms& (0+255),w,b	;volatile
  1857  004662  B4D8               	btfsc	status,2,c
  1858  004664  EF36  F023         	goto	u10751
  1859  004668  EF38  F023         	goto	u10750
  1860  00466C                     u10751:
  1861  00466C  EF2F  F023         	goto	l9428
  1862  004670                     u10750:
  1863  004670                     
  1864                           ; BSR set to: 0
  1865                           ;main.c: 26:         cycle10ms = 0;
  1866  004670  0E00               	movlw	0
  1867  004672  6FFB               	movwf	_cycle10ms& (0+255),b	;volatile
  1868  004674                     
  1869                           ; BSR set to: 0
  1870                           ;main.c: 27:         getBatteryVoltage();
  1871  004674  ECE2  F030         	call	_getBatteryVoltage	;wreg free
  1872  004678                     
  1873                           ;main.c: 29:     } while (BatteryVolt < ((7.2) * 409.6));
  1874  004678  C0EB  F01C         	movff	_BatteryVolt,___xxtofl@val
  1875  00467C  C0EC  F01D         	movff	_BatteryVolt+1,___xxtofl@val+1
  1876  004680  6A1E               	clrf	(___xxtofl@val+2)^0,c
  1877  004682  6A1F               	clrf	(___xxtofl@val+3)^0,c
  1878  004684  0E00               	movlw	0
  1879  004686  EC7A  F01F         	call	___xxtofl
  1880  00468A  C01C  F06D         	movff	?___xxtofl,___flge@ff1
  1881  00468E  C01D  F06E         	movff	?___xxtofl+1,___flge@ff1+1
  1882  004692  C01E  F06F         	movff	?___xxtofl+2,___flge@ff1+2
  1883  004696  C01F  F070         	movff	?___xxtofl+3,___flge@ff1+3
  1884  00469A  0EEC               	movlw	236
  1885  00469C  0100               	movlb	0	; () banked
  1886  00469E  6F71               	movwf	___flge@ff2& (0+255),b
  1887  0046A0  0E51               	movlw	81
  1888  0046A2  6F72               	movwf	(___flge@ff2+1)& (0+255),b
  1889  0046A4  0E38               	movlw	56
  1890  0046A6  6F73               	movwf	(___flge@ff2+2)& (0+255),b
  1891  0046A8  0E45               	movlw	69
  1892  0046AA  6F74               	movwf	(___flge@ff2+3)& (0+255),b
  1893  0046AC  ECB6  F024         	call	___flge	;wreg free
  1894  0046B0  0100               	movlb	0	; () banked
  1895  0046B2  A0D8               	btfss	status,0,c
  1896  0046B4  EF5E  F023         	goto	u10761
  1897  0046B8  EF60  F023         	goto	u10760
  1898  0046BC                     u10761:
  1899  0046BC  EF2F  F023         	goto	l9428
  1900  0046C0                     u10760:
  1901  0046C0                     
  1902                           ; BSR set to: 0
  1903                           ;main.c: 31:     startAccell();
  1904  0046C0  EC70  F02A         	call	_startAccell	;wreg free
  1905  0046C4                     
  1906                           ;main.c: 33:     oldDistLeft = distLeft;
  1907  0046C4  C0F7  F134         	movff	_distLeft,_oldDistLeft	;volatile
  1908  0046C8  C0F8  F135         	movff	_distLeft+1,_oldDistLeft+1	;volatile
  1909  0046CC                     
  1910                           ;main.c: 34:     oldDistRight = distRight;
  1911  0046CC  C0F5  F132         	movff	_distRight,_oldDistRight	;volatile
  1912  0046D0  C0F6  F133         	movff	_distRight+1,_oldDistRight+1	;volatile
  1913  0046D4                     
  1914                           ;main.c: 35:     cycle10ms = 0;
  1915  0046D4  0E00               	movlw	0
  1916  0046D6  0100               	movlb	0	; () banked
  1917  0046D8  6FFB               	movwf	_cycle10ms& (0+255),b	;volatile
  1918  0046DA                     l9444:
  1919  0046DA  0100               	movlb	0	; () banked
  1920  0046DC  51FB               	movf	_cycle10ms& (0+255),w,b	;volatile
  1921  0046DE  B4D8               	btfsc	status,2,c
  1922  0046E0  EF74  F023         	goto	u10771
  1923  0046E4  EF76  F023         	goto	u10770
  1924  0046E8                     u10771:
  1925  0046E8  EF6D  F023         	goto	l9444
  1926  0046EC                     u10770:
  1927  0046EC                     
  1928                           ; BSR set to: 0
  1929                           ;main.c: 38:         cycle10ms = 0;
  1930  0046EC  0E00               	movlw	0
  1931  0046EE  6FFB               	movwf	_cycle10ms& (0+255),b	;volatile
  1932  0046F0                     
  1933                           ; BSR set to: 0
  1934                           ;main.c: 40:         if (!PORTBbits.RB5) {
  1935  0046F0  BACB               	btfsc	203,5,c	;volatile
  1936  0046F2  EF7D  F023         	goto	u10781
  1937  0046F6  EF7F  F023         	goto	u10780
  1938  0046FA                     u10781:
  1939  0046FA  EF91  F023         	goto	l9454
  1940  0046FE                     u10780:
  1941  0046FE                     
  1942                           ; BSR set to: 0
  1943                           ;main.c: 41:             setSpeed = 0;
  1944  0046FE  0E00               	movlw	0
  1945  004700  6FF2               	movwf	(_setSpeed+1)& (0+255),b
  1946  004702  0E00               	movlw	0
  1947  004704  6FF1               	movwf	_setSpeed& (0+255),b
  1948                           
  1949                           ;main.c: 42:             actMotorPow = 0;
  1950  004706  0E00               	movlw	0
  1951  004708  6FEE               	movwf	(_actMotorPow+1)& (0+255),b
  1952  00470A  0E00               	movlw	0
  1953  00470C  6FED               	movwf	_actMotorPow& (0+255),b
  1954  00470E                     
  1955                           ; BSR set to: 0
  1956                           ;main.c: 43:             setSteering(0, Front);
  1957  00470E  0E00               	movlw	0
  1958  004710  6F84               	movwf	(setSteering@steering+1)& (0+255),b
  1959  004712  0E00               	movlw	0
  1960  004714  6F83               	movwf	setSteering@steering& (0+255),b
  1961  004716  0E03               	movlw	3
  1962  004718  6F85               	movwf	setSteering@steeringMode& (0+255),b
  1963  00471A  EC9D  F01C         	call	_setSteering	;wreg free
  1964                           
  1965                           ;main.c: 44:             break;
  1966  00471E  EFAB  F023         	goto	l1246
  1967  004722                     l9454:
  1968                           
  1969                           ; BSR set to: 0
  1970                           ;main.c: 53:         if (checkBatt()) {
  1971  004722  EC55  F02B         	call	_checkBatt	;wreg free
  1972  004726  0900               	iorlw	0
  1973  004728  B4D8               	btfsc	status,2,c
  1974  00472A  EF99  F023         	goto	u10791
  1975  00472E  EF9B  F023         	goto	u10790
  1976  004732                     u10791:
  1977  004732  EF9D  F023         	goto	l9458
  1978  004736                     u10790:
  1979  004736  EFAB  F023         	goto	l1246
  1980  00473A                     l9458:
  1981                           
  1982                           ;main.c: 57:         getCurve();
  1983  00473A  EC98  F01D         	call	_getCurve	;wreg free
  1984  00473E                     
  1985                           ;main.c: 58:         getReverse();
  1986  00473E  EC72  F022         	call	_getReverse	;wreg free
  1987  004742                     
  1988                           ;main.c: 60:         calcSteering();
  1989  004742  EC89  F01E         	call	_calcSteering	;wreg free
  1990  004746                     
  1991                           ;main.c: 61:         calcSpeed();
  1992  004746  EC6F  F019         	call	_calcSpeed	;wreg free
  1993  00474A                     
  1994                           ;main.c: 62:         calcMotorPow();
  1995  00474A  ECCA  F021         	call	_calcMotorPow	;wreg free
  1996                           
  1997                           ;main.c: 64:         checkCurveCount();
  1998  00474E  EC83  F027         	call	_checkCurveCount	;wreg free
  1999  004752  EF6D  F023         	goto	l9444
  2000  004756                     l1246:
  2001  004756  0012               	return		;funcret
  2002  004758                     __end_of_loop:
  2003                           	callstack 0
  2004                           
  2005 ;; *************** function _startAccell *****************
  2006 ;; Defined at:
  2007 ;;		line 105 in file "main.c"
  2008 ;; Parameters:    Size  Location     Type
  2009 ;;		None
  2010 ;; Auto vars:     Size  Location     Type
  2011 ;;  i               2   16[BANK1 ] short 
  2012 ;; Return value:  Size  Location     Type
  2013 ;;                  1    wreg      void 
  2014 ;; Registers used:
  2015 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2016 ;; Tracked objects:
  2017 ;;		On entry : 0/0
  2018 ;;		On exit  : 0/0
  2019 ;;		Unchanged: 0/0
  2020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2022 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2024 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2025 ;;Total ram usage:        2 bytes
  2026 ;; Hardware stack levels used: 1
  2027 ;; Hardware stack levels required when called: 17
  2028 ;; This function calls:
  2029 ;;		_printf
  2030 ;;		_setMotor
  2031 ;;		_setSteering
  2032 ;; This function is called by:
  2033 ;;		_loop
  2034 ;; This function uses a non-reentrant model
  2035 ;;
  2036                           
  2037                           	psect	text2
  2038  0054E0                     __ptext2:
  2039                           	callstack 0
  2040  0054E0                     _startAccell:
  2041                           	callstack 12
  2042  0054E0                     
  2043                           ;main.c: 106:     setSteering(0, Front);
  2044  0054E0  0E00               	movlw	0
  2045  0054E2  0100               	movlb	0	; () banked
  2046  0054E4  6F84               	movwf	(setSteering@steering+1)& (0+255),b
  2047  0054E6  0E00               	movlw	0
  2048  0054E8  6F83               	movwf	setSteering@steering& (0+255),b
  2049  0054EA  0E03               	movlw	3
  2050  0054EC  6F85               	movwf	setSteering@steeringMode& (0+255),b
  2051  0054EE  EC9D  F01C         	call	_setSteering	;wreg free
  2052  0054F2                     
  2053                           ;main.c: 107:     actMotorPow = (100) - (int16_t)((240) / (20));
  2054  0054F2  0E00               	movlw	0
  2055  0054F4  0100               	movlb	0	; () banked
  2056  0054F6  6FEE               	movwf	(_actMotorPow+1)& (0+255),b
  2057  0054F8  0E58               	movlw	88
  2058  0054FA  6FED               	movwf	_actMotorPow& (0+255),b
  2059  0054FC                     
  2060                           ; BSR set to: 0
  2061                           ;main.c: 108:     for (int16_t i = 0; i <= (int16_t) ((20) - ((100) / (int16_t)((240) / 
      +                          (20)))); ++i) {
  2062  0054FC  0E00               	movlw	0
  2063  0054FE  0101               	movlb	1	; () banked
  2064  005500  6FB5               	movwf	(startAccell@i+1)& (0+255),b
  2065  005502  0E00               	movlw	0
  2066  005504  6FB4               	movwf	startAccell@i& (0+255),b
  2067  005506                     l9186:
  2068                           
  2069                           ; BSR set to: 1
  2070                           ;main.c: 109:         actMotorPow += (int16_t)((240) / (20));
  2071  005506  0E0C               	movlw	12
  2072  005508  0100               	movlb	0	; () banked
  2073  00550A  27ED               	addwf	_actMotorPow& (0+255),f,b
  2074  00550C  0E00               	movlw	0
  2075  00550E  23EE               	addwfc	(_actMotorPow+1)& (0+255),f,b
  2076  005510                     
  2077                           ; BSR set to: 0
  2078                           ;main.c: 110:         setMotor(actMotorPow);
  2079  005510  C0ED  F018         	movff	_actMotorPow,setMotor@motorPower
  2080  005514  C0EE  F019         	movff	_actMotorPow+1,setMotor@motorPower+1
  2081  005518  ECAA  F026         	call	_setMotor	;wreg free
  2082  00551C                     
  2083                           ;main.c: 111:         cycle10ms = 0;
  2084  00551C  0E00               	movlw	0
  2085  00551E  0100               	movlb	0	; () banked
  2086  005520  6FFB               	movwf	_cycle10ms& (0+255),b	;volatile
  2087  005522                     l9192:
  2088                           
  2089                           ; BSR set to: 0
  2090  005522  51FB               	movf	_cycle10ms& (0+255),w,b	;volatile
  2091  005524  B4D8               	btfsc	status,2,c
  2092  005526  EF97  F02A         	goto	u10401
  2093  00552A  EF99  F02A         	goto	u10400
  2094  00552E                     u10401:
  2095  00552E  EF91  F02A         	goto	l9192
  2096  005532                     u10400:
  2097  005532                     
  2098                           ; BSR set to: 0
  2099                           ;main.c: 113:     }
  2100  005532  0101               	movlb	1	; () banked
  2101  005534  4BB4               	infsnz	startAccell@i& (0+255),f,b
  2102  005536  2BB5               	incf	(startAccell@i+1)& (0+255),f,b
  2103  005538                     
  2104                           ; BSR set to: 1
  2105  005538  BFB5               	btfsc	(startAccell@i+1)& (0+255),7,b
  2106  00553A  EFA8  F02A         	goto	u10411
  2107  00553E  51B5               	movf	(startAccell@i+1)& (0+255),w,b
  2108  005540  E109               	bnz	u10410
  2109  005542  0E0D               	movlw	13
  2110  005544  5DB4               	subwf	startAccell@i& (0+255),w,b
  2111  005546  A0D8               	btfss	status,0,c
  2112  005548  EFA8  F02A         	goto	u10411
  2113  00554C  EFAA  F02A         	goto	u10410
  2114  005550                     u10411:
  2115  005550  EF83  F02A         	goto	l9186
  2116  005554                     u10410:
  2117  005554                     
  2118                           ; BSR set to: 1
  2119                           ;main.c: 114:     printf("starAccelPower: %d\n", actMotorPow);
  2120  005554  0E48               	movlw	low STR_2
  2121  005556  6FAC               	movwf	printf@fmt& (0+255),b
  2122  005558  0E10               	movlw	high STR_2
  2123  00555A  6FAD               	movwf	(printf@fmt+1)& (0+255),b
  2124  00555C  C0ED  F1AE         	movff	_actMotorPow,?_printf+2
  2125  005560  C0EE  F1AF         	movff	_actMotorPow+1,?_printf+3
  2126  005564  ECBA  F030         	call	_printf	;wreg free
  2127  005568                     
  2128                           ;main.c: 116:     cycle10ms = 0;
  2129  005568  0E00               	movlw	0
  2130  00556A  0100               	movlb	0	; () banked
  2131  00556C  6FFB               	movwf	_cycle10ms& (0+255),b	;volatile
  2132  00556E                     l9202:
  2133                           
  2134                           ; BSR set to: 0
  2135  00556E  0E15               	movlw	21
  2136  005570  65FB               	cpfsgt	_cycle10ms& (0+255),b	;volatile
  2137  005572  EFBD  F02A         	goto	u10421
  2138  005576  EFBF  F02A         	goto	u10420
  2139  00557A                     u10421:
  2140  00557A  EFB7  F02A         	goto	l9202
  2141  00557E                     u10420:
  2142  00557E                     
  2143                           ; BSR set to: 0
  2144  00557E  0012               	return		;funcret
  2145  005580                     __end_of_startAccell:
  2146                           	callstack 0
  2147                           
  2148 ;; *************** function _getReverse *****************
  2149 ;; Defined at:
  2150 ;;		line 196 in file "main.c"
  2151 ;; Parameters:    Size  Location     Type
  2152 ;;		None
  2153 ;; Auto vars:     Size  Location     Type
  2154 ;;		None
  2155 ;; Return value:  Size  Location     Type
  2156 ;;                  1    wreg      void 
  2157 ;; Registers used:
  2158 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2159 ;; Tracked objects:
  2160 ;;		On entry : 0/0
  2161 ;;		On exit  : 0/0
  2162 ;;		Unchanged: 0/0
  2163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2167 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2168 ;;Total ram usage:        0 bytes
  2169 ;; Hardware stack levels used: 1
  2170 ;; Hardware stack levels required when called: 17
  2171 ;; This function calls:
  2172 ;;		_printf
  2173 ;; This function is called by:
  2174 ;;		_loop
  2175 ;; This function uses a non-reentrant model
  2176 ;;
  2177                           
  2178                           	psect	text3
  2179  0044E4                     __ptext3:
  2180                           	callstack 0
  2181  0044E4                     _getReverse:
  2182                           	callstack 12
  2183  0044E4                     
  2184                           ;main.c: 197:     if (distFront < (15)) {
  2185  0044E4  0100               	movlb	0	; () banked
  2186  0044E6  51FE               	movf	(_distFront+1)& (0+255),w,b	;volatile
  2187  0044E8  E107               	bnz	u10451
  2188  0044EA  0E0F               	movlw	15
  2189  0044EC  5DFD               	subwf	_distFront& (0+255),w,b	;volatile
  2190  0044EE  B0D8               	btfsc	status,0,c
  2191  0044F0  EF7C  F022         	goto	u10451
  2192  0044F4  EF7E  F022         	goto	u10450
  2193  0044F8                     u10451:
  2194  0044F8  EF83  F022         	goto	l9230
  2195  0044FC                     u10450:
  2196  0044FC                     
  2197                           ; BSR set to: 0
  2198                           ;main.c: 198:         ++reverseCount;
  2199  0044FC  0101               	movlb	1	; () banked
  2200  0044FE  4B36               	infsnz	_reverseCount& (0+255),f,b
  2201  004500  2B37               	incf	(_reverseCount+1)& (0+255),f,b
  2202                           
  2203                           ;main.c: 199:     } else if(driveMode != ReverseRight && driveMode != ReverseLeft) {
  2204  004502  EF9A  F022         	goto	l9236
  2205  004506                     l9230:
  2206                           
  2207                           ; BSR set to: 0
  2208  004506  0E02               	movlw	2
  2209  004508  19FC               	xorwf	_driveMode& (0+255),w,b
  2210  00450A  B4D8               	btfsc	status,2,c
  2211  00450C  EF8A  F022         	goto	u10461
  2212  004510  EF8C  F022         	goto	u10460
  2213  004514                     u10461:
  2214  004514  EF9A  F022         	goto	l9236
  2215  004518                     u10460:
  2216  004518                     
  2217                           ; BSR set to: 0
  2218  004518  0E03               	movlw	3
  2219  00451A  19FC               	xorwf	_driveMode& (0+255),w,b
  2220  00451C  B4D8               	btfsc	status,2,c
  2221  00451E  EF93  F022         	goto	u10471
  2222  004522  EF95  F022         	goto	u10470
  2223  004526                     u10471:
  2224  004526  EF9A  F022         	goto	l9236
  2225  00452A                     u10470:
  2226  00452A                     
  2227                           ; BSR set to: 0
  2228                           ;main.c: 200:         reverseCount = 0;
  2229  00452A  0E00               	movlw	0
  2230  00452C  0101               	movlb	1	; () banked
  2231  00452E  6F37               	movwf	(_reverseCount+1)& (0+255),b
  2232  004530  0E00               	movlw	0
  2233  004532  6F36               	movwf	_reverseCount& (0+255),b
  2234  004534                     l9236:
  2235                           
  2236                           ;main.c: 203:     if (reverseCount > (50)) {
  2237  004534  0101               	movlb	1	; () banked
  2238  004536  5137               	movf	(_reverseCount+1)& (0+255),w,b
  2239  004538  E109               	bnz	u10480
  2240  00453A  0E33               	movlw	51
  2241  00453C  5D36               	subwf	_reverseCount& (0+255),w,b
  2242  00453E  A0D8               	btfss	status,0,c
  2243  004540  EFA4  F022         	goto	u10481
  2244  004544  EFA6  F022         	goto	u10480
  2245  004548                     u10481:
  2246  004548  EF18  F023         	goto	l1314
  2247  00454C                     u10480:
  2248  00454C                     
  2249                           ; BSR set to: 1
  2250                           ;main.c: 204:         ++reverseTime;
  2251  00454C  4B2A               	infsnz	_reverseTime& (0+255),f,b
  2252  00454E  2B2B               	incf	(_reverseTime+1)& (0+255),f,b
  2253  004550                     
  2254                           ; BSR set to: 1
  2255                           ;main.c: 206:         if (driveMode != ReverseRight && driveMode != ReverseLeft) {
  2256  004550  0E02               	movlw	2
  2257  004552  0100               	movlb	0	; () banked
  2258  004554  19FC               	xorwf	_driveMode& (0+255),w,b
  2259  004556  B4D8               	btfsc	status,2,c
  2260  004558  EFB0  F022         	goto	u10491
  2261  00455C  EFB2  F022         	goto	u10490
  2262  004560                     u10491:
  2263  004560  EFDC  F022         	goto	l9254
  2264  004564                     u10490:
  2265  004564                     
  2266                           ; BSR set to: 0
  2267  004564  0E03               	movlw	3
  2268  004566  19FC               	xorwf	_driveMode& (0+255),w,b
  2269  004568  B4D8               	btfsc	status,2,c
  2270  00456A  EFB9  F022         	goto	u10501
  2271  00456E  EFBB  F022         	goto	u10500
  2272  004572                     u10501:
  2273  004572  EFDC  F022         	goto	l9254
  2274  004576                     u10500:
  2275  004576                     
  2276                           ; BSR set to: 0
  2277                           ;main.c: 207:             if (distLeft > distRight) {
  2278  004576  51F7               	movf	_distLeft& (0+255),w,b	;volatile
  2279  004578  5DF5               	subwf	_distRight& (0+255),w,b	;volatile
  2280  00457A  51F8               	movf	(_distLeft+1)& (0+255),w,b	;volatile
  2281  00457C  59F6               	subwfb	(_distRight+1)& (0+255),w,b	;volatile
  2282  00457E  B0D8               	btfsc	status,0,c
  2283  004580  EFC4  F022         	goto	u10511
  2284  004584  EFC6  F022         	goto	u10510
  2285  004588                     u10511:
  2286  004588  EFD2  F022         	goto	l9250
  2287  00458C                     u10510:
  2288  00458C                     
  2289                           ; BSR set to: 0
  2290                           ;main.c: 208:                 printf("ReverseRigth\n");
  2291  00458C  0E7A               	movlw	low STR_7
  2292  00458E  0101               	movlb	1	; () banked
  2293  004590  6FAC               	movwf	printf@fmt& (0+255),b
  2294  004592  0E10               	movlw	high STR_7
  2295  004594  6FAD               	movwf	(printf@fmt+1)& (0+255),b
  2296  004596  ECBA  F030         	call	_printf	;wreg free
  2297  00459A                     
  2298                           ;main.c: 209:                 driveMode = ReverseRight;
  2299  00459A  0E02               	movlw	2
  2300  00459C  0100               	movlb	0	; () banked
  2301  00459E  6FFC               	movwf	_driveMode& (0+255),b
  2302                           
  2303                           ;main.c: 210:             } else {
  2304  0045A0  EFDC  F022         	goto	l9254
  2305  0045A4                     l9250:
  2306                           
  2307                           ; BSR set to: 0
  2308                           ;main.c: 211:                 printf("ReverseLeft\n");
  2309  0045A4  0E88               	movlw	low STR_8
  2310  0045A6  0101               	movlb	1	; () banked
  2311  0045A8  6FAC               	movwf	printf@fmt& (0+255),b
  2312  0045AA  0E10               	movlw	high STR_8
  2313  0045AC  6FAD               	movwf	(printf@fmt+1)& (0+255),b
  2314  0045AE  ECBA  F030         	call	_printf	;wreg free
  2315  0045B2                     
  2316                           ;main.c: 212:                 driveMode = ReverseLeft;
  2317  0045B2  0E03               	movlw	3
  2318  0045B4  0100               	movlb	0	; () banked
  2319  0045B6  6FFC               	movwf	_driveMode& (0+255),b
  2320  0045B8                     l9254:
  2321                           
  2322                           ; BSR set to: 0
  2323                           ;main.c: 216:         if (distFront > (35) || reverseTime > (500)) {
  2324  0045B8  51FE               	movf	(_distFront+1)& (0+255),w,b	;volatile
  2325  0045BA  E107               	bnz	u10521
  2326  0045BC  0E24               	movlw	36
  2327  0045BE  5DFD               	subwf	_distFront& (0+255),w,b	;volatile
  2328  0045C0  B0D8               	btfsc	status,0,c
  2329  0045C2  EFE5  F022         	goto	u10521
  2330  0045C6  EFE7  F022         	goto	u10520
  2331  0045CA                     u10521:
  2332  0045CA  EFF6  F022         	goto	l9258
  2333  0045CE                     u10520:
  2334  0045CE                     
  2335                           ; BSR set to: 0
  2336  0045CE  0101               	movlb	1	; () banked
  2337  0045D0  BF2B               	btfsc	(_reverseTime+1)& (0+255),7,b
  2338  0045D2  EFF4  F022         	goto	u10531
  2339  0045D6  0EF5               	movlw	245
  2340  0045D8  5D2A               	subwf	_reverseTime& (0+255),w,b
  2341  0045DA  0E01               	movlw	1
  2342  0045DC  592B               	subwfb	(_reverseTime+1)& (0+255),w,b
  2343  0045DE  A0D8               	btfss	status,0,c
  2344  0045E0  EFF4  F022         	goto	u10531
  2345  0045E4  EFF6  F022         	goto	u10530
  2346  0045E8                     u10531:
  2347  0045E8  EF18  F023         	goto	l1314
  2348  0045EC                     u10530:
  2349  0045EC                     l9258:
  2350                           
  2351                           ;main.c: 217:             printf("Stop Reverse\n");
  2352  0045EC  0E6C               	movlw	low STR_9
  2353  0045EE  0101               	movlb	1	; () banked
  2354  0045F0  6FAC               	movwf	printf@fmt& (0+255),b
  2355  0045F2  0E10               	movlw	high STR_9
  2356  0045F4  6FAD               	movwf	(printf@fmt+1)& (0+255),b
  2357  0045F6  ECBA  F030         	call	_printf	;wreg free
  2358  0045FA                     
  2359                           ;main.c: 218:             if (distLeft > distRight) {
  2360  0045FA  0100               	movlb	0	; () banked
  2361  0045FC  51F7               	movf	_distLeft& (0+255),w,b	;volatile
  2362  0045FE  5DF5               	subwf	_distRight& (0+255),w,b	;volatile
  2363  004600  51F8               	movf	(_distLeft+1)& (0+255),w,b	;volatile
  2364  004602  59F6               	subwfb	(_distRight+1)& (0+255),w,b	;volatile
  2365  004604  B0D8               	btfsc	status,0,c
  2366  004606  EF07  F023         	goto	u10541
  2367  00460A  EF09  F023         	goto	u10540
  2368  00460E                     u10541:
  2369  00460E  EF0D  F023         	goto	l9264
  2370  004612                     u10540:
  2371  004612                     
  2372                           ; BSR set to: 0
  2373                           ;main.c: 219:                 driveMode = CurveLeft;
  2374  004612  0E04               	movlw	4
  2375  004614  6FFC               	movwf	_driveMode& (0+255),b
  2376                           
  2377                           ;main.c: 220:             } else {
  2378  004616  EF0F  F023         	goto	l1313
  2379  00461A                     l9264:
  2380                           
  2381                           ; BSR set to: 0
  2382                           ;main.c: 221:                 driveMode = CurveRight;
  2383  00461A  0E05               	movlw	5
  2384  00461C  6FFC               	movwf	_driveMode& (0+255),b
  2385  00461E                     l1313:
  2386                           
  2387                           ; BSR set to: 0
  2388                           ;main.c: 223:             reverseCount = 0;
  2389  00461E  0E00               	movlw	0
  2390  004620  0101               	movlb	1	; () banked
  2391  004622  6F37               	movwf	(_reverseCount+1)& (0+255),b
  2392  004624  0E00               	movlw	0
  2393  004626  6F36               	movwf	_reverseCount& (0+255),b
  2394                           
  2395                           ;main.c: 224:             reverseTime = 0;
  2396  004628  0E00               	movlw	0
  2397  00462A  6F2B               	movwf	(_reverseTime+1)& (0+255),b
  2398  00462C  0E00               	movlw	0
  2399  00462E  6F2A               	movwf	_reverseTime& (0+255),b
  2400  004630                     l1314:
  2401                           
  2402                           ; BSR set to: 1
  2403  004630  0012               	return		;funcret
  2404  004632                     __end_of_getReverse:
  2405                           	callstack 0
  2406                           
  2407 ;; *************** function _getCurve *****************
  2408 ;; Defined at:
  2409 ;;		line 133 in file "main.c"
  2410 ;; Parameters:    Size  Location     Type
  2411 ;;		None
  2412 ;; Auto vars:     Size  Location     Type
  2413 ;;  deltaRight      2   23[COMRAM] short 
  2414 ;;  deltaLeft       2   21[COMRAM] short 
  2415 ;; Return value:  Size  Location     Type
  2416 ;;                  1    wreg      void 
  2417 ;; Registers used:
  2418 ;;		wreg, status,2, status,0
  2419 ;; Tracked objects:
  2420 ;;		On entry : 0/0
  2421 ;;		On exit  : 0/0
  2422 ;;		Unchanged: 0/0
  2423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2425 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2426 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2427 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2428 ;;Total ram usage:        6 bytes
  2429 ;; Hardware stack levels used: 1
  2430 ;; Hardware stack levels required when called: 8
  2431 ;; This function calls:
  2432 ;;		Nothing
  2433 ;; This function is called by:
  2434 ;;		_loop
  2435 ;; This function uses a non-reentrant model
  2436 ;;
  2437                           
  2438                           	psect	text4
  2439  003B30                     __ptext4:
  2440                           	callstack 0
  2441  003B30                     _getCurve:
  2442                           	callstack 21
  2443  003B30                     
  2444                           ;main.c: 134:     int16_t deltaLeft;;main.c: 135:     int16_t deltaRight;;main.c: 137:  
      +                             switch (curveMode) {
  2445  003B30  EF63  F01E         	goto	l7028
  2446  003B34                     l6982:
  2447                           
  2448                           ;main.c: 139:             deltaLeft = (int16_t) (distLeft - oldDistLeft);
  2449  003B34  0101               	movlb	1	; () banked
  2450  003B36  5134               	movf	_oldDistLeft& (0+255),w,b
  2451  003B38  0100               	movlb	0	; () banked
  2452  003B3A  5DF7               	subwf	_distLeft& (0+255),w,b	;volatile
  2453  003B3C  6E16               	movwf	getCurve@deltaLeft^0,c
  2454  003B3E  0101               	movlb	1	; () banked
  2455  003B40  5135               	movf	(_oldDistLeft+1)& (0+255),w,b
  2456  003B42  0100               	movlb	0	; () banked
  2457  003B44  59F8               	subwfb	(_distLeft+1)& (0+255),w,b	;volatile
  2458  003B46  6E17               	movwf	(getCurve@deltaLeft+1)^0,c
  2459                           
  2460                           ;main.c: 140:             deltaRight = (int16_t) (distRight - oldDistRight);
  2461  003B48  0101               	movlb	1	; () banked
  2462  003B4A  5132               	movf	_oldDistRight& (0+255),w,b
  2463  003B4C  0100               	movlb	0	; () banked
  2464  003B4E  5DF5               	subwf	_distRight& (0+255),w,b	;volatile
  2465  003B50  6E18               	movwf	getCurve@deltaRight^0,c
  2466  003B52  0101               	movlb	1	; () banked
  2467  003B54  5133               	movf	(_oldDistRight+1)& (0+255),w,b
  2468  003B56  0100               	movlb	0	; () banked
  2469  003B58  59F6               	subwfb	(_distRight+1)& (0+255),w,b	;volatile
  2470  003B5A  6E19               	movwf	(getCurve@deltaRight+1)^0,c
  2471                           
  2472                           ;main.c: 143:             if (deltaLeft > (30) && deltaLeft < (300) && oldDistLeft < (10
      +                          0)) {
  2473  003B5C  BE17               	btfsc	(getCurve@deltaLeft+1)^0,7,c
  2474  003B5E  EFBA  F01D         	goto	u6811
  2475  003B62  5017               	movf	(getCurve@deltaLeft+1)^0,w,c
  2476  003B64  E109               	bnz	u6810
  2477  003B66  0E1F               	movlw	31
  2478  003B68  5C16               	subwf	getCurve@deltaLeft^0,w,c
  2479  003B6A  A0D8               	btfss	status,0,c
  2480  003B6C  EFBA  F01D         	goto	u6811
  2481  003B70  EFBC  F01D         	goto	u6810
  2482  003B74                     u6811:
  2483  003B74  EFE0  F01D         	goto	l6992
  2484  003B78                     u6810:
  2485  003B78                     
  2486                           ; BSR set to: 0
  2487  003B78  BE17               	btfsc	(getCurve@deltaLeft+1)^0,7,c
  2488  003B7A  EFCA  F01D         	goto	u6820
  2489  003B7E  0E2C               	movlw	44
  2490  003B80  5C16               	subwf	getCurve@deltaLeft^0,w,c
  2491  003B82  0E01               	movlw	1
  2492  003B84  5817               	subwfb	(getCurve@deltaLeft+1)^0,w,c
  2493  003B86  B0D8               	btfsc	status,0,c
  2494  003B88  EFC8  F01D         	goto	u6821
  2495  003B8C  EFCA  F01D         	goto	u6820
  2496  003B90                     u6821:
  2497  003B90  EFE0  F01D         	goto	l6992
  2498  003B94                     u6820:
  2499  003B94                     
  2500                           ; BSR set to: 0
  2501  003B94  0101               	movlb	1	; () banked
  2502  003B96  5135               	movf	(_oldDistLeft+1)& (0+255),w,b
  2503  003B98  E107               	bnz	u6831
  2504  003B9A  0E64               	movlw	100
  2505  003B9C  5D34               	subwf	_oldDistLeft& (0+255),w,b
  2506  003B9E  B0D8               	btfsc	status,0,c
  2507  003BA0  EFD4  F01D         	goto	u6831
  2508  003BA4  EFD6  F01D         	goto	u6830
  2509  003BA8                     u6831:
  2510  003BA8  EFE0  F01D         	goto	l6992
  2511  003BAC                     u6830:
  2512  003BAC                     
  2513                           ; BSR set to: 1
  2514                           ;main.c: 144:                 delay = 0;
  2515  003BAC  0E00               	movlw	0
  2516  003BAE  6E40               	movwf	_delay^0,c
  2517                           
  2518                           ;main.c: 145:                 curveMode = BeforeCurve;
  2519  003BB0  0E01               	movlw	1
  2520  003BB2  6E41               	movwf	_curveMode^0,c
  2521                           
  2522                           ;main.c: 146:                 driveMode = CurveLeft;
  2523  003BB4  0E04               	movlw	4
  2524  003BB6  0100               	movlb	0	; () banked
  2525  003BB8  6FFC               	movwf	_driveMode& (0+255),b
  2526  003BBA                     
  2527                           ; BSR set to: 0
  2528                           ;main.c: 147:                 ++curveLeftCount;
  2529  003BBA  2BFA               	incf	_curveLeftCount& (0+255),f,b
  2530                           
  2531                           ;main.c: 150:             } else if (deltaRight > (30) && deltaRight < (300) && oldDistR
      +                          ight < (100)) {
  2532  003BBC  EF80  F01E         	goto	l1286
  2533  003BC0                     l6992:
  2534  003BC0  BE19               	btfsc	(getCurve@deltaRight+1)^0,7,c
  2535  003BC2  EFEC  F01D         	goto	u6841
  2536  003BC6  5019               	movf	(getCurve@deltaRight+1)^0,w,c
  2537  003BC8  E109               	bnz	u6840
  2538  003BCA  0E1F               	movlw	31
  2539  003BCC  5C18               	subwf	getCurve@deltaRight^0,w,c
  2540  003BCE  A0D8               	btfss	status,0,c
  2541  003BD0  EFEC  F01D         	goto	u6841
  2542  003BD4  EFEE  F01D         	goto	u6840
  2543  003BD8                     u6841:
  2544  003BD8  EF80  F01E         	goto	l1286
  2545  003BDC                     u6840:
  2546  003BDC  BE19               	btfsc	(getCurve@deltaRight+1)^0,7,c
  2547  003BDE  EFFC  F01D         	goto	u6850
  2548  003BE2  0E2C               	movlw	44
  2549  003BE4  5C18               	subwf	getCurve@deltaRight^0,w,c
  2550  003BE6  0E01               	movlw	1
  2551  003BE8  5819               	subwfb	(getCurve@deltaRight+1)^0,w,c
  2552  003BEA  B0D8               	btfsc	status,0,c
  2553  003BEC  EFFA  F01D         	goto	u6851
  2554  003BF0  EFFC  F01D         	goto	u6850
  2555  003BF4                     u6851:
  2556  003BF4  EF80  F01E         	goto	l1286
  2557  003BF8                     u6850:
  2558  003BF8  0101               	movlb	1	; () banked
  2559  003BFA  5133               	movf	(_oldDistRight+1)& (0+255),w,b
  2560  003BFC  E107               	bnz	u6861
  2561  003BFE  0E64               	movlw	100
  2562  003C00  5D32               	subwf	_oldDistRight& (0+255),w,b
  2563  003C02  B0D8               	btfsc	status,0,c
  2564  003C04  EF06  F01E         	goto	u6861
  2565  003C08  EF08  F01E         	goto	u6860
  2566  003C0C                     u6861:
  2567  003C0C  EF80  F01E         	goto	l1286
  2568  003C10                     u6860:
  2569  003C10                     
  2570                           ; BSR set to: 1
  2571                           ;main.c: 151:                 delay = 0;
  2572  003C10  0E00               	movlw	0
  2573  003C12  6E40               	movwf	_delay^0,c
  2574                           
  2575                           ;main.c: 152:                 curveMode = BeforeCurve;
  2576  003C14  0E01               	movlw	1
  2577  003C16  6E41               	movwf	_curveMode^0,c
  2578                           
  2579                           ;main.c: 153:                 driveMode = CurveRight;
  2580  003C18  0E05               	movlw	5
  2581  003C1A  0100               	movlb	0	; () banked
  2582  003C1C  6FFC               	movwf	_driveMode& (0+255),b
  2583  003C1E                     
  2584                           ; BSR set to: 0
  2585                           ;main.c: 154:                 ++curveRightCount;
  2586  003C1E  2BF9               	incf	_curveRightCount& (0+255),f,b
  2587  003C20  EF80  F01E         	goto	l1286
  2588  003C24                     l7002:
  2589                           
  2590                           ;main.c: 162:             if (delay > (15)) {
  2591  003C24  0E0F               	movlw	15
  2592  003C26  6440               	cpfsgt	_delay^0,c
  2593  003C28  EF18  F01E         	goto	u6871
  2594  003C2C  EF1A  F01E         	goto	u6870
  2595  003C30                     u6871:
  2596  003C30  EF20  F01E         	goto	l7006
  2597  003C34                     u6870:
  2598  003C34                     
  2599                           ;main.c: 163:                 delay = 0;
  2600  003C34  0E00               	movlw	0
  2601  003C36  6E40               	movwf	_delay^0,c
  2602                           
  2603                           ;main.c: 164:                 curveMode = InCurve;
  2604  003C38  0E02               	movlw	2
  2605  003C3A  6E41               	movwf	_curveMode^0,c
  2606                           
  2607                           ;main.c: 166:             } else {
  2608  003C3C  EF80  F01E         	goto	l1286
  2609  003C40                     l7006:
  2610                           
  2611                           ;main.c: 167:                 ++delay;
  2612  003C40  2A40               	incf	_delay^0,f,c
  2613  003C42  EF80  F01E         	goto	l1286
  2614  003C46                     l7008:
  2615                           
  2616                           ;main.c: 171:             if (delay > (20)) {
  2617  003C46  0E14               	movlw	20
  2618  003C48  6440               	cpfsgt	_delay^0,c
  2619  003C4A  EF29  F01E         	goto	u6881
  2620  003C4E  EF2B  F01E         	goto	u6880
  2621  003C52                     u6881:
  2622  003C52  EF20  F01E         	goto	l7006
  2623  003C56                     u6880:
  2624  003C56                     
  2625                           ;main.c: 172:                 if (distLeft < (45) || distRight < (45) || distFront > (18
      +                          0)) {
  2626  003C56  0100               	movlb	0	; () banked
  2627  003C58  51F8               	movf	(_distLeft+1)& (0+255),w,b	;volatile
  2628  003C5A  E109               	bnz	u6890
  2629  003C5C  0E2D               	movlw	45
  2630  003C5E  5DF7               	subwf	_distLeft& (0+255),w,b	;volatile
  2631  003C60  A0D8               	btfss	status,0,c
  2632  003C62  EF35  F01E         	goto	u6891
  2633  003C66  EF37  F01E         	goto	u6890
  2634  003C6A                     u6891:
  2635  003C6A  EF4D  F01E         	goto	l7016
  2636  003C6E                     u6890:
  2637  003C6E                     
  2638                           ; BSR set to: 0
  2639  003C6E  51F6               	movf	(_distRight+1)& (0+255),w,b	;volatile
  2640  003C70  E109               	bnz	u6900
  2641  003C72  0E2D               	movlw	45
  2642  003C74  5DF5               	subwf	_distRight& (0+255),w,b	;volatile
  2643  003C76  A0D8               	btfss	status,0,c
  2644  003C78  EF40  F01E         	goto	u6901
  2645  003C7C  EF42  F01E         	goto	u6900
  2646  003C80                     u6901:
  2647  003C80  EF4D  F01E         	goto	l7016
  2648  003C84                     u6900:
  2649  003C84                     
  2650                           ; BSR set to: 0
  2651  003C84  51FE               	movf	(_distFront+1)& (0+255),w,b	;volatile
  2652  003C86  E109               	bnz	u6910
  2653  003C88  0EB5               	movlw	181
  2654  003C8A  5DFD               	subwf	_distFront& (0+255),w,b	;volatile
  2655  003C8C  A0D8               	btfss	status,0,c
  2656  003C8E  EF4B  F01E         	goto	u6911
  2657  003C92  EF4D  F01E         	goto	u6910
  2658  003C96                     u6911:
  2659  003C96  EF80  F01E         	goto	l1286
  2660  003C9A                     u6910:
  2661  003C9A                     l7016:
  2662                           
  2663                           ; BSR set to: 0
  2664                           ;main.c: 173:                     delay = 0;
  2665  003C9A  0E00               	movlw	0
  2666  003C9C  6E40               	movwf	_delay^0,c
  2667                           
  2668                           ;main.c: 174:                     curveMode = AfterCurve;
  2669  003C9E  0E03               	movlw	3
  2670  003CA0  6E41               	movwf	_curveMode^0,c
  2671                           
  2672                           ;main.c: 175:                     driveMode = Straight;
  2673  003CA2  0E00               	movlw	0
  2674  003CA4  6FFC               	movwf	_driveMode& (0+255),b
  2675  003CA6  EF80  F01E         	goto	l1286
  2676  003CAA                     l7020:
  2677                           
  2678                           ;main.c: 183:             if (delay > (1)) {
  2679  003CAA  0E01               	movlw	1
  2680  003CAC  6440               	cpfsgt	_delay^0,c
  2681  003CAE  EF5B  F01E         	goto	u6921
  2682  003CB2  EF5D  F01E         	goto	u6920
  2683  003CB6                     u6921:
  2684  003CB6  EF20  F01E         	goto	l7006
  2685  003CBA                     u6920:
  2686  003CBA                     
  2687                           ;main.c: 184:                 delay = 0;
  2688  003CBA  0E00               	movlw	0
  2689  003CBC  6E40               	movwf	_delay^0,c
  2690                           
  2691                           ;main.c: 185:                 curveMode = OutCurve;
  2692  003CBE  0E00               	movlw	0
  2693  003CC0  6E41               	movwf	_curveMode^0,c
  2694                           
  2695                           ;main.c: 187:             } else {
  2696  003CC2  EF80  F01E         	goto	l1286
  2697  003CC6                     l7028:
  2698  003CC6  5041               	movf	_curveMode^0,w,c
  2699  003CC8  6E14               	movwf	??_getCurve^0,c
  2700  003CCA  6A15               	clrf	(??_getCurve+1)^0,c
  2701                           
  2702                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2703                           ; Switch size 1, requested type "simple"
  2704                           ; Number of cases is 1, Range of values is 0 to 0
  2705                           ; switch strategies available:
  2706                           ; Name         Instructions Cycles
  2707                           ; simple_byte            4     3 (average)
  2708                           ;	Chosen strategy is simple_byte
  2709  003CCC  5015               	movf	(??_getCurve+1)^0,w,c
  2710  003CCE  0A00               	xorlw	0	; case 0
  2711  003CD0  B4D8               	btfsc	status,2,c
  2712  003CD2  EF6D  F01E         	goto	l9606
  2713  003CD6  EF80  F01E         	goto	l1286
  2714  003CDA                     l9606:
  2715                           
  2716                           ; Switch size 1, requested type "simple"
  2717                           ; Number of cases is 4, Range of values is 0 to 3
  2718                           ; switch strategies available:
  2719                           ; Name         Instructions Cycles
  2720                           ; simple_byte           13     7 (average)
  2721                           ;	Chosen strategy is simple_byte
  2722  003CDA  5014               	movf	??_getCurve^0,w,c
  2723  003CDC  0A00               	xorlw	0	; case 0
  2724  003CDE  B4D8               	btfsc	status,2,c
  2725  003CE0  EF9A  F01D         	goto	l6982
  2726  003CE4  0A01               	xorlw	1	; case 1
  2727  003CE6  B4D8               	btfsc	status,2,c
  2728  003CE8  EF12  F01E         	goto	l7002
  2729  003CEC  0A03               	xorlw	3	; case 2
  2730  003CEE  B4D8               	btfsc	status,2,c
  2731  003CF0  EF23  F01E         	goto	l7008
  2732  003CF4  0A01               	xorlw	1	; case 3
  2733  003CF6  B4D8               	btfsc	status,2,c
  2734  003CF8  EF55  F01E         	goto	l7020
  2735  003CFC  EF80  F01E         	goto	l1286
  2736  003D00                     l1286:
  2737                           
  2738                           ;main.c: 192:     oldDistLeft = distLeft;
  2739  003D00  C0F7  F134         	movff	_distLeft,_oldDistLeft	;volatile
  2740  003D04  C0F8  F135         	movff	_distLeft+1,_oldDistLeft+1	;volatile
  2741                           
  2742                           ;main.c: 193:     oldDistRight = distRight;
  2743  003D08  C0F5  F132         	movff	_distRight,_oldDistRight	;volatile
  2744  003D0C  C0F6  F133         	movff	_distRight+1,_oldDistRight+1	;volatile
  2745  003D10  0012               	return		;funcret
  2746  003D12                     __end_of_getCurve:
  2747                           	callstack 0
  2748                           
  2749 ;; *************** function _checkCurveCount *****************
  2750 ;; Defined at:
  2751 ;;		line 120 in file "main.c"
  2752 ;; Parameters:    Size  Location     Type
  2753 ;;		None
  2754 ;; Auto vars:     Size  Location     Type
  2755 ;;  roundTime       4   16[BANK1 ] float 
  2756 ;; Return value:  Size  Location     Type
  2757 ;;                  1    wreg      void 
  2758 ;; Registers used:
  2759 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2760 ;; Tracked objects:
  2761 ;;		On entry : 0/0
  2762 ;;		On exit  : 0/0
  2763 ;;		Unchanged: 0/0
  2764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2766 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2768 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2769 ;;Total ram usage:        4 bytes
  2770 ;; Hardware stack levels used: 1
  2771 ;; Hardware stack levels required when called: 17
  2772 ;; This function calls:
  2773 ;;		___lwdiv
  2774 ;;		___xxtofl
  2775 ;;		_printf
  2776 ;; This function is called by:
  2777 ;;		_loop
  2778 ;; This function uses a non-reentrant model
  2779 ;;
  2780                           
  2781                           	psect	text5
  2782  004F06                     __ptext5:
  2783                           	callstack 0
  2784  004F06                     _checkCurveCount:
  2785                           	callstack 12
  2786  004F06                     
  2787                           ;main.c: 121:     if (distFront > 480 && roundTimeCount > 500 ) {
  2788  004F06  0EE1               	movlw	225
  2789  004F08  0100               	movlb	0	; () banked
  2790  004F0A  5DFD               	subwf	_distFront& (0+255),w,b	;volatile
  2791  004F0C  0E01               	movlw	1
  2792  004F0E  59FE               	subwfb	(_distFront+1)& (0+255),w,b	;volatile
  2793  004F10  A0D8               	btfss	status,0,c
  2794  004F12  EF8D  F027         	goto	u10721
  2795  004F16  EF8F  F027         	goto	u10720
  2796  004F1A                     u10721:
  2797  004F1A  EFE8  F027         	goto	l1278
  2798  004F1E                     u10720:
  2799  004F1E                     
  2800                           ; BSR set to: 0
  2801  004F1E  0EF5               	movlw	245
  2802  004F20  5DF3               	subwf	_roundTimeCount& (0+255),w,b	;volatile
  2803  004F22  0E01               	movlw	1
  2804  004F24  59F4               	subwfb	(_roundTimeCount+1)& (0+255),w,b	;volatile
  2805  004F26  A0D8               	btfss	status,0,c
  2806  004F28  EF98  F027         	goto	u10731
  2807  004F2C  EF9A  F027         	goto	u10730
  2808  004F30                     u10731:
  2809  004F30  EFE8  F027         	goto	l1278
  2810  004F34                     u10730:
  2811  004F34                     
  2812                           ; BSR set to: 0
  2813                           ;main.c: 122:         float roundTime = roundTimeCount / 100;
  2814  004F34  0E00               	movlw	0
  2815  004F36  6E17               	movwf	(___lwdiv@divisor+1)^0,c
  2816  004F38  0E64               	movlw	100
  2817  004F3A  6E16               	movwf	___lwdiv@divisor^0,c
  2818  004F3C  C0F3  F014         	movff	_roundTimeCount,___lwdiv@dividend	;volatile
  2819  004F40  C0F4  F015         	movff	_roundTimeCount+1,___lwdiv@dividend+1	;volatile
  2820  004F44  EC9E  F02B         	call	___lwdiv	;wreg free
  2821  004F48  C014  F01C         	movff	?___lwdiv,___xxtofl@val
  2822  004F4C  C015  F01D         	movff	?___lwdiv+1,___xxtofl@val+1
  2823  004F50  6A1E               	clrf	(___xxtofl@val+2)^0,c
  2824  004F52  6A1F               	clrf	(___xxtofl@val+3)^0,c
  2825  004F54  0E00               	movlw	0
  2826  004F56  EC7A  F01F         	call	___xxtofl
  2827  004F5A  C01C  F1B4         	movff	?___xxtofl,checkCurveCount@roundTime
  2828  004F5E  C01D  F1B5         	movff	?___xxtofl+1,checkCurveCount@roundTime+1
  2829  004F62  C01E  F1B6         	movff	?___xxtofl+2,checkCurveCount@roundTime+2
  2830  004F66  C01F  F1B7         	movff	?___xxtofl+3,checkCurveCount@roundTime+3
  2831  004F6A                     
  2832                           ;main.c: 123:         printf("Reset CurveCount!  |   ");
  2833  004F6A  0E1B               	movlw	low STR_3
  2834  004F6C  0101               	movlb	1	; () banked
  2835  004F6E  6FAC               	movwf	printf@fmt& (0+255),b
  2836  004F70  0E10               	movlw	high STR_3
  2837  004F72  6FAD               	movwf	(printf@fmt+1)& (0+255),b
  2838  004F74  ECBA  F030         	call	_printf	;wreg free
  2839  004F78                     
  2840                           ;main.c: 124:         printf("CurveLeftCount: %u   |   ", curveLeftCount);
  2841  004F78  0E01               	movlw	low STR_4
  2842  004F7A  0101               	movlb	1	; () banked
  2843  004F7C  6FAC               	movwf	printf@fmt& (0+255),b
  2844  004F7E  0E10               	movlw	high STR_4
  2845  004F80  6FAD               	movwf	(printf@fmt+1)& (0+255),b
  2846  004F82  C0FA  F1AE         	movff	_curveLeftCount,?_printf+2
  2847  004F86  6BAF               	clrf	(?_printf+3)& (0+255),b
  2848  004F88  ECBA  F030         	call	_printf	;wreg free
  2849  004F8C                     
  2850                           ;main.c: 125:         printf("CurveRightCount: %u\n", curveRightCount);
  2851  004F8C  0E33               	movlw	low STR_5
  2852  004F8E  0101               	movlb	1	; () banked
  2853  004F90  6FAC               	movwf	printf@fmt& (0+255),b
  2854  004F92  0E10               	movlw	high STR_5
  2855  004F94  6FAD               	movwf	(printf@fmt+1)& (0+255),b
  2856  004F96  C0F9  F1AE         	movff	_curveRightCount,?_printf+2
  2857  004F9A  6BAF               	clrf	(?_printf+3)& (0+255),b
  2858  004F9C  ECBA  F030         	call	_printf	;wreg free
  2859  004FA0                     
  2860                           ;main.c: 126:         printf("RoundTime: %f\n\n", roundTime);
  2861  004FA0  0E5C               	movlw	low STR_6
  2862  004FA2  0101               	movlb	1	; () banked
  2863  004FA4  6FAC               	movwf	printf@fmt& (0+255),b
  2864  004FA6  0E10               	movlw	high STR_6
  2865  004FA8  6FAD               	movwf	(printf@fmt+1)& (0+255),b
  2866  004FAA  C1B4  F1AE         	movff	checkCurveCount@roundTime,?_printf+2
  2867  004FAE  C1B5  F1AF         	movff	checkCurveCount@roundTime+1,?_printf+3
  2868  004FB2  C1B6  F1B0         	movff	checkCurveCount@roundTime+2,?_printf+4
  2869  004FB6  C1B7  F1B1         	movff	checkCurveCount@roundTime+3,?_printf+5
  2870  004FBA  ECBA  F030         	call	_printf	;wreg free
  2871  004FBE                     
  2872                           ;main.c: 127:         roundTimeCount = 0;
  2873  004FBE  0E00               	movlw	0
  2874  004FC0  0100               	movlb	0	; () banked
  2875  004FC2  6FF4               	movwf	(_roundTimeCount+1)& (0+255),b	;volatile
  2876  004FC4  0E00               	movlw	0
  2877  004FC6  6FF3               	movwf	_roundTimeCount& (0+255),b	;volatile
  2878  004FC8                     
  2879                           ; BSR set to: 0
  2880                           ;main.c: 128:         curveRightCount = 0;
  2881  004FC8  0E00               	movlw	0
  2882  004FCA  6FF9               	movwf	_curveRightCount& (0+255),b
  2883  004FCC                     
  2884                           ; BSR set to: 0
  2885                           ;main.c: 129:         curveLeftCount = 0;
  2886  004FCC  0E00               	movlw	0
  2887  004FCE  6FFA               	movwf	_curveLeftCount& (0+255),b
  2888  004FD0                     l1278:
  2889                           
  2890                           ; BSR set to: 0
  2891  004FD0  0012               	return		;funcret
  2892  004FD2                     __end_of_checkCurveCount:
  2893                           	callstack 0
  2894                           
  2895 ;; *************** function ___lwdiv *****************
  2896 ;; Defined at:
  2897 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lwdiv.c"
  2898 ;; Parameters:    Size  Location     Type
  2899 ;;  dividend        2   19[COMRAM] unsigned int 
  2900 ;;  divisor         2   21[COMRAM] unsigned int 
  2901 ;; Auto vars:     Size  Location     Type
  2902 ;;  quotient        2   24[COMRAM] unsigned int 
  2903 ;;  counter         1   23[COMRAM] unsigned char 
  2904 ;; Return value:  Size  Location     Type
  2905 ;;                  2   19[COMRAM] unsigned int 
  2906 ;; Registers used:
  2907 ;;		wreg, status,2, status,0
  2908 ;; Tracked objects:
  2909 ;;		On entry : 0/0
  2910 ;;		On exit  : 0/0
  2911 ;;		Unchanged: 0/0
  2912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2913 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2914 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2916 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2917 ;;Total ram usage:        7 bytes
  2918 ;; Hardware stack levels used: 1
  2919 ;; Hardware stack levels required when called: 8
  2920 ;; This function calls:
  2921 ;;		Nothing
  2922 ;; This function is called by:
  2923 ;;		_checkCurveCount
  2924 ;; This function uses a non-reentrant model
  2925 ;;
  2926                           
  2927                           	psect	text6
  2928  00573C                     __ptext6:
  2929                           	callstack 0
  2930  00573C                     ___lwdiv:
  2931                           	callstack 20
  2932  00573C  0E00               	movlw	0
  2933  00573E  6E1A               	movwf	(___lwdiv@quotient+1)^0,c
  2934  005740  0E00               	movlw	0
  2935  005742  6E19               	movwf	___lwdiv@quotient^0,c
  2936  005744  5016               	movf	___lwdiv@divisor^0,w,c
  2937  005746  1017               	iorwf	(___lwdiv@divisor+1)^0,w,c
  2938  005748  B4D8               	btfsc	status,2,c
  2939  00574A  EFA9  F02B         	goto	u10371
  2940  00574E  EFAB  F02B         	goto	u10370
  2941  005752                     u10371:
  2942  005752  EFD3  F02B         	goto	l1889
  2943  005756                     u10370:
  2944  005756  0E01               	movlw	1
  2945  005758  6E18               	movwf	___lwdiv@counter^0,c
  2946  00575A  EFB3  F02B         	goto	l9162
  2947  00575E                     l9160:
  2948  00575E  90D8               	bcf	status,0,c
  2949  005760  3616               	rlcf	___lwdiv@divisor^0,f,c
  2950  005762  3617               	rlcf	(___lwdiv@divisor+1)^0,f,c
  2951  005764  2A18               	incf	___lwdiv@counter^0,f,c
  2952  005766                     l9162:
  2953  005766  AE17               	btfss	(___lwdiv@divisor+1)^0,7,c
  2954  005768  EFB8  F02B         	goto	u10381
  2955  00576C  EFBA  F02B         	goto	u10380
  2956  005770                     u10381:
  2957  005770  EFAF  F02B         	goto	l9160
  2958  005774                     u10380:
  2959  005774                     l9164:
  2960  005774  90D8               	bcf	status,0,c
  2961  005776  3619               	rlcf	___lwdiv@quotient^0,f,c
  2962  005778  361A               	rlcf	(___lwdiv@quotient+1)^0,f,c
  2963  00577A  5016               	movf	___lwdiv@divisor^0,w,c
  2964  00577C  5C14               	subwf	___lwdiv@dividend^0,w,c
  2965  00577E  5017               	movf	(___lwdiv@divisor+1)^0,w,c
  2966  005780  5815               	subwfb	(___lwdiv@dividend+1)^0,w,c
  2967  005782  A0D8               	btfss	status,0,c
  2968  005784  EFC6  F02B         	goto	u10391
  2969  005788  EFC8  F02B         	goto	u10390
  2970  00578C                     u10391:
  2971  00578C  EFCD  F02B         	goto	l9172
  2972  005790                     u10390:
  2973  005790  5016               	movf	___lwdiv@divisor^0,w,c
  2974  005792  5E14               	subwf	___lwdiv@dividend^0,f,c
  2975  005794  5017               	movf	(___lwdiv@divisor+1)^0,w,c
  2976  005796  5A15               	subwfb	(___lwdiv@dividend+1)^0,f,c
  2977  005798  8019               	bsf	___lwdiv@quotient^0,0,c
  2978  00579A                     l9172:
  2979  00579A  90D8               	bcf	status,0,c
  2980  00579C  3217               	rrcf	(___lwdiv@divisor+1)^0,f,c
  2981  00579E  3216               	rrcf	___lwdiv@divisor^0,f,c
  2982  0057A0  2E18               	decfsz	___lwdiv@counter^0,f,c
  2983  0057A2  EFBA  F02B         	goto	l9164
  2984  0057A6                     l1889:
  2985  0057A6  C019  F014         	movff	___lwdiv@quotient,?___lwdiv
  2986  0057AA  C01A  F015         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2987  0057AE  0012               	return		;funcret
  2988  0057B0                     __end_of___lwdiv:
  2989                           	callstack 0
  2990                           
  2991 ;; *************** function _checkBatt *****************
  2992 ;; Defined at:
  2993 ;;		line 90 in file "main.c"
  2994 ;; Parameters:    Size  Location     Type
  2995 ;;		None
  2996 ;; Auto vars:     Size  Location     Type
  2997 ;;		None
  2998 ;; Return value:  Size  Location     Type
  2999 ;;                  1    wreg      _Bool 
  3000 ;; Registers used:
  3001 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3002 ;; Tracked objects:
  3003 ;;		On entry : 0/0
  3004 ;;		On exit  : 0/0
  3005 ;;		Unchanged: 0/0
  3006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3010 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3011 ;;Total ram usage:        0 bytes
  3012 ;; Hardware stack levels used: 1
  3013 ;; Hardware stack levels required when called: 18
  3014 ;; This function calls:
  3015 ;;		___flge
  3016 ;;		___xxtofl
  3017 ;;		_getBatteryVoltage
  3018 ;;		_setSteering
  3019 ;; This function is called by:
  3020 ;;		_loop
  3021 ;; This function uses a non-reentrant model
  3022 ;;
  3023                           
  3024                           	psect	text7
  3025  0056AA                     __ptext7:
  3026                           	callstack 0
  3027  0056AA                     _checkBatt:
  3028                           	callstack 11
  3029  0056AA                     
  3030                           ;main.c: 91:     ++battCheckCount;
  3031  0056AA  0101               	movlb	1	; () banked
  3032  0056AC  4B30               	infsnz	_battCheckCount& (0+255),f,b
  3033  0056AE  2B31               	incf	(_battCheckCount+1)& (0+255),f,b
  3034  0056B0                     
  3035                           ; BSR set to: 1
  3036                           ;main.c: 92:     if (battCheckCount > (500)) {
  3037  0056B0  0EF5               	movlw	245
  3038  0056B2  5D30               	subwf	_battCheckCount& (0+255),w,b
  3039  0056B4  0E01               	movlw	1
  3040  0056B6  5931               	subwfb	(_battCheckCount+1)& (0+255),w,b
  3041  0056B8  A0D8               	btfss	status,0,c
  3042  0056BA  EF61  F02B         	goto	u10431
  3043  0056BE  EF63  F02B         	goto	u10430
  3044  0056C2                     u10431:
  3045  0056C2  EF9C  F02B         	goto	l9222
  3046  0056C6                     u10430:
  3047  0056C6                     
  3048                           ; BSR set to: 1
  3049                           ;main.c: 93:         battCheckCount = 0;
  3050  0056C6  0E00               	movlw	0
  3051  0056C8  6F31               	movwf	(_battCheckCount+1)& (0+255),b
  3052  0056CA  0E00               	movlw	0
  3053  0056CC  6F30               	movwf	_battCheckCount& (0+255),b
  3054  0056CE                     
  3055                           ; BSR set to: 1
  3056                           ;main.c: 94:         getBatteryVoltage();
  3057  0056CE  ECE2  F030         	call	_getBatteryVoltage	;wreg free
  3058  0056D2                     
  3059                           ;main.c: 96:         if (BatteryVolt < (7.2) * 409.6) {
  3060  0056D2  C0EB  F01C         	movff	_BatteryVolt,___xxtofl@val
  3061  0056D6  C0EC  F01D         	movff	_BatteryVolt+1,___xxtofl@val+1
  3062  0056DA  6A1E               	clrf	(___xxtofl@val+2)^0,c
  3063  0056DC  6A1F               	clrf	(___xxtofl@val+3)^0,c
  3064  0056DE  0E00               	movlw	0
  3065  0056E0  EC7A  F01F         	call	___xxtofl
  3066  0056E4  C01C  F06D         	movff	?___xxtofl,___flge@ff1
  3067  0056E8  C01D  F06E         	movff	?___xxtofl+1,___flge@ff1+1
  3068  0056EC  C01E  F06F         	movff	?___xxtofl+2,___flge@ff1+2
  3069  0056F0  C01F  F070         	movff	?___xxtofl+3,___flge@ff1+3
  3070  0056F4  0EEC               	movlw	236
  3071  0056F6  0100               	movlb	0	; () banked
  3072  0056F8  6F71               	movwf	___flge@ff2& (0+255),b
  3073  0056FA  0E51               	movlw	81
  3074  0056FC  6F72               	movwf	(___flge@ff2+1)& (0+255),b
  3075  0056FE  0E38               	movlw	56
  3076  005700  6F73               	movwf	(___flge@ff2+2)& (0+255),b
  3077  005702  0E45               	movlw	69
  3078  005704  6F74               	movwf	(___flge@ff2+3)& (0+255),b
  3079  005706  ECB6  F024         	call	___flge	;wreg free
  3080  00570A  0100               	movlb	0	; () banked
  3081  00570C  B0D8               	btfsc	status,0,c
  3082  00570E  EF8B  F02B         	goto	u10441
  3083  005712  EF8D  F02B         	goto	u10440
  3084  005716                     u10441:
  3085  005716  EF9C  F02B         	goto	l9222
  3086  00571A                     u10440:
  3087  00571A                     
  3088                           ; BSR set to: 0
  3089                           ;main.c: 97:             setSpeed = 0;
  3090  00571A  0E00               	movlw	0
  3091  00571C  6FF2               	movwf	(_setSpeed+1)& (0+255),b
  3092  00571E  0E00               	movlw	0
  3093  005720  6FF1               	movwf	_setSpeed& (0+255),b
  3094  005722                     
  3095                           ; BSR set to: 0
  3096                           ;main.c: 98:             setSteering(0, Front);
  3097  005722  0E00               	movlw	0
  3098  005724  6F84               	movwf	(setSteering@steering+1)& (0+255),b
  3099  005726  0E00               	movlw	0
  3100  005728  6F83               	movwf	setSteering@steering& (0+255),b
  3101  00572A  0E03               	movlw	3
  3102  00572C  6F85               	movwf	setSteering@steeringMode& (0+255),b
  3103  00572E  EC9D  F01C         	call	_setSteering	;wreg free
  3104  005732                     
  3105                           ;main.c: 99:             return 1;
  3106  005732  0E01               	movlw	1
  3107  005734  EF9D  F02B         	goto	l1263
  3108  005738                     l9222:
  3109                           
  3110                           ;main.c: 102:     return 0;
  3111  005738  0E00               	movlw	0
  3112  00573A                     l1263:
  3113  00573A  0012               	return		;funcret
  3114  00573C                     __end_of_checkBatt:
  3115                           	callstack 0
  3116                           
  3117 ;; *************** function _getBatteryVoltage *****************
  3118 ;; Defined at:
  3119 ;;		line 85 in file "main.c"
  3120 ;; Parameters:    Size  Location     Type
  3121 ;;		None
  3122 ;; Auto vars:     Size  Location     Type
  3123 ;;		None
  3124 ;; Return value:  Size  Location     Type
  3125 ;;                  1    wreg      void 
  3126 ;; Registers used:
  3127 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3128 ;; Tracked objects:
  3129 ;;		On entry : 0/0
  3130 ;;		On exit  : 0/0
  3131 ;;		Unchanged: 0/0
  3132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3136 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3137 ;;Total ram usage:        0 bytes
  3138 ;; Hardware stack levels used: 1
  3139 ;; Hardware stack levels required when called: 17
  3140 ;; This function calls:
  3141 ;;		_ADCC_GetSingleConversion
  3142 ;;		_printf
  3143 ;; This function is called by:
  3144 ;;		_loop
  3145 ;;		_checkBatt
  3146 ;; This function uses a non-reentrant model
  3147 ;;
  3148                           
  3149                           	psect	text8
  3150  0061C4                     __ptext8:
  3151                           	callstack 0
  3152  0061C4                     _getBatteryVoltage:
  3153                           	callstack 12
  3154  0061C4                     
  3155                           ;main.c: 86:     BatteryVolt = ADCC_GetSingleConversion(aiBatt);
  3156  0061C4  0E22               	movlw	34
  3157  0061C6  ECD2  F02F         	call	_ADCC_GetSingleConversion
  3158  0061CA  C014  F0EB         	movff	?_ADCC_GetSingleConversion,_BatteryVolt
  3159  0061CE  C015  F0EC         	movff	?_ADCC_GetSingleConversion+1,_BatteryVolt+1
  3160  0061D2                     
  3161                           ;main.c: 87:     printf("BVolt: %u\n", (uint16_t) BatteryVolt);
  3162  0061D2  0E95               	movlw	low STR_1
  3163  0061D4  0101               	movlb	1	; () banked
  3164  0061D6  6FAC               	movwf	printf@fmt& (0+255),b
  3165  0061D8  0E10               	movlw	high STR_1
  3166  0061DA  6FAD               	movwf	(printf@fmt+1)& (0+255),b
  3167  0061DC  C0EB  F1AE         	movff	_BatteryVolt,?_printf+2
  3168  0061E0  C0EC  F1AF         	movff	_BatteryVolt+1,?_printf+3
  3169  0061E4  ECBA  F030         	call	_printf	;wreg free
  3170  0061E8  0012               	return		;funcret
  3171  0061EA                     __end_of_getBatteryVoltage:
  3172                           	callstack 0
  3173                           
  3174 ;; *************** function _printf *****************
  3175 ;; Defined at:
  3176 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\printf.c"
  3177 ;; Parameters:    Size  Location     Type
  3178 ;;  fmt             2    8[BANK1 ] PTR const unsigned char 
  3179 ;;		 -> STR_9(14), STR_8(13), STR_7(14), STR_6(16), 
  3180 ;;		 -> STR_5(21), STR_4(26), STR_3(24), STR_2(20), 
  3181 ;;		 -> STR_1(11), 
  3182 ;; Auto vars:     Size  Location     Type
  3183 ;;  ap              2   14[BANK1 ] PTR void [1]
  3184 ;;		 -> ?_printf(2), 
  3185 ;;  ret             2    0        int 
  3186 ;; Return value:  Size  Location     Type
  3187 ;;                  2    8[BANK1 ] int 
  3188 ;; Registers used:
  3189 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3190 ;; Tracked objects:
  3191 ;;		On entry : 0/0
  3192 ;;		On exit  : 0/0
  3193 ;;		Unchanged: 0/0
  3194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3195 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3196 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3198 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3199 ;;Total ram usage:        8 bytes
  3200 ;; Hardware stack levels used: 1
  3201 ;; Hardware stack levels required when called: 16
  3202 ;; This function calls:
  3203 ;;		_vfprintf
  3204 ;; This function is called by:
  3205 ;;		_getBatteryVoltage
  3206 ;;		_startAccell
  3207 ;;		_checkCurveCount
  3208 ;;		_getReverse
  3209 ;; This function uses a non-reentrant model
  3210 ;;
  3211                           
  3212                           	psect	text9
  3213  006174                     __ptext9:
  3214                           	callstack 0
  3215  006174                     _printf:
  3216                           	callstack 12
  3217  006174  0EAE               	movlw	low (?_printf+2)
  3218  006176  0101               	movlb	1	; () banked
  3219  006178  6FB2               	movwf	printf@ap& (0+255),b
  3220  00617A  0E01               	movlw	high (?_printf+2)
  3221  00617C  6FB3               	movwf	(printf@ap+1)& (0+255),b
  3222  00617E                     
  3223                           ; BSR set to: 1
  3224  00617E  0E00               	movlw	0
  3225  006180  6FA4               	movwf	vfprintf@fp& (0+255),b
  3226  006182  0E00               	movlw	0
  3227  006184  6FA5               	movwf	(vfprintf@fp+1)& (0+255),b
  3228  006186  C1AC  F1A6         	movff	printf@fmt,vfprintf@fmt
  3229  00618A  C1AD  F1A7         	movff	printf@fmt+1,vfprintf@fmt+1
  3230  00618E  0EB2               	movlw	low printf@ap
  3231  006190  6FA8               	movwf	vfprintf@ap& (0+255),b
  3232  006192  0E01               	movlw	high printf@ap
  3233  006194  6FA9               	movwf	(vfprintf@ap+1)& (0+255),b
  3234  006196  ECD8  F02B         	call	_vfprintf	;wreg free
  3235  00619A  0012               	return		;funcret
  3236  00619C                     __end_of_printf:
  3237                           	callstack 0
  3238                           
  3239 ;; *************** function _vfprintf *****************
  3240 ;; Defined at:
  3241 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3242 ;; Parameters:    Size  Location     Type
  3243 ;;  fp              2    0[BANK1 ] PTR struct _IO_FILE
  3244 ;;		 -> NULL(0), 
  3245 ;;  fmt             2    2[BANK1 ] PTR const unsigned char 
  3246 ;;		 -> STR_9(14), STR_8(13), STR_7(14), STR_6(16), 
  3247 ;;		 -> STR_5(21), STR_4(26), STR_3(24), STR_2(20), 
  3248 ;;		 -> STR_1(11), 
  3249 ;;  ap              2    4[BANK1 ] PTR PTR void 
  3250 ;;		 -> printf@ap(2), 
  3251 ;; Auto vars:     Size  Location     Type
  3252 ;;  cfmt            2    6[BANK1 ] PTR unsigned char 
  3253 ;;		 -> STR_9(14), STR_8(13), STR_7(14), STR_6(16), 
  3254 ;;		 -> STR_5(21), STR_4(26), STR_3(24), STR_2(20), 
  3255 ;;		 -> STR_1(11), 
  3256 ;; Return value:  Size  Location     Type
  3257 ;;                  2    0[BANK1 ] int 
  3258 ;; Registers used:
  3259 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3260 ;; Tracked objects:
  3261 ;;		On entry : 0/0
  3262 ;;		On exit  : 0/0
  3263 ;;		Unchanged: 0/0
  3264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3265 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3266 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3268 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3269 ;;Total ram usage:        8 bytes
  3270 ;; Hardware stack levels used: 1
  3271 ;; Hardware stack levels required when called: 15
  3272 ;; This function calls:
  3273 ;;		_vfpfcnvrt
  3274 ;; This function is called by:
  3275 ;;		_printf
  3276 ;; This function uses a non-reentrant model
  3277 ;;
  3278                           
  3279                           	psect	text10
  3280  0057B0                     __ptext10:
  3281                           	callstack 0
  3282  0057B0                     _vfprintf:
  3283                           	callstack 12
  3284  0057B0                     
  3285                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  3286  0057B0  C1A6  F1AA         	movff	vfprintf@fmt,vfprintf@cfmt
  3287  0057B4  C1A7  F1AB         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3288  0057B8                     
  3289                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  3290  0057B8  0E00               	movlw	0
  3291  0057BA  0101               	movlb	1	; () banked
  3292  0057BC  6F29               	movwf	(_nout+1)& (0+255),b
  3293  0057BE  0E00               	movlw	0
  3294  0057C0  6F28               	movwf	_nout& (0+255),b
  3295                           
  3296                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3297  0057C2  EFFA  F02B         	goto	l9024
  3298  0057C6                     l9022:
  3299                           
  3300                           ; BSR set to: 1
  3301                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  3302  0057C6  C1A4  F0C7         	movff	vfprintf@fp,vfpfcnvrt@fp
  3303  0057CA  C1A5  F0C8         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3304  0057CE  0EAA               	movlw	low vfprintf@cfmt
  3305  0057D0  0100               	movlb	0	; () banked
  3306  0057D2  6FC9               	movwf	vfpfcnvrt@fmt& (0+255),b
  3307  0057D4  0E01               	movlw	high vfprintf@cfmt
  3308  0057D6  6FCA               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  3309  0057D8  C1A8  F0CB         	movff	vfprintf@ap,vfpfcnvrt@ap
  3310  0057DC  C1A9  F0CC         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3311  0057E0  ECB1  F00E         	call	_vfpfcnvrt	;wreg free
  3312  0057E4  0100               	movlb	0	; () banked
  3313  0057E6  51C7               	movf	?_vfpfcnvrt& (0+255),w,b
  3314  0057E8  0101               	movlb	1	; () banked
  3315  0057EA  2728               	addwf	_nout& (0+255),f,b
  3316  0057EC  0100               	movlb	0	; () banked
  3317  0057EE  51C8               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  3318  0057F0  0101               	movlb	1	; () banked
  3319  0057F2  2329               	addwfc	(_nout+1)& (0+255),f,b
  3320  0057F4                     l9024:
  3321                           
  3322                           ; BSR set to: 1
  3323                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3324  0057F4  0060  F6AB  FFF6   	movff	vfprintf@cfmt,tblptrl
  3325  0057FA  0060  F6AF  FFF7   	movff	vfprintf@cfmt+1,tblptrh
  3326  005800                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3327  005800  6AF8               	clrf	tblptru,c
  3328  005802                     	endif
  3329  005802                     	if	0	;tblptru may be non-zero
  3330  005802                     	endif
  3331  005802  0008               	tblrd		*
  3332  005804  50F5               	movf	tablat,w,c
  3333  005806  0900               	iorlw	0
  3334  005808  A4D8               	btfss	status,2,c
  3335  00580A  EF09  F02C         	goto	u10141
  3336  00580E  EF0B  F02C         	goto	u10140
  3337  005812                     u10141:
  3338  005812  EFE3  F02B         	goto	l9022
  3339  005816                     u10140:
  3340  005816                     
  3341                           ; BSR set to: 1
  3342                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  3343  005816  C128  F1A4         	movff	_nout,?_vfprintf
  3344  00581A  C129  F1A5         	movff	_nout+1,?_vfprintf+1
  3345  00581E                     
  3346                           ; BSR set to: 1
  3347  00581E  0012               	return		;funcret
  3348  005820                     __end_of_vfprintf:
  3349                           	callstack 0
  3350                           
  3351 ;; *************** function _vfpfcnvrt *****************
  3352 ;; Defined at:
  3353 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3354 ;; Parameters:    Size  Location     Type
  3355 ;;  fp              2  103[BANK0 ] PTR struct _IO_FILE
  3356 ;;		 -> NULL(0), 
  3357 ;;  fmt             2  105[BANK0 ] PTR PTR unsigned char 
  3358 ;;		 -> vfprintf@cfmt(2), 
  3359 ;;  ap              2  107[BANK0 ] PTR PTR void 
  3360 ;;		 -> printf@ap(2), 
  3361 ;; Auto vars:     Size  Location     Type
  3362 ;;  llu             8  121[BANK0 ] unsigned long long 
  3363 ;;  ll              8  113[BANK0 ] long long 
  3364 ;;  f               4  131[BANK0 ] long long 
  3365 ;;  ct              3  135[BANK0 ] unsigned char [3]
  3366 ;;  vp              3    0        PTR void 
  3367 ;;  cp              3    0        PTR unsigned char 
  3368 ;;  i               2    0        int 
  3369 ;;  done            2    0        int 
  3370 ;;  c               1  138[BANK0 ] unsigned char 
  3371 ;; Return value:  Size  Location     Type
  3372 ;;                  2  103[BANK0 ] int 
  3373 ;; Registers used:
  3374 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3375 ;; Tracked objects:
  3376 ;;		On entry : 0/0
  3377 ;;		On exit  : 0/0
  3378 ;;		Unchanged: 0/0
  3379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3380 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3381 ;;      Locals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3382 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3383 ;;      Totals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3384 ;;Total ram usage:       36 bytes
  3385 ;; Hardware stack levels used: 1
  3386 ;; Hardware stack levels required when called: 14
  3387 ;; This function calls:
  3388 ;;		_dtoa
  3389 ;;		_efgtoa
  3390 ;;		_fputc
  3391 ;;		_isupper
  3392 ;;		_strncmp
  3393 ;;		_tolower
  3394 ;;		_utoa
  3395 ;; This function is called by:
  3396 ;;		_vfprintf
  3397 ;; This function uses a non-reentrant model
  3398 ;;
  3399                           
  3400                           	psect	text11
  3401  001D62                     __ptext11:
  3402                           	callstack 0
  3403  001D62                     _vfpfcnvrt:
  3404                           	callstack 12
  3405  001D62                     
  3406                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  3407  001D62  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3408  001D68  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3409  001D6E  006F FF7B FFF6     	movff	postinc2,tblptrl
  3410  001D74  006F FF77 FFF7     	movff	postdec2,tblptrh
  3411  001D7A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3412  001D7A  6AF8               	clrf	tblptru,c
  3413  001D7C                     	endif
  3414  001D7C                     	if	0	;tblptru may be non-zero
  3415  001D7C                     	endif
  3416  001D7C  0008               	tblrd		*
  3417  001D7E  50F5               	movf	tablat,w,c
  3418  001D80  0A25               	xorlw	37
  3419  001D82  A4D8               	btfss	status,2,c
  3420  001D84  EFC6  F00E         	goto	u10021
  3421  001D88  EFC8  F00E         	goto	u10020
  3422  001D8C                     u10021:
  3423  001D8C  EF82  F011         	goto	l9010
  3424  001D90                     u10020:
  3425  001D90                     
  3426                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  3427  001D90  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3428  001D96  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3429  001D9C  2ADE               	incf	postinc2,f,c
  3430  001D9E  0E00               	movlw	0
  3431  001DA0  22DD               	addwfc	postdec2,f,c
  3432  001DA2                     
  3433                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  3434  001DA2  0E00               	movlw	0
  3435  001DA4  6E3B               	movwf	(_width+1)^0,c
  3436  001DA6  0E00               	movlw	0
  3437  001DA8  6E3A               	movwf	_width^0,c
  3438  001DAA  C03A  F03E         	movff	_width,_flags
  3439  001DAE  C03B  F03F         	movff	_width+1,_flags+1
  3440  001DB2                     
  3441                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  3442  001DB2  683C               	setf	_prec^0,c
  3443  001DB4  683D               	setf	(_prec+1)^0,c
  3444  001DB6                     
  3445                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  3446  001DB6  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3447  001DBC  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3448  001DC2  006F FF7B FFF6     	movff	postinc2,tblptrl
  3449  001DC8  006F FF77 FFF7     	movff	postdec2,tblptrh
  3450  001DCE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3451  001DCE  6AF8               	clrf	tblptru,c
  3452  001DD0                     	endif
  3453  001DD0                     	if	0	;tblptru may be non-zero
  3454  001DD0                     	endif
  3455  001DD0  0008               	tblrd		*
  3456  001DD2  50F5               	movf	tablat,w,c
  3457  001DD4  6E1A               	movwf	tolower@c^0,c
  3458  001DD6  6A1B               	clrf	(tolower@c+1)^0,c
  3459  001DD8  EC45  F02C         	call	_tolower	;wreg free
  3460  001DDC  501A               	movf	?_tolower^0,w,c
  3461  001DDE  0100               	movlb	0	; () banked
  3462  001DE0  6FE7               	movwf	vfpfcnvrt@ct& (0+255),b
  3463  001DE2                     
  3464                           ; BSR set to: 0
  3465                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  3466  001DE2  51E7               	movf	vfpfcnvrt@ct& (0+255),w,b
  3467  001DE4  B4D8               	btfsc	status,2,c
  3468  001DE6  EFF7  F00E         	goto	u10031
  3469  001DEA  EFF9  F00E         	goto	u10030
  3470  001DEE                     u10031:
  3471  001DEE  EF41  F00F         	goto	l8948
  3472  001DF2                     u10030:
  3473  001DF2                     
  3474                           ; BSR set to: 0
  3475                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  3476  001DF2  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3477  001DF8  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3478  001DFE  006F FF78  F0CD    	movff	postinc2,??_vfpfcnvrt
  3479  001E04  006F FF74  F0CE    	movff	postdec2,??_vfpfcnvrt+1
  3480  001E0A  0E01               	movlw	1
  3481  001E0C  27CD               	addwf	??_vfpfcnvrt& (0+255),f,b
  3482  001E0E  0E00               	movlw	0
  3483  001E10  23CE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  3484  001E12  0060  F337  FFF6   	movff	??_vfpfcnvrt,tblptrl
  3485  001E18  0060  F33B  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  3486  001E1E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3487  001E1E  6AF8               	clrf	tblptru,c
  3488  001E20                     	endif
  3489  001E20                     	if	0	;tblptru may be non-zero
  3490  001E20                     	endif
  3491  001E20  0008               	tblrd		*
  3492  001E22  50F5               	movf	tablat,w,c
  3493  001E24  6E1A               	movwf	tolower@c^0,c
  3494  001E26  6A1B               	clrf	(tolower@c+1)^0,c
  3495  001E28  EC45  F02C         	call	_tolower	;wreg free
  3496  001E2C  501A               	movf	?_tolower^0,w,c
  3497  001E2E  0100               	movlb	0	; () banked
  3498  001E30  6FE8               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  3499  001E32                     
  3500                           ; BSR set to: 0
  3501                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  3502  001E32  51E8               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  3503  001E34  B4D8               	btfsc	status,2,c
  3504  001E36  EF1F  F00F         	goto	u10041
  3505  001E3A  EF21  F00F         	goto	u10040
  3506  001E3E                     u10041:
  3507  001E3E  EF41  F00F         	goto	l8948
  3508  001E42                     u10040:
  3509  001E42                     
  3510                           ; BSR set to: 0
  3511                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  3512  001E42  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3513  001E48  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3514  001E4E  006F FF78  F0CD    	movff	postinc2,??_vfpfcnvrt
  3515  001E54  006F FF74  F0CE    	movff	postdec2,??_vfpfcnvrt+1
  3516  001E5A  0E02               	movlw	2
  3517  001E5C  27CD               	addwf	??_vfpfcnvrt& (0+255),f,b
  3518  001E5E  0E00               	movlw	0
  3519  001E60  23CE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  3520  001E62  0060  F337  FFF6   	movff	??_vfpfcnvrt,tblptrl
  3521  001E68  0060  F33B  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  3522  001E6E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3523  001E6E  6AF8               	clrf	tblptru,c
  3524  001E70                     	endif
  3525  001E70                     	if	0	;tblptru may be non-zero
  3526  001E70                     	endif
  3527  001E70  0008               	tblrd		*
  3528  001E72  50F5               	movf	tablat,w,c
  3529  001E74  6E1A               	movwf	tolower@c^0,c
  3530  001E76  6A1B               	clrf	(tolower@c+1)^0,c
  3531  001E78  EC45  F02C         	call	_tolower	;wreg free
  3532  001E7C  501A               	movf	?_tolower^0,w,c
  3533  001E7E  0100               	movlb	0	; () banked
  3534  001E80  6FE9               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  3535  001E82                     l8948:
  3536                           
  3537                           ; BSR set to: 0
  3538                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  3539  001E82  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3540  001E88  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3541  001E8E  006F FF7B FFF6     	movff	postinc2,tblptrl
  3542  001E94  006F FF77 FFF7     	movff	postdec2,tblptrh
  3543  001E9A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3544  001E9A  6AF8               	clrf	tblptru,c
  3545  001E9C                     	endif
  3546  001E9C                     	if	0	;tblptru may be non-zero
  3547  001E9C                     	endif
  3548  001E9C  0008               	tblrd		*
  3549  001E9E  50F5               	movf	tablat,w,c
  3550  001EA0  0A64               	xorlw	100
  3551  001EA2  B4D8               	btfsc	status,2,c
  3552  001EA4  EF56  F00F         	goto	u10051
  3553  001EA8  EF58  F00F         	goto	u10050
  3554  001EAC                     u10051:
  3555  001EAC  EF6F  F00F         	goto	l8952
  3556  001EB0                     u10050:
  3557  001EB0                     
  3558                           ; BSR set to: 0
  3559  001EB0  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3560  001EB6  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3561  001EBC  006F FF7B FFF6     	movff	postinc2,tblptrl
  3562  001EC2  006F FF77 FFF7     	movff	postdec2,tblptrh
  3563  001EC8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3564  001EC8  6AF8               	clrf	tblptru,c
  3565  001ECA                     	endif
  3566  001ECA                     	if	0	;tblptru may be non-zero
  3567  001ECA                     	endif
  3568  001ECA  0008               	tblrd		*
  3569  001ECC  50F5               	movf	tablat,w,c
  3570  001ECE  0A69               	xorlw	105
  3571  001ED0  A4D8               	btfss	status,2,c
  3572  001ED2  EF6D  F00F         	goto	u10061
  3573  001ED6  EF6F  F00F         	goto	u10060
  3574  001EDA                     u10061:
  3575  001EDA  EFB9  F00F         	goto	l8958
  3576  001EDE                     u10060:
  3577  001EDE                     l8952:
  3578                           
  3579                           ; BSR set to: 0
  3580                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  3581  001EDE  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3582  001EE4  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3583  001EEA  2ADE               	incf	postinc2,f,c
  3584  001EEC  0E00               	movlw	0
  3585  001EEE  22DD               	addwfc	postdec2,f,c
  3586                           
  3587                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  3588  001EF0  0060  F32F  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  3589  001EF6  0060  F333  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  3590  001EFC  006F FF7C  F0CD    	movff	indf2,??_vfpfcnvrt
  3591  001F02  0E02               	movlw	2
  3592  001F04  26DE               	addwf	postinc2,f,c
  3593  001F06  006F FF7C  F0CE    	movff	indf2,??_vfpfcnvrt+1
  3594  001F0C  0E00               	movlw	0
  3595  001F0E  22DD               	addwfc	postdec2,f,c
  3596  001F10  0060  F337  FFD9   	movff	??_vfpfcnvrt,fsr2l
  3597  001F16  0060  F33B  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  3598  001F1C  006F FF78  F0D1    	movff	postinc2,vfpfcnvrt@ll
  3599  001F22  006F FF74  F0D2    	movff	postdec2,vfpfcnvrt@ll+1
  3600  001F28  0E00               	movlw	0
  3601  001F2A  BFD2               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  3602  001F2C  0EFF               	movlw	-1
  3603  001F2E  6FD3               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  3604  001F30  6FD4               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  3605  001F32  6FD5               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  3606  001F34  6FD6               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  3607  001F36  6FD7               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  3608  001F38  6FD8               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  3609  001F3A                     
  3610                           ; BSR set to: 0
  3611                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  3612  001F3A  C0C7  F060         	movff	vfpfcnvrt@fp,dtoa@fp
  3613  001F3E  C0C8  F061         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  3614  001F42  C0D1  F062         	movff	vfpfcnvrt@ll,dtoa@d
  3615  001F46  C0D2  F063         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  3616  001F4A  C0D3  F064         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  3617  001F4E  C0D4  F065         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  3618  001F52  C0D5  F066         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  3619  001F56  C0D6  F067         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  3620  001F5A  C0D7  F068         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  3621  001F5E  C0D8  F069         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  3622  001F62  ECFC  F017         	call	_dtoa	;wreg free
  3623  001F66  C060  F0C7         	movff	?_dtoa,?_vfpfcnvrt
  3624  001F6A  C061  F0C8         	movff	?_dtoa+1,?_vfpfcnvrt+1
  3625  001F6E  EFA4  F011         	goto	l2263
  3626  001F72                     l8958:
  3627                           
  3628                           ; BSR set to: 0
  3629                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  3630  001F72  0E66               	movlw	102
  3631  001F74  19E7               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  3632  001F76  A4D8               	btfss	status,2,c
  3633  001F78  EFC0  F00F         	goto	u10071
  3634  001F7C  EFC2  F00F         	goto	u10070
  3635  001F80                     u10071:
  3636  001F80  EF14  F010         	goto	l8970
  3637  001F84                     u10070:
  3638  001F84                     
  3639                           ; BSR set to: 0
  3640                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  3641  001F84  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3642  001F8A  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3643  001F90  006F FF7B FFF6     	movff	postinc2,tblptrl
  3644  001F96  006F FF77 FFF7     	movff	postdec2,tblptrh
  3645  001F9C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3646  001F9C  6AF8               	clrf	tblptru,c
  3647  001F9E                     	endif
  3648  001F9E                     	if	0	;tblptru may be non-zero
  3649  001F9E                     	endif
  3650  001F9E  0008               	tblrd		*
  3651  001FA0  006F FFD4  F0EA    	movff	tablat,vfpfcnvrt@c
  3652  001FA6                     
  3653                           ; BSR set to: 0
  3654                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  3655  001FA6  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3656  001FAC  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3657  001FB2  2ADE               	incf	postinc2,f,c
  3658  001FB4  0E00               	movlw	0
  3659  001FB6  22DD               	addwfc	postdec2,f,c
  3660  001FB8                     
  3661                           ; BSR set to: 0
  3662                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3663  001FB8  0060  F32F  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  3664  001FBE  0060  F333  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  3665  001FC4  006F FF7C  F0CD    	movff	indf2,??_vfpfcnvrt
  3666  001FCA  0E04               	movlw	4
  3667  001FCC  26DE               	addwf	postinc2,f,c
  3668  001FCE  006F FF7C  F0CE    	movff	indf2,??_vfpfcnvrt+1
  3669  001FD4  0E00               	movlw	0
  3670  001FD6  22DD               	addwfc	postdec2,f,c
  3671  001FD8  0060  F337  FFD9   	movff	??_vfpfcnvrt,fsr2l
  3672  001FDE  0060  F33B  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  3673  001FE4  006F FF78  F0E3    	movff	postinc2,vfpfcnvrt@f
  3674  001FEA  006F FF78  F0E4    	movff	postinc2,vfpfcnvrt@f+1
  3675  001FF0  006F FF78  F0E5    	movff	postinc2,vfpfcnvrt@f+2
  3676  001FF6  006F FF78  F0E6    	movff	postinc2,vfpfcnvrt@f+3
  3677  001FFC                     
  3678                           ; BSR set to: 0
  3679                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  3680  001FFC  C0C7  F083         	movff	vfpfcnvrt@fp,efgtoa@fp
  3681  002000  C0C8  F084         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  3682  002004  C0E3  F085         	movff	vfpfcnvrt@f,efgtoa@f
  3683  002008  C0E4  F086         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  3684  00200C  C0E5  F087         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  3685  002010  C0E6  F088         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  3686  002014  C0EA  F089         	movff	vfpfcnvrt@c,efgtoa@c
  3687  002018  EC5A  F008         	call	_efgtoa	;wreg free
  3688  00201C  C083  F0C7         	movff	?_efgtoa,?_vfpfcnvrt
  3689  002020  C084  F0C8         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  3690  002024  EFA4  F011         	goto	l2263
  3691  002028                     l8970:
  3692                           
  3693                           ; BSR set to: 0
  3694                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  3695  002028  0EE7               	movlw	low vfpfcnvrt@ct
  3696  00202A  6E14               	movwf	strncmp@_l^0,c
  3697  00202C  0E00               	movlw	high vfpfcnvrt@ct
  3698  00202E  6E15               	movwf	(strncmp@_l+1)^0,c
  3699  002030  0EB0               	movlw	low STR_18
  3700  002032  6E16               	movwf	strncmp@_r^0,c
  3701  002034  0E10               	movlw	high STR_18
  3702  002036  6E17               	movwf	(strncmp@_r+1)^0,c
  3703  002038  0E00               	movlw	0
  3704  00203A  6E19               	movwf	(strncmp@n+1)^0,c
  3705  00203C  0E02               	movlw	2
  3706  00203E  6E18               	movwf	strncmp@n^0,c
  3707  002040  ECB8  F025         	call	_strncmp	;wreg free
  3708  002044  5014               	movf	?_strncmp^0,w,c
  3709  002046  1015               	iorwf	(?_strncmp+1)^0,w,c
  3710  002048  A4D8               	btfss	status,2,c
  3711  00204A  EF29  F010         	goto	u10081
  3712  00204E  EF2B  F010         	goto	u10080
  3713  002052                     u10081:
  3714  002052  EFDE  F010         	goto	l8986
  3715  002056                     u10080:
  3716  002056                     
  3717                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 953:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  3718  002056  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3719  00205C  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3720  002062  006F FF78  F0CD    	movff	postinc2,??_vfpfcnvrt
  3721  002068  006F FF74  F0CE    	movff	postdec2,??_vfpfcnvrt+1
  3722  00206E  0E01               	movlw	1
  3723  002070  0100               	movlb	0	; () banked
  3724  002072  27CD               	addwf	??_vfpfcnvrt& (0+255),f,b
  3725  002074  0E00               	movlw	0
  3726  002076  23CE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  3727  002078  0060  F337  FFF6   	movff	??_vfpfcnvrt,tblptrl
  3728  00207E  0060  F33B  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  3729  002084                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3730  002084  6AF8               	clrf	tblptru,c
  3731  002086                     	endif
  3732  002086                     	if	0	;tblptru may be non-zero
  3733  002086                     	endif
  3734  002086  0008               	tblrd		*
  3735  002088  006F FFD4  F0EA    	movff	tablat,vfpfcnvrt@c
  3736  00208E  0EBF               	movlw	191
  3737  002090  6FCD               	movwf	??_vfpfcnvrt& (0+255),b
  3738  002092  0EFF               	movlw	255
  3739  002094  6FCE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  3740  002096  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3741  00209C  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3742  0020A2  006F FF7B FFF6     	movff	postinc2,tblptrl
  3743  0020A8  006F FF77 FFF7     	movff	postdec2,tblptrh
  3744  0020AE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3745  0020AE  6AF8               	clrf	tblptru,c
  3746  0020B0                     	endif
  3747  0020B0                     	if	0	;tblptru may be non-zero
  3748  0020B0                     	endif
  3749  0020B0  0008               	tblrd		*
  3750  0020B2  50F5               	movf	tablat,w,c
  3751  0020B4  6FCF               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  3752  0020B6  6BD0               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  3753  0020B8  51CD               	movf	??_vfpfcnvrt& (0+255),w,b
  3754  0020BA  27CF               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  3755  0020BC  51CE               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3756  0020BE  23D0               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  3757  0020C0  51D0               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  3758  0020C2  E10A               	bnz	u10090
  3759  0020C4  0E1A               	movlw	26
  3760  0020C6  5DCF               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  3761  0020C8  A0D8               	btfss	status,0,c
  3762  0020CA  EF69  F010         	goto	u10091
  3763  0020CE  EF6C  F010         	goto	u10090
  3764  0020D2                     u10091:
  3765  0020D2  0E01               	movlw	1
  3766  0020D4  EF6D  F010         	goto	u10100
  3767  0020D8                     u10090:
  3768  0020D8  0E00               	movlw	0
  3769  0020DA                     u10100:
  3770  0020DA  6FE1               	movwf	_vfpfcnvrt$3599& (0+255),b
  3771  0020DC  6BE2               	clrf	(_vfpfcnvrt$3599+1)& (0+255),b
  3772  0020DE                     
  3773                           ; BSR set to: 0
  3774  0020DE  51E1               	movf	_vfpfcnvrt$3599& (0+255),w,b
  3775  0020E0  11E2               	iorwf	(_vfpfcnvrt$3599+1)& (0+255),w,b
  3776  0020E2  B4D8               	btfsc	status,2,c
  3777  0020E4  EF76  F010         	goto	u10111
  3778  0020E8  EF78  F010         	goto	u10110
  3779  0020EC                     u10111:
  3780  0020EC  EF9C  F010         	goto	l8980
  3781  0020F0                     u10110:
  3782  0020F0                     
  3783                           ; BSR set to: 0
  3784                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  3785  0020F0  0060  F32F  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  3786  0020F6  0060  F333  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  3787  0020FC  006F FF7C  F0CD    	movff	indf2,??_vfpfcnvrt
  3788  002102  0E04               	movlw	4
  3789  002104  26DE               	addwf	postinc2,f,c
  3790  002106  006F FF7C  F0CE    	movff	indf2,??_vfpfcnvrt+1
  3791  00210C  0E00               	movlw	0
  3792  00210E  22DD               	addwfc	postdec2,f,c
  3793  002110  0060  F337  FFD9   	movff	??_vfpfcnvrt,fsr2l
  3794  002116  0060  F33B  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  3795  00211C  006F FF78  F0E3    	movff	postinc2,vfpfcnvrt@f
  3796  002122  006F FF78  F0E4    	movff	postinc2,vfpfcnvrt@f+1
  3797  002128  006F FF78  F0E5    	movff	postinc2,vfpfcnvrt@f+2
  3798  00212E  006F FF78  F0E6    	movff	postinc2,vfpfcnvrt@f+3
  3799                           
  3800                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  3801  002134  EFBE  F010         	goto	l2271
  3802  002138                     l8980:
  3803                           
  3804                           ; BSR set to: 0
  3805                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3806  002138  0060  F32F  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  3807  00213E  0060  F333  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  3808  002144  006F FF7C  F0CD    	movff	indf2,??_vfpfcnvrt
  3809  00214A  0E04               	movlw	4
  3810  00214C  26DE               	addwf	postinc2,f,c
  3811  00214E  006F FF7C  F0CE    	movff	indf2,??_vfpfcnvrt+1
  3812  002154  0E00               	movlw	0
  3813  002156  22DD               	addwfc	postdec2,f,c
  3814  002158  0060  F337  FFD9   	movff	??_vfpfcnvrt,fsr2l
  3815  00215E  0060  F33B  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  3816  002164  006F FF78  F0E3    	movff	postinc2,vfpfcnvrt@f
  3817  00216A  006F FF78  F0E4    	movff	postinc2,vfpfcnvrt@f+1
  3818  002170  006F FF78  F0E5    	movff	postinc2,vfpfcnvrt@f+2
  3819  002176  006F FF78  F0E6    	movff	postinc2,vfpfcnvrt@f+3
  3820  00217C                     l2271:
  3821                           
  3822                           ; BSR set to: 0
  3823                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  3824  00217C  0E02               	movlw	2
  3825  00217E  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3826  002184  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3827  00218A  26DE               	addwf	postinc2,f,c
  3828  00218C  0E00               	movlw	0
  3829  00218E  22DD               	addwfc	postdec2,f,c
  3830  002190                     
  3831                           ; BSR set to: 0
  3832                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 960:             
      +                          return efgtoa(fp, f, c);
  3833  002190  C0C7  F083         	movff	vfpfcnvrt@fp,efgtoa@fp
  3834  002194  C0C8  F084         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  3835  002198  C0E3  F085         	movff	vfpfcnvrt@f,efgtoa@f
  3836  00219C  C0E4  F086         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  3837  0021A0  C0E5  F087         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  3838  0021A4  C0E6  F088         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  3839  0021A8  C0EA  F089         	movff	vfpfcnvrt@c,efgtoa@c
  3840  0021AC  EC5A  F008         	call	_efgtoa	;wreg free
  3841  0021B0  C083  F0C7         	movff	?_efgtoa,?_vfpfcnvrt
  3842  0021B4  C084  F0C8         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  3843  0021B8  EFA4  F011         	goto	l2263
  3844  0021BC                     l8986:
  3845                           
  3846                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1204:         if 
      +                          (*fmt[0] == 'u') {
  3847  0021BC  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3848  0021C2  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3849  0021C8  006F FF7B FFF6     	movff	postinc2,tblptrl
  3850  0021CE  006F FF77 FFF7     	movff	postdec2,tblptrh
  3851  0021D4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3852  0021D4  6AF8               	clrf	tblptru,c
  3853  0021D6                     	endif
  3854  0021D6                     	if	0	;tblptru may be non-zero
  3855  0021D6                     	endif
  3856  0021D6  0008               	tblrd		*
  3857  0021D8  50F5               	movf	tablat,w,c
  3858  0021DA  0A75               	xorlw	117
  3859  0021DC  A4D8               	btfss	status,2,c
  3860  0021DE  EFF3  F010         	goto	u10121
  3861  0021E2  EFF5  F010         	goto	u10120
  3862  0021E6                     u10121:
  3863  0021E6  EF41  F011         	goto	l8994
  3864  0021EA                     u10120:
  3865  0021EA                     
  3866                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1206:            
      +                           ++*fmt;
  3867  0021EA  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3868  0021F0  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3869  0021F6  2ADE               	incf	postinc2,f,c
  3870  0021F8  0E00               	movlw	0
  3871  0021FA  22DD               	addwfc	postdec2,f,c
  3872                           
  3873                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1207:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  3874  0021FC  0060  F32F  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  3875  002202  0060  F333  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  3876  002208  006F FF7C  F0CD    	movff	indf2,??_vfpfcnvrt
  3877  00220E  0E02               	movlw	2
  3878  002210  26DE               	addwf	postinc2,f,c
  3879  002212  006F FF7C  F0CE    	movff	indf2,??_vfpfcnvrt+1
  3880  002218  0E00               	movlw	0
  3881  00221A  22DD               	addwfc	postdec2,f,c
  3882  00221C  0060  F337  FFD9   	movff	??_vfpfcnvrt,fsr2l
  3883  002222  0060  F33B  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  3884  002228  006F FF78  F0CF    	movff	postinc2,??_vfpfcnvrt+2
  3885  00222E  006F FF74  F0D0    	movff	postdec2,??_vfpfcnvrt+3
  3886  002234  C0CF  F0D9         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3887  002238  C0D0  F0DA         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3888  00223C  0100               	movlb	0	; () banked
  3889  00223E  6BDB               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  3890  002240  6BDC               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  3891  002242  6BDD               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  3892  002244  6BDE               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  3893  002246  6BDF               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  3894  002248  6BE0               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  3895  00224A                     
  3896                           ; BSR set to: 0
  3897                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1209:            
      +                           return utoa(fp, llu);
  3898  00224A  C0C7  F060         	movff	vfpfcnvrt@fp,utoa@fp
  3899  00224E  C0C8  F061         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  3900  002252  C0D9  F062         	movff	vfpfcnvrt@llu,utoa@d
  3901  002256  C0DA  F063         	movff	vfpfcnvrt@llu+1,utoa@d+1
  3902  00225A  C0DB  F064         	movff	vfpfcnvrt@llu+2,utoa@d+2
  3903  00225E  C0DC  F065         	movff	vfpfcnvrt@llu+3,utoa@d+3
  3904  002262  C0DD  F066         	movff	vfpfcnvrt@llu+4,utoa@d+4
  3905  002266  C0DE  F067         	movff	vfpfcnvrt@llu+5,utoa@d+5
  3906  00226A  C0DF  F068         	movff	vfpfcnvrt@llu+6,utoa@d+6
  3907  00226E  C0E0  F069         	movff	vfpfcnvrt@llu+7,utoa@d+7
  3908  002272  EC99  F01B         	call	_utoa	;wreg free
  3909  002276  C060  F0C7         	movff	?_utoa,?_vfpfcnvrt
  3910  00227A  C061  F0C8         	movff	?_utoa+1,?_vfpfcnvrt+1
  3911  00227E  EFA4  F011         	goto	l2263
  3912  002282                     l8994:
  3913                           
  3914                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  3915  002282  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3916  002288  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3917  00228E  006F FF7B FFF6     	movff	postinc2,tblptrl
  3918  002294  006F FF77 FFF7     	movff	postdec2,tblptrh
  3919  00229A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3920  00229A  6AF8               	clrf	tblptru,c
  3921  00229C                     	endif
  3922  00229C                     	if	0	;tblptru may be non-zero
  3923  00229C                     	endif
  3924  00229C  0008               	tblrd		*
  3925  00229E  50F5               	movf	tablat,w,c
  3926  0022A0  0A25               	xorlw	37
  3927  0022A2  A4D8               	btfss	status,2,c
  3928  0022A4  EF56  F011         	goto	u10131
  3929  0022A8  EF58  F011         	goto	u10130
  3930  0022AC                     u10131:
  3931  0022AC  EF72  F011         	goto	l9004
  3932  0022B0                     u10130:
  3933  0022B0                     
  3934                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  3935  0022B0  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3936  0022B6  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3937  0022BC  2ADE               	incf	postinc2,f,c
  3938  0022BE  0E00               	movlw	0
  3939  0022C0  22DD               	addwfc	postdec2,f,c
  3940  0022C2                     
  3941                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  3942  0022C2  0E00               	movlw	0
  3943  0022C4  6E17               	movwf	(fputc@c+1)^0,c
  3944  0022C6  0E25               	movlw	37
  3945  0022C8  6E16               	movwf	fputc@c^0,c
  3946  0022CA  C0C7  F018         	movff	vfpfcnvrt@fp,fputc@fp
  3947  0022CE  C0C8  F019         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3948  0022D2  ECC0  F02A         	call	_fputc	;wreg free
  3949  0022D6                     l9000:
  3950                           
  3951                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  3952  0022D6  0E00               	movlw	0
  3953  0022D8  0100               	movlb	0	; () banked
  3954  0022DA  6FC8               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  3955  0022DC  0E01               	movlw	1
  3956  0022DE  6FC7               	movwf	?_vfpfcnvrt& (0+255),b
  3957  0022E0  EFA4  F011         	goto	l2263
  3958  0022E4                     l9004:
  3959                           
  3960                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  3961  0022E4  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3962  0022EA  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3963  0022F0  2ADE               	incf	postinc2,f,c
  3964  0022F2  0E00               	movlw	0
  3965  0022F4  22DD               	addwfc	postdec2,f,c
  3966  0022F6                     
  3967                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  3968  0022F6  0E00               	movlw	0
  3969  0022F8  0100               	movlb	0	; () banked
  3970  0022FA  6FC8               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  3971  0022FC  0E00               	movlw	0
  3972  0022FE  6FC7               	movwf	?_vfpfcnvrt& (0+255),b
  3973  002300  EFA4  F011         	goto	l2263
  3974  002304                     l9010:
  3975                           
  3976                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  3977  002304  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3978  00230A  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3979  002310  006F FF7B FFF6     	movff	postinc2,tblptrl
  3980  002316  006F FF77 FFF7     	movff	postdec2,tblptrh
  3981  00231C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3982  00231C  6AF8               	clrf	tblptru,c
  3983  00231E                     	endif
  3984  00231E                     	if	0	;tblptru may be non-zero
  3985  00231E                     	endif
  3986  00231E  0008               	tblrd		*
  3987  002320  50F5               	movf	tablat,w,c
  3988  002322  6E16               	movwf	fputc@c^0,c
  3989  002324  6A17               	clrf	(fputc@c+1)^0,c
  3990  002326  C0C7  F018         	movff	vfpfcnvrt@fp,fputc@fp
  3991  00232A  C0C8  F019         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3992  00232E  ECC0  F02A         	call	_fputc	;wreg free
  3993  002332                     
  3994                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  3995  002332  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3996  002338  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3997  00233E  2ADE               	incf	postinc2,f,c
  3998  002340  0E00               	movlw	0
  3999  002342  22DD               	addwfc	postdec2,f,c
  4000  002344  EF6B  F011         	goto	l9000
  4001  002348                     l2263:
  4002  002348  0012               	return		;funcret
  4003  00234A                     __end_of_vfpfcnvrt:
  4004                           	callstack 0
  4005                           
  4006 ;; *************** function _utoa *****************
  4007 ;; Defined at:
  4008 ;;		line 615 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4009 ;; Parameters:    Size  Location     Type
  4010 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  4011 ;;		 -> NULL(0), 
  4012 ;;  d               8    2[BANK0 ] unsigned long long 
  4013 ;; Auto vars:     Size  Location     Type
  4014 ;;  n               8   14[BANK0 ] unsigned long long 
  4015 ;;  i               2   22[BANK0 ] int 
  4016 ;;  w               2   12[BANK0 ] int 
  4017 ;;  p               2   10[BANK0 ] int 
  4018 ;; Return value:  Size  Location     Type
  4019 ;;                  2    0[BANK0 ] int 
  4020 ;; Registers used:
  4021 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4022 ;; Tracked objects:
  4023 ;;		On entry : 0/0
  4024 ;;		On exit  : 0/0
  4025 ;;		Unchanged: 0/0
  4026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4027 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4028 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4029 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4030 ;;      Totals:         8      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4031 ;;Total ram usage:       32 bytes
  4032 ;; Hardware stack levels used: 1
  4033 ;; Hardware stack levels required when called: 13
  4034 ;; This function calls:
  4035 ;;		___lodiv
  4036 ;;		___lomod
  4037 ;;		_pad
  4038 ;; This function is called by:
  4039 ;;		_vfpfcnvrt
  4040 ;; This function uses a non-reentrant model
  4041 ;;
  4042                           
  4043                           	psect	text12
  4044  003732                     __ptext12:
  4045                           	callstack 0
  4046  003732                     _utoa:
  4047                           	callstack 12
  4048  003732                     
  4049                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 615: static int u
      +                          toa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99
      +                          \common\doprnt.c: 616: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\dop
      +                          rnt.c: 617:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common
      +                          \doprnt.c: 618:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sourc
      +                          es\c99\common\doprnt.c: 621:     if (!(prec < 0)) {
  4050  003732  BE3D               	btfsc	(_prec+1)^0,7,c
  4051  003734  EF9E  F01B         	goto	u9901
  4052  003738  EFA0  F01B         	goto	u9900
  4053  00373C                     u9901:
  4054  00373C  EFA1  F01B         	goto	l8878
  4055  003740                     u9900:
  4056  003740                     
  4057                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 622:         flag
      +                          s &= ~(1 << 1);
  4058  003740  923E               	bcf	_flags^0,1,c
  4059  003742                     l8878:
  4060                           
  4061                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 624:     p = (0 <
      +                           prec) ? prec : 1;
  4062  003742  BE3D               	btfsc	(_prec+1)^0,7,c
  4063  003744  EFAE  F01B         	goto	u9910
  4064  003748  503D               	movf	(_prec+1)^0,w,c
  4065  00374A  E106               	bnz	u9911
  4066  00374C  043C               	decf	_prec^0,w,c
  4067  00374E  B0D8               	btfsc	status,0,c
  4068  003750  EFAC  F01B         	goto	u9911
  4069  003754  EFAE  F01B         	goto	u9910
  4070  003758                     u9911:
  4071  003758  EFB5  F01B         	goto	l2244
  4072  00375C                     u9910:
  4073  00375C  0E00               	movlw	0
  4074  00375E  0100               	movlb	0	; () banked
  4075  003760  6F6B               	movwf	(utoa@p+1)& (0+255),b
  4076  003762  0E01               	movlw	1
  4077  003764  6F6A               	movwf	utoa@p& (0+255),b
  4078  003766  EFB9  F01B         	goto	l2246
  4079  00376A                     l2244:
  4080  00376A  C03C  F06A         	movff	_prec,utoa@p
  4081  00376E  C03D  F06B         	movff	_prec+1,utoa@p+1
  4082  003772                     l2246:
  4083                           
  4084                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 625:     w = widt
      +                          h;
  4085  003772  C03A  F06C         	movff	_width,utoa@w
  4086  003776  C03B  F06D         	movff	_width+1,utoa@w+1
  4087                           
  4088                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 628:     n = d;
  4089  00377A  C062  F06E         	movff	utoa@d,utoa@n
  4090  00377E  C063  F06F         	movff	utoa@d+1,utoa@n+1
  4091  003782  C064  F070         	movff	utoa@d+2,utoa@n+2
  4092  003786  C065  F071         	movff	utoa@d+3,utoa@n+3
  4093  00378A  C066  F072         	movff	utoa@d+4,utoa@n+4
  4094  00378E  C067  F073         	movff	utoa@d+5,utoa@n+5
  4095  003792  C068  F074         	movff	utoa@d+6,utoa@n+6
  4096  003796  C069  F075         	movff	utoa@d+7,utoa@n+7
  4097  00379A                     
  4098                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 629:     i = size
      +                          of(dbuf) - 1;
  4099  00379A  0E00               	movlw	0
  4100  00379C  0100               	movlb	0	; () banked
  4101  00379E  6F77               	movwf	(utoa@i+1)& (0+255),b
  4102  0037A0  0E4F               	movlw	79
  4103  0037A2  6F76               	movwf	utoa@i& (0+255),b
  4104  0037A4                     
  4105                           ; BSR set to: 0
  4106                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 630:     dbuf[i] 
      +                          = '\0';
  4107  0037A4  0E00               	movlw	0
  4108  0037A6  0101               	movlb	1	; () banked
  4109  0037A8  6F8D               	movwf	(_dbuf+79)& (0+255),b
  4110                           
  4111                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4112  0037AA  EF4E  F01C         	goto	l8896
  4113  0037AE                     l8886:
  4114                           
  4115                           ; BSR set to: 0
  4116                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 632:         --i;
  4117  0037AE  0776               	decf	utoa@i& (0+255),f,b
  4118  0037B0  A0D8               	btfss	status,0,c
  4119  0037B2  0777               	decf	(utoa@i+1)& (0+255),f,b
  4120  0037B4                     
  4121                           ; BSR set to: 0
  4122                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 633:         dbuf
      +                          [i] = '0' + (n % 10);
  4123  0037B4  0E3E               	movlw	low _dbuf
  4124  0037B6  2576               	addwf	utoa@i& (0+255),w,b
  4125  0037B8  6ED9               	movwf	fsr2l,c
  4126  0037BA  0E01               	movlw	high _dbuf
  4127  0037BC  2177               	addwfc	(utoa@i+1)& (0+255),w,b
  4128  0037BE  6EDA               	movwf	fsr2h,c
  4129  0037C0  C06E  F014         	movff	utoa@n,___lomod@dividend
  4130  0037C4  C06F  F015         	movff	utoa@n+1,___lomod@dividend+1
  4131  0037C8  C070  F016         	movff	utoa@n+2,___lomod@dividend+2
  4132  0037CC  C071  F017         	movff	utoa@n+3,___lomod@dividend+3
  4133  0037D0  C072  F018         	movff	utoa@n+4,___lomod@dividend+4
  4134  0037D4  C073  F019         	movff	utoa@n+5,___lomod@dividend+5
  4135  0037D8  C074  F01A         	movff	utoa@n+6,___lomod@dividend+6
  4136  0037DC  C075  F01B         	movff	utoa@n+7,___lomod@dividend+7
  4137  0037E0  0E0A               	movlw	10
  4138  0037E2  6E1C               	movwf	___lomod@divisor^0,c
  4139  0037E4  0E00               	movlw	0
  4140  0037E6  6E1D               	movwf	(___lomod@divisor+1)^0,c
  4141  0037E8  0E00               	movlw	0
  4142  0037EA  6E1E               	movwf	(___lomod@divisor+2)^0,c
  4143  0037EC  0E00               	movlw	0
  4144  0037EE  6E1F               	movwf	(___lomod@divisor+3)^0,c
  4145  0037F0  0E00               	movlw	0
  4146  0037F2  6E20               	movwf	(___lomod@divisor+4)^0,c
  4147  0037F4  0E00               	movlw	0
  4148  0037F6  6E21               	movwf	(___lomod@divisor+5)^0,c
  4149  0037F8  0E00               	movlw	0
  4150  0037FA  6E22               	movwf	(___lomod@divisor+6)^0,c
  4151  0037FC  0E00               	movlw	0
  4152  0037FE  6E23               	movwf	(___lomod@divisor+7)^0,c
  4153  003800  EC1B  F027         	call	___lomod	;wreg free
  4154  003804  C014  F031         	movff	?___lomod,??_utoa
  4155  003808  C015  F032         	movff	?___lomod+1,??_utoa+1
  4156  00380C  C016  F033         	movff	?___lomod+2,??_utoa+2
  4157  003810  C017  F034         	movff	?___lomod+3,??_utoa+3
  4158  003814  C018  F035         	movff	?___lomod+4,??_utoa+4
  4159  003818  C019  F036         	movff	?___lomod+5,??_utoa+5
  4160  00381C  C01A  F037         	movff	?___lomod+6,??_utoa+6
  4161  003820  C01B  F038         	movff	?___lomod+7,??_utoa+7
  4162  003824  5031               	movf	??_utoa^0,w,c
  4163  003826  0F30               	addlw	48
  4164  003828  6EDF               	movwf	indf2,c
  4165  00382A                     
  4166                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 634:         --p;
  4167  00382A  0100               	movlb	0	; () banked
  4168  00382C  076A               	decf	utoa@p& (0+255),f,b
  4169  00382E  A0D8               	btfss	status,0,c
  4170  003830  076B               	decf	(utoa@p+1)& (0+255),f,b
  4171  003832                     
  4172                           ; BSR set to: 0
  4173                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 635:         --w;
  4174  003832  076C               	decf	utoa@w& (0+255),f,b
  4175  003834  A0D8               	btfss	status,0,c
  4176  003836  076D               	decf	(utoa@w+1)& (0+255),f,b
  4177  003838                     
  4178                           ; BSR set to: 0
  4179                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 636:         n = 
      +                          n / 10;
  4180  003838  C06E  F014         	movff	utoa@n,___lodiv@dividend
  4181  00383C  C06F  F015         	movff	utoa@n+1,___lodiv@dividend+1
  4182  003840  C070  F016         	movff	utoa@n+2,___lodiv@dividend+2
  4183  003844  C071  F017         	movff	utoa@n+3,___lodiv@dividend+3
  4184  003848  C072  F018         	movff	utoa@n+4,___lodiv@dividend+4
  4185  00384C  C073  F019         	movff	utoa@n+5,___lodiv@dividend+5
  4186  003850  C074  F01A         	movff	utoa@n+6,___lodiv@dividend+6
  4187  003854  C075  F01B         	movff	utoa@n+7,___lodiv@dividend+7
  4188  003858  0E0A               	movlw	10
  4189  00385A  6E1C               	movwf	___lodiv@divisor^0,c
  4190  00385C  0E00               	movlw	0
  4191  00385E  6E1D               	movwf	(___lodiv@divisor+1)^0,c
  4192  003860  0E00               	movlw	0
  4193  003862  6E1E               	movwf	(___lodiv@divisor+2)^0,c
  4194  003864  0E00               	movlw	0
  4195  003866  6E1F               	movwf	(___lodiv@divisor+3)^0,c
  4196  003868  0E00               	movlw	0
  4197  00386A  6E20               	movwf	(___lodiv@divisor+4)^0,c
  4198  00386C  0E00               	movlw	0
  4199  00386E  6E21               	movwf	(___lodiv@divisor+5)^0,c
  4200  003870  0E00               	movlw	0
  4201  003872  6E22               	movwf	(___lodiv@divisor+6)^0,c
  4202  003874  0E00               	movlw	0
  4203  003876  6E23               	movwf	(___lodiv@divisor+7)^0,c
  4204  003878  EC32  F026         	call	___lodiv	;wreg free
  4205  00387C  C014  F06E         	movff	?___lodiv,utoa@n
  4206  003880  C015  F06F         	movff	?___lodiv+1,utoa@n+1
  4207  003884  C016  F070         	movff	?___lodiv+2,utoa@n+2
  4208  003888  C017  F071         	movff	?___lodiv+3,utoa@n+3
  4209  00388C  C018  F072         	movff	?___lodiv+4,utoa@n+4
  4210  003890  C019  F073         	movff	?___lodiv+5,utoa@n+5
  4211  003894  C01A  F074         	movff	?___lodiv+6,utoa@n+6
  4212  003898  C01B  F075         	movff	?___lodiv+7,utoa@n+7
  4213  00389C                     l8896:
  4214                           
  4215                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4216  00389C  0100               	movlb	0	; () banked
  4217  00389E  5176               	movf	utoa@i& (0+255),w,b
  4218  0038A0  1177               	iorwf	(utoa@i+1)& (0+255),w,b
  4219  0038A2  B4D8               	btfsc	status,2,c
  4220  0038A4  EF56  F01C         	goto	u9921
  4221  0038A8  EF58  F01C         	goto	u9920
  4222  0038AC                     u9921:
  4223  0038AC  EF88  F01C         	goto	l8906
  4224  0038B0                     u9920:
  4225  0038B0                     
  4226                           ; BSR set to: 0
  4227  0038B0  516E               	movf	utoa@n& (0+255),w,b
  4228  0038B2  116F               	iorwf	(utoa@n+1)& (0+255),w,b
  4229  0038B4  1170               	iorwf	(utoa@n+2)& (0+255),w,b
  4230  0038B6  1171               	iorwf	(utoa@n+3)& (0+255),w,b
  4231  0038B8  1172               	iorwf	(utoa@n+4)& (0+255),w,b
  4232  0038BA  1173               	iorwf	(utoa@n+5)& (0+255),w,b
  4233  0038BC  1174               	iorwf	(utoa@n+6)& (0+255),w,b
  4234  0038BE  1175               	iorwf	(utoa@n+7)& (0+255),w,b
  4235  0038C0  A4D8               	btfss	status,2,c
  4236  0038C2  EF65  F01C         	goto	u9931
  4237  0038C6  EF67  F01C         	goto	u9930
  4238  0038CA                     u9931:
  4239  0038CA  EFD7  F01B         	goto	l8886
  4240  0038CE                     u9930:
  4241  0038CE                     
  4242                           ; BSR set to: 0
  4243  0038CE  BF6B               	btfsc	(utoa@p+1)& (0+255),7,b
  4244  0038D0  EF74  F01C         	goto	u9940
  4245  0038D4  516B               	movf	(utoa@p+1)& (0+255),w,b
  4246  0038D6  E106               	bnz	u9941
  4247  0038D8  056A               	decf	utoa@p& (0+255),w,b
  4248  0038DA  B0D8               	btfsc	status,0,c
  4249  0038DC  EF72  F01C         	goto	u9941
  4250  0038E0  EF74  F01C         	goto	u9940
  4251  0038E4                     u9941:
  4252  0038E4  EFD7  F01B         	goto	l8886
  4253  0038E8                     u9940:
  4254  0038E8                     
  4255                           ; BSR set to: 0
  4256  0038E8  BF6D               	btfsc	(utoa@w+1)& (0+255),7,b
  4257  0038EA  EF7F  F01C         	goto	u9951
  4258  0038EE  516D               	movf	(utoa@w+1)& (0+255),w,b
  4259  0038F0  E108               	bnz	u9950
  4260  0038F2  056C               	decf	utoa@w& (0+255),w,b
  4261  0038F4  A0D8               	btfss	status,0,c
  4262  0038F6  EF7F  F01C         	goto	u9951
  4263  0038FA  EF81  F01C         	goto	u9950
  4264  0038FE                     u9951:
  4265  0038FE  EF88  F01C         	goto	l8906
  4266  003902                     u9950:
  4267  003902                     
  4268                           ; BSR set to: 0
  4269  003902  B23E               	btfsc	_flags^0,1,c
  4270  003904  EF86  F01C         	goto	u9961
  4271  003908  EF88  F01C         	goto	u9960
  4272  00390C                     u9961:
  4273  00390C  EFD7  F01B         	goto	l8886
  4274  003910                     u9960:
  4275  003910                     l8906:
  4276                           
  4277                           ; BSR set to: 0
  4278                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 640:     return p
      +                          ad(fp, &dbuf[i], w);
  4279  003910  C060  F026         	movff	utoa@fp,pad@fp
  4280  003914  C061  F027         	movff	utoa@fp+1,pad@fp+1
  4281  003918  0E3E               	movlw	low _dbuf
  4282  00391A  2576               	addwf	utoa@i& (0+255),w,b
  4283  00391C  6E28               	movwf	pad@buf^0,c
  4284  00391E  0E01               	movlw	high _dbuf
  4285  003920  2177               	addwfc	(utoa@i+1)& (0+255),w,b
  4286  003922  6E29               	movwf	(pad@buf+1)^0,c
  4287  003924  C06C  F02A         	movff	utoa@w,pad@p
  4288  003928  C06D  F02B         	movff	utoa@w+1,pad@p+1
  4289  00392C  ECB0  F028         	call	_pad	;wreg free
  4290  003930  C026  F060         	movff	?_pad,?_utoa
  4291  003934  C027  F061         	movff	?_pad+1,?_utoa+1
  4292  003938  0012               	return		;funcret
  4293  00393A                     __end_of_utoa:
  4294                           	callstack 0
  4295                           
  4296 ;; *************** function ___lomod *****************
  4297 ;; Defined at:
  4298 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lomod.c"
  4299 ;; Parameters:    Size  Location     Type
  4300 ;;  dividend        8   19[COMRAM] unsigned long long 
  4301 ;;  divisor         8   27[COMRAM] unsigned long long 
  4302 ;; Auto vars:     Size  Location     Type
  4303 ;;  counter         1   35[COMRAM] unsigned char 
  4304 ;; Return value:  Size  Location     Type
  4305 ;;                  8   19[COMRAM] unsigned long long 
  4306 ;; Registers used:
  4307 ;;		wreg, status,2, status,0
  4308 ;; Tracked objects:
  4309 ;;		On entry : 0/0
  4310 ;;		On exit  : 0/0
  4311 ;;		Unchanged: 0/0
  4312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4313 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4314 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4316 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4317 ;;Total ram usage:       17 bytes
  4318 ;; Hardware stack levels used: 1
  4319 ;; Hardware stack levels required when called: 8
  4320 ;; This function calls:
  4321 ;;		Nothing
  4322 ;; This function is called by:
  4323 ;;		_utoa
  4324 ;; This function uses a non-reentrant model
  4325 ;;
  4326                           
  4327                           	psect	text13
  4328  004E36                     __ptext13:
  4329                           	callstack 0
  4330  004E36                     ___lomod:
  4331                           	callstack 16
  4332  004E36  501C               	movf	___lomod@divisor^0,w,c
  4333  004E38  101D               	iorwf	(___lomod@divisor+1)^0,w,c
  4334  004E3A  101E               	iorwf	(___lomod@divisor+2)^0,w,c
  4335  004E3C  101F               	iorwf	(___lomod@divisor+3)^0,w,c
  4336  004E3E  1020               	iorwf	(___lomod@divisor+4)^0,w,c
  4337  004E40  1021               	iorwf	(___lomod@divisor+5)^0,w,c
  4338  004E42  1022               	iorwf	(___lomod@divisor+6)^0,w,c
  4339  004E44  1023               	iorwf	(___lomod@divisor+7)^0,w,c
  4340  004E46  B4D8               	btfsc	status,2,c
  4341  004E48  EF28  F027         	goto	u8911
  4342  004E4C  EF2A  F027         	goto	u8910
  4343  004E50                     u8911:
  4344  004E50  EF72  F027         	goto	l1846
  4345  004E54                     u8910:
  4346  004E54  0E01               	movlw	1
  4347  004E56  6E24               	movwf	___lomod@counter^0,c
  4348  004E58  EF38  F027         	goto	l8404
  4349  004E5C                     l8402:
  4350  004E5C  90D8               	bcf	status,0,c
  4351  004E5E  361C               	rlcf	___lomod@divisor^0,f,c
  4352  004E60  361D               	rlcf	(___lomod@divisor+1)^0,f,c
  4353  004E62  361E               	rlcf	(___lomod@divisor+2)^0,f,c
  4354  004E64  361F               	rlcf	(___lomod@divisor+3)^0,f,c
  4355  004E66  3620               	rlcf	(___lomod@divisor+4)^0,f,c
  4356  004E68  3621               	rlcf	(___lomod@divisor+5)^0,f,c
  4357  004E6A  3622               	rlcf	(___lomod@divisor+6)^0,f,c
  4358  004E6C  3623               	rlcf	(___lomod@divisor+7)^0,f,c
  4359  004E6E  2A24               	incf	___lomod@counter^0,f,c
  4360  004E70                     l8404:
  4361  004E70  AE23               	btfss	(___lomod@divisor+7)^0,7,c
  4362  004E72  EF3D  F027         	goto	u8921
  4363  004E76  EF3F  F027         	goto	u8920
  4364  004E7A                     u8921:
  4365  004E7A  EF2E  F027         	goto	l8402
  4366  004E7E                     u8920:
  4367  004E7E                     l8406:
  4368  004E7E  501C               	movf	___lomod@divisor^0,w,c
  4369  004E80  5C14               	subwf	___lomod@dividend^0,w,c
  4370  004E82  501D               	movf	(___lomod@divisor+1)^0,w,c
  4371  004E84  5815               	subwfb	(___lomod@dividend+1)^0,w,c
  4372  004E86  501E               	movf	(___lomod@divisor+2)^0,w,c
  4373  004E88  5816               	subwfb	(___lomod@dividend+2)^0,w,c
  4374  004E8A  501F               	movf	(___lomod@divisor+3)^0,w,c
  4375  004E8C  5817               	subwfb	(___lomod@dividend+3)^0,w,c
  4376  004E8E  5020               	movf	(___lomod@divisor+4)^0,w,c
  4377  004E90  5818               	subwfb	(___lomod@dividend+4)^0,w,c
  4378  004E92  5021               	movf	(___lomod@divisor+5)^0,w,c
  4379  004E94  5819               	subwfb	(___lomod@dividend+5)^0,w,c
  4380  004E96  5022               	movf	(___lomod@divisor+6)^0,w,c
  4381  004E98  581A               	subwfb	(___lomod@dividend+6)^0,w,c
  4382  004E9A  5023               	movf	(___lomod@divisor+7)^0,w,c
  4383  004E9C  581B               	subwfb	(___lomod@dividend+7)^0,w,c
  4384  004E9E  A0D8               	btfss	status,0,c
  4385  004EA0  EF54  F027         	goto	u8931
  4386  004EA4  EF56  F027         	goto	u8930
  4387  004EA8                     u8931:
  4388  004EA8  EF66  F027         	goto	l8410
  4389  004EAC                     u8930:
  4390  004EAC  501C               	movf	___lomod@divisor^0,w,c
  4391  004EAE  5E14               	subwf	___lomod@dividend^0,f,c
  4392  004EB0  501D               	movf	(___lomod@divisor+1)^0,w,c
  4393  004EB2  5A15               	subwfb	(___lomod@dividend+1)^0,f,c
  4394  004EB4  501E               	movf	(___lomod@divisor+2)^0,w,c
  4395  004EB6  5A16               	subwfb	(___lomod@dividend+2)^0,f,c
  4396  004EB8  501F               	movf	(___lomod@divisor+3)^0,w,c
  4397  004EBA  5A17               	subwfb	(___lomod@dividend+3)^0,f,c
  4398  004EBC  5020               	movf	(___lomod@divisor+4)^0,w,c
  4399  004EBE  5A18               	subwfb	(___lomod@dividend+4)^0,f,c
  4400  004EC0  5021               	movf	(___lomod@divisor+5)^0,w,c
  4401  004EC2  5A19               	subwfb	(___lomod@dividend+5)^0,f,c
  4402  004EC4  5022               	movf	(___lomod@divisor+6)^0,w,c
  4403  004EC6  5A1A               	subwfb	(___lomod@dividend+6)^0,f,c
  4404  004EC8  5023               	movf	(___lomod@divisor+7)^0,w,c
  4405  004ECA  5A1B               	subwfb	(___lomod@dividend+7)^0,f,c
  4406  004ECC                     l8410:
  4407  004ECC  90D8               	bcf	status,0,c
  4408  004ECE  3223               	rrcf	(___lomod@divisor+7)^0,f,c
  4409  004ED0  3222               	rrcf	(___lomod@divisor+6)^0,f,c
  4410  004ED2  3221               	rrcf	(___lomod@divisor+5)^0,f,c
  4411  004ED4  3220               	rrcf	(___lomod@divisor+4)^0,f,c
  4412  004ED6  321F               	rrcf	(___lomod@divisor+3)^0,f,c
  4413  004ED8  321E               	rrcf	(___lomod@divisor+2)^0,f,c
  4414  004EDA  321D               	rrcf	(___lomod@divisor+1)^0,f,c
  4415  004EDC  321C               	rrcf	___lomod@divisor^0,f,c
  4416  004EDE  2E24               	decfsz	___lomod@counter^0,f,c
  4417  004EE0  EF3F  F027         	goto	l8406
  4418  004EE4                     l1846:
  4419  004EE4  C014  F014         	movff	___lomod@dividend,?___lomod
  4420  004EE8  C015  F015         	movff	___lomod@dividend+1,?___lomod+1
  4421  004EEC  C016  F016         	movff	___lomod@dividend+2,?___lomod+2
  4422  004EF0  C017  F017         	movff	___lomod@dividend+3,?___lomod+3
  4423  004EF4  C018  F018         	movff	___lomod@dividend+4,?___lomod+4
  4424  004EF8  C019  F019         	movff	___lomod@dividend+5,?___lomod+5
  4425  004EFC  C01A  F01A         	movff	___lomod@dividend+6,?___lomod+6
  4426  004F00  C01B  F01B         	movff	___lomod@dividend+7,?___lomod+7
  4427  004F04  0012               	return		;funcret
  4428  004F06                     __end_of___lomod:
  4429                           	callstack 0
  4430                           
  4431 ;; *************** function ___lodiv *****************
  4432 ;; Defined at:
  4433 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lodiv.c"
  4434 ;; Parameters:    Size  Location     Type
  4435 ;;  dividend        8   19[COMRAM] unsigned long long 
  4436 ;;  divisor         8   27[COMRAM] unsigned long long 
  4437 ;; Auto vars:     Size  Location     Type
  4438 ;;  quotient        8   35[COMRAM] unsigned long long 
  4439 ;;  counter         1   43[COMRAM] unsigned char 
  4440 ;; Return value:  Size  Location     Type
  4441 ;;                  8   19[COMRAM] unsigned long long 
  4442 ;; Registers used:
  4443 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4444 ;; Tracked objects:
  4445 ;;		On entry : 0/0
  4446 ;;		On exit  : 0/0
  4447 ;;		Unchanged: 0/0
  4448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4449 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4450 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4452 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4453 ;;Total ram usage:       25 bytes
  4454 ;; Hardware stack levels used: 1
  4455 ;; Hardware stack levels required when called: 8
  4456 ;; This function calls:
  4457 ;;		Nothing
  4458 ;; This function is called by:
  4459 ;;		_utoa
  4460 ;; This function uses a non-reentrant model
  4461 ;;
  4462                           
  4463                           	psect	text14
  4464  004C64                     __ptext14:
  4465                           	callstack 0
  4466  004C64                     ___lodiv:
  4467                           	callstack 16
  4468  004C64  EE20  F024         	lfsr	2,___lodiv@quotient
  4469  004C68  0E07               	movlw	7
  4470  004C6A                     u8871:
  4471  004C6A  6ADE               	clrf	postinc2,c
  4472  004C6C  06E8               	decf	wreg,f,c
  4473  004C6E  E2FD               	bc	u8871
  4474  004C70  501C               	movf	___lodiv@divisor^0,w,c
  4475  004C72  101D               	iorwf	(___lodiv@divisor+1)^0,w,c
  4476  004C74  101E               	iorwf	(___lodiv@divisor+2)^0,w,c
  4477  004C76  101F               	iorwf	(___lodiv@divisor+3)^0,w,c
  4478  004C78  1020               	iorwf	(___lodiv@divisor+4)^0,w,c
  4479  004C7A  1021               	iorwf	(___lodiv@divisor+5)^0,w,c
  4480  004C7C  1022               	iorwf	(___lodiv@divisor+6)^0,w,c
  4481  004C7E  1023               	iorwf	(___lodiv@divisor+7)^0,w,c
  4482  004C80  B4D8               	btfsc	status,2,c
  4483  004C82  EF45  F026         	goto	u8881
  4484  004C86  EF47  F026         	goto	u8880
  4485  004C8A                     u8881:
  4486  004C8A  EF99  F026         	goto	l1836
  4487  004C8E                     u8880:
  4488  004C8E  0E01               	movlw	1
  4489  004C90  6E2C               	movwf	___lodiv@counter^0,c
  4490  004C92  EF55  F026         	goto	l8384
  4491  004C96                     l8382:
  4492  004C96  90D8               	bcf	status,0,c
  4493  004C98  361C               	rlcf	___lodiv@divisor^0,f,c
  4494  004C9A  361D               	rlcf	(___lodiv@divisor+1)^0,f,c
  4495  004C9C  361E               	rlcf	(___lodiv@divisor+2)^0,f,c
  4496  004C9E  361F               	rlcf	(___lodiv@divisor+3)^0,f,c
  4497  004CA0  3620               	rlcf	(___lodiv@divisor+4)^0,f,c
  4498  004CA2  3621               	rlcf	(___lodiv@divisor+5)^0,f,c
  4499  004CA4  3622               	rlcf	(___lodiv@divisor+6)^0,f,c
  4500  004CA6  3623               	rlcf	(___lodiv@divisor+7)^0,f,c
  4501  004CA8  2A2C               	incf	___lodiv@counter^0,f,c
  4502  004CAA                     l8384:
  4503  004CAA  AE23               	btfss	(___lodiv@divisor+7)^0,7,c
  4504  004CAC  EF5A  F026         	goto	u8891
  4505  004CB0  EF5C  F026         	goto	u8890
  4506  004CB4                     u8891:
  4507  004CB4  EF4B  F026         	goto	l8382
  4508  004CB8                     u8890:
  4509  004CB8                     l8386:
  4510  004CB8  90D8               	bcf	status,0,c
  4511  004CBA  3624               	rlcf	___lodiv@quotient^0,f,c
  4512  004CBC  3625               	rlcf	(___lodiv@quotient+1)^0,f,c
  4513  004CBE  3626               	rlcf	(___lodiv@quotient+2)^0,f,c
  4514  004CC0  3627               	rlcf	(___lodiv@quotient+3)^0,f,c
  4515  004CC2  3628               	rlcf	(___lodiv@quotient+4)^0,f,c
  4516  004CC4  3629               	rlcf	(___lodiv@quotient+5)^0,f,c
  4517  004CC6  362A               	rlcf	(___lodiv@quotient+6)^0,f,c
  4518  004CC8  362B               	rlcf	(___lodiv@quotient+7)^0,f,c
  4519  004CCA  501C               	movf	___lodiv@divisor^0,w,c
  4520  004CCC  5C14               	subwf	___lodiv@dividend^0,w,c
  4521  004CCE  501D               	movf	(___lodiv@divisor+1)^0,w,c
  4522  004CD0  5815               	subwfb	(___lodiv@dividend+1)^0,w,c
  4523  004CD2  501E               	movf	(___lodiv@divisor+2)^0,w,c
  4524  004CD4  5816               	subwfb	(___lodiv@dividend+2)^0,w,c
  4525  004CD6  501F               	movf	(___lodiv@divisor+3)^0,w,c
  4526  004CD8  5817               	subwfb	(___lodiv@dividend+3)^0,w,c
  4527  004CDA  5020               	movf	(___lodiv@divisor+4)^0,w,c
  4528  004CDC  5818               	subwfb	(___lodiv@dividend+4)^0,w,c
  4529  004CDE  5021               	movf	(___lodiv@divisor+5)^0,w,c
  4530  004CE0  5819               	subwfb	(___lodiv@dividend+5)^0,w,c
  4531  004CE2  5022               	movf	(___lodiv@divisor+6)^0,w,c
  4532  004CE4  581A               	subwfb	(___lodiv@dividend+6)^0,w,c
  4533  004CE6  5023               	movf	(___lodiv@divisor+7)^0,w,c
  4534  004CE8  581B               	subwfb	(___lodiv@dividend+7)^0,w,c
  4535  004CEA  A0D8               	btfss	status,0,c
  4536  004CEC  EF7A  F026         	goto	u8901
  4537  004CF0  EF7C  F026         	goto	u8900
  4538  004CF4                     u8901:
  4539  004CF4  EF8D  F026         	goto	l8394
  4540  004CF8                     u8900:
  4541  004CF8  501C               	movf	___lodiv@divisor^0,w,c
  4542  004CFA  5E14               	subwf	___lodiv@dividend^0,f,c
  4543  004CFC  501D               	movf	(___lodiv@divisor+1)^0,w,c
  4544  004CFE  5A15               	subwfb	(___lodiv@dividend+1)^0,f,c
  4545  004D00  501E               	movf	(___lodiv@divisor+2)^0,w,c
  4546  004D02  5A16               	subwfb	(___lodiv@dividend+2)^0,f,c
  4547  004D04  501F               	movf	(___lodiv@divisor+3)^0,w,c
  4548  004D06  5A17               	subwfb	(___lodiv@dividend+3)^0,f,c
  4549  004D08  5020               	movf	(___lodiv@divisor+4)^0,w,c
  4550  004D0A  5A18               	subwfb	(___lodiv@dividend+4)^0,f,c
  4551  004D0C  5021               	movf	(___lodiv@divisor+5)^0,w,c
  4552  004D0E  5A19               	subwfb	(___lodiv@dividend+5)^0,f,c
  4553  004D10  5022               	movf	(___lodiv@divisor+6)^0,w,c
  4554  004D12  5A1A               	subwfb	(___lodiv@dividend+6)^0,f,c
  4555  004D14  5023               	movf	(___lodiv@divisor+7)^0,w,c
  4556  004D16  5A1B               	subwfb	(___lodiv@dividend+7)^0,f,c
  4557  004D18  8024               	bsf	___lodiv@quotient^0,0,c
  4558  004D1A                     l8394:
  4559  004D1A  90D8               	bcf	status,0,c
  4560  004D1C  3223               	rrcf	(___lodiv@divisor+7)^0,f,c
  4561  004D1E  3222               	rrcf	(___lodiv@divisor+6)^0,f,c
  4562  004D20  3221               	rrcf	(___lodiv@divisor+5)^0,f,c
  4563  004D22  3220               	rrcf	(___lodiv@divisor+4)^0,f,c
  4564  004D24  321F               	rrcf	(___lodiv@divisor+3)^0,f,c
  4565  004D26  321E               	rrcf	(___lodiv@divisor+2)^0,f,c
  4566  004D28  321D               	rrcf	(___lodiv@divisor+1)^0,f,c
  4567  004D2A  321C               	rrcf	___lodiv@divisor^0,f,c
  4568  004D2C  2E2C               	decfsz	___lodiv@counter^0,f,c
  4569  004D2E  EF5C  F026         	goto	l8386
  4570  004D32                     l1836:
  4571  004D32  C024  F014         	movff	___lodiv@quotient,?___lodiv
  4572  004D36  C025  F015         	movff	___lodiv@quotient+1,?___lodiv+1
  4573  004D3A  C026  F016         	movff	___lodiv@quotient+2,?___lodiv+2
  4574  004D3E  C027  F017         	movff	___lodiv@quotient+3,?___lodiv+3
  4575  004D42  C028  F018         	movff	___lodiv@quotient+4,?___lodiv+4
  4576  004D46  C029  F019         	movff	___lodiv@quotient+5,?___lodiv+5
  4577  004D4A  C02A  F01A         	movff	___lodiv@quotient+6,?___lodiv+6
  4578  004D4E  C02B  F01B         	movff	___lodiv@quotient+7,?___lodiv+7
  4579  004D52  0012               	return		;funcret
  4580  004D54                     __end_of___lodiv:
  4581                           	callstack 0
  4582                           
  4583 ;; *************** function _strncmp *****************
  4584 ;; Defined at:
  4585 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strncmp.c"
  4586 ;; Parameters:    Size  Location     Type
  4587 ;;  _l              2   19[COMRAM] PTR const unsigned char 
  4588 ;;		 -> vfpfcnvrt@ct(3), 
  4589 ;;  _r              2   21[COMRAM] PTR const unsigned char 
  4590 ;;		 -> STR_20(3), 
  4591 ;;  n               2   23[COMRAM] unsigned int 
  4592 ;; Auto vars:     Size  Location     Type
  4593 ;;  r               2   28[COMRAM] PTR const unsigned char 
  4594 ;;		 -> STR_20(3), 
  4595 ;;  l               2   26[COMRAM] PTR const unsigned char 
  4596 ;;		 -> vfpfcnvrt@ct(3), 
  4597 ;; Return value:  Size  Location     Type
  4598 ;;                  2   19[COMRAM] int 
  4599 ;; Registers used:
  4600 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4601 ;; Tracked objects:
  4602 ;;		On entry : 0/0
  4603 ;;		On exit  : 0/0
  4604 ;;		Unchanged: 0/0
  4605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4606 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4607 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4608 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4609 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4610 ;;Total ram usage:       11 bytes
  4611 ;; Hardware stack levels used: 1
  4612 ;; Hardware stack levels required when called: 8
  4613 ;; This function calls:
  4614 ;;		Nothing
  4615 ;; This function is called by:
  4616 ;;		_vfpfcnvrt
  4617 ;; This function uses a non-reentrant model
  4618 ;;
  4619                           
  4620                           	psect	text15
  4621  004B70                     __ptext15:
  4622                           	callstack 0
  4623  004B70                     _strncmp:
  4624                           	callstack 17
  4625  004B70  C014  F01B         	movff	strncmp@_l,strncmp@l
  4626  004B74  C015  F01C         	movff	strncmp@_l+1,strncmp@l+1
  4627  004B78  C016  F01D         	movff	strncmp@_r,strncmp@r
  4628  004B7C  C017  F01E         	movff	strncmp@_r+1,strncmp@r+1
  4629  004B80  0618               	decf	strncmp@n^0,f,c
  4630  004B82  A0D8               	btfss	status,0,c
  4631  004B84  0619               	decf	(strncmp@n+1)^0,f,c
  4632  004B86  2818               	incf	strncmp@n^0,w,c
  4633  004B88  E106               	bnz	u9971
  4634  004B8A  2819               	incf	(strncmp@n+1)^0,w,c
  4635  004B8C  A4D8               	btfss	status,2,c
  4636  004B8E  EFCB  F025         	goto	u9971
  4637  004B92  EFCD  F025         	goto	u9970
  4638  004B96                     u9971:
  4639  004B96  EFDA  F025         	goto	l8918
  4640  004B9A                     u9970:
  4641  004B9A  0E00               	movlw	0
  4642  004B9C  6E15               	movwf	(?_strncmp+1)^0,c
  4643  004B9E  0E00               	movlw	0
  4644  004BA0  6E14               	movwf	?_strncmp^0,c
  4645  004BA2  EF31  F026         	goto	l2352
  4646  004BA6                     l8916:
  4647  004BA6  4A1B               	infsnz	strncmp@l^0,f,c
  4648  004BA8  2A1C               	incf	(strncmp@l+1)^0,f,c
  4649  004BAA  4A1D               	infsnz	strncmp@r^0,f,c
  4650  004BAC  2A1E               	incf	(strncmp@r+1)^0,f,c
  4651  004BAE  0618               	decf	strncmp@n^0,f,c
  4652  004BB0  A0D8               	btfss	status,0,c
  4653  004BB2  0619               	decf	(strncmp@n+1)^0,f,c
  4654  004BB4                     l8918:
  4655  004BB4  0060  F06F  FFD9   	movff	strncmp@l,fsr2l
  4656  004BBA  0060  F073  FFDA   	movff	strncmp@l+1,fsr2h
  4657  004BC0  50DF               	movf	indf2,w,c
  4658  004BC2  B4D8               	btfsc	status,2,c
  4659  004BC4  EFE6  F025         	goto	u9981
  4660  004BC8  EFE8  F025         	goto	u9980
  4661  004BCC                     u9981:
  4662  004BCC  EF1B  F026         	goto	l8926
  4663  004BD0                     u9980:
  4664  004BD0  0060  F077  FFF6   	movff	strncmp@r,tblptrl
  4665  004BD6  0060  F07B  FFF7   	movff	strncmp@r+1,tblptrh
  4666  004BDC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4667  004BDC  6AF8               	clrf	tblptru,c
  4668  004BDE                     	endif
  4669  004BDE                     	if	0	;tblptru may be non-zero
  4670  004BDE                     	endif
  4671  004BDE  0008               	tblrd		*
  4672  004BE0  50F5               	movf	tablat,w,c
  4673  004BE2  0900               	iorlw	0
  4674  004BE4  B4D8               	btfsc	status,2,c
  4675  004BE6  EFF7  F025         	goto	u9991
  4676  004BEA  EFF9  F025         	goto	u9990
  4677  004BEE                     u9991:
  4678  004BEE  EF1B  F026         	goto	l8926
  4679  004BF2                     u9990:
  4680  004BF2  5018               	movf	strncmp@n^0,w,c
  4681  004BF4  1019               	iorwf	(strncmp@n+1)^0,w,c
  4682  004BF6  B4D8               	btfsc	status,2,c
  4683  004BF8  EF00  F026         	goto	u10001
  4684  004BFC  EF02  F026         	goto	u10000
  4685  004C00                     u10001:
  4686  004C00  EF1B  F026         	goto	l8926
  4687  004C04                     u10000:
  4688  004C04  0060  F06F  FFD9   	movff	strncmp@l,fsr2l
  4689  004C0A  0060  F073  FFDA   	movff	strncmp@l+1,fsr2h
  4690  004C10  50DF               	movf	indf2,w,c
  4691  004C12  6E1A               	movwf	??_strncmp^0,c
  4692  004C14  0060  F077  FFF6   	movff	strncmp@r,tblptrl
  4693  004C1A  0060  F07B  FFF7   	movff	strncmp@r+1,tblptrh
  4694  004C20                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4695  004C20  6AF8               	clrf	tblptru,c
  4696  004C22                     	endif
  4697  004C22                     	if	0	;tblptru may be non-zero
  4698  004C22                     	endif
  4699  004C22  0008               	tblrd		*
  4700  004C24  50F5               	movf	tablat,w,c
  4701  004C26  181A               	xorwf	??_strncmp^0,w,c
  4702  004C28  B4D8               	btfsc	status,2,c
  4703  004C2A  EF19  F026         	goto	u10011
  4704  004C2E  EF1B  F026         	goto	u10010
  4705  004C32                     u10011:
  4706  004C32  EFD3  F025         	goto	l8916
  4707  004C36                     u10010:
  4708  004C36                     l8926:
  4709  004C36  0060  F06F  FFD9   	movff	strncmp@l,fsr2l
  4710  004C3C  0060  F073  FFDA   	movff	strncmp@l+1,fsr2h
  4711  004C42  50DF               	movf	indf2,w,c
  4712  004C44  6E1A               	movwf	??_strncmp^0,c
  4713  004C46  0060  F077  FFF6   	movff	strncmp@r,tblptrl
  4714  004C4C  0060  F07B  FFF7   	movff	strncmp@r+1,tblptrh
  4715  004C52                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4716  004C52  6AF8               	clrf	tblptru,c
  4717  004C54                     	endif
  4718  004C54                     	if	0	;tblptru may be non-zero
  4719  004C54                     	endif
  4720  004C54  0008               	tblrd		*
  4721  004C56  50F5               	movf	tablat,w,c
  4722  004C58  5C1A               	subwf	??_strncmp^0,w,c
  4723  004C5A  6E14               	movwf	?_strncmp^0,c
  4724  004C5C  6A15               	clrf	(?_strncmp+1)^0,c
  4725  004C5E  A0D8               	btfss	status,0,c
  4726  004C60  0615               	decf	(?_strncmp+1)^0,f,c
  4727  004C62                     l2352:
  4728  004C62  0012               	return		;funcret
  4729  004C64                     __end_of_strncmp:
  4730                           	callstack 0
  4731                           
  4732 ;; *************** function _efgtoa *****************
  4733 ;; Defined at:
  4734 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4735 ;; Parameters:    Size  Location     Type
  4736 ;;  fp              2   35[BANK0 ] PTR struct _IO_FILE
  4737 ;;		 -> NULL(0), 
  4738 ;;  f               4   37[BANK0 ] PTR struct _IO_FILE
  4739 ;;  c               1   41[BANK0 ] unsigned char 
  4740 ;; Auto vars:     Size  Location     Type
  4741 ;;  u               4   99[BANK0 ] unsigned char 
  4742 ;;  g               4   91[BANK0 ] unsigned char 
  4743 ;;  l               4   85[BANK0 ] unsigned char 
  4744 ;;  h               4   81[BANK0 ] unsigned char 
  4745 ;;  ou              4   67[BANK0 ] unsigned char 
  4746 ;;  n               2   97[BANK0 ] int 
  4747 ;;  e               2   95[BANK0 ] int 
  4748 ;;  i               2   89[BANK0 ] int 
  4749 ;;  w               2   77[BANK0 ] int 
  4750 ;;  p               2   75[BANK0 ] int 
  4751 ;;  sign            2   73[BANK0 ] int 
  4752 ;;  d               2   71[BANK0 ] int 
  4753 ;;  m               2   65[BANK0 ] int 
  4754 ;;  ne              2   63[BANK0 ] int 
  4755 ;;  pp              2   61[BANK0 ] int 
  4756 ;;  t               2   59[BANK0 ] int 
  4757 ;;  mode            1   80[BANK0 ] unsigned char 
  4758 ;;  nmode           1   79[BANK0 ] unsigned char 
  4759 ;; Return value:  Size  Location     Type
  4760 ;;                  2   35[BANK0 ] int 
  4761 ;; Registers used:
  4762 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4763 ;; Tracked objects:
  4764 ;;		On entry : 0/0
  4765 ;;		On exit  : 0/0
  4766 ;;		Unchanged: 0/0
  4767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4768 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4769 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4770 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4771 ;;      Totals:         0      68       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4772 ;;Total ram usage:       68 bytes
  4773 ;; Hardware stack levels used: 1
  4774 ;; Hardware stack levels required when called: 13
  4775 ;; This function calls:
  4776 ;;		___awdiv
  4777 ;;		___awmod
  4778 ;;		___fladd
  4779 ;;		___fldiv
  4780 ;;		___fleq
  4781 ;;		___flge
  4782 ;;		___flmul
  4783 ;;		___flneg
  4784 ;;		___flsub
  4785 ;;		___fltol
  4786 ;;		___fpclassifyf
  4787 ;;		_floorf
  4788 ;;		_isupper
  4789 ;;		_pad
  4790 ;;		_strcpy
  4791 ;;		_tolower
  4792 ;; This function is called by:
  4793 ;;		_vfpfcnvrt
  4794 ;; This function uses a non-reentrant model
  4795 ;;
  4796                           
  4797                           	psect	text16
  4798  0010B4                     __ptext16:
  4799                           	callstack 0
  4800  0010B4                     _efgtoa:
  4801                           	callstack 12
  4802  0010B4                     
  4803                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.32\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  4804  0010B4  0E00               	movlw	0
  4805  0010B6  0100               	movlb	0	; () banked
  4806  0010B8  6FAA               	movwf	(efgtoa@sign+1)& (0+255),b
  4807  0010BA  0E00               	movlw	0
  4808  0010BC  6FA9               	movwf	efgtoa@sign& (0+255),b
  4809  0010BE                     
  4810                           ; BSR set to: 0
  4811                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 340:     g = f;
  4812  0010BE  C085  F0BB         	movff	efgtoa@f,efgtoa@g
  4813  0010C2  C086  F0BC         	movff	efgtoa@f+1,efgtoa@g+1
  4814  0010C6  C087  F0BD         	movff	efgtoa@f+2,efgtoa@g+2
  4815  0010CA  C088  F0BE         	movff	efgtoa@f+3,efgtoa@g+3
  4816  0010CE                     
  4817                           ; BSR set to: 0
  4818                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  4819  0010CE  BFBE               	btfsc	(efgtoa@g+3)& (0+255),7,b
  4820  0010D0  EF6E  F008         	goto	u9360
  4821  0010D4  EF6C  F008         	goto	u9361
  4822  0010D8                     u9361:
  4823  0010D8  EF84  F008         	goto	l8576
  4824  0010DC                     u9360:
  4825  0010DC                     
  4826                           ; BSR set to: 0
  4827                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  4828  0010DC  0E00               	movlw	0
  4829  0010DE  6FAA               	movwf	(efgtoa@sign+1)& (0+255),b
  4830  0010E0  0E01               	movlw	1
  4831  0010E2  6FA9               	movwf	efgtoa@sign& (0+255),b
  4832  0010E4                     
  4833                           ; BSR set to: 0
  4834                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  4835  0010E4  C0BB  F014         	movff	efgtoa@g,___flneg@f1
  4836  0010E8  C0BC  F015         	movff	efgtoa@g+1,___flneg@f1+1
  4837  0010EC  C0BD  F016         	movff	efgtoa@g+2,___flneg@f1+2
  4838  0010F0  C0BE  F017         	movff	efgtoa@g+3,___flneg@f1+3
  4839  0010F4  ECAD  F02E         	call	___flneg	;wreg free
  4840  0010F8  C014  F0BB         	movff	?___flneg,efgtoa@g
  4841  0010FC  C015  F0BC         	movff	?___flneg+1,efgtoa@g+1
  4842  001100  C016  F0BD         	movff	?___flneg+2,efgtoa@g+2
  4843  001104  C017  F0BE         	movff	?___flneg+3,efgtoa@g+3
  4844  001108                     l8576:
  4845                           
  4846                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  4847  001108  0E00               	movlw	0
  4848  00110A  0100               	movlb	0	; () banked
  4849  00110C  6FC2               	movwf	(efgtoa@n+1)& (0+255),b
  4850  00110E  0E00               	movlw	0
  4851  001110  6FC1               	movwf	efgtoa@n& (0+255),b
  4852  001112                     
  4853                           ; BSR set to: 0
  4854                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  4855  001112  C03A  F0AD         	movff	_width,efgtoa@w
  4856  001116  C03B  F0AE         	movff	_width+1,efgtoa@w+1
  4857  00111A                     
  4858                           ; BSR set to: 0
  4859                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  4860  00111A  51A9               	movf	efgtoa@sign& (0+255),w,b
  4861  00111C  11AA               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4862  00111E  A4D8               	btfss	status,2,c
  4863  001120  EF94  F008         	goto	u9371
  4864  001124  EF96  F008         	goto	u9370
  4865  001128                     u9371:
  4866  001128  EF9D  F008         	goto	l8584
  4867  00112C                     u9370:
  4868  00112C                     
  4869                           ; BSR set to: 0
  4870  00112C  A43E               	btfss	_flags^0,2,c
  4871  00112E  EF9B  F008         	goto	u9381
  4872  001132  EF9D  F008         	goto	u9380
  4873  001136                     u9381:
  4874  001136  EFB7  F008         	goto	l8596
  4875  00113A                     u9380:
  4876  00113A                     l8584:
  4877                           
  4878                           ; BSR set to: 0
  4879                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  4880  00113A  51A9               	movf	efgtoa@sign& (0+255),w,b
  4881  00113C  11AA               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4882  00113E  A4D8               	btfss	status,2,c
  4883  001140  EFA4  F008         	goto	u9391
  4884  001144  EFA6  F008         	goto	u9390
  4885  001148                     u9391:
  4886  001148  EFAC  F008         	goto	l8588
  4887  00114C                     u9390:
  4888  00114C                     
  4889                           ; BSR set to: 0
  4890  00114C  0E00               	movlw	0
  4891  00114E  6F90               	movwf	(_efgtoa$3563+1)& (0+255),b
  4892  001150  0E2B               	movlw	43
  4893  001152  6F8F               	movwf	_efgtoa$3563& (0+255),b
  4894  001154  EFB0  F008         	goto	l8590
  4895  001158                     l8588:
  4896                           
  4897                           ; BSR set to: 0
  4898  001158  0E00               	movlw	0
  4899  00115A  6F90               	movwf	(_efgtoa$3563+1)& (0+255),b
  4900  00115C  0E2D               	movlw	45
  4901  00115E  6F8F               	movwf	_efgtoa$3563& (0+255),b
  4902  001160                     l8590:
  4903                           
  4904                           ; BSR set to: 0
  4905  001160  C08F  F13E         	movff	_efgtoa$3563,_dbuf
  4906  001164                     
  4907                           ; BSR set to: 0
  4908                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 351:         ++n;
  4909  001164  4BC1               	infsnz	efgtoa@n& (0+255),f,b
  4910  001166  2BC2               	incf	(efgtoa@n+1)& (0+255),f,b
  4911  001168                     
  4912                           ; BSR set to: 0
  4913                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 352:         --w;
  4914  001168  07AD               	decf	efgtoa@w& (0+255),f,b
  4915  00116A  A0D8               	btfss	status,0,c
  4916  00116C  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  4917  00116E                     l8596:
  4918                           
  4919                           ; BSR set to: 0
  4920                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 357:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  4921  00116E  C0BB  F014         	movff	efgtoa@g,___fpclassifyf@x
  4922  001172  C0BC  F015         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4923  001176  C0BD  F016         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4924  00117A  C0BE  F017         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4925  00117E  EC39  F025         	call	___fpclassifyf	;wreg free
  4926  001182  0414               	decf	?___fpclassifyf^0,w,c
  4927  001184  1015               	iorwf	(?___fpclassifyf+1)^0,w,c
  4928  001186  A4D8               	btfss	status,2,c
  4929  001188  EFC8  F008         	goto	u9401
  4930  00118C  EFCA  F008         	goto	u9400
  4931  001190                     u9401:
  4932  001190  EF21  F009         	goto	l8614
  4933  001194                     u9400:
  4934  001194  0EBF               	movlw	191
  4935  001196  0100               	movlb	0	; () banked
  4936  001198  6F8A               	movwf	??_efgtoa& (0+255),b
  4937  00119A  0EFF               	movlw	255
  4938  00119C  6F8B               	movwf	(??_efgtoa+1)& (0+255),b
  4939  00119E  5189               	movf	efgtoa@c& (0+255),w,b
  4940  0011A0  6F8C               	movwf	(??_efgtoa+2)& (0+255),b
  4941  0011A2  6B8D               	clrf	(??_efgtoa+3)& (0+255),b
  4942  0011A4  518A               	movf	??_efgtoa& (0+255),w,b
  4943  0011A6  278C               	addwf	(??_efgtoa+2)& (0+255),f,b
  4944  0011A8  518B               	movf	(??_efgtoa+1)& (0+255),w,b
  4945  0011AA  238D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4946  0011AC  518D               	movf	(??_efgtoa+3)& (0+255),w,b
  4947  0011AE  E10A               	bnz	u9410
  4948  0011B0  0E1A               	movlw	26
  4949  0011B2  5D8C               	subwf	(??_efgtoa+2)& (0+255),w,b
  4950  0011B4  A0D8               	btfss	status,0,c
  4951  0011B6  EFDF  F008         	goto	u9411
  4952  0011BA  EFE2  F008         	goto	u9410
  4953  0011BE                     u9411:
  4954  0011BE  0E01               	movlw	1
  4955  0011C0  EFE3  F008         	goto	u9420
  4956  0011C4                     u9410:
  4957  0011C4  0E00               	movlw	0
  4958  0011C6                     u9420:
  4959  0011C6  6F91               	movwf	_efgtoa$3564& (0+255),b
  4960  0011C8  6B92               	clrf	(_efgtoa$3564+1)& (0+255),b
  4961  0011CA                     
  4962                           ; BSR set to: 0
  4963  0011CA  5191               	movf	_efgtoa$3564& (0+255),w,b
  4964  0011CC  1192               	iorwf	(_efgtoa$3564+1)& (0+255),w,b
  4965  0011CE  B4D8               	btfsc	status,2,c
  4966  0011D0  EFEC  F008         	goto	u9431
  4967  0011D4  EFEE  F008         	goto	u9430
  4968  0011D8                     u9431:
  4969  0011D8  EFFC  F008         	goto	l8606
  4970  0011DC                     u9430:
  4971  0011DC                     
  4972                           ; BSR set to: 0
  4973                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  4974  0011DC  0E3E               	movlw	low _dbuf
  4975  0011DE  25C1               	addwf	efgtoa@n& (0+255),w,b
  4976  0011E0  6E14               	movwf	strcpy@dest^0,c
  4977  0011E2  0E01               	movlw	high _dbuf
  4978  0011E4  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4979  0011E6  6E15               	movwf	(strcpy@dest+1)^0,c
  4980  0011E8  0EA0               	movlw	low STR_10
  4981  0011EA  6E16               	movwf	strcpy@src^0,c
  4982  0011EC  0E10               	movlw	high STR_10
  4983  0011EE  6E17               	movwf	(strcpy@src+1)^0,c
  4984  0011F0  EC10  F02C         	call	_strcpy	;wreg free
  4985                           
  4986                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  4987  0011F4  EF08  F009         	goto	l8608
  4988  0011F8                     l8606:
  4989                           
  4990                           ; BSR set to: 0
  4991                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  4992  0011F8  0E3E               	movlw	low _dbuf
  4993  0011FA  25C1               	addwf	efgtoa@n& (0+255),w,b
  4994  0011FC  6E14               	movwf	strcpy@dest^0,c
  4995  0011FE  0E01               	movlw	high _dbuf
  4996  001200  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4997  001202  6E15               	movwf	(strcpy@dest+1)^0,c
  4998  001204  0EA8               	movlw	low STR_11
  4999  001206  6E16               	movwf	strcpy@src^0,c
  5000  001208  0E10               	movlw	high STR_11
  5001  00120A  6E17               	movwf	(strcpy@src+1)^0,c
  5002  00120C  EC10  F02C         	call	_strcpy	;wreg free
  5003  001210                     l8608:
  5004                           
  5005                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  5006  001210  0100               	movlb	0	; () banked
  5007  001212  0EFD               	movlw	253
  5008  001214  27AD               	addwf	efgtoa@w& (0+255),f,b
  5009  001216  0EFF               	movlw	255
  5010  001218  23AE               	addwfc	(efgtoa@w+1)& (0+255),f,b
  5011  00121A                     
  5012                           ; BSR set to: 0
  5013                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  5014  00121A  C083  F026         	movff	efgtoa@fp,pad@fp
  5015  00121E  C084  F027         	movff	efgtoa@fp+1,pad@fp+1
  5016  001222  0E3E               	movlw	low _dbuf
  5017  001224  6E28               	movwf	pad@buf^0,c
  5018  001226  0E01               	movlw	high _dbuf
  5019  001228  6E29               	movwf	(pad@buf+1)^0,c
  5020  00122A  C0AD  F02A         	movff	efgtoa@w,pad@p
  5021  00122E  C0AE  F02B         	movff	efgtoa@w+1,pad@p+1
  5022  001232  ECB0  F028         	call	_pad	;wreg free
  5023  001236  C026  F083         	movff	?_pad,?_efgtoa
  5024  00123A  C027  F084         	movff	?_pad+1,?_efgtoa+1
  5025  00123E  EFB0  F00E         	goto	l2164
  5026  001242                     l8614:
  5027                           
  5028                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 366:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  5029  001242  C0BB  F014         	movff	efgtoa@g,___fpclassifyf@x
  5030  001246  C0BC  F015         	movff	efgtoa@g+1,___fpclassifyf@x+1
  5031  00124A  C0BD  F016         	movff	efgtoa@g+2,___fpclassifyf@x+2
  5032  00124E  C0BE  F017         	movff	efgtoa@g+3,___fpclassifyf@x+3
  5033  001252  EC39  F025         	call	___fpclassifyf	;wreg free
  5034  001256  5014               	movf	?___fpclassifyf^0,w,c
  5035  001258  1015               	iorwf	(?___fpclassifyf+1)^0,w,c
  5036  00125A  A4D8               	btfss	status,2,c
  5037  00125C  EF32  F009         	goto	u9441
  5038  001260  EF34  F009         	goto	u9440
  5039  001264                     u9441:
  5040  001264  EF8B  F009         	goto	l8632
  5041  001268                     u9440:
  5042  001268  0EBF               	movlw	191
  5043  00126A  0100               	movlb	0	; () banked
  5044  00126C  6F8A               	movwf	??_efgtoa& (0+255),b
  5045  00126E  0EFF               	movlw	255
  5046  001270  6F8B               	movwf	(??_efgtoa+1)& (0+255),b
  5047  001272  5189               	movf	efgtoa@c& (0+255),w,b
  5048  001274  6F8C               	movwf	(??_efgtoa+2)& (0+255),b
  5049  001276  6B8D               	clrf	(??_efgtoa+3)& (0+255),b
  5050  001278  518A               	movf	??_efgtoa& (0+255),w,b
  5051  00127A  278C               	addwf	(??_efgtoa+2)& (0+255),f,b
  5052  00127C  518B               	movf	(??_efgtoa+1)& (0+255),w,b
  5053  00127E  238D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  5054  001280  518D               	movf	(??_efgtoa+3)& (0+255),w,b
  5055  001282  E10A               	bnz	u9450
  5056  001284  0E1A               	movlw	26
  5057  001286  5D8C               	subwf	(??_efgtoa+2)& (0+255),w,b
  5058  001288  A0D8               	btfss	status,0,c
  5059  00128A  EF49  F009         	goto	u9451
  5060  00128E  EF4C  F009         	goto	u9450
  5061  001292                     u9451:
  5062  001292  0E01               	movlw	1
  5063  001294  EF4D  F009         	goto	u9460
  5064  001298                     u9450:
  5065  001298  0E00               	movlw	0
  5066  00129A                     u9460:
  5067  00129A  6F93               	movwf	_efgtoa$3568& (0+255),b
  5068  00129C  6B94               	clrf	(_efgtoa$3568+1)& (0+255),b
  5069  00129E                     
  5070                           ; BSR set to: 0
  5071  00129E  5193               	movf	_efgtoa$3568& (0+255),w,b
  5072  0012A0  1194               	iorwf	(_efgtoa$3568+1)& (0+255),w,b
  5073  0012A2  B4D8               	btfsc	status,2,c
  5074  0012A4  EF56  F009         	goto	u9471
  5075  0012A8  EF58  F009         	goto	u9470
  5076  0012AC                     u9471:
  5077  0012AC  EF66  F009         	goto	l8624
  5078  0012B0                     u9470:
  5079  0012B0                     
  5080                           ; BSR set to: 0
  5081                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  5082  0012B0  0E3E               	movlw	low _dbuf
  5083  0012B2  25C1               	addwf	efgtoa@n& (0+255),w,b
  5084  0012B4  6E14               	movwf	strcpy@dest^0,c
  5085  0012B6  0E01               	movlw	high _dbuf
  5086  0012B8  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5087  0012BA  6E15               	movwf	(strcpy@dest+1)^0,c
  5088  0012BC  0EA4               	movlw	low STR_14
  5089  0012BE  6E16               	movwf	strcpy@src^0,c
  5090  0012C0  0E10               	movlw	high STR_14
  5091  0012C2  6E17               	movwf	(strcpy@src+1)^0,c
  5092  0012C4  EC10  F02C         	call	_strcpy	;wreg free
  5093                           
  5094                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  5095  0012C8  EF72  F009         	goto	l8626
  5096  0012CC                     l8624:
  5097                           
  5098                           ; BSR set to: 0
  5099                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  5100  0012CC  0E3E               	movlw	low _dbuf
  5101  0012CE  25C1               	addwf	efgtoa@n& (0+255),w,b
  5102  0012D0  6E14               	movwf	strcpy@dest^0,c
  5103  0012D2  0E01               	movlw	high _dbuf
  5104  0012D4  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5105  0012D6  6E15               	movwf	(strcpy@dest+1)^0,c
  5106  0012D8  0EAC               	movlw	low STR_15
  5107  0012DA  6E16               	movwf	strcpy@src^0,c
  5108  0012DC  0E10               	movlw	high STR_15
  5109  0012DE  6E17               	movwf	(strcpy@src+1)^0,c
  5110  0012E0  EC10  F02C         	call	_strcpy	;wreg free
  5111  0012E4                     l8626:
  5112                           
  5113                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 371:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  5114  0012E4  0100               	movlb	0	; () banked
  5115  0012E6  0EFD               	movlw	253
  5116  0012E8  27AD               	addwf	efgtoa@w& (0+255),f,b
  5117  0012EA  0EFF               	movlw	255
  5118  0012EC  23AE               	addwfc	(efgtoa@w+1)& (0+255),f,b
  5119  0012EE                     
  5120                           ; BSR set to: 0
  5121                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 372:         retu
      +                          rn pad(fp, &dbuf[0], w);
  5122  0012EE  C083  F026         	movff	efgtoa@fp,pad@fp
  5123  0012F2  C084  F027         	movff	efgtoa@fp+1,pad@fp+1
  5124  0012F6  0E3E               	movlw	low _dbuf
  5125  0012F8  6E28               	movwf	pad@buf^0,c
  5126  0012FA  0E01               	movlw	high _dbuf
  5127  0012FC  6E29               	movwf	(pad@buf+1)^0,c
  5128  0012FE  C0AD  F02A         	movff	efgtoa@w,pad@p
  5129  001302  C0AE  F02B         	movff	efgtoa@w+1,pad@p+1
  5130  001306  ECB0  F028         	call	_pad	;wreg free
  5131  00130A  C026  F083         	movff	?_pad,?_efgtoa
  5132  00130E  C027  F084         	movff	?_pad+1,?_efgtoa+1
  5133  001312  EFB0  F00E         	goto	l2164
  5134  001316                     l8632:
  5135                           
  5136                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  5137  001316  0E00               	movlw	0
  5138  001318  0100               	movlb	0	; () banked
  5139  00131A  6FC3               	movwf	efgtoa@u& (0+255),b
  5140  00131C  0E00               	movlw	0
  5141  00131E  6FC4               	movwf	(efgtoa@u+1)& (0+255),b
  5142  001320  0E80               	movlw	128
  5143  001322  6FC5               	movwf	(efgtoa@u+2)& (0+255),b
  5144  001324  0E3F               	movlw	63
  5145  001326  6FC6               	movwf	(efgtoa@u+3)& (0+255),b
  5146                           
  5147                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  5148  001328  0E00               	movlw	0
  5149  00132A  6FC0               	movwf	(efgtoa@e+1)& (0+255),b
  5150  00132C  0E00               	movlw	0
  5151  00132E  6FBF               	movwf	efgtoa@e& (0+255),b
  5152  001330                     
  5153                           ; BSR set to: 0
  5154                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  5155  001330  C0BB  F014         	movff	efgtoa@g,___fleq@ff1
  5156  001334  C0BC  F015         	movff	efgtoa@g+1,___fleq@ff1+1
  5157  001338  C0BD  F016         	movff	efgtoa@g+2,___fleq@ff1+2
  5158  00133C  C0BE  F017         	movff	efgtoa@g+3,___fleq@ff1+3
  5159  001340  0E00               	movlw	0
  5160  001342  6E18               	movwf	___fleq@ff2^0,c
  5161  001344  0E00               	movlw	0
  5162  001346  6E19               	movwf	(___fleq@ff2+1)^0,c
  5163  001348  0E00               	movlw	0
  5164  00134A  6E1A               	movwf	(___fleq@ff2+2)^0,c
  5165  00134C  0E00               	movlw	0
  5166  00134E  6E1B               	movwf	(___fleq@ff2+3)^0,c
  5167  001350  ECC9  F029         	call	___fleq	;wreg free
  5168  001354  B0D8               	btfsc	status,0,c
  5169  001356  EFAF  F009         	goto	u9481
  5170  00135A  EFB1  F009         	goto	u9480
  5171  00135E                     u9481:
  5172  00135E  EF36  F00A         	goto	l8650
  5173  001362                     u9480:
  5174  001362  EFD0  F009         	goto	l8642
  5175  001366                     l8638:
  5176                           
  5177                           ; BSR set to: 0
  5178                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  5179  001366  C0C3  F02A         	movff	efgtoa@u,___flmul@b
  5180  00136A  C0C4  F02B         	movff	efgtoa@u+1,___flmul@b+1
  5181  00136E  C0C5  F02C         	movff	efgtoa@u+2,___flmul@b+2
  5182  001372  C0C6  F02D         	movff	efgtoa@u+3,___flmul@b+3
  5183  001376  0E00               	movlw	0
  5184  001378  6E2E               	movwf	___flmul@a^0,c
  5185  00137A  0E00               	movlw	0
  5186  00137C  6E2F               	movwf	(___flmul@a+1)^0,c
  5187  00137E  0E20               	movlw	32
  5188  001380  6E30               	movwf	(___flmul@a+2)^0,c
  5189  001382  0E41               	movlw	65
  5190  001384  6E31               	movwf	(___flmul@a+3)^0,c
  5191  001386  EC06  F014         	call	___flmul	;wreg free
  5192  00138A  C02A  F0C3         	movff	?___flmul,efgtoa@u
  5193  00138E  C02B  F0C4         	movff	?___flmul+1,efgtoa@u+1
  5194  001392  C02C  F0C5         	movff	?___flmul+2,efgtoa@u+2
  5195  001396  C02D  F0C6         	movff	?___flmul+3,efgtoa@u+3
  5196  00139A                     
  5197                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  5198  00139A  0100               	movlb	0	; () banked
  5199  00139C  4BBF               	infsnz	efgtoa@e& (0+255),f,b
  5200  00139E  2BC0               	incf	(efgtoa@e+1)& (0+255),f,b
  5201  0013A0                     l8642:
  5202                           
  5203                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  5204  0013A0  C0BB  F06D         	movff	efgtoa@g,___flge@ff1
  5205  0013A4  C0BC  F06E         	movff	efgtoa@g+1,___flge@ff1+1
  5206  0013A8  C0BD  F06F         	movff	efgtoa@g+2,___flge@ff1+2
  5207  0013AC  C0BE  F070         	movff	efgtoa@g+3,___flge@ff1+3
  5208  0013B0  0E00               	movlw	0
  5209  0013B2  6E2E               	movwf	___flmul@a^0,c
  5210  0013B4  0E00               	movlw	0
  5211  0013B6  6E2F               	movwf	(___flmul@a+1)^0,c
  5212  0013B8  0E20               	movlw	32
  5213  0013BA  6E30               	movwf	(___flmul@a+2)^0,c
  5214  0013BC  0E41               	movlw	65
  5215  0013BE  6E31               	movwf	(___flmul@a+3)^0,c
  5216  0013C0  C0C3  F02A         	movff	efgtoa@u,___flmul@b
  5217  0013C4  C0C4  F02B         	movff	efgtoa@u+1,___flmul@b+1
  5218  0013C8  C0C5  F02C         	movff	efgtoa@u+2,___flmul@b+2
  5219  0013CC  C0C6  F02D         	movff	efgtoa@u+3,___flmul@b+3
  5220  0013D0  EC06  F014         	call	___flmul	;wreg free
  5221  0013D4  C02A  F071         	movff	?___flmul,___flge@ff2
  5222  0013D8  C02B  F072         	movff	?___flmul+1,___flge@ff2+1
  5223  0013DC  C02C  F073         	movff	?___flmul+2,___flge@ff2+2
  5224  0013E0  C02D  F074         	movff	?___flmul+3,___flge@ff2+3
  5225  0013E4  ECB6  F024         	call	___flge	;wreg free
  5226  0013E8  0100               	movlb	0	; () banked
  5227  0013EA  B0D8               	btfsc	status,0,c
  5228  0013EC  EFFA  F009         	goto	u9491
  5229  0013F0  EFFC  F009         	goto	u9490
  5230  0013F4                     u9491:
  5231  0013F4  EFB3  F009         	goto	l8638
  5232  0013F8                     u9490:
  5233  0013F8  EF1C  F00A         	goto	l8648
  5234  0013FC                     l8644:
  5235                           
  5236                           ; BSR set to: 0
  5237                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  5238  0013FC  C0C3  F02A         	movff	efgtoa@u,___fldiv@b
  5239  001400  C0C4  F02B         	movff	efgtoa@u+1,___fldiv@b+1
  5240  001404  C0C5  F02C         	movff	efgtoa@u+2,___fldiv@b+2
  5241  001408  C0C6  F02D         	movff	efgtoa@u+3,___fldiv@b+3
  5242  00140C  0E00               	movlw	0
  5243  00140E  6E2E               	movwf	___fldiv@a^0,c
  5244  001410  0E00               	movlw	0
  5245  001412  6E2F               	movwf	(___fldiv@a+1)^0,c
  5246  001414  0E20               	movlw	32
  5247  001416  6E30               	movwf	(___fldiv@a+2)^0,c
  5248  001418  0E41               	movlw	65
  5249  00141A  6E31               	movwf	(___fldiv@a+3)^0,c
  5250  00141C  EC2E  F016         	call	___fldiv	;wreg free
  5251  001420  C02A  F0C3         	movff	?___fldiv,efgtoa@u
  5252  001424  C02B  F0C4         	movff	?___fldiv+1,efgtoa@u+1
  5253  001428  C02C  F0C5         	movff	?___fldiv+2,efgtoa@u+2
  5254  00142C  C02D  F0C6         	movff	?___fldiv+3,efgtoa@u+3
  5255  001430                     
  5256                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  5257  001430  0100               	movlb	0	; () banked
  5258  001432  07BF               	decf	efgtoa@e& (0+255),f,b
  5259  001434  A0D8               	btfss	status,0,c
  5260  001436  07C0               	decf	(efgtoa@e+1)& (0+255),f,b
  5261  001438                     l8648:
  5262                           
  5263                           ; BSR set to: 0
  5264                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  5265  001438  C0BB  F06D         	movff	efgtoa@g,___flge@ff1
  5266  00143C  C0BC  F06E         	movff	efgtoa@g+1,___flge@ff1+1
  5267  001440  C0BD  F06F         	movff	efgtoa@g+2,___flge@ff1+2
  5268  001444  C0BE  F070         	movff	efgtoa@g+3,___flge@ff1+3
  5269  001448  C0C3  F071         	movff	efgtoa@u,___flge@ff2
  5270  00144C  C0C4  F072         	movff	efgtoa@u+1,___flge@ff2+1
  5271  001450  C0C5  F073         	movff	efgtoa@u+2,___flge@ff2+2
  5272  001454  C0C6  F074         	movff	efgtoa@u+3,___flge@ff2+3
  5273  001458  ECB6  F024         	call	___flge	;wreg free
  5274  00145C  0100               	movlb	0	; () banked
  5275  00145E  A0D8               	btfss	status,0,c
  5276  001460  EF34  F00A         	goto	u9501
  5277  001464  EF36  F00A         	goto	u9500
  5278  001468                     u9501:
  5279  001468  EFFE  F009         	goto	l8644
  5280  00146C                     u9500:
  5281  00146C                     l8650:
  5282                           
  5283                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  5284  00146C  C089  F01A         	movff	efgtoa@c,tolower@c
  5285  001470  6A1B               	clrf	(tolower@c+1)^0,c
  5286  001472  EC45  F02C         	call	_tolower	;wreg free
  5287  001476  501A               	movf	?_tolower^0,w,c
  5288  001478  0100               	movlb	0	; () banked
  5289  00147A  6FB0               	movwf	efgtoa@mode& (0+255),b
  5290  00147C                     
  5291                           ; BSR set to: 0
  5292                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  5293  00147C  C0B0  F0AF         	movff	efgtoa@mode,efgtoa@nmode
  5294  001480                     
  5295                           ; BSR set to: 0
  5296                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  5297  001480  0E67               	movlw	103
  5298  001482  19B0               	xorwf	efgtoa@mode& (0+255),w,b
  5299  001484  A4D8               	btfss	status,2,c
  5300  001486  EF47  F00A         	goto	u9511
  5301  00148A  EF49  F00A         	goto	u9510
  5302  00148E                     u9511:
  5303  00148E  EF6F  F00A         	goto	l8664
  5304  001492                     u9510:
  5305  001492                     
  5306                           ; BSR set to: 0
  5307                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  5308  001492  503C               	movf	_prec^0,w,c
  5309  001494  103D               	iorwf	(_prec+1)^0,w,c
  5310  001496  A4D8               	btfss	status,2,c
  5311  001498  EF50  F00A         	goto	u9521
  5312  00149C  EF52  F00A         	goto	u9520
  5313  0014A0                     u9521:
  5314  0014A0  EF56  F00A         	goto	l8660
  5315  0014A4                     u9520:
  5316  0014A4                     
  5317                           ; BSR set to: 0
  5318                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  5319  0014A4  0E00               	movlw	0
  5320  0014A6  6E3D               	movwf	(_prec+1)^0,c
  5321  0014A8  0E01               	movlw	1
  5322  0014AA  6E3C               	movwf	_prec^0,c
  5323  0014AC                     l8660:
  5324                           
  5325                           ; BSR set to: 0
  5326                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  5327  0014AC  BE3D               	btfsc	(_prec+1)^0,7,c
  5328  0014AE  EF63  F00A         	goto	u9530
  5329  0014B2  503D               	movf	(_prec+1)^0,w,c
  5330  0014B4  E106               	bnz	u9531
  5331  0014B6  043C               	decf	_prec^0,w,c
  5332  0014B8  B0D8               	btfsc	status,0,c
  5333  0014BA  EF61  F00A         	goto	u9531
  5334  0014BE  EF63  F00A         	goto	u9530
  5335  0014C2                     u9531:
  5336  0014C2  EF69  F00A         	goto	l2182
  5337  0014C6                     u9530:
  5338  0014C6                     l8662:
  5339                           
  5340                           ; BSR set to: 0
  5341  0014C6  0E00               	movlw	0
  5342  0014C8  6FAC               	movwf	(efgtoa@p+1)& (0+255),b
  5343  0014CA  0E06               	movlw	6
  5344  0014CC  6FAB               	movwf	efgtoa@p& (0+255),b
  5345  0014CE  EF78  F00A         	goto	l8670
  5346  0014D2                     l2182:
  5347                           
  5348                           ; BSR set to: 0
  5349  0014D2  C03C  F0AB         	movff	_prec,efgtoa@p
  5350  0014D6  C03D  F0AC         	movff	_prec+1,efgtoa@p+1
  5351  0014DA  EF78  F00A         	goto	l8670
  5352  0014DE                     l8664:
  5353                           
  5354                           ; BSR set to: 0
  5355                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  5356  0014DE  BE3D               	btfsc	(_prec+1)^0,7,c
  5357  0014E0  EF74  F00A         	goto	u9541
  5358  0014E4  EF76  F00A         	goto	u9540
  5359  0014E8                     u9541:
  5360  0014E8  EF63  F00A         	goto	l8662
  5361  0014EC                     u9540:
  5362  0014EC  EF69  F00A         	goto	l2182
  5363  0014F0                     l8670:
  5364                           
  5365                           ; BSR set to: 0
  5366                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  5367  0014F0  0E67               	movlw	103
  5368  0014F2  19B0               	xorwf	efgtoa@mode& (0+255),w,b
  5369  0014F4  A4D8               	btfss	status,2,c
  5370  0014F6  EF7F  F00A         	goto	u9551
  5371  0014FA  EF81  F00A         	goto	u9550
  5372  0014FE                     u9551:
  5373  0014FE  EFB0  F00A         	goto	l8680
  5374  001502                     u9550:
  5375  001502                     
  5376                           ; BSR set to: 0
  5377                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  5378  001502  AFC0               	btfss	(efgtoa@e+1)& (0+255),7,b
  5379  001504  EF8F  F00A         	goto	u9560
  5380  001508  0EFC               	movlw	252
  5381  00150A  5DBF               	subwf	efgtoa@e& (0+255),w,b
  5382  00150C  0EFF               	movlw	255
  5383  00150E  59C0               	subwfb	(efgtoa@e+1)& (0+255),w,b
  5384  001510  A0D8               	btfss	status,0,c
  5385  001512  EF8D  F00A         	goto	u9561
  5386  001516  EF8F  F00A         	goto	u9560
  5387  00151A                     u9561:
  5388  00151A  EFAE  F00A         	goto	l8678
  5389  00151E                     u9560:
  5390  00151E                     
  5391                           ; BSR set to: 0
  5392  00151E  0EFF               	movlw	255
  5393  001520  6F8A               	movwf	??_efgtoa& (0+255),b
  5394  001522  0EFF               	movlw	255
  5395  001524  6F8B               	movwf	(??_efgtoa+1)& (0+255),b
  5396  001526  C0AB  F08C         	movff	efgtoa@p,??_efgtoa+2
  5397  00152A  C0AC  F08D         	movff	efgtoa@p+1,??_efgtoa+3
  5398  00152E  518A               	movf	??_efgtoa& (0+255),w,b
  5399  001530  278C               	addwf	(??_efgtoa+2)& (0+255),f,b
  5400  001532  518B               	movf	(??_efgtoa+1)& (0+255),w,b
  5401  001534  238D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  5402  001536  51BF               	movf	efgtoa@e& (0+255),w,b
  5403  001538  5D8C               	subwf	(??_efgtoa+2)& (0+255),w,b
  5404  00153A  518D               	movf	(??_efgtoa+3)& (0+255),w,b
  5405  00153C  0A80               	xorlw	128
  5406  00153E  6F8E               	movwf	(??_efgtoa+4)& (0+255),b
  5407  001540  51C0               	movf	(efgtoa@e+1)& (0+255),w,b
  5408  001542  0A80               	xorlw	128
  5409  001544  598E               	subwfb	(??_efgtoa+4)& (0+255),w,b
  5410  001546  A0D8               	btfss	status,0,c
  5411  001548  EFA8  F00A         	goto	u9571
  5412  00154C  EFAA  F00A         	goto	u9570
  5413  001550                     u9571:
  5414  001550  EFAE  F00A         	goto	l8678
  5415  001554                     u9570:
  5416  001554                     
  5417                           ; BSR set to: 0
  5418                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  5419  001554  0E66               	movlw	102
  5420  001556  6FAF               	movwf	efgtoa@nmode& (0+255),b
  5421                           
  5422                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  5423  001558  EFB0  F00A         	goto	l8680
  5424  00155C                     l8678:
  5425                           
  5426                           ; BSR set to: 0
  5427                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  5428  00155C  0E65               	movlw	101
  5429  00155E  6FAF               	movwf	efgtoa@nmode& (0+255),b
  5430  001560                     l8680:
  5431                           
  5432                           ; BSR set to: 0
  5433                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 411:     m = p;
  5434  001560  C0AB  F0A1         	movff	efgtoa@p,efgtoa@m
  5435  001564  C0AC  F0A2         	movff	efgtoa@p+1,efgtoa@m+1
  5436  001568                     
  5437                           ; BSR set to: 0
  5438                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  5439  001568  0E67               	movlw	103
  5440  00156A  19B0               	xorwf	efgtoa@mode& (0+255),w,b
  5441  00156C  A4D8               	btfss	status,2,c
  5442  00156E  EFBB  F00A         	goto	u9581
  5443  001572  EFBD  F00A         	goto	u9580
  5444  001576                     u9581:
  5445  001576  EFCD  F00A         	goto	l8688
  5446  00157A                     u9580:
  5447  00157A                     
  5448                           ; BSR set to: 0
  5449  00157A  0E66               	movlw	102
  5450  00157C  19AF               	xorwf	efgtoa@nmode& (0+255),w,b
  5451  00157E  A4D8               	btfss	status,2,c
  5452  001580  EFC4  F00A         	goto	u9591
  5453  001584  EFC6  F00A         	goto	u9590
  5454  001588                     u9591:
  5455  001588  EFCF  F00A         	goto	l8690
  5456  00158C                     u9590:
  5457  00158C                     
  5458                           ; BSR set to: 0
  5459  00158C  BFC0               	btfsc	(efgtoa@e+1)& (0+255),7,b
  5460  00158E  EFCD  F00A         	goto	u9600
  5461  001592  EFCB  F00A         	goto	u9601
  5462  001596                     u9601:
  5463  001596  EFCF  F00A         	goto	l8690
  5464  00159A                     u9600:
  5465  00159A                     l8688:
  5466                           
  5467                           ; BSR set to: 0
  5468                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 413:         ++m;
  5469  00159A  4BA1               	infsnz	efgtoa@m& (0+255),f,b
  5470  00159C  2BA2               	incf	(efgtoa@m+1)& (0+255),f,b
  5471  00159E                     l8690:
  5472                           
  5473                           ; BSR set to: 0
  5474                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  5475  00159E  0E66               	movlw	102
  5476  0015A0  19AF               	xorwf	efgtoa@nmode& (0+255),w,b
  5477  0015A2  A4D8               	btfss	status,2,c
  5478  0015A4  EFD6  F00A         	goto	u9611
  5479  0015A8  EFD8  F00A         	goto	u9610
  5480  0015AC                     u9611:
  5481  0015AC  EFF8  F00A         	goto	l8700
  5482  0015B0                     u9610:
  5483  0015B0                     
  5484                           ; BSR set to: 0
  5485                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  5486  0015B0  BFC0               	btfsc	(efgtoa@e+1)& (0+255),7,b
  5487  0015B2  EFDF  F00A         	goto	u9620
  5488  0015B6  EFDD  F00A         	goto	u9621
  5489  0015BA                     u9621:
  5490  0015BA  EFEB  F00A         	goto	l8696
  5491  0015BE                     u9620:
  5492  0015BE                     
  5493                           ; BSR set to: 0
  5494                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  5495  0015BE  0E00               	movlw	0
  5496  0015C0  6FC3               	movwf	efgtoa@u& (0+255),b
  5497  0015C2  0E00               	movlw	0
  5498  0015C4  6FC4               	movwf	(efgtoa@u+1)& (0+255),b
  5499  0015C6  0E80               	movlw	128
  5500  0015C8  6FC5               	movwf	(efgtoa@u+2)& (0+255),b
  5501  0015CA  0E3F               	movlw	63
  5502  0015CC  6FC6               	movwf	(efgtoa@u+3)& (0+255),b
  5503                           
  5504                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  5505  0015CE  0E00               	movlw	0
  5506  0015D0  6FC0               	movwf	(efgtoa@e+1)& (0+255),b
  5507  0015D2  0E00               	movlw	0
  5508  0015D4  6FBF               	movwf	efgtoa@e& (0+255),b
  5509  0015D6                     l8696:
  5510                           
  5511                           ; BSR set to: 0
  5512                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  5513  0015D6  0E67               	movlw	103
  5514  0015D8  19B0               	xorwf	efgtoa@mode& (0+255),w,b
  5515  0015DA  B4D8               	btfsc	status,2,c
  5516  0015DC  EFF2  F00A         	goto	u9631
  5517  0015E0  EFF4  F00A         	goto	u9630
  5518  0015E4                     u9631:
  5519  0015E4  EFF8  F00A         	goto	l8700
  5520  0015E8                     u9630:
  5521  0015E8                     
  5522                           ; BSR set to: 0
  5523                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  5524  0015E8  51BF               	movf	efgtoa@e& (0+255),w,b
  5525  0015EA  27A1               	addwf	efgtoa@m& (0+255),f,b
  5526  0015EC  51C0               	movf	(efgtoa@e+1)& (0+255),w,b
  5527  0015EE  23A2               	addwfc	(efgtoa@m+1)& (0+255),f,b
  5528  0015F0                     l8700:
  5529                           
  5530                           ; BSR set to: 0
  5531                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  5532  0015F0  0E00               	movlw	0
  5533  0015F2  6FBA               	movwf	(efgtoa@i+1)& (0+255),b
  5534  0015F4  0E00               	movlw	0
  5535  0015F6  6FB9               	movwf	efgtoa@i& (0+255),b
  5536  0015F8                     
  5537                           ; BSR set to: 0
  5538                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 429:     h = g;
  5539  0015F8  C0BB  F0B1         	movff	efgtoa@g,efgtoa@h
  5540  0015FC  C0BC  F0B2         	movff	efgtoa@g+1,efgtoa@h+1
  5541  001600  C0BD  F0B3         	movff	efgtoa@g+2,efgtoa@h+2
  5542  001604  C0BE  F0B4         	movff	efgtoa@g+3,efgtoa@h+3
  5543  001608                     
  5544                           ; BSR set to: 0
  5545                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  5546  001608  C0C3  F0A3         	movff	efgtoa@u,efgtoa@ou
  5547  00160C  C0C4  F0A4         	movff	efgtoa@u+1,efgtoa@ou+1
  5548  001610  C0C5  F0A5         	movff	efgtoa@u+2,efgtoa@ou+2
  5549  001614  C0C6  F0A6         	movff	efgtoa@u+3,efgtoa@ou+3
  5550                           
  5551                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  5552  001618  EF89  F00B         	goto	l8714
  5553  00161C                     l8706:
  5554                           
  5555                           ; BSR set to: 0
  5556                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  5557  00161C  C0B1  F02A         	movff	efgtoa@h,___fldiv@b
  5558  001620  C0B2  F02B         	movff	efgtoa@h+1,___fldiv@b+1
  5559  001624  C0B3  F02C         	movff	efgtoa@h+2,___fldiv@b+2
  5560  001628  C0B4  F02D         	movff	efgtoa@h+3,___fldiv@b+3
  5561  00162C  C0C3  F02E         	movff	efgtoa@u,___fldiv@a
  5562  001630  C0C4  F02F         	movff	efgtoa@u+1,___fldiv@a+1
  5563  001634  C0C5  F030         	movff	efgtoa@u+2,___fldiv@a+2
  5564  001638  C0C6  F031         	movff	efgtoa@u+3,___fldiv@a+3
  5565  00163C  EC2E  F016         	call	___fldiv	;wreg free
  5566  001640  C02A  F036         	movff	?___fldiv,floorf@x
  5567  001644  C02B  F037         	movff	?___fldiv+1,floorf@x+1
  5568  001648  C02C  F038         	movff	?___fldiv+2,floorf@x+2
  5569  00164C  C02D  F039         	movff	?___fldiv+3,floorf@x+3
  5570  001650  EC8E  F01A         	call	_floorf	;wreg free
  5571  001654  C036  F0B5         	movff	?_floorf,efgtoa@l
  5572  001658  C037  F0B6         	movff	?_floorf+1,efgtoa@l+1
  5573  00165C  C038  F0B7         	movff	?_floorf+2,efgtoa@l+2
  5574  001660  C039  F0B8         	movff	?_floorf+3,efgtoa@l+3
  5575                           
  5576                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  5577  001664  C0B5  F079         	movff	efgtoa@l,___fltol@f1
  5578  001668  C0B6  F07A         	movff	efgtoa@l+1,___fltol@f1+1
  5579  00166C  C0B7  F07B         	movff	efgtoa@l+2,___fltol@f1+2
  5580  001670  C0B8  F07C         	movff	efgtoa@l+3,___fltol@f1+3
  5581  001674  EC32  F024         	call	___fltol	;wreg free
  5582  001678  C079  F0A7         	movff	?___fltol,efgtoa@d
  5583  00167C  C07A  F0A8         	movff	?___fltol+1,efgtoa@d+1
  5584  001680                     
  5585                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  5586  001680  C0B1  F079         	movff	efgtoa@h,___flsub@b
  5587  001684  C0B2  F07A         	movff	efgtoa@h+1,___flsub@b+1
  5588  001688  C0B3  F07B         	movff	efgtoa@h+2,___flsub@b+2
  5589  00168C  C0B4  F07C         	movff	efgtoa@h+3,___flsub@b+3
  5590  001690  C0C3  F02E         	movff	efgtoa@u,___flmul@a
  5591  001694  C0C4  F02F         	movff	efgtoa@u+1,___flmul@a+1
  5592  001698  C0C5  F030         	movff	efgtoa@u+2,___flmul@a+2
  5593  00169C  C0C6  F031         	movff	efgtoa@u+3,___flmul@a+3
  5594  0016A0  C0B5  F02A         	movff	efgtoa@l,___flmul@b
  5595  0016A4  C0B6  F02B         	movff	efgtoa@l+1,___flmul@b+1
  5596  0016A8  C0B7  F02C         	movff	efgtoa@l+2,___flmul@b+2
  5597  0016AC  C0B8  F02D         	movff	efgtoa@l+3,___flmul@b+3
  5598  0016B0  EC06  F014         	call	___flmul	;wreg free
  5599  0016B4  C02A  F07D         	movff	?___flmul,___flsub@a
  5600  0016B8  C02B  F07E         	movff	?___flmul+1,___flsub@a+1
  5601  0016BC  C02C  F07F         	movff	?___flmul+2,___flsub@a+2
  5602  0016C0  C02D  F080         	movff	?___flmul+3,___flsub@a+3
  5603  0016C4  EC91  F02D         	call	___flsub	;wreg free
  5604  0016C8  C079  F0B1         	movff	?___flsub,efgtoa@h
  5605  0016CC  C07A  F0B2         	movff	?___flsub+1,efgtoa@h+1
  5606  0016D0  C07B  F0B3         	movff	?___flsub+2,efgtoa@h+2
  5607  0016D4  C07C  F0B4         	movff	?___flsub+3,efgtoa@h+3
  5608  0016D8                     
  5609                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  5610  0016D8  C0C3  F02A         	movff	efgtoa@u,___fldiv@b
  5611  0016DC  C0C4  F02B         	movff	efgtoa@u+1,___fldiv@b+1
  5612  0016E0  C0C5  F02C         	movff	efgtoa@u+2,___fldiv@b+2
  5613  0016E4  C0C6  F02D         	movff	efgtoa@u+3,___fldiv@b+3
  5614  0016E8  0E00               	movlw	0
  5615  0016EA  6E2E               	movwf	___fldiv@a^0,c
  5616  0016EC  0E00               	movlw	0
  5617  0016EE  6E2F               	movwf	(___fldiv@a+1)^0,c
  5618  0016F0  0E20               	movlw	32
  5619  0016F2  6E30               	movwf	(___fldiv@a+2)^0,c
  5620  0016F4  0E41               	movlw	65
  5621  0016F6  6E31               	movwf	(___fldiv@a+3)^0,c
  5622  0016F8  EC2E  F016         	call	___fldiv	;wreg free
  5623  0016FC  C02A  F0C3         	movff	?___fldiv,efgtoa@u
  5624  001700  C02B  F0C4         	movff	?___fldiv+1,efgtoa@u+1
  5625  001704  C02C  F0C5         	movff	?___fldiv+2,efgtoa@u+2
  5626  001708  C02D  F0C6         	movff	?___fldiv+3,efgtoa@u+3
  5627  00170C                     
  5628                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 436:         ++i;
  5629  00170C  0100               	movlb	0	; () banked
  5630  00170E  4BB9               	infsnz	efgtoa@i& (0+255),f,b
  5631  001710  2BBA               	incf	(efgtoa@i+1)& (0+255),f,b
  5632  001712                     l8714:
  5633                           
  5634                           ; BSR set to: 0
  5635                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  5636  001712  51A1               	movf	efgtoa@m& (0+255),w,b
  5637  001714  5DB9               	subwf	efgtoa@i& (0+255),w,b
  5638  001716  51BA               	movf	(efgtoa@i+1)& (0+255),w,b
  5639  001718  0A80               	xorlw	128
  5640  00171A  6F8A               	movwf	??_efgtoa& (0+255),b
  5641  00171C  51A2               	movf	(efgtoa@m+1)& (0+255),w,b
  5642  00171E  0A80               	xorlw	128
  5643  001720  598A               	subwfb	??_efgtoa& (0+255),w,b
  5644  001722  A0D8               	btfss	status,0,c
  5645  001724  EF96  F00B         	goto	u9641
  5646  001728  EF98  F00B         	goto	u9640
  5647  00172C                     u9641:
  5648  00172C  EF0E  F00B         	goto	l8706
  5649  001730                     u9640:
  5650  001730                     
  5651                           ; BSR set to: 0
  5652                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  5653  001730  C0C3  F02A         	movff	efgtoa@u,___flmul@b
  5654  001734  C0C4  F02B         	movff	efgtoa@u+1,___flmul@b+1
  5655  001738  C0C5  F02C         	movff	efgtoa@u+2,___flmul@b+2
  5656  00173C  C0C6  F02D         	movff	efgtoa@u+3,___flmul@b+3
  5657  001740  0E00               	movlw	0
  5658  001742  6E2E               	movwf	___flmul@a^0,c
  5659  001744  0E00               	movlw	0
  5660  001746  6E2F               	movwf	(___flmul@a+1)^0,c
  5661  001748  0EA0               	movlw	160
  5662  00174A  6E30               	movwf	(___flmul@a+2)^0,c
  5663  00174C  0E40               	movlw	64
  5664  00174E  6E31               	movwf	(___flmul@a+3)^0,c
  5665  001750  EC06  F014         	call	___flmul	;wreg free
  5666  001754  C02A  F0B5         	movff	?___flmul,efgtoa@l
  5667  001758  C02B  F0B6         	movff	?___flmul+1,efgtoa@l+1
  5668  00175C  C02C  F0B7         	movff	?___flmul+2,efgtoa@l+2
  5669  001760  C02D  F0B8         	movff	?___flmul+3,efgtoa@l+3
  5670  001764                     
  5671                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  5672  001764  C0B1  F06D         	movff	efgtoa@h,___flge@ff1
  5673  001768  C0B2  F06E         	movff	efgtoa@h+1,___flge@ff1+1
  5674  00176C  C0B3  F06F         	movff	efgtoa@h+2,___flge@ff1+2
  5675  001770  C0B4  F070         	movff	efgtoa@h+3,___flge@ff1+3
  5676  001774  C0B5  F071         	movff	efgtoa@l,___flge@ff2
  5677  001778  C0B6  F072         	movff	efgtoa@l+1,___flge@ff2+1
  5678  00177C  C0B7  F073         	movff	efgtoa@l+2,___flge@ff2+2
  5679  001780  C0B8  F074         	movff	efgtoa@l+3,___flge@ff2+3
  5680  001784  ECB6  F024         	call	___flge	;wreg free
  5681  001788  0100               	movlb	0	; () banked
  5682  00178A  B0D8               	btfsc	status,0,c
  5683  00178C  EFCA  F00B         	goto	u9651
  5684  001790  EFCC  F00B         	goto	u9650
  5685  001794                     u9651:
  5686  001794  EFD6  F00B         	goto	l8722
  5687  001798                     u9650:
  5688  001798                     
  5689                           ; BSR set to: 0
  5690                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  5691  001798  0E00               	movlw	0
  5692  00179A  6FB5               	movwf	efgtoa@l& (0+255),b
  5693  00179C  0E00               	movlw	0
  5694  00179E  6FB6               	movwf	(efgtoa@l+1)& (0+255),b
  5695  0017A0  0E00               	movlw	0
  5696  0017A2  6FB7               	movwf	(efgtoa@l+2)& (0+255),b
  5697  0017A4  0E00               	movlw	0
  5698  0017A6  6FB8               	movwf	(efgtoa@l+3)& (0+255),b
  5699                           
  5700                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 443:     } else {
  5701  0017A8  EFFF  F00B         	goto	l8728
  5702  0017AC                     l8722:
  5703                           
  5704                           ; BSR set to: 0
  5705                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  5706  0017AC  C0B1  F014         	movff	efgtoa@h,___fleq@ff1
  5707  0017B0  C0B2  F015         	movff	efgtoa@h+1,___fleq@ff1+1
  5708  0017B4  C0B3  F016         	movff	efgtoa@h+2,___fleq@ff1+2
  5709  0017B8  C0B4  F017         	movff	efgtoa@h+3,___fleq@ff1+3
  5710  0017BC  C0B5  F018         	movff	efgtoa@l,___fleq@ff2
  5711  0017C0  C0B6  F019         	movff	efgtoa@l+1,___fleq@ff2+1
  5712  0017C4  C0B7  F01A         	movff	efgtoa@l+2,___fleq@ff2+2
  5713  0017C8  C0B8  F01B         	movff	efgtoa@l+3,___fleq@ff2+3
  5714  0017CC  ECC9  F029         	call	___fleq	;wreg free
  5715  0017D0  A0D8               	btfss	status,0,c
  5716  0017D2  EFED  F00B         	goto	u9661
  5717  0017D6  EFEF  F00B         	goto	u9660
  5718  0017DA                     u9661:
  5719  0017DA  EFFF  F00B         	goto	l8728
  5720  0017DE                     u9660:
  5721  0017DE  0100               	movlb	0	; () banked
  5722  0017E0  B1A7               	btfsc	efgtoa@d& (0+255),0,b
  5723  0017E2  EFF5  F00B         	goto	u9671
  5724  0017E6  EFF7  F00B         	goto	u9670
  5725  0017EA                     u9671:
  5726  0017EA  EFFF  F00B         	goto	l8728
  5727  0017EE                     u9670:
  5728  0017EE                     
  5729                           ; BSR set to: 0
  5730                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  5731  0017EE  0E00               	movlw	0
  5732  0017F0  6FB5               	movwf	efgtoa@l& (0+255),b
  5733  0017F2  0E00               	movlw	0
  5734  0017F4  6FB6               	movwf	(efgtoa@l+1)& (0+255),b
  5735  0017F6  0E00               	movlw	0
  5736  0017F8  6FB7               	movwf	(efgtoa@l+2)& (0+255),b
  5737  0017FA  0E00               	movlw	0
  5738  0017FC  6FB8               	movwf	(efgtoa@l+3)& (0+255),b
  5739  0017FE                     l8728:
  5740                           
  5741                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  5742  0017FE  C0BB  F06D         	movff	efgtoa@g,___fladd@b
  5743  001802  C0BC  F06E         	movff	efgtoa@g+1,___fladd@b+1
  5744  001806  C0BD  F06F         	movff	efgtoa@g+2,___fladd@b+2
  5745  00180A  C0BE  F070         	movff	efgtoa@g+3,___fladd@b+3
  5746  00180E  C0B5  F071         	movff	efgtoa@l,___fladd@a
  5747  001812  C0B6  F072         	movff	efgtoa@l+1,___fladd@a+1
  5748  001816  C0B7  F073         	movff	efgtoa@l+2,___fladd@a+2
  5749  00181A  C0B8  F074         	movff	efgtoa@l+3,___fladd@a+3
  5750  00181E  ECA5  F011         	call	___fladd	;wreg free
  5751  001822  C06D  F0B1         	movff	?___fladd,efgtoa@h
  5752  001826  C06E  F0B2         	movff	?___fladd+1,efgtoa@h+1
  5753  00182A  C06F  F0B3         	movff	?___fladd+2,efgtoa@h+2
  5754  00182E  C070  F0B4         	movff	?___fladd+3,efgtoa@h+3
  5755  001832                     
  5756                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  5757  001832  C0B1  F06D         	movff	efgtoa@h,___flge@ff1
  5758  001836  C0B2  F06E         	movff	efgtoa@h+1,___flge@ff1+1
  5759  00183A  C0B3  F06F         	movff	efgtoa@h+2,___flge@ff1+2
  5760  00183E  C0B4  F070         	movff	efgtoa@h+3,___flge@ff1+3
  5761  001842  0E00               	movlw	0
  5762  001844  6E2E               	movwf	___flmul@a^0,c
  5763  001846  0E00               	movlw	0
  5764  001848  6E2F               	movwf	(___flmul@a+1)^0,c
  5765  00184A  0E20               	movlw	32
  5766  00184C  6E30               	movwf	(___flmul@a+2)^0,c
  5767  00184E  0E41               	movlw	65
  5768  001850  6E31               	movwf	(___flmul@a+3)^0,c
  5769  001852  C0A3  F02A         	movff	efgtoa@ou,___flmul@b
  5770  001856  C0A4  F02B         	movff	efgtoa@ou+1,___flmul@b+1
  5771  00185A  C0A5  F02C         	movff	efgtoa@ou+2,___flmul@b+2
  5772  00185E  C0A6  F02D         	movff	efgtoa@ou+3,___flmul@b+3
  5773  001862  EC06  F014         	call	___flmul	;wreg free
  5774  001866  C02A  F071         	movff	?___flmul,___flge@ff2
  5775  00186A  C02B  F072         	movff	?___flmul+1,___flge@ff2+1
  5776  00186E  C02C  F073         	movff	?___flmul+2,___flge@ff2+2
  5777  001872  C02D  F074         	movff	?___flmul+3,___flge@ff2+3
  5778  001876  ECB6  F024         	call	___flge	;wreg free
  5779  00187A  0100               	movlb	0	; () banked
  5780  00187C  A0D8               	btfss	status,0,c
  5781  00187E  EF43  F00C         	goto	u9681
  5782  001882  EF45  F00C         	goto	u9680
  5783  001886                     u9681:
  5784  001886  EF6D  F00C         	goto	l8740
  5785  00188A                     u9680:
  5786  00188A                     
  5787                           ; BSR set to: 0
  5788                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 454:   e++;
  5789  00188A  4BBF               	infsnz	efgtoa@e& (0+255),f,b
  5790  00188C  2BC0               	incf	(efgtoa@e+1)& (0+255),f,b
  5791  00188E                     
  5792                           ; BSR set to: 0
  5793                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  5794  00188E  C0A3  F02A         	movff	efgtoa@ou,___flmul@b
  5795  001892  C0A4  F02B         	movff	efgtoa@ou+1,___flmul@b+1
  5796  001896  C0A5  F02C         	movff	efgtoa@ou+2,___flmul@b+2
  5797  00189A  C0A6  F02D         	movff	efgtoa@ou+3,___flmul@b+3
  5798  00189E  0E00               	movlw	0
  5799  0018A0  6E2E               	movwf	___flmul@a^0,c
  5800  0018A2  0E00               	movlw	0
  5801  0018A4  6E2F               	movwf	(___flmul@a+1)^0,c
  5802  0018A6  0E20               	movlw	32
  5803  0018A8  6E30               	movwf	(___flmul@a+2)^0,c
  5804  0018AA  0E41               	movlw	65
  5805  0018AC  6E31               	movwf	(___flmul@a+3)^0,c
  5806  0018AE  EC06  F014         	call	___flmul	;wreg free
  5807  0018B2  C02A  F0A3         	movff	?___flmul,efgtoa@ou
  5808  0018B6  C02B  F0A4         	movff	?___flmul+1,efgtoa@ou+1
  5809  0018BA  C02C  F0A5         	movff	?___flmul+2,efgtoa@ou+2
  5810  0018BE  C02D  F0A6         	movff	?___flmul+3,efgtoa@ou+3
  5811  0018C2                     
  5812                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  5813  0018C2  0E66               	movlw	102
  5814  0018C4  0100               	movlb	0	; () banked
  5815  0018C6  19AF               	xorwf	efgtoa@nmode& (0+255),w,b
  5816  0018C8  A4D8               	btfss	status,2,c
  5817  0018CA  EF69  F00C         	goto	u9691
  5818  0018CE  EF6B  F00C         	goto	u9690
  5819  0018D2                     u9691:
  5820  0018D2  EF6D  F00C         	goto	l8740
  5821  0018D6                     u9690:
  5822  0018D6                     
  5823                           ; BSR set to: 0
  5824                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 458:    m++;
  5825  0018D6  4BA1               	infsnz	efgtoa@m& (0+255),f,b
  5826  0018D8  2BA2               	incf	(efgtoa@m+1)& (0+255),f,b
  5827  0018DA                     l8740:
  5828                           
  5829                           ; BSR set to: 0
  5830                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  5831  0018DA  C0A3  F0C3         	movff	efgtoa@ou,efgtoa@u
  5832  0018DE  C0A4  F0C4         	movff	efgtoa@ou+1,efgtoa@u+1
  5833  0018E2  C0A5  F0C5         	movff	efgtoa@ou+2,efgtoa@u+2
  5834  0018E6  C0A6  F0C6         	movff	efgtoa@ou+3,efgtoa@u+3
  5835  0018EA                     
  5836                           ; BSR set to: 0
  5837                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  5838  0018EA  0E65               	movlw	101
  5839  0018EC  19AF               	xorwf	efgtoa@nmode& (0+255),w,b
  5840  0018EE  B4D8               	btfsc	status,2,c
  5841  0018F0  EF7C  F00C         	goto	u9701
  5842  0018F4  EF7E  F00C         	goto	u9700
  5843  0018F8                     u9701:
  5844  0018F8  EF84  F00C         	goto	l8746
  5845  0018FC                     u9700:
  5846  0018FC                     
  5847                           ; BSR set to: 0
  5848  0018FC  C0BF  F09F         	movff	efgtoa@e,efgtoa@ne
  5849  001900  C0C0  F0A0         	movff	efgtoa@e+1,efgtoa@ne+1
  5850  001904  EF88  F00C         	goto	l2210
  5851  001908                     l8746:
  5852                           
  5853                           ; BSR set to: 0
  5854  001908  0E00               	movlw	0
  5855  00190A  6FA0               	movwf	(efgtoa@ne+1)& (0+255),b
  5856  00190C  0E00               	movlw	0
  5857  00190E  6F9F               	movwf	efgtoa@ne& (0+255),b
  5858  001910                     l2210:
  5859                           
  5860                           ; BSR set to: 0
  5861                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  5862  001910  0E00               	movlw	0
  5863  001912  6F9E               	movwf	(efgtoa@pp+1)& (0+255),b
  5864  001914  0E00               	movlw	0
  5865  001916  6F9D               	movwf	efgtoa@pp& (0+255),b
  5866                           
  5867                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  5868  001918  0E00               	movlw	0
  5869  00191A  6F9C               	movwf	(efgtoa@t+1)& (0+255),b
  5870  00191C  0E00               	movlw	0
  5871  00191E  6F9B               	movwf	efgtoa@t& (0+255),b
  5872                           
  5873                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  5874  001920  0E00               	movlw	0
  5875  001922  6FBA               	movwf	(efgtoa@i+1)& (0+255),b
  5876  001924  0E00               	movlw	0
  5877  001926  6FB9               	movwf	efgtoa@i& (0+255),b
  5878                           
  5879                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  5880  001928  EF84  F00D         	goto	l8796
  5881  00192C                     l8748:
  5882                           
  5883                           ; BSR set to: 0
  5884                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  5885  00192C  C0B1  F02A         	movff	efgtoa@h,___fldiv@b
  5886  001930  C0B2  F02B         	movff	efgtoa@h+1,___fldiv@b+1
  5887  001934  C0B3  F02C         	movff	efgtoa@h+2,___fldiv@b+2
  5888  001938  C0B4  F02D         	movff	efgtoa@h+3,___fldiv@b+3
  5889  00193C  C0C3  F02E         	movff	efgtoa@u,___fldiv@a
  5890  001940  C0C4  F02F         	movff	efgtoa@u+1,___fldiv@a+1
  5891  001944  C0C5  F030         	movff	efgtoa@u+2,___fldiv@a+2
  5892  001948  C0C6  F031         	movff	efgtoa@u+3,___fldiv@a+3
  5893  00194C  EC2E  F016         	call	___fldiv	;wreg free
  5894  001950  C02A  F036         	movff	?___fldiv,floorf@x
  5895  001954  C02B  F037         	movff	?___fldiv+1,floorf@x+1
  5896  001958  C02C  F038         	movff	?___fldiv+2,floorf@x+2
  5897  00195C  C02D  F039         	movff	?___fldiv+3,floorf@x+3
  5898  001960  EC8E  F01A         	call	_floorf	;wreg free
  5899  001964  C036  F0B5         	movff	?_floorf,efgtoa@l
  5900  001968  C037  F0B6         	movff	?_floorf+1,efgtoa@l+1
  5901  00196C  C038  F0B7         	movff	?_floorf+2,efgtoa@l+2
  5902  001970  C039  F0B8         	movff	?_floorf+3,efgtoa@l+3
  5903                           
  5904                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  5905  001974  C0B5  F079         	movff	efgtoa@l,___fltol@f1
  5906  001978  C0B6  F07A         	movff	efgtoa@l+1,___fltol@f1+1
  5907  00197C  C0B7  F07B         	movff	efgtoa@l+2,___fltol@f1+2
  5908  001980  C0B8  F07C         	movff	efgtoa@l+3,___fltol@f1+3
  5909  001984  EC32  F024         	call	___fltol	;wreg free
  5910  001988  C079  F0A7         	movff	?___fltol,efgtoa@d
  5911  00198C  C07A  F0A8         	movff	?___fltol+1,efgtoa@d+1
  5912  001990                     
  5913                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  5914  001990  B83E               	btfsc	_flags^0,4,c
  5915  001992  EFCD  F00C         	goto	u9711
  5916  001996  EFCF  F00C         	goto	u9710
  5917  00199A                     u9711:
  5918  00199A  EFED  F00C         	goto	l8760
  5919  00199E                     u9710:
  5920  00199E  0100               	movlb	0	; () banked
  5921  0019A0  51A7               	movf	efgtoa@d& (0+255),w,b
  5922  0019A2  11A8               	iorwf	(efgtoa@d+1)& (0+255),w,b
  5923  0019A4  A4D8               	btfss	status,2,c
  5924  0019A6  EFD7  F00C         	goto	u9721
  5925  0019AA  EFD9  F00C         	goto	u9720
  5926  0019AE                     u9721:
  5927  0019AE  EFED  F00C         	goto	l8760
  5928  0019B2                     u9720:
  5929  0019B2                     
  5930                           ; BSR set to: 0
  5931  0019B2  0E67               	movlw	103
  5932  0019B4  19B0               	xorwf	efgtoa@mode& (0+255),w,b
  5933  0019B6  A4D8               	btfss	status,2,c
  5934  0019B8  EFE0  F00C         	goto	u9731
  5935  0019BC  EFE2  F00C         	goto	u9730
  5936  0019C0                     u9731:
  5937  0019C0  EFED  F00C         	goto	l8760
  5938  0019C4                     u9730:
  5939  0019C4                     
  5940                           ; BSR set to: 0
  5941  0019C4  BFA0               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  5942  0019C6  EFE9  F00C         	goto	u9740
  5943  0019CA  EFE7  F00C         	goto	u9741
  5944  0019CE                     u9741:
  5945  0019CE  EFED  F00C         	goto	l8760
  5946  0019D2                     u9740:
  5947  0019D2                     
  5948                           ; BSR set to: 0
  5949                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  5950  0019D2  4B9B               	infsnz	efgtoa@t& (0+255),f,b
  5951  0019D4  2B9C               	incf	(efgtoa@t+1)& (0+255),f,b
  5952                           
  5953                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  5954  0019D6  EF38  F00D         	goto	l8788
  5955  0019DA                     l8760:
  5956                           
  5957                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  5958  0019DA  0100               	movlb	0	; () banked
  5959  0019DC  519D               	movf	efgtoa@pp& (0+255),w,b
  5960  0019DE  119E               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  5961  0019E0  A4D8               	btfss	status,2,c
  5962  0019E2  EFF5  F00C         	goto	u9751
  5963  0019E6  EFF7  F00C         	goto	u9750
  5964  0019EA                     u9751:
  5965  0019EA  EF21  F00D         	goto	l8780
  5966  0019EE                     u9750:
  5967  0019EE                     
  5968                           ; BSR set to: 0
  5969  0019EE  BFA0               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  5970  0019F0  EFFE  F00C         	goto	u9760
  5971  0019F4  EFFC  F00C         	goto	u9761
  5972  0019F8                     u9761:
  5973  0019F8  EF21  F00D         	goto	l8780
  5974  0019FC                     u9760:
  5975  0019FC                     
  5976                           ; BSR set to: 0
  5977                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  5978  0019FC  0E3E               	movlw	low _dbuf
  5979  0019FE  25C1               	addwf	efgtoa@n& (0+255),w,b
  5980  001A00  6ED9               	movwf	fsr2l,c
  5981  001A02  0E01               	movlw	high _dbuf
  5982  001A04  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5983  001A06  6EDA               	movwf	fsr2h,c
  5984  001A08  0E2E               	movlw	46
  5985  001A0A  6EDF               	movwf	indf2,c
  5986  001A0C                     
  5987                           ; BSR set to: 0
  5988  001A0C  4BC1               	infsnz	efgtoa@n& (0+255),f,b
  5989  001A0E  2BC2               	incf	(efgtoa@n+1)& (0+255),f,b
  5990  001A10                     
  5991                           ; BSR set to: 0
  5992                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  5993  001A10  07AD               	decf	efgtoa@w& (0+255),f,b
  5994  001A12  A0D8               	btfss	status,0,c
  5995  001A14  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  5996  001A16                     
  5997                           ; BSR set to: 0
  5998                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  5999  001A16  0E00               	movlw	0
  6000  001A18  6F9E               	movwf	(efgtoa@pp+1)& (0+255),b
  6001  001A1A  0E01               	movlw	1
  6002  001A1C  6F9D               	movwf	efgtoa@pp& (0+255),b
  6003  001A1E  EF21  F00D         	goto	l8780
  6004  001A22                     l8772:
  6005                           
  6006                           ; BSR set to: 0
  6007                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  6008  001A22  0E3E               	movlw	low _dbuf
  6009  001A24  25C1               	addwf	efgtoa@n& (0+255),w,b
  6010  001A26  6ED9               	movwf	fsr2l,c
  6011  001A28  0E01               	movlw	high _dbuf
  6012  001A2A  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6013  001A2C  6EDA               	movwf	fsr2h,c
  6014  001A2E  0E30               	movlw	48
  6015  001A30  6EDF               	movwf	indf2,c
  6016  001A32                     
  6017                           ; BSR set to: 0
  6018  001A32  4BC1               	infsnz	efgtoa@n& (0+255),f,b
  6019  001A34  2BC2               	incf	(efgtoa@n+1)& (0+255),f,b
  6020  001A36                     
  6021                           ; BSR set to: 0
  6022                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  6023  001A36  07AD               	decf	efgtoa@w& (0+255),f,b
  6024  001A38  A0D8               	btfss	status,0,c
  6025  001A3A  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  6026  001A3C                     
  6027                           ; BSR set to: 0
  6028                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  6029  001A3C  079B               	decf	efgtoa@t& (0+255),f,b
  6030  001A3E  A0D8               	btfss	status,0,c
  6031  001A40  079C               	decf	(efgtoa@t+1)& (0+255),f,b
  6032  001A42                     l8780:
  6033                           
  6034                           ; BSR set to: 0
  6035                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  6036  001A42  519B               	movf	efgtoa@t& (0+255),w,b
  6037  001A44  119C               	iorwf	(efgtoa@t+1)& (0+255),w,b
  6038  001A46  A4D8               	btfss	status,2,c
  6039  001A48  EF28  F00D         	goto	u9771
  6040  001A4C  EF2A  F00D         	goto	u9770
  6041  001A50                     u9771:
  6042  001A50  EF11  F00D         	goto	l8772
  6043  001A54                     u9770:
  6044  001A54                     
  6045                           ; BSR set to: 0
  6046                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  6047  001A54  0E3E               	movlw	low _dbuf
  6048  001A56  25C1               	addwf	efgtoa@n& (0+255),w,b
  6049  001A58  6ED9               	movwf	fsr2l,c
  6050  001A5A  0E01               	movlw	high _dbuf
  6051  001A5C  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6052  001A5E  6EDA               	movwf	fsr2h,c
  6053  001A60  51A7               	movf	efgtoa@d& (0+255),w,b
  6054  001A62  0F30               	addlw	48
  6055  001A64  6EDF               	movwf	indf2,c
  6056  001A66                     
  6057                           ; BSR set to: 0
  6058  001A66  4BC1               	infsnz	efgtoa@n& (0+255),f,b
  6059  001A68  2BC2               	incf	(efgtoa@n+1)& (0+255),f,b
  6060  001A6A                     
  6061                           ; BSR set to: 0
  6062                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  6063  001A6A  07AD               	decf	efgtoa@w& (0+255),f,b
  6064  001A6C  A0D8               	btfss	status,0,c
  6065  001A6E  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  6066  001A70                     l8788:
  6067                           
  6068                           ; BSR set to: 0
  6069                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  6070  001A70  C0B1  F079         	movff	efgtoa@h,___flsub@b
  6071  001A74  C0B2  F07A         	movff	efgtoa@h+1,___flsub@b+1
  6072  001A78  C0B3  F07B         	movff	efgtoa@h+2,___flsub@b+2
  6073  001A7C  C0B4  F07C         	movff	efgtoa@h+3,___flsub@b+3
  6074  001A80  C0C3  F02E         	movff	efgtoa@u,___flmul@a
  6075  001A84  C0C4  F02F         	movff	efgtoa@u+1,___flmul@a+1
  6076  001A88  C0C5  F030         	movff	efgtoa@u+2,___flmul@a+2
  6077  001A8C  C0C6  F031         	movff	efgtoa@u+3,___flmul@a+3
  6078  001A90  C0B5  F02A         	movff	efgtoa@l,___flmul@b
  6079  001A94  C0B6  F02B         	movff	efgtoa@l+1,___flmul@b+1
  6080  001A98  C0B7  F02C         	movff	efgtoa@l+2,___flmul@b+2
  6081  001A9C  C0B8  F02D         	movff	efgtoa@l+3,___flmul@b+3
  6082  001AA0  EC06  F014         	call	___flmul	;wreg free
  6083  001AA4  C02A  F07D         	movff	?___flmul,___flsub@a
  6084  001AA8  C02B  F07E         	movff	?___flmul+1,___flsub@a+1
  6085  001AAC  C02C  F07F         	movff	?___flmul+2,___flsub@a+2
  6086  001AB0  C02D  F080         	movff	?___flmul+3,___flsub@a+3
  6087  001AB4  EC91  F02D         	call	___flsub	;wreg free
  6088  001AB8  C079  F0B1         	movff	?___flsub,efgtoa@h
  6089  001ABC  C07A  F0B2         	movff	?___flsub+1,efgtoa@h+1
  6090  001AC0  C07B  F0B3         	movff	?___flsub+2,efgtoa@h+2
  6091  001AC4  C07C  F0B4         	movff	?___flsub+3,efgtoa@h+3
  6092  001AC8                     
  6093                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  6094  001AC8  C0C3  F02A         	movff	efgtoa@u,___fldiv@b
  6095  001ACC  C0C4  F02B         	movff	efgtoa@u+1,___fldiv@b+1
  6096  001AD0  C0C5  F02C         	movff	efgtoa@u+2,___fldiv@b+2
  6097  001AD4  C0C6  F02D         	movff	efgtoa@u+3,___fldiv@b+3
  6098  001AD8  0E00               	movlw	0
  6099  001ADA  6E2E               	movwf	___fldiv@a^0,c
  6100  001ADC  0E00               	movlw	0
  6101  001ADE  6E2F               	movwf	(___fldiv@a+1)^0,c
  6102  001AE0  0E20               	movlw	32
  6103  001AE2  6E30               	movwf	(___fldiv@a+2)^0,c
  6104  001AE4  0E41               	movlw	65
  6105  001AE6  6E31               	movwf	(___fldiv@a+3)^0,c
  6106  001AE8  EC2E  F016         	call	___fldiv	;wreg free
  6107  001AEC  C02A  F0C3         	movff	?___fldiv,efgtoa@u
  6108  001AF0  C02B  F0C4         	movff	?___fldiv+1,efgtoa@u+1
  6109  001AF4  C02C  F0C5         	movff	?___fldiv+2,efgtoa@u+2
  6110  001AF8  C02D  F0C6         	movff	?___fldiv+3,efgtoa@u+3
  6111  001AFC                     
  6112                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  6113  001AFC  0100               	movlb	0	; () banked
  6114  001AFE  079F               	decf	efgtoa@ne& (0+255),f,b
  6115  001B00  A0D8               	btfss	status,0,c
  6116  001B02  07A0               	decf	(efgtoa@ne+1)& (0+255),f,b
  6117  001B04                     
  6118                           ; BSR set to: 0
  6119                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 490:         ++i;
  6120  001B04  4BB9               	infsnz	efgtoa@i& (0+255),f,b
  6121  001B06  2BBA               	incf	(efgtoa@i+1)& (0+255),f,b
  6122  001B08                     l8796:
  6123                           
  6124                           ; BSR set to: 0
  6125                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  6126  001B08  51A1               	movf	efgtoa@m& (0+255),w,b
  6127  001B0A  5DB9               	subwf	efgtoa@i& (0+255),w,b
  6128  001B0C  51BA               	movf	(efgtoa@i+1)& (0+255),w,b
  6129  001B0E  0A80               	xorlw	128
  6130  001B10  6F8A               	movwf	??_efgtoa& (0+255),b
  6131  001B12  51A2               	movf	(efgtoa@m+1)& (0+255),w,b
  6132  001B14  0A80               	xorlw	128
  6133  001B16  598A               	subwfb	??_efgtoa& (0+255),w,b
  6134  001B18  B0D8               	btfsc	status,0,c
  6135  001B1A  EF91  F00D         	goto	u9781
  6136  001B1E  EF93  F00D         	goto	u9780
  6137  001B22                     u9781:
  6138  001B22  EFA1  F00D         	goto	l8800
  6139  001B26                     u9780:
  6140  001B26                     
  6141                           ; BSR set to: 0
  6142  001B26  BFC2               	btfsc	(efgtoa@n+1)& (0+255),7,b
  6143  001B28  EF9F  F00D         	goto	u9791
  6144  001B2C  51C2               	movf	(efgtoa@n+1)& (0+255),w,b
  6145  001B2E  E109               	bnz	u9790
  6146  001B30  0E4B               	movlw	75
  6147  001B32  5DC1               	subwf	efgtoa@n& (0+255),w,b
  6148  001B34  A0D8               	btfss	status,0,c
  6149  001B36  EF9F  F00D         	goto	u9791
  6150  001B3A  EFA1  F00D         	goto	u9790
  6151  001B3E                     u9791:
  6152  001B3E  EF96  F00C         	goto	l8748
  6153  001B42                     u9790:
  6154  001B42                     l8800:
  6155                           
  6156                           ; BSR set to: 0
  6157                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  6158  001B42  519D               	movf	efgtoa@pp& (0+255),w,b
  6159  001B44  119E               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  6160  001B46  A4D8               	btfss	status,2,c
  6161  001B48  EFA8  F00D         	goto	u9801
  6162  001B4C  EFAA  F00D         	goto	u9800
  6163  001B50                     u9801:
  6164  001B50  EFBB  F00D         	goto	l8808
  6165  001B54                     u9800:
  6166  001B54                     
  6167                           ; BSR set to: 0
  6168  001B54  A83E               	btfss	_flags^0,4,c
  6169  001B56  EFAF  F00D         	goto	u9811
  6170  001B5A  EFB1  F00D         	goto	u9810
  6171  001B5E                     u9811:
  6172  001B5E  EFBB  F00D         	goto	l8808
  6173  001B62                     u9810:
  6174  001B62                     
  6175                           ; BSR set to: 0
  6176                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  6177  001B62  0E3E               	movlw	low _dbuf
  6178  001B64  25C1               	addwf	efgtoa@n& (0+255),w,b
  6179  001B66  6ED9               	movwf	fsr2l,c
  6180  001B68  0E01               	movlw	high _dbuf
  6181  001B6A  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6182  001B6C  6EDA               	movwf	fsr2h,c
  6183  001B6E  0E2E               	movlw	46
  6184  001B70  6EDF               	movwf	indf2,c
  6185  001B72                     
  6186                           ; BSR set to: 0
  6187  001B72  4BC1               	infsnz	efgtoa@n& (0+255),f,b
  6188  001B74  2BC2               	incf	(efgtoa@n+1)& (0+255),f,b
  6189  001B76                     l8808:
  6190                           
  6191                           ; BSR set to: 0
  6192                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  6193  001B76  0E3E               	movlw	low _dbuf
  6194  001B78  25C1               	addwf	efgtoa@n& (0+255),w,b
  6195  001B7A  6ED9               	movwf	fsr2l,c
  6196  001B7C  0E01               	movlw	high _dbuf
  6197  001B7E  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6198  001B80  6EDA               	movwf	fsr2h,c
  6199  001B82  0E00               	movlw	0
  6200  001B84  6EDF               	movwf	indf2,c
  6201  001B86                     
  6202                           ; BSR set to: 0
  6203                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  6204  001B86  0E65               	movlw	101
  6205  001B88  19AF               	xorwf	efgtoa@nmode& (0+255),w,b
  6206  001B8A  A4D8               	btfss	status,2,c
  6207  001B8C  EFCA  F00D         	goto	u9821
  6208  001B90  EFCC  F00D         	goto	u9820
  6209  001B94                     u9821:
  6210  001B94  EF9E  F00E         	goto	l8870
  6211  001B98                     u9820:
  6212  001B98                     
  6213                           ; BSR set to: 0
  6214                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  6215  001B98  0E00               	movlw	0
  6216  001B9A  6FBA               	movwf	(efgtoa@i+1)& (0+255),b
  6217  001B9C  0E4F               	movlw	79
  6218  001B9E  6FB9               	movwf	efgtoa@i& (0+255),b
  6219  001BA0                     
  6220                           ; BSR set to: 0
  6221                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  6222  001BA0  0E3E               	movlw	low _dbuf
  6223  001BA2  25B9               	addwf	efgtoa@i& (0+255),w,b
  6224  001BA4  6ED9               	movwf	fsr2l,c
  6225  001BA6  0E01               	movlw	high _dbuf
  6226  001BA8  21BA               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6227  001BAA  6EDA               	movwf	fsr2h,c
  6228  001BAC  0E00               	movlw	0
  6229  001BAE  6EDF               	movwf	indf2,c
  6230  001BB0                     
  6231                           ; BSR set to: 0
  6232                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  6233  001BB0  0E00               	movlw	0
  6234  001BB2  6FAA               	movwf	(efgtoa@sign+1)& (0+255),b
  6235  001BB4  0E00               	movlw	0
  6236  001BB6  6FA9               	movwf	efgtoa@sign& (0+255),b
  6237  001BB8                     
  6238                           ; BSR set to: 0
  6239                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  6240  001BB8  BFC0               	btfsc	(efgtoa@e+1)& (0+255),7,b
  6241  001BBA  EFE3  F00D         	goto	u9830
  6242  001BBE  EFE1  F00D         	goto	u9831
  6243  001BC2                     u9831:
  6244  001BC2  EFEB  F00D         	goto	l8824
  6245  001BC6                     u9830:
  6246  001BC6                     
  6247                           ; BSR set to: 0
  6248                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  6249  001BC6  0E00               	movlw	0
  6250  001BC8  6FAA               	movwf	(efgtoa@sign+1)& (0+255),b
  6251  001BCA  0E01               	movlw	1
  6252  001BCC  6FA9               	movwf	efgtoa@sign& (0+255),b
  6253  001BCE                     
  6254                           ; BSR set to: 0
  6255                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  6256  001BCE  6DBF               	negf	efgtoa@e& (0+255),b
  6257  001BD0  1FC0               	comf	(efgtoa@e+1)& (0+255),f,b
  6258  001BD2  B0D8               	btfsc	status,0,c
  6259  001BD4  2BC0               	incf	(efgtoa@e+1)& (0+255),f,b
  6260  001BD6                     l8824:
  6261                           
  6262                           ; BSR set to: 0
  6263                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  6264  001BD6  0E00               	movlw	0
  6265  001BD8  6FAC               	movwf	(efgtoa@p+1)& (0+255),b
  6266  001BDA  0E02               	movlw	2
  6267  001BDC  6FAB               	movwf	efgtoa@p& (0+255),b
  6268                           
  6269                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  6270  001BDE  EF1C  F00E         	goto	l8836
  6271  001BE2                     l8826:
  6272                           
  6273                           ; BSR set to: 0
  6274                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  6275  001BE2  07B9               	decf	efgtoa@i& (0+255),f,b
  6276  001BE4  A0D8               	btfss	status,0,c
  6277  001BE6  07BA               	decf	(efgtoa@i+1)& (0+255),f,b
  6278  001BE8                     
  6279                           ; BSR set to: 0
  6280                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  6281  001BE8  0E3E               	movlw	low _dbuf
  6282  001BEA  25B9               	addwf	efgtoa@i& (0+255),w,b
  6283  001BEC  6ED9               	movwf	fsr2l,c
  6284  001BEE  0E01               	movlw	high _dbuf
  6285  001BF0  21BA               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6286  001BF2  6EDA               	movwf	fsr2h,c
  6287  001BF4  C0BF  F014         	movff	efgtoa@e,___awmod@dividend
  6288  001BF8  C0C0  F015         	movff	efgtoa@e+1,___awmod@dividend+1
  6289  001BFC  0E00               	movlw	0
  6290  001BFE  6E17               	movwf	(___awmod@divisor+1)^0,c
  6291  001C00  0E0A               	movlw	10
  6292  001C02  6E16               	movwf	___awmod@divisor^0,c
  6293  001C04  EC71  F029         	call	___awmod	;wreg free
  6294  001C08  5014               	movf	?___awmod^0,w,c
  6295  001C0A  0F30               	addlw	48
  6296  001C0C  6EDF               	movwf	indf2,c
  6297  001C0E                     
  6298                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  6299  001C0E  C0BF  F014         	movff	efgtoa@e,___awdiv@dividend
  6300  001C12  C0C0  F015         	movff	efgtoa@e+1,___awdiv@dividend+1
  6301  001C16  0E00               	movlw	0
  6302  001C18  6E17               	movwf	(___awdiv@divisor+1)^0,c
  6303  001C1A  0E0A               	movlw	10
  6304  001C1C  6E16               	movwf	___awdiv@divisor^0,c
  6305  001C1E  EC4E  F028         	call	___awdiv	;wreg free
  6306  001C22  C014  F0BF         	movff	?___awdiv,efgtoa@e
  6307  001C26  C015  F0C0         	movff	?___awdiv+1,efgtoa@e+1
  6308  001C2A                     
  6309                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  6310  001C2A  0100               	movlb	0	; () banked
  6311  001C2C  07AB               	decf	efgtoa@p& (0+255),f,b
  6312  001C2E  A0D8               	btfss	status,0,c
  6313  001C30  07AC               	decf	(efgtoa@p+1)& (0+255),f,b
  6314  001C32                     
  6315                           ; BSR set to: 0
  6316                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  6317  001C32  07AD               	decf	efgtoa@w& (0+255),f,b
  6318  001C34  A0D8               	btfss	status,0,c
  6319  001C36  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  6320  001C38                     l8836:
  6321                           
  6322                           ; BSR set to: 0
  6323                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  6324  001C38  51BF               	movf	efgtoa@e& (0+255),w,b
  6325  001C3A  11C0               	iorwf	(efgtoa@e+1)& (0+255),w,b
  6326  001C3C  A4D8               	btfss	status,2,c
  6327  001C3E  EF23  F00E         	goto	u9841
  6328  001C42  EF25  F00E         	goto	u9840
  6329  001C46                     u9841:
  6330  001C46  EFF1  F00D         	goto	l8826
  6331  001C4A                     u9840:
  6332  001C4A                     
  6333                           ; BSR set to: 0
  6334  001C4A  BFAC               	btfsc	(efgtoa@p+1)& (0+255),7,b
  6335  001C4C  EF32  F00E         	goto	u9850
  6336  001C50  51AC               	movf	(efgtoa@p+1)& (0+255),w,b
  6337  001C52  E106               	bnz	u9851
  6338  001C54  05AB               	decf	efgtoa@p& (0+255),w,b
  6339  001C56  B0D8               	btfsc	status,0,c
  6340  001C58  EF30  F00E         	goto	u9851
  6341  001C5C  EF32  F00E         	goto	u9850
  6342  001C60                     u9851:
  6343  001C60  EFF1  F00D         	goto	l8826
  6344  001C64                     u9850:
  6345  001C64                     
  6346                           ; BSR set to: 0
  6347                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 514:         --i;
  6348  001C64  07B9               	decf	efgtoa@i& (0+255),f,b
  6349  001C66  A0D8               	btfss	status,0,c
  6350  001C68  07BA               	decf	(efgtoa@i+1)& (0+255),f,b
  6351  001C6A                     
  6352                           ; BSR set to: 0
  6353                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  6354  001C6A  51A9               	movf	efgtoa@sign& (0+255),w,b
  6355  001C6C  11AA               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  6356  001C6E  A4D8               	btfss	status,2,c
  6357  001C70  EF3C  F00E         	goto	u9861
  6358  001C74  EF3E  F00E         	goto	u9860
  6359  001C78                     u9861:
  6360  001C78  EF44  F00E         	goto	l8846
  6361  001C7C                     u9860:
  6362  001C7C                     
  6363                           ; BSR set to: 0
  6364  001C7C  0E00               	movlw	0
  6365  001C7E  6F96               	movwf	(_efgtoa$3572+1)& (0+255),b
  6366  001C80  0E2B               	movlw	43
  6367  001C82  6F95               	movwf	_efgtoa$3572& (0+255),b
  6368  001C84  EF48  F00E         	goto	l8848
  6369  001C88                     l8846:
  6370                           
  6371                           ; BSR set to: 0
  6372  001C88  0E00               	movlw	0
  6373  001C8A  6F96               	movwf	(_efgtoa$3572+1)& (0+255),b
  6374  001C8C  0E2D               	movlw	45
  6375  001C8E  6F95               	movwf	_efgtoa$3572& (0+255),b
  6376  001C90                     l8848:
  6377                           
  6378                           ; BSR set to: 0
  6379  001C90  0E3E               	movlw	low _dbuf
  6380  001C92  25B9               	addwf	efgtoa@i& (0+255),w,b
  6381  001C94  6ED9               	movwf	fsr2l,c
  6382  001C96  0E01               	movlw	high _dbuf
  6383  001C98  21BA               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6384  001C9A  6EDA               	movwf	fsr2h,c
  6385  001C9C  0060  F257  FFDF   	movff	_efgtoa$3572,indf2
  6386  001CA2                     
  6387                           ; BSR set to: 0
  6388                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 516:         --w;
  6389  001CA2  07AD               	decf	efgtoa@w& (0+255),f,b
  6390  001CA4  A0D8               	btfss	status,0,c
  6391  001CA6  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  6392  001CA8                     
  6393                           ; BSR set to: 0
  6394                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 518:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  6395  001CA8  07B9               	decf	efgtoa@i& (0+255),f,b
  6396  001CAA  A0D8               	btfss	status,0,c
  6397  001CAC  07BA               	decf	(efgtoa@i+1)& (0+255),f,b
  6398  001CAE                     
  6399                           ; BSR set to: 0
  6400  001CAE  0EBF               	movlw	191
  6401  001CB0  6F8A               	movwf	??_efgtoa& (0+255),b
  6402  001CB2  0EFF               	movlw	255
  6403  001CB4  6F8B               	movwf	(??_efgtoa+1)& (0+255),b
  6404  001CB6  5189               	movf	efgtoa@c& (0+255),w,b
  6405  001CB8  6F8C               	movwf	(??_efgtoa+2)& (0+255),b
  6406  001CBA  6B8D               	clrf	(??_efgtoa+3)& (0+255),b
  6407  001CBC  518A               	movf	??_efgtoa& (0+255),w,b
  6408  001CBE  278C               	addwf	(??_efgtoa+2)& (0+255),f,b
  6409  001CC0  518B               	movf	(??_efgtoa+1)& (0+255),w,b
  6410  001CC2  238D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  6411  001CC4  518D               	movf	(??_efgtoa+3)& (0+255),w,b
  6412  001CC6  E10A               	bnz	u9870
  6413  001CC8  0E1A               	movlw	26
  6414  001CCA  5D8C               	subwf	(??_efgtoa+2)& (0+255),w,b
  6415  001CCC  A0D8               	btfss	status,0,c
  6416  001CCE  EF6B  F00E         	goto	u9871
  6417  001CD2  EF6E  F00E         	goto	u9870
  6418  001CD6                     u9871:
  6419  001CD6  0E01               	movlw	1
  6420  001CD8  EF6F  F00E         	goto	u9880
  6421  001CDC                     u9870:
  6422  001CDC  0E00               	movlw	0
  6423  001CDE                     u9880:
  6424  001CDE  6F99               	movwf	_efgtoa$3574& (0+255),b
  6425  001CE0  6B9A               	clrf	(_efgtoa$3574+1)& (0+255),b
  6426  001CE2                     
  6427                           ; BSR set to: 0
  6428  001CE2  5199               	movf	_efgtoa$3574& (0+255),w,b
  6429  001CE4  119A               	iorwf	(_efgtoa$3574+1)& (0+255),w,b
  6430  001CE6  A4D8               	btfss	status,2,c
  6431  001CE8  EF78  F00E         	goto	u9891
  6432  001CEC  EF7A  F00E         	goto	u9890
  6433  001CF0                     u9891:
  6434  001CF0  EF80  F00E         	goto	l8862
  6435  001CF4                     u9890:
  6436  001CF4                     
  6437                           ; BSR set to: 0
  6438  001CF4  0E00               	movlw	0
  6439  001CF6  6F98               	movwf	(_efgtoa$3573+1)& (0+255),b
  6440  001CF8  0E65               	movlw	101
  6441  001CFA  6F97               	movwf	_efgtoa$3573& (0+255),b
  6442  001CFC  EF84  F00E         	goto	l8864
  6443  001D00                     l8862:
  6444                           
  6445                           ; BSR set to: 0
  6446  001D00  0E00               	movlw	0
  6447  001D02  6F98               	movwf	(_efgtoa$3573+1)& (0+255),b
  6448  001D04  0E45               	movlw	69
  6449  001D06  6F97               	movwf	_efgtoa$3573& (0+255),b
  6450  001D08                     l8864:
  6451                           
  6452                           ; BSR set to: 0
  6453  001D08  0E3E               	movlw	low _dbuf
  6454  001D0A  25B9               	addwf	efgtoa@i& (0+255),w,b
  6455  001D0C  6ED9               	movwf	fsr2l,c
  6456  001D0E  0E01               	movlw	high _dbuf
  6457  001D10  21BA               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6458  001D12  6EDA               	movwf	fsr2h,c
  6459  001D14  0060  F25F  FFDF   	movff	_efgtoa$3573,indf2
  6460  001D1A                     
  6461                           ; BSR set to: 0
  6462                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 519:         --w;
  6463  001D1A  07AD               	decf	efgtoa@w& (0+255),f,b
  6464  001D1C  A0D8               	btfss	status,0,c
  6465  001D1E  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  6466  001D20                     
  6467                           ; BSR set to: 0
  6468                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  6469  001D20  0E3E               	movlw	low _dbuf
  6470  001D22  25C1               	addwf	efgtoa@n& (0+255),w,b
  6471  001D24  6E14               	movwf	strcpy@dest^0,c
  6472  001D26  0E01               	movlw	high _dbuf
  6473  001D28  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6474  001D2A  6E15               	movwf	(strcpy@dest+1)^0,c
  6475  001D2C  0E3E               	movlw	low _dbuf
  6476  001D2E  25B9               	addwf	efgtoa@i& (0+255),w,b
  6477  001D30  6E16               	movwf	strcpy@src^0,c
  6478  001D32  0E01               	movlw	high _dbuf
  6479  001D34  21BA               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6480  001D36  6E17               	movwf	(strcpy@src+1)^0,c
  6481  001D38  EC10  F02C         	call	_strcpy	;wreg free
  6482  001D3C                     l8870:
  6483                           
  6484                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 524:     return p
      +                          ad(fp, &dbuf[0], w);
  6485  001D3C  C083  F026         	movff	efgtoa@fp,pad@fp
  6486  001D40  C084  F027         	movff	efgtoa@fp+1,pad@fp+1
  6487  001D44  0E3E               	movlw	low _dbuf
  6488  001D46  6E28               	movwf	pad@buf^0,c
  6489  001D48  0E01               	movlw	high _dbuf
  6490  001D4A  6E29               	movwf	(pad@buf+1)^0,c
  6491  001D4C  C0AD  F02A         	movff	efgtoa@w,pad@p
  6492  001D50  C0AE  F02B         	movff	efgtoa@w+1,pad@p+1
  6493  001D54  ECB0  F028         	call	_pad	;wreg free
  6494  001D58  C026  F083         	movff	?_pad,?_efgtoa
  6495  001D5C  C027  F084         	movff	?_pad+1,?_efgtoa+1
  6496  001D60                     l2164:
  6497  001D60  0012               	return		;funcret
  6498  001D62                     __end_of_efgtoa:
  6499                           	callstack 0
  6500                           
  6501 ;; *************** function _tolower *****************
  6502 ;; Defined at:
  6503 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\tolower.c"
  6504 ;; Parameters:    Size  Location     Type
  6505 ;;  c               2   25[COMRAM] int 
  6506 ;; Auto vars:     Size  Location     Type
  6507 ;;		None
  6508 ;; Return value:  Size  Location     Type
  6509 ;;                  2   25[COMRAM] int 
  6510 ;; Registers used:
  6511 ;;		wreg, status,2, status,0
  6512 ;; Tracked objects:
  6513 ;;		On entry : 0/0
  6514 ;;		On exit  : 0/0
  6515 ;;		Unchanged: 0/0
  6516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6517 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6518 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6519 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6520 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6521 ;;Total ram usage:        8 bytes
  6522 ;; Hardware stack levels used: 1
  6523 ;; Hardware stack levels required when called: 9
  6524 ;; This function calls:
  6525 ;;		_isupper
  6526 ;; This function is called by:
  6527 ;;		_efgtoa
  6528 ;;		_vfpfcnvrt
  6529 ;; This function uses a non-reentrant model
  6530 ;;
  6531                           
  6532                           	psect	text17
  6533  00588A                     __ptext17:
  6534                           	callstack 0
  6535  00588A                     _tolower:
  6536                           	callstack 16
  6537  00588A  0EBF               	movlw	191
  6538  00588C  6E1C               	movwf	??_tolower^0,c
  6539  00588E  0EFF               	movlw	255
  6540  005890  6E1D               	movwf	(??_tolower+1)^0,c
  6541  005892  C01A  F01E         	movff	tolower@c,??_tolower+2
  6542  005896  C01B  F01F         	movff	tolower@c+1,??_tolower+3
  6543  00589A  501C               	movf	??_tolower^0,w,c
  6544  00589C  261E               	addwf	(??_tolower+2)^0,f,c
  6545  00589E  501D               	movf	(??_tolower+1)^0,w,c
  6546  0058A0  221F               	addwfc	(??_tolower+3)^0,f,c
  6547  0058A2  501F               	movf	(??_tolower+3)^0,w,c
  6548  0058A4  E10A               	bnz	u9080
  6549  0058A6  0E1A               	movlw	26
  6550  0058A8  5C1E               	subwf	(??_tolower+2)^0,w,c
  6551  0058AA  A0D8               	btfss	status,0,c
  6552  0058AC  EF5A  F02C         	goto	u9081
  6553  0058B0  EF5D  F02C         	goto	u9080
  6554  0058B4                     u9081:
  6555  0058B4  0E01               	movlw	1
  6556  0058B6  EF5E  F02C         	goto	u9090
  6557  0058BA                     u9080:
  6558  0058BA  0E00               	movlw	0
  6559  0058BC                     u9090:
  6560  0058BC  6E20               	movwf	_tolower$3693^0,c
  6561  0058BE  6A21               	clrf	(_tolower$3693+1)^0,c
  6562  0058C0  5020               	movf	_tolower$3693^0,w,c
  6563  0058C2  1021               	iorwf	(_tolower$3693+1)^0,w,c
  6564  0058C4  B4D8               	btfsc	status,2,c
  6565  0058C6  EF67  F02C         	goto	u9101
  6566  0058CA  EF69  F02C         	goto	u9100
  6567  0058CE                     u9101:
  6568  0058CE  EF70  F02C         	goto	l2362
  6569  0058D2                     u9100:
  6570  0058D2  0E20               	movlw	32
  6571  0058D4  101A               	iorwf	tolower@c^0,w,c
  6572  0058D6  6E1A               	movwf	?_tolower^0,c
  6573  0058D8  501B               	movf	(tolower@c+1)^0,w,c
  6574  0058DA  6E1B               	movwf	(?_tolower+1)^0,c
  6575  0058DC  EF74  F02C         	goto	l2367
  6576  0058E0                     l2362:
  6577  0058E0  C01A  F01A         	movff	tolower@c,?_tolower
  6578  0058E4  C01B  F01B         	movff	tolower@c+1,?_tolower+1
  6579  0058E8                     l2367:
  6580  0058E8  0012               	return		;funcret
  6581  0058EA                     __end_of_tolower:
  6582                           	callstack 0
  6583                           
  6584 ;; *************** function _isupper *****************
  6585 ;; Defined at:
  6586 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isupper.c"
  6587 ;; Parameters:    Size  Location     Type
  6588 ;;  c               2   19[COMRAM] int 
  6589 ;; Auto vars:     Size  Location     Type
  6590 ;;		None
  6591 ;; Return value:  Size  Location     Type
  6592 ;;                  2   19[COMRAM] int 
  6593 ;; Registers used:
  6594 ;;		wreg, status,2, status,0
  6595 ;; Tracked objects:
  6596 ;;		On entry : 0/0
  6597 ;;		On exit  : 0/0
  6598 ;;		Unchanged: 0/0
  6599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6600 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6602 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6603 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6604 ;;Total ram usage:        6 bytes
  6605 ;; Hardware stack levels used: 1
  6606 ;; Hardware stack levels required when called: 8
  6607 ;; This function calls:
  6608 ;;		Nothing
  6609 ;; This function is called by:
  6610 ;;		_efgtoa
  6611 ;;		_vfpfcnvrt
  6612 ;;		_tolower
  6613 ;; This function uses a non-reentrant model
  6614 ;;
  6615                           
  6616                           	psect	text18
  6617  005D22                     __ptext18:
  6618                           	callstack 0
  6619  005D22                     _isupper:
  6620                           	callstack 16
  6621  005D22  0EBF               	movlw	191
  6622  005D24  6E16               	movwf	??_isupper^0,c
  6623  005D26  0EFF               	movlw	255
  6624  005D28  6E17               	movwf	(??_isupper+1)^0,c
  6625  005D2A  C014  F018         	movff	isupper@c,??_isupper+2
  6626  005D2E  C015  F019         	movff	isupper@c+1,??_isupper+3
  6627  005D32  5016               	movf	??_isupper^0,w,c
  6628  005D34  2618               	addwf	(??_isupper+2)^0,f,c
  6629  005D36  5017               	movf	(??_isupper+1)^0,w,c
  6630  005D38  2219               	addwfc	(??_isupper+3)^0,f,c
  6631  005D3A  5019               	movf	(??_isupper+3)^0,w,c
  6632  005D3C  E10A               	bnz	u8020
  6633  005D3E  0E1A               	movlw	26
  6634  005D40  5C18               	subwf	(??_isupper+2)^0,w,c
  6635  005D42  A0D8               	btfss	status,0,c
  6636  005D44  EFA6  F02E         	goto	u8021
  6637  005D48  EFA9  F02E         	goto	u8020
  6638  005D4C                     u8021:
  6639  005D4C  0E01               	movlw	1
  6640  005D4E  EFAA  F02E         	goto	u8030
  6641  005D52                     u8020:
  6642  005D52  0E00               	movlw	0
  6643  005D54                     u8030:
  6644  005D54  6E14               	movwf	?_isupper^0,c
  6645  005D56  6A15               	clrf	(?_isupper+1)^0,c
  6646  005D58  0012               	return		;funcret
  6647  005D5A                     __end_of_isupper:
  6648                           	callstack 0
  6649                           
  6650 ;; *************** function _strcpy *****************
  6651 ;; Defined at:
  6652 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strcpy.c"
  6653 ;; Parameters:    Size  Location     Type
  6654 ;;  dest            2   19[COMRAM] PTR unsigned char 
  6655 ;;		 -> dbuf(80), 
  6656 ;;  src             2   21[COMRAM] PTR const unsigned char 
  6657 ;;		 -> STR_15(4), STR_14(4), STR_11(4), STR_10(4), 
  6658 ;;		 -> dbuf(80), 
  6659 ;; Auto vars:     Size  Location     Type
  6660 ;;  d               2   27[COMRAM] PTR unsigned char 
  6661 ;;		 -> dbuf(80), 
  6662 ;;  s               2   25[COMRAM] PTR const unsigned char 
  6663 ;;		 -> STR_15(4), STR_14(4), STR_11(4), STR_10(4), 
  6664 ;;		 -> dbuf(80), 
  6665 ;; Return value:  Size  Location     Type
  6666 ;;                  2   19[COMRAM] PTR unsigned char 
  6667 ;; Registers used:
  6668 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6669 ;; Tracked objects:
  6670 ;;		On entry : 0/0
  6671 ;;		On exit  : 0/0
  6672 ;;		Unchanged: 0/0
  6673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6674 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6675 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6676 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6677 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6678 ;;Total ram usage:       10 bytes
  6679 ;; Hardware stack levels used: 1
  6680 ;; Hardware stack levels required when called: 8
  6681 ;; This function calls:
  6682 ;;		Nothing
  6683 ;; This function is called by:
  6684 ;;		_efgtoa
  6685 ;; This function uses a non-reentrant model
  6686 ;;
  6687                           
  6688                           	psect	text19
  6689  005820                     __ptext19:
  6690                           	callstack 0
  6691  005820                     _strcpy:
  6692                           	callstack 16
  6693  005820  C016  F01A         	movff	strcpy@src,strcpy@s
  6694  005824  C017  F01B         	movff	strcpy@src+1,strcpy@s+1
  6695  005828  C014  F01C         	movff	strcpy@dest,strcpy@d
  6696  00582C  C015  F01D         	movff	strcpy@dest+1,strcpy@d+1
  6697  005830                     l8464:
  6698  005830  501A               	movf	strcpy@s^0,w,c
  6699  005832  6E18               	movwf	??_strcpy^0,c
  6700  005834  501B               	movf	(strcpy@s+1)^0,w,c
  6701  005836  6E19               	movwf	(??_strcpy+1)^0,c
  6702  005838  4A1A               	infsnz	strcpy@s^0,f,c
  6703  00583A  2A1B               	incf	(strcpy@s+1)^0,f,c
  6704  00583C  0060  F063  FFF6   	movff	??_strcpy,tblptrl
  6705  005842  0060  F067  FFF7   	movff	??_strcpy+1,tblptrh
  6706  005848  0E00               	movlw	low (__smallconst shr (0+16))
  6707  00584A  6EF8               	movwf	tblptru,c
  6708  00584C  0060  F073  FFD9   	movff	strcpy@d,fsr2l
  6709  005852  0060  F077  FFDA   	movff	strcpy@d+1,fsr2h
  6710  005858  4A1C               	infsnz	strcpy@d^0,f,c
  6711  00585A  2A1D               	incf	(strcpy@d+1)^0,f,c
  6712  00585C  0E0F               	movlw	(high __ramtop+-1)
  6713  00585E  64F7               	cpfsgt	tblptrh,c
  6714  005860  D003               	bra	u9067
  6715  005862  0008               	tblrd		*
  6716  005864  50F5               	movf	tablat,w,c
  6717  005866  D007               	bra	u9060
  6718  005868                     u9067:
  6719  005868  006F FFDB FFE1     	movff	tblptrl,fsr1l
  6720  00586E  006F FFDF FFE2     	movff	tblptrh,fsr1h
  6721  005874  50E7               	movf	indf1,w,c
  6722  005876                     u9060:
  6723  005876  6EDF               	movwf	indf2,c
  6724  005878  50DF               	movf	indf2,w,c
  6725  00587A  A4D8               	btfss	status,2,c
  6726  00587C  EF42  F02C         	goto	u9071
  6727  005880  EF44  F02C         	goto	u9070
  6728  005884                     u9071:
  6729  005884  EF18  F02C         	goto	l8464
  6730  005888                     u9070:
  6731  005888  0012               	return		;funcret
  6732  00588A                     __end_of_strcpy:
  6733                           	callstack 0
  6734                           
  6735 ;; *************** function _floorf *****************
  6736 ;; Defined at:
  6737 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\floorf.c"
  6738 ;; Parameters:    Size  Location     Type
  6739 ;;  x               4   53[COMRAM] float 
  6740 ;; Auto vars:     Size  Location     Type
  6741 ;;  u               4   25[BANK0 ] struct .
  6742 ;;  m               4   19[BANK0 ] unsigned long 
  6743 ;;  e               2   23[BANK0 ] int 
  6744 ;; Return value:  Size  Location     Type
  6745 ;;                  4   53[COMRAM] float 
  6746 ;; Registers used:
  6747 ;;		wreg, status,2, status,0
  6748 ;; Tracked objects:
  6749 ;;		On entry : 0/0
  6750 ;;		On exit  : 0/0
  6751 ;;		Unchanged: 0/0
  6752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6753 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6754 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6755 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6756 ;;      Totals:         4      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6757 ;;Total ram usage:       20 bytes
  6758 ;; Hardware stack levels used: 1
  6759 ;; Hardware stack levels required when called: 8
  6760 ;; This function calls:
  6761 ;;		Nothing
  6762 ;; This function is called by:
  6763 ;;		_efgtoa
  6764 ;; This function uses a non-reentrant model
  6765 ;;
  6766                           
  6767                           	psect	text20
  6768  00351C                     __ptext20:
  6769                           	callstack 0
  6770  00351C                     _floorf:
  6771                           	callstack 16
  6772  00351C  C118  F079         	movff	floorf@F527,floorf@u
  6773  003520  C119  F07A         	movff	floorf@F527+1,floorf@u+1
  6774  003524  C11A  F07B         	movff	floorf@F527+2,floorf@u+2
  6775  003528  C11B  F07C         	movff	floorf@F527+3,floorf@u+3
  6776  00352C  C036  F079         	movff	floorf@x,floorf@u
  6777  003530  C037  F07A         	movff	floorf@x+1,floorf@u+1
  6778  003534  C038  F07B         	movff	floorf@x+2,floorf@u+2
  6779  003538  C039  F07C         	movff	floorf@x+3,floorf@u+3
  6780  00353C  0E81               	movlw	129
  6781  00353E  0100               	movlb	0	; () banked
  6782  003540  6F6D               	movwf	??_floorf& (0+255),b
  6783  003542  0EFF               	movlw	255
  6784  003544  6F6E               	movwf	(??_floorf+1)& (0+255),b
  6785  003546  C079  F06F         	movff	floorf@u,??_floorf+2
  6786  00354A  C07A  F070         	movff	floorf@u+1,??_floorf+3
  6787  00354E  C07B  F071         	movff	floorf@u+2,??_floorf+4
  6788  003552  C07C  F072         	movff	floorf@u+3,??_floorf+5
  6789  003556  0E18               	movlw	24
  6790  003558  EFB3  F01A         	goto	u9110
  6791  00355C                     u9115:
  6792  00355C  90D8               	bcf	status,0,c
  6793  00355E  3372               	rrcf	(??_floorf+5)& (0+255),f,b
  6794  003560  3371               	rrcf	(??_floorf+4)& (0+255),f,b
  6795  003562  3370               	rrcf	(??_floorf+3)& (0+255),f,b
  6796  003564  336F               	rrcf	(??_floorf+2)& (0+255),f,b
  6797  003566                     u9110:
  6798  003566  2EE8               	decfsz	wreg,f,c
  6799  003568  EFAE  F01A         	goto	u9115
  6800  00356C  516F               	movf	(??_floorf+2)& (0+255),w,b
  6801  00356E  256D               	addwf	??_floorf& (0+255),w,b
  6802  003570  6F77               	movwf	floorf@e& (0+255),b
  6803  003572  0E00               	movlw	0
  6804  003574  216E               	addwfc	(??_floorf+1)& (0+255),w,b
  6805  003576  6F78               	movwf	(floorf@e+1)& (0+255),b
  6806  003578  BF78               	btfsc	(floorf@e+1)& (0+255),7,b
  6807  00357A  EFC8  F01A         	goto	u9121
  6808  00357E  5178               	movf	(floorf@e+1)& (0+255),w,b
  6809  003580  E109               	bnz	u9120
  6810  003582  0E17               	movlw	23
  6811  003584  5D77               	subwf	floorf@e& (0+255),w,b
  6812  003586  A0D8               	btfss	status,0,c
  6813  003588  EFC8  F01A         	goto	u9121
  6814  00358C  EFCA  F01A         	goto	u9120
  6815  003590                     u9121:
  6816  003590  EFD4  F01A         	goto	l8482
  6817  003594                     u9120:
  6818  003594                     l8480:
  6819                           
  6820                           ; BSR set to: 0
  6821  003594  C036  F036         	movff	floorf@x,?_floorf
  6822  003598  C037  F037         	movff	floorf@x+1,?_floorf+1
  6823  00359C  C038  F038         	movff	floorf@x+2,?_floorf+2
  6824  0035A0  C039  F039         	movff	floorf@x+3,?_floorf+3
  6825  0035A4  EF98  F01B         	goto	l2303
  6826  0035A8                     l8482:
  6827                           
  6828                           ; BSR set to: 0
  6829  0035A8  BF78               	btfsc	(floorf@e+1)& (0+255),7,b
  6830  0035AA  EFD9  F01A         	goto	u9131
  6831  0035AE  EFDB  F01A         	goto	u9130
  6832  0035B2                     u9131:
  6833  0035B2  EF4C  F01B         	goto	l8492
  6834  0035B6                     u9130:
  6835  0035B6                     
  6836                           ; BSR set to: 0
  6837  0035B6  C077  F06D         	movff	floorf@e,??_floorf
  6838  0035BA  0EFF               	movlw	255
  6839  0035BC  6F6E               	movwf	(??_floorf+1)& (0+255),b
  6840  0035BE  0EFF               	movlw	255
  6841  0035C0  6F6F               	movwf	(??_floorf+2)& (0+255),b
  6842  0035C2  0E7F               	movlw	127
  6843  0035C4  6F70               	movwf	(??_floorf+3)& (0+255),b
  6844  0035C6  0E00               	movlw	0
  6845  0035C8  6F71               	movwf	(??_floorf+4)& (0+255),b
  6846  0035CA                     u9145:
  6847  0035CA  676D               	tstfsz	??_floorf& (0+255),b
  6848  0035CC  EFEA  F01A         	goto	u9146
  6849  0035D0  EFF2  F01A         	goto	u9147
  6850  0035D4                     u9146:
  6851  0035D4  3571               	rlcf	(??_floorf+4)& (0+255),w,b
  6852  0035D6  3371               	rrcf	(??_floorf+4)& (0+255),f,b
  6853  0035D8  3370               	rrcf	(??_floorf+3)& (0+255),f,b
  6854  0035DA  336F               	rrcf	(??_floorf+2)& (0+255),f,b
  6855  0035DC  336E               	rrcf	(??_floorf+1)& (0+255),f,b
  6856  0035DE  2F6D               	decfsz	??_floorf& (0+255),f,b
  6857  0035E0  EFE5  F01A         	goto	u9145
  6858  0035E4                     u9147:
  6859  0035E4  C06E  F073         	movff	??_floorf+1,floorf@m
  6860  0035E8  C06F  F074         	movff	??_floorf+2,floorf@m+1
  6861  0035EC  C070  F075         	movff	??_floorf+3,floorf@m+2
  6862  0035F0  C071  F076         	movff	??_floorf+4,floorf@m+3
  6863  0035F4  0100               	movlb	0	; () banked
  6864  0035F6  5173               	movf	floorf@m& (0+255),w,b
  6865  0035F8  1579               	andwf	floorf@u& (0+255),w,b
  6866  0035FA  6F6D               	movwf	??_floorf& (0+255),b
  6867  0035FC  5174               	movf	(floorf@m+1)& (0+255),w,b
  6868  0035FE  157A               	andwf	(floorf@u+1)& (0+255),w,b
  6869  003600  6F6E               	movwf	(??_floorf+1)& (0+255),b
  6870  003602  5175               	movf	(floorf@m+2)& (0+255),w,b
  6871  003604  157B               	andwf	(floorf@u+2)& (0+255),w,b
  6872  003606  6F6F               	movwf	(??_floorf+2)& (0+255),b
  6873  003608  5176               	movf	(floorf@m+3)& (0+255),w,b
  6874  00360A  157C               	andwf	(floorf@u+3)& (0+255),w,b
  6875  00360C  6F70               	movwf	(??_floorf+3)& (0+255),b
  6876  00360E  516D               	movf	??_floorf& (0+255),w,b
  6877  003610  116E               	iorwf	(??_floorf+1)& (0+255),w,b
  6878  003612  116F               	iorwf	(??_floorf+2)& (0+255),w,b
  6879  003614  1170               	iorwf	(??_floorf+3)& (0+255),w,b
  6880  003616  A4D8               	btfss	status,2,c
  6881  003618  EF10  F01B         	goto	u9151
  6882  00361C  EF12  F01B         	goto	u9150
  6883  003620                     u9151:
  6884  003620  EF14  F01B         	goto	l8488
  6885  003624                     u9150:
  6886  003624  EFCA  F01A         	goto	l8480
  6887  003628                     l8488:
  6888                           
  6889                           ; BSR set to: 0
  6890  003628  C079  F06D         	movff	floorf@u,??_floorf
  6891  00362C  C07A  F06E         	movff	floorf@u+1,??_floorf+1
  6892  003630  C07B  F06F         	movff	floorf@u+2,??_floorf+2
  6893  003634  C07C  F070         	movff	floorf@u+3,??_floorf+3
  6894  003638  0E20               	movlw	32
  6895  00363A  EF24  F01B         	goto	u9160
  6896  00363E                     u9165:
  6897  00363E  90D8               	bcf	status,0,c
  6898  003640  3370               	rrcf	(??_floorf+3)& (0+255),f,b
  6899  003642  336F               	rrcf	(??_floorf+2)& (0+255),f,b
  6900  003644  336E               	rrcf	(??_floorf+1)& (0+255),f,b
  6901  003646  336D               	rrcf	??_floorf& (0+255),f,b
  6902  003648                     u9160:
  6903  003648  2EE8               	decfsz	wreg,f,c
  6904  00364A  EF1F  F01B         	goto	u9165
  6905  00364E  516D               	movf	??_floorf& (0+255),w,b
  6906  003650  116E               	iorwf	(??_floorf+1)& (0+255),w,b
  6907  003652  116F               	iorwf	(??_floorf+2)& (0+255),w,b
  6908  003654  1170               	iorwf	(??_floorf+3)& (0+255),w,b
  6909  003656  B4D8               	btfsc	status,2,c
  6910  003658  EF30  F01B         	goto	u9171
  6911  00365C  EF32  F01B         	goto	u9170
  6912  003660                     u9171:
  6913  003660  EF3A  F01B         	goto	l2306
  6914  003664                     u9170:
  6915  003664                     
  6916                           ; BSR set to: 0
  6917  003664  5173               	movf	floorf@m& (0+255),w,b
  6918  003666  2779               	addwf	floorf@u& (0+255),f,b
  6919  003668  5174               	movf	(floorf@m+1)& (0+255),w,b
  6920  00366A  237A               	addwfc	(floorf@u+1)& (0+255),f,b
  6921  00366C  5175               	movf	(floorf@m+2)& (0+255),w,b
  6922  00366E  237B               	addwfc	(floorf@u+2)& (0+255),f,b
  6923  003670  5176               	movf	(floorf@m+3)& (0+255),w,b
  6924  003672  237C               	addwfc	(floorf@u+3)& (0+255),f,b
  6925  003674                     l2306:
  6926                           
  6927                           ; BSR set to: 0
  6928  003674  1D73               	comf	floorf@m& (0+255),w,b
  6929  003676  6F6D               	movwf	??_floorf& (0+255),b
  6930  003678  1D74               	comf	(floorf@m+1)& (0+255),w,b
  6931  00367A  6F6E               	movwf	(??_floorf+1)& (0+255),b
  6932  00367C  1D75               	comf	(floorf@m+2)& (0+255),w,b
  6933  00367E  6F6F               	movwf	(??_floorf+2)& (0+255),b
  6934  003680  1D76               	comf	(floorf@m+3)& (0+255),w,b
  6935  003682  6F70               	movwf	(??_floorf+3)& (0+255),b
  6936  003684  516D               	movf	??_floorf& (0+255),w,b
  6937  003686  1779               	andwf	floorf@u& (0+255),f,b
  6938  003688  516E               	movf	(??_floorf+1)& (0+255),w,b
  6939  00368A  177A               	andwf	(floorf@u+1)& (0+255),f,b
  6940  00368C  516F               	movf	(??_floorf+2)& (0+255),w,b
  6941  00368E  177B               	andwf	(floorf@u+2)& (0+255),f,b
  6942  003690  5170               	movf	(??_floorf+3)& (0+255),w,b
  6943  003692  177C               	andwf	(floorf@u+3)& (0+255),f,b
  6944  003694  EF90  F01B         	goto	l8500
  6945  003698                     l8492:
  6946                           
  6947                           ; BSR set to: 0
  6948  003698  C079  F06D         	movff	floorf@u,??_floorf
  6949  00369C  C07A  F06E         	movff	floorf@u+1,??_floorf+1
  6950  0036A0  C07B  F06F         	movff	floorf@u+2,??_floorf+2
  6951  0036A4  C07C  F070         	movff	floorf@u+3,??_floorf+3
  6952  0036A8  0E20               	movlw	32
  6953  0036AA  EF5C  F01B         	goto	u9180
  6954  0036AE                     u9185:
  6955  0036AE  90D8               	bcf	status,0,c
  6956  0036B0  3370               	rrcf	(??_floorf+3)& (0+255),f,b
  6957  0036B2  336F               	rrcf	(??_floorf+2)& (0+255),f,b
  6958  0036B4  336E               	rrcf	(??_floorf+1)& (0+255),f,b
  6959  0036B6  336D               	rrcf	??_floorf& (0+255),f,b
  6960  0036B8                     u9180:
  6961  0036B8  2EE8               	decfsz	wreg,f,c
  6962  0036BA  EF57  F01B         	goto	u9185
  6963  0036BE  516D               	movf	??_floorf& (0+255),w,b
  6964  0036C0  116E               	iorwf	(??_floorf+1)& (0+255),w,b
  6965  0036C2  116F               	iorwf	(??_floorf+2)& (0+255),w,b
  6966  0036C4  1170               	iorwf	(??_floorf+3)& (0+255),w,b
  6967  0036C6  A4D8               	btfss	status,2,c
  6968  0036C8  EF68  F01B         	goto	u9191
  6969  0036CC  EF6A  F01B         	goto	u9190
  6970  0036D0                     u9191:
  6971  0036D0  EF74  F01B         	goto	l8496
  6972  0036D4                     u9190:
  6973  0036D4                     
  6974                           ; BSR set to: 0
  6975  0036D4  0E00               	movlw	0
  6976  0036D6  6F79               	movwf	floorf@u& (0+255),b
  6977  0036D8  0E00               	movlw	0
  6978  0036DA  6F7A               	movwf	(floorf@u+1)& (0+255),b
  6979  0036DC  0E00               	movlw	0
  6980  0036DE  6F7B               	movwf	(floorf@u+2)& (0+255),b
  6981  0036E0  0E00               	movlw	0
  6982  0036E2  6F7C               	movwf	(floorf@u+3)& (0+255),b
  6983  0036E4  EF90  F01B         	goto	l8500
  6984  0036E8                     l8496:
  6985                           
  6986                           ; BSR set to: 0
  6987  0036E8  90D8               	bcf	status,0,c
  6988  0036EA  3579               	rlcf	floorf@u& (0+255),w,b
  6989  0036EC  6F6D               	movwf	??_floorf& (0+255),b
  6990  0036EE  357A               	rlcf	(floorf@u+1)& (0+255),w,b
  6991  0036F0  6F6E               	movwf	(??_floorf+1)& (0+255),b
  6992  0036F2  357B               	rlcf	(floorf@u+2)& (0+255),w,b
  6993  0036F4  6F6F               	movwf	(??_floorf+2)& (0+255),b
  6994  0036F6  357C               	rlcf	(floorf@u+3)& (0+255),w,b
  6995  0036F8  6F70               	movwf	(??_floorf+3)& (0+255),b
  6996  0036FA  516D               	movf	??_floorf& (0+255),w,b
  6997  0036FC  116E               	iorwf	(??_floorf+1)& (0+255),w,b
  6998  0036FE  116F               	iorwf	(??_floorf+2)& (0+255),w,b
  6999  003700  1170               	iorwf	(??_floorf+3)& (0+255),w,b
  7000  003702  B4D8               	btfsc	status,2,c
  7001  003704  EF86  F01B         	goto	u9201
  7002  003708  EF88  F01B         	goto	u9200
  7003  00370C                     u9201:
  7004  00370C  EF90  F01B         	goto	l8500
  7005  003710                     u9200:
  7006  003710                     
  7007                           ; BSR set to: 0
  7008  003710  0E00               	movlw	0
  7009  003712  6F79               	movwf	floorf@u& (0+255),b
  7010  003714  0E00               	movlw	0
  7011  003716  6F7A               	movwf	(floorf@u+1)& (0+255),b
  7012  003718  0E80               	movlw	128
  7013  00371A  6F7B               	movwf	(floorf@u+2)& (0+255),b
  7014  00371C  0EBF               	movlw	191
  7015  00371E  6F7C               	movwf	(floorf@u+3)& (0+255),b
  7016  003720                     l8500:
  7017                           
  7018                           ; BSR set to: 0
  7019  003720  C079  F036         	movff	floorf@u,?_floorf
  7020  003724  C07A  F037         	movff	floorf@u+1,?_floorf+1
  7021  003728  C07B  F038         	movff	floorf@u+2,?_floorf+2
  7022  00372C  C07C  F039         	movff	floorf@u+3,?_floorf+3
  7023  003730                     l2303:
  7024                           
  7025                           ; BSR set to: 0
  7026  003730  0012               	return		;funcret
  7027  003732                     __end_of_floorf:
  7028                           	callstack 0
  7029                           
  7030 ;; *************** function ___fpclassifyf *****************
  7031 ;; Defined at:
  7032 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__fpclassifyf.c"
  7033 ;; Parameters:    Size  Location     Type
  7034 ;;  x               4   19[COMRAM] float 
  7035 ;; Auto vars:     Size  Location     Type
  7036 ;;  u               4   29[COMRAM] struct .
  7037 ;;  e               2   27[COMRAM] int 
  7038 ;; Return value:  Size  Location     Type
  7039 ;;                  2   19[COMRAM] int 
  7040 ;; Registers used:
  7041 ;;		wreg, status,2, status,0
  7042 ;; Tracked objects:
  7043 ;;		On entry : 0/0
  7044 ;;		On exit  : 0/0
  7045 ;;		Unchanged: 0/0
  7046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7047 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7048 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7049 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7050 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7051 ;;Total ram usage:       14 bytes
  7052 ;; Hardware stack levels used: 1
  7053 ;; Hardware stack levels required when called: 8
  7054 ;; This function calls:
  7055 ;;		Nothing
  7056 ;; This function is called by:
  7057 ;;		_efgtoa
  7058 ;; This function uses a non-reentrant model
  7059 ;;
  7060                           
  7061                           	psect	text21
  7062  004A72                     __ptext21:
  7063                           	callstack 0
  7064  004A72                     ___fpclassifyf:
  7065                           	callstack 16
  7066  004A72  C11C  F01E         	movff	___fpclassifyf@F465,___fpclassifyf@u
  7067  004A76  C11D  F01F         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  7068  004A7A  C11E  F020         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  7069  004A7E  C11F  F021         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  7070  004A82  C014  F01E         	movff	___fpclassifyf@x,___fpclassifyf@u
  7071  004A86  C015  F01F         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  7072  004A8A  C016  F020         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  7073  004A8E  C017  F021         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  7074  004A92  C01E  F018         	movff	___fpclassifyf@u,??___fpclassifyf
  7075  004A96  C01F  F019         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  7076  004A9A  C020  F01A         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  7077  004A9E  C021  F01B         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  7078  004AA2  0E18               	movlw	24
  7079  004AA4  EF59  F025         	goto	u8990
  7080  004AA8                     u8995:
  7081  004AA8  90D8               	bcf	status,0,c
  7082  004AAA  321B               	rrcf	(??___fpclassifyf+3)^0,f,c
  7083  004AAC  321A               	rrcf	(??___fpclassifyf+2)^0,f,c
  7084  004AAE  3219               	rrcf	(??___fpclassifyf+1)^0,f,c
  7085  004AB0  3218               	rrcf	??___fpclassifyf^0,f,c
  7086  004AB2                     u8990:
  7087  004AB2  2EE8               	decfsz	wreg,f,c
  7088  004AB4  EF54  F025         	goto	u8995
  7089  004AB8  5018               	movf	??___fpclassifyf^0,w,c
  7090  004ABA  6E1C               	movwf	___fpclassifyf@e^0,c
  7091  004ABC  6A1D               	clrf	(___fpclassifyf@e+1)^0,c
  7092  004ABE  501C               	movf	___fpclassifyf@e^0,w,c
  7093  004AC0  101D               	iorwf	(___fpclassifyf@e+1)^0,w,c
  7094  004AC2  A4D8               	btfss	status,2,c
  7095  004AC4  EF66  F025         	goto	u9001
  7096  004AC8  EF68  F025         	goto	u9000
  7097  004ACC                     u9001:
  7098  004ACC  EF88  F025         	goto	l8452
  7099  004AD0                     u9000:
  7100  004AD0  90D8               	bcf	status,0,c
  7101  004AD2  341E               	rlcf	___fpclassifyf@u^0,w,c
  7102  004AD4  6E18               	movwf	??___fpclassifyf^0,c
  7103  004AD6  341F               	rlcf	(___fpclassifyf@u+1)^0,w,c
  7104  004AD8  6E19               	movwf	(??___fpclassifyf+1)^0,c
  7105  004ADA  3420               	rlcf	(___fpclassifyf@u+2)^0,w,c
  7106  004ADC  6E1A               	movwf	(??___fpclassifyf+2)^0,c
  7107  004ADE  3421               	rlcf	(___fpclassifyf@u+3)^0,w,c
  7108  004AE0  6E1B               	movwf	(??___fpclassifyf+3)^0,c
  7109  004AE2  5018               	movf	??___fpclassifyf^0,w,c
  7110  004AE4  1019               	iorwf	(??___fpclassifyf+1)^0,w,c
  7111  004AE6  101A               	iorwf	(??___fpclassifyf+2)^0,w,c
  7112  004AE8  101B               	iorwf	(??___fpclassifyf+3)^0,w,c
  7113  004AEA  A4D8               	btfss	status,2,c
  7114  004AEC  EF7A  F025         	goto	u9011
  7115  004AF0  EF7C  F025         	goto	u9010
  7116  004AF4                     u9011:
  7117  004AF4  EF82  F025         	goto	l8448
  7118  004AF8                     u9010:
  7119  004AF8  0E00               	movlw	0
  7120  004AFA  6E15               	movwf	(?___fpclassifyf+1)^0,c
  7121  004AFC  0E02               	movlw	2
  7122  004AFE  6E14               	movwf	?___fpclassifyf^0,c
  7123  004B00  EFB7  F025         	goto	l2289
  7124  004B04                     l8448:
  7125  004B04  0E00               	movlw	0
  7126  004B06  6E15               	movwf	(?___fpclassifyf+1)^0,c
  7127  004B08  0E03               	movlw	3
  7128  004B0A  6E14               	movwf	?___fpclassifyf^0,c
  7129  004B0C  EFB7  F025         	goto	l2289
  7130  004B10                     l8452:
  7131  004B10  281C               	incf	___fpclassifyf@e^0,w,c
  7132  004B12  101D               	iorwf	(___fpclassifyf@e+1)^0,w,c
  7133  004B14  A4D8               	btfss	status,2,c
  7134  004B16  EF8F  F025         	goto	u9021
  7135  004B1A  EF91  F025         	goto	u9020
  7136  004B1E                     u9021:
  7137  004B1E  EFB3  F025         	goto	l8458
  7138  004B22                     u9020:
  7139  004B22  C01E  F018         	movff	___fpclassifyf@u,??___fpclassifyf
  7140  004B26  C01F  F019         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  7141  004B2A  C020  F01A         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  7142  004B2E  C021  F01B         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  7143  004B32  0E09               	movlw	9
  7144  004B34                     u9035:
  7145  004B34  90D8               	bcf	status,0,c
  7146  004B36  3618               	rlcf	??___fpclassifyf^0,f,c
  7147  004B38  3619               	rlcf	(??___fpclassifyf+1)^0,f,c
  7148  004B3A  361A               	rlcf	(??___fpclassifyf+2)^0,f,c
  7149  004B3C  361B               	rlcf	(??___fpclassifyf+3)^0,f,c
  7150  004B3E  2EE8               	decfsz	wreg,f,c
  7151  004B40  EF9A  F025         	goto	u9035
  7152  004B44  5018               	movf	??___fpclassifyf^0,w,c
  7153  004B46  1019               	iorwf	(??___fpclassifyf+1)^0,w,c
  7154  004B48  101A               	iorwf	(??___fpclassifyf+2)^0,w,c
  7155  004B4A  101B               	iorwf	(??___fpclassifyf+3)^0,w,c
  7156  004B4C  B4D8               	btfsc	status,2,c
  7157  004B4E  EFAB  F025         	goto	u9041
  7158  004B52  EFAE  F025         	goto	u9040
  7159  004B56                     u9041:
  7160  004B56  0E01               	movlw	1
  7161  004B58  EFAF  F025         	goto	u9050
  7162  004B5C                     u9040:
  7163  004B5C  0E00               	movlw	0
  7164  004B5E                     u9050:
  7165  004B5E  6E14               	movwf	?___fpclassifyf^0,c
  7166  004B60  6A15               	clrf	(?___fpclassifyf+1)^0,c
  7167  004B62  EFB7  F025         	goto	l2289
  7168  004B66                     l8458:
  7169  004B66  0E00               	movlw	0
  7170  004B68  6E15               	movwf	(?___fpclassifyf+1)^0,c
  7171  004B6A  0E04               	movlw	4
  7172  004B6C  6E14               	movwf	?___fpclassifyf^0,c
  7173  004B6E                     l2289:
  7174  004B6E  0012               	return		;funcret
  7175  004B70                     __end_of___fpclassifyf:
  7176                           	callstack 0
  7177                           
  7178 ;; *************** function ___flsub *****************
  7179 ;; Defined at:
  7180 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  7181 ;; Parameters:    Size  Location     Type
  7182 ;;  b               4   25[BANK0 ] int 
  7183 ;;  a               4   29[BANK0 ] int 
  7184 ;; Auto vars:     Size  Location     Type
  7185 ;;		None
  7186 ;; Return value:  Size  Location     Type
  7187 ;;                  4   25[BANK0 ] int 
  7188 ;; Registers used:
  7189 ;;		wreg, status,2, status,0, cstack
  7190 ;; Tracked objects:
  7191 ;;		On entry : 0/0
  7192 ;;		On exit  : 0/0
  7193 ;;		Unchanged: 0/0
  7194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7195 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7198 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7199 ;;Total ram usage:        8 bytes
  7200 ;; Hardware stack levels used: 1
  7201 ;; Hardware stack levels required when called: 9
  7202 ;; This function calls:
  7203 ;;		___fladd
  7204 ;; This function is called by:
  7205 ;;		_efgtoa
  7206 ;; This function uses a non-reentrant model
  7207 ;;
  7208                           
  7209                           	psect	text22
  7210  005B22                     __ptext22:
  7211                           	callstack 0
  7212  005B22                     ___flsub:
  7213                           	callstack 15
  7214  005B22  0E00               	movlw	0
  7215  005B24  0100               	movlb	0	; () banked
  7216  005B26  1B7D               	xorwf	___flsub@a& (0+255),f,b
  7217  005B28  0E00               	movlw	0
  7218  005B2A  1B7E               	xorwf	(___flsub@a+1)& (0+255),f,b
  7219  005B2C  0E00               	movlw	0
  7220  005B2E  1B7F               	xorwf	(___flsub@a+2)& (0+255),f,b
  7221  005B30  0E80               	movlw	128
  7222  005B32  1B80               	xorwf	(___flsub@a+3)& (0+255),f,b
  7223  005B34                     
  7224                           ; BSR set to: 0
  7225  005B34  C079  F06D         	movff	___flsub@b,___fladd@b
  7226  005B38  C07A  F06E         	movff	___flsub@b+1,___fladd@b+1
  7227  005B3C  C07B  F06F         	movff	___flsub@b+2,___fladd@b+2
  7228  005B40  C07C  F070         	movff	___flsub@b+3,___fladd@b+3
  7229  005B44  C07D  F071         	movff	___flsub@a,___fladd@a
  7230  005B48  C07E  F072         	movff	___flsub@a+1,___fladd@a+1
  7231  005B4C  C07F  F073         	movff	___flsub@a+2,___fladd@a+2
  7232  005B50  C080  F074         	movff	___flsub@a+3,___fladd@a+3
  7233  005B54  ECA5  F011         	call	___fladd	;wreg free
  7234  005B58  C06D  F079         	movff	?___fladd,?___flsub
  7235  005B5C  C06E  F07A         	movff	?___fladd+1,?___flsub+1
  7236  005B60  C06F  F07B         	movff	?___fladd+2,?___flsub+2
  7237  005B64  C070  F07C         	movff	?___fladd+3,?___flsub+3
  7238  005B68  0012               	return		;funcret
  7239  005B6A                     __end_of___flsub:
  7240                           	callstack 0
  7241                           
  7242 ;; *************** function ___flneg *****************
  7243 ;; Defined at:
  7244 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flneg.c"
  7245 ;; Parameters:    Size  Location     Type
  7246 ;;  f1              4   19[COMRAM] int 
  7247 ;; Auto vars:     Size  Location     Type
  7248 ;;		None
  7249 ;; Return value:  Size  Location     Type
  7250 ;;                  4   19[COMRAM] int 
  7251 ;; Registers used:
  7252 ;;		wreg, status,2, status,0
  7253 ;; Tracked objects:
  7254 ;;		On entry : 0/0
  7255 ;;		On exit  : 0/0
  7256 ;;		Unchanged: 0/0
  7257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7258 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7261 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7262 ;;Total ram usage:        4 bytes
  7263 ;; Hardware stack levels used: 1
  7264 ;; Hardware stack levels required when called: 8
  7265 ;; This function calls:
  7266 ;;		Nothing
  7267 ;; This function is called by:
  7268 ;;		_efgtoa
  7269 ;; This function uses a non-reentrant model
  7270 ;;
  7271                           
  7272                           	psect	text23
  7273  005D5A                     __ptext23:
  7274                           	callstack 0
  7275  005D5A                     ___flneg:
  7276                           	callstack 16
  7277  005D5A  5014               	movf	___flneg@f1^0,w,c
  7278  005D5C  1015               	iorwf	(___flneg@f1+1)^0,w,c
  7279  005D5E  1016               	iorwf	(___flneg@f1+2)^0,w,c
  7280  005D60  1017               	iorwf	(___flneg@f1+3)^0,w,c
  7281  005D62  B4D8               	btfsc	status,2,c
  7282  005D64  EFB6  F02E         	goto	u8791
  7283  005D68  EFB8  F02E         	goto	u8790
  7284  005D6C                     u8791:
  7285  005D6C  EFC0  F02E         	goto	l8328
  7286  005D70                     u8790:
  7287  005D70  0E00               	movlw	0
  7288  005D72  1A14               	xorwf	___flneg@f1^0,f,c
  7289  005D74  0E00               	movlw	0
  7290  005D76  1A15               	xorwf	(___flneg@f1+1)^0,f,c
  7291  005D78  0E00               	movlw	0
  7292  005D7A  1A16               	xorwf	(___flneg@f1+2)^0,f,c
  7293  005D7C  0E80               	movlw	128
  7294  005D7E  1A17               	xorwf	(___flneg@f1+3)^0,f,c
  7295  005D80                     l8328:
  7296  005D80  C014  F014         	movff	___flneg@f1,?___flneg
  7297  005D84  C015  F015         	movff	___flneg@f1+1,?___flneg+1
  7298  005D88  C016  F016         	movff	___flneg@f1+2,?___flneg+2
  7299  005D8C  C017  F017         	movff	___flneg@f1+3,?___flneg+3
  7300  005D90  0012               	return		;funcret
  7301  005D92                     __end_of___flneg:
  7302                           	callstack 0
  7303                           
  7304 ;; *************** function ___flge *****************
  7305 ;; Defined at:
  7306 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  7307 ;; Parameters:    Size  Location     Type
  7308 ;;  ff1             4   13[BANK0 ] int 
  7309 ;;  ff2             4   17[BANK0 ] int 
  7310 ;; Auto vars:     Size  Location     Type
  7311 ;;		None
  7312 ;; Return value:  Size  Location     Type
  7313 ;;		None               void
  7314 ;; Registers used:
  7315 ;;		wreg, status,2, status,0
  7316 ;; Tracked objects:
  7317 ;;		On entry : 0/0
  7318 ;;		On exit  : 0/0
  7319 ;;		Unchanged: 0/0
  7320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7321 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7323 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7324 ;;      Totals:         4       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7325 ;;Total ram usage:       12 bytes
  7326 ;; Hardware stack levels used: 1
  7327 ;; Hardware stack levels required when called: 8
  7328 ;; This function calls:
  7329 ;;		Nothing
  7330 ;; This function is called by:
  7331 ;;		_loop
  7332 ;;		_checkBatt
  7333 ;;		_efgtoa
  7334 ;; This function uses a non-reentrant model
  7335 ;;
  7336                           
  7337                           	psect	text24
  7338  00496C                     __ptext24:
  7339                           	callstack 0
  7340  00496C                     ___flge:
  7341                           	callstack 16
  7342  00496C  0E00               	movlw	0
  7343  00496E  0100               	movlb	0	; () banked
  7344  004970  156D               	andwf	___flge@ff1& (0+255),w,b
  7345  004972  6E36               	movwf	??___flge^0,c
  7346  004974  0E00               	movlw	0
  7347  004976  156E               	andwf	(___flge@ff1+1)& (0+255),w,b
  7348  004978  6E37               	movwf	(??___flge+1)^0,c
  7349  00497A  0E80               	movlw	128
  7350  00497C  156F               	andwf	(___flge@ff1+2)& (0+255),w,b
  7351  00497E  6E38               	movwf	(??___flge+2)^0,c
  7352  004980  0E7F               	movlw	127
  7353  004982  1570               	andwf	(___flge@ff1+3)& (0+255),w,b
  7354  004984  6E39               	movwf	(??___flge+3)^0,c
  7355  004986  5036               	movf	??___flge^0,w,c
  7356  004988  1037               	iorwf	(??___flge+1)^0,w,c
  7357  00498A  1038               	iorwf	(??___flge+2)^0,w,c
  7358  00498C  1039               	iorwf	(??___flge+3)^0,w,c
  7359  00498E  A4D8               	btfss	status,2,c
  7360  004990  EFCC  F024         	goto	u8741
  7361  004994  EFCE  F024         	goto	u8740
  7362  004998                     u8741:
  7363  004998  EFD6  F024         	goto	l8306
  7364  00499C                     u8740:
  7365  00499C                     
  7366                           ; BSR set to: 0
  7367  00499C  0E00               	movlw	0
  7368  00499E  6F6D               	movwf	___flge@ff1& (0+255),b
  7369  0049A0  0E00               	movlw	0
  7370  0049A2  6F6E               	movwf	(___flge@ff1+1)& (0+255),b
  7371  0049A4  0E00               	movlw	0
  7372  0049A6  6F6F               	movwf	(___flge@ff1+2)& (0+255),b
  7373  0049A8  0E00               	movlw	0
  7374  0049AA  6F70               	movwf	(___flge@ff1+3)& (0+255),b
  7375  0049AC                     l8306:
  7376                           
  7377                           ; BSR set to: 0
  7378  0049AC  0E00               	movlw	0
  7379  0049AE  1571               	andwf	___flge@ff2& (0+255),w,b
  7380  0049B0  6E36               	movwf	??___flge^0,c
  7381  0049B2  0E00               	movlw	0
  7382  0049B4  1572               	andwf	(___flge@ff2+1)& (0+255),w,b
  7383  0049B6  6E37               	movwf	(??___flge+1)^0,c
  7384  0049B8  0E80               	movlw	128
  7385  0049BA  1573               	andwf	(___flge@ff2+2)& (0+255),w,b
  7386  0049BC  6E38               	movwf	(??___flge+2)^0,c
  7387  0049BE  0E7F               	movlw	127
  7388  0049C0  1574               	andwf	(___flge@ff2+3)& (0+255),w,b
  7389  0049C2  6E39               	movwf	(??___flge+3)^0,c
  7390  0049C4  5036               	movf	??___flge^0,w,c
  7391  0049C6  1037               	iorwf	(??___flge+1)^0,w,c
  7392  0049C8  1038               	iorwf	(??___flge+2)^0,w,c
  7393  0049CA  1039               	iorwf	(??___flge+3)^0,w,c
  7394  0049CC  A4D8               	btfss	status,2,c
  7395  0049CE  EFEB  F024         	goto	u8751
  7396  0049D2  EFED  F024         	goto	u8750
  7397  0049D6                     u8751:
  7398  0049D6  EFF5  F024         	goto	l8310
  7399  0049DA                     u8750:
  7400  0049DA                     
  7401                           ; BSR set to: 0
  7402  0049DA  0E00               	movlw	0
  7403  0049DC  6F71               	movwf	___flge@ff2& (0+255),b
  7404  0049DE  0E00               	movlw	0
  7405  0049E0  6F72               	movwf	(___flge@ff2+1)& (0+255),b
  7406  0049E2  0E00               	movlw	0
  7407  0049E4  6F73               	movwf	(___flge@ff2+2)& (0+255),b
  7408  0049E6  0E00               	movlw	0
  7409  0049E8  6F74               	movwf	(___flge@ff2+3)& (0+255),b
  7410  0049EA                     l8310:
  7411                           
  7412                           ; BSR set to: 0
  7413  0049EA  AF70               	btfss	(___flge@ff1+3)& (0+255),7,b
  7414  0049EC  EFFA  F024         	goto	u8761
  7415  0049F0  EFFC  F024         	goto	u8760
  7416  0049F4                     u8761:
  7417  0049F4  EF05  F025         	goto	l8314
  7418  0049F8                     u8760:
  7419  0049F8                     
  7420                           ; BSR set to: 0
  7421  0049F8  6D6D               	negf	___flge@ff1& (0+255),b
  7422  0049FA  1F6E               	comf	(___flge@ff1+1)& (0+255),f,b
  7423  0049FC  B0D8               	btfsc	status,0,c
  7424  0049FE  2B6E               	incf	(___flge@ff1+1)& (0+255),f,b
  7425  004A00  1F6F               	comf	(___flge@ff1+2)& (0+255),f,b
  7426  004A02  B0D8               	btfsc	status,0,c
  7427  004A04  2B6F               	incf	(___flge@ff1+2)& (0+255),f,b
  7428  004A06  0E80               	movlw	128
  7429  004A08  5770               	subfwb	(___flge@ff1+3)& (0+255),f,b
  7430  004A0A                     l8314:
  7431                           
  7432                           ; BSR set to: 0
  7433  004A0A  AF74               	btfss	(___flge@ff2+3)& (0+255),7,b
  7434  004A0C  EF0A  F025         	goto	u8771
  7435  004A10  EF0C  F025         	goto	u8770
  7436  004A14                     u8771:
  7437  004A14  EF15  F025         	goto	l1663
  7438  004A18                     u8770:
  7439  004A18                     
  7440                           ; BSR set to: 0
  7441  004A18  6D71               	negf	___flge@ff2& (0+255),b
  7442  004A1A  1F72               	comf	(___flge@ff2+1)& (0+255),f,b
  7443  004A1C  B0D8               	btfsc	status,0,c
  7444  004A1E  2B72               	incf	(___flge@ff2+1)& (0+255),f,b
  7445  004A20  1F73               	comf	(___flge@ff2+2)& (0+255),f,b
  7446  004A22  B0D8               	btfsc	status,0,c
  7447  004A24  2B73               	incf	(___flge@ff2+2)& (0+255),f,b
  7448  004A26  0E80               	movlw	128
  7449  004A28  5774               	subfwb	(___flge@ff2+3)& (0+255),f,b
  7450  004A2A                     l1663:
  7451                           
  7452                           ; BSR set to: 0
  7453  004A2A  0E00               	movlw	0
  7454  004A2C  1B6D               	xorwf	___flge@ff1& (0+255),f,b
  7455  004A2E  0E00               	movlw	0
  7456  004A30  1B6E               	xorwf	(___flge@ff1+1)& (0+255),f,b
  7457  004A32  0E00               	movlw	0
  7458  004A34  1B6F               	xorwf	(___flge@ff1+2)& (0+255),f,b
  7459  004A36  0E80               	movlw	128
  7460  004A38  1B70               	xorwf	(___flge@ff1+3)& (0+255),f,b
  7461  004A3A  0E00               	movlw	0
  7462  004A3C  1B71               	xorwf	___flge@ff2& (0+255),f,b
  7463  004A3E  0E00               	movlw	0
  7464  004A40  1B72               	xorwf	(___flge@ff2+1)& (0+255),f,b
  7465  004A42  0E00               	movlw	0
  7466  004A44  1B73               	xorwf	(___flge@ff2+2)& (0+255),f,b
  7467  004A46  0E80               	movlw	128
  7468  004A48  1B74               	xorwf	(___flge@ff2+3)& (0+255),f,b
  7469  004A4A  5171               	movf	___flge@ff2& (0+255),w,b
  7470  004A4C  5D6D               	subwf	___flge@ff1& (0+255),w,b
  7471  004A4E  5172               	movf	(___flge@ff2+1)& (0+255),w,b
  7472  004A50  596E               	subwfb	(___flge@ff1+1)& (0+255),w,b
  7473  004A52  5173               	movf	(___flge@ff2+2)& (0+255),w,b
  7474  004A54  596F               	subwfb	(___flge@ff1+2)& (0+255),w,b
  7475  004A56  5174               	movf	(___flge@ff2+3)& (0+255),w,b
  7476  004A58  5970               	subwfb	(___flge@ff1+3)& (0+255),w,b
  7477  004A5A  B0D8               	btfsc	status,0,c
  7478  004A5C  EF32  F025         	goto	u8781
  7479  004A60  EF34  F025         	goto	u8780
  7480  004A64                     u8781:
  7481  004A64  EF37  F025         	goto	l8320
  7482  004A68                     u8780:
  7483  004A68                     
  7484                           ; BSR set to: 0
  7485  004A68  90D8               	bcf	status,0,c
  7486  004A6A  EF38  F025         	goto	l1668
  7487  004A6E                     l8320:
  7488                           
  7489                           ; BSR set to: 0
  7490  004A6E  80D8               	bsf	status,0,c
  7491  004A70                     l1668:
  7492                           
  7493                           ; BSR set to: 0
  7494  004A70  0012               	return		;funcret
  7495  004A72                     __end_of___flge:
  7496                           	callstack 0
  7497                           
  7498 ;; *************** function ___fleq *****************
  7499 ;; Defined at:
  7500 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fleq.c"
  7501 ;; Parameters:    Size  Location     Type
  7502 ;;  ff1             4   19[COMRAM] int 
  7503 ;;  ff2             4   23[COMRAM] int 
  7504 ;; Auto vars:     Size  Location     Type
  7505 ;;		None
  7506 ;; Return value:  Size  Location     Type
  7507 ;;		None               void
  7508 ;; Registers used:
  7509 ;;		wreg, status,2, status,0
  7510 ;; Tracked objects:
  7511 ;;		On entry : 0/0
  7512 ;;		On exit  : 0/0
  7513 ;;		Unchanged: 0/0
  7514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7515 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7517 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7518 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7519 ;;Total ram usage:       12 bytes
  7520 ;; Hardware stack levels used: 1
  7521 ;; Hardware stack levels required when called: 8
  7522 ;; This function calls:
  7523 ;;		Nothing
  7524 ;; This function is called by:
  7525 ;;		_efgtoa
  7526 ;; This function uses a non-reentrant model
  7527 ;;
  7528                           
  7529                           	psect	text25
  7530  005392                     __ptext25:
  7531                           	callstack 0
  7532  005392                     ___fleq:
  7533                           	callstack 16
  7534  005392  0E00               	movlw	0
  7535  005394  1414               	andwf	___fleq@ff1^0,w,c
  7536  005396  6E1C               	movwf	??___fleq^0,c
  7537  005398  0E00               	movlw	0
  7538  00539A  1415               	andwf	(___fleq@ff1+1)^0,w,c
  7539  00539C  6E1D               	movwf	(??___fleq+1)^0,c
  7540  00539E  0E80               	movlw	128
  7541  0053A0  1416               	andwf	(___fleq@ff1+2)^0,w,c
  7542  0053A2  6E1E               	movwf	(??___fleq+2)^0,c
  7543  0053A4  0E7F               	movlw	127
  7544  0053A6  1417               	andwf	(___fleq@ff1+3)^0,w,c
  7545  0053A8  6E1F               	movwf	(??___fleq+3)^0,c
  7546  0053AA  501C               	movf	??___fleq^0,w,c
  7547  0053AC  101D               	iorwf	(??___fleq+1)^0,w,c
  7548  0053AE  101E               	iorwf	(??___fleq+2)^0,w,c
  7549  0053B0  101F               	iorwf	(??___fleq+3)^0,w,c
  7550  0053B2  A4D8               	btfss	status,2,c
  7551  0053B4  EFDE  F029         	goto	u8711
  7552  0053B8  EFE0  F029         	goto	u8710
  7553  0053BC                     u8711:
  7554  0053BC  EFE8  F029         	goto	l8290
  7555  0053C0                     u8710:
  7556  0053C0  0E00               	movlw	0
  7557  0053C2  6E14               	movwf	___fleq@ff1^0,c
  7558  0053C4  0E00               	movlw	0
  7559  0053C6  6E15               	movwf	(___fleq@ff1+1)^0,c
  7560  0053C8  0E00               	movlw	0
  7561  0053CA  6E16               	movwf	(___fleq@ff1+2)^0,c
  7562  0053CC  0E00               	movlw	0
  7563  0053CE  6E17               	movwf	(___fleq@ff1+3)^0,c
  7564  0053D0                     l8290:
  7565  0053D0  0E00               	movlw	0
  7566  0053D2  1418               	andwf	___fleq@ff2^0,w,c
  7567  0053D4  6E1C               	movwf	??___fleq^0,c
  7568  0053D6  0E00               	movlw	0
  7569  0053D8  1419               	andwf	(___fleq@ff2+1)^0,w,c
  7570  0053DA  6E1D               	movwf	(??___fleq+1)^0,c
  7571  0053DC  0E80               	movlw	128
  7572  0053DE  141A               	andwf	(___fleq@ff2+2)^0,w,c
  7573  0053E0  6E1E               	movwf	(??___fleq+2)^0,c
  7574  0053E2  0E7F               	movlw	127
  7575  0053E4  141B               	andwf	(___fleq@ff2+3)^0,w,c
  7576  0053E6  6E1F               	movwf	(??___fleq+3)^0,c
  7577  0053E8  501C               	movf	??___fleq^0,w,c
  7578  0053EA  101D               	iorwf	(??___fleq+1)^0,w,c
  7579  0053EC  101E               	iorwf	(??___fleq+2)^0,w,c
  7580  0053EE  101F               	iorwf	(??___fleq+3)^0,w,c
  7581  0053F0  A4D8               	btfss	status,2,c
  7582  0053F2  EFFD  F029         	goto	u8721
  7583  0053F6  EFFF  F029         	goto	u8720
  7584  0053FA                     u8721:
  7585  0053FA  EF07  F02A         	goto	l8294
  7586  0053FE                     u8720:
  7587  0053FE  0E00               	movlw	0
  7588  005400  6E18               	movwf	___fleq@ff2^0,c
  7589  005402  0E00               	movlw	0
  7590  005404  6E19               	movwf	(___fleq@ff2+1)^0,c
  7591  005406  0E00               	movlw	0
  7592  005408  6E1A               	movwf	(___fleq@ff2+2)^0,c
  7593  00540A  0E00               	movlw	0
  7594  00540C  6E1B               	movwf	(___fleq@ff2+3)^0,c
  7595  00540E                     l8294:
  7596  00540E  5018               	movf	___fleq@ff2^0,w,c
  7597  005410  1814               	xorwf	___fleq@ff1^0,w,c
  7598  005412  E10F               	bnz	u8730
  7599  005414  5019               	movf	(___fleq@ff2+1)^0,w,c
  7600  005416  1815               	xorwf	(___fleq@ff1+1)^0,w,c
  7601  005418  E10C               	bnz	u8730
  7602  00541A  501A               	movf	(___fleq@ff2+2)^0,w,c
  7603  00541C  1816               	xorwf	(___fleq@ff1+2)^0,w,c
  7604  00541E  E109               	bnz	u8730
  7605  005420  501B               	movf	(___fleq@ff2+3)^0,w,c
  7606  005422  1817               	xorwf	(___fleq@ff1+3)^0,w,c
  7607  005424  B4D8               	btfsc	status,2,c
  7608  005426  EF17  F02A         	goto	u8731
  7609  00542A  EF19  F02A         	goto	u8730
  7610  00542E                     u8731:
  7611  00542E  EF1C  F02A         	goto	l8298
  7612  005432                     u8730:
  7613  005432  90D8               	bcf	status,0,c
  7614  005434  EF1D  F02A         	goto	l1657
  7615  005438                     l8298:
  7616  005438  80D8               	bsf	status,0,c
  7617  00543A                     l1657:
  7618  00543A  0012               	return		;funcret
  7619  00543C                     __end_of___fleq:
  7620                           	callstack 0
  7621                           
  7622 ;; *************** function ___awmod *****************
  7623 ;; Defined at:
  7624 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  7625 ;; Parameters:    Size  Location     Type
  7626 ;;  dividend        2   19[COMRAM] int 
  7627 ;;  divisor         2   21[COMRAM] int 
  7628 ;; Auto vars:     Size  Location     Type
  7629 ;;  sign            1   24[COMRAM] unsigned char 
  7630 ;;  counter         1   23[COMRAM] unsigned char 
  7631 ;; Return value:  Size  Location     Type
  7632 ;;                  2   19[COMRAM] int 
  7633 ;; Registers used:
  7634 ;;		wreg, status,2, status,0
  7635 ;; Tracked objects:
  7636 ;;		On entry : 0/0
  7637 ;;		On exit  : 0/0
  7638 ;;		Unchanged: 0/0
  7639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7640 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7641 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7643 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7644 ;;Total ram usage:        6 bytes
  7645 ;; Hardware stack levels used: 1
  7646 ;; Hardware stack levels required when called: 8
  7647 ;; This function calls:
  7648 ;;		Nothing
  7649 ;; This function is called by:
  7650 ;;		_efgtoa
  7651 ;; This function uses a non-reentrant model
  7652 ;;
  7653                           
  7654                           	psect	text26
  7655  0052E2                     __ptext26:
  7656                           	callstack 0
  7657  0052E2                     ___awmod:
  7658                           	callstack 16
  7659  0052E2  0E00               	movlw	0
  7660  0052E4  6E19               	movwf	___awmod@sign^0,c
  7661  0052E6  BE15               	btfsc	(___awmod@dividend+1)^0,7,c
  7662  0052E8  EF7A  F029         	goto	u8650
  7663  0052EC  EF78  F029         	goto	u8651
  7664  0052F0                     u8651:
  7665  0052F0  EF80  F029         	goto	l8258
  7666  0052F4                     u8650:
  7667  0052F4  6C14               	negf	___awmod@dividend^0,c
  7668  0052F6  1E15               	comf	(___awmod@dividend+1)^0,f,c
  7669  0052F8  B0D8               	btfsc	status,0,c
  7670  0052FA  2A15               	incf	(___awmod@dividend+1)^0,f,c
  7671  0052FC  0E01               	movlw	1
  7672  0052FE  6E19               	movwf	___awmod@sign^0,c
  7673  005300                     l8258:
  7674  005300  BE17               	btfsc	(___awmod@divisor+1)^0,7,c
  7675  005302  EF87  F029         	goto	u8660
  7676  005306  EF85  F029         	goto	u8661
  7677  00530A                     u8661:
  7678  00530A  EF8B  F029         	goto	l8262
  7679  00530E                     u8660:
  7680  00530E  6C16               	negf	___awmod@divisor^0,c
  7681  005310  1E17               	comf	(___awmod@divisor+1)^0,f,c
  7682  005312  B0D8               	btfsc	status,0,c
  7683  005314  2A17               	incf	(___awmod@divisor+1)^0,f,c
  7684  005316                     l8262:
  7685  005316  5016               	movf	___awmod@divisor^0,w,c
  7686  005318  1017               	iorwf	(___awmod@divisor+1)^0,w,c
  7687  00531A  B4D8               	btfsc	status,2,c
  7688  00531C  EF92  F029         	goto	u8671
  7689  005320  EF94  F029         	goto	u8670
  7690  005324                     u8671:
  7691  005324  EFB8  F029         	goto	l8278
  7692  005328                     u8670:
  7693  005328  0E01               	movlw	1
  7694  00532A  6E18               	movwf	___awmod@counter^0,c
  7695  00532C  EF9C  F029         	goto	l8268
  7696  005330                     l8266:
  7697  005330  90D8               	bcf	status,0,c
  7698  005332  3616               	rlcf	___awmod@divisor^0,f,c
  7699  005334  3617               	rlcf	(___awmod@divisor+1)^0,f,c
  7700  005336  2A18               	incf	___awmod@counter^0,f,c
  7701  005338                     l8268:
  7702  005338  AE17               	btfss	(___awmod@divisor+1)^0,7,c
  7703  00533A  EFA1  F029         	goto	u8681
  7704  00533E  EFA3  F029         	goto	u8680
  7705  005342                     u8681:
  7706  005342  EF98  F029         	goto	l8266
  7707  005346                     u8680:
  7708  005346                     l8270:
  7709  005346  5016               	movf	___awmod@divisor^0,w,c
  7710  005348  5C14               	subwf	___awmod@dividend^0,w,c
  7711  00534A  5017               	movf	(___awmod@divisor+1)^0,w,c
  7712  00534C  5815               	subwfb	(___awmod@dividend+1)^0,w,c
  7713  00534E  A0D8               	btfss	status,0,c
  7714  005350  EFAC  F029         	goto	u8691
  7715  005354  EFAE  F029         	goto	u8690
  7716  005358                     u8691:
  7717  005358  EFB2  F029         	goto	l8274
  7718  00535C                     u8690:
  7719  00535C  5016               	movf	___awmod@divisor^0,w,c
  7720  00535E  5E14               	subwf	___awmod@dividend^0,f,c
  7721  005360  5017               	movf	(___awmod@divisor+1)^0,w,c
  7722  005362  5A15               	subwfb	(___awmod@dividend+1)^0,f,c
  7723  005364                     l8274:
  7724  005364  90D8               	bcf	status,0,c
  7725  005366  3217               	rrcf	(___awmod@divisor+1)^0,f,c
  7726  005368  3216               	rrcf	___awmod@divisor^0,f,c
  7727  00536A  2E18               	decfsz	___awmod@counter^0,f,c
  7728  00536C  EFA3  F029         	goto	l8270
  7729  005370                     l8278:
  7730  005370  5019               	movf	___awmod@sign^0,w,c
  7731  005372  B4D8               	btfsc	status,2,c
  7732  005374  EFBE  F029         	goto	u8701
  7733  005378  EFC0  F029         	goto	u8700
  7734  00537C                     u8701:
  7735  00537C  EFC4  F029         	goto	l8282
  7736  005380                     u8700:
  7737  005380  6C14               	negf	___awmod@dividend^0,c
  7738  005382  1E15               	comf	(___awmod@dividend+1)^0,f,c
  7739  005384  B0D8               	btfsc	status,0,c
  7740  005386  2A15               	incf	(___awmod@dividend+1)^0,f,c
  7741  005388                     l8282:
  7742  005388  C014  F014         	movff	___awmod@dividend,?___awmod
  7743  00538C  C015  F015         	movff	___awmod@dividend+1,?___awmod+1
  7744  005390  0012               	return		;funcret
  7745  005392                     __end_of___awmod:
  7746                           	callstack 0
  7747                           
  7748 ;; *************** function _dtoa *****************
  7749 ;; Defined at:
  7750 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  7751 ;; Parameters:    Size  Location     Type
  7752 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  7753 ;;		 -> NULL(0), 
  7754 ;;  d               8    2[BANK0 ] long long 
  7755 ;; Auto vars:     Size  Location     Type
  7756 ;;  n               8   18[BANK0 ] long long 
  7757 ;;  i               2   26[BANK0 ] int 
  7758 ;;  s               2   16[BANK0 ] int 
  7759 ;;  w               2   14[BANK0 ] int 
  7760 ;;  p               2   12[BANK0 ] int 
  7761 ;; Return value:  Size  Location     Type
  7762 ;;                  2    0[BANK0 ] int 
  7763 ;; Registers used:
  7764 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7765 ;; Tracked objects:
  7766 ;;		On entry : 0/0
  7767 ;;		On exit  : 0/0
  7768 ;;		Unchanged: 0/0
  7769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7770 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7771 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7772 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7773 ;;      Totals:         8      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7774 ;;Total ram usage:       36 bytes
  7775 ;; Hardware stack levels used: 1
  7776 ;; Hardware stack levels required when called: 13
  7777 ;; This function calls:
  7778 ;;		___aodiv
  7779 ;;		___aomod
  7780 ;;		_abs
  7781 ;;		_pad
  7782 ;; This function is called by:
  7783 ;;		_vfpfcnvrt
  7784 ;; This function uses a non-reentrant model
  7785 ;;
  7786                           
  7787                           	psect	text27
  7788  002FF8                     __ptext27:
  7789                           	callstack 0
  7790  002FF8                     _dtoa:
  7791                           	callstack 12
  7792  002FF8                     
  7793                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  7794  002FF8  C062  F072         	movff	dtoa@d,dtoa@n
  7795  002FFC  C063  F073         	movff	dtoa@d+1,dtoa@n+1
  7796  003000  C064  F074         	movff	dtoa@d+2,dtoa@n+2
  7797  003004  C065  F075         	movff	dtoa@d+3,dtoa@n+3
  7798  003008  C066  F076         	movff	dtoa@d+4,dtoa@n+4
  7799  00300C  C067  F077         	movff	dtoa@d+5,dtoa@n+5
  7800  003010  C068  F078         	movff	dtoa@d+6,dtoa@n+6
  7801  003014  C069  F079         	movff	dtoa@d+7,dtoa@n+7
  7802  003018                     
  7803                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  7804  003018  0100               	movlb	0	; () banked
  7805  00301A  BF79               	btfsc	(dtoa@n+7)& (0+255),7,b
  7806  00301C  EF12  F018         	goto	u9211
  7807  003020  EF15  F018         	goto	u9210
  7808  003024                     u9211:
  7809  003024  0E01               	movlw	1
  7810  003026  EF16  F018         	goto	u9220
  7811  00302A                     u9210:
  7812  00302A  0E00               	movlw	0
  7813  00302C                     u9220:
  7814  00302C  6F70               	movwf	dtoa@s& (0+255),b
  7815  00302E  6B71               	clrf	(dtoa@s+1)& (0+255),b
  7816                           
  7817                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  7818  003030  5170               	movf	dtoa@s& (0+255),w,b
  7819  003032  1171               	iorwf	(dtoa@s+1)& (0+255),w,b
  7820  003034  B4D8               	btfsc	status,2,c
  7821  003036  EF1F  F018         	goto	u9231
  7822  00303A  EF21  F018         	goto	u9230
  7823  00303E                     u9231:
  7824  00303E  EF31  F018         	goto	l8510
  7825  003042                     u9230:
  7826  003042                     
  7827                           ; BSR set to: 0
  7828                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  7829  003042  1F79               	comf	(dtoa@n+7)& (0+255),f,b
  7830  003044  1F78               	comf	(dtoa@n+6)& (0+255),f,b
  7831  003046  1F77               	comf	(dtoa@n+5)& (0+255),f,b
  7832  003048  1F76               	comf	(dtoa@n+4)& (0+255),f,b
  7833  00304A  1F75               	comf	(dtoa@n+3)& (0+255),f,b
  7834  00304C  1F74               	comf	(dtoa@n+2)& (0+255),f,b
  7835  00304E  1F73               	comf	(dtoa@n+1)& (0+255),f,b
  7836  003050  6D72               	negf	dtoa@n& (0+255),b
  7837  003052  0E00               	movlw	0
  7838  003054  2373               	addwfc	(dtoa@n+1)& (0+255),f,b
  7839  003056  2374               	addwfc	(dtoa@n+2)& (0+255),f,b
  7840  003058  2375               	addwfc	(dtoa@n+3)& (0+255),f,b
  7841  00305A  2376               	addwfc	(dtoa@n+4)& (0+255),f,b
  7842  00305C  2377               	addwfc	(dtoa@n+5)& (0+255),f,b
  7843  00305E  2378               	addwfc	(dtoa@n+6)& (0+255),f,b
  7844  003060  2379               	addwfc	(dtoa@n+7)& (0+255),f,b
  7845  003062                     l8510:
  7846                           
  7847                           ; BSR set to: 0
  7848                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  7849  003062  BE3D               	btfsc	(_prec+1)^0,7,c
  7850  003064  EF36  F018         	goto	u9241
  7851  003068  EF38  F018         	goto	u9240
  7852  00306C                     u9241:
  7853  00306C  EF39  F018         	goto	l8514
  7854  003070                     u9240:
  7855  003070                     
  7856                           ; BSR set to: 0
  7857                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  7858  003070  923E               	bcf	_flags^0,1,c
  7859  003072                     l8514:
  7860                           
  7861                           ; BSR set to: 0
  7862                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  7863  003072  BE3D               	btfsc	(_prec+1)^0,7,c
  7864  003074  EF46  F018         	goto	u9250
  7865  003078  503D               	movf	(_prec+1)^0,w,c
  7866  00307A  E106               	bnz	u9251
  7867  00307C  043C               	decf	_prec^0,w,c
  7868  00307E  B0D8               	btfsc	status,0,c
  7869  003080  EF44  F018         	goto	u9251
  7870  003084  EF46  F018         	goto	u9250
  7871  003088                     u9251:
  7872  003088  EF4C  F018         	goto	l2126
  7873  00308C                     u9250:
  7874  00308C                     
  7875                           ; BSR set to: 0
  7876  00308C  0E00               	movlw	0
  7877  00308E  6F6D               	movwf	(dtoa@p+1)& (0+255),b
  7878  003090  0E01               	movlw	1
  7879  003092  6F6C               	movwf	dtoa@p& (0+255),b
  7880  003094  EF50  F018         	goto	l2128
  7881  003098                     l2126:
  7882                           
  7883                           ; BSR set to: 0
  7884  003098  C03C  F06C         	movff	_prec,dtoa@p
  7885  00309C  C03D  F06D         	movff	_prec+1,dtoa@p+1
  7886  0030A0                     l2128:
  7887                           
  7888                           ; BSR set to: 0
  7889                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  7890  0030A0  C03A  F06E         	movff	_width,dtoa@w
  7891  0030A4  C03B  F06F         	movff	_width+1,dtoa@w+1
  7892  0030A8                     
  7893                           ; BSR set to: 0
  7894                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  7895  0030A8  5170               	movf	dtoa@s& (0+255),w,b
  7896  0030AA  1171               	iorwf	(dtoa@s+1)& (0+255),w,b
  7897  0030AC  A4D8               	btfss	status,2,c
  7898  0030AE  EF5B  F018         	goto	u9261
  7899  0030B2  EF5D  F018         	goto	u9260
  7900  0030B6                     u9261:
  7901  0030B6  EF64  F018         	goto	l8522
  7902  0030BA                     u9260:
  7903  0030BA                     
  7904                           ; BSR set to: 0
  7905  0030BA  A43E               	btfss	_flags^0,2,c
  7906  0030BC  EF62  F018         	goto	u9271
  7907  0030C0  EF64  F018         	goto	u9270
  7908  0030C4                     u9271:
  7909  0030C4  EF67  F018         	goto	l8524
  7910  0030C8                     u9270:
  7911  0030C8                     l8522:
  7912                           
  7913                           ; BSR set to: 0
  7914                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  7915  0030C8  076E               	decf	dtoa@w& (0+255),f,b
  7916  0030CA  A0D8               	btfss	status,0,c
  7917  0030CC  076F               	decf	(dtoa@w+1)& (0+255),f,b
  7918  0030CE                     l8524:
  7919                           
  7920                           ; BSR set to: 0
  7921                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  7922  0030CE  0E00               	movlw	0
  7923  0030D0  6F7B               	movwf	(dtoa@i+1)& (0+255),b
  7924  0030D2  0E4F               	movlw	79
  7925  0030D4  6F7A               	movwf	dtoa@i& (0+255),b
  7926  0030D6                     
  7927                           ; BSR set to: 0
  7928                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  7929  0030D6  0E00               	movlw	0
  7930  0030D8  0101               	movlb	1	; () banked
  7931  0030DA  6F8D               	movwf	(_dbuf+79)& (0+255),b
  7932                           
  7933                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7934  0030DC  EFED  F018         	goto	l8538
  7935  0030E0                     l8528:
  7936                           
  7937                           ; BSR set to: 0
  7938                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  7939  0030E0  077A               	decf	dtoa@i& (0+255),f,b
  7940  0030E2  A0D8               	btfss	status,0,c
  7941  0030E4  077B               	decf	(dtoa@i+1)& (0+255),f,b
  7942  0030E6                     
  7943                           ; BSR set to: 0
  7944                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  7945  0030E6  0E3E               	movlw	low _dbuf
  7946  0030E8  257A               	addwf	dtoa@i& (0+255),w,b
  7947  0030EA  6ED9               	movwf	fsr2l,c
  7948  0030EC  0E01               	movlw	high _dbuf
  7949  0030EE  217B               	addwfc	(dtoa@i+1)& (0+255),w,b
  7950  0030F0  6EDA               	movwf	fsr2h,c
  7951  0030F2  C072  F014         	movff	dtoa@n,___aomod@dividend
  7952  0030F6  C073  F015         	movff	dtoa@n+1,___aomod@dividend+1
  7953  0030FA  C074  F016         	movff	dtoa@n+2,___aomod@dividend+2
  7954  0030FE  C075  F017         	movff	dtoa@n+3,___aomod@dividend+3
  7955  003102  C076  F018         	movff	dtoa@n+4,___aomod@dividend+4
  7956  003106  C077  F019         	movff	dtoa@n+5,___aomod@dividend+5
  7957  00310A  C078  F01A         	movff	dtoa@n+6,___aomod@dividend+6
  7958  00310E  C079  F01B         	movff	dtoa@n+7,___aomod@dividend+7
  7959  003112  0E0A               	movlw	10
  7960  003114  6E1C               	movwf	___aomod@divisor^0,c
  7961  003116  0E00               	movlw	0
  7962  003118  6E1D               	movwf	(___aomod@divisor+1)^0,c
  7963  00311A  0E00               	movlw	0
  7964  00311C  6E1E               	movwf	(___aomod@divisor+2)^0,c
  7965  00311E  0E00               	movlw	0
  7966  003120  6E1F               	movwf	(___aomod@divisor+3)^0,c
  7967  003122  0E00               	movlw	0
  7968  003124  6E20               	movwf	(___aomod@divisor+4)^0,c
  7969  003126  0E00               	movlw	0
  7970  003128  6E21               	movwf	(___aomod@divisor+5)^0,c
  7971  00312A  0E00               	movlw	0
  7972  00312C  6E22               	movwf	(___aomod@divisor+6)^0,c
  7973  00312E  0E00               	movlw	0
  7974  003130  6E23               	movwf	(___aomod@divisor+7)^0,c
  7975  003132  EC18  F021         	call	___aomod	;wreg free
  7976  003136  C014  F031         	movff	?___aomod,??_dtoa
  7977  00313A  C015  F032         	movff	?___aomod+1,??_dtoa+1
  7978  00313E  C016  F033         	movff	?___aomod+2,??_dtoa+2
  7979  003142  C017  F034         	movff	?___aomod+3,??_dtoa+3
  7980  003146  C018  F035         	movff	?___aomod+4,??_dtoa+4
  7981  00314A  C019  F036         	movff	?___aomod+5,??_dtoa+5
  7982  00314E  C01A  F037         	movff	?___aomod+6,??_dtoa+6
  7983  003152  C01B  F038         	movff	?___aomod+7,??_dtoa+7
  7984  003156  C031  F026         	movff	??_dtoa,abs@a
  7985  00315A  C033  F027         	movff	??_dtoa+2,abs@a+1
  7986  00315E  ECF9  F02D         	call	_abs	;wreg free
  7987  003162  5026               	movf	?_abs^0,w,c
  7988  003164  0F30               	addlw	48
  7989  003166  6EDF               	movwf	indf2,c
  7990  003168                     
  7991                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  7992  003168  0100               	movlb	0	; () banked
  7993  00316A  076C               	decf	dtoa@p& (0+255),f,b
  7994  00316C  A0D8               	btfss	status,0,c
  7995  00316E  076D               	decf	(dtoa@p+1)& (0+255),f,b
  7996  003170                     
  7997                           ; BSR set to: 0
  7998                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  7999  003170  076E               	decf	dtoa@w& (0+255),f,b
  8000  003172  A0D8               	btfss	status,0,c
  8001  003174  076F               	decf	(dtoa@w+1)& (0+255),f,b
  8002  003176                     
  8003                           ; BSR set to: 0
  8004                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  8005  003176  C072  F014         	movff	dtoa@n,___aodiv@dividend
  8006  00317A  C073  F015         	movff	dtoa@n+1,___aodiv@dividend+1
  8007  00317E  C074  F016         	movff	dtoa@n+2,___aodiv@dividend+2
  8008  003182  C075  F017         	movff	dtoa@n+3,___aodiv@dividend+3
  8009  003186  C076  F018         	movff	dtoa@n+4,___aodiv@dividend+4
  8010  00318A  C077  F019         	movff	dtoa@n+5,___aodiv@dividend+5
  8011  00318E  C078  F01A         	movff	dtoa@n+6,___aodiv@dividend+6
  8012  003192  C079  F01B         	movff	dtoa@n+7,___aodiv@dividend+7
  8013  003196  0E0A               	movlw	10
  8014  003198  6E1C               	movwf	___aodiv@divisor^0,c
  8015  00319A  0E00               	movlw	0
  8016  00319C  6E1D               	movwf	(___aodiv@divisor+1)^0,c
  8017  00319E  0E00               	movlw	0
  8018  0031A0  6E1E               	movwf	(___aodiv@divisor+2)^0,c
  8019  0031A2  0E00               	movlw	0
  8020  0031A4  6E1F               	movwf	(___aodiv@divisor+3)^0,c
  8021  0031A6  0E00               	movlw	0
  8022  0031A8  6E20               	movwf	(___aodiv@divisor+4)^0,c
  8023  0031AA  0E00               	movlw	0
  8024  0031AC  6E21               	movwf	(___aodiv@divisor+5)^0,c
  8025  0031AE  0E00               	movlw	0
  8026  0031B0  6E22               	movwf	(___aodiv@divisor+6)^0,c
  8027  0031B2  0E00               	movlw	0
  8028  0031B4  6E23               	movwf	(___aodiv@divisor+7)^0,c
  8029  0031B6  EC54  F020         	call	___aodiv	;wreg free
  8030  0031BA  C014  F072         	movff	?___aodiv,dtoa@n
  8031  0031BE  C015  F073         	movff	?___aodiv+1,dtoa@n+1
  8032  0031C2  C016  F074         	movff	?___aodiv+2,dtoa@n+2
  8033  0031C6  C017  F075         	movff	?___aodiv+3,dtoa@n+3
  8034  0031CA  C018  F076         	movff	?___aodiv+4,dtoa@n+4
  8035  0031CE  C019  F077         	movff	?___aodiv+5,dtoa@n+5
  8036  0031D2  C01A  F078         	movff	?___aodiv+6,dtoa@n+6
  8037  0031D6  C01B  F079         	movff	?___aodiv+7,dtoa@n+7
  8038  0031DA                     l8538:
  8039                           
  8040                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8041  0031DA  0100               	movlb	0	; () banked
  8042  0031DC  BF7B               	btfsc	(dtoa@i+1)& (0+255),7,b
  8043  0031DE  EFF9  F018         	goto	u9281
  8044  0031E2  517B               	movf	(dtoa@i+1)& (0+255),w,b
  8045  0031E4  E108               	bnz	u9280
  8046  0031E6  057A               	decf	dtoa@i& (0+255),w,b
  8047  0031E8  A0D8               	btfss	status,0,c
  8048  0031EA  EFF9  F018         	goto	u9281
  8049  0031EE  EFFB  F018         	goto	u9280
  8050  0031F2                     u9281:
  8051  0031F2  EF2B  F019         	goto	l8548
  8052  0031F6                     u9280:
  8053  0031F6                     
  8054                           ; BSR set to: 0
  8055  0031F6  5172               	movf	dtoa@n& (0+255),w,b
  8056  0031F8  1173               	iorwf	(dtoa@n+1)& (0+255),w,b
  8057  0031FA  1174               	iorwf	(dtoa@n+2)& (0+255),w,b
  8058  0031FC  1175               	iorwf	(dtoa@n+3)& (0+255),w,b
  8059  0031FE  1176               	iorwf	(dtoa@n+4)& (0+255),w,b
  8060  003200  1177               	iorwf	(dtoa@n+5)& (0+255),w,b
  8061  003202  1178               	iorwf	(dtoa@n+6)& (0+255),w,b
  8062  003204  1179               	iorwf	(dtoa@n+7)& (0+255),w,b
  8063  003206  A4D8               	btfss	status,2,c
  8064  003208  EF08  F019         	goto	u9291
  8065  00320C  EF0A  F019         	goto	u9290
  8066  003210                     u9291:
  8067  003210  EF70  F018         	goto	l8528
  8068  003214                     u9290:
  8069  003214                     
  8070                           ; BSR set to: 0
  8071  003214  BF6D               	btfsc	(dtoa@p+1)& (0+255),7,b
  8072  003216  EF17  F019         	goto	u9300
  8073  00321A  516D               	movf	(dtoa@p+1)& (0+255),w,b
  8074  00321C  E106               	bnz	u9301
  8075  00321E  056C               	decf	dtoa@p& (0+255),w,b
  8076  003220  B0D8               	btfsc	status,0,c
  8077  003222  EF15  F019         	goto	u9301
  8078  003226  EF17  F019         	goto	u9300
  8079  00322A                     u9301:
  8080  00322A  EF70  F018         	goto	l8528
  8081  00322E                     u9300:
  8082  00322E                     
  8083                           ; BSR set to: 0
  8084  00322E  BF6F               	btfsc	(dtoa@w+1)& (0+255),7,b
  8085  003230  EF22  F019         	goto	u9311
  8086  003234  516F               	movf	(dtoa@w+1)& (0+255),w,b
  8087  003236  E108               	bnz	u9310
  8088  003238  056E               	decf	dtoa@w& (0+255),w,b
  8089  00323A  A0D8               	btfss	status,0,c
  8090  00323C  EF22  F019         	goto	u9311
  8091  003240  EF24  F019         	goto	u9310
  8092  003244                     u9311:
  8093  003244  EF2B  F019         	goto	l8548
  8094  003248                     u9310:
  8095  003248                     
  8096                           ; BSR set to: 0
  8097  003248  B23E               	btfsc	_flags^0,1,c
  8098  00324A  EF29  F019         	goto	u9321
  8099  00324E  EF2B  F019         	goto	u9320
  8100  003252                     u9321:
  8101  003252  EF70  F018         	goto	l8528
  8102  003256                     u9320:
  8103  003256                     l8548:
  8104                           
  8105                           ; BSR set to: 0
  8106                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  8107  003256  5170               	movf	dtoa@s& (0+255),w,b
  8108  003258  1171               	iorwf	(dtoa@s+1)& (0+255),w,b
  8109  00325A  A4D8               	btfss	status,2,c
  8110  00325C  EF32  F019         	goto	u9331
  8111  003260  EF34  F019         	goto	u9330
  8112  003264                     u9331:
  8113  003264  EF3B  F019         	goto	l8552
  8114  003268                     u9330:
  8115  003268                     
  8116                           ; BSR set to: 0
  8117  003268  A43E               	btfss	_flags^0,2,c
  8118  00326A  EF39  F019         	goto	u9341
  8119  00326E  EF3B  F019         	goto	u9340
  8120  003272                     u9341:
  8121  003272  EF5A  F019         	goto	l8562
  8122  003276                     u9340:
  8123  003276                     l8552:
  8124                           
  8125                           ; BSR set to: 0
  8126                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  8127  003276  077A               	decf	dtoa@i& (0+255),f,b
  8128  003278  A0D8               	btfss	status,0,c
  8129  00327A  077B               	decf	(dtoa@i+1)& (0+255),f,b
  8130  00327C                     
  8131                           ; BSR set to: 0
  8132                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  8133  00327C  5170               	movf	dtoa@s& (0+255),w,b
  8134  00327E  1171               	iorwf	(dtoa@s+1)& (0+255),w,b
  8135  003280  A4D8               	btfss	status,2,c
  8136  003282  EF45  F019         	goto	u9351
  8137  003286  EF47  F019         	goto	u9350
  8138  00328A                     u9351:
  8139  00328A  EF4D  F019         	goto	l8558
  8140  00328E                     u9350:
  8141  00328E                     
  8142                           ; BSR set to: 0
  8143  00328E  0E00               	movlw	0
  8144  003290  6F6B               	movwf	(_dtoa$3539+1)& (0+255),b
  8145  003292  0E2B               	movlw	43
  8146  003294  6F6A               	movwf	_dtoa$3539& (0+255),b
  8147  003296  EF51  F019         	goto	l8560
  8148  00329A                     l8558:
  8149                           
  8150                           ; BSR set to: 0
  8151  00329A  0E00               	movlw	0
  8152  00329C  6F6B               	movwf	(_dtoa$3539+1)& (0+255),b
  8153  00329E  0E2D               	movlw	45
  8154  0032A0  6F6A               	movwf	_dtoa$3539& (0+255),b
  8155  0032A2                     l8560:
  8156                           
  8157                           ; BSR set to: 0
  8158  0032A2  0E3E               	movlw	low _dbuf
  8159  0032A4  257A               	addwf	dtoa@i& (0+255),w,b
  8160  0032A6  6ED9               	movwf	fsr2l,c
  8161  0032A8  0E01               	movlw	high _dbuf
  8162  0032AA  217B               	addwfc	(dtoa@i+1)& (0+255),w,b
  8163  0032AC  6EDA               	movwf	fsr2h,c
  8164  0032AE  0060  F1AB  FFDF   	movff	_dtoa$3539,indf2
  8165  0032B4                     l8562:
  8166                           
  8167                           ; BSR set to: 0
  8168                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  8169  0032B4  C060  F026         	movff	dtoa@fp,pad@fp
  8170  0032B8  C061  F027         	movff	dtoa@fp+1,pad@fp+1
  8171  0032BC  0E3E               	movlw	low _dbuf
  8172  0032BE  257A               	addwf	dtoa@i& (0+255),w,b
  8173  0032C0  6E28               	movwf	pad@buf^0,c
  8174  0032C2  0E01               	movlw	high _dbuf
  8175  0032C4  217B               	addwfc	(dtoa@i+1)& (0+255),w,b
  8176  0032C6  6E29               	movwf	(pad@buf+1)^0,c
  8177  0032C8  C06E  F02A         	movff	dtoa@w,pad@p
  8178  0032CC  C06F  F02B         	movff	dtoa@w+1,pad@p+1
  8179  0032D0  ECB0  F028         	call	_pad	;wreg free
  8180  0032D4  C026  F060         	movff	?_pad,?_dtoa
  8181  0032D8  C027  F061         	movff	?_pad+1,?_dtoa+1
  8182  0032DC  0012               	return		;funcret
  8183  0032DE                     __end_of_dtoa:
  8184                           	callstack 0
  8185                           
  8186 ;; *************** function _pad *****************
  8187 ;; Defined at:
  8188 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  8189 ;; Parameters:    Size  Location     Type
  8190 ;;  fp              2   37[COMRAM] PTR struct _IO_FILE
  8191 ;;		 -> NULL(0), 
  8192 ;;  buf             2   39[COMRAM] PTR unsigned char 
  8193 ;;		 -> dbuf(80), 
  8194 ;;  p               2   41[COMRAM] int 
  8195 ;; Auto vars:     Size  Location     Type
  8196 ;;  w               2   46[COMRAM] int 
  8197 ;;  i               2   44[COMRAM] int 
  8198 ;; Return value:  Size  Location     Type
  8199 ;;                  2   37[COMRAM] int 
  8200 ;; Registers used:
  8201 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8202 ;; Tracked objects:
  8203 ;;		On entry : 0/0
  8204 ;;		On exit  : 0/0
  8205 ;;		Unchanged: 0/0
  8206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8207 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8208 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8209 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8210 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8211 ;;Total ram usage:       11 bytes
  8212 ;; Hardware stack levels used: 1
  8213 ;; Hardware stack levels required when called: 12
  8214 ;; This function calls:
  8215 ;;		_fputc
  8216 ;;		_fputs
  8217 ;;		_strlen
  8218 ;; This function is called by:
  8219 ;;		_dtoa
  8220 ;;		_efgtoa
  8221 ;;		_utoa
  8222 ;; This function uses a non-reentrant model
  8223 ;;
  8224                           
  8225                           	psect	text28
  8226  005160                     __ptext28:
  8227                           	callstack 0
  8228  005160                     _pad:
  8229                           	callstack 12
  8230  005160                     
  8231                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  8232  005160  A03E               	btfss	_flags^0,0,c
  8233  005162  EFB5  F028         	goto	u8941
  8234  005166  EFB7  F028         	goto	u8940
  8235  00516A                     u8941:
  8236  00516A  EFC1  F028         	goto	l8418
  8237  00516E                     u8940:
  8238  00516E                     
  8239                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  8240  00516E  C028  F01F         	movff	pad@buf,fputs@s
  8241  005172  C029  F020         	movff	pad@buf+1,fputs@s+1
  8242  005176  C026  F021         	movff	pad@fp,fputs@fp
  8243  00517A  C027  F022         	movff	pad@fp+1,fputs@fp+1
  8244  00517E  ECB5  F02D         	call	_fputs	;wreg free
  8245  005182                     l8418:
  8246                           
  8247                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  8248  005182  BE2B               	btfsc	(pad@p+1)^0,7,c
  8249  005184  EFC6  F028         	goto	u8951
  8250  005188  EFC8  F028         	goto	u8950
  8251  00518C                     u8951:
  8252  00518C  EFCE  F028         	goto	l8422
  8253  005190                     u8950:
  8254  005190  C02A  F02F         	movff	pad@p,pad@w
  8255  005194  C02B  F030         	movff	pad@p+1,pad@w+1
  8256  005198  EFD2  F028         	goto	l2115
  8257  00519C                     l8422:
  8258  00519C  0E00               	movlw	0
  8259  00519E  6E30               	movwf	(pad@w+1)^0,c
  8260  0051A0  0E00               	movlw	0
  8261  0051A2  6E2F               	movwf	pad@w^0,c
  8262  0051A4                     l2115:
  8263                           
  8264                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  8265  0051A4  0E00               	movlw	0
  8266  0051A6  6E2E               	movwf	(pad@i+1)^0,c
  8267  0051A8  0E00               	movlw	0
  8268  0051AA  6E2D               	movwf	pad@i^0,c
  8269                           
  8270                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  8271  0051AC  EFE4  F028         	goto	l8428
  8272  0051B0                     l8424:
  8273                           
  8274                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  8275  0051B0  0E00               	movlw	0
  8276  0051B2  6E17               	movwf	(fputc@c+1)^0,c
  8277  0051B4  0E20               	movlw	32
  8278  0051B6  6E16               	movwf	fputc@c^0,c
  8279  0051B8  C026  F018         	movff	pad@fp,fputc@fp
  8280  0051BC  C027  F019         	movff	pad@fp+1,fputc@fp+1
  8281  0051C0  ECC0  F02A         	call	_fputc	;wreg free
  8282  0051C4                     
  8283                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  8284  0051C4  4A2D               	infsnz	pad@i^0,f,c
  8285  0051C6  2A2E               	incf	(pad@i+1)^0,f,c
  8286  0051C8                     l8428:
  8287                           
  8288                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  8289  0051C8  502F               	movf	pad@w^0,w,c
  8290  0051CA  5C2D               	subwf	pad@i^0,w,c
  8291  0051CC  502E               	movf	(pad@i+1)^0,w,c
  8292  0051CE  0A80               	xorlw	128
  8293  0051D0  6E2C               	movwf	??_pad^0,c
  8294  0051D2  5030               	movf	(pad@w+1)^0,w,c
  8295  0051D4  0A80               	xorlw	128
  8296  0051D6  582C               	subwfb	??_pad^0,w,c
  8297  0051D8  A0D8               	btfss	status,0,c
  8298  0051DA  EFF1  F028         	goto	u8961
  8299  0051DE  EFF3  F028         	goto	u8960
  8300  0051E2                     u8961:
  8301  0051E2  EFD8  F028         	goto	l8424
  8302  0051E6                     u8960:
  8303  0051E6                     
  8304                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  8305  0051E6  B03E               	btfsc	_flags^0,0,c
  8306  0051E8  EFF8  F028         	goto	u8971
  8307  0051EC  EFFA  F028         	goto	u8970
  8308  0051F0                     u8971:
  8309  0051F0  EF04  F029         	goto	l8432
  8310  0051F4                     u8970:
  8311  0051F4                     
  8312                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  8313  0051F4  C028  F01F         	movff	pad@buf,fputs@s
  8314  0051F8  C029  F020         	movff	pad@buf+1,fputs@s+1
  8315  0051FC  C026  F021         	movff	pad@fp,fputs@fp
  8316  005200  C027  F022         	movff	pad@fp+1,fputs@fp+1
  8317  005204  ECB5  F02D         	call	_fputs	;wreg free
  8318  005208                     l8432:
  8319                           
  8320                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  8321  005208  C028  F014         	movff	pad@buf,strlen@s
  8322  00520C  C029  F015         	movff	pad@buf+1,strlen@s+1
  8323  005210  EC38  F02E         	call	_strlen	;wreg free
  8324  005214  502F               	movf	pad@w^0,w,c
  8325  005216  2414               	addwf	?_strlen^0,w,c
  8326  005218  6E26               	movwf	?_pad^0,c
  8327  00521A  5030               	movf	(pad@w+1)^0,w,c
  8328  00521C  2015               	addwfc	(?_strlen+1)^0,w,c
  8329  00521E  6E27               	movwf	(?_pad+1)^0,c
  8330  005220  0012               	return		;funcret
  8331  005222                     __end_of_pad:
  8332                           	callstack 0
  8333                           
  8334 ;; *************** function _strlen *****************
  8335 ;; Defined at:
  8336 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  8337 ;; Parameters:    Size  Location     Type
  8338 ;;  s               2   19[COMRAM] PTR const unsigned char 
  8339 ;;		 -> dbuf(80), 
  8340 ;; Auto vars:     Size  Location     Type
  8341 ;;  a               2   21[COMRAM] PTR const unsigned char 
  8342 ;;		 -> dbuf(80), 
  8343 ;; Return value:  Size  Location     Type
  8344 ;;                  2   19[COMRAM] unsigned int 
  8345 ;; Registers used:
  8346 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8347 ;; Tracked objects:
  8348 ;;		On entry : 0/0
  8349 ;;		On exit  : 0/0
  8350 ;;		Unchanged: 0/0
  8351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8352 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8353 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8355 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8356 ;;Total ram usage:        4 bytes
  8357 ;; Hardware stack levels used: 1
  8358 ;; Hardware stack levels required when called: 8
  8359 ;; This function calls:
  8360 ;;		Nothing
  8361 ;; This function is called by:
  8362 ;;		_pad
  8363 ;; This function uses a non-reentrant model
  8364 ;;
  8365                           
  8366                           	psect	text29
  8367  005C70                     __ptext29:
  8368                           	callstack 0
  8369  005C70                     _strlen:
  8370                           	callstack 15
  8371  005C70  C014  F016         	movff	strlen@s,strlen@a
  8372  005C74  C015  F017         	movff	strlen@s+1,strlen@a+1
  8373  005C78  EF40  F02E         	goto	l7842
  8374  005C7C                     l7840:
  8375  005C7C  4A14               	infsnz	strlen@s^0,f,c
  8376  005C7E  2A15               	incf	(strlen@s+1)^0,f,c
  8377  005C80                     l7842:
  8378  005C80  0060  F053  FFD9   	movff	strlen@s,fsr2l
  8379  005C86  0060  F057  FFDA   	movff	strlen@s+1,fsr2h
  8380  005C8C  50DF               	movf	indf2,w,c
  8381  005C8E  A4D8               	btfss	status,2,c
  8382  005C90  EF4C  F02E         	goto	u8011
  8383  005C94  EF4E  F02E         	goto	u8010
  8384  005C98                     u8011:
  8385  005C98  EF3E  F02E         	goto	l7840
  8386  005C9C                     u8010:
  8387  005C9C  5016               	movf	strlen@a^0,w,c
  8388  005C9E  5C14               	subwf	strlen@s^0,w,c
  8389  005CA0  6E14               	movwf	?_strlen^0,c
  8390  005CA2  5017               	movf	(strlen@a+1)^0,w,c
  8391  005CA4  5815               	subwfb	(strlen@s+1)^0,w,c
  8392  005CA6  6E15               	movwf	(?_strlen+1)^0,c
  8393  005CA8  0012               	return		;funcret
  8394  005CAA                     __end_of_strlen:
  8395                           	callstack 0
  8396                           
  8397 ;; *************** function _fputs *****************
  8398 ;; Defined at:
  8399 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  8400 ;; Parameters:    Size  Location     Type
  8401 ;;  s               2   30[COMRAM] PTR const unsigned char 
  8402 ;;		 -> dbuf(80), 
  8403 ;;  fp              2   32[COMRAM] PTR struct _IO_FILE
  8404 ;;		 -> NULL(0), 
  8405 ;; Auto vars:     Size  Location     Type
  8406 ;;  i               2   35[COMRAM] int 
  8407 ;;  c               1   34[COMRAM] unsigned char 
  8408 ;; Return value:  Size  Location     Type
  8409 ;;                  2   30[COMRAM] int 
  8410 ;; Registers used:
  8411 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8412 ;; Tracked objects:
  8413 ;;		On entry : 0/0
  8414 ;;		On exit  : 0/0
  8415 ;;		Unchanged: 0/0
  8416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8417 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8418 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8420 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8421 ;;Total ram usage:        7 bytes
  8422 ;; Hardware stack levels used: 1
  8423 ;; Hardware stack levels required when called: 11
  8424 ;; This function calls:
  8425 ;;		_fputc
  8426 ;; This function is called by:
  8427 ;;		_pad
  8428 ;; This function uses a non-reentrant model
  8429 ;;
  8430                           
  8431                           	psect	text30
  8432  005B6A                     __ptext30:
  8433                           	callstack 0
  8434  005B6A                     _fputs:
  8435                           	callstack 12
  8436  005B6A  0E00               	movlw	0
  8437  005B6C  6E25               	movwf	(fputs@i+1)^0,c
  8438  005B6E  0E00               	movlw	0
  8439  005B70  6E24               	movwf	fputs@i^0,c
  8440  005B72  EFC6  F02D         	goto	l7836
  8441  005B76                     l7832:
  8442  005B76  C023  F016         	movff	fputs@c,fputc@c
  8443  005B7A  6A17               	clrf	(fputc@c+1)^0,c
  8444  005B7C  C021  F018         	movff	fputs@fp,fputc@fp
  8445  005B80  C022  F019         	movff	fputs@fp+1,fputc@fp+1
  8446  005B84  ECC0  F02A         	call	_fputc	;wreg free
  8447  005B88  4A24               	infsnz	fputs@i^0,f,c
  8448  005B8A  2A25               	incf	(fputs@i+1)^0,f,c
  8449  005B8C                     l7836:
  8450  005B8C  5024               	movf	fputs@i^0,w,c
  8451  005B8E  241F               	addwf	fputs@s^0,w,c
  8452  005B90  6ED9               	movwf	fsr2l,c
  8453  005B92  5025               	movf	(fputs@i+1)^0,w,c
  8454  005B94  2020               	addwfc	(fputs@s+1)^0,w,c
  8455  005B96  6EDA               	movwf	fsr2h,c
  8456  005B98  50DF               	movf	indf2,w,c
  8457  005B9A  6E23               	movwf	fputs@c^0,c
  8458  005B9C  5023               	movf	fputs@c^0,w,c
  8459  005B9E  A4D8               	btfss	status,2,c
  8460  005BA0  EFD4  F02D         	goto	u8001
  8461  005BA4  EFD6  F02D         	goto	u8000
  8462  005BA8                     u8001:
  8463  005BA8  EFBB  F02D         	goto	l7832
  8464  005BAC                     u8000:
  8465  005BAC  0012               	return		;funcret
  8466  005BAE                     __end_of_fputs:
  8467                           	callstack 0
  8468                           
  8469 ;; *************** function _fputc *****************
  8470 ;; Defined at:
  8471 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  8472 ;; Parameters:    Size  Location     Type
  8473 ;;  c               2   21[COMRAM] int 
  8474 ;;  fp              2   23[COMRAM] PTR struct _IO_FILE
  8475 ;;		 -> NULL(0), 
  8476 ;; Auto vars:     Size  Location     Type
  8477 ;;		None
  8478 ;; Return value:  Size  Location     Type
  8479 ;;                  2   21[COMRAM] int 
  8480 ;; Registers used:
  8481 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8482 ;; Tracked objects:
  8483 ;;		On entry : 0/0
  8484 ;;		On exit  : 0/0
  8485 ;;		Unchanged: 0/0
  8486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8487 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8489 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8490 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8491 ;;Total ram usage:        9 bytes
  8492 ;; Hardware stack levels used: 1
  8493 ;; Hardware stack levels required when called: 10
  8494 ;; This function calls:
  8495 ;;		_putch
  8496 ;; This function is called by:
  8497 ;;		_pad
  8498 ;;		_vfpfcnvrt
  8499 ;;		_fputs
  8500 ;; This function uses a non-reentrant model
  8501 ;;
  8502                           
  8503                           	psect	text31
  8504  005580                     __ptext31:
  8505                           	callstack 0
  8506  005580                     _fputc:
  8507                           	callstack 12
  8508  005580  5018               	movf	fputc@fp^0,w,c
  8509  005582  1019               	iorwf	(fputc@fp+1)^0,w,c
  8510  005584  B4D8               	btfsc	status,2,c
  8511  005586  EFC7  F02A         	goto	u7571
  8512  00558A  EFC9  F02A         	goto	u7570
  8513  00558E                     u7571:
  8514  00558E  EFD2  F02A         	goto	l7618
  8515  005592                     u7570:
  8516  005592  5018               	movf	fputc@fp^0,w,c
  8517  005594  1019               	iorwf	(fputc@fp+1)^0,w,c
  8518  005596  A4D8               	btfss	status,2,c
  8519  005598  EFD0  F02A         	goto	u7581
  8520  00559C  EFD2  F02A         	goto	u7580
  8521  0055A0                     u7581:
  8522  0055A0  EFD7  F02A         	goto	l7620
  8523  0055A4                     u7580:
  8524  0055A4                     l7618:
  8525  0055A4  5016               	movf	fputc@c^0,w,c
  8526  0055A6  EC89  F031         	call	_putch
  8527  0055AA  EF0A  F02B         	goto	l2328
  8528  0055AE                     l7620:
  8529  0055AE  EE20 F004          	lfsr	2,4
  8530  0055B2  5018               	movf	fputc@fp^0,w,c
  8531  0055B4  26D9               	addwf	fsr2l,f,c
  8532  0055B6  5019               	movf	(fputc@fp+1)^0,w,c
  8533  0055B8  22DA               	addwfc	fsr2h,f,c
  8534  0055BA  50DE               	movf	postinc2,w,c
  8535  0055BC  10DE               	iorwf	postinc2,w,c
  8536  0055BE  B4D8               	btfsc	status,2,c
  8537  0055C0  EFE4  F02A         	goto	u7591
  8538  0055C4  EFE6  F02A         	goto	u7590
  8539  0055C8                     u7591:
  8540  0055C8  EF01  F02B         	goto	l7624
  8541  0055CC                     u7590:
  8542  0055CC  EE20 F004          	lfsr	2,4
  8543  0055D0  5018               	movf	fputc@fp^0,w,c
  8544  0055D2  26D9               	addwf	fsr2l,f,c
  8545  0055D4  5019               	movf	(fputc@fp+1)^0,w,c
  8546  0055D6  22DA               	addwfc	fsr2h,f,c
  8547  0055D8  EE10 F002          	lfsr	1,2
  8548  0055DC  5018               	movf	fputc@fp^0,w,c
  8549  0055DE  26E1               	addwf	fsr1l,f,c
  8550  0055E0  5019               	movf	(fputc@fp+1)^0,w,c
  8551  0055E2  22E2               	addwfc	fsr1h,f,c
  8552  0055E4  50DE               	movf	postinc2,w,c
  8553  0055E6  5CE6               	subwf	postinc1,w,c
  8554  0055E8  50E6               	movf	postinc1,w,c
  8555  0055EA  0A80               	xorlw	128
  8556  0055EC  6E1E               	movwf	(??_fputc+4)^0,c
  8557  0055EE  50DE               	movf	postinc2,w,c
  8558  0055F0  0A80               	xorlw	128
  8559  0055F2  581E               	subwfb	(??_fputc+4)^0,w,c
  8560  0055F4  B0D8               	btfsc	status,0,c
  8561  0055F6  EFFF  F02A         	goto	u7601
  8562  0055FA  EF01  F02B         	goto	u7600
  8563  0055FE                     u7601:
  8564  0055FE  EF0A  F02B         	goto	l2328
  8565  005602                     u7600:
  8566  005602                     l7624:
  8567  005602  EE20 F002          	lfsr	2,2
  8568  005606  5018               	movf	fputc@fp^0,w,c
  8569  005608  26D9               	addwf	fsr2l,f,c
  8570  00560A  5019               	movf	(fputc@fp+1)^0,w,c
  8571  00560C  22DA               	addwfc	fsr2h,f,c
  8572  00560E  2ADE               	incf	postinc2,f,c
  8573  005610  0E00               	movlw	0
  8574  005612  22DD               	addwfc	postdec2,f,c
  8575  005614                     l2328:
  8576  005614  0012               	return		;funcret
  8577  005616                     __end_of_fputc:
  8578                           	callstack 0
  8579                           
  8580 ;; *************** function _putch *****************
  8581 ;; Defined at:
  8582 ;;		line 230 in file "mcc_generated_files/uart1.c"
  8583 ;; Parameters:    Size  Location     Type
  8584 ;;  txData          1    wreg     unsigned char 
  8585 ;; Auto vars:     Size  Location     Type
  8586 ;;  txData          1   20[COMRAM] unsigned char 
  8587 ;; Return value:  Size  Location     Type
  8588 ;;                  1    wreg      void 
  8589 ;; Registers used:
  8590 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8591 ;; Tracked objects:
  8592 ;;		On entry : 0/0
  8593 ;;		On exit  : 0/0
  8594 ;;		Unchanged: 0/0
  8595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8597 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8599 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8600 ;;Total ram usage:        1 bytes
  8601 ;; Hardware stack levels used: 1
  8602 ;; Hardware stack levels required when called: 9
  8603 ;; This function calls:
  8604 ;;		_UART1_Write
  8605 ;; This function is called by:
  8606 ;;		_fputc
  8607 ;; This function uses a non-reentrant model
  8608 ;;
  8609                           
  8610                           	psect	text32
  8611  006312                     __ptext32:
  8612                           	callstack 0
  8613  006312                     _putch:
  8614                           	callstack 12
  8615                           
  8616                           ;incstack = 0
  8617                           ;putch@txData stored from wreg
  8618  006312  6E15               	movwf	putch@txData^0,c
  8619  006314                     
  8620                           ;mcc_generated_files/uart1.c: 230: void putch(char txData);mcc_generated_files/uart1.c: 
      +                          231: {;mcc_generated_files/uart1.c: 232:     UART1_Write(txData);
  8621  006314  5015               	movf	putch@txData^0,w,c
  8622  006316  EC75  F02C         	call	_UART1_Write
  8623  00631A  0012               	return		;funcret
  8624  00631C                     __end_of_putch:
  8625                           	callstack 0
  8626                           
  8627 ;; *************** function _UART1_Write *****************
  8628 ;; Defined at:
  8629 ;;		line 202 in file "mcc_generated_files/uart1.c"
  8630 ;; Parameters:    Size  Location     Type
  8631 ;;  txData          1    wreg     unsigned char 
  8632 ;; Auto vars:     Size  Location     Type
  8633 ;;  txData          1   19[COMRAM] unsigned char 
  8634 ;; Return value:  Size  Location     Type
  8635 ;;                  1    wreg      void 
  8636 ;; Registers used:
  8637 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8638 ;; Tracked objects:
  8639 ;;		On entry : 0/0
  8640 ;;		On exit  : 0/0
  8641 ;;		Unchanged: 0/0
  8642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8644 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8646 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8647 ;;Total ram usage:        1 bytes
  8648 ;; Hardware stack levels used: 1
  8649 ;; Hardware stack levels required when called: 8
  8650 ;; This function calls:
  8651 ;;		Nothing
  8652 ;; This function is called by:
  8653 ;;		_putch
  8654 ;; This function uses a non-reentrant model
  8655 ;;
  8656                           
  8657                           	psect	text33
  8658  0058EA                     __ptext33:
  8659                           	callstack 0
  8660  0058EA                     _UART1_Write:
  8661                           	callstack 12
  8662                           
  8663                           ;incstack = 0
  8664                           ;UART1_Write@txData stored from wreg
  8665  0058EA  6E14               	movwf	UART1_Write@txData^0,c
  8666  0058EC                     l7596:
  8667                           
  8668                           ;mcc_generated_files/uart1.c: 204:     while(0 == uart1TxBufferRemaining)
  8669  0058EC  504C               	movf	_uart1TxBufferRemaining^0,w,c	;volatile
  8670  0058EE  B4D8               	btfsc	status,2,c
  8671  0058F0  EF7C  F02C         	goto	u7541
  8672  0058F4  EF7E  F02C         	goto	u7540
  8673  0058F8                     u7541:
  8674  0058F8  EF76  F02C         	goto	l7596
  8675  0058FC                     u7540:
  8676  0058FC                     
  8677                           ;mcc_generated_files/uart1.c: 208:     if(0 == PIE3bits.U1TXIE)
  8678  0058FC  0139               	movlb	57	; () banked
  8679  0058FE  B993               	btfsc	147,4,b	;volatile
  8680  005900  EF84  F02C         	goto	u7551
  8681  005904  EF86  F02C         	goto	u7550
  8682  005908                     u7551:
  8683  005908  EF8B  F02C         	goto	l309
  8684  00590C                     u7550:
  8685  00590C                     
  8686                           ; BSR set to: 57
  8687                           ;mcc_generated_files/uart1.c: 209:     {;mcc_generated_files/uart1.c: 210:         U1TXB
      +                           = txData;
  8688  00590C  0060  F053  FDEA   	movff	UART1_Write@txData,15850	;volatile
  8689                           
  8690                           ;mcc_generated_files/uart1.c: 211:     }
  8691  005912  EFA1  F02C         	goto	l7610
  8692  005916                     l309:
  8693                           
  8694                           ; BSR set to: 57
  8695                           ;mcc_generated_files/uart1.c: 213:     {;mcc_generated_files/uart1.c: 214:         PIE3b
      +                          its.U1TXIE = 0;
  8696  005916  9993               	bcf	147,4,b	;volatile
  8697  005918                     
  8698                           ; BSR set to: 57
  8699                           ;mcc_generated_files/uart1.c: 215:         uart1TxBuffer[uart1TxHead++] = txData;
  8700  005918  0E10               	movlw	low _uart1TxBuffer
  8701  00591A  2447               	addwf	_uart1TxHead^0,w,c	;volatile
  8702  00591C  6ED9               	movwf	fsr2l,c
  8703  00591E  6ADA               	clrf	fsr2h,c
  8704  005920  0E01               	movlw	high _uart1TxBuffer
  8705  005922  22DA               	addwfc	fsr2h,f,c
  8706  005924  0060  F053  FFDF   	movff	UART1_Write@txData,indf2
  8707  00592A                     
  8708                           ; BSR set to: 57
  8709  00592A  2A47               	incf	_uart1TxHead^0,f,c	;volatile
  8710  00592C                     
  8711                           ; BSR set to: 57
  8712                           ;mcc_generated_files/uart1.c: 216:         if(sizeof(uart1TxBuffer) <= uart1TxHead)
  8713  00592C  0E07               	movlw	7
  8714  00592E  6447               	cpfsgt	_uart1TxHead^0,c	;volatile
  8715  005930  EF9C  F02C         	goto	u7561
  8716  005934  EF9E  F02C         	goto	u7560
  8717  005938                     u7561:
  8718  005938  EFA0  F02C         	goto	l7608
  8719  00593C                     u7560:
  8720  00593C                     
  8721                           ; BSR set to: 57
  8722                           ;mcc_generated_files/uart1.c: 217:         {;mcc_generated_files/uart1.c: 218:          
      +                             uart1TxHead = 0;
  8723  00593C  0E00               	movlw	0
  8724  00593E  6E47               	movwf	_uart1TxHead^0,c	;volatile
  8725  005940                     l7608:
  8726                           
  8727                           ; BSR set to: 57
  8728                           ;mcc_generated_files/uart1.c: 220:         uart1TxBufferRemaining--;
  8729  005940  064C               	decf	_uart1TxBufferRemaining^0,f,c	;volatile
  8730  005942                     l7610:
  8731                           
  8732                           ; BSR set to: 57
  8733                           ;mcc_generated_files/uart1.c: 222:     PIE3bits.U1TXIE = 1;
  8734  005942  8993               	bsf	147,4,b	;volatile
  8735  005944                     
  8736                           ; BSR set to: 57
  8737  005944  0012               	return		;funcret
  8738  005946                     __end_of_UART1_Write:
  8739                           	callstack 0
  8740                           
  8741 ;; *************** function _abs *****************
  8742 ;; Defined at:
  8743 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  8744 ;; Parameters:    Size  Location     Type
  8745 ;;  a               2   37[COMRAM] int 
  8746 ;; Auto vars:     Size  Location     Type
  8747 ;;		None
  8748 ;; Return value:  Size  Location     Type
  8749 ;;                  2   37[COMRAM] int 
  8750 ;; Registers used:
  8751 ;;		wreg, status,2, status,0
  8752 ;; Tracked objects:
  8753 ;;		On entry : 0/0
  8754 ;;		On exit  : 0/0
  8755 ;;		Unchanged: 0/0
  8756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8757 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8759 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8760 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8761 ;;Total ram usage:        4 bytes
  8762 ;; Hardware stack levels used: 1
  8763 ;; Hardware stack levels required when called: 8
  8764 ;; This function calls:
  8765 ;;		Nothing
  8766 ;; This function is called by:
  8767 ;;		_dtoa
  8768 ;; This function uses a non-reentrant model
  8769 ;;
  8770                           
  8771                           	psect	text34
  8772  005BF2                     __ptext34:
  8773                           	callstack 0
  8774  005BF2                     _abs:
  8775                           	callstack 16
  8776  005BF2  BE27               	btfsc	(abs@a+1)^0,7,c
  8777  005BF4  EF06  F02E         	goto	u8980
  8778  005BF8  5027               	movf	(abs@a+1)^0,w,c
  8779  005BFA  E106               	bnz	u8981
  8780  005BFC  0426               	decf	abs@a^0,w,c
  8781  005BFE  B0D8               	btfsc	status,0,c
  8782  005C00  EF04  F02E         	goto	u8981
  8783  005C04  EF06  F02E         	goto	u8980
  8784  005C08                     u8981:
  8785  005C08  EF14  F02E         	goto	l2294
  8786  005C0C                     u8980:
  8787  005C0C  C026  F028         	movff	abs@a,??_abs
  8788  005C10  C027  F029         	movff	abs@a+1,??_abs+1
  8789  005C14  1E28               	comf	??_abs^0,f,c
  8790  005C16  1E29               	comf	(??_abs+1)^0,f,c
  8791  005C18  4A28               	infsnz	??_abs^0,f,c
  8792  005C1A  2A29               	incf	(??_abs+1)^0,f,c
  8793  005C1C  C028  F026         	movff	??_abs,?_abs
  8794  005C20  C029  F027         	movff	??_abs+1,?_abs+1
  8795  005C24  EF18  F02E         	goto	l2297
  8796  005C28                     l2294:
  8797  005C28  C026  F026         	movff	abs@a,?_abs
  8798  005C2C  C027  F027         	movff	abs@a+1,?_abs+1
  8799  005C30                     l2297:
  8800  005C30  0012               	return		;funcret
  8801  005C32                     __end_of_abs:
  8802                           	callstack 0
  8803                           
  8804 ;; *************** function ___aomod *****************
  8805 ;; Defined at:
  8806 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  8807 ;; Parameters:    Size  Location     Type
  8808 ;;  dividend        8   19[COMRAM] long long 
  8809 ;;  divisor         8   27[COMRAM] long long 
  8810 ;; Auto vars:     Size  Location     Type
  8811 ;;  sign            1   36[COMRAM] unsigned char 
  8812 ;;  counter         1   35[COMRAM] unsigned char 
  8813 ;; Return value:  Size  Location     Type
  8814 ;;                  8   19[COMRAM] long long 
  8815 ;; Registers used:
  8816 ;;		wreg, status,2, status,0
  8817 ;; Tracked objects:
  8818 ;;		On entry : 0/0
  8819 ;;		On exit  : 0/0
  8820 ;;		Unchanged: 0/0
  8821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8822 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8823 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8825 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8826 ;;Total ram usage:       18 bytes
  8827 ;; Hardware stack levels used: 1
  8828 ;; Hardware stack levels required when called: 8
  8829 ;; This function calls:
  8830 ;;		Nothing
  8831 ;; This function is called by:
  8832 ;;		_dtoa
  8833 ;; This function uses a non-reentrant model
  8834 ;;
  8835                           
  8836                           	psect	text35
  8837  004230                     __ptext35:
  8838                           	callstack 0
  8839  004230                     ___aomod:
  8840                           	callstack 16
  8841  004230  0E00               	movlw	0
  8842  004232  6E25               	movwf	___aomod@sign^0,c
  8843  004234  BE1B               	btfsc	(___aomod@dividend+7)^0,7,c
  8844  004236  EF21  F021         	goto	u8110
  8845  00423A  EF1F  F021         	goto	u8111
  8846  00423E                     u8111:
  8847  00423E  EF33  F021         	goto	l7904
  8848  004242                     u8110:
  8849  004242  1E1B               	comf	(___aomod@dividend+7)^0,f,c
  8850  004244  1E1A               	comf	(___aomod@dividend+6)^0,f,c
  8851  004246  1E19               	comf	(___aomod@dividend+5)^0,f,c
  8852  004248  1E18               	comf	(___aomod@dividend+4)^0,f,c
  8853  00424A  1E17               	comf	(___aomod@dividend+3)^0,f,c
  8854  00424C  1E16               	comf	(___aomod@dividend+2)^0,f,c
  8855  00424E  1E15               	comf	(___aomod@dividend+1)^0,f,c
  8856  004250  6C14               	negf	___aomod@dividend^0,c
  8857  004252  0E00               	movlw	0
  8858  004254  2215               	addwfc	(___aomod@dividend+1)^0,f,c
  8859  004256  2216               	addwfc	(___aomod@dividend+2)^0,f,c
  8860  004258  2217               	addwfc	(___aomod@dividend+3)^0,f,c
  8861  00425A  2218               	addwfc	(___aomod@dividend+4)^0,f,c
  8862  00425C  2219               	addwfc	(___aomod@dividend+5)^0,f,c
  8863  00425E  221A               	addwfc	(___aomod@dividend+6)^0,f,c
  8864  004260  221B               	addwfc	(___aomod@dividend+7)^0,f,c
  8865  004262  0E01               	movlw	1
  8866  004264  6E25               	movwf	___aomod@sign^0,c
  8867  004266                     l7904:
  8868  004266  BE23               	btfsc	(___aomod@divisor+7)^0,7,c
  8869  004268  EF3A  F021         	goto	u8120
  8870  00426C  EF38  F021         	goto	u8121
  8871  004270                     u8121:
  8872  004270  EF4A  F021         	goto	l7908
  8873  004274                     u8120:
  8874  004274  1E23               	comf	(___aomod@divisor+7)^0,f,c
  8875  004276  1E22               	comf	(___aomod@divisor+6)^0,f,c
  8876  004278  1E21               	comf	(___aomod@divisor+5)^0,f,c
  8877  00427A  1E20               	comf	(___aomod@divisor+4)^0,f,c
  8878  00427C  1E1F               	comf	(___aomod@divisor+3)^0,f,c
  8879  00427E  1E1E               	comf	(___aomod@divisor+2)^0,f,c
  8880  004280  1E1D               	comf	(___aomod@divisor+1)^0,f,c
  8881  004282  6C1C               	negf	___aomod@divisor^0,c
  8882  004284  0E00               	movlw	0
  8883  004286  221D               	addwfc	(___aomod@divisor+1)^0,f,c
  8884  004288  221E               	addwfc	(___aomod@divisor+2)^0,f,c
  8885  00428A  221F               	addwfc	(___aomod@divisor+3)^0,f,c
  8886  00428C  2220               	addwfc	(___aomod@divisor+4)^0,f,c
  8887  00428E  2221               	addwfc	(___aomod@divisor+5)^0,f,c
  8888  004290  2222               	addwfc	(___aomod@divisor+6)^0,f,c
  8889  004292  2223               	addwfc	(___aomod@divisor+7)^0,f,c
  8890  004294                     l7908:
  8891  004294  501C               	movf	___aomod@divisor^0,w,c
  8892  004296  101D               	iorwf	(___aomod@divisor+1)^0,w,c
  8893  004298  101E               	iorwf	(___aomod@divisor+2)^0,w,c
  8894  00429A  101F               	iorwf	(___aomod@divisor+3)^0,w,c
  8895  00429C  1020               	iorwf	(___aomod@divisor+4)^0,w,c
  8896  00429E  1021               	iorwf	(___aomod@divisor+5)^0,w,c
  8897  0042A0  1022               	iorwf	(___aomod@divisor+6)^0,w,c
  8898  0042A2  1023               	iorwf	(___aomod@divisor+7)^0,w,c
  8899  0042A4  B4D8               	btfsc	status,2,c
  8900  0042A6  EF57  F021         	goto	u8131
  8901  0042AA  EF59  F021         	goto	u8130
  8902  0042AE                     u8131:
  8903  0042AE  EFA1  F021         	goto	l7924
  8904  0042B2                     u8130:
  8905  0042B2  0E01               	movlw	1
  8906  0042B4  6E24               	movwf	___aomod@counter^0,c
  8907  0042B6  EF67  F021         	goto	l7914
  8908  0042BA                     l7912:
  8909  0042BA  90D8               	bcf	status,0,c
  8910  0042BC  361C               	rlcf	___aomod@divisor^0,f,c
  8911  0042BE  361D               	rlcf	(___aomod@divisor+1)^0,f,c
  8912  0042C0  361E               	rlcf	(___aomod@divisor+2)^0,f,c
  8913  0042C2  361F               	rlcf	(___aomod@divisor+3)^0,f,c
  8914  0042C4  3620               	rlcf	(___aomod@divisor+4)^0,f,c
  8915  0042C6  3621               	rlcf	(___aomod@divisor+5)^0,f,c
  8916  0042C8  3622               	rlcf	(___aomod@divisor+6)^0,f,c
  8917  0042CA  3623               	rlcf	(___aomod@divisor+7)^0,f,c
  8918  0042CC  2A24               	incf	___aomod@counter^0,f,c
  8919  0042CE                     l7914:
  8920  0042CE  AE23               	btfss	(___aomod@divisor+7)^0,7,c
  8921  0042D0  EF6C  F021         	goto	u8141
  8922  0042D4  EF6E  F021         	goto	u8140
  8923  0042D8                     u8141:
  8924  0042D8  EF5D  F021         	goto	l7912
  8925  0042DC                     u8140:
  8926  0042DC                     l7916:
  8927  0042DC  501C               	movf	___aomod@divisor^0,w,c
  8928  0042DE  5C14               	subwf	___aomod@dividend^0,w,c
  8929  0042E0  501D               	movf	(___aomod@divisor+1)^0,w,c
  8930  0042E2  5815               	subwfb	(___aomod@dividend+1)^0,w,c
  8931  0042E4  501E               	movf	(___aomod@divisor+2)^0,w,c
  8932  0042E6  5816               	subwfb	(___aomod@dividend+2)^0,w,c
  8933  0042E8  501F               	movf	(___aomod@divisor+3)^0,w,c
  8934  0042EA  5817               	subwfb	(___aomod@dividend+3)^0,w,c
  8935  0042EC  5020               	movf	(___aomod@divisor+4)^0,w,c
  8936  0042EE  5818               	subwfb	(___aomod@dividend+4)^0,w,c
  8937  0042F0  5021               	movf	(___aomod@divisor+5)^0,w,c
  8938  0042F2  5819               	subwfb	(___aomod@dividend+5)^0,w,c
  8939  0042F4  5022               	movf	(___aomod@divisor+6)^0,w,c
  8940  0042F6  581A               	subwfb	(___aomod@dividend+6)^0,w,c
  8941  0042F8  5023               	movf	(___aomod@divisor+7)^0,w,c
  8942  0042FA  581B               	subwfb	(___aomod@dividend+7)^0,w,c
  8943  0042FC  A0D8               	btfss	status,0,c
  8944  0042FE  EF83  F021         	goto	u8151
  8945  004302  EF85  F021         	goto	u8150
  8946  004306                     u8151:
  8947  004306  EF95  F021         	goto	l7920
  8948  00430A                     u8150:
  8949  00430A  501C               	movf	___aomod@divisor^0,w,c
  8950  00430C  5E14               	subwf	___aomod@dividend^0,f,c
  8951  00430E  501D               	movf	(___aomod@divisor+1)^0,w,c
  8952  004310  5A15               	subwfb	(___aomod@dividend+1)^0,f,c
  8953  004312  501E               	movf	(___aomod@divisor+2)^0,w,c
  8954  004314  5A16               	subwfb	(___aomod@dividend+2)^0,f,c
  8955  004316  501F               	movf	(___aomod@divisor+3)^0,w,c
  8956  004318  5A17               	subwfb	(___aomod@dividend+3)^0,f,c
  8957  00431A  5020               	movf	(___aomod@divisor+4)^0,w,c
  8958  00431C  5A18               	subwfb	(___aomod@dividend+4)^0,f,c
  8959  00431E  5021               	movf	(___aomod@divisor+5)^0,w,c
  8960  004320  5A19               	subwfb	(___aomod@dividend+5)^0,f,c
  8961  004322  5022               	movf	(___aomod@divisor+6)^0,w,c
  8962  004324  5A1A               	subwfb	(___aomod@dividend+6)^0,f,c
  8963  004326  5023               	movf	(___aomod@divisor+7)^0,w,c
  8964  004328  5A1B               	subwfb	(___aomod@dividend+7)^0,f,c
  8965  00432A                     l7920:
  8966  00432A  90D8               	bcf	status,0,c
  8967  00432C  3223               	rrcf	(___aomod@divisor+7)^0,f,c
  8968  00432E  3222               	rrcf	(___aomod@divisor+6)^0,f,c
  8969  004330  3221               	rrcf	(___aomod@divisor+5)^0,f,c
  8970  004332  3220               	rrcf	(___aomod@divisor+4)^0,f,c
  8971  004334  321F               	rrcf	(___aomod@divisor+3)^0,f,c
  8972  004336  321E               	rrcf	(___aomod@divisor+2)^0,f,c
  8973  004338  321D               	rrcf	(___aomod@divisor+1)^0,f,c
  8974  00433A  321C               	rrcf	___aomod@divisor^0,f,c
  8975  00433C  2E24               	decfsz	___aomod@counter^0,f,c
  8976  00433E  EF6E  F021         	goto	l7916
  8977  004342                     l7924:
  8978  004342  5025               	movf	___aomod@sign^0,w,c
  8979  004344  B4D8               	btfsc	status,2,c
  8980  004346  EFA7  F021         	goto	u8161
  8981  00434A  EFA9  F021         	goto	u8160
  8982  00434E                     u8161:
  8983  00434E  EFB9  F021         	goto	l7928
  8984  004352                     u8160:
  8985  004352  1E1B               	comf	(___aomod@dividend+7)^0,f,c
  8986  004354  1E1A               	comf	(___aomod@dividend+6)^0,f,c
  8987  004356  1E19               	comf	(___aomod@dividend+5)^0,f,c
  8988  004358  1E18               	comf	(___aomod@dividend+4)^0,f,c
  8989  00435A  1E17               	comf	(___aomod@dividend+3)^0,f,c
  8990  00435C  1E16               	comf	(___aomod@dividend+2)^0,f,c
  8991  00435E  1E15               	comf	(___aomod@dividend+1)^0,f,c
  8992  004360  6C14               	negf	___aomod@dividend^0,c
  8993  004362  0E00               	movlw	0
  8994  004364  2215               	addwfc	(___aomod@dividend+1)^0,f,c
  8995  004366  2216               	addwfc	(___aomod@dividend+2)^0,f,c
  8996  004368  2217               	addwfc	(___aomod@dividend+3)^0,f,c
  8997  00436A  2218               	addwfc	(___aomod@dividend+4)^0,f,c
  8998  00436C  2219               	addwfc	(___aomod@dividend+5)^0,f,c
  8999  00436E  221A               	addwfc	(___aomod@dividend+6)^0,f,c
  9000  004370  221B               	addwfc	(___aomod@dividend+7)^0,f,c
  9001  004372                     l7928:
  9002  004372  C014  F014         	movff	___aomod@dividend,?___aomod
  9003  004376  C015  F015         	movff	___aomod@dividend+1,?___aomod+1
  9004  00437A  C016  F016         	movff	___aomod@dividend+2,?___aomod+2
  9005  00437E  C017  F017         	movff	___aomod@dividend+3,?___aomod+3
  9006  004382  C018  F018         	movff	___aomod@dividend+4,?___aomod+4
  9007  004386  C019  F019         	movff	___aomod@dividend+5,?___aomod+5
  9008  00438A  C01A  F01A         	movff	___aomod@dividend+6,?___aomod+6
  9009  00438E  C01B  F01B         	movff	___aomod@dividend+7,?___aomod+7
  9010  004392  0012               	return		;funcret
  9011  004394                     __end_of___aomod:
  9012                           	callstack 0
  9013                           
  9014 ;; *************** function ___aodiv *****************
  9015 ;; Defined at:
  9016 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  9017 ;; Parameters:    Size  Location     Type
  9018 ;;  dividend        8   19[COMRAM] long long 
  9019 ;;  divisor         8   27[COMRAM] long long 
  9020 ;; Auto vars:     Size  Location     Type
  9021 ;;  quotient        8   37[COMRAM] long long 
  9022 ;;  sign            1   36[COMRAM] unsigned char 
  9023 ;;  counter         1   35[COMRAM] unsigned char 
  9024 ;; Return value:  Size  Location     Type
  9025 ;;                  8   19[COMRAM] long long 
  9026 ;; Registers used:
  9027 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9028 ;; Tracked objects:
  9029 ;;		On entry : 0/0
  9030 ;;		On exit  : 0/0
  9031 ;;		Unchanged: 0/0
  9032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9033 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9034 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9036 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9037 ;;Total ram usage:       26 bytes
  9038 ;; Hardware stack levels used: 1
  9039 ;; Hardware stack levels required when called: 8
  9040 ;; This function calls:
  9041 ;;		Nothing
  9042 ;; This function is called by:
  9043 ;;		_dtoa
  9044 ;; This function uses a non-reentrant model
  9045 ;;
  9046                           
  9047                           	psect	text36
  9048  0040A8                     __ptext36:
  9049                           	callstack 0
  9050  0040A8                     ___aodiv:
  9051                           	callstack 16
  9052  0040A8  0E00               	movlw	0
  9053  0040AA  6E25               	movwf	___aodiv@sign^0,c
  9054  0040AC  BE23               	btfsc	(___aodiv@divisor+7)^0,7,c
  9055  0040AE  EF5D  F020         	goto	u8040
  9056  0040B2  EF5B  F020         	goto	u8041
  9057  0040B6                     u8041:
  9058  0040B6  EF6F  F020         	goto	l7860
  9059  0040BA                     u8040:
  9060  0040BA  1E23               	comf	(___aodiv@divisor+7)^0,f,c
  9061  0040BC  1E22               	comf	(___aodiv@divisor+6)^0,f,c
  9062  0040BE  1E21               	comf	(___aodiv@divisor+5)^0,f,c
  9063  0040C0  1E20               	comf	(___aodiv@divisor+4)^0,f,c
  9064  0040C2  1E1F               	comf	(___aodiv@divisor+3)^0,f,c
  9065  0040C4  1E1E               	comf	(___aodiv@divisor+2)^0,f,c
  9066  0040C6  1E1D               	comf	(___aodiv@divisor+1)^0,f,c
  9067  0040C8  6C1C               	negf	___aodiv@divisor^0,c
  9068  0040CA  0E00               	movlw	0
  9069  0040CC  221D               	addwfc	(___aodiv@divisor+1)^0,f,c
  9070  0040CE  221E               	addwfc	(___aodiv@divisor+2)^0,f,c
  9071  0040D0  221F               	addwfc	(___aodiv@divisor+3)^0,f,c
  9072  0040D2  2220               	addwfc	(___aodiv@divisor+4)^0,f,c
  9073  0040D4  2221               	addwfc	(___aodiv@divisor+5)^0,f,c
  9074  0040D6  2222               	addwfc	(___aodiv@divisor+6)^0,f,c
  9075  0040D8  2223               	addwfc	(___aodiv@divisor+7)^0,f,c
  9076  0040DA  0E01               	movlw	1
  9077  0040DC  6E25               	movwf	___aodiv@sign^0,c
  9078  0040DE                     l7860:
  9079  0040DE  BE1B               	btfsc	(___aodiv@dividend+7)^0,7,c
  9080  0040E0  EF76  F020         	goto	u8050
  9081  0040E4  EF74  F020         	goto	u8051
  9082  0040E8                     u8051:
  9083  0040E8  EF88  F020         	goto	l7866
  9084  0040EC                     u8050:
  9085  0040EC  1E1B               	comf	(___aodiv@dividend+7)^0,f,c
  9086  0040EE  1E1A               	comf	(___aodiv@dividend+6)^0,f,c
  9087  0040F0  1E19               	comf	(___aodiv@dividend+5)^0,f,c
  9088  0040F2  1E18               	comf	(___aodiv@dividend+4)^0,f,c
  9089  0040F4  1E17               	comf	(___aodiv@dividend+3)^0,f,c
  9090  0040F6  1E16               	comf	(___aodiv@dividend+2)^0,f,c
  9091  0040F8  1E15               	comf	(___aodiv@dividend+1)^0,f,c
  9092  0040FA  6C14               	negf	___aodiv@dividend^0,c
  9093  0040FC  0E00               	movlw	0
  9094  0040FE  2215               	addwfc	(___aodiv@dividend+1)^0,f,c
  9095  004100  2216               	addwfc	(___aodiv@dividend+2)^0,f,c
  9096  004102  2217               	addwfc	(___aodiv@dividend+3)^0,f,c
  9097  004104  2218               	addwfc	(___aodiv@dividend+4)^0,f,c
  9098  004106  2219               	addwfc	(___aodiv@dividend+5)^0,f,c
  9099  004108  221A               	addwfc	(___aodiv@dividend+6)^0,f,c
  9100  00410A  221B               	addwfc	(___aodiv@dividend+7)^0,f,c
  9101  00410C  0E01               	movlw	1
  9102  00410E  1A25               	xorwf	___aodiv@sign^0,f,c
  9103  004110                     l7866:
  9104  004110  EE20  F026         	lfsr	2,___aodiv@quotient
  9105  004114  0E07               	movlw	7
  9106  004116                     u8061:
  9107  004116  6ADE               	clrf	postinc2,c
  9108  004118  06E8               	decf	wreg,f,c
  9109  00411A  E2FD               	bc	u8061
  9110  00411C  501C               	movf	___aodiv@divisor^0,w,c
  9111  00411E  101D               	iorwf	(___aodiv@divisor+1)^0,w,c
  9112  004120  101E               	iorwf	(___aodiv@divisor+2)^0,w,c
  9113  004122  101F               	iorwf	(___aodiv@divisor+3)^0,w,c
  9114  004124  1020               	iorwf	(___aodiv@divisor+4)^0,w,c
  9115  004126  1021               	iorwf	(___aodiv@divisor+5)^0,w,c
  9116  004128  1022               	iorwf	(___aodiv@divisor+6)^0,w,c
  9117  00412A  1023               	iorwf	(___aodiv@divisor+7)^0,w,c
  9118  00412C  B4D8               	btfsc	status,2,c
  9119  00412E  EF9B  F020         	goto	u8071
  9120  004132  EF9D  F020         	goto	u8070
  9121  004136                     u8071:
  9122  004136  EFEF  F020         	goto	l7888
  9123  00413A                     u8070:
  9124  00413A  0E01               	movlw	1
  9125  00413C  6E24               	movwf	___aodiv@counter^0,c
  9126  00413E  EFAB  F020         	goto	l7874
  9127  004142                     l7872:
  9128  004142  90D8               	bcf	status,0,c
  9129  004144  361C               	rlcf	___aodiv@divisor^0,f,c
  9130  004146  361D               	rlcf	(___aodiv@divisor+1)^0,f,c
  9131  004148  361E               	rlcf	(___aodiv@divisor+2)^0,f,c
  9132  00414A  361F               	rlcf	(___aodiv@divisor+3)^0,f,c
  9133  00414C  3620               	rlcf	(___aodiv@divisor+4)^0,f,c
  9134  00414E  3621               	rlcf	(___aodiv@divisor+5)^0,f,c
  9135  004150  3622               	rlcf	(___aodiv@divisor+6)^0,f,c
  9136  004152  3623               	rlcf	(___aodiv@divisor+7)^0,f,c
  9137  004154  2A24               	incf	___aodiv@counter^0,f,c
  9138  004156                     l7874:
  9139  004156  AE23               	btfss	(___aodiv@divisor+7)^0,7,c
  9140  004158  EFB0  F020         	goto	u8081
  9141  00415C  EFB2  F020         	goto	u8080
  9142  004160                     u8081:
  9143  004160  EFA1  F020         	goto	l7872
  9144  004164                     u8080:
  9145  004164                     l7876:
  9146  004164  90D8               	bcf	status,0,c
  9147  004166  3626               	rlcf	___aodiv@quotient^0,f,c
  9148  004168  3627               	rlcf	(___aodiv@quotient+1)^0,f,c
  9149  00416A  3628               	rlcf	(___aodiv@quotient+2)^0,f,c
  9150  00416C  3629               	rlcf	(___aodiv@quotient+3)^0,f,c
  9151  00416E  362A               	rlcf	(___aodiv@quotient+4)^0,f,c
  9152  004170  362B               	rlcf	(___aodiv@quotient+5)^0,f,c
  9153  004172  362C               	rlcf	(___aodiv@quotient+6)^0,f,c
  9154  004174  362D               	rlcf	(___aodiv@quotient+7)^0,f,c
  9155  004176  501C               	movf	___aodiv@divisor^0,w,c
  9156  004178  5C14               	subwf	___aodiv@dividend^0,w,c
  9157  00417A  501D               	movf	(___aodiv@divisor+1)^0,w,c
  9158  00417C  5815               	subwfb	(___aodiv@dividend+1)^0,w,c
  9159  00417E  501E               	movf	(___aodiv@divisor+2)^0,w,c
  9160  004180  5816               	subwfb	(___aodiv@dividend+2)^0,w,c
  9161  004182  501F               	movf	(___aodiv@divisor+3)^0,w,c
  9162  004184  5817               	subwfb	(___aodiv@dividend+3)^0,w,c
  9163  004186  5020               	movf	(___aodiv@divisor+4)^0,w,c
  9164  004188  5818               	subwfb	(___aodiv@dividend+4)^0,w,c
  9165  00418A  5021               	movf	(___aodiv@divisor+5)^0,w,c
  9166  00418C  5819               	subwfb	(___aodiv@dividend+5)^0,w,c
  9167  00418E  5022               	movf	(___aodiv@divisor+6)^0,w,c
  9168  004190  581A               	subwfb	(___aodiv@dividend+6)^0,w,c
  9169  004192  5023               	movf	(___aodiv@divisor+7)^0,w,c
  9170  004194  581B               	subwfb	(___aodiv@dividend+7)^0,w,c
  9171  004196  A0D8               	btfss	status,0,c
  9172  004198  EFD0  F020         	goto	u8091
  9173  00419C  EFD2  F020         	goto	u8090
  9174  0041A0                     u8091:
  9175  0041A0  EFE3  F020         	goto	l7884
  9176  0041A4                     u8090:
  9177  0041A4  501C               	movf	___aodiv@divisor^0,w,c
  9178  0041A6  5E14               	subwf	___aodiv@dividend^0,f,c
  9179  0041A8  501D               	movf	(___aodiv@divisor+1)^0,w,c
  9180  0041AA  5A15               	subwfb	(___aodiv@dividend+1)^0,f,c
  9181  0041AC  501E               	movf	(___aodiv@divisor+2)^0,w,c
  9182  0041AE  5A16               	subwfb	(___aodiv@dividend+2)^0,f,c
  9183  0041B0  501F               	movf	(___aodiv@divisor+3)^0,w,c
  9184  0041B2  5A17               	subwfb	(___aodiv@dividend+3)^0,f,c
  9185  0041B4  5020               	movf	(___aodiv@divisor+4)^0,w,c
  9186  0041B6  5A18               	subwfb	(___aodiv@dividend+4)^0,f,c
  9187  0041B8  5021               	movf	(___aodiv@divisor+5)^0,w,c
  9188  0041BA  5A19               	subwfb	(___aodiv@dividend+5)^0,f,c
  9189  0041BC  5022               	movf	(___aodiv@divisor+6)^0,w,c
  9190  0041BE  5A1A               	subwfb	(___aodiv@dividend+6)^0,f,c
  9191  0041C0  5023               	movf	(___aodiv@divisor+7)^0,w,c
  9192  0041C2  5A1B               	subwfb	(___aodiv@dividend+7)^0,f,c
  9193  0041C4  8026               	bsf	___aodiv@quotient^0,0,c
  9194  0041C6                     l7884:
  9195  0041C6  90D8               	bcf	status,0,c
  9196  0041C8  3223               	rrcf	(___aodiv@divisor+7)^0,f,c
  9197  0041CA  3222               	rrcf	(___aodiv@divisor+6)^0,f,c
  9198  0041CC  3221               	rrcf	(___aodiv@divisor+5)^0,f,c
  9199  0041CE  3220               	rrcf	(___aodiv@divisor+4)^0,f,c
  9200  0041D0  321F               	rrcf	(___aodiv@divisor+3)^0,f,c
  9201  0041D2  321E               	rrcf	(___aodiv@divisor+2)^0,f,c
  9202  0041D4  321D               	rrcf	(___aodiv@divisor+1)^0,f,c
  9203  0041D6  321C               	rrcf	___aodiv@divisor^0,f,c
  9204  0041D8  2E24               	decfsz	___aodiv@counter^0,f,c
  9205  0041DA  EFB2  F020         	goto	l7876
  9206  0041DE                     l7888:
  9207  0041DE  5025               	movf	___aodiv@sign^0,w,c
  9208  0041E0  B4D8               	btfsc	status,2,c
  9209  0041E2  EFF5  F020         	goto	u8101
  9210  0041E6  EFF7  F020         	goto	u8100
  9211  0041EA                     u8101:
  9212  0041EA  EF07  F021         	goto	l7892
  9213  0041EE                     u8100:
  9214  0041EE  1E2D               	comf	(___aodiv@quotient+7)^0,f,c
  9215  0041F0  1E2C               	comf	(___aodiv@quotient+6)^0,f,c
  9216  0041F2  1E2B               	comf	(___aodiv@quotient+5)^0,f,c
  9217  0041F4  1E2A               	comf	(___aodiv@quotient+4)^0,f,c
  9218  0041F6  1E29               	comf	(___aodiv@quotient+3)^0,f,c
  9219  0041F8  1E28               	comf	(___aodiv@quotient+2)^0,f,c
  9220  0041FA  1E27               	comf	(___aodiv@quotient+1)^0,f,c
  9221  0041FC  6C26               	negf	___aodiv@quotient^0,c
  9222  0041FE  0E00               	movlw	0
  9223  004200  2227               	addwfc	(___aodiv@quotient+1)^0,f,c
  9224  004202  2228               	addwfc	(___aodiv@quotient+2)^0,f,c
  9225  004204  2229               	addwfc	(___aodiv@quotient+3)^0,f,c
  9226  004206  222A               	addwfc	(___aodiv@quotient+4)^0,f,c
  9227  004208  222B               	addwfc	(___aodiv@quotient+5)^0,f,c
  9228  00420A  222C               	addwfc	(___aodiv@quotient+6)^0,f,c
  9229  00420C  222D               	addwfc	(___aodiv@quotient+7)^0,f,c
  9230  00420E                     l7892:
  9231  00420E  C026  F014         	movff	___aodiv@quotient,?___aodiv
  9232  004212  C027  F015         	movff	___aodiv@quotient+1,?___aodiv+1
  9233  004216  C028  F016         	movff	___aodiv@quotient+2,?___aodiv+2
  9234  00421A  C029  F017         	movff	___aodiv@quotient+3,?___aodiv+3
  9235  00421E  C02A  F018         	movff	___aodiv@quotient+4,?___aodiv+4
  9236  004222  C02B  F019         	movff	___aodiv@quotient+5,?___aodiv+5
  9237  004226  C02C  F01A         	movff	___aodiv@quotient+6,?___aodiv+6
  9238  00422A  C02D  F01B         	movff	___aodiv@quotient+7,?___aodiv+7
  9239  00422E  0012               	return		;funcret
  9240  004230                     __end_of___aodiv:
  9241                           	callstack 0
  9242                           
  9243 ;; *************** function _ADCC_GetSingleConversion *****************
  9244 ;; Defined at:
  9245 ;;		line 137 in file "mcc_generated_files/adcc.c"
  9246 ;; Parameters:    Size  Location     Type
  9247 ;;  channel         1    wreg     enum E16058
  9248 ;; Auto vars:     Size  Location     Type
  9249 ;;  channel         1   23[COMRAM] enum E16058
  9250 ;; Return value:  Size  Location     Type
  9251 ;;                  2   19[COMRAM] unsigned short 
  9252 ;; Registers used:
  9253 ;;		wreg, status,2, status,0
  9254 ;; Tracked objects:
  9255 ;;		On entry : 0/0
  9256 ;;		On exit  : 0/0
  9257 ;;		Unchanged: 0/0
  9258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9259 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9260 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9261 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9262 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9263 ;;Total ram usage:        5 bytes
  9264 ;; Hardware stack levels used: 1
  9265 ;; Hardware stack levels required when called: 8
  9266 ;; This function calls:
  9267 ;;		Nothing
  9268 ;; This function is called by:
  9269 ;;		_getBatteryVoltage
  9270 ;; This function uses a non-reentrant model
  9271 ;;
  9272                           
  9273                           	psect	text37
  9274  005FA4                     __ptext37:
  9275                           	callstack 0
  9276  005FA4                     _ADCC_GetSingleConversion:
  9277                           	callstack 20
  9278                           
  9279                           ;incstack = 0
  9280                           ;ADCC_GetSingleConversion@channel stored from wreg
  9281  005FA4  6E18               	movwf	ADCC_GetSingleConversion@channel^0,c
  9282  005FA6                     
  9283                           ;mcc_generated_files/adcc.c: 137: adc_result_t ADCC_GetSingleConversion(adcc_channel_t c
      +                          hannel);mcc_generated_files/adcc.c: 138: {;mcc_generated_files/adcc.c: 140:     ADPCH = 
      +                          channel;
  9284  005FA6  0060  F063  FEF1   	movff	ADCC_GetSingleConversion@channel,16113	;volatile
  9285  005FAC                     
  9286                           ;mcc_generated_files/adcc.c: 143:     ADCON0bits.ADON = 1;
  9287  005FAC  013E               	movlb	62	; () banked
  9288  005FAE  8FF8               	bsf	248,7,b	;volatile
  9289  005FB0                     
  9290                           ; BSR set to: 62
  9291                           ;mcc_generated_files/adcc.c: 146:     ADCON0bits.ADCONT = 0;
  9292  005FB0  9DF8               	bcf	248,6,b	;volatile
  9293  005FB2                     
  9294                           ; BSR set to: 62
  9295                           ;mcc_generated_files/adcc.c: 149:     ADCON0bits.ADGO = 1;
  9296  005FB2  81F8               	bsf	248,0,b	;volatile
  9297  005FB4                     l1054:
  9298                           
  9299                           ; BSR set to: 62
  9300                           ;mcc_generated_files/adcc.c: 153:     while (ADCON0bits.ADGO)
  9301  005FB4  B1F8               	btfsc	248,0,b	;volatile
  9302  005FB6  EFDF  F02F         	goto	u6441
  9303  005FBA  EFE1  F02F         	goto	u6440
  9304  005FBE                     u6441:
  9305  005FBE  EFDA  F02F         	goto	l1054
  9306  005FC2                     u6440:
  9307  005FC2                     
  9308                           ; BSR set to: 62
  9309                           ;mcc_generated_files/adcc.c: 159:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  9310  005FC2  51F0               	movf	240,w,b	;volatile
  9311  005FC4  6E17               	movwf	(??_ADCC_GetSingleConversion+1)^0,c
  9312  005FC6  6A16               	clrf	??_ADCC_GetSingleConversion^0,c
  9313  005FC8  51EF               	movf	239,w,b	;volatile
  9314  005FCA  2416               	addwf	??_ADCC_GetSingleConversion^0,w,c
  9315  005FCC  6E14               	movwf	?_ADCC_GetSingleConversion^0,c
  9316  005FCE  0E00               	movlw	0
  9317  005FD0  2017               	addwfc	(??_ADCC_GetSingleConversion+1)^0,w,c
  9318  005FD2  6E15               	movwf	(?_ADCC_GetSingleConversion+1)^0,c
  9319  005FD4                     
  9320                           ; BSR set to: 62
  9321  005FD4  0012               	return		;funcret
  9322  005FD6                     __end_of_ADCC_GetSingleConversion:
  9323                           	callstack 0
  9324                           
  9325 ;; *************** function _calcSteering *****************
  9326 ;; Defined at:
  9327 ;;		line 229 in file "main.c"
  9328 ;; Parameters:    Size  Location     Type
  9329 ;;		None
  9330 ;; Auto vars:     Size  Location     Type
  9331 ;;  delta           2   46[BANK0 ] short 
  9332 ;; Return value:  Size  Location     Type
  9333 ;;                  1    wreg      void 
  9334 ;; Registers used:
  9335 ;;		wreg, status,2, status,0, cstack
  9336 ;; Tracked objects:
  9337 ;;		On entry : 0/0
  9338 ;;		On exit  : 0/0
  9339 ;;		Unchanged: 0/0
  9340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9342 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9343 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9344 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9345 ;;Total ram usage:        4 bytes
  9346 ;; Hardware stack levels used: 1
  9347 ;; Hardware stack levels required when called: 10
  9348 ;; This function calls:
  9349 ;;		___fldiv
  9350 ;;		___fltol
  9351 ;;		___xxtofl
  9352 ;;		_setSteering
  9353 ;; This function is called by:
  9354 ;;		_loop
  9355 ;; This function uses a non-reentrant model
  9356 ;;
  9357                           
  9358                           	psect	text38
  9359  003D12                     __ptext38:
  9360                           	callstack 0
  9361  003D12                     _calcSteering:
  9362                           	callstack 19
  9363  003D12                     
  9364                           ;main.c: 230:     int16_t delta = (int16_t) (distLeft - distRight) - (int16_t) ((0) * 1.
      +                          4142135);
  9365  003D12  0100               	movlb	0	; () banked
  9366  003D14  51F5               	movf	_distRight& (0+255),w,b	;volatile
  9367  003D16  5DF7               	subwf	_distLeft& (0+255),w,b	;volatile
  9368  003D18  6F8E               	movwf	calcSteering@delta& (0+255),b
  9369  003D1A  51F6               	movf	(_distRight+1)& (0+255),w,b	;volatile
  9370  003D1C  59F8               	subwfb	(_distLeft+1)& (0+255),w,b	;volatile
  9371  003D1E  6F8F               	movwf	(calcSteering@delta+1)& (0+255),b
  9372  003D20                     
  9373                           ; BSR set to: 0
  9374                           ;main.c: 231:     delta /= (1.25);
  9375  003D20  0E00               	movlw	0
  9376  003D22  6E2E               	movwf	___fldiv@a^0,c
  9377  003D24  0E00               	movlw	0
  9378  003D26  6E2F               	movwf	(___fldiv@a+1)^0,c
  9379  003D28  0EA0               	movlw	160
  9380  003D2A  6E30               	movwf	(___fldiv@a+2)^0,c
  9381  003D2C  0E3F               	movlw	63
  9382  003D2E  6E31               	movwf	(___fldiv@a+3)^0,c
  9383  003D30  C08E  F01C         	movff	calcSteering@delta,___xxtofl@val
  9384  003D34  C08F  F01D         	movff	calcSteering@delta+1,___xxtofl@val+1
  9385  003D38  0E00               	movlw	0
  9386  003D3A  BE1D               	btfsc	(___xxtofl@val+1)^0,7,c
  9387  003D3C  0EFF               	movlw	-1
  9388  003D3E  6E1E               	movwf	(___xxtofl@val+2)^0,c
  9389  003D40  6E1F               	movwf	(___xxtofl@val+3)^0,c
  9390  003D42  0E01               	movlw	1
  9391  003D44  EC7A  F01F         	call	___xxtofl
  9392  003D48  C01C  F02A         	movff	?___xxtofl,___fldiv@b
  9393  003D4C  C01D  F02B         	movff	?___xxtofl+1,___fldiv@b+1
  9394  003D50  C01E  F02C         	movff	?___xxtofl+2,___fldiv@b+2
  9395  003D54  C01F  F02D         	movff	?___xxtofl+3,___fldiv@b+3
  9396  003D58  EC2E  F016         	call	___fldiv	;wreg free
  9397  003D5C  C02A  F079         	movff	?___fldiv,___fltol@f1
  9398  003D60  C02B  F07A         	movff	?___fldiv+1,___fltol@f1+1
  9399  003D64  C02C  F07B         	movff	?___fldiv+2,___fltol@f1+2
  9400  003D68  C02D  F07C         	movff	?___fldiv+3,___fltol@f1+3
  9401  003D6C  EC32  F024         	call	___fltol	;wreg free
  9402  003D70  C079  F08E         	movff	?___fltol,calcSteering@delta
  9403  003D74  C07A  F08F         	movff	?___fltol+1,calcSteering@delta+1
  9404                           
  9405                           ;main.c: 234:     switch (driveMode) {
  9406  003D78  EFE6  F01E         	goto	l9280
  9407  003D7C                     l1320:
  9408  003D7C                     l9270:
  9409                           
  9410                           ; BSR set to: 0
  9411                           ;main.c: 239:             if (delta > (40)) {
  9412  003D7C  BF8F               	btfsc	(calcSteering@delta+1)& (0+255),7,b
  9413  003D7E  EFCA  F01E         	goto	u10551
  9414  003D82  518F               	movf	(calcSteering@delta+1)& (0+255),w,b
  9415  003D84  E109               	bnz	u10550
  9416  003D86  0E29               	movlw	41
  9417  003D88  5D8E               	subwf	calcSteering@delta& (0+255),w,b
  9418  003D8A  A0D8               	btfss	status,0,c
  9419  003D8C  EFCA  F01E         	goto	u10551
  9420  003D90  EFCC  F01E         	goto	u10550
  9421  003D94                     u10551:
  9422  003D94  EFD2  F01E         	goto	l9274
  9423  003D98                     u10550:
  9424  003D98                     
  9425                           ; BSR set to: 0
  9426                           ;main.c: 240:                 delta = (40);
  9427  003D98  0E00               	movlw	0
  9428  003D9A  6F8F               	movwf	(calcSteering@delta+1)& (0+255),b
  9429  003D9C  0E28               	movlw	40
  9430  003D9E  6F8E               	movwf	calcSteering@delta& (0+255),b
  9431                           
  9432                           ;main.c: 241:             } else if (delta < -(40)) {
  9433  003DA0  EF54  F01F         	goto	l9304
  9434  003DA4                     l9274:
  9435                           
  9436                           ; BSR set to: 0
  9437  003DA4  AF8F               	btfss	(calcSteering@delta+1)& (0+255),7,b
  9438  003DA6  EFDE  F01E         	goto	u10561
  9439  003DAA  0ED8               	movlw	216
  9440  003DAC  5D8E               	subwf	calcSteering@delta& (0+255),w,b
  9441  003DAE  0EFF               	movlw	255
  9442  003DB0  598F               	subwfb	(calcSteering@delta+1)& (0+255),w,b
  9443  003DB2  B0D8               	btfsc	status,0,c
  9444  003DB4  EFDE  F01E         	goto	u10561
  9445  003DB8  EFE0  F01E         	goto	u10560
  9446  003DBC                     u10561:
  9447  003DBC  EF04  F01F         	goto	l1325
  9448  003DC0                     u10560:
  9449  003DC0                     
  9450                           ; BSR set to: 0
  9451                           ;main.c: 242:                 delta = -(40);
  9452  003DC0  0EFF               	movlw	255
  9453  003DC2  6F8F               	movwf	(calcSteering@delta+1)& (0+255),b
  9454  003DC4  0ED8               	movlw	216
  9455  003DC6  6F8E               	movwf	calcSteering@delta& (0+255),b
  9456  003DC8  EF54  F01F         	goto	l9304
  9457  003DCC                     l9280:
  9458  003DCC  0100               	movlb	0	; () banked
  9459  003DCE  51FC               	movf	_driveMode& (0+255),w,b
  9460  003DD0  6F8C               	movwf	??_calcSteering& (0+255),b
  9461  003DD2  6B8D               	clrf	(??_calcSteering+1)& (0+255),b
  9462                           
  9463                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9464                           ; Switch size 1, requested type "simple"
  9465                           ; Number of cases is 1, Range of values is 0 to 0
  9466                           ; switch strategies available:
  9467                           ; Name         Instructions Cycles
  9468                           ; simple_byte            4     3 (average)
  9469                           ;	Chosen strategy is simple_byte
  9470  003DD4  518D               	movf	(??_calcSteering+1)& (0+255),w,b
  9471  003DD6  0A00               	xorlw	0	; case 0
  9472  003DD8  B4D8               	btfsc	status,2,c
  9473  003DDA  EFF1  F01E         	goto	l9608
  9474  003DDE  EF54  F01F         	goto	l9304
  9475  003DE2                     l9608:
  9476                           
  9477                           ; BSR set to: 0
  9478                           ; Switch size 1, requested type "simple"
  9479                           ; Number of cases is 4, Range of values is 0 to 5
  9480                           ; switch strategies available:
  9481                           ; Name         Instructions Cycles
  9482                           ; simple_byte           13     7 (average)
  9483                           ;	Chosen strategy is simple_byte
  9484  003DE2  518C               	movf	??_calcSteering& (0+255),w,b
  9485  003DE4  0A00               	xorlw	0	; case 0
  9486  003DE6  B4D8               	btfsc	status,2,c
  9487  003DE8  EFBE  F01E         	goto	l9270
  9488  003DEC  0A01               	xorlw	1	; case 1
  9489  003DEE  B4D8               	btfsc	status,2,c
  9490  003DF0  EFBE  F01E         	goto	l1320
  9491  003DF4  0A05               	xorlw	5	; case 4
  9492  003DF6  B4D8               	btfsc	status,2,c
  9493  003DF8  EFBE  F01E         	goto	l9270
  9494  003DFC  0A01               	xorlw	1	; case 5
  9495  003DFE  B4D8               	btfsc	status,2,c
  9496  003E00  EFBE  F01E         	goto	l9270
  9497  003E04  EF54  F01F         	goto	l9304
  9498  003E08                     l1325:
  9499                           
  9500                           ; BSR set to: 0
  9501                           ;main.c: 249:     switch (driveMode) {
  9502  003E08  EF54  F01F         	goto	l9304
  9503  003E0C                     l9282:
  9504                           
  9505                           ; BSR set to: 0
  9506                           ;main.c: 251:             setSteering(delta, Ratio);
  9507  003E0C  C08E  F083         	movff	calcSteering@delta,setSteering@steering
  9508  003E10  C08F  F084         	movff	calcSteering@delta+1,setSteering@steering+1
  9509  003E14  0E02               	movlw	2
  9510  003E16  6F85               	movwf	setSteering@steeringMode& (0+255),b
  9511  003E18  EC9D  F01C         	call	_setSteering	;wreg free
  9512                           
  9513                           ;main.c: 252:             break;
  9514  003E1C  EF79  F01F         	goto	l1339
  9515  003E20                     l9284:
  9516                           
  9517                           ; BSR set to: 0
  9518                           ;main.c: 254:             setSteering(delta, Front);
  9519  003E20  C08E  F083         	movff	calcSteering@delta,setSteering@steering
  9520  003E24  C08F  F084         	movff	calcSteering@delta+1,setSteering@steering+1
  9521  003E28  0E03               	movlw	3
  9522  003E2A  6F85               	movwf	setSteering@steeringMode& (0+255),b
  9523  003E2C  EC9D  F01C         	call	_setSteering	;wreg free
  9524                           
  9525                           ;main.c: 255:             break;
  9526  003E30  EF79  F01F         	goto	l1339
  9527  003E34                     l9286:
  9528                           
  9529                           ; BSR set to: 0
  9530                           ;main.c: 257:             setSteering(-(55), Inverted);
  9531  003E34  0EFF               	movlw	255
  9532  003E36  6F84               	movwf	(setSteering@steering+1)& (0+255),b
  9533  003E38  0EC9               	movlw	201
  9534  003E3A  6F83               	movwf	setSteering@steering& (0+255),b
  9535  003E3C  0E00               	movlw	0
  9536  003E3E  6F85               	movwf	setSteering@steeringMode& (0+255),b
  9537  003E40  EC9D  F01C         	call	_setSteering	;wreg free
  9538                           
  9539                           ;main.c: 258:             break;
  9540  003E44  EF79  F01F         	goto	l1339
  9541  003E48                     l9288:
  9542                           
  9543                           ; BSR set to: 0
  9544                           ;main.c: 260:             setSteering((55), Inverted);
  9545  003E48  0E00               	movlw	0
  9546  003E4A  6F84               	movwf	(setSteering@steering+1)& (0+255),b
  9547  003E4C  0E37               	movlw	55
  9548  003E4E  6F83               	movwf	setSteering@steering& (0+255),b
  9549  003E50  0E00               	movlw	0
  9550  003E52  6F85               	movwf	setSteering@steeringMode& (0+255),b
  9551  003E54  EC9D  F01C         	call	_setSteering	;wreg free
  9552                           
  9553                           ;main.c: 261:             break;
  9554  003E58  EF79  F01F         	goto	l1339
  9555  003E5C                     l9290:
  9556                           
  9557                           ; BSR set to: 0
  9558                           ;main.c: 263:             if (curveMode == InCurve) {
  9559  003E5C  0E02               	movlw	2
  9560  003E5E  1841               	xorwf	_curveMode^0,w,c
  9561  003E60  A4D8               	btfss	status,2,c
  9562  003E62  EF35  F01F         	goto	u10571
  9563  003E66  EF37  F01F         	goto	u10570
  9564  003E6A                     u10571:
  9565  003E6A  EF10  F01F         	goto	l9284
  9566  003E6E                     u10570:
  9567  003E6E                     
  9568                           ; BSR set to: 0
  9569                           ;main.c: 264:                 setSteering((55), Ratio);
  9570  003E6E  0E00               	movlw	0
  9571  003E70  6F84               	movwf	(setSteering@steering+1)& (0+255),b
  9572  003E72  0E37               	movlw	55
  9573  003E74  6F83               	movwf	setSteering@steering& (0+255),b
  9574  003E76  0E02               	movlw	2
  9575  003E78  6F85               	movwf	setSteering@steeringMode& (0+255),b
  9576  003E7A  EC9D  F01C         	call	_setSteering	;wreg free
  9577                           
  9578                           ;main.c: 265:             } else {
  9579  003E7E  EF79  F01F         	goto	l1339
  9580  003E82                     l9296:
  9581                           
  9582                           ; BSR set to: 0
  9583                           ;main.c: 270:             if (curveMode == InCurve) {
  9584  003E82  0E02               	movlw	2
  9585  003E84  1841               	xorwf	_curveMode^0,w,c
  9586  003E86  A4D8               	btfss	status,2,c
  9587  003E88  EF48  F01F         	goto	u10581
  9588  003E8C  EF4A  F01F         	goto	u10580
  9589  003E90                     u10581:
  9590  003E90  EF10  F01F         	goto	l9284
  9591  003E94                     u10580:
  9592  003E94                     
  9593                           ; BSR set to: 0
  9594                           ;main.c: 271:                 setSteering(-(55), Ratio);
  9595  003E94  0EFF               	movlw	255
  9596  003E96  6F84               	movwf	(setSteering@steering+1)& (0+255),b
  9597  003E98  0EC9               	movlw	201
  9598  003E9A  6F83               	movwf	setSteering@steering& (0+255),b
  9599  003E9C  0E02               	movlw	2
  9600  003E9E  6F85               	movwf	setSteering@steeringMode& (0+255),b
  9601  003EA0  EC9D  F01C         	call	_setSteering	;wreg free
  9602                           
  9603                           ;main.c: 272:             } else {
  9604  003EA4  EF79  F01F         	goto	l1339
  9605  003EA8                     l9304:
  9606                           
  9607                           ; BSR set to: 0
  9608  003EA8  51FC               	movf	_driveMode& (0+255),w,b
  9609  003EAA  6F8C               	movwf	??_calcSteering& (0+255),b
  9610  003EAC  6B8D               	clrf	(??_calcSteering+1)& (0+255),b
  9611                           
  9612                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9613                           ; Switch size 1, requested type "simple"
  9614                           ; Number of cases is 1, Range of values is 0 to 0
  9615                           ; switch strategies available:
  9616                           ; Name         Instructions Cycles
  9617                           ; simple_byte            4     3 (average)
  9618                           ;	Chosen strategy is simple_byte
  9619  003EAE  518D               	movf	(??_calcSteering+1)& (0+255),w,b
  9620  003EB0  0A00               	xorlw	0	; case 0
  9621  003EB2  B4D8               	btfsc	status,2,c
  9622  003EB4  EF5E  F01F         	goto	l9610
  9623  003EB8  EF79  F01F         	goto	l1339
  9624  003EBC                     l9610:
  9625                           
  9626                           ; BSR set to: 0
  9627                           ; Switch size 1, requested type "simple"
  9628                           ; Number of cases is 6, Range of values is 0 to 5
  9629                           ; switch strategies available:
  9630                           ; Name         Instructions Cycles
  9631                           ; simple_byte           19    10 (average)
  9632                           ;	Chosen strategy is simple_byte
  9633  003EBC  518C               	movf	??_calcSteering& (0+255),w,b
  9634  003EBE  0A00               	xorlw	0	; case 0
  9635  003EC0  B4D8               	btfsc	status,2,c
  9636  003EC2  EF10  F01F         	goto	l9284
  9637  003EC6  0A01               	xorlw	1	; case 1
  9638  003EC8  B4D8               	btfsc	status,2,c
  9639  003ECA  EF06  F01F         	goto	l9282
  9640  003ECE  0A03               	xorlw	3	; case 2
  9641  003ED0  B4D8               	btfsc	status,2,c
  9642  003ED2  EF1A  F01F         	goto	l9286
  9643  003ED6  0A01               	xorlw	1	; case 3
  9644  003ED8  B4D8               	btfsc	status,2,c
  9645  003EDA  EF24  F01F         	goto	l9288
  9646  003EDE  0A07               	xorlw	7	; case 4
  9647  003EE0  B4D8               	btfsc	status,2,c
  9648  003EE2  EF2E  F01F         	goto	l9290
  9649  003EE6  0A01               	xorlw	1	; case 5
  9650  003EE8  B4D8               	btfsc	status,2,c
  9651  003EEA  EF41  F01F         	goto	l9296
  9652  003EEE  EF79  F01F         	goto	l1339
  9653  003EF2                     l1339:
  9654  003EF2  0012               	return		;funcret
  9655  003EF4                     __end_of_calcSteering:
  9656                           	callstack 0
  9657                           
  9658 ;; *************** function _setSteering *****************
  9659 ;; Defined at:
  9660 ;;		line 386 in file "main.c"
  9661 ;; Parameters:    Size  Location     Type
  9662 ;;  steering        2   35[BANK0 ] short 
  9663 ;;  steeringMode    1   37[BANK0 ] enum E17303
  9664 ;; Auto vars:     Size  Location     Type
  9665 ;;  steeringB       2   42[BANK0 ] short 
  9666 ;;  steeringF       2   40[BANK0 ] short 
  9667 ;; Return value:  Size  Location     Type
  9668 ;;                  1    wreg      void 
  9669 ;; Registers used:
  9670 ;;		wreg, status,2, status,0, cstack
  9671 ;; Tracked objects:
  9672 ;;		On entry : 0/0
  9673 ;;		On exit  : 0/0
  9674 ;;		Unchanged: 0/0
  9675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9676 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9677 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9678 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9679 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9680 ;;Total ram usage:        9 bytes
  9681 ;; Hardware stack levels used: 1
  9682 ;; Hardware stack levels required when called: 9
  9683 ;; This function calls:
  9684 ;;		_PWM5_LoadDutyValue
  9685 ;;		_PWM6_LoadDutyValue
  9686 ;;		___fldiv
  9687 ;;		___fltol
  9688 ;;		___xxtofl
  9689 ;; This function is called by:
  9690 ;;		_loop
  9691 ;;		_checkBatt
  9692 ;;		_startAccell
  9693 ;;		_calcSteering
  9694 ;; This function uses a non-reentrant model
  9695 ;;
  9696                           
  9697                           	psect	text39
  9698  00393A                     __ptext39:
  9699                           	callstack 0
  9700  00393A                     _setSteering:
  9701                           	callstack 19
  9702  00393A  0E00               	movlw	0
  9703  00393C  0100               	movlb	0	; () banked
  9704  00393E  6F8B               	movwf	(setSteering@steeringB+1)& (0+255),b
  9705  003940  0E00               	movlw	0
  9706  003942  6F8A               	movwf	setSteering@steeringB& (0+255),b
  9707                           
  9708                           ;main.c: 388:     switch (steeringMode) {
  9709  003944  EF18  F01D         	goto	l9122
  9710  003948                     l1382:
  9711                           
  9712                           ; BSR set to: 0
  9713                           ;main.c: 390:             steeringF = (+steering);
  9714  003948  C083  F088         	movff	setSteering@steering,setSteering@steeringF
  9715  00394C  C084  F089         	movff	setSteering@steering+1,setSteering@steeringF+1
  9716                           
  9717                           ;main.c: 391:             steeringB = -steering;
  9718  003950  C083  F086         	movff	setSteering@steering,??_setSteering
  9719  003954  C084  F087         	movff	setSteering@steering+1,??_setSteering+1
  9720  003958  1F86               	comf	??_setSteering& (0+255),f,b
  9721  00395A  1F87               	comf	(??_setSteering+1)& (0+255),f,b
  9722  00395C  4B86               	infsnz	??_setSteering& (0+255),f,b
  9723  00395E  2B87               	incf	(??_setSteering+1)& (0+255),f,b
  9724  003960  C086  F08A         	movff	??_setSteering,setSteering@steeringB
  9725  003964  C087  F08B         	movff	??_setSteering+1,setSteering@steeringB+1
  9726                           
  9727                           ;main.c: 392:             break;
  9728  003968  EF39  F01D         	goto	l9124
  9729  00396C                     l1384:
  9730                           
  9731                           ; BSR set to: 0
  9732                           ;main.c: 394:             steeringF = (+steering);
  9733  00396C  C083  F088         	movff	setSteering@steering,setSteering@steeringF
  9734  003970  C084  F089         	movff	setSteering@steering+1,setSteering@steeringF+1
  9735                           
  9736                           ;main.c: 395:             steeringB = (+steering);
  9737  003974  C083  F08A         	movff	setSteering@steering,setSteering@steeringB
  9738  003978  C084  F08B         	movff	setSteering@steering+1,setSteering@steeringB+1
  9739                           
  9740                           ;main.c: 396:             break;
  9741  00397C  EF39  F01D         	goto	l9124
  9742  003980                     l1385:
  9743                           
  9744                           ; BSR set to: 0
  9745                           ;main.c: 398:             steeringF = (+steering);
  9746  003980  C083  F088         	movff	setSteering@steering,setSteering@steeringF
  9747  003984  C084  F089         	movff	setSteering@steering+1,setSteering@steeringF+1
  9748  003988                     
  9749                           ; BSR set to: 0
  9750                           ;main.c: 399:             steeringB = (-steering / (1.25));
  9751  003988  0E00               	movlw	0
  9752  00398A  6E2E               	movwf	___fldiv@a^0,c
  9753  00398C  0E00               	movlw	0
  9754  00398E  6E2F               	movwf	(___fldiv@a+1)^0,c
  9755  003990  0EA0               	movlw	160
  9756  003992  6E30               	movwf	(___fldiv@a+2)^0,c
  9757  003994  0E3F               	movlw	63
  9758  003996  6E31               	movwf	(___fldiv@a+3)^0,c
  9759  003998  C083  F086         	movff	setSteering@steering,??_setSteering
  9760  00399C  C084  F087         	movff	setSteering@steering+1,??_setSteering+1
  9761  0039A0  1F86               	comf	??_setSteering& (0+255),f,b
  9762  0039A2  1F87               	comf	(??_setSteering+1)& (0+255),f,b
  9763  0039A4  4B86               	infsnz	??_setSteering& (0+255),f,b
  9764  0039A6  2B87               	incf	(??_setSteering+1)& (0+255),f,b
  9765  0039A8  C086  F01C         	movff	??_setSteering,___xxtofl@val
  9766  0039AC  C087  F01D         	movff	??_setSteering+1,___xxtofl@val+1
  9767  0039B0  0E00               	movlw	0
  9768  0039B2  BE1D               	btfsc	(___xxtofl@val+1)^0,7,c
  9769  0039B4  0EFF               	movlw	-1
  9770  0039B6  6E1E               	movwf	(___xxtofl@val+2)^0,c
  9771  0039B8  6E1F               	movwf	(___xxtofl@val+3)^0,c
  9772  0039BA  0E01               	movlw	1
  9773  0039BC  EC7A  F01F         	call	___xxtofl
  9774  0039C0  C01C  F02A         	movff	?___xxtofl,___fldiv@b
  9775  0039C4  C01D  F02B         	movff	?___xxtofl+1,___fldiv@b+1
  9776  0039C8  C01E  F02C         	movff	?___xxtofl+2,___fldiv@b+2
  9777  0039CC  C01F  F02D         	movff	?___xxtofl+3,___fldiv@b+3
  9778  0039D0  EC2E  F016         	call	___fldiv	;wreg free
  9779  0039D4  C02A  F079         	movff	?___fldiv,___fltol@f1
  9780  0039D8  C02B  F07A         	movff	?___fldiv+1,___fltol@f1+1
  9781  0039DC  C02C  F07B         	movff	?___fldiv+2,___fltol@f1+2
  9782  0039E0  C02D  F07C         	movff	?___fldiv+3,___fltol@f1+3
  9783  0039E4  EC32  F024         	call	___fltol	;wreg free
  9784  0039E8  C079  F08A         	movff	?___fltol,setSteering@steeringB
  9785  0039EC  C07A  F08B         	movff	?___fltol+1,setSteering@steeringB+1
  9786                           
  9787                           ;main.c: 400:             break;
  9788  0039F0  EF39  F01D         	goto	l9124
  9789  0039F4                     l1386:
  9790                           
  9791                           ; BSR set to: 0
  9792                           ;main.c: 402:             steeringF = (+steering);
  9793  0039F4  C083  F088         	movff	setSteering@steering,setSteering@steeringF
  9794  0039F8  C084  F089         	movff	setSteering@steering+1,setSteering@steeringF+1
  9795  0039FC                     
  9796                           ; BSR set to: 0
  9797                           ;main.c: 403:             steeringB = 0;
  9798  0039FC  0E00               	movlw	0
  9799  0039FE  6F8B               	movwf	(setSteering@steeringB+1)& (0+255),b
  9800  003A00  0E00               	movlw	0
  9801  003A02  6F8A               	movwf	setSteering@steeringB& (0+255),b
  9802                           
  9803                           ;main.c: 404:             break;
  9804  003A04  EF39  F01D         	goto	l9124
  9805  003A08                     l9114:
  9806                           
  9807                           ; BSR set to: 0
  9808                           ;main.c: 406:             steeringF = 0;
  9809  003A08  0E00               	movlw	0
  9810  003A0A  6F89               	movwf	(setSteering@steeringF+1)& (0+255),b
  9811  003A0C  0E00               	movlw	0
  9812  003A0E  6F88               	movwf	setSteering@steeringF& (0+255),b
  9813  003A10                     
  9814                           ; BSR set to: 0
  9815                           ;main.c: 407:             steeringB = (+steering);
  9816  003A10  C083  F08A         	movff	setSteering@steering,setSteering@steeringB
  9817  003A14  C084  F08B         	movff	setSteering@steering+1,setSteering@steeringB+1
  9818                           
  9819                           ;main.c: 408:             break;
  9820  003A18  EF39  F01D         	goto	l9124
  9821  003A1C                     l9118:
  9822                           
  9823                           ; BSR set to: 0
  9824                           ;main.c: 410:             steeringF = 0;
  9825  003A1C  0E00               	movlw	0
  9826  003A1E  6F89               	movwf	(setSteering@steeringF+1)& (0+255),b
  9827  003A20  0E00               	movlw	0
  9828  003A22  6F88               	movwf	setSteering@steeringF& (0+255),b
  9829                           
  9830                           ;main.c: 411:             steeringB = 0;
  9831  003A24  0E00               	movlw	0
  9832  003A26  6F8B               	movwf	(setSteering@steeringB+1)& (0+255),b
  9833  003A28  0E00               	movlw	0
  9834  003A2A  6F8A               	movwf	setSteering@steeringB& (0+255),b
  9835                           
  9836                           ;main.c: 412:             break;
  9837  003A2C  EF39  F01D         	goto	l9124
  9838  003A30                     l9122:
  9839                           
  9840                           ; BSR set to: 0
  9841  003A30  5185               	movf	setSteering@steeringMode& (0+255),w,b
  9842  003A32  6F86               	movwf	??_setSteering& (0+255),b
  9843  003A34  6B87               	clrf	(??_setSteering+1)& (0+255),b
  9844                           
  9845                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9846                           ; Switch size 1, requested type "simple"
  9847                           ; Number of cases is 1, Range of values is 0 to 0
  9848                           ; switch strategies available:
  9849                           ; Name         Instructions Cycles
  9850                           ; simple_byte            4     3 (average)
  9851                           ;	Chosen strategy is simple_byte
  9852  003A36  5187               	movf	(??_setSteering+1)& (0+255),w,b
  9853  003A38  0A00               	xorlw	0	; case 0
  9854  003A3A  B4D8               	btfsc	status,2,c
  9855  003A3C  EF22  F01D         	goto	l9612
  9856  003A40  EF0E  F01D         	goto	l9118
  9857  003A44                     l9612:
  9858                           
  9859                           ; BSR set to: 0
  9860                           ; Switch size 1, requested type "simple"
  9861                           ; Number of cases is 5, Range of values is 0 to 4
  9862                           ; switch strategies available:
  9863                           ; Name         Instructions Cycles
  9864                           ; simple_byte           16     9 (average)
  9865                           ;	Chosen strategy is simple_byte
  9866  003A44  5186               	movf	??_setSteering& (0+255),w,b
  9867  003A46  0A00               	xorlw	0	; case 0
  9868  003A48  B4D8               	btfsc	status,2,c
  9869  003A4A  EFA4  F01C         	goto	l1382
  9870  003A4E  0A01               	xorlw	1	; case 1
  9871  003A50  B4D8               	btfsc	status,2,c
  9872  003A52  EFB6  F01C         	goto	l1384
  9873  003A56  0A03               	xorlw	3	; case 2
  9874  003A58  B4D8               	btfsc	status,2,c
  9875  003A5A  EFC0  F01C         	goto	l1385
  9876  003A5E  0A01               	xorlw	1	; case 3
  9877  003A60  B4D8               	btfsc	status,2,c
  9878  003A62  EFFA  F01C         	goto	l1386
  9879  003A66  0A07               	xorlw	7	; case 4
  9880  003A68  B4D8               	btfsc	status,2,c
  9881  003A6A  EF04  F01D         	goto	l9114
  9882  003A6E  EF0E  F01D         	goto	l9118
  9883  003A72                     l9124:
  9884                           
  9885                           ;main.c: 415:     if (steeringF > ((65))) {
  9886  003A72  0100               	movlb	0	; () banked
  9887  003A74  BF89               	btfsc	(setSteering@steeringF+1)& (0+255),7,b
  9888  003A76  EF46  F01D         	goto	u10331
  9889  003A7A  5189               	movf	(setSteering@steeringF+1)& (0+255),w,b
  9890  003A7C  E109               	bnz	u10330
  9891  003A7E  0E42               	movlw	66
  9892  003A80  5D88               	subwf	setSteering@steeringF& (0+255),w,b
  9893  003A82  A0D8               	btfss	status,0,c
  9894  003A84  EF46  F01D         	goto	u10331
  9895  003A88  EF48  F01D         	goto	u10330
  9896  003A8C                     u10331:
  9897  003A8C  EF4E  F01D         	goto	l9128
  9898  003A90                     u10330:
  9899  003A90                     
  9900                           ; BSR set to: 0
  9901                           ;main.c: 416:         steeringF = ((65));
  9902  003A90  0E00               	movlw	0
  9903  003A92  6F89               	movwf	(setSteering@steeringF+1)& (0+255),b
  9904  003A94  0E41               	movlw	65
  9905  003A96  6F88               	movwf	setSteering@steeringF& (0+255),b
  9906                           
  9907                           ;main.c: 417:     } else if (steeringF < (-(65))) {
  9908  003A98  EF60  F01D         	goto	l9132
  9909  003A9C                     l9128:
  9910                           
  9911                           ; BSR set to: 0
  9912  003A9C  AF89               	btfss	(setSteering@steeringF+1)& (0+255),7,b
  9913  003A9E  EF5A  F01D         	goto	u10341
  9914  003AA2  0EBF               	movlw	191
  9915  003AA4  5D88               	subwf	setSteering@steeringF& (0+255),w,b
  9916  003AA6  0EFF               	movlw	255
  9917  003AA8  5989               	subwfb	(setSteering@steeringF+1)& (0+255),w,b
  9918  003AAA  B0D8               	btfsc	status,0,c
  9919  003AAC  EF5A  F01D         	goto	u10341
  9920  003AB0  EF5C  F01D         	goto	u10340
  9921  003AB4                     u10341:
  9922  003AB4  EF60  F01D         	goto	l9132
  9923  003AB8                     u10340:
  9924  003AB8                     
  9925                           ; BSR set to: 0
  9926                           ;main.c: 418:         steeringF = (-(65));
  9927  003AB8  0EFF               	movlw	255
  9928  003ABA  6F89               	movwf	(setSteering@steeringF+1)& (0+255),b
  9929  003ABC  0EBF               	movlw	191
  9930  003ABE  6F88               	movwf	setSteering@steeringF& (0+255),b
  9931  003AC0                     l9132:
  9932                           
  9933                           ; BSR set to: 0
  9934                           ;main.c: 421:     if (steeringB > ((40))) {
  9935  003AC0  BF8B               	btfsc	(setSteering@steeringB+1)& (0+255),7,b
  9936  003AC2  EF6C  F01D         	goto	u10351
  9937  003AC6  518B               	movf	(setSteering@steeringB+1)& (0+255),w,b
  9938  003AC8  E109               	bnz	u10350
  9939  003ACA  0E29               	movlw	41
  9940  003ACC  5D8A               	subwf	setSteering@steeringB& (0+255),w,b
  9941  003ACE  A0D8               	btfss	status,0,c
  9942  003AD0  EF6C  F01D         	goto	u10351
  9943  003AD4  EF6E  F01D         	goto	u10350
  9944  003AD8                     u10351:
  9945  003AD8  EF74  F01D         	goto	l9136
  9946  003ADC                     u10350:
  9947  003ADC                     
  9948                           ; BSR set to: 0
  9949                           ;main.c: 422:         steeringB = ((40));
  9950  003ADC  0E00               	movlw	0
  9951  003ADE  6F8B               	movwf	(setSteering@steeringB+1)& (0+255),b
  9952  003AE0  0E28               	movlw	40
  9953  003AE2  6F8A               	movwf	setSteering@steeringB& (0+255),b
  9954                           
  9955                           ;main.c: 423:     } else if (steeringB < (-(40))) {
  9956  003AE4  EF86  F01D         	goto	l9140
  9957  003AE8                     l9136:
  9958                           
  9959                           ; BSR set to: 0
  9960  003AE8  AF8B               	btfss	(setSteering@steeringB+1)& (0+255),7,b
  9961  003AEA  EF80  F01D         	goto	u10361
  9962  003AEE  0ED8               	movlw	216
  9963  003AF0  5D8A               	subwf	setSteering@steeringB& (0+255),w,b
  9964  003AF2  0EFF               	movlw	255
  9965  003AF4  598B               	subwfb	(setSteering@steeringB+1)& (0+255),w,b
  9966  003AF6  B0D8               	btfsc	status,0,c
  9967  003AF8  EF80  F01D         	goto	u10361
  9968  003AFC  EF82  F01D         	goto	u10360
  9969  003B00                     u10361:
  9970  003B00  EF86  F01D         	goto	l9140
  9971  003B04                     u10360:
  9972  003B04                     
  9973                           ; BSR set to: 0
  9974                           ;main.c: 424:         steeringB = (-(40));
  9975  003B04  0EFF               	movlw	255
  9976  003B06  6F8B               	movwf	(setSteering@steeringB+1)& (0+255),b
  9977  003B08  0ED8               	movlw	216
  9978  003B0A  6F8A               	movwf	setSteering@steeringB& (0+255),b
  9979  003B0C                     l9140:
  9980                           
  9981                           ; BSR set to: 0
  9982                           ;main.c: 428:     PWM6_LoadDutyValue((uint16_t) ((352) + steeringF));
  9983  003B0C  0E60               	movlw	96
  9984  003B0E  2588               	addwf	setSteering@steeringF& (0+255),w,b
  9985  003B10  6E14               	movwf	PWM6_LoadDutyValue@dutyValue^0,c
  9986  003B12  0E01               	movlw	1
  9987  003B14  2189               	addwfc	(setSteering@steeringF+1)& (0+255),w,b
  9988  003B16  6E15               	movwf	(PWM6_LoadDutyValue@dutyValue+1)^0,c
  9989  003B18  EC36  F02F         	call	_PWM6_LoadDutyValue	;wreg free
  9990  003B1C                     
  9991                           ;main.c: 429:     PWM5_LoadDutyValue((uint16_t) ((357) + steeringB));
  9992  003B1C  0E65               	movlw	101
  9993  003B1E  0100               	movlb	0	; () banked
  9994  003B20  258A               	addwf	setSteering@steeringB& (0+255),w,b
  9995  003B22  6E14               	movwf	PWM5_LoadDutyValue@dutyValue^0,c
  9996  003B24  0E01               	movlw	1
  9997  003B26  218B               	addwfc	(setSteering@steeringB+1)& (0+255),w,b
  9998  003B28  6E15               	movwf	(PWM5_LoadDutyValue@dutyValue+1)^0,c
  9999  003B2A  EC50  F02F         	call	_PWM5_LoadDutyValue	;wreg free
 10000  003B2E  0012               	return		;funcret
 10001  003B30                     __end_of_setSteering:
 10002                           	callstack 0
 10003                           
 10004 ;; *************** function ___fldiv *****************
 10005 ;; Defined at:
 10006 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
 10007 ;; Parameters:    Size  Location     Type
 10008 ;;  b               4   41[COMRAM] void 
 10009 ;;  a               4   45[COMRAM] void 
 10010 ;; Auto vars:     Size  Location     Type
 10011 ;;  grs             4    7[BANK0 ] unsigned long 
 10012 ;;  rem             4    0[BANK0 ] unsigned long 
 10013 ;;  new_exp         2    5[BANK0 ] short 
 10014 ;;  aexp            1   12[BANK0 ] unsigned char 
 10015 ;;  bexp            1   11[BANK0 ] unsigned char 
 10016 ;;  sign            1    4[BANK0 ] unsigned char 
 10017 ;; Return value:  Size  Location     Type
 10018 ;;                  4   41[COMRAM] unsigned char 
 10019 ;; Registers used:
 10020 ;;		wreg, status,2, status,0
 10021 ;; Tracked objects:
 10022 ;;		On entry : 0/0
 10023 ;;		On exit  : 0/0
 10024 ;;		Unchanged: 0/0
 10025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10026 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10027 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10028 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10029 ;;      Totals:        12      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10030 ;;Total ram usage:       25 bytes
 10031 ;; Hardware stack levels used: 1
 10032 ;; Hardware stack levels required when called: 8
 10033 ;; This function calls:
 10034 ;;		Nothing
 10035 ;; This function is called by:
 10036 ;;		_calcSteering
 10037 ;;		_setSteering
 10038 ;;		_efgtoa
 10039 ;; This function uses a non-reentrant model
 10040 ;;
 10041                           
 10042                           	psect	text40
 10043  002C5C                     __ptext40:
 10044                           	callstack 0
 10045  002C5C                     ___fldiv:
 10046                           	callstack 19
 10047  002C5C  502D               	movf	(___fldiv@b+3)^0,w,c
 10048  002C5E  0B80               	andlw	128
 10049  002C60  0100               	movlb	0	; () banked
 10050  002C62  6F64               	movwf	___fldiv@sign& (0+255),b
 10051  002C64  502D               	movf	(___fldiv@b+3)^0,w,c
 10052  002C66  242D               	addwf	(___fldiv@b+3)^0,w,c
 10053  002C68  6F6B               	movwf	___fldiv@bexp& (0+255),b
 10054  002C6A                     
 10055                           ; BSR set to: 0
 10056  002C6A  AE2C               	btfss	(___fldiv@b+2)^0,7,c
 10057  002C6C  EF3A  F016         	goto	u8171
 10058  002C70  EF3C  F016         	goto	u8170
 10059  002C74                     u8171:
 10060  002C74  EF3D  F016         	goto	l7938
 10061  002C78                     u8170:
 10062  002C78                     
 10063                           ; BSR set to: 0
 10064  002C78  816B               	bsf	___fldiv@bexp& (0+255),0,b
 10065  002C7A                     l7938:
 10066                           
 10067                           ; BSR set to: 0
 10068  002C7A  516B               	movf	___fldiv@bexp& (0+255),w,b
 10069  002C7C  B4D8               	btfsc	status,2,c
 10070  002C7E  EF43  F016         	goto	u8181
 10071  002C82  EF45  F016         	goto	u8180
 10072  002C86                     u8181:
 10073  002C86  EF5A  F016         	goto	l7948
 10074  002C8A                     u8180:
 10075  002C8A                     
 10076                           ; BSR set to: 0
 10077  002C8A  296B               	incf	___fldiv@bexp& (0+255),w,b
 10078  002C8C  A4D8               	btfss	status,2,c
 10079  002C8E  EF4B  F016         	goto	u8191
 10080  002C92  EF4D  F016         	goto	u8190
 10081  002C96                     u8191:
 10082  002C96  EF55  F016         	goto	l7944
 10083  002C9A                     u8190:
 10084  002C9A                     
 10085                           ; BSR set to: 0
 10086  002C9A  0E00               	movlw	0
 10087  002C9C  6E2A               	movwf	___fldiv@b^0,c
 10088  002C9E  0E00               	movlw	0
 10089  002CA0  6E2B               	movwf	(___fldiv@b+1)^0,c
 10090  002CA2  0E00               	movlw	0
 10091  002CA4  6E2C               	movwf	(___fldiv@b+2)^0,c
 10092  002CA6  0E00               	movlw	0
 10093  002CA8  6E2D               	movwf	(___fldiv@b+3)^0,c
 10094  002CAA                     l7944:
 10095                           
 10096                           ; BSR set to: 0
 10097  002CAA  8E2C               	bsf	(___fldiv@b+2)^0,7,c
 10098  002CAC                     
 10099                           ; BSR set to: 0
 10100  002CAC  0E00               	movlw	0
 10101  002CAE  6E2D               	movwf	(___fldiv@b+3)^0,c
 10102  002CB0  EF62  F016         	goto	l7950
 10103  002CB4                     l7948:
 10104                           
 10105                           ; BSR set to: 0
 10106  002CB4  0E00               	movlw	0
 10107  002CB6  6E2A               	movwf	___fldiv@b^0,c
 10108  002CB8  0E00               	movlw	0
 10109  002CBA  6E2B               	movwf	(___fldiv@b+1)^0,c
 10110  002CBC  0E00               	movlw	0
 10111  002CBE  6E2C               	movwf	(___fldiv@b+2)^0,c
 10112  002CC0  0E00               	movlw	0
 10113  002CC2  6E2D               	movwf	(___fldiv@b+3)^0,c
 10114  002CC4                     l7950:
 10115                           
 10116                           ; BSR set to: 0
 10117  002CC4  5031               	movf	(___fldiv@a+3)^0,w,c
 10118  002CC6  0B80               	andlw	128
 10119  002CC8  1B64               	xorwf	___fldiv@sign& (0+255),f,b
 10120  002CCA                     
 10121                           ; BSR set to: 0
 10122  002CCA  5031               	movf	(___fldiv@a+3)^0,w,c
 10123  002CCC  2431               	addwf	(___fldiv@a+3)^0,w,c
 10124  002CCE  6F6C               	movwf	___fldiv@aexp& (0+255),b
 10125  002CD0                     
 10126                           ; BSR set to: 0
 10127  002CD0  AE30               	btfss	(___fldiv@a+2)^0,7,c
 10128  002CD2  EF6D  F016         	goto	u8201
 10129  002CD6  EF6F  F016         	goto	u8200
 10130  002CDA                     u8201:
 10131  002CDA  EF70  F016         	goto	l7958
 10132  002CDE                     u8200:
 10133  002CDE                     
 10134                           ; BSR set to: 0
 10135  002CDE  816C               	bsf	___fldiv@aexp& (0+255),0,b
 10136  002CE0                     l7958:
 10137                           
 10138                           ; BSR set to: 0
 10139  002CE0  516C               	movf	___fldiv@aexp& (0+255),w,b
 10140  002CE2  B4D8               	btfsc	status,2,c
 10141  002CE4  EF76  F016         	goto	u8211
 10142  002CE8  EF78  F016         	goto	u8210
 10143  002CEC                     u8211:
 10144  002CEC  EF8D  F016         	goto	l7968
 10145  002CF0                     u8210:
 10146  002CF0                     
 10147                           ; BSR set to: 0
 10148  002CF0  296C               	incf	___fldiv@aexp& (0+255),w,b
 10149  002CF2  A4D8               	btfss	status,2,c
 10150  002CF4  EF7E  F016         	goto	u8221
 10151  002CF8  EF80  F016         	goto	u8220
 10152  002CFC                     u8221:
 10153  002CFC  EF88  F016         	goto	l7964
 10154  002D00                     u8220:
 10155  002D00                     
 10156                           ; BSR set to: 0
 10157  002D00  0E00               	movlw	0
 10158  002D02  6E2E               	movwf	___fldiv@a^0,c
 10159  002D04  0E00               	movlw	0
 10160  002D06  6E2F               	movwf	(___fldiv@a+1)^0,c
 10161  002D08  0E00               	movlw	0
 10162  002D0A  6E30               	movwf	(___fldiv@a+2)^0,c
 10163  002D0C  0E00               	movlw	0
 10164  002D0E  6E31               	movwf	(___fldiv@a+3)^0,c
 10165  002D10                     l7964:
 10166                           
 10167                           ; BSR set to: 0
 10168  002D10  8E30               	bsf	(___fldiv@a+2)^0,7,c
 10169  002D12                     
 10170                           ; BSR set to: 0
 10171  002D12  0E00               	movlw	0
 10172  002D14  6E31               	movwf	(___fldiv@a+3)^0,c
 10173  002D16  EF95  F016         	goto	l7970
 10174  002D1A                     l7968:
 10175                           
 10176                           ; BSR set to: 0
 10177  002D1A  0E00               	movlw	0
 10178  002D1C  6E2E               	movwf	___fldiv@a^0,c
 10179  002D1E  0E00               	movlw	0
 10180  002D20  6E2F               	movwf	(___fldiv@a+1)^0,c
 10181  002D22  0E00               	movlw	0
 10182  002D24  6E30               	movwf	(___fldiv@a+2)^0,c
 10183  002D26  0E00               	movlw	0
 10184  002D28  6E31               	movwf	(___fldiv@a+3)^0,c
 10185  002D2A                     l7970:
 10186                           
 10187                           ; BSR set to: 0
 10188  002D2A  502E               	movf	___fldiv@a^0,w,c
 10189  002D2C  102F               	iorwf	(___fldiv@a+1)^0,w,c
 10190  002D2E  1030               	iorwf	(___fldiv@a+2)^0,w,c
 10191  002D30  1031               	iorwf	(___fldiv@a+3)^0,w,c
 10192  002D32  A4D8               	btfss	status,2,c
 10193  002D34  EF9E  F016         	goto	u8231
 10194  002D38  EFA0  F016         	goto	u8230
 10195  002D3C                     u8231:
 10196  002D3C  EFB8  F016         	goto	l7982
 10197  002D40                     u8230:
 10198  002D40                     
 10199                           ; BSR set to: 0
 10200  002D40  0E00               	movlw	0
 10201  002D42  6E2A               	movwf	___fldiv@b^0,c
 10202  002D44  0E00               	movlw	0
 10203  002D46  6E2B               	movwf	(___fldiv@b+1)^0,c
 10204  002D48  0E00               	movlw	0
 10205  002D4A  6E2C               	movwf	(___fldiv@b+2)^0,c
 10206  002D4C  0E00               	movlw	0
 10207  002D4E  6E2D               	movwf	(___fldiv@b+3)^0,c
 10208  002D50                     
 10209                           ; BSR set to: 0
 10210  002D50  0E80               	movlw	128
 10211  002D52  122C               	iorwf	(___fldiv@b+2)^0,f,c
 10212  002D54  0E7F               	movlw	127
 10213  002D56  122D               	iorwf	(___fldiv@b+3)^0,f,c
 10214  002D58                     l7976:
 10215                           
 10216                           ; BSR set to: 0
 10217  002D58  5164               	movf	___fldiv@sign& (0+255),w,b
 10218  002D5A  122D               	iorwf	(___fldiv@b+3)^0,f,c
 10219  002D5C                     
 10220                           ; BSR set to: 0
 10221  002D5C  C02A  F02A         	movff	___fldiv@b,?___fldiv
 10222  002D60  C02B  F02B         	movff	___fldiv@b+1,?___fldiv+1
 10223  002D64  C02C  F02C         	movff	___fldiv@b+2,?___fldiv+2
 10224  002D68  C02D  F02D         	movff	___fldiv@b+3,?___fldiv+3
 10225  002D6C  EFFB  F017         	goto	l1980
 10226  002D70                     l7982:
 10227                           
 10228                           ; BSR set to: 0
 10229  002D70  516B               	movf	___fldiv@bexp& (0+255),w,b
 10230  002D72  A4D8               	btfss	status,2,c
 10231  002D74  EFBE  F016         	goto	u8241
 10232  002D78  EFC0  F016         	goto	u8240
 10233  002D7C                     u8241:
 10234  002D7C  EFCA  F016         	goto	l7990
 10235  002D80                     u8240:
 10236  002D80                     
 10237                           ; BSR set to: 0
 10238  002D80  0E00               	movlw	0
 10239  002D82  6E2A               	movwf	?___fldiv^0,c
 10240  002D84  0E00               	movlw	0
 10241  002D86  6E2B               	movwf	(?___fldiv+1)^0,c
 10242  002D88  0E00               	movlw	0
 10243  002D8A  6E2C               	movwf	(?___fldiv+2)^0,c
 10244  002D8C  0E00               	movlw	0
 10245  002D8E  6E2D               	movwf	(?___fldiv+3)^0,c
 10246  002D90  EFFB  F017         	goto	l1980
 10247  002D94                     l7990:
 10248                           
 10249                           ; BSR set to: 0
 10250  002D94  516C               	movf	___fldiv@aexp& (0+255),w,b
 10251  002D96  C06B  F032         	movff	___fldiv@bexp,??___fldiv
 10252  002D9A  6A33               	clrf	(??___fldiv+1)^0,c
 10253  002D9C  5E32               	subwf	??___fldiv^0,f,c
 10254  002D9E  0E00               	movlw	0
 10255  002DA0  5A33               	subwfb	(??___fldiv+1)^0,f,c
 10256  002DA2  0E7F               	movlw	127
 10257  002DA4  2432               	addwf	??___fldiv^0,w,c
 10258  002DA6  6F65               	movwf	___fldiv@new_exp& (0+255),b
 10259  002DA8  0E00               	movlw	0
 10260  002DAA  2033               	addwfc	(??___fldiv+1)^0,w,c
 10261  002DAC  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
 10262  002DAE                     
 10263                           ; BSR set to: 0
 10264  002DAE  C02A  F060         	movff	___fldiv@b,___fldiv@rem
 10265  002DB2  C02B  F061         	movff	___fldiv@b+1,___fldiv@rem+1
 10266  002DB6  C02C  F062         	movff	___fldiv@b+2,___fldiv@rem+2
 10267  002DBA  C02D  F063         	movff	___fldiv@b+3,___fldiv@rem+3
 10268  002DBE                     
 10269                           ; BSR set to: 0
 10270  002DBE  0E00               	movlw	0
 10271  002DC0  6E2A               	movwf	___fldiv@b^0,c
 10272  002DC2  0E00               	movlw	0
 10273  002DC4  6E2B               	movwf	(___fldiv@b+1)^0,c
 10274  002DC6  0E00               	movlw	0
 10275  002DC8  6E2C               	movwf	(___fldiv@b+2)^0,c
 10276  002DCA  0E00               	movlw	0
 10277  002DCC  6E2D               	movwf	(___fldiv@b+3)^0,c
 10278  002DCE                     
 10279                           ; BSR set to: 0
 10280  002DCE  0E00               	movlw	0
 10281  002DD0  6F67               	movwf	___fldiv@grs& (0+255),b
 10282  002DD2  0E00               	movlw	0
 10283  002DD4  6F68               	movwf	(___fldiv@grs+1)& (0+255),b
 10284  002DD6  0E00               	movlw	0
 10285  002DD8  6F69               	movwf	(___fldiv@grs+2)& (0+255),b
 10286  002DDA  0E00               	movlw	0
 10287  002DDC  6F6A               	movwf	(___fldiv@grs+3)& (0+255),b
 10288  002DDE                     
 10289                           ; BSR set to: 0
 10290  002DDE  0E00               	movlw	0
 10291  002DE0  6F6C               	movwf	___fldiv@aexp& (0+255),b
 10292  002DE2  EF2B  F017         	goto	l1982
 10293  002DE6                     l8000:
 10294                           
 10295                           ; BSR set to: 0
 10296  002DE6  516C               	movf	___fldiv@aexp& (0+255),w,b
 10297  002DE8  B4D8               	btfsc	status,2,c
 10298  002DEA  EFF9  F016         	goto	u8251
 10299  002DEE  EFFB  F016         	goto	u8250
 10300  002DF2                     u8251:
 10301  002DF2  EF12  F017         	goto	l8008
 10302  002DF6                     u8250:
 10303  002DF6                     
 10304                           ; BSR set to: 0
 10305  002DF6  90D8               	bcf	status,0,c
 10306  002DF8  3760               	rlcf	___fldiv@rem& (0+255),f,b
 10307  002DFA  3761               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 10308  002DFC  3762               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 10309  002DFE  3763               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 10310  002E00  90D8               	bcf	status,0,c
 10311  002E02  362A               	rlcf	___fldiv@b^0,f,c
 10312  002E04  362B               	rlcf	(___fldiv@b+1)^0,f,c
 10313  002E06  362C               	rlcf	(___fldiv@b+2)^0,f,c
 10314  002E08  362D               	rlcf	(___fldiv@b+3)^0,f,c
 10315  002E0A                     
 10316                           ; BSR set to: 0
 10317  002E0A  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
 10318  002E0C  EF0A  F017         	goto	u8261
 10319  002E10  EF0C  F017         	goto	u8260
 10320  002E14                     u8261:
 10321  002E14  EF0D  F017         	goto	l1985
 10322  002E18                     u8260:
 10323  002E18                     
 10324                           ; BSR set to: 0
 10325  002E18  802A               	bsf	___fldiv@b^0,0,c
 10326  002E1A                     l1985:
 10327                           
 10328                           ; BSR set to: 0
 10329  002E1A  90D8               	bcf	status,0,c
 10330  002E1C  3767               	rlcf	___fldiv@grs& (0+255),f,b
 10331  002E1E  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 10332  002E20  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 10333  002E22  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 10334  002E24                     l8008:
 10335                           
 10336                           ; BSR set to: 0
 10337  002E24  502E               	movf	___fldiv@a^0,w,c
 10338  002E26  5D60               	subwf	___fldiv@rem& (0+255),w,b
 10339  002E28  502F               	movf	(___fldiv@a+1)^0,w,c
 10340  002E2A  5961               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 10341  002E2C  5030               	movf	(___fldiv@a+2)^0,w,c
 10342  002E2E  5962               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 10343  002E30  5031               	movf	(___fldiv@a+3)^0,w,c
 10344  002E32  5963               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 10345  002E34  A0D8               	btfss	status,0,c
 10346  002E36  EF1F  F017         	goto	u8271
 10347  002E3A  EF21  F017         	goto	u8270
 10348  002E3E                     u8271:
 10349  002E3E  EF2A  F017         	goto	l8014
 10350  002E42                     u8270:
 10351  002E42                     
 10352                           ; BSR set to: 0
 10353  002E42  8D6A               	bsf	(___fldiv@grs+3)& (0+255),6,b
 10354  002E44                     
 10355                           ; BSR set to: 0
 10356  002E44  502E               	movf	___fldiv@a^0,w,c
 10357  002E46  5F60               	subwf	___fldiv@rem& (0+255),f,b
 10358  002E48  502F               	movf	(___fldiv@a+1)^0,w,c
 10359  002E4A  5B61               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 10360  002E4C  5030               	movf	(___fldiv@a+2)^0,w,c
 10361  002E4E  5B62               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 10362  002E50  5031               	movf	(___fldiv@a+3)^0,w,c
 10363  002E52  5B63               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 10364  002E54                     l8014:
 10365                           
 10366                           ; BSR set to: 0
 10367  002E54  2B6C               	incf	___fldiv@aexp& (0+255),f,b
 10368  002E56                     l1982:
 10369                           
 10370                           ; BSR set to: 0
 10371  002E56  0E19               	movlw	25
 10372  002E58  656C               	cpfsgt	___fldiv@aexp& (0+255),b
 10373  002E5A  EF31  F017         	goto	u8281
 10374  002E5E  EF33  F017         	goto	u8280
 10375  002E62                     u8281:
 10376  002E62  EFF3  F016         	goto	l8000
 10377  002E66                     u8280:
 10378  002E66                     
 10379                           ; BSR set to: 0
 10380  002E66  5160               	movf	___fldiv@rem& (0+255),w,b
 10381  002E68  1161               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 10382  002E6A  1162               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 10383  002E6C  1163               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 10384  002E6E  B4D8               	btfsc	status,2,c
 10385  002E70  EF3C  F017         	goto	u8291
 10386  002E74  EF3E  F017         	goto	u8290
 10387  002E78                     u8291:
 10388  002E78  EF56  F017         	goto	l8026
 10389  002E7C                     u8290:
 10390  002E7C                     
 10391                           ; BSR set to: 0
 10392  002E7C  8167               	bsf	___fldiv@grs& (0+255),0,b
 10393  002E7E  EF56  F017         	goto	l8026
 10394  002E82                     l8020:
 10395                           
 10396                           ; BSR set to: 0
 10397  002E82  90D8               	bcf	status,0,c
 10398  002E84  362A               	rlcf	___fldiv@b^0,f,c
 10399  002E86  362B               	rlcf	(___fldiv@b+1)^0,f,c
 10400  002E88  362C               	rlcf	(___fldiv@b+2)^0,f,c
 10401  002E8A  362D               	rlcf	(___fldiv@b+3)^0,f,c
 10402  002E8C                     
 10403                           ; BSR set to: 0
 10404  002E8C  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
 10405  002E8E  EF4B  F017         	goto	u8301
 10406  002E92  EF4D  F017         	goto	u8300
 10407  002E96                     u8301:
 10408  002E96  EF4E  F017         	goto	l1991
 10409  002E9A                     u8300:
 10410  002E9A                     
 10411                           ; BSR set to: 0
 10412  002E9A  802A               	bsf	___fldiv@b^0,0,c
 10413  002E9C                     l1991:
 10414                           
 10415                           ; BSR set to: 0
 10416  002E9C  90D8               	bcf	status,0,c
 10417  002E9E  3767               	rlcf	___fldiv@grs& (0+255),f,b
 10418  002EA0  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 10419  002EA2  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 10420  002EA4  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 10421  002EA6  0765               	decf	___fldiv@new_exp& (0+255),f,b
 10422  002EA8  A0D8               	btfss	status,0,c
 10423  002EAA  0766               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 10424  002EAC                     l8026:
 10425                           
 10426                           ; BSR set to: 0
 10427  002EAC  AE2C               	btfss	(___fldiv@b+2)^0,7,c
 10428  002EAE  EF5B  F017         	goto	u8311
 10429  002EB2  EF5D  F017         	goto	u8310
 10430  002EB6                     u8311:
 10431  002EB6  EF41  F017         	goto	l8020
 10432  002EBA                     u8310:
 10433  002EBA                     
 10434                           ; BSR set to: 0
 10435  002EBA  0E00               	movlw	0
 10436  002EBC  6F6C               	movwf	___fldiv@aexp& (0+255),b
 10437  002EBE                     
 10438                           ; BSR set to: 0
 10439  002EBE  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
 10440  002EC0  EF64  F017         	goto	u8321
 10441  002EC4  EF66  F017         	goto	u8320
 10442  002EC8                     u8321:
 10443  002EC8  EF8A  F017         	goto	l1993
 10444  002ECC                     u8320:
 10445  002ECC                     
 10446                           ; BSR set to: 0
 10447  002ECC  0EFF               	movlw	255
 10448  002ECE  1567               	andwf	___fldiv@grs& (0+255),w,b
 10449  002ED0  6E32               	movwf	??___fldiv^0,c
 10450  002ED2  0EFF               	movlw	255
 10451  002ED4  1568               	andwf	(___fldiv@grs+1)& (0+255),w,b
 10452  002ED6  6E33               	movwf	(??___fldiv+1)^0,c
 10453  002ED8  0EFF               	movlw	255
 10454  002EDA  1569               	andwf	(___fldiv@grs+2)& (0+255),w,b
 10455  002EDC  6E34               	movwf	(??___fldiv+2)^0,c
 10456  002EDE  0E7F               	movlw	127
 10457  002EE0  156A               	andwf	(___fldiv@grs+3)& (0+255),w,b
 10458  002EE2  6E35               	movwf	(??___fldiv+3)^0,c
 10459  002EE4  5032               	movf	??___fldiv^0,w,c
 10460  002EE6  1033               	iorwf	(??___fldiv+1)^0,w,c
 10461  002EE8  1034               	iorwf	(??___fldiv+2)^0,w,c
 10462  002EEA  1035               	iorwf	(??___fldiv+3)^0,w,c
 10463  002EEC  B4D8               	btfsc	status,2,c
 10464  002EEE  EF7B  F017         	goto	u8331
 10465  002EF2  EF7D  F017         	goto	u8330
 10466  002EF6                     u8331:
 10467  002EF6  EF81  F017         	goto	l1994
 10468  002EFA                     u8330:
 10469  002EFA                     l8034:
 10470                           
 10471                           ; BSR set to: 0
 10472  002EFA  0E01               	movlw	1
 10473  002EFC  6F6C               	movwf	___fldiv@aexp& (0+255),b
 10474  002EFE  EF8A  F017         	goto	l1993
 10475  002F02                     l1994:
 10476                           
 10477                           ; BSR set to: 0
 10478  002F02  A02A               	btfss	___fldiv@b^0,0,c
 10479  002F04  EF86  F017         	goto	u8341
 10480  002F08  EF88  F017         	goto	u8340
 10481  002F0C                     u8341:
 10482  002F0C  EF8A  F017         	goto	l1993
 10483  002F10                     u8340:
 10484  002F10  EF7D  F017         	goto	l8034
 10485  002F14                     l1993:
 10486                           
 10487                           ; BSR set to: 0
 10488  002F14  516C               	movf	___fldiv@aexp& (0+255),w,b
 10489  002F16  B4D8               	btfsc	status,2,c
 10490  002F18  EF90  F017         	goto	u8351
 10491  002F1C  EF92  F017         	goto	u8350
 10492  002F20                     u8351:
 10493  002F20  EFB6  F017         	goto	l8046
 10494  002F24                     u8350:
 10495  002F24                     
 10496                           ; BSR set to: 0
 10497  002F24  0E01               	movlw	1
 10498  002F26  262A               	addwf	___fldiv@b^0,f,c
 10499  002F28  0E00               	movlw	0
 10500  002F2A  222B               	addwfc	(___fldiv@b+1)^0,f,c
 10501  002F2C  222C               	addwfc	(___fldiv@b+2)^0,f,c
 10502  002F2E  222D               	addwfc	(___fldiv@b+3)^0,f,c
 10503  002F30                     
 10504                           ; BSR set to: 0
 10505  002F30  A02D               	btfss	(___fldiv@b+3)^0,0,c
 10506  002F32  EF9D  F017         	goto	u8361
 10507  002F36  EF9F  F017         	goto	u8360
 10508  002F3A                     u8361:
 10509  002F3A  EFB6  F017         	goto	l8046
 10510  002F3E                     u8360:
 10511  002F3E                     
 10512                           ; BSR set to: 0
 10513  002F3E  C02A  F032         	movff	___fldiv@b,??___fldiv
 10514  002F42  C02B  F033         	movff	___fldiv@b+1,??___fldiv+1
 10515  002F46  C02C  F034         	movff	___fldiv@b+2,??___fldiv+2
 10516  002F4A  C02D  F035         	movff	___fldiv@b+3,??___fldiv+3
 10517  002F4E  3435               	rlcf	(??___fldiv+3)^0,w,c
 10518  002F50  3235               	rrcf	(??___fldiv+3)^0,f,c
 10519  002F52  3234               	rrcf	(??___fldiv+2)^0,f,c
 10520  002F54  3233               	rrcf	(??___fldiv+1)^0,f,c
 10521  002F56  3232               	rrcf	??___fldiv^0,f,c
 10522  002F58  C032  F02A         	movff	??___fldiv,___fldiv@b
 10523  002F5C  C033  F02B         	movff	??___fldiv+1,___fldiv@b+1
 10524  002F60  C034  F02C         	movff	??___fldiv+2,___fldiv@b+2
 10525  002F64  C035  F02D         	movff	??___fldiv+3,___fldiv@b+3
 10526  002F68                     
 10527                           ; BSR set to: 0
 10528  002F68  4B65               	infsnz	___fldiv@new_exp& (0+255),f,b
 10529  002F6A  2B66               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 10530  002F6C                     l8046:
 10531                           
 10532                           ; BSR set to: 0
 10533  002F6C  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 10534  002F6E  EFC1  F017         	goto	u8371
 10535  002F72  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 10536  002F74  E108               	bnz	u8370
 10537  002F76  2965               	incf	___fldiv@new_exp& (0+255),w,b
 10538  002F78  A0D8               	btfss	status,0,c
 10539  002F7A  EFC1  F017         	goto	u8371
 10540  002F7E  EFC3  F017         	goto	u8370
 10541  002F82                     u8371:
 10542  002F82  EFCE  F017         	goto	l8050
 10543  002F86                     u8370:
 10544  002F86                     
 10545                           ; BSR set to: 0
 10546  002F86  0E00               	movlw	0
 10547  002F88  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
 10548  002F8A  6965               	setf	___fldiv@new_exp& (0+255),b
 10549  002F8C  0E00               	movlw	0
 10550  002F8E  6E2A               	movwf	___fldiv@b^0,c
 10551  002F90  0E00               	movlw	0
 10552  002F92  6E2B               	movwf	(___fldiv@b+1)^0,c
 10553  002F94  0E00               	movlw	0
 10554  002F96  6E2C               	movwf	(___fldiv@b+2)^0,c
 10555  002F98  0E00               	movlw	0
 10556  002F9A  6E2D               	movwf	(___fldiv@b+3)^0,c
 10557  002F9C                     l8050:
 10558                           
 10559                           ; BSR set to: 0
 10560  002F9C  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 10561  002F9E  EFDB  F017         	goto	u8380
 10562  002FA2  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 10563  002FA4  E106               	bnz	u8381
 10564  002FA6  0565               	decf	___fldiv@new_exp& (0+255),w,b
 10565  002FA8  B0D8               	btfsc	status,0,c
 10566  002FAA  EFD9  F017         	goto	u8381
 10567  002FAE  EFDB  F017         	goto	u8380
 10568  002FB2                     u8381:
 10569  002FB2  EFE9  F017         	goto	l8054
 10570  002FB6                     u8380:
 10571  002FB6                     
 10572                           ; BSR set to: 0
 10573  002FB6  0E00               	movlw	0
 10574  002FB8  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
 10575  002FBA  0E00               	movlw	0
 10576  002FBC  6F65               	movwf	___fldiv@new_exp& (0+255),b
 10577  002FBE  0E00               	movlw	0
 10578  002FC0  6E2A               	movwf	___fldiv@b^0,c
 10579  002FC2  0E00               	movlw	0
 10580  002FC4  6E2B               	movwf	(___fldiv@b+1)^0,c
 10581  002FC6  0E00               	movlw	0
 10582  002FC8  6E2C               	movwf	(___fldiv@b+2)^0,c
 10583  002FCA  0E00               	movlw	0
 10584  002FCC  6E2D               	movwf	(___fldiv@b+3)^0,c
 10585  002FCE  0E00               	movlw	0
 10586  002FD0  6F64               	movwf	___fldiv@sign& (0+255),b
 10587  002FD2                     l8054:
 10588                           
 10589                           ; BSR set to: 0
 10590  002FD2  C065  F06B         	movff	___fldiv@new_exp,___fldiv@bexp
 10591  002FD6                     
 10592                           ; BSR set to: 0
 10593  002FD6  A16B               	btfss	___fldiv@bexp& (0+255),0,b
 10594  002FD8  EFF0  F017         	goto	u8391
 10595  002FDC  EFF2  F017         	goto	u8390
 10596  002FE0                     u8391:
 10597  002FE0  EFF5  F017         	goto	l8060
 10598  002FE4                     u8390:
 10599  002FE4                     
 10600                           ; BSR set to: 0
 10601  002FE4  8E2C               	bsf	(___fldiv@b+2)^0,7,c
 10602  002FE6  EFF6  F017         	goto	l8062
 10603  002FEA                     l8060:
 10604                           
 10605                           ; BSR set to: 0
 10606  002FEA  9E2C               	bcf	(___fldiv@b+2)^0,7,c
 10607  002FEC                     l8062:
 10608                           
 10609                           ; BSR set to: 0
 10610  002FEC  90D8               	bcf	status,0,c
 10611  002FEE  316B               	rrcf	___fldiv@bexp& (0+255),w,b
 10612  002FF0  6E2D               	movwf	(___fldiv@b+3)^0,c
 10613  002FF2  EFAC  F016         	goto	l7976
 10614  002FF6                     l1980:
 10615                           
 10616                           ; BSR set to: 0
 10617  002FF6  0012               	return		;funcret
 10618  002FF8                     __end_of___fldiv:
 10619                           	callstack 0
 10620                           
 10621 ;; *************** function _PWM6_LoadDutyValue *****************
 10622 ;; Defined at:
 10623 ;;		line 74 in file "mcc_generated_files/pwm6.c"
 10624 ;; Parameters:    Size  Location     Type
 10625 ;;  dutyValue       2   19[COMRAM] unsigned short 
 10626 ;; Auto vars:     Size  Location     Type
 10627 ;;		None
 10628 ;; Return value:  Size  Location     Type
 10629 ;;                  1    wreg      void 
 10630 ;; Registers used:
 10631 ;;		wreg, status,2, status,0
 10632 ;; Tracked objects:
 10633 ;;		On entry : 0/0
 10634 ;;		On exit  : 0/0
 10635 ;;		Unchanged: 0/0
 10636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10637 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10639 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10640 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10641 ;;Total ram usage:        4 bytes
 10642 ;; Hardware stack levels used: 1
 10643 ;; Hardware stack levels required when called: 8
 10644 ;; This function calls:
 10645 ;;		Nothing
 10646 ;; This function is called by:
 10647 ;;		_setSteering
 10648 ;; This function uses a non-reentrant model
 10649 ;;
 10650                           
 10651                           	psect	text41
 10652  005E6C                     __ptext41:
 10653                           	callstack 0
 10654  005E6C                     _PWM6_LoadDutyValue:
 10655                           	callstack 19
 10656  005E6C                     
 10657                           ;mcc_generated_files/pwm6.c: 74:  void PWM6_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm6.c: 75:  {;mcc_generated_files/pwm6.c: 77:      PWM6DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 10658  005E6C  C014  F016         	movff	PWM6_LoadDutyValue@dutyValue,??_PWM6_LoadDutyValue
 10659  005E70  C015  F017         	movff	PWM6_LoadDutyValue@dutyValue+1,??_PWM6_LoadDutyValue+1
 10660  005E74  90D8               	bcf	status,0,c
 10661  005E76  3217               	rrcf	(??_PWM6_LoadDutyValue+1)^0,f,c
 10662  005E78  3216               	rrcf	??_PWM6_LoadDutyValue^0,f,c
 10663  005E7A  90D8               	bcf	status,0,c
 10664  005E7C  3217               	rrcf	(??_PWM6_LoadDutyValue+1)^0,f,c
 10665  005E7E  3216               	rrcf	??_PWM6_LoadDutyValue^0,f,c
 10666  005E80  5016               	movf	??_PWM6_LoadDutyValue^0,w,c
 10667  005E82  6E69               	movwf	105,c	;volatile
 10668                           
 10669                           ;mcc_generated_files/pwm6.c: 80:      PWM6DCL = (dutyValue & 0x0003)<<6;
 10670  005E84  C014  F016         	movff	PWM6_LoadDutyValue@dutyValue,??_PWM6_LoadDutyValue
 10671  005E88  0E03               	movlw	3
 10672  005E8A  1616               	andwf	??_PWM6_LoadDutyValue^0,f,c
 10673  005E8C  0E06               	movlw	6
 10674  005E8E  6E17               	movwf	(??_PWM6_LoadDutyValue+1)^0,c
 10675  005E90                     u10185:
 10676  005E90  90D8               	bcf	status,0,c
 10677  005E92  3616               	rlcf	??_PWM6_LoadDutyValue^0,f,c
 10678  005E94  2E17               	decfsz	(??_PWM6_LoadDutyValue+1)^0,f,c
 10679  005E96  EF48  F02F         	goto	u10185
 10680  005E9A  5016               	movf	??_PWM6_LoadDutyValue^0,w,c
 10681  005E9C  6E68               	movwf	104,c	;volatile
 10682  005E9E  0012               	return		;funcret
 10683  005EA0                     __end_of_PWM6_LoadDutyValue:
 10684                           	callstack 0
 10685                           
 10686 ;; *************** function _PWM5_LoadDutyValue *****************
 10687 ;; Defined at:
 10688 ;;		line 74 in file "mcc_generated_files/pwm5.c"
 10689 ;; Parameters:    Size  Location     Type
 10690 ;;  dutyValue       2   19[COMRAM] unsigned short 
 10691 ;; Auto vars:     Size  Location     Type
 10692 ;;		None
 10693 ;; Return value:  Size  Location     Type
 10694 ;;                  1    wreg      void 
 10695 ;; Registers used:
 10696 ;;		wreg, status,2, status,0
 10697 ;; Tracked objects:
 10698 ;;		On entry : 0/0
 10699 ;;		On exit  : 0/0
 10700 ;;		Unchanged: 0/0
 10701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10702 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10704 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10705 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10706 ;;Total ram usage:        4 bytes
 10707 ;; Hardware stack levels used: 1
 10708 ;; Hardware stack levels required when called: 8
 10709 ;; This function calls:
 10710 ;;		Nothing
 10711 ;; This function is called by:
 10712 ;;		_setSteering
 10713 ;; This function uses a non-reentrant model
 10714 ;;
 10715                           
 10716                           	psect	text42
 10717  005EA0                     __ptext42:
 10718                           	callstack 0
 10719  005EA0                     _PWM5_LoadDutyValue:
 10720                           	callstack 19
 10721  005EA0                     
 10722                           ;mcc_generated_files/pwm5.c: 74:  void PWM5_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm5.c: 75:  {;mcc_generated_files/pwm5.c: 77:      PWM5DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 10723  005EA0  C014  F016         	movff	PWM5_LoadDutyValue@dutyValue,??_PWM5_LoadDutyValue
 10724  005EA4  C015  F017         	movff	PWM5_LoadDutyValue@dutyValue+1,??_PWM5_LoadDutyValue+1
 10725  005EA8  90D8               	bcf	status,0,c
 10726  005EAA  3217               	rrcf	(??_PWM5_LoadDutyValue+1)^0,f,c
 10727  005EAC  3216               	rrcf	??_PWM5_LoadDutyValue^0,f,c
 10728  005EAE  90D8               	bcf	status,0,c
 10729  005EB0  3217               	rrcf	(??_PWM5_LoadDutyValue+1)^0,f,c
 10730  005EB2  3216               	rrcf	??_PWM5_LoadDutyValue^0,f,c
 10731  005EB4  5016               	movf	??_PWM5_LoadDutyValue^0,w,c
 10732  005EB6  6E6D               	movwf	109,c	;volatile
 10733                           
 10734                           ;mcc_generated_files/pwm5.c: 80:      PWM5DCL = (dutyValue & 0x0003)<<6;
 10735  005EB8  C014  F016         	movff	PWM5_LoadDutyValue@dutyValue,??_PWM5_LoadDutyValue
 10736  005EBC  0E03               	movlw	3
 10737  005EBE  1616               	andwf	??_PWM5_LoadDutyValue^0,f,c
 10738  005EC0  0E06               	movlw	6
 10739  005EC2  6E17               	movwf	(??_PWM5_LoadDutyValue+1)^0,c
 10740  005EC4                     u10175:
 10741  005EC4  90D8               	bcf	status,0,c
 10742  005EC6  3616               	rlcf	??_PWM5_LoadDutyValue^0,f,c
 10743  005EC8  2E17               	decfsz	(??_PWM5_LoadDutyValue+1)^0,f,c
 10744  005ECA  EF62  F02F         	goto	u10175
 10745  005ECE  5016               	movf	??_PWM5_LoadDutyValue^0,w,c
 10746  005ED0  6E6C               	movwf	108,c	;volatile
 10747  005ED2  0012               	return		;funcret
 10748  005ED4                     __end_of_PWM5_LoadDutyValue:
 10749                           	callstack 0
 10750                           
 10751 ;; *************** function _calcSpeed *****************
 10752 ;; Defined at:
 10753 ;;		line 279 in file "main.c"
 10754 ;; Parameters:    Size  Location     Type
 10755 ;;		None
 10756 ;; Auto vars:     Size  Location     Type
 10757 ;;  speed           2   39[BANK0 ] short 
 10758 ;; Return value:  Size  Location     Type
 10759 ;;                  1    wreg      void 
 10760 ;; Registers used:
 10761 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10762 ;; Tracked objects:
 10763 ;;		On entry : 0/0
 10764 ;;		On exit  : 0/0
 10765 ;;		Unchanged: 0/0
 10766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10768 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10769 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10770 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10771 ;;Total ram usage:        6 bytes
 10772 ;; Hardware stack levels used: 1
 10773 ;; Hardware stack levels required when called: 9
 10774 ;; This function calls:
 10775 ;;		___fladd
 10776 ;;		___flmul
 10777 ;;		___fltol
 10778 ;;		___xxtofl
 10779 ;; This function is called by:
 10780 ;;		_loop
 10781 ;; This function uses a non-reentrant model
 10782 ;;
 10783                           
 10784                           	psect	text43
 10785  0032DE                     __ptext43:
 10786                           	callstack 0
 10787  0032DE                     _calcSpeed:
 10788                           	callstack 20
 10789  0032DE                     
 10790                           ;main.c: 280:     int16_t speed = 0;
 10791  0032DE  0E00               	movlw	0
 10792  0032E0  0100               	movlb	0	; () banked
 10793  0032E2  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
 10794  0032E4  0E00               	movlw	0
 10795  0032E6  6F87               	movwf	calcSpeed@speed& (0+255),b
 10796                           
 10797                           ;main.c: 282:     switch (driveMode) {
 10798  0032E8  EF3F  F01A         	goto	l9360
 10799  0032EC                     l9320:
 10800                           
 10801                           ; BSR set to: 0
 10802                           ;main.c: 284:             if (distFront > (30)) {
 10803  0032EC  51FE               	movf	(_distFront+1)& (0+255),w,b	;volatile
 10804  0032EE  E109               	bnz	u10590
 10805  0032F0  0E1F               	movlw	31
 10806  0032F2  5DFD               	subwf	_distFront& (0+255),w,b	;volatile
 10807  0032F4  A0D8               	btfss	status,0,c
 10808  0032F6  EF7F  F019         	goto	u10591
 10809  0032FA  EF81  F019         	goto	u10590
 10810  0032FE                     u10591:
 10811  0032FE  EF83  F019         	goto	l9324
 10812  003302                     u10590:
 10813  003302                     
 10814                           ; BSR set to: 0
 10815                           ;main.c: 285:                 driveMode = Straight;
 10816  003302  0E00               	movlw	0
 10817  003304  6FFC               	movwf	_driveMode& (0+255),b
 10818  003306                     l9324:
 10819                           
 10820                           ; BSR set to: 0
 10821                           ;main.c: 287:             if (setSpeed > (115)) {
 10822  003306  BFF2               	btfsc	(_setSpeed+1)& (0+255),7,b
 10823  003308  EF8F  F019         	goto	u10601
 10824  00330C  51F2               	movf	(_setSpeed+1)& (0+255),w,b
 10825  00330E  E109               	bnz	u10600
 10826  003310  0E74               	movlw	116
 10827  003312  5DF1               	subwf	_setSpeed& (0+255),w,b
 10828  003314  A0D8               	btfss	status,0,c
 10829  003316  EF8F  F019         	goto	u10601
 10830  00331A  EF91  F019         	goto	u10600
 10831  00331E                     u10601:
 10832  00331E  EF64  F01A         	goto	l9362
 10833  003322                     u10600:
 10834  003322                     
 10835                           ; BSR set to: 0
 10836                           ;main.c: 288:                 if (setSpeed > 0) {
 10837  003322  BFF2               	btfsc	(_setSpeed+1)& (0+255),7,b
 10838  003324  EF9C  F019         	goto	u10611
 10839  003328  51F2               	movf	(_setSpeed+1)& (0+255),w,b
 10840  00332A  E108               	bnz	u10610
 10841  00332C  05F1               	decf	_setSpeed& (0+255),w,b
 10842  00332E  A0D8               	btfss	status,0,c
 10843  003330  EF9C  F019         	goto	u10611
 10844  003334  EF9E  F019         	goto	u10610
 10845  003338                     u10611:
 10846  003338  EFA8  F019         	goto	l9332
 10847  00333C                     u10610:
 10848  00333C                     
 10849                           ; BSR set to: 0
 10850                           ;main.c: 289:                     speed = setSpeed;
 10851  00333C  C0F1  F087         	movff	_setSpeed,calcSpeed@speed
 10852  003340  C0F2  F088         	movff	_setSpeed+1,calcSpeed@speed+1
 10853  003344                     
 10854                           ; BSR set to: 0
 10855                           ;main.c: 290:                     speed -= 2;
 10856  003344  0EFE               	movlw	254
 10857  003346  2787               	addwf	calcSpeed@speed& (0+255),f,b
 10858  003348  0EFF               	movlw	255
 10859  00334A  2388               	addwfc	(calcSpeed@speed+1)& (0+255),f,b
 10860                           
 10861                           ;main.c: 291:                 } else if (setSpeed > 0 && distFront < (15)) {
 10862  00334C  EF64  F01A         	goto	l9362
 10863  003350                     l9332:
 10864                           
 10865                           ; BSR set to: 0
 10866  003350  BFF2               	btfsc	(_setSpeed+1)& (0+255),7,b
 10867  003352  EFB3  F019         	goto	u10621
 10868  003356  51F2               	movf	(_setSpeed+1)& (0+255),w,b
 10869  003358  E108               	bnz	u10620
 10870  00335A  05F1               	decf	_setSpeed& (0+255),w,b
 10871  00335C  A0D8               	btfss	status,0,c
 10872  00335E  EFB3  F019         	goto	u10621
 10873  003362  EFB5  F019         	goto	u10620
 10874  003366                     u10621:
 10875  003366  EFCA  F019         	goto	l1345
 10876  00336A                     u10620:
 10877  00336A                     
 10878                           ; BSR set to: 0
 10879  00336A  51FE               	movf	(_distFront+1)& (0+255),w,b	;volatile
 10880  00336C  E107               	bnz	u10631
 10881  00336E  0E0F               	movlw	15
 10882  003370  5DFD               	subwf	_distFront& (0+255),w,b	;volatile
 10883  003372  B0D8               	btfsc	status,0,c
 10884  003374  EFBE  F019         	goto	u10631
 10885  003378  EFC0  F019         	goto	u10630
 10886  00337C                     u10631:
 10887  00337C  EFCA  F019         	goto	l1345
 10888  003380                     u10630:
 10889  003380                     
 10890                           ; BSR set to: 0
 10891                           ;main.c: 292:                     speed = setSpeed;
 10892  003380  C0F1  F087         	movff	_setSpeed,calcSpeed@speed
 10893  003384  C0F2  F088         	movff	_setSpeed+1,calcSpeed@speed+1
 10894  003388                     
 10895                           ; BSR set to: 0
 10896                           ;main.c: 293:                     speed -= 4;
 10897  003388  0EFC               	movlw	252
 10898  00338A  2787               	addwf	calcSpeed@speed& (0+255),f,b
 10899  00338C  0EFF               	movlw	255
 10900  00338E  2388               	addwfc	(calcSpeed@speed+1)& (0+255),f,b
 10901  003390  EF64  F01A         	goto	l9362
 10902  003394                     l1345:
 10903                           
 10904                           ; BSR set to: 0
 10905                           ;main.c: 296:             break;
 10906  003394  EF64  F01A         	goto	l9362
 10907  003398                     l9340:
 10908                           
 10909                           ; BSR set to: 0
 10910                           ;main.c: 298:             if (distFront < (30)) {
 10911  003398  51FE               	movf	(_distFront+1)& (0+255),w,b	;volatile
 10912  00339A  E107               	bnz	u10641
 10913  00339C  0E1E               	movlw	30
 10914  00339E  5DFD               	subwf	_distFront& (0+255),w,b	;volatile
 10915  0033A0  B0D8               	btfsc	status,0,c
 10916  0033A2  EFD5  F019         	goto	u10641
 10917  0033A6  EFD7  F019         	goto	u10640
 10918  0033AA                     u10641:
 10919  0033AA  EFD9  F019         	goto	l9344
 10920  0033AE                     u10640:
 10921  0033AE                     
 10922                           ; BSR set to: 0
 10923                           ;main.c: 299:                 driveMode = Brake;
 10924  0033AE  0E01               	movlw	1
 10925  0033B0  6FFC               	movwf	_driveMode& (0+255),b
 10926  0033B2                     l9344:
 10927                           
 10928                           ; BSR set to: 0
 10929                           ;main.c: 302:             if (distFront > (150)) {
 10930  0033B2  51FE               	movf	(_distFront+1)& (0+255),w,b	;volatile
 10931  0033B4  E109               	bnz	u10650
 10932  0033B6  0E97               	movlw	151
 10933  0033B8  5DFD               	subwf	_distFront& (0+255),w,b	;volatile
 10934  0033BA  A0D8               	btfss	status,0,c
 10935  0033BC  EFE2  F019         	goto	u10651
 10936  0033C0  EFE4  F019         	goto	u10650
 10937  0033C4                     u10651:
 10938  0033C4  EF2D  F01A         	goto	l9348
 10939  0033C8                     u10650:
 10940  0033C8                     
 10941                           ; BSR set to: 0
 10942                           ;main.c: 303:                 speed = (int16_t) ((0.85) * (distFront - (150)) + (275));
 10943  0033C8  0E00               	movlw	0
 10944  0033CA  6F71               	movwf	___fladd@a& (0+255),b
 10945  0033CC  0E80               	movlw	128
 10946  0033CE  6F72               	movwf	(___fladd@a+1)& (0+255),b
 10947  0033D0  0E89               	movlw	137
 10948  0033D2  6F73               	movwf	(___fladd@a+2)& (0+255),b
 10949  0033D4  0E43               	movlw	67
 10950  0033D6  6F74               	movwf	(___fladd@a+3)& (0+255),b
 10951  0033D8  0E9A               	movlw	154
 10952  0033DA  6E2E               	movwf	___flmul@a^0,c
 10953  0033DC  0E99               	movlw	153
 10954  0033DE  6E2F               	movwf	(___flmul@a+1)^0,c
 10955  0033E0  0E59               	movlw	89
 10956  0033E2  6E30               	movwf	(___flmul@a+2)^0,c
 10957  0033E4  0E3F               	movlw	63
 10958  0033E6  6E31               	movwf	(___flmul@a+3)^0,c
 10959  0033E8  0E6A               	movlw	106
 10960  0033EA  6F83               	movwf	??_calcSpeed& (0+255),b
 10961  0033EC  0EFF               	movlw	255
 10962  0033EE  6F84               	movwf	(??_calcSpeed+1)& (0+255),b
 10963  0033F0  C0FD  F085         	movff	_distFront,??_calcSpeed+2	;volatile
 10964  0033F4  C0FE  F086         	movff	_distFront+1,??_calcSpeed+3	;volatile
 10965  0033F8  5183               	movf	??_calcSpeed& (0+255),w,b
 10966  0033FA  2785               	addwf	(??_calcSpeed+2)& (0+255),f,b
 10967  0033FC  5184               	movf	(??_calcSpeed+1)& (0+255),w,b
 10968  0033FE  2386               	addwfc	(??_calcSpeed+3)& (0+255),f,b
 10969  003400  C085  F01C         	movff	??_calcSpeed+2,___xxtofl@val
 10970  003404  C086  F01D         	movff	??_calcSpeed+3,___xxtofl@val+1
 10971  003408  6A1E               	clrf	(___xxtofl@val+2)^0,c
 10972  00340A  6A1F               	clrf	(___xxtofl@val+3)^0,c
 10973  00340C  0E00               	movlw	0
 10974  00340E  EC7A  F01F         	call	___xxtofl
 10975  003412  C01C  F02A         	movff	?___xxtofl,___flmul@b
 10976  003416  C01D  F02B         	movff	?___xxtofl+1,___flmul@b+1
 10977  00341A  C01E  F02C         	movff	?___xxtofl+2,___flmul@b+2
 10978  00341E  C01F  F02D         	movff	?___xxtofl+3,___flmul@b+3
 10979  003422  EC06  F014         	call	___flmul	;wreg free
 10980  003426  C02A  F06D         	movff	?___flmul,___fladd@b
 10981  00342A  C02B  F06E         	movff	?___flmul+1,___fladd@b+1
 10982  00342E  C02C  F06F         	movff	?___flmul+2,___fladd@b+2
 10983  003432  C02D  F070         	movff	?___flmul+3,___fladd@b+3
 10984  003436  ECA5  F011         	call	___fladd	;wreg free
 10985  00343A  C06D  F079         	movff	?___fladd,___fltol@f1
 10986  00343E  C06E  F07A         	movff	?___fladd+1,___fltol@f1+1
 10987  003442  C06F  F07B         	movff	?___fladd+2,___fltol@f1+2
 10988  003446  C070  F07C         	movff	?___fladd+3,___fltol@f1+3
 10989  00344A  EC32  F024         	call	___fltol	;wreg free
 10990  00344E  C079  F087         	movff	?___fltol,calcSpeed@speed
 10991  003452  C07A  F088         	movff	?___fltol+1,calcSpeed@speed+1
 10992                           
 10993                           ;main.c: 304:             } else {
 10994  003456  EF64  F01A         	goto	l9362
 10995  00345A                     l9348:
 10996                           
 10997                           ; BSR set to: 0
 10998                           ;main.c: 305:                 speed = (275);
 10999  00345A  0E01               	movlw	1
 11000  00345C  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
 11001  00345E  0E13               	movlw	19
 11002  003460  6F87               	movwf	calcSpeed@speed& (0+255),b
 11003  003462  EF64  F01A         	goto	l9362
 11004  003466                     l9350:
 11005                           
 11006                           ; BSR set to: 0
 11007                           ;main.c: 311:             speed = (-125);
 11008  003466  0EFF               	movlw	255
 11009  003468  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
 11010  00346A  0E83               	movlw	131
 11011  00346C  6F87               	movwf	calcSpeed@speed& (0+255),b
 11012                           
 11013                           ;main.c: 312:             break;
 11014  00346E  EF64  F01A         	goto	l9362
 11015  003472                     l9354:
 11016                           
 11017                           ; BSR set to: 0
 11018                           ;main.c: 317:             speed = (200);
 11019  003472  0E00               	movlw	0
 11020  003474  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
 11021  003476  0EC8               	movlw	200
 11022  003478  6F87               	movwf	calcSpeed@speed& (0+255),b
 11023                           
 11024                           ;main.c: 318:             break;
 11025  00347A  EF64  F01A         	goto	l9362
 11026  00347E                     l9360:
 11027                           
 11028                           ; BSR set to: 0
 11029  00347E  51FC               	movf	_driveMode& (0+255),w,b
 11030  003480  6F83               	movwf	??_calcSpeed& (0+255),b
 11031  003482  6B84               	clrf	(??_calcSpeed+1)& (0+255),b
 11032                           
 11033                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11034                           ; Switch size 1, requested type "simple"
 11035                           ; Number of cases is 1, Range of values is 0 to 0
 11036                           ; switch strategies available:
 11037                           ; Name         Instructions Cycles
 11038                           ; simple_byte            4     3 (average)
 11039                           ;	Chosen strategy is simple_byte
 11040  003484  5184               	movf	(??_calcSpeed+1)& (0+255),w,b
 11041  003486  0A00               	xorlw	0	; case 0
 11042  003488  B4D8               	btfsc	status,2,c
 11043  00348A  EF49  F01A         	goto	l9614
 11044  00348E  EF64  F01A         	goto	l9362
 11045  003492                     l9614:
 11046                           
 11047                           ; BSR set to: 0
 11048                           ; Switch size 1, requested type "simple"
 11049                           ; Number of cases is 6, Range of values is 0 to 5
 11050                           ; switch strategies available:
 11051                           ; Name         Instructions Cycles
 11052                           ; simple_byte           19    10 (average)
 11053                           ;	Chosen strategy is simple_byte
 11054  003492  5183               	movf	??_calcSpeed& (0+255),w,b
 11055  003494  0A00               	xorlw	0	; case 0
 11056  003496  B4D8               	btfsc	status,2,c
 11057  003498  EFCC  F019         	goto	l9340
 11058  00349C  0A01               	xorlw	1	; case 1
 11059  00349E  B4D8               	btfsc	status,2,c
 11060  0034A0  EF76  F019         	goto	l9320
 11061  0034A4  0A03               	xorlw	3	; case 2
 11062  0034A6  B4D8               	btfsc	status,2,c
 11063  0034A8  EF33  F01A         	goto	l9350
 11064  0034AC  0A01               	xorlw	1	; case 3
 11065  0034AE  B4D8               	btfsc	status,2,c
 11066  0034B0  EF33  F01A         	goto	l9350
 11067  0034B4  0A07               	xorlw	7	; case 4
 11068  0034B6  B4D8               	btfsc	status,2,c
 11069  0034B8  EF39  F01A         	goto	l9354
 11070  0034BC  0A01               	xorlw	1	; case 5
 11071  0034BE  B4D8               	btfsc	status,2,c
 11072  0034C0  EF39  F01A         	goto	l9354
 11073  0034C4  EF64  F01A         	goto	l9362
 11074  0034C8                     l9362:
 11075                           
 11076                           ;main.c: 324:     if (speed > (400)) {
 11077  0034C8  0100               	movlb	0	; () banked
 11078  0034CA  BF88               	btfsc	(calcSpeed@speed+1)& (0+255),7,b
 11079  0034CC  EF71  F01A         	goto	u10661
 11080  0034D0  0E91               	movlw	145
 11081  0034D2  5D87               	subwf	calcSpeed@speed& (0+255),w,b
 11082  0034D4  0E01               	movlw	1
 11083  0034D6  5988               	subwfb	(calcSpeed@speed+1)& (0+255),w,b
 11084  0034D8  A0D8               	btfss	status,0,c
 11085  0034DA  EF71  F01A         	goto	u10661
 11086  0034DE  EF73  F01A         	goto	u10660
 11087  0034E2                     u10661:
 11088  0034E2  EF77  F01A         	goto	l9366
 11089  0034E6                     u10660:
 11090  0034E6                     
 11091                           ; BSR set to: 0
 11092                           ;main.c: 325:         speed = (400);
 11093  0034E6  0E01               	movlw	1
 11094  0034E8  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
 11095  0034EA  0E90               	movlw	144
 11096  0034EC  6F87               	movwf	calcSpeed@speed& (0+255),b
 11097  0034EE                     l9366:
 11098                           
 11099                           ; BSR set to: 0
 11100                           ;main.c: 327:     if (speed < (-250)) {
 11101  0034EE  AF88               	btfss	(calcSpeed@speed+1)& (0+255),7,b
 11102  0034F0  EF83  F01A         	goto	u10671
 11103  0034F4  0E06               	movlw	6
 11104  0034F6  5D87               	subwf	calcSpeed@speed& (0+255),w,b
 11105  0034F8  0EFF               	movlw	255
 11106  0034FA  5988               	subwfb	(calcSpeed@speed+1)& (0+255),w,b
 11107  0034FC  B0D8               	btfsc	status,0,c
 11108  0034FE  EF83  F01A         	goto	u10671
 11109  003502  EF85  F01A         	goto	u10670
 11110  003506                     u10671:
 11111  003506  EF89  F01A         	goto	l9370
 11112  00350A                     u10670:
 11113  00350A                     
 11114                           ; BSR set to: 0
 11115                           ;main.c: 328:         speed = (-250);
 11116  00350A  0EFF               	movlw	255
 11117  00350C  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
 11118  00350E  0E06               	movlw	6
 11119  003510  6F87               	movwf	calcSpeed@speed& (0+255),b
 11120  003512                     l9370:
 11121                           
 11122                           ; BSR set to: 0
 11123                           ;main.c: 330:     setSpeed = speed;
 11124  003512  C087  F0F1         	movff	calcSpeed@speed,_setSpeed
 11125  003516  C088  F0F2         	movff	calcSpeed@speed+1,_setSpeed+1
 11126  00351A                     
 11127                           ; BSR set to: 0
 11128  00351A  0012               	return		;funcret
 11129  00351C                     __end_of_calcSpeed:
 11130                           	callstack 0
 11131                           
 11132 ;; *************** function ___fladd *****************
 11133 ;; Defined at:
 11134 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
 11135 ;; Parameters:    Size  Location     Type
 11136 ;;  b               4   13[BANK0 ] void 
 11137 ;;  a               4   17[BANK0 ] void 
 11138 ;; Auto vars:     Size  Location     Type
 11139 ;;  grs             1   24[BANK0 ] unsigned char 
 11140 ;;  bexp            1   23[BANK0 ] unsigned char 
 11141 ;;  aexp            1   22[BANK0 ] unsigned char 
 11142 ;;  signs           1   21[BANK0 ] unsigned char 
 11143 ;; Return value:  Size  Location     Type
 11144 ;;                  4   13[BANK0 ] unsigned char 
 11145 ;; Registers used:
 11146 ;;		wreg, status,2, status,0
 11147 ;; Tracked objects:
 11148 ;;		On entry : 0/0
 11149 ;;		On exit  : 0/0
 11150 ;;		Unchanged: 0/0
 11151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11152 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11153 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11154 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11155 ;;      Totals:         4      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11156 ;;Total ram usage:       16 bytes
 11157 ;; Hardware stack levels used: 1
 11158 ;; Hardware stack levels required when called: 8
 11159 ;; This function calls:
 11160 ;;		Nothing
 11161 ;; This function is called by:
 11162 ;;		_calcSpeed
 11163 ;;		___flsub
 11164 ;;		_efgtoa
 11165 ;; This function uses a non-reentrant model
 11166 ;;
 11167                           
 11168                           	psect	text44
 11169  00234A                     __ptext44:
 11170                           	callstack 0
 11171  00234A                     ___fladd:
 11172                           	callstack 15
 11173  00234A  0100               	movlb	0	; () banked
 11174  00234C  5170               	movf	(___fladd@b+3)& (0+255),w,b
 11175  00234E  0B80               	andlw	128
 11176  002350  6F75               	movwf	___fladd@signs& (0+255),b
 11177  002352  5170               	movf	(___fladd@b+3)& (0+255),w,b
 11178  002354  2570               	addwf	(___fladd@b+3)& (0+255),w,b
 11179  002356  6F77               	movwf	___fladd@bexp& (0+255),b
 11180  002358                     
 11181                           ; BSR set to: 0
 11182  002358  AF6F               	btfss	(___fladd@b+2)& (0+255),7,b
 11183  00235A  EFB1  F011         	goto	u7611
 11184  00235E  EFB3  F011         	goto	u7610
 11185  002362                     u7611:
 11186  002362  EFB4  F011         	goto	l7634
 11187  002366                     u7610:
 11188  002366                     
 11189                           ; BSR set to: 0
 11190  002366  8177               	bsf	___fladd@bexp& (0+255),0,b
 11191  002368                     l7634:
 11192                           
 11193                           ; BSR set to: 0
 11194  002368  5177               	movf	___fladd@bexp& (0+255),w,b
 11195  00236A  B4D8               	btfsc	status,2,c
 11196  00236C  EFBA  F011         	goto	u7621
 11197  002370  EFBC  F011         	goto	u7620
 11198  002374                     u7621:
 11199  002374  EFD1  F011         	goto	l7644
 11200  002378                     u7620:
 11201  002378                     
 11202                           ; BSR set to: 0
 11203  002378  2977               	incf	___fladd@bexp& (0+255),w,b
 11204  00237A  A4D8               	btfss	status,2,c
 11205  00237C  EFC2  F011         	goto	u7631
 11206  002380  EFC4  F011         	goto	u7630
 11207  002384                     u7631:
 11208  002384  EFCC  F011         	goto	l7640
 11209  002388                     u7630:
 11210  002388                     
 11211                           ; BSR set to: 0
 11212  002388  0E00               	movlw	0
 11213  00238A  6F6D               	movwf	___fladd@b& (0+255),b
 11214  00238C  0E00               	movlw	0
 11215  00238E  6F6E               	movwf	(___fladd@b+1)& (0+255),b
 11216  002390  0E00               	movlw	0
 11217  002392  6F6F               	movwf	(___fladd@b+2)& (0+255),b
 11218  002394  0E00               	movlw	0
 11219  002396  6F70               	movwf	(___fladd@b+3)& (0+255),b
 11220  002398                     l7640:
 11221                           
 11222                           ; BSR set to: 0
 11223  002398  8F6F               	bsf	(___fladd@b+2)& (0+255),7,b
 11224  00239A                     
 11225                           ; BSR set to: 0
 11226  00239A  0E00               	movlw	0
 11227  00239C  6F70               	movwf	(___fladd@b+3)& (0+255),b
 11228  00239E  EFD9  F011         	goto	l7646
 11229  0023A2                     l7644:
 11230                           
 11231                           ; BSR set to: 0
 11232  0023A2  0E00               	movlw	0
 11233  0023A4  6F6D               	movwf	___fladd@b& (0+255),b
 11234  0023A6  0E00               	movlw	0
 11235  0023A8  6F6E               	movwf	(___fladd@b+1)& (0+255),b
 11236  0023AA  0E00               	movlw	0
 11237  0023AC  6F6F               	movwf	(___fladd@b+2)& (0+255),b
 11238  0023AE  0E00               	movlw	0
 11239  0023B0  6F70               	movwf	(___fladd@b+3)& (0+255),b
 11240  0023B2                     l7646:
 11241                           
 11242                           ; BSR set to: 0
 11243  0023B2  5174               	movf	(___fladd@a+3)& (0+255),w,b
 11244  0023B4  0B80               	andlw	128
 11245  0023B6  6F76               	movwf	___fladd@aexp& (0+255),b
 11246  0023B8                     
 11247                           ; BSR set to: 0
 11248  0023B8  5175               	movf	___fladd@signs& (0+255),w,b
 11249  0023BA  1976               	xorwf	___fladd@aexp& (0+255),w,b
 11250  0023BC  B4D8               	btfsc	status,2,c
 11251  0023BE  EFE3  F011         	goto	u7641
 11252  0023C2  EFE5  F011         	goto	u7640
 11253  0023C6                     u7641:
 11254  0023C6  EFE6  F011         	goto	l7652
 11255  0023CA                     u7640:
 11256  0023CA                     
 11257                           ; BSR set to: 0
 11258  0023CA  8D75               	bsf	___fladd@signs& (0+255),6,b
 11259  0023CC                     l7652:
 11260                           
 11261                           ; BSR set to: 0
 11262  0023CC  5174               	movf	(___fladd@a+3)& (0+255),w,b
 11263  0023CE  2574               	addwf	(___fladd@a+3)& (0+255),w,b
 11264  0023D0  6F76               	movwf	___fladd@aexp& (0+255),b
 11265  0023D2                     
 11266                           ; BSR set to: 0
 11267  0023D2  AF73               	btfss	(___fladd@a+2)& (0+255),7,b
 11268  0023D4  EFEE  F011         	goto	u7651
 11269  0023D8  EFF0  F011         	goto	u7650
 11270  0023DC                     u7651:
 11271  0023DC  EFF1  F011         	goto	l7658
 11272  0023E0                     u7650:
 11273  0023E0                     
 11274                           ; BSR set to: 0
 11275  0023E0  8176               	bsf	___fladd@aexp& (0+255),0,b
 11276  0023E2                     l7658:
 11277                           
 11278                           ; BSR set to: 0
 11279  0023E2  5176               	movf	___fladd@aexp& (0+255),w,b
 11280  0023E4  B4D8               	btfsc	status,2,c
 11281  0023E6  EFF7  F011         	goto	u7661
 11282  0023EA  EFF9  F011         	goto	u7660
 11283  0023EE                     u7661:
 11284  0023EE  EF0E  F012         	goto	l7668
 11285  0023F2                     u7660:
 11286  0023F2                     
 11287                           ; BSR set to: 0
 11288  0023F2  2976               	incf	___fladd@aexp& (0+255),w,b
 11289  0023F4  A4D8               	btfss	status,2,c
 11290  0023F6  EFFF  F011         	goto	u7671
 11291  0023FA  EF01  F012         	goto	u7670
 11292  0023FE                     u7671:
 11293  0023FE  EF09  F012         	goto	l7664
 11294  002402                     u7670:
 11295  002402                     
 11296                           ; BSR set to: 0
 11297  002402  0E00               	movlw	0
 11298  002404  6F71               	movwf	___fladd@a& (0+255),b
 11299  002406  0E00               	movlw	0
 11300  002408  6F72               	movwf	(___fladd@a+1)& (0+255),b
 11301  00240A  0E00               	movlw	0
 11302  00240C  6F73               	movwf	(___fladd@a+2)& (0+255),b
 11303  00240E  0E00               	movlw	0
 11304  002410  6F74               	movwf	(___fladd@a+3)& (0+255),b
 11305  002412                     l7664:
 11306                           
 11307                           ; BSR set to: 0
 11308  002412  8F73               	bsf	(___fladd@a+2)& (0+255),7,b
 11309  002414                     
 11310                           ; BSR set to: 0
 11311  002414  0E00               	movlw	0
 11312  002416  6F74               	movwf	(___fladd@a+3)& (0+255),b
 11313  002418  EF16  F012         	goto	l7670
 11314  00241C                     l7668:
 11315                           
 11316                           ; BSR set to: 0
 11317  00241C  0E00               	movlw	0
 11318  00241E  6F71               	movwf	___fladd@a& (0+255),b
 11319  002420  0E00               	movlw	0
 11320  002422  6F72               	movwf	(___fladd@a+1)& (0+255),b
 11321  002424  0E00               	movlw	0
 11322  002426  6F73               	movwf	(___fladd@a+2)& (0+255),b
 11323  002428  0E00               	movlw	0
 11324  00242A  6F74               	movwf	(___fladd@a+3)& (0+255),b
 11325  00242C                     l7670:
 11326                           
 11327                           ; BSR set to: 0
 11328  00242C  5177               	movf	___fladd@bexp& (0+255),w,b
 11329  00242E  5D76               	subwf	___fladd@aexp& (0+255),w,b
 11330  002430  B0D8               	btfsc	status,0,c
 11331  002432  EF1D  F012         	goto	u7681
 11332  002436  EF1F  F012         	goto	u7680
 11333  00243A                     u7681:
 11334  00243A  EF46  F012         	goto	l7706
 11335  00243E                     u7680:
 11336  00243E                     
 11337                           ; BSR set to: 0
 11338  00243E  AD75               	btfss	___fladd@signs& (0+255),6,b
 11339  002440  EF24  F012         	goto	u7691
 11340  002444  EF26  F012         	goto	u7690
 11341  002448                     u7691:
 11342  002448  EF28  F012         	goto	l7676
 11343  00244C                     u7690:
 11344  00244C                     
 11345                           ; BSR set to: 0
 11346  00244C  0E80               	movlw	128
 11347  00244E  1B75               	xorwf	___fladd@signs& (0+255),f,b
 11348  002450                     l7676:
 11349                           
 11350                           ; BSR set to: 0
 11351  002450  C077  F078         	movff	___fladd@bexp,___fladd@grs
 11352  002454                     
 11353                           ; BSR set to: 0
 11354  002454  C076  F077         	movff	___fladd@aexp,___fladd@bexp
 11355  002458                     
 11356                           ; BSR set to: 0
 11357  002458  C078  F076         	movff	___fladd@grs,___fladd@aexp
 11358  00245C                     
 11359                           ; BSR set to: 0
 11360  00245C  C06D  F078         	movff	___fladd@b,___fladd@grs
 11361  002460                     
 11362                           ; BSR set to: 0
 11363  002460  C071  F06D         	movff	___fladd@a,___fladd@b
 11364  002464                     
 11365                           ; BSR set to: 0
 11366  002464  C078  F071         	movff	___fladd@grs,___fladd@a
 11367  002468                     
 11368                           ; BSR set to: 0
 11369  002468  C06E  F078         	movff	___fladd@b+1,___fladd@grs
 11370  00246C                     
 11371                           ; BSR set to: 0
 11372  00246C  C072  F06E         	movff	___fladd@a+1,___fladd@b+1
 11373  002470                     
 11374                           ; BSR set to: 0
 11375  002470  C078  F072         	movff	___fladd@grs,___fladd@a+1
 11376  002474                     
 11377                           ; BSR set to: 0
 11378  002474  C06F  F078         	movff	___fladd@b+2,___fladd@grs
 11379  002478                     
 11380                           ; BSR set to: 0
 11381  002478  C073  F06F         	movff	___fladd@a+2,___fladd@b+2
 11382  00247C                     
 11383                           ; BSR set to: 0
 11384  00247C  C078  F073         	movff	___fladd@grs,___fladd@a+2
 11385  002480                     
 11386                           ; BSR set to: 0
 11387  002480  C070  F078         	movff	___fladd@b+3,___fladd@grs
 11388  002484                     
 11389                           ; BSR set to: 0
 11390  002484  C074  F070         	movff	___fladd@a+3,___fladd@b+3
 11391  002488                     
 11392                           ; BSR set to: 0
 11393  002488  C078  F074         	movff	___fladd@grs,___fladd@a+3
 11394  00248C                     l7706:
 11395                           
 11396                           ; BSR set to: 0
 11397  00248C  0E00               	movlw	0
 11398  00248E  6F78               	movwf	___fladd@grs& (0+255),b
 11399  002490                     
 11400                           ; BSR set to: 0
 11401  002490  5177               	movf	___fladd@bexp& (0+255),w,b
 11402  002492  C076  F036         	movff	___fladd@aexp,??___fladd
 11403  002496  6A37               	clrf	(??___fladd+1)^0,c
 11404  002498  5E36               	subwf	??___fladd^0,f,c
 11405  00249A  0E00               	movlw	0
 11406  00249C  5A37               	subwfb	(??___fladd+1)^0,f,c
 11407  00249E  BE37               	btfsc	(??___fladd+1)^0,7,c
 11408  0024A0  EF5B  F012         	goto	u7701
 11409  0024A4  5037               	movf	(??___fladd+1)^0,w,c
 11410  0024A6  E109               	bnz	u7700
 11411  0024A8  0E1A               	movlw	26
 11412  0024AA  5C36               	subwf	??___fladd^0,w,c
 11413  0024AC  A0D8               	btfss	status,0,c
 11414  0024AE  EF5B  F012         	goto	u7701
 11415  0024B2  EF5D  F012         	goto	u7700
 11416  0024B6                     u7701:
 11417  0024B6  EF94  F012         	goto	l1927
 11418  0024BA                     u7700:
 11419  0024BA                     
 11420                           ; BSR set to: 0
 11421  0024BA  516D               	movf	___fladd@b& (0+255),w,b
 11422  0024BC  116E               	iorwf	(___fladd@b+1)& (0+255),w,b
 11423  0024BE  116F               	iorwf	(___fladd@b+2)& (0+255),w,b
 11424  0024C0  1170               	iorwf	(___fladd@b+3)& (0+255),w,b
 11425  0024C2  A4D8               	btfss	status,2,c
 11426  0024C4  EF66  F012         	goto	u7711
 11427  0024C8  EF69  F012         	goto	u7710
 11428  0024CC                     u7711:
 11429  0024CC  0E01               	movlw	1
 11430  0024CE  EF6A  F012         	goto	u7720
 11431  0024D2                     u7710:
 11432  0024D2  0E00               	movlw	0
 11433  0024D4                     u7720:
 11434  0024D4  6F78               	movwf	___fladd@grs& (0+255),b
 11435  0024D6                     
 11436                           ; BSR set to: 0
 11437  0024D6  0E00               	movlw	0
 11438  0024D8  6F6D               	movwf	___fladd@b& (0+255),b
 11439  0024DA  0E00               	movlw	0
 11440  0024DC  6F6E               	movwf	(___fladd@b+1)& (0+255),b
 11441  0024DE  0E00               	movlw	0
 11442  0024E0  6F6F               	movwf	(___fladd@b+2)& (0+255),b
 11443  0024E2  0E00               	movlw	0
 11444  0024E4  6F70               	movwf	(___fladd@b+3)& (0+255),b
 11445  0024E6                     
 11446                           ; BSR set to: 0
 11447  0024E6  C076  F077         	movff	___fladd@aexp,___fladd@bexp
 11448  0024EA  EF9D  F012         	goto	l1926
 11449  0024EE                     l1928:
 11450                           
 11451                           ; BSR set to: 0
 11452  0024EE  A178               	btfss	___fladd@grs& (0+255),0,b
 11453  0024F0  EF7C  F012         	goto	u7731
 11454  0024F4  EF7E  F012         	goto	u7730
 11455  0024F8                     u7731:
 11456  0024F8  EF84  F012         	goto	l7718
 11457  0024FC                     u7730:
 11458  0024FC                     
 11459                           ; BSR set to: 0
 11460  0024FC  90D8               	bcf	status,0,c
 11461  0024FE  3178               	rrcf	___fladd@grs& (0+255),w,b
 11462  002500  0901               	iorlw	1
 11463  002502  6F78               	movwf	___fladd@grs& (0+255),b
 11464  002504  EF86  F012         	goto	l7720
 11465  002508                     l7718:
 11466                           
 11467                           ; BSR set to: 0
 11468  002508  90D8               	bcf	status,0,c
 11469  00250A  3378               	rrcf	___fladd@grs& (0+255),f,b
 11470  00250C                     l7720:
 11471                           
 11472                           ; BSR set to: 0
 11473  00250C  A16D               	btfss	___fladd@b& (0+255),0,b
 11474  00250E  EF8B  F012         	goto	u7741
 11475  002512  EF8D  F012         	goto	u7740
 11476  002516                     u7741:
 11477  002516  EF8E  F012         	goto	l7724
 11478  00251A                     u7740:
 11479  00251A                     
 11480                           ; BSR set to: 0
 11481  00251A  8F78               	bsf	___fladd@grs& (0+255),7,b
 11482  00251C                     l7724:
 11483                           
 11484                           ; BSR set to: 0
 11485  00251C  3570               	rlcf	(___fladd@b+3)& (0+255),w,b
 11486  00251E  3370               	rrcf	(___fladd@b+3)& (0+255),f,b
 11487  002520  336F               	rrcf	(___fladd@b+2)& (0+255),f,b
 11488  002522  336E               	rrcf	(___fladd@b+1)& (0+255),f,b
 11489  002524  336D               	rrcf	___fladd@b& (0+255),f,b
 11490  002526                     
 11491                           ; BSR set to: 0
 11492  002526  2B77               	incf	___fladd@bexp& (0+255),f,b
 11493  002528                     l1927:
 11494                           
 11495                           ; BSR set to: 0
 11496  002528  5176               	movf	___fladd@aexp& (0+255),w,b
 11497  00252A  5D77               	subwf	___fladd@bexp& (0+255),w,b
 11498  00252C  A0D8               	btfss	status,0,c
 11499  00252E  EF9B  F012         	goto	u7751
 11500  002532  EF9D  F012         	goto	u7750
 11501  002536                     u7751:
 11502  002536  EF77  F012         	goto	l1928
 11503  00253A                     u7750:
 11504  00253A                     l1926:
 11505                           
 11506                           ; BSR set to: 0
 11507  00253A  BD75               	btfsc	___fladd@signs& (0+255),6,b
 11508  00253C  EFA2  F012         	goto	u7761
 11509  002540  EFA4  F012         	goto	u7760
 11510  002544                     u7761:
 11511  002544  EFE4  F012         	goto	l7752
 11512  002548                     u7760:
 11513  002548                     
 11514                           ; BSR set to: 0
 11515  002548  5177               	movf	___fladd@bexp& (0+255),w,b
 11516  00254A  A4D8               	btfss	status,2,c
 11517  00254C  EFAA  F012         	goto	u7771
 11518  002550  EFAC  F012         	goto	u7770
 11519  002554                     u7771:
 11520  002554  EFB6  F012         	goto	l7734
 11521  002558                     u7770:
 11522  002558                     
 11523                           ; BSR set to: 0
 11524  002558  0E00               	movlw	0
 11525  00255A  6F6D               	movwf	?___fladd& (0+255),b
 11526  00255C  0E00               	movlw	0
 11527  00255E  6F6E               	movwf	(?___fladd+1)& (0+255),b
 11528  002560  0E00               	movlw	0
 11529  002562  6F6F               	movwf	(?___fladd+2)& (0+255),b
 11530  002564  0E00               	movlw	0
 11531  002566  6F70               	movwf	(?___fladd+3)& (0+255),b
 11532  002568  EF05  F014         	goto	l1935
 11533  00256C                     l7734:
 11534                           
 11535                           ; BSR set to: 0
 11536  00256C  5171               	movf	___fladd@a& (0+255),w,b
 11537  00256E  276D               	addwf	___fladd@b& (0+255),f,b
 11538  002570  5172               	movf	(___fladd@a+1)& (0+255),w,b
 11539  002572  236E               	addwfc	(___fladd@b+1)& (0+255),f,b
 11540  002574  5173               	movf	(___fladd@a+2)& (0+255),w,b
 11541  002576  236F               	addwfc	(___fladd@b+2)& (0+255),f,b
 11542  002578  5174               	movf	(___fladd@a+3)& (0+255),w,b
 11543  00257A  2370               	addwfc	(___fladd@b+3)& (0+255),f,b
 11544  00257C                     
 11545                           ; BSR set to: 0
 11546  00257C  A170               	btfss	(___fladd@b+3)& (0+255),0,b
 11547  00257E  EFC3  F012         	goto	u7781
 11548  002582  EFC5  F012         	goto	u7780
 11549  002586                     u7781:
 11550  002586  EF71  F013         	goto	l7788
 11551  00258A                     u7780:
 11552  00258A                     
 11553                           ; BSR set to: 0
 11554  00258A  A178               	btfss	___fladd@grs& (0+255),0,b
 11555  00258C  EFCA  F012         	goto	u7791
 11556  002590  EFCC  F012         	goto	u7790
 11557  002594                     u7791:
 11558  002594  EFD2  F012         	goto	l7742
 11559  002598                     u7790:
 11560  002598                     
 11561                           ; BSR set to: 0
 11562  002598  90D8               	bcf	status,0,c
 11563  00259A  3178               	rrcf	___fladd@grs& (0+255),w,b
 11564  00259C  0901               	iorlw	1
 11565  00259E  6F78               	movwf	___fladd@grs& (0+255),b
 11566  0025A0  EFD4  F012         	goto	l7744
 11567  0025A4                     l7742:
 11568                           
 11569                           ; BSR set to: 0
 11570  0025A4  90D8               	bcf	status,0,c
 11571  0025A6  3378               	rrcf	___fladd@grs& (0+255),f,b
 11572  0025A8                     l7744:
 11573                           
 11574                           ; BSR set to: 0
 11575  0025A8  A16D               	btfss	___fladd@b& (0+255),0,b
 11576  0025AA  EFD9  F012         	goto	u7801
 11577  0025AE  EFDB  F012         	goto	u7800
 11578  0025B2                     u7801:
 11579  0025B2  EFDC  F012         	goto	l7748
 11580  0025B6                     u7800:
 11581  0025B6                     
 11582                           ; BSR set to: 0
 11583  0025B6  8F78               	bsf	___fladd@grs& (0+255),7,b
 11584  0025B8                     l7748:
 11585                           
 11586                           ; BSR set to: 0
 11587  0025B8  3570               	rlcf	(___fladd@b+3)& (0+255),w,b
 11588  0025BA  3370               	rrcf	(___fladd@b+3)& (0+255),f,b
 11589  0025BC  336F               	rrcf	(___fladd@b+2)& (0+255),f,b
 11590  0025BE  336E               	rrcf	(___fladd@b+1)& (0+255),f,b
 11591  0025C0  336D               	rrcf	___fladd@b& (0+255),f,b
 11592  0025C2                     
 11593                           ; BSR set to: 0
 11594  0025C2  2B77               	incf	___fladd@bexp& (0+255),f,b
 11595  0025C4  EF71  F013         	goto	l7788
 11596  0025C8                     l7752:
 11597                           
 11598                           ; BSR set to: 0
 11599  0025C8  5171               	movf	___fladd@a& (0+255),w,b
 11600  0025CA  5D6D               	subwf	___fladd@b& (0+255),w,b
 11601  0025CC  5172               	movf	(___fladd@a+1)& (0+255),w,b
 11602  0025CE  596E               	subwfb	(___fladd@b+1)& (0+255),w,b
 11603  0025D0  5173               	movf	(___fladd@a+2)& (0+255),w,b
 11604  0025D2  596F               	subwfb	(___fladd@b+2)& (0+255),w,b
 11605  0025D4  5170               	movf	(___fladd@b+3)& (0+255),w,b
 11606  0025D6  0A80               	xorlw	128
 11607  0025D8  6E36               	movwf	??___fladd^0,c
 11608  0025DA  5174               	movf	(___fladd@a+3)& (0+255),w,b
 11609  0025DC  0A80               	xorlw	128
 11610  0025DE  5836               	subwfb	??___fladd^0,w,c
 11611  0025E0  B0D8               	btfsc	status,0,c
 11612  0025E2  EFF5  F012         	goto	u7811
 11613  0025E6  EFF7  F012         	goto	u7810
 11614  0025EA                     u7811:
 11615  0025EA  EF22  F013         	goto	l7762
 11616  0025EE                     u7810:
 11617  0025EE                     
 11618                           ; BSR set to: 0
 11619  0025EE  516D               	movf	___fladd@b& (0+255),w,b
 11620  0025F0  5D71               	subwf	___fladd@a& (0+255),w,b
 11621  0025F2  6E36               	movwf	??___fladd^0,c
 11622  0025F4  516E               	movf	(___fladd@b+1)& (0+255),w,b
 11623  0025F6  5972               	subwfb	(___fladd@a+1)& (0+255),w,b
 11624  0025F8  6E37               	movwf	(??___fladd+1)^0,c
 11625  0025FA  516F               	movf	(___fladd@b+2)& (0+255),w,b
 11626  0025FC  5973               	subwfb	(___fladd@a+2)& (0+255),w,b
 11627  0025FE  6E38               	movwf	(??___fladd+2)^0,c
 11628  002600  5170               	movf	(___fladd@b+3)& (0+255),w,b
 11629  002602  5974               	subwfb	(___fladd@a+3)& (0+255),w,b
 11630  002604  6E39               	movwf	(??___fladd+3)^0,c
 11631  002606  0EFF               	movlw	255
 11632  002608  2436               	addwf	??___fladd^0,w,c
 11633  00260A  6F6D               	movwf	___fladd@b& (0+255),b
 11634  00260C  0EFF               	movlw	255
 11635  00260E  2037               	addwfc	(??___fladd+1)^0,w,c
 11636  002610  6F6E               	movwf	(___fladd@b+1)& (0+255),b
 11637  002612  0EFF               	movlw	255
 11638  002614  2038               	addwfc	(??___fladd+2)^0,w,c
 11639  002616  6F6F               	movwf	(___fladd@b+2)& (0+255),b
 11640  002618  0EFF               	movlw	255
 11641  00261A  2039               	addwfc	(??___fladd+3)^0,w,c
 11642  00261C  6F70               	movwf	(___fladd@b+3)& (0+255),b
 11643  00261E  0E80               	movlw	128
 11644  002620  1B75               	xorwf	___fladd@signs& (0+255),f,b
 11645  002622                     
 11646                           ; BSR set to: 0
 11647  002622  6D78               	negf	___fladd@grs& (0+255),b
 11648  002624                     
 11649                           ; BSR set to: 0
 11650  002624  5178               	movf	___fladd@grs& (0+255),w,b
 11651  002626  A4D8               	btfss	status,2,c
 11652  002628  EF18  F013         	goto	u7821
 11653  00262C  EF1A  F013         	goto	u7820
 11654  002630                     u7821:
 11655  002630  EF2A  F013         	goto	l1943
 11656  002634                     u7820:
 11657  002634                     
 11658                           ; BSR set to: 0
 11659  002634  0E01               	movlw	1
 11660  002636  276D               	addwf	___fladd@b& (0+255),f,b
 11661  002638  0E00               	movlw	0
 11662  00263A  236E               	addwfc	(___fladd@b+1)& (0+255),f,b
 11663  00263C  236F               	addwfc	(___fladd@b+2)& (0+255),f,b
 11664  00263E  2370               	addwfc	(___fladd@b+3)& (0+255),f,b
 11665  002640  EF2A  F013         	goto	l1943
 11666  002644                     l7762:
 11667                           
 11668                           ; BSR set to: 0
 11669  002644  5171               	movf	___fladd@a& (0+255),w,b
 11670  002646  5F6D               	subwf	___fladd@b& (0+255),f,b
 11671  002648  5172               	movf	(___fladd@a+1)& (0+255),w,b
 11672  00264A  5B6E               	subwfb	(___fladd@b+1)& (0+255),f,b
 11673  00264C  5173               	movf	(___fladd@a+2)& (0+255),w,b
 11674  00264E  5B6F               	subwfb	(___fladd@b+2)& (0+255),f,b
 11675  002650  5174               	movf	(___fladd@a+3)& (0+255),w,b
 11676  002652  5B70               	subwfb	(___fladd@b+3)& (0+255),f,b
 11677  002654                     l1943:
 11678                           
 11679                           ; BSR set to: 0
 11680  002654  516D               	movf	___fladd@b& (0+255),w,b
 11681  002656  116E               	iorwf	(___fladd@b+1)& (0+255),w,b
 11682  002658  116F               	iorwf	(___fladd@b+2)& (0+255),w,b
 11683  00265A  1170               	iorwf	(___fladd@b+3)& (0+255),w,b
 11684  00265C  A4D8               	btfss	status,2,c
 11685  00265E  EF33  F013         	goto	u7831
 11686  002662  EF35  F013         	goto	u7830
 11687  002666                     u7831:
 11688  002666  EF6A  F013         	goto	l7786
 11689  00266A                     u7830:
 11690  00266A                     
 11691                           ; BSR set to: 0
 11692  00266A  5178               	movf	___fladd@grs& (0+255),w,b
 11693  00266C  A4D8               	btfss	status,2,c
 11694  00266E  EF3B  F013         	goto	u7841
 11695  002672  EF3D  F013         	goto	u7840
 11696  002676                     u7841:
 11697  002676  EF6A  F013         	goto	l7786
 11698  00267A                     u7840:
 11699  00267A                     
 11700                           ; BSR set to: 0
 11701  00267A  0E00               	movlw	0
 11702  00267C  6F6D               	movwf	?___fladd& (0+255),b
 11703  00267E  0E00               	movlw	0
 11704  002680  6F6E               	movwf	(?___fladd+1)& (0+255),b
 11705  002682  0E00               	movlw	0
 11706  002684  6F6F               	movwf	(?___fladd+2)& (0+255),b
 11707  002686  0E00               	movlw	0
 11708  002688  6F70               	movwf	(?___fladd+3)& (0+255),b
 11709  00268A  EF05  F014         	goto	l1935
 11710  00268E                     l7770:
 11711                           
 11712                           ; BSR set to: 0
 11713  00268E  90D8               	bcf	status,0,c
 11714  002690  376D               	rlcf	___fladd@b& (0+255),f,b
 11715  002692  376E               	rlcf	(___fladd@b+1)& (0+255),f,b
 11716  002694  376F               	rlcf	(___fladd@b+2)& (0+255),f,b
 11717  002696  3770               	rlcf	(___fladd@b+3)& (0+255),f,b
 11718  002698                     
 11719                           ; BSR set to: 0
 11720  002698  AF78               	btfss	___fladd@grs& (0+255),7,b
 11721  00269A  EF51  F013         	goto	u7851
 11722  00269E  EF53  F013         	goto	u7850
 11723  0026A2                     u7851:
 11724  0026A2  EF54  F013         	goto	l7776
 11725  0026A6                     u7850:
 11726  0026A6                     
 11727                           ; BSR set to: 0
 11728  0026A6  816D               	bsf	___fladd@b& (0+255),0,b
 11729  0026A8                     l7776:
 11730                           
 11731                           ; BSR set to: 0
 11732  0026A8  A178               	btfss	___fladd@grs& (0+255),0,b
 11733  0026AA  EF59  F013         	goto	u7861
 11734  0026AE  EF5B  F013         	goto	u7860
 11735  0026B2                     u7861:
 11736  0026B2  EF5F  F013         	goto	l7780
 11737  0026B6                     u7860:
 11738  0026B6                     
 11739                           ; BSR set to: 0
 11740  0026B6  80D8               	bsf	status,0,c
 11741  0026B8  3778               	rlcf	___fladd@grs& (0+255),f,b
 11742  0026BA  EF61  F013         	goto	l7782
 11743  0026BE                     l7780:
 11744                           
 11745                           ; BSR set to: 0
 11746  0026BE  90D8               	bcf	status,0,c
 11747  0026C0  3778               	rlcf	___fladd@grs& (0+255),f,b
 11748  0026C2                     l7782:
 11749                           
 11750                           ; BSR set to: 0
 11751  0026C2  5177               	movf	___fladd@bexp& (0+255),w,b
 11752  0026C4  B4D8               	btfsc	status,2,c
 11753  0026C6  EF67  F013         	goto	u7871
 11754  0026CA  EF69  F013         	goto	u7870
 11755  0026CE                     u7871:
 11756  0026CE  EF6A  F013         	goto	l7786
 11757  0026D2                     u7870:
 11758  0026D2                     
 11759                           ; BSR set to: 0
 11760  0026D2  0777               	decf	___fladd@bexp& (0+255),f,b
 11761  0026D4                     l7786:
 11762                           
 11763                           ; BSR set to: 0
 11764  0026D4  AF6F               	btfss	(___fladd@b+2)& (0+255),7,b
 11765  0026D6  EF6F  F013         	goto	u7881
 11766  0026DA  EF71  F013         	goto	u7880
 11767  0026DE                     u7881:
 11768  0026DE  EF47  F013         	goto	l7770
 11769  0026E2                     u7880:
 11770  0026E2                     l7788:
 11771                           
 11772                           ; BSR set to: 0
 11773  0026E2  0E00               	movlw	0
 11774  0026E4  6F76               	movwf	___fladd@aexp& (0+255),b
 11775  0026E6                     
 11776                           ; BSR set to: 0
 11777  0026E6  AF78               	btfss	___fladd@grs& (0+255),7,b
 11778  0026E8  EF78  F013         	goto	u7891
 11779  0026EC  EF7A  F013         	goto	u7890
 11780  0026F0                     u7891:
 11781  0026F0  EF92  F013         	goto	l1952
 11782  0026F4                     u7890:
 11783  0026F4                     
 11784                           ; BSR set to: 0
 11785  0026F4  C078  F036         	movff	___fladd@grs,??___fladd
 11786  0026F8  0E7F               	movlw	127
 11787  0026FA  1636               	andwf	??___fladd^0,f,c
 11788  0026FC  B4D8               	btfsc	status,2,c
 11789  0026FE  EF83  F013         	goto	u7901
 11790  002702  EF85  F013         	goto	u7900
 11791  002706                     u7901:
 11792  002706  EF89  F013         	goto	l1953
 11793  00270A                     u7900:
 11794  00270A                     l7794:
 11795                           
 11796                           ; BSR set to: 0
 11797  00270A  0E01               	movlw	1
 11798  00270C  6F76               	movwf	___fladd@aexp& (0+255),b
 11799  00270E  EF92  F013         	goto	l1952
 11800  002712                     l1953:
 11801                           
 11802                           ; BSR set to: 0
 11803  002712  A16D               	btfss	___fladd@b& (0+255),0,b
 11804  002714  EF8E  F013         	goto	u7911
 11805  002718  EF90  F013         	goto	u7910
 11806  00271C                     u7911:
 11807  00271C  EF92  F013         	goto	l1952
 11808  002720                     u7910:
 11809  002720  EF85  F013         	goto	l7794
 11810  002724                     l1952:
 11811                           
 11812                           ; BSR set to: 0
 11813  002724  5176               	movf	___fladd@aexp& (0+255),w,b
 11814  002726  B4D8               	btfsc	status,2,c
 11815  002728  EF98  F013         	goto	u7921
 11816  00272C  EF9A  F013         	goto	u7920
 11817  002730                     u7921:
 11818  002730  EFC5  F013         	goto	l7806
 11819  002734                     u7920:
 11820  002734                     
 11821                           ; BSR set to: 0
 11822  002734  0E01               	movlw	1
 11823  002736  276D               	addwf	___fladd@b& (0+255),f,b
 11824  002738  0E00               	movlw	0
 11825  00273A  236E               	addwfc	(___fladd@b+1)& (0+255),f,b
 11826  00273C  236F               	addwfc	(___fladd@b+2)& (0+255),f,b
 11827  00273E  2370               	addwfc	(___fladd@b+3)& (0+255),f,b
 11828  002740                     
 11829                           ; BSR set to: 0
 11830  002740  A170               	btfss	(___fladd@b+3)& (0+255),0,b
 11831  002742  EFA5  F013         	goto	u7931
 11832  002746  EFA7  F013         	goto	u7930
 11833  00274A                     u7931:
 11834  00274A  EFC5  F013         	goto	l7806
 11835  00274E                     u7930:
 11836  00274E                     
 11837                           ; BSR set to: 0
 11838  00274E  C06D  F036         	movff	___fladd@b,??___fladd
 11839  002752  C06E  F037         	movff	___fladd@b+1,??___fladd+1
 11840  002756  C06F  F038         	movff	___fladd@b+2,??___fladd+2
 11841  00275A  C070  F039         	movff	___fladd@b+3,??___fladd+3
 11842  00275E  3439               	rlcf	(??___fladd+3)^0,w,c
 11843  002760  3239               	rrcf	(??___fladd+3)^0,f,c
 11844  002762  3238               	rrcf	(??___fladd+2)^0,f,c
 11845  002764  3237               	rrcf	(??___fladd+1)^0,f,c
 11846  002766  3236               	rrcf	??___fladd^0,f,c
 11847  002768  C036  F06D         	movff	??___fladd,___fladd@b
 11848  00276C  C037  F06E         	movff	??___fladd+1,___fladd@b+1
 11849  002770  C038  F06F         	movff	??___fladd+2,___fladd@b+2
 11850  002774  C039  F070         	movff	??___fladd+3,___fladd@b+3
 11851  002778  2977               	incf	___fladd@bexp& (0+255),w,b
 11852  00277A  B4D8               	btfsc	status,2,c
 11853  00277C  EFC2  F013         	goto	u7941
 11854  002780  EFC4  F013         	goto	u7940
 11855  002784                     u7941:
 11856  002784  EFC5  F013         	goto	l7806
 11857  002788                     u7940:
 11858  002788                     
 11859                           ; BSR set to: 0
 11860  002788  2B77               	incf	___fladd@bexp& (0+255),f,b
 11861  00278A                     l7806:
 11862                           
 11863                           ; BSR set to: 0
 11864  00278A  2977               	incf	___fladd@bexp& (0+255),w,b
 11865  00278C  B4D8               	btfsc	status,2,c
 11866  00278E  EFCB  F013         	goto	u7951
 11867  002792  EFCD  F013         	goto	u7950
 11868  002796                     u7951:
 11869  002796  EFD5  F013         	goto	l7810
 11870  00279A                     u7950:
 11871  00279A                     
 11872                           ; BSR set to: 0
 11873  00279A  5177               	movf	___fladd@bexp& (0+255),w,b
 11874  00279C  A4D8               	btfss	status,2,c
 11875  00279E  EFD3  F013         	goto	u7961
 11876  0027A2  EFD5  F013         	goto	u7960
 11877  0027A6                     u7961:
 11878  0027A6  EFE7  F013         	goto	l7814
 11879  0027AA                     u7960:
 11880  0027AA                     l7810:
 11881                           
 11882                           ; BSR set to: 0
 11883  0027AA  0E00               	movlw	0
 11884  0027AC  6F6D               	movwf	___fladd@b& (0+255),b
 11885  0027AE  0E00               	movlw	0
 11886  0027B0  6F6E               	movwf	(___fladd@b+1)& (0+255),b
 11887  0027B2  0E00               	movlw	0
 11888  0027B4  6F6F               	movwf	(___fladd@b+2)& (0+255),b
 11889  0027B6  0E00               	movlw	0
 11890  0027B8  6F70               	movwf	(___fladd@b+3)& (0+255),b
 11891  0027BA  5177               	movf	___fladd@bexp& (0+255),w,b
 11892  0027BC  A4D8               	btfss	status,2,c
 11893  0027BE  EFE3  F013         	goto	u7971
 11894  0027C2  EFE5  F013         	goto	u7970
 11895  0027C6                     u7971:
 11896  0027C6  EFE7  F013         	goto	l7814
 11897  0027CA                     u7970:
 11898  0027CA                     
 11899                           ; BSR set to: 0
 11900  0027CA  0E00               	movlw	0
 11901  0027CC  6F75               	movwf	___fladd@signs& (0+255),b
 11902  0027CE                     l7814:
 11903                           
 11904                           ; BSR set to: 0
 11905  0027CE  A177               	btfss	___fladd@bexp& (0+255),0,b
 11906  0027D0  EFEC  F013         	goto	u7981
 11907  0027D4  EFEE  F013         	goto	u7980
 11908  0027D8                     u7981:
 11909  0027D8  EFF1  F013         	goto	l7818
 11910  0027DC                     u7980:
 11911  0027DC                     
 11912                           ; BSR set to: 0
 11913  0027DC  8F6F               	bsf	(___fladd@b+2)& (0+255),7,b
 11914  0027DE  EFF2  F013         	goto	l7820
 11915  0027E2                     l7818:
 11916                           
 11917                           ; BSR set to: 0
 11918  0027E2  9F6F               	bcf	(___fladd@b+2)& (0+255),7,b
 11919  0027E4                     l7820:
 11920                           
 11921                           ; BSR set to: 0
 11922  0027E4  90D8               	bcf	status,0,c
 11923  0027E6  3177               	rrcf	___fladd@bexp& (0+255),w,b
 11924  0027E8  6F70               	movwf	(___fladd@b+3)& (0+255),b
 11925  0027EA                     
 11926                           ; BSR set to: 0
 11927  0027EA  AF75               	btfss	___fladd@signs& (0+255),7,b
 11928  0027EC  EFFA  F013         	goto	u7991
 11929  0027F0  EFFC  F013         	goto	u7990
 11930  0027F4                     u7991:
 11931  0027F4  EFFD  F013         	goto	l7826
 11932  0027F8                     u7990:
 11933  0027F8                     
 11934                           ; BSR set to: 0
 11935  0027F8  8F70               	bsf	(___fladd@b+3)& (0+255),7,b
 11936  0027FA                     l7826:
 11937                           
 11938                           ; BSR set to: 0
 11939  0027FA  C06D  F06D         	movff	___fladd@b,?___fladd
 11940  0027FE  C06E  F06E         	movff	___fladd@b+1,?___fladd+1
 11941  002802  C06F  F06F         	movff	___fladd@b+2,?___fladd+2
 11942  002806  C070  F070         	movff	___fladd@b+3,?___fladd+3
 11943  00280A                     l1935:
 11944                           
 11945                           ; BSR set to: 0
 11946  00280A  0012               	return		;funcret
 11947  00280C                     __end_of___fladd:
 11948                           	callstack 0
 11949                           
 11950 ;; *************** function _calcMotorPow *****************
 11951 ;; Defined at:
 11952 ;;		line 333 in file "main.c"
 11953 ;; Parameters:    Size  Location     Type
 11954 ;;		None
 11955 ;; Auto vars:     Size  Location     Type
 11956 ;;  oldSpeedDelt    2   39[BANK0 ] short 
 11957 ;;  setSpeedDelt    2   37[BANK0 ] short 
 11958 ;;  addMPow         1   41[BANK0 ] char 
 11959 ;; Return value:  Size  Location     Type
 11960 ;;                  1    wreg      void 
 11961 ;; Registers used:
 11962 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11963 ;; Tracked objects:
 11964 ;;		On entry : 0/0
 11965 ;;		On exit  : 0/0
 11966 ;;		Unchanged: 0/0
 11967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11969 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11970 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11971 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11972 ;;Total ram usage:        7 bytes
 11973 ;; Hardware stack levels used: 1
 11974 ;; Hardware stack levels required when called: 10
 11975 ;; This function calls:
 11976 ;;		___awdiv
 11977 ;;		___flmul
 11978 ;;		___fltol
 11979 ;;		___xxtofl
 11980 ;;		_actSpeed
 11981 ;;		_setMotor
 11982 ;; This function is called by:
 11983 ;;		_loop
 11984 ;; This function uses a non-reentrant model
 11985 ;;
 11986                           
 11987                           	psect	text45
 11988  004394                     __ptext45:
 11989                           	callstack 0
 11990  004394                     _calcMotorPow:
 11991                           	callstack 19
 11992  004394                     
 11993                           ;main.c: 334:     int16_t setSpeedDelta = setSpeed - currentSpeed;
 11994  004394  0100               	movlb	0	; () banked
 11995  004396  51EF               	movf	_currentSpeed& (0+255),w,b
 11996  004398  5DF1               	subwf	_setSpeed& (0+255),w,b
 11997  00439A  6F85               	movwf	calcMotorPow@setSpeedDelta& (0+255),b
 11998  00439C  51F0               	movf	(_currentSpeed+1)& (0+255),w,b
 11999  00439E  59F2               	subwfb	(_setSpeed+1)& (0+255),w,b
 12000  0043A0  6F86               	movwf	(calcMotorPow@setSpeedDelta+1)& (0+255),b
 12001                           
 12002                           ;main.c: 335:     int16_t oldSpeedDelta = currentSpeed - oldSpeed;
 12003  0043A2  0101               	movlb	1	; () banked
 12004  0043A4  512C               	movf	_oldSpeed& (0+255),w,b
 12005  0043A6  0100               	movlb	0	; () banked
 12006  0043A8  5DEF               	subwf	_currentSpeed& (0+255),w,b
 12007  0043AA  6F87               	movwf	calcMotorPow@oldSpeedDelta& (0+255),b
 12008  0043AC  0101               	movlb	1	; () banked
 12009  0043AE  512D               	movf	(_oldSpeed+1)& (0+255),w,b
 12010  0043B0  0100               	movlb	0	; () banked
 12011  0043B2  59F0               	subwfb	(_currentSpeed+1)& (0+255),w,b
 12012  0043B4  6F88               	movwf	(calcMotorPow@oldSpeedDelta+1)& (0+255),b
 12013  0043B6                     
 12014                           ; BSR set to: 0
 12015                           ;main.c: 338:     currentSpeed = actSpeed();
 12016  0043B6  EC0B  F02B         	call	_actSpeed	;wreg free
 12017  0043BA  C022  F0EF         	movff	?_actSpeed,_currentSpeed
 12018  0043BE  C023  F0F0         	movff	?_actSpeed+1,_currentSpeed+1
 12019  0043C2                     
 12020                           ;main.c: 342:     addMPow = (int8_t) ((0.025) * (setSpeedDelta - (oldSpeedDelta / (2))))
      +                          ;
 12021  0043C2  0ECD               	movlw	205
 12022  0043C4  6E2E               	movwf	___flmul@a^0,c
 12023  0043C6  0ECC               	movlw	204
 12024  0043C8  6E2F               	movwf	(___flmul@a+1)^0,c
 12025  0043CA  0ECC               	movlw	204
 12026  0043CC  6E30               	movwf	(___flmul@a+2)^0,c
 12027  0043CE  0E3C               	movlw	60
 12028  0043D0  6E31               	movwf	(___flmul@a+3)^0,c
 12029  0043D2  0E00               	movlw	0
 12030  0043D4  6E17               	movwf	(___awdiv@divisor+1)^0,c
 12031  0043D6  0E02               	movlw	2
 12032  0043D8  6E16               	movwf	___awdiv@divisor^0,c
 12033  0043DA  C087  F014         	movff	calcMotorPow@oldSpeedDelta,___awdiv@dividend
 12034  0043DE  C088  F015         	movff	calcMotorPow@oldSpeedDelta+1,___awdiv@dividend+1
 12035  0043E2  EC4E  F028         	call	___awdiv	;wreg free
 12036  0043E6  C085  F083         	movff	calcMotorPow@setSpeedDelta,??_calcMotorPow
 12037  0043EA  C086  F084         	movff	calcMotorPow@setSpeedDelta+1,??_calcMotorPow+1
 12038  0043EE  5014               	movf	?___awdiv^0,w,c
 12039  0043F0  0100               	movlb	0	; () banked
 12040  0043F2  5F83               	subwf	??_calcMotorPow& (0+255),f,b
 12041  0043F4  5015               	movf	(?___awdiv+1)^0,w,c
 12042  0043F6  5B84               	subwfb	(??_calcMotorPow+1)& (0+255),f,b
 12043  0043F8  C083  F01C         	movff	??_calcMotorPow,___xxtofl@val
 12044  0043FC  C084  F01D         	movff	??_calcMotorPow+1,___xxtofl@val+1
 12045  004400  0E00               	movlw	0
 12046  004402  BE1D               	btfsc	(___xxtofl@val+1)^0,7,c
 12047  004404  0EFF               	movlw	-1
 12048  004406  6E1E               	movwf	(___xxtofl@val+2)^0,c
 12049  004408  6E1F               	movwf	(___xxtofl@val+3)^0,c
 12050  00440A  0E01               	movlw	1
 12051  00440C  EC7A  F01F         	call	___xxtofl
 12052  004410  C01C  F02A         	movff	?___xxtofl,___flmul@b
 12053  004414  C01D  F02B         	movff	?___xxtofl+1,___flmul@b+1
 12054  004418  C01E  F02C         	movff	?___xxtofl+2,___flmul@b+2
 12055  00441C  C01F  F02D         	movff	?___xxtofl+3,___flmul@b+3
 12056  004420  EC06  F014         	call	___flmul	;wreg free
 12057  004424  C02A  F079         	movff	?___flmul,___fltol@f1
 12058  004428  C02B  F07A         	movff	?___flmul+1,___fltol@f1+1
 12059  00442C  C02C  F07B         	movff	?___flmul+2,___fltol@f1+2
 12060  004430  C02D  F07C         	movff	?___flmul+3,___fltol@f1+3
 12061  004434  EC32  F024         	call	___fltol	;wreg free
 12062  004438  0100               	movlb	0	; () banked
 12063  00443A  5179               	movf	?___fltol& (0+255),w,b
 12064  00443C  6F89               	movwf	calcMotorPow@addMPow& (0+255),b
 12065  00443E                     
 12066                           ; BSR set to: 0
 12067                           ;main.c: 344:     if (addMPow > (3)) {
 12068  00443E  5189               	movf	calcMotorPow@addMPow& (0+255),w,b
 12069  004440  0A80               	xorlw	128
 12070  004442  0F7C               	addlw	-132
 12071  004444  A0D8               	btfss	status,0,c
 12072  004446  EF27  F022         	goto	u10681
 12073  00444A  EF29  F022         	goto	u10680
 12074  00444E                     u10681:
 12075  00444E  EF2D  F022         	goto	l9388
 12076  004452                     u10680:
 12077  004452                     
 12078                           ; BSR set to: 0
 12079                           ;main.c: 345:         addMPow = (3);
 12080  004452  0E03               	movlw	3
 12081  004454  6F89               	movwf	calcMotorPow@addMPow& (0+255),b
 12082                           
 12083                           ;main.c: 346:     } else if (addMPow < -(3)) {
 12084  004456  EF39  F022         	goto	l9392
 12085  00445A                     l9388:
 12086                           
 12087                           ; BSR set to: 0
 12088  00445A  5189               	movf	calcMotorPow@addMPow& (0+255),w,b
 12089  00445C  0A80               	xorlw	128
 12090  00445E  0F83               	addlw	131
 12091  004460  B0D8               	btfsc	status,0,c
 12092  004462  EF35  F022         	goto	u10691
 12093  004466  EF37  F022         	goto	u10690
 12094  00446A                     u10691:
 12095  00446A  EF39  F022         	goto	l9392
 12096  00446E                     u10690:
 12097  00446E                     
 12098                           ; BSR set to: 0
 12099                           ;main.c: 347:         addMPow = -(3);
 12100  00446E  0EFD               	movlw	253
 12101  004470  6F89               	movwf	calcMotorPow@addMPow& (0+255),b
 12102  004472                     l9392:
 12103                           
 12104                           ; BSR set to: 0
 12105                           ;main.c: 350:     actMotorPow = actMotorPow + addMPow;
 12106  004472  51ED               	movf	_actMotorPow& (0+255),w,b
 12107  004474  2589               	addwf	calcMotorPow@addMPow& (0+255),w,b
 12108  004476  6FED               	movwf	_actMotorPow& (0+255),b
 12109  004478  0E00               	movlw	0
 12110  00447A  BF89               	btfsc	calcMotorPow@addMPow& (0+255),7,b
 12111  00447C  0EFF               	movlw	255
 12112  00447E  21EE               	addwfc	(_actMotorPow+1)& (0+255),w,b
 12113  004480  6FEE               	movwf	(_actMotorPow+1)& (0+255),b
 12114  004482                     
 12115                           ; BSR set to: 0
 12116                           ;main.c: 352:     if (actMotorPow > (700)) {
 12117  004482  BFEE               	btfsc	(_actMotorPow+1)& (0+255),7,b
 12118  004484  EF4D  F022         	goto	u10701
 12119  004488  0EBD               	movlw	189
 12120  00448A  5DED               	subwf	_actMotorPow& (0+255),w,b
 12121  00448C  0E02               	movlw	2
 12122  00448E  59EE               	subwfb	(_actMotorPow+1)& (0+255),w,b
 12123  004490  A0D8               	btfss	status,0,c
 12124  004492  EF4D  F022         	goto	u10701
 12125  004496  EF4F  F022         	goto	u10700
 12126  00449A                     u10701:
 12127  00449A  EF55  F022         	goto	l9398
 12128  00449E                     u10700:
 12129  00449E                     
 12130                           ; BSR set to: 0
 12131                           ;main.c: 353:         actMotorPow = (700);
 12132  00449E  0E02               	movlw	2
 12133  0044A0  6FEE               	movwf	(_actMotorPow+1)& (0+255),b
 12134  0044A2  0EBC               	movlw	188
 12135  0044A4  6FED               	movwf	_actMotorPow& (0+255),b
 12136                           
 12137                           ;main.c: 354:     } else if (actMotorPow < (-400)) {
 12138  0044A6  EF67  F022         	goto	l9402
 12139  0044AA                     l9398:
 12140                           
 12141                           ; BSR set to: 0
 12142  0044AA  AFEE               	btfss	(_actMotorPow+1)& (0+255),7,b
 12143  0044AC  EF61  F022         	goto	u10711
 12144  0044B0  0E70               	movlw	112
 12145  0044B2  5DED               	subwf	_actMotorPow& (0+255),w,b
 12146  0044B4  0EFE               	movlw	254
 12147  0044B6  59EE               	subwfb	(_actMotorPow+1)& (0+255),w,b
 12148  0044B8  B0D8               	btfsc	status,0,c
 12149  0044BA  EF61  F022         	goto	u10711
 12150  0044BE  EF63  F022         	goto	u10710
 12151  0044C2                     u10711:
 12152  0044C2  EF67  F022         	goto	l9402
 12153  0044C6                     u10710:
 12154  0044C6                     
 12155                           ; BSR set to: 0
 12156                           ;main.c: 355:         actMotorPow = (-400);
 12157  0044C6  0EFE               	movlw	254
 12158  0044C8  6FEE               	movwf	(_actMotorPow+1)& (0+255),b
 12159  0044CA  0E70               	movlw	112
 12160  0044CC  6FED               	movwf	_actMotorPow& (0+255),b
 12161  0044CE                     l9402:
 12162                           
 12163                           ; BSR set to: 0
 12164                           ;main.c: 358:     setMotor(actMotorPow);
 12165  0044CE  C0ED  F018         	movff	_actMotorPow,setMotor@motorPower
 12166  0044D2  C0EE  F019         	movff	_actMotorPow+1,setMotor@motorPower+1
 12167  0044D6  ECAA  F026         	call	_setMotor	;wreg free
 12168  0044DA                     
 12169                           ;main.c: 360:     oldSpeed = currentSpeed;
 12170  0044DA  C0EF  F12C         	movff	_currentSpeed,_oldSpeed
 12171  0044DE  C0F0  F12D         	movff	_currentSpeed+1,_oldSpeed+1
 12172  0044E2  0012               	return		;funcret
 12173  0044E4                     __end_of_calcMotorPow:
 12174                           	callstack 0
 12175                           
 12176 ;; *************** function _setMotor *****************
 12177 ;; Defined at:
 12178 ;;		line 363 in file "main.c"
 12179 ;; Parameters:    Size  Location     Type
 12180 ;;  motorPower      2   23[COMRAM] short 
 12181 ;; Auto vars:     Size  Location     Type
 12182 ;;		None
 12183 ;; Return value:  Size  Location     Type
 12184 ;;                  1    wreg      void 
 12185 ;; Registers used:
 12186 ;;		wreg, status,2, status,0, cstack
 12187 ;; Tracked objects:
 12188 ;;		On entry : 0/0
 12189 ;;		On exit  : 0/0
 12190 ;;		Unchanged: 0/0
 12191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12192 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12194 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12195 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12196 ;;Total ram usage:        4 bytes
 12197 ;; Hardware stack levels used: 1
 12198 ;; Hardware stack levels required when called: 9
 12199 ;; This function calls:
 12200 ;;		_PWM7_LoadDutyValue
 12201 ;;		_PWM8_LoadDutyValue
 12202 ;; This function is called by:
 12203 ;;		_loop
 12204 ;;		_startAccell
 12205 ;;		_calcMotorPow
 12206 ;; This function uses a non-reentrant model
 12207 ;;
 12208                           
 12209                           	psect	text46
 12210  004D54                     __ptext46:
 12211                           	callstack 0
 12212  004D54                     _setMotor:
 12213                           	callstack 19
 12214  004D54                     
 12215                           ;main.c: 364:     if (motorPower >= (100)) {
 12216  004D54  BE19               	btfsc	(setMotor@motorPower+1)^0,7,c
 12217  004D56  EFB6  F026         	goto	u10291
 12218  004D5A  5019               	movf	(setMotor@motorPower+1)^0,w,c
 12219  004D5C  E109               	bnz	u10290
 12220  004D5E  0E64               	movlw	100
 12221  004D60  5C18               	subwf	setMotor@motorPower^0,w,c
 12222  004D62  A0D8               	btfss	status,0,c
 12223  004D64  EFB6  F026         	goto	u10291
 12224  004D68  EFB8  F026         	goto	u10290
 12225  004D6C                     u10291:
 12226  004D6C  EFD8  F026         	goto	l9096
 12227  004D70                     u10290:
 12228  004D70                     
 12229                           ;main.c: 365:         if (motorPower > (700)) {
 12230  004D70  BE19               	btfsc	(setMotor@motorPower+1)^0,7,c
 12231  004D72  EFC4  F026         	goto	u10301
 12232  004D76  0EBD               	movlw	189
 12233  004D78  5C18               	subwf	setMotor@motorPower^0,w,c
 12234  004D7A  0E02               	movlw	2
 12235  004D7C  5819               	subwfb	(setMotor@motorPower+1)^0,w,c
 12236  004D7E  A0D8               	btfss	status,0,c
 12237  004D80  EFC4  F026         	goto	u10301
 12238  004D84  EFC6  F026         	goto	u10300
 12239  004D88                     u10301:
 12240  004D88  EFCA  F026         	goto	l9092
 12241  004D8C                     u10300:
 12242  004D8C                     
 12243                           ;main.c: 366:             motorPower = (700);
 12244  004D8C  0E02               	movlw	2
 12245  004D8E  6E19               	movwf	(setMotor@motorPower+1)^0,c
 12246  004D90  0EBC               	movlw	188
 12247  004D92  6E18               	movwf	setMotor@motorPower^0,c
 12248  004D94                     l9092:
 12249                           
 12250                           ;main.c: 368:         PWM7_LoadDutyValue((uint16_t) (motorPower));
 12251  004D94  C018  F014         	movff	setMotor@motorPower,PWM7_LoadDutyValue@dutyValue
 12252  004D98  C019  F015         	movff	setMotor@motorPower+1,PWM7_LoadDutyValue@dutyValue+1
 12253  004D9C  EC84  F02F         	call	_PWM7_LoadDutyValue	;wreg free
 12254  004DA0                     
 12255                           ;main.c: 369:         PWM8_LoadDutyValue(0);
 12256  004DA0  0E00               	movlw	0
 12257  004DA2  6E15               	movwf	(PWM8_LoadDutyValue@dutyValue+1)^0,c
 12258  004DA4  0E00               	movlw	0
 12259  004DA6  6E14               	movwf	PWM8_LoadDutyValue@dutyValue^0,c
 12260  004DA8  EC6A  F02F         	call	_PWM8_LoadDutyValue	;wreg free
 12261                           
 12262                           ;main.c: 370:     } else if (motorPower <= -(100)) {
 12263  004DAC  EF1A  F027         	goto	l1378
 12264  004DB0                     l9096:
 12265  004DB0  AE19               	btfss	(setMotor@motorPower+1)^0,7,c
 12266  004DB2  EFE4  F026         	goto	u10311
 12267  004DB6  0E9D               	movlw	157
 12268  004DB8  5C18               	subwf	setMotor@motorPower^0,w,c
 12269  004DBA  0EFF               	movlw	255
 12270  004DBC  5819               	subwfb	(setMotor@motorPower+1)^0,w,c
 12271  004DBE  B0D8               	btfsc	status,0,c
 12272  004DC0  EFE4  F026         	goto	u10311
 12273  004DC4  EFE6  F026         	goto	u10310
 12274  004DC8                     u10311:
 12275  004DC8  EF0E  F027         	goto	l9106
 12276  004DCC                     u10310:
 12277  004DCC                     
 12278                           ;main.c: 371:         if (motorPower < (-400)) {
 12279  004DCC  AE19               	btfss	(setMotor@motorPower+1)^0,7,c
 12280  004DCE  EFF2  F026         	goto	u10321
 12281  004DD2  0E70               	movlw	112
 12282  004DD4  5C18               	subwf	setMotor@motorPower^0,w,c
 12283  004DD6  0EFE               	movlw	254
 12284  004DD8  5819               	subwfb	(setMotor@motorPower+1)^0,w,c
 12285  004DDA  B0D8               	btfsc	status,0,c
 12286  004DDC  EFF2  F026         	goto	u10321
 12287  004DE0  EFF4  F026         	goto	u10320
 12288  004DE4                     u10321:
 12289  004DE4  EFF8  F026         	goto	l9102
 12290  004DE8                     u10320:
 12291  004DE8                     
 12292                           ;main.c: 372:             motorPower = (-400);
 12293  004DE8  0EFE               	movlw	254
 12294  004DEA  6E19               	movwf	(setMotor@motorPower+1)^0,c
 12295  004DEC  0E70               	movlw	112
 12296  004DEE  6E18               	movwf	setMotor@motorPower^0,c
 12297  004DF0                     l9102:
 12298                           
 12299                           ;main.c: 374:         PWM7_LoadDutyValue(0);
 12300  004DF0  0E00               	movlw	0
 12301  004DF2  6E15               	movwf	(PWM7_LoadDutyValue@dutyValue+1)^0,c
 12302  004DF4  0E00               	movlw	0
 12303  004DF6  6E14               	movwf	PWM7_LoadDutyValue@dutyValue^0,c
 12304  004DF8  EC84  F02F         	call	_PWM7_LoadDutyValue	;wreg free
 12305  004DFC                     
 12306                           ;main.c: 375:         PWM8_LoadDutyValue((uint16_t) (-motorPower));
 12307  004DFC  C018  F01A         	movff	setMotor@motorPower,??_setMotor
 12308  004E00  C019  F01B         	movff	setMotor@motorPower+1,??_setMotor+1
 12309  004E04  1E1A               	comf	??_setMotor^0,f,c
 12310  004E06  1E1B               	comf	(??_setMotor+1)^0,f,c
 12311  004E08  4A1A               	infsnz	??_setMotor^0,f,c
 12312  004E0A  2A1B               	incf	(??_setMotor+1)^0,f,c
 12313  004E0C  C01A  F014         	movff	??_setMotor,PWM8_LoadDutyValue@dutyValue
 12314  004E10  C01B  F015         	movff	??_setMotor+1,PWM8_LoadDutyValue@dutyValue+1
 12315  004E14  EC6A  F02F         	call	_PWM8_LoadDutyValue	;wreg free
 12316                           
 12317                           ;main.c: 376:     } else {
 12318  004E18  EF1A  F027         	goto	l1378
 12319  004E1C                     l9106:
 12320                           
 12321                           ;main.c: 377:         PWM7_LoadDutyValue(0);
 12322  004E1C  0E00               	movlw	0
 12323  004E1E  6E15               	movwf	(PWM7_LoadDutyValue@dutyValue+1)^0,c
 12324  004E20  0E00               	movlw	0
 12325  004E22  6E14               	movwf	PWM7_LoadDutyValue@dutyValue^0,c
 12326  004E24  EC84  F02F         	call	_PWM7_LoadDutyValue	;wreg free
 12327                           
 12328                           ;main.c: 378:         PWM8_LoadDutyValue(0);
 12329  004E28  0E00               	movlw	0
 12330  004E2A  6E15               	movwf	(PWM8_LoadDutyValue@dutyValue+1)^0,c
 12331  004E2C  0E00               	movlw	0
 12332  004E2E  6E14               	movwf	PWM8_LoadDutyValue@dutyValue^0,c
 12333  004E30  EC6A  F02F         	call	_PWM8_LoadDutyValue	;wreg free
 12334  004E34                     l1378:
 12335  004E34  0012               	return		;funcret
 12336  004E36                     __end_of_setMotor:
 12337                           	callstack 0
 12338                           
 12339 ;; *************** function _PWM8_LoadDutyValue *****************
 12340 ;; Defined at:
 12341 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 12342 ;; Parameters:    Size  Location     Type
 12343 ;;  dutyValue       2   19[COMRAM] unsigned short 
 12344 ;; Auto vars:     Size  Location     Type
 12345 ;;		None
 12346 ;; Return value:  Size  Location     Type
 12347 ;;                  1    wreg      void 
 12348 ;; Registers used:
 12349 ;;		wreg, status,2, status,0
 12350 ;; Tracked objects:
 12351 ;;		On entry : 0/0
 12352 ;;		On exit  : 0/0
 12353 ;;		Unchanged: 0/0
 12354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12355 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12357 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12358 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12359 ;;Total ram usage:        4 bytes
 12360 ;; Hardware stack levels used: 1
 12361 ;; Hardware stack levels required when called: 8
 12362 ;; This function calls:
 12363 ;;		Nothing
 12364 ;; This function is called by:
 12365 ;;		_setMotor
 12366 ;; This function uses a non-reentrant model
 12367 ;;
 12368                           
 12369                           	psect	text47
 12370  005ED4                     __ptext47:
 12371                           	callstack 0
 12372  005ED4                     _PWM8_LoadDutyValue:
 12373                           	callstack 19
 12374  005ED4                     
 12375                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 12376  005ED4  C014  F016         	movff	PWM8_LoadDutyValue@dutyValue,??_PWM8_LoadDutyValue
 12377  005ED8  C015  F017         	movff	PWM8_LoadDutyValue@dutyValue+1,??_PWM8_LoadDutyValue+1
 12378  005EDC  90D8               	bcf	status,0,c
 12379  005EDE  3217               	rrcf	(??_PWM8_LoadDutyValue+1)^0,f,c
 12380  005EE0  3216               	rrcf	??_PWM8_LoadDutyValue^0,f,c
 12381  005EE2  90D8               	bcf	status,0,c
 12382  005EE4  3217               	rrcf	(??_PWM8_LoadDutyValue+1)^0,f,c
 12383  005EE6  3216               	rrcf	??_PWM8_LoadDutyValue^0,f,c
 12384  005EE8  5016               	movf	??_PWM8_LoadDutyValue^0,w,c
 12385  005EEA  6E61               	movwf	97,c	;volatile
 12386                           
 12387                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 12388  005EEC  C014  F016         	movff	PWM8_LoadDutyValue@dutyValue,??_PWM8_LoadDutyValue
 12389  005EF0  0E03               	movlw	3
 12390  005EF2  1616               	andwf	??_PWM8_LoadDutyValue^0,f,c
 12391  005EF4  0E06               	movlw	6
 12392  005EF6  6E17               	movwf	(??_PWM8_LoadDutyValue+1)^0,c
 12393  005EF8                     u10165:
 12394  005EF8  90D8               	bcf	status,0,c
 12395  005EFA  3616               	rlcf	??_PWM8_LoadDutyValue^0,f,c
 12396  005EFC  2E17               	decfsz	(??_PWM8_LoadDutyValue+1)^0,f,c
 12397  005EFE  EF7C  F02F         	goto	u10165
 12398  005F02  5016               	movf	??_PWM8_LoadDutyValue^0,w,c
 12399  005F04  6E60               	movwf	96,c	;volatile
 12400  005F06  0012               	return		;funcret
 12401  005F08                     __end_of_PWM8_LoadDutyValue:
 12402                           	callstack 0
 12403                           
 12404 ;; *************** function _PWM7_LoadDutyValue *****************
 12405 ;; Defined at:
 12406 ;;		line 74 in file "mcc_generated_files/pwm7.c"
 12407 ;; Parameters:    Size  Location     Type
 12408 ;;  dutyValue       2   19[COMRAM] unsigned short 
 12409 ;; Auto vars:     Size  Location     Type
 12410 ;;		None
 12411 ;; Return value:  Size  Location     Type
 12412 ;;                  1    wreg      void 
 12413 ;; Registers used:
 12414 ;;		wreg, status,2, status,0
 12415 ;; Tracked objects:
 12416 ;;		On entry : 0/0
 12417 ;;		On exit  : 0/0
 12418 ;;		Unchanged: 0/0
 12419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12420 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12422 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12423 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12424 ;;Total ram usage:        4 bytes
 12425 ;; Hardware stack levels used: 1
 12426 ;; Hardware stack levels required when called: 8
 12427 ;; This function calls:
 12428 ;;		Nothing
 12429 ;; This function is called by:
 12430 ;;		_setMotor
 12431 ;; This function uses a non-reentrant model
 12432 ;;
 12433                           
 12434                           	psect	text48
 12435  005F08                     __ptext48:
 12436                           	callstack 0
 12437  005F08                     _PWM7_LoadDutyValue:
 12438                           	callstack 19
 12439  005F08                     
 12440                           ;mcc_generated_files/pwm7.c: 74:  void PWM7_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm7.c: 75:  {;mcc_generated_files/pwm7.c: 77:      PWM7DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 12441  005F08  C014  F016         	movff	PWM7_LoadDutyValue@dutyValue,??_PWM7_LoadDutyValue
 12442  005F0C  C015  F017         	movff	PWM7_LoadDutyValue@dutyValue+1,??_PWM7_LoadDutyValue+1
 12443  005F10  90D8               	bcf	status,0,c
 12444  005F12  3217               	rrcf	(??_PWM7_LoadDutyValue+1)^0,f,c
 12445  005F14  3216               	rrcf	??_PWM7_LoadDutyValue^0,f,c
 12446  005F16  90D8               	bcf	status,0,c
 12447  005F18  3217               	rrcf	(??_PWM7_LoadDutyValue+1)^0,f,c
 12448  005F1A  3216               	rrcf	??_PWM7_LoadDutyValue^0,f,c
 12449  005F1C  5016               	movf	??_PWM7_LoadDutyValue^0,w,c
 12450  005F1E  6E65               	movwf	101,c	;volatile
 12451                           
 12452                           ;mcc_generated_files/pwm7.c: 80:      PWM7DCL = (dutyValue & 0x0003)<<6;
 12453  005F20  C014  F016         	movff	PWM7_LoadDutyValue@dutyValue,??_PWM7_LoadDutyValue
 12454  005F24  0E03               	movlw	3
 12455  005F26  1616               	andwf	??_PWM7_LoadDutyValue^0,f,c
 12456  005F28  0E06               	movlw	6
 12457  005F2A  6E17               	movwf	(??_PWM7_LoadDutyValue+1)^0,c
 12458  005F2C                     u10155:
 12459  005F2C  90D8               	bcf	status,0,c
 12460  005F2E  3616               	rlcf	??_PWM7_LoadDutyValue^0,f,c
 12461  005F30  2E17               	decfsz	(??_PWM7_LoadDutyValue+1)^0,f,c
 12462  005F32  EF96  F02F         	goto	u10155
 12463  005F36  5016               	movf	??_PWM7_LoadDutyValue^0,w,c
 12464  005F38  6E64               	movwf	100,c	;volatile
 12465  005F3A  0012               	return		;funcret
 12466  005F3C                     __end_of_PWM7_LoadDutyValue:
 12467                           	callstack 0
 12468                           
 12469 ;; *************** function _actSpeed *****************
 12470 ;; Defined at:
 12471 ;;		line 73 in file "main.c"
 12472 ;; Parameters:    Size  Location     Type
 12473 ;;		None
 12474 ;; Auto vars:     Size  Location     Type
 12475 ;;  speed           2   35[COMRAM] short 
 12476 ;; Return value:  Size  Location     Type
 12477 ;;                  2   33[COMRAM] short 
 12478 ;; Registers used:
 12479 ;;		wreg, status,2, status,0, cstack
 12480 ;; Tracked objects:
 12481 ;;		On entry : 0/0
 12482 ;;		On exit  : 0/0
 12483 ;;		Unchanged: 0/0
 12484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12485 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12486 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12488 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12489 ;;Total ram usage:        4 bytes
 12490 ;; Hardware stack levels used: 1
 12491 ;; Hardware stack levels required when called: 9
 12492 ;; This function calls:
 12493 ;;		___aldiv
 12494 ;; This function is called by:
 12495 ;;		_calcMotorPow
 12496 ;; This function uses a non-reentrant model
 12497 ;;
 12498                           
 12499                           	psect	text49
 12500  005616                     __ptext49:
 12501                           	callstack 0
 12502  005616                     _actSpeed:
 12503                           	callstack 19
 12504  005616                     
 12505                           ;main.c: 74:     int16_t speed = 0;
 12506  005616  0E00               	movlw	0
 12507  005618  6E25               	movwf	(actSpeed@speed+1)^0,c
 12508  00561A  0E00               	movlw	0
 12509  00561C  6E24               	movwf	actSpeed@speed^0,c
 12510  00561E                     
 12511                           ;main.c: 75:     if (smtPeriod) {
 12512  00561E  5048               	movf	_smtPeriod^0,w,c	;volatile
 12513  005620  1049               	iorwf	(_smtPeriod+1)^0,w,c	;volatile
 12514  005622  104A               	iorwf	(_smtPeriod+2)^0,w,c	;volatile
 12515  005624  104B               	iorwf	(_smtPeriod+3)^0,w,c	;volatile
 12516  005626  B4D8               	btfsc	status,2,c
 12517  005628  EF18  F02B         	goto	u6711
 12518  00562C  EF1A  F02B         	goto	u6710
 12519  005630                     u6711:
 12520  005630  EF50  F02B         	goto	l6796
 12521  005634                     u6710:
 12522  005634                     
 12523                           ;main.c: 76:         if (CLC3CONbits.LC3OUT) {
 12524  005634  013C               	movlb	60	; () banked
 12525  005636  AB60               	btfss	96,5,b	;volatile
 12526  005638  EF20  F02B         	goto	u6721
 12527  00563C  EF22  F02B         	goto	u6720
 12528  005640                     u6721:
 12529  005640  EF3A  F02B         	goto	l6794
 12530  005644                     u6720:
 12531  005644                     
 12532                           ; BSR set to: 60
 12533                           ;main.c: 77:             speed = (int16_t) ((int32_t) (500000 / (int32_t) smtPeriod));
 12534  005644  0E20               	movlw	32
 12535  005646  6E14               	movwf	___aldiv@dividend^0,c
 12536  005648  0EA1               	movlw	161
 12537  00564A  6E15               	movwf	(___aldiv@dividend+1)^0,c
 12538  00564C  0E07               	movlw	7
 12539  00564E  6E16               	movwf	(___aldiv@dividend+2)^0,c
 12540  005650  0E00               	movlw	0
 12541  005652  6E17               	movwf	(___aldiv@dividend+3)^0,c
 12542  005654  C048  F018         	movff	_smtPeriod,___aldiv@divisor	;volatile
 12543  005658  C049  F019         	movff	_smtPeriod+1,___aldiv@divisor+1	;volatile
 12544  00565C  C04A  F01A         	movff	_smtPeriod+2,___aldiv@divisor+2	;volatile
 12545  005660  C04B  F01B         	movff	_smtPeriod+3,___aldiv@divisor+3	;volatile
 12546  005664  ECAC  F023         	call	___aldiv	;wreg free
 12547  005668  C014  F024         	movff	?___aldiv,actSpeed@speed
 12548  00566C  C015  F025         	movff	?___aldiv+1,actSpeed@speed+1
 12549                           
 12550                           ;main.c: 78:         } else {
 12551  005670  EF50  F02B         	goto	l6796
 12552  005674                     l6794:
 12553                           
 12554                           ; BSR set to: 60
 12555                           ;main.c: 79:             speed = (int16_t) ((int32_t) (-500000 / (int32_t) smtPeriod));
 12556  005674  0EE0               	movlw	224
 12557  005676  6E14               	movwf	___aldiv@dividend^0,c
 12558  005678  0E5E               	movlw	94
 12559  00567A  6E15               	movwf	(___aldiv@dividend+1)^0,c
 12560  00567C  0EF8               	movlw	248
 12561  00567E  6E16               	movwf	(___aldiv@dividend+2)^0,c
 12562  005680  0EFF               	movlw	255
 12563  005682  6E17               	movwf	(___aldiv@dividend+3)^0,c
 12564  005684  C048  F018         	movff	_smtPeriod,___aldiv@divisor	;volatile
 12565  005688  C049  F019         	movff	_smtPeriod+1,___aldiv@divisor+1	;volatile
 12566  00568C  C04A  F01A         	movff	_smtPeriod+2,___aldiv@divisor+2	;volatile
 12567  005690  C04B  F01B         	movff	_smtPeriod+3,___aldiv@divisor+3	;volatile
 12568  005694  ECAC  F023         	call	___aldiv	;wreg free
 12569  005698  C014  F024         	movff	?___aldiv,actSpeed@speed
 12570  00569C  C015  F025         	movff	?___aldiv+1,actSpeed@speed+1
 12571  0056A0                     l6796:
 12572                           
 12573                           ;main.c: 82:     return speed;
 12574  0056A0  C024  F022         	movff	actSpeed@speed,?_actSpeed
 12575  0056A4  C025  F023         	movff	actSpeed@speed+1,?_actSpeed+1
 12576  0056A8  0012               	return		;funcret
 12577  0056AA                     __end_of_actSpeed:
 12578                           	callstack 0
 12579                           
 12580 ;; *************** function ___aldiv *****************
 12581 ;; Defined at:
 12582 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aldiv.c"
 12583 ;; Parameters:    Size  Location     Type
 12584 ;;  dividend        4   19[COMRAM] long 
 12585 ;;  divisor         4   23[COMRAM] long 
 12586 ;; Auto vars:     Size  Location     Type
 12587 ;;  quotient        4   29[COMRAM] long 
 12588 ;;  sign            1   28[COMRAM] unsigned char 
 12589 ;;  counter         1   27[COMRAM] unsigned char 
 12590 ;; Return value:  Size  Location     Type
 12591 ;;                  4   19[COMRAM] long 
 12592 ;; Registers used:
 12593 ;;		wreg, status,2, status,0
 12594 ;; Tracked objects:
 12595 ;;		On entry : 0/0
 12596 ;;		On exit  : 0/0
 12597 ;;		Unchanged: 0/0
 12598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12599 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12600 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12602 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12603 ;;Total ram usage:       14 bytes
 12604 ;; Hardware stack levels used: 1
 12605 ;; Hardware stack levels required when called: 8
 12606 ;; This function calls:
 12607 ;;		Nothing
 12608 ;; This function is called by:
 12609 ;;		_actSpeed
 12610 ;; This function uses a non-reentrant model
 12611 ;;
 12612                           
 12613                           	psect	text50
 12614  004758                     __ptext50:
 12615                           	callstack 0
 12616  004758                     ___aldiv:
 12617                           	callstack 19
 12618  004758  0E00               	movlw	0
 12619  00475A  6E1D               	movwf	___aldiv@sign^0,c
 12620  00475C  BE1B               	btfsc	(___aldiv@divisor+3)^0,7,c
 12621  00475E  EFB5  F023         	goto	u6450
 12622  004762  EFB3  F023         	goto	u6451
 12623  004766                     u6451:
 12624  004766  EFBF  F023         	goto	l6594
 12625  00476A                     u6450:
 12626  00476A  1E1B               	comf	(___aldiv@divisor+3)^0,f,c
 12627  00476C  1E1A               	comf	(___aldiv@divisor+2)^0,f,c
 12628  00476E  1E19               	comf	(___aldiv@divisor+1)^0,f,c
 12629  004770  6C18               	negf	___aldiv@divisor^0,c
 12630  004772  0E00               	movlw	0
 12631  004774  2219               	addwfc	(___aldiv@divisor+1)^0,f,c
 12632  004776  221A               	addwfc	(___aldiv@divisor+2)^0,f,c
 12633  004778  221B               	addwfc	(___aldiv@divisor+3)^0,f,c
 12634  00477A  0E01               	movlw	1
 12635  00477C  6E1D               	movwf	___aldiv@sign^0,c
 12636  00477E                     l6594:
 12637  00477E  BE17               	btfsc	(___aldiv@dividend+3)^0,7,c
 12638  004780  EFC6  F023         	goto	u6460
 12639  004784  EFC4  F023         	goto	u6461
 12640  004788                     u6461:
 12641  004788  EFD0  F023         	goto	l6600
 12642  00478C                     u6460:
 12643  00478C  1E17               	comf	(___aldiv@dividend+3)^0,f,c
 12644  00478E  1E16               	comf	(___aldiv@dividend+2)^0,f,c
 12645  004790  1E15               	comf	(___aldiv@dividend+1)^0,f,c
 12646  004792  6C14               	negf	___aldiv@dividend^0,c
 12647  004794  0E00               	movlw	0
 12648  004796  2215               	addwfc	(___aldiv@dividend+1)^0,f,c
 12649  004798  2216               	addwfc	(___aldiv@dividend+2)^0,f,c
 12650  00479A  2217               	addwfc	(___aldiv@dividend+3)^0,f,c
 12651  00479C  0E01               	movlw	1
 12652  00479E  1A1D               	xorwf	___aldiv@sign^0,f,c
 12653  0047A0                     l6600:
 12654  0047A0  0E00               	movlw	0
 12655  0047A2  6E1E               	movwf	___aldiv@quotient^0,c
 12656  0047A4  0E00               	movlw	0
 12657  0047A6  6E1F               	movwf	(___aldiv@quotient+1)^0,c
 12658  0047A8  0E00               	movlw	0
 12659  0047AA  6E20               	movwf	(___aldiv@quotient+2)^0,c
 12660  0047AC  0E00               	movlw	0
 12661  0047AE  6E21               	movwf	(___aldiv@quotient+3)^0,c
 12662  0047B0  5018               	movf	___aldiv@divisor^0,w,c
 12663  0047B2  1019               	iorwf	(___aldiv@divisor+1)^0,w,c
 12664  0047B4  101A               	iorwf	(___aldiv@divisor+2)^0,w,c
 12665  0047B6  101B               	iorwf	(___aldiv@divisor+3)^0,w,c
 12666  0047B8  B4D8               	btfsc	status,2,c
 12667  0047BA  EFE1  F023         	goto	u6471
 12668  0047BE  EFE3  F023         	goto	u6470
 12669  0047C2                     u6471:
 12670  0047C2  EF19  F024         	goto	l6622
 12671  0047C6                     u6470:
 12672  0047C6  0E01               	movlw	1
 12673  0047C8  6E1C               	movwf	___aldiv@counter^0,c
 12674  0047CA  EFED  F023         	goto	l6608
 12675  0047CE                     l6606:
 12676  0047CE  90D8               	bcf	status,0,c
 12677  0047D0  3618               	rlcf	___aldiv@divisor^0,f,c
 12678  0047D2  3619               	rlcf	(___aldiv@divisor+1)^0,f,c
 12679  0047D4  361A               	rlcf	(___aldiv@divisor+2)^0,f,c
 12680  0047D6  361B               	rlcf	(___aldiv@divisor+3)^0,f,c
 12681  0047D8  2A1C               	incf	___aldiv@counter^0,f,c
 12682  0047DA                     l6608:
 12683  0047DA  AE1B               	btfss	(___aldiv@divisor+3)^0,7,c
 12684  0047DC  EFF2  F023         	goto	u6481
 12685  0047E0  EFF4  F023         	goto	u6480
 12686  0047E4                     u6481:
 12687  0047E4  EFE7  F023         	goto	l6606
 12688  0047E8                     u6480:
 12689  0047E8                     l6610:
 12690  0047E8  90D8               	bcf	status,0,c
 12691  0047EA  361E               	rlcf	___aldiv@quotient^0,f,c
 12692  0047EC  361F               	rlcf	(___aldiv@quotient+1)^0,f,c
 12693  0047EE  3620               	rlcf	(___aldiv@quotient+2)^0,f,c
 12694  0047F0  3621               	rlcf	(___aldiv@quotient+3)^0,f,c
 12695  0047F2  5018               	movf	___aldiv@divisor^0,w,c
 12696  0047F4  5C14               	subwf	___aldiv@dividend^0,w,c
 12697  0047F6  5019               	movf	(___aldiv@divisor+1)^0,w,c
 12698  0047F8  5815               	subwfb	(___aldiv@dividend+1)^0,w,c
 12699  0047FA  501A               	movf	(___aldiv@divisor+2)^0,w,c
 12700  0047FC  5816               	subwfb	(___aldiv@dividend+2)^0,w,c
 12701  0047FE  501B               	movf	(___aldiv@divisor+3)^0,w,c
 12702  004800  5817               	subwfb	(___aldiv@dividend+3)^0,w,c
 12703  004802  A0D8               	btfss	status,0,c
 12704  004804  EF06  F024         	goto	u6491
 12705  004808  EF08  F024         	goto	u6490
 12706  00480C                     u6491:
 12707  00480C  EF11  F024         	goto	l6618
 12708  004810                     u6490:
 12709  004810  5018               	movf	___aldiv@divisor^0,w,c
 12710  004812  5E14               	subwf	___aldiv@dividend^0,f,c
 12711  004814  5019               	movf	(___aldiv@divisor+1)^0,w,c
 12712  004816  5A15               	subwfb	(___aldiv@dividend+1)^0,f,c
 12713  004818  501A               	movf	(___aldiv@divisor+2)^0,w,c
 12714  00481A  5A16               	subwfb	(___aldiv@dividend+2)^0,f,c
 12715  00481C  501B               	movf	(___aldiv@divisor+3)^0,w,c
 12716  00481E  5A17               	subwfb	(___aldiv@dividend+3)^0,f,c
 12717  004820  801E               	bsf	___aldiv@quotient^0,0,c
 12718  004822                     l6618:
 12719  004822  90D8               	bcf	status,0,c
 12720  004824  321B               	rrcf	(___aldiv@divisor+3)^0,f,c
 12721  004826  321A               	rrcf	(___aldiv@divisor+2)^0,f,c
 12722  004828  3219               	rrcf	(___aldiv@divisor+1)^0,f,c
 12723  00482A  3218               	rrcf	___aldiv@divisor^0,f,c
 12724  00482C  2E1C               	decfsz	___aldiv@counter^0,f,c
 12725  00482E  EFF4  F023         	goto	l6610
 12726  004832                     l6622:
 12727  004832  501D               	movf	___aldiv@sign^0,w,c
 12728  004834  B4D8               	btfsc	status,2,c
 12729  004836  EF1F  F024         	goto	u6501
 12730  00483A  EF21  F024         	goto	u6500
 12731  00483E                     u6501:
 12732  00483E  EF29  F024         	goto	l6626
 12733  004842                     u6500:
 12734  004842  1E21               	comf	(___aldiv@quotient+3)^0,f,c
 12735  004844  1E20               	comf	(___aldiv@quotient+2)^0,f,c
 12736  004846  1E1F               	comf	(___aldiv@quotient+1)^0,f,c
 12737  004848  6C1E               	negf	___aldiv@quotient^0,c
 12738  00484A  0E00               	movlw	0
 12739  00484C  221F               	addwfc	(___aldiv@quotient+1)^0,f,c
 12740  00484E  2220               	addwfc	(___aldiv@quotient+2)^0,f,c
 12741  004850  2221               	addwfc	(___aldiv@quotient+3)^0,f,c
 12742  004852                     l6626:
 12743  004852  C01E  F014         	movff	___aldiv@quotient,?___aldiv
 12744  004856  C01F  F015         	movff	___aldiv@quotient+1,?___aldiv+1
 12745  00485A  C020  F016         	movff	___aldiv@quotient+2,?___aldiv+2
 12746  00485E  C021  F017         	movff	___aldiv@quotient+3,?___aldiv+3
 12747  004862  0012               	return		;funcret
 12748  004864                     __end_of___aldiv:
 12749                           	callstack 0
 12750                           
 12751 ;; *************** function ___xxtofl *****************
 12752 ;; Defined at:
 12753 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
 12754 ;; Parameters:    Size  Location     Type
 12755 ;;  sign            1    wreg     unsigned char 
 12756 ;;  val             4   27[COMRAM] long 
 12757 ;; Auto vars:     Size  Location     Type
 12758 ;;  sign            1   35[COMRAM] unsigned char 
 12759 ;;  arg             4   37[COMRAM] unsigned long 
 12760 ;;  exp             1   36[COMRAM] unsigned char 
 12761 ;; Return value:  Size  Location     Type
 12762 ;;                  4   27[COMRAM] unsigned char 
 12763 ;; Registers used:
 12764 ;;		wreg, status,2, status,0
 12765 ;; Tracked objects:
 12766 ;;		On entry : 0/0
 12767 ;;		On exit  : 0/0
 12768 ;;		Unchanged: 0/0
 12769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12770 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12771 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12772 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12773 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12774 ;;Total ram usage:       14 bytes
 12775 ;; Hardware stack levels used: 1
 12776 ;; Hardware stack levels required when called: 8
 12777 ;; This function calls:
 12778 ;;		Nothing
 12779 ;; This function is called by:
 12780 ;;		_loop
 12781 ;;		_checkBatt
 12782 ;;		_checkCurveCount
 12783 ;;		_calcSteering
 12784 ;;		_calcSpeed
 12785 ;;		_calcMotorPow
 12786 ;;		_setSteering
 12787 ;; This function uses a non-reentrant model
 12788 ;;
 12789                           
 12790                           	psect	text51
 12791  003EF4                     __ptext51:
 12792                           	callstack 0
 12793  003EF4                     ___xxtofl:
 12794                           	callstack 19
 12795                           
 12796                           ;incstack = 0
 12797                           ;___xxtofl@sign stored from wreg
 12798  003EF4  6E24               	movwf	___xxtofl@sign^0,c
 12799  003EF6  5024               	movf	___xxtofl@sign^0,w,c
 12800  003EF8  B4D8               	btfsc	status,2,c
 12801  003EFA  EF81  F01F         	goto	u10191
 12802  003EFE  EF83  F01F         	goto	u10190
 12803  003F02                     u10191:
 12804  003F02  EFA5  F01F         	goto	l2053
 12805  003F06                     u10190:
 12806  003F06  BE1F               	btfsc	(___xxtofl@val+3)^0,7,c
 12807  003F08  EF8A  F01F         	goto	u10200
 12808  003F0C  EF88  F01F         	goto	u10201
 12809  003F10                     u10201:
 12810  003F10  EFA5  F01F         	goto	l2053
 12811  003F14                     u10200:
 12812  003F14  C01C  F020         	movff	___xxtofl@val,??___xxtofl
 12813  003F18  C01D  F021         	movff	___xxtofl@val+1,??___xxtofl+1
 12814  003F1C  C01E  F022         	movff	___xxtofl@val+2,??___xxtofl+2
 12815  003F20  C01F  F023         	movff	___xxtofl@val+3,??___xxtofl+3
 12816  003F24  1E20               	comf	??___xxtofl^0,f,c
 12817  003F26  1E21               	comf	(??___xxtofl+1)^0,f,c
 12818  003F28  1E22               	comf	(??___xxtofl+2)^0,f,c
 12819  003F2A  1E23               	comf	(??___xxtofl+3)^0,f,c
 12820  003F2C  2A20               	incf	??___xxtofl^0,f,c
 12821  003F2E  0E00               	movlw	0
 12822  003F30  2221               	addwfc	(??___xxtofl+1)^0,f,c
 12823  003F32  2222               	addwfc	(??___xxtofl+2)^0,f,c
 12824  003F34  2223               	addwfc	(??___xxtofl+3)^0,f,c
 12825  003F36  C020  F026         	movff	??___xxtofl,___xxtofl@arg
 12826  003F3A  C021  F027         	movff	??___xxtofl+1,___xxtofl@arg+1
 12827  003F3E  C022  F028         	movff	??___xxtofl+2,___xxtofl@arg+2
 12828  003F42  C023  F029         	movff	??___xxtofl+3,___xxtofl@arg+3
 12829  003F46  EFAD  F01F         	goto	l9046
 12830  003F4A                     l2053:
 12831  003F4A  C01C  F026         	movff	___xxtofl@val,___xxtofl@arg
 12832  003F4E  C01D  F027         	movff	___xxtofl@val+1,___xxtofl@arg+1
 12833  003F52  C01E  F028         	movff	___xxtofl@val+2,___xxtofl@arg+2
 12834  003F56  C01F  F029         	movff	___xxtofl@val+3,___xxtofl@arg+3
 12835  003F5A                     l9046:
 12836  003F5A  501C               	movf	___xxtofl@val^0,w,c
 12837  003F5C  101D               	iorwf	(___xxtofl@val+1)^0,w,c
 12838  003F5E  101E               	iorwf	(___xxtofl@val+2)^0,w,c
 12839  003F60  101F               	iorwf	(___xxtofl@val+3)^0,w,c
 12840  003F62  A4D8               	btfss	status,2,c
 12841  003F64  EFB6  F01F         	goto	u10211
 12842  003F68  EFB8  F01F         	goto	u10210
 12843  003F6C                     u10211:
 12844  003F6C  EFC2  F01F         	goto	l9052
 12845  003F70                     u10210:
 12846  003F70  0E00               	movlw	0
 12847  003F72  6E1C               	movwf	?___xxtofl^0,c
 12848  003F74  0E00               	movlw	0
 12849  003F76  6E1D               	movwf	(?___xxtofl+1)^0,c
 12850  003F78  0E00               	movlw	0
 12851  003F7A  6E1E               	movwf	(?___xxtofl+2)^0,c
 12852  003F7C  0E00               	movlw	0
 12853  003F7E  6E1F               	movwf	(?___xxtofl+3)^0,c
 12854  003F80  EF53  F020         	goto	l2056
 12855  003F84                     l9052:
 12856  003F84  0E96               	movlw	150
 12857  003F86  6E25               	movwf	___xxtofl@exp^0,c
 12858  003F88  EFCC  F01F         	goto	l9056
 12859  003F8C                     l9054:
 12860  003F8C  2A25               	incf	___xxtofl@exp^0,f,c
 12861  003F8E  90D8               	bcf	status,0,c
 12862  003F90  3229               	rrcf	(___xxtofl@arg+3)^0,f,c
 12863  003F92  3228               	rrcf	(___xxtofl@arg+2)^0,f,c
 12864  003F94  3227               	rrcf	(___xxtofl@arg+1)^0,f,c
 12865  003F96  3226               	rrcf	___xxtofl@arg^0,f,c
 12866  003F98                     l9056:
 12867  003F98  0E00               	movlw	0
 12868  003F9A  1426               	andwf	___xxtofl@arg^0,w,c
 12869  003F9C  6E20               	movwf	??___xxtofl^0,c
 12870  003F9E  0E00               	movlw	0
 12871  003FA0  1427               	andwf	(___xxtofl@arg+1)^0,w,c
 12872  003FA2  6E21               	movwf	(??___xxtofl+1)^0,c
 12873  003FA4  0E00               	movlw	0
 12874  003FA6  1428               	andwf	(___xxtofl@arg+2)^0,w,c
 12875  003FA8  6E22               	movwf	(??___xxtofl+2)^0,c
 12876  003FAA  0EFE               	movlw	254
 12877  003FAC  1429               	andwf	(___xxtofl@arg+3)^0,w,c
 12878  003FAE  6E23               	movwf	(??___xxtofl+3)^0,c
 12879  003FB0  5020               	movf	??___xxtofl^0,w,c
 12880  003FB2  1021               	iorwf	(??___xxtofl+1)^0,w,c
 12881  003FB4  1022               	iorwf	(??___xxtofl+2)^0,w,c
 12882  003FB6  1023               	iorwf	(??___xxtofl+3)^0,w,c
 12883  003FB8  A4D8               	btfss	status,2,c
 12884  003FBA  EFE1  F01F         	goto	u10221
 12885  003FBE  EFE3  F01F         	goto	u10220
 12886  003FC2                     u10221:
 12887  003FC2  EFC6  F01F         	goto	l9054
 12888  003FC6                     u10220:
 12889  003FC6  EFF1  F01F         	goto	l2060
 12890  003FCA                     l9058:
 12891  003FCA  2A25               	incf	___xxtofl@exp^0,f,c
 12892  003FCC  0E01               	movlw	1
 12893  003FCE  2626               	addwf	___xxtofl@arg^0,f,c
 12894  003FD0  0E00               	movlw	0
 12895  003FD2  2227               	addwfc	(___xxtofl@arg+1)^0,f,c
 12896  003FD4  2228               	addwfc	(___xxtofl@arg+2)^0,f,c
 12897  003FD6  2229               	addwfc	(___xxtofl@arg+3)^0,f,c
 12898  003FD8  90D8               	bcf	status,0,c
 12899  003FDA  3229               	rrcf	(___xxtofl@arg+3)^0,f,c
 12900  003FDC  3228               	rrcf	(___xxtofl@arg+2)^0,f,c
 12901  003FDE  3227               	rrcf	(___xxtofl@arg+1)^0,f,c
 12902  003FE0  3226               	rrcf	___xxtofl@arg^0,f,c
 12903  003FE2                     l2060:
 12904  003FE2  0E00               	movlw	0
 12905  003FE4  1426               	andwf	___xxtofl@arg^0,w,c
 12906  003FE6  6E20               	movwf	??___xxtofl^0,c
 12907  003FE8  0E00               	movlw	0
 12908  003FEA  1427               	andwf	(___xxtofl@arg+1)^0,w,c
 12909  003FEC  6E21               	movwf	(??___xxtofl+1)^0,c
 12910  003FEE  0E00               	movlw	0
 12911  003FF0  1428               	andwf	(___xxtofl@arg+2)^0,w,c
 12912  003FF2  6E22               	movwf	(??___xxtofl+2)^0,c
 12913  003FF4  0EFF               	movlw	255
 12914  003FF6  1429               	andwf	(___xxtofl@arg+3)^0,w,c
 12915  003FF8  6E23               	movwf	(??___xxtofl+3)^0,c
 12916  003FFA  5020               	movf	??___xxtofl^0,w,c
 12917  003FFC  1021               	iorwf	(??___xxtofl+1)^0,w,c
 12918  003FFE  1022               	iorwf	(??___xxtofl+2)^0,w,c
 12919  004000  1023               	iorwf	(??___xxtofl+3)^0,w,c
 12920  004002  A4D8               	btfss	status,2,c
 12921  004004  EF06  F020         	goto	u10231
 12922  004008  EF08  F020         	goto	u10230
 12923  00400C                     u10231:
 12924  00400C  EFE5  F01F         	goto	l9058
 12925  004010                     u10230:
 12926  004010  EF10  F020         	goto	l9066
 12927  004014                     l9064:
 12928  004014  0625               	decf	___xxtofl@exp^0,f,c
 12929  004016  90D8               	bcf	status,0,c
 12930  004018  3626               	rlcf	___xxtofl@arg^0,f,c
 12931  00401A  3627               	rlcf	(___xxtofl@arg+1)^0,f,c
 12932  00401C  3628               	rlcf	(___xxtofl@arg+2)^0,f,c
 12933  00401E  3629               	rlcf	(___xxtofl@arg+3)^0,f,c
 12934  004020                     l9066:
 12935  004020  BE28               	btfsc	(___xxtofl@arg+2)^0,7,c
 12936  004022  EF15  F020         	goto	u10241
 12937  004026  EF17  F020         	goto	u10240
 12938  00402A                     u10241:
 12939  00402A  EF1F  F020         	goto	l2067
 12940  00402E                     u10240:
 12941  00402E  0E02               	movlw	2
 12942  004030  6025               	cpfslt	___xxtofl@exp^0,c
 12943  004032  EF1D  F020         	goto	u10251
 12944  004036  EF1F  F020         	goto	u10250
 12945  00403A                     u10251:
 12946  00403A  EF0A  F020         	goto	l9064
 12947  00403E                     u10250:
 12948  00403E                     l2067:
 12949  00403E  B025               	btfsc	___xxtofl@exp^0,0,c
 12950  004040  EF24  F020         	goto	u10261
 12951  004044  EF26  F020         	goto	u10260
 12952  004048                     u10261:
 12953  004048  EF27  F020         	goto	l9072
 12954  00404C                     u10260:
 12955  00404C  9E28               	bcf	(___xxtofl@arg+2)^0,7,c
 12956  00404E                     l9072:
 12957  00404E  90D8               	bcf	status,0,c
 12958  004050  3225               	rrcf	___xxtofl@exp^0,f,c
 12959  004052  C025  F020         	movff	___xxtofl@exp,??___xxtofl
 12960  004056  6A21               	clrf	(??___xxtofl+1)^0,c
 12961  004058  6A22               	clrf	(??___xxtofl+2)^0,c
 12962  00405A  6A23               	clrf	(??___xxtofl+3)^0,c
 12963  00405C  C020  F023         	movff	??___xxtofl,??___xxtofl+3
 12964  004060  6A22               	clrf	(??___xxtofl+2)^0,c
 12965  004062  6A21               	clrf	(??___xxtofl+1)^0,c
 12966  004064  6A20               	clrf	??___xxtofl^0,c
 12967  004066  5020               	movf	??___xxtofl^0,w,c
 12968  004068  1226               	iorwf	___xxtofl@arg^0,f,c
 12969  00406A  5021               	movf	(??___xxtofl+1)^0,w,c
 12970  00406C  1227               	iorwf	(___xxtofl@arg+1)^0,f,c
 12971  00406E  5022               	movf	(??___xxtofl+2)^0,w,c
 12972  004070  1228               	iorwf	(___xxtofl@arg+2)^0,f,c
 12973  004072  5023               	movf	(??___xxtofl+3)^0,w,c
 12974  004074  1229               	iorwf	(___xxtofl@arg+3)^0,f,c
 12975  004076  5024               	movf	___xxtofl@sign^0,w,c
 12976  004078  B4D8               	btfsc	status,2,c
 12977  00407A  EF41  F020         	goto	u10271
 12978  00407E  EF43  F020         	goto	u10270
 12979  004082                     u10271:
 12980  004082  EF4B  F020         	goto	l9082
 12981  004086                     u10270:
 12982  004086  BE1F               	btfsc	(___xxtofl@val+3)^0,7,c
 12983  004088  EF4A  F020         	goto	u10280
 12984  00408C  EF48  F020         	goto	u10281
 12985  004090                     u10281:
 12986  004090  EF4B  F020         	goto	l9082
 12987  004094                     u10280:
 12988  004094  8E29               	bsf	(___xxtofl@arg+3)^0,7,c
 12989  004096                     l9082:
 12990  004096  C026  F01C         	movff	___xxtofl@arg,?___xxtofl
 12991  00409A  C027  F01D         	movff	___xxtofl@arg+1,?___xxtofl+1
 12992  00409E  C028  F01E         	movff	___xxtofl@arg+2,?___xxtofl+2
 12993  0040A2  C029  F01F         	movff	___xxtofl@arg+3,?___xxtofl+3
 12994  0040A6                     l2056:
 12995  0040A6  0012               	return		;funcret
 12996  0040A8                     __end_of___xxtofl:
 12997                           	callstack 0
 12998                           
 12999 ;; *************** function ___fltol *****************
 13000 ;; Defined at:
 13001 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
 13002 ;; Parameters:    Size  Location     Type
 13003 ;;  f1              4   25[BANK0 ] unsigned char 
 13004 ;; Auto vars:     Size  Location     Type
 13005 ;;  exp1            1   34[BANK0 ] unsigned char 
 13006 ;;  sign1           1   33[BANK0 ] unsigned char 
 13007 ;; Return value:  Size  Location     Type
 13008 ;;                  4   25[BANK0 ] long 
 13009 ;; Registers used:
 13010 ;;		wreg, status,2, status,0
 13011 ;; Tracked objects:
 13012 ;;		On entry : 0/0
 13013 ;;		On exit  : 0/0
 13014 ;;		Unchanged: 0/0
 13015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13016 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13017 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13018 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13019 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13020 ;;Total ram usage:       10 bytes
 13021 ;; Hardware stack levels used: 1
 13022 ;; Hardware stack levels required when called: 8
 13023 ;; This function calls:
 13024 ;;		Nothing
 13025 ;; This function is called by:
 13026 ;;		_calcSteering
 13027 ;;		_calcSpeed
 13028 ;;		_calcMotorPow
 13029 ;;		_setSteering
 13030 ;;		_efgtoa
 13031 ;; This function uses a non-reentrant model
 13032 ;;
 13033                           
 13034                           	psect	text52
 13035  004864                     __ptext52:
 13036                           	callstack 0
 13037  004864                     ___fltol:
 13038                           	callstack 19
 13039  004864  0100               	movlb	0	; () banked
 13040  004866  357B               	rlcf	(___fltol@f1+2)& (0+255),w,b
 13041  004868  357C               	rlcf	(___fltol@f1+3)& (0+255),w,b
 13042  00486A  6F82               	movwf	___fltol@exp1& (0+255),b
 13043  00486C  5182               	movf	___fltol@exp1& (0+255),w,b
 13044  00486E  A4D8               	btfss	status,2,c
 13045  004870  EF3C  F024         	goto	u8801
 13046  004874  EF3E  F024         	goto	u8800
 13047  004878                     u8801:
 13048  004878  EF48  F024         	goto	l8338
 13049  00487C                     u8800:
 13050  00487C                     l8334:
 13051                           
 13052                           ; BSR set to: 0
 13053  00487C  0E00               	movlw	0
 13054  00487E  6F79               	movwf	?___fltol& (0+255),b
 13055  004880  0E00               	movlw	0
 13056  004882  6F7A               	movwf	(?___fltol+1)& (0+255),b
 13057  004884  0E00               	movlw	0
 13058  004886  6F7B               	movwf	(?___fltol+2)& (0+255),b
 13059  004888  0E00               	movlw	0
 13060  00488A  6F7C               	movwf	(?___fltol+3)& (0+255),b
 13061  00488C  EFB5  F024         	goto	l1695
 13062  004890                     l8338:
 13063                           
 13064                           ; BSR set to: 0
 13065  004890  C079  F07D         	movff	___fltol@f1,??___fltol
 13066  004894  C07A  F07E         	movff	___fltol@f1+1,??___fltol+1
 13067  004898  C07B  F07F         	movff	___fltol@f1+2,??___fltol+2
 13068  00489C  C07C  F080         	movff	___fltol@f1+3,??___fltol+3
 13069  0048A0  0E20               	movlw	32
 13070  0048A2  EF58  F024         	goto	u8810
 13071  0048A6                     u8815:
 13072  0048A6  90D8               	bcf	status,0,c
 13073  0048A8  3380               	rrcf	(??___fltol+3)& (0+255),f,b
 13074  0048AA  337F               	rrcf	(??___fltol+2)& (0+255),f,b
 13075  0048AC  337E               	rrcf	(??___fltol+1)& (0+255),f,b
 13076  0048AE  337D               	rrcf	??___fltol& (0+255),f,b
 13077  0048B0                     u8810:
 13078  0048B0  2EE8               	decfsz	wreg,f,c
 13079  0048B2  EF53  F024         	goto	u8815
 13080  0048B6  517D               	movf	??___fltol& (0+255),w,b
 13081  0048B8  6F81               	movwf	___fltol@sign1& (0+255),b
 13082  0048BA                     
 13083                           ; BSR set to: 0
 13084  0048BA  8F7B               	bsf	(___fltol@f1+2)& (0+255),7,b
 13085  0048BC                     
 13086                           ; BSR set to: 0
 13087  0048BC  0EFF               	movlw	255
 13088  0048BE  1779               	andwf	___fltol@f1& (0+255),f,b
 13089  0048C0  0EFF               	movlw	255
 13090  0048C2  177A               	andwf	(___fltol@f1+1)& (0+255),f,b
 13091  0048C4  0EFF               	movlw	255
 13092  0048C6  177B               	andwf	(___fltol@f1+2)& (0+255),f,b
 13093  0048C8  0E00               	movlw	0
 13094  0048CA  177C               	andwf	(___fltol@f1+3)& (0+255),f,b
 13095  0048CC                     
 13096                           ; BSR set to: 0
 13097  0048CC  0E96               	movlw	150
 13098  0048CE  5F82               	subwf	___fltol@exp1& (0+255),f,b
 13099  0048D0                     
 13100                           ; BSR set to: 0
 13101  0048D0  BF82               	btfsc	___fltol@exp1& (0+255),7,b
 13102  0048D2  EF6F  F024         	goto	u8820
 13103  0048D6  EF6D  F024         	goto	u8821
 13104  0048DA                     u8821:
 13105  0048DA  EF85  F024         	goto	l8358
 13106  0048DE                     u8820:
 13107  0048DE                     
 13108                           ; BSR set to: 0
 13109  0048DE  5182               	movf	___fltol@exp1& (0+255),w,b
 13110  0048E0  0A80               	xorlw	128
 13111  0048E2  0F97               	addlw	151
 13112  0048E4  B0D8               	btfsc	status,0,c
 13113  0048E6  EF77  F024         	goto	u8831
 13114  0048EA  EF79  F024         	goto	u8830
 13115  0048EE                     u8831:
 13116  0048EE  EF7B  F024         	goto	l8354
 13117  0048F2                     u8830:
 13118  0048F2  EF3E  F024         	goto	l8334
 13119  0048F6                     l8354:
 13120                           
 13121                           ; BSR set to: 0
 13122  0048F6  90D8               	bcf	status,0,c
 13123  0048F8  337C               	rrcf	(___fltol@f1+3)& (0+255),f,b
 13124  0048FA  337B               	rrcf	(___fltol@f1+2)& (0+255),f,b
 13125  0048FC  337A               	rrcf	(___fltol@f1+1)& (0+255),f,b
 13126  0048FE  3379               	rrcf	___fltol@f1& (0+255),f,b
 13127  004900                     
 13128                           ; BSR set to: 0
 13129  004900  3F82               	incfsz	___fltol@exp1& (0+255),f,b
 13130  004902  EF7B  F024         	goto	l8354
 13131  004906  EF9D  F024         	goto	l8368
 13132  00490A                     l8358:
 13133                           
 13134                           ; BSR set to: 0
 13135  00490A  0E1F               	movlw	31
 13136  00490C  6582               	cpfsgt	___fltol@exp1& (0+255),b
 13137  00490E  EF8B  F024         	goto	u8841
 13138  004912  EF8D  F024         	goto	u8840
 13139  004916                     u8841:
 13140  004916  EF95  F024         	goto	l8366
 13141  00491A                     u8840:
 13142  00491A  EF3E  F024         	goto	l8334
 13143  00491E                     l8364:
 13144                           
 13145                           ; BSR set to: 0
 13146  00491E  90D8               	bcf	status,0,c
 13147  004920  3779               	rlcf	___fltol@f1& (0+255),f,b
 13148  004922  377A               	rlcf	(___fltol@f1+1)& (0+255),f,b
 13149  004924  377B               	rlcf	(___fltol@f1+2)& (0+255),f,b
 13150  004926  377C               	rlcf	(___fltol@f1+3)& (0+255),f,b
 13151  004928  0782               	decf	___fltol@exp1& (0+255),f,b
 13152  00492A                     l8366:
 13153                           
 13154                           ; BSR set to: 0
 13155  00492A  5182               	movf	___fltol@exp1& (0+255),w,b
 13156  00492C  A4D8               	btfss	status,2,c
 13157  00492E  EF9B  F024         	goto	u8851
 13158  004932  EF9D  F024         	goto	u8850
 13159  004936                     u8851:
 13160  004936  EF8F  F024         	goto	l8364
 13161  00493A                     u8850:
 13162  00493A                     l8368:
 13163                           
 13164                           ; BSR set to: 0
 13165  00493A  5181               	movf	___fltol@sign1& (0+255),w,b
 13166  00493C  B4D8               	btfsc	status,2,c
 13167  00493E  EFA3  F024         	goto	u8861
 13168  004942  EFA5  F024         	goto	u8860
 13169  004946                     u8861:
 13170  004946  EFAD  F024         	goto	l8372
 13171  00494A                     u8860:
 13172  00494A                     
 13173                           ; BSR set to: 0
 13174  00494A  1F7C               	comf	(___fltol@f1+3)& (0+255),f,b
 13175  00494C  1F7B               	comf	(___fltol@f1+2)& (0+255),f,b
 13176  00494E  1F7A               	comf	(___fltol@f1+1)& (0+255),f,b
 13177  004950  6D79               	negf	___fltol@f1& (0+255),b
 13178  004952  0E00               	movlw	0
 13179  004954  237A               	addwfc	(___fltol@f1+1)& (0+255),f,b
 13180  004956  237B               	addwfc	(___fltol@f1+2)& (0+255),f,b
 13181  004958  237C               	addwfc	(___fltol@f1+3)& (0+255),f,b
 13182  00495A                     l8372:
 13183                           
 13184                           ; BSR set to: 0
 13185  00495A  C079  F079         	movff	___fltol@f1,?___fltol
 13186  00495E  C07A  F07A         	movff	___fltol@f1+1,?___fltol+1
 13187  004962  C07B  F07B         	movff	___fltol@f1+2,?___fltol+2
 13188  004966  C07C  F07C         	movff	___fltol@f1+3,?___fltol+3
 13189  00496A                     l1695:
 13190                           
 13191                           ; BSR set to: 0
 13192  00496A  0012               	return		;funcret
 13193  00496C                     __end_of___fltol:
 13194                           	callstack 0
 13195                           
 13196 ;; *************** function ___flmul *****************
 13197 ;; Defined at:
 13198 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
 13199 ;; Parameters:    Size  Location     Type
 13200 ;;  b               4   41[COMRAM] long 
 13201 ;;  a               4   45[COMRAM] long 
 13202 ;; Auto vars:     Size  Location     Type
 13203 ;;  prod            4    7[BANK0 ] struct .
 13204 ;;  grs             4    2[BANK0 ] unsigned long 
 13205 ;;  temp            2   11[BANK0 ] struct .
 13206 ;;  bexp            1    6[BANK0 ] unsigned char 
 13207 ;;  aexp            1    1[BANK0 ] unsigned char 
 13208 ;;  sign            1    0[BANK0 ] unsigned char 
 13209 ;; Return value:  Size  Location     Type
 13210 ;;                  4   41[COMRAM] unsigned char 
 13211 ;; Registers used:
 13212 ;;		wreg, status,2, status,0, prodl, prodh
 13213 ;; Tracked objects:
 13214 ;;		On entry : 0/0
 13215 ;;		On exit  : 0/0
 13216 ;;		Unchanged: 0/0
 13217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13218 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13219 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13220 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13221 ;;      Totals:        12      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13222 ;;Total ram usage:       25 bytes
 13223 ;; Hardware stack levels used: 1
 13224 ;; Hardware stack levels required when called: 8
 13225 ;; This function calls:
 13226 ;;		Nothing
 13227 ;; This function is called by:
 13228 ;;		_calcSpeed
 13229 ;;		_calcMotorPow
 13230 ;;		_efgtoa
 13231 ;; This function uses a non-reentrant model
 13232 ;;
 13233                           
 13234                           	psect	text53
 13235  00280C                     __ptext53:
 13236                           	callstack 0
 13237  00280C                     ___flmul:
 13238                           	callstack 16
 13239  00280C  502D               	movf	(___flmul@b+3)^0,w,c
 13240  00280E  0B80               	andlw	128
 13241  002810  0100               	movlb	0	; () banked
 13242  002812  6F60               	movwf	___flmul@sign& (0+255),b
 13243  002814  502D               	movf	(___flmul@b+3)^0,w,c
 13244  002816  242D               	addwf	(___flmul@b+3)^0,w,c
 13245  002818  6F66               	movwf	___flmul@bexp& (0+255),b
 13246  00281A                     
 13247                           ; BSR set to: 0
 13248  00281A  AE2C               	btfss	(___flmul@b+2)^0,7,c
 13249  00281C  EF12  F014         	goto	u8401
 13250  002820  EF14  F014         	goto	u8400
 13251  002824                     u8401:
 13252  002824  EF15  F014         	goto	l8076
 13253  002828                     u8400:
 13254  002828                     
 13255                           ; BSR set to: 0
 13256  002828  8166               	bsf	___flmul@bexp& (0+255),0,b
 13257  00282A                     l8076:
 13258                           
 13259                           ; BSR set to: 0
 13260  00282A  5166               	movf	___flmul@bexp& (0+255),w,b
 13261  00282C  B4D8               	btfsc	status,2,c
 13262  00282E  EF1B  F014         	goto	u8411
 13263  002832  EF1D  F014         	goto	u8410
 13264  002836                     u8411:
 13265  002836  EF30  F014         	goto	l8084
 13266  00283A                     u8410:
 13267  00283A                     
 13268                           ; BSR set to: 0
 13269  00283A  2966               	incf	___flmul@bexp& (0+255),w,b
 13270  00283C  A4D8               	btfss	status,2,c
 13271  00283E  EF23  F014         	goto	u8421
 13272  002842  EF25  F014         	goto	u8420
 13273  002846                     u8421:
 13274  002846  EF2D  F014         	goto	l8082
 13275  00284A                     u8420:
 13276  00284A                     
 13277                           ; BSR set to: 0
 13278  00284A  0E00               	movlw	0
 13279  00284C  6E2A               	movwf	___flmul@b^0,c
 13280  00284E  0E00               	movlw	0
 13281  002850  6E2B               	movwf	(___flmul@b+1)^0,c
 13282  002852  0E00               	movlw	0
 13283  002854  6E2C               	movwf	(___flmul@b+2)^0,c
 13284  002856  0E00               	movlw	0
 13285  002858  6E2D               	movwf	(___flmul@b+3)^0,c
 13286  00285A                     l8082:
 13287                           
 13288                           ; BSR set to: 0
 13289  00285A  8E2C               	bsf	(___flmul@b+2)^0,7,c
 13290  00285C  EF38  F014         	goto	l8086
 13291  002860                     l8084:
 13292                           
 13293                           ; BSR set to: 0
 13294  002860  0E00               	movlw	0
 13295  002862  6E2A               	movwf	___flmul@b^0,c
 13296  002864  0E00               	movlw	0
 13297  002866  6E2B               	movwf	(___flmul@b+1)^0,c
 13298  002868  0E00               	movlw	0
 13299  00286A  6E2C               	movwf	(___flmul@b+2)^0,c
 13300  00286C  0E00               	movlw	0
 13301  00286E  6E2D               	movwf	(___flmul@b+3)^0,c
 13302  002870                     l8086:
 13303                           
 13304                           ; BSR set to: 0
 13305  002870  5031               	movf	(___flmul@a+3)^0,w,c
 13306  002872  0B80               	andlw	128
 13307  002874  1B60               	xorwf	___flmul@sign& (0+255),f,b
 13308  002876                     
 13309                           ; BSR set to: 0
 13310  002876  5031               	movf	(___flmul@a+3)^0,w,c
 13311  002878  2431               	addwf	(___flmul@a+3)^0,w,c
 13312  00287A  6F61               	movwf	___flmul@aexp& (0+255),b
 13313  00287C                     
 13314                           ; BSR set to: 0
 13315  00287C  AE30               	btfss	(___flmul@a+2)^0,7,c
 13316  00287E  EF43  F014         	goto	u8431
 13317  002882  EF45  F014         	goto	u8430
 13318  002886                     u8431:
 13319  002886  EF46  F014         	goto	l8094
 13320  00288A                     u8430:
 13321  00288A                     
 13322                           ; BSR set to: 0
 13323  00288A  8161               	bsf	___flmul@aexp& (0+255),0,b
 13324  00288C                     l8094:
 13325                           
 13326                           ; BSR set to: 0
 13327  00288C  5161               	movf	___flmul@aexp& (0+255),w,b
 13328  00288E  B4D8               	btfsc	status,2,c
 13329  002890  EF4C  F014         	goto	u8441
 13330  002894  EF4E  F014         	goto	u8440
 13331  002898                     u8441:
 13332  002898  EF61  F014         	goto	l8102
 13333  00289C                     u8440:
 13334  00289C                     
 13335                           ; BSR set to: 0
 13336  00289C  2961               	incf	___flmul@aexp& (0+255),w,b
 13337  00289E  A4D8               	btfss	status,2,c
 13338  0028A0  EF54  F014         	goto	u8451
 13339  0028A4  EF56  F014         	goto	u8450
 13340  0028A8                     u8451:
 13341  0028A8  EF5E  F014         	goto	l8100
 13342  0028AC                     u8450:
 13343  0028AC                     
 13344                           ; BSR set to: 0
 13345  0028AC  0E00               	movlw	0
 13346  0028AE  6E2E               	movwf	___flmul@a^0,c
 13347  0028B0  0E00               	movlw	0
 13348  0028B2  6E2F               	movwf	(___flmul@a+1)^0,c
 13349  0028B4  0E00               	movlw	0
 13350  0028B6  6E30               	movwf	(___flmul@a+2)^0,c
 13351  0028B8  0E00               	movlw	0
 13352  0028BA  6E31               	movwf	(___flmul@a+3)^0,c
 13353  0028BC                     l8100:
 13354                           
 13355                           ; BSR set to: 0
 13356  0028BC  8E30               	bsf	(___flmul@a+2)^0,7,c
 13357  0028BE  EF69  F014         	goto	l2012
 13358  0028C2                     l8102:
 13359                           
 13360                           ; BSR set to: 0
 13361  0028C2  0E00               	movlw	0
 13362  0028C4  6E2E               	movwf	___flmul@a^0,c
 13363  0028C6  0E00               	movlw	0
 13364  0028C8  6E2F               	movwf	(___flmul@a+1)^0,c
 13365  0028CA  0E00               	movlw	0
 13366  0028CC  6E30               	movwf	(___flmul@a+2)^0,c
 13367  0028CE  0E00               	movlw	0
 13368  0028D0  6E31               	movwf	(___flmul@a+3)^0,c
 13369  0028D2                     l2012:
 13370                           
 13371                           ; BSR set to: 0
 13372  0028D2  5161               	movf	___flmul@aexp& (0+255),w,b
 13373  0028D4  B4D8               	btfsc	status,2,c
 13374  0028D6  EF6F  F014         	goto	u8461
 13375  0028DA  EF71  F014         	goto	u8460
 13376  0028DE                     u8461:
 13377  0028DE  EF79  F014         	goto	l8106
 13378  0028E2                     u8460:
 13379  0028E2                     
 13380                           ; BSR set to: 0
 13381  0028E2  5166               	movf	___flmul@bexp& (0+255),w,b
 13382  0028E4  A4D8               	btfss	status,2,c
 13383  0028E6  EF77  F014         	goto	u8471
 13384  0028EA  EF79  F014         	goto	u8470
 13385  0028EE                     u8471:
 13386  0028EE  EF83  F014         	goto	l8110
 13387  0028F2                     u8470:
 13388  0028F2                     l8106:
 13389                           
 13390                           ; BSR set to: 0
 13391  0028F2  0E00               	movlw	0
 13392  0028F4  6E2A               	movwf	?___flmul^0,c
 13393  0028F6  0E00               	movlw	0
 13394  0028F8  6E2B               	movwf	(?___flmul+1)^0,c
 13395  0028FA  0E00               	movlw	0
 13396  0028FC  6E2C               	movwf	(?___flmul+2)^0,c
 13397  0028FE  0E00               	movlw	0
 13398  002900  6E2D               	movwf	(?___flmul+3)^0,c
 13399  002902  EF2D  F016         	goto	l2016
 13400  002906                     l8110:
 13401                           
 13402                           ; BSR set to: 0
 13403  002906  5030               	movf	(___flmul@a+2)^0,w,c
 13404  002908  022A               	mulwf	___flmul@b^0,c
 13405  00290A  006F FFCC  F06B    	movff	prodl,___flmul@temp
 13406  002910  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 13407  002916                     
 13408                           ; BSR set to: 0
 13409  002916  516B               	movf	___flmul@temp& (0+255),w,b
 13410  002918  6F62               	movwf	___flmul@grs& (0+255),b
 13411  00291A  6B63               	clrf	(___flmul@grs+1)& (0+255),b
 13412  00291C  6B64               	clrf	(___flmul@grs+2)& (0+255),b
 13413  00291E  6B65               	clrf	(___flmul@grs+3)& (0+255),b
 13414  002920                     
 13415                           ; BSR set to: 0
 13416  002920  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 13417  002922  6F67               	movwf	___flmul@prod& (0+255),b
 13418  002924  6B68               	clrf	(___flmul@prod+1)& (0+255),b
 13419  002926  6B69               	clrf	(___flmul@prod+2)& (0+255),b
 13420  002928  6B6A               	clrf	(___flmul@prod+3)& (0+255),b
 13421  00292A  502F               	movf	(___flmul@a+1)^0,w,c
 13422  00292C  022B               	mulwf	(___flmul@b+1)^0,c
 13423  00292E  006F FFCC  F06B    	movff	prodl,___flmul@temp
 13424  002934  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 13425  00293A                     
 13426                           ; BSR set to: 0
 13427  00293A  516B               	movf	___flmul@temp& (0+255),w,b
 13428  00293C  2762               	addwf	___flmul@grs& (0+255),f,b
 13429  00293E  0E00               	movlw	0
 13430  002940  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 13431  002942  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 13432  002944  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 13433  002946                     
 13434                           ; BSR set to: 0
 13435  002946  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 13436  002948  2767               	addwf	___flmul@prod& (0+255),f,b
 13437  00294A  0E00               	movlw	0
 13438  00294C  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 13439  00294E  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 13440  002950  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 13441  002952  502E               	movf	___flmul@a^0,w,c
 13442  002954  022C               	mulwf	(___flmul@b+2)^0,c
 13443  002956  006F FFCC  F06B    	movff	prodl,___flmul@temp
 13444  00295C  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 13445  002962                     
 13446                           ; BSR set to: 0
 13447  002962  516B               	movf	___flmul@temp& (0+255),w,b
 13448  002964  2762               	addwf	___flmul@grs& (0+255),f,b
 13449  002966  0E00               	movlw	0
 13450  002968  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 13451  00296A  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 13452  00296C  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 13453  00296E                     
 13454                           ; BSR set to: 0
 13455  00296E  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 13456  002970  2767               	addwf	___flmul@prod& (0+255),f,b
 13457  002972  0E00               	movlw	0
 13458  002974  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 13459  002976  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 13460  002978  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 13461  00297A                     
 13462                           ; BSR set to: 0
 13463  00297A  C064  F065         	movff	___flmul@grs+2,___flmul@grs+3
 13464  00297E  C063  F064         	movff	___flmul@grs+1,___flmul@grs+2
 13465  002982  C062  F063         	movff	___flmul@grs,___flmul@grs+1
 13466  002986  6B62               	clrf	___flmul@grs& (0+255),b
 13467  002988                     
 13468                           ; BSR set to: 0
 13469  002988  502E               	movf	___flmul@a^0,w,c
 13470  00298A  022B               	mulwf	(___flmul@b+1)^0,c
 13471  00298C  006F FFCC  F06B    	movff	prodl,___flmul@temp
 13472  002992  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 13473  002998                     
 13474                           ; BSR set to: 0
 13475  002998  516B               	movf	___flmul@temp& (0+255),w,b
 13476  00299A  2762               	addwf	___flmul@grs& (0+255),f,b
 13477  00299C  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 13478  00299E  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 13479  0029A0  0E00               	movlw	0
 13480  0029A2  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 13481  0029A4  0E00               	movlw	0
 13482  0029A6  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 13483  0029A8                     
 13484                           ; BSR set to: 0
 13485  0029A8  502F               	movf	(___flmul@a+1)^0,w,c
 13486  0029AA  022A               	mulwf	___flmul@b^0,c
 13487  0029AC  006F FFCC  F06B    	movff	prodl,___flmul@temp
 13488  0029B2  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 13489  0029B8                     
 13490                           ; BSR set to: 0
 13491  0029B8  516B               	movf	___flmul@temp& (0+255),w,b
 13492  0029BA  2762               	addwf	___flmul@grs& (0+255),f,b
 13493  0029BC  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 13494  0029BE  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 13495  0029C0  0E00               	movlw	0
 13496  0029C2  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 13497  0029C4  0E00               	movlw	0
 13498  0029C6  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 13499  0029C8                     
 13500                           ; BSR set to: 0
 13501  0029C8  C064  F065         	movff	___flmul@grs+2,___flmul@grs+3
 13502  0029CC  C063  F064         	movff	___flmul@grs+1,___flmul@grs+2
 13503  0029D0  C062  F063         	movff	___flmul@grs,___flmul@grs+1
 13504  0029D4  6B62               	clrf	___flmul@grs& (0+255),b
 13505  0029D6  502E               	movf	___flmul@a^0,w,c
 13506  0029D8  022A               	mulwf	___flmul@b^0,c
 13507  0029DA  006F FFCC  F06B    	movff	prodl,___flmul@temp
 13508  0029E0  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 13509  0029E6                     
 13510                           ; BSR set to: 0
 13511  0029E6  516B               	movf	___flmul@temp& (0+255),w,b
 13512  0029E8  2762               	addwf	___flmul@grs& (0+255),f,b
 13513  0029EA  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 13514  0029EC  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 13515  0029EE  0E00               	movlw	0
 13516  0029F0  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 13517  0029F2  0E00               	movlw	0
 13518  0029F4  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 13519  0029F6                     
 13520                           ; BSR set to: 0
 13521  0029F6  5030               	movf	(___flmul@a+2)^0,w,c
 13522  0029F8  022B               	mulwf	(___flmul@b+1)^0,c
 13523  0029FA  006F FFCC  F06B    	movff	prodl,___flmul@temp
 13524  002A00  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 13525  002A06  516B               	movf	___flmul@temp& (0+255),w,b
 13526  002A08  2767               	addwf	___flmul@prod& (0+255),f,b
 13527  002A0A  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 13528  002A0C  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 13529  002A0E  0E00               	movlw	0
 13530  002A10  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 13531  002A12  0E00               	movlw	0
 13532  002A14  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 13533  002A16                     
 13534                           ; BSR set to: 0
 13535  002A16  502F               	movf	(___flmul@a+1)^0,w,c
 13536  002A18  022C               	mulwf	(___flmul@b+2)^0,c
 13537  002A1A  006F FFCC  F06B    	movff	prodl,___flmul@temp
 13538  002A20  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 13539  002A26                     
 13540                           ; BSR set to: 0
 13541  002A26  516B               	movf	___flmul@temp& (0+255),w,b
 13542  002A28  2767               	addwf	___flmul@prod& (0+255),f,b
 13543  002A2A  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 13544  002A2C  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 13545  002A2E  0E00               	movlw	0
 13546  002A30  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 13547  002A32  0E00               	movlw	0
 13548  002A34  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 13549  002A36  5030               	movf	(___flmul@a+2)^0,w,c
 13550  002A38  022C               	mulwf	(___flmul@b+2)^0,c
 13551  002A3A  006F FFCC  F06B    	movff	prodl,___flmul@temp
 13552  002A40  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 13553  002A46                     
 13554                           ; BSR set to: 0
 13555  002A46  516B               	movf	___flmul@temp& (0+255),w,b
 13556  002A48  6E32               	movwf	??___flmul^0,c
 13557  002A4A  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 13558  002A4C  6E33               	movwf	(??___flmul+1)^0,c
 13559  002A4E  6A34               	clrf	(??___flmul+2)^0,c
 13560  002A50  6A35               	clrf	(??___flmul+3)^0,c
 13561  002A52  C034  F035         	movff	??___flmul+2,??___flmul+3
 13562  002A56  C033  F034         	movff	??___flmul+1,??___flmul+2
 13563  002A5A  C032  F033         	movff	??___flmul,??___flmul+1
 13564  002A5E  6A32               	clrf	??___flmul^0,c
 13565  002A60  5032               	movf	??___flmul^0,w,c
 13566  002A62  2767               	addwf	___flmul@prod& (0+255),f,b
 13567  002A64  5033               	movf	(??___flmul+1)^0,w,c
 13568  002A66  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 13569  002A68  5034               	movf	(??___flmul+2)^0,w,c
 13570  002A6A  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 13571  002A6C  5035               	movf	(??___flmul+3)^0,w,c
 13572  002A6E  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 13573  002A70                     
 13574                           ; BSR set to: 0
 13575  002A70  C062  F032         	movff	___flmul@grs,??___flmul
 13576  002A74  C063  F033         	movff	___flmul@grs+1,??___flmul+1
 13577  002A78  C064  F034         	movff	___flmul@grs+2,??___flmul+2
 13578  002A7C  C065  F035         	movff	___flmul@grs+3,??___flmul+3
 13579  002A80  0E19               	movlw	25
 13580  002A82  EF48  F015         	goto	u8480
 13581  002A86                     u8485:
 13582  002A86  90D8               	bcf	status,0,c
 13583  002A88  3235               	rrcf	(??___flmul+3)^0,f,c
 13584  002A8A  3234               	rrcf	(??___flmul+2)^0,f,c
 13585  002A8C  3233               	rrcf	(??___flmul+1)^0,f,c
 13586  002A8E  3232               	rrcf	??___flmul^0,f,c
 13587  002A90                     u8480:
 13588  002A90  2EE8               	decfsz	wreg,f,c
 13589  002A92  EF43  F015         	goto	u8485
 13590  002A96  5032               	movf	??___flmul^0,w,c
 13591  002A98  2767               	addwf	___flmul@prod& (0+255),f,b
 13592  002A9A  5033               	movf	(??___flmul+1)^0,w,c
 13593  002A9C  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 13594  002A9E  5034               	movf	(??___flmul+2)^0,w,c
 13595  002AA0  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 13596  002AA2  5035               	movf	(??___flmul+3)^0,w,c
 13597  002AA4  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 13598  002AA6                     
 13599                           ; BSR set to: 0
 13600  002AA6  C064  F065         	movff	___flmul@grs+2,___flmul@grs+3
 13601  002AAA  C063  F064         	movff	___flmul@grs+1,___flmul@grs+2
 13602  002AAE  C062  F063         	movff	___flmul@grs,___flmul@grs+1
 13603  002AB2  6B62               	clrf	___flmul@grs& (0+255),b
 13604  002AB4                     
 13605                           ; BSR set to: 0
 13606  002AB4  5161               	movf	___flmul@aexp& (0+255),w,b
 13607  002AB6  C066  F032         	movff	___flmul@bexp,??___flmul
 13608  002ABA  6A33               	clrf	(??___flmul+1)^0,c
 13609  002ABC  2632               	addwf	??___flmul^0,f,c
 13610  002ABE  0E00               	movlw	0
 13611  002AC0  2233               	addwfc	(??___flmul+1)^0,f,c
 13612  002AC2  0E82               	movlw	130
 13613  002AC4  2432               	addwf	??___flmul^0,w,c
 13614  002AC6  6F6B               	movwf	___flmul@temp& (0+255),b
 13615  002AC8  0EFF               	movlw	255
 13616  002ACA  2033               	addwfc	(??___flmul+1)^0,w,c
 13617  002ACC  6F6C               	movwf	(___flmul@temp+1)& (0+255),b
 13618  002ACE  EF7E  F015         	goto	l8158
 13619  002AD2                     l8152:
 13620                           
 13621                           ; BSR set to: 0
 13622  002AD2  90D8               	bcf	status,0,c
 13623  002AD4  3767               	rlcf	___flmul@prod& (0+255),f,b
 13624  002AD6  3768               	rlcf	(___flmul@prod+1)& (0+255),f,b
 13625  002AD8  3769               	rlcf	(___flmul@prod+2)& (0+255),f,b
 13626  002ADA  376A               	rlcf	(___flmul@prod+3)& (0+255),f,b
 13627  002ADC                     
 13628                           ; BSR set to: 0
 13629  002ADC  AF65               	btfss	(___flmul@grs+3)& (0+255),7,b
 13630  002ADE  EF73  F015         	goto	u8491
 13631  002AE2  EF75  F015         	goto	u8490
 13632  002AE6                     u8491:
 13633  002AE6  EF76  F015         	goto	l2019
 13634  002AEA                     u8490:
 13635  002AEA                     
 13636                           ; BSR set to: 0
 13637  002AEA  8167               	bsf	___flmul@prod& (0+255),0,b
 13638  002AEC                     l2019:
 13639                           
 13640                           ; BSR set to: 0
 13641  002AEC  90D8               	bcf	status,0,c
 13642  002AEE  3762               	rlcf	___flmul@grs& (0+255),f,b
 13643  002AF0  3763               	rlcf	(___flmul@grs+1)& (0+255),f,b
 13644  002AF2  3764               	rlcf	(___flmul@grs+2)& (0+255),f,b
 13645  002AF4  3765               	rlcf	(___flmul@grs+3)& (0+255),f,b
 13646  002AF6  076B               	decf	___flmul@temp& (0+255),f,b
 13647  002AF8  A0D8               	btfss	status,0,c
 13648  002AFA  076C               	decf	(___flmul@temp+1)& (0+255),f,b
 13649  002AFC                     l8158:
 13650                           
 13651                           ; BSR set to: 0
 13652  002AFC  AF69               	btfss	(___flmul@prod+2)& (0+255),7,b
 13653  002AFE  EF83  F015         	goto	u8501
 13654  002B02  EF85  F015         	goto	u8500
 13655  002B06                     u8501:
 13656  002B06  EF69  F015         	goto	l8152
 13657  002B0A                     u8500:
 13658  002B0A                     
 13659                           ; BSR set to: 0
 13660  002B0A  0E00               	movlw	0
 13661  002B0C  6F61               	movwf	___flmul@aexp& (0+255),b
 13662  002B0E                     
 13663                           ; BSR set to: 0
 13664  002B0E  AF65               	btfss	(___flmul@grs+3)& (0+255),7,b
 13665  002B10  EF8C  F015         	goto	u8511
 13666  002B14  EF8E  F015         	goto	u8510
 13667  002B18                     u8511:
 13668  002B18  EFB2  F015         	goto	l2021
 13669  002B1C                     u8510:
 13670  002B1C                     
 13671                           ; BSR set to: 0
 13672  002B1C  0EFF               	movlw	255
 13673  002B1E  1562               	andwf	___flmul@grs& (0+255),w,b
 13674  002B20  6E32               	movwf	??___flmul^0,c
 13675  002B22  0EFF               	movlw	255
 13676  002B24  1563               	andwf	(___flmul@grs+1)& (0+255),w,b
 13677  002B26  6E33               	movwf	(??___flmul+1)^0,c
 13678  002B28  0EFF               	movlw	255
 13679  002B2A  1564               	andwf	(___flmul@grs+2)& (0+255),w,b
 13680  002B2C  6E34               	movwf	(??___flmul+2)^0,c
 13681  002B2E  0E7F               	movlw	127
 13682  002B30  1565               	andwf	(___flmul@grs+3)& (0+255),w,b
 13683  002B32  6E35               	movwf	(??___flmul+3)^0,c
 13684  002B34  5032               	movf	??___flmul^0,w,c
 13685  002B36  1033               	iorwf	(??___flmul+1)^0,w,c
 13686  002B38  1034               	iorwf	(??___flmul+2)^0,w,c
 13687  002B3A  1035               	iorwf	(??___flmul+3)^0,w,c
 13688  002B3C  B4D8               	btfsc	status,2,c
 13689  002B3E  EFA3  F015         	goto	u8521
 13690  002B42  EFA5  F015         	goto	u8520
 13691  002B46                     u8521:
 13692  002B46  EFA9  F015         	goto	l2022
 13693  002B4A                     u8520:
 13694  002B4A                     l8166:
 13695                           
 13696                           ; BSR set to: 0
 13697  002B4A  0E01               	movlw	1
 13698  002B4C  6F61               	movwf	___flmul@aexp& (0+255),b
 13699  002B4E  EFB2  F015         	goto	l2021
 13700  002B52                     l2022:
 13701                           
 13702                           ; BSR set to: 0
 13703  002B52  A167               	btfss	___flmul@prod& (0+255),0,b
 13704  002B54  EFAE  F015         	goto	u8531
 13705  002B58  EFB0  F015         	goto	u8530
 13706  002B5C                     u8531:
 13707  002B5C  EFB2  F015         	goto	l2021
 13708  002B60                     u8530:
 13709  002B60  EFA5  F015         	goto	l8166
 13710  002B64                     l2021:
 13711                           
 13712                           ; BSR set to: 0
 13713  002B64  5161               	movf	___flmul@aexp& (0+255),w,b
 13714  002B66  B4D8               	btfsc	status,2,c
 13715  002B68  EFB8  F015         	goto	u8541
 13716  002B6C  EFBA  F015         	goto	u8540
 13717  002B70                     u8541:
 13718  002B70  EFDE  F015         	goto	l8178
 13719  002B74                     u8540:
 13720  002B74                     
 13721                           ; BSR set to: 0
 13722  002B74  0E01               	movlw	1
 13723  002B76  2767               	addwf	___flmul@prod& (0+255),f,b
 13724  002B78  0E00               	movlw	0
 13725  002B7A  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 13726  002B7C  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 13727  002B7E  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 13728  002B80                     
 13729                           ; BSR set to: 0
 13730  002B80  A16A               	btfss	(___flmul@prod+3)& (0+255),0,b
 13731  002B82  EFC5  F015         	goto	u8551
 13732  002B86  EFC7  F015         	goto	u8550
 13733  002B8A                     u8551:
 13734  002B8A  EFDE  F015         	goto	l8178
 13735  002B8E                     u8550:
 13736  002B8E                     
 13737                           ; BSR set to: 0
 13738  002B8E  C067  F032         	movff	___flmul@prod,??___flmul
 13739  002B92  C068  F033         	movff	___flmul@prod+1,??___flmul+1
 13740  002B96  C069  F034         	movff	___flmul@prod+2,??___flmul+2
 13741  002B9A  C06A  F035         	movff	___flmul@prod+3,??___flmul+3
 13742  002B9E  3435               	rlcf	(??___flmul+3)^0,w,c
 13743  002BA0  3235               	rrcf	(??___flmul+3)^0,f,c
 13744  002BA2  3234               	rrcf	(??___flmul+2)^0,f,c
 13745  002BA4  3233               	rrcf	(??___flmul+1)^0,f,c
 13746  002BA6  3232               	rrcf	??___flmul^0,f,c
 13747  002BA8  C032  F067         	movff	??___flmul,___flmul@prod
 13748  002BAC  C033  F068         	movff	??___flmul+1,___flmul@prod+1
 13749  002BB0  C034  F069         	movff	??___flmul+2,___flmul@prod+2
 13750  002BB4  C035  F06A         	movff	??___flmul+3,___flmul@prod+3
 13751  002BB8                     
 13752                           ; BSR set to: 0
 13753  002BB8  4B6B               	infsnz	___flmul@temp& (0+255),f,b
 13754  002BBA  2B6C               	incf	(___flmul@temp+1)& (0+255),f,b
 13755  002BBC                     l8178:
 13756                           
 13757                           ; BSR set to: 0
 13758  002BBC  BF6C               	btfsc	(___flmul@temp+1)& (0+255),7,b
 13759  002BBE  EFE9  F015         	goto	u8561
 13760  002BC2  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 13761  002BC4  E108               	bnz	u8560
 13762  002BC6  296B               	incf	___flmul@temp& (0+255),w,b
 13763  002BC8  A0D8               	btfss	status,0,c
 13764  002BCA  EFE9  F015         	goto	u8561
 13765  002BCE  EFEB  F015         	goto	u8560
 13766  002BD2                     u8561:
 13767  002BD2  EFF5  F015         	goto	l8182
 13768  002BD6                     u8560:
 13769  002BD6                     
 13770                           ; BSR set to: 0
 13771  002BD6  0E00               	movlw	0
 13772  002BD8  6F67               	movwf	___flmul@prod& (0+255),b
 13773  002BDA  0E00               	movlw	0
 13774  002BDC  6F68               	movwf	(___flmul@prod+1)& (0+255),b
 13775  002BDE  0E80               	movlw	128
 13776  002BE0  6F69               	movwf	(___flmul@prod+2)& (0+255),b
 13777  002BE2  0E7F               	movlw	127
 13778  002BE4  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
 13779  002BE6  EF23  F016         	goto	l8194
 13780  002BEA                     l8182:
 13781                           
 13782                           ; BSR set to: 0
 13783  002BEA  BF6C               	btfsc	(___flmul@temp+1)& (0+255),7,b
 13784  002BEC  EF02  F016         	goto	u8570
 13785  002BF0  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 13786  002BF2  E106               	bnz	u8571
 13787  002BF4  056B               	decf	___flmul@temp& (0+255),w,b
 13788  002BF6  B0D8               	btfsc	status,0,c
 13789  002BF8  EF00  F016         	goto	u8571
 13790  002BFC  EF02  F016         	goto	u8570
 13791  002C00                     u8571:
 13792  002C00  EF0E  F016         	goto	l2029
 13793  002C04                     u8570:
 13794  002C04                     
 13795                           ; BSR set to: 0
 13796  002C04  0E00               	movlw	0
 13797  002C06  6F67               	movwf	___flmul@prod& (0+255),b
 13798  002C08  0E00               	movlw	0
 13799  002C0A  6F68               	movwf	(___flmul@prod+1)& (0+255),b
 13800  002C0C  0E00               	movlw	0
 13801  002C0E  6F69               	movwf	(___flmul@prod+2)& (0+255),b
 13802  002C10  0E00               	movlw	0
 13803  002C12  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
 13804  002C14  0E00               	movlw	0
 13805  002C16  6F60               	movwf	___flmul@sign& (0+255),b
 13806  002C18  EF23  F016         	goto	l8194
 13807  002C1C                     l2029:
 13808                           
 13809                           ; BSR set to: 0
 13810  002C1C  C06B  F066         	movff	___flmul@temp,___flmul@bexp
 13811  002C20                     
 13812                           ; BSR set to: 0
 13813  002C20  0EFF               	movlw	255
 13814  002C22  1767               	andwf	___flmul@prod& (0+255),f,b
 13815  002C24  0EFF               	movlw	255
 13816  002C26  1768               	andwf	(___flmul@prod+1)& (0+255),f,b
 13817  002C28  0E7F               	movlw	127
 13818  002C2A  1769               	andwf	(___flmul@prod+2)& (0+255),f,b
 13819  002C2C  0E00               	movlw	0
 13820  002C2E  176A               	andwf	(___flmul@prod+3)& (0+255),f,b
 13821  002C30                     
 13822                           ; BSR set to: 0
 13823  002C30  A166               	btfss	___flmul@bexp& (0+255),0,b
 13824  002C32  EF1D  F016         	goto	u8581
 13825  002C36  EF1F  F016         	goto	u8580
 13826  002C3A                     u8581:
 13827  002C3A  EF20  F016         	goto	l8192
 13828  002C3E                     u8580:
 13829  002C3E                     
 13830                           ; BSR set to: 0
 13831  002C3E  8F69               	bsf	(___flmul@prod+2)& (0+255),7,b
 13832  002C40                     l8192:
 13833                           
 13834                           ; BSR set to: 0
 13835  002C40  90D8               	bcf	status,0,c
 13836  002C42  3166               	rrcf	___flmul@bexp& (0+255),w,b
 13837  002C44  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
 13838  002C46                     l8194:
 13839                           
 13840                           ; BSR set to: 0
 13841  002C46  5160               	movf	___flmul@sign& (0+255),w,b
 13842  002C48  136A               	iorwf	(___flmul@prod+3)& (0+255),f,b
 13843  002C4A                     
 13844                           ; BSR set to: 0
 13845  002C4A  C067  F02A         	movff	___flmul@prod,?___flmul
 13846  002C4E  C068  F02B         	movff	___flmul@prod+1,?___flmul+1
 13847  002C52  C069  F02C         	movff	___flmul@prod+2,?___flmul+2
 13848  002C56  C06A  F02D         	movff	___flmul@prod+3,?___flmul+3
 13849  002C5A                     l2016:
 13850                           
 13851                           ; BSR set to: 0
 13852  002C5A  0012               	return		;funcret
 13853  002C5C                     __end_of___flmul:
 13854                           	callstack 0
 13855                           
 13856 ;; *************** function ___awdiv *****************
 13857 ;; Defined at:
 13858 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
 13859 ;; Parameters:    Size  Location     Type
 13860 ;;  dividend        2   19[COMRAM] int 
 13861 ;;  divisor         2   21[COMRAM] int 
 13862 ;; Auto vars:     Size  Location     Type
 13863 ;;  quotient        2   25[COMRAM] int 
 13864 ;;  sign            1   24[COMRAM] unsigned char 
 13865 ;;  counter         1   23[COMRAM] unsigned char 
 13866 ;; Return value:  Size  Location     Type
 13867 ;;                  2   19[COMRAM] int 
 13868 ;; Registers used:
 13869 ;;		wreg, status,2, status,0
 13870 ;; Tracked objects:
 13871 ;;		On entry : 0/0
 13872 ;;		On exit  : 0/0
 13873 ;;		Unchanged: 0/0
 13874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13875 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13876 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13878 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13879 ;;Total ram usage:        8 bytes
 13880 ;; Hardware stack levels used: 1
 13881 ;; Hardware stack levels required when called: 8
 13882 ;; This function calls:
 13883 ;;		Nothing
 13884 ;; This function is called by:
 13885 ;;		_calcMotorPow
 13886 ;;		_efgtoa
 13887 ;; This function uses a non-reentrant model
 13888 ;;
 13889                           
 13890                           	psect	text54
 13891  00509C                     __ptext54:
 13892                           	callstack 0
 13893  00509C                     ___awdiv:
 13894                           	callstack 16
 13895  00509C  0E00               	movlw	0
 13896  00509E  6E19               	movwf	___awdiv@sign^0,c
 13897  0050A0  BE17               	btfsc	(___awdiv@divisor+1)^0,7,c
 13898  0050A2  EF57  F028         	goto	u8590
 13899  0050A6  EF55  F028         	goto	u8591
 13900  0050AA                     u8591:
 13901  0050AA  EF5D  F028         	goto	l8214
 13902  0050AE                     u8590:
 13903  0050AE  6C16               	negf	___awdiv@divisor^0,c
 13904  0050B0  1E17               	comf	(___awdiv@divisor+1)^0,f,c
 13905  0050B2  B0D8               	btfsc	status,0,c
 13906  0050B4  2A17               	incf	(___awdiv@divisor+1)^0,f,c
 13907  0050B6  0E01               	movlw	1
 13908  0050B8  6E19               	movwf	___awdiv@sign^0,c
 13909  0050BA                     l8214:
 13910  0050BA  BE15               	btfsc	(___awdiv@dividend+1)^0,7,c
 13911  0050BC  EF64  F028         	goto	u8600
 13912  0050C0  EF62  F028         	goto	u8601
 13913  0050C4                     u8601:
 13914  0050C4  EF6A  F028         	goto	l8220
 13915  0050C8                     u8600:
 13916  0050C8  6C14               	negf	___awdiv@dividend^0,c
 13917  0050CA  1E15               	comf	(___awdiv@dividend+1)^0,f,c
 13918  0050CC  B0D8               	btfsc	status,0,c
 13919  0050CE  2A15               	incf	(___awdiv@dividend+1)^0,f,c
 13920  0050D0  0E01               	movlw	1
 13921  0050D2  1A19               	xorwf	___awdiv@sign^0,f,c
 13922  0050D4                     l8220:
 13923  0050D4  0E00               	movlw	0
 13924  0050D6  6E1B               	movwf	(___awdiv@quotient+1)^0,c
 13925  0050D8  0E00               	movlw	0
 13926  0050DA  6E1A               	movwf	___awdiv@quotient^0,c
 13927  0050DC  5016               	movf	___awdiv@divisor^0,w,c
 13928  0050DE  1017               	iorwf	(___awdiv@divisor+1)^0,w,c
 13929  0050E0  B4D8               	btfsc	status,2,c
 13930  0050E2  EF75  F028         	goto	u8611
 13931  0050E6  EF77  F028         	goto	u8610
 13932  0050EA                     u8611:
 13933  0050EA  EF9F  F028         	goto	l8242
 13934  0050EE                     u8610:
 13935  0050EE  0E01               	movlw	1
 13936  0050F0  6E18               	movwf	___awdiv@counter^0,c
 13937  0050F2  EF7F  F028         	goto	l8228
 13938  0050F6                     l8226:
 13939  0050F6  90D8               	bcf	status,0,c
 13940  0050F8  3616               	rlcf	___awdiv@divisor^0,f,c
 13941  0050FA  3617               	rlcf	(___awdiv@divisor+1)^0,f,c
 13942  0050FC  2A18               	incf	___awdiv@counter^0,f,c
 13943  0050FE                     l8228:
 13944  0050FE  AE17               	btfss	(___awdiv@divisor+1)^0,7,c
 13945  005100  EF84  F028         	goto	u8621
 13946  005104  EF86  F028         	goto	u8620
 13947  005108                     u8621:
 13948  005108  EF7B  F028         	goto	l8226
 13949  00510C                     u8620:
 13950  00510C                     l8230:
 13951  00510C  90D8               	bcf	status,0,c
 13952  00510E  361A               	rlcf	___awdiv@quotient^0,f,c
 13953  005110  361B               	rlcf	(___awdiv@quotient+1)^0,f,c
 13954  005112  5016               	movf	___awdiv@divisor^0,w,c
 13955  005114  5C14               	subwf	___awdiv@dividend^0,w,c
 13956  005116  5017               	movf	(___awdiv@divisor+1)^0,w,c
 13957  005118  5815               	subwfb	(___awdiv@dividend+1)^0,w,c
 13958  00511A  A0D8               	btfss	status,0,c
 13959  00511C  EF92  F028         	goto	u8631
 13960  005120  EF94  F028         	goto	u8630
 13961  005124                     u8631:
 13962  005124  EF99  F028         	goto	l8238
 13963  005128                     u8630:
 13964  005128  5016               	movf	___awdiv@divisor^0,w,c
 13965  00512A  5E14               	subwf	___awdiv@dividend^0,f,c
 13966  00512C  5017               	movf	(___awdiv@divisor+1)^0,w,c
 13967  00512E  5A15               	subwfb	(___awdiv@dividend+1)^0,f,c
 13968  005130  801A               	bsf	___awdiv@quotient^0,0,c
 13969  005132                     l8238:
 13970  005132  90D8               	bcf	status,0,c
 13971  005134  3217               	rrcf	(___awdiv@divisor+1)^0,f,c
 13972  005136  3216               	rrcf	___awdiv@divisor^0,f,c
 13973  005138  2E18               	decfsz	___awdiv@counter^0,f,c
 13974  00513A  EF86  F028         	goto	l8230
 13975  00513E                     l8242:
 13976  00513E  5019               	movf	___awdiv@sign^0,w,c
 13977  005140  B4D8               	btfsc	status,2,c
 13978  005142  EFA5  F028         	goto	u8641
 13979  005146  EFA7  F028         	goto	u8640
 13980  00514A                     u8641:
 13981  00514A  EFAB  F028         	goto	l8246
 13982  00514E                     u8640:
 13983  00514E  6C1A               	negf	___awdiv@quotient^0,c
 13984  005150  1E1B               	comf	(___awdiv@quotient+1)^0,f,c
 13985  005152  B0D8               	btfsc	status,0,c
 13986  005154  2A1B               	incf	(___awdiv@quotient+1)^0,f,c
 13987  005156                     l8246:
 13988  005156  C01A  F014         	movff	___awdiv@quotient,?___awdiv
 13989  00515A  C01B  F015         	movff	___awdiv@quotient+1,?___awdiv+1
 13990  00515E  0012               	return		;funcret
 13991  005160                     __end_of___awdiv:
 13992                           	callstack 0
 13993                           
 13994 ;; *************** function _SYSTEM_Initialize *****************
 13995 ;; Defined at:
 13996 ;;		line 50 in file "mcc_generated_files/mcc.c"
 13997 ;; Parameters:    Size  Location     Type
 13998 ;;		None
 13999 ;; Auto vars:     Size  Location     Type
 14000 ;;		None
 14001 ;; Return value:  Size  Location     Type
 14002 ;;                  1    wreg      void 
 14003 ;; Registers used:
 14004 ;;		wreg, status,2, status,0, cstack
 14005 ;; Tracked objects:
 14006 ;;		On entry : 0/0
 14007 ;;		On exit  : 0/0
 14008 ;;		Unchanged: 0/0
 14009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14013 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14014 ;;Total ram usage:        0 bytes
 14015 ;; Hardware stack levels used: 1
 14016 ;; Hardware stack levels required when called: 10
 14017 ;; This function calls:
 14018 ;;		_ADCC_Initialize
 14019 ;;		_CCP3_Initialize
 14020 ;;		_CCP4_Initialize
 14021 ;;		_CLC3_Initialize
 14022 ;;		_INTERRUPT_Initialize
 14023 ;;		_OSCILLATOR_Initialize
 14024 ;;		_PIN_MANAGER_Initialize
 14025 ;;		_PMD_Initialize
 14026 ;;		_PWM5_Initialize
 14027 ;;		_PWM6_Initialize
 14028 ;;		_PWM7_Initialize
 14029 ;;		_PWM8_Initialize
 14030 ;;		_SMT1_Initialize
 14031 ;;		_TMR2_Initialize
 14032 ;;		_TMR3_Initialize
 14033 ;;		_TMR4_Initialize
 14034 ;;		_TMR5_Initialize
 14035 ;;		_UART1_Initialize
 14036 ;; This function is called by:
 14037 ;;		_main
 14038 ;; This function uses a non-reentrant model
 14039 ;;
 14040                           
 14041                           	psect	text55
 14042  005A44                     __ptext55:
 14043                           	callstack 0
 14044  005A44                     _SYSTEM_Initialize:
 14045                           	callstack 20
 14046  005A44                     
 14047                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 14048  005A44  ECFC  F02C         	call	_INTERRUPT_Initialize	;wreg free
 14049                           
 14050                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 14051  005A48  ECF5  F030         	call	_PMD_Initialize	;wreg free
 14052                           
 14053                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 14054  005A4C  ECE9  F027         	call	_PIN_MANAGER_Initialize	;wreg free
 14055                           
 14056                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 14057  005A50  EC76  F031         	call	_OSCILLATOR_Initialize	;wreg free
 14058  005A54                     
 14059                           ;mcc_generated_files/mcc.c: 56:     CCP3_Initialize();
 14060  005A54  EC34  F030         	call	_CCP3_Initialize	;wreg free
 14061  005A58                     
 14062                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 14063  005A58  ECA3  F02C         	call	_ADCC_Initialize	;wreg free
 14064                           
 14065                           ;mcc_generated_files/mcc.c: 58:     TMR4_Initialize();
 14066  005A5C  EC62  F030         	call	_TMR4_Initialize	;wreg free
 14067  005A60                     
 14068                           ;mcc_generated_files/mcc.c: 59:     SMT1_Initialize();
 14069  005A60  EC05  F030         	call	_SMT1_Initialize	;wreg free
 14070  005A64                     
 14071                           ;mcc_generated_files/mcc.c: 60:     PWM8_Initialize();
 14072  005A64  EC46  F031         	call	_PWM8_Initialize	;wreg free
 14073  005A68                     
 14074                           ;mcc_generated_files/mcc.c: 61:     TMR2_Initialize();
 14075  005A68  EC38  F031         	call	_TMR2_Initialize	;wreg free
 14076  005A6C                     
 14077                           ;mcc_generated_files/mcc.c: 62:     PWM6_Initialize();
 14078  005A6C  EC5E  F031         	call	_PWM6_Initialize	;wreg free
 14079                           
 14080                           ;mcc_generated_files/mcc.c: 63:     CCP4_Initialize();
 14081  005A70  EC1D  F030         	call	_CCP4_Initialize	;wreg free
 14082  005A74                     
 14083                           ;mcc_generated_files/mcc.c: 64:     CLC3_Initialize();
 14084  005A74  EC78  F030         	call	_CLC3_Initialize	;wreg free
 14085  005A78                     
 14086                           ;mcc_generated_files/mcc.c: 65:     TMR3_Initialize();
 14087  005A78  ECC9  F02E         	call	_TMR3_Initialize	;wreg free
 14088                           
 14089                           ;mcc_generated_files/mcc.c: 66:     PWM5_Initialize();
 14090  005A7C  EC6A  F031         	call	_PWM5_Initialize	;wreg free
 14091  005A80                     
 14092                           ;mcc_generated_files/mcc.c: 67:     TMR5_Initialize();
 14093  005A80  EC47  F02D         	call	_TMR5_Initialize	;wreg free
 14094  005A84                     
 14095                           ;mcc_generated_files/mcc.c: 68:     PWM7_Initialize();
 14096  005A84  EC52  F031         	call	_PWM7_Initialize	;wreg free
 14097                           
 14098                           ;mcc_generated_files/mcc.c: 69:     UART1_Initialize();
 14099  005A88  EC1E  F02A         	call	_UART1_Initialize	;wreg free
 14100  005A8C  0012               	return		;funcret
 14101  005A8E                     __end_of_SYSTEM_Initialize:
 14102                           	callstack 0
 14103                           
 14104 ;; *************** function _UART1_Initialize *****************
 14105 ;; Defined at:
 14106 ;;		line 87 in file "mcc_generated_files/uart1.c"
 14107 ;; Parameters:    Size  Location     Type
 14108 ;;		None
 14109 ;; Auto vars:     Size  Location     Type
 14110 ;;		None
 14111 ;; Return value:  Size  Location     Type
 14112 ;;                  1    wreg      void 
 14113 ;; Registers used:
 14114 ;;		wreg, status,2, status,0, cstack
 14115 ;; Tracked objects:
 14116 ;;		On entry : 0/0
 14117 ;;		On exit  : 0/0
 14118 ;;		Unchanged: 0/0
 14119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14123 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14124 ;;Total ram usage:        0 bytes
 14125 ;; Hardware stack levels used: 1
 14126 ;; Hardware stack levels required when called: 9
 14127 ;; This function calls:
 14128 ;;		_UART1_SetErrorHandler
 14129 ;;		_UART1_SetFramingErrorHandler
 14130 ;;		_UART1_SetOverrunErrorHandler
 14131 ;;		_UART1_SetRxInterruptHandler
 14132 ;;		_UART1_SetTxInterruptHandler
 14133 ;; This function is called by:
 14134 ;;		_SYSTEM_Initialize
 14135 ;; This function uses a non-reentrant model
 14136 ;;
 14137                           
 14138                           	psect	text56
 14139  00543C                     __ptext56:
 14140                           	callstack 0
 14141  00543C                     _UART1_Initialize:
 14142                           	callstack 20
 14143  00543C                     
 14144                           ;mcc_generated_files/uart1.c: 90:     PIE3bits.U1RXIE = 0;
 14145  00543C  0139               	movlb	57	; () banked
 14146  00543E  9793               	bcf	147,3,b	;volatile
 14147  005440                     
 14148                           ; BSR set to: 57
 14149                           ;mcc_generated_files/uart1.c: 91:     UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 14150  005440  0E22               	movlw	low _UART1_Receive_ISR
 14151  005442  6E14               	movwf	UART1_SetRxInterruptHandler@InterruptHandler^0,c
 14152  005444  0E52               	movlw	high _UART1_Receive_ISR
 14153  005446  6E15               	movwf	(UART1_SetRxInterruptHandler@InterruptHandler+1)^0,c
 14154  005448  EC93  F031         	call	_UART1_SetRxInterruptHandler	;wreg free
 14155  00544C                     
 14156                           ;mcc_generated_files/uart1.c: 92:     PIE3bits.U1TXIE = 0;
 14157  00544C  0139               	movlb	57	; () banked
 14158  00544E  9993               	bcf	147,4,b	;volatile
 14159                           
 14160                           ;mcc_generated_files/uart1.c: 93:     UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 14161  005450  0EAE               	movlw	low _UART1_Transmit_ISR
 14162  005452  6E14               	movwf	UART1_SetTxInterruptHandler@InterruptHandler^0,c
 14163  005454  0E5B               	movlw	high _UART1_Transmit_ISR
 14164  005456  6E15               	movwf	(UART1_SetTxInterruptHandler@InterruptHandler+1)^0,c
 14165  005458  EC8E  F031         	call	_UART1_SetTxInterruptHandler	;wreg free
 14166  00545C                     
 14167                           ;mcc_generated_files/uart1.c: 98:     U1P1L = 0x00;
 14168  00545C  0E00               	movlw	0
 14169  00545E  013D               	movlb	61	; () banked
 14170  005460  6FEC               	movwf	236,b	;volatile
 14171  005462                     
 14172                           ; BSR set to: 61
 14173                           ;mcc_generated_files/uart1.c: 101:     U1P1H = 0x00;
 14174  005462  0E00               	movlw	0
 14175  005464  6FED               	movwf	237,b	;volatile
 14176  005466                     
 14177                           ; BSR set to: 61
 14178                           ;mcc_generated_files/uart1.c: 104:     U1P2L = 0x00;
 14179  005466  0E00               	movlw	0
 14180  005468  6FEE               	movwf	238,b	;volatile
 14181  00546A                     
 14182                           ; BSR set to: 61
 14183                           ;mcc_generated_files/uart1.c: 107:     U1P2H = 0x00;
 14184  00546A  0E00               	movlw	0
 14185  00546C  6FEF               	movwf	239,b	;volatile
 14186  00546E                     
 14187                           ; BSR set to: 61
 14188                           ;mcc_generated_files/uart1.c: 110:     U1P3L = 0x00;
 14189  00546E  0E00               	movlw	0
 14190  005470  6FF0               	movwf	240,b	;volatile
 14191  005472                     
 14192                           ; BSR set to: 61
 14193                           ;mcc_generated_files/uart1.c: 113:     U1P3H = 0x00;
 14194  005472  0E00               	movlw	0
 14195  005474  6FF1               	movwf	241,b	;volatile
 14196  005476                     
 14197                           ; BSR set to: 61
 14198                           ;mcc_generated_files/uart1.c: 116:     U1CON0 = 0xB0;
 14199  005476  0EB0               	movlw	176
 14200  005478  6FF2               	movwf	242,b	;volatile
 14201  00547A                     
 14202                           ; BSR set to: 61
 14203                           ;mcc_generated_files/uart1.c: 119:     U1CON1 = 0x80;
 14204  00547A  0E80               	movlw	128
 14205  00547C  6FF3               	movwf	243,b	;volatile
 14206  00547E                     
 14207                           ; BSR set to: 61
 14208                           ;mcc_generated_files/uart1.c: 122:     U1CON2 = 0x00;
 14209  00547E  0E00               	movlw	0
 14210  005480  6FF4               	movwf	244,b	;volatile
 14211  005482                     
 14212                           ; BSR set to: 61
 14213                           ;mcc_generated_files/uart1.c: 125:     U1BRGL = 0x8A;
 14214  005482  0E8A               	movlw	138
 14215  005484  6FF5               	movwf	245,b	;volatile
 14216  005486                     
 14217                           ; BSR set to: 61
 14218                           ;mcc_generated_files/uart1.c: 128:     U1BRGH = 0x00;
 14219  005486  0E00               	movlw	0
 14220  005488  6FF6               	movwf	246,b	;volatile
 14221  00548A                     
 14222                           ; BSR set to: 61
 14223                           ;mcc_generated_files/uart1.c: 131:     U1FIFO = 0x00;
 14224  00548A  0E00               	movlw	0
 14225  00548C  6FF7               	movwf	247,b	;volatile
 14226  00548E                     
 14227                           ; BSR set to: 61
 14228                           ;mcc_generated_files/uart1.c: 134:     U1UIR = 0x00;
 14229  00548E  0E00               	movlw	0
 14230  005490  6FF8               	movwf	248,b	;volatile
 14231  005492                     
 14232                           ; BSR set to: 61
 14233                           ;mcc_generated_files/uart1.c: 137:     U1ERRIR = 0x00;
 14234  005492  0E00               	movlw	0
 14235  005494  6FF9               	movwf	249,b	;volatile
 14236  005496                     
 14237                           ; BSR set to: 61
 14238                           ;mcc_generated_files/uart1.c: 140:     U1ERRIE = 0x00;
 14239  005496  0E00               	movlw	0
 14240  005498  6FFA               	movwf	250,b	;volatile
 14241  00549A                     
 14242                           ; BSR set to: 61
 14243                           ;mcc_generated_files/uart1.c: 143:     UART1_SetFramingErrorHandler(UART1_DefaultFraming
      +                          ErrorHandler);
 14244  00549A  0E88               	movlw	low _UART1_DefaultFramingErrorHandler
 14245  00549C  6E14               	movwf	UART1_SetFramingErrorHandler@interruptHandler^0,c
 14246  00549E  0E63               	movlw	high _UART1_DefaultFramingErrorHandler
 14247  0054A0  6E15               	movwf	(UART1_SetFramingErrorHandler@interruptHandler+1)^0,c
 14248  0054A2  EC9D  F031         	call	_UART1_SetFramingErrorHandler	;wreg free
 14249  0054A6                     
 14250                           ;mcc_generated_files/uart1.c: 144:     UART1_SetOverrunErrorHandler(UART1_DefaultOverrun
      +                          ErrorHandler);
 14251  0054A6  0E86               	movlw	low _UART1_DefaultOverrunErrorHandler
 14252  0054A8  6E14               	movwf	UART1_SetOverrunErrorHandler@interruptHandler^0,c
 14253  0054AA  0E63               	movlw	high _UART1_DefaultOverrunErrorHandler
 14254  0054AC  6E15               	movwf	(UART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
 14255  0054AE  EC98  F031         	call	_UART1_SetOverrunErrorHandler	;wreg free
 14256  0054B2                     
 14257                           ;mcc_generated_files/uart1.c: 145:     UART1_SetErrorHandler(UART1_DefaultErrorHandler);
 14258  0054B2  0E80               	movlw	low _UART1_DefaultErrorHandler
 14259  0054B4  6E14               	movwf	UART1_SetErrorHandler@interruptHandler^0,c
 14260  0054B6  0E63               	movlw	high _UART1_DefaultErrorHandler
 14261  0054B8  6E15               	movwf	(UART1_SetErrorHandler@interruptHandler+1)^0,c
 14262  0054BA  ECA2  F031         	call	_UART1_SetErrorHandler	;wreg free
 14263                           
 14264                           ;mcc_generated_files/uart1.c: 147:     uart1RxLastError.status = 0;
 14265  0054BE  0E00               	movlw	0
 14266  0054C0  6E42               	movwf	_uart1RxLastError^0,c	;volatile
 14267                           
 14268                           ;mcc_generated_files/uart1.c: 150:     uart1TxHead = 0;
 14269  0054C2  0E00               	movlw	0
 14270  0054C4  6E47               	movwf	_uart1TxHead^0,c	;volatile
 14271                           
 14272                           ;mcc_generated_files/uart1.c: 151:     uart1TxTail = 0;
 14273  0054C6  0E00               	movlw	0
 14274  0054C8  6E46               	movwf	_uart1TxTail^0,c	;volatile
 14275                           
 14276                           ;mcc_generated_files/uart1.c: 152:     uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 14277  0054CA  0E08               	movlw	8
 14278  0054CC  6E4C               	movwf	_uart1TxBufferRemaining^0,c	;volatile
 14279                           
 14280                           ;mcc_generated_files/uart1.c: 153:     uart1RxHead = 0;
 14281  0054CE  0E00               	movlw	0
 14282  0054D0  6E45               	movwf	_uart1RxHead^0,c	;volatile
 14283                           
 14284                           ;mcc_generated_files/uart1.c: 154:     uart1RxTail = 0;
 14285  0054D2  0E00               	movlw	0
 14286  0054D4  6E44               	movwf	_uart1RxTail^0,c	;volatile
 14287                           
 14288                           ;mcc_generated_files/uart1.c: 155:     uart1RxCount = 0;
 14289  0054D6  0E00               	movlw	0
 14290  0054D8  6E43               	movwf	_uart1RxCount^0,c	;volatile
 14291  0054DA                     
 14292                           ;mcc_generated_files/uart1.c: 158:     PIE3bits.U1RXIE = 1;
 14293  0054DA  0139               	movlb	57	; () banked
 14294  0054DC  8793               	bsf	147,3,b	;volatile
 14295  0054DE                     
 14296                           ; BSR set to: 57
 14297  0054DE  0012               	return		;funcret
 14298  0054E0                     __end_of_UART1_Initialize:
 14299                           	callstack 0
 14300                           
 14301 ;; *************** function _UART1_SetTxInterruptHandler *****************
 14302 ;; Defined at:
 14303 ;;		line 333 in file "mcc_generated_files/uart1.c"
 14304 ;; Parameters:    Size  Location     Type
 14305 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
 14306 ;;		 -> UART1_Transmit_ISR(1), 
 14307 ;; Auto vars:     Size  Location     Type
 14308 ;;		None
 14309 ;; Return value:  Size  Location     Type
 14310 ;;                  1    wreg      void 
 14311 ;; Registers used:
 14312 ;;		wreg, status,2, status,0
 14313 ;; Tracked objects:
 14314 ;;		On entry : 0/0
 14315 ;;		On exit  : 0/0
 14316 ;;		Unchanged: 0/0
 14317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14318 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14321 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14322 ;;Total ram usage:        2 bytes
 14323 ;; Hardware stack levels used: 1
 14324 ;; Hardware stack levels required when called: 8
 14325 ;; This function calls:
 14326 ;;		Nothing
 14327 ;; This function is called by:
 14328 ;;		_UART1_Initialize
 14329 ;; This function uses a non-reentrant model
 14330 ;;
 14331                           
 14332                           	psect	text57
 14333  00631C                     __ptext57:
 14334                           	callstack 0
 14335  00631C                     _UART1_SetTxInterruptHandler:
 14336                           	callstack 20
 14337  00631C                     
 14338                           ;mcc_generated_files/uart1.c: 334:     UART1_TxInterruptHandler = InterruptHandler;
 14339  00631C  C014  F1A0         	movff	UART1_SetTxInterruptHandler@InterruptHandler,_UART1_TxInterruptHandler
 14340  006320  C015  F1A1         	movff	UART1_SetTxInterruptHandler@InterruptHandler+1,_UART1_TxInterruptHandler+1
 14341  006324  0012               	return		;funcret
 14342  006326                     __end_of_UART1_SetTxInterruptHandler:
 14343                           	callstack 0
 14344                           
 14345 ;; *************** function _UART1_SetRxInterruptHandler *****************
 14346 ;; Defined at:
 14347 ;;		line 329 in file "mcc_generated_files/uart1.c"
 14348 ;; Parameters:    Size  Location     Type
 14349 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
 14350 ;;		 -> UART1_Receive_ISR(1), 
 14351 ;; Auto vars:     Size  Location     Type
 14352 ;;		None
 14353 ;; Return value:  Size  Location     Type
 14354 ;;                  1    wreg      void 
 14355 ;; Registers used:
 14356 ;;		wreg, status,2, status,0
 14357 ;; Tracked objects:
 14358 ;;		On entry : 0/0
 14359 ;;		On exit  : 0/0
 14360 ;;		Unchanged: 0/0
 14361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14362 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14365 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14366 ;;Total ram usage:        2 bytes
 14367 ;; Hardware stack levels used: 1
 14368 ;; Hardware stack levels required when called: 8
 14369 ;; This function calls:
 14370 ;;		Nothing
 14371 ;; This function is called by:
 14372 ;;		_UART1_Initialize
 14373 ;; This function uses a non-reentrant model
 14374 ;;
 14375                           
 14376                           	psect	text58
 14377  006326                     __ptext58:
 14378                           	callstack 0
 14379  006326                     _UART1_SetRxInterruptHandler:
 14380                           	callstack 20
 14381  006326                     
 14382                           ;mcc_generated_files/uart1.c: 330:     UART1_RxInterruptHandler = InterruptHandler;
 14383  006326  C014  F1A2         	movff	UART1_SetRxInterruptHandler@InterruptHandler,_UART1_RxInterruptHandler
 14384  00632A  C015  F1A3         	movff	UART1_SetRxInterruptHandler@InterruptHandler+1,_UART1_RxInterruptHandler+1
 14385  00632E  0012               	return		;funcret
 14386  006330                     __end_of_UART1_SetRxInterruptHandler:
 14387                           	callstack 0
 14388                           
 14389 ;; *************** function _UART1_SetOverrunErrorHandler *****************
 14390 ;; Defined at:
 14391 ;;		line 319 in file "mcc_generated_files/uart1.c"
 14392 ;; Parameters:    Size  Location     Type
 14393 ;;  interruptHan    2   19[COMRAM] PTR FTN()void 
 14394 ;;		 -> UART1_DefaultOverrunErrorHandler(1), 
 14395 ;; Auto vars:     Size  Location     Type
 14396 ;;		None
 14397 ;; Return value:  Size  Location     Type
 14398 ;;                  1    wreg      void 
 14399 ;; Registers used:
 14400 ;;		wreg, status,2, status,0
 14401 ;; Tracked objects:
 14402 ;;		On entry : 0/0
 14403 ;;		On exit  : 0/0
 14404 ;;		Unchanged: 0/0
 14405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14406 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14409 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14410 ;;Total ram usage:        2 bytes
 14411 ;; Hardware stack levels used: 1
 14412 ;; Hardware stack levels required when called: 8
 14413 ;; This function calls:
 14414 ;;		Nothing
 14415 ;; This function is called by:
 14416 ;;		_UART1_Initialize
 14417 ;; This function uses a non-reentrant model
 14418 ;;
 14419                           
 14420                           	psect	text59
 14421  006330                     __ptext59:
 14422                           	callstack 0
 14423  006330                     _UART1_SetOverrunErrorHandler:
 14424                           	callstack 20
 14425  006330                     
 14426                           ;mcc_generated_files/uart1.c: 320:     UART1_OverrunErrorHandler = interruptHandler;
 14427  006330  C014  F19C         	movff	UART1_SetOverrunErrorHandler@interruptHandler,_UART1_OverrunErrorHandler
 14428  006334  C015  F19D         	movff	UART1_SetOverrunErrorHandler@interruptHandler+1,_UART1_OverrunErrorHandler+1
 14429  006338  0012               	return		;funcret
 14430  00633A                     __end_of_UART1_SetOverrunErrorHandler:
 14431                           	callstack 0
 14432                           
 14433 ;; *************** function _UART1_SetFramingErrorHandler *****************
 14434 ;; Defined at:
 14435 ;;		line 315 in file "mcc_generated_files/uart1.c"
 14436 ;; Parameters:    Size  Location     Type
 14437 ;;  interruptHan    2   19[COMRAM] PTR FTN()void 
 14438 ;;		 -> UART1_DefaultFramingErrorHandler(1), 
 14439 ;; Auto vars:     Size  Location     Type
 14440 ;;		None
 14441 ;; Return value:  Size  Location     Type
 14442 ;;                  1    wreg      void 
 14443 ;; Registers used:
 14444 ;;		wreg, status,2, status,0
 14445 ;; Tracked objects:
 14446 ;;		On entry : 0/0
 14447 ;;		On exit  : 0/0
 14448 ;;		Unchanged: 0/0
 14449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14450 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14453 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14454 ;;Total ram usage:        2 bytes
 14455 ;; Hardware stack levels used: 1
 14456 ;; Hardware stack levels required when called: 8
 14457 ;; This function calls:
 14458 ;;		Nothing
 14459 ;; This function is called by:
 14460 ;;		_UART1_Initialize
 14461 ;; This function uses a non-reentrant model
 14462 ;;
 14463                           
 14464                           	psect	text60
 14465  00633A                     __ptext60:
 14466                           	callstack 0
 14467  00633A                     _UART1_SetFramingErrorHandler:
 14468                           	callstack 20
 14469  00633A                     
 14470                           ;mcc_generated_files/uart1.c: 316:     UART1_FramingErrorHandler = interruptHandler;
 14471  00633A  C014  F19E         	movff	UART1_SetFramingErrorHandler@interruptHandler,_UART1_FramingErrorHandler
 14472  00633E  C015  F19F         	movff	UART1_SetFramingErrorHandler@interruptHandler+1,_UART1_FramingErrorHandler+1
 14473  006342  0012               	return		;funcret
 14474  006344                     __end_of_UART1_SetFramingErrorHandler:
 14475                           	callstack 0
 14476                           
 14477 ;; *************** function _UART1_SetErrorHandler *****************
 14478 ;; Defined at:
 14479 ;;		line 323 in file "mcc_generated_files/uart1.c"
 14480 ;; Parameters:    Size  Location     Type
 14481 ;;  interruptHan    2   19[COMRAM] PTR FTN()void 
 14482 ;;		 -> UART1_DefaultErrorHandler(1), 
 14483 ;; Auto vars:     Size  Location     Type
 14484 ;;		None
 14485 ;; Return value:  Size  Location     Type
 14486 ;;                  1    wreg      void 
 14487 ;; Registers used:
 14488 ;;		wreg, status,2, status,0
 14489 ;; Tracked objects:
 14490 ;;		On entry : 0/0
 14491 ;;		On exit  : 0/0
 14492 ;;		Unchanged: 0/0
 14493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14494 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14497 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14498 ;;Total ram usage:        2 bytes
 14499 ;; Hardware stack levels used: 1
 14500 ;; Hardware stack levels required when called: 8
 14501 ;; This function calls:
 14502 ;;		Nothing
 14503 ;; This function is called by:
 14504 ;;		_UART1_Initialize
 14505 ;; This function uses a non-reentrant model
 14506 ;;
 14507                           
 14508                           	psect	text61
 14509  006344                     __ptext61:
 14510                           	callstack 0
 14511  006344                     _UART1_SetErrorHandler:
 14512                           	callstack 20
 14513  006344                     
 14514                           ;mcc_generated_files/uart1.c: 324:     UART1_ErrorHandler = interruptHandler;
 14515  006344  C014  F19A         	movff	UART1_SetErrorHandler@interruptHandler,_UART1_ErrorHandler
 14516  006348  C015  F19B         	movff	UART1_SetErrorHandler@interruptHandler+1,_UART1_ErrorHandler+1
 14517  00634C  0012               	return		;funcret
 14518  00634E                     __end_of_UART1_SetErrorHandler:
 14519                           	callstack 0
 14520                           
 14521 ;; *************** function _TMR5_Initialize *****************
 14522 ;; Defined at:
 14523 ;;		line 67 in file "mcc_generated_files/tmr5.c"
 14524 ;; Parameters:    Size  Location     Type
 14525 ;;		None
 14526 ;; Auto vars:     Size  Location     Type
 14527 ;;		None
 14528 ;; Return value:  Size  Location     Type
 14529 ;;                  1    wreg      void 
 14530 ;; Registers used:
 14531 ;;		wreg, status,2, status,0, cstack
 14532 ;; Tracked objects:
 14533 ;;		On entry : 0/0
 14534 ;;		On exit  : 0/0
 14535 ;;		Unchanged: 0/0
 14536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14539 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14540 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14541 ;;Total ram usage:        2 bytes
 14542 ;; Hardware stack levels used: 1
 14543 ;; Hardware stack levels required when called: 9
 14544 ;; This function calls:
 14545 ;;		_TMR5_SetGateInterruptHandler
 14546 ;; This function is called by:
 14547 ;;		_SYSTEM_Initialize
 14548 ;; This function uses a non-reentrant model
 14549 ;;
 14550                           
 14551                           	psect	text62
 14552  005A8E                     __ptext62:
 14553                           	callstack 0
 14554  005A8E                     _TMR5_Initialize:
 14555                           	callstack 20
 14556  005A8E                     
 14557                           ;mcc_generated_files/tmr5.c: 72:     T5GCON = 0xC0;
 14558  005A8E  0EC0               	movlw	192
 14559  005A90  6E9B               	movwf	155,c	;volatile
 14560                           
 14561                           ;mcc_generated_files/tmr5.c: 75:     T5GATE = 0x00;
 14562  005A92  0E00               	movlw	0
 14563  005A94  6E9C               	movwf	156,c	;volatile
 14564                           
 14565                           ;mcc_generated_files/tmr5.c: 78:     T5CLK = 0x05;
 14566  005A96  0E05               	movlw	5
 14567  005A98  6E9D               	movwf	157,c	;volatile
 14568                           
 14569                           ;mcc_generated_files/tmr5.c: 81:     TMR5H = 0x00;
 14570  005A9A  0E00               	movlw	0
 14571  005A9C  6E99               	movwf	153,c	;volatile
 14572                           
 14573                           ;mcc_generated_files/tmr5.c: 84:     TMR5L = 0x00;
 14574  005A9E  0E00               	movlw	0
 14575  005AA0  6E98               	movwf	152,c	;volatile
 14576  005AA2                     
 14577                           ;mcc_generated_files/tmr5.c: 87:     PIR8bits.TMR5IF = 0;
 14578  005AA2  0139               	movlb	57	; () banked
 14579  005AA4  9DA8               	bcf	168,6,b	;volatile
 14580  005AA6                     
 14581                           ; BSR set to: 57
 14582                           ;mcc_generated_files/tmr5.c: 90:     timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
 14583  005AA6  5098               	movf	152,w,c	;volatile
 14584  005AA8  006F FE64  F016    	movff	16281,??_TMR5_Initialize	;volatile
 14585  005AAE  6A17               	clrf	(??_TMR5_Initialize+1)^0,c
 14586  005AB0  C016  F017         	movff	??_TMR5_Initialize,??_TMR5_Initialize+1
 14587  005AB4  6A16               	clrf	??_TMR5_Initialize^0,c
 14588  005AB6  1016               	iorwf	??_TMR5_Initialize^0,w,c
 14589  005AB8  0101               	movlb	1	; () banked
 14590  005ABA  6F94               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 14591  005ABC  5017               	movf	(??_TMR5_Initialize+1)^0,w,c
 14592  005ABE  6F95               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 14593  005AC0                     
 14594                           ; BSR set to: 1
 14595                           ;mcc_generated_files/tmr5.c: 93:     PIR8bits.TMR5GIF = 0;
 14596  005AC0  0139               	movlb	57	; () banked
 14597  005AC2  9FA8               	bcf	168,7,b	;volatile
 14598  005AC4                     
 14599                           ; BSR set to: 57
 14600                           ;mcc_generated_files/tmr5.c: 96:     PIE8bits.TMR5GIE = 1;
 14601  005AC4  8F98               	bsf	152,7,b	;volatile
 14602  005AC6                     
 14603                           ; BSR set to: 57
 14604                           ;mcc_generated_files/tmr5.c: 99:     TMR5_SetGateInterruptHandler(TMR5_DefaultGateInterr
      +                          uptHandler);
 14605  005AC6  0E52               	movlw	low _TMR5_DefaultGateInterruptHandler
 14606  005AC8  6E14               	movwf	TMR5_SetGateInterruptHandler@InterruptHandler^0,c
 14607  005ACA  0E62               	movlw	high _TMR5_DefaultGateInterruptHandler
 14608  005ACC  6E15               	movwf	(TMR5_SetGateInterruptHandler@InterruptHandler+1)^0,c
 14609  005ACE  ECA7  F031         	call	_TMR5_SetGateInterruptHandler	;wreg free
 14610  005AD2                     
 14611                           ;mcc_generated_files/tmr5.c: 102:     T5CON = 0x03;
 14612  005AD2  0E03               	movlw	3
 14613  005AD4  6E9A               	movwf	154,c	;volatile
 14614  005AD6  0012               	return		;funcret
 14615  005AD8                     __end_of_TMR5_Initialize:
 14616                           	callstack 0
 14617                           
 14618 ;; *************** function _TMR5_SetGateInterruptHandler *****************
 14619 ;; Defined at:
 14620 ;;		line 186 in file "mcc_generated_files/tmr5.c"
 14621 ;; Parameters:    Size  Location     Type
 14622 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
 14623 ;;		 -> TMR5_DefaultGateInterruptHandler(1), 
 14624 ;; Auto vars:     Size  Location     Type
 14625 ;;		None
 14626 ;; Return value:  Size  Location     Type
 14627 ;;                  1    wreg      void 
 14628 ;; Registers used:
 14629 ;;		wreg, status,2, status,0
 14630 ;; Tracked objects:
 14631 ;;		On entry : 0/0
 14632 ;;		On exit  : 0/0
 14633 ;;		Unchanged: 0/0
 14634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14635 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14638 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14639 ;;Total ram usage:        2 bytes
 14640 ;; Hardware stack levels used: 1
 14641 ;; Hardware stack levels required when called: 8
 14642 ;; This function calls:
 14643 ;;		Nothing
 14644 ;; This function is called by:
 14645 ;;		_TMR5_Initialize
 14646 ;; This function uses a non-reentrant model
 14647 ;;
 14648                           
 14649                           	psect	text63
 14650  00634E                     __ptext63:
 14651                           	callstack 0
 14652  00634E                     _TMR5_SetGateInterruptHandler:
 14653                           	callstack 20
 14654  00634E                     
 14655                           ;mcc_generated_files/tmr5.c: 187:     TMR5_GateInterruptHandler = InterruptHandler;
 14656  00634E  C014  F192         	movff	TMR5_SetGateInterruptHandler@InterruptHandler,_TMR5_GateInterruptHandler
 14657  006352  C015  F193         	movff	TMR5_SetGateInterruptHandler@InterruptHandler+1,_TMR5_GateInterruptHandler+1
 14658  006356  0012               	return		;funcret
 14659  006358                     __end_of_TMR5_SetGateInterruptHandler:
 14660                           	callstack 0
 14661                           
 14662 ;; *************** function _TMR4_Initialize *****************
 14663 ;; Defined at:
 14664 ;;		line 65 in file "mcc_generated_files/tmr4.c"
 14665 ;; Parameters:    Size  Location     Type
 14666 ;;		None
 14667 ;; Auto vars:     Size  Location     Type
 14668 ;;		None
 14669 ;; Return value:  Size  Location     Type
 14670 ;;                  1    wreg      void 
 14671 ;; Registers used:
 14672 ;;		wreg, status,2, status,0, cstack
 14673 ;; Tracked objects:
 14674 ;;		On entry : 0/0
 14675 ;;		On exit  : 0/0
 14676 ;;		Unchanged: 0/0
 14677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14681 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14682 ;;Total ram usage:        0 bytes
 14683 ;; Hardware stack levels used: 1
 14684 ;; Hardware stack levels required when called: 9
 14685 ;; This function calls:
 14686 ;;		_TMR4_SetInterruptHandler
 14687 ;; This function is called by:
 14688 ;;		_SYSTEM_Initialize
 14689 ;; This function uses a non-reentrant model
 14690 ;;
 14691                           
 14692                           	psect	text64
 14693  0060C4                     __ptext64:
 14694                           	callstack 0
 14695  0060C4                     _TMR4_Initialize:
 14696                           	callstack 20
 14697  0060C4                     
 14698                           ;mcc_generated_files/tmr4.c: 70:     T4CLKCON = 0x01;
 14699  0060C4  0E01               	movlw	1
 14700  0060C6  6EA2               	movwf	162,c	;volatile
 14701                           
 14702                           ;mcc_generated_files/tmr4.c: 73:     T4HLT = 0x00;
 14703  0060C8  0E00               	movlw	0
 14704  0060CA  6EA1               	movwf	161,c	;volatile
 14705                           
 14706                           ;mcc_generated_files/tmr4.c: 76:     T4RST = 0x00;
 14707  0060CC  0E00               	movlw	0
 14708  0060CE  6EA3               	movwf	163,c	;volatile
 14709                           
 14710                           ;mcc_generated_files/tmr4.c: 79:     T4PR = 0xF9;
 14711  0060D0  0EF9               	movlw	249
 14712  0060D2  6E9F               	movwf	159,c	;volatile
 14713                           
 14714                           ;mcc_generated_files/tmr4.c: 82:     T4TMR = 0x00;
 14715  0060D4  0E00               	movlw	0
 14716  0060D6  6E9E               	movwf	158,c	;volatile
 14717  0060D8                     
 14718                           ;mcc_generated_files/tmr4.c: 85:     PIR7bits.TMR4IF = 0;
 14719  0060D8  0139               	movlb	57	; () banked
 14720  0060DA  91A7               	bcf	167,0,b	;volatile
 14721  0060DC                     
 14722                           ; BSR set to: 57
 14723                           ;mcc_generated_files/tmr4.c: 88:     PIE7bits.TMR4IE = 1;
 14724  0060DC  8197               	bsf	151,0,b	;volatile
 14725  0060DE                     
 14726                           ; BSR set to: 57
 14727                           ;mcc_generated_files/tmr4.c: 91:     TMR4_SetInterruptHandler(TMR4_DefaultInterruptHandl
      +                          er);
 14728  0060DE  0E8A               	movlw	low _TMR4_DefaultInterruptHandler
 14729  0060E0  6E14               	movwf	TMR4_SetInterruptHandler@InterruptHandler^0,c
 14730  0060E2  0E63               	movlw	high _TMR4_DefaultInterruptHandler
 14731  0060E4  6E15               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)^0,c
 14732  0060E6  ECAC  F031         	call	_TMR4_SetInterruptHandler	;wreg free
 14733  0060EA                     
 14734                           ;mcc_generated_files/tmr4.c: 94:     T4CON = 0xE0;
 14735  0060EA  0EE0               	movlw	224
 14736  0060EC  6EA0               	movwf	160,c	;volatile
 14737  0060EE  0012               	return		;funcret
 14738  0060F0                     __end_of_TMR4_Initialize:
 14739                           	callstack 0
 14740                           
 14741 ;; *************** function _TMR4_SetInterruptHandler *****************
 14742 ;; Defined at:
 14743 ;;		line 194 in file "mcc_generated_files/tmr4.c"
 14744 ;; Parameters:    Size  Location     Type
 14745 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
 14746 ;;		 -> TMR4_10msISR(1), TMR4_DefaultInterruptHandler(1), 
 14747 ;; Auto vars:     Size  Location     Type
 14748 ;;		None
 14749 ;; Return value:  Size  Location     Type
 14750 ;;                  1    wreg      void 
 14751 ;; Registers used:
 14752 ;;		wreg, status,2, status,0
 14753 ;; Tracked objects:
 14754 ;;		On entry : 0/0
 14755 ;;		On exit  : 0/0
 14756 ;;		Unchanged: 0/0
 14757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14758 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14761 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14762 ;;Total ram usage:        2 bytes
 14763 ;; Hardware stack levels used: 1
 14764 ;; Hardware stack levels required when called: 8
 14765 ;; This function calls:
 14766 ;;		Nothing
 14767 ;; This function is called by:
 14768 ;;		_TMR4_Initialize
 14769 ;;		_main
 14770 ;; This function uses a non-reentrant model
 14771 ;;
 14772                           
 14773                           	psect	text65
 14774  006358                     __ptext65:
 14775                           	callstack 0
 14776  006358                     _TMR4_SetInterruptHandler:
 14777                           	callstack 22
 14778  006358                     
 14779                           ;mcc_generated_files/tmr4.c: 195:     TMR4_InterruptHandler = InterruptHandler;
 14780  006358  C014  F18E         	movff	TMR4_SetInterruptHandler@InterruptHandler,_TMR4_InterruptHandler
 14781  00635C  C015  F18F         	movff	TMR4_SetInterruptHandler@InterruptHandler+1,_TMR4_InterruptHandler+1
 14782  006360  0012               	return		;funcret
 14783  006362                     __end_of_TMR4_SetInterruptHandler:
 14784                           	callstack 0
 14785                           
 14786 ;; *************** function _TMR3_Initialize *****************
 14787 ;; Defined at:
 14788 ;;		line 63 in file "mcc_generated_files/tmr3.c"
 14789 ;; Parameters:    Size  Location     Type
 14790 ;;		None
 14791 ;; Auto vars:     Size  Location     Type
 14792 ;;		None
 14793 ;; Return value:  Size  Location     Type
 14794 ;;                  1    wreg      void 
 14795 ;; Registers used:
 14796 ;;		wreg, status,2, status,0
 14797 ;; Tracked objects:
 14798 ;;		On entry : 0/0
 14799 ;;		On exit  : 0/0
 14800 ;;		Unchanged: 0/0
 14801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14804 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14805 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14806 ;;Total ram usage:        2 bytes
 14807 ;; Hardware stack levels used: 1
 14808 ;; Hardware stack levels required when called: 8
 14809 ;; This function calls:
 14810 ;;		Nothing
 14811 ;; This function is called by:
 14812 ;;		_SYSTEM_Initialize
 14813 ;; This function uses a non-reentrant model
 14814 ;;
 14815                           
 14816                           	psect	text66
 14817  005D92                     __ptext66:
 14818                           	callstack 0
 14819  005D92                     _TMR3_Initialize:
 14820                           	callstack 21
 14821  005D92                     
 14822                           ;mcc_generated_files/tmr3.c: 68:     T3GCON = 0x00;
 14823  005D92  0E00               	movlw	0
 14824  005D94  6EA7               	movwf	167,c	;volatile
 14825                           
 14826                           ;mcc_generated_files/tmr3.c: 71:     T3GATE = 0x00;
 14827  005D96  0E00               	movlw	0
 14828  005D98  6EA8               	movwf	168,c	;volatile
 14829                           
 14830                           ;mcc_generated_files/tmr3.c: 74:     T3CLK = 0x05;
 14831  005D9A  0E05               	movlw	5
 14832  005D9C  6EA9               	movwf	169,c	;volatile
 14833                           
 14834                           ;mcc_generated_files/tmr3.c: 77:     TMR3H = 0x00;
 14835  005D9E  0E00               	movlw	0
 14836  005DA0  6EA5               	movwf	165,c	;volatile
 14837                           
 14838                           ;mcc_generated_files/tmr3.c: 80:     TMR3L = 0x00;
 14839  005DA2  0E00               	movlw	0
 14840  005DA4  6EA4               	movwf	164,c	;volatile
 14841  005DA6                     
 14842                           ;mcc_generated_files/tmr3.c: 83:     PIR6bits.TMR3IF = 0;
 14843  005DA6  0139               	movlb	57	; () banked
 14844  005DA8  9DA6               	bcf	166,6,b	;volatile
 14845  005DAA                     
 14846                           ; BSR set to: 57
 14847                           ;mcc_generated_files/tmr3.c: 86:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 14848  005DAA  50A4               	movf	164,w,c	;volatile
 14849  005DAC  006F FE94  F014    	movff	16293,??_TMR3_Initialize	;volatile
 14850  005DB2  6A15               	clrf	(??_TMR3_Initialize+1)^0,c
 14851  005DB4  C014  F015         	movff	??_TMR3_Initialize,??_TMR3_Initialize+1
 14852  005DB8  6A14               	clrf	??_TMR3_Initialize^0,c
 14853  005DBA  1014               	iorwf	??_TMR3_Initialize^0,w,c
 14854  005DBC  0101               	movlb	1	; () banked
 14855  005DBE  6F90               	movwf	_timer3ReloadVal& (0+255),b	;volatile
 14856  005DC0  5015               	movf	(??_TMR3_Initialize+1)^0,w,c
 14857  005DC2  6F91               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
 14858  005DC4                     
 14859                           ; BSR set to: 1
 14860                           ;mcc_generated_files/tmr3.c: 89:     T3CON = 0x01;
 14861  005DC4  0E01               	movlw	1
 14862  005DC6  6EA6               	movwf	166,c	;volatile
 14863  005DC8                     
 14864                           ; BSR set to: 1
 14865  005DC8  0012               	return		;funcret
 14866  005DCA                     __end_of_TMR3_Initialize:
 14867                           	callstack 0
 14868                           
 14869 ;; *************** function _TMR2_Initialize *****************
 14870 ;; Defined at:
 14871 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 14872 ;; Parameters:    Size  Location     Type
 14873 ;;		None
 14874 ;; Auto vars:     Size  Location     Type
 14875 ;;		None
 14876 ;; Return value:  Size  Location     Type
 14877 ;;                  1    wreg      void 
 14878 ;; Registers used:
 14879 ;;		wreg, status,2
 14880 ;; Tracked objects:
 14881 ;;		On entry : 0/0
 14882 ;;		On exit  : 0/0
 14883 ;;		Unchanged: 0/0
 14884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14888 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14889 ;;Total ram usage:        0 bytes
 14890 ;; Hardware stack levels used: 1
 14891 ;; Hardware stack levels required when called: 8
 14892 ;; This function calls:
 14893 ;;		Nothing
 14894 ;; This function is called by:
 14895 ;;		_SYSTEM_Initialize
 14896 ;; This function uses a non-reentrant model
 14897 ;;
 14898                           
 14899                           	psect	text67
 14900  006270                     __ptext67:
 14901                           	callstack 0
 14902  006270                     _TMR2_Initialize:
 14903                           	callstack 21
 14904  006270                     
 14905                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x05;
 14906  006270  0E05               	movlw	5
 14907  006272  6EAE               	movwf	174,c	;volatile
 14908                           
 14909                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 14910  006274  0E00               	movlw	0
 14911  006276  6EAD               	movwf	173,c	;volatile
 14912                           
 14913                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 14914  006278  0E00               	movlw	0
 14915  00627A  6EAF               	movwf	175,c	;volatile
 14916  00627C                     
 14917                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0xFF;
 14918  00627C  68AB               	setf	171,c	;volatile
 14919                           
 14920                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 14921  00627E  0E00               	movlw	0
 14922  006280  6EAA               	movwf	170,c	;volatile
 14923  006282                     
 14924                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 14925  006282  0139               	movlb	57	; () banked
 14926  006284  95A4               	bcf	164,2,b	;volatile
 14927                           
 14928                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xB0;
 14929  006286  0EB0               	movlw	176
 14930  006288  6EAC               	movwf	172,c	;volatile
 14931  00628A                     
 14932                           ; BSR set to: 57
 14933  00628A  0012               	return		;funcret
 14934  00628C                     __end_of_TMR2_Initialize:
 14935                           	callstack 0
 14936                           
 14937 ;; *************** function _SMT1_Initialize *****************
 14938 ;; Defined at:
 14939 ;;		line 60 in file "mcc_generated_files/smt1.c"
 14940 ;; Parameters:    Size  Location     Type
 14941 ;;		None
 14942 ;; Auto vars:     Size  Location     Type
 14943 ;;		None
 14944 ;; Return value:  Size  Location     Type
 14945 ;;                  1    wreg      void 
 14946 ;; Registers used:
 14947 ;;		wreg, status,2
 14948 ;; Tracked objects:
 14949 ;;		On entry : 0/0
 14950 ;;		On exit  : 0/0
 14951 ;;		Unchanged: 0/0
 14952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14956 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14957 ;;Total ram usage:        0 bytes
 14958 ;; Hardware stack levels used: 1
 14959 ;; Hardware stack levels required when called: 8
 14960 ;; This function calls:
 14961 ;;		Nothing
 14962 ;; This function is called by:
 14963 ;;		_SYSTEM_Initialize
 14964 ;; This function uses a non-reentrant model
 14965 ;;
 14966                           
 14967                           	psect	text68
 14968  00600A                     __ptext68:
 14969                           	callstack 0
 14970  00600A                     _SMT1_Initialize:
 14971                           	callstack 21
 14972  00600A                     
 14973                           ;mcc_generated_files/smt1.c: 63:     SMT1CON0 = 0x80;
 14974  00600A  0E80               	movlw	128
 14975  00600C  013F               	movlb	63	; () banked
 14976  00600E  6F1E               	movwf	30,b	;volatile
 14977                           
 14978                           ;mcc_generated_files/smt1.c: 66:     SMT1CON1 = 0x42;
 14979  006010  0E42               	movlw	66
 14980  006012  6F1F               	movwf	31,b	;volatile
 14981                           
 14982                           ;mcc_generated_files/smt1.c: 69:     SMT1STAT = 0x00;
 14983  006014  0E00               	movlw	0
 14984  006016  6F20               	movwf	32,b	;volatile
 14985                           
 14986                           ;mcc_generated_files/smt1.c: 72:     SMT1CLK = 0x04;
 14987  006018  0E04               	movlw	4
 14988  00601A  6F21               	movwf	33,b	;volatile
 14989                           
 14990                           ;mcc_generated_files/smt1.c: 75:     SMT1WIN = 0x00;
 14991  00601C  0E00               	movlw	0
 14992  00601E  6F23               	movwf	35,b	;volatile
 14993                           
 14994                           ;mcc_generated_files/smt1.c: 78:     SMT1SIG = 0x00;
 14995  006020  0E00               	movlw	0
 14996  006022  6F22               	movwf	34,b	;volatile
 14997                           
 14998                           ;mcc_generated_files/smt1.c: 81:     SMT1PRU = 0x01;
 14999  006024  0E01               	movlw	1
 15000  006026  6F1D               	movwf	29,b	;volatile
 15001  006028                     
 15002                           ; BSR set to: 63
 15003                           ;mcc_generated_files/smt1.c: 84:     SMT1PRH = 0xFF;
 15004  006028  691C               	setf	28,b	;volatile
 15005  00602A                     
 15006                           ; BSR set to: 63
 15007                           ;mcc_generated_files/smt1.c: 87:     SMT1PRL = 0xFF;
 15008  00602A  691B               	setf	27,b	;volatile
 15009  00602C                     
 15010                           ; BSR set to: 63
 15011                           ;mcc_generated_files/smt1.c: 90:     PIE1bits.SMT1IE = 1;
 15012  00602C  0139               	movlb	57	; () banked
 15013  00602E  8B91               	bsf	145,5,b	;volatile
 15014  006030                     
 15015                           ; BSR set to: 57
 15016                           ;mcc_generated_files/smt1.c: 93:     PIE1bits.SMT1PWAIE = 1;
 15017  006030  8F91               	bsf	145,7,b	;volatile
 15018  006032                     
 15019                           ; BSR set to: 57
 15020                           ;mcc_generated_files/smt1.c: 96:     PIE1bits.SMT1PRAIE = 1;
 15021  006032  8D91               	bsf	145,6,b	;volatile
 15022  006034                     
 15023                           ; BSR set to: 57
 15024                           ;mcc_generated_files/smt1.c: 99:     SMT1CON1bits.SMT1GO = 1;
 15025  006034  013F               	movlb	63	; () banked
 15026  006036  8F1F               	bsf	31,7,b	;volatile
 15027  006038                     
 15028                           ; BSR set to: 63
 15029  006038  0012               	return		;funcret
 15030  00603A                     __end_of_SMT1_Initialize:
 15031                           	callstack 0
 15032                           
 15033 ;; *************** function _PWM8_Initialize *****************
 15034 ;; Defined at:
 15035 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 15036 ;; Parameters:    Size  Location     Type
 15037 ;;		None
 15038 ;; Auto vars:     Size  Location     Type
 15039 ;;		None
 15040 ;; Return value:  Size  Location     Type
 15041 ;;                  1    wreg      void 
 15042 ;; Registers used:
 15043 ;;		wreg, status,2
 15044 ;; Tracked objects:
 15045 ;;		On entry : 0/0
 15046 ;;		On exit  : 0/0
 15047 ;;		Unchanged: 0/0
 15048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15052 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15053 ;;Total ram usage:        0 bytes
 15054 ;; Hardware stack levels used: 1
 15055 ;; Hardware stack levels required when called: 8
 15056 ;; This function calls:
 15057 ;;		Nothing
 15058 ;; This function is called by:
 15059 ;;		_SYSTEM_Initialize
 15060 ;; This function uses a non-reentrant model
 15061 ;;
 15062                           
 15063                           	psect	text69
 15064  00628C                     __ptext69:
 15065                           	callstack 0
 15066  00628C                     _PWM8_Initialize:
 15067                           	callstack 21
 15068  00628C                     
 15069                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 15070  00628C  0E80               	movlw	128
 15071  00628E  6E62               	movwf	98,c	;volatile
 15072                           
 15073                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 15074  006290  0E00               	movlw	0
 15075  006292  6E61               	movwf	97,c	;volatile
 15076                           
 15077                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x00;
 15078  006294  0E00               	movlw	0
 15079  006296  6E60               	movwf	96,c	;volatile
 15080                           
 15081                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 2;
 15082  006298  013F               	movlb	63	; () banked
 15083  00629A  515F               	movf	95,w,b	;volatile
 15084  00629C  0B3F               	andlw	-193
 15085  00629E  0980               	iorlw	128
 15086  0062A0  6F5F               	movwf	95,b	;volatile
 15087  0062A2                     
 15088                           ; BSR set to: 63
 15089  0062A2  0012               	return		;funcret
 15090  0062A4                     __end_of_PWM8_Initialize:
 15091                           	callstack 0
 15092                           
 15093 ;; *************** function _PWM7_Initialize *****************
 15094 ;; Defined at:
 15095 ;;		line 58 in file "mcc_generated_files/pwm7.c"
 15096 ;; Parameters:    Size  Location     Type
 15097 ;;		None
 15098 ;; Auto vars:     Size  Location     Type
 15099 ;;		None
 15100 ;; Return value:  Size  Location     Type
 15101 ;;                  1    wreg      void 
 15102 ;; Registers used:
 15103 ;;		wreg, status,2
 15104 ;; Tracked objects:
 15105 ;;		On entry : 0/0
 15106 ;;		On exit  : 0/0
 15107 ;;		Unchanged: 0/0
 15108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15112 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15113 ;;Total ram usage:        0 bytes
 15114 ;; Hardware stack levels used: 1
 15115 ;; Hardware stack levels required when called: 8
 15116 ;; This function calls:
 15117 ;;		Nothing
 15118 ;; This function is called by:
 15119 ;;		_SYSTEM_Initialize
 15120 ;; This function uses a non-reentrant model
 15121 ;;
 15122                           
 15123                           	psect	text70
 15124  0062A4                     __ptext70:
 15125                           	callstack 0
 15126  0062A4                     _PWM7_Initialize:
 15127                           	callstack 21
 15128  0062A4                     
 15129                           ;mcc_generated_files/pwm7.c: 62:     PWM7CON = 0x80;
 15130  0062A4  0E80               	movlw	128
 15131  0062A6  6E66               	movwf	102,c	;volatile
 15132                           
 15133                           ;mcc_generated_files/pwm7.c: 65:     PWM7DCH = 0x00;
 15134  0062A8  0E00               	movlw	0
 15135  0062AA  6E65               	movwf	101,c	;volatile
 15136                           
 15137                           ;mcc_generated_files/pwm7.c: 68:     PWM7DCL = 0x00;
 15138  0062AC  0E00               	movlw	0
 15139  0062AE  6E64               	movwf	100,c	;volatile
 15140                           
 15141                           ;mcc_generated_files/pwm7.c: 71:     CCPTMRS1bits.P7TSEL = 2;
 15142  0062B0  013F               	movlb	63	; () banked
 15143  0062B2  515F               	movf	95,w,b	;volatile
 15144  0062B4  0BCF               	andlw	-49
 15145  0062B6  0920               	iorlw	32
 15146  0062B8  6F5F               	movwf	95,b	;volatile
 15147  0062BA                     
 15148                           ; BSR set to: 63
 15149  0062BA  0012               	return		;funcret
 15150  0062BC                     __end_of_PWM7_Initialize:
 15151                           	callstack 0
 15152                           
 15153 ;; *************** function _PWM6_Initialize *****************
 15154 ;; Defined at:
 15155 ;;		line 58 in file "mcc_generated_files/pwm6.c"
 15156 ;; Parameters:    Size  Location     Type
 15157 ;;		None
 15158 ;; Auto vars:     Size  Location     Type
 15159 ;;		None
 15160 ;; Return value:  Size  Location     Type
 15161 ;;                  1    wreg      void 
 15162 ;; Registers used:
 15163 ;;		wreg, status,2
 15164 ;; Tracked objects:
 15165 ;;		On entry : 0/0
 15166 ;;		On exit  : 0/0
 15167 ;;		Unchanged: 0/0
 15168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15172 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15173 ;;Total ram usage:        0 bytes
 15174 ;; Hardware stack levels used: 1
 15175 ;; Hardware stack levels required when called: 8
 15176 ;; This function calls:
 15177 ;;		Nothing
 15178 ;; This function is called by:
 15179 ;;		_SYSTEM_Initialize
 15180 ;; This function uses a non-reentrant model
 15181 ;;
 15182                           
 15183                           	psect	text71
 15184  0062BC                     __ptext71:
 15185                           	callstack 0
 15186  0062BC                     _PWM6_Initialize:
 15187                           	callstack 21
 15188  0062BC                     
 15189                           ;mcc_generated_files/pwm6.c: 62:     PWM6CON = 0x80;
 15190  0062BC  0E80               	movlw	128
 15191  0062BE  6E6A               	movwf	106,c	;volatile
 15192                           
 15193                           ;mcc_generated_files/pwm6.c: 65:     PWM6DCH = 0x59;
 15194  0062C0  0E59               	movlw	89
 15195  0062C2  6E69               	movwf	105,c	;volatile
 15196                           
 15197                           ;mcc_generated_files/pwm6.c: 68:     PWM6DCL = 0x40;
 15198  0062C4  0E40               	movlw	64
 15199  0062C6  6E68               	movwf	104,c	;volatile
 15200                           
 15201                           ;mcc_generated_files/pwm6.c: 71:     CCPTMRS1bits.P6TSEL = 1;
 15202  0062C8  013F               	movlb	63	; () banked
 15203  0062CA  515F               	movf	95,w,b	;volatile
 15204  0062CC  0BF3               	andlw	-13
 15205  0062CE  0904               	iorlw	4
 15206  0062D0  6F5F               	movwf	95,b	;volatile
 15207  0062D2                     
 15208                           ; BSR set to: 63
 15209  0062D2  0012               	return		;funcret
 15210  0062D4                     __end_of_PWM6_Initialize:
 15211                           	callstack 0
 15212                           
 15213 ;; *************** function _PWM5_Initialize *****************
 15214 ;; Defined at:
 15215 ;;		line 58 in file "mcc_generated_files/pwm5.c"
 15216 ;; Parameters:    Size  Location     Type
 15217 ;;		None
 15218 ;; Auto vars:     Size  Location     Type
 15219 ;;		None
 15220 ;; Return value:  Size  Location     Type
 15221 ;;                  1    wreg      void 
 15222 ;; Registers used:
 15223 ;;		wreg, status,2
 15224 ;; Tracked objects:
 15225 ;;		On entry : 0/0
 15226 ;;		On exit  : 0/0
 15227 ;;		Unchanged: 0/0
 15228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15232 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15233 ;;Total ram usage:        0 bytes
 15234 ;; Hardware stack levels used: 1
 15235 ;; Hardware stack levels required when called: 8
 15236 ;; This function calls:
 15237 ;;		Nothing
 15238 ;; This function is called by:
 15239 ;;		_SYSTEM_Initialize
 15240 ;; This function uses a non-reentrant model
 15241 ;;
 15242                           
 15243                           	psect	text72
 15244  0062D4                     __ptext72:
 15245                           	callstack 0
 15246  0062D4                     _PWM5_Initialize:
 15247                           	callstack 21
 15248  0062D4                     
 15249                           ;mcc_generated_files/pwm5.c: 62:     PWM5CON = 0x80;
 15250  0062D4  0E80               	movlw	128
 15251  0062D6  6E6E               	movwf	110,c	;volatile
 15252                           
 15253                           ;mcc_generated_files/pwm5.c: 65:     PWM5DCH = 0x59;
 15254  0062D8  0E59               	movlw	89
 15255  0062DA  6E6D               	movwf	109,c	;volatile
 15256                           
 15257                           ;mcc_generated_files/pwm5.c: 68:     PWM5DCL = 0x40;
 15258  0062DC  0E40               	movlw	64
 15259  0062DE  6E6C               	movwf	108,c	;volatile
 15260                           
 15261                           ;mcc_generated_files/pwm5.c: 71:     CCPTMRS1bits.P5TSEL = 1;
 15262  0062E0  013F               	movlb	63	; () banked
 15263  0062E2  515F               	movf	95,w,b	;volatile
 15264  0062E4  0BFC               	andlw	-4
 15265  0062E6  0901               	iorlw	1
 15266  0062E8  6F5F               	movwf	95,b	;volatile
 15267  0062EA                     
 15268                           ; BSR set to: 63
 15269  0062EA  0012               	return		;funcret
 15270  0062EC                     __end_of_PWM5_Initialize:
 15271                           	callstack 0
 15272                           
 15273 ;; *************** function _PMD_Initialize *****************
 15274 ;; Defined at:
 15275 ;;		line 86 in file "mcc_generated_files/mcc.c"
 15276 ;; Parameters:    Size  Location     Type
 15277 ;;		None
 15278 ;; Auto vars:     Size  Location     Type
 15279 ;;		None
 15280 ;; Return value:  Size  Location     Type
 15281 ;;                  1    wreg      void 
 15282 ;; Registers used:
 15283 ;;		wreg, status,2
 15284 ;; Tracked objects:
 15285 ;;		On entry : 0/0
 15286 ;;		On exit  : 0/0
 15287 ;;		Unchanged: 0/0
 15288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15292 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15293 ;;Total ram usage:        0 bytes
 15294 ;; Hardware stack levels used: 1
 15295 ;; Hardware stack levels required when called: 8
 15296 ;; This function calls:
 15297 ;;		Nothing
 15298 ;; This function is called by:
 15299 ;;		_SYSTEM_Initialize
 15300 ;; This function uses a non-reentrant model
 15301 ;;
 15302                           
 15303                           	psect	text73
 15304  0061EA                     __ptext73:
 15305                           	callstack 0
 15306  0061EA                     _PMD_Initialize:
 15307                           	callstack 21
 15308  0061EA                     
 15309                           ;mcc_generated_files/mcc.c: 89:     PMD0 = 0x00;
 15310  0061EA  0E00               	movlw	0
 15311  0061EC  0139               	movlb	57	; () banked
 15312  0061EE  6FC0               	movwf	192,b	;volatile
 15313                           
 15314                           ;mcc_generated_files/mcc.c: 91:     PMD1 = 0x00;
 15315  0061F0  0E00               	movlw	0
 15316  0061F2  6FC1               	movwf	193,b	;volatile
 15317                           
 15318                           ;mcc_generated_files/mcc.c: 93:     PMD2 = 0x00;
 15319  0061F4  0E00               	movlw	0
 15320  0061F6  6FC2               	movwf	194,b	;volatile
 15321                           
 15322                           ;mcc_generated_files/mcc.c: 95:     PMD3 = 0x00;
 15323  0061F8  0E00               	movlw	0
 15324  0061FA  6FC3               	movwf	195,b	;volatile
 15325                           
 15326                           ;mcc_generated_files/mcc.c: 97:     PMD4 = 0x00;
 15327  0061FC  0E00               	movlw	0
 15328  0061FE  6FC4               	movwf	196,b	;volatile
 15329                           
 15330                           ;mcc_generated_files/mcc.c: 99:     PMD5 = 0x00;
 15331  006200  0E00               	movlw	0
 15332  006202  6FC5               	movwf	197,b	;volatile
 15333                           
 15334                           ;mcc_generated_files/mcc.c: 101:     PMD6 = 0x00;
 15335  006204  0E00               	movlw	0
 15336  006206  6FC6               	movwf	198,b	;volatile
 15337                           
 15338                           ;mcc_generated_files/mcc.c: 103:     PMD7 = 0x00;
 15339  006208  0E00               	movlw	0
 15340  00620A  6FC7               	movwf	199,b	;volatile
 15341  00620C                     
 15342                           ; BSR set to: 57
 15343  00620C  0012               	return		;funcret
 15344  00620E                     __end_of_PMD_Initialize:
 15345                           	callstack 0
 15346                           
 15347 ;; *************** function _PIN_MANAGER_Initialize *****************
 15348 ;; Defined at:
 15349 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 15350 ;; Parameters:    Size  Location     Type
 15351 ;;		None
 15352 ;; Auto vars:     Size  Location     Type
 15353 ;;		None
 15354 ;; Return value:  Size  Location     Type
 15355 ;;                  1    wreg      void 
 15356 ;; Registers used:
 15357 ;;		wreg, status,2
 15358 ;; Tracked objects:
 15359 ;;		On entry : 0/0
 15360 ;;		On exit  : 0/0
 15361 ;;		Unchanged: 0/0
 15362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15366 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15367 ;;Total ram usage:        0 bytes
 15368 ;; Hardware stack levels used: 1
 15369 ;; Hardware stack levels required when called: 8
 15370 ;; This function calls:
 15371 ;;		Nothing
 15372 ;; This function is called by:
 15373 ;;		_SYSTEM_Initialize
 15374 ;; This function uses a non-reentrant model
 15375 ;;
 15376                           
 15377                           	psect	text74
 15378  004FD2                     __ptext74:
 15379                           	callstack 0
 15380  004FD2                     _PIN_MANAGER_Initialize:
 15381                           	callstack 21
 15382  004FD2                     
 15383                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
 15384  004FD2  0E00               	movlw	0
 15385  004FD4  6EBE               	movwf	190,c	;volatile
 15386                           
 15387                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
 15388  004FD6  0E00               	movlw	0
 15389  004FD8  6EBD               	movwf	189,c	;volatile
 15390                           
 15391                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x24;
 15392  004FDA  0E24               	movlw	36
 15393  004FDC  6EBA               	movwf	186,c	;volatile
 15394                           
 15395                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
 15396  004FDE  0E00               	movlw	0
 15397  004FE0  6EBB               	movwf	187,c	;volatile
 15398                           
 15399                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
 15400  004FE2  0E00               	movlw	0
 15401  004FE4  6EBC               	movwf	188,c	;volatile
 15402                           
 15403                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
 15404  004FE6  0E07               	movlw	7
 15405  004FE8  6EC6               	movwf	198,c	;volatile
 15406                           
 15407                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xC0;
 15408  004FEA  0EC0               	movlw	192
 15409  004FEC  6EC2               	movwf	194,c	;volatile
 15410                           
 15411                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xF7;
 15412  004FEE  0EF7               	movlw	247
 15413  004FF0  6EC3               	movwf	195,c	;volatile
 15414  004FF2                     
 15415                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xFF;
 15416  004FF2  68C4               	setf	196,c	;volatile
 15417  004FF4                     
 15418                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
 15419  004FF4  68C5               	setf	197,c	;volatile
 15420                           
 15421                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0x1F;
 15422  004FF6  0E1F               	movlw	31
 15423  004FF8  013A               	movlb	58	; () banked
 15424  004FFA  6F70               	movwf	112,b	;volatile
 15425  004FFC                     
 15426                           ; BSR set to: 58
 15427                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0xFF;
 15428  004FFC  6960               	setf	96,b	;volatile
 15429                           
 15430                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0xC0;
 15431  004FFE  0EC0               	movlw	192
 15432  005000  6F50               	movwf	80,b	;volatile
 15433                           
 15434                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
 15435  005002  0E07               	movlw	7
 15436  005004  6F80               	movwf	128,b	;volatile
 15437                           
 15438                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x7F;
 15439  005006  0E7F               	movlw	127
 15440  005008  6F40               	movwf	64,b	;volatile
 15441                           
 15442                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
 15443  00500A  0E00               	movlw	0
 15444  00500C  6F71               	movwf	113,b	;volatile
 15445                           
 15446                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
 15447  00500E  0E00               	movlw	0
 15448  005010  6F81               	movwf	129,b	;volatile
 15449                           
 15450                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
 15451  005012  0E00               	movlw	0
 15452  005014  6F51               	movwf	81,b	;volatile
 15453                           
 15454                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
 15455  005016  0E00               	movlw	0
 15456  005018  6F41               	movwf	65,b	;volatile
 15457                           
 15458                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
 15459  00501A  0E00               	movlw	0
 15460  00501C  6F61               	movwf	97,b	;volatile
 15461                           
 15462                           ;mcc_generated_files/pin_manager.c: 96:     RB1I2C = 0x00;
 15463  00501E  0E00               	movlw	0
 15464  005020  6F5A               	movwf	90,b	;volatile
 15465                           
 15466                           ;mcc_generated_files/pin_manager.c: 97:     RB2I2C = 0x00;
 15467  005022  0E00               	movlw	0
 15468  005024  6F5B               	movwf	91,b	;volatile
 15469                           
 15470                           ;mcc_generated_files/pin_manager.c: 98:     RC3I2C = 0x00;
 15471  005026  0E00               	movlw	0
 15472  005028  6F6A               	movwf	106,b	;volatile
 15473                           
 15474                           ;mcc_generated_files/pin_manager.c: 99:     RC4I2C = 0x00;
 15475  00502A  0E00               	movlw	0
 15476  00502C  6F6B               	movwf	107,b	;volatile
 15477                           
 15478                           ;mcc_generated_files/pin_manager.c: 100:     RD0I2C = 0x00;
 15479  00502E  0E00               	movlw	0
 15480  005030  6F7A               	movwf	122,b	;volatile
 15481                           
 15482                           ;mcc_generated_files/pin_manager.c: 101:     RD1I2C = 0x00;
 15483  005032  0E00               	movlw	0
 15484  005034  6F7B               	movwf	123,b	;volatile
 15485                           
 15486                           ;mcc_generated_files/pin_manager.c: 106:     ODCONE = 0x00;
 15487  005036  0E00               	movlw	0
 15488  005038  6F82               	movwf	130,b	;volatile
 15489                           
 15490                           ;mcc_generated_files/pin_manager.c: 107:     ODCONA = 0x00;
 15491  00503A  0E00               	movlw	0
 15492  00503C  6F42               	movwf	66,b	;volatile
 15493                           
 15494                           ;mcc_generated_files/pin_manager.c: 108:     ODCONB = 0x00;
 15495  00503E  0E00               	movlw	0
 15496  005040  6F52               	movwf	82,b	;volatile
 15497                           
 15498                           ;mcc_generated_files/pin_manager.c: 109:     ODCONC = 0x00;
 15499  005042  0E00               	movlw	0
 15500  005044  6F62               	movwf	98,b	;volatile
 15501                           
 15502                           ;mcc_generated_files/pin_manager.c: 110:     ODCOND = 0x00;
 15503  005046  0E00               	movlw	0
 15504  005048  6F72               	movwf	114,b	;volatile
 15505  00504A                     
 15506                           ; BSR set to: 58
 15507                           ;mcc_generated_files/pin_manager.c: 115:     SLRCONA = 0xFF;
 15508  00504A  6943               	setf	67,b	;volatile
 15509  00504C                     
 15510                           ; BSR set to: 58
 15511                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONB = 0xFF;
 15512  00504C  6953               	setf	83,b	;volatile
 15513  00504E                     
 15514                           ; BSR set to: 58
 15515                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONC = 0xFF;
 15516  00504E  6963               	setf	99,b	;volatile
 15517  005050                     
 15518                           ; BSR set to: 58
 15519                           ;mcc_generated_files/pin_manager.c: 118:     SLRCOND = 0xFF;
 15520  005050  6973               	setf	115,b	;volatile
 15521                           
 15522                           ;mcc_generated_files/pin_manager.c: 119:     SLRCONE = 0x07;
 15523  005052  0E07               	movlw	7
 15524  005054  6F83               	movwf	131,b	;volatile
 15525  005056                     
 15526                           ; BSR set to: 58
 15527                           ;mcc_generated_files/pin_manager.c: 124:     INLVLA = 0xFF;
 15528  005056  6944               	setf	68,b	;volatile
 15529  005058                     
 15530                           ; BSR set to: 58
 15531                           ;mcc_generated_files/pin_manager.c: 125:     INLVLB = 0xFF;
 15532  005058  6954               	setf	84,b	;volatile
 15533  00505A                     
 15534                           ; BSR set to: 58
 15535                           ;mcc_generated_files/pin_manager.c: 126:     INLVLC = 0xFF;
 15536  00505A  6964               	setf	100,b	;volatile
 15537  00505C                     
 15538                           ; BSR set to: 58
 15539                           ;mcc_generated_files/pin_manager.c: 127:     INLVLD = 0xFF;
 15540  00505C  6974               	setf	116,b	;volatile
 15541                           
 15542                           ;mcc_generated_files/pin_manager.c: 128:     INLVLE = 0x0F;
 15543  00505E  0E0F               	movlw	15
 15544  005060  6F84               	movwf	132,b	;volatile
 15545                           
 15546                           ;mcc_generated_files/pin_manager.c: 137:     CCP3PPS = 0x1F;
 15547  005062  0E1F               	movlw	31
 15548  005064  6FCF               	movwf	207,b	;volatile
 15549                           
 15550                           ;mcc_generated_files/pin_manager.c: 138:     CLCIN3PPS = 0x09;
 15551  005066  0E09               	movlw	9
 15552  005068  6FDC               	movwf	220,b	;volatile
 15553                           
 15554                           ;mcc_generated_files/pin_manager.c: 139:     RA1PPS = 0x0E;
 15555  00506A  0E0E               	movlw	14
 15556  00506C  6F01               	movwf	1,b	;volatile
 15557                           
 15558                           ;mcc_generated_files/pin_manager.c: 140:     U1RXPPS = 0x0A;
 15559  00506E  0E0A               	movlw	10
 15560  005070  6FE5               	movwf	229,b	;volatile
 15561                           
 15562                           ;mcc_generated_files/pin_manager.c: 141:     RA0PPS = 0x0D;
 15563  005072  0E0D               	movlw	13
 15564  005074  6F00               	movwf	0,b	;volatile
 15565                           
 15566                           ;mcc_generated_files/pin_manager.c: 142:     T5GPPS = 0x1D;
 15567  005076  0E1D               	movlw	29
 15568  005078  6FC9               	movwf	201,b	;volatile
 15569                           
 15570                           ;mcc_generated_files/pin_manager.c: 143:     RA4PPS = 0x10;
 15571  00507A  0E10               	movlw	16
 15572  00507C  6F04               	movwf	4,b	;volatile
 15573                           
 15574                           ;mcc_generated_files/pin_manager.c: 144:     CLCIN0PPS = 0x07;
 15575  00507E  0E07               	movlw	7
 15576  005080  6FD9               	movwf	217,b	;volatile
 15577                           
 15578                           ;mcc_generated_files/pin_manager.c: 145:     SMT1WINPPS = 0x09;
 15579  005082  0E09               	movlw	9
 15580  005084  6FD1               	movwf	209,b	;volatile
 15581                           
 15582                           ;mcc_generated_files/pin_manager.c: 146:     RA3PPS = 0x0F;
 15583  005086  0E0F               	movlw	15
 15584  005088  6F03               	movwf	3,b	;volatile
 15585                           
 15586                           ;mcc_generated_files/pin_manager.c: 147:     RB3PPS = 0x13;
 15587  00508A  0E13               	movlw	19
 15588  00508C  6F0B               	movwf	11,b	;volatile
 15589                           
 15590                           ;mcc_generated_files/pin_manager.c: 148:     CLCIN2PPS = 0x08;
 15591  00508E  0E08               	movlw	8
 15592  005090  6FDB               	movwf	219,b	;volatile
 15593                           
 15594                           ;mcc_generated_files/pin_manager.c: 149:     SMT1SIGPPS = 0x08;
 15595  005092  0E08               	movlw	8
 15596  005094  6FD2               	movwf	210,b	;volatile
 15597                           
 15598                           ;mcc_generated_files/pin_manager.c: 150:     CCP4PPS = 0x1E;
 15599  005096  0E1E               	movlw	30
 15600  005098  6FD0               	movwf	208,b	;volatile
 15601  00509A                     
 15602                           ; BSR set to: 58
 15603  00509A  0012               	return		;funcret
 15604  00509C                     __end_of_PIN_MANAGER_Initialize:
 15605                           	callstack 0
 15606                           
 15607 ;; *************** function _OSCILLATOR_Initialize *****************
 15608 ;; Defined at:
 15609 ;;		line 72 in file "mcc_generated_files/mcc.c"
 15610 ;; Parameters:    Size  Location     Type
 15611 ;;		None
 15612 ;; Auto vars:     Size  Location     Type
 15613 ;;		None
 15614 ;; Return value:  Size  Location     Type
 15615 ;;                  1    wreg      void 
 15616 ;; Registers used:
 15617 ;;		wreg, status,2
 15618 ;; Tracked objects:
 15619 ;;		On entry : 0/0
 15620 ;;		On exit  : 0/0
 15621 ;;		Unchanged: 0/0
 15622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15626 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15627 ;;Total ram usage:        0 bytes
 15628 ;; Hardware stack levels used: 1
 15629 ;; Hardware stack levels required when called: 8
 15630 ;; This function calls:
 15631 ;;		Nothing
 15632 ;; This function is called by:
 15633 ;;		_SYSTEM_Initialize
 15634 ;; This function uses a non-reentrant model
 15635 ;;
 15636                           
 15637                           	psect	text75
 15638  0062EC                     __ptext75:
 15639                           	callstack 0
 15640  0062EC                     _OSCILLATOR_Initialize:
 15641                           	callstack 21
 15642  0062EC                     
 15643                           ;mcc_generated_files/mcc.c: 75:     OSCCON1 = 0x60;
 15644  0062EC  0E60               	movlw	96
 15645  0062EE  0139               	movlb	57	; () banked
 15646  0062F0  6FD9               	movwf	217,b	;volatile
 15647                           
 15648                           ;mcc_generated_files/mcc.c: 77:     OSCCON3 = 0x00;
 15649  0062F2  0E00               	movlw	0
 15650  0062F4  6FDB               	movwf	219,b	;volatile
 15651                           
 15652                           ;mcc_generated_files/mcc.c: 79:     OSCEN = 0x00;
 15653  0062F6  0E00               	movlw	0
 15654  0062F8  6FDD               	movwf	221,b	;volatile
 15655                           
 15656                           ;mcc_generated_files/mcc.c: 81:     OSCFRQ = 0x08;
 15657  0062FA  0E08               	movlw	8
 15658  0062FC  6FDF               	movwf	223,b	;volatile
 15659                           
 15660                           ;mcc_generated_files/mcc.c: 83:     OSCTUNE = 0x00;
 15661  0062FE  0E00               	movlw	0
 15662  006300  6FDE               	movwf	222,b	;volatile
 15663  006302                     
 15664                           ; BSR set to: 57
 15665  006302  0012               	return		;funcret
 15666  006304                     __end_of_OSCILLATOR_Initialize:
 15667                           	callstack 0
 15668                           
 15669 ;; *************** function _INTERRUPT_Initialize *****************
 15670 ;; Defined at:
 15671 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 15672 ;; Parameters:    Size  Location     Type
 15673 ;;		None
 15674 ;; Auto vars:     Size  Location     Type
 15675 ;;  state           1   19[COMRAM] _Bool 
 15676 ;; Return value:  Size  Location     Type
 15677 ;;                  1    wreg      void 
 15678 ;; Registers used:
 15679 ;;		wreg, status,2
 15680 ;; Tracked objects:
 15681 ;;		On entry : 0/0
 15682 ;;		On exit  : 0/0
 15683 ;;		Unchanged: 0/0
 15684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15686 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15688 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15689 ;;Total ram usage:        1 bytes
 15690 ;; Hardware stack levels used: 1
 15691 ;; Hardware stack levels required when called: 8
 15692 ;; This function calls:
 15693 ;;		Nothing
 15694 ;; This function is called by:
 15695 ;;		_SYSTEM_Initialize
 15696 ;; This function uses a non-reentrant model
 15697 ;;
 15698                           
 15699                           	psect	text76
 15700  0059F8                     __ptext76:
 15701                           	callstack 0
 15702  0059F8                     _INTERRUPT_Initialize:
 15703                           	callstack 21
 15704  0059F8                     
 15705                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 15706  0059F8  8AD2               	bsf	210,5,c	;volatile
 15707  0059FA                     
 15708                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 15709  0059FA  0E00               	movlw	0
 15710  0059FC  BED2               	btfsc	16338,7,c	;volatile
 15711  0059FE  0E01               	movlw	1
 15712  005A00  6E14               	movwf	INTERRUPT_Initialize@state^0,c
 15713  005A02                     
 15714                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 15715  005A02  9ED2               	bcf	16338,7,c	;volatile
 15716                           
 15717                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 15718  005A04  0E55               	movlw	85
 15719  005A06  6ED4               	movwf	212,c	;volatile
 15720                           
 15721                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 15722  005A08  0EAA               	movlw	170
 15723  005A0A  6ED4               	movwf	212,c	;volatile
 15724  005A0C                     
 15725                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 15726  005A0C  90D4               	bcf	212,0,c	;volatile
 15727                           
 15728                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTBASEU = 0;
 15729  005A0E  0E00               	movlw	0
 15730  005A10  6ED7               	movwf	215,c	;volatile
 15731                           
 15732                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTBASEH = 0;
 15733  005A12  0E00               	movlw	0
 15734  005A14  6ED6               	movwf	214,c	;volatile
 15735                           
 15736                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTBASEL = 8;
 15737  005A16  0E08               	movlw	8
 15738  005A18  6ED5               	movwf	213,c	;volatile
 15739                           
 15740                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 15741  005A1A  0E55               	movlw	85
 15742  005A1C  6ED4               	movwf	212,c	;volatile
 15743                           
 15744                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 15745  005A1E  0EAA               	movlw	170
 15746  005A20  6ED4               	movwf	212,c	;volatile
 15747  005A22                     
 15748                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 15749  005A22  80D4               	bsf	212,0,c	;volatile
 15750  005A24                     
 15751                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 15752  005A24  B014               	btfsc	INTERRUPT_Initialize@state^0,0,c
 15753  005A26  D002               	bra	u2985
 15754  005A28  9ED2               	bcf	16338,7,c	;volatile
 15755  005A2A  D001               	bra	u2986
 15756  005A2C                     u2985:
 15757  005A2C  8ED2               	bsf	16338,7,c	;volatile
 15758  005A2E                     u2986:
 15759  005A2E                     
 15760                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR3bits.U1TXIP = 0;
 15761  005A2E  0139               	movlb	57	; () banked
 15762  005A30  9983               	bcf	131,4,b	;volatile
 15763  005A32                     
 15764                           ; BSR set to: 57
 15765                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR3bits.U1RXIP = 0;
 15766  005A32  9783               	bcf	131,3,b	;volatile
 15767  005A34                     
 15768                           ; BSR set to: 57
 15769                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR1bits.SMT1PWAIP = 1;
 15770  005A34  8F81               	bsf	129,7,b	;volatile
 15771  005A36                     
 15772                           ; BSR set to: 57
 15773                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR1bits.SMT1IP = 1;
 15774  005A36  8B81               	bsf	129,5,b	;volatile
 15775  005A38                     
 15776                           ; BSR set to: 57
 15777                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR1bits.SMT1PRAIP = 1;
 15778  005A38  8D81               	bsf	129,6,b	;volatile
 15779  005A3A                     
 15780                           ; BSR set to: 57
 15781                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR10bits.CCP4IP = 1;
 15782  005A3A  818A               	bsf	138,0,b	;volatile
 15783  005A3C                     
 15784                           ; BSR set to: 57
 15785                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR8bits.TMR5GIP = 1;
 15786  005A3C  8F88               	bsf	136,7,b	;volatile
 15787  005A3E                     
 15788                           ; BSR set to: 57
 15789                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR7bits.TMR4IP = 0;
 15790  005A3E  9187               	bcf	135,0,b	;volatile
 15791  005A40                     
 15792                           ; BSR set to: 57
 15793                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR9bits.CCP3IP = 1;
 15794  005A40  8389               	bsf	137,1,b	;volatile
 15795  005A42                     
 15796                           ; BSR set to: 57
 15797  005A42  0012               	return		;funcret
 15798  005A44                     __end_of_INTERRUPT_Initialize:
 15799                           	callstack 0
 15800                           
 15801 ;; *************** function _CLC3_Initialize *****************
 15802 ;; Defined at:
 15803 ;;		line 58 in file "mcc_generated_files/clc3.c"
 15804 ;; Parameters:    Size  Location     Type
 15805 ;;		None
 15806 ;; Auto vars:     Size  Location     Type
 15807 ;;		None
 15808 ;; Return value:  Size  Location     Type
 15809 ;;                  1    wreg      void 
 15810 ;; Registers used:
 15811 ;;		wreg, status,2
 15812 ;; Tracked objects:
 15813 ;;		On entry : 0/0
 15814 ;;		On exit  : 0/0
 15815 ;;		Unchanged: 0/0
 15816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15820 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15821 ;;Total ram usage:        0 bytes
 15822 ;; Hardware stack levels used: 1
 15823 ;; Hardware stack levels required when called: 8
 15824 ;; This function calls:
 15825 ;;		Nothing
 15826 ;; This function is called by:
 15827 ;;		_SYSTEM_Initialize
 15828 ;; This function uses a non-reentrant model
 15829 ;;
 15830                           
 15831                           	psect	text77
 15832  0060F0                     __ptext77:
 15833                           	callstack 0
 15834  0060F0                     _CLC3_Initialize:
 15835                           	callstack 21
 15836  0060F0                     
 15837                           ;mcc_generated_files/clc3.c: 63:     CLC3POL = 0x00;
 15838  0060F0  0E00               	movlw	0
 15839  0060F2  013C               	movlb	60	; () banked
 15840  0060F4  6F61               	movwf	97,b	;volatile
 15841                           
 15842                           ;mcc_generated_files/clc3.c: 65:     CLC3SEL0 = 0x03;
 15843  0060F6  0E03               	movlw	3
 15844  0060F8  6F62               	movwf	98,b	;volatile
 15845                           
 15846                           ;mcc_generated_files/clc3.c: 67:     CLC3SEL1 = 0x02;
 15847  0060FA  0E02               	movlw	2
 15848  0060FC  6F63               	movwf	99,b	;volatile
 15849                           
 15850                           ;mcc_generated_files/clc3.c: 69:     CLC3SEL2 = 0x00;
 15851  0060FE  0E00               	movlw	0
 15852  006100  6F64               	movwf	100,b	;volatile
 15853                           
 15854                           ;mcc_generated_files/clc3.c: 71:     CLC3SEL3 = 0x00;
 15855  006102  0E00               	movlw	0
 15856  006104  6F65               	movwf	101,b	;volatile
 15857                           
 15858                           ;mcc_generated_files/clc3.c: 73:     CLC3GLS0 = 0x02;
 15859  006106  0E02               	movlw	2
 15860  006108  6F66               	movwf	102,b	;volatile
 15861                           
 15862                           ;mcc_generated_files/clc3.c: 75:     CLC3GLS1 = 0x08;
 15863  00610A  0E08               	movlw	8
 15864  00610C  6F67               	movwf	103,b	;volatile
 15865                           
 15866                           ;mcc_generated_files/clc3.c: 77:     CLC3GLS2 = 0x00;
 15867  00610E  0E00               	movlw	0
 15868  006110  6F68               	movwf	104,b	;volatile
 15869                           
 15870                           ;mcc_generated_files/clc3.c: 79:     CLC3GLS3 = 0x00;
 15871  006112  0E00               	movlw	0
 15872  006114  6F69               	movwf	105,b	;volatile
 15873                           
 15874                           ;mcc_generated_files/clc3.c: 81:     CLC3CON = 0x85;
 15875  006116  0E85               	movlw	133
 15876  006118  6F60               	movwf	96,b	;volatile
 15877  00611A                     
 15878                           ; BSR set to: 60
 15879  00611A  0012               	return		;funcret
 15880  00611C                     __end_of_CLC3_Initialize:
 15881                           	callstack 0
 15882                           
 15883 ;; *************** function _CCP4_Initialize *****************
 15884 ;; Defined at:
 15885 ;;		line 78 in file "mcc_generated_files/ccp4.c"
 15886 ;; Parameters:    Size  Location     Type
 15887 ;;		None
 15888 ;; Auto vars:     Size  Location     Type
 15889 ;;		None
 15890 ;; Return value:  Size  Location     Type
 15891 ;;                  1    wreg      void 
 15892 ;; Registers used:
 15893 ;;		wreg, status,2, status,0, cstack
 15894 ;; Tracked objects:
 15895 ;;		On entry : 0/0
 15896 ;;		On exit  : 0/0
 15897 ;;		Unchanged: 0/0
 15898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15903 ;;Total ram usage:        0 bytes
 15904 ;; Hardware stack levels used: 1
 15905 ;; Hardware stack levels required when called: 9
 15906 ;; This function calls:
 15907 ;;		_CCP4_SetCallBack
 15908 ;; This function is called by:
 15909 ;;		_SYSTEM_Initialize
 15910 ;; This function uses a non-reentrant model
 15911 ;;
 15912                           
 15913                           	psect	text78
 15914  00603A                     __ptext78:
 15915                           	callstack 0
 15916  00603A                     _CCP4_Initialize:
 15917                           	callstack 20
 15918  00603A                     
 15919                           ;mcc_generated_files/ccp4.c: 83:  CCP4CON = 0x83;
 15920  00603A  0E83               	movlw	131
 15921  00603C  6E72               	movwf	114,c	;volatile
 15922                           
 15923                           ;mcc_generated_files/ccp4.c: 86:  CCP4CAP = 0x00;
 15924  00603E  0E00               	movlw	0
 15925  006040  6E73               	movwf	115,c	;volatile
 15926                           
 15927                           ;mcc_generated_files/ccp4.c: 89:  CCPR4H = 0x00;
 15928  006042  0E00               	movlw	0
 15929  006044  6E71               	movwf	113,c	;volatile
 15930                           
 15931                           ;mcc_generated_files/ccp4.c: 92:  CCPR4L = 0x00;
 15932  006046  0E00               	movlw	0
 15933  006048  6E70               	movwf	112,c	;volatile
 15934  00604A                     
 15935                           ;mcc_generated_files/ccp4.c: 95:     CCP4_SetCallBack(CCP4_DefaultCallBack);
 15936  00604A  0E36               	movlw	low _CCP4_DefaultCallBack
 15937  00604C  6E14               	movwf	CCP4_SetCallBack@customCallBack^0,c
 15938  00604E  0E5E               	movlw	high _CCP4_DefaultCallBack
 15939  006050  6E15               	movwf	(CCP4_SetCallBack@customCallBack+1)^0,c
 15940  006052  ECB1  F031         	call	_CCP4_SetCallBack	;wreg free
 15941  006056                     
 15942                           ;mcc_generated_files/ccp4.c: 98:  CCPTMRS0bits.C4TSEL = 0x2;
 15943  006056  013F               	movlb	63	; () banked
 15944  006058  515E               	movf	94,w,b	;volatile
 15945  00605A  0B3F               	andlw	-193
 15946  00605C  0980               	iorlw	128
 15947  00605E  6F5E               	movwf	94,b	;volatile
 15948  006060                     
 15949                           ; BSR set to: 63
 15950                           ;mcc_generated_files/ccp4.c: 101:     PIR10bits.CCP4IF = 0;
 15951  006060  0139               	movlb	57	; () banked
 15952  006062  91AA               	bcf	170,0,b	;volatile
 15953  006064                     
 15954                           ; BSR set to: 57
 15955                           ;mcc_generated_files/ccp4.c: 104:     PIE10bits.CCP4IE = 1;
 15956  006064  819A               	bsf	154,0,b	;volatile
 15957  006066                     
 15958                           ; BSR set to: 57
 15959  006066  0012               	return		;funcret
 15960  006068                     __end_of_CCP4_Initialize:
 15961                           	callstack 0
 15962                           
 15963 ;; *************** function _CCP4_SetCallBack *****************
 15964 ;; Defined at:
 15965 ;;		line 75 in file "mcc_generated_files/ccp4.c"
 15966 ;; Parameters:    Size  Location     Type
 15967 ;;  customCallBa    2   19[COMRAM] PTR FTN(unsigned short ,
 15968 ;;		 -> CCP4_DefaultCallBack(1), 
 15969 ;; Auto vars:     Size  Location     Type
 15970 ;;		None
 15971 ;; Return value:  Size  Location     Type
 15972 ;;                  1    wreg      void 
 15973 ;; Registers used:
 15974 ;;		wreg, status,2, status,0
 15975 ;; Tracked objects:
 15976 ;;		On entry : 0/0
 15977 ;;		On exit  : 0/0
 15978 ;;		Unchanged: 0/0
 15979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15980 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15983 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15984 ;;Total ram usage:        2 bytes
 15985 ;; Hardware stack levels used: 1
 15986 ;; Hardware stack levels required when called: 8
 15987 ;; This function calls:
 15988 ;;		Nothing
 15989 ;; This function is called by:
 15990 ;;		_CCP4_Initialize
 15991 ;; This function uses a non-reentrant model
 15992 ;;
 15993                           
 15994                           	psect	text79
 15995  006362                     __ptext79:
 15996                           	callstack 0
 15997  006362                     _CCP4_SetCallBack:
 15998                           	callstack 20
 15999  006362                     
 16000                           ;mcc_generated_files/ccp4.c: 76:     CCP4_CallBack = customCallBack;
 16001  006362  C014  F196         	movff	CCP4_SetCallBack@customCallBack,_CCP4_CallBack
 16002  006366  C015  F197         	movff	CCP4_SetCallBack@customCallBack+1,_CCP4_CallBack+1
 16003  00636A  0012               	return		;funcret
 16004  00636C                     __end_of_CCP4_SetCallBack:
 16005                           	callstack 0
 16006                           
 16007 ;; *************** function _CCP3_Initialize *****************
 16008 ;; Defined at:
 16009 ;;		line 75 in file "mcc_generated_files/ccp3.c"
 16010 ;; Parameters:    Size  Location     Type
 16011 ;;		None
 16012 ;; Auto vars:     Size  Location     Type
 16013 ;;		None
 16014 ;; Return value:  Size  Location     Type
 16015 ;;                  1    wreg      void 
 16016 ;; Registers used:
 16017 ;;		wreg, status,2, status,0, cstack
 16018 ;; Tracked objects:
 16019 ;;		On entry : 0/0
 16020 ;;		On exit  : 0/0
 16021 ;;		Unchanged: 0/0
 16022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16026 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16027 ;;Total ram usage:        0 bytes
 16028 ;; Hardware stack levels used: 1
 16029 ;; Hardware stack levels required when called: 9
 16030 ;; This function calls:
 16031 ;;		_CCP3_SetCallBack
 16032 ;; This function is called by:
 16033 ;;		_SYSTEM_Initialize
 16034 ;; This function uses a non-reentrant model
 16035 ;;
 16036                           
 16037                           	psect	text80
 16038  006068                     __ptext80:
 16039                           	callstack 0
 16040  006068                     _CCP3_Initialize:
 16041                           	callstack 20
 16042  006068                     
 16043                           ;mcc_generated_files/ccp3.c: 80:  CCP3CON = 0x83;
 16044  006068  0E83               	movlw	131
 16045  00606A  6E76               	movwf	118,c	;volatile
 16046                           
 16047                           ;mcc_generated_files/ccp3.c: 83:  CCP3CAP = 0x00;
 16048  00606C  0E00               	movlw	0
 16049  00606E  6E77               	movwf	119,c	;volatile
 16050                           
 16051                           ;mcc_generated_files/ccp3.c: 86:  CCPR3H = 0x00;
 16052  006070  0E00               	movlw	0
 16053  006072  6E75               	movwf	117,c	;volatile
 16054                           
 16055                           ;mcc_generated_files/ccp3.c: 89:  CCPR3L = 0x00;
 16056  006074  0E00               	movlw	0
 16057  006076  6E74               	movwf	116,c	;volatile
 16058  006078                     
 16059                           ;mcc_generated_files/ccp3.c: 92:     CCP3_SetCallBack(CCP3_DefaultCallBack);
 16060  006078  0E00               	movlw	low _CCP3_DefaultCallBack
 16061  00607A  6E14               	movwf	CCP3_SetCallBack@customCallBack^0,c
 16062  00607C  0E5E               	movlw	high _CCP3_DefaultCallBack
 16063  00607E  6E15               	movwf	(CCP3_SetCallBack@customCallBack+1)^0,c
 16064  006080  ECB6  F031         	call	_CCP3_SetCallBack	;wreg free
 16065  006084                     
 16066                           ;mcc_generated_files/ccp3.c: 95:  CCPTMRS0bits.C3TSEL = 0x2;
 16067  006084  013F               	movlb	63	; () banked
 16068  006086  515E               	movf	94,w,b	;volatile
 16069  006088  0BCF               	andlw	-49
 16070  00608A  0920               	iorlw	32
 16071  00608C  6F5E               	movwf	94,b	;volatile
 16072  00608E                     
 16073                           ; BSR set to: 63
 16074                           ;mcc_generated_files/ccp3.c: 98:     PIR9bits.CCP3IF = 0;
 16075  00608E  0139               	movlb	57	; () banked
 16076  006090  93A9               	bcf	169,1,b	;volatile
 16077  006092                     
 16078                           ; BSR set to: 57
 16079                           ;mcc_generated_files/ccp3.c: 101:     PIE9bits.CCP3IE = 1;
 16080  006092  8399               	bsf	153,1,b	;volatile
 16081  006094                     
 16082                           ; BSR set to: 57
 16083  006094  0012               	return		;funcret
 16084  006096                     __end_of_CCP3_Initialize:
 16085                           	callstack 0
 16086                           
 16087 ;; *************** function _CCP3_SetCallBack *****************
 16088 ;; Defined at:
 16089 ;;		line 119 in file "mcc_generated_files/ccp3.c"
 16090 ;; Parameters:    Size  Location     Type
 16091 ;;  customCallBa    2   19[COMRAM] PTR FTN(unsigned short ,
 16092 ;;		 -> CCP3_DefaultCallBack(1), 
 16093 ;; Auto vars:     Size  Location     Type
 16094 ;;		None
 16095 ;; Return value:  Size  Location     Type
 16096 ;;                  1    wreg      void 
 16097 ;; Registers used:
 16098 ;;		wreg, status,2, status,0
 16099 ;; Tracked objects:
 16100 ;;		On entry : 0/0
 16101 ;;		On exit  : 0/0
 16102 ;;		Unchanged: 0/0
 16103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16104 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16107 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16108 ;;Total ram usage:        2 bytes
 16109 ;; Hardware stack levels used: 1
 16110 ;; Hardware stack levels required when called: 8
 16111 ;; This function calls:
 16112 ;;		Nothing
 16113 ;; This function is called by:
 16114 ;;		_CCP3_Initialize
 16115 ;; This function uses a non-reentrant model
 16116 ;;
 16117                           
 16118                           	psect	text81
 16119  00636C                     __ptext81:
 16120                           	callstack 0
 16121  00636C                     _CCP3_SetCallBack:
 16122                           	callstack 20
 16123  00636C                     
 16124                           ;mcc_generated_files/ccp3.c: 120:     CCP3_CallBack = customCallBack;
 16125  00636C  C014  F198         	movff	CCP3_SetCallBack@customCallBack,_CCP3_CallBack
 16126  006370  C015  F199         	movff	CCP3_SetCallBack@customCallBack+1,_CCP3_CallBack+1
 16127  006374  0012               	return		;funcret
 16128  006376                     __end_of_CCP3_SetCallBack:
 16129                           	callstack 0
 16130                           
 16131 ;; *************** function _ADCC_Initialize *****************
 16132 ;; Defined at:
 16133 ;;		line 62 in file "mcc_generated_files/adcc.c"
 16134 ;; Parameters:    Size  Location     Type
 16135 ;;		None
 16136 ;; Auto vars:     Size  Location     Type
 16137 ;;		None
 16138 ;; Return value:  Size  Location     Type
 16139 ;;                  1    wreg      void 
 16140 ;; Registers used:
 16141 ;;		wreg, status,2
 16142 ;; Tracked objects:
 16143 ;;		On entry : 0/0
 16144 ;;		On exit  : 0/0
 16145 ;;		Unchanged: 0/0
 16146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16150 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16151 ;;Total ram usage:        0 bytes
 16152 ;; Hardware stack levels used: 1
 16153 ;; Hardware stack levels required when called: 8
 16154 ;; This function calls:
 16155 ;;		Nothing
 16156 ;; This function is called by:
 16157 ;;		_SYSTEM_Initialize
 16158 ;; This function uses a non-reentrant model
 16159 ;;
 16160                           
 16161                           	psect	text82
 16162  005946                     __ptext82:
 16163                           	callstack 0
 16164  005946                     _ADCC_Initialize:
 16165                           	callstack 21
 16166  005946                     
 16167                           ;mcc_generated_files/adcc.c: 66:     ADLTHL = 0x00;
 16168  005946  0E00               	movlw	0
 16169  005948  013E               	movlb	62	; () banked
 16170  00594A  6FDE               	movwf	222,b	;volatile
 16171                           
 16172                           ;mcc_generated_files/adcc.c: 68:     ADLTHH = 0x00;
 16173  00594C  0E00               	movlw	0
 16174  00594E  6FDF               	movwf	223,b	;volatile
 16175                           
 16176                           ;mcc_generated_files/adcc.c: 70:     ADUTHL = 0x00;
 16177  005950  0E00               	movlw	0
 16178  005952  6FE0               	movwf	224,b	;volatile
 16179                           
 16180                           ;mcc_generated_files/adcc.c: 72:     ADUTHH = 0x00;
 16181  005954  0E00               	movlw	0
 16182  005956  6FE1               	movwf	225,b	;volatile
 16183                           
 16184                           ;mcc_generated_files/adcc.c: 74:     ADSTPTL = 0x00;
 16185  005958  0E00               	movlw	0
 16186  00595A  6FE4               	movwf	228,b	;volatile
 16187                           
 16188                           ;mcc_generated_files/adcc.c: 76:     ADSTPTH = 0x00;
 16189  00595C  0E00               	movlw	0
 16190  00595E  6FE5               	movwf	229,b	;volatile
 16191                           
 16192                           ;mcc_generated_files/adcc.c: 78:     ADACCU = 0x00;
 16193  005960  0E00               	movlw	0
 16194  005962  6FEA               	movwf	234,b	;volatile
 16195                           
 16196                           ;mcc_generated_files/adcc.c: 80:     ADRPT = 0x00;
 16197  005964  0E00               	movlw	0
 16198  005966  6FEC               	movwf	236,b	;volatile
 16199                           
 16200                           ;mcc_generated_files/adcc.c: 82:     ADPCH = 0x00;
 16201  005968  0E00               	movlw	0
 16202  00596A  6FF1               	movwf	241,b	;volatile
 16203                           
 16204                           ;mcc_generated_files/adcc.c: 84:     ADACQL = 0x58;
 16205  00596C  0E58               	movlw	88
 16206  00596E  6FF3               	movwf	243,b	;volatile
 16207                           
 16208                           ;mcc_generated_files/adcc.c: 86:     ADACQH = 0x02;
 16209  005970  0E02               	movlw	2
 16210  005972  6FF4               	movwf	244,b	;volatile
 16211                           
 16212                           ;mcc_generated_files/adcc.c: 88:     ADCAP = 0x00;
 16213  005974  0E00               	movlw	0
 16214  005976  6FF5               	movwf	245,b	;volatile
 16215                           
 16216                           ;mcc_generated_files/adcc.c: 90:     ADPREL = 0x00;
 16217  005978  0E00               	movlw	0
 16218  00597A  6FF6               	movwf	246,b	;volatile
 16219                           
 16220                           ;mcc_generated_files/adcc.c: 92:     ADPREH = 0x00;
 16221  00597C  0E00               	movlw	0
 16222  00597E  6FF7               	movwf	247,b	;volatile
 16223                           
 16224                           ;mcc_generated_files/adcc.c: 94:     ADCON1 = 0x00;
 16225  005980  0E00               	movlw	0
 16226  005982  6FF9               	movwf	249,b	;volatile
 16227                           
 16228                           ;mcc_generated_files/adcc.c: 96:     ADCON2 = 0x00;
 16229  005984  0E00               	movlw	0
 16230  005986  6FFA               	movwf	250,b	;volatile
 16231                           
 16232                           ;mcc_generated_files/adcc.c: 98:     ADCON3 = 0x00;
 16233  005988  0E00               	movlw	0
 16234  00598A  6FFB               	movwf	251,b	;volatile
 16235                           
 16236                           ;mcc_generated_files/adcc.c: 100:     ADSTAT = 0x00;
 16237  00598C  0E00               	movlw	0
 16238  00598E  6FFC               	movwf	252,b	;volatile
 16239                           
 16240                           ;mcc_generated_files/adcc.c: 102:     ADREF = 0x00;
 16241  005990  0E00               	movlw	0
 16242  005992  6FFD               	movwf	253,b	;volatile
 16243                           
 16244                           ;mcc_generated_files/adcc.c: 104:     ADACT = 0x00;
 16245  005994  0E00               	movlw	0
 16246  005996  6FFE               	movwf	254,b	;volatile
 16247                           
 16248                           ;mcc_generated_files/adcc.c: 106:     ADCLK = 0x1F;
 16249  005998  0E1F               	movlw	31
 16250  00599A  6FFF               	movwf	255,b	;volatile
 16251                           
 16252                           ;mcc_generated_files/adcc.c: 108:     ADCON0 = 0x84;
 16253  00599C  0E84               	movlw	132
 16254  00599E  6FF8               	movwf	248,b	;volatile
 16255  0059A0                     
 16256                           ; BSR set to: 62
 16257  0059A0  0012               	return		;funcret
 16258  0059A2                     __end_of_ADCC_Initialize:
 16259                           	callstack 0
 16260                           
 16261 ;; *************** function _UART1_tx_vect_isr *****************
 16262 ;; Defined at:
 16263 ;;		line 235 in file "mcc_generated_files/uart1.c"
 16264 ;; Parameters:    Size  Location     Type
 16265 ;;		None
 16266 ;; Auto vars:     Size  Location     Type
 16267 ;;		None
 16268 ;; Return value:  Size  Location     Type
 16269 ;;                  1    wreg      void 
 16270 ;; Registers used:
 16271 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 16272 ;; Tracked objects:
 16273 ;;		On entry : 0/0
 16274 ;;		On exit  : 0/0
 16275 ;;		Unchanged: 0/0
 16276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16279 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16280 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16281 ;;Total ram usage:        1 bytes
 16282 ;; Hardware stack levels used: 1
 16283 ;; Hardware stack levels required when called: 5
 16284 ;; This function calls:
 16285 ;;		Absolute function
 16286 ;;		_UART1_Transmit_ISR
 16287 ;; This function is called by:
 16288 ;;		Interrupt level 1
 16289 ;; This function uses a non-reentrant model
 16290 ;;
 16291                           
 16292                           	psect	text83
 16293  005CAC                     __ptext83:
 16294                           	callstack 0
 16295  005CAC                     _UART1_tx_vect_isr:
 16296                           	callstack 13
 16297                           
 16298                           ; BSR set to: 62
 16299                           ;incstack = 0
 16300  005CAC  006F FF60  F011    	movff	status,??_UART1_tx_vect_isr
 16301  005CB2                     
 16302                           ;mcc_generated_files/uart1.c: 237:     if(UART1_TxInterruptHandler)
 16303  005CB2  0101               	movlb	1	; () banked
 16304  005CB4  51A0               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 16305  005CB6  11A1               	iorwf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 16306  005CB8  B4D8               	btfsc	status,2,c
 16307  005CBA  EF61  F02E         	goto	i1u743_21
 16308  005CBE  EF63  F02E         	goto	i1u743_20
 16309  005CC2                     i1u743_21:
 16310  005CC2  EF6F  F02E         	goto	i1l324
 16311  005CC6                     i1u743_20:
 16312  005CC6                     
 16313                           ; BSR set to: 1
 16314                           ;mcc_generated_files/uart1.c: 238:     {;mcc_generated_files/uart1.c: 239:         UART1
      +                          _TxInterruptHandler();
 16315  005CC6  D802               	call	i1u744_28
 16316  005CC8  EF6F  F02E         	goto	i1u744_29
 16317  005CCC                     i1u744_28:
 16318  005CCC  0005               	push	
 16319  005CCE  6EFA               	movwf	pclath,c
 16320  005CD0  51A0               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 16321  005CD2  6EFD               	movwf	tosl,c
 16322  005CD4  51A1               	movf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 16323  005CD6  6EFE               	movwf	tosh,c
 16324  005CD8  6AFF               	clrf	tosu,c
 16325  005CDA  50FA               	movf	pclath,w,c
 16326  005CDC  0012               	return		;indir
 16327  005CDE                     i1u744_29:
 16328  005CDE                     i1l324:
 16329  005CDE  0060  F047  FFD8   	movff	??_UART1_tx_vect_isr,status
 16330  005CE4  0011               	retfie		f
 16331  005CE6                     __end_of_UART1_tx_vect_isr:
 16332                           	callstack 0
 16333                           
 16334 ;; *************** function _UART1_Transmit_ISR *****************
 16335 ;; Defined at:
 16336 ;;		line 253 in file "mcc_generated_files/uart1.c"
 16337 ;; Parameters:    Size  Location     Type
 16338 ;;		None
 16339 ;; Auto vars:     Size  Location     Type
 16340 ;;		None
 16341 ;; Return value:  Size  Location     Type
 16342 ;;                  1    wreg      void 
 16343 ;; Registers used:
 16344 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16345 ;; Tracked objects:
 16346 ;;		On entry : 0/0
 16347 ;;		On exit  : 0/0
 16348 ;;		Unchanged: 0/0
 16349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16353 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16354 ;;Total ram usage:        0 bytes
 16355 ;; Hardware stack levels used: 1
 16356 ;; Hardware stack levels required when called: 4
 16357 ;; This function calls:
 16358 ;;		Nothing
 16359 ;; This function is called by:
 16360 ;;		_UART1_Initialize
 16361 ;;		_UART1_tx_vect_isr
 16362 ;; This function uses a non-reentrant model
 16363 ;;
 16364                           
 16365                           	psect	text84
 16366  005BAE                     __ptext84:
 16367                           	callstack 0
 16368  005BAE                     _UART1_Transmit_ISR:
 16369                           	callstack 13
 16370  005BAE                     
 16371                           ;mcc_generated_files/uart1.c: 256:     if(sizeof(uart1TxBuffer) > uart1TxBufferRemaining
      +                          )
 16372  005BAE  0E08               	movlw	8
 16373  005BB0  604C               	cpfslt	_uart1TxBufferRemaining^0,c	;volatile
 16374  005BB2  EFDD  F02D         	goto	i1u724_21
 16375  005BB6  EFDF  F02D         	goto	i1u724_20
 16376  005BBA                     i1u724_21:
 16377  005BBA  EFF6  F02D         	goto	i1l333
 16378  005BBE                     i1u724_20:
 16379  005BBE                     
 16380                           ;mcc_generated_files/uart1.c: 257:     {;mcc_generated_files/uart1.c: 258:         U1TXB
      +                           = uart1TxBuffer[uart1TxTail++];
 16381  005BBE  0E10               	movlw	low _uart1TxBuffer
 16382  005BC0  2446               	addwf	_uart1TxTail^0,w,c	;volatile
 16383  005BC2  6ED9               	movwf	fsr2l,c
 16384  005BC4  6ADA               	clrf	fsr2h,c
 16385  005BC6  0E01               	movlw	high _uart1TxBuffer
 16386  005BC8  22DA               	addwfc	fsr2h,f,c
 16387  005BCA  50DF               	movf	indf2,w,c
 16388  005BCC  013D               	movlb	61	; () banked
 16389  005BCE  6FEA               	movwf	234,b	;volatile
 16390  005BD0                     
 16391                           ; BSR set to: 61
 16392  005BD0  2A46               	incf	_uart1TxTail^0,f,c	;volatile
 16393  005BD2                     
 16394                           ; BSR set to: 61
 16395                           ;mcc_generated_files/uart1.c: 259:        if(sizeof(uart1TxBuffer) <= uart1TxTail)
 16396  005BD2  0E07               	movlw	7
 16397  005BD4  6446               	cpfsgt	_uart1TxTail^0,c	;volatile
 16398  005BD6  EFEF  F02D         	goto	i1u725_21
 16399  005BDA  EFF1  F02D         	goto	i1u725_20
 16400  005BDE                     i1u725_21:
 16401  005BDE  EFF3  F02D         	goto	i1l7290
 16402  005BE2                     i1u725_20:
 16403  005BE2                     
 16404                           ; BSR set to: 61
 16405                           ;mcc_generated_files/uart1.c: 260:         {;mcc_generated_files/uart1.c: 261:          
      +                             uart1TxTail = 0;
 16406  005BE2  0E00               	movlw	0
 16407  005BE4  6E46               	movwf	_uart1TxTail^0,c	;volatile
 16408  005BE6                     i1l7290:
 16409                           
 16410                           ; BSR set to: 61
 16411                           ;mcc_generated_files/uart1.c: 263:         uart1TxBufferRemaining++;
 16412  005BE6  2A4C               	incf	_uart1TxBufferRemaining^0,f,c	;volatile
 16413                           
 16414                           ;mcc_generated_files/uart1.c: 264:     }
 16415  005BE8  EFF8  F02D         	goto	i1l336
 16416  005BEC                     i1l333:
 16417                           
 16418                           ;mcc_generated_files/uart1.c: 266:     {;mcc_generated_files/uart1.c: 267:         PIE3b
      +                          its.U1TXIE = 0;
 16419  005BEC  0139               	movlb	57	; () banked
 16420  005BEE  9993               	bcf	147,4,b	;volatile
 16421  005BF0                     i1l336:
 16422  005BF0  0012               	return		;funcret
 16423  005BF2                     __end_of_UART1_Transmit_ISR:
 16424                           	callstack 0
 16425                           
 16426 ;; *************** function _UART1_rx_vect_isr *****************
 16427 ;; Defined at:
 16428 ;;		line 243 in file "mcc_generated_files/uart1.c"
 16429 ;; Parameters:    Size  Location     Type
 16430 ;;		None
 16431 ;; Auto vars:     Size  Location     Type
 16432 ;;		None
 16433 ;; Return value:  Size  Location     Type
 16434 ;;                  1    wreg      void 
 16435 ;; Registers used:
 16436 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 16437 ;; Tracked objects:
 16438 ;;		On entry : 0/0
 16439 ;;		On exit  : 0/0
 16440 ;;		Unchanged: 0/0
 16441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16444 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16445 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16446 ;;Total ram usage:        1 bytes
 16447 ;; Hardware stack levels used: 1
 16448 ;; Hardware stack levels required when called: 7
 16449 ;; This function calls:
 16450 ;;		Absolute function
 16451 ;;		_UART1_Receive_ISR
 16452 ;; This function is called by:
 16453 ;;		Interrupt level 1
 16454 ;; This function uses a non-reentrant model
 16455 ;;
 16456                           
 16457                           	psect	text85
 16458  005CE8                     __ptext85:
 16459                           	callstack 0
 16460  005CE8                     _UART1_rx_vect_isr:
 16461                           	callstack 11
 16462                           
 16463                           ;incstack = 0
 16464  005CE8  006F FF60  F012    	movff	status,??_UART1_rx_vect_isr
 16465  005CEE                     
 16466                           ;mcc_generated_files/uart1.c: 245:     if(UART1_RxInterruptHandler)
 16467  005CEE  0101               	movlb	1	; () banked
 16468  005CF0  51A2               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 16469  005CF2  11A3               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 16470  005CF4  B4D8               	btfsc	status,2,c
 16471  005CF6  EF7F  F02E         	goto	i1u745_21
 16472  005CFA  EF81  F02E         	goto	i1u745_20
 16473  005CFE                     i1u745_21:
 16474  005CFE  EF8D  F02E         	goto	i1l330
 16475  005D02                     i1u745_20:
 16476  005D02                     
 16477                           ; BSR set to: 1
 16478                           ;mcc_generated_files/uart1.c: 246:     {;mcc_generated_files/uart1.c: 247:         UART1
      +                          _RxInterruptHandler();
 16479  005D02  D802               	call	i1u746_28
 16480  005D04  EF8D  F02E         	goto	i1u746_29
 16481  005D08                     i1u746_28:
 16482  005D08  0005               	push	
 16483  005D0A  6EFA               	movwf	pclath,c
 16484  005D0C  51A2               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 16485  005D0E  6EFD               	movwf	tosl,c
 16486  005D10  51A3               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 16487  005D12  6EFE               	movwf	tosh,c
 16488  005D14  6AFF               	clrf	tosu,c
 16489  005D16  50FA               	movf	pclath,w,c
 16490  005D18  0012               	return		;indir
 16491  005D1A                     i1u746_29:
 16492  005D1A                     i1l330:
 16493  005D1A  0060  F04B  FFD8   	movff	??_UART1_rx_vect_isr,status
 16494  005D20  0011               	retfie		f
 16495  005D22                     __end_of_UART1_rx_vect_isr:
 16496                           	callstack 0
 16497                           
 16498 ;; *************** function _UART1_Receive_ISR *****************
 16499 ;; Defined at:
 16500 ;;		line 273 in file "mcc_generated_files/uart1.c"
 16501 ;; Parameters:    Size  Location     Type
 16502 ;;		None
 16503 ;; Auto vars:     Size  Location     Type
 16504 ;;		None
 16505 ;; Return value:  Size  Location     Type
 16506 ;;                  1    wreg      void 
 16507 ;; Registers used:
 16508 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 16509 ;; Tracked objects:
 16510 ;;		On entry : 0/0
 16511 ;;		On exit  : 0/0
 16512 ;;		Unchanged: 0/0
 16513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16517 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16518 ;;Total ram usage:        0 bytes
 16519 ;; Hardware stack levels used: 1
 16520 ;; Hardware stack levels required when called: 6
 16521 ;; This function calls:
 16522 ;;		Absolute function
 16523 ;;		_UART1_DefaultErrorHandler
 16524 ;;		_UART1_DefaultFramingErrorHandler
 16525 ;;		_UART1_DefaultOverrunErrorHandler
 16526 ;;		_UART1_RxDataHandler
 16527 ;; This function is called by:
 16528 ;;		_UART1_Initialize
 16529 ;;		_UART1_rx_vect_isr
 16530 ;; This function uses a non-reentrant model
 16531 ;;
 16532                           
 16533                           	psect	text86
 16534  005222                     __ptext86:
 16535                           	callstack 0
 16536  005222                     _UART1_Receive_ISR:
 16537                           	callstack 11
 16538  005222                     
 16539                           ;mcc_generated_files/uart1.c: 276:     uart1RxStatusBuffer[uart1RxHead].status = 0;
 16540  005222  0E00               	movlw	low _uart1RxStatusBuffer
 16541  005224  2445               	addwf	_uart1RxHead^0,w,c	;volatile
 16542  005226  6ED9               	movwf	fsr2l,c
 16543  005228  6ADA               	clrf	fsr2h,c
 16544  00522A  0E01               	movlw	high _uart1RxStatusBuffer
 16545  00522C  22DA               	addwfc	fsr2h,f,c
 16546  00522E  0E00               	movlw	0
 16547  005230  6EDF               	movwf	indf2,c
 16548  005232                     
 16549                           ;mcc_generated_files/uart1.c: 278:     if(U1ERRIRbits.FERIF){
 16550  005232  013D               	movlb	61	; () banked
 16551  005234  A7F9               	btfss	249,3,b	;volatile
 16552  005236  EF1F  F029         	goto	i1u726_21
 16553  00523A  EF21  F029         	goto	i1u726_20
 16554  00523E                     i1u726_21:
 16555  00523E  EF35  F029         	goto	i1l7300
 16556  005242                     i1u726_20:
 16557  005242                     
 16558                           ; BSR set to: 61
 16559                           ;mcc_generated_files/uart1.c: 279:         uart1RxStatusBuffer[uart1RxHead].ferr = 1;
 16560  005242  0E00               	movlw	low _uart1RxStatusBuffer
 16561  005244  2445               	addwf	_uart1RxHead^0,w,c	;volatile
 16562  005246  6ED9               	movwf	fsr2l,c
 16563  005248  6ADA               	clrf	fsr2h,c
 16564  00524A  0E01               	movlw	high _uart1RxStatusBuffer
 16565  00524C  22DA               	addwfc	fsr2h,f,c
 16566  00524E  0101               	movlb	1	; () banked
 16567  005250  82DF               	bsf	indf2,1,c
 16568  005252                     
 16569                           ; BSR set to: 1
 16570                           ;mcc_generated_files/uart1.c: 280:         UART1_FramingErrorHandler();
 16571  005252  D802               	call	i1u727_28
 16572  005254  EF35  F029         	goto	i1u727_29
 16573  005258                     i1u727_28:
 16574  005258  0005               	push	
 16575  00525A  6EFA               	movwf	pclath,c
 16576  00525C  519E               	movf	_UART1_FramingErrorHandler& (0+255),w,b
 16577  00525E  6EFD               	movwf	tosl,c
 16578  005260  519F               	movf	(_UART1_FramingErrorHandler+1)& (0+255),w,b
 16579  005262  6EFE               	movwf	tosh,c
 16580  005264  6AFF               	clrf	tosu,c
 16581  005266  50FA               	movf	pclath,w,c
 16582  005268  0012               	return		;indir
 16583  00526A                     i1u727_29:
 16584  00526A                     i1l7300:
 16585                           
 16586                           ;mcc_generated_files/uart1.c: 283:     if(U1ERRIRbits.RXFOIF){
 16587  00526A  013D               	movlb	61	; () banked
 16588  00526C  A3F9               	btfss	249,1,b	;volatile
 16589  00526E  EF3B  F029         	goto	i1u728_21
 16590  005272  EF3D  F029         	goto	i1u728_20
 16591  005276                     i1u728_21:
 16592  005276  EF51  F029         	goto	i1l7306
 16593  00527A                     i1u728_20:
 16594  00527A                     
 16595                           ; BSR set to: 61
 16596                           ;mcc_generated_files/uart1.c: 284:         uart1RxStatusBuffer[uart1RxHead].oerr = 1;
 16597  00527A  0E00               	movlw	low _uart1RxStatusBuffer
 16598  00527C  2445               	addwf	_uart1RxHead^0,w,c	;volatile
 16599  00527E  6ED9               	movwf	fsr2l,c
 16600  005280  6ADA               	clrf	fsr2h,c
 16601  005282  0E01               	movlw	high _uart1RxStatusBuffer
 16602  005284  22DA               	addwfc	fsr2h,f,c
 16603  005286  0101               	movlb	1	; () banked
 16604  005288  84DF               	bsf	indf2,2,c
 16605  00528A                     
 16606                           ; BSR set to: 1
 16607                           ;mcc_generated_files/uart1.c: 285:         UART1_OverrunErrorHandler();
 16608  00528A  D802               	call	i1u729_28
 16609  00528C  EF51  F029         	goto	i1u729_29
 16610  005290                     i1u729_28:
 16611  005290  0005               	push	
 16612  005292  6EFA               	movwf	pclath,c
 16613  005294  519C               	movf	_UART1_OverrunErrorHandler& (0+255),w,b
 16614  005296  6EFD               	movwf	tosl,c
 16615  005298  519D               	movf	(_UART1_OverrunErrorHandler+1)& (0+255),w,b
 16616  00529A  6EFE               	movwf	tosh,c
 16617  00529C  6AFF               	clrf	tosu,c
 16618  00529E  50FA               	movf	pclath,w,c
 16619  0052A0  0012               	return		;indir
 16620  0052A2                     i1u729_29:
 16621  0052A2                     i1l7306:
 16622                           
 16623                           ;mcc_generated_files/uart1.c: 288:     if(uart1RxStatusBuffer[uart1RxHead].status){
 16624  0052A2  0E00               	movlw	low _uart1RxStatusBuffer
 16625  0052A4  2445               	addwf	_uart1RxHead^0,w,c	;volatile
 16626  0052A6  6ED9               	movwf	fsr2l,c
 16627  0052A8  6ADA               	clrf	fsr2h,c
 16628  0052AA  0E01               	movlw	high _uart1RxStatusBuffer
 16629  0052AC  22DA               	addwfc	fsr2h,f,c
 16630  0052AE  50DF               	movf	indf2,w,c
 16631  0052B0  B4D8               	btfsc	status,2,c
 16632  0052B2  EF5D  F029         	goto	i1u730_21
 16633  0052B6  EF5F  F029         	goto	i1u730_20
 16634  0052BA                     i1u730_21:
 16635  0052BA  EF6E  F029         	goto	i1l7310
 16636  0052BE                     i1u730_20:
 16637  0052BE                     
 16638                           ;mcc_generated_files/uart1.c: 289:         UART1_ErrorHandler();
 16639  0052BE  D802               	call	i1u731_28
 16640  0052C0  EF6C  F029         	goto	i1u731_29
 16641  0052C4                     i1u731_28:
 16642  0052C4  0005               	push	
 16643  0052C6  6EFA               	movwf	pclath,c
 16644  0052C8  0101               	movlb	1	; () banked
 16645  0052CA  519A               	movf	_UART1_ErrorHandler& (0+255),w,b
 16646  0052CC  6EFD               	movwf	tosl,c
 16647  0052CE  519B               	movf	(_UART1_ErrorHandler+1)& (0+255),w,b
 16648  0052D0  6EFE               	movwf	tosh,c
 16649  0052D2  6AFF               	clrf	tosu,c
 16650  0052D4  50FA               	movf	pclath,w,c
 16651  0052D6  0012               	return		;indir
 16652  0052D8                     i1u731_29:
 16653                           
 16654                           ;mcc_generated_files/uart1.c: 290:     } else {
 16655  0052D8  EF70  F029         	goto	i1l343
 16656  0052DC                     i1l7310:
 16657                           
 16658                           ;mcc_generated_files/uart1.c: 291:         UART1_RxDataHandler();
 16659  0052DC  EC8E  F030         	call	_UART1_RxDataHandler	;wreg free
 16660  0052E0                     i1l343:
 16661  0052E0  0012               	return		;funcret
 16662  0052E2                     __end_of_UART1_Receive_ISR:
 16663                           	callstack 0
 16664                           
 16665 ;; *************** function _UART1_DefaultOverrunErrorHandler *****************
 16666 ;; Defined at:
 16667 ;;		line 309 in file "mcc_generated_files/uart1.c"
 16668 ;; Parameters:    Size  Location     Type
 16669 ;;		None
 16670 ;; Auto vars:     Size  Location     Type
 16671 ;;		None
 16672 ;; Return value:  Size  Location     Type
 16673 ;;                  1    wreg      void 
 16674 ;; Registers used:
 16675 ;;		None
 16676 ;; Tracked objects:
 16677 ;;		On entry : 0/0
 16678 ;;		On exit  : 0/0
 16679 ;;		Unchanged: 0/0
 16680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16684 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16685 ;;Total ram usage:        0 bytes
 16686 ;; Hardware stack levels used: 1
 16687 ;; Hardware stack levels required when called: 4
 16688 ;; This function calls:
 16689 ;;		Nothing
 16690 ;; This function is called by:
 16691 ;;		_UART1_Initialize
 16692 ;;		_UART1_Receive_ISR
 16693 ;; This function uses a non-reentrant model
 16694 ;;
 16695                           
 16696                           	psect	text87
 16697  006386                     __ptext87:
 16698                           	callstack 0
 16699  006386                     _UART1_DefaultOverrunErrorHandler:
 16700                           	callstack 12
 16701  006386  0012               	return		;funcret
 16702  006388                     __end_of_UART1_DefaultOverrunErrorHandler:
 16703                           	callstack 0
 16704                           
 16705 ;; *************** function _UART1_DefaultFramingErrorHandler *****************
 16706 ;; Defined at:
 16707 ;;		line 307 in file "mcc_generated_files/uart1.c"
 16708 ;; Parameters:    Size  Location     Type
 16709 ;;		None
 16710 ;; Auto vars:     Size  Location     Type
 16711 ;;		None
 16712 ;; Return value:  Size  Location     Type
 16713 ;;                  1    wreg      void 
 16714 ;; Registers used:
 16715 ;;		None
 16716 ;; Tracked objects:
 16717 ;;		On entry : 0/0
 16718 ;;		On exit  : 0/0
 16719 ;;		Unchanged: 0/0
 16720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16724 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16725 ;;Total ram usage:        0 bytes
 16726 ;; Hardware stack levels used: 1
 16727 ;; Hardware stack levels required when called: 4
 16728 ;; This function calls:
 16729 ;;		Nothing
 16730 ;; This function is called by:
 16731 ;;		_UART1_Initialize
 16732 ;;		_UART1_Receive_ISR
 16733 ;; This function uses a non-reentrant model
 16734 ;;
 16735                           
 16736                           	psect	text88
 16737  006388                     __ptext88:
 16738                           	callstack 0
 16739  006388                     _UART1_DefaultFramingErrorHandler:
 16740                           	callstack 12
 16741  006388  0012               	return		;funcret
 16742  00638A                     __end_of_UART1_DefaultFramingErrorHandler:
 16743                           	callstack 0
 16744                           
 16745 ;; *************** function _UART1_DefaultErrorHandler *****************
 16746 ;; Defined at:
 16747 ;;		line 311 in file "mcc_generated_files/uart1.c"
 16748 ;; Parameters:    Size  Location     Type
 16749 ;;		None
 16750 ;; Auto vars:     Size  Location     Type
 16751 ;;		None
 16752 ;; Return value:  Size  Location     Type
 16753 ;;                  1    wreg      void 
 16754 ;; Registers used:
 16755 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16756 ;; Tracked objects:
 16757 ;;		On entry : 0/0
 16758 ;;		On exit  : 0/0
 16759 ;;		Unchanged: 0/0
 16760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16764 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16765 ;;Total ram usage:        0 bytes
 16766 ;; Hardware stack levels used: 1
 16767 ;; Hardware stack levels required when called: 5
 16768 ;; This function calls:
 16769 ;;		_UART1_RxDataHandler
 16770 ;; This function is called by:
 16771 ;;		_UART1_Initialize
 16772 ;;		_UART1_Receive_ISR
 16773 ;; This function uses a non-reentrant model
 16774 ;;
 16775                           
 16776                           	psect	text89
 16777  006380                     __ptext89:
 16778                           	callstack 0
 16779  006380                     _UART1_DefaultErrorHandler:
 16780                           	callstack 11
 16781  006380                     
 16782                           ;mcc_generated_files/uart1.c: 312:     UART1_RxDataHandler();
 16783  006380  EC8E  F030         	call	_UART1_RxDataHandler	;wreg free
 16784  006384  0012               	return		;funcret
 16785  006386                     __end_of_UART1_DefaultErrorHandler:
 16786                           	callstack 0
 16787                           
 16788 ;; *************** function _UART1_RxDataHandler *****************
 16789 ;; Defined at:
 16790 ;;		line 297 in file "mcc_generated_files/uart1.c"
 16791 ;; Parameters:    Size  Location     Type
 16792 ;;		None
 16793 ;; Auto vars:     Size  Location     Type
 16794 ;;		None
 16795 ;; Return value:  Size  Location     Type
 16796 ;;                  1    wreg      void 
 16797 ;; Registers used:
 16798 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16799 ;; Tracked objects:
 16800 ;;		On entry : 0/0
 16801 ;;		On exit  : 0/0
 16802 ;;		Unchanged: 0/0
 16803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16807 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16808 ;;Total ram usage:        0 bytes
 16809 ;; Hardware stack levels used: 1
 16810 ;; Hardware stack levels required when called: 4
 16811 ;; This function calls:
 16812 ;;		Nothing
 16813 ;; This function is called by:
 16814 ;;		_UART1_Receive_ISR
 16815 ;;		_UART1_DefaultErrorHandler
 16816 ;; This function uses a non-reentrant model
 16817 ;;
 16818                           
 16819                           	psect	text90
 16820  00611C                     __ptext90:
 16821                           	callstack 0
 16822  00611C                     _UART1_RxDataHandler:
 16823                           	callstack 12
 16824  00611C                     
 16825                           ;mcc_generated_files/uart1.c: 299:     uart1RxBuffer[uart1RxHead++] = U1RXB;
 16826  00611C  0E08               	movlw	low _uart1RxBuffer
 16827  00611E  2445               	addwf	_uart1RxHead^0,w,c	;volatile
 16828  006120  6ED9               	movwf	fsr2l,c
 16829  006122  6ADA               	clrf	fsr2h,c
 16830  006124  0E01               	movlw	high _uart1RxBuffer
 16831  006126  22DA               	addwfc	fsr2h,f,c
 16832  006128  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 16833  00612E  2A45               	incf	_uart1RxHead^0,f,c	;volatile
 16834  006130                     
 16835                           ;mcc_generated_files/uart1.c: 300:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 16836  006130  0E07               	movlw	7
 16837  006132  6445               	cpfsgt	_uart1RxHead^0,c	;volatile
 16838  006134  EF9E  F030         	goto	i1u661_21
 16839  006138  EFA0  F030         	goto	i1u661_20
 16840  00613C                     i1u661_21:
 16841  00613C  EFA2  F030         	goto	i1l6694
 16842  006140                     i1u661_20:
 16843  006140                     
 16844                           ;mcc_generated_files/uart1.c: 301:     {;mcc_generated_files/uart1.c: 302:         uart1
      +                          RxHead = 0;
 16845  006140  0E00               	movlw	0
 16846  006142  6E45               	movwf	_uart1RxHead^0,c	;volatile
 16847  006144                     i1l6694:
 16848                           
 16849                           ;mcc_generated_files/uart1.c: 304:     uart1RxCount++;
 16850  006144  2A43               	incf	_uart1RxCount^0,f,c	;volatile
 16851  006146  0012               	return		;funcret
 16852  006148                     __end_of_UART1_RxDataHandler:
 16853                           	callstack 0
 16854                           
 16855 ;; *************** function _TMR4_ISR *****************
 16856 ;; Defined at:
 16857 ;;		line 166 in file "mcc_generated_files/tmr4.c"
 16858 ;; Parameters:    Size  Location     Type
 16859 ;;		None
 16860 ;; Auto vars:     Size  Location     Type
 16861 ;;		None
 16862 ;; Return value:  Size  Location     Type
 16863 ;;                  1    wreg      void 
 16864 ;; Registers used:
 16865 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 16866 ;; Tracked objects:
 16867 ;;		On entry : 0/0
 16868 ;;		On exit  : 0/0
 16869 ;;		Unchanged: 0/0
 16870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16873 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16874 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16875 ;;Total ram usage:        1 bytes
 16876 ;; Hardware stack levels used: 1
 16877 ;; Hardware stack levels required when called: 6
 16878 ;; This function calls:
 16879 ;;		_TMR4_CallBack
 16880 ;; This function is called by:
 16881 ;;		Interrupt level 1
 16882 ;; This function uses a non-reentrant model
 16883 ;;
 16884                           
 16885                           	psect	text91
 16886  005C34                     __ptext91:
 16887                           	callstack 0
 16888  005C34                     _TMR4_ISR:
 16889                           	callstack 12
 16890                           
 16891                           ;incstack = 0
 16892  005C34  006F FF60  F013    	movff	status,??_TMR4_ISR
 16893  005C3A                     
 16894                           ;mcc_generated_files/tmr4.c: 168:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr4.c: 171:     PIR7bits.TMR4IF = 0;
 16895  005C3A  0139               	movlb	57	; () banked
 16896  005C3C  91A7               	bcf	167,0,b	;volatile
 16897  005C3E                     
 16898                           ; BSR set to: 57
 16899                           ;mcc_generated_files/tmr4.c: 174:     if (++CountCallBack >= 10)
 16900  005C3E  0101               	movlb	1	; () banked
 16901  005C40  4B38               	infsnz	TMR4_ISR@CountCallBack& (0+255),f,b	;volatile
 16902  005C42  2B39               	incf	(TMR4_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 16903  005C44  5139               	movf	(TMR4_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 16904  005C46  E109               	bnz	i1u751_20
 16905  005C48  0E0A               	movlw	10
 16906  005C4A  5D38               	subwf	TMR4_ISR@CountCallBack& (0+255),w,b	;volatile
 16907  005C4C  A0D8               	btfss	status,0,c
 16908  005C4E  EF2B  F02E         	goto	i1u751_21
 16909  005C52  EF2D  F02E         	goto	i1u751_20
 16910  005C56                     i1u751_21:
 16911  005C56  EF34  F02E         	goto	i1l688
 16912  005C5A                     i1u751_20:
 16913  005C5A                     
 16914                           ; BSR set to: 1
 16915                           ;mcc_generated_files/tmr4.c: 175:     {;mcc_generated_files/tmr4.c: 177:         TMR4_Ca
      +                          llBack();
 16916  005C5A  EC4B  F030         	call	_TMR4_CallBack	;wreg free
 16917  005C5E                     
 16918                           ;mcc_generated_files/tmr4.c: 180:         CountCallBack = 0;
 16919  005C5E  0E00               	movlw	0
 16920  005C60  0101               	movlb	1	; () banked
 16921  005C62  6F39               	movwf	(TMR4_ISR@CountCallBack+1)& (0+255),b	;volatile
 16922  005C64  0E00               	movlw	0
 16923  005C66  6F38               	movwf	TMR4_ISR@CountCallBack& (0+255),b	;volatile
 16924  005C68                     i1l688:
 16925                           
 16926                           ; BSR set to: 1
 16927  005C68  0060  F04F  FFD8   	movff	??_TMR4_ISR,status
 16928  005C6E  0011               	retfie		f
 16929  005C70                     __end_of_TMR4_ISR:
 16930                           	callstack 0
 16931                           
 16932 ;; *************** function _TMR4_CallBack *****************
 16933 ;; Defined at:
 16934 ;;		line 184 in file "mcc_generated_files/tmr4.c"
 16935 ;; Parameters:    Size  Location     Type
 16936 ;;		None
 16937 ;; Auto vars:     Size  Location     Type
 16938 ;;		None
 16939 ;; Return value:  Size  Location     Type
 16940 ;;                  1    wreg      void 
 16941 ;; Registers used:
 16942 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 16943 ;; Tracked objects:
 16944 ;;		On entry : 0/0
 16945 ;;		On exit  : 0/0
 16946 ;;		Unchanged: 0/0
 16947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16951 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16952 ;;Total ram usage:        0 bytes
 16953 ;; Hardware stack levels used: 1
 16954 ;; Hardware stack levels required when called: 5
 16955 ;; This function calls:
 16956 ;;		Absolute function
 16957 ;;		_TMR4_10msISR
 16958 ;;		_TMR4_DefaultInterruptHandler
 16959 ;; This function is called by:
 16960 ;;		_TMR4_ISR
 16961 ;; This function uses a non-reentrant model
 16962 ;;
 16963                           
 16964                           	psect	text92
 16965  006096                     __ptext92:
 16966                           	callstack 0
 16967  006096                     _TMR4_CallBack:
 16968                           	callstack 12
 16969  006096                     
 16970                           ;mcc_generated_files/tmr4.c: 188:     if(TMR4_InterruptHandler)
 16971  006096  0101               	movlb	1	; () banked
 16972  006098  518E               	movf	_TMR4_InterruptHandler& (0+255),w,b
 16973  00609A  118F               	iorwf	(_TMR4_InterruptHandler+1)& (0+255),w,b
 16974  00609C  B4D8               	btfsc	status,2,c
 16975  00609E  EF53  F030         	goto	i1u735_21
 16976  0060A2  EF55  F030         	goto	i1u735_20
 16977  0060A6                     i1u735_21:
 16978  0060A6  EF61  F030         	goto	i1l692
 16979  0060AA                     i1u735_20:
 16980  0060AA                     
 16981                           ; BSR set to: 1
 16982                           ;mcc_generated_files/tmr4.c: 189:     {;mcc_generated_files/tmr4.c: 190:         TMR4_In
      +                          terruptHandler();
 16983  0060AA  D802               	call	i1u736_28
 16984  0060AC  EF61  F030         	goto	i1u736_29
 16985  0060B0                     i1u736_28:
 16986  0060B0  0005               	push	
 16987  0060B2  6EFA               	movwf	pclath,c
 16988  0060B4  518E               	movf	_TMR4_InterruptHandler& (0+255),w,b
 16989  0060B6  6EFD               	movwf	tosl,c
 16990  0060B8  518F               	movf	(_TMR4_InterruptHandler+1)& (0+255),w,b
 16991  0060BA  6EFE               	movwf	tosh,c
 16992  0060BC  6AFF               	clrf	tosu,c
 16993  0060BE  50FA               	movf	pclath,w,c
 16994  0060C0  0012               	return		;indir
 16995  0060C2                     i1u736_29:
 16996  0060C2                     i1l692:
 16997  0060C2  0012               	return		;funcret
 16998  0060C4                     __end_of_TMR4_CallBack:
 16999                           	callstack 0
 17000                           
 17001 ;; *************** function _TMR4_10msISR *****************
 17002 ;; Defined at:
 17003 ;;		line 68 in file "main.c"
 17004 ;; Parameters:    Size  Location     Type
 17005 ;;		None
 17006 ;; Auto vars:     Size  Location     Type
 17007 ;;		None
 17008 ;; Return value:  Size  Location     Type
 17009 ;;                  1    wreg      void 
 17010 ;; Registers used:
 17011 ;;		status,2, status,0
 17012 ;; Tracked objects:
 17013 ;;		On entry : 0/0
 17014 ;;		On exit  : 0/0
 17015 ;;		Unchanged: 0/0
 17016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17020 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17021 ;;Total ram usage:        0 bytes
 17022 ;; Hardware stack levels used: 1
 17023 ;; Hardware stack levels required when called: 4
 17024 ;; This function calls:
 17025 ;;		Nothing
 17026 ;; This function is called by:
 17027 ;;		_main
 17028 ;;		_TMR4_CallBack
 17029 ;; This function uses a non-reentrant model
 17030 ;;
 17031                           
 17032                           	psect	text93
 17033  006376                     __ptext93:
 17034                           	callstack 0
 17035  006376                     _TMR4_10msISR:
 17036                           	callstack 12
 17037  006376                     
 17038                           ;main.c: 69:     ++cycle10ms;
 17039  006376  0100               	movlb	0	; () banked
 17040  006378  2BFB               	incf	_cycle10ms& (0+255),f,b	;volatile
 17041                           
 17042                           ;main.c: 70:     ++roundTimeCount;
 17043  00637A  4BF3               	infsnz	_roundTimeCount& (0+255),f,b	;volatile
 17044  00637C  2BF4               	incf	(_roundTimeCount+1)& (0+255),f,b	;volatile
 17045  00637E                     
 17046                           ; BSR set to: 0
 17047  00637E  0012               	return		;funcret
 17048  006380                     __end_of_TMR4_10msISR:
 17049                           	callstack 0
 17050                           
 17051 ;; *************** function _TMR4_DefaultInterruptHandler *****************
 17052 ;; Defined at:
 17053 ;;		line 198 in file "mcc_generated_files/tmr4.c"
 17054 ;; Parameters:    Size  Location     Type
 17055 ;;		None
 17056 ;; Auto vars:     Size  Location     Type
 17057 ;;		None
 17058 ;; Return value:  Size  Location     Type
 17059 ;;                  1    wreg      void 
 17060 ;; Registers used:
 17061 ;;		None
 17062 ;; Tracked objects:
 17063 ;;		On entry : 0/0
 17064 ;;		On exit  : 0/0
 17065 ;;		Unchanged: 0/0
 17066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17070 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17071 ;;Total ram usage:        0 bytes
 17072 ;; Hardware stack levels used: 1
 17073 ;; Hardware stack levels required when called: 4
 17074 ;; This function calls:
 17075 ;;		Nothing
 17076 ;; This function is called by:
 17077 ;;		_TMR4_Initialize
 17078 ;;		_TMR4_CallBack
 17079 ;; This function uses a non-reentrant model
 17080 ;;
 17081                           
 17082                           	psect	text94
 17083  00638A                     __ptext94:
 17084                           	callstack 0
 17085  00638A                     _TMR4_DefaultInterruptHandler:
 17086                           	callstack 12
 17087  00638A  0012               	return		;funcret
 17088  00638C                     __end_of_TMR4_DefaultInterruptHandler:
 17089                           	callstack 0
 17090                           
 17091 ;; *************** function _Default_ISR *****************
 17092 ;; Defined at:
 17093 ;;		line 83 in file "mcc_generated_files/interrupt_manager.c"
 17094 ;; Parameters:    Size  Location     Type
 17095 ;;		None
 17096 ;; Auto vars:     Size  Location     Type
 17097 ;;		None
 17098 ;; Return value:  Size  Location     Type
 17099 ;;                  1    wreg      void 
 17100 ;; Registers used:
 17101 ;;		None
 17102 ;; Tracked objects:
 17103 ;;		On entry : 0/0
 17104 ;;		On exit  : 0/0
 17105 ;;		Unchanged: 0/0
 17106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17108 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17110 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17111 ;;Total ram usage:        0 bytes
 17112 ;; Hardware stack levels used: 1
 17113 ;; This function calls:
 17114 ;;		Nothing
 17115 ;; This function is called by:
 17116 ;;		Interrupt level 2
 17117 ;; This function uses a non-reentrant model
 17118 ;;
 17119                           
 17120                           	psect	text95
 17121  00638C                     __ptext95:
 17122                           	callstack 0
 17123  00638C                     _Default_ISR:
 17124                           	callstack 14
 17125  00638C  0011               	retfie		f
 17126  00638E                     __end_of_Default_ISR:
 17127                           	callstack 0
 17128                           
 17129 ;; *************** function _CCP3_CaptureISR *****************
 17130 ;; Defined at:
 17131 ;;		line 104 in file "mcc_generated_files/ccp3.c"
 17132 ;; Parameters:    Size  Location     Type
 17133 ;;		None
 17134 ;; Auto vars:     Size  Location     Type
 17135 ;;  module          2    2[COMRAM] struct CCPR3Reg_tag
 17136 ;; Return value:  Size  Location     Type
 17137 ;;                  1    wreg      void 
 17138 ;; Registers used:
 17139 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 17140 ;; Tracked objects:
 17141 ;;		On entry : 0/0
 17142 ;;		On exit  : 0/0
 17143 ;;		Unchanged: 0/0
 17144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17146 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17148 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17149 ;;Total ram usage:        2 bytes
 17150 ;; Hardware stack levels used: 1
 17151 ;; Hardware stack levels required when called: 1
 17152 ;; This function calls:
 17153 ;;		Absolute function
 17154 ;;		_CCP3_DefaultCallBack
 17155 ;; This function is called by:
 17156 ;;		Interrupt level 2
 17157 ;; This function uses a non-reentrant model
 17158 ;;
 17159                           
 17160                           	psect	text96
 17161  005F3C                     __ptext96:
 17162                           	callstack 0
 17163  005F3C                     _CCP3_CaptureISR:
 17164                           	callstack 13
 17165  005F3C                     
 17166                           ;mcc_generated_files/ccp3.c: 106:     CCP3_PERIOD_REG_T module;;mcc_generated_files/ccp3
      +                          .c: 109:     PIR9bits.CCP3IF = 0;
 17167  005F3C  0139               	movlb	57	; () banked
 17168  005F3E  93A9               	bcf	169,1,b	;volatile
 17169                           
 17170                           ;mcc_generated_files/ccp3.c: 112:     module.ccpr3l = CCPR3L;
 17171  005F40  006F FDD0  F003    	movff	16244,CCP3_CaptureISR@module	;volatile
 17172                           
 17173                           ;mcc_generated_files/ccp3.c: 113:     module.ccpr3h = CCPR3H;
 17174  005F46  006F FDD4  F004    	movff	16245,CCP3_CaptureISR@module+1	;volatile
 17175  005F4C                     
 17176                           ; BSR set to: 57
 17177                           ;mcc_generated_files/ccp3.c: 116:     CCP3_CallBack(module.ccpr3_16Bit);
 17178  005F4C  C003  F001         	movff	CCP3_CaptureISR@module,CCP3_DefaultCallBack@capturedValue
 17179  005F50  C004  F002         	movff	CCP3_CaptureISR@module+1,CCP3_DefaultCallBack@capturedValue+1
 17180  005F54  D802               	call	i2u747_48
 17181  005F56  EFB7  F02F         	goto	i2u747_49
 17182  005F5A                     i2u747_48:
 17183  005F5A  0005               	push	
 17184  005F5C  6EFA               	movwf	pclath,c
 17185  005F5E  0101               	movlb	1	; () banked
 17186  005F60  5198               	movf	_CCP3_CallBack& (0+255),w,b
 17187  005F62  6EFD               	movwf	tosl,c
 17188  005F64  5199               	movf	(_CCP3_CallBack+1)& (0+255),w,b
 17189  005F66  6EFE               	movwf	tosh,c
 17190  005F68  6AFF               	clrf	tosu,c
 17191  005F6A  50FA               	movf	pclath,w,c
 17192  005F6C  0012               	return		;indir
 17193  005F6E                     i2u747_49:
 17194  005F6E  0011               	retfie		f
 17195  005F70                     __end_of_CCP3_CaptureISR:
 17196                           	callstack 0
 17197                           
 17198 ;; *************** function _CCP3_DefaultCallBack *****************
 17199 ;; Defined at:
 17200 ;;		line 64 in file "mcc_generated_files/ccp3.c"
 17201 ;; Parameters:    Size  Location     Type
 17202 ;;  capturedValu    2    0[COMRAM] unsigned short 
 17203 ;; Auto vars:     Size  Location     Type
 17204 ;;		None
 17205 ;; Return value:  Size  Location     Type
 17206 ;;                  1    wreg      void 
 17207 ;; Registers used:
 17208 ;;		wreg, status,2, status,0
 17209 ;; Tracked objects:
 17210 ;;		On entry : 0/0
 17211 ;;		On exit  : 0/0
 17212 ;;		Unchanged: 0/0
 17213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17214 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17217 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17218 ;;Total ram usage:        2 bytes
 17219 ;; Hardware stack levels used: 1
 17220 ;; This function calls:
 17221 ;;		Nothing
 17222 ;; This function is called by:
 17223 ;;		_CCP3_Initialize
 17224 ;;		_CCP3_CaptureISR
 17225 ;; This function uses a non-reentrant model
 17226 ;;
 17227                           
 17228                           	psect	text97
 17229  005E00                     __ptext97:
 17230                           	callstack 0
 17231  005E00                     _CCP3_DefaultCallBack:
 17232                           	callstack 13
 17233  005E00                     
 17234                           ;mcc_generated_files/ccp3.c: 64: static void CCP3_DefaultCallBack(uint16_t capturedValue
      +                          );mcc_generated_files/ccp3.c: 65: {;mcc_generated_files/ccp3.c: 67:     if(PORTDbits.RD7
      +                          ) {
 17235  005E00  AECD               	btfss	205,7,c	;volatile
 17236  005E02  EF05  F02F         	goto	i2u732_41
 17237  005E06  EF07  F02F         	goto	i2u732_40
 17238  005E0A                     i2u732_41:
 17239  005E0A  EF0D  F02F         	goto	i2l7316
 17240  005E0E                     i2u732_40:
 17241  005E0E                     
 17242                           ;mcc_generated_files/ccp3.c: 68:         distLeftM = capturedValue;
 17243  005E0E  C001  F13C         	movff	CCP3_DefaultCallBack@capturedValue,_distLeftM
 17244  005E12  C002  F13D         	movff	CCP3_DefaultCallBack@capturedValue+1,_distLeftM+1
 17245                           
 17246                           ;mcc_generated_files/ccp3.c: 69:     } else {
 17247  005E16  EF1A  F02F         	goto	i2l438
 17248  005E1A                     i2l7316:
 17249                           
 17250                           ;mcc_generated_files/ccp3.c: 70:         distLeft = capturedValue - distLeftM;
 17251  005E1A  0101               	movlb	1	; () banked
 17252  005E1C  513C               	movf	_distLeftM& (0+255),w,b
 17253  005E1E  5C01               	subwf	CCP3_DefaultCallBack@capturedValue^0,w,c
 17254  005E20  0100               	movlb	0	; () banked
 17255  005E22  6FF7               	movwf	_distLeft& (0+255),b	;volatile
 17256  005E24  0101               	movlb	1	; () banked
 17257  005E26  513D               	movf	(_distLeftM+1)& (0+255),w,b
 17258  005E28  5802               	subwfb	(CCP3_DefaultCallBack@capturedValue+1)^0,w,c
 17259  005E2A  0100               	movlb	0	; () banked
 17260  005E2C  6FF8               	movwf	(_distLeft+1)& (0+255),b	;volatile
 17261  005E2E                     
 17262                           ; BSR set to: 0
 17263                           ;mcc_generated_files/ccp3.c: 71:         distLeft >>= 1;
 17264  005E2E  90D8               	bcf	status,0,c
 17265  005E30  33F8               	rrcf	(_distLeft+1)& (0+255),f,b	;volatile
 17266  005E32  33F7               	rrcf	_distLeft& (0+255),f,b	;volatile
 17267  005E34                     i2l438:
 17268  005E34  0012               	return		;funcret
 17269  005E36                     __end_of_CCP3_DefaultCallBack:
 17270                           	callstack 0
 17271                           
 17272 ;; *************** function _CCP4_CaptureISR *****************
 17273 ;; Defined at:
 17274 ;;		line 107 in file "mcc_generated_files/ccp4.c"
 17275 ;; Parameters:    Size  Location     Type
 17276 ;;		None
 17277 ;; Auto vars:     Size  Location     Type
 17278 ;;  module          2    6[COMRAM] struct CCPR4Reg_tag
 17279 ;; Return value:  Size  Location     Type
 17280 ;;                  1    wreg      void 
 17281 ;; Registers used:
 17282 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 17283 ;; Tracked objects:
 17284 ;;		On entry : 0/0
 17285 ;;		On exit  : 0/0
 17286 ;;		Unchanged: 0/0
 17287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17289 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17291 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17292 ;;Total ram usage:        2 bytes
 17293 ;; Hardware stack levels used: 1
 17294 ;; Hardware stack levels required when called: 1
 17295 ;; This function calls:
 17296 ;;		Absolute function
 17297 ;;		_CCP4_DefaultCallBack
 17298 ;; This function is called by:
 17299 ;;		Interrupt level 2
 17300 ;; This function uses a non-reentrant model
 17301 ;;
 17302                           
 17303                           	psect	text98
 17304  005F70                     __ptext98:
 17305                           	callstack 0
 17306  005F70                     _CCP4_CaptureISR:
 17307                           	callstack 13
 17308  005F70                     
 17309                           ;mcc_generated_files/ccp4.c: 109:     CCP4_PERIOD_REG_T module;;mcc_generated_files/ccp4
      +                          .c: 112:     PIR10bits.CCP4IF = 0;
 17310  005F70  0139               	movlb	57	; () banked
 17311  005F72  91AA               	bcf	170,0,b	;volatile
 17312                           
 17313                           ;mcc_generated_files/ccp4.c: 115:     module.ccpr4l = CCPR4L;
 17314  005F74  006F FDC0  F007    	movff	16240,CCP4_CaptureISR@module	;volatile
 17315                           
 17316                           ;mcc_generated_files/ccp4.c: 116:     module.ccpr4h = CCPR4H;
 17317  005F7A  006F FDC4  F008    	movff	16241,CCP4_CaptureISR@module+1	;volatile
 17318  005F80                     
 17319                           ; BSR set to: 57
 17320                           ;mcc_generated_files/ccp4.c: 119:     CCP4_CallBack(module.ccpr4_16Bit);
 17321  005F80  C007  F005         	movff	CCP4_CaptureISR@module,CCP4_DefaultCallBack@capturedValue
 17322  005F84  C008  F006         	movff	CCP4_CaptureISR@module+1,CCP4_DefaultCallBack@capturedValue+1
 17323  005F88  D802               	call	i2u748_48
 17324  005F8A  EFD1  F02F         	goto	i2u748_49
 17325  005F8E                     i2u748_48:
 17326  005F8E  0005               	push	
 17327  005F90  6EFA               	movwf	pclath,c
 17328  005F92  0101               	movlb	1	; () banked
 17329  005F94  5196               	movf	_CCP4_CallBack& (0+255),w,b
 17330  005F96  6EFD               	movwf	tosl,c
 17331  005F98  5197               	movf	(_CCP4_CallBack+1)& (0+255),w,b
 17332  005F9A  6EFE               	movwf	tosh,c
 17333  005F9C  6AFF               	clrf	tosu,c
 17334  005F9E  50FA               	movf	pclath,w,c
 17335  005FA0  0012               	return		;indir
 17336  005FA2                     i2u748_49:
 17337  005FA2  0011               	retfie		f
 17338  005FA4                     __end_of_CCP4_CaptureISR:
 17339                           	callstack 0
 17340                           
 17341 ;; *************** function _CCP4_DefaultCallBack *****************
 17342 ;; Defined at:
 17343 ;;		line 64 in file "mcc_generated_files/ccp4.c"
 17344 ;; Parameters:    Size  Location     Type
 17345 ;;  capturedValu    2    4[COMRAM] unsigned short 
 17346 ;; Auto vars:     Size  Location     Type
 17347 ;;		None
 17348 ;; Return value:  Size  Location     Type
 17349 ;;                  1    wreg      void 
 17350 ;; Registers used:
 17351 ;;		wreg, status,2, status,0
 17352 ;; Tracked objects:
 17353 ;;		On entry : 0/0
 17354 ;;		On exit  : 0/0
 17355 ;;		Unchanged: 0/0
 17356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17357 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17360 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17361 ;;Total ram usage:        2 bytes
 17362 ;; Hardware stack levels used: 1
 17363 ;; This function calls:
 17364 ;;		Nothing
 17365 ;; This function is called by:
 17366 ;;		_CCP4_Initialize
 17367 ;;		_CCP4_CaptureISR
 17368 ;; This function uses a non-reentrant model
 17369 ;;
 17370                           
 17371                           	psect	text99
 17372  005E36                     __ptext99:
 17373                           	callstack 0
 17374  005E36                     _CCP4_DefaultCallBack:
 17375                           	callstack 13
 17376  005E36                     
 17377                           ;mcc_generated_files/ccp4.c: 64: static void CCP4_DefaultCallBack(uint16_t capturedValue
      +                          );mcc_generated_files/ccp4.c: 65: {;mcc_generated_files/ccp4.c: 67:     if(PORTDbits.RD6
      +                          ) {
 17378  005E36  ACCD               	btfss	205,6,c	;volatile
 17379  005E38  EF20  F02F         	goto	i2u733_41
 17380  005E3C  EF22  F02F         	goto	i2u733_40
 17381  005E40                     i2u733_41:
 17382  005E40  EF28  F02F         	goto	i2l7324
 17383  005E44                     i2u733_40:
 17384  005E44                     
 17385                           ;mcc_generated_files/ccp4.c: 68:         distRightM = capturedValue;
 17386  005E44  C005  F13A         	movff	CCP4_DefaultCallBack@capturedValue,_distRightM
 17387  005E48  C006  F13B         	movff	CCP4_DefaultCallBack@capturedValue+1,_distRightM+1
 17388                           
 17389                           ;mcc_generated_files/ccp4.c: 70:     } else {
 17390  005E4C  EF35  F02F         	goto	i2l476
 17391  005E50                     i2l7324:
 17392                           
 17393                           ;mcc_generated_files/ccp4.c: 71:         distRight = capturedValue - distRightM;
 17394  005E50  0101               	movlb	1	; () banked
 17395  005E52  513A               	movf	_distRightM& (0+255),w,b
 17396  005E54  5C05               	subwf	CCP4_DefaultCallBack@capturedValue^0,w,c
 17397  005E56  0100               	movlb	0	; () banked
 17398  005E58  6FF5               	movwf	_distRight& (0+255),b	;volatile
 17399  005E5A  0101               	movlb	1	; () banked
 17400  005E5C  513B               	movf	(_distRightM+1)& (0+255),w,b
 17401  005E5E  5806               	subwfb	(CCP4_DefaultCallBack@capturedValue+1)^0,w,c
 17402  005E60  0100               	movlb	0	; () banked
 17403  005E62  6FF6               	movwf	(_distRight+1)& (0+255),b	;volatile
 17404  005E64                     
 17405                           ; BSR set to: 0
 17406                           ;mcc_generated_files/ccp4.c: 72:         distRight >>= 1;
 17407  005E64  90D8               	bcf	status,0,c
 17408  005E66  33F6               	rrcf	(_distRight+1)& (0+255),f,b	;volatile
 17409  005E68  33F5               	rrcf	_distRight& (0+255),f,b	;volatile
 17410  005E6A                     i2l476:
 17411  005E6A  0012               	return		;funcret
 17412  005E6C                     __end_of_CCP4_DefaultCallBack:
 17413                           	callstack 0
 17414                           
 17415 ;; *************** function _TMR5_GATE_ISR *****************
 17416 ;; Defined at:
 17417 ;;		line 175 in file "mcc_generated_files/tmr5.c"
 17418 ;; Parameters:    Size  Location     Type
 17419 ;;		None
 17420 ;; Auto vars:     Size  Location     Type
 17421 ;;		None
 17422 ;; Return value:  Size  Location     Type
 17423 ;;                  1    wreg      void 
 17424 ;; Registers used:
 17425 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 17426 ;; Tracked objects:
 17427 ;;		On entry : 0/0
 17428 ;;		On exit  : 0/0
 17429 ;;		Unchanged: 0/0
 17430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17434 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17435 ;;Total ram usage:        0 bytes
 17436 ;; Hardware stack levels used: 1
 17437 ;; Hardware stack levels required when called: 3
 17438 ;; This function calls:
 17439 ;;		Absolute function
 17440 ;;		_TMR5_DefaultGateInterruptHandler
 17441 ;; This function is called by:
 17442 ;;		Interrupt level 2
 17443 ;; This function uses a non-reentrant model
 17444 ;;
 17445                           
 17446                           	psect	text100
 17447  005FD8                     __ptext100:
 17448                           	callstack 0
 17449  005FD8                     _TMR5_GATE_ISR:
 17450                           	callstack 11
 17451  005FD8                     
 17452                           ;mcc_generated_files/tmr5.c: 178:     PIR8bits.TMR5GIF = 0;
 17453  005FD8  0139               	movlb	57	; () banked
 17454  005FDA  9FA8               	bcf	168,7,b	;volatile
 17455  005FDC                     
 17456                           ; BSR set to: 57
 17457                           ;mcc_generated_files/tmr5.c: 180:     if(TMR5_GateInterruptHandler)
 17458  005FDC  0101               	movlb	1	; () banked
 17459  005FDE  5192               	movf	_TMR5_GateInterruptHandler& (0+255),w,b
 17460  005FE0  1193               	iorwf	(_TMR5_GateInterruptHandler+1)& (0+255),w,b
 17461  005FE2  B4D8               	btfsc	status,2,c
 17462  005FE4  EFF6  F02F         	goto	i2u749_41
 17463  005FE8  EFF8  F02F         	goto	i2u749_40
 17464  005FEC                     i2u749_41:
 17465  005FEC  EF04  F030         	goto	i2l552
 17466  005FF0                     i2u749_40:
 17467  005FF0                     
 17468                           ; BSR set to: 1
 17469                           ;mcc_generated_files/tmr5.c: 181:     {;mcc_generated_files/tmr5.c: 182:         TMR5_Ga
      +                          teInterruptHandler();
 17470  005FF0  D802               	call	i2u750_48
 17471  005FF2  EF04  F030         	goto	i2u750_49
 17472  005FF6                     i2u750_48:
 17473  005FF6  0005               	push	
 17474  005FF8  6EFA               	movwf	pclath,c
 17475  005FFA  5192               	movf	_TMR5_GateInterruptHandler& (0+255),w,b
 17476  005FFC  6EFD               	movwf	tosl,c
 17477  005FFE  5193               	movf	(_TMR5_GateInterruptHandler+1)& (0+255),w,b
 17478  006000  6EFE               	movwf	tosh,c
 17479  006002  6AFF               	clrf	tosu,c
 17480  006004  50FA               	movf	pclath,w,c
 17481  006006  0012               	return		;indir
 17482  006008                     i2u750_49:
 17483  006008                     i2l552:
 17484  006008  0011               	retfie		f
 17485  00600A                     __end_of_TMR5_GATE_ISR:
 17486                           	callstack 0
 17487                           
 17488 ;; *************** function _TMR5_DefaultGateInterruptHandler *****************
 17489 ;; Defined at:
 17490 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 17491 ;; Parameters:    Size  Location     Type
 17492 ;;		None
 17493 ;; Auto vars:     Size  Location     Type
 17494 ;;		None
 17495 ;; Return value:  Size  Location     Type
 17496 ;;                  1    wreg      void 
 17497 ;; Registers used:
 17498 ;;		wreg, status,2, status,0, cstack
 17499 ;; Tracked objects:
 17500 ;;		On entry : 0/0
 17501 ;;		On exit  : 0/0
 17502 ;;		Unchanged: 0/0
 17503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17507 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17508 ;;Total ram usage:        0 bytes
 17509 ;; Hardware stack levels used: 1
 17510 ;; Hardware stack levels required when called: 2
 17511 ;; This function calls:
 17512 ;;		_TMR5_ReadTimer
 17513 ;;		_TMR5_Reload
 17514 ;; This function is called by:
 17515 ;;		_TMR5_Initialize
 17516 ;;		_TMR5_GATE_ISR
 17517 ;; This function uses a non-reentrant model
 17518 ;;
 17519                           
 17520                           	psect	text101
 17521  006252                     __ptext101:
 17522                           	callstack 0
 17523  006252                     _TMR5_DefaultGateInterruptHandler:
 17524                           	callstack 11
 17525  006252                     
 17526                           ;mcc_generated_files/tmr5.c: 194:     distFront = TMR5_ReadTimer();
 17527  006252  EC07  F031         	call	_TMR5_ReadTimer	;wreg free
 17528  006256  C009  F0FD         	movff	?_TMR5_ReadTimer,_distFront	;volatile
 17529  00625A  C00A  F0FE         	movff	?_TMR5_ReadTimer+1,_distFront+1	;volatile
 17530  00625E                     
 17531                           ;mcc_generated_files/tmr5.c: 195:     distFront >>= 1;
 17532  00625E  0100               	movlb	0	; () banked
 17533  006260  90D8               	bcf	status,0,c
 17534  006262  33FE               	rrcf	(_distFront+1)& (0+255),f,b	;volatile
 17535  006264  33FD               	rrcf	_distFront& (0+255),f,b	;volatile
 17536  006266                     
 17537                           ; BSR set to: 0
 17538                           ;mcc_generated_files/tmr5.c: 196:     TMR5_Reload();
 17539  006266  EC82  F031         	call	_TMR5_Reload	;wreg free
 17540  00626A                     
 17541                           ;mcc_generated_files/tmr5.c: 197:     PIR8bits.TMR5GIF = 0;
 17542  00626A  0139               	movlb	57	; () banked
 17543  00626C  9FA8               	bcf	168,7,b	;volatile
 17544  00626E                     
 17545                           ; BSR set to: 57
 17546  00626E  0012               	return		;funcret
 17547  006270                     __end_of_TMR5_DefaultGateInterruptHandler:
 17548                           	callstack 0
 17549                           
 17550 ;; *************** function _TMR5_Reload *****************
 17551 ;; Defined at:
 17552 ;;		line 155 in file "mcc_generated_files/tmr5.c"
 17553 ;; Parameters:    Size  Location     Type
 17554 ;;		None
 17555 ;; Auto vars:     Size  Location     Type
 17556 ;;		None
 17557 ;; Return value:  Size  Location     Type
 17558 ;;                  1    wreg      void 
 17559 ;; Registers used:
 17560 ;;		wreg, status,2, cstack
 17561 ;; Tracked objects:
 17562 ;;		On entry : 0/0
 17563 ;;		On exit  : 0/0
 17564 ;;		Unchanged: 0/0
 17565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17569 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17570 ;;Total ram usage:        0 bytes
 17571 ;; Hardware stack levels used: 1
 17572 ;; Hardware stack levels required when called: 1
 17573 ;; This function calls:
 17574 ;;		_TMR5_WriteTimer
 17575 ;; This function is called by:
 17576 ;;		_TMR5_DefaultGateInterruptHandler
 17577 ;; This function uses a non-reentrant model
 17578 ;;
 17579                           
 17580                           	psect	text102
 17581  006304                     __ptext102:
 17582                           	callstack 0
 17583  006304                     _TMR5_Reload:
 17584                           	callstack 11
 17585  006304                     
 17586                           ;mcc_generated_files/tmr5.c: 157:     TMR5_WriteTimer(timer5ReloadVal);
 17587  006304  C194  F009         	movff	_timer5ReloadVal,TMR5_WriteTimer@timerVal	;volatile
 17588  006308  C195  F00A         	movff	_timer5ReloadVal+1,TMR5_WriteTimer@timerVal+1	;volatile
 17589  00630C  ECA4  F030         	call	_TMR5_WriteTimer	;wreg free
 17590  006310  0012               	return		;funcret
 17591  006312                     __end_of_TMR5_Reload:
 17592                           	callstack 0
 17593                           
 17594 ;; *************** function _TMR5_WriteTimer *****************
 17595 ;; Defined at:
 17596 ;;		line 133 in file "mcc_generated_files/tmr5.c"
 17597 ;; Parameters:    Size  Location     Type
 17598 ;;  timerVal        2    8[COMRAM] unsigned short 
 17599 ;; Auto vars:     Size  Location     Type
 17600 ;;		None
 17601 ;; Return value:  Size  Location     Type
 17602 ;;                  1    wreg      void 
 17603 ;; Registers used:
 17604 ;;		wreg, status,2
 17605 ;; Tracked objects:
 17606 ;;		On entry : 0/0
 17607 ;;		On exit  : 0/0
 17608 ;;		Unchanged: 0/0
 17609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17610 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17613 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17614 ;;Total ram usage:        2 bytes
 17615 ;; Hardware stack levels used: 1
 17616 ;; This function calls:
 17617 ;;		Nothing
 17618 ;; This function is called by:
 17619 ;;		_TMR5_Reload
 17620 ;; This function uses a non-reentrant model
 17621 ;;
 17622                           
 17623                           	psect	text103
 17624  006148                     __ptext103:
 17625                           	callstack 0
 17626  006148                     _TMR5_WriteTimer:
 17627                           	callstack 11
 17628  006148                     
 17629                           ;mcc_generated_files/tmr5.c: 133: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 134: {;mcc_generated_files/tmr5.c: 135:     if (T5CONbits.NOT_SYNC == 1)
 17630  006148  A49A               	btfss	154,2,c	;volatile
 17631  00614A  EFA9  F030         	goto	i2u662_41
 17632  00614E  EFAB  F030         	goto	i2u662_40
 17633  006152                     i2u662_41:
 17634  006152  EFB4  F030         	goto	i2l6712
 17635  006156                     i2u662_40:
 17636  006156                     
 17637                           ;mcc_generated_files/tmr5.c: 136:     {;mcc_generated_files/tmr5.c: 138:         T5CONbi
      +                          ts.TMR5ON = 0;
 17638  006156  909A               	bcf	154,0,c	;volatile
 17639  006158                     
 17640                           ;mcc_generated_files/tmr5.c: 141:         TMR5H = (uint8_t)(timerVal >> 8);
 17641  006158  500A               	movf	(TMR5_WriteTimer@timerVal+1)^0,w,c
 17642  00615A  6E99               	movwf	153,c	;volatile
 17643  00615C                     
 17644                           ;mcc_generated_files/tmr5.c: 142:         TMR5L = (uint8_t)timerVal;
 17645  00615C  0060  F027  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
 17646  006162                     
 17647                           ;mcc_generated_files/tmr5.c: 145:         T5CONbits.TMR5ON =1;
 17648  006162  809A               	bsf	154,0,c	;volatile
 17649                           
 17650                           ;mcc_generated_files/tmr5.c: 146:     }
 17651  006164  EFB9  F030         	goto	i2l534
 17652  006168                     i2l6712:
 17653                           
 17654                           ;mcc_generated_files/tmr5.c: 148:     {;mcc_generated_files/tmr5.c: 150:         TMR5H =
      +                           (uint8_t)(timerVal >> 8);
 17655  006168  500A               	movf	(TMR5_WriteTimer@timerVal+1)^0,w,c
 17656  00616A  6E99               	movwf	153,c	;volatile
 17657  00616C                     
 17658                           ;mcc_generated_files/tmr5.c: 151:         TMR5L = (uint8_t)timerVal;
 17659  00616C  0060  F027  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
 17660  006172                     i2l534:
 17661  006172  0012               	return		;funcret
 17662  006174                     __end_of_TMR5_WriteTimer:
 17663                           	callstack 0
 17664                           
 17665 ;; *************** function _TMR5_ReadTimer *****************
 17666 ;; Defined at:
 17667 ;;		line 117 in file "mcc_generated_files/tmr5.c"
 17668 ;; Parameters:    Size  Location     Type
 17669 ;;		None
 17670 ;; Auto vars:     Size  Location     Type
 17671 ;;  readVal         2   12[COMRAM] unsigned short 
 17672 ;;  readValLow      1   15[COMRAM] unsigned char 
 17673 ;;  readValHigh     1   14[COMRAM] unsigned char 
 17674 ;; Return value:  Size  Location     Type
 17675 ;;                  2    8[COMRAM] unsigned short 
 17676 ;; Registers used:
 17677 ;;		wreg, status,2
 17678 ;; Tracked objects:
 17679 ;;		On entry : 0/0
 17680 ;;		On exit  : 0/0
 17681 ;;		Unchanged: 0/0
 17682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17683 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17684 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17685 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17686 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17687 ;;Total ram usage:        8 bytes
 17688 ;; Hardware stack levels used: 1
 17689 ;; This function calls:
 17690 ;;		Nothing
 17691 ;; This function is called by:
 17692 ;;		_TMR5_DefaultGateInterruptHandler
 17693 ;; This function uses a non-reentrant model
 17694 ;;
 17695                           
 17696                           	psect	text104
 17697  00620E                     __ptext104:
 17698                           	callstack 0
 17699  00620E                     _TMR5_ReadTimer:
 17700                           	callstack 12
 17701  00620E                     
 17702                           ;mcc_generated_files/tmr5.c: 119:     uint16_t readVal;;mcc_generated_files/tmr5.c: 120:
      +                               uint8_t readValHigh;;mcc_generated_files/tmr5.c: 121:     uint8_t readValLow;;mcc_g
      +                          enerated_files/tmr5.c: 123:     T5CONbits.T5RD16 = 1;
 17703  00620E  829A               	bsf	154,1,c	;volatile
 17704                           
 17705                           ;mcc_generated_files/tmr5.c: 125:     readValLow = TMR5L;
 17706  006210  006F FE60  F010    	movff	16280,TMR5_ReadTimer@readValLow	;volatile
 17707                           
 17708                           ;mcc_generated_files/tmr5.c: 126:     readValHigh = TMR5H;
 17709  006216  006F FE64  F00F    	movff	16281,TMR5_ReadTimer@readValHigh	;volatile
 17710  00621C                     
 17711                           ;mcc_generated_files/tmr5.c: 128:     readVal = ((uint16_t)readValHigh << 8) | readValLo
      +                          w;
 17712  00621C  500F               	movf	TMR5_ReadTimer@readValHigh^0,w,c
 17713  00621E  6E0B               	movwf	??_TMR5_ReadTimer^0,c
 17714  006220  5010               	movf	TMR5_ReadTimer@readValLow^0,w,c
 17715  006222  6E0D               	movwf	TMR5_ReadTimer@readVal^0,c
 17716  006224  C00B  F00E         	movff	??_TMR5_ReadTimer,TMR5_ReadTimer@readVal+1
 17717  006228                     
 17718                           ;mcc_generated_files/tmr5.c: 130:     return readVal;
 17719  006228  C00D  F009         	movff	TMR5_ReadTimer@readVal,?_TMR5_ReadTimer
 17720  00622C  C00E  F00A         	movff	TMR5_ReadTimer@readVal+1,?_TMR5_ReadTimer+1
 17721  006230  0012               	return		;funcret
 17722  006232                     __end_of_TMR5_ReadTimer:
 17723                           	callstack 0
 17724                           
 17725 ;; *************** function _SMT1_PR_ACQ_ISR *****************
 17726 ;; Defined at:
 17727 ;;		line 192 in file "mcc_generated_files/smt1.c"
 17728 ;; Parameters:    Size  Location     Type
 17729 ;;		None
 17730 ;; Auto vars:     Size  Location     Type
 17731 ;;		None
 17732 ;; Return value:  Size  Location     Type
 17733 ;;                  1    wreg      void 
 17734 ;; Registers used:
 17735 ;;		wreg, status,2, status,0
 17736 ;; Tracked objects:
 17737 ;;		On entry : 0/0
 17738 ;;		On exit  : 0/0
 17739 ;;		Unchanged: 0/0
 17740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17744 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17745 ;;Total ram usage:        0 bytes
 17746 ;; Hardware stack levels used: 1
 17747 ;; This function calls:
 17748 ;;		Nothing
 17749 ;; This function is called by:
 17750 ;;		Interrupt level 2
 17751 ;; This function uses a non-reentrant model
 17752 ;;
 17753                           
 17754                           	psect	text105
 17755  005AD8                     __ptext105:
 17756                           	callstack 0
 17757  005AD8                     _SMT1_PR_ACQ_ISR:
 17758                           	callstack 14
 17759  005AD8                     
 17760                           ;mcc_generated_files/smt1.c: 196:     PIR1bits.SMT1PRAIF = 0;
 17761  005AD8  0139               	movlb	57	; () banked
 17762  005ADA  9DA1               	bcf	161,6,b	;volatile
 17763  005ADC                     
 17764                           ; BSR set to: 57
 17765                           ;mcc_generated_files/smt1.c: 197:     smtPeriod = SMT1CPR;
 17766  005ADC  013F               	movlb	63	; () banked
 17767  005ADE  5115               	movf	21,w,b	;volatile
 17768  005AE0  6E48               	movwf	_smtPeriod^0,c	;volatile
 17769  005AE2  5116               	movf	22,w,b	;volatile
 17770  005AE4  6E49               	movwf	(_smtPeriod+1)^0,c	;volatile
 17771  005AE6  5117               	movf	23,w,b	;volatile
 17772  005AE8  6E4A               	movwf	(_smtPeriod+2)^0,c	;volatile
 17773  005AEA  6A4B               	clrf	(_smtPeriod+3)^0,c	;volatile
 17774  005AEC                     
 17775                           ; BSR set to: 63
 17776                           ;mcc_generated_files/smt1.c: 198:     if(CLC3CONbits.LC3OUT) smtWay++;
 17777  005AEC  013C               	movlb	60	; () banked
 17778  005AEE  AB60               	btfss	96,5,b	;volatile
 17779  005AF0  EF7C  F02D         	goto	i2u752_41
 17780  005AF4  EF7E  F02D         	goto	i2u752_40
 17781  005AF8                     i2u752_41:
 17782  005AF8  EF87  F02D         	goto	i2l7440
 17783  005AFC                     i2u752_40:
 17784  005AFC                     
 17785                           ; BSR set to: 60
 17786  005AFC  0E01               	movlw	1
 17787  005AFE  0101               	movlb	1	; () banked
 17788  005B00  2720               	addwf	_smtWay& (0+255),f,b	;volatile
 17789  005B02  0E00               	movlw	0
 17790  005B04  2321               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 17791  005B06  2322               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 17792  005B08  2323               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 17793  005B0A  EF90  F02D         	goto	i2l856
 17794  005B0E                     i2l7440:
 17795                           
 17796                           ; BSR set to: 60
 17797  005B0E  0EFF               	movlw	255
 17798  005B10  0101               	movlb	1	; () banked
 17799  005B12  2720               	addwf	_smtWay& (0+255),f,b	;volatile
 17800  005B14  0EFF               	movlw	255
 17801  005B16  2321               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 17802  005B18  0EFF               	movlw	255
 17803  005B1A  2322               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 17804  005B1C  0EFF               	movlw	255
 17805  005B1E  2323               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 17806  005B20                     i2l856:
 17807                           
 17808                           ; BSR set to: 1
 17809  005B20  0011               	retfie		f
 17810  005B22                     __end_of_SMT1_PR_ACQ_ISR:
 17811                           	callstack 0
 17812                           
 17813 ;; *************** function _SMT1_PW_ACQ_ISR *****************
 17814 ;; Defined at:
 17815 ;;		line 203 in file "mcc_generated_files/smt1.c"
 17816 ;; Parameters:    Size  Location     Type
 17817 ;;		None
 17818 ;; Auto vars:     Size  Location     Type
 17819 ;;		None
 17820 ;; Return value:  Size  Location     Type
 17821 ;;                  1    wreg      void 
 17822 ;; Registers used:
 17823 ;;		wreg, status,2, status,0
 17824 ;; Tracked objects:
 17825 ;;		On entry : 0/0
 17826 ;;		On exit  : 0/0
 17827 ;;		Unchanged: 0/0
 17828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17832 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17833 ;;Total ram usage:        0 bytes
 17834 ;; Hardware stack levels used: 1
 17835 ;; This function calls:
 17836 ;;		Nothing
 17837 ;; This function is called by:
 17838 ;;		Interrupt level 2
 17839 ;; This function uses a non-reentrant model
 17840 ;;
 17841                           
 17842                           	psect	text106
 17843  0059A4                     __ptext106:
 17844                           	callstack 0
 17845  0059A4                     _SMT1_PW_ACQ_ISR:
 17846                           	callstack 14
 17847  0059A4                     
 17848                           ;mcc_generated_files/smt1.c: 207:     PIR1bits.SMT1PWAIF = 0;
 17849  0059A4  0139               	movlb	57	; () banked
 17850  0059A6  9FA1               	bcf	161,7,b	;volatile
 17851  0059A8                     
 17852                           ; BSR set to: 57
 17853                           ;mcc_generated_files/smt1.c: 208:     smtDuty = SMT1CPW;
 17854  0059A8  013F               	movlb	63	; () banked
 17855  0059AA  5118               	movf	24,w,b	;volatile
 17856  0059AC  0101               	movlb	1	; () banked
 17857  0059AE  6F24               	movwf	_smtDuty& (0+255),b	;volatile
 17858  0059B0  013F               	movlb	63	; () banked
 17859  0059B2  5119               	movf	25,w,b	;volatile
 17860  0059B4  0101               	movlb	1	; () banked
 17861  0059B6  6F25               	movwf	(_smtDuty+1)& (0+255),b	;volatile
 17862  0059B8  013F               	movlb	63	; () banked
 17863  0059BA  511A               	movf	26,w,b	;volatile
 17864  0059BC  0101               	movlb	1	; () banked
 17865  0059BE  6F26               	movwf	(_smtDuty+2)& (0+255),b	;volatile
 17866  0059C0  6B27               	clrf	(_smtDuty+3)& (0+255),b	;volatile
 17867  0059C2                     
 17868                           ; BSR set to: 1
 17869                           ;mcc_generated_files/smt1.c: 209:     if(CLC3CONbits.LC3OUT) smtWay++;
 17870  0059C2  013C               	movlb	60	; () banked
 17871  0059C4  AB60               	btfss	96,5,b	;volatile
 17872  0059C6  EFE7  F02C         	goto	i2u753_41
 17873  0059CA  EFE9  F02C         	goto	i2u753_40
 17874  0059CE                     i2u753_41:
 17875  0059CE  EFF2  F02C         	goto	i2l7450
 17876  0059D2                     i2u753_40:
 17877  0059D2                     
 17878                           ; BSR set to: 60
 17879  0059D2  0E01               	movlw	1
 17880  0059D4  0101               	movlb	1	; () banked
 17881  0059D6  2720               	addwf	_smtWay& (0+255),f,b	;volatile
 17882  0059D8  0E00               	movlw	0
 17883  0059DA  2321               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 17884  0059DC  2322               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 17885  0059DE  2323               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 17886  0059E0  EFFB  F02C         	goto	i2l863
 17887  0059E4                     i2l7450:
 17888                           
 17889                           ; BSR set to: 60
 17890  0059E4  0EFF               	movlw	255
 17891  0059E6  0101               	movlb	1	; () banked
 17892  0059E8  2720               	addwf	_smtWay& (0+255),f,b	;volatile
 17893  0059EA  0EFF               	movlw	255
 17894  0059EC  2321               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 17895  0059EE  0EFF               	movlw	255
 17896  0059F0  2322               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 17897  0059F2  0EFF               	movlw	255
 17898  0059F4  2323               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 17899  0059F6                     i2l863:
 17900                           
 17901                           ; BSR set to: 1
 17902  0059F6  0011               	retfie		f
 17903  0059F8                     __end_of_SMT1_PW_ACQ_ISR:
 17904                           	callstack 0
 17905                           
 17906 ;; *************** function _SMT1_Overflow_ISR *****************
 17907 ;; Defined at:
 17908 ;;		line 213 in file "mcc_generated_files/smt1.c"
 17909 ;; Parameters:    Size  Location     Type
 17910 ;;		None
 17911 ;; Auto vars:     Size  Location     Type
 17912 ;;		None
 17913 ;; Return value:  Size  Location     Type
 17914 ;;                  1    wreg      void 
 17915 ;; Registers used:
 17916 ;;		wreg, status,2
 17917 ;; Tracked objects:
 17918 ;;		On entry : 0/0
 17919 ;;		On exit  : 0/0
 17920 ;;		Unchanged: 0/0
 17921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17925 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17926 ;;Total ram usage:        0 bytes
 17927 ;; Hardware stack levels used: 1
 17928 ;; This function calls:
 17929 ;;		Nothing
 17930 ;; This function is called by:
 17931 ;;		Interrupt level 2
 17932 ;; This function uses a non-reentrant model
 17933 ;;
 17934                           
 17935                           	psect	text107
 17936  00619C                     __ptext107:
 17937                           	callstack 0
 17938  00619C                     _SMT1_Overflow_ISR:
 17939                           	callstack 14
 17940  00619C                     
 17941                           ;mcc_generated_files/smt1.c: 217:     PIR1bits.SMT1IF = 0;
 17942  00619C  0139               	movlb	57	; () banked
 17943  00619E  9BA1               	bcf	161,5,b	;volatile
 17944  0061A0                     
 17945                           ; BSR set to: 57
 17946                           ;mcc_generated_files/smt1.c: 218:     smtPeriod = 0;
 17947  0061A0  0E00               	movlw	0
 17948  0061A2  6E48               	movwf	_smtPeriod^0,c	;volatile
 17949  0061A4  0E00               	movlw	0
 17950  0061A6  6E49               	movwf	(_smtPeriod+1)^0,c	;volatile
 17951  0061A8  0E00               	movlw	0
 17952  0061AA  6E4A               	movwf	(_smtPeriod+2)^0,c	;volatile
 17953  0061AC  0E00               	movlw	0
 17954  0061AE  6E4B               	movwf	(_smtPeriod+3)^0,c	;volatile
 17955                           
 17956                           ;mcc_generated_files/smt1.c: 219:     smtDuty = 0;
 17957  0061B0  0E00               	movlw	0
 17958  0061B2  0101               	movlb	1	; () banked
 17959  0061B4  6F24               	movwf	_smtDuty& (0+255),b	;volatile
 17960  0061B6  0E00               	movlw	0
 17961  0061B8  6F25               	movwf	(_smtDuty+1)& (0+255),b	;volatile
 17962  0061BA  0E00               	movlw	0
 17963  0061BC  6F26               	movwf	(_smtDuty+2)& (0+255),b	;volatile
 17964  0061BE  0E00               	movlw	0
 17965  0061C0  6F27               	movwf	(_smtDuty+3)& (0+255),b	;volatile
 17966  0061C2                     
 17967                           ; BSR set to: 1
 17968  0061C2  0011               	retfie		f
 17969  0061C4                     __end_of_SMT1_Overflow_ISR:
 17970                           	callstack 0
 17971                           
 17972                           ;
 17973                           ; Interrupt Vector Table @ 0x8
 17974                           ;
 17975                           
 17976                           	psect	ivt0x8
 17977  000008                     __pivt0x8:
 17978                           	callstack 0
 17979  000008                     ivt0x8_base:
 17980                           	callstack 0
 17981                           
 17982                           ; Vector 0 : SWINT
 17983  000008  18E3               	dw	_Default_ISR shr (0+2)
 17984                           
 17985                           ; Vector 1 : HLVD
 17986  00000A  18E3               	dw	_Default_ISR shr (0+2)
 17987                           
 17988                           ; Vector 2 : OSF
 17989  00000C  18E3               	dw	_Default_ISR shr (0+2)
 17990                           
 17991                           ; Vector 3 : CSW
 17992  00000E  18E3               	dw	_Default_ISR shr (0+2)
 17993                           
 17994                           ; Vector 4 : NVM
 17995  000010  18E3               	dw	_Default_ISR shr (0+2)
 17996                           
 17997                           ; Vector 5 : SCAN
 17998  000012  18E3               	dw	_Default_ISR shr (0+2)
 17999                           
 18000                           ; Vector 6 : CRC
 18001  000014  18E3               	dw	_Default_ISR shr (0+2)
 18002                           
 18003                           ; Vector 7 : IOC
 18004  000016  18E3               	dw	_Default_ISR shr (0+2)
 18005                           
 18006                           ; Vector 8 : INT0
 18007  000018  18E3               	dw	_Default_ISR shr (0+2)
 18008                           
 18009                           ; Vector 9 : ZCD
 18010  00001A  18E3               	dw	_Default_ISR shr (0+2)
 18011                           
 18012                           ; Vector 10 : AD
 18013  00001C  18E3               	dw	_Default_ISR shr (0+2)
 18014                           
 18015                           ; Vector 11 : ADT
 18016  00001E  18E3               	dw	_Default_ISR shr (0+2)
 18017                           
 18018                           ; Vector 12 : CMP1
 18019  000020  18E3               	dw	_Default_ISR shr (0+2)
 18020                           
 18021                           ; Vector 13 : SMT1
 18022  000022  1867               	dw	_SMT1_Overflow_ISR shr (0+2)
 18023                           
 18024                           ; Vector 14 : SMT1PRA
 18025  000024  16B6               	dw	_SMT1_PR_ACQ_ISR shr (0+2)
 18026                           
 18027                           ; Vector 15 : SMT1PRW
 18028  000026  1669               	dw	_SMT1_PW_ACQ_ISR shr (0+2)
 18029                           
 18030                           ; Vector 16 : DMA1SCNT
 18031  000028  18E3               	dw	_Default_ISR shr (0+2)
 18032                           
 18033                           ; Vector 17 : DMA1DCNT
 18034  00002A  18E3               	dw	_Default_ISR shr (0+2)
 18035                           
 18036                           ; Vector 18 : DMA1OR
 18037  00002C  18E3               	dw	_Default_ISR shr (0+2)
 18038                           
 18039                           ; Vector 19 : DMA1A
 18040  00002E  18E3               	dw	_Default_ISR shr (0+2)
 18041                           
 18042                           ; Vector 20 : SPI1RX
 18043  000030  18E3               	dw	_Default_ISR shr (0+2)
 18044                           
 18045                           ; Vector 21 : SPI1TX
 18046  000032  18E3               	dw	_Default_ISR shr (0+2)
 18047                           
 18048                           ; Vector 22 : SPI1
 18049  000034  18E3               	dw	_Default_ISR shr (0+2)
 18050                           
 18051                           ; Vector 23 : I2C1RX
 18052  000036  18E3               	dw	_Default_ISR shr (0+2)
 18053                           
 18054                           ; Vector 24 : I2C1TX
 18055  000038  18E3               	dw	_Default_ISR shr (0+2)
 18056                           
 18057                           ; Vector 25 : I2C1
 18058  00003A  18E3               	dw	_Default_ISR shr (0+2)
 18059                           
 18060                           ; Vector 26 : I2C1E
 18061  00003C  18E3               	dw	_Default_ISR shr (0+2)
 18062                           
 18063                           ; Vector 27 : U1RX
 18064  00003E  173A               	dw	_UART1_rx_vect_isr shr (0+2)
 18065                           
 18066                           ; Vector 28 : U1TX
 18067  000040  172B               	dw	_UART1_tx_vect_isr shr (0+2)
 18068                           
 18069                           ; Vector 29 : U1E
 18070  000042  18E3               	dw	_Default_ISR shr (0+2)
 18071                           
 18072                           ; Vector 30 : U1
 18073  000044  18E3               	dw	_Default_ISR shr (0+2)
 18074                           
 18075                           ; Vector 31 : TMR0
 18076  000046  18E3               	dw	_Default_ISR shr (0+2)
 18077                           
 18078                           ; Vector 32 : TMR1
 18079  000048  18E3               	dw	_Default_ISR shr (0+2)
 18080                           
 18081                           ; Vector 33 : TMR1G
 18082  00004A  18E3               	dw	_Default_ISR shr (0+2)
 18083                           
 18084                           ; Vector 34 : TMR2
 18085  00004C  18E3               	dw	_Default_ISR shr (0+2)
 18086                           
 18087                           ; Vector 35 : CCP1
 18088  00004E  18E3               	dw	_Default_ISR shr (0+2)
 18089                           
 18090                           ; Vector 36 : Undefined
 18091  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 18092                           
 18093                           ; Vector 37 : NCO1
 18094  000052  18E3               	dw	_Default_ISR shr (0+2)
 18095                           
 18096                           ; Vector 38 : CWG1
 18097  000054  18E3               	dw	_Default_ISR shr (0+2)
 18098                           
 18099                           ; Vector 39 : CLC1
 18100  000056  18E3               	dw	_Default_ISR shr (0+2)
 18101                           
 18102                           ; Vector 40 : INT1
 18103  000058  18E3               	dw	_Default_ISR shr (0+2)
 18104                           
 18105                           ; Vector 41 : CMP2
 18106  00005A  18E3               	dw	_Default_ISR shr (0+2)
 18107                           
 18108                           ; Vector 42 : DMA2SCNT
 18109  00005C  18E3               	dw	_Default_ISR shr (0+2)
 18110                           
 18111                           ; Vector 43 : DMA2DCNT
 18112  00005E  18E3               	dw	_Default_ISR shr (0+2)
 18113                           
 18114                           ; Vector 44 : DMA2OR
 18115  000060  18E3               	dw	_Default_ISR shr (0+2)
 18116                           
 18117                           ; Vector 45 : DMA2A
 18118  000062  18E3               	dw	_Default_ISR shr (0+2)
 18119                           
 18120                           ; Vector 46 : I2C2RX
 18121  000064  18E3               	dw	_Default_ISR shr (0+2)
 18122                           
 18123                           ; Vector 47 : I2C2TX
 18124  000066  18E3               	dw	_Default_ISR shr (0+2)
 18125                           
 18126                           ; Vector 48 : I2C2
 18127  000068  18E3               	dw	_Default_ISR shr (0+2)
 18128                           
 18129                           ; Vector 49 : I2C2E
 18130  00006A  18E3               	dw	_Default_ISR shr (0+2)
 18131                           
 18132                           ; Vector 50 : U2RX
 18133  00006C  18E3               	dw	_Default_ISR shr (0+2)
 18134                           
 18135                           ; Vector 51 : U2TX
 18136  00006E  18E3               	dw	_Default_ISR shr (0+2)
 18137                           
 18138                           ; Vector 52 : U2E
 18139  000070  18E3               	dw	_Default_ISR shr (0+2)
 18140                           
 18141                           ; Vector 53 : U2
 18142  000072  18E3               	dw	_Default_ISR shr (0+2)
 18143                           
 18144                           ; Vector 54 : TMR3
 18145  000074  18E3               	dw	_Default_ISR shr (0+2)
 18146                           
 18147                           ; Vector 55 : TMR3G
 18148  000076  18E3               	dw	_Default_ISR shr (0+2)
 18149                           
 18150                           ; Vector 56 : TMR4
 18151  000078  170D               	dw	_TMR4_ISR shr (0+2)
 18152                           
 18153                           ; Vector 57 : CCP2
 18154  00007A  18E3               	dw	_Default_ISR shr (0+2)
 18155                           
 18156                           ; Vector 58 : Undefined
 18157  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 18158                           
 18159                           ; Vector 59 : CWG2
 18160  00007E  18E3               	dw	_Default_ISR shr (0+2)
 18161                           
 18162                           ; Vector 60 : CLC2
 18163  000080  18E3               	dw	_Default_ISR shr (0+2)
 18164                           
 18165                           ; Vector 61 : INT2
 18166  000082  18E3               	dw	_Default_ISR shr (0+2)
 18167                           
 18168                           ; Vector 62 : Undefined
 18169  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 18170                           
 18171                           ; Vector 63 : Undefined
 18172  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 18173                           
 18174                           ; Vector 64 : Undefined
 18175  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 18176                           
 18177                           ; Vector 65 : Undefined
 18178  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 18179                           
 18180                           ; Vector 66 : Undefined
 18181  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 18182                           
 18183                           ; Vector 67 : Undefined
 18184  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 18185                           
 18186                           ; Vector 68 : Undefined
 18187  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 18188                           
 18189                           ; Vector 69 : Undefined
 18190  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 18191                           
 18192                           ; Vector 70 : TMR5
 18193  000094  18E3               	dw	_Default_ISR shr (0+2)
 18194                           
 18195                           ; Vector 71 : TMR5G
 18196  000096  17F6               	dw	_TMR5_GATE_ISR shr (0+2)
 18197                           
 18198                           ; Vector 72 : TMR6
 18199  000098  18E3               	dw	_Default_ISR shr (0+2)
 18200                           
 18201                           ; Vector 73 : CCP3
 18202  00009A  17CF               	dw	_CCP3_CaptureISR shr (0+2)
 18203                           
 18204                           ; Vector 74 : CWG3
 18205  00009C  18E3               	dw	_Default_ISR shr (0+2)
 18206                           
 18207                           ; Vector 75 : CLC3
 18208  00009E  18E3               	dw	_Default_ISR shr (0+2)
 18209                           
 18210                           ; Vector 76 : Undefined
 18211  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 18212                           
 18213                           ; Vector 77 : Undefined
 18214  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 18215                           
 18216                           ; Vector 78 : Undefined
 18217  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 18218                           
 18219                           ; Vector 79 : Undefined
 18220  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 18221                           
 18222                           ; Vector 80 : CCP4
 18223  0000A8  17DC               	dw	_CCP4_CaptureISR shr (0+2)
 18224                           
 18225                           ; Vector 81 : CLC4
 18226  0000AA  18E3               	dw	_Default_ISR shr (0+2)
 18227  0000AC                     ivt0x8_undefint:
 18228                           	callstack 0
 18229  0000AC  00FF               	reset	
 18230                           
 18231                           	psect	text108
 18232  000000                     __ptext108:
 18233                           	callstack 0
 18234  000000                     
 18235                           	psect	rparam
 18236  0000                     
 18237                           	psect	idloc
 18238                           
 18239                           ;Config register IDLOC0 @ 0x200000
 18240                           ;	unspecified, using default values
 18241  200000                     	org	2097152
 18242  200000  0FFF               	dw	4095
 18243                           
 18244                           ;Config register IDLOC1 @ 0x200002
 18245                           ;	unspecified, using default values
 18246  200002                     	org	2097154
 18247  200002  0FFF               	dw	4095
 18248                           
 18249                           ;Config register IDLOC2 @ 0x200004
 18250                           ;	unspecified, using default values
 18251  200004                     	org	2097156
 18252  200004  0FFF               	dw	4095
 18253                           
 18254                           ;Config register IDLOC3 @ 0x200006
 18255                           ;	unspecified, using default values
 18256  200006                     	org	2097158
 18257  200006  0FFF               	dw	4095
 18258                           
 18259                           ;Config register IDLOC4 @ 0x200008
 18260                           ;	unspecified, using default values
 18261  200008                     	org	2097160
 18262  200008  0FFF               	dw	4095
 18263                           
 18264                           ;Config register IDLOC5 @ 0x20000A
 18265                           ;	unspecified, using default values
 18266  20000A                     	org	2097162
 18267  20000A  0FFF               	dw	4095
 18268                           
 18269                           ;Config register IDLOC6 @ 0x20000C
 18270                           ;	unspecified, using default values
 18271  20000C                     	org	2097164
 18272  20000C  0FFF               	dw	4095
 18273                           
 18274                           ;Config register IDLOC7 @ 0x20000E
 18275                           ;	unspecified, using default values
 18276  20000E                     	org	2097166
 18277  20000E  0FFF               	dw	4095
 18278                           
 18279                           	psect	config
 18280                           
 18281                           ;Config register CONFIG1L @ 0x300000
 18282                           ;	External Oscillator Selection
 18283                           ;	FEXTOSC = OFF, Oscillator not enabled
 18284                           ;	Reset Oscillator Selection
 18285                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
 18286  300000                     	org	3145728
 18287  300000  8C                 	db	140
 18288                           
 18289                           ;Config register CONFIG1H @ 0x300001
 18290                           ;	Clock out Enable bit
 18291                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 18292                           ;	PRLOCKED One-Way Set Enable bit
 18293                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
 18294                           ;	Clock Switch Enable bit
 18295                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 18296                           ;	Fail-Safe Clock Monitor Enable bit
 18297                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 18298  300001                     	org	3145729
 18299  300001  FF                 	db	255
 18300                           
 18301                           ;Config register CONFIG2L @ 0x300002
 18302                           ;	MCLR Enable bit
 18303                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 18304                           ;	Power-up timer selection bits
 18305                           ;	PWRTS = PWRT_OFF, PWRT is disabled
 18306                           ;	Multi-vector enable bit
 18307                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
 18308                           ;	IVTLOCK bit One-way set enable bit
 18309                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
 18310                           ;	Low Power BOR Enable bit
 18311                           ;	LPBOREN = OFF, ULPBOR disabled
 18312                           ;	Brown-out Reset Enable bits
 18313                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 18314  300002                     	org	3145730
 18315  300002  FF                 	db	255
 18316                           
 18317                           ;Config register CONFIG2H @ 0x300003
 18318                           ;	Brown-out Reset Voltage Selection bits
 18319                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
 18320                           ;	ZCD Disable bit
 18321                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 18322                           ;	PPSLOCK bit One-Way Set Enable bit
 18323                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
 18324                           ;	Stack Full/Underflow Reset Enable bit
 18325                           ;	STVREN = ON, Stack full/underflow will cause Reset
 18326                           ;	Debugger Enable bit
 18327                           ;	DEBUG = OFF, Background debugger disabled
 18328                           ;	Extended Instruction Set Enable bit
 18329                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 18330  300003                     	org	3145731
 18331  300003  FF                 	db	255
 18332                           
 18333                           ;Config register CONFIG3L @ 0x300004
 18334                           ;	WDT Period selection bits
 18335                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 18336                           ;	WDT operating mode
 18337                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
 18338  300004                     	org	3145732
 18339  300004  9F                 	db	159
 18340                           
 18341                           ;Config register CONFIG3H @ 0x300005
 18342                           ;	WDT Window Select bits
 18343                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 18344                           ;	WDT input clock selector
 18345                           ;	WDTCCS = SC, Software Control
 18346  300005                     	org	3145733
 18347  300005  FF                 	db	255
 18348                           
 18349                           ;Config register CONFIG4L @ 0x300006
 18350                           ;	Boot Block Size selection bits
 18351                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
 18352                           ;	Boot Block enable bit
 18353                           ;	BBEN = OFF, Boot block disabled
 18354                           ;	Storage Area Flash enable bit
 18355                           ;	SAFEN = OFF, SAF disabled
 18356                           ;	Application Block write protection bit
 18357                           ;	WRTAPP = OFF, Application Block not write protected
 18358  300006                     	org	3145734
 18359  300006  FF                 	db	255
 18360                           
 18361                           ;Config register CONFIG4H @ 0x300007
 18362                           ;	Configuration Register Write Protection bit
 18363                           ;	WRTB = OFF, Configuration registers (300000-30000Bh) not write-protected
 18364                           ;	Boot Block Write Protection bit
 18365                           ;	WRTC = OFF, Boot Block (000000-0007FFh) not write-protected
 18366                           ;	Data EEPROM Write Protection bit
 18367                           ;	WRTD = OFF, Data EEPROM not write-protected
 18368                           ;	SAF Write protection bit
 18369                           ;	WRTSAF = OFF, SAF not Write Protected
 18370                           ;	Low Voltage Programming Enable bit
 18371                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
 18372  300007                     	org	3145735
 18373  300007  FF                 	db	255
 18374                           
 18375                           ;Config register CONFIG5L @ 0x300008
 18376                           ;	PFM and Data EEPROM Code Protection bit
 18377                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
 18378  300008                     	org	3145736
 18379  300008  FF                 	db	255
 18380                           
 18381                           ;Config register CONFIG5H @ 0x300009
 18382                           ;	unspecified, using default values
 18383  300009                     	org	3145737
 18384  300009  FF                 	db	255
 18385                           tosu	equ	0x3FFF
 18386                           tosh	equ	0x3FFE
 18387                           tosl	equ	0x3FFD
 18388                           stkptr	equ	0x3FFC
 18389                           pclatu	equ	0x3FFB
 18390                           pclath	equ	0x3FFA
 18391                           pcl	equ	0x3FF9
 18392                           tblptru	equ	0x3FF8
 18393                           tblptrh	equ	0x3FF7
 18394                           tblptrl	equ	0x3FF6
 18395                           tablat	equ	0x3FF5
 18396                           prodh	equ	0x3FF4
 18397                           prodl	equ	0x3FF3
 18398                           indf0	equ	0x3FEF
 18399                           postinc0	equ	0x3FEE
 18400                           postdec0	equ	0x3FED
 18401                           preinc0	equ	0x3FEC
 18402                           plusw0	equ	0x3FEB
 18403                           fsr0h	equ	0x3FEA
 18404                           fsr0l	equ	0x3FE9
 18405                           wreg	equ	0x3FE8
 18406                           indf1	equ	0x3FE7
 18407                           postinc1	equ	0x3FE6
 18408                           postdec1	equ	0x3FE5
 18409                           preinc1	equ	0x3FE4
 18410                           plusw1	equ	0x3FE3
 18411                           fsr1h	equ	0x3FE2
 18412                           fsr1l	equ	0x3FE1
 18413                           bsr	equ	0x3FE0
 18414                           indf2	equ	0x3FDF
 18415                           postinc2	equ	0x3FDE
 18416                           postdec2	equ	0x3FDD
 18417                           preinc2	equ	0x3FDC
 18418                           plusw2	equ	0x3FDB
 18419                           fsr2h	equ	0x3FDA
 18420                           fsr2l	equ	0x3FD9
 18421                           status	equ	0x3FD8

Data Sizes:
    Strings     178
    Constant    0
    Data        0
    BSS         180
    Persistent  23
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     57      76
    BANK0           160    139     159
    BANK1           256     20     184
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_20(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_20(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_15(CODE[4]), STR_14(CODE[4]), STR_11(CODE[4]), STR_10(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_15(CODE[4]), STR_14(CODE[4]), STR_11(CODE[4]), STR_10(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S3442_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_9(CODE[14]), STR_8(CODE[13]), STR_7(CODE[14]), STR_6(CODE[16]), 
		 -> STR_5(CODE[21]), STR_4(CODE[26]), STR_3(CODE[24]), STR_2(CODE[20]), 
		 -> STR_1(CODE[11]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 26
		 -> STR_9(CODE[14]), STR_8(CODE[13]), STR_7(CODE[14]), STR_6(CODE[16]), 
		 -> STR_5(CODE[21]), STR_4(CODE[26]), STR_3(CODE[24]), STR_2(CODE[20]), 
		 -> STR_1(CODE[11]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_9(CODE[14]), STR_8(CODE[13]), STR_7(CODE[14]), STR_6(CODE[16]), 
		 -> STR_5(CODE[21]), STR_4(CODE[26]), STR_3(CODE[24]), STR_2(CODE[20]), 
		 -> STR_1(CODE[11]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK1[2]), 

    TMR4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_10msISR(), TMR4_DefaultInterruptHandler(), 

    TMR4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_10msISR(), TMR4_DefaultInterruptHandler(), Absolute function(), 

    TMR5_SetGateInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR5_DefaultGateInterruptHandler(), 

    TMR5_GateInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR5_DefaultGateInterruptHandler(), Absolute function(), 

    CCP4_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP4_DefaultCallBack(), 

    CCP4_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP4_DefaultCallBack(), Absolute function(), 

    CCP3_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP3_DefaultCallBack(), 

    CCP3_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP3_DefaultCallBack(), Absolute function(), 

    UART1_SetTxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    UART1_SetRxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultErrorHandler(), 

    UART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), 

    UART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), 

    UART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultErrorHandler(), 

    UART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultOverrunErrorHandler(), 

    UART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultFramingErrorHandler(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_Receive_ISR(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_Transmit_ISR(), 


Critical Paths under _main in COMRAM

    _loop->___flge
    _checkBatt->___flge
    _utoa->_pad
    _efgtoa->___fladd
    _efgtoa->___flge
    _efgtoa->_floorf
    _tolower->_isupper
    _floorf->___fldiv
    ___flsub->___fladd
    ___flge->___flmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_UART1_Write
    _abs->___aomod
    ___fldiv->___xxtofl
    _calcSpeed->___fladd
    ___fladd->___flmul
    _setMotor->_PWM7_LoadDutyValue
    _setMotor->_PWM8_LoadDutyValue
    _actSpeed->___aldiv
    ___xxtofl->___awdiv
    ___fltol->___fladd
    ___flmul->___xxtofl
    _SYSTEM_Initialize->_TMR5_Initialize
    _UART1_Initialize->_UART1_SetErrorHandler
    _UART1_Initialize->_UART1_SetFramingErrorHandler
    _UART1_Initialize->_UART1_SetOverrunErrorHandler
    _UART1_Initialize->_UART1_SetRxInterruptHandler
    _UART1_Initialize->_UART1_SetTxInterruptHandler
    _TMR5_Initialize->_TMR5_SetGateInterruptHandler
    _TMR4_Initialize->_TMR4_SetInterruptHandler
    _CCP4_Initialize->_CCP4_SetCallBack
    _CCP3_Initialize->_CCP3_SetCallBack

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR4_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _CCP3_CaptureISR in COMRAM

    _CCP3_CaptureISR->_CCP3_DefaultCallBack

Critical Paths under _CCP4_CaptureISR in COMRAM

    _CCP4_CaptureISR->_CCP4_DefaultCallBack

Critical Paths under _TMR5_GATE_ISR in COMRAM

    _TMR5_DefaultGateInterruptHandler->_TMR5_ReadTimer
    _TMR5_Reload->_TMR5_WriteTimer

Critical Paths under _SMT1_PR_ACQ_ISR in COMRAM

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in COMRAM

    None.

Critical Paths under _SMT1_Overflow_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___fltol
    _floorf->___fldiv
    ___flsub->___fladd
    ___flge->___flmul
    _calcSteering->_setSteering
    _setSteering->___fltol
    _calcSpeed->___fltol
    ___fladd->___flmul
    _calcMotorPow->___fltol
    ___fltol->___fladd

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR4_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _CCP3_CaptureISR in BANK0

    None.

Critical Paths under _CCP4_CaptureISR in BANK0

    None.

Critical Paths under _TMR5_GATE_ISR in BANK0

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK0

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK0

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _loop->_checkCurveCount
    _startAccell->_printf
    _getReverse->_printf
    _checkCurveCount->_printf
    _getBatteryVoltage->_printf
    _printf->_vfprintf

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR4_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _CCP3_CaptureISR in BANK1

    None.

Critical Paths under _CCP4_CaptureISR in BANK1

    None.

Critical Paths under _TMR5_GATE_ISR in BANK1

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK1

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK1

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR4_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _CCP3_CaptureISR in BANK2

    None.

Critical Paths under _CCP4_CaptureISR in BANK2

    None.

Critical Paths under _TMR5_GATE_ISR in BANK2

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK2

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK2

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR4_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _CCP3_CaptureISR in BANK3

    None.

Critical Paths under _CCP4_CaptureISR in BANK3

    None.

Critical Paths under _TMR5_GATE_ISR in BANK3

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK3

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK3

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR4_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _CCP3_CaptureISR in BANK4

    None.

Critical Paths under _CCP4_CaptureISR in BANK4

    None.

Critical Paths under _TMR5_GATE_ISR in BANK4

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK4

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK4

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR4_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _CCP3_CaptureISR in BANK5

    None.

Critical Paths under _CCP4_CaptureISR in BANK5

    None.

Critical Paths under _TMR5_GATE_ISR in BANK5

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK5

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK5

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR4_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _CCP3_CaptureISR in BANK6

    None.

Critical Paths under _CCP4_CaptureISR in BANK6

    None.

Critical Paths under _TMR5_GATE_ISR in BANK6

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK6

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK6

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR4_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _CCP3_CaptureISR in BANK7

    None.

Critical Paths under _CCP4_CaptureISR in BANK7

    None.

Critical Paths under _TMR5_GATE_ISR in BANK7

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK7

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK7

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR4_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _CCP3_CaptureISR in BANK8

    None.

Critical Paths under _CCP4_CaptureISR in BANK8

    None.

Critical Paths under _TMR5_GATE_ISR in BANK8

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK8

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK8

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR4_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _CCP3_CaptureISR in BANK9

    None.

Critical Paths under _CCP4_CaptureISR in BANK9

    None.

Critical Paths under _TMR5_GATE_ISR in BANK9

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK9

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK9

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR4_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _CCP3_CaptureISR in BANK10

    None.

Critical Paths under _CCP4_CaptureISR in BANK10

    None.

Critical Paths under _TMR5_GATE_ISR in BANK10

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK10

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK10

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR4_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _CCP3_CaptureISR in BANK11

    None.

Critical Paths under _CCP4_CaptureISR in BANK11

    None.

Critical Paths under _TMR5_GATE_ISR in BANK11

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK11

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK11

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR4_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _CCP3_CaptureISR in BANK12

    None.

Critical Paths under _CCP4_CaptureISR in BANK12

    None.

Critical Paths under _TMR5_GATE_ISR in BANK12

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK12

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK12

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR4_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _CCP3_CaptureISR in BANK13

    None.

Critical Paths under _CCP4_CaptureISR in BANK13

    None.

Critical Paths under _TMR5_GATE_ISR in BANK13

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK13

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK13

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR4_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _CCP3_CaptureISR in BANK14

    None.

Critical Paths under _CCP4_CaptureISR in BANK14

    None.

Critical Paths under _TMR5_GATE_ISR in BANK14

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK14

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK14

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR4_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _CCP3_CaptureISR in BANK15

    None.

Critical Paths under _CCP4_CaptureISR in BANK15

    None.

Critical Paths under _TMR5_GATE_ISR in BANK15

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK15

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK15

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  321946
                  _SYSTEM_Initialize
           _TMR4_SetInterruptHandler
                               _loop
 ---------------------------------------------------------------------------------
 (1) _loop                                                 0     0      0  320799
                             ___flge
                           ___xxtofl
                       _calcMotorPow
                          _calcSpeed
                       _calcSteering
                          _checkBatt
                    _checkCurveCount
                  _getBatteryVoltage
                           _getCurve
                         _getReverse
                           _setMotor
                        _setSteering
                        _startAccell
 ---------------------------------------------------------------------------------
 (2) _startAccell                                          2     2      0   60449
                                             16 BANK1      2     2      0
                             _printf
                           _setMotor
                        _setSteering
 ---------------------------------------------------------------------------------
 (2) _getReverse                                           0     0      0   51206
                             _printf
 ---------------------------------------------------------------------------------
 (2) _getCurve                                             6     6      0      90
                                             19 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (2) _checkCurveCount                                      4     4      0   52767
                                             16 BANK1      4     4      0
                            ___lwdiv
                           ___xxtofl
                             _printf
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     421
                                             19 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _checkBatt                                            0     0      0   61729
                             ___flge
                           ___xxtofl
                  _getBatteryVoltage
                        _setSteering
 ---------------------------------------------------------------------------------
 (2) _getBatteryVoltage                                    0     0      0   51228
           _ADCC_GetSingleConversion
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                              10     4      6   51206
                                              8 BANK1      8     2      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6   50291
                                              0 BANK1      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           46    40      6   49776
                                            103 BANK0     36    30      6
                               _dtoa
                             _efgtoa
                              _fputc
                            _isupper
                            _strncmp
                            _tolower
                               _utoa
 ---------------------------------------------------------------------------------
 (6) _utoa                                                32    22     10    5909
                                             48 COMRAM     8     8      0
                                              0 BANK0     24    14     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (7) ___lomod                                             17     1     16     412
                                             19 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (7) ___lodiv                                             25     9     16     421
                                             19 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (6) _strncmp                                             11     5      6     595
                                             19 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _efgtoa                                              68    61      7   32060
                                             35 BANK0     68    61      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (6) _tolower                                              8     6      2    1142
                                             25 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (7) _isupper                                              6     4      2     551
                                             19 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _strcpy                                              10     6      4    1037
                                             19 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (7) _floorf                                              20    16      4     669
                                             53 COMRAM     4     0      4
                                             13 BANK0     16    16      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fpclassifyf                                       14    10      4     375
                                             19 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (7) ___flsub                                              8     0      8    4187
                                             25 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flneg                                              4     0      4     155
                                             19 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (7) ___flge                                              12     4      8    1346
                                             53 COMRAM     4     4      0
                                             13 BANK0      8     0      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fleq                                              12     4      8     770
                                             19 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4     613
                                             19 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    6763
                                             48 COMRAM     8     8      0
                                              0 BANK0     28    18     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    4497
                                             37 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     220
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1537
                                             30 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (9) _fputc                                                9     5      4    1037
                                             21 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (10) _putch                                               1     1      0      93
                                             20 COMRAM     1     1      0
                        _UART1_Write
 ---------------------------------------------------------------------------------
 (11) _UART1_Write                                         1     1      0      62
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     183
                                             37 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     613
                                             19 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     625
                                             19 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (3) _ADCC_GetSingleConversion                             5     3      2      22
                                             19 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _calcSteering                                         4     4      0   13344
                                             44 BANK0      4     4      0
                            ___fldiv
                            ___fltol
                           ___xxtofl
                        _setSteering
 ---------------------------------------------------------------------------------
 (3) _setSteering                                          9     6      3    8049
                                             35 BANK0      9     6      3
                 _PWM5_LoadDutyValue
                 _PWM6_LoadDutyValue
                            ___fldiv
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             25    17      8    3083
                                             41 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) _PWM6_LoadDutyValue                                   4     2      2     152
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _PWM5_LoadDutyValue                                   4     2      2     152
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _calcSpeed                                            6     6      0    9690
                                             35 BANK0      6     6      0
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (8) ___fladd                                             16     8      8    3622
                                             53 COMRAM     4     4      0
                                             13 BANK0     12     4      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _calcMotorPow                                         7     7      0    8669
                                             35 BANK0      7     7      0
                            ___awdiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                           _actSpeed
                           _setMotor
 ---------------------------------------------------------------------------------
 (3) _setMotor                                             4     2      2    1126
                                             23 COMRAM     4     2      2
                 _PWM7_LoadDutyValue
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (4) _PWM8_LoadDutyValue                                   4     2      2     332
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _PWM7_LoadDutyValue                                   4     2      2     332
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _actSpeed                                             4     2      2     629
                                             33 COMRAM     4     2      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             14     6      8     604
                                             19 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    1106
                                             27 COMRAM    14    10      4
                            ___awdiv (ARG)
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     877
                                             25 BANK0     10     6      4
                            ___awdiv (ARG)
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flmul                                             25    17      8    3953
                                             41 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                            ___awdiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     805
                                             19 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     973
                    _ADCC_Initialize
                    _CCP3_Initialize
                    _CCP4_Initialize
                    _CLC3_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM5_Initialize
                    _PWM6_Initialize
                    _PWM7_Initialize
                    _PWM8_Initialize
                    _SMT1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR4_Initialize
                    _TMR5_Initialize
                   _UART1_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0     490
              _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetOverrunErrorHandler                         2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetFramingErrorHandler                         2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetErrorHandler                                2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      2     2      0      98
                                             21 COMRAM     2     2      0
       _TMR5_SetGateInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetGateInterruptHandler                         2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0     174
           _TMR4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR4_SetInterruptHandler                             2     0      2     174
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      2     2      0       0
                                             19 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMT1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM7_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      15
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _CLC3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP4_Initialize                                      0     0      0      98
                   _CCP4_SetCallBack
 ---------------------------------------------------------------------------------
 (3) _CCP4_SetCallBack                                     2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CCP3_Initialize                                      0     0      0      98
                   _CCP3_SetCallBack
 ---------------------------------------------------------------------------------
 (3) _CCP3_SetCallBack                                     2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _UART1_tx_vect_isr                                   1     1      0       0
                                             16 COMRAM     1     1      0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (14) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (18) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _UART1_rx_vect_isr                                   1     1      0       0
                                             17 COMRAM     1     1      0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (14) _UART1_Receive_ISR                                   0     0      0       0
                   Absolute function *
          _UART1_DefaultErrorHandler *
   _UART1_DefaultFramingErrorHandler *
   _UART1_DefaultOverrunErrorHandler *
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (15) _UART1_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _UART1_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _UART1_DefaultErrorHandler                           0     0      0       0
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (15) _UART1_RxDataHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (18) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _TMR4_ISR                                            1     1      0       0
                                             18 COMRAM     1     1      0
                      _TMR4_CallBack
 ---------------------------------------------------------------------------------
 (14) _TMR4_CallBack                                       0     0      0       0
                   Absolute function *
                       _TMR4_10msISR *
       _TMR4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (15) _TMR4_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _TMR4_10msISR                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (18) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _CCP3_CaptureISR                                     2     2      0     144
                                              2 COMRAM     2     2      0
                   Absolute function *
               _CCP3_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (18) _CCP3_DefaultCallBack                                2     0      2      97
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (18) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _CCP4_CaptureISR                                     2     2      0     144
                                              6 COMRAM     2     2      0
                   Absolute function *
               _CCP4_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (18) _CCP4_DefaultCallBack                                2     0      2      97
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (18) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _TMR5_GATE_ISR                                       0     0      0     233
                   Absolute function *
   _TMR5_DefaultGateInterruptHandler *
 ---------------------------------------------------------------------------------
 (18) _TMR5_DefaultGateInterruptHandler                    0     0      0     233
                     _TMR5_ReadTimer
                        _TMR5_Reload
 ---------------------------------------------------------------------------------
 (19) _TMR5_Reload                                         0     0      0     164
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (20) _TMR5_WriteTimer                                     2     0      2     164
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (19) _TMR5_ReadTimer                                      8     6      2      69
                                              8 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (18) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 20
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _SMT1_PR_ACQ_ISR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _SMT1_PW_ACQ_ISR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _SMT1_Overflow_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
     _CCP3_Initialize
       _CCP3_SetCallBack
     _CCP4_Initialize
       _CCP4_SetCallBack
     _CLC3_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM5_Initialize
     _PWM6_Initialize
     _PWM7_Initialize
     _PWM8_Initialize
     _SMT1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
     _TMR4_Initialize
       _TMR4_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetGateInterruptHandler
     _UART1_Initialize
       _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
   _TMR4_SetInterruptHandler
   _loop
     ___flge
       ___flmul (ARG)
         ___awdiv (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
           ___lwdiv (ARG)
       ___xxtofl (ARG)
     ___xxtofl
     _calcMotorPow
       ___awdiv
       ___flmul
       ___fltol
         ___awdiv (ARG)
         ___fladd (ARG)
           ___flmul (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl
       _actSpeed
         ___aldiv
       _setMotor
         _PWM7_LoadDutyValue
         _PWM8_LoadDutyValue
     _calcSpeed
       ___fladd
       ___flmul
       ___fltol
       ___xxtofl
     _calcSteering
       ___fldiv
       ___fltol
       ___xxtofl
       _setSteering
         _PWM5_LoadDutyValue
         _PWM6_LoadDutyValue
         ___fldiv
         ___fltol
         ___xxtofl
     _checkBatt
       ___flge
       ___xxtofl
       _getBatteryVoltage
         _ADCC_GetSingleConversion
         _printf
           _vfprintf
             _vfpfcnvrt
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                   ___flmul (ARG)
                 ___fltol
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                 _isupper
                 _pad
                 _strcpy
                 _tolower
                   _isupper
               _fputc
               _isupper
               _strncmp
               _tolower
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
       _setSteering
     _checkCurveCount
       ___lwdiv
       ___xxtofl
       _printf
     _getBatteryVoltage
     _getCurve
     _getReverse
       _printf
     _setMotor
     _setSteering
     _startAccell
       _printf
       _setMotor
       _setSteering

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *
     Absolute function(Fake) *
     _UART1_DefaultErrorHandler *
       _UART1_RxDataHandler
     _UART1_DefaultFramingErrorHandler *
     _UART1_DefaultOverrunErrorHandler *
     _UART1_RxDataHandler *

 _TMR4_ISR (ROOT)
   _TMR4_CallBack
     Absolute function(Fake) *
     _TMR4_10msISR *
     _TMR4_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _CCP3_CaptureISR (ROOT)
   Absolute function(Fake) *
   _CCP3_DefaultCallBack *

 _CCP4_CaptureISR (ROOT)
   Absolute function(Fake) *
   _CCP4_DefaultCallBack *

 _TMR5_GATE_ISR (ROOT)
   Absolute function(Fake) *
   _TMR5_DefaultGateInterruptHandler *
     _TMR5_ReadTimer
     _TMR5_Reload
       _TMR5_WriteTimer

 _SMT1_PR_ACQ_ISR (ROOT)

 _SMT1_PW_ACQ_ISR (ROOT)

 _SMT1_Overflow_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FFF      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK15          100      0       0      30        0.0%
BANK15             100      0       0      31        0.0%
BITBANK14          100      0       0      28        0.0%
BANK14             100      0       0      29        0.0%
BITBANK13          100      0       0      36        0.0%
BANK13             100      0       0      27        0.0%
BITBANK12          100      0       0      35        0.0%
BANK12             100      0       0      26        0.0%
BITBANK11          100      0       0      34        0.0%
BANK11             100      0       0      25        0.0%
BITBANK10          100      0       0      33        0.0%
BANK10             100      0       0      24        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     14      B8       7       71.9%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     8B      9F       5       99.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     39      4C       1       80.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1A3      32        0.0%
DATA                 0      0     1A3       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Jan 29 17:21:55 2024

                             _CCP4_Initialize 603A                        ??_CCP3_DefaultCallBack 0003  
                     __end_of_checkCurveCount 4FD2                                  ___fldiv@aexp 006C  
                                ___fldiv@bexp 006B                                   _startAccell 54E0  
                                ___fldiv@sign 0064                                            l72 6302  
                                          l75 620C                                            l69 5A8C  
                                ___awdiv@sign 0019                             ??_TMR5_WriteTimer 000B  
                 __size_of_PWM6_LoadDutyValue 0034                                           l312 5944  
                                         l404 5A42                                           l308 58FC  
                                         l309 5916                                           l318 631A  
                                         l520 5AD6                                           l441 6094  
                                         l362 6338                                           l371 6324  
                                         l188 509A                                           l284 54DE  
                                         l365 634C                                           l359 6342  
                                         l368 632E                                           l712 5F3A  
                                         l449 6374                                           l482 6066  
                                         l723 62A2                                           l555 6356  
                                         l644 60EE                                           l740 5ED2  
                                         l709 62BA                                           l581 5DC8  
                                         l726 5F06                                           l479 636A  
                                         l751 62D2                                           l737 62EA  
                                         l754 5E9E                                           l923 628A  
                                         l695 6360                                           l795 6038  
                                         l893 611A                                           _GIE 01FE97  
                                         _PR2 003FAB                                           _PR4 003F9F  
                                         _abs 5BF2                                           _pad 5160  
                     __size_of_PMD_Initialize 0024                                  ___awmod@sign 0019  
                             _TMR2_Initialize 6270                CCP4_SetCallBack@customCallBack 0014  
                                         tosl 003FFD                                           wreg 003FE8  
                            _CCP4_SetCallBack 6362                                  ___flmul@aexp 0061  
                                ___flmul@bexp 0066                            _UART1_Transmit_ISR 5BAE  
                                ___flmul@sign 0060                                  ___flmul@temp 006B  
                                ___flmul@prod 0067                       __end_of_CCP4_CaptureISR 5FA4  
                                ___fltol@exp1 0082                                          l1042 59A0  
                                        ?_abs 0026                                          l2012 28D2  
                                        l2021 2B64                                          l2022 2B52  
                                        l1054 5FB4                                          l1230 4650  
                                        l2016 2C5A                                          l1320 3D7C  
                                        l2120 5220                                          l1057 5FD4  
                                        l1313 461E                                          l2210 1910  
                                        l1314 4630                                          l2019 2AEC  
                                        l2115 51A4                                          l2060 3FE2  
                                        l2029 2C1C                                          l2053 3F4A  
                                        l1325 3E08                                          l2118 51E6  
                                        l2126 3098                                          l1246 4756  
                                        l1255 56A8                                          l2303 3730  
                                        l1263 573A                                          l2056 40A6  
                                        l1360 351A                                          l1512 422E  
                                        l2128 30A0                                          l1345 3394  
                                        l2313 5D58                                          l2146 32DC  
                                        l2306 3674                                          l1258 61E8  
                                        l1274 557E                                          l2067 403E  
                                        l1339 3EF2                               _timer3ReloadVal 0190  
                                        l4100 4FF4                                          l2164 1D60  
                                        l2244 376A                                          l2076 619A  
                                        l1525 4392                                          l4110 5050  
                                        l4102 4FFC                                          l1382 3948  
                                        l2342 5888                                          l2182 14D2  
                                        l2254 3938                                          l2246 3772  
                                        l1278 4FD0                                          l1286 3D00  
                                        l2271 217C                                          l2263 2348  
                                        l4120 62EC                                          l4112 5056  
                                        l4104 504A                                          l1384 396C  
                                        l2328 5614                                          l2336 5BAC  
                                        l2352 4C62                                          l1369 44E2  
                                        l1385 3980                                          l4114 5058  
                                        l4106 504C                                          l1378 4E34  
                                        l1386 39F4                                          l1642 5390  
                                        l2362 58E0                                          l1395 3B2E  
                                        l1299 3D10                                          l4132 5946  
                                        l4116 505A                                          l4108 504E  
                                        l4204 62A4                                          l2348 5CA8  
                                        l1629 515E                                          l1477 4862  
                                        l4070 5A0C                                          l4118 505C  
                                        l4150 602C                                          l2294 5C28  
                                        l2278 5816                                          l1663 4A2A  
                                        l2367 58E8                                          l2279 581E  
                                        l4080 5A34                                          l4072 5A22  
                                        l4064 59F8                                          l4152 6030  
                                        l4144 600A                                          l4160 6270  
                                        l1672 5D90                                          l2297 5C30  
                                        l1657 543A                                          l2289 4B6E  
                                        l4090 5A3E                                          l4082 5A36  
                                        l4074 5A24                                          l4066 59FA  
                                        l4154 6032                                          l4146 6028  
                                        l4162 627C                                          l1843 4D52  
                                        l4092 5A40                                          l4084 5A38  
                                        l4076 5A2E                                          l4068 5A02  
                                        l4156 6034                                          l4148 602A  
                                        l4164 6282                                          l1668 4A70  
                                        l1836 4D32                                          l1853 4F04  
                                        l4086 5A3A                                          l4078 5A32  
                                        l4094 61EA                                          l4166 62BC  
                                        l4158 628C                                          l1926 253A  
                                        l1846 4EE4                                          l1695 496A  
                                        l1943 2654                                          l1935 280A  
                                        l1927 2528                                          l4088 5A3C  
                                        l4096 4FD2                                          l1952 2724  
                                        l1928 24EE                                          l7000 3C1E  
                                        l1953 2712                                          l4178 60F0  
                                        l4098 4FF2                                          l7010 3C56  
                                        l7002 3C24                                          l4188 62D4  
                                        l1980 2FF6                                          l7020 3CAA  
                                        l7012 3C6E                                          l7004 3C34  
                                        l1982 2E56                                          l7022 3CBA  
                                        l7014 3C84                                          l7006 3C40  
                                        ?_pad 0026                                          l1991 2E9C  
                                        l8000 2DE6                                          l1968 5B68  
                                        l1896 57AE                                          l7016 3C9A  
                                        l7008 3C46                                          l1993 2F14  
                                        l1985 2E1A                                          l1889 57A6  
                                        l1994 2F02                                          l8010 2E42  
                                        l8002 2DF6                                          l8100 28BC  
                                        l8020 2E82                                          l8012 2E44  
                                        l8004 2E0A                                          l7028 3CC6  
                                        l8110 2906                                          l8102 28C2  
                                        l8030 2EBE                                          l8022 2E8C  
                                        l8014 2E54                                          l8006 2E18  
                                        l7240 5A58                                          l8120 2962  
                                        l8112 2916                                          l8104 28E2  
                                        l6600 47A0                                          l8040 2F30  
                                        l8032 2ECC                                          l8024 2E9A  
                                        l8016 2E66                                          l8008 2E24  
                                        l8200 5B22                                          l9000 22D6  
                                        l7250 5A74                                          l7242 5A60  
                                        l8210 50AE                                          l8130 29A8  
                                        l8122 296E                                          l8114 2920  
                                        l8106 28F2                                          l6610 47E8  
                                        l6602 47B0                                          l8050 2F9C  
                                        l8042 2F3E                                          l8034 2EFA  
                                        l8018 2E7C                                          l8026 2EAC  
                                        l8202 5B34                                          l9010 2304  
                                        l6700 634E                                          l7252 5A78  
                                        l7244 5A64                                          l7236 5A44  
                                        l8220 50D4                                          l8212 50B6  
                                        l8140 2A16                                          l8132 29B8  
                                        l8124 297A                                          l8116 293A  
                                        l6620 482C                                          l6612 47F2  
                                        l6604 47C6                                          l9100 4DE8  
                                        l8060 2FEA                                          l8052 2FB6  
                                        l8044 2F68                                          l8028 2EBA  
                                        l9012 2332                                          l9004 22E4  
                                        l9020 57B8                                          l7254 5A80  
                                        l7246 5A68                                          l7238 5A54  
                                        l8230 510C                                          l8222 50DC  
                                        l8214 50BA                                          l8206 509C  
                                        l8150 2AB4                                          l8142 2A26  
                                        l8134 29C8                                          l8126 2988  
                                        l8118 2946                                          l8070 280C  
                                        l6614 4810                                          l6606 47CE  
                                        l6622 4832                                          l9102 4DF0  
                                        l9030 5EA0                                          l8062 2FEC  
                                        l8054 2FD2                                          l8038 2F24  
                                        l8046 2F6C                                          l9110 3988  
                                        l8310 49EA                                          l8302 496C  
                                        l9006 22F6                                          l9022 57C6  
                                        l7256 5A84                                          l7248 5A6C  
                                        l8240 5138                                          l8232 5112  
                                        l8224 50EE                                          l8216 50C8  
                                        l8208 50A0                                          l8160 2B0A  
                                        l8152 2AD2                                          l8144 2A46  
                                        l8136 29E6                                          l8128 2998  
                                        l8080 284A                                          l8072 281A  
                                        l9040 3EF6                                          l6624 4842  
                                        l6616 4820                                          l6608 47DA  
                                        l9104 4DFC                                          l9032 5E6C  
                                        l8056 2FD6                                          l8048 2F86  
                                        l9112 39FC                                          l7600 5918  
                                        l8320 4A6E                                          l8312 49F8  
                                        l8304 499C                                          l8400 4E54  
                                        l9024 57F4                                          l9200 5568  
                                        l8234 5128                                          l8226 50F6  
                                        l8242 513E                                          l8218 50D0  
                                        l8170 2B74                                          l8162 2B0E  
                                        l8154 2ADC                                          l8146 2A70  
                                        l8138 29F6                                          l8090 287C  
                                        l8082 285A                                          l8074 2828  
                                        l9042 3F06                                          l6626 4852  
                                        l6618 4822                                          l9026 5F08  
                                        l9106 4E1C                                          l8058 2FE4  
                                        l9130 3AB8                                          l9114 3A08  
                                        l9122 3A30                                          l6570 5FAC  
                                        l7602 592A                                          l7610 5942  
                                        l8250 52E2                                          l8314 4A0A  
                                        l8306 49AC                                          l8410 4ECC  
                                        l8402 4E5C                                          l9018 57B0  
                                        l9034 6174                                          l9210 56CE  
                                        l9202 556E                                          l6716 6358  
                                        l6900 5486                                          l8244 514E  
                                        l8236 5130                                          l8228 50FE  
                                        l8180 2BD6                                          l8172 2B80  
                                        l8164 2B1C                                          l8156 2AEA  
                                        l8148 2AA6                                          l8092 288A  
                                        l8084 2860                                          l8076 282A  
                                        l8340 48BA                                          l8332 4864  
                                        l9060 3FCC                                          l9052 3F84  
                                        l9044 3F14                                          l9028 5ED4  
                                        l7700 2480                                          l9140 3B0C  
                                        l9132 3AC0                                          l9116 3A10  
                                        l9124 3A72                                          l9108 393A  
                                        l6572 5FB0                                          l7604 592C  
                                        l7612 6314                                          l7620 55AE  
                                        l8420 5190                                          l8260 530E  
                                        l8252 52E6                                          l8316 4A18  
                                        l8308 49DA                                          l8324 5D5A  
                                        l8500 3720                                          l8412 4EDE  
                                        l8404 4E70                                          l9036 617E  
                                        l9212 56D2                                          l9204 56AA  
                                        l6830 6092                                          l6822 6068  
                                        l6910 549A                                          l6902 548A  
                                        l8246 5156                                          l8238 5132  
                                        l8190 2C3E                                          l8182 2BEA  
                                        l8174 2B8E                                          l8166 2B4A  
                                        l8158 2AFC                                          l8094 288C  
                                        l8086 2870                                          l8078 283A  
                                        l8342 48BC                                          l8334 487C  
                                        l9070 404C                                          l9062 3FD8  
                                        l9054 3F8C                                          l9046 3F5A  
                                        l6590 476A                                          l7710 24BA  
                                        l7702 2484                                          l7630 2358  
                                        l9142 3B1C                                          l9134 3ADC  
                                        l9126 3A90                                          l9118 3A1C  
                                        l6574 5FB2                                          l7606 593C  
                                        l7622 55CC                                          l7614 5580  
                                        l8430 51F4                                          l8422 519C  
                                        l8414 5160                                          l8510 3062  
                                        l8270 5346                                          l8262 5316  
                                        l8254 52F4                                          l8318 4A68  
                                        l8326 5D70                                          l8406 4E7E  
                                        l9150 61C4                                          l9214 571A  
                                        l9222 5738                                          l9206 56B0  
                                        l9230 4506                                          l6824 6078  
                                        l6840 60EA                                          l6832 60C4  
                                        l6680 633A                                          l6912 54A6  
                                        l6904 548E                                          l8192 2C40  
                                        l8184 2C04                                          l8176 2BB8  
                                        l8096 289C                                          l8088 2876  
                                        l8344 48CC                                          l9080 4094  
                                        l9072 404E                                          l9064 4014  
                                        l9056 3F98                                          l9048 3F70  
                                        l6592 477A                                          l9400 44C6  
                                        l7800 2740                                          l7720 250C  
                                        l7712 24D6                                          l7704 2488  
                                        l7640 2398                                          l7632 2366  
                                        l9320 32EC                                          l9136 3AE8  
                                        l9128 3A9C                                          l9304 3EA8  
                                        l6576 5FC2                                          l6568 5FA6  
                                        l7608 5940                                          l7624 5602  
                                        l7616 5592                                          l8432 5208  
                                        l8424 51B0                                          l8416 516E  
                                        l8520 30BA                                          l8512 3070  
                                        l8504 2FF8                                          l8280 5380  
                                        l8272 535C                                          l8264 5328  
                                        l8256 52FC                                          l8328 5D80  
                                        l8440 4A72                                          l8408 4EAC  
                                        l9152 61D2                                          l9216 5722  
                                        l9208 56C6                                          l9160 575E  
                                        l9240 4550                                          l9232 4518  
                                        l6826 6084                                          l6850 6064  
                                        l6842 603A                                          l6834 60D8  
                                        l6682 6330                                          l6914 54B2  
                                        l6906 5492                                          l8186 2C20  
                                        l8194 2C46                                          l8178 2BBC  
                                        l8098 28AC                                          l8370 494A  
                                        l8354 48F6                                          l8346 48D0  
                                        l8338 4890                                          l9082 4096  
                                        l9074 4052                                          l9066 4020  
                                        l9058 3FCA                                          l6594 477E  
                                        l6586 4758                                          l9090 4D8C  
                                        l9402 44CE                                          l7810 27AA  
                                        l7802 274E                                          l7730 2558  
                                        l7722 251A                                          l7714 24E6  
                                        l7706 248C                                          l7650 23CA  
                                        l7642 239A                                          l7634 2368  
                                        l9330 3344                                          l9322 3302  
                                        l9138 3B04                                          l7618 55A4  
                                        l8426 51C4                                          l8418 5182  
                                        l8530 30E6                                          l8522 30C8  
                                        l8514 3072                                          l8506 3018  
                                        l8282 5388                                          l8274 5364  
                                        l8266 5330                                          l8258 5300  
                                        l8290 53D0                                          l8442 4A92  
                                        l8610 121A                                          l8602 11CA  
                                        l9218 5732                                          l9170 5798  
                                        l9162 5766                                          l9154 573C  
                                        l9410 4F34                                          l9250 45A4  
                                        l9242 4564                                          l9234 452A  
                                        l9226 44E4                                          l6828 608E  
                                        l6844 604A                                          l6852 5D92  
                                        l6836 60DC                                          l6860 5A8E  
                                        l6684 6344                                          l6676 6326  
                                        l6916 54DA                                          l6908 5496  
                                        l8196 2C4A                                          l8188 2C30  
                                        l8372 495A                                          l8364 491E  
                                        l8356 4900                                          l8348 48DE  
                                        l9076 4076                                          l9068 402E  
                                        l6596 478C                                          l6588 475C  
                                        l9092 4D94                                          l9404 44DA  
                                        l7820 27E4                                          l7812 27CA  
                                        l7804 2788                                          l7740 2598  
                                        l7724 251C                                          l7716 24FC  
                                        l7708 2490                                          l7660 23F2  
                                        l7652 23CC                                          l7636 2378  
                                        l7644 23A2                                          l7628 234A  
                                        l9340 3398                                          l9332 3350  
                                        l9324 3306                                          l7900 4242  
                                        l8436 5BF2                                          l8428 51C8  
                                        l8540 31F6                                          l8532 3168  
                                        l8524 30CE                                          l8516 308C  
                                        l8508 3042                                          l8276 536A  
                                        l8268 5338                                          l8292 53FE  
                                        l8444 4AD0                                          l8452 4B10  
                                        l8700 15F0                                          l8620 129E  
                                        l8604 11DC                                          l8380 4C8E  
                                        l9172 579A                                          l9164 5774  
                                        l9156 5744                                          l9420 4FBE  
                                        l9412 4F6A                                          l9260 45FA  
                                        l9252 45B2                                          l9244 4576  
                                        l9236 4534                                          l9228 44FC  
                                        l9180 54FC                                          l6846 6056  
                                        l6854 5DA6                                          l6838 60DE  
                                        l6870 5AC6                                          l6862 5AA2  
                                        l6678 631C                                          l8366 492A  
                                        l8358 490A                                          l9078 4086  
                                        l6598 479C                                          l6790 5634  
                                        l9094 4DA0                                          l9086 4D54  
                                        l7822 27EA                                          l7814 27CE  
                                        l7806 278A                                          l7750 25C2  
                                        l7742 25A4                                          l7734 256C  
                                        l7726 2526                                          l7718 2508  
                                        l7670 242C                                          l7662 2402  
                                        l7654 23D2                                          l7646 23B2  
                                        l7638 2388                                          l9350 3466  
                                        l9342 33AE                                          l9334 336A  
                                        l9326 3322                                          l9318 32DE  
                                        l9270 3D7C                                          l7910 42B2  
                                        l7902 4262                                          l8438 5C0C  
                                        l7830 5B6A                                          l8550 3268  
                                        l8542 3214                                          l8534 3170  
                                        l8526 30D6                                          l8518 30A8  
                                        l8278 5370                                          l8294 540E  
                                        l8286 5392                                          l8454 4B22  
                                        l8446 4AF8                                          l8462 5820  
                                        l8470 58C0                                          l8710 16D8  
                                        l8702 15F8                                          l8622 12B0  
                                        l8606 11F8                                          l8614 1242  
                                        l8390 4CF8                                          l8382 4C96  
                                        l9174 57A0                                          l9166 577A  
                                        l9158 5756                                          l9422 4FC8  
                                        l9414 4F78                                          l9406 4F06  
                                        l9262 4612                                          l9246 458C  
                                        l9254 45B8                                          l9238 454C  
                                        l9190 551C                                          l9430 4670  
                                        l6696 636C                                          l6848 6060  
                                        l6856 5DAA                                          l6872 5AD2  
                                        l6864 5AA6                                          l6880 545C  
                                        l8368 493A                                          l6792 5644  
                                        l9088 4D70                                          l9096 4DB0  
                                        l7824 27F8                                          l7816 27DC  
                                        l7808 279A                                          l7760 2634  
                                        l7744 25A8                                          l7736 257C  
                                        l7728 2548                                          l7752 25C8  
                                        l7680 2458                                          l7672 243E  
                                        l7664 2412                                          l7656 23E0  
                                        l7648 23B8                                          l9344 33B2  
                                        l9336 3380                                          l9328 333C  
                                        l9360 347E                                          l9272 3D98  
                                        l9280 3DCC                                          l7920 432A  
                                        l7912 42BA                                          l7904 4266  
                                        l7832 5B76                                          l7840 5C7C  
                                        l8560 32A2                                          l8552 3276  
                                        l8544 322E                                          l8536 3176  
                                        l8528 30E0                                          l8296 5432  
                                        l8288 53C0                                          l8448 4B04  
                                        l8480 3594                                          l8464 5830  
                                        l8472 58D2                                          l8800 1B42  
                                        l8720 1798                                          l8712 170C  
                                        l8704 1608                                          l8640 139A  
                                        l8624 12CC                                          l8616 1268  
                                        l8632 1316                                          l8608 1210  
                                        l8392 4D18                                          l8384 4CAA  
                                        l8376 4C64                                          l9168 5790  
                                        l9424 4FCC                                          l9416 4F8C  
                                        l9408 4F1E                                          l9264 461A  
                                        l9256 45CE                                          l9248 459A  
                                        l9192 5522                                          l9176 54E0  
                                        l9440 46CC                                          l9432 4674  
                                        l6698 6362                                          l6858 5DC4  
                                        l6866 5AC0                                          l6890 5472  
                                        l6882 5462                                          l6874 543C  
                                        l6794 5674                                          l6786 5616  
                                        l9098 4DCC                                          l7826 27FA  
                                        l7818 27E2                                          l7770 268E  
                                        l7754 25EE                                          l7762 2644  
                                        l7746 25B6                                          l7738 258A  
                                        l7690 246C                                          l7682 245C  
                                        l7674 244C                                          l7666 2414  
                                        l7658 23E2                                          l9370 3512  
                                        l9354 3472                                          l9346 33C8  
                                        l9338 3388                                          l9362 34C8  
                                        l9610 3EBC                                          l9290 3E5C  
                                        l9282 3E0C                                          l9274 3DA4  
                                        l9266 3D12                                          l7922 433C  
                                        l7914 42CE                                          l7906 4274  
                                        l7594 58EC                                          l7834 5B88  
                                        l7842 5C80                                          l8554 327C  
                                        l8562 32B4                                          l8546 3248  
                                        l8538 31DA                                          l8298 5438  
                                        l8458 4B66                                          l8490 3664  
                                        l8482 35A8                                          l8466 588A  
                                        l8810 1B86                                          l8802 1B54  
                                        l8730 1832                                          l8722 17AC  
                                        l8706 161C                                          l8714 1712  
                                        l8642 13A0                                          l8650 146C  
                                        l8634 1330                                          l8626 12E4  
                                        l8570 10CE                                          l8394 4D1A  
                                        l8386 4CB8                                          l8378 4C70  
                                        l9418 4FA0                                          l9258 45EC  
                                        l9194 5532                                          l9186 5506  
                                        l9178 54F2                                          l9450 46FE  
                                        l9442 46D4                                          l9434 4678  
                                        l9426 4632                                          l6868 5AC4  
                                        l6892 5476                                          l6884 5466  
                                        l6876 5440                                          l6796 56A0  
                                        l6788 561E                                          l9380 43B6  
                                        l7780 26BE                                          l7772 2698  
                                        l7764 266A                                          l7756 2622  
                                        l7748 25B8                                          l7692 2470  
                                        l7684 2460                                          l7676 2450  
                                        l7668 241C                                          l9364 34E6  
                                        l9348 345A                                          l7940 2C8A  
                                        l7932 2C5C                                          l9612 3A44  
                                        l9292 3E6E                                          l9284 3E20  
                                        l9276 3DC0                                          l9268 3D20  
                                        l7860 40DE                                          l7852 40A8  
                                        l7916 42DC                                          l7924 4342  
                                        l7908 4294                                          l7596 58EC  
                                        l7836 5B8C                                          l7844 5C9C  
                                        l8556 328E                                          l8548 3256  
                                        l8484 35B6                                          l8492 3698  
                                        l8476 351C                                          l8820 1BC6  
                                        l8812 1B98                                          l8804 1B62  
                                        l8732 188A                                          l8740 18DA  
                                        l8724 17DE                                          l8716 1730  
                                        l8708 1680                                          l8660 14AC  
                                        l8652 147C                                          l8644 13FC  
                                        l8628 12EE                                          l8580 111A  
                                        l8572 10DC                                          l8396 4D2C  
                                        l8388 4CCA                                          l8900 38CE  
                                        l6980 3B30                                          l9196 5538  
                                        l9188 5510                                          l9460 473E  
                                        l9452 470E                                          l9444 46DA  
                                        l9436 46C0                                          l9428 465E  
                                        l6894 547A                                          l6886 546A  
                                        l6878 544C                                          l9390 446E  
                                        l9382 43C2                                          l7790 26E6  
                                        l7782 26C2                                          l7774 26A6  
                                        l7766 267A                                          l7758 2624  
                                        l7694 2474                                          l7686 2464  
                                        l7678 2454                                          l9366 34EE  
                                        l9614 3492                                          l7950 2CC4  
                                        l7942 2C9A                                          l7934 2C6A  
                                        l9286 3E34                                          l7870 413A  
                                        l7862 40EC                                          l7854 40AC  
                                        l7926 4352                                          l7918 430A  
                                        l7598 590C                                          l7838 5C70  
                                        l8558 329A                                          l8494 36D4  
                                        l8478 353C                                          l8830 1C0E  
                                        l8822 1BCE                                          l8814 1BA0  
                                        l8806 1B72                                          l8750 1990  
                                        l8742 18EA                                          l8734 188E  
                                        l8726 17EE                                          l8718 1764  
                                        l8670 14F0                                          l8662 14C6  
                                        l8654 1480                                          l8646 1430  
                                        l8638 1366                                          l8590 1160  
                                        l8582 112C                                          l8574 10E4  
                                        l8566 10B4                                          l8910 4B70  
                                        l8398 4E36                                          l8902 38E8  
                                        l9606 3CDA                                          l6990 3BBA  
                                        l6982 3B34                                          l9198 5554  
                                        l9462 4742                                          l9454 4722  
                                        l9446 46EC                                          l9438 46C4  
                                        l9470 6236                                          l6896 547E  
                                        l6888 546E                                          l9392 4472  
                                        l9384 443E                                          l9376 4394  
                                        l7792 26F4                                          l7784 26D2  
                                        l7776 26A8                                          l7696 2478  
                                        l7688 2468                                          l9368 350A  
                                        l7960 2CF0                                          l7952 2CCA  
                                        l7944 2CAA                                          l7936 2C78  
                                        l9296 3E82                                          l9288 3E48  
                                        l9608 3DE2                                          l7880 41A4  
                                        l7872 4142                                          l7864 410C  
                                        l7856 40BA                                          l7928 4372  
                                        l8496 36E8                                          l8488 3628  
                                        l7848 5D22                                          l8840 1C64  
                                        l8832 1C2A                                          l8824 1BD6  
                                        l8816 1BB0                                          l8808 1B76  
                                        l8752 199E                                          l8760 19DA  
                                        l8744 18FC                                          l8736 18C2  
                                        l8728 17FE                                          l8672 1502  
                                        l8680 1560                                          l8656 1492  
                                        l8664 14DE                                          l8648 1438  
                                        l8592 1164                                          l8584 113A  
                                        l8576 1108                                          l8568 10BE  
                                        l8920 4BD0                                          l8912 4B9A  
                                        l8904 3902                                          l6984 3B78  
                                        l6992 3BC0                                          l9464 4746  
                                        l9448 46F0                                          l9472 6238  
                                        l6898 5482                                          l9394 4482  
                                        l9386 4452                                          l9378 43B6  
                                        l7794 270A                                          l7778 26B6  
                                        l7786 26D4                                          l7698 247C  
                                        l7970 2D2A                                          l7962 2D00  
                                        l7954 2CD0                                          l7946 2CAC  
                                        l7938 2C7A                                          l9298 3E94  
                                        l7890 41EE                                          l7882 41C4  
                                        l7874 4156                                          l7866 4110  
                                        l7858 40DA                                          l8498 3710  
                                        l8850 1CA2                                          l8842 1C6A  
                                        l8834 1C32                                          l8826 1BE2  
                                        l8818 1BB8                                          l8770 1A16  
                                        l8762 19EE                                          l8754 19B2  
                                        l8746 1908                                          l8738 18D6  
                                        l8690 159E                                          l8682 1568  
                                        l8674 151E                                          l8658 14A4  
                                        l8594 1168                                          l8586 114C  
                                        l8578 1112                                          l8922 4BF2  
                                        l8906 3910                                          l8930 1D62  
                                        l6994 3BDC                                          l6986 3B94  
                                        l9466 474A                                          l9458 473A  
                                        l9474 6246                                          l9396 449E  
                                        l9388 445A                                          l7788 26E2  
                                        l7972 2D40                                          l7964 2D10  
                                        l7956 2CDE                                          l7948 2CB4  
                                        l7892 420E                                          l7884 41C6  
                                        l7876 4164                                          l7868 411C  
                                        l8860 1CF4                                          l8852 1CA8  
                                        l8844 1C7C                                          l8828 1BE8  
                                        l8836 1C38                                          l8772 1A22  
                                        l8764 19FC                                          l8780 1A42  
                                        l8756 19C4                                          l8748 192C  
                                        l8692 15B0                                          l8684 157A  
                                        l8676 1554                                          l8588 1158  
                                        l8596 116E                                          l8924 4C04  
                                        l8916 4BA6                                          l8940 1DE2  
                                        l8932 1D90                                          l6996 3BF8  
                                        l6988 3BAC                                          l9468 6232  
                                        l9398 44AA                                          l7798 2734  
                                        l7990 2D94                                          l7974 2D50  
                                        l7982 2D70                                          l7966 2D12  
                                        l7958 2CE0                                          l7886 41D8  
                                        l7878 4176                                          l8862 1D00  
                                        l8854 1CAE                                          l8846 1C88  
                                        l8838 1C4A                                          l8870 1D3C  
                                        l8790 1AC8                                          l8782 1A54  
                                        l8774 1A32                                          l8766 1A0C  
                                        l8758 19D2                                          l8694 15BE  
                                        l8686 158C                                          l8678 155C  
                                        l8598 1194                                          l8926 4C36  
                                        l8918 4BB4                                          l8950 1EB0  
                                        l8942 1DF2                                          l8934 1DA2  
                                        l6998 3C10                                          l7992 2DAE  
                                        l7984 2D80                                          l7976 2D58  
                                        l7968 2D1A                                          l7888 41DE  
                                        l7896 4230                                          l8864 1D08  
                                        l8848 1C90                                          l8792 1AFC  
                                        l8784 1A66                                          l8776 1A36  
                                        l8768 1A10                                          l8696 15D6  
                                        l8688 159A                                          l8880 375C  
                                        l8960 1F84                                          l8952 1EDE  
                                        l8944 1E32                                          l8936 1DB2  
                                        l7994 2DBE                                          l7986 2D80  
                                        l7978 2D5C                                          l7898 4234  
                                        l8866 1D1A                                          l8858 1CE2  
                                        l8794 1B04                                          l8786 1A6A  
                                        l8778 1A3C                                          l8698 15E8  
                                        l8890 382A                                          l8882 379A  
                                        l8874 3732                                          l8962 1FA6  
                                        l8970 2028                                          l8954 1F3A  
                                        l8946 1E42                                          l8938 1DB6  
                                        l7996 2DCE                                          l8868 1D20  
                                        l8788 1A70                                          l8796 1B08  
                                        l8892 3832                                          l8884 37A4  
                                        l8876 3740                                          l8980 2138  
                                        l8972 2056                                          l8964 1FB8  
                                        l8948 1E82                                          l7998 2DDE  
                                        l8798 1B26                                          l8894 3838  
                                        l8886 37AE                                          l8878 3742  
                                        l8990 224A                                          l8982 2190  
                                        l8966 1FFC                                          l8958 1F72  
                                        STR_1 1095                                          l8888 37B4  
                                        l8896 389C                                          l8976 20DE  
                                        STR_2 1048                                          STR_3 101B  
                                        l8898 38B0                                          l8994 2282  
                                        l8978 20F0                                          l8986 21BC  
                                        STR_4 1001                                          STR_5 1033  
                                        l8996 22B0                                          l8988 21EA  
                                        STR_6 105C                                          STR_7 107A  
                                        l8998 22C2                                          STR_8 1088  
                                        STR_9 106C                                          _LATA 003FBA  
                                        _LATB 003FBB                                          _LATC 003FBC  
                                        _LATD 003FBD                                          _LATE 003FBE  
                                        _T2PR 003FAB                                          _T4PR 003F9F  
                                        _PMD0 0039C0                                          _PMD1 0039C1  
                                        _PMD2 0039C2                                          _PMD3 0039C3  
                                        u8000 5BAC                                          _PMD4 0039C4  
                                        u8001 5BA8                                          _PMD5 0039C5  
                                        u8010 5C9C                                          _PMD6 0039C6  
                                        u8011 5C98                                          _PMD7 0039C7  
                                        u6500 4842                                          u8100 41EE  
                                        u8020 5D52                                          u6501 483E  
                                        u8101 41EA                                          u8021 5D4C  
                                        u8110 4242                                          u8030 5D54  
                                        u8111 423E                                          u8200 2CDE  
                                        u6440 5FC2                                          u8040 40BA  
                                        u8120 4274                                          u9000 4AD0  
                                        u2985 5A2C                                          u8201 2CDA  
                                        u6441 5FBE                                          u8041 40B6  
                                        u8121 4270                                          u9001 4ACC  
                                        u2986 5A2E                                          u6450 476A  
                                        u8210 2CF0                                          u8050 40EC  
                                        u8130 42B2                                          u9010 4AF8  
                                        u6451 4766                                          u8211 2CEC  
                                        u8051 40E8                                          u8131 42AE  
                                        u9011 4AF4                                          u6460 478C  
                                        u8300 2E9A                                          u8220 2D00  
                                        u8140 42DC                                          u9020 4B22  
                                        u9100 58D2                                          u6461 4788  
                                        u8301 2E96                                          u8221 2CFC  
                                        u8061 4116                                          u8141 42D8  
                                        u9021 4B1E                                          u9101 58CE  
                                        u6470 47C6                                          u6710 5634  
                                        u8310 2EBA                                          u8230 2D40  
                                        u8070 413A                                          u8150 430A  
                                        u9110 3566                                          u6471 47C2  
                                        u6711 5630                                          u8311 2EB6  
                                        u8231 2D3C                                          u8071 4136  
                                        u8151 4306                                          u8400 2828  
                                        u6480 47E8                                          u6720 5644  
                                        u8320 2ECC                                          u8240 2D80  
                                        u8080 4164                                          u8160 4352  
                                        u7600 5602                                          u9040 4B5C  
                                        u9200 3710                                          u9120 3594  
                                        u8401 2824                                          u6481 47E4  
                                        u6721 5640                                          u8321 2EC8  
                                        u8241 2D7C                                          u8081 4160  
                                        u8161 434E                                          u7601 55FE  
                                        u9041 4B56                                          u9201 370C  
                                        u9121 3590                                          u8410 283A  
                                        u6490 4810                                          u7610 2366  
                                        u8330 2EFA                                          u8250 2DF6  
                                        u8170 2C78                                          u8090 41A4  
                                        u9210 302A                                          u9050 4B5E  
                                        u9130 35B6                                          u6810 3B78  
                                        u8411 2836                                          u6491 480C  
                                        u7611 2362                                          u8331 2EF6  
                                        u8251 2DF2                                          u8171 2C74  
                                        u8091 41A0                                          u9211 3024  
                                        u9035 4B34                                          u9131 35B2  
                                        u9115 355C                                          u6811 3B74  
                                        u8500 2B0A                                          u8420 284A  
                                        u7700 24BA                                          u7620 2378  
                                        u8340 2F10                                          u8260 2E18  
                                        u8180 2C8A                                          u7540 58FC  
                                        u9300 322E                                          u9220 302C  
                                        u9060 5876                                          u6900 3C84  
                                        u6820 3B94                                          u8501 2B06  
                                        u8421 2846                                          u7701 24B6  
                                        u7621 2374                                          u8341 2F0C  
                                        u8261 2E14                                          u8181 2C86  
                                        u7541 58F8                                          u9301 322A  
                                        u6901 3C80                                          u6821 3B90  
                                        u8510 2B1C                                          u8430 288A  
                                        u7710 24D2                                          u7630 2388  
                                        u8350 2F24                                          u8270 2E42  
                                        u8190 2C9A                                          u7550 590C  
                                        u9310 3248                                          u9230 3042  
                                        u9150 3624                                          u9070 5888  
                                        u6910 3C9A                                          u6830 3BAC  
                                        u8511 2B18                                          u8431 2886  
                                        u7711 24CC                                          u7631 2384  
                                        u8351 2F20                                          u8271 2E3E  
                                        u8191 2C96                                          u7551 5908  
                                        u9311 3244                                          u9231 303E  
                                        u9151 3620                                          u9071 5884  
                                        u6911 3C96                                          u6831 3BA8  
                                        u8600 50C8                                          u8520 2B4A  
                                        u8440 289C                                          u7800 25B6  
                                        u7720 24D4                                          u7640 23CA  
                                        u8360 2F3E                                          u8280 2E66  
                                        u7560 593C                                          u9320 3256  
                                        u9240 3070                                          u9160 3648  
                                        u9080 58BA                                          u9400 1194  
                                        u6920 3CBA                                          u6840 3BDC  
                                        u8601 50C4                                          u8521 2B46  
                                        u8441 2898                                          u7801 25B2  
                                        u7641 23C6                                          u8361 2F3A  
                                        u8281 2E62                                          u7561 5938  
                                        u9321 3252                                          u9241 306C  
                                        u9145 35CA                                          u9081 58B4  
                                        u9401 1190                                          u6921 3CB6  
                                        u6841 3BD8                                          u8610 50EE  
                                        u8530 2B60                                          u8450 28AC  
                                        u7810 25EE                                          u7730 24FC  
                                        u7650 23E0                                          u8370 2F86  
                                        u8290 2E7C                                          u7570 5592  
                                        u9330 3268                                          u9250 308C  
                                        u9170 3664                                          u9146 35D4  
                                        u9090 58BC                                          u9410 11C4  
                                        u6850 3BF8                                          u8611 50EA  
                                        u8531 2B5C                                          u8451 28A8  
                                        u7811 25EA                                          u7731 24F8  
                                        u7651 23DC                                          u8371 2F82  
                                        u8291 2E78                                          u7571 558E  
                                        u9331 3264                                          u9251 3088  
                                        u9171 3660                                          u9147 35E4  
                                        u9067 5868                                          u9411 11BE  
                                        u6851 3BF4                                          u8620 510C  
                                        u8540 2B74                                          u8460 28E2  
                                        u7900 270A                                          u7820 2634  
                                        u7740 251A                                          u7660 23F2  
                                        u8380 2FB6                                          u7580 55A4  
                                        u9340 3276                                          u9260 30BA  
                                        u8700 5380                                          u9180 36B8  
                                        u9500 146C                                          u9420 11C6  
                                        u6860 3C10                                          u8621 5108  
                                        u8541 2B70                                          u8461 28DE  
                                        u7901 2706                                          u7821 2630  
                                        u7741 2516                                          u7661 23EE  
                                        u8381 2FB2                                          u7581 55A0  
                                        u9341 3272                                          u9261 30B6  
                                        u8701 537C                                          u9165 363E  
                                        u9501 1468                                          u6861 3C0C  
                                        u8630 5128                                          u8550 2B8E  
                                        u8470 28F2                                          u7910 2720  
                                        u7830 266A                                          u7750 253A  
                                        u7670 2402                                          u8390 2FE4  
                                        u7590 55CC                                          u9350 328E  
                                        u9270 30C8                                          u8710 53C0  
                                        u9190 36D4                                          u9510 1492  
                                        u9430 11DC                                          u6870 3C34  
                                        u8631 5124                                          u8551 2B8A  
                                        u8471 28EE                                          u7911 271C  
                                        u7831 2666                                          u7751 2536  
                                        u7671 23FE                                          u8391 2FE0  
                                        u7591 55C8                                          u9351 328A  
                                        u9271 30C4                                          u8711 53BC  
                                        u9191 36D0                                          u9511 148E  
                                        u9431 11D8                                          u6871 3C30  
                                        u8640 514E                                          u8560 2BD6  
                                        u8480 2A90                                          u8800 487C  
                                        u7920 2734                                          u7840 267A  
                                        u7760 2548                                          u7680 243E  
                                        u9280 31F6                                          u8720 53FE  
                                        u9600 159A                                          u9520 14A4  
                                        u9440 1268                                          u9360 10DC  
                                        u6880 3C56                                          u8641 514A  
                                        u8561 2BD2                                          u8801 4878  
                                        u7921 2730                                          u7841 2676  
                                        u7761 2544                                          u7681 243A  
                                        u9281 31F2                                          u8721 53FA  
                                        u9185 36AE                                          u9601 1596  
                                        u9521 14A0                                          u9441 1264  
                                        u9361 10D8                                          u6881 3C52  
                                        u8570 2C04                                          u8490 2AEA  
                                        u8810 48B0                                          u7930 274E  
                                        u7850 26A6                                          u7770 2558  
                                        u7690 244C                                          u9290 3214  
                                        u8650 52F4                                          u8730 5432  
                                        u9610 15B0                                          u9530 14C6  
                                        u9450 1298                                          u9370 112C  
                                        u6890 3C6E                                          u8571 2C00  
                                        u8491 2AE6                                          u7931 274A  
                                        u7851 26A2                                          u7771 2554  
                                        u7691 2448                                          u9291 3210  
                                        u8651 52F0                                          u8731 542E  
                                        u9611 15AC                                          u9531 14C2  
                                        u9451 1292                                          u9371 1128  
                                        u6891 3C6A                                          u8580 2C3E  
                                        u8820 48DE                                          u7940 2788  
                                        u7860 26B6                                          u7780 258A  
                                        u8660 530E                                          u8740 499C  
                                        u9700 18FC                                          u9620 15BE  
                                        u9540 14EC                                          u9460 129A  
                                        u9380 113A                                          u8900 4CF8  
                                        u8581 2C3A                                          u8485 2A86  
                                        u8821 48DA                                          u7941 2784  
                                        u7861 26B2                                          u7781 2586  
                                        u8661 530A                                          u8741 4998  
                                        u9701 18F8                                          u9621 15BA  
                                        u9541 14E8                                          u9381 1136  
                                        u8901 4CF4                                          u8590 50AE  
                                        u8830 48F2                                          u7950 279A  
                                        u7870 26D2                                          u7790 2598  
                                        u8670 5328                                          u8750 49DA  
                                        u9710 199E                                          u9630 15E8  
                                        u9550 1502                                          u9470 12B0  
                                        u9390 114C                                          u8910 4E54  
                                        u8591 50AA                                          u8831 48EE  
                                        u8815 48A6                                          u7951 2796  
                                        u7871 26CE                                          u7791 2594  
                                        u8671 5324                                          u8751 49D6  
                                        u9711 199A                                          u9631 15E4  
                                        u9551 14FE                                          u9471 12AC  
                                        u9391 1148                                          u8911 4E50  
                                        u8840 491A                                          u7960 27AA  
                                        u7880 26E2                                          u8680 5346  
                                        u8760 49F8                                          u9800 1B54  
                                        u9720 19B2                                          u9640 1730  
                                        u9560 151E                                          u9480 1362  
                                        u8920 4E7E                                          u8841 4916  
                                        u7961 27A6                                          u7881 26DE  
                                        u8681 5342                                          u8761 49F4  
                                        u9801 1B50                                          u9721 19AE  
                                        u9641 172C                                          u9561 151A  
                                        u9481 135E                                          u8921 4E7A  
                                        u8850 493A                                          u7970 27CA  
                                        u7890 26F4                                          u8690 535C  
                                        u8770 4A18                                          u9810 1B62  
                                        u9730 19C4                                          u9650 1798  
                                        u9570 1554                                          u9490 13F8  
                                        u8930 4EAC                                          u8851 4936  
                                        u7971 27C6                                          u7891 26F0  
                                        u8691 5358                                          u8771 4A14  
                                        u9811 1B5E                                          u9731 19C0  
                                        u9651 1794                                          u9571 1550  
                                        u9491 13F4                                          u8931 4EA8  
                                        u8860 494A                                          u7980 27DC  
                                        u8940 516E                                          u8780 4A68  
                                        u9820 1B98                                          u9740 19D2  
                                        u9660 17DE                                          u9580 157A  
                                        u9900 3740                                          u8861 4946  
                                        u7981 27D8                                          u8941 516A  
                                        u8781 4A64                                          u9821 1B94  
                                        u9741 19CE                                          u9661 17DA  
                                        u9581 1576                                          u9901 373C  
                                        u7990 27F8                                          u8950 5190  
                                        u8790 5D70                                          u9830 1BC6  
                                        u9750 19EE                                          u9670 17EE  
                                        u9590 158C                                          u9910 375C  
                                        u7991 27F4                                          u8951 518C  
                                        u8791 5D6C                                          u9831 1BC2  
                                        u9751 19EA                                          u9671 17EA  
                                        u9591 1588                                          u8871 4C6A  
                                        u9911 3758                                          u8960 51E6  
                                        u9840 1C4A                                          u9760 19FC  
                                        u9680 188A                                          u8880 4C8E  
                                        u9920 38B0                                          u8961 51E2  
                                        u9841 1C46                                          u9761 19F8  
                                        u9681 1886                                          u8881 4C8A  
                                        u9921 38AC                                          u8970 51F4  
                                        u9850 1C64                                          u9770 1A54  
                                        u9690 18D6                                          u8890 4CB8  
                                        u9930 38CE                                          u8971 51F0  
                                        u9851 1C60                                          u9771 1A50  
                                        u9691 18D2                                          u8891 4CB4  
                                        u9931 38CA                                          u8980 5C0C  
                                        u9860 1C7C                                          u9780 1B26  
                                        u9940 38E8                                          u8981 5C08  
                                        u9861 1C78                                          u9781 1B22  
                                        u9941 38E4                                          u8990 4AB2  
                                        u9870 1CDC                                          u9790 1B42  
                                        u9950 3902                                          u9871 1CD6  
                                        u9791 1B3E                                          u9951 38FE  
                                        u9880 1CDE                                          u9960 3910  
                                        u9961 390C                                          u9890 1CF4  
                                        u9970 4B9A                                          _TMR2 003FAA  
                                        u8995 4AA8                                          u9891 1CF0  
                                        u9971 4B96                                          u9980 4BD0  
                                        _TMR4 003F9E                                          u9981 4BCC  
                                        u9990 4BF2                                          u9991 4BEE  
                                        _WPUA 003A41                                          _WPUB 003A51  
                                        _WPUC 003A61                                          _WPUD 003A71  
                                        _WPUE 003A81                           ?_UART1_Transmit_ISR 0001  
                                        abs@a 0026                                          _dbuf 013E  
                                        _main 6232                                          _dtoa 2FF8  
                                        _loop 4632                                          _prec 003C  
                                        _nout 0128                                          pad@i 002D  
                                        pad@p 002A                                          fsr1h 003FE2  
                                        fsr2h 003FDA                                          indf1 003FE7  
                                        indf2 003FDF                                          fsr1l 003FE1  
                                        pad@w 002F                                          fsr2l 003FD9  
                                        _utoa 3732                                 ___fpclassifyf 4A72  
                                        prodh 003FF4                                          prodl 003FF3  
                                        start 00AE                               _timer5ReloadVal 0194  
                             ___fldiv@new_exp 0065                               _TMR3_Initialize 5D92  
                             _PWM5_Initialize 62D4                             ??_CLC3_Initialize 0014  
               ??_UART1_SetTxInterruptHandler 0016                                  _tolower$3693 0020  
                  ??_TMR4_SetInterruptHandler 0016                             _UART1_rx_vect_isr 5CE8  
                                ___param_bank 000000                    __end_of_PWM5_LoadDutyValue 5ED4  
                          ?_UART1_rx_vect_isr 0001                                         ??_abs 0028  
                                       ??_pad 002C                __size_of_OSCILLATOR_Initialize 0018  
                        ??_UART1_Transmit_ISR 0011                 __end_of_OSCILLATOR_Initialize 6304  
                               ___fltol@sign1 0081                               __end_of___aldiv 4864  
                             __end_of___aodiv 4230                                         _ADCAP 003EF5  
                                       _ADACT 003EFE                       __end_of_CCP3_Initialize 6096  
                             __end_of___fladd 280C                                         ?_main 0001  
                                       ?_dtoa 0060                                         _ADCLK 003EFF  
                             __end_of___aomod 4394                                         _ADCNT 003EEB  
                                       _ADPCH 003EF1                               __end_of___fldiv 2FF8  
                                       _ADREF 003EFD                               __end_of___awdiv 5160  
                             __end_of___flneg 5D92                                         ?_loop 0001  
                                       STR_10 10A0                                         STR_11 10A8  
                                       STR_20 10B0                                         STR_14 10A4  
                                       STR_15 10AC                                         STR_18 10B0  
                             __end_of___awmod 5392                                         _ADRPT 003EEC  
                      ??_CCP4_DefaultCallBack 0007                               __end_of___flmul 2C5C  
                    TMR5_ReadTimer@readValLow 0010                               __end_of___flsub 5B6A  
                             __end_of___fltol 496C                                         u10000 4C04  
                                       u10001 4C00                                         u10010 4C36  
                                       u10011 4C32                                         u10100 20DA  
                                       u10020 1D90                                         u10021 1D8C  
                                       u10110 20F0                                         u10030 1DF2  
                                       u10111 20EC                                         u10031 1DEE  
                                       ?_utoa 0060                                         u10200 3F14  
                                       u10120 21EA                                         u10040 1E42  
                                       u10201 3F10                                         u10121 21E6  
                                       u10041 1E3E                                         u10210 3F70  
                                       u10130 22B0                                         u10050 1EB0  
                                       u10211 3F6C                                         u10131 22AC  
                                       u10051 1EAC                                         u10220 3FC6  
                                       u10300 4D8C                                         u10060 1EDE  
                                       u10140 5816                                         u10221 3FC2  
                                       u10301 4D88                                         u10061 1EDA  
                                       u10141 5812                                         u10230 4010  
                                       u10310 4DCC                                         u10070 1F84  
                                       u10231 400C                                         u10311 4DC8  
                                       u10071 1F80                                         u10240 402E  
                                       u10320 4DE8                                         u10080 2056  
                                       u10400 5532                                         u10241 402A  
                                       u10321 4DE4                                         u10081 2052  
                                       u10401 552E                                         u10250 403E  
                                       u10330 3A90                                         u10090 20D8  
                                       u10410 5554                                         u10251 403A  
                                       u10155 5F2C                                         u10331 3A8C  
                                       u10091 20D2                                         u10411 5550  
                                       u10260 404C                                         u10340 3AB8  
                                       u10500 4576                                         u10420 557E  
                                       u10261 4048                                         u10165 5EF8  
                                       u10341 3AB4                                         u10501 4572  
                                       u10421 557A                                         u10270 4086  
                                       u10190 3F06                                         u10350 3ADC  
                                       u10430 56C6                                         u10510 458C  
                                       u10271 4082                                         u10191 3F02  
                                       u10175 5EC4                                         u10351 3AD8  
                                       u10431 56C2                                         u10511 4588  
                                       u10280 4094                                         u10600 3322  
                                       u10360 3B04                                         u10440 571A  
                                       u10520 45CE                                         u10281 4090  
                                       u10601 331E                                         u10185 5E90  
                                       u10361 3B00                                         u10441 5716  
                                       u10521 45CA                                         u10290 4D70  
                                       u10610 333C                                         u10370 5756  
                                       u10530 45EC                                         u10450 44FC  
                                       u10291 4D6C                                         u10611 3338  
                             __end_of___lodiv 4D54                                         u10371 5752  
                                       u10531 45E8                                         u10451 44F8  
                                       u10700 449E                                         u10620 336A  
                                       u10380 5774                                         u10540 4612  
                                       u10460 4518                               ___awdiv@divisor 0016  
                                       u10701 449A                                         u10621 3366  
                                       u10381 5770                                         u10541 460E  
                                       u10461 4514                                         u10710 44C6  
                                       u10630 3380                                         u10550 3D98  
                                       u10390 5790                                         u10470 452A  
                                       u10711 44C2                                         u10631 337C  
                                       u10551 3D94                                         u10391 578C  
                                       u10471 4526                                         u10640 33AE  
                                       u10560 3DC0                                         u10720 4F1E  
                                       u10480 454C                                         u10641 33AA  
                                       u10561 3DBC                                         u10721 4F1A  
                                       u10481 4548                                         u10650 33C8  
                                       u10570 3E6E                                         u10730 4F34  
                                       u10490 4564                                         _U1P1H 003DED  
                                       u10651 33C4                                         u10571 3E6A  
                                       u10731 4F30                                         u10491 4560  
                                       u10660 34E6                                         u10580 3E94  
                                       u10740 465E                                         _U1P2H 003DEF  
                                       u10661 34E2                                         u10581 3E90  
                                       u10741 465A                                         u10670 350A  
                                       u10590 3302                                         u10750 4670  
                                       _U1P1L 003DEC                                         _U1P3H 003DF1  
                                       u10671 3506                                         u10591 32FE  
                                       u10751 466C                                         _T3CLK 003FA9  
                                       u10680 4452                                         u10760 46C0  
                                       _T2CON 003FAC                                         _U1P2L 003DEE  
                                       u10681 444E                                         u10761 46BC  
                                       u10690 446E                                         u10770 46EC  
                                       _U1P3L 003DF0                                         u10691 446A  
                                       u10771 46E8                                         u10780 46FE  
                                       u10781 46FA                                         u10790 4736  
                                       u10791 4732                                         _T3CON 003FA6  
                                       _T5CLK 003F9D                                         _T4CON 003FA0  
                             __end_of___lomod 4F06                                         _T2HLT 003FAD  
                                       _T5CON 003F9A                                         _T4HLT 003FA1  
                             __end_of___lwdiv 57B0                                         _T2TMR 003FAA  
                                       _U1UIR 003DF8                                         i1l330 5D1A  
                                       _T2RST 003FAF                                         _U1RXB 003DE8  
                                       i1l324 5CDE                                         i1l333 5BEC  
                                       i1l350 6388                                         i1l343 52E0  
                                       i1l336 5BF0                                         i1l353 6386  
                                       _U1TXB 003DEA                                         i1l347 6146  
                                       i1l356 6384                                         _T4TMR 003F9E  
                                       _T4RST 003FA3                                         i2l409 638C  
                                       i1l692 60C2                                         i2l534 6172  
                                       i2l438 5E34                                         i2l446 5F6E  
                                       i2l552 6008                                         i1l688 5C68  
                                       i2l529 6230                                         i2l537 6310  
                                       i1l698 638A                                         i2l476 5E6A  
                                       i2l558 626E                                         i2l487 5FA2  
                         ??_UART1_rx_vect_isr 0012                                         i2l863 59F6  
                                       i2l856 5B20                                         i2l868 61C2  
                             ___awdiv@counter 0018                                         _OSCEN 0039DD  
                                vfpfcnvrt@fmt 00C9                                  vfpfcnvrt@llu 00D9  
                                       _TMR3H 003FA5                                         _TMR5H 003F99  
                                       _TMR3L 003FA4                                         _TMR5L 003F98  
                                       _TRISA 003FC2                                         _TRISB 003FC3  
                                       _TRISC 003FC4                                         _TRISD 003FC5  
                                       _TRISE 003FC6                                   _Default_ISR 638C  
                             _TMR4_Initialize 60C4                               _PWM6_Initialize 62BC  
                           _UART1_tx_vect_isr 5CAC                              __end_of_TMR4_ISR 5C70  
                     setSteering@steeringMode 0085                                         _delay 0040  
                                       _flags 003E                                         _fputc 5580  
                                       _fputs 5B6A                         __size_of_calcMotorPow 0150  
                          ?_UART1_tx_vect_isr 0001                                         pad@fp 0026  
                                       _width 003A                                         _putch 6312  
                                       dtoa@d 0062                                         dtoa@i 007A  
                                       dtoa@n 0072                                         dtoa@p 006C  
                                       dtoa@s 0070                                         dtoa@w 006E  
                            ?_SMT1_Initialize 0001                               __end_of_isupper 5D5A  
                                       pclath 003FFA                                         tablat 003FF5  
                                 _BatteryVolt 00EB                               _curveRightCount 00F9  
                       __size_of_calcSteering 01E2                                         utoa@d 0062  
                                       utoa@i 0076                                         utoa@n 006E  
                                       utoa@p 006A                                         utoa@w 006C  
                                       status 003FD8           __end_of_UART1_SetRxInterruptHandler 6330  
                 _UART1_SetRxInterruptHandler 6326                       __end_of_CCP4_Initialize 6068  
                              ?___fpclassifyf 0014                               __end_of_tolower 58EA  
                             __end_of_strncmp 4C64                              ___lodiv@dividend 0014  
         fp__UART1_DefaultFramingErrorHandler 0000      __end_of_UART1_DefaultFramingErrorHandler 638A  
   __size_of_UART1_DefaultFramingErrorHandler 0002            ??_UART1_DefaultFramingErrorHandler 0012  
           ?_UART1_DefaultFramingErrorHandler 0001              _UART1_DefaultFramingErrorHandler 6388  
                         ??_UART1_tx_vect_isr 0011                     __end_of_UART1_rx_vect_isr 5D22  
                             _TMR5_Initialize 5A8E                               _PWM7_Initialize 62A4  
                             __initialization 5DCA                         TMR5_ReadTimer@readVal 000D  
                            ?_CCP3_CaptureISR 0001                                  __end_of_main 6252  
                                __end_of_dtoa 32DE                                  __end_of_loop 4758  
                            ?_checkCurveCount 0001                                  __end_of_utoa 393A  
                 ??_UART1_DefaultErrorHandler 0012                       __end_of_TMR2_Initialize 628C  
                              _roundTimeCount 00F3                                  ?_UART1_Write 0001  
                                      ??_main 003A                                        ??_dtoa 0031  
                                      ??_loop 003A                                        ??_utoa 0031  
                               __activetblptr 000003                                  _calcMotorPow 4394  
        __size_of_UART1_SetTxInterruptHandler 000A                     __end_of_UART1_tx_vect_isr 5CE6  
                                startAccell@i 01B4                              ___lodiv@quotient 0024  
                             _PWM8_Initialize 628C                              _UART1_Initialize 543C  
                                _calcSteering 3D12                              ?_CCP4_CaptureISR 0001  
                                      _ADACCH 003EE9                                        _ADACCL 003EE8  
                                      _ADACCU 003EEA                                        _ADACQH 003EF4  
                                      _ADACQL 003EF3                                        _ADCON0 003EF8  
                                      _ADCON1 003EF9                                        _ADCON2 003EFA  
                                      _ADCON3 003EFB                                        _ADERRH 003EE3  
                                      _ADERRL 003EE2                                        ?_fputc 0016  
                                      _ADLTHH 003EDF                                        _ADLTHL 003EDE  
                                      ?_fputs 001F                                        _ADRESH 003EF0  
                                      _ADRESL 003EEF                                        _ADPREH 003EF7  
                                      _ADPREL 003EF6                                        _CCPR3H 003F75  
                                      _CCPR4H 003F71                                        _CCPR3L 003F74  
                                      _CCPR4L 003F70                                        _ADSTAT 003EFC  
                                      _ADUTHH 003EE1                              ___awdiv@dividend 0014  
                                      _ADUTHL 003EE0                            _PWM8_LoadDutyValue 5ED4  
                                      _ANSELA 003A40                                        ?_putch 0001  
                                      _ANSELB 003A50                                        _ANSELC 003A60  
                                      _ANSELD 003A70                                        _ANSELE 003A80  
                                      _RB1I2C 003A5A                                        _RB2I2C 003A5B  
                                      _RD0I2C 003A7A                                        _U1CON0 003DF2  
                                      _U1CON1 003DF3                                        _U1CON2 003DF4  
                                      _RC3I2C 003A6A                                        _RD1I2C 003A7B  
                                      _T3GATE 003FA8                                        _RC4I2C 003A6B  
                                      _U1BRGH 003DF6                                        _U1FIFO 003DF7  
                                      _T3GCON 003FA7                                        _U1BRGL 003DF5  
                                      _T5GATE 003F9C                                        _T5GCON 003F9B  
                                      _RA0PPS 003A00                                        _RA1PPS 003A01  
                                      _RA3PPS 003A03                                        _RA4PPS 003A04  
                                      _RB3PPS 003A0B                                        _T5GPPS 003AC9  
                                      i1l1249 637E                                        _ODCONA 003A42  
                                      _ODCONB 003A52                                        _ODCONC 003A62  
                                      _ODCOND 003A72                                        _ODCONE 003A82  
                     __end_of_PWM5_Initialize 62EC                       __end_of_TMR3_Initialize 5DCA  
                                      i1l7300 526A                                        i1l7310 52DC  
                                      i1l7302 527A                                        i1l7304 528A  
                                      i1l7400 5CB2                                        i1l7234 6376  
                                      i1l7306 52A2                                        i1l7402 5CC6  
                                      i1l7308 52BE                                        i1l7404 5CEE  
                                      i1l7350 6096                                        i1l7430 5C5E  
                                      i1l7406 5D02                                        i1l7352 60AA  
                                      i1l7424 5C3A                                        i1l7280 5BAE  
                                      i1l7426 5C3E                                        i1l7290 5BE6  
                                      i1l7282 5BBE                                        i1l7428 5C5A  
                                      i1l7292 5222                                        i1l7284 5BD0  
                                      i1l7294 5232                                        i1l7286 5BD2  
                                      i1l7296 5242                                        i1l7288 5BE2  
                                      i1l6690 6130                                        i1l7298 5252  
                                      i1l6692 6140                                        i1l6694 6144  
                                      i1l6686 611C                                        i1l6918 6380  
                                      i1l6688 612E                                        _INLVLA 003A44  
                                      _INLVLB 003A54                                        _INLVLC 003A64  
                                      _INLVLD 003A74                                        _INLVLE 003A84  
                                      i2l7320 5E36                                        i2l7312 5E00  
                                      i2l7330 625E                                        i2l7322 5E44  
                                      i2l7314 5E0E                                        i2l7410 5F4C  
                                      i2l7332 6266                                        i2l7420 5FF0  
                                      i2l7324 5E50                                        i2l7412 5F70  
                                      i2l7316 5E1A                                        i2l6710 6162  
                                      i2l6702 6148                                        i2l7334 626A  
                                      i2l7326 5E64                                        i2l7414 5F80  
                                      i2l7318 5E2E                                        i2l7440 5B0E  
                                      i2l7432 5AD8                                        i2l6704 6156  
                                      i2l6712 6168                                        i2l7328 6252  
                                      i2l7416 5FD8                                        i2l7408 5F3C  
                                      i2l7450 59E4                                        i2l7442 59A4  
                                      i2l7434 5ADC                                        i2l6714 616C  
                                      i2l6706 6158                                        i2l7418 5FDC  
                                      i2l7452 619C                                        i2l7444 59A8  
                                      i2l7436 5AEC                                        i2l6708 615C  
                                      i2l7454 61A0                                        i2l7446 59C2  
                                      i2l7438 5AFC                                        i2l7448 59D2  
                                      i2l6920 620E                                        i2l6922 621C  
                                      i2l6924 6228                                        i2l6928 6304  
                                ?_setSteering 0083                                        _OSCFRQ 0039DF  
                            __end_of_actSpeed 56AA                                        _SMT1PR 003F1B  
                       _UART1_SetErrorHandler 6344                              __end_of___xxtofl 40A8  
                         ?_PWM8_LoadDutyValue 0014                              __end_of_getCurve 3D12  
                    __end_of_CCP3_SetCallBack 6376                                  _CCPTMRS0bits 003F5E  
                                _CCPTMRS1bits 003F5F                                  vfprintf@cfmt 01AA  
                                      ___flge 496C                                        ___fleq 5392  
                                   ??___aldiv 001C                                     ??___aodiv 0024  
                                   ??___fladd 0036                                     ??___aomod 0024  
                                   ??___fldiv 0032                                     ??___awdiv 0018  
                                   ??___flneg 0018                                     ??___awmod 0018  
                                   ??___flmul 0032                                     ??___flsub 003A  
                                   ??___fltol 007D                                     ??___lodiv 0024  
                                   ??___lomod 0024                                        _efgtoa 10B4  
                                   ??___lwdiv 0018                                 _CCP3_CallBack 0198  
                                      _floorf 351C                                  ?_TMR5_Reload 0001  
                     __end_of_PWM6_Initialize 62D4                       __end_of_TMR4_Initialize 60F0  
                                      clear_0 5DD0                                        clear_1 5DDC  
                                      clear_2 5DE8                              ___awdiv@quotient 001A  
                                      _motPow 012E                               ___awmod@divisor 0016  
                     fp__CCP3_DefaultCallBack 0000                                        isa$std 000001  
                             ___awmod@counter 0018                                 _CCP4_CallBack 0196  
                                      _smtWay 0120                                        _printf 6174  
                                      pad@buf 0028                                        dtoa@fp 0060  
                            ?_CCP3_Initialize 0001                                        _strcpy 5820  
                                      _strlen 5C70                          ??_PWM8_LoadDutyValue 0016  
                            __end_of_setMotor 4E36                               _ADCC_Initialize 5946  
        __end_of_TMR4_DefaultInterruptHandler 638C         __size_of_TMR4_DefaultInterruptHandler 0002  
                _TMR4_DefaultInterruptHandler 638A                                        fputc@c 0016  
                              _PMD_Initialize 61EA                                        fputs@c 0023  
                                      fputs@i 0024                                        fputs@s 001F  
                             ___fpclassifyf@e 001C                               ___fpclassifyf@u 001E  
                             ___fpclassifyf@x 0014                                  __mediumconst 0000  
                       __end_of_TMR5_GATE_ISR 600A                                        tblptrh 003FF7  
                                   ??_isupper 0016                                        tblptrl 003FF6  
                                      tblptru 003FF8             __size_of_ADCC_GetSingleConversion 0032  
                            __end_of_vfprintf 5820                     ?_ADCC_GetSingleConversion 0014  
                                      utoa@fp 0060      TMR4_SetInterruptHandler@InterruptHandler 0014  
TMR5_SetGateInterruptHandler@InterruptHandler 0014   UART1_SetTxInterruptHandler@InterruptHandler 0014  
 UART1_SetRxInterruptHandler@InterruptHandler 0014          __end_of_UART1_SetOverrunErrorHandler 633A  
       __size_of_UART1_SetOverrunErrorHandler 000A                  _UART1_SetOverrunErrorHandler 6330  
                   _UART1_DefaultErrorHandler 6380                                     ??_tolower 001C  
                                   ??_strncmp 001A                 __size_of_INTERRUPT_Initialize 004C  
                __size_of_UART1_RxDataHandler 002C                             getCurve@deltaLeft 0016  
                                  ___flge@ff1 006D                               ??___fpclassifyf 0018  
                                  ___flge@ff2 0071                       __end_of_PWM7_Initialize 62BC  
                     __end_of_TMR5_Initialize 5AD8                                  ___xxtofl@arg 0026  
                                ___xxtofl@exp 0025                             _SYSTEM_Initialize 5A44  
                                ___xxtofl@val 001C                                    ___fleq@ff1 0014  
                                  ___fleq@ff2 0018                                    __accesstop 0060  
                     __end_of__initialization 5DFA                                    ___flneg@f1 0014  
                            ?_CCP4_Initialize 0001                           setSteering@steering 0083  
                          ?_SYSTEM_Initialize 0001                                 ___rparam_used 000001  
                  __size_of_UART1_rx_vect_isr 003A                                    ___fltol@f1 0079  
                             _TMR5_WriteTimer 6148                            __size_of_calcSpeed 023E  
                   calcMotorPow@setSpeedDelta 0085                      __end_of_CCP4_SetCallBack 636C  
                              __pcstackCOMRAM 0001                         __end_of_TMR4_CallBack 60C4  
                          __size_of_checkBatt 0092                                  ?_startAccell 0001  
                         ??_SYSTEM_Initialize 0018                                     ?_TMR4_ISR 0001  
                              ivt0x8_undefint 00AC                                 __end_of_fputc 5616  
                               __end_of_fputs 5BAE                               fp__TMR4_10msISR 0000  
                               __end_of_putch 631C                              ?_TMR2_Initialize 0001  
                     __end_of_PWM8_Initialize 62A4                        __end_of_PMD_Initialize 620E  
                 __size_of_PWM7_LoadDutyValue 0034                         CCP3_CaptureISR@module 0003  
                  __size_of_UART1_tx_vect_isr 003A                CCP3_SetCallBack@customCallBack 0014  
                   _UART1_FramingErrorHandler 019E               fp__TMR4_DefaultInterruptHandler 0000  
               ?_TMR4_DefaultInterruptHandler 0001                       fp__CCP4_DefaultCallBack 0000  
                    __size_of_SMT1_PR_ACQ_ISR 004A                                       ??_fputc 001A  
                   __end_of_SYSTEM_Initialize 5A8E                                       ??_fputs 0023  
                             _CLC3_Initialize 60F0                                       ??_putch 0015  
                 PWM7_LoadDutyValue@dutyValue 0014                                    __pbssBANK0 00EB  
                                  __pbssBANK1 0100                 ?_UART1_SetOverrunErrorHandler 0014  
                      ?_UART1_SetErrorHandler 0014                              ?_PWM5_Initialize 0001  
                            ?_TMR3_Initialize 0001                                    __pnvCOMRAM 004C  
                    __size_of_SMT1_PW_ACQ_ISR 0054                         _TMR4_InterruptHandler 018E  
                                     IVTBASEH 003FD6                                       IVTBASEL 003FD5  
                                     IVTBASEU 003FD7                                       ?___flge 006D  
                                     ?___fleq 0014                                    ??_TMR4_ISR 0013  
                     __end_of_ADCC_Initialize 59A2                    __end_of_PWM6_LoadDutyValue 5EA0  
                                     ?_efgtoa 0083          __end_of_TMR5_SetGateInterruptHandler 6358  
       __size_of_TMR5_SetGateInterruptHandler 000A                  _TMR5_SetGateInterruptHandler 634E  
                                     _CCP3CAP 003F77                                       _CCP4CAP 003F73  
                                     _CCP3CON 003F76                                       _CCP4CON 003F72  
                                     _ADFLTRH 003EE7                                       ?_floorf 0036  
                                     _ADFLTRL 003EE6                 __size_of_CCP3_DefaultCallBack 0036  
                                     _CCP3PPS 003ACF                                       _CCP4PPS 003AD0  
                                     _CLC3CON 003C60                                       _CLC3POL 003C61  
                                     _ADPREVH 003EEE                                       _ADPREVL 003EED  
                            ?_PWM6_Initialize 0001                              ?_TMR4_Initialize 0001  
                                     _ADSTPTH 003EE5                                       _ADSTPTL 003EE4  
                                     ?_printf 01AC                               ?_PMD_Initialize 0001  
                           _UART1_Receive_ISR 5222                                    _getReverse 44E4  
                                     ?_strcpy 0014                                       ?_strlen 0014  
                                     _U1ERRIE 003DFA                                     ?_actSpeed 0022  
                                     _U1ERRIR 003DF9                                 ?_TMR4_10msISR 0001  
                                ?_Default_ISR 0001                          __size_of_UART1_Write 005C  
                          ?_UART1_Receive_ISR 0001                                       _U1RXPPS 003AE5  
                                   ?___xxtofl 001C                            _PWM5_LoadDutyValue 5EA0  
                                  _distRightM 013A                       __size_of_TMR5_ReadTimer 0024  
                                     _OSCCON1 0039D9                                       _OSCCON3 0039DB  
                           __end_of_calcSpeed 351C                                       _IVTLOCK 003FD4  
                          __size_of_vfpfcnvrt 05E8                                       _SMT1CLK 003F21  
                                     _OSCTUNE 0039DE                                       _SMT1CPR 003F15  
                                     _SMT1CPW 003F18                                       _PWM5DCH 003F6D  
                                     _PWM5DCL 003F6C                                       _PWM6DCH 003F69  
                                     _PWM6DCL 003F68                                       _PWM7DCH 003F65  
                                     _PWM7DCL 003F64                                       _SMT1SIG 003F22  
                                     _PWM8DCH 003F61                                       _PWM5CON 003F6E  
                                     _PWM8DCL 003F60                                       _SMT1PRH 003F1C  
                                     _PWM6CON 003F6A                                       _SMT1PRL 003F1B  
                                     _PWM7CON 003F66                                       _SMT1PRU 003F1D  
                                   ?_getCurve 0001                                       _SMT1WIN 003F23  
                                     _SMT1TMR 003F12                                       _PWM8CON 003F62  
                                     _SLRCONA 003A43                                       _SLRCONB 003A53  
                                     _SLRCONC 003A63                                       _SLRCOND 003A73  
                                     _SLRCONE 003A83                             __end_of_checkBatt 573C  
                         ??_UART1_Receive_ISR 0012                              ___lomod@dividend 0014  
                     __end_of_TMR5_WriteTimer 6174                           ?_PWM5_LoadDutyValue 0014  
                            ?_PWM7_Initialize 0001                              ?_TMR5_Initialize 0001  
                   INTERRUPT_Initialize@state 0014                          __size_of_setSteering 01F6  
                                   _CLCIN0PPS 003AD9                                     _CLCIN2PPS 003ADB  
                                   _CLCIN3PPS 003ADC                                       __Hparam 0000  
                                   ?_setMotor 0018                                       __Lparam 0000  
                    __end_of_UART1_Initialize 54E0                                       ___aldiv 4758  
                             __size_of___flge 0106                               __size_of___fleq 00AA  
                                     ___aodiv 40A8                                       ___fladd 234A  
                                     ___aomod 4230                                       ___fldiv 2C5C  
                                     ___awdiv 509C                                       ___flneg 5D5A  
                                     ___awmod 52E2                                       ___flmul 280C  
                                     ___flsub 5B22                                       ___fltol 4864  
                                     ___lodiv 4C64                                       ___lomod 4E36  
                                     ___lwdiv 573C                     __end_of_UART1_Receive_ISR 52E2  
                                   ?_vfprintf 01A4                          ??_PWM5_LoadDutyValue 0016  
                                __psmallconst 1000                               __size_of_efgtoa 0CAE  
                             __size_of_floorf 0216                                       __pcinit 5DCA  
                   _TMR5_GateInterruptHandler 0192                              ?_PWM8_Initialize 0001  
                                     __ramtop 1000                   __size_of_UART1_Transmit_ISR 0044  
               ?_TMR5_SetGateInterruptHandler 0014                                       __ptext0 6232  
                                     __ptext1 4632                                       __ptext2 54E0  
                                     __ptext3 44E4                                       __ptext4 3B30  
                                     __ptext5 4F06                                       __ptext6 573C  
                                     __ptext7 56AA                                       __ptext8 61C4  
                                     __ptext9 6174                               __size_of_printf 0028  
                              ??_TMR4_10msISR 0013                          __size_of_TMR5_Reload 000E  
                                  ??_actSpeed 0024                               __size_of_strcpy 006A  
                             __size_of_strlen 003A                       __end_of_CLC3_Initialize 611C  
                       _OSCILLATOR_Initialize 62EC                                     _T2CONbits 003FAC  
                                __size_of_abs 0040                                  __size_of_pad 00C2  
                                  ??___xxtofl 0020                                     _T3CONbits 003FA6  
                            ___awmod@dividend 0014                 __size_of_CCP4_DefaultCallBack 0036  
                            ___aldiv@dividend 0014                                     _T4CONbits 003FA0  
                    ??_PIN_MANAGER_Initialize 0014             __size_of_TMR4_SetInterruptHandler 000A  
                                   _T2HLTbits 003FAD                                     _T5CONbits 003F9A  
                   ?_TMR4_SetInterruptHandler 0014                                       _isupper 5D22  
                                     efgtoa@c 0089                                       efgtoa@d 00A7  
                                     efgtoa@e 00BF                                       efgtoa@f 0085  
                                     efgtoa@g 00BB                                       efgtoa@h 00B1  
                                     efgtoa@i 00B9                                       efgtoa@l 00B5  
                                     efgtoa@m 00A1                                       efgtoa@n 00C1  
                                     efgtoa@p 00AB                                       efgtoa@t 009B  
                                     efgtoa@u 00C3                                       efgtoa@w 00AD  
                                   _IPR10bits 00398A                                       _smtDuty 0124  
                                   _T4HLTbits 003FA1                                    ??_getCurve 0014  
                                   _PIE10bits 00399A                    __size_of_SYSTEM_Initialize 004A  
                                     _tolower 588A                                       _strncmp 4B70  
                        end_of_initialization 5DFA                                       floorf@e 0077  
                                   _T2RSTbits 003FAF                                       floorf@m 0073  
                                     floorf@u 0079                                       floorf@x 0036  
              ??_TMR4_DefaultInterruptHandler 0013                                     _T4RSTbits 003FA3  
                                   _PIR10bits 0039AA                                       fputc@fp 0018  
                           ??_SMT1_PR_ACQ_ISR 0011           __end_of_UART1_SetTxInterruptHandler 6326  
                 _UART1_SetTxInterruptHandler 631C                                       fputs@fp 0021  
              ??_UART1_SetOverrunErrorHandler 0016                                    ??_setMotor 001A  
                    __size_of_SMT1_Initialize 0030                             __end_of_vfpfcnvrt 234A  
                                  efgtoa@mode 00B0                             ?_CCP3_SetCallBack 0014  
                                  efgtoa@sign 00A9                              ___aldiv@quotient 001E  
                                     postdec2 003FDD                             ??_SMT1_PW_ACQ_ISR 0011  
                                     postinc0 003FEE                                       postinc1 003FE6  
                                     postinc2 003FDE                              ?_ADCC_Initialize 0001  
                          ??_CCP3_SetCallBack 0016                                    ??_vfprintf 003A  
            __end_of_ADCC_GetSingleConversion 5FD6                             UART1_Write@txData 0014  
                         _UART1_RxDataHandler 611C                                       strcpy@d 001C  
                                     strlen@a 0016                                       strcpy@s 001A  
                                     strlen@s 0014                          __size_of_startAccell 00A0  
                                 ?_getReverse 0001                                     _PORTBbits 003FCB  
                                   _PORTDbits 003FCD                      __size_of_CCP3_CaptureISR 0034  
                    __size_of_checkCurveCount 00CC                                   ___fladd@grs 0078  
                          getCurve@deltaRight 0018                                 ___xxtofl@sign 0024  
                                 ___fldiv@grs 0067                                   ___fldiv@rem 0060  
                        ?_UART1_RxDataHandler 0001                              ?_TMR5_WriteTimer 0009  
                        setSteering@steeringB 008A                          setSteering@steeringF 0088  
                     TMR5_WriteTimer@timerVal 0009                                   ___flmul@grs 0062  
                              _curveLeftCount 00FA                      __size_of_CCP4_CaptureISR 0034  
           CCP4_DefaultCallBack@capturedValue 0005                             ?_CCP4_SetCallBack 0014  
                __end_of_INTERRUPT_Initialize 5A44                                __end_of___flge 4A72  
                              __end_of___fleq 543C                    __size_of_UART1_Receive_ISR 00C0  
                          ??_CCP4_SetCallBack 0016                                   _CLC3CONbits 003C60  
                                 vfpfcnvrt@ap 00CB                                   vfpfcnvrt@ct 00E7  
                                 vfpfcnvrt@fp 00C7                                   vfpfcnvrt@ll 00D1  
                              __end_of_efgtoa 1D62                             __size_of_TMR4_ISR 003C  
                              __end_of_floorf 3732                        ?_OSCILLATOR_Initialize 0001  
                                  floorf@F527 0118                                __end_of_printf 619C  
                 __size_of_PWM8_LoadDutyValue 0034                              ?_CLC3_Initialize 0001  
                              __end_of_strcpy 588A                                __end_of_strlen 5CAA  
                              _TMR5_ReadTimer 620E                           start_initialization 5DCA  
                             ___lodiv@divisor 001C                               ___lodiv@counter 002C  
              ??_TMR5_SetGateInterruptHandler 0016               __size_of_PIN_MANAGER_Initialize 00CA  
                                 __end_of_abs 5C32                                   __end_of_pad 5222  
                        __size_of_Default_ISR 0002                       ??_UART1_SetErrorHandler 0016  
                    __size_of_CCP3_Initialize 002E                         ??_UART1_RxDataHandler 0012  
                                 putch@txData 0015                                    ivt0x8_base 0008  
                               _uart1RxBuffer 0108                                   _actMotorPow 00ED  
                       __end_of___fpclassifyf 4B70                                 _uart1TxBuffer 0110  
                         __size_of_getReverse 014E                          __end_of_TMR4_10msISR 6380  
                                 vfprintf@fmt 01A6                                      ??___flge 0036  
                                    ??___fleq 001C                              ??_PMD_Initialize 0014  
                      __size_of_TMR5_GATE_ISR 0032                                  _oldDistRight 0132  
                    __size_of_CCP4_Initialize 002E                                      ??_efgtoa 008A  
                                    ??_floorf 006D                    __end_of_PWM7_LoadDutyValue 5F3C  
                           ??_SMT1_Initialize 0014                                      ??_printf 003A  
                                    ??_strcpy 0018                                      ??_strlen 0016  
                      __end_of_TMR5_ReadTimer 6232                         CCP4_CaptureISR@module 0007  
                                   ___fladd@a 0071                                     ___fladd@b 006D  
                         calcMotorPow@addMPow 0089                      _ADCC_GetSingleConversion 5FA4  
                                   ___fldiv@a 002E                                     ___fldiv@b 002A  
                 PWM5_LoadDutyValue@dutyValue 0014                         TMR4_ISR@CountCallBack 0138  
                                   ___flmul@a 002E                                     ___flmul@b 002A  
                                 __pbssCOMRAM 003A                                     ___flsub@a 007D  
                                   ___flsub@b 0079                            _UART1_ErrorHandler 019A  
                               __pcstackBANK0 0060                                 __pcstackBANK1 01A4  
                           __size_of_actSpeed 0094                              ___aodiv@dividend 0014  
                          _PWM6_LoadDutyValue 5E6C                      __size_of_TMR2_Initialize 001C  
                           __size_of___xxtofl 01B4                      _UART1_RxInterruptHandler 01A2  
                           ??_CCP3_CaptureISR 0003                  __end_of_CCP3_DefaultCallBack 5E36  
                      __size_of_TMR4_CallBack 002E                             ??_checkCurveCount 003A  
                                   _calcSpeed 32DE                             __size_of_getCurve 01E2  
                         ?_PWM6_LoadDutyValue 0014                   PWM8_LoadDutyValue@dutyValue 0014  
                fp__UART1_DefaultErrorHandler 0000                                     _checkBatt 56AA  
                                _currentSpeed 00EF                  ?_UART1_SetRxInterruptHandler 0014  
                                   __pnvBANK1 018E                                   _efgtoa$3563 008F  
                                 _efgtoa$3572 0095                                   _efgtoa$3564 0091  
                                 _efgtoa$3573 0097                                   _efgtoa$3574 0099  
                                 _efgtoa$3568 0093                            setMotor@motorPower 0018  
                            ___lwdiv@dividend 0014                        _PIN_MANAGER_Initialize 4FD2  
                                   _dtoa$3539 006A                      __size_of_PWM5_Initialize 0018  
                    __size_of_TMR3_Initialize 0038                             ?_UART1_Initialize 0001  
        __end_of_UART1_SetFramingErrorHandler 6344         __size_of_UART1_SetFramingErrorHandler 000A  
                _UART1_SetFramingErrorHandler 633A                                      ?___aldiv 0014  
             ADCC_GetSingleConversion@channel 0018                                      ?___aodiv 0014  
                                    ?___fladd 006D                                      ?___aomod 0014  
                           __size_of_setMotor 00E2              __end_of_TMR4_SetInterruptHandler 6362  
                                    ?___fldiv 002A                                      ?___awdiv 0014  
                                   __ptext100 5FD8                                     __ptext101 6252  
                                   __ptext102 6304                              ___aodiv@quotient 0026  
                                    ?___flneg 0014                                     __ptext103 6148  
                                   __ptext104 620E                                     __ptext105 5AD8  
                                   __ptext106 59A4                                     __ptext107 619C  
                                   __ptext108 0000             CCP3_DefaultCallBack@capturedValue 0001  
                                    ?___awmod 0014                             ??_CCP4_CaptureISR 0007  
                                    ?___flmul 002A                                      ?___flsub 0079  
                                    ?___fltol 0079                                      ?___lodiv 0014  
                                    ?___lomod 0014                                      ?___lwdiv 0014  
                          ??_UART1_Initialize 0016                                     _distLeftM 013C  
                                   _distFront 00FD                              _uart1RxLastError 0042  
                               ??_UART1_Write 0014                                     _distRight 00F5  
                        ??_PWM6_LoadDutyValue 0016                                     _cycle10ms 00FB  
                           __size_of_vfprintf 0070                               ?_TMR5_ReadTimer 0009  
                               ?_calcMotorPow 0001                               ___lomod@divisor 001C  
                                 __smallconst 1000                               ___lomod@counter 0024  
                                    _CLC3GLS0 003C66                                      _CLC3GLS1 003C67  
                                    _CLC3GLS2 003C68                                      _CLC3GLS3 003C69  
                                   _driveMode 00FC           fp__UART1_DefaultOverrunErrorHandler 0000  
    __end_of_UART1_DefaultOverrunErrorHandler 6388     __size_of_UART1_DefaultOverrunErrorHandler 0002  
          ??_UART1_DefaultOverrunErrorHandler 0012             ?_UART1_DefaultOverrunErrorHandler 0001  
            _UART1_DefaultOverrunErrorHandler 6386                                      _CLC3SEL0 003C62  
                                    _CLC3SEL1 003C63                                      _CLC3SEL2 003C64  
                                    _CLC3SEL3 003C65                               _SMT1_PR_ACQ_ISR 5AD8  
                               ?_calcSteering 0001                                      ?_isupper 0014  
                    __size_of_PWM6_Initialize 0018                      __size_of_TMR4_Initialize 002C  
                               _TMR5_GATE_ISR 5FD8                                     _curveMode 0041  
                            ___lwdiv@quotient 0019                                      ?_tolower 001A  
                              __size_of_fputc 0096                                      _T2CLKCON 003FAE  
                              __size_of_fputs 0044                                      ?_strncmp 0014  
                                 _U1ERRIRbits 003DF9                                      _T4CLKCON 003FA2  
                              __size_of_putch 000A                                    ?_calcSpeed 0001  
                        _INTERRUPT_Initialize 59F8                                 ??_setSteering 0086  
                             ___aldiv@divisor 0018                               _SMT1_PW_ACQ_ISR 59A4  
                             ___aldiv@counter 001C                                    ?_checkBatt 0001  
       UART1_SetErrorHandler@interruptHandler 0014                                      _IPR1bits 003981  
                __end_of_CCP4_DefaultCallBack 5E6C                             ??_CCP3_Initialize 0016  
                                    _IPR3bits 003983                                      _PIE1bits 003991  
                                    _PIE3bits 003993                                      _IPR7bits 003987  
                                    _IPR8bits 003988                                      _IPR9bits 003989  
                                    _PIE7bits 003997                                      _PIE8bits 003998  
                                    _PIE9bits 003999                                      _IVTBASEH 003FD6  
                                    _IVTBASEL 003FD5                                      _IVTBASEU 003FD7  
               ??_UART1_SetRxInterruptHandler 0016                                      i1u730_20 52BE  
                                    i1u730_21 52BA                                      i1u731_28 52C4  
                                    i1u724_20 5BBE                                      i1u731_29 52D8  
                                    i1u724_21 5BBA                                      i1u661_20 6140  
                                    i1u725_20 5BE2                                      i1u661_21 613C  
                                    i1u725_21 5BDE                                      i1u726_20 5242  
                                    i1u726_21 523E                                      i1u735_20 60AA  
                                    i1u751_20 5C5A                                      i1u743_20 5CC6  
                                    i1u735_21 60A6                                      i1u751_21 5C56  
                                    i1u743_21 5CC2                                      i1u728_20 527A  
                                    i1u727_28 5258                                      i1u728_21 5276  
                                    i1u727_29 526A                                      i1u736_28 60B0  
                                    i1u745_20 5D02                                      i1u744_28 5CCC  
                                    i1u736_29 60C2                                      i1u745_21 5CFE  
                                    i1u744_29 5CDE                                      _PIR1bits 0039A1  
                                    i1u729_28 5290                                      i1u729_29 52A2  
                                    i1u746_28 5D08                                      i1u746_29 5D1A  
                                    _PIR4bits 0039A4                                      _PIR6bits 0039A6  
                                    i2u732_40 5E0E                                      i2u732_41 5E0A  
                                    i2u733_40 5E44                                      i2u733_41 5E40  
                                    _PIR7bits 0039A7                                      i2u662_40 6156  
                                    i2u662_41 6152                                      i2u750_48 5FF6  
                                    i2u750_49 6008                                      _PIR8bits 0039A8  
                                    i2u752_40 5AFC                                      i2u752_41 5AF8  
                                    i2u753_40 59D2                                      i2u753_41 59CE  
                                    _PIR9bits 0039A9                                      i2u747_48 5F5A  
                                    i2u747_49 5F6E                                      i2u749_40 5FF0  
                                    i2u748_48 5F8E                                      i2u749_41 5FEC  
                                    i2u748_49 5FA2                                      _SMT1CON0 003F1E  
                                    _SMT1CON1 003F1F                      __size_of_PWM7_Initialize 0018  
                    __size_of_TMR5_Initialize 004A                                      _SMT1STAT 003F20  
                           _SMT1_Overflow_ISR 619C                                      _TMR4_ISR 5C34  
                  __end_of_UART1_Transmit_ISR 5BF2                                 _TMR4_CallBack 6096  
                                   _smtPeriod 0048                 ?_UART1_SetFramingErrorHandler 0014  
                               ??_TMR5_Reload 000B                   __size_of_PWM5_LoadDutyValue 0034  
                                   _vfpfcnvrt 1D62                            ?_SMT1_Overflow_ISR 0001  
                           _getBatteryVoltage 61C4                                  ??_getReverse 003A  
                              ??_calcMotorPow 0083                                    _ADCON0bits 003EF8  
                                  _ADCON1bits 003EF9                                    _ADCON2bits 003EFA  
                                  _ADCON3bits 003EFB                            ?_getBatteryVoltage 0001  
                           ??_CCP4_Initialize 0016                                ??_calcSteering 008C  
                         ??_SMT1_Overflow_ISR 0011                     TMR5_ReadTimer@readValHigh 000F  
                   __size_of_CCP3_SetCallBack 000A                                ?_TMR5_GATE_ISR 0001  
                         __end_of_UART1_Write 5946                      __size_of_PWM8_Initialize 0018  
                                _SMT1CON0bits 003F1E                                  _SMT1CON1bits 003F1F  
                                  vfpfcnvrt@c 00EA                                    vfpfcnvrt@f 00E3  
                         ??_getBatteryVoltage 003A                                   _INTCON0bits 003FD2  
                       ?_INTERRUPT_Initialize 0001                         __size_of_TMR4_10msISR 000A  
                        fp__UART1_Receive_ISR 0000                        _uart1TxBufferRemaining 004C  
                    checkCurveCount@roundTime 01B4                             ??_TMR2_Initialize 0014  
                                _uart1RxCount 0043                            __end_of_getReverse 4632  
                                  _ADSTATbits 003EFC                                      __Hrparam 0000  
                   __end_of_SMT1_Overflow_ISR 61C4                           __end_of_setSteering 3B30  
                                  vfprintf@ap 01A8                                      __Lrparam 0000  
                                  vfprintf@fp 01A4                                   _oldDistLeft 0134  
                               ??_startAccell 003A                                ?_TMR4_CallBack 0001  
                              calcSpeed@speed 0087                     __end_of_getBatteryVoltage 61EA  
                     ??_OSCILLATOR_Initialize 0014                              __size_of___aldiv 010C  
                            __size_of___aodiv 0188                              __size_of___fladd 04C2  
                            __size_of___aomod 0164                              __size_of___fldiv 039C  
                            __size_of___awdiv 00C4                              __size_of___flneg 0038  
                            __size_of___awmod 00B0                              __size_of___flmul 0450  
                            __size_of___flsub 0048                              __size_of___fltol 0108  
                                _SMT1STATbits 003F20                          _CCP3_DefaultCallBack 5E00  
                     __end_of_SMT1_PR_ACQ_ISR 5B22                              __size_of___lodiv 00F0  
                            __size_of___lomod 00D0                                    ?_vfpfcnvrt 00C7  
                            __size_of___lwdiv 0074                               ___aodiv@divisor 001C  
                           ??_PWM5_Initialize 0014                             ??_TMR3_Initialize 0014  
                             ___aodiv@counter 0024                      _TMR4_SetInterruptHandler 6358  
                          ___fpclassifyf@F465 011C                                      _actSpeed 5616  
        __size_of_UART1_SetRxInterruptHandler 000A                                  _TMR4_10msISR 6376  
                                    ___xxtofl 3EF4                      __size_of_ADCC_Initialize 005C  
                         __end_of_TMR5_Reload 6312                     __size_of_CCP4_SetCallBack 000A  
                                    __pivt0x8 0008                               ___lwdiv@divisor 0016  
                     __end_of_SMT1_PW_ACQ_ISR 59F8                               ___lwdiv@counter 0018  
                                    _getCurve 3B30                                      __ptext10 57B0  
                                    __ptext11 1D62                                      __ptext20 351C  
                                    __ptext12 3732                                      __ptext21 4A72  
                                    __ptext13 4E36                                      __ptext30 5B6A  
                                    __ptext22 5B22                                      __ptext14 4C64  
                                    __ptext31 5580                                      __ptext23 5D5A  
                                    __ptext15 4B70                                      __ptext40 2C5C  
                                    __ptext32 6312                                      __ptext24 496C  
                                    __ptext16 10B4                                      __ptext41 5E6C  
                                    __ptext33 58EA                                      __ptext25 5392  
                                    __ptext17 588A                                      __ptext50 4758  
                                    __ptext42 5EA0                                      __ptext34 5BF2  
                                    __ptext26 52E2                                      __ptext18 5D22  
                                    __ptext51 3EF4                                      __ptext43 32DE  
                                    __ptext35 4230                                      __ptext27 2FF8  
                                    __ptext19 5820                                      __ptext60 633A  
                                    __ptext52 4864                                      __ptext44 234A  
                                    __ptext36 40A8                                      __ptext28 5160  
                                    __ptext61 6344                                      __ptext53 280C  
                                    __ptext45 4394                                      __ptext37 5FA4  
                                    __ptext29 5C70                                      __ptext70 62A4  
                                    __ptext62 5A8E                                      __ptext54 509C  
                                    __ptext46 4D54                                      __ptext38 3D12  
                                    __ptext71 62BC                                      __ptext63 634E  
                                    __ptext55 5A44                                      __ptext47 5ED4  
                                    __ptext39 393A                                      __ptext80 6068  
                                    __ptext72 62D4                                      __ptext64 60C4  
                                    __ptext56 543C                                      __ptext48 5F08  
                                    __ptext81 636C                                      __ptext73 61EA  
                                    __ptext65 6358                                      __ptext57 631C  
                                    __ptext49 5616                                      __ptext90 611C  
                                    __ptext82 5946                                      __ptext74 4FD2  
                                    __ptext66 5D92                                      __ptext58 6326  
                                    __ptext91 5C34                                      __ptext83 5CAC  
                                    __ptext75 62EC                                      __ptext67 6270  
                                    __ptext59 6330                                      __ptext92 6096  
                                    __ptext84 5BAE                                      __ptext76 59F8  
                                    __ptext68 600A                                      __ptext93 6376  
                                    __ptext85 5CE8                                      __ptext77 60F0  
                                    __ptext69 628C                                      __ptext94 638A  
                                    __ptext86 5222                                      __ptext78 603A  
                                    __ptext95 638C                                      __ptext87 6386  
                                    __ptext79 6362                                      __ptext96 5F3C  
                                    __ptext88 6388                                      __ptext97 5E00  
                                    __ptext89 6380                                      __ptext98 5F70  
                                    __ptext99 5E36                              __size_of_isupper 0038  
                                    _distLeft 00F7                __size_of_UART1_SetErrorHandler 000A  
                                 ??_calcSpeed 0083                 __end_of_UART1_SetErrorHandler 634E  
                            __size_of_tolower 0060                                    _T3GCONbits 003FA7  
                                  strcpy@dest 0014                              __size_of_strncmp 00F4  
                                 ??_checkBatt 003A                             ??_TMR4_Initialize 0016  
                           ??_PWM6_Initialize 0014                                 __size_of_main 0020  
                               __size_of_dtoa 02E6                                      _oldSpeed 012C  
                                  _T5GCONbits 003F9B                                 __size_of_loop 0126  
                               __size_of_utoa 0208                               _SMT1_Initialize 600A  
                                 _IVTLOCKbits 003FD4                                      _setMotor 4D54  
                                    _setSpeed 00F1                      __size_of_TMR5_WriteTimer 002C  
                                    efgtoa@fp 0083                                      efgtoa@ne 009F  
                                    efgtoa@pp 009D                                      efgtoa@ou 00A3  
                   _UART1_OverrunErrorHandler 019C  UART1_SetOverrunErrorHandler@interruptHandler 0014  
                                    isa$xinst 000000            __size_of_UART1_DefaultErrorHandler 0006  
                  ??_ADCC_GetSingleConversion 0016                    ?_UART1_DefaultErrorHandler 0001  
                       ?_CCP3_DefaultCallBack 0001                                      _vfprintf 57B0  
                                   printf@fmt 01AC                    __end_of_PWM8_LoadDutyValue 5F08  
                             _CCP3_CaptureISR 5F3C                                   _UART1_Write 58EA  
                       fp__UART1_Transmit_ISR 0000                             ??_TMR5_Initialize 0016  
                           ??_PWM7_Initialize 0014           fp__TMR5_DefaultGateInterruptHandler 0000  
    __end_of_TMR5_DefaultGateInterruptHandler 6270     __size_of_TMR5_DefaultGateInterruptHandler 001E  
          ??_TMR5_DefaultGateInterruptHandler 0011             ?_TMR5_DefaultGateInterruptHandler 0001  
            _TMR5_DefaultGateInterruptHandler 6252                              ___aomod@dividend 0014  
                             _checkCurveCount 4F06                           __end_of_startAccell 5580  
                              _battCheckCount 0130                                 ??_Default_ISR 0001  
              ??_UART1_SetFramingErrorHandler 0016                                  _reverseCount 0136  
                             ??_TMR5_GATE_ISR 0011                                _vfpfcnvrt$3599 00E1  
                 __end_of_UART1_RxDataHandler 6148                                   _uart1RxHead 0045  
                        _CCP4_DefaultCallBack 5E36                                   _uart1TxHead 0047  
                                 _uart1RxTail 0044                                   _uart1TxTail 0046  
                      ??_INTERRUPT_Initialize 0014                            _PWM7_LoadDutyValue 5F08  
                                    intlevel1 0000                                      intlevel2 0000  
                    __size_of_CLC3_Initialize 002C                                   _setSteering 393A  
                             _CCP4_CaptureISR 5F70                       ?_PIN_MANAGER_Initialize 0001  
                           ??_PWM8_Initialize 0014                           ?_PWM7_LoadDutyValue 0014  
                        __end_of_calcMotorPow 44E4                                     strcpy@src 0016  
                                    isupper@c 0014                                     strncmp@_l 0014  
                                   strncmp@_r 0016                               ??_TMR4_CallBack 0013  
                  __size_of_SMT1_Overflow_ISR 0028                          __end_of_calcSteering 3EF4  
                         _uart1RxStatusBuffer 0100                                   efgtoa@nmode 00AF  
                                    printf@ap 01B2                              ??_TMR5_ReadTimer 000B  
                  __size_of_getBatteryVoltage 0026  UART1_SetFramingErrorHandler@interruptHandler 0014  
           __end_of_UART1_DefaultErrorHandler 6386                               ___aomod@divisor 001C  
                                 ??_vfpfcnvrt 00CD                                   _reverseTime 012A  
                             ___aomod@counter 0024                              ?_SMT1_PR_ACQ_ISR 0001  
                                 _TMR5_Reload 6304                                    _SMT1SIGPPS 003AD2  
                                  _SMT1WINPPS 003AD1                          ??_PWM7_LoadDutyValue 0016  
                                    tolower@c 001A                                 actSpeed@speed 0024  
                      __size_of___fpclassifyf 00FE                         ?_CCP4_DefaultCallBack 0005  
                   calcMotorPow@oldSpeedDelta 0087                                      strncmp@l 001B  
                                    strncmp@n 0018                              _CCP3_SetCallBack 636C  
                                    strncmp@r 001D                     __size_of_UART1_Initialize 00A4  
                                ___aldiv@sign 001D                              ?_SMT1_PW_ACQ_ISR 0001  
                             _CCP3_Initialize 6068                   PWM6_LoadDutyValue@dutyValue 0014  
                           calcSteering@delta 008E                      _UART1_TxInterruptHandler 01A0  
                               ___fladd@signs 0075                           __end_of_Default_ISR 638E  
                     __end_of_SMT1_Initialize 603A                                  ___aodiv@sign 0025  
              __end_of_PIN_MANAGER_Initialize 509C                             ??_ADCC_Initialize 0014  
                                ___fladd@aexp 0076                                  ___fladd@bexp 0077  
                ?_UART1_SetTxInterruptHandler 0014                                  ___aomod@sign 0025  
                     __end_of_CCP3_CaptureISR 5F70  
