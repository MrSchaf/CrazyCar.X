

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Jan 31 14:52:27 2024

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F46K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1
    78                           	psect	text62,global,reloc=2,class=CODE,delta=1
    79                           	psect	text63,global,reloc=2,class=CODE,delta=1
    80                           	psect	text64,global,reloc=2,class=CODE,delta=1
    81                           	psect	text65,global,reloc=4,class=CODE,delta=1
    82                           	psect	text66,global,reloc=2,class=CODE,delta=1
    83                           	psect	text67,global,reloc=4,class=CODE,delta=1
    84                           	psect	text68,global,reloc=2,class=CODE,delta=1
    85                           	psect	text69,global,reloc=2,class=CODE,delta=1
    86                           	psect	text70,global,reloc=2,class=CODE,delta=1
    87                           	psect	text71,global,reloc=2,class=CODE,delta=1
    88                           	psect	text72,global,reloc=2,class=CODE,delta=1
    89                           	psect	text73,global,reloc=4,class=CODE,delta=1
    90                           	psect	text74,global,reloc=2,class=CODE,delta=1
    91                           	psect	text75,global,reloc=2,class=CODE,delta=1
    92                           	psect	text76,global,reloc=2,class=CODE,delta=1
    93                           	psect	text77,global,reloc=4,class=CODE,delta=1
    94                           	psect	text78,global,reloc=4,class=CODE,delta=1
    95                           	psect	text79,global,reloc=2,class=CODE,delta=1
    96                           	psect	text80,global,reloc=4,class=CODE,delta=1
    97                           	psect	text81,global,reloc=2,class=CODE,delta=1
    98                           	psect	text82,global,reloc=4,class=CODE,delta=1
    99                           	psect	text83,global,reloc=2,class=CODE,delta=1
   100                           	psect	text84,global,reloc=2,class=CODE,delta=1
   101                           	psect	text85,global,reloc=2,class=CODE,delta=1
   102                           	psect	text86,global,reloc=2,class=CODE,delta=1
   103                           	psect	text87,global,reloc=4,class=CODE,delta=1
   104                           	psect	text88,global,reloc=4,class=CODE,delta=1
   105                           	psect	text89,global,reloc=4,class=CODE,delta=1
   106                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   107                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   108                           	psect	text90,global,reloc=4,class=CODE,delta=1
   109                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   110                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   111                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   112  0000                     
   113                           ; Version 2.20
   114                           ; Generated 05/05/2020 GMT
   115                           ; 
   116                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   117                           ; All rights reserved.
   118                           ; 
   119                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   120                           ; 
   121                           ; Redistribution and use in source and binary forms, with or without modification, are
   122                           ; permitted provided that the following conditions are met:
   123                           ; 
   124                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   125                           ;        conditions and the following disclaimer.
   126                           ; 
   127                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   128                           ;        of conditions and the following disclaimer in the documentation and/or other
   129                           ;        materials provided with the distribution.
   130                           ; 
   131                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   132                           ;        software without specific prior written permission.
   133                           ; 
   134                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   135                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   136                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   137                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   138                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   139                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   140                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   141                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   142                           ; 
   143                           ; 
   144                           ; Code-generator required, PIC18F46K42 Definitions
   145                           ; 
   146                           ; SFR Addresses
   147  0000                     
   148                           	psect	idataBANK0
   149  00424C                     __pidataBANK0:
   150                           	callstack 0
   151                           
   152                           ;initializer for _middleOffSet
   153  00424C  F6                 	db	246
   154                           
   155                           ;initializer for _driveMode
   156  00424D  01                 	db	1
   157                           
   158                           	psect	nvCOMRAM
   159  00004C                     __pnvCOMRAM:
   160                           	callstack 0
   161  00004C                     _uart1TxBufferRemaining:
   162                           	callstack 0
   163  00004C                     	ds	1
   164                           
   165                           	psect	nvBANK0
   166  0000E5                     __pnvBANK0:
   167                           	callstack 0
   168  0000E5                     _TMR4_InterruptHandler:
   169                           	callstack 0
   170  0000E5                     	ds	2
   171  0000E7                     _timer3ReloadVal:
   172                           	callstack 0
   173  0000E7                     	ds	2
   174  0000E9                     _TMR5_GateInterruptHandler:
   175                           	callstack 0
   176  0000E9                     	ds	2
   177  0000EB                     _timer5ReloadVal:
   178                           	callstack 0
   179  0000EB                     	ds	2
   180  0000ED                     _CCP4_CallBack:
   181                           	callstack 0
   182  0000ED                     	ds	2
   183  0000EF                     _CCP3_CallBack:
   184                           	callstack 0
   185  0000EF                     	ds	2
   186  0000F1                     _UART1_ErrorHandler:
   187                           	callstack 0
   188  0000F1                     	ds	2
   189  0000F3                     _UART1_OverrunErrorHandler:
   190                           	callstack 0
   191  0000F3                     	ds	2
   192  0000F5                     _UART1_FramingErrorHandler:
   193                           	callstack 0
   194  0000F5                     	ds	2
   195  0000F7                     _UART1_TxInterruptHandler:
   196                           	callstack 0
   197  0000F7                     	ds	2
   198  0000F9                     _UART1_RxInterruptHandler:
   199                           	callstack 0
   200  0000F9                     	ds	2
   201  0000                     _PIR4bits	set	14756
   202  0000                     _PIR1bits	set	14753
   203  0000                     _PIE1bits	set	14737
   204  0000                     _PIE7bits	set	14743
   205  0000                     _PIR7bits	set	14759
   206  0000                     _PIR6bits	set	14758
   207  0000                     _PIE8bits	set	14744
   208  0000                     _PIR8bits	set	14760
   209  0000                     _PIE10bits	set	14746
   210  0000                     _PIR10bits	set	14762
   211  0000                     _PIE9bits	set	14745
   212  0000                     _PIR9bits	set	14761
   213  0000                     _IPR9bits	set	14729
   214  0000                     _IPR7bits	set	14727
   215  0000                     _IPR10bits	set	14730
   216  0000                     _IPR8bits	set	14728
   217  0000                     _IPR1bits	set	14721
   218  0000                     _IPR3bits	set	14723
   219  0000                     _PIE3bits	set	14739
   220  0000                     _PMD7	set	14791
   221  0000                     _PMD6	set	14790
   222  0000                     _PMD5	set	14789
   223  0000                     _PMD4	set	14788
   224  0000                     _PMD3	set	14787
   225  0000                     _PMD2	set	14786
   226  0000                     _PMD1	set	14785
   227  0000                     _PMD0	set	14784
   228  0000                     _OSCTUNE	set	14814
   229  0000                     _OSCFRQ	set	14815
   230  0000                     _OSCEN	set	14813
   231  0000                     _OSCCON3	set	14811
   232  0000                     _OSCCON1	set	14809
   233  0000                     _CCP4PPS	set	15056
   234  0000                     _SMT1SIGPPS	set	15058
   235  0000                     _CLCIN2PPS	set	15067
   236  0000                     _RB3PPS	set	14859
   237  0000                     _RA3PPS	set	14851
   238  0000                     _SMT1WINPPS	set	15057
   239  0000                     _CLCIN0PPS	set	15065
   240  0000                     _RA4PPS	set	14852
   241  0000                     _T5GPPS	set	15049
   242  0000                     _RA0PPS	set	14848
   243  0000                     _U1RXPPS	set	15077
   244  0000                     _RA1PPS	set	14849
   245  0000                     _CLCIN3PPS	set	15068
   246  0000                     _CCP3PPS	set	15055
   247  0000                     _INLVLE	set	14980
   248  0000                     _INLVLD	set	14964
   249  0000                     _INLVLC	set	14948
   250  0000                     _INLVLB	set	14932
   251  0000                     _INLVLA	set	14916
   252  0000                     _SLRCONE	set	14979
   253  0000                     _SLRCOND	set	14963
   254  0000                     _SLRCONC	set	14947
   255  0000                     _SLRCONB	set	14931
   256  0000                     _SLRCONA	set	14915
   257  0000                     _ODCOND	set	14962
   258  0000                     _ODCONC	set	14946
   259  0000                     _ODCONB	set	14930
   260  0000                     _ODCONA	set	14914
   261  0000                     _ODCONE	set	14978
   262  0000                     _RD1I2C	set	14971
   263  0000                     _RD0I2C	set	14970
   264  0000                     _RC4I2C	set	14955
   265  0000                     _RC3I2C	set	14954
   266  0000                     _RB2I2C	set	14939
   267  0000                     _RB1I2C	set	14938
   268  0000                     _WPUC	set	14945
   269  0000                     _WPUA	set	14913
   270  0000                     _WPUB	set	14929
   271  0000                     _WPUE	set	14977
   272  0000                     _WPUD	set	14961
   273  0000                     _ANSELA	set	14912
   274  0000                     _ANSELE	set	14976
   275  0000                     _ANSELB	set	14928
   276  0000                     _ANSELC	set	14944
   277  0000                     _ANSELD	set	14960
   278  0000                     _CLC3CON	set	15456
   279  0000                     _CLC3GLS3	set	15465
   280  0000                     _CLC3GLS2	set	15464
   281  0000                     _CLC3GLS1	set	15463
   282  0000                     _CLC3GLS0	set	15462
   283  0000                     _CLC3SEL3	set	15461
   284  0000                     _CLC3SEL2	set	15460
   285  0000                     _CLC3SEL1	set	15459
   286  0000                     _CLC3SEL0	set	15458
   287  0000                     _CLC3POL	set	15457
   288  0000                     _CLC3CONbits	set	15456
   289  0000                     _U1RXB	set	15848
   290  0000                     _U1TXB	set	15850
   291  0000                     _U1ERRIRbits	set	15865
   292  0000                     _U1ERRIE	set	15866
   293  0000                     _U1ERRIR	set	15865
   294  0000                     _U1UIR	set	15864
   295  0000                     _U1FIFO	set	15863
   296  0000                     _U1BRGH	set	15862
   297  0000                     _U1BRGL	set	15861
   298  0000                     _U1CON2	set	15860
   299  0000                     _U1CON1	set	15859
   300  0000                     _U1CON0	set	15858
   301  0000                     _U1P3H	set	15857
   302  0000                     _U1P3L	set	15856
   303  0000                     _U1P2H	set	15855
   304  0000                     _U1P2L	set	15854
   305  0000                     _U1P1H	set	15853
   306  0000                     _U1P1L	set	15852
   307  0000                     _ADCON1bits	set	16121
   308  0000                     _ADERRL	set	16098
   309  0000                     _ADERRH	set	16099
   310  0000                     _ADPREVL	set	16109
   311  0000                     _ADPREVH	set	16110
   312  0000                     _ADFLTRL	set	16102
   313  0000                     _ADFLTRH	set	16103
   314  0000                     _ADSTATbits	set	16124
   315  0000                     _ADACCL	set	16104
   316  0000                     _ADACCH	set	16105
   317  0000                     _ADCON2bits	set	16122
   318  0000                     _ADCNT	set	16107
   319  0000                     _ADCON3bits	set	16123
   320  0000                     _ADRESL	set	16111
   321  0000                     _ADRESH	set	16112
   322  0000                     _ADCON0bits	set	16120
   323  0000                     _ADCON0	set	16120
   324  0000                     _ADCLK	set	16127
   325  0000                     _ADACT	set	16126
   326  0000                     _ADREF	set	16125
   327  0000                     _ADSTAT	set	16124
   328  0000                     _ADCON3	set	16123
   329  0000                     _ADCON2	set	16122
   330  0000                     _ADCON1	set	16121
   331  0000                     _ADPREH	set	16119
   332  0000                     _ADPREL	set	16118
   333  0000                     _ADCAP	set	16117
   334  0000                     _ADACQH	set	16116
   335  0000                     _ADACQL	set	16115
   336  0000                     _ADPCH	set	16113
   337  0000                     _ADRPT	set	16108
   338  0000                     _ADACCU	set	16106
   339  0000                     _ADSTPTH	set	16101
   340  0000                     _ADSTPTL	set	16100
   341  0000                     _ADUTHH	set	16097
   342  0000                     _ADUTHL	set	16096
   343  0000                     _ADLTHH	set	16095
   344  0000                     _ADLTHL	set	16094
   345  0000                     _SMT1TMR	set	16146
   346  0000                     _SMT1CPR	set	16149
   347  0000                     _SMT1CPW	set	16152
   348  0000                     _SMT1PR	set	16155
   349  0000                     _SMT1STATbits	set	16160
   350  0000                     _SMT1CON0bits	set	16158
   351  0000                     _SMT1CON1bits	set	16159
   352  0000                     _SMT1PRL	set	16155
   353  0000                     _SMT1PRH	set	16156
   354  0000                     _SMT1PRU	set	16157
   355  0000                     _SMT1SIG	set	16162
   356  0000                     _SMT1WIN	set	16163
   357  0000                     _SMT1CLK	set	16161
   358  0000                     _SMT1STAT	set	16160
   359  0000                     _SMT1CON1	set	16159
   360  0000                     _SMT1CON0	set	16158
   361  0000                     _CCPTMRS1bits	set	16223
   362  0000                     _CCPTMRS0bits	set	16222
   363  0000                     _PORTBbits	set	16331
   364  0000                     _PR2	set	16299
   365  0000                     _TMR2	set	16298
   366  0000                     _T2CONbits	set	16300
   367  0000                     _T2RSTbits	set	16303
   368  0000                     _T2HLTbits	set	16301
   369  0000                     _T2CON	set	16300
   370  0000                     _T2TMR	set	16298
   371  0000                     _T2PR	set	16299
   372  0000                     _T2RST	set	16303
   373  0000                     _T2HLT	set	16301
   374  0000                     _T2CLKCON	set	16302
   375  0000                     _PWM6DCL	set	16232
   376  0000                     _PWM6DCH	set	16233
   377  0000                     _PWM6CON	set	16234
   378  0000                     _PWM5DCL	set	16236
   379  0000                     _PWM5DCH	set	16237
   380  0000                     _PWM5CON	set	16238
   381  0000                     _PWM8DCL	set	16224
   382  0000                     _PWM8DCH	set	16225
   383  0000                     _PWM8CON	set	16226
   384  0000                     _PWM7DCL	set	16228
   385  0000                     _PWM7DCH	set	16229
   386  0000                     _PWM7CON	set	16230
   387  0000                     _PR4	set	16287
   388  0000                     _TMR4	set	16286
   389  0000                     _T4CONbits	set	16288
   390  0000                     _T4RSTbits	set	16291
   391  0000                     _T4HLTbits	set	16289
   392  0000                     _T4CON	set	16288
   393  0000                     _T4TMR	set	16286
   394  0000                     _T4PR	set	16287
   395  0000                     _T4RST	set	16291
   396  0000                     _T4HLT	set	16289
   397  0000                     _T4CLKCON	set	16290
   398  0000                     _T3GCONbits	set	16295
   399  0000                     _T3CONbits	set	16294
   400  0000                     _T3CON	set	16294
   401  0000                     _TMR3L	set	16292
   402  0000                     _TMR3H	set	16293
   403  0000                     _T3CLK	set	16297
   404  0000                     _T3GATE	set	16296
   405  0000                     _T3GCON	set	16295
   406  0000                     _T5GCONbits	set	16283
   407  0000                     _T5CONbits	set	16282
   408  0000                     _T5CON	set	16282
   409  0000                     _TMR5L	set	16280
   410  0000                     _TMR5H	set	16281
   411  0000                     _T5CLK	set	16285
   412  0000                     _T5GATE	set	16284
   413  0000                     _T5GCON	set	16283
   414  0000                     _CCPR4L	set	16240
   415  0000                     _CCPR4H	set	16241
   416  0000                     _CCP4CAP	set	16243
   417  0000                     _CCP4CON	set	16242
   418  0000                     _CCPR3L	set	16244
   419  0000                     _CCPR3H	set	16245
   420  0000                     _CCP3CAP	set	16247
   421  0000                     _CCP3CON	set	16246
   422  0000                     _PORTDbits	set	16333
   423  0000                     _IVTBASEL	set	16341
   424  0000                     _IVTBASEH	set	16342
   425  0000                     _IVTBASEU	set	16343
   426  0000                     _IVTLOCKbits	set	16340
   427  0000                     _IVTLOCK	set	16340
   428  0000                     _INTCON0bits	set	16338
   429  0000                     _TRISD	set	16325
   430  0000                     _TRISC	set	16324
   431  0000                     _TRISB	set	16323
   432  0000                     _TRISA	set	16322
   433  0000                     _TRISE	set	16326
   434  0000                     _LATC	set	16316
   435  0000                     _LATB	set	16315
   436  0000                     _LATA	set	16314
   437  0000                     _LATD	set	16317
   438  0000                     _LATE	set	16318
   439  0000                     _GIE	set	130711
   440                           
   441                           	psect	smallconst
   442  001000                     __psmallconst:
   443                           	callstack 0
   444  001000  00                 	db	0
   445  001001                     STR_3:
   446                           
   447                           ; BSR set to: 0
   448  001001  54                 	db	84	;'T'
   449  001002  69                 	db	105	;'i'
   450  001003  6D                 	db	109	;'m'
   451  001004  65                 	db	101	;'e'
   452  001005  3A                 	db	58	;':'
   453  001006  20                 	db	32
   454  001007  09                 	db	9
   455  001008  25                 	db	37
   456  001009  64                 	db	100	;'d'
   457  00100A  20                 	db	32
   458  00100B  20                 	db	32
   459  00100C  20                 	db	32
   460  00100D  20                 	db	32
   461  00100E  20                 	db	32
   462  00100F  09                 	db	9
   463  001010  00                 	db	0
   464  001011                     STR_5:
   465                           
   466                           ; BSR set to: 0
   467  001011  73                 	db	115	;'s'
   468  001012  74                 	db	116	;'t'
   469  001013  61                 	db	97	;'a'
   470  001014  79                 	db	121	;'y'
   471  001015  20                 	db	32
   472  001016  52                 	db	82	;'R'
   473  001017  69                 	db	105	;'i'
   474  001018  67                 	db	103	;'g'
   475  001019  68                 	db	104	;'h'
   476  00101A  74                 	db	116	;'t'
   477  00101B  0A                 	db	10
   478  00101C  00                 	db	0
   479  00101D                     STR_2:
   480                           
   481                           ; BSR set to: 0
   482  00101D  42                 	db	66	;'B'
   483  00101E  61                 	db	97	;'a'
   484  00101F  74                 	db	116	;'t'
   485  001020  74                 	db	116	;'t'
   486  001021  65                 	db	101	;'e'
   487  001022  72                 	db	114	;'r'
   488  001023  79                 	db	121	;'y'
   489  001024  20                 	db	32
   490  001025  4C                 	db	76	;'L'
   491  001026  6F                 	db	111	;'o'
   492  001027  77                 	db	119	;'w'
   493  001028  00                 	db	0
   494  001029                     STR_4:
   495                           
   496                           ; BSR set to: 0
   497  001029  73                 	db	115	;'s'
   498  00102A  74                 	db	116	;'t'
   499  00102B  61                 	db	97	;'a'
   500  00102C  79                 	db	121	;'y'
   501  00102D  20                 	db	32
   502  00102E  4C                 	db	76	;'L'
   503  00102F  65                 	db	101	;'e'
   504  001030  66                 	db	102	;'f'
   505  001031  74                 	db	116	;'t'
   506  001032  0A                 	db	10
   507  001033  00                 	db	0
   508  001034                     STR_1:
   509                           
   510                           ; BSR set to: 0
   511  001034  53                 	db	83	;'S'
   512  001035  69                 	db	105	;'i'
   513  001036  6D                 	db	109	;'m'
   514  001037  6F                 	db	111	;'o'
   515  001038  6E                 	db	110	;'n'
   516  001039  20                 	db	32
   517  00103A  4C                 	db	76	;'L'
   518  00103B  6F                 	db	111	;'o'
   519  00103C  77                 	db	119	;'w'
   520  00103D  00                 	db	0
   521  00103E  00                 	db	0	; dummy byte at the end
   522  0000                     
   523                           ; #config settings
   524                           
   525                           	psect	cinit
   526  003984                     __pcinit:
   527                           	callstack 0
   528  003984                     start_initialization:
   529                           	callstack 0
   530  003984                     __initialization:
   531                           	callstack 0
   532                           
   533                           ; Initialize objects allocated to BANK0 (2 bytes)
   534                           ; load TBLPTR registers with __pidataBANK0
   535  003984  0E4C               	movlw	low __pidataBANK0
   536  003986  6EF6               	movwf	tblptrl,c
   537  003988  0E42               	movlw	high __pidataBANK0
   538  00398A  6EF7               	movwf	tblptrh,c
   539  00398C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   540  00398E  6EF8               	movwf	tblptru,c
   541  003990  0009               	tblrd		*+	;fetch initializer
   542  003992  006F FFD4  F0FB    	movff	tablat,__pdataBANK0
   543  003998  0009               	tblrd		*+	;fetch initializer
   544  00399A  006F FFD4  F0FC    	movff	tablat,__pdataBANK0+1
   545                           
   546                           ; Clear objects allocated to BANK1 (32 bytes)
   547  0039A0  EE00  F100         	lfsr	0,__pbssBANK1
   548  0039A4  0E20               	movlw	32
   549  0039A6                     clear_0:
   550  0039A6  6AEE               	clrf	postinc0,c
   551  0039A8  06E8               	decf	wreg,f,c
   552  0039AA  E1FD               	bnz	clear_0
   553                           
   554                           ; Clear objects allocated to BANK0 (69 bytes)
   555  0039AC  EE00  F060         	lfsr	0,__pbssBANK0
   556  0039B0  0E45               	movlw	69
   557  0039B2                     clear_1:
   558  0039B2  6AEE               	clrf	postinc0,c
   559  0039B4  06E8               	decf	wreg,f,c
   560  0039B6  E1FD               	bnz	clear_1
   561                           
   562                           ; Clear objects allocated to COMRAM (18 bytes)
   563  0039B8  EE00  F03A         	lfsr	0,__pbssCOMRAM
   564  0039BC  0E12               	movlw	18
   565  0039BE                     clear_2:
   566  0039BE  6AEE               	clrf	postinc0,c
   567  0039C0  06E8               	decf	wreg,f,c
   568  0039C2  E1FD               	bnz	clear_2
   569                           
   570                           ;
   571                           ; Setup IVTBASE
   572                           ;
   573  0039C4  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   574  0039C6  6ED5               	movwf	213,c
   575  0039C8  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   576  0039CA  6ED6               	movwf	214,c
   577  0039CC  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   578  0039CE  6ED7               	movwf	215,c
   579  0039D0                     end_of_initialization:
   580                           	callstack 0
   581  0039D0                     __end_of__initialization:
   582                           	callstack 0
   583  0039D0  0100               	movlb	0
   584  0039D2  EF76  F020         	goto	_main	;jump to C main() function
   585                           
   586                           	psect	bssCOMRAM
   587  00003A                     __pbssCOMRAM:
   588                           	callstack 0
   589  00003A                     _prec:
   590                           	callstack 0
   591  00003A                     	ds	2
   592  00003C                     _flags:
   593                           	callstack 0
   594  00003C                     	ds	2
   595  00003E                     TMR4_ISR@CountCallBack:
   596                           	callstack 0
   597  00003E                     	ds	2
   598  000040                     _distLeftM:
   599                           	callstack 0
   600  000040                     	ds	2
   601  000042                     _uart1RxLastError:
   602                           	callstack 0
   603  000042                     	ds	1
   604  000043                     _uart1RxCount:
   605                           	callstack 0
   606  000043                     	ds	1
   607  000044                     _uart1RxTail:
   608                           	callstack 0
   609  000044                     	ds	1
   610  000045                     _uart1RxHead:
   611                           	callstack 0
   612  000045                     	ds	1
   613  000046                     _uart1TxTail:
   614                           	callstack 0
   615  000046                     	ds	1
   616  000047                     _uart1TxHead:
   617                           	callstack 0
   618  000047                     	ds	1
   619  000048                     _smtPeriod:
   620                           	callstack 0
   621  000048                     	ds	4
   622                           
   623                           	psect	bssBANK0
   624  000060                     __pbssBANK0:
   625                           	callstack 0
   626  000060                     _uart1RxStatusBuffer:
   627                           	callstack 0
   628  000060                     	ds	8
   629  000068                     _uart1RxBuffer:
   630                           	callstack 0
   631  000068                     	ds	8
   632  000070                     _uart1TxBuffer:
   633                           	callstack 0
   634  000070                     	ds	8
   635  000078                     _smtWay:
   636                           	callstack 0
   637  000078                     	ds	4
   638  00007C                     _smtDuty:
   639                           	callstack 0
   640  00007C                     	ds	4
   641  000080                     _nout:
   642                           	callstack 0
   643  000080                     	ds	2
   644  000082                     _width:
   645                           	callstack 0
   646  000082                     	ds	2
   647  000084                     _BatteryVolt:
   648                           	callstack 0
   649  000084                     	ds	2
   650  000086                     _reverseTime:
   651                           	callstack 0
   652  000086                     	ds	2
   653  000088                     _actMotorPow:
   654                           	callstack 0
   655  000088                     	ds	2
   656  00008A                     _oldSpeed:
   657                           	callstack 0
   658  00008A                     	ds	2
   659  00008C                     _currentSpeed:
   660                           	callstack 0
   661  00008C                     	ds	2
   662  00008E                     _setSpeed:
   663                           	callstack 0
   664  00008E                     	ds	2
   665  000090                     _motPow:
   666                           	callstack 0
   667  000090                     	ds	2
   668  000092                     _battCheckCount:
   669                           	callstack 0
   670  000092                     	ds	2
   671  000094                     _oldDistRight:
   672                           	callstack 0
   673  000094                     	ds	2
   674  000096                     _oldDistLeft:
   675                           	callstack 0
   676  000096                     	ds	2
   677  000098                     _reverseCount:
   678                           	callstack 0
   679  000098                     	ds	2
   680  00009A                     _distRightM:
   681                           	callstack 0
   682  00009A                     	ds	2
   683  00009C                     _distRight:
   684                           	callstack 0
   685  00009C                     	ds	2
   686  00009E                     _distLeft:
   687                           	callstack 0
   688  00009E                     	ds	2
   689  0000A0                     _delay:
   690                           	callstack 0
   691  0000A0                     	ds	1
   692  0000A1                     _cycle10ms:
   693                           	callstack 0
   694  0000A1                     	ds	1
   695  0000A2                     _curveMode:
   696                           	callstack 0
   697  0000A2                     	ds	1
   698  0000A3                     _distFront:
   699                           	callstack 0
   700  0000A3                     	ds	2
   701                           
   702                           	psect	dataBANK0
   703  0000FB                     __pdataBANK0:
   704                           	callstack 0
   705  0000FB                     _middleOffSet:
   706                           	callstack 0
   707  0000FB                     	ds	1
   708  0000FC                     _driveMode:
   709                           	callstack 0
   710  0000FC                     	ds	1
   711                           
   712                           	psect	bssBANK1
   713  000100                     __pbssBANK1:
   714                           	callstack 0
   715  000100                     _dbuf:
   716                           	callstack 0
   717  000100                     	ds	32
   718                           
   719                           	psect	cstackBANK0
   720  0000A5                     __pcstackBANK0:
   721                           	callstack 0
   722  0000A5                     ?_dtoa:
   723                           	callstack 0
   724  0000A5                     ___flmul@sign:
   725                           	callstack 0
   726  0000A5                     dtoa@fp:
   727                           	callstack 0
   728                           
   729                           ; 2 bytes @ 0x0
   730  0000A5                     	ds	1
   731  0000A6                     ___flmul@aexp:
   732                           	callstack 0
   733                           
   734                           ; 1 bytes @ 0x1
   735  0000A6                     	ds	1
   736  0000A7                     ___flmul@grs:
   737                           	callstack 0
   738  0000A7                     dtoa@d:
   739                           	callstack 0
   740                           
   741                           ; 8 bytes @ 0x2
   742  0000A7                     	ds	4
   743  0000AB                     ___flmul@bexp:
   744                           	callstack 0
   745                           
   746                           ; 1 bytes @ 0x6
   747  0000AB                     	ds	1
   748  0000AC                     ___flmul@prod:
   749                           	callstack 0
   750                           
   751                           ; 4 bytes @ 0x7
   752  0000AC                     	ds	3
   753  0000AF                     _dtoa$3491:
   754                           	callstack 0
   755                           
   756                           ; 2 bytes @ 0xA
   757  0000AF                     	ds	1
   758  0000B0                     ___flmul@temp:
   759                           	callstack 0
   760                           
   761                           ; 2 bytes @ 0xB
   762  0000B0                     	ds	1
   763  0000B1                     dtoa@p:
   764                           	callstack 0
   765                           
   766                           ; 2 bytes @ 0xC
   767  0000B1                     	ds	1
   768  0000B2                     ?___fladd:
   769                           	callstack 0
   770  0000B2                     ___fladd@b:
   771                           	callstack 0
   772                           
   773                           ; 4 bytes @ 0xD
   774  0000B2                     	ds	1
   775  0000B3                     dtoa@w:
   776                           	callstack 0
   777                           
   778                           ; 2 bytes @ 0xE
   779  0000B3                     	ds	2
   780  0000B5                     dtoa@s:
   781                           	callstack 0
   782                           
   783                           ; 2 bytes @ 0x10
   784  0000B5                     	ds	1
   785  0000B6                     ___fladd@a:
   786                           	callstack 0
   787                           
   788                           ; 4 bytes @ 0x11
   789  0000B6                     	ds	1
   790  0000B7                     dtoa@n:
   791                           	callstack 0
   792                           
   793                           ; 8 bytes @ 0x12
   794  0000B7                     	ds	3
   795  0000BA                     ___fladd@signs:
   796                           	callstack 0
   797                           
   798                           ; 1 bytes @ 0x15
   799  0000BA                     	ds	1
   800  0000BB                     ___fladd@aexp:
   801                           	callstack 0
   802                           
   803                           ; 1 bytes @ 0x16
   804  0000BB                     	ds	1
   805  0000BC                     ___fladd@bexp:
   806                           	callstack 0
   807                           
   808                           ; 1 bytes @ 0x17
   809  0000BC                     	ds	1
   810  0000BD                     ___fladd@grs:
   811                           	callstack 0
   812                           
   813                           ; 1 bytes @ 0x18
   814  0000BD                     	ds	1
   815  0000BE                     ?___fltol:
   816                           	callstack 0
   817  0000BE                     ___fltol@f1:
   818                           	callstack 0
   819                           
   820                           ; 4 bytes @ 0x19
   821  0000BE                     	ds	1
   822  0000BF                     dtoa@i:
   823                           	callstack 0
   824                           
   825                           ; 2 bytes @ 0x1A
   826  0000BF                     	ds	2
   827  0000C1                     ?_vfpfcnvrt:
   828                           	callstack 0
   829  0000C1                     vfpfcnvrt@fp:
   830                           	callstack 0
   831                           
   832                           ; 2 bytes @ 0x1C
   833  0000C1                     	ds	1
   834  0000C2                     ??___fltol:
   835                           
   836                           ; 1 bytes @ 0x1D
   837  0000C2                     	ds	1
   838  0000C3                     vfpfcnvrt@fmt:
   839                           	callstack 0
   840                           
   841                           ; 2 bytes @ 0x1E
   842  0000C3                     	ds	2
   843  0000C5                     vfpfcnvrt@ap:
   844                           	callstack 0
   845                           
   846                           ; 2 bytes @ 0x20
   847  0000C5                     	ds	1
   848  0000C6                     ___fltol@sign1:
   849                           	callstack 0
   850                           
   851                           ; 1 bytes @ 0x21
   852  0000C6                     	ds	1
   853  0000C7                     ??_vfpfcnvrt:
   854  0000C7                     ___fltol@exp1:
   855                           	callstack 0
   856                           
   857                           ; 1 bytes @ 0x22
   858  0000C7                     	ds	1
   859  0000C8                     ??_calcSteering:
   860  0000C8                     ??_calcSpeed:
   861  0000C8                     ??_calcMotorPow:
   862                           
   863                           ; 1 bytes @ 0x23
   864  0000C8                     	ds	1
   865  0000C9                     vfpfcnvrt@ll:
   866                           	callstack 0
   867                           
   868                           ; 8 bytes @ 0x24
   869  0000C9                     	ds	1
   870  0000CA                     calcMotorPow@setSpeedDelta:
   871                           	callstack 0
   872  0000CA                     _calcSteering$4029:
   873                           	callstack 0
   874                           
   875                           ; 2 bytes @ 0x25
   876  0000CA                     	ds	2
   877  0000CC                     calcSteering@delta:
   878                           	callstack 0
   879  0000CC                     calcSpeed@speed:
   880                           	callstack 0
   881  0000CC                     calcMotorPow@oldSpeedDelta:
   882                           	callstack 0
   883                           
   884                           ; 2 bytes @ 0x27
   885  0000CC                     	ds	2
   886  0000CE                     calcMotorPow@addMPow:
   887                           	callstack 0
   888                           
   889                           ; 1 bytes @ 0x29
   890  0000CE                     	ds	3
   891  0000D1                     ?_vfprintf:
   892                           	callstack 0
   893  0000D1                     vfprintf@fp:
   894                           	callstack 0
   895                           
   896                           ; 2 bytes @ 0x2C
   897  0000D1                     	ds	2
   898  0000D3                     vfprintf@fmt:
   899                           	callstack 0
   900                           
   901                           ; 2 bytes @ 0x2E
   902  0000D3                     	ds	2
   903  0000D5                     vfprintf@ap:
   904                           	callstack 0
   905                           
   906                           ; 2 bytes @ 0x30
   907  0000D5                     	ds	2
   908  0000D7                     vfprintf@cfmt:
   909                           	callstack 0
   910                           
   911                           ; 2 bytes @ 0x32
   912  0000D7                     	ds	2
   913  0000D9                     ?_printf:
   914                           	callstack 0
   915  0000D9                     printf@fmt:
   916                           	callstack 0
   917                           
   918                           ; 2 bytes @ 0x34
   919  0000D9                     	ds	4
   920  0000DD                     printf@ap:
   921                           	callstack 0
   922                           
   923                           ; 2 bytes @ 0x38
   924  0000DD                     	ds	2
   925  0000DF                     ??_getCurve:
   926                           
   927                           ; 1 bytes @ 0x3A
   928  0000DF                     	ds	2
   929  0000E1                     getCurve@deltaRight:
   930                           	callstack 0
   931                           
   932                           ; 2 bytes @ 0x3C
   933  0000E1                     	ds	2
   934  0000E3                     getCurve@deltaLeft:
   935                           	callstack 0
   936                           
   937                           ; 2 bytes @ 0x3E
   938  0000E3                     	ds	2
   939                           
   940                           	psect	cstackCOMRAM
   941  000001                     __pcstackCOMRAM:
   942                           	callstack 0
   943  000001                     CCP3_DefaultCallBack@capturedValue:
   944                           	callstack 0
   945                           
   946                           ; 2 bytes @ 0x0
   947  000001                     	ds	2
   948  000003                     CCP3_CaptureISR@module:
   949                           	callstack 0
   950                           
   951                           ; 2 bytes @ 0x2
   952  000003                     	ds	2
   953  000005                     CCP4_DefaultCallBack@capturedValue:
   954                           	callstack 0
   955                           
   956                           ; 2 bytes @ 0x4
   957  000005                     	ds	2
   958  000007                     CCP4_CaptureISR@module:
   959                           	callstack 0
   960                           
   961                           ; 2 bytes @ 0x6
   962  000007                     	ds	2
   963  000009                     ?_TMR5_ReadTimer:
   964                           	callstack 0
   965  000009                     TMR5_WriteTimer@timerVal:
   966                           	callstack 0
   967                           
   968                           ; 2 bytes @ 0x8
   969  000009                     	ds	2
   970  00000B                     ??_TMR5_ReadTimer:
   971  00000B                     
   972                           ; 1 bytes @ 0xA
   973  00000B                     	ds	2
   974  00000D                     TMR5_ReadTimer@readVal:
   975                           	callstack 0
   976                           
   977                           ; 2 bytes @ 0xC
   978  00000D                     	ds	2
   979  00000F                     TMR5_ReadTimer@readValHigh:
   980                           	callstack 0
   981                           
   982                           ; 1 bytes @ 0xE
   983  00000F                     	ds	1
   984  000010                     TMR5_ReadTimer@readValLow:
   985                           	callstack 0
   986                           
   987                           ; 1 bytes @ 0xF
   988  000010                     	ds	1
   989  000011                     ??_UART1_tx_vect_isr:
   990  000011                     
   991                           ; 1 bytes @ 0x10
   992  000011                     	ds	1
   993  000012                     ??_UART1_rx_vect_isr:
   994                           
   995                           ; 1 bytes @ 0x11
   996  000012                     	ds	1
   997  000013                     ??_TMR4_ISR:
   998                           
   999                           ; 1 bytes @ 0x12
  1000  000013                     	ds	1
  1001  000014                     ??_TMR3_Initialize:
  1002  000014                     ?_strlen:
  1003                           	callstack 0
  1004  000014                     ?_ADCC_GetSingleConversion:
  1005                           	callstack 0
  1006  000014                     ?___awdiv:
  1007                           	callstack 0
  1008  000014                     ?___aldiv:
  1009                           	callstack 0
  1010  000014                     ?___aodiv:
  1011                           	callstack 0
  1012  000014                     ?___aomod:
  1013                           	callstack 0
  1014  000014                     UART1_Write@txData:
  1015                           	callstack 0
  1016  000014                     INTERRUPT_Initialize@state:
  1017                           	callstack 0
  1018  000014                     UART1_SetFramingErrorHandler@interruptHandler:
  1019                           	callstack 0
  1020  000014                     UART1_SetOverrunErrorHandler@interruptHandler:
  1021                           	callstack 0
  1022  000014                     UART1_SetErrorHandler@interruptHandler:
  1023                           	callstack 0
  1024  000014                     UART1_SetRxInterruptHandler@InterruptHandler:
  1025                           	callstack 0
  1026  000014                     UART1_SetTxInterruptHandler@InterruptHandler:
  1027                           	callstack 0
  1028  000014                     CCP3_SetCallBack@customCallBack:
  1029                           	callstack 0
  1030  000014                     CCP4_SetCallBack@customCallBack:
  1031                           	callstack 0
  1032  000014                     TMR5_SetGateInterruptHandler@InterruptHandler:
  1033                           	callstack 0
  1034  000014                     TMR4_SetInterruptHandler@InterruptHandler:
  1035                           	callstack 0
  1036  000014                     PWM7_LoadDutyValue@dutyValue:
  1037                           	callstack 0
  1038  000014                     PWM8_LoadDutyValue@dutyValue:
  1039                           	callstack 0
  1040  000014                     PWM5_LoadDutyValue@dutyValue:
  1041                           	callstack 0
  1042  000014                     PWM6_LoadDutyValue@dutyValue:
  1043                           	callstack 0
  1044  000014                     ___awdiv@dividend:
  1045                           	callstack 0
  1046  000014                     strlen@s:
  1047                           	callstack 0
  1048  000014                     ___aldiv@dividend:
  1049                           	callstack 0
  1050  000014                     ___aodiv@dividend:
  1051                           	callstack 0
  1052  000014                     ___aomod@dividend:
  1053                           	callstack 0
  1054                           
  1055                           ; 8 bytes @ 0x13
  1056  000014                     	ds	1
  1057  000015                     putch@txData:
  1058                           	callstack 0
  1059                           
  1060                           ; 1 bytes @ 0x14
  1061  000015                     	ds	1
  1062  000016                     ??_TMR5_Initialize:
  1063  000016                     ??_PWM7_LoadDutyValue:
  1064  000016                     ??_PWM8_LoadDutyValue:
  1065  000016                     ??_PWM5_LoadDutyValue:
  1066  000016                     ??_PWM6_LoadDutyValue:
  1067  000016                     ??_ADCC_GetSingleConversion:
  1068  000016                     ___awdiv@divisor:
  1069                           	callstack 0
  1070  000016                     fputc@c:
  1071                           	callstack 0
  1072  000016                     strlen@a:
  1073                           	callstack 0
  1074                           
  1075                           ; 2 bytes @ 0x15
  1076  000016                     	ds	2
  1077  000018                     ADCC_GetSingleConversion@channel:
  1078                           	callstack 0
  1079  000018                     ___awdiv@counter:
  1080                           	callstack 0
  1081  000018                     setMotor@motorPower:
  1082                           	callstack 0
  1083  000018                     fputc@fp:
  1084                           	callstack 0
  1085  000018                     ___aldiv@divisor:
  1086                           	callstack 0
  1087                           
  1088                           ; 4 bytes @ 0x17
  1089  000018                     	ds	1
  1090  000019                     ___awdiv@sign:
  1091                           	callstack 0
  1092                           
  1093                           ; 1 bytes @ 0x18
  1094  000019                     	ds	1
  1095  00001A                     ??_setMotor:
  1096  00001A                     ??_fputc:
  1097  00001A                     ___awdiv@quotient:
  1098                           	callstack 0
  1099                           
  1100                           ; 2 bytes @ 0x19
  1101  00001A                     	ds	2
  1102  00001C                     ?___xxtofl:
  1103                           	callstack 0
  1104  00001C                     ___aldiv@counter:
  1105                           	callstack 0
  1106  00001C                     setSteering@steering:
  1107                           	callstack 0
  1108  00001C                     ___xxtofl@val:
  1109                           	callstack 0
  1110  00001C                     ___aodiv@divisor:
  1111                           	callstack 0
  1112  00001C                     ___aomod@divisor:
  1113                           	callstack 0
  1114                           
  1115                           ; 8 bytes @ 0x1B
  1116  00001C                     	ds	1
  1117  00001D                     ___aldiv@sign:
  1118                           	callstack 0
  1119                           
  1120                           ; 1 bytes @ 0x1C
  1121  00001D                     	ds	1
  1122  00001E                     setSteering@steeringMode:
  1123                           	callstack 0
  1124  00001E                     ___aldiv@quotient:
  1125                           	callstack 0
  1126                           
  1127                           ; 4 bytes @ 0x1D
  1128  00001E                     	ds	1
  1129  00001F                     ??_setSteering:
  1130  00001F                     fputs@s:
  1131                           	callstack 0
  1132                           
  1133                           ; 2 bytes @ 0x1E
  1134  00001F                     	ds	1
  1135  000020                     ??___xxtofl:
  1136                           
  1137                           ; 1 bytes @ 0x1F
  1138  000020                     	ds	1
  1139  000021                     setSteering@steeringF:
  1140                           	callstack 0
  1141  000021                     fputs@fp:
  1142                           	callstack 0
  1143                           
  1144                           ; 2 bytes @ 0x20
  1145  000021                     	ds	1
  1146  000022                     ?_actSpeed:
  1147                           	callstack 0
  1148                           
  1149                           ; 2 bytes @ 0x21
  1150  000022                     	ds	1
  1151  000023                     fputs@c:
  1152                           	callstack 0
  1153  000023                     setSteering@steeringB:
  1154                           	callstack 0
  1155                           
  1156                           ; 2 bytes @ 0x22
  1157  000023                     	ds	1
  1158  000024                     ___aodiv@counter:
  1159                           	callstack 0
  1160  000024                     ___aomod@counter:
  1161                           	callstack 0
  1162  000024                     ___xxtofl@sign:
  1163                           	callstack 0
  1164  000024                     actSpeed@speed:
  1165                           	callstack 0
  1166  000024                     fputs@i:
  1167                           	callstack 0
  1168                           
  1169                           ; 2 bytes @ 0x23
  1170  000024                     	ds	1
  1171  000025                     ___aodiv@sign:
  1172                           	callstack 0
  1173  000025                     ___aomod@sign:
  1174                           	callstack 0
  1175  000025                     ___xxtofl@exp:
  1176                           	callstack 0
  1177                           
  1178                           ; 1 bytes @ 0x24
  1179  000025                     	ds	1
  1180  000026                     ?_abs:
  1181                           	callstack 0
  1182  000026                     ?_pad:
  1183                           	callstack 0
  1184  000026                     pad@fp:
  1185                           	callstack 0
  1186  000026                     abs@a:
  1187                           	callstack 0
  1188  000026                     ___xxtofl@arg:
  1189                           	callstack 0
  1190  000026                     ___aodiv@quotient:
  1191                           	callstack 0
  1192                           
  1193                           ; 8 bytes @ 0x25
  1194  000026                     	ds	2
  1195  000028                     ??_abs:
  1196  000028                     pad@buf:
  1197                           	callstack 0
  1198                           
  1199                           ; 2 bytes @ 0x27
  1200  000028                     	ds	2
  1201  00002A                     ?___flmul:
  1202                           	callstack 0
  1203  00002A                     pad@p:
  1204                           	callstack 0
  1205  00002A                     ___flge@ff1:
  1206                           	callstack 0
  1207  00002A                     ___flmul@b:
  1208                           	callstack 0
  1209                           
  1210                           ; 4 bytes @ 0x29
  1211  00002A                     	ds	2
  1212  00002C                     ??_pad:
  1213                           
  1214                           ; 1 bytes @ 0x2B
  1215  00002C                     	ds	1
  1216  00002D                     pad@i:
  1217                           	callstack 0
  1218                           
  1219                           ; 2 bytes @ 0x2C
  1220  00002D                     	ds	1
  1221  00002E                     ___flge@ff2:
  1222                           	callstack 0
  1223  00002E                     ___flmul@a:
  1224                           	callstack 0
  1225                           
  1226                           ; 4 bytes @ 0x2D
  1227  00002E                     	ds	1
  1228  00002F                     pad@w:
  1229                           	callstack 0
  1230                           
  1231                           ; 2 bytes @ 0x2E
  1232  00002F                     	ds	2
  1233  000031                     ??_dtoa:
  1234                           
  1235                           ; 1 bytes @ 0x30
  1236  000031                     	ds	1
  1237  000032                     ??___flmul:
  1238  000032                     ??___flge:
  1239                           
  1240                           ; 1 bytes @ 0x31
  1241  000032                     	ds	4
  1242  000036                     ??___fladd:
  1243                           
  1244                           ; 1 bytes @ 0x35
  1245  000036                     	ds	3
  1246  000039                     
  1247                           ; 1 bytes @ 0x38
  1248  000039                     	ds	1
  1249  00003A                     
  1250                           ; 1 bytes @ 0x39
  1251 ;;
  1252 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1253 ;;
  1254 ;; *************** function _main *****************
  1255 ;; Defined at:
  1256 ;;		line 8 in file "main.c"
  1257 ;; Parameters:    Size  Location     Type
  1258 ;;		None
  1259 ;; Auto vars:     Size  Location     Type
  1260 ;;		None
  1261 ;; Return value:  Size  Location     Type
  1262 ;;                  1    wreg      void 
  1263 ;; Registers used:
  1264 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1265 ;; Tracked objects:
  1266 ;;		On entry : 0/0
  1267 ;;		On exit  : 0/0
  1268 ;;		Unchanged: 0/0
  1269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1273 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1274 ;;Total ram usage:        0 bytes
  1275 ;; Hardware stack levels required when called: 19
  1276 ;; This function calls:
  1277 ;;		_SYSTEM_Initialize
  1278 ;;		_TMR4_SetInterruptHandler
  1279 ;;		_loop
  1280 ;; This function is called by:
  1281 ;;		Startup code after reset
  1282 ;; This function uses a non-reentrant model
  1283 ;;
  1284                           
  1285                           	psect	text0
  1286  0040EC                     __ptext0:
  1287                           	callstack 0
  1288  0040EC                     _main:
  1289                           	callstack 12
  1290  0040EC                     
  1291                           ;main.c: 9:     SYSTEM_Initialize();
  1292  0040EC  EC11  F01D         	call	_SYSTEM_Initialize	;wreg free
  1293  0040F0                     
  1294                           ;main.c: 10:     (INTCON0bits.GIEH = 1);
  1295  0040F0  8ED2               	bsf	210,7,c	;volatile
  1296  0040F2                     
  1297                           ;main.c: 11:     (INTCON0bits.GIEL = 1);
  1298  0040F2  8CD2               	bsf	210,6,c	;volatile
  1299                           
  1300                           ;main.c: 12:     TMR4_SetInterruptHandler(TMR4_10msISR);
  1301  0040F4  0E46               	movlw	low _TMR4_10msISR
  1302  0040F6  6E14               	movwf	TMR4_SetInterruptHandler@InterruptHandler^0,c
  1303  0040F8  0E42               	movlw	high _TMR4_10msISR
  1304  0040FA  6E15               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)^0,c
  1305  0040FC  EC11  F021         	call	_TMR4_SetInterruptHandler	;wreg free
  1306  004100                     l6844:
  1307                           
  1308                           ;main.c: 15:         loop();
  1309  004100  EC37  F016         	call	_loop	;wreg free
  1310  004104  EF80  F020         	goto	l6844
  1311  004108  EF57  F000         	goto	start
  1312  00410C                     __end_of_main:
  1313                           	callstack 0
  1314                           
  1315 ;; *************** function _loop *****************
  1316 ;; Defined at:
  1317 ;;		line 19 in file "main.c"
  1318 ;; Parameters:    Size  Location     Type
  1319 ;;		None
  1320 ;; Auto vars:     Size  Location     Type
  1321 ;;		None
  1322 ;; Return value:  Size  Location     Type
  1323 ;;                  1    wreg      void 
  1324 ;; Registers used:
  1325 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1326 ;; Tracked objects:
  1327 ;;		On entry : 0/0
  1328 ;;		On exit  : 0/0
  1329 ;;		Unchanged: 0/0
  1330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1334 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1335 ;;Total ram usage:        0 bytes
  1336 ;; Hardware stack levels used: 1
  1337 ;; Hardware stack levels required when called: 18
  1338 ;; This function calls:
  1339 ;;		___flge
  1340 ;;		___xxtofl
  1341 ;;		_calcMotorPow
  1342 ;;		_calcSpeed
  1343 ;;		_calcSteering
  1344 ;;		_checkBatt
  1345 ;;		_getBatteryVoltage
  1346 ;;		_getCurve
  1347 ;;		_getReverse
  1348 ;;		_printf
  1349 ;;		_setMotor
  1350 ;;		_setSteering
  1351 ;; This function is called by:
  1352 ;;		_main
  1353 ;; This function uses a non-reentrant model
  1354 ;;
  1355                           
  1356                           	psect	text1
  1357  002C6E                     __ptext1:
  1358                           	callstack 0
  1359  002C6E                     _loop:
  1360                           	callstack 12
  1361  002C6E                     
  1362                           ;main.c: 20:     setMotor(0);
  1363  002C6E  0E00               	movlw	0
  1364  002C70  6E19               	movwf	(setMotor@motorPower+1)^0,c
  1365  002C72  0E00               	movlw	0
  1366  002C74  6E18               	movwf	setMotor@motorPower^0,c
  1367  002C76  ECDF  F018         	call	_setMotor	;wreg free
  1368                           
  1369                           ;main.c: 21:     setSteering(0, Front);
  1370  002C7A  0E00               	movlw	0
  1371  002C7C  6E1D               	movwf	(setSteering@steering+1)^0,c
  1372  002C7E  0E00               	movlw	0
  1373  002C80  6E1C               	movwf	setSteering@steering^0,c
  1374  002C82  0E03               	movlw	3
  1375  002C84  6E1E               	movwf	setSteering@steeringMode^0,c
  1376  002C86  EC4D  F013         	call	_setSteering	;wreg free
  1377                           
  1378                           ;main.c: 22:     while (PORTBbits.RB4){
  1379  002C8A  EF4E  F016         	goto	l6798
  1380  002C8E                     l6796:
  1381                           
  1382                           ;main.c: 24:             printf("Simon Low");
  1383  002C8E  0E34               	movlw	low STR_1
  1384  002C90  0100               	movlb	0	; () banked
  1385  002C92  6FD9               	movwf	printf@fmt& (0+255),b
  1386  002C94  0E10               	movlw	high STR_1
  1387  002C96  6FDA               	movwf	(printf@fmt+1)& (0+255),b
  1388  002C98  EC2A  F020         	call	_printf	;wreg free
  1389  002C9C                     l6798:
  1390                           
  1391                           ;main.c: 22:     while (PORTBbits.RB4){
  1392  002C9C  B8CB               	btfsc	203,4,c	;volatile
  1393  002C9E  EF53  F016         	goto	u6161
  1394  002CA2  EF55  F016         	goto	u6160
  1395  002CA6                     u6161:
  1396  002CA6  EF47  F016         	goto	l6796
  1397  002CAA                     u6160:
  1398  002CAA                     l6800:
  1399  002CAA  0100               	movlb	0	; () banked
  1400  002CAC  51A1               	movf	_cycle10ms& (0+255),w,b	;volatile
  1401  002CAE  B4D8               	btfsc	status,2,c
  1402  002CB0  EF5C  F016         	goto	u6171
  1403  002CB4  EF5E  F016         	goto	u6170
  1404  002CB8                     u6171:
  1405  002CB8  EF55  F016         	goto	l6800
  1406  002CBC                     u6170:
  1407  002CBC                     
  1408                           ; BSR set to: 0
  1409                           ;main.c: 29:         cycle10ms = 0;
  1410  002CBC  0E00               	movlw	0
  1411  002CBE  6FA1               	movwf	_cycle10ms& (0+255),b	;volatile
  1412  002CC0                     
  1413                           ; BSR set to: 0
  1414                           ;main.c: 31:         getBatteryVoltage();
  1415  002CC0  ECDF  F020         	call	_getBatteryVoltage	;wreg free
  1416  002CC4                     
  1417                           ;main.c: 32:     } while (BatteryVolt < ((6.8) * 409.6));
  1418  002CC4  C084  F01C         	movff	_BatteryVolt,___xxtofl@val
  1419  002CC8  C085  F01D         	movff	_BatteryVolt+1,___xxtofl@val+1
  1420  002CCC  6A1E               	clrf	(___xxtofl@val+2)^0,c
  1421  002CCE  6A1F               	clrf	(___xxtofl@val+3)^0,c
  1422  002CD0  0E00               	movlw	0
  1423  002CD2  EC73  F012         	call	___xxtofl
  1424  002CD6  C01C  F02A         	movff	?___xxtofl,___flge@ff1
  1425  002CDA  C01D  F02B         	movff	?___xxtofl+1,___flge@ff1+1
  1426  002CDE  C01E  F02C         	movff	?___xxtofl+2,___flge@ff1+2
  1427  002CE2  C01F  F02D         	movff	?___xxtofl+3,___flge@ff1+3
  1428  002CE6  0E7B               	movlw	123
  1429  002CE8  6E2E               	movwf	___flge@ff2^0,c
  1430  002CEA  0E14               	movlw	20
  1431  002CEC  6E2F               	movwf	(___flge@ff2+1)^0,c
  1432  002CEE  0E2E               	movlw	46
  1433  002CF0  6E30               	movwf	(___flge@ff2+2)^0,c
  1434  002CF2  0E45               	movlw	69
  1435  002CF4  6E31               	movwf	(___flge@ff2+3)^0,c
  1436  002CF6  ECE1  F017         	call	___flge	;wreg free
  1437  002CFA  A0D8               	btfss	status,0,c
  1438  002CFC  EF82  F016         	goto	u6181
  1439  002D00  EF84  F016         	goto	u6180
  1440  002D04                     u6181:
  1441  002D04  EF55  F016         	goto	l6800
  1442  002D08                     u6180:
  1443  002D08                     
  1444                           ;main.c: 35:     driveMode = Straight;
  1445  002D08  0E01               	movlw	1
  1446  002D0A  0100               	movlb	0	; () banked
  1447  002D0C  6FFC               	movwf	_driveMode& (0+255),b
  1448                           
  1449                           ;main.c: 36:     curveMode = OutCurve;
  1450  002D0E  0E00               	movlw	0
  1451  002D10  6FA2               	movwf	_curveMode& (0+255),b
  1452  002D12                     
  1453                           ; BSR set to: 0
  1454                           ;main.c: 37:     oldDistLeft = distLeft;
  1455  002D12  C09E  F096         	movff	_distLeft,_oldDistLeft	;volatile
  1456  002D16  C09F  F097         	movff	_distLeft+1,_oldDistLeft+1	;volatile
  1457  002D1A                     
  1458                           ; BSR set to: 0
  1459                           ;main.c: 38:     oldDistRight = distRight;
  1460  002D1A  C09C  F094         	movff	_distRight,_oldDistRight	;volatile
  1461  002D1E  C09D  F095         	movff	_distRight+1,_oldDistRight+1	;volatile
  1462                           
  1463                           ;main.c: 39:     cycle10ms = 0;
  1464  002D22  0E00               	movlw	0
  1465  002D24  6FA1               	movwf	_cycle10ms& (0+255),b	;volatile
  1466  002D26                     l6814:
  1467  002D26  0100               	movlb	0	; () banked
  1468  002D28  51A1               	movf	_cycle10ms& (0+255),w,b	;volatile
  1469  002D2A  B4D8               	btfsc	status,2,c
  1470  002D2C  EF9A  F016         	goto	u6191
  1471  002D30  EF9C  F016         	goto	u6190
  1472  002D34                     u6191:
  1473  002D34  EF93  F016         	goto	l6814
  1474  002D38                     u6190:
  1475  002D38                     
  1476                           ; BSR set to: 0
  1477                           ;main.c: 42:         cycle10ms = 0;
  1478  002D38  0E00               	movlw	0
  1479  002D3A  6FA1               	movwf	_cycle10ms& (0+255),b	;volatile
  1480  002D3C                     
  1481                           ; BSR set to: 0
  1482                           ;main.c: 44:         if (!PORTBbits.RB5) {
  1483  002D3C  BACB               	btfsc	203,5,c	;volatile
  1484  002D3E  EFA3  F016         	goto	u6201
  1485  002D42  EFA5  F016         	goto	u6200
  1486  002D46                     u6201:
  1487  002D46  EFB7  F016         	goto	l6824
  1488  002D4A                     u6200:
  1489  002D4A                     
  1490                           ; BSR set to: 0
  1491                           ;main.c: 45:             setSpeed = 0;
  1492  002D4A  0E00               	movlw	0
  1493  002D4C  6F8F               	movwf	(_setSpeed+1)& (0+255),b
  1494  002D4E  0E00               	movlw	0
  1495  002D50  6F8E               	movwf	_setSpeed& (0+255),b
  1496                           
  1497                           ;main.c: 46:             actMotorPow = 0;
  1498  002D52  0E00               	movlw	0
  1499  002D54  6F89               	movwf	(_actMotorPow+1)& (0+255),b
  1500  002D56  0E00               	movlw	0
  1501  002D58  6F88               	movwf	_actMotorPow& (0+255),b
  1502  002D5A                     
  1503                           ; BSR set to: 0
  1504                           ;main.c: 47:             setSteering(0, Front);
  1505  002D5A  0E00               	movlw	0
  1506  002D5C  6E1D               	movwf	(setSteering@steering+1)^0,c
  1507  002D5E  0E00               	movlw	0
  1508  002D60  6E1C               	movwf	setSteering@steering^0,c
  1509  002D62  0E03               	movlw	3
  1510  002D64  6E1E               	movwf	setSteering@steeringMode^0,c
  1511  002D66  EC4D  F013         	call	_setSteering	;wreg free
  1512                           
  1513                           ;main.c: 48:             break;
  1514  002D6A  EFD6  F016         	goto	l1238
  1515  002D6E                     l6824:
  1516                           
  1517                           ; BSR set to: 0
  1518                           ;main.c: 51:         if (checkBatt()) {
  1519  002D6E  ECBF  F01B         	call	_checkBatt	;wreg free
  1520  002D72  0900               	iorlw	0
  1521  002D74  B4D8               	btfsc	status,2,c
  1522  002D76  EFBF  F016         	goto	u6211
  1523  002D7A  EFC1  F016         	goto	u6210
  1524  002D7E                     u6211:
  1525  002D7E  EFCA  F016         	goto	l6828
  1526  002D82                     u6210:
  1527  002D82                     
  1528                           ;main.c: 52:             printf("Battery Low");
  1529  002D82  0E1D               	movlw	low STR_2
  1530  002D84  0100               	movlb	0	; () banked
  1531  002D86  6FD9               	movwf	printf@fmt& (0+255),b
  1532  002D88  0E10               	movlw	high STR_2
  1533  002D8A  6FDA               	movwf	(printf@fmt+1)& (0+255),b
  1534  002D8C  EC2A  F020         	call	_printf	;wreg free
  1535                           
  1536                           ;main.c: 53:             break;
  1537  002D90  EFD6  F016         	goto	l1238
  1538  002D94                     l6828:
  1539                           
  1540                           ;main.c: 56:         getCurve();
  1541  002D94  EC1C  F00E         	call	_getCurve	;wreg free
  1542  002D98                     
  1543                           ;main.c: 57:         getReverse();
  1544  002D98  EC63  F018         	call	_getReverse	;wreg free
  1545  002D9C                     
  1546                           ;main.c: 59:         calcSteering();
  1547  002D9C  EC50  F00F         	call	_calcSteering	;wreg free
  1548  002DA0                     
  1549                           ;main.c: 60:         calcSpeed();
  1550  002DA0  EC6E  F011         	call	_calcSpeed	;wreg free
  1551  002DA4                     
  1552                           ;main.c: 61:         calcMotorPow();
  1553  002DA4  EC95  F015         	call	_calcMotorPow	;wreg free
  1554  002DA8  EF93  F016         	goto	l6814
  1555  002DAC                     l1238:
  1556  002DAC  0012               	return		;funcret
  1557  002DAE                     __end_of_loop:
  1558                           	callstack 0
  1559                           
  1560 ;; *************** function _getReverse *****************
  1561 ;; Defined at:
  1562 ;;		line 200 in file "main.c"
  1563 ;; Parameters:    Size  Location     Type
  1564 ;;		None
  1565 ;; Auto vars:     Size  Location     Type
  1566 ;;		None
  1567 ;; Return value:  Size  Location     Type
  1568 ;;                  1    wreg      void 
  1569 ;; Registers used:
  1570 ;;		wreg, status,2, status,0
  1571 ;; Tracked objects:
  1572 ;;		On entry : 0/0
  1573 ;;		On exit  : 0/0
  1574 ;;		Unchanged: 0/0
  1575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1579 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1580 ;;Total ram usage:        0 bytes
  1581 ;; Hardware stack levels used: 1
  1582 ;; Hardware stack levels required when called: 8
  1583 ;; This function calls:
  1584 ;;		Nothing
  1585 ;; This function is called by:
  1586 ;;		_loop
  1587 ;; This function uses a non-reentrant model
  1588 ;;
  1589                           
  1590                           	psect	text2
  1591  0030C6                     __ptext2:
  1592                           	callstack 0
  1593  0030C6                     _getReverse:
  1594                           	callstack 21
  1595  0030C6                     
  1596                           ;main.c: 201:     if (distFront < (15)) {
  1597  0030C6  0100               	movlb	0	; () banked
  1598  0030C8  51A4               	movf	(_distFront+1)& (0+255),w,b	;volatile
  1599  0030CA  E107               	bnz	u4131
  1600  0030CC  0E0F               	movlw	15
  1601  0030CE  5DA3               	subwf	_distFront& (0+255),w,b	;volatile
  1602  0030D0  B0D8               	btfsc	status,0,c
  1603  0030D2  EF6D  F018         	goto	u4131
  1604  0030D6  EF6F  F018         	goto	u4130
  1605  0030DA                     u4131:
  1606  0030DA  EF73  F018         	goto	l5376
  1607  0030DE                     u4130:
  1608  0030DE                     
  1609                           ; BSR set to: 0
  1610                           ;main.c: 202:         ++reverseCount;
  1611  0030DE  4B98               	infsnz	_reverseCount& (0+255),f,b
  1612  0030E0  2B99               	incf	(_reverseCount+1)& (0+255),f,b
  1613                           
  1614                           ;main.c: 203:     } else if(driveMode != ReverseRight && driveMode != ReverseLeft) {
  1615  0030E2  EF89  F018         	goto	l5382
  1616  0030E6                     l5376:
  1617                           
  1618                           ; BSR set to: 0
  1619  0030E6  0E03               	movlw	3
  1620  0030E8  19FC               	xorwf	_driveMode& (0+255),w,b
  1621  0030EA  B4D8               	btfsc	status,2,c
  1622  0030EC  EF7A  F018         	goto	u4141
  1623  0030F0  EF7C  F018         	goto	u4140
  1624  0030F4                     u4141:
  1625  0030F4  EF89  F018         	goto	l5382
  1626  0030F8                     u4140:
  1627  0030F8                     
  1628                           ; BSR set to: 0
  1629  0030F8  0E04               	movlw	4
  1630  0030FA  19FC               	xorwf	_driveMode& (0+255),w,b
  1631  0030FC  B4D8               	btfsc	status,2,c
  1632  0030FE  EF83  F018         	goto	u4151
  1633  003102  EF85  F018         	goto	u4150
  1634  003106                     u4151:
  1635  003106  EF89  F018         	goto	l5382
  1636  00310A                     u4150:
  1637  00310A                     
  1638                           ; BSR set to: 0
  1639                           ;main.c: 204:         reverseCount = 0;
  1640  00310A  0E00               	movlw	0
  1641  00310C  6F99               	movwf	(_reverseCount+1)& (0+255),b
  1642  00310E  0E00               	movlw	0
  1643  003110  6F98               	movwf	_reverseCount& (0+255),b
  1644  003112                     l5382:
  1645                           
  1646                           ; BSR set to: 0
  1647                           ;main.c: 207:     if (reverseCount > (50)) {
  1648  003112  5199               	movf	(_reverseCount+1)& (0+255),w,b
  1649  003114  E109               	bnz	u4160
  1650  003116  0E33               	movlw	51
  1651  003118  5D98               	subwf	_reverseCount& (0+255),w,b
  1652  00311A  A0D8               	btfss	status,0,c
  1653  00311C  EF92  F018         	goto	u4161
  1654  003120  EF94  F018         	goto	u4160
  1655  003124                     u4161:
  1656  003124  EFDE  F018         	goto	l1311
  1657  003128                     u4160:
  1658  003128                     
  1659                           ; BSR set to: 0
  1660                           ;main.c: 208:         ++reverseTime;
  1661  003128  4B86               	infsnz	_reverseTime& (0+255),f,b
  1662  00312A  2B87               	incf	(_reverseTime+1)& (0+255),f,b
  1663  00312C                     
  1664                           ; BSR set to: 0
  1665                           ;main.c: 210:         if (driveMode != ReverseRight && driveMode != ReverseLeft) {
  1666  00312C  0E03               	movlw	3
  1667  00312E  19FC               	xorwf	_driveMode& (0+255),w,b
  1668  003130  B4D8               	btfsc	status,2,c
  1669  003132  EF9D  F018         	goto	u4171
  1670  003136  EF9F  F018         	goto	u4170
  1671  00313A                     u4171:
  1672  00313A  EFB9  F018         	goto	l5396
  1673  00313E                     u4170:
  1674  00313E                     
  1675                           ; BSR set to: 0
  1676  00313E  0E04               	movlw	4
  1677  003140  19FC               	xorwf	_driveMode& (0+255),w,b
  1678  003142  B4D8               	btfsc	status,2,c
  1679  003144  EFA6  F018         	goto	u4181
  1680  003148  EFA8  F018         	goto	u4180
  1681  00314C                     u4181:
  1682  00314C  EFB9  F018         	goto	l5396
  1683  003150                     u4180:
  1684  003150                     
  1685                           ; BSR set to: 0
  1686                           ;main.c: 211:             if (distLeft > distRight) {
  1687  003150  519E               	movf	_distLeft& (0+255),w,b	;volatile
  1688  003152  5D9C               	subwf	_distRight& (0+255),w,b	;volatile
  1689  003154  519F               	movf	(_distLeft+1)& (0+255),w,b	;volatile
  1690  003156  599D               	subwfb	(_distRight+1)& (0+255),w,b	;volatile
  1691  003158  B0D8               	btfsc	status,0,c
  1692  00315A  EFB1  F018         	goto	u4191
  1693  00315E  EFB3  F018         	goto	u4190
  1694  003162                     u4191:
  1695  003162  EFB7  F018         	goto	l5394
  1696  003166                     u4190:
  1697  003166                     
  1698                           ; BSR set to: 0
  1699                           ;main.c: 213:                 driveMode = ReverseRight;
  1700  003166  0E03               	movlw	3
  1701  003168  6FFC               	movwf	_driveMode& (0+255),b
  1702                           
  1703                           ;main.c: 214:             } else {
  1704  00316A  EFB9  F018         	goto	l5396
  1705  00316E                     l5394:
  1706                           
  1707                           ; BSR set to: 0
  1708                           ;main.c: 216:                 driveMode = ReverseLeft;
  1709  00316E  0E04               	movlw	4
  1710  003170  6FFC               	movwf	_driveMode& (0+255),b
  1711  003172                     l5396:
  1712                           
  1713                           ; BSR set to: 0
  1714                           ;main.c: 220:         if (distFront > (35) || reverseTime > (300)) {
  1715  003172  51A4               	movf	(_distFront+1)& (0+255),w,b	;volatile
  1716  003174  E107               	bnz	u4201
  1717  003176  0E24               	movlw	36
  1718  003178  5DA3               	subwf	_distFront& (0+255),w,b	;volatile
  1719  00317A  B0D8               	btfsc	status,0,c
  1720  00317C  EFC2  F018         	goto	u4201
  1721  003180  EFC4  F018         	goto	u4200
  1722  003184                     u4201:
  1723  003184  EFD4  F018         	goto	l5400
  1724  003188                     u4200:
  1725  003188                     
  1726                           ; BSR set to: 0
  1727  003188  BF87               	btfsc	(_reverseTime+1)& (0+255),7,b
  1728  00318A  EFD0  F018         	goto	u4211
  1729  00318E  0E2D               	movlw	45
  1730  003190  5D86               	subwf	_reverseTime& (0+255),w,b
  1731  003192  0E01               	movlw	1
  1732  003194  5987               	subwfb	(_reverseTime+1)& (0+255),w,b
  1733  003196  A0D8               	btfss	status,0,c
  1734  003198  EFD0  F018         	goto	u4211
  1735  00319C  EFD2  F018         	goto	u4210
  1736  0031A0                     u4211:
  1737  0031A0  EFDE  F018         	goto	l1311
  1738  0031A4                     u4210:
  1739  0031A4  EFD4  F018         	goto	l5402
  1740  0031A8                     l5400:
  1741  0031A8                     l5402:
  1742                           
  1743                           ; BSR set to: 0
  1744                           ;main.c: 223:                 driveMode = Straight;
  1745  0031A8  0E01               	movlw	1
  1746  0031AA  6FFC               	movwf	_driveMode& (0+255),b
  1747  0031AC                     
  1748                           ; BSR set to: 0
  1749                           ;main.c: 228:             reverseCount = 0;
  1750  0031AC  0E00               	movlw	0
  1751  0031AE  6F99               	movwf	(_reverseCount+1)& (0+255),b
  1752  0031B0  0E00               	movlw	0
  1753  0031B2  6F98               	movwf	_reverseCount& (0+255),b
  1754                           
  1755                           ;main.c: 229:             reverseTime = 0;
  1756  0031B4  0E00               	movlw	0
  1757  0031B6  6F87               	movwf	(_reverseTime+1)& (0+255),b
  1758  0031B8  0E00               	movlw	0
  1759  0031BA  6F86               	movwf	_reverseTime& (0+255),b
  1760  0031BC                     l1311:
  1761                           
  1762                           ; BSR set to: 0
  1763  0031BC  0012               	return		;funcret
  1764  0031BE                     __end_of_getReverse:
  1765                           	callstack 0
  1766                           
  1767 ;; *************** function _getCurve *****************
  1768 ;; Defined at:
  1769 ;;		line 128 in file "main.c"
  1770 ;; Parameters:    Size  Location     Type
  1771 ;;		None
  1772 ;; Auto vars:     Size  Location     Type
  1773 ;;  deltaLeft       2   62[BANK0 ] short 
  1774 ;;  deltaRight      2   60[BANK0 ] short 
  1775 ;; Return value:  Size  Location     Type
  1776 ;;                  1    wreg      void 
  1777 ;; Registers used:
  1778 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1779 ;; Tracked objects:
  1780 ;;		On entry : 0/0
  1781 ;;		On exit  : 0/0
  1782 ;;		Unchanged: 0/0
  1783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1785 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1786 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1787 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1788 ;;Total ram usage:        6 bytes
  1789 ;; Hardware stack levels used: 1
  1790 ;; Hardware stack levels required when called: 17
  1791 ;; This function calls:
  1792 ;;		_printf
  1793 ;; This function is called by:
  1794 ;;		_loop
  1795 ;; This function uses a non-reentrant model
  1796 ;;
  1797                           
  1798                           	psect	text3
  1799  001C38                     __ptext3:
  1800                           	callstack 0
  1801  001C38                     _getCurve:
  1802                           	callstack 12
  1803  001C38                     
  1804                           ;main.c: 129:     int16_t deltaLeft = (int16_t) (distLeft - oldDistLeft);
  1805  001C38  0100               	movlb	0	; () banked
  1806  001C3A  5196               	movf	_oldDistLeft& (0+255),w,b
  1807  001C3C  5D9E               	subwf	_distLeft& (0+255),w,b	;volatile
  1808  001C3E  6FE3               	movwf	getCurve@deltaLeft& (0+255),b
  1809  001C40  5197               	movf	(_oldDistLeft+1)& (0+255),w,b
  1810  001C42  599F               	subwfb	(_distLeft+1)& (0+255),w,b	;volatile
  1811  001C44  6FE4               	movwf	(getCurve@deltaLeft+1)& (0+255),b
  1812                           
  1813                           ;main.c: 130:     int16_t deltaRight = (int16_t) (distRight - oldDistRight);
  1814  001C46  5194               	movf	_oldDistRight& (0+255),w,b
  1815  001C48  5D9C               	subwf	_distRight& (0+255),w,b	;volatile
  1816  001C4A  6FE1               	movwf	getCurve@deltaRight& (0+255),b
  1817  001C4C  5195               	movf	(_oldDistRight+1)& (0+255),w,b
  1818  001C4E  599D               	subwfb	(_distRight+1)& (0+255),w,b	;volatile
  1819  001C50  6FE2               	movwf	(getCurve@deltaRight+1)& (0+255),b
  1820                           
  1821                           ;main.c: 132:     switch (curveMode) {
  1822  001C52  EF2A  F00F         	goto	l6650
  1823  001C56                     l6582:
  1824                           
  1825                           ; BSR set to: 0
  1826                           ;main.c: 134:             if (deltaLeft > (30) && deltaLeft < (300) && oldDistLeft < (12
      +                          5)) {
  1827  001C56  BFE4               	btfsc	(getCurve@deltaLeft+1)& (0+255),7,b
  1828  001C58  EF37  F00E         	goto	u5841
  1829  001C5C  51E4               	movf	(getCurve@deltaLeft+1)& (0+255),w,b
  1830  001C5E  E109               	bnz	u5840
  1831  001C60  0E1F               	movlw	31
  1832  001C62  5DE3               	subwf	getCurve@deltaLeft& (0+255),w,b
  1833  001C64  A0D8               	btfss	status,0,c
  1834  001C66  EF37  F00E         	goto	u5841
  1835  001C6A  EF39  F00E         	goto	u5840
  1836  001C6E                     u5841:
  1837  001C6E  EF5A  F00E         	goto	l6590
  1838  001C72                     u5840:
  1839  001C72                     
  1840                           ; BSR set to: 0
  1841  001C72  BFE4               	btfsc	(getCurve@deltaLeft+1)& (0+255),7,b
  1842  001C74  EF47  F00E         	goto	u5850
  1843  001C78  0E2C               	movlw	44
  1844  001C7A  5DE3               	subwf	getCurve@deltaLeft& (0+255),w,b
  1845  001C7C  0E01               	movlw	1
  1846  001C7E  59E4               	subwfb	(getCurve@deltaLeft+1)& (0+255),w,b
  1847  001C80  B0D8               	btfsc	status,0,c
  1848  001C82  EF45  F00E         	goto	u5851
  1849  001C86  EF47  F00E         	goto	u5850
  1850  001C8A                     u5851:
  1851  001C8A  EF5A  F00E         	goto	l6590
  1852  001C8E                     u5850:
  1853  001C8E                     
  1854                           ; BSR set to: 0
  1855  001C8E  5197               	movf	(_oldDistLeft+1)& (0+255),w,b
  1856  001C90  E107               	bnz	u5861
  1857  001C92  0E7D               	movlw	125
  1858  001C94  5D96               	subwf	_oldDistLeft& (0+255),w,b
  1859  001C96  B0D8               	btfsc	status,0,c
  1860  001C98  EF50  F00E         	goto	u5861
  1861  001C9C  EF52  F00E         	goto	u5860
  1862  001CA0                     u5861:
  1863  001CA0  EF5A  F00E         	goto	l6590
  1864  001CA4                     u5860:
  1865  001CA4                     l6588:
  1866                           
  1867                           ; BSR set to: 0
  1868                           ;main.c: 135:                 delay = 0;
  1869  001CA4  0E00               	movlw	0
  1870  001CA6  6FA0               	movwf	_delay& (0+255),b
  1871                           
  1872                           ;main.c: 136:                 curveMode = BeforeCurve;
  1873  001CA8  0E01               	movlw	1
  1874  001CAA  6FA2               	movwf	_curveMode& (0+255),b
  1875                           
  1876                           ;main.c: 137:                 driveMode = CurveLeft;
  1877  001CAC  0E05               	movlw	5
  1878  001CAE  6FFC               	movwf	_driveMode& (0+255),b
  1879                           
  1880                           ;main.c: 140:             } else if (deltaRight > (30) && deltaRight < (300) && oldDistR
      +                          ight < (125)) {
  1881  001CB0  EF47  F00F         	goto	l1275
  1882  001CB4                     l6590:
  1883                           
  1884                           ; BSR set to: 0
  1885  001CB4  BFE2               	btfsc	(getCurve@deltaRight+1)& (0+255),7,b
  1886  001CB6  EF66  F00E         	goto	u5871
  1887  001CBA  51E2               	movf	(getCurve@deltaRight+1)& (0+255),w,b
  1888  001CBC  E109               	bnz	u5870
  1889  001CBE  0E1F               	movlw	31
  1890  001CC0  5DE1               	subwf	getCurve@deltaRight& (0+255),w,b
  1891  001CC2  A0D8               	btfss	status,0,c
  1892  001CC4  EF66  F00E         	goto	u5871
  1893  001CC8  EF68  F00E         	goto	u5870
  1894  001CCC                     u5871:
  1895  001CCC  EF47  F00F         	goto	l1275
  1896  001CD0                     u5870:
  1897  001CD0                     
  1898                           ; BSR set to: 0
  1899  001CD0  BFE2               	btfsc	(getCurve@deltaRight+1)& (0+255),7,b
  1900  001CD2  EF76  F00E         	goto	u5880
  1901  001CD6  0E2C               	movlw	44
  1902  001CD8  5DE1               	subwf	getCurve@deltaRight& (0+255),w,b
  1903  001CDA  0E01               	movlw	1
  1904  001CDC  59E2               	subwfb	(getCurve@deltaRight+1)& (0+255),w,b
  1905  001CDE  B0D8               	btfsc	status,0,c
  1906  001CE0  EF74  F00E         	goto	u5881
  1907  001CE4  EF76  F00E         	goto	u5880
  1908  001CE8                     u5881:
  1909  001CE8  EF47  F00F         	goto	l1275
  1910  001CEC                     u5880:
  1911  001CEC                     
  1912                           ; BSR set to: 0
  1913  001CEC  5195               	movf	(_oldDistRight+1)& (0+255),w,b
  1914  001CEE  E107               	bnz	u5891
  1915  001CF0  0E7D               	movlw	125
  1916  001CF2  5D94               	subwf	_oldDistRight& (0+255),w,b
  1917  001CF4  B0D8               	btfsc	status,0,c
  1918  001CF6  EF7F  F00E         	goto	u5891
  1919  001CFA  EF81  F00E         	goto	u5890
  1920  001CFE                     u5891:
  1921  001CFE  EF47  F00F         	goto	l1275
  1922  001D02                     u5890:
  1923  001D02                     
  1924                           ; BSR set to: 0
  1925                           ;main.c: 141:                 delay = 0;
  1926  001D02  0E00               	movlw	0
  1927  001D04  6FA0               	movwf	_delay& (0+255),b
  1928                           
  1929                           ;main.c: 142:                 curveMode = BeforeCurve;
  1930  001D06  0E01               	movlw	1
  1931  001D08  6FA2               	movwf	_curveMode& (0+255),b
  1932                           
  1933                           ;main.c: 143:                 driveMode = CurveRight;
  1934  001D0A  0E06               	movlw	6
  1935  001D0C  6FFC               	movwf	_driveMode& (0+255),b
  1936  001D0E  EF47  F00F         	goto	l1275
  1937  001D12                     l6598:
  1938                           
  1939                           ; BSR set to: 0
  1940                           ;main.c: 150:             if (delay >= (15)) {
  1941  001D12  0E0E               	movlw	14
  1942  001D14  65A0               	cpfsgt	_delay& (0+255),b
  1943  001D16  EF8F  F00E         	goto	u5901
  1944  001D1A  EF91  F00E         	goto	u5900
  1945  001D1E                     u5901:
  1946  001D1E  EF97  F00E         	goto	l6602
  1947  001D22                     u5900:
  1948  001D22                     
  1949                           ; BSR set to: 0
  1950                           ;main.c: 151:                 delay = 0;
  1951  001D22  0E00               	movlw	0
  1952  001D24  6FA0               	movwf	_delay& (0+255),b
  1953                           
  1954                           ;main.c: 152:                 curveMode = InCurve;
  1955  001D26  0E02               	movlw	2
  1956  001D28  6FA2               	movwf	_curveMode& (0+255),b
  1957                           
  1958                           ;main.c: 154:             } else {
  1959  001D2A  EF47  F00F         	goto	l1275
  1960  001D2E                     l6602:
  1961                           
  1962                           ; BSR set to: 0
  1963                           ;main.c: 155:                 ++delay;
  1964  001D2E  2BA0               	incf	_delay& (0+255),f,b
  1965  001D30  EF47  F00F         	goto	l1275
  1966  001D34                     l6604:
  1967                           
  1968                           ; BSR set to: 0
  1969                           ;main.c: 159:             if (delay >= (40)) {
  1970  001D34  0E27               	movlw	39
  1971  001D36  65A0               	cpfsgt	_delay& (0+255),b
  1972  001D38  EFA0  F00E         	goto	u5911
  1973  001D3C  EFA2  F00E         	goto	u5910
  1974  001D40                     u5911:
  1975  001D40  EF97  F00E         	goto	l6602
  1976  001D44                     u5910:
  1977  001D44                     
  1978                           ; BSR set to: 0
  1979                           ;main.c: 160:                 if ((driveMode == CurveLeft && distLeft < (50)) || (driveM
      +                          ode == CurveRight && distRight < (50)) || distFront > (300)) {
  1980  001D44  0E05               	movlw	5
  1981  001D46  19FC               	xorwf	_driveMode& (0+255),w,b
  1982  001D48  A4D8               	btfss	status,2,c
  1983  001D4A  EFA9  F00E         	goto	u5921
  1984  001D4E  EFAB  F00E         	goto	u5920
  1985  001D52                     u5921:
  1986  001D52  EFB6  F00E         	goto	l6610
  1987  001D56                     u5920:
  1988  001D56                     
  1989                           ; BSR set to: 0
  1990  001D56  519F               	movf	(_distLeft+1)& (0+255),w,b	;volatile
  1991  001D58  E109               	bnz	u5930
  1992  001D5A  0E32               	movlw	50
  1993  001D5C  5D9E               	subwf	_distLeft& (0+255),w,b	;volatile
  1994  001D5E  A0D8               	btfss	status,0,c
  1995  001D60  EFB4  F00E         	goto	u5931
  1996  001D64  EFB6  F00E         	goto	u5930
  1997  001D68                     u5931:
  1998  001D68  EFD5  F00E         	goto	l6616
  1999  001D6C                     u5930:
  2000  001D6C                     l6610:
  2001                           
  2002                           ; BSR set to: 0
  2003  001D6C  0E06               	movlw	6
  2004  001D6E  19FC               	xorwf	_driveMode& (0+255),w,b
  2005  001D70  A4D8               	btfss	status,2,c
  2006  001D72  EFBD  F00E         	goto	u5941
  2007  001D76  EFBF  F00E         	goto	u5940
  2008  001D7A                     u5941:
  2009  001D7A  EFCA  F00E         	goto	l6614
  2010  001D7E                     u5940:
  2011  001D7E                     
  2012                           ; BSR set to: 0
  2013  001D7E  519D               	movf	(_distRight+1)& (0+255),w,b	;volatile
  2014  001D80  E109               	bnz	u5950
  2015  001D82  0E32               	movlw	50
  2016  001D84  5D9C               	subwf	_distRight& (0+255),w,b	;volatile
  2017  001D86  A0D8               	btfss	status,0,c
  2018  001D88  EFC8  F00E         	goto	u5951
  2019  001D8C  EFCA  F00E         	goto	u5950
  2020  001D90                     u5951:
  2021  001D90  EFD5  F00E         	goto	l6616
  2022  001D94                     u5950:
  2023  001D94                     l6614:
  2024                           
  2025                           ; BSR set to: 0
  2026  001D94  0E2D               	movlw	45
  2027  001D96  5DA3               	subwf	_distFront& (0+255),w,b	;volatile
  2028  001D98  0E01               	movlw	1
  2029  001D9A  59A4               	subwfb	(_distFront+1)& (0+255),w,b	;volatile
  2030  001D9C  A0D8               	btfss	status,0,c
  2031  001D9E  EFD3  F00E         	goto	u5961
  2032  001DA2  EFD5  F00E         	goto	u5960
  2033  001DA6                     u5961:
  2034  001DA6  EF03  F00F         	goto	l6634
  2035  001DAA                     u5960:
  2036  001DAA                     l6616:
  2037                           
  2038                           ; BSR set to: 0
  2039                           ;main.c: 161:                     printf("Time: \t%d     \t", delay);
  2040  001DAA  0E01               	movlw	low STR_3
  2041  001DAC  6FD9               	movwf	printf@fmt& (0+255),b
  2042  001DAE  0E10               	movlw	high STR_3
  2043  001DB0  6FDA               	movwf	(printf@fmt+1)& (0+255),b
  2044  001DB2  C0A0  F0DB         	movff	_delay,?_printf+2
  2045  001DB6  6BDC               	clrf	(?_printf+3)& (0+255),b
  2046  001DB8  EC2A  F020         	call	_printf	;wreg free
  2047  001DBC                     
  2048                           ;main.c: 162:                     if(delay >= 90){
  2049  001DBC  0E59               	movlw	89
  2050  001DBE  0100               	movlb	0	; () banked
  2051  001DC0  65A0               	cpfsgt	_delay& (0+255),b
  2052  001DC2  EFE5  F00E         	goto	u5971
  2053  001DC6  EFE7  F00E         	goto	u5970
  2054  001DCA                     u5971:
  2055  001DCA  EFF2  F00E         	goto	l6624
  2056  001DCE                     u5970:
  2057  001DCE                     
  2058                           ; BSR set to: 0
  2059                           ;main.c: 163:                         printf("stay Left\n");
  2060  001DCE  0E29               	movlw	low STR_4
  2061  001DD0  6FD9               	movwf	printf@fmt& (0+255),b
  2062  001DD2  0E10               	movlw	high STR_4
  2063  001DD4  6FDA               	movwf	(printf@fmt+1)& (0+255),b
  2064  001DD6  EC2A  F020         	call	_printf	;wreg free
  2065  001DDA                     
  2066                           ;main.c: 164:                         middleOffSet = -10;
  2067  001DDA  0EF6               	movlw	246
  2068  001DDC  0100               	movlb	0	; () banked
  2069  001DDE  6FFB               	movwf	_middleOffSet& (0+255),b
  2070                           
  2071                           ;main.c: 165:                     } else {
  2072  001DE0  EFFB  F00E         	goto	l6628
  2073  001DE4                     l6624:
  2074                           
  2075                           ; BSR set to: 0
  2076                           ;main.c: 166:                         printf("stay Right\n");
  2077  001DE4  0E11               	movlw	low STR_5
  2078  001DE6  6FD9               	movwf	printf@fmt& (0+255),b
  2079  001DE8  0E10               	movlw	high STR_5
  2080  001DEA  6FDA               	movwf	(printf@fmt+1)& (0+255),b
  2081  001DEC  EC2A  F020         	call	_printf	;wreg free
  2082  001DF0                     
  2083                           ;main.c: 167:                         middleOffSet = 10;
  2084  001DF0  0E0A               	movlw	10
  2085  001DF2  0100               	movlb	0	; () banked
  2086  001DF4  6FFB               	movwf	_middleOffSet& (0+255),b
  2087  001DF6                     l6628:
  2088                           
  2089                           ; BSR set to: 0
  2090                           ;main.c: 170:                     delay = 0;
  2091  001DF6  0E00               	movlw	0
  2092  001DF8  6FA0               	movwf	_delay& (0+255),b
  2093  001DFA                     
  2094                           ; BSR set to: 0
  2095                           ;main.c: 171:                     curveMode = AfterCurve;
  2096  001DFA  0E03               	movlw	3
  2097  001DFC  6FA2               	movwf	_curveMode& (0+255),b
  2098  001DFE                     
  2099                           ; BSR set to: 0
  2100                           ;main.c: 172:                     driveMode = Straight;
  2101  001DFE  0E01               	movlw	1
  2102  001E00  6FFC               	movwf	_driveMode& (0+255),b
  2103                           
  2104                           ;main.c: 174:                 } else if(driveMode == CurveRight && deltaLeft > (30)){
  2105  001E02  EF47  F00F         	goto	l1275
  2106  001E06                     l6634:
  2107                           
  2108                           ; BSR set to: 0
  2109  001E06  0E06               	movlw	6
  2110  001E08  19FC               	xorwf	_driveMode& (0+255),w,b
  2111  001E0A  A4D8               	btfss	status,2,c
  2112  001E0C  EF0A  F00F         	goto	u5981
  2113  001E10  EF0C  F00F         	goto	u5980
  2114  001E14                     u5981:
  2115  001E14  EF47  F00F         	goto	l1275
  2116  001E18                     u5980:
  2117  001E18                     
  2118                           ; BSR set to: 0
  2119  001E18  BFE4               	btfsc	(getCurve@deltaLeft+1)& (0+255),7,b
  2120  001E1A  EF18  F00F         	goto	u5991
  2121  001E1E  51E4               	movf	(getCurve@deltaLeft+1)& (0+255),w,b
  2122  001E20  E109               	bnz	u5990
  2123  001E22  0E1F               	movlw	31
  2124  001E24  5DE3               	subwf	getCurve@deltaLeft& (0+255),w,b
  2125  001E26  A0D8               	btfss	status,0,c
  2126  001E28  EF18  F00F         	goto	u5991
  2127  001E2C  EF1A  F00F         	goto	u5990
  2128  001E30                     u5991:
  2129  001E30  EF47  F00F         	goto	l1275
  2130  001E34                     u5990:
  2131  001E34  EF52  F00E         	goto	l6588
  2132  001E38                     l6642:
  2133                           
  2134                           ; BSR set to: 0
  2135                           ;main.c: 187:             if (delay >= (1)) {
  2136  001E38  51A0               	movf	_delay& (0+255),w,b
  2137  001E3A  B4D8               	btfsc	status,2,c
  2138  001E3C  EF22  F00F         	goto	u6001
  2139  001E40  EF24  F00F         	goto	u6000
  2140  001E44                     u6001:
  2141  001E44  EF97  F00E         	goto	l6602
  2142  001E48                     u6000:
  2143  001E48                     
  2144                           ; BSR set to: 0
  2145                           ;main.c: 188:                 delay = 0;
  2146  001E48  0E00               	movlw	0
  2147  001E4A  6FA0               	movwf	_delay& (0+255),b
  2148                           
  2149                           ;main.c: 189:                 curveMode = OutCurve;
  2150  001E4C  0E00               	movlw	0
  2151  001E4E  6FA2               	movwf	_curveMode& (0+255),b
  2152                           
  2153                           ;main.c: 191:             } else {
  2154  001E50  EF47  F00F         	goto	l1275
  2155  001E54                     l6650:
  2156                           
  2157                           ; BSR set to: 0
  2158  001E54  51A2               	movf	_curveMode& (0+255),w,b
  2159  001E56  6FDF               	movwf	??_getCurve& (0+255),b
  2160  001E58  6BE0               	clrf	(??_getCurve+1)& (0+255),b
  2161                           
  2162                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2163                           ; Switch size 1, requested type "simple"
  2164                           ; Number of cases is 1, Range of values is 0 to 0
  2165                           ; switch strategies available:
  2166                           ; Name         Instructions Cycles
  2167                           ; simple_byte            4     3 (average)
  2168                           ;	Chosen strategy is simple_byte
  2169  001E5A  51E0               	movf	(??_getCurve+1)& (0+255),w,b
  2170  001E5C  0A00               	xorlw	0	; case 0
  2171  001E5E  B4D8               	btfsc	status,2,c
  2172  001E60  EF34  F00F         	goto	l6998
  2173  001E64  EF47  F00F         	goto	l1275
  2174  001E68                     l6998:
  2175                           
  2176                           ; BSR set to: 0
  2177                           ; Switch size 1, requested type "simple"
  2178                           ; Number of cases is 4, Range of values is 0 to 3
  2179                           ; switch strategies available:
  2180                           ; Name         Instructions Cycles
  2181                           ; simple_byte           13     7 (average)
  2182                           ;	Chosen strategy is simple_byte
  2183  001E68  51DF               	movf	??_getCurve& (0+255),w,b
  2184  001E6A  0A00               	xorlw	0	; case 0
  2185  001E6C  B4D8               	btfsc	status,2,c
  2186  001E6E  EF2B  F00E         	goto	l6582
  2187  001E72  0A01               	xorlw	1	; case 1
  2188  001E74  B4D8               	btfsc	status,2,c
  2189  001E76  EF89  F00E         	goto	l6598
  2190  001E7A  0A03               	xorlw	3	; case 2
  2191  001E7C  B4D8               	btfsc	status,2,c
  2192  001E7E  EF9A  F00E         	goto	l6604
  2193  001E82  0A01               	xorlw	1	; case 3
  2194  001E84  B4D8               	btfsc	status,2,c
  2195  001E86  EF1C  F00F         	goto	l6642
  2196  001E8A  EF47  F00F         	goto	l1275
  2197  001E8E                     l1275:
  2198                           
  2199                           ; BSR set to: 0
  2200                           ;main.c: 196:     oldDistLeft = distLeft;
  2201  001E8E  C09E  F096         	movff	_distLeft,_oldDistLeft	;volatile
  2202  001E92  C09F  F097         	movff	_distLeft+1,_oldDistLeft+1	;volatile
  2203                           
  2204                           ;main.c: 197:     oldDistRight = distRight;
  2205  001E96  C09C  F094         	movff	_distRight,_oldDistRight	;volatile
  2206  001E9A  C09D  F095         	movff	_distRight+1,_oldDistRight+1	;volatile
  2207  001E9E                     
  2208                           ; BSR set to: 0
  2209  001E9E  0012               	return		;funcret
  2210  001EA0                     __end_of_getCurve:
  2211                           	callstack 0
  2212                           
  2213 ;; *************** function _printf *****************
  2214 ;; Defined at:
  2215 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\printf.c"
  2216 ;; Parameters:    Size  Location     Type
  2217 ;;  fmt             2   52[BANK0 ] PTR const unsigned char 
  2218 ;;		 -> STR_5(12), STR_4(11), STR_3(16), STR_2(12), 
  2219 ;;		 -> STR_1(10), 
  2220 ;; Auto vars:     Size  Location     Type
  2221 ;;  ap              2   56[BANK0 ] PTR void [1]
  2222 ;;		 -> ?_printf(2), 
  2223 ;;  ret             2    0        int 
  2224 ;; Return value:  Size  Location     Type
  2225 ;;                  2   52[BANK0 ] int 
  2226 ;; Registers used:
  2227 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2228 ;; Tracked objects:
  2229 ;;		On entry : 0/0
  2230 ;;		On exit  : 0/0
  2231 ;;		Unchanged: 0/0
  2232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2233 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2234 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2236 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2237 ;;Total ram usage:        6 bytes
  2238 ;; Hardware stack levels used: 1
  2239 ;; Hardware stack levels required when called: 16
  2240 ;; This function calls:
  2241 ;;		_vfprintf
  2242 ;; This function is called by:
  2243 ;;		_loop
  2244 ;;		_getCurve
  2245 ;; This function uses a non-reentrant model
  2246 ;;
  2247                           
  2248                           	psect	text4
  2249  004054                     __ptext4:
  2250                           	callstack 0
  2251  004054                     _printf:
  2252                           	callstack 13
  2253  004054  0EDB               	movlw	low (?_printf+2)
  2254  004056  0100               	movlb	0	; () banked
  2255  004058  6FDD               	movwf	printf@ap& (0+255),b
  2256  00405A  0E00               	movlw	high (?_printf+2)
  2257  00405C  6FDE               	movwf	(printf@ap+1)& (0+255),b
  2258  00405E                     
  2259                           ; BSR set to: 0
  2260  00405E  0E00               	movlw	0
  2261  004060  6FD1               	movwf	vfprintf@fp& (0+255),b
  2262  004062  0E00               	movlw	0
  2263  004064  6FD2               	movwf	(vfprintf@fp+1)& (0+255),b
  2264  004066  C0D9  F0D3         	movff	printf@fmt,vfprintf@fmt
  2265  00406A  C0DA  F0D4         	movff	printf@fmt+1,vfprintf@fmt+1
  2266  00406E  0EDD               	movlw	low printf@ap
  2267  004070  6FD5               	movwf	vfprintf@ap& (0+255),b
  2268  004072  0E00               	movlw	high printf@ap
  2269  004074  6FD6               	movwf	(vfprintf@ap+1)& (0+255),b
  2270  004076  EC07  F01C         	call	_vfprintf	;wreg free
  2271  00407A  0012               	return		;funcret
  2272  00407C                     __end_of_printf:
  2273                           	callstack 0
  2274                           
  2275 ;; *************** function _vfprintf *****************
  2276 ;; Defined at:
  2277 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2278 ;; Parameters:    Size  Location     Type
  2279 ;;  fp              2   44[BANK0 ] PTR struct _IO_FILE
  2280 ;;		 -> NULL(0), 
  2281 ;;  fmt             2   46[BANK0 ] PTR const unsigned char 
  2282 ;;		 -> STR_5(12), STR_4(11), STR_3(16), STR_2(12), 
  2283 ;;		 -> STR_1(10), 
  2284 ;;  ap              2   48[BANK0 ] PTR PTR void 
  2285 ;;		 -> printf@ap(2), 
  2286 ;; Auto vars:     Size  Location     Type
  2287 ;;  cfmt            2   50[BANK0 ] PTR unsigned char 
  2288 ;;		 -> STR_5(12), STR_4(11), STR_3(16), STR_2(12), 
  2289 ;;		 -> STR_1(10), 
  2290 ;; Return value:  Size  Location     Type
  2291 ;;                  2   44[BANK0 ] int 
  2292 ;; Registers used:
  2293 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2294 ;; Tracked objects:
  2295 ;;		On entry : 0/0
  2296 ;;		On exit  : 0/0
  2297 ;;		Unchanged: 0/0
  2298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2299 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2300 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2302 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2303 ;;Total ram usage:        8 bytes
  2304 ;; Hardware stack levels used: 1
  2305 ;; Hardware stack levels required when called: 15
  2306 ;; This function calls:
  2307 ;;		_vfpfcnvrt
  2308 ;; This function is called by:
  2309 ;;		_printf
  2310 ;; This function uses a non-reentrant model
  2311 ;;
  2312                           
  2313                           	psect	text5
  2314  00380E                     __ptext5:
  2315                           	callstack 0
  2316  00380E                     _vfprintf:
  2317                           	callstack 13
  2318  00380E                     
  2319                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  2320  00380E  C0D3  F0D7         	movff	vfprintf@fmt,vfprintf@cfmt
  2321  003812  C0D4  F0D8         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2322  003816                     
  2323                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  2324  003816  0E00               	movlw	0
  2325  003818  0100               	movlb	0	; () banked
  2326  00381A  6F81               	movwf	(_nout+1)& (0+255),b
  2327  00381C  0E00               	movlw	0
  2328  00381E  6F80               	movwf	_nout& (0+255),b
  2329                           
  2330                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2331  003820  EF25  F01C         	goto	l6196
  2332  003824                     l6194:
  2333                           
  2334                           ; BSR set to: 0
  2335                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  2336  003824  C0D1  F0C1         	movff	vfprintf@fp,vfpfcnvrt@fp
  2337  003828  C0D2  F0C2         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2338  00382C  0ED7               	movlw	low vfprintf@cfmt
  2339  00382E  6FC3               	movwf	vfpfcnvrt@fmt& (0+255),b
  2340  003830  0E00               	movlw	high vfprintf@cfmt
  2341  003832  6FC4               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2342  003834  C0D5  F0C5         	movff	vfprintf@ap,vfpfcnvrt@ap
  2343  003838  C0D6  F0C6         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2344  00383C  EC68  F010         	call	_vfpfcnvrt	;wreg free
  2345  003840  0100               	movlb	0	; () banked
  2346  003842  51C1               	movf	?_vfpfcnvrt& (0+255),w,b
  2347  003844  2780               	addwf	_nout& (0+255),f,b
  2348  003846  51C2               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  2349  003848  2381               	addwfc	(_nout+1)& (0+255),f,b
  2350  00384A                     l6196:
  2351                           
  2352                           ; BSR set to: 0
  2353                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2354  00384A  0060  F35F  FFF6   	movff	vfprintf@cfmt,tblptrl
  2355  003850  0060  F363  FFF7   	movff	vfprintf@cfmt+1,tblptrh
  2356  003856                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2357  003856  6AF8               	clrf	tblptru,c
  2358  003858                     	endif
  2359  003858                     	if	0	;tblptru may be non-zero
  2360  003858                     	endif
  2361  003858  0008               	tblrd		*
  2362  00385A  50F5               	movf	tablat,w,c
  2363  00385C  0900               	iorlw	0
  2364  00385E  A4D8               	btfss	status,2,c
  2365  003860  EF34  F01C         	goto	u5181
  2366  003864  EF36  F01C         	goto	u5180
  2367  003868                     u5181:
  2368  003868  EF12  F01C         	goto	l6194
  2369  00386C                     u5180:
  2370  00386C                     
  2371                           ; BSR set to: 0
  2372                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  2373  00386C  C080  F0D1         	movff	_nout,?_vfprintf
  2374  003870  C081  F0D2         	movff	_nout+1,?_vfprintf+1
  2375  003874                     
  2376                           ; BSR set to: 0
  2377  003874  0012               	return		;funcret
  2378  003876                     __end_of_vfprintf:
  2379                           	callstack 0
  2380                           
  2381 ;; *************** function _vfpfcnvrt *****************
  2382 ;; Defined at:
  2383 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2384 ;; Parameters:    Size  Location     Type
  2385 ;;  fp              2   28[BANK0 ] PTR struct _IO_FILE
  2386 ;;		 -> NULL(0), 
  2387 ;;  fmt             2   30[BANK0 ] PTR PTR unsigned char 
  2388 ;;		 -> vfprintf@cfmt(2), 
  2389 ;;  ap              2   32[BANK0 ] PTR PTR void 
  2390 ;;		 -> printf@ap(2), 
  2391 ;; Auto vars:     Size  Location     Type
  2392 ;;  ll              8   36[BANK0 ] long long 
  2393 ;;  llu             8    0        unsigned long long 
  2394 ;;  f               4    0        unsigned long long 
  2395 ;;  vp              3    0        PTR void 
  2396 ;;  ct              3    0        unsigned char [3]
  2397 ;;  cp              3    0        PTR unsigned char 
  2398 ;;  i               2    0        int 
  2399 ;;  done            2    0        int 
  2400 ;;  c               1    0        unsigned char 
  2401 ;; Return value:  Size  Location     Type
  2402 ;;                  2   28[BANK0 ] int 
  2403 ;; Registers used:
  2404 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2405 ;; Tracked objects:
  2406 ;;		On entry : 0/0
  2407 ;;		On exit  : 0/0
  2408 ;;		Unchanged: 0/0
  2409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2410 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2411 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2412 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2413 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2414 ;;Total ram usage:       16 bytes
  2415 ;; Hardware stack levels used: 1
  2416 ;; Hardware stack levels required when called: 14
  2417 ;; This function calls:
  2418 ;;		_dtoa
  2419 ;;		_fputc
  2420 ;; This function is called by:
  2421 ;;		_vfprintf
  2422 ;; This function uses a non-reentrant model
  2423 ;;
  2424                           
  2425                           	psect	text6
  2426  0020D0                     __ptext6:
  2427                           	callstack 0
  2428  0020D0                     _vfpfcnvrt:
  2429                           	callstack 13
  2430  0020D0                     
  2431                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  2432  0020D0  0060  F30F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2433  0020D6  0060  F313  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2434  0020DC  006F FF7B FFF6     	movff	postinc2,tblptrl
  2435  0020E2  006F FF77 FFF7     	movff	postdec2,tblptrh
  2436  0020E8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2437  0020E8  6AF8               	clrf	tblptru,c
  2438  0020EA                     	endif
  2439  0020EA                     	if	0	;tblptru may be non-zero
  2440  0020EA                     	endif
  2441  0020EA  0008               	tblrd		*
  2442  0020EC  50F5               	movf	tablat,w,c
  2443  0020EE  0A25               	xorlw	37
  2444  0020F0  A4D8               	btfss	status,2,c
  2445  0020F2  EF7D  F010         	goto	u5141
  2446  0020F6  EF7F  F010         	goto	u5140
  2447  0020FA                     u5141:
  2448  0020FA  EF4B  F011         	goto	l6182
  2449  0020FE                     u5140:
  2450  0020FE                     
  2451                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  2452  0020FE  0060  F30F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2453  002104  0060  F313  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2454  00210A  2ADE               	incf	postinc2,f,c
  2455  00210C  0E00               	movlw	0
  2456  00210E  22DD               	addwfc	postdec2,f,c
  2457  002110                     
  2458                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  2459  002110  0E00               	movlw	0
  2460  002112  0100               	movlb	0	; () banked
  2461  002114  6F83               	movwf	(_width+1)& (0+255),b
  2462  002116  0E00               	movlw	0
  2463  002118  6F82               	movwf	_width& (0+255),b
  2464  00211A  C082  F03C         	movff	_width,_flags
  2465  00211E  C083  F03D         	movff	_width+1,_flags+1
  2466  002122                     
  2467                           ; BSR set to: 0
  2468                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  2469  002122  683A               	setf	_prec^0,c
  2470  002124  683B               	setf	(_prec+1)^0,c
  2471  002126                     
  2472                           ; BSR set to: 0
  2473                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2474  002126  0060  F30F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2475  00212C  0060  F313  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2476  002132  006F FF7B FFF6     	movff	postinc2,tblptrl
  2477  002138  006F FF77 FFF7     	movff	postdec2,tblptrh
  2478  00213E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2479  00213E  6AF8               	clrf	tblptru,c
  2480  002140                     	endif
  2481  002140                     	if	0	;tblptru may be non-zero
  2482  002140                     	endif
  2483  002140  0008               	tblrd		*
  2484  002142  50F5               	movf	tablat,w,c
  2485  002144  0A64               	xorlw	100
  2486  002146  B4D8               	btfsc	status,2,c
  2487  002148  EFA8  F010         	goto	u5151
  2488  00214C  EFAA  F010         	goto	u5150
  2489  002150                     u5151:
  2490  002150  EFC1  F010         	goto	l6160
  2491  002154                     u5150:
  2492  002154                     
  2493                           ; BSR set to: 0
  2494  002154  0060  F30F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2495  00215A  0060  F313  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2496  002160  006F FF7B FFF6     	movff	postinc2,tblptrl
  2497  002166  006F FF77 FFF7     	movff	postdec2,tblptrh
  2498  00216C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2499  00216C  6AF8               	clrf	tblptru,c
  2500  00216E                     	endif
  2501  00216E                     	if	0	;tblptru may be non-zero
  2502  00216E                     	endif
  2503  00216E  0008               	tblrd		*
  2504  002170  50F5               	movf	tablat,w,c
  2505  002172  0A69               	xorlw	105
  2506  002174  A4D8               	btfss	status,2,c
  2507  002176  EFBF  F010         	goto	u5161
  2508  00217A  EFC1  F010         	goto	u5160
  2509  00217E                     u5161:
  2510  00217E  EF0B  F011         	goto	l6166
  2511  002182                     u5160:
  2512  002182                     l6160:
  2513                           
  2514                           ; BSR set to: 0
  2515                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  2516  002182  0060  F30F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2517  002188  0060  F313  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2518  00218E  2ADE               	incf	postinc2,f,c
  2519  002190  0E00               	movlw	0
  2520  002192  22DD               	addwfc	postdec2,f,c
  2521                           
  2522                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2523  002194  0060  F317  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  2524  00219A  0060  F31B  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  2525  0021A0  006F FF7C  F0C7    	movff	indf2,??_vfpfcnvrt
  2526  0021A6  0E02               	movlw	2
  2527  0021A8  26DE               	addwf	postinc2,f,c
  2528  0021AA  006F FF7C  F0C8    	movff	indf2,??_vfpfcnvrt+1
  2529  0021B0  0E00               	movlw	0
  2530  0021B2  22DD               	addwfc	postdec2,f,c
  2531  0021B4  0060  F31F  FFD9   	movff	??_vfpfcnvrt,fsr2l
  2532  0021BA  0060  F323  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  2533  0021C0  006F FF78  F0C9    	movff	postinc2,vfpfcnvrt@ll
  2534  0021C6  006F FF74  F0CA    	movff	postdec2,vfpfcnvrt@ll+1
  2535  0021CC  0E00               	movlw	0
  2536  0021CE  BFCA               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  2537  0021D0  0EFF               	movlw	-1
  2538  0021D2  6FCB               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  2539  0021D4  6FCC               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  2540  0021D6  6FCD               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  2541  0021D8  6FCE               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  2542  0021DA  6FCF               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  2543  0021DC  6FD0               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  2544  0021DE                     
  2545                           ; BSR set to: 0
  2546                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  2547  0021DE  C0C1  F0A5         	movff	vfpfcnvrt@fp,dtoa@fp
  2548  0021E2  C0C2  F0A6         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2549  0021E6  C0C9  F0A7         	movff	vfpfcnvrt@ll,dtoa@d
  2550  0021EA  C0CA  F0A8         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2551  0021EE  C0CB  F0A9         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2552  0021F2  C0CC  F0AA         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2553  0021F6  C0CD  F0AB         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2554  0021FA  C0CE  F0AC         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2555  0021FE  C0CF  F0AD         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2556  002202  C0D0  F0AE         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2557  002206  ECA9  F00C         	call	_dtoa	;wreg free
  2558  00220A  C0A5  F0C1         	movff	?_dtoa,?_vfpfcnvrt
  2559  00220E  C0A6  F0C2         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2560  002212  EF6D  F011         	goto	l2140
  2561  002216                     l6166:
  2562                           
  2563                           ; BSR set to: 0
  2564                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2565  002216  0060  F30F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2566  00221C  0060  F313  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2567  002222  006F FF7B FFF6     	movff	postinc2,tblptrl
  2568  002228  006F FF77 FFF7     	movff	postdec2,tblptrh
  2569  00222E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2570  00222E  6AF8               	clrf	tblptru,c
  2571  002230                     	endif
  2572  002230                     	if	0	;tblptru may be non-zero
  2573  002230                     	endif
  2574  002230  0008               	tblrd		*
  2575  002232  50F5               	movf	tablat,w,c
  2576  002234  0A25               	xorlw	37
  2577  002236  A4D8               	btfss	status,2,c
  2578  002238  EF20  F011         	goto	u5171
  2579  00223C  EF22  F011         	goto	u5170
  2580  002240                     u5171:
  2581  002240  EF3C  F011         	goto	l6176
  2582  002244                     u5170:
  2583  002244                     
  2584                           ; BSR set to: 0
  2585                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2586  002244  0060  F30F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2587  00224A  0060  F313  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2588  002250  2ADE               	incf	postinc2,f,c
  2589  002252  0E00               	movlw	0
  2590  002254  22DD               	addwfc	postdec2,f,c
  2591  002256                     
  2592                           ; BSR set to: 0
  2593                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2594  002256  0E00               	movlw	0
  2595  002258  6E17               	movwf	(fputc@c+1)^0,c
  2596  00225A  0E25               	movlw	37
  2597  00225C  6E16               	movwf	fputc@c^0,c
  2598  00225E  C0C1  F018         	movff	vfpfcnvrt@fp,fputc@fp
  2599  002262  C0C2  F019         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2600  002266  EC2A  F01B         	call	_fputc	;wreg free
  2601  00226A                     l6172:
  2602                           
  2603                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2604  00226A  0E00               	movlw	0
  2605  00226C  0100               	movlb	0	; () banked
  2606  00226E  6FC2               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2607  002270  0E01               	movlw	1
  2608  002272  6FC1               	movwf	?_vfpfcnvrt& (0+255),b
  2609  002274  EF6D  F011         	goto	l2140
  2610  002278                     l6176:
  2611                           
  2612                           ; BSR set to: 0
  2613                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2614  002278  0060  F30F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2615  00227E  0060  F313  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2616  002284  2ADE               	incf	postinc2,f,c
  2617  002286  0E00               	movlw	0
  2618  002288  22DD               	addwfc	postdec2,f,c
  2619  00228A                     
  2620                           ; BSR set to: 0
  2621                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2622  00228A  0E00               	movlw	0
  2623  00228C  6FC2               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2624  00228E  0E00               	movlw	0
  2625  002290  6FC1               	movwf	?_vfpfcnvrt& (0+255),b
  2626  002292  EF6D  F011         	goto	l2140
  2627  002296                     l6182:
  2628                           
  2629                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2630  002296  0060  F30F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2631  00229C  0060  F313  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2632  0022A2  006F FF7B FFF6     	movff	postinc2,tblptrl
  2633  0022A8  006F FF77 FFF7     	movff	postdec2,tblptrh
  2634  0022AE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2635  0022AE  6AF8               	clrf	tblptru,c
  2636  0022B0                     	endif
  2637  0022B0                     	if	0	;tblptru may be non-zero
  2638  0022B0                     	endif
  2639  0022B0  0008               	tblrd		*
  2640  0022B2  50F5               	movf	tablat,w,c
  2641  0022B4  6E16               	movwf	fputc@c^0,c
  2642  0022B6  6A17               	clrf	(fputc@c+1)^0,c
  2643  0022B8  C0C1  F018         	movff	vfpfcnvrt@fp,fputc@fp
  2644  0022BC  C0C2  F019         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2645  0022C0  EC2A  F01B         	call	_fputc	;wreg free
  2646  0022C4                     
  2647                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2648  0022C4  0060  F30F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2649  0022CA  0060  F313  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2650  0022D0  2ADE               	incf	postinc2,f,c
  2651  0022D2  0E00               	movlw	0
  2652  0022D4  22DD               	addwfc	postdec2,f,c
  2653  0022D6  EF35  F011         	goto	l6172
  2654  0022DA                     l2140:
  2655  0022DA  0012               	return		;funcret
  2656  0022DC                     __end_of_vfpfcnvrt:
  2657                           	callstack 0
  2658                           
  2659 ;; *************** function _dtoa *****************
  2660 ;; Defined at:
  2661 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2662 ;; Parameters:    Size  Location     Type
  2663 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  2664 ;;		 -> NULL(0), 
  2665 ;;  d               8    2[BANK0 ] long long 
  2666 ;; Auto vars:     Size  Location     Type
  2667 ;;  n               8   18[BANK0 ] long long 
  2668 ;;  i               2   26[BANK0 ] int 
  2669 ;;  s               2   16[BANK0 ] int 
  2670 ;;  w               2   14[BANK0 ] int 
  2671 ;;  p               2   12[BANK0 ] int 
  2672 ;; Return value:  Size  Location     Type
  2673 ;;                  2    0[BANK0 ] int 
  2674 ;; Registers used:
  2675 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2676 ;; Tracked objects:
  2677 ;;		On entry : 0/0
  2678 ;;		On exit  : 0/0
  2679 ;;		Unchanged: 0/0
  2680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2681 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2682 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2683 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2684 ;;      Totals:         8      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2685 ;;Total ram usage:       36 bytes
  2686 ;; Hardware stack levels used: 1
  2687 ;; Hardware stack levels required when called: 13
  2688 ;; This function calls:
  2689 ;;		___aodiv
  2690 ;;		___aomod
  2691 ;;		_abs
  2692 ;;		_pad
  2693 ;; This function is called by:
  2694 ;;		_vfpfcnvrt
  2695 ;; This function uses a non-reentrant model
  2696 ;;
  2697                           
  2698                           	psect	text7
  2699  001952                     __ptext7:
  2700                           	callstack 0
  2701  001952                     _dtoa:
  2702                           	callstack 13
  2703  001952                     
  2704                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  2705  001952  C0A7  F0B7         	movff	dtoa@d,dtoa@n
  2706  001956  C0A8  F0B8         	movff	dtoa@d+1,dtoa@n+1
  2707  00195A  C0A9  F0B9         	movff	dtoa@d+2,dtoa@n+2
  2708  00195E  C0AA  F0BA         	movff	dtoa@d+3,dtoa@n+3
  2709  001962  C0AB  F0BB         	movff	dtoa@d+4,dtoa@n+4
  2710  001966  C0AC  F0BC         	movff	dtoa@d+5,dtoa@n+5
  2711  00196A  C0AD  F0BD         	movff	dtoa@d+6,dtoa@n+6
  2712  00196E  C0AE  F0BE         	movff	dtoa@d+7,dtoa@n+7
  2713  001972                     
  2714                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  2715  001972  0100               	movlb	0	; () banked
  2716  001974  BFBE               	btfsc	(dtoa@n+7)& (0+255),7,b
  2717  001976  EFBF  F00C         	goto	u4991
  2718  00197A  EFC2  F00C         	goto	u4990
  2719  00197E                     u4991:
  2720  00197E  0E01               	movlw	1
  2721  001980  EFC3  F00C         	goto	u5000
  2722  001984                     u4990:
  2723  001984  0E00               	movlw	0
  2724  001986                     u5000:
  2725  001986  6FB5               	movwf	dtoa@s& (0+255),b
  2726  001988  6BB6               	clrf	(dtoa@s+1)& (0+255),b
  2727                           
  2728                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  2729  00198A  51B5               	movf	dtoa@s& (0+255),w,b
  2730  00198C  11B6               	iorwf	(dtoa@s+1)& (0+255),w,b
  2731  00198E  B4D8               	btfsc	status,2,c
  2732  001990  EFCC  F00C         	goto	u5011
  2733  001994  EFCE  F00C         	goto	u5010
  2734  001998                     u5011:
  2735  001998  EFDE  F00C         	goto	l6092
  2736  00199C                     u5010:
  2737  00199C                     
  2738                           ; BSR set to: 0
  2739                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  2740  00199C  1FBE               	comf	(dtoa@n+7)& (0+255),f,b
  2741  00199E  1FBD               	comf	(dtoa@n+6)& (0+255),f,b
  2742  0019A0  1FBC               	comf	(dtoa@n+5)& (0+255),f,b
  2743  0019A2  1FBB               	comf	(dtoa@n+4)& (0+255),f,b
  2744  0019A4  1FBA               	comf	(dtoa@n+3)& (0+255),f,b
  2745  0019A6  1FB9               	comf	(dtoa@n+2)& (0+255),f,b
  2746  0019A8  1FB8               	comf	(dtoa@n+1)& (0+255),f,b
  2747  0019AA  6DB7               	negf	dtoa@n& (0+255),b
  2748  0019AC  0E00               	movlw	0
  2749  0019AE  23B8               	addwfc	(dtoa@n+1)& (0+255),f,b
  2750  0019B0  23B9               	addwfc	(dtoa@n+2)& (0+255),f,b
  2751  0019B2  23BA               	addwfc	(dtoa@n+3)& (0+255),f,b
  2752  0019B4  23BB               	addwfc	(dtoa@n+4)& (0+255),f,b
  2753  0019B6  23BC               	addwfc	(dtoa@n+5)& (0+255),f,b
  2754  0019B8  23BD               	addwfc	(dtoa@n+6)& (0+255),f,b
  2755  0019BA  23BE               	addwfc	(dtoa@n+7)& (0+255),f,b
  2756  0019BC                     l6092:
  2757                           
  2758                           ; BSR set to: 0
  2759                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  2760  0019BC  BE3B               	btfsc	(_prec+1)^0,7,c
  2761  0019BE  EFE3  F00C         	goto	u5021
  2762  0019C2  EFE5  F00C         	goto	u5020
  2763  0019C6                     u5021:
  2764  0019C6  EFE6  F00C         	goto	l6096
  2765  0019CA                     u5020:
  2766  0019CA                     
  2767                           ; BSR set to: 0
  2768                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  2769  0019CA  923C               	bcf	_flags^0,1,c
  2770  0019CC                     l6096:
  2771                           
  2772                           ; BSR set to: 0
  2773                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  2774  0019CC  BE3B               	btfsc	(_prec+1)^0,7,c
  2775  0019CE  EFF3  F00C         	goto	u5030
  2776  0019D2  503B               	movf	(_prec+1)^0,w,c
  2777  0019D4  E106               	bnz	u5031
  2778  0019D6  043A               	decf	_prec^0,w,c
  2779  0019D8  B0D8               	btfsc	status,0,c
  2780  0019DA  EFF1  F00C         	goto	u5031
  2781  0019DE  EFF3  F00C         	goto	u5030
  2782  0019E2                     u5031:
  2783  0019E2  EFF9  F00C         	goto	l2113
  2784  0019E6                     u5030:
  2785  0019E6                     
  2786                           ; BSR set to: 0
  2787  0019E6  0E00               	movlw	0
  2788  0019E8  6FB2               	movwf	(dtoa@p+1)& (0+255),b
  2789  0019EA  0E01               	movlw	1
  2790  0019EC  6FB1               	movwf	dtoa@p& (0+255),b
  2791  0019EE  EFFD  F00C         	goto	l2115
  2792  0019F2                     l2113:
  2793                           
  2794                           ; BSR set to: 0
  2795  0019F2  C03A  F0B1         	movff	_prec,dtoa@p
  2796  0019F6  C03B  F0B2         	movff	_prec+1,dtoa@p+1
  2797  0019FA                     l2115:
  2798                           
  2799                           ; BSR set to: 0
  2800                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  2801  0019FA  C082  F0B3         	movff	_width,dtoa@w
  2802  0019FE  C083  F0B4         	movff	_width+1,dtoa@w+1
  2803  001A02                     
  2804                           ; BSR set to: 0
  2805                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  2806  001A02  51B5               	movf	dtoa@s& (0+255),w,b
  2807  001A04  11B6               	iorwf	(dtoa@s+1)& (0+255),w,b
  2808  001A06  A4D8               	btfss	status,2,c
  2809  001A08  EF08  F00D         	goto	u5041
  2810  001A0C  EF0A  F00D         	goto	u5040
  2811  001A10                     u5041:
  2812  001A10  EF11  F00D         	goto	l6104
  2813  001A14                     u5040:
  2814  001A14                     
  2815                           ; BSR set to: 0
  2816  001A14  A43C               	btfss	_flags^0,2,c
  2817  001A16  EF0F  F00D         	goto	u5051
  2818  001A1A  EF11  F00D         	goto	u5050
  2819  001A1E                     u5051:
  2820  001A1E  EF14  F00D         	goto	l6106
  2821  001A22                     u5050:
  2822  001A22                     l6104:
  2823                           
  2824                           ; BSR set to: 0
  2825                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  2826  001A22  07B3               	decf	dtoa@w& (0+255),f,b
  2827  001A24  A0D8               	btfss	status,0,c
  2828  001A26  07B4               	decf	(dtoa@w+1)& (0+255),f,b
  2829  001A28                     l6106:
  2830                           
  2831                           ; BSR set to: 0
  2832                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  2833  001A28  0E00               	movlw	0
  2834  001A2A  6FC0               	movwf	(dtoa@i+1)& (0+255),b
  2835  001A2C  0E1F               	movlw	31
  2836  001A2E  6FBF               	movwf	dtoa@i& (0+255),b
  2837  001A30                     
  2838                           ; BSR set to: 0
  2839                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  2840  001A30  0E00               	movlw	0
  2841  001A32  0101               	movlb	1	; () banked
  2842  001A34  6F1F               	movwf	(_dbuf+31)& (0+255),b
  2843                           
  2844                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2845  001A36  EF9A  F00D         	goto	l6120
  2846  001A3A                     l6110:
  2847                           
  2848                           ; BSR set to: 0
  2849                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  2850  001A3A  07BF               	decf	dtoa@i& (0+255),f,b
  2851  001A3C  A0D8               	btfss	status,0,c
  2852  001A3E  07C0               	decf	(dtoa@i+1)& (0+255),f,b
  2853  001A40                     
  2854                           ; BSR set to: 0
  2855                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  2856  001A40  0E00               	movlw	low _dbuf
  2857  001A42  25BF               	addwf	dtoa@i& (0+255),w,b
  2858  001A44  6ED9               	movwf	fsr2l,c
  2859  001A46  0E01               	movlw	high _dbuf
  2860  001A48  21C0               	addwfc	(dtoa@i+1)& (0+255),w,b
  2861  001A4A  6EDA               	movwf	fsr2h,c
  2862  001A4C  C0B7  F014         	movff	dtoa@n,___aomod@dividend
  2863  001A50  C0B8  F015         	movff	dtoa@n+1,___aomod@dividend+1
  2864  001A54  C0B9  F016         	movff	dtoa@n+2,___aomod@dividend+2
  2865  001A58  C0BA  F017         	movff	dtoa@n+3,___aomod@dividend+3
  2866  001A5C  C0BB  F018         	movff	dtoa@n+4,___aomod@dividend+4
  2867  001A60  C0BC  F019         	movff	dtoa@n+5,___aomod@dividend+5
  2868  001A64  C0BD  F01A         	movff	dtoa@n+6,___aomod@dividend+6
  2869  001A68  C0BE  F01B         	movff	dtoa@n+7,___aomod@dividend+7
  2870  001A6C  0E0A               	movlw	10
  2871  001A6E  6E1C               	movwf	___aomod@divisor^0,c
  2872  001A70  0E00               	movlw	0
  2873  001A72  6E1D               	movwf	(___aomod@divisor+1)^0,c
  2874  001A74  0E00               	movlw	0
  2875  001A76  6E1E               	movwf	(___aomod@divisor+2)^0,c
  2876  001A78  0E00               	movlw	0
  2877  001A7A  6E1F               	movwf	(___aomod@divisor+3)^0,c
  2878  001A7C  0E00               	movlw	0
  2879  001A7E  6E20               	movwf	(___aomod@divisor+4)^0,c
  2880  001A80  0E00               	movlw	0
  2881  001A82  6E21               	movwf	(___aomod@divisor+5)^0,c
  2882  001A84  0E00               	movlw	0
  2883  001A86  6E22               	movwf	(___aomod@divisor+6)^0,c
  2884  001A88  0E00               	movlw	0
  2885  001A8A  6E23               	movwf	(___aomod@divisor+7)^0,c
  2886  001A8C  ECE3  F014         	call	___aomod	;wreg free
  2887  001A90  C014  F031         	movff	?___aomod,??_dtoa
  2888  001A94  C015  F032         	movff	?___aomod+1,??_dtoa+1
  2889  001A98  C016  F033         	movff	?___aomod+2,??_dtoa+2
  2890  001A9C  C017  F034         	movff	?___aomod+3,??_dtoa+3
  2891  001AA0  C018  F035         	movff	?___aomod+4,??_dtoa+4
  2892  001AA4  C019  F036         	movff	?___aomod+5,??_dtoa+5
  2893  001AA8  C01A  F037         	movff	?___aomod+6,??_dtoa+6
  2894  001AAC  C01B  F038         	movff	?___aomod+7,??_dtoa+7
  2895  001AB0  C031  F026         	movff	??_dtoa,abs@a
  2896  001AB4  C033  F027         	movff	??_dtoa+2,abs@a+1
  2897  001AB8  ECC5  F01D         	call	_abs	;wreg free
  2898  001ABC  5026               	movf	?_abs^0,w,c
  2899  001ABE  0F30               	addlw	48
  2900  001AC0  6EDF               	movwf	indf2,c
  2901  001AC2                     
  2902                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  2903  001AC2  0100               	movlb	0	; () banked
  2904  001AC4  07B1               	decf	dtoa@p& (0+255),f,b
  2905  001AC6  A0D8               	btfss	status,0,c
  2906  001AC8  07B2               	decf	(dtoa@p+1)& (0+255),f,b
  2907  001ACA                     
  2908                           ; BSR set to: 0
  2909                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  2910  001ACA  07B3               	decf	dtoa@w& (0+255),f,b
  2911  001ACC  A0D8               	btfss	status,0,c
  2912  001ACE  07B4               	decf	(dtoa@w+1)& (0+255),f,b
  2913  001AD0                     
  2914                           ; BSR set to: 0
  2915                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  2916  001AD0  C0B7  F014         	movff	dtoa@n,___aodiv@dividend
  2917  001AD4  C0B8  F015         	movff	dtoa@n+1,___aodiv@dividend+1
  2918  001AD8  C0B9  F016         	movff	dtoa@n+2,___aodiv@dividend+2
  2919  001ADC  C0BA  F017         	movff	dtoa@n+3,___aodiv@dividend+3
  2920  001AE0  C0BB  F018         	movff	dtoa@n+4,___aodiv@dividend+4
  2921  001AE4  C0BC  F019         	movff	dtoa@n+5,___aodiv@dividend+5
  2922  001AE8  C0BD  F01A         	movff	dtoa@n+6,___aodiv@dividend+6
  2923  001AEC  C0BE  F01B         	movff	dtoa@n+7,___aodiv@dividend+7
  2924  001AF0  0E0A               	movlw	10
  2925  001AF2  6E1C               	movwf	___aodiv@divisor^0,c
  2926  001AF4  0E00               	movlw	0
  2927  001AF6  6E1D               	movwf	(___aodiv@divisor+1)^0,c
  2928  001AF8  0E00               	movlw	0
  2929  001AFA  6E1E               	movwf	(___aodiv@divisor+2)^0,c
  2930  001AFC  0E00               	movlw	0
  2931  001AFE  6E1F               	movwf	(___aodiv@divisor+3)^0,c
  2932  001B00  0E00               	movlw	0
  2933  001B02  6E20               	movwf	(___aodiv@divisor+4)^0,c
  2934  001B04  0E00               	movlw	0
  2935  001B06  6E21               	movwf	(___aodiv@divisor+5)^0,c
  2936  001B08  0E00               	movlw	0
  2937  001B0A  6E22               	movwf	(___aodiv@divisor+6)^0,c
  2938  001B0C  0E00               	movlw	0
  2939  001B0E  6E23               	movwf	(___aodiv@divisor+7)^0,c
  2940  001B10  EC1F  F014         	call	___aodiv	;wreg free
  2941  001B14  C014  F0B7         	movff	?___aodiv,dtoa@n
  2942  001B18  C015  F0B8         	movff	?___aodiv+1,dtoa@n+1
  2943  001B1C  C016  F0B9         	movff	?___aodiv+2,dtoa@n+2
  2944  001B20  C017  F0BA         	movff	?___aodiv+3,dtoa@n+3
  2945  001B24  C018  F0BB         	movff	?___aodiv+4,dtoa@n+4
  2946  001B28  C019  F0BC         	movff	?___aodiv+5,dtoa@n+5
  2947  001B2C  C01A  F0BD         	movff	?___aodiv+6,dtoa@n+6
  2948  001B30  C01B  F0BE         	movff	?___aodiv+7,dtoa@n+7
  2949  001B34                     l6120:
  2950                           
  2951                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2952  001B34  0100               	movlb	0	; () banked
  2953  001B36  BFC0               	btfsc	(dtoa@i+1)& (0+255),7,b
  2954  001B38  EFA6  F00D         	goto	u5061
  2955  001B3C  51C0               	movf	(dtoa@i+1)& (0+255),w,b
  2956  001B3E  E108               	bnz	u5060
  2957  001B40  05BF               	decf	dtoa@i& (0+255),w,b
  2958  001B42  A0D8               	btfss	status,0,c
  2959  001B44  EFA6  F00D         	goto	u5061
  2960  001B48  EFA8  F00D         	goto	u5060
  2961  001B4C                     u5061:
  2962  001B4C  EFD8  F00D         	goto	l6130
  2963  001B50                     u5060:
  2964  001B50                     
  2965                           ; BSR set to: 0
  2966  001B50  51B7               	movf	dtoa@n& (0+255),w,b
  2967  001B52  11B8               	iorwf	(dtoa@n+1)& (0+255),w,b
  2968  001B54  11B9               	iorwf	(dtoa@n+2)& (0+255),w,b
  2969  001B56  11BA               	iorwf	(dtoa@n+3)& (0+255),w,b
  2970  001B58  11BB               	iorwf	(dtoa@n+4)& (0+255),w,b
  2971  001B5A  11BC               	iorwf	(dtoa@n+5)& (0+255),w,b
  2972  001B5C  11BD               	iorwf	(dtoa@n+6)& (0+255),w,b
  2973  001B5E  11BE               	iorwf	(dtoa@n+7)& (0+255),w,b
  2974  001B60  A4D8               	btfss	status,2,c
  2975  001B62  EFB5  F00D         	goto	u5071
  2976  001B66  EFB7  F00D         	goto	u5070
  2977  001B6A                     u5071:
  2978  001B6A  EF1D  F00D         	goto	l6110
  2979  001B6E                     u5070:
  2980  001B6E                     
  2981                           ; BSR set to: 0
  2982  001B6E  BFB2               	btfsc	(dtoa@p+1)& (0+255),7,b
  2983  001B70  EFC4  F00D         	goto	u5080
  2984  001B74  51B2               	movf	(dtoa@p+1)& (0+255),w,b
  2985  001B76  E106               	bnz	u5081
  2986  001B78  05B1               	decf	dtoa@p& (0+255),w,b
  2987  001B7A  B0D8               	btfsc	status,0,c
  2988  001B7C  EFC2  F00D         	goto	u5081
  2989  001B80  EFC4  F00D         	goto	u5080
  2990  001B84                     u5081:
  2991  001B84  EF1D  F00D         	goto	l6110
  2992  001B88                     u5080:
  2993  001B88                     
  2994                           ; BSR set to: 0
  2995  001B88  BFB4               	btfsc	(dtoa@w+1)& (0+255),7,b
  2996  001B8A  EFCF  F00D         	goto	u5091
  2997  001B8E  51B4               	movf	(dtoa@w+1)& (0+255),w,b
  2998  001B90  E108               	bnz	u5090
  2999  001B92  05B3               	decf	dtoa@w& (0+255),w,b
  3000  001B94  A0D8               	btfss	status,0,c
  3001  001B96  EFCF  F00D         	goto	u5091
  3002  001B9A  EFD1  F00D         	goto	u5090
  3003  001B9E                     u5091:
  3004  001B9E  EFD8  F00D         	goto	l6130
  3005  001BA2                     u5090:
  3006  001BA2                     
  3007                           ; BSR set to: 0
  3008  001BA2  B23C               	btfsc	_flags^0,1,c
  3009  001BA4  EFD6  F00D         	goto	u5101
  3010  001BA8  EFD8  F00D         	goto	u5100
  3011  001BAC                     u5101:
  3012  001BAC  EF1D  F00D         	goto	l6110
  3013  001BB0                     u5100:
  3014  001BB0                     l6130:
  3015                           
  3016                           ; BSR set to: 0
  3017                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  3018  001BB0  51B5               	movf	dtoa@s& (0+255),w,b
  3019  001BB2  11B6               	iorwf	(dtoa@s+1)& (0+255),w,b
  3020  001BB4  A4D8               	btfss	status,2,c
  3021  001BB6  EFDF  F00D         	goto	u5111
  3022  001BBA  EFE1  F00D         	goto	u5110
  3023  001BBE                     u5111:
  3024  001BBE  EFE8  F00D         	goto	l6134
  3025  001BC2                     u5110:
  3026  001BC2                     
  3027                           ; BSR set to: 0
  3028  001BC2  A43C               	btfss	_flags^0,2,c
  3029  001BC4  EFE6  F00D         	goto	u5121
  3030  001BC8  EFE8  F00D         	goto	u5120
  3031  001BCC                     u5121:
  3032  001BCC  EF07  F00E         	goto	l6144
  3033  001BD0                     u5120:
  3034  001BD0                     l6134:
  3035                           
  3036                           ; BSR set to: 0
  3037                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  3038  001BD0  07BF               	decf	dtoa@i& (0+255),f,b
  3039  001BD2  A0D8               	btfss	status,0,c
  3040  001BD4  07C0               	decf	(dtoa@i+1)& (0+255),f,b
  3041  001BD6                     
  3042                           ; BSR set to: 0
  3043                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  3044  001BD6  51B5               	movf	dtoa@s& (0+255),w,b
  3045  001BD8  11B6               	iorwf	(dtoa@s+1)& (0+255),w,b
  3046  001BDA  A4D8               	btfss	status,2,c
  3047  001BDC  EFF2  F00D         	goto	u5131
  3048  001BE0  EFF4  F00D         	goto	u5130
  3049  001BE4                     u5131:
  3050  001BE4  EFFA  F00D         	goto	l6140
  3051  001BE8                     u5130:
  3052  001BE8                     
  3053                           ; BSR set to: 0
  3054  001BE8  0E00               	movlw	0
  3055  001BEA  6FB0               	movwf	(_dtoa$3491+1)& (0+255),b
  3056  001BEC  0E2B               	movlw	43
  3057  001BEE  6FAF               	movwf	_dtoa$3491& (0+255),b
  3058  001BF0  EFFE  F00D         	goto	l6142
  3059  001BF4                     l6140:
  3060                           
  3061                           ; BSR set to: 0
  3062  001BF4  0E00               	movlw	0
  3063  001BF6  6FB0               	movwf	(_dtoa$3491+1)& (0+255),b
  3064  001BF8  0E2D               	movlw	45
  3065  001BFA  6FAF               	movwf	_dtoa$3491& (0+255),b
  3066  001BFC                     l6142:
  3067                           
  3068                           ; BSR set to: 0
  3069  001BFC  0E00               	movlw	low _dbuf
  3070  001BFE  25BF               	addwf	dtoa@i& (0+255),w,b
  3071  001C00  6ED9               	movwf	fsr2l,c
  3072  001C02  0E01               	movlw	high _dbuf
  3073  001C04  21C0               	addwfc	(dtoa@i+1)& (0+255),w,b
  3074  001C06  6EDA               	movwf	fsr2h,c
  3075  001C08  0060  F2BF  FFDF   	movff	_dtoa$3491,indf2
  3076  001C0E                     l6144:
  3077                           
  3078                           ; BSR set to: 0
  3079                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  3080  001C0E  C0A5  F026         	movff	dtoa@fp,pad@fp
  3081  001C12  C0A6  F027         	movff	dtoa@fp+1,pad@fp+1
  3082  001C16  0E00               	movlw	low _dbuf
  3083  001C18  25BF               	addwf	dtoa@i& (0+255),w,b
  3084  001C1A  6E28               	movwf	pad@buf^0,c
  3085  001C1C  0E01               	movlw	high _dbuf
  3086  001C1E  21C0               	addwfc	(dtoa@i+1)& (0+255),w,b
  3087  001C20  6E29               	movwf	(pad@buf+1)^0,c
  3088  001C22  C0B3  F02A         	movff	dtoa@w,pad@p
  3089  001C26  C0B4  F02B         	movff	dtoa@w+1,pad@p+1
  3090  001C2A  EC17  F01A         	call	_pad	;wreg free
  3091  001C2E  C026  F0A5         	movff	?_pad,?_dtoa
  3092  001C32  C027  F0A6         	movff	?_pad+1,?_dtoa+1
  3093  001C36  0012               	return		;funcret
  3094  001C38                     __end_of_dtoa:
  3095                           	callstack 0
  3096                           
  3097 ;; *************** function _pad *****************
  3098 ;; Defined at:
  3099 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3100 ;; Parameters:    Size  Location     Type
  3101 ;;  fp              2   37[COMRAM] PTR struct _IO_FILE
  3102 ;;		 -> NULL(0), 
  3103 ;;  buf             2   39[COMRAM] PTR unsigned char 
  3104 ;;		 -> dbuf(32), 
  3105 ;;  p               2   41[COMRAM] int 
  3106 ;; Auto vars:     Size  Location     Type
  3107 ;;  w               2   46[COMRAM] int 
  3108 ;;  i               2   44[COMRAM] int 
  3109 ;; Return value:  Size  Location     Type
  3110 ;;                  2   37[COMRAM] int 
  3111 ;; Registers used:
  3112 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3113 ;; Tracked objects:
  3114 ;;		On entry : 0/0
  3115 ;;		On exit  : 0/0
  3116 ;;		Unchanged: 0/0
  3117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3118 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3119 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3120 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3121 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3122 ;;Total ram usage:       11 bytes
  3123 ;; Hardware stack levels used: 1
  3124 ;; Hardware stack levels required when called: 12
  3125 ;; This function calls:
  3126 ;;		_fputc
  3127 ;;		_fputs
  3128 ;;		_strlen
  3129 ;; This function is called by:
  3130 ;;		_dtoa
  3131 ;; This function uses a non-reentrant model
  3132 ;;
  3133                           
  3134                           	psect	text8
  3135  00342E                     __ptext8:
  3136                           	callstack 0
  3137  00342E                     _pad:
  3138                           	callstack 13
  3139  00342E                     
  3140                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  3141  00342E  A03C               	btfss	_flags^0,0,c
  3142  003430  EF1C  F01A         	goto	u4941
  3143  003434  EF1E  F01A         	goto	u4940
  3144  003438                     u4941:
  3145  003438  EF28  F01A         	goto	l6064
  3146  00343C                     u4940:
  3147  00343C                     
  3148                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  3149  00343C  C028  F01F         	movff	pad@buf,fputs@s
  3150  003440  C029  F020         	movff	pad@buf+1,fputs@s+1
  3151  003444  C026  F021         	movff	pad@fp,fputs@fp
  3152  003448  C027  F022         	movff	pad@fp+1,fputs@fp+1
  3153  00344C  EC81  F01D         	call	_fputs	;wreg free
  3154  003450                     l6064:
  3155                           
  3156                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  3157  003450  BE2B               	btfsc	(pad@p+1)^0,7,c
  3158  003452  EF2D  F01A         	goto	u4951
  3159  003456  EF2F  F01A         	goto	u4950
  3160  00345A                     u4951:
  3161  00345A  EF35  F01A         	goto	l6068
  3162  00345E                     u4950:
  3163  00345E  C02A  F02F         	movff	pad@p,pad@w
  3164  003462  C02B  F030         	movff	pad@p+1,pad@w+1
  3165  003466  EF39  F01A         	goto	l2102
  3166  00346A                     l6068:
  3167  00346A  0E00               	movlw	0
  3168  00346C  6E30               	movwf	(pad@w+1)^0,c
  3169  00346E  0E00               	movlw	0
  3170  003470  6E2F               	movwf	pad@w^0,c
  3171  003472                     l2102:
  3172                           
  3173                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  3174  003472  0E00               	movlw	0
  3175  003474  6E2E               	movwf	(pad@i+1)^0,c
  3176  003476  0E00               	movlw	0
  3177  003478  6E2D               	movwf	pad@i^0,c
  3178                           
  3179                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3180  00347A  EF4B  F01A         	goto	l6074
  3181  00347E                     l6070:
  3182                           
  3183                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  3184  00347E  0E00               	movlw	0
  3185  003480  6E17               	movwf	(fputc@c+1)^0,c
  3186  003482  0E20               	movlw	32
  3187  003484  6E16               	movwf	fputc@c^0,c
  3188  003486  C026  F018         	movff	pad@fp,fputc@fp
  3189  00348A  C027  F019         	movff	pad@fp+1,fputc@fp+1
  3190  00348E  EC2A  F01B         	call	_fputc	;wreg free
  3191  003492                     
  3192                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  3193  003492  4A2D               	infsnz	pad@i^0,f,c
  3194  003494  2A2E               	incf	(pad@i+1)^0,f,c
  3195  003496                     l6074:
  3196                           
  3197                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3198  003496  502F               	movf	pad@w^0,w,c
  3199  003498  5C2D               	subwf	pad@i^0,w,c
  3200  00349A  502E               	movf	(pad@i+1)^0,w,c
  3201  00349C  0A80               	xorlw	128
  3202  00349E  6E2C               	movwf	??_pad^0,c
  3203  0034A0  5030               	movf	(pad@w+1)^0,w,c
  3204  0034A2  0A80               	xorlw	128
  3205  0034A4  582C               	subwfb	??_pad^0,w,c
  3206  0034A6  A0D8               	btfss	status,0,c
  3207  0034A8  EF58  F01A         	goto	u4961
  3208  0034AC  EF5A  F01A         	goto	u4960
  3209  0034B0                     u4961:
  3210  0034B0  EF3F  F01A         	goto	l6070
  3211  0034B4                     u4960:
  3212  0034B4                     
  3213                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  3214  0034B4  B03C               	btfsc	_flags^0,0,c
  3215  0034B6  EF5F  F01A         	goto	u4971
  3216  0034BA  EF61  F01A         	goto	u4970
  3217  0034BE                     u4971:
  3218  0034BE  EF6B  F01A         	goto	l6078
  3219  0034C2                     u4970:
  3220  0034C2                     
  3221                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  3222  0034C2  C028  F01F         	movff	pad@buf,fputs@s
  3223  0034C6  C029  F020         	movff	pad@buf+1,fputs@s+1
  3224  0034CA  C026  F021         	movff	pad@fp,fputs@fp
  3225  0034CE  C027  F022         	movff	pad@fp+1,fputs@fp+1
  3226  0034D2  EC81  F01D         	call	_fputs	;wreg free
  3227  0034D6                     l6078:
  3228                           
  3229                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  3230  0034D6  C028  F014         	movff	pad@buf,strlen@s
  3231  0034DA  C029  F015         	movff	pad@buf+1,strlen@s+1
  3232  0034DE  ECE5  F01D         	call	_strlen	;wreg free
  3233  0034E2  502F               	movf	pad@w^0,w,c
  3234  0034E4  2414               	addwf	?_strlen^0,w,c
  3235  0034E6  6E26               	movwf	?_pad^0,c
  3236  0034E8  5030               	movf	(pad@w+1)^0,w,c
  3237  0034EA  2015               	addwfc	(?_strlen+1)^0,w,c
  3238  0034EC  6E27               	movwf	(?_pad+1)^0,c
  3239  0034EE  0012               	return		;funcret
  3240  0034F0                     __end_of_pad:
  3241                           	callstack 0
  3242                           
  3243 ;; *************** function _strlen *****************
  3244 ;; Defined at:
  3245 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  3246 ;; Parameters:    Size  Location     Type
  3247 ;;  s               2   19[COMRAM] PTR const unsigned char 
  3248 ;;		 -> dbuf(32), 
  3249 ;; Auto vars:     Size  Location     Type
  3250 ;;  a               2   21[COMRAM] PTR const unsigned char 
  3251 ;;		 -> dbuf(32), 
  3252 ;; Return value:  Size  Location     Type
  3253 ;;                  2   19[COMRAM] unsigned int 
  3254 ;; Registers used:
  3255 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3256 ;; Tracked objects:
  3257 ;;		On entry : 0/0
  3258 ;;		On exit  : 0/0
  3259 ;;		Unchanged: 0/0
  3260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3261 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3262 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3264 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3265 ;;Total ram usage:        4 bytes
  3266 ;; Hardware stack levels used: 1
  3267 ;; Hardware stack levels required when called: 8
  3268 ;; This function calls:
  3269 ;;		Nothing
  3270 ;; This function is called by:
  3271 ;;		_pad
  3272 ;; This function uses a non-reentrant model
  3273 ;;
  3274                           
  3275                           	psect	text9
  3276  003BCA                     __ptext9:
  3277                           	callstack 0
  3278  003BCA                     _strlen:
  3279                           	callstack 16
  3280  003BCA  C014  F016         	movff	strlen@s,strlen@a
  3281  003BCE  C015  F017         	movff	strlen@s+1,strlen@a+1
  3282  003BD2  EFED  F01D         	goto	l5974
  3283  003BD6                     l5972:
  3284  003BD6  4A14               	infsnz	strlen@s^0,f,c
  3285  003BD8  2A15               	incf	(strlen@s+1)^0,f,c
  3286  003BDA                     l5974:
  3287  003BDA  0060  F053  FFD9   	movff	strlen@s,fsr2l
  3288  003BE0  0060  F057  FFDA   	movff	strlen@s+1,fsr2h
  3289  003BE6  50DF               	movf	indf2,w,c
  3290  003BE8  A4D8               	btfss	status,2,c
  3291  003BEA  EFF9  F01D         	goto	u4801
  3292  003BEE  EFFB  F01D         	goto	u4800
  3293  003BF2                     u4801:
  3294  003BF2  EFEB  F01D         	goto	l5972
  3295  003BF6                     u4800:
  3296  003BF6  5016               	movf	strlen@a^0,w,c
  3297  003BF8  5C14               	subwf	strlen@s^0,w,c
  3298  003BFA  6E14               	movwf	?_strlen^0,c
  3299  003BFC  5017               	movf	(strlen@a+1)^0,w,c
  3300  003BFE  5815               	subwfb	(strlen@s+1)^0,w,c
  3301  003C00  6E15               	movwf	(?_strlen+1)^0,c
  3302  003C02  0012               	return		;funcret
  3303  003C04                     __end_of_strlen:
  3304                           	callstack 0
  3305                           
  3306 ;; *************** function _fputs *****************
  3307 ;; Defined at:
  3308 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  3309 ;; Parameters:    Size  Location     Type
  3310 ;;  s               2   30[COMRAM] PTR const unsigned char 
  3311 ;;		 -> dbuf(32), 
  3312 ;;  fp              2   32[COMRAM] PTR struct _IO_FILE
  3313 ;;		 -> NULL(0), 
  3314 ;; Auto vars:     Size  Location     Type
  3315 ;;  i               2   35[COMRAM] int 
  3316 ;;  c               1   34[COMRAM] unsigned char 
  3317 ;; Return value:  Size  Location     Type
  3318 ;;                  2   30[COMRAM] int 
  3319 ;; Registers used:
  3320 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3321 ;; Tracked objects:
  3322 ;;		On entry : 0/0
  3323 ;;		On exit  : 0/0
  3324 ;;		Unchanged: 0/0
  3325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3326 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3327 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3329 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3330 ;;Total ram usage:        7 bytes
  3331 ;; Hardware stack levels used: 1
  3332 ;; Hardware stack levels required when called: 11
  3333 ;; This function calls:
  3334 ;;		_fputc
  3335 ;; This function is called by:
  3336 ;;		_pad
  3337 ;; This function uses a non-reentrant model
  3338 ;;
  3339                           
  3340                           	psect	text10
  3341  003B02                     __ptext10:
  3342                           	callstack 0
  3343  003B02                     _fputs:
  3344                           	callstack 13
  3345  003B02  0E00               	movlw	0
  3346  003B04  6E25               	movwf	(fputs@i+1)^0,c
  3347  003B06  0E00               	movlw	0
  3348  003B08  6E24               	movwf	fputs@i^0,c
  3349  003B0A  EF92  F01D         	goto	l5968
  3350  003B0E                     l5964:
  3351  003B0E  C023  F016         	movff	fputs@c,fputc@c
  3352  003B12  6A17               	clrf	(fputc@c+1)^0,c
  3353  003B14  C021  F018         	movff	fputs@fp,fputc@fp
  3354  003B18  C022  F019         	movff	fputs@fp+1,fputc@fp+1
  3355  003B1C  EC2A  F01B         	call	_fputc	;wreg free
  3356  003B20  4A24               	infsnz	fputs@i^0,f,c
  3357  003B22  2A25               	incf	(fputs@i+1)^0,f,c
  3358  003B24                     l5968:
  3359  003B24  5024               	movf	fputs@i^0,w,c
  3360  003B26  241F               	addwf	fputs@s^0,w,c
  3361  003B28  6ED9               	movwf	fsr2l,c
  3362  003B2A  5025               	movf	(fputs@i+1)^0,w,c
  3363  003B2C  2020               	addwfc	(fputs@s+1)^0,w,c
  3364  003B2E  6EDA               	movwf	fsr2h,c
  3365  003B30  50DF               	movf	indf2,w,c
  3366  003B32  6E23               	movwf	fputs@c^0,c
  3367  003B34  5023               	movf	fputs@c^0,w,c
  3368  003B36  A4D8               	btfss	status,2,c
  3369  003B38  EFA0  F01D         	goto	u4791
  3370  003B3C  EFA2  F01D         	goto	u4790
  3371  003B40                     u4791:
  3372  003B40  EF87  F01D         	goto	l5964
  3373  003B44                     u4790:
  3374  003B44  0012               	return		;funcret
  3375  003B46                     __end_of_fputs:
  3376                           	callstack 0
  3377                           
  3378 ;; *************** function _fputc *****************
  3379 ;; Defined at:
  3380 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  3381 ;; Parameters:    Size  Location     Type
  3382 ;;  c               2   21[COMRAM] int 
  3383 ;;  fp              2   23[COMRAM] PTR struct _IO_FILE
  3384 ;;		 -> NULL(0), 
  3385 ;; Auto vars:     Size  Location     Type
  3386 ;;		None
  3387 ;; Return value:  Size  Location     Type
  3388 ;;                  2   21[COMRAM] int 
  3389 ;; Registers used:
  3390 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3391 ;; Tracked objects:
  3392 ;;		On entry : 0/0
  3393 ;;		On exit  : 0/0
  3394 ;;		Unchanged: 0/0
  3395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3396 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3398 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3399 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3400 ;;Total ram usage:        9 bytes
  3401 ;; Hardware stack levels used: 1
  3402 ;; Hardware stack levels required when called: 10
  3403 ;; This function calls:
  3404 ;;		_putch
  3405 ;; This function is called by:
  3406 ;;		_pad
  3407 ;;		_vfpfcnvrt
  3408 ;;		_fputs
  3409 ;; This function uses a non-reentrant model
  3410 ;;
  3411                           
  3412                           	psect	text11
  3413  003654                     __ptext11:
  3414                           	callstack 0
  3415  003654                     _fputc:
  3416                           	callstack 16
  3417  003654  5018               	movf	fputc@fp^0,w,c
  3418  003656  1019               	iorwf	(fputc@fp+1)^0,w,c
  3419  003658  B4D8               	btfsc	status,2,c
  3420  00365A  EF31  F01B         	goto	u4751
  3421  00365E  EF33  F01B         	goto	u4750
  3422  003662                     u4751:
  3423  003662  EF3C  F01B         	goto	l5952
  3424  003666                     u4750:
  3425  003666  5018               	movf	fputc@fp^0,w,c
  3426  003668  1019               	iorwf	(fputc@fp+1)^0,w,c
  3427  00366A  A4D8               	btfss	status,2,c
  3428  00366C  EF3A  F01B         	goto	u4761
  3429  003670  EF3C  F01B         	goto	u4760
  3430  003674                     u4761:
  3431  003674  EF41  F01B         	goto	l5954
  3432  003678                     u4760:
  3433  003678                     l5952:
  3434  003678  5016               	movf	fputc@c^0,w,c
  3435  00367A  ECEE  F020         	call	_putch
  3436  00367E  EF74  F01B         	goto	l2166
  3437  003682                     l5954:
  3438  003682  EE20 F004          	lfsr	2,4
  3439  003686  5018               	movf	fputc@fp^0,w,c
  3440  003688  26D9               	addwf	fsr2l,f,c
  3441  00368A  5019               	movf	(fputc@fp+1)^0,w,c
  3442  00368C  22DA               	addwfc	fsr2h,f,c
  3443  00368E  50DE               	movf	postinc2,w,c
  3444  003690  10DE               	iorwf	postinc2,w,c
  3445  003692  B4D8               	btfsc	status,2,c
  3446  003694  EF4E  F01B         	goto	u4771
  3447  003698  EF50  F01B         	goto	u4770
  3448  00369C                     u4771:
  3449  00369C  EF6B  F01B         	goto	l5958
  3450  0036A0                     u4770:
  3451  0036A0  EE20 F004          	lfsr	2,4
  3452  0036A4  5018               	movf	fputc@fp^0,w,c
  3453  0036A6  26D9               	addwf	fsr2l,f,c
  3454  0036A8  5019               	movf	(fputc@fp+1)^0,w,c
  3455  0036AA  22DA               	addwfc	fsr2h,f,c
  3456  0036AC  EE10 F002          	lfsr	1,2
  3457  0036B0  5018               	movf	fputc@fp^0,w,c
  3458  0036B2  26E1               	addwf	fsr1l,f,c
  3459  0036B4  5019               	movf	(fputc@fp+1)^0,w,c
  3460  0036B6  22E2               	addwfc	fsr1h,f,c
  3461  0036B8  50DE               	movf	postinc2,w,c
  3462  0036BA  5CE6               	subwf	postinc1,w,c
  3463  0036BC  50E6               	movf	postinc1,w,c
  3464  0036BE  0A80               	xorlw	128
  3465  0036C0  6E1E               	movwf	(??_fputc+4)^0,c
  3466  0036C2  50DE               	movf	postinc2,w,c
  3467  0036C4  0A80               	xorlw	128
  3468  0036C6  581E               	subwfb	(??_fputc+4)^0,w,c
  3469  0036C8  B0D8               	btfsc	status,0,c
  3470  0036CA  EF69  F01B         	goto	u4781
  3471  0036CE  EF6B  F01B         	goto	u4780
  3472  0036D2                     u4781:
  3473  0036D2  EF74  F01B         	goto	l2166
  3474  0036D6                     u4780:
  3475  0036D6                     l5958:
  3476  0036D6  EE20 F002          	lfsr	2,2
  3477  0036DA  5018               	movf	fputc@fp^0,w,c
  3478  0036DC  26D9               	addwf	fsr2l,f,c
  3479  0036DE  5019               	movf	(fputc@fp+1)^0,w,c
  3480  0036E0  22DA               	addwfc	fsr2h,f,c
  3481  0036E2  2ADE               	incf	postinc2,f,c
  3482  0036E4  0E00               	movlw	0
  3483  0036E6  22DD               	addwfc	postdec2,f,c
  3484  0036E8                     l2166:
  3485  0036E8  0012               	return		;funcret
  3486  0036EA                     __end_of_fputc:
  3487                           	callstack 0
  3488                           
  3489 ;; *************** function _putch *****************
  3490 ;; Defined at:
  3491 ;;		line 230 in file "mcc_generated_files/uart1.c"
  3492 ;; Parameters:    Size  Location     Type
  3493 ;;  txData          1    wreg     unsigned char 
  3494 ;; Auto vars:     Size  Location     Type
  3495 ;;  txData          1   20[COMRAM] unsigned char 
  3496 ;; Return value:  Size  Location     Type
  3497 ;;                  1    wreg      void 
  3498 ;; Registers used:
  3499 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3500 ;; Tracked objects:
  3501 ;;		On entry : 0/0
  3502 ;;		On exit  : 0/0
  3503 ;;		Unchanged: 0/0
  3504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3506 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3508 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3509 ;;Total ram usage:        1 bytes
  3510 ;; Hardware stack levels used: 1
  3511 ;; Hardware stack levels required when called: 9
  3512 ;; This function calls:
  3513 ;;		_UART1_Write
  3514 ;; This function is called by:
  3515 ;;		_fputc
  3516 ;; This function uses a non-reentrant model
  3517 ;;
  3518                           
  3519                           	psect	text12
  3520  0041DC                     __ptext12:
  3521                           	callstack 0
  3522  0041DC                     _putch:
  3523                           	callstack 16
  3524                           
  3525                           ;incstack = 0
  3526                           ;putch@txData stored from wreg
  3527  0041DC  6E15               	movwf	putch@txData^0,c
  3528  0041DE                     
  3529                           ;mcc_generated_files/uart1.c: 230: void putch(char txData);mcc_generated_files/uart1.c: 
      +                          231: {;mcc_generated_files/uart1.c: 232:     UART1_Write(txData);
  3530  0041DE  5015               	movf	putch@txData^0,w,c
  3531  0041E0  EC3B  F01C         	call	_UART1_Write
  3532  0041E4  0012               	return		;funcret
  3533  0041E6                     __end_of_putch:
  3534                           	callstack 0
  3535                           
  3536 ;; *************** function _UART1_Write *****************
  3537 ;; Defined at:
  3538 ;;		line 202 in file "mcc_generated_files/uart1.c"
  3539 ;; Parameters:    Size  Location     Type
  3540 ;;  txData          1    wreg     unsigned char 
  3541 ;; Auto vars:     Size  Location     Type
  3542 ;;  txData          1   19[COMRAM] unsigned char 
  3543 ;; Return value:  Size  Location     Type
  3544 ;;                  1    wreg      void 
  3545 ;; Registers used:
  3546 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3547 ;; Tracked objects:
  3548 ;;		On entry : 0/0
  3549 ;;		On exit  : 0/0
  3550 ;;		Unchanged: 0/0
  3551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3553 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3555 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3556 ;;Total ram usage:        1 bytes
  3557 ;; Hardware stack levels used: 1
  3558 ;; Hardware stack levels required when called: 8
  3559 ;; This function calls:
  3560 ;;		Nothing
  3561 ;; This function is called by:
  3562 ;;		_putch
  3563 ;; This function uses a non-reentrant model
  3564 ;;
  3565                           
  3566                           	psect	text13
  3567  003876                     __ptext13:
  3568                           	callstack 0
  3569  003876                     _UART1_Write:
  3570                           	callstack 16
  3571                           
  3572                           ;incstack = 0
  3573                           ;UART1_Write@txData stored from wreg
  3574  003876  6E14               	movwf	UART1_Write@txData^0,c
  3575  003878                     l5930:
  3576                           
  3577                           ;mcc_generated_files/uart1.c: 204:     while(0 == uart1TxBufferRemaining)
  3578  003878  504C               	movf	_uart1TxBufferRemaining^0,w,c	;volatile
  3579  00387A  B4D8               	btfsc	status,2,c
  3580  00387C  EF42  F01C         	goto	u4721
  3581  003880  EF44  F01C         	goto	u4720
  3582  003884                     u4721:
  3583  003884  EF3C  F01C         	goto	l5930
  3584  003888                     u4720:
  3585  003888                     
  3586                           ;mcc_generated_files/uart1.c: 208:     if(0 == PIE3bits.U1TXIE)
  3587  003888  0139               	movlb	57	; () banked
  3588  00388A  B993               	btfsc	147,4,b	;volatile
  3589  00388C  EF4A  F01C         	goto	u4731
  3590  003890  EF4C  F01C         	goto	u4730
  3591  003894                     u4731:
  3592  003894  EF51  F01C         	goto	l309
  3593  003898                     u4730:
  3594  003898                     
  3595                           ; BSR set to: 57
  3596                           ;mcc_generated_files/uart1.c: 209:     {;mcc_generated_files/uart1.c: 210:         U1TXB
      +                           = txData;
  3597  003898  0060  F053  FDEA   	movff	UART1_Write@txData,15850	;volatile
  3598                           
  3599                           ;mcc_generated_files/uart1.c: 211:     }
  3600  00389E  EF67  F01C         	goto	l5944
  3601  0038A2                     l309:
  3602                           
  3603                           ; BSR set to: 57
  3604                           ;mcc_generated_files/uart1.c: 213:     {;mcc_generated_files/uart1.c: 214:         PIE3b
      +                          its.U1TXIE = 0;
  3605  0038A2  9993               	bcf	147,4,b	;volatile
  3606  0038A4                     
  3607                           ; BSR set to: 57
  3608                           ;mcc_generated_files/uart1.c: 215:         uart1TxBuffer[uart1TxHead++] = txData;
  3609  0038A4  0E70               	movlw	low _uart1TxBuffer
  3610  0038A6  2447               	addwf	_uart1TxHead^0,w,c	;volatile
  3611  0038A8  6ED9               	movwf	fsr2l,c
  3612  0038AA  6ADA               	clrf	fsr2h,c
  3613  0038AC  0E00               	movlw	high _uart1TxBuffer
  3614  0038AE  22DA               	addwfc	fsr2h,f,c
  3615  0038B0  0060  F053  FFDF   	movff	UART1_Write@txData,indf2
  3616  0038B6                     
  3617                           ; BSR set to: 57
  3618  0038B6  2A47               	incf	_uart1TxHead^0,f,c	;volatile
  3619  0038B8                     
  3620                           ; BSR set to: 57
  3621                           ;mcc_generated_files/uart1.c: 216:         if(sizeof(uart1TxBuffer) <= uart1TxHead)
  3622  0038B8  0E07               	movlw	7
  3623  0038BA  6447               	cpfsgt	_uart1TxHead^0,c	;volatile
  3624  0038BC  EF62  F01C         	goto	u4741
  3625  0038C0  EF64  F01C         	goto	u4740
  3626  0038C4                     u4741:
  3627  0038C4  EF66  F01C         	goto	l5942
  3628  0038C8                     u4740:
  3629  0038C8                     
  3630                           ; BSR set to: 57
  3631                           ;mcc_generated_files/uart1.c: 217:         {;mcc_generated_files/uart1.c: 218:          
      +                             uart1TxHead = 0;
  3632  0038C8  0E00               	movlw	0
  3633  0038CA  6E47               	movwf	_uart1TxHead^0,c	;volatile
  3634  0038CC                     l5942:
  3635                           
  3636                           ; BSR set to: 57
  3637                           ;mcc_generated_files/uart1.c: 220:         uart1TxBufferRemaining--;
  3638  0038CC  064C               	decf	_uart1TxBufferRemaining^0,f,c	;volatile
  3639  0038CE                     l5944:
  3640                           
  3641                           ; BSR set to: 57
  3642                           ;mcc_generated_files/uart1.c: 222:     PIE3bits.U1TXIE = 1;
  3643  0038CE  8993               	bsf	147,4,b	;volatile
  3644  0038D0                     
  3645                           ; BSR set to: 57
  3646  0038D0  0012               	return		;funcret
  3647  0038D2                     __end_of_UART1_Write:
  3648                           	callstack 0
  3649                           
  3650 ;; *************** function _abs *****************
  3651 ;; Defined at:
  3652 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  3653 ;; Parameters:    Size  Location     Type
  3654 ;;  a               2   37[COMRAM] int 
  3655 ;; Auto vars:     Size  Location     Type
  3656 ;;		None
  3657 ;; Return value:  Size  Location     Type
  3658 ;;                  2   37[COMRAM] int 
  3659 ;; Registers used:
  3660 ;;		wreg, status,2, status,0
  3661 ;; Tracked objects:
  3662 ;;		On entry : 0/0
  3663 ;;		On exit  : 0/0
  3664 ;;		Unchanged: 0/0
  3665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3666 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3668 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3669 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3670 ;;Total ram usage:        4 bytes
  3671 ;; Hardware stack levels used: 1
  3672 ;; Hardware stack levels required when called: 8
  3673 ;; This function calls:
  3674 ;;		Nothing
  3675 ;; This function is called by:
  3676 ;;		_dtoa
  3677 ;; This function uses a non-reentrant model
  3678 ;;
  3679                           
  3680                           	psect	text14
  3681  003B8A                     __ptext14:
  3682                           	callstack 0
  3683  003B8A                     _abs:
  3684                           	callstack 17
  3685  003B8A  BE27               	btfsc	(abs@a+1)^0,7,c
  3686  003B8C  EFD2  F01D         	goto	u4980
  3687  003B90  5027               	movf	(abs@a+1)^0,w,c
  3688  003B92  E106               	bnz	u4981
  3689  003B94  0426               	decf	abs@a^0,w,c
  3690  003B96  B0D8               	btfsc	status,0,c
  3691  003B98  EFD0  F01D         	goto	u4981
  3692  003B9C  EFD2  F01D         	goto	u4980
  3693  003BA0                     u4981:
  3694  003BA0  EFE0  F01D         	goto	l2151
  3695  003BA4                     u4980:
  3696  003BA4  C026  F028         	movff	abs@a,??_abs
  3697  003BA8  C027  F029         	movff	abs@a+1,??_abs+1
  3698  003BAC  1E28               	comf	??_abs^0,f,c
  3699  003BAE  1E29               	comf	(??_abs+1)^0,f,c
  3700  003BB0  4A28               	infsnz	??_abs^0,f,c
  3701  003BB2  2A29               	incf	(??_abs+1)^0,f,c
  3702  003BB4  C028  F026         	movff	??_abs,?_abs
  3703  003BB8  C029  F027         	movff	??_abs+1,?_abs+1
  3704  003BBC  EFE4  F01D         	goto	l2154
  3705  003BC0                     l2151:
  3706  003BC0  C026  F026         	movff	abs@a,?_abs
  3707  003BC4  C027  F027         	movff	abs@a+1,?_abs+1
  3708  003BC8                     l2154:
  3709  003BC8  0012               	return		;funcret
  3710  003BCA                     __end_of_abs:
  3711                           	callstack 0
  3712                           
  3713 ;; *************** function ___aomod *****************
  3714 ;; Defined at:
  3715 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  3716 ;; Parameters:    Size  Location     Type
  3717 ;;  dividend        8   19[COMRAM] long long 
  3718 ;;  divisor         8   27[COMRAM] long long 
  3719 ;; Auto vars:     Size  Location     Type
  3720 ;;  sign            1   36[COMRAM] unsigned char 
  3721 ;;  counter         1   35[COMRAM] unsigned char 
  3722 ;; Return value:  Size  Location     Type
  3723 ;;                  8   19[COMRAM] long long 
  3724 ;; Registers used:
  3725 ;;		wreg, status,2, status,0
  3726 ;; Tracked objects:
  3727 ;;		On entry : 0/0
  3728 ;;		On exit  : 0/0
  3729 ;;		Unchanged: 0/0
  3730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3731 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3732 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3734 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3735 ;;Total ram usage:       18 bytes
  3736 ;; Hardware stack levels used: 1
  3737 ;; Hardware stack levels required when called: 8
  3738 ;; This function calls:
  3739 ;;		Nothing
  3740 ;; This function is called by:
  3741 ;;		_dtoa
  3742 ;; This function uses a non-reentrant model
  3743 ;;
  3744                           
  3745                           	psect	text15
  3746  0029C6                     __ptext15:
  3747                           	callstack 0
  3748  0029C6                     ___aomod:
  3749                           	callstack 17
  3750  0029C6  0E00               	movlw	0
  3751  0029C8  6E25               	movwf	___aomod@sign^0,c
  3752  0029CA  BE1B               	btfsc	(___aomod@dividend+7)^0,7,c
  3753  0029CC  EFEC  F014         	goto	u4880
  3754  0029D0  EFEA  F014         	goto	u4881
  3755  0029D4                     u4881:
  3756  0029D4  EFFE  F014         	goto	l6032
  3757  0029D8                     u4880:
  3758  0029D8  1E1B               	comf	(___aomod@dividend+7)^0,f,c
  3759  0029DA  1E1A               	comf	(___aomod@dividend+6)^0,f,c
  3760  0029DC  1E19               	comf	(___aomod@dividend+5)^0,f,c
  3761  0029DE  1E18               	comf	(___aomod@dividend+4)^0,f,c
  3762  0029E0  1E17               	comf	(___aomod@dividend+3)^0,f,c
  3763  0029E2  1E16               	comf	(___aomod@dividend+2)^0,f,c
  3764  0029E4  1E15               	comf	(___aomod@dividend+1)^0,f,c
  3765  0029E6  6C14               	negf	___aomod@dividend^0,c
  3766  0029E8  0E00               	movlw	0
  3767  0029EA  2215               	addwfc	(___aomod@dividend+1)^0,f,c
  3768  0029EC  2216               	addwfc	(___aomod@dividend+2)^0,f,c
  3769  0029EE  2217               	addwfc	(___aomod@dividend+3)^0,f,c
  3770  0029F0  2218               	addwfc	(___aomod@dividend+4)^0,f,c
  3771  0029F2  2219               	addwfc	(___aomod@dividend+5)^0,f,c
  3772  0029F4  221A               	addwfc	(___aomod@dividend+6)^0,f,c
  3773  0029F6  221B               	addwfc	(___aomod@dividend+7)^0,f,c
  3774  0029F8  0E01               	movlw	1
  3775  0029FA  6E25               	movwf	___aomod@sign^0,c
  3776  0029FC                     l6032:
  3777  0029FC  BE23               	btfsc	(___aomod@divisor+7)^0,7,c
  3778  0029FE  EF05  F015         	goto	u4890
  3779  002A02  EF03  F015         	goto	u4891
  3780  002A06                     u4891:
  3781  002A06  EF15  F015         	goto	l6036
  3782  002A0A                     u4890:
  3783  002A0A  1E23               	comf	(___aomod@divisor+7)^0,f,c
  3784  002A0C  1E22               	comf	(___aomod@divisor+6)^0,f,c
  3785  002A0E  1E21               	comf	(___aomod@divisor+5)^0,f,c
  3786  002A10  1E20               	comf	(___aomod@divisor+4)^0,f,c
  3787  002A12  1E1F               	comf	(___aomod@divisor+3)^0,f,c
  3788  002A14  1E1E               	comf	(___aomod@divisor+2)^0,f,c
  3789  002A16  1E1D               	comf	(___aomod@divisor+1)^0,f,c
  3790  002A18  6C1C               	negf	___aomod@divisor^0,c
  3791  002A1A  0E00               	movlw	0
  3792  002A1C  221D               	addwfc	(___aomod@divisor+1)^0,f,c
  3793  002A1E  221E               	addwfc	(___aomod@divisor+2)^0,f,c
  3794  002A20  221F               	addwfc	(___aomod@divisor+3)^0,f,c
  3795  002A22  2220               	addwfc	(___aomod@divisor+4)^0,f,c
  3796  002A24  2221               	addwfc	(___aomod@divisor+5)^0,f,c
  3797  002A26  2222               	addwfc	(___aomod@divisor+6)^0,f,c
  3798  002A28  2223               	addwfc	(___aomod@divisor+7)^0,f,c
  3799  002A2A                     l6036:
  3800  002A2A  501C               	movf	___aomod@divisor^0,w,c
  3801  002A2C  101D               	iorwf	(___aomod@divisor+1)^0,w,c
  3802  002A2E  101E               	iorwf	(___aomod@divisor+2)^0,w,c
  3803  002A30  101F               	iorwf	(___aomod@divisor+3)^0,w,c
  3804  002A32  1020               	iorwf	(___aomod@divisor+4)^0,w,c
  3805  002A34  1021               	iorwf	(___aomod@divisor+5)^0,w,c
  3806  002A36  1022               	iorwf	(___aomod@divisor+6)^0,w,c
  3807  002A38  1023               	iorwf	(___aomod@divisor+7)^0,w,c
  3808  002A3A  B4D8               	btfsc	status,2,c
  3809  002A3C  EF22  F015         	goto	u4901
  3810  002A40  EF24  F015         	goto	u4900
  3811  002A44                     u4901:
  3812  002A44  EF6C  F015         	goto	l6052
  3813  002A48                     u4900:
  3814  002A48  0E01               	movlw	1
  3815  002A4A  6E24               	movwf	___aomod@counter^0,c
  3816  002A4C  EF32  F015         	goto	l6042
  3817  002A50                     l6040:
  3818  002A50  90D8               	bcf	status,0,c
  3819  002A52  361C               	rlcf	___aomod@divisor^0,f,c
  3820  002A54  361D               	rlcf	(___aomod@divisor+1)^0,f,c
  3821  002A56  361E               	rlcf	(___aomod@divisor+2)^0,f,c
  3822  002A58  361F               	rlcf	(___aomod@divisor+3)^0,f,c
  3823  002A5A  3620               	rlcf	(___aomod@divisor+4)^0,f,c
  3824  002A5C  3621               	rlcf	(___aomod@divisor+5)^0,f,c
  3825  002A5E  3622               	rlcf	(___aomod@divisor+6)^0,f,c
  3826  002A60  3623               	rlcf	(___aomod@divisor+7)^0,f,c
  3827  002A62  2A24               	incf	___aomod@counter^0,f,c
  3828  002A64                     l6042:
  3829  002A64  AE23               	btfss	(___aomod@divisor+7)^0,7,c
  3830  002A66  EF37  F015         	goto	u4911
  3831  002A6A  EF39  F015         	goto	u4910
  3832  002A6E                     u4911:
  3833  002A6E  EF28  F015         	goto	l6040
  3834  002A72                     u4910:
  3835  002A72                     l6044:
  3836  002A72  501C               	movf	___aomod@divisor^0,w,c
  3837  002A74  5C14               	subwf	___aomod@dividend^0,w,c
  3838  002A76  501D               	movf	(___aomod@divisor+1)^0,w,c
  3839  002A78  5815               	subwfb	(___aomod@dividend+1)^0,w,c
  3840  002A7A  501E               	movf	(___aomod@divisor+2)^0,w,c
  3841  002A7C  5816               	subwfb	(___aomod@dividend+2)^0,w,c
  3842  002A7E  501F               	movf	(___aomod@divisor+3)^0,w,c
  3843  002A80  5817               	subwfb	(___aomod@dividend+3)^0,w,c
  3844  002A82  5020               	movf	(___aomod@divisor+4)^0,w,c
  3845  002A84  5818               	subwfb	(___aomod@dividend+4)^0,w,c
  3846  002A86  5021               	movf	(___aomod@divisor+5)^0,w,c
  3847  002A88  5819               	subwfb	(___aomod@dividend+5)^0,w,c
  3848  002A8A  5022               	movf	(___aomod@divisor+6)^0,w,c
  3849  002A8C  581A               	subwfb	(___aomod@dividend+6)^0,w,c
  3850  002A8E  5023               	movf	(___aomod@divisor+7)^0,w,c
  3851  002A90  581B               	subwfb	(___aomod@dividend+7)^0,w,c
  3852  002A92  A0D8               	btfss	status,0,c
  3853  002A94  EF4E  F015         	goto	u4921
  3854  002A98  EF50  F015         	goto	u4920
  3855  002A9C                     u4921:
  3856  002A9C  EF60  F015         	goto	l6048
  3857  002AA0                     u4920:
  3858  002AA0  501C               	movf	___aomod@divisor^0,w,c
  3859  002AA2  5E14               	subwf	___aomod@dividend^0,f,c
  3860  002AA4  501D               	movf	(___aomod@divisor+1)^0,w,c
  3861  002AA6  5A15               	subwfb	(___aomod@dividend+1)^0,f,c
  3862  002AA8  501E               	movf	(___aomod@divisor+2)^0,w,c
  3863  002AAA  5A16               	subwfb	(___aomod@dividend+2)^0,f,c
  3864  002AAC  501F               	movf	(___aomod@divisor+3)^0,w,c
  3865  002AAE  5A17               	subwfb	(___aomod@dividend+3)^0,f,c
  3866  002AB0  5020               	movf	(___aomod@divisor+4)^0,w,c
  3867  002AB2  5A18               	subwfb	(___aomod@dividend+4)^0,f,c
  3868  002AB4  5021               	movf	(___aomod@divisor+5)^0,w,c
  3869  002AB6  5A19               	subwfb	(___aomod@dividend+5)^0,f,c
  3870  002AB8  5022               	movf	(___aomod@divisor+6)^0,w,c
  3871  002ABA  5A1A               	subwfb	(___aomod@dividend+6)^0,f,c
  3872  002ABC  5023               	movf	(___aomod@divisor+7)^0,w,c
  3873  002ABE  5A1B               	subwfb	(___aomod@dividend+7)^0,f,c
  3874  002AC0                     l6048:
  3875  002AC0  90D8               	bcf	status,0,c
  3876  002AC2  3223               	rrcf	(___aomod@divisor+7)^0,f,c
  3877  002AC4  3222               	rrcf	(___aomod@divisor+6)^0,f,c
  3878  002AC6  3221               	rrcf	(___aomod@divisor+5)^0,f,c
  3879  002AC8  3220               	rrcf	(___aomod@divisor+4)^0,f,c
  3880  002ACA  321F               	rrcf	(___aomod@divisor+3)^0,f,c
  3881  002ACC  321E               	rrcf	(___aomod@divisor+2)^0,f,c
  3882  002ACE  321D               	rrcf	(___aomod@divisor+1)^0,f,c
  3883  002AD0  321C               	rrcf	___aomod@divisor^0,f,c
  3884  002AD2  2E24               	decfsz	___aomod@counter^0,f,c
  3885  002AD4  EF39  F015         	goto	l6044
  3886  002AD8                     l6052:
  3887  002AD8  5025               	movf	___aomod@sign^0,w,c
  3888  002ADA  B4D8               	btfsc	status,2,c
  3889  002ADC  EF72  F015         	goto	u4931
  3890  002AE0  EF74  F015         	goto	u4930
  3891  002AE4                     u4931:
  3892  002AE4  EF84  F015         	goto	l6056
  3893  002AE8                     u4930:
  3894  002AE8  1E1B               	comf	(___aomod@dividend+7)^0,f,c
  3895  002AEA  1E1A               	comf	(___aomod@dividend+6)^0,f,c
  3896  002AEC  1E19               	comf	(___aomod@dividend+5)^0,f,c
  3897  002AEE  1E18               	comf	(___aomod@dividend+4)^0,f,c
  3898  002AF0  1E17               	comf	(___aomod@dividend+3)^0,f,c
  3899  002AF2  1E16               	comf	(___aomod@dividend+2)^0,f,c
  3900  002AF4  1E15               	comf	(___aomod@dividend+1)^0,f,c
  3901  002AF6  6C14               	negf	___aomod@dividend^0,c
  3902  002AF8  0E00               	movlw	0
  3903  002AFA  2215               	addwfc	(___aomod@dividend+1)^0,f,c
  3904  002AFC  2216               	addwfc	(___aomod@dividend+2)^0,f,c
  3905  002AFE  2217               	addwfc	(___aomod@dividend+3)^0,f,c
  3906  002B00  2218               	addwfc	(___aomod@dividend+4)^0,f,c
  3907  002B02  2219               	addwfc	(___aomod@dividend+5)^0,f,c
  3908  002B04  221A               	addwfc	(___aomod@dividend+6)^0,f,c
  3909  002B06  221B               	addwfc	(___aomod@dividend+7)^0,f,c
  3910  002B08                     l6056:
  3911  002B08  C014  F014         	movff	___aomod@dividend,?___aomod
  3912  002B0C  C015  F015         	movff	___aomod@dividend+1,?___aomod+1
  3913  002B10  C016  F016         	movff	___aomod@dividend+2,?___aomod+2
  3914  002B14  C017  F017         	movff	___aomod@dividend+3,?___aomod+3
  3915  002B18  C018  F018         	movff	___aomod@dividend+4,?___aomod+4
  3916  002B1C  C019  F019         	movff	___aomod@dividend+5,?___aomod+5
  3917  002B20  C01A  F01A         	movff	___aomod@dividend+6,?___aomod+6
  3918  002B24  C01B  F01B         	movff	___aomod@dividend+7,?___aomod+7
  3919  002B28  0012               	return		;funcret
  3920  002B2A                     __end_of___aomod:
  3921                           	callstack 0
  3922                           
  3923 ;; *************** function ___aodiv *****************
  3924 ;; Defined at:
  3925 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  3926 ;; Parameters:    Size  Location     Type
  3927 ;;  dividend        8   19[COMRAM] long long 
  3928 ;;  divisor         8   27[COMRAM] long long 
  3929 ;; Auto vars:     Size  Location     Type
  3930 ;;  quotient        8   37[COMRAM] long long 
  3931 ;;  sign            1   36[COMRAM] unsigned char 
  3932 ;;  counter         1   35[COMRAM] unsigned char 
  3933 ;; Return value:  Size  Location     Type
  3934 ;;                  8   19[COMRAM] long long 
  3935 ;; Registers used:
  3936 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3937 ;; Tracked objects:
  3938 ;;		On entry : 0/0
  3939 ;;		On exit  : 0/0
  3940 ;;		Unchanged: 0/0
  3941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3942 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3943 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3945 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3946 ;;Total ram usage:       26 bytes
  3947 ;; Hardware stack levels used: 1
  3948 ;; Hardware stack levels required when called: 8
  3949 ;; This function calls:
  3950 ;;		Nothing
  3951 ;; This function is called by:
  3952 ;;		_dtoa
  3953 ;; This function uses a non-reentrant model
  3954 ;;
  3955                           
  3956                           	psect	text16
  3957  00283E                     __ptext16:
  3958                           	callstack 0
  3959  00283E                     ___aodiv:
  3960                           	callstack 17
  3961  00283E  0E00               	movlw	0
  3962  002840  6E25               	movwf	___aodiv@sign^0,c
  3963  002842  BE23               	btfsc	(___aodiv@divisor+7)^0,7,c
  3964  002844  EF28  F014         	goto	u4810
  3965  002848  EF26  F014         	goto	u4811
  3966  00284C                     u4811:
  3967  00284C  EF3A  F014         	goto	l5988
  3968  002850                     u4810:
  3969  002850  1E23               	comf	(___aodiv@divisor+7)^0,f,c
  3970  002852  1E22               	comf	(___aodiv@divisor+6)^0,f,c
  3971  002854  1E21               	comf	(___aodiv@divisor+5)^0,f,c
  3972  002856  1E20               	comf	(___aodiv@divisor+4)^0,f,c
  3973  002858  1E1F               	comf	(___aodiv@divisor+3)^0,f,c
  3974  00285A  1E1E               	comf	(___aodiv@divisor+2)^0,f,c
  3975  00285C  1E1D               	comf	(___aodiv@divisor+1)^0,f,c
  3976  00285E  6C1C               	negf	___aodiv@divisor^0,c
  3977  002860  0E00               	movlw	0
  3978  002862  221D               	addwfc	(___aodiv@divisor+1)^0,f,c
  3979  002864  221E               	addwfc	(___aodiv@divisor+2)^0,f,c
  3980  002866  221F               	addwfc	(___aodiv@divisor+3)^0,f,c
  3981  002868  2220               	addwfc	(___aodiv@divisor+4)^0,f,c
  3982  00286A  2221               	addwfc	(___aodiv@divisor+5)^0,f,c
  3983  00286C  2222               	addwfc	(___aodiv@divisor+6)^0,f,c
  3984  00286E  2223               	addwfc	(___aodiv@divisor+7)^0,f,c
  3985  002870  0E01               	movlw	1
  3986  002872  6E25               	movwf	___aodiv@sign^0,c
  3987  002874                     l5988:
  3988  002874  BE1B               	btfsc	(___aodiv@dividend+7)^0,7,c
  3989  002876  EF41  F014         	goto	u4820
  3990  00287A  EF3F  F014         	goto	u4821
  3991  00287E                     u4821:
  3992  00287E  EF53  F014         	goto	l5994
  3993  002882                     u4820:
  3994  002882  1E1B               	comf	(___aodiv@dividend+7)^0,f,c
  3995  002884  1E1A               	comf	(___aodiv@dividend+6)^0,f,c
  3996  002886  1E19               	comf	(___aodiv@dividend+5)^0,f,c
  3997  002888  1E18               	comf	(___aodiv@dividend+4)^0,f,c
  3998  00288A  1E17               	comf	(___aodiv@dividend+3)^0,f,c
  3999  00288C  1E16               	comf	(___aodiv@dividend+2)^0,f,c
  4000  00288E  1E15               	comf	(___aodiv@dividend+1)^0,f,c
  4001  002890  6C14               	negf	___aodiv@dividend^0,c
  4002  002892  0E00               	movlw	0
  4003  002894  2215               	addwfc	(___aodiv@dividend+1)^0,f,c
  4004  002896  2216               	addwfc	(___aodiv@dividend+2)^0,f,c
  4005  002898  2217               	addwfc	(___aodiv@dividend+3)^0,f,c
  4006  00289A  2218               	addwfc	(___aodiv@dividend+4)^0,f,c
  4007  00289C  2219               	addwfc	(___aodiv@dividend+5)^0,f,c
  4008  00289E  221A               	addwfc	(___aodiv@dividend+6)^0,f,c
  4009  0028A0  221B               	addwfc	(___aodiv@dividend+7)^0,f,c
  4010  0028A2  0E01               	movlw	1
  4011  0028A4  1A25               	xorwf	___aodiv@sign^0,f,c
  4012  0028A6                     l5994:
  4013  0028A6  EE20  F026         	lfsr	2,___aodiv@quotient
  4014  0028AA  0E07               	movlw	7
  4015  0028AC                     u4831:
  4016  0028AC  6ADE               	clrf	postinc2,c
  4017  0028AE  06E8               	decf	wreg,f,c
  4018  0028B0  E2FD               	bc	u4831
  4019  0028B2  501C               	movf	___aodiv@divisor^0,w,c
  4020  0028B4  101D               	iorwf	(___aodiv@divisor+1)^0,w,c
  4021  0028B6  101E               	iorwf	(___aodiv@divisor+2)^0,w,c
  4022  0028B8  101F               	iorwf	(___aodiv@divisor+3)^0,w,c
  4023  0028BA  1020               	iorwf	(___aodiv@divisor+4)^0,w,c
  4024  0028BC  1021               	iorwf	(___aodiv@divisor+5)^0,w,c
  4025  0028BE  1022               	iorwf	(___aodiv@divisor+6)^0,w,c
  4026  0028C0  1023               	iorwf	(___aodiv@divisor+7)^0,w,c
  4027  0028C2  B4D8               	btfsc	status,2,c
  4028  0028C4  EF66  F014         	goto	u4841
  4029  0028C8  EF68  F014         	goto	u4840
  4030  0028CC                     u4841:
  4031  0028CC  EFBA  F014         	goto	l6016
  4032  0028D0                     u4840:
  4033  0028D0  0E01               	movlw	1
  4034  0028D2  6E24               	movwf	___aodiv@counter^0,c
  4035  0028D4  EF76  F014         	goto	l6002
  4036  0028D8                     l6000:
  4037  0028D8  90D8               	bcf	status,0,c
  4038  0028DA  361C               	rlcf	___aodiv@divisor^0,f,c
  4039  0028DC  361D               	rlcf	(___aodiv@divisor+1)^0,f,c
  4040  0028DE  361E               	rlcf	(___aodiv@divisor+2)^0,f,c
  4041  0028E0  361F               	rlcf	(___aodiv@divisor+3)^0,f,c
  4042  0028E2  3620               	rlcf	(___aodiv@divisor+4)^0,f,c
  4043  0028E4  3621               	rlcf	(___aodiv@divisor+5)^0,f,c
  4044  0028E6  3622               	rlcf	(___aodiv@divisor+6)^0,f,c
  4045  0028E8  3623               	rlcf	(___aodiv@divisor+7)^0,f,c
  4046  0028EA  2A24               	incf	___aodiv@counter^0,f,c
  4047  0028EC                     l6002:
  4048  0028EC  AE23               	btfss	(___aodiv@divisor+7)^0,7,c
  4049  0028EE  EF7B  F014         	goto	u4851
  4050  0028F2  EF7D  F014         	goto	u4850
  4051  0028F6                     u4851:
  4052  0028F6  EF6C  F014         	goto	l6000
  4053  0028FA                     u4850:
  4054  0028FA                     l6004:
  4055  0028FA  90D8               	bcf	status,0,c
  4056  0028FC  3626               	rlcf	___aodiv@quotient^0,f,c
  4057  0028FE  3627               	rlcf	(___aodiv@quotient+1)^0,f,c
  4058  002900  3628               	rlcf	(___aodiv@quotient+2)^0,f,c
  4059  002902  3629               	rlcf	(___aodiv@quotient+3)^0,f,c
  4060  002904  362A               	rlcf	(___aodiv@quotient+4)^0,f,c
  4061  002906  362B               	rlcf	(___aodiv@quotient+5)^0,f,c
  4062  002908  362C               	rlcf	(___aodiv@quotient+6)^0,f,c
  4063  00290A  362D               	rlcf	(___aodiv@quotient+7)^0,f,c
  4064  00290C  501C               	movf	___aodiv@divisor^0,w,c
  4065  00290E  5C14               	subwf	___aodiv@dividend^0,w,c
  4066  002910  501D               	movf	(___aodiv@divisor+1)^0,w,c
  4067  002912  5815               	subwfb	(___aodiv@dividend+1)^0,w,c
  4068  002914  501E               	movf	(___aodiv@divisor+2)^0,w,c
  4069  002916  5816               	subwfb	(___aodiv@dividend+2)^0,w,c
  4070  002918  501F               	movf	(___aodiv@divisor+3)^0,w,c
  4071  00291A  5817               	subwfb	(___aodiv@dividend+3)^0,w,c
  4072  00291C  5020               	movf	(___aodiv@divisor+4)^0,w,c
  4073  00291E  5818               	subwfb	(___aodiv@dividend+4)^0,w,c
  4074  002920  5021               	movf	(___aodiv@divisor+5)^0,w,c
  4075  002922  5819               	subwfb	(___aodiv@dividend+5)^0,w,c
  4076  002924  5022               	movf	(___aodiv@divisor+6)^0,w,c
  4077  002926  581A               	subwfb	(___aodiv@dividend+6)^0,w,c
  4078  002928  5023               	movf	(___aodiv@divisor+7)^0,w,c
  4079  00292A  581B               	subwfb	(___aodiv@dividend+7)^0,w,c
  4080  00292C  A0D8               	btfss	status,0,c
  4081  00292E  EF9B  F014         	goto	u4861
  4082  002932  EF9D  F014         	goto	u4860
  4083  002936                     u4861:
  4084  002936  EFAE  F014         	goto	l6012
  4085  00293A                     u4860:
  4086  00293A  501C               	movf	___aodiv@divisor^0,w,c
  4087  00293C  5E14               	subwf	___aodiv@dividend^0,f,c
  4088  00293E  501D               	movf	(___aodiv@divisor+1)^0,w,c
  4089  002940  5A15               	subwfb	(___aodiv@dividend+1)^0,f,c
  4090  002942  501E               	movf	(___aodiv@divisor+2)^0,w,c
  4091  002944  5A16               	subwfb	(___aodiv@dividend+2)^0,f,c
  4092  002946  501F               	movf	(___aodiv@divisor+3)^0,w,c
  4093  002948  5A17               	subwfb	(___aodiv@dividend+3)^0,f,c
  4094  00294A  5020               	movf	(___aodiv@divisor+4)^0,w,c
  4095  00294C  5A18               	subwfb	(___aodiv@dividend+4)^0,f,c
  4096  00294E  5021               	movf	(___aodiv@divisor+5)^0,w,c
  4097  002950  5A19               	subwfb	(___aodiv@dividend+5)^0,f,c
  4098  002952  5022               	movf	(___aodiv@divisor+6)^0,w,c
  4099  002954  5A1A               	subwfb	(___aodiv@dividend+6)^0,f,c
  4100  002956  5023               	movf	(___aodiv@divisor+7)^0,w,c
  4101  002958  5A1B               	subwfb	(___aodiv@dividend+7)^0,f,c
  4102  00295A  8026               	bsf	___aodiv@quotient^0,0,c
  4103  00295C                     l6012:
  4104  00295C  90D8               	bcf	status,0,c
  4105  00295E  3223               	rrcf	(___aodiv@divisor+7)^0,f,c
  4106  002960  3222               	rrcf	(___aodiv@divisor+6)^0,f,c
  4107  002962  3221               	rrcf	(___aodiv@divisor+5)^0,f,c
  4108  002964  3220               	rrcf	(___aodiv@divisor+4)^0,f,c
  4109  002966  321F               	rrcf	(___aodiv@divisor+3)^0,f,c
  4110  002968  321E               	rrcf	(___aodiv@divisor+2)^0,f,c
  4111  00296A  321D               	rrcf	(___aodiv@divisor+1)^0,f,c
  4112  00296C  321C               	rrcf	___aodiv@divisor^0,f,c
  4113  00296E  2E24               	decfsz	___aodiv@counter^0,f,c
  4114  002970  EF7D  F014         	goto	l6004
  4115  002974                     l6016:
  4116  002974  5025               	movf	___aodiv@sign^0,w,c
  4117  002976  B4D8               	btfsc	status,2,c
  4118  002978  EFC0  F014         	goto	u4871
  4119  00297C  EFC2  F014         	goto	u4870
  4120  002980                     u4871:
  4121  002980  EFD2  F014         	goto	l6020
  4122  002984                     u4870:
  4123  002984  1E2D               	comf	(___aodiv@quotient+7)^0,f,c
  4124  002986  1E2C               	comf	(___aodiv@quotient+6)^0,f,c
  4125  002988  1E2B               	comf	(___aodiv@quotient+5)^0,f,c
  4126  00298A  1E2A               	comf	(___aodiv@quotient+4)^0,f,c
  4127  00298C  1E29               	comf	(___aodiv@quotient+3)^0,f,c
  4128  00298E  1E28               	comf	(___aodiv@quotient+2)^0,f,c
  4129  002990  1E27               	comf	(___aodiv@quotient+1)^0,f,c
  4130  002992  6C26               	negf	___aodiv@quotient^0,c
  4131  002994  0E00               	movlw	0
  4132  002996  2227               	addwfc	(___aodiv@quotient+1)^0,f,c
  4133  002998  2228               	addwfc	(___aodiv@quotient+2)^0,f,c
  4134  00299A  2229               	addwfc	(___aodiv@quotient+3)^0,f,c
  4135  00299C  222A               	addwfc	(___aodiv@quotient+4)^0,f,c
  4136  00299E  222B               	addwfc	(___aodiv@quotient+5)^0,f,c
  4137  0029A0  222C               	addwfc	(___aodiv@quotient+6)^0,f,c
  4138  0029A2  222D               	addwfc	(___aodiv@quotient+7)^0,f,c
  4139  0029A4                     l6020:
  4140  0029A4  C026  F014         	movff	___aodiv@quotient,?___aodiv
  4141  0029A8  C027  F015         	movff	___aodiv@quotient+1,?___aodiv+1
  4142  0029AC  C028  F016         	movff	___aodiv@quotient+2,?___aodiv+2
  4143  0029B0  C029  F017         	movff	___aodiv@quotient+3,?___aodiv+3
  4144  0029B4  C02A  F018         	movff	___aodiv@quotient+4,?___aodiv+4
  4145  0029B8  C02B  F019         	movff	___aodiv@quotient+5,?___aodiv+5
  4146  0029BC  C02C  F01A         	movff	___aodiv@quotient+6,?___aodiv+6
  4147  0029C0  C02D  F01B         	movff	___aodiv@quotient+7,?___aodiv+7
  4148  0029C4  0012               	return		;funcret
  4149  0029C6                     __end_of___aodiv:
  4150                           	callstack 0
  4151                           
  4152 ;; *************** function _checkBatt *****************
  4153 ;; Defined at:
  4154 ;;		line 86 in file "main.c"
  4155 ;; Parameters:    Size  Location     Type
  4156 ;;		None
  4157 ;; Auto vars:     Size  Location     Type
  4158 ;;		None
  4159 ;; Return value:  Size  Location     Type
  4160 ;;                  1    wreg      _Bool 
  4161 ;; Registers used:
  4162 ;;		wreg, status,2, status,0, cstack
  4163 ;; Tracked objects:
  4164 ;;		On entry : 0/0
  4165 ;;		On exit  : 0/0
  4166 ;;		Unchanged: 0/0
  4167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4171 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4172 ;;Total ram usage:        0 bytes
  4173 ;; Hardware stack levels used: 1
  4174 ;; Hardware stack levels required when called: 10
  4175 ;; This function calls:
  4176 ;;		___flge
  4177 ;;		___xxtofl
  4178 ;;		_getBatteryVoltage
  4179 ;;		_setSteering
  4180 ;; This function is called by:
  4181 ;;		_loop
  4182 ;; This function uses a non-reentrant model
  4183 ;;
  4184                           
  4185                           	psect	text17
  4186  00377E                     __ptext17:
  4187                           	callstack 0
  4188  00377E                     _checkBatt:
  4189                           	callstack 19
  4190  00377E                     
  4191                           ;main.c: 87:     ++battCheckCount;
  4192  00377E  0100               	movlb	0	; () banked
  4193  003780  4B92               	infsnz	_battCheckCount& (0+255),f,b
  4194  003782  2B93               	incf	(_battCheckCount+1)& (0+255),f,b
  4195  003784                     
  4196                           ; BSR set to: 0
  4197                           ;main.c: 88:     if (battCheckCount > (500)) {
  4198  003784  0EF5               	movlw	245
  4199  003786  5D92               	subwf	_battCheckCount& (0+255),w,b
  4200  003788  0E01               	movlw	1
  4201  00378A  5993               	subwfb	(_battCheckCount+1)& (0+255),w,b
  4202  00378C  A0D8               	btfss	status,0,c
  4203  00378E  EFCB  F01B         	goto	u3941
  4204  003792  EFCD  F01B         	goto	u3940
  4205  003796                     u3941:
  4206  003796  EF05  F01C         	goto	l5292
  4207  00379A                     u3940:
  4208  00379A                     
  4209                           ; BSR set to: 0
  4210                           ;main.c: 89:         battCheckCount = 0;
  4211  00379A  0E00               	movlw	0
  4212  00379C  6F93               	movwf	(_battCheckCount+1)& (0+255),b
  4213  00379E  0E00               	movlw	0
  4214  0037A0  6F92               	movwf	_battCheckCount& (0+255),b
  4215  0037A2                     
  4216                           ; BSR set to: 0
  4217                           ;main.c: 90:         getBatteryVoltage();
  4218  0037A2  ECDF  F020         	call	_getBatteryVoltage	;wreg free
  4219  0037A6                     
  4220                           ;main.c: 92:         if (BatteryVolt < (6.8) * 409.6f) {
  4221  0037A6  C084  F01C         	movff	_BatteryVolt,___xxtofl@val
  4222  0037AA  C085  F01D         	movff	_BatteryVolt+1,___xxtofl@val+1
  4223  0037AE  6A1E               	clrf	(___xxtofl@val+2)^0,c
  4224  0037B0  6A1F               	clrf	(___xxtofl@val+3)^0,c
  4225  0037B2  0E00               	movlw	0
  4226  0037B4  EC73  F012         	call	___xxtofl
  4227  0037B8  C01C  F02A         	movff	?___xxtofl,___flge@ff1
  4228  0037BC  C01D  F02B         	movff	?___xxtofl+1,___flge@ff1+1
  4229  0037C0  C01E  F02C         	movff	?___xxtofl+2,___flge@ff1+2
  4230  0037C4  C01F  F02D         	movff	?___xxtofl+3,___flge@ff1+3
  4231  0037C8  0E7B               	movlw	123
  4232  0037CA  6E2E               	movwf	___flge@ff2^0,c
  4233  0037CC  0E14               	movlw	20
  4234  0037CE  6E2F               	movwf	(___flge@ff2+1)^0,c
  4235  0037D0  0E2E               	movlw	46
  4236  0037D2  6E30               	movwf	(___flge@ff2+2)^0,c
  4237  0037D4  0E45               	movlw	69
  4238  0037D6  6E31               	movwf	(___flge@ff2+3)^0,c
  4239  0037D8  ECE1  F017         	call	___flge	;wreg free
  4240  0037DC  B0D8               	btfsc	status,0,c
  4241  0037DE  EFF3  F01B         	goto	u3951
  4242  0037E2  EFF5  F01B         	goto	u3950
  4243  0037E6                     u3951:
  4244  0037E6  EF05  F01C         	goto	l5292
  4245  0037EA                     u3950:
  4246  0037EA                     
  4247                           ;main.c: 93:             setSpeed = 0;
  4248  0037EA  0E00               	movlw	0
  4249  0037EC  0100               	movlb	0	; () banked
  4250  0037EE  6F8F               	movwf	(_setSpeed+1)& (0+255),b
  4251  0037F0  0E00               	movlw	0
  4252  0037F2  6F8E               	movwf	_setSpeed& (0+255),b
  4253  0037F4                     
  4254                           ; BSR set to: 0
  4255                           ;main.c: 94:             setSteering(0, Front);
  4256  0037F4  0E00               	movlw	0
  4257  0037F6  6E1D               	movwf	(setSteering@steering+1)^0,c
  4258  0037F8  0E00               	movlw	0
  4259  0037FA  6E1C               	movwf	setSteering@steering^0,c
  4260  0037FC  0E03               	movlw	3
  4261  0037FE  6E1E               	movwf	setSteering@steeringMode^0,c
  4262  003800  EC4D  F013         	call	_setSteering	;wreg free
  4263  003804                     
  4264                           ;main.c: 95:             return 1;
  4265  003804  0E01               	movlw	1
  4266  003806  EF06  F01C         	goto	l1255
  4267  00380A                     l5292:
  4268                           
  4269                           ;main.c: 98:     return 0;
  4270  00380A  0E00               	movlw	0
  4271  00380C                     l1255:
  4272  00380C  0012               	return		;funcret
  4273  00380E                     __end_of_checkBatt:
  4274                           	callstack 0
  4275                           
  4276 ;; *************** function _getBatteryVoltage *****************
  4277 ;; Defined at:
  4278 ;;		line 81 in file "main.c"
  4279 ;; Parameters:    Size  Location     Type
  4280 ;;		None
  4281 ;; Auto vars:     Size  Location     Type
  4282 ;;		None
  4283 ;; Return value:  Size  Location     Type
  4284 ;;                  1    wreg      void 
  4285 ;; Registers used:
  4286 ;;		wreg, status,2, status,0, cstack
  4287 ;; Tracked objects:
  4288 ;;		On entry : 0/0
  4289 ;;		On exit  : 0/0
  4290 ;;		Unchanged: 0/0
  4291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4295 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4296 ;;Total ram usage:        0 bytes
  4297 ;; Hardware stack levels used: 1
  4298 ;; Hardware stack levels required when called: 9
  4299 ;; This function calls:
  4300 ;;		_ADCC_GetSingleConversion
  4301 ;; This function is called by:
  4302 ;;		_loop
  4303 ;;		_checkBatt
  4304 ;; This function uses a non-reentrant model
  4305 ;;
  4306                           
  4307                           	psect	text18
  4308  0041BE                     __ptext18:
  4309                           	callstack 0
  4310  0041BE                     _getBatteryVoltage:
  4311                           	callstack 20
  4312  0041BE                     
  4313                           ;main.c: 82:     BatteryVolt = ADCC_GetSingleConversion(aiBatt);
  4314  0041BE  0E22               	movlw	34
  4315  0041C0  EC12  F01F         	call	_ADCC_GetSingleConversion
  4316  0041C4  C014  F084         	movff	?_ADCC_GetSingleConversion,_BatteryVolt
  4317  0041C8  C015  F085         	movff	?_ADCC_GetSingleConversion+1,_BatteryVolt+1
  4318  0041CC  0012               	return		;funcret
  4319  0041CE                     __end_of_getBatteryVoltage:
  4320                           	callstack 0
  4321                           
  4322 ;; *************** function _ADCC_GetSingleConversion *****************
  4323 ;; Defined at:
  4324 ;;		line 137 in file "mcc_generated_files/adcc.c"
  4325 ;; Parameters:    Size  Location     Type
  4326 ;;  channel         1    wreg     enum E16058
  4327 ;; Auto vars:     Size  Location     Type
  4328 ;;  channel         1   23[COMRAM] enum E16058
  4329 ;; Return value:  Size  Location     Type
  4330 ;;                  2   19[COMRAM] unsigned short 
  4331 ;; Registers used:
  4332 ;;		wreg, status,2, status,0
  4333 ;; Tracked objects:
  4334 ;;		On entry : 0/0
  4335 ;;		On exit  : 0/0
  4336 ;;		Unchanged: 0/0
  4337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4338 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4339 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4340 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4341 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4342 ;;Total ram usage:        5 bytes
  4343 ;; Hardware stack levels used: 1
  4344 ;; Hardware stack levels required when called: 8
  4345 ;; This function calls:
  4346 ;;		Nothing
  4347 ;; This function is called by:
  4348 ;;		_getBatteryVoltage
  4349 ;; This function uses a non-reentrant model
  4350 ;;
  4351                           
  4352                           	psect	text19
  4353  003E24                     __ptext19:
  4354                           	callstack 0
  4355  003E24                     _ADCC_GetSingleConversion:
  4356                           	callstack 20
  4357                           
  4358                           ;incstack = 0
  4359                           ;ADCC_GetSingleConversion@channel stored from wreg
  4360  003E24  6E18               	movwf	ADCC_GetSingleConversion@channel^0,c
  4361  003E26                     
  4362                           ;mcc_generated_files/adcc.c: 137: adc_result_t ADCC_GetSingleConversion(adcc_channel_t c
      +                          hannel);mcc_generated_files/adcc.c: 138: {;mcc_generated_files/adcc.c: 140:     ADPCH = 
      +                          channel;
  4363  003E26  0060  F063  FEF1   	movff	ADCC_GetSingleConversion@channel,16113	;volatile
  4364  003E2C                     
  4365                           ;mcc_generated_files/adcc.c: 143:     ADCON0bits.ADON = 1;
  4366  003E2C  013E               	movlb	62	; () banked
  4367  003E2E  8FF8               	bsf	248,7,b	;volatile
  4368  003E30                     
  4369                           ; BSR set to: 62
  4370                           ;mcc_generated_files/adcc.c: 146:     ADCON0bits.ADCONT = 0;
  4371  003E30  9DF8               	bcf	248,6,b	;volatile
  4372  003E32                     
  4373                           ; BSR set to: 62
  4374                           ;mcc_generated_files/adcc.c: 149:     ADCON0bits.ADGO = 1;
  4375  003E32  81F8               	bsf	248,0,b	;volatile
  4376  003E34                     l1054:
  4377                           
  4378                           ; BSR set to: 62
  4379                           ;mcc_generated_files/adcc.c: 153:     while (ADCON0bits.ADGO)
  4380  003E34  B1F8               	btfsc	248,0,b	;volatile
  4381  003E36  EF1F  F01F         	goto	u2881
  4382  003E3A  EF21  F01F         	goto	u2880
  4383  003E3E                     u2881:
  4384  003E3E  EF1A  F01F         	goto	l1054
  4385  003E42                     u2880:
  4386  003E42                     
  4387                           ; BSR set to: 62
  4388                           ;mcc_generated_files/adcc.c: 159:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  4389  003E42  51F0               	movf	240,w,b	;volatile
  4390  003E44  6E17               	movwf	(??_ADCC_GetSingleConversion+1)^0,c
  4391  003E46  6A16               	clrf	??_ADCC_GetSingleConversion^0,c
  4392  003E48  51EF               	movf	239,w,b	;volatile
  4393  003E4A  2416               	addwf	??_ADCC_GetSingleConversion^0,w,c
  4394  003E4C  6E14               	movwf	?_ADCC_GetSingleConversion^0,c
  4395  003E4E  0E00               	movlw	0
  4396  003E50  2017               	addwfc	(??_ADCC_GetSingleConversion+1)^0,w,c
  4397  003E52  6E15               	movwf	(?_ADCC_GetSingleConversion+1)^0,c
  4398  003E54                     
  4399                           ; BSR set to: 62
  4400  003E54  0012               	return		;funcret
  4401  003E56                     __end_of_ADCC_GetSingleConversion:
  4402                           	callstack 0
  4403                           
  4404 ;; *************** function ___flge *****************
  4405 ;; Defined at:
  4406 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  4407 ;; Parameters:    Size  Location     Type
  4408 ;;  ff1             4   41[COMRAM] unsigned short 
  4409 ;;  ff2             4   45[COMRAM] unsigned short 
  4410 ;; Auto vars:     Size  Location     Type
  4411 ;;		None
  4412 ;; Return value:  Size  Location     Type
  4413 ;;		None               void
  4414 ;; Registers used:
  4415 ;;		wreg, status,2, status,0
  4416 ;; Tracked objects:
  4417 ;;		On entry : 0/0
  4418 ;;		On exit  : 0/0
  4419 ;;		Unchanged: 0/0
  4420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4421 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4423 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4424 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4425 ;;Total ram usage:       12 bytes
  4426 ;; Hardware stack levels used: 1
  4427 ;; Hardware stack levels required when called: 8
  4428 ;; This function calls:
  4429 ;;		Nothing
  4430 ;; This function is called by:
  4431 ;;		_loop
  4432 ;;		_checkBatt
  4433 ;;		_startAccell
  4434 ;; This function uses a non-reentrant model
  4435 ;;
  4436                           
  4437                           	psect	text20
  4438  002FC2                     __ptext20:
  4439                           	callstack 0
  4440  002FC2                     ___flge:
  4441                           	callstack 20
  4442  002FC2  0E00               	movlw	0
  4443  002FC4  142A               	andwf	___flge@ff1^0,w,c
  4444  002FC6  6E32               	movwf	??___flge^0,c
  4445  002FC8  0E00               	movlw	0
  4446  002FCA  142B               	andwf	(___flge@ff1+1)^0,w,c
  4447  002FCC  6E33               	movwf	(??___flge+1)^0,c
  4448  002FCE  0E80               	movlw	128
  4449  002FD0  142C               	andwf	(___flge@ff1+2)^0,w,c
  4450  002FD2  6E34               	movwf	(??___flge+2)^0,c
  4451  002FD4  0E7F               	movlw	127
  4452  002FD6  142D               	andwf	(___flge@ff1+3)^0,w,c
  4453  002FD8  6E35               	movwf	(??___flge+3)^0,c
  4454  002FDA  5032               	movf	??___flge^0,w,c
  4455  002FDC  1033               	iorwf	(??___flge+1)^0,w,c
  4456  002FDE  1034               	iorwf	(??___flge+2)^0,w,c
  4457  002FE0  1035               	iorwf	(??___flge+3)^0,w,c
  4458  002FE2  A4D8               	btfss	status,2,c
  4459  002FE4  EFF6  F017         	goto	u3721
  4460  002FE8  EFF8  F017         	goto	u3720
  4461  002FEC                     u3721:
  4462  002FEC  EF00  F018         	goto	l5058
  4463  002FF0                     u3720:
  4464  002FF0  0E00               	movlw	0
  4465  002FF2  6E2A               	movwf	___flge@ff1^0,c
  4466  002FF4  0E00               	movlw	0
  4467  002FF6  6E2B               	movwf	(___flge@ff1+1)^0,c
  4468  002FF8  0E00               	movlw	0
  4469  002FFA  6E2C               	movwf	(___flge@ff1+2)^0,c
  4470  002FFC  0E00               	movlw	0
  4471  002FFE  6E2D               	movwf	(___flge@ff1+3)^0,c
  4472  003000                     l5058:
  4473  003000  0E00               	movlw	0
  4474  003002  142E               	andwf	___flge@ff2^0,w,c
  4475  003004  6E32               	movwf	??___flge^0,c
  4476  003006  0E00               	movlw	0
  4477  003008  142F               	andwf	(___flge@ff2+1)^0,w,c
  4478  00300A  6E33               	movwf	(??___flge+1)^0,c
  4479  00300C  0E80               	movlw	128
  4480  00300E  1430               	andwf	(___flge@ff2+2)^0,w,c
  4481  003010  6E34               	movwf	(??___flge+2)^0,c
  4482  003012  0E7F               	movlw	127
  4483  003014  1431               	andwf	(___flge@ff2+3)^0,w,c
  4484  003016  6E35               	movwf	(??___flge+3)^0,c
  4485  003018  5032               	movf	??___flge^0,w,c
  4486  00301A  1033               	iorwf	(??___flge+1)^0,w,c
  4487  00301C  1034               	iorwf	(??___flge+2)^0,w,c
  4488  00301E  1035               	iorwf	(??___flge+3)^0,w,c
  4489  003020  A4D8               	btfss	status,2,c
  4490  003022  EF15  F018         	goto	u3731
  4491  003026  EF17  F018         	goto	u3730
  4492  00302A                     u3731:
  4493  00302A  EF1F  F018         	goto	l5062
  4494  00302E                     u3730:
  4495  00302E  0E00               	movlw	0
  4496  003030  6E2E               	movwf	___flge@ff2^0,c
  4497  003032  0E00               	movlw	0
  4498  003034  6E2F               	movwf	(___flge@ff2+1)^0,c
  4499  003036  0E00               	movlw	0
  4500  003038  6E30               	movwf	(___flge@ff2+2)^0,c
  4501  00303A  0E00               	movlw	0
  4502  00303C  6E31               	movwf	(___flge@ff2+3)^0,c
  4503  00303E                     l5062:
  4504  00303E  AE2D               	btfss	(___flge@ff1+3)^0,7,c
  4505  003040  EF24  F018         	goto	u3741
  4506  003044  EF26  F018         	goto	u3740
  4507  003048                     u3741:
  4508  003048  EF2F  F018         	goto	l5066
  4509  00304C                     u3740:
  4510  00304C  6C2A               	negf	___flge@ff1^0,c
  4511  00304E  1E2B               	comf	(___flge@ff1+1)^0,f,c
  4512  003050  B0D8               	btfsc	status,0,c
  4513  003052  2A2B               	incf	(___flge@ff1+1)^0,f,c
  4514  003054  1E2C               	comf	(___flge@ff1+2)^0,f,c
  4515  003056  B0D8               	btfsc	status,0,c
  4516  003058  2A2C               	incf	(___flge@ff1+2)^0,f,c
  4517  00305A  0E80               	movlw	128
  4518  00305C  562D               	subfwb	(___flge@ff1+3)^0,f,c
  4519  00305E                     l5066:
  4520  00305E  AE31               	btfss	(___flge@ff2+3)^0,7,c
  4521  003060  EF34  F018         	goto	u3751
  4522  003064  EF36  F018         	goto	u3750
  4523  003068                     u3751:
  4524  003068  EF3F  F018         	goto	l1662
  4525  00306C                     u3750:
  4526  00306C  6C2E               	negf	___flge@ff2^0,c
  4527  00306E  1E2F               	comf	(___flge@ff2+1)^0,f,c
  4528  003070  B0D8               	btfsc	status,0,c
  4529  003072  2A2F               	incf	(___flge@ff2+1)^0,f,c
  4530  003074  1E30               	comf	(___flge@ff2+2)^0,f,c
  4531  003076  B0D8               	btfsc	status,0,c
  4532  003078  2A30               	incf	(___flge@ff2+2)^0,f,c
  4533  00307A  0E80               	movlw	128
  4534  00307C  5631               	subfwb	(___flge@ff2+3)^0,f,c
  4535  00307E                     l1662:
  4536  00307E  0E00               	movlw	0
  4537  003080  1A2A               	xorwf	___flge@ff1^0,f,c
  4538  003082  0E00               	movlw	0
  4539  003084  1A2B               	xorwf	(___flge@ff1+1)^0,f,c
  4540  003086  0E00               	movlw	0
  4541  003088  1A2C               	xorwf	(___flge@ff1+2)^0,f,c
  4542  00308A  0E80               	movlw	128
  4543  00308C  1A2D               	xorwf	(___flge@ff1+3)^0,f,c
  4544  00308E  0E00               	movlw	0
  4545  003090  1A2E               	xorwf	___flge@ff2^0,f,c
  4546  003092  0E00               	movlw	0
  4547  003094  1A2F               	xorwf	(___flge@ff2+1)^0,f,c
  4548  003096  0E00               	movlw	0
  4549  003098  1A30               	xorwf	(___flge@ff2+2)^0,f,c
  4550  00309A  0E80               	movlw	128
  4551  00309C  1A31               	xorwf	(___flge@ff2+3)^0,f,c
  4552  00309E  502E               	movf	___flge@ff2^0,w,c
  4553  0030A0  5C2A               	subwf	___flge@ff1^0,w,c
  4554  0030A2  502F               	movf	(___flge@ff2+1)^0,w,c
  4555  0030A4  582B               	subwfb	(___flge@ff1+1)^0,w,c
  4556  0030A6  5030               	movf	(___flge@ff2+2)^0,w,c
  4557  0030A8  582C               	subwfb	(___flge@ff1+2)^0,w,c
  4558  0030AA  5031               	movf	(___flge@ff2+3)^0,w,c
  4559  0030AC  582D               	subwfb	(___flge@ff1+3)^0,w,c
  4560  0030AE  B0D8               	btfsc	status,0,c
  4561  0030B0  EF5C  F018         	goto	u3761
  4562  0030B4  EF5E  F018         	goto	u3760
  4563  0030B8                     u3761:
  4564  0030B8  EF61  F018         	goto	l5072
  4565  0030BC                     u3760:
  4566  0030BC  90D8               	bcf	status,0,c
  4567  0030BE  EF62  F018         	goto	l1667
  4568  0030C2                     l5072:
  4569  0030C2  80D8               	bsf	status,0,c
  4570  0030C4                     l1667:
  4571  0030C4  0012               	return		;funcret
  4572  0030C6                     __end_of___flge:
  4573                           	callstack 0
  4574                           
  4575 ;; *************** function _calcSteering *****************
  4576 ;; Defined at:
  4577 ;;		line 234 in file "main.c"
  4578 ;; Parameters:    Size  Location     Type
  4579 ;;		None
  4580 ;; Auto vars:     Size  Location     Type
  4581 ;;  delta           2   39[BANK0 ] short 
  4582 ;; Return value:  Size  Location     Type
  4583 ;;                  1    wreg      void 
  4584 ;; Registers used:
  4585 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4586 ;; Tracked objects:
  4587 ;;		On entry : 0/0
  4588 ;;		On exit  : 0/0
  4589 ;;		Unchanged: 0/0
  4590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4592 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4593 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4594 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4595 ;;Total ram usage:        6 bytes
  4596 ;; Hardware stack levels used: 1
  4597 ;; Hardware stack levels required when called: 10
  4598 ;; This function calls:
  4599 ;;		___awdiv
  4600 ;;		___flmul
  4601 ;;		___fltol
  4602 ;;		___xxtofl
  4603 ;;		_setSteering
  4604 ;; This function is called by:
  4605 ;;		_loop
  4606 ;;		_startAccell
  4607 ;; This function uses a non-reentrant model
  4608 ;;
  4609                           
  4610                           	psect	text21
  4611  001EA0                     __ptext21:
  4612                           	callstack 0
  4613  001EA0                     _calcSteering:
  4614                           	callstack 19
  4615  001EA0                     
  4616                           ;main.c: 235:     int16_t delta = (int16_t) (distLeft - distRight) - (int16_t) (middleOf
      +                          fSet * 1.4142135);
  4617  001EA0  0EF3               	movlw	243
  4618  001EA2  6E2E               	movwf	___flmul@a^0,c
  4619  001EA4  0E04               	movlw	4
  4620  001EA6  6E2F               	movwf	(___flmul@a+1)^0,c
  4621  001EA8  0EB5               	movlw	181
  4622  001EAA  6E30               	movwf	(___flmul@a+2)^0,c
  4623  001EAC  0E3F               	movlw	63
  4624  001EAE  6E31               	movwf	(___flmul@a+3)^0,c
  4625  001EB0  0100               	movlb	0	; () banked
  4626  001EB2  51FB               	movf	_middleOffSet& (0+255),w,b
  4627  001EB4  6E1C               	movwf	___xxtofl@val^0,c
  4628  001EB6  0E00               	movlw	0
  4629  001EB8  BE1C               	btfsc	___xxtofl@val^0,7,c
  4630  001EBA  0EFF               	movlw	-1
  4631  001EBC  6E1D               	movwf	(___xxtofl@val+1)^0,c
  4632  001EBE  6E1E               	movwf	(___xxtofl@val+2)^0,c
  4633  001EC0  6E1F               	movwf	(___xxtofl@val+3)^0,c
  4634  001EC2  0E01               	movlw	1
  4635  001EC4  EC73  F012         	call	___xxtofl
  4636  001EC8  C01C  F02A         	movff	?___xxtofl,___flmul@b
  4637  001ECC  C01D  F02B         	movff	?___xxtofl+1,___flmul@b+1
  4638  001ED0  C01E  F02C         	movff	?___xxtofl+2,___flmul@b+2
  4639  001ED4  C01F  F02D         	movff	?___xxtofl+3,___flmul@b+3
  4640  001ED8  EC81  F00A         	call	___flmul	;wreg free
  4641  001EDC  C02A  F0BE         	movff	?___flmul,___fltol@f1
  4642  001EE0  C02B  F0BF         	movff	?___flmul+1,___fltol@f1+1
  4643  001EE4  C02C  F0C0         	movff	?___flmul+2,___fltol@f1+2
  4644  001EE8  C02D  F0C1         	movff	?___flmul+3,___fltol@f1+3
  4645  001EEC  EC5D  F017         	call	___fltol	;wreg free
  4646  001EF0  C09C  F0C8         	movff	_distRight,??_calcSteering	;volatile
  4647  001EF4  C09D  F0C9         	movff	_distRight+1,??_calcSteering+1	;volatile
  4648  001EF8  0100               	movlb	0	; () banked
  4649  001EFA  1FC8               	comf	??_calcSteering& (0+255),f,b
  4650  001EFC  1FC9               	comf	(??_calcSteering+1)& (0+255),f,b
  4651  001EFE  4BC8               	infsnz	??_calcSteering& (0+255),f,b
  4652  001F00  2BC9               	incf	(??_calcSteering+1)& (0+255),f,b
  4653  001F02  51BE               	movf	?___fltol& (0+255),w,b
  4654  001F04  5FC8               	subwf	??_calcSteering& (0+255),f,b
  4655  001F06  51BF               	movf	(?___fltol+1)& (0+255),w,b
  4656  001F08  5BC9               	subwfb	(??_calcSteering+1)& (0+255),f,b
  4657  001F0A  519E               	movf	_distLeft& (0+255),w,b	;volatile
  4658  001F0C  25C8               	addwf	??_calcSteering& (0+255),w,b
  4659  001F0E  6FCC               	movwf	calcSteering@delta& (0+255),b
  4660  001F10  519F               	movf	(_distLeft+1)& (0+255),w,b	;volatile
  4661  001F12  21C9               	addwfc	(??_calcSteering+1)& (0+255),w,b
  4662  001F14  6FCD               	movwf	(calcSteering@delta+1)& (0+255),b
  4663                           
  4664                           ;main.c: 239:     switch (driveMode) {
  4665  001F16  EFB5  F00F         	goto	l6668
  4666  001F1A                     l1318:
  4667  001F1A                     l6658:
  4668                           
  4669                           ; BSR set to: 0
  4670                           ;main.c: 245:             if (delta > (40)) {
  4671  001F1A  BFCD               	btfsc	(calcSteering@delta+1)& (0+255),7,b
  4672  001F1C  EF99  F00F         	goto	u6011
  4673  001F20  51CD               	movf	(calcSteering@delta+1)& (0+255),w,b
  4674  001F22  E109               	bnz	u6010
  4675  001F24  0E29               	movlw	41
  4676  001F26  5DCC               	subwf	calcSteering@delta& (0+255),w,b
  4677  001F28  A0D8               	btfss	status,0,c
  4678  001F2A  EF99  F00F         	goto	u6011
  4679  001F2E  EF9B  F00F         	goto	u6010
  4680  001F32                     u6011:
  4681  001F32  EFA1  F00F         	goto	l6662
  4682  001F36                     u6010:
  4683  001F36                     
  4684                           ; BSR set to: 0
  4685                           ;main.c: 246:                 delta = (40);
  4686  001F36  0E00               	movlw	0
  4687  001F38  6FCD               	movwf	(calcSteering@delta+1)& (0+255),b
  4688  001F3A  0E28               	movlw	40
  4689  001F3C  6FCC               	movwf	calcSteering@delta& (0+255),b
  4690                           
  4691                           ;main.c: 247:             } else if (delta < -(40)) {
  4692  001F3E  EF3E  F010         	goto	l6694
  4693  001F42                     l6662:
  4694                           
  4695                           ; BSR set to: 0
  4696  001F42  AFCD               	btfss	(calcSteering@delta+1)& (0+255),7,b
  4697  001F44  EFAD  F00F         	goto	u6021
  4698  001F48  0ED8               	movlw	216
  4699  001F4A  5DCC               	subwf	calcSteering@delta& (0+255),w,b
  4700  001F4C  0EFF               	movlw	255
  4701  001F4E  59CD               	subwfb	(calcSteering@delta+1)& (0+255),w,b
  4702  001F50  B0D8               	btfsc	status,0,c
  4703  001F52  EFAD  F00F         	goto	u6021
  4704  001F56  EFAF  F00F         	goto	u6020
  4705  001F5A                     u6021:
  4706  001F5A  EFD6  F00F         	goto	l1323
  4707  001F5E                     u6020:
  4708  001F5E                     
  4709                           ; BSR set to: 0
  4710                           ;main.c: 248:                 delta = -(40);
  4711  001F5E  0EFF               	movlw	255
  4712  001F60  6FCD               	movwf	(calcSteering@delta+1)& (0+255),b
  4713  001F62  0ED8               	movlw	216
  4714  001F64  6FCC               	movwf	calcSteering@delta& (0+255),b
  4715  001F66  EF3E  F010         	goto	l6694
  4716  001F6A                     l6668:
  4717                           
  4718                           ; BSR set to: 0
  4719  001F6A  51FC               	movf	_driveMode& (0+255),w,b
  4720  001F6C  6FC8               	movwf	??_calcSteering& (0+255),b
  4721  001F6E  6BC9               	clrf	(??_calcSteering+1)& (0+255),b
  4722                           
  4723                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4724                           ; Switch size 1, requested type "simple"
  4725                           ; Number of cases is 1, Range of values is 0 to 0
  4726                           ; switch strategies available:
  4727                           ; Name         Instructions Cycles
  4728                           ; simple_byte            4     3 (average)
  4729                           ;	Chosen strategy is simple_byte
  4730  001F70  51C9               	movf	(??_calcSteering+1)& (0+255),w,b
  4731  001F72  0A00               	xorlw	0	; case 0
  4732  001F74  B4D8               	btfsc	status,2,c
  4733  001F76  EFBF  F00F         	goto	l7000
  4734  001F7A  EF3E  F010         	goto	l6694
  4735  001F7E                     l7000:
  4736                           
  4737                           ; BSR set to: 0
  4738                           ; Switch size 1, requested type "simple"
  4739                           ; Number of cases is 5, Range of values is 0 to 6
  4740                           ; switch strategies available:
  4741                           ; Name         Instructions Cycles
  4742                           ; simple_byte           16     9 (average)
  4743                           ;	Chosen strategy is simple_byte
  4744  001F7E  51C8               	movf	??_calcSteering& (0+255),w,b
  4745  001F80  0A00               	xorlw	0	; case 0
  4746  001F82  B4D8               	btfsc	status,2,c
  4747  001F84  EF8D  F00F         	goto	l1318
  4748  001F88  0A01               	xorlw	1	; case 1
  4749  001F8A  B4D8               	btfsc	status,2,c
  4750  001F8C  EF8D  F00F         	goto	l6658
  4751  001F90  0A03               	xorlw	3	; case 2
  4752  001F92  B4D8               	btfsc	status,2,c
  4753  001F94  EF8D  F00F         	goto	l6658
  4754  001F98  0A07               	xorlw	7	; case 5
  4755  001F9A  B4D8               	btfsc	status,2,c
  4756  001F9C  EF8D  F00F         	goto	l6658
  4757  001FA0  0A03               	xorlw	3	; case 6
  4758  001FA2  B4D8               	btfsc	status,2,c
  4759  001FA4  EF8D  F00F         	goto	l6658
  4760  001FA8  EF3E  F010         	goto	l6694
  4761  001FAC                     l1323:
  4762                           
  4763                           ; BSR set to: 0
  4764                           ;main.c: 255:     switch (driveMode) {
  4765  001FAC  EF3E  F010         	goto	l6694
  4766  001FB0                     l6670:
  4767                           
  4768                           ; BSR set to: 0
  4769                           ;main.c: 257:             setSteering(delta, Ratio);
  4770  001FB0  C0CC  F01C         	movff	calcSteering@delta,setSteering@steering
  4771  001FB4  C0CD  F01D         	movff	calcSteering@delta+1,setSteering@steering+1
  4772  001FB8  0E02               	movlw	2
  4773  001FBA  6E1E               	movwf	setSteering@steeringMode^0,c
  4774  001FBC  EC4D  F013         	call	_setSteering	;wreg free
  4775                           
  4776                           ;main.c: 258:             break;
  4777  001FC0  EF67  F010         	goto	l1338
  4778  001FC4                     l6672:
  4779                           
  4780                           ; BSR set to: 0
  4781                           ;main.c: 260:             setSteering(delta, Front);
  4782  001FC4  C0CC  F01C         	movff	calcSteering@delta,setSteering@steering
  4783  001FC8  C0CD  F01D         	movff	calcSteering@delta+1,setSteering@steering+1
  4784  001FCC  0E03               	movlw	3
  4785  001FCE  6E1E               	movwf	setSteering@steeringMode^0,c
  4786  001FD0  EC4D  F013         	call	_setSteering	;wreg free
  4787                           
  4788                           ;main.c: 261:             break;
  4789  001FD4  EF67  F010         	goto	l1338
  4790  001FD8                     l6674:
  4791                           
  4792                           ; BSR set to: 0
  4793                           ;main.c: 263:             setSteering(delta / (2), Front);
  4794  001FD8  C0CC  F014         	movff	calcSteering@delta,___awdiv@dividend
  4795  001FDC  C0CD  F015         	movff	calcSteering@delta+1,___awdiv@dividend+1
  4796  001FE0  0E00               	movlw	0
  4797  001FE2  6E17               	movwf	(___awdiv@divisor+1)^0,c
  4798  001FE4  0E02               	movlw	2
  4799  001FE6  6E16               	movwf	___awdiv@divisor^0,c
  4800  001FE8  ECB5  F019         	call	___awdiv	;wreg free
  4801  001FEC  C014  F0CA         	movff	?___awdiv,_calcSteering$4029
  4802  001FF0  C015  F0CB         	movff	?___awdiv+1,_calcSteering$4029+1
  4803                           
  4804                           ;main.c: 263:             setSteering(delta / (2), Front);
  4805  001FF4  C0CA  F01C         	movff	_calcSteering$4029,setSteering@steering
  4806  001FF8  C0CB  F01D         	movff	_calcSteering$4029+1,setSteering@steering+1
  4807  001FFC  0E03               	movlw	3
  4808  001FFE  6E1E               	movwf	setSteering@steeringMode^0,c
  4809  002000  EC4D  F013         	call	_setSteering	;wreg free
  4810                           
  4811                           ;main.c: 265:             break;
  4812  002004  EF67  F010         	goto	l1338
  4813  002008                     l6676:
  4814                           
  4815                           ; BSR set to: 0
  4816                           ;main.c: 267:             setSteering(-(65), Inverted);
  4817  002008  0EFF               	movlw	255
  4818  00200A  6E1D               	movwf	(setSteering@steering+1)^0,c
  4819  00200C  0EBF               	movlw	191
  4820  00200E  6E1C               	movwf	setSteering@steering^0,c
  4821  002010  0E00               	movlw	0
  4822  002012  6E1E               	movwf	setSteering@steeringMode^0,c
  4823  002014  EC4D  F013         	call	_setSteering	;wreg free
  4824                           
  4825                           ;main.c: 268:             break;
  4826  002018  EF67  F010         	goto	l1338
  4827  00201C                     l6678:
  4828                           
  4829                           ; BSR set to: 0
  4830                           ;main.c: 270:             setSteering((65), Inverted);
  4831  00201C  0E00               	movlw	0
  4832  00201E  6E1D               	movwf	(setSteering@steering+1)^0,c
  4833  002020  0E41               	movlw	65
  4834  002022  6E1C               	movwf	setSteering@steering^0,c
  4835  002024  0E00               	movlw	0
  4836  002026  6E1E               	movwf	setSteering@steeringMode^0,c
  4837  002028  EC4D  F013         	call	_setSteering	;wreg free
  4838                           
  4839                           ;main.c: 271:             break;
  4840  00202C  EF67  F010         	goto	l1338
  4841  002030                     l6680:
  4842                           
  4843                           ; BSR set to: 0
  4844                           ;main.c: 273:             if (curveMode == InCurve) {
  4845  002030  0E02               	movlw	2
  4846  002032  19A2               	xorwf	_curveMode& (0+255),w,b
  4847  002034  A4D8               	btfss	status,2,c
  4848  002036  EF1F  F010         	goto	u6031
  4849  00203A  EF21  F010         	goto	u6030
  4850  00203E                     u6031:
  4851  00203E  EFD8  F00F         	goto	l6670
  4852  002042                     u6030:
  4853  002042                     
  4854                           ; BSR set to: 0
  4855                           ;main.c: 274:                 setSteering((65), Ratio);
  4856  002042  0E00               	movlw	0
  4857  002044  6E1D               	movwf	(setSteering@steering+1)^0,c
  4858  002046  0E41               	movlw	65
  4859  002048  6E1C               	movwf	setSteering@steering^0,c
  4860  00204A  0E02               	movlw	2
  4861  00204C  6E1E               	movwf	setSteering@steeringMode^0,c
  4862  00204E  EC4D  F013         	call	_setSteering	;wreg free
  4863                           
  4864                           ;main.c: 275:             } else {
  4865  002052  EF67  F010         	goto	l1338
  4866  002056                     l6686:
  4867                           
  4868                           ; BSR set to: 0
  4869                           ;main.c: 280:             if (curveMode == InCurve) {
  4870  002056  0E02               	movlw	2
  4871  002058  19A2               	xorwf	_curveMode& (0+255),w,b
  4872  00205A  A4D8               	btfss	status,2,c
  4873  00205C  EF32  F010         	goto	u6041
  4874  002060  EF34  F010         	goto	u6040
  4875  002064                     u6041:
  4876  002064  EFD8  F00F         	goto	l6670
  4877  002068                     u6040:
  4878  002068                     
  4879                           ; BSR set to: 0
  4880                           ;main.c: 281:                 setSteering(-(65), Ratio);
  4881  002068  0EFF               	movlw	255
  4882  00206A  6E1D               	movwf	(setSteering@steering+1)^0,c
  4883  00206C  0EBF               	movlw	191
  4884  00206E  6E1C               	movwf	setSteering@steering^0,c
  4885  002070  0E02               	movlw	2
  4886  002072  6E1E               	movwf	setSteering@steeringMode^0,c
  4887  002074  EC4D  F013         	call	_setSteering	;wreg free
  4888                           
  4889                           ;main.c: 282:             } else {
  4890  002078  EF67  F010         	goto	l1338
  4891  00207C                     l6694:
  4892                           
  4893                           ; BSR set to: 0
  4894  00207C  51FC               	movf	_driveMode& (0+255),w,b
  4895  00207E  6FC8               	movwf	??_calcSteering& (0+255),b
  4896  002080  6BC9               	clrf	(??_calcSteering+1)& (0+255),b
  4897                           
  4898                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4899                           ; Switch size 1, requested type "simple"
  4900                           ; Number of cases is 1, Range of values is 0 to 0
  4901                           ; switch strategies available:
  4902                           ; Name         Instructions Cycles
  4903                           ; simple_byte            4     3 (average)
  4904                           ;	Chosen strategy is simple_byte
  4905  002082  51C9               	movf	(??_calcSteering+1)& (0+255),w,b
  4906  002084  0A00               	xorlw	0	; case 0
  4907  002086  B4D8               	btfsc	status,2,c
  4908  002088  EF48  F010         	goto	l7002
  4909  00208C  EF67  F010         	goto	l1338
  4910  002090                     l7002:
  4911                           
  4912                           ; BSR set to: 0
  4913                           ; Switch size 1, requested type "simple"
  4914                           ; Number of cases is 7, Range of values is 0 to 6
  4915                           ; switch strategies available:
  4916                           ; Name         Instructions Cycles
  4917                           ; simple_byte           22    12 (average)
  4918                           ;	Chosen strategy is simple_byte
  4919  002090  51C8               	movf	??_calcSteering& (0+255),w,b
  4920  002092  0A00               	xorlw	0	; case 0
  4921  002094  B4D8               	btfsc	status,2,c
  4922  002096  EFEC  F00F         	goto	l6674
  4923  00209A  0A01               	xorlw	1	; case 1
  4924  00209C  B4D8               	btfsc	status,2,c
  4925  00209E  EFE2  F00F         	goto	l6672
  4926  0020A2  0A03               	xorlw	3	; case 2
  4927  0020A4  B4D8               	btfsc	status,2,c
  4928  0020A6  EFD8  F00F         	goto	l6670
  4929  0020AA  0A01               	xorlw	1	; case 3
  4930  0020AC  B4D8               	btfsc	status,2,c
  4931  0020AE  EF04  F010         	goto	l6676
  4932  0020B2  0A07               	xorlw	7	; case 4
  4933  0020B4  B4D8               	btfsc	status,2,c
  4934  0020B6  EF0E  F010         	goto	l6678
  4935  0020BA  0A01               	xorlw	1	; case 5
  4936  0020BC  B4D8               	btfsc	status,2,c
  4937  0020BE  EF18  F010         	goto	l6680
  4938  0020C2  0A03               	xorlw	3	; case 6
  4939  0020C4  B4D8               	btfsc	status,2,c
  4940  0020C6  EF2B  F010         	goto	l6686
  4941  0020CA  EF67  F010         	goto	l1338
  4942  0020CE                     l1338:
  4943  0020CE  0012               	return		;funcret
  4944  0020D0                     __end_of_calcSteering:
  4945                           	callstack 0
  4946                           
  4947 ;; *************** function _setSteering *****************
  4948 ;; Defined at:
  4949 ;;		line 397 in file "main.c"
  4950 ;; Parameters:    Size  Location     Type
  4951 ;;  steering        2   27[COMRAM] short 
  4952 ;;  steeringMode    1   29[COMRAM] enum E17304
  4953 ;; Auto vars:     Size  Location     Type
  4954 ;;  steeringB       2   34[COMRAM] short 
  4955 ;;  steeringF       2   32[COMRAM] short 
  4956 ;; Return value:  Size  Location     Type
  4957 ;;                  1    wreg      void 
  4958 ;; Registers used:
  4959 ;;		wreg, status,2, status,0, cstack
  4960 ;; Tracked objects:
  4961 ;;		On entry : 0/0
  4962 ;;		On exit  : 0/0
  4963 ;;		Unchanged: 0/0
  4964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4965 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4966 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4967 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4968 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4969 ;;Total ram usage:        9 bytes
  4970 ;; Hardware stack levels used: 1
  4971 ;; Hardware stack levels required when called: 9
  4972 ;; This function calls:
  4973 ;;		_PWM5_LoadDutyValue
  4974 ;;		_PWM6_LoadDutyValue
  4975 ;;		___awdiv
  4976 ;; This function is called by:
  4977 ;;		_loop
  4978 ;;		_checkBatt
  4979 ;;		_calcSteering
  4980 ;;		_startAccell
  4981 ;; This function uses a non-reentrant model
  4982 ;;
  4983                           
  4984                           	psect	text22
  4985  00269A                     __ptext22:
  4986                           	callstack 0
  4987  00269A                     _setSteering:
  4988                           	callstack 20
  4989  00269A  0E00               	movlw	0
  4990  00269C  6E24               	movwf	(setSteering@steeringB+1)^0,c
  4991  00269E  0E00               	movlw	0
  4992  0026A0  6E23               	movwf	setSteering@steeringB^0,c
  4993                           
  4994                           ;main.c: 399:     switch (steeringMode) {
  4995  0026A2  EFA1  F013         	goto	l4674
  4996  0026A6                     l1381:
  4997                           
  4998                           ;main.c: 401:             steeringF = (+steering);
  4999  0026A6  C01C  F021         	movff	setSteering@steering,setSteering@steeringF
  5000  0026AA  C01D  F022         	movff	setSteering@steering+1,setSteering@steeringF+1
  5001                           
  5002                           ;main.c: 402:             steeringB = -steering;
  5003  0026AE  C01C  F01F         	movff	setSteering@steering,??_setSteering
  5004  0026B2  C01D  F020         	movff	setSteering@steering+1,??_setSteering+1
  5005  0026B6  1E1F               	comf	??_setSteering^0,f,c
  5006  0026B8  1E20               	comf	(??_setSteering+1)^0,f,c
  5007  0026BA  4A1F               	infsnz	??_setSteering^0,f,c
  5008  0026BC  2A20               	incf	(??_setSteering+1)^0,f,c
  5009  0026BE  C01F  F023         	movff	??_setSteering,setSteering@steeringB
  5010  0026C2  C020  F024         	movff	??_setSteering+1,setSteering@steeringB+1
  5011                           
  5012                           ;main.c: 403:             break;
  5013  0026C6  EFC2  F013         	goto	l4676
  5014  0026CA                     l1383:
  5015                           
  5016                           ;main.c: 405:             steeringF = (+steering);
  5017  0026CA  C01C  F021         	movff	setSteering@steering,setSteering@steeringF
  5018  0026CE  C01D  F022         	movff	setSteering@steering+1,setSteering@steeringF+1
  5019                           
  5020                           ;main.c: 406:             steeringB = (+steering);
  5021  0026D2  C01C  F023         	movff	setSteering@steering,setSteering@steeringB
  5022  0026D6  C01D  F024         	movff	setSteering@steering+1,setSteering@steeringB+1
  5023                           
  5024                           ;main.c: 407:             break;
  5025  0026DA  EFC2  F013         	goto	l4676
  5026  0026DE                     l1384:
  5027                           
  5028                           ;main.c: 409:             steeringF = (+steering);
  5029  0026DE  C01C  F021         	movff	setSteering@steering,setSteering@steeringF
  5030  0026E2  C01D  F022         	movff	setSteering@steering+1,setSteering@steeringF+1
  5031  0026E6                     
  5032                           ;main.c: 410:             steeringB = (-steering / (2));
  5033  0026E6  C01C  F014         	movff	setSteering@steering,___awdiv@dividend
  5034  0026EA  C01D  F015         	movff	setSteering@steering+1,___awdiv@dividend+1
  5035  0026EE  0EFF               	movlw	255
  5036  0026F0  6E17               	movwf	(___awdiv@divisor+1)^0,c
  5037  0026F2  0EFE               	movlw	254
  5038  0026F4  6E16               	movwf	___awdiv@divisor^0,c
  5039  0026F6  ECB5  F019         	call	___awdiv	;wreg free
  5040  0026FA  C014  F023         	movff	?___awdiv,setSteering@steeringB
  5041  0026FE  C015  F024         	movff	?___awdiv+1,setSteering@steeringB+1
  5042                           
  5043                           ;main.c: 411:             break;
  5044  002702  EFC2  F013         	goto	l4676
  5045  002706                     l1385:
  5046                           
  5047                           ;main.c: 413:             steeringF = (+steering);
  5048  002706  C01C  F021         	movff	setSteering@steering,setSteering@steeringF
  5049  00270A  C01D  F022         	movff	setSteering@steering+1,setSteering@steeringF+1
  5050  00270E                     
  5051                           ;main.c: 414:             steeringB = 0;
  5052  00270E  0E00               	movlw	0
  5053  002710  6E24               	movwf	(setSteering@steeringB+1)^0,c
  5054  002712  0E00               	movlw	0
  5055  002714  6E23               	movwf	setSteering@steeringB^0,c
  5056                           
  5057                           ;main.c: 415:             break;
  5058  002716  EFC2  F013         	goto	l4676
  5059  00271A                     l4666:
  5060                           
  5061                           ;main.c: 417:             steeringF = 0;
  5062  00271A  0E00               	movlw	0
  5063  00271C  6E22               	movwf	(setSteering@steeringF+1)^0,c
  5064  00271E  0E00               	movlw	0
  5065  002720  6E21               	movwf	setSteering@steeringF^0,c
  5066  002722                     
  5067                           ;main.c: 418:             steeringB = (+steering);
  5068  002722  C01C  F023         	movff	setSteering@steering,setSteering@steeringB
  5069  002726  C01D  F024         	movff	setSteering@steering+1,setSteering@steeringB+1
  5070                           
  5071                           ;main.c: 419:             break;
  5072  00272A  EFC2  F013         	goto	l4676
  5073  00272E                     l4670:
  5074                           
  5075                           ;main.c: 421:             steeringF = 0;
  5076  00272E  0E00               	movlw	0
  5077  002730  6E22               	movwf	(setSteering@steeringF+1)^0,c
  5078  002732  0E00               	movlw	0
  5079  002734  6E21               	movwf	setSteering@steeringF^0,c
  5080                           
  5081                           ;main.c: 422:             steeringB = 0;
  5082  002736  0E00               	movlw	0
  5083  002738  6E24               	movwf	(setSteering@steeringB+1)^0,c
  5084  00273A  0E00               	movlw	0
  5085  00273C  6E23               	movwf	setSteering@steeringB^0,c
  5086                           
  5087                           ;main.c: 423:             break;
  5088  00273E  EFC2  F013         	goto	l4676
  5089  002742                     l4674:
  5090  002742  501E               	movf	setSteering@steeringMode^0,w,c
  5091  002744  6E1F               	movwf	??_setSteering^0,c
  5092  002746  6A20               	clrf	(??_setSteering+1)^0,c
  5093                           
  5094                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5095                           ; Switch size 1, requested type "simple"
  5096                           ; Number of cases is 1, Range of values is 0 to 0
  5097                           ; switch strategies available:
  5098                           ; Name         Instructions Cycles
  5099                           ; simple_byte            4     3 (average)
  5100                           ;	Chosen strategy is simple_byte
  5101  002748  5020               	movf	(??_setSteering+1)^0,w,c
  5102  00274A  0A00               	xorlw	0	; case 0
  5103  00274C  B4D8               	btfsc	status,2,c
  5104  00274E  EFAB  F013         	goto	l7004
  5105  002752  EF97  F013         	goto	l4670
  5106  002756                     l7004:
  5107                           
  5108                           ; Switch size 1, requested type "simple"
  5109                           ; Number of cases is 5, Range of values is 0 to 4
  5110                           ; switch strategies available:
  5111                           ; Name         Instructions Cycles
  5112                           ; simple_byte           16     9 (average)
  5113                           ;	Chosen strategy is simple_byte
  5114  002756  501F               	movf	??_setSteering^0,w,c
  5115  002758  0A00               	xorlw	0	; case 0
  5116  00275A  B4D8               	btfsc	status,2,c
  5117  00275C  EF53  F013         	goto	l1381
  5118  002760  0A01               	xorlw	1	; case 1
  5119  002762  B4D8               	btfsc	status,2,c
  5120  002764  EF65  F013         	goto	l1383
  5121  002768  0A03               	xorlw	3	; case 2
  5122  00276A  B4D8               	btfsc	status,2,c
  5123  00276C  EF6F  F013         	goto	l1384
  5124  002770  0A01               	xorlw	1	; case 3
  5125  002772  B4D8               	btfsc	status,2,c
  5126  002774  EF83  F013         	goto	l1385
  5127  002778  0A07               	xorlw	7	; case 4
  5128  00277A  B4D8               	btfsc	status,2,c
  5129  00277C  EF8D  F013         	goto	l4666
  5130  002780  EF97  F013         	goto	l4670
  5131  002784                     l4676:
  5132                           
  5133                           ;main.c: 426:     if (steeringF > ((65))) {
  5134  002784  BE22               	btfsc	(setSteering@steeringF+1)^0,7,c
  5135  002786  EFCE  F013         	goto	u3081
  5136  00278A  5022               	movf	(setSteering@steeringF+1)^0,w,c
  5137  00278C  E109               	bnz	u3080
  5138  00278E  0E42               	movlw	66
  5139  002790  5C21               	subwf	setSteering@steeringF^0,w,c
  5140  002792  A0D8               	btfss	status,0,c
  5141  002794  EFCE  F013         	goto	u3081
  5142  002798  EFD0  F013         	goto	u3080
  5143  00279C                     u3081:
  5144  00279C  EFD6  F013         	goto	l4680
  5145  0027A0                     u3080:
  5146  0027A0                     
  5147                           ;main.c: 427:         steeringF = ((65));
  5148  0027A0  0E00               	movlw	0
  5149  0027A2  6E22               	movwf	(setSteering@steeringF+1)^0,c
  5150  0027A4  0E41               	movlw	65
  5151  0027A6  6E21               	movwf	setSteering@steeringF^0,c
  5152                           
  5153                           ;main.c: 428:     } else if (steeringF < (-(65))) {
  5154  0027A8  EFE8  F013         	goto	l4684
  5155  0027AC                     l4680:
  5156  0027AC  AE22               	btfss	(setSteering@steeringF+1)^0,7,c
  5157  0027AE  EFE2  F013         	goto	u3091
  5158  0027B2  0EBF               	movlw	191
  5159  0027B4  5C21               	subwf	setSteering@steeringF^0,w,c
  5160  0027B6  0EFF               	movlw	255
  5161  0027B8  5822               	subwfb	(setSteering@steeringF+1)^0,w,c
  5162  0027BA  B0D8               	btfsc	status,0,c
  5163  0027BC  EFE2  F013         	goto	u3091
  5164  0027C0  EFE4  F013         	goto	u3090
  5165  0027C4                     u3091:
  5166  0027C4  EFE8  F013         	goto	l4684
  5167  0027C8                     u3090:
  5168  0027C8                     
  5169                           ;main.c: 429:         steeringF = (-(65));
  5170  0027C8  0EFF               	movlw	255
  5171  0027CA  6E22               	movwf	(setSteering@steeringF+1)^0,c
  5172  0027CC  0EBF               	movlw	191
  5173  0027CE  6E21               	movwf	setSteering@steeringF^0,c
  5174  0027D0                     l4684:
  5175                           
  5176                           ;main.c: 432:     if (steeringB > ((40))) {
  5177  0027D0  BE24               	btfsc	(setSteering@steeringB+1)^0,7,c
  5178  0027D2  EFF4  F013         	goto	u3101
  5179  0027D6  5024               	movf	(setSteering@steeringB+1)^0,w,c
  5180  0027D8  E109               	bnz	u3100
  5181  0027DA  0E29               	movlw	41
  5182  0027DC  5C23               	subwf	setSteering@steeringB^0,w,c
  5183  0027DE  A0D8               	btfss	status,0,c
  5184  0027E0  EFF4  F013         	goto	u3101
  5185  0027E4  EFF6  F013         	goto	u3100
  5186  0027E8                     u3101:
  5187  0027E8  EFFC  F013         	goto	l4688
  5188  0027EC                     u3100:
  5189  0027EC                     
  5190                           ;main.c: 433:         steeringB = ((40));
  5191  0027EC  0E00               	movlw	0
  5192  0027EE  6E24               	movwf	(setSteering@steeringB+1)^0,c
  5193  0027F0  0E28               	movlw	40
  5194  0027F2  6E23               	movwf	setSteering@steeringB^0,c
  5195                           
  5196                           ;main.c: 434:     } else if (steeringB < (-(40))) {
  5197  0027F4  EF0E  F014         	goto	l4692
  5198  0027F8                     l4688:
  5199  0027F8  AE24               	btfss	(setSteering@steeringB+1)^0,7,c
  5200  0027FA  EF08  F014         	goto	u3111
  5201  0027FE  0ED8               	movlw	216
  5202  002800  5C23               	subwf	setSteering@steeringB^0,w,c
  5203  002802  0EFF               	movlw	255
  5204  002804  5824               	subwfb	(setSteering@steeringB+1)^0,w,c
  5205  002806  B0D8               	btfsc	status,0,c
  5206  002808  EF08  F014         	goto	u3111
  5207  00280C  EF0A  F014         	goto	u3110
  5208  002810                     u3111:
  5209  002810  EF0E  F014         	goto	l4692
  5210  002814                     u3110:
  5211  002814                     
  5212                           ;main.c: 435:         steeringB = (-(40));
  5213  002814  0EFF               	movlw	255
  5214  002816  6E24               	movwf	(setSteering@steeringB+1)^0,c
  5215  002818  0ED8               	movlw	216
  5216  00281A  6E23               	movwf	setSteering@steeringB^0,c
  5217  00281C                     l4692:
  5218                           
  5219                           ;main.c: 439:     PWM6_LoadDutyValue((uint16_t) ((352) + steeringF));
  5220  00281C  0E60               	movlw	96
  5221  00281E  2421               	addwf	setSteering@steeringF^0,w,c
  5222  002820  6E14               	movwf	PWM6_LoadDutyValue@dutyValue^0,c
  5223  002822  0E01               	movlw	1
  5224  002824  2022               	addwfc	(setSteering@steeringF+1)^0,w,c
  5225  002826  6E15               	movwf	(PWM6_LoadDutyValue@dutyValue+1)^0,c
  5226  002828  EC76  F01E         	call	_PWM6_LoadDutyValue	;wreg free
  5227  00282C                     
  5228                           ;main.c: 440:     PWM5_LoadDutyValue((uint16_t) ((357) + steeringB));
  5229  00282C  0E65               	movlw	101
  5230  00282E  2423               	addwf	setSteering@steeringB^0,w,c
  5231  002830  6E14               	movwf	PWM5_LoadDutyValue@dutyValue^0,c
  5232  002832  0E01               	movlw	1
  5233  002834  2024               	addwfc	(setSteering@steeringB+1)^0,w,c
  5234  002836  6E15               	movwf	(PWM5_LoadDutyValue@dutyValue+1)^0,c
  5235  002838  EC90  F01E         	call	_PWM5_LoadDutyValue	;wreg free
  5236  00283C  0012               	return		;funcret
  5237  00283E                     __end_of_setSteering:
  5238                           	callstack 0
  5239                           
  5240 ;; *************** function _PWM6_LoadDutyValue *****************
  5241 ;; Defined at:
  5242 ;;		line 74 in file "mcc_generated_files/pwm6.c"
  5243 ;; Parameters:    Size  Location     Type
  5244 ;;  dutyValue       2   19[COMRAM] unsigned short 
  5245 ;; Auto vars:     Size  Location     Type
  5246 ;;		None
  5247 ;; Return value:  Size  Location     Type
  5248 ;;                  1    wreg      void 
  5249 ;; Registers used:
  5250 ;;		wreg, status,2, status,0
  5251 ;; Tracked objects:
  5252 ;;		On entry : 0/0
  5253 ;;		On exit  : 0/0
  5254 ;;		Unchanged: 0/0
  5255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5256 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5258 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5259 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5260 ;;Total ram usage:        4 bytes
  5261 ;; Hardware stack levels used: 1
  5262 ;; Hardware stack levels required when called: 8
  5263 ;; This function calls:
  5264 ;;		Nothing
  5265 ;; This function is called by:
  5266 ;;		_setSteering
  5267 ;; This function uses a non-reentrant model
  5268 ;;
  5269                           
  5270                           	psect	text23
  5271  003CEC                     __ptext23:
  5272                           	callstack 0
  5273  003CEC                     _PWM6_LoadDutyValue:
  5274                           	callstack 20
  5275  003CEC                     
  5276                           ;mcc_generated_files/pwm6.c: 74:  void PWM6_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm6.c: 75:  {;mcc_generated_files/pwm6.c: 77:      PWM6DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  5277  003CEC  C014  F016         	movff	PWM6_LoadDutyValue@dutyValue,??_PWM6_LoadDutyValue
  5278  003CF0  C015  F017         	movff	PWM6_LoadDutyValue@dutyValue+1,??_PWM6_LoadDutyValue+1
  5279  003CF4  90D8               	bcf	status,0,c
  5280  003CF6  3217               	rrcf	(??_PWM6_LoadDutyValue+1)^0,f,c
  5281  003CF8  3216               	rrcf	??_PWM6_LoadDutyValue^0,f,c
  5282  003CFA  90D8               	bcf	status,0,c
  5283  003CFC  3217               	rrcf	(??_PWM6_LoadDutyValue+1)^0,f,c
  5284  003CFE  3216               	rrcf	??_PWM6_LoadDutyValue^0,f,c
  5285  003D00  5016               	movf	??_PWM6_LoadDutyValue^0,w,c
  5286  003D02  6E69               	movwf	105,c	;volatile
  5287                           
  5288                           ;mcc_generated_files/pwm6.c: 80:      PWM6DCL = (dutyValue & 0x0003)<<6;
  5289  003D04  C014  F016         	movff	PWM6_LoadDutyValue@dutyValue,??_PWM6_LoadDutyValue
  5290  003D08  0E03               	movlw	3
  5291  003D0A  1616               	andwf	??_PWM6_LoadDutyValue^0,f,c
  5292  003D0C  0E06               	movlw	6
  5293  003D0E  6E17               	movwf	(??_PWM6_LoadDutyValue+1)^0,c
  5294  003D10                     u2875:
  5295  003D10  90D8               	bcf	status,0,c
  5296  003D12  3616               	rlcf	??_PWM6_LoadDutyValue^0,f,c
  5297  003D14  2E17               	decfsz	(??_PWM6_LoadDutyValue+1)^0,f,c
  5298  003D16  EF88  F01E         	goto	u2875
  5299  003D1A  5016               	movf	??_PWM6_LoadDutyValue^0,w,c
  5300  003D1C  6E68               	movwf	104,c	;volatile
  5301  003D1E  0012               	return		;funcret
  5302  003D20                     __end_of_PWM6_LoadDutyValue:
  5303                           	callstack 0
  5304                           
  5305 ;; *************** function _PWM5_LoadDutyValue *****************
  5306 ;; Defined at:
  5307 ;;		line 74 in file "mcc_generated_files/pwm5.c"
  5308 ;; Parameters:    Size  Location     Type
  5309 ;;  dutyValue       2   19[COMRAM] unsigned short 
  5310 ;; Auto vars:     Size  Location     Type
  5311 ;;		None
  5312 ;; Return value:  Size  Location     Type
  5313 ;;                  1    wreg      void 
  5314 ;; Registers used:
  5315 ;;		wreg, status,2, status,0
  5316 ;; Tracked objects:
  5317 ;;		On entry : 0/0
  5318 ;;		On exit  : 0/0
  5319 ;;		Unchanged: 0/0
  5320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5321 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5323 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5324 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5325 ;;Total ram usage:        4 bytes
  5326 ;; Hardware stack levels used: 1
  5327 ;; Hardware stack levels required when called: 8
  5328 ;; This function calls:
  5329 ;;		Nothing
  5330 ;; This function is called by:
  5331 ;;		_setSteering
  5332 ;; This function uses a non-reentrant model
  5333 ;;
  5334                           
  5335                           	psect	text24
  5336  003D20                     __ptext24:
  5337                           	callstack 0
  5338  003D20                     _PWM5_LoadDutyValue:
  5339                           	callstack 20
  5340  003D20                     
  5341                           ;mcc_generated_files/pwm5.c: 74:  void PWM5_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm5.c: 75:  {;mcc_generated_files/pwm5.c: 77:      PWM5DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  5342  003D20  C014  F016         	movff	PWM5_LoadDutyValue@dutyValue,??_PWM5_LoadDutyValue
  5343  003D24  C015  F017         	movff	PWM5_LoadDutyValue@dutyValue+1,??_PWM5_LoadDutyValue+1
  5344  003D28  90D8               	bcf	status,0,c
  5345  003D2A  3217               	rrcf	(??_PWM5_LoadDutyValue+1)^0,f,c
  5346  003D2C  3216               	rrcf	??_PWM5_LoadDutyValue^0,f,c
  5347  003D2E  90D8               	bcf	status,0,c
  5348  003D30  3217               	rrcf	(??_PWM5_LoadDutyValue+1)^0,f,c
  5349  003D32  3216               	rrcf	??_PWM5_LoadDutyValue^0,f,c
  5350  003D34  5016               	movf	??_PWM5_LoadDutyValue^0,w,c
  5351  003D36  6E6D               	movwf	109,c	;volatile
  5352                           
  5353                           ;mcc_generated_files/pwm5.c: 80:      PWM5DCL = (dutyValue & 0x0003)<<6;
  5354  003D38  C014  F016         	movff	PWM5_LoadDutyValue@dutyValue,??_PWM5_LoadDutyValue
  5355  003D3C  0E03               	movlw	3
  5356  003D3E  1616               	andwf	??_PWM5_LoadDutyValue^0,f,c
  5357  003D40  0E06               	movlw	6
  5358  003D42  6E17               	movwf	(??_PWM5_LoadDutyValue+1)^0,c
  5359  003D44                     u2865:
  5360  003D44  90D8               	bcf	status,0,c
  5361  003D46  3616               	rlcf	??_PWM5_LoadDutyValue^0,f,c
  5362  003D48  2E17               	decfsz	(??_PWM5_LoadDutyValue+1)^0,f,c
  5363  003D4A  EFA2  F01E         	goto	u2865
  5364  003D4E  5016               	movf	??_PWM5_LoadDutyValue^0,w,c
  5365  003D50  6E6C               	movwf	108,c	;volatile
  5366  003D52  0012               	return		;funcret
  5367  003D54                     __end_of_PWM5_LoadDutyValue:
  5368                           	callstack 0
  5369                           
  5370 ;; *************** function _calcSpeed *****************
  5371 ;; Defined at:
  5372 ;;		line 289 in file "main.c"
  5373 ;; Parameters:    Size  Location     Type
  5374 ;;		None
  5375 ;; Auto vars:     Size  Location     Type
  5376 ;;  speed           2   39[BANK0 ] short 
  5377 ;; Return value:  Size  Location     Type
  5378 ;;                  1    wreg      void 
  5379 ;; Registers used:
  5380 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5381 ;; Tracked objects:
  5382 ;;		On entry : 0/0
  5383 ;;		On exit  : 0/0
  5384 ;;		Unchanged: 0/0
  5385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5387 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5388 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5389 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5390 ;;Total ram usage:        6 bytes
  5391 ;; Hardware stack levels used: 1
  5392 ;; Hardware stack levels required when called: 9
  5393 ;; This function calls:
  5394 ;;		___fladd
  5395 ;;		___flmul
  5396 ;;		___fltol
  5397 ;;		___xxtofl
  5398 ;; This function is called by:
  5399 ;;		_loop
  5400 ;; This function uses a non-reentrant model
  5401 ;;
  5402                           
  5403                           	psect	text25
  5404  0022DC                     __ptext25:
  5405                           	callstack 0
  5406  0022DC                     _calcSpeed:
  5407                           	callstack 20
  5408  0022DC                     
  5409                           ;main.c: 290:     int16_t speed = 0;
  5410  0022DC  0E00               	movlw	0
  5411  0022DE  0100               	movlb	0	; () banked
  5412  0022E0  6FCD               	movwf	(calcSpeed@speed+1)& (0+255),b
  5413  0022E2  0E00               	movlw	0
  5414  0022E4  6FCC               	movwf	calcSpeed@speed& (0+255),b
  5415                           
  5416                           ;main.c: 292:     switch (driveMode) {
  5417  0022E6  EF24  F012         	goto	l6746
  5418  0022EA                     l6710:
  5419                           
  5420                           ; BSR set to: 0
  5421                           ;main.c: 294:             if (distFront > (30)) {
  5422  0022EA  51A4               	movf	(_distFront+1)& (0+255),w,b	;volatile
  5423  0022EC  E109               	bnz	u6050
  5424  0022EE  0E1F               	movlw	31
  5425  0022F0  5DA3               	subwf	_distFront& (0+255),w,b	;volatile
  5426  0022F2  A0D8               	btfss	status,0,c
  5427  0022F4  EF7E  F011         	goto	u6051
  5428  0022F8  EF80  F011         	goto	u6050
  5429  0022FC                     u6051:
  5430  0022FC  EF82  F011         	goto	l6714
  5431  002300                     u6050:
  5432  002300                     
  5433                           ; BSR set to: 0
  5434                           ;main.c: 295:                 driveMode = Straight;
  5435  002300  0E01               	movlw	1
  5436  002302  6FFC               	movwf	_driveMode& (0+255),b
  5437  002304                     l6714:
  5438                           
  5439                           ; BSR set to: 0
  5440                           ;main.c: 297:             if (setSpeed > (100)) {
  5441  002304  BF8F               	btfsc	(_setSpeed+1)& (0+255),7,b
  5442  002306  EF8E  F011         	goto	u6061
  5443  00230A  518F               	movf	(_setSpeed+1)& (0+255),w,b
  5444  00230C  E109               	bnz	u6060
  5445  00230E  0E65               	movlw	101
  5446  002310  5D8E               	subwf	_setSpeed& (0+255),w,b
  5447  002312  A0D8               	btfss	status,0,c
  5448  002314  EF8E  F011         	goto	u6061
  5449  002318  EF90  F011         	goto	u6060
  5450  00231C                     u6061:
  5451  00231C  EFAB  F011         	goto	l6724
  5452  002320                     u6060:
  5453  002320                     
  5454                           ; BSR set to: 0
  5455                           ;main.c: 298:                     speed = setSpeed;
  5456  002320  C08E  F0CC         	movff	_setSpeed,calcSpeed@speed
  5457  002324  C08F  F0CD         	movff	_setSpeed+1,calcSpeed@speed+1
  5458  002328                     
  5459                           ; BSR set to: 0
  5460                           ;main.c: 299:                 if (distFront < (15)) {
  5461  002328  51A4               	movf	(_distFront+1)& (0+255),w,b	;volatile
  5462  00232A  E107               	bnz	u6071
  5463  00232C  0E0F               	movlw	15
  5464  00232E  5DA3               	subwf	_distFront& (0+255),w,b	;volatile
  5465  002330  B0D8               	btfsc	status,0,c
  5466  002332  EF9D  F011         	goto	u6071
  5467  002336  EF9F  F011         	goto	u6070
  5468  00233A                     u6071:
  5469  00233A  EFA5  F011         	goto	l6722
  5470  00233E                     u6070:
  5471  00233E                     
  5472                           ; BSR set to: 0
  5473                           ;main.c: 300:                     speed -= 4;
  5474  00233E  0EFC               	movlw	252
  5475  002340  27CC               	addwf	calcSpeed@speed& (0+255),f,b
  5476  002342  0EFF               	movlw	255
  5477  002344  23CD               	addwfc	(calcSpeed@speed+1)& (0+255),f,b
  5478                           
  5479                           ;main.c: 301:                 } else {
  5480  002346  EF49  F012         	goto	l6748
  5481  00234A                     l6722:
  5482                           
  5483                           ; BSR set to: 0
  5484                           ;main.c: 302:                     speed -= 2;
  5485  00234A  0EFE               	movlw	254
  5486  00234C  27CC               	addwf	calcSpeed@speed& (0+255),f,b
  5487  00234E  0EFF               	movlw	255
  5488  002350  23CD               	addwfc	(calcSpeed@speed+1)& (0+255),f,b
  5489  002352  EF49  F012         	goto	l6748
  5490  002356                     l6724:
  5491                           
  5492                           ; BSR set to: 0
  5493                           ;main.c: 305:                 speed = (100);
  5494  002356  0E00               	movlw	0
  5495  002358  6FCD               	movwf	(calcSpeed@speed+1)& (0+255),b
  5496  00235A  0E64               	movlw	100
  5497  00235C  6FCC               	movwf	calcSpeed@speed& (0+255),b
  5498  00235E  EF49  F012         	goto	l6748
  5499  002362                     l6726:
  5500                           
  5501                           ; BSR set to: 0
  5502                           ;main.c: 309:             if (distFront < (30)) {
  5503  002362  51A4               	movf	(_distFront+1)& (0+255),w,b	;volatile
  5504  002364  E107               	bnz	u6081
  5505  002366  0E1E               	movlw	30
  5506  002368  5DA3               	subwf	_distFront& (0+255),w,b	;volatile
  5507  00236A  B0D8               	btfsc	status,0,c
  5508  00236C  EFBA  F011         	goto	u6081
  5509  002370  EFBC  F011         	goto	u6080
  5510  002374                     u6081:
  5511  002374  EFBE  F011         	goto	l6730
  5512  002378                     u6080:
  5513  002378                     
  5514                           ; BSR set to: 0
  5515                           ;main.c: 310:                 driveMode = Brake;
  5516  002378  0E02               	movlw	2
  5517  00237A  6FFC               	movwf	_driveMode& (0+255),b
  5518  00237C                     l6730:
  5519                           
  5520                           ; BSR set to: 0
  5521                           ;main.c: 313:             if (distFront >= (150)) {
  5522  00237C  51A4               	movf	(_distFront+1)& (0+255),w,b	;volatile
  5523  00237E  E109               	bnz	u6090
  5524  002380  0E96               	movlw	150
  5525  002382  5DA3               	subwf	_distFront& (0+255),w,b	;volatile
  5526  002384  A0D8               	btfss	status,0,c
  5527  002386  EFC7  F011         	goto	u6091
  5528  00238A  EFC9  F011         	goto	u6090
  5529  00238E                     u6091:
  5530  00238E  EF12  F012         	goto	l6734
  5531  002392                     u6090:
  5532  002392                     
  5533                           ; BSR set to: 0
  5534                           ;main.c: 314:                 speed = (int16_t) ((0.7) * (distFront - (150)) + (275));
  5535  002392  0E00               	movlw	0
  5536  002394  6FB6               	movwf	___fladd@a& (0+255),b
  5537  002396  0E80               	movlw	128
  5538  002398  6FB7               	movwf	(___fladd@a+1)& (0+255),b
  5539  00239A  0E89               	movlw	137
  5540  00239C  6FB8               	movwf	(___fladd@a+2)& (0+255),b
  5541  00239E  0E43               	movlw	67
  5542  0023A0  6FB9               	movwf	(___fladd@a+3)& (0+255),b
  5543  0023A2  0E33               	movlw	51
  5544  0023A4  6E2E               	movwf	___flmul@a^0,c
  5545  0023A6  0E33               	movlw	51
  5546  0023A8  6E2F               	movwf	(___flmul@a+1)^0,c
  5547  0023AA  0E33               	movlw	51
  5548  0023AC  6E30               	movwf	(___flmul@a+2)^0,c
  5549  0023AE  0E3F               	movlw	63
  5550  0023B0  6E31               	movwf	(___flmul@a+3)^0,c
  5551  0023B2  0E6A               	movlw	106
  5552  0023B4  6FC8               	movwf	??_calcSpeed& (0+255),b
  5553  0023B6  0EFF               	movlw	255
  5554  0023B8  6FC9               	movwf	(??_calcSpeed+1)& (0+255),b
  5555  0023BA  C0A3  F0CA         	movff	_distFront,??_calcSpeed+2	;volatile
  5556  0023BE  C0A4  F0CB         	movff	_distFront+1,??_calcSpeed+3	;volatile
  5557  0023C2  51C8               	movf	??_calcSpeed& (0+255),w,b
  5558  0023C4  27CA               	addwf	(??_calcSpeed+2)& (0+255),f,b
  5559  0023C6  51C9               	movf	(??_calcSpeed+1)& (0+255),w,b
  5560  0023C8  23CB               	addwfc	(??_calcSpeed+3)& (0+255),f,b
  5561  0023CA  C0CA  F01C         	movff	??_calcSpeed+2,___xxtofl@val
  5562  0023CE  C0CB  F01D         	movff	??_calcSpeed+3,___xxtofl@val+1
  5563  0023D2  6A1E               	clrf	(___xxtofl@val+2)^0,c
  5564  0023D4  6A1F               	clrf	(___xxtofl@val+3)^0,c
  5565  0023D6  0E00               	movlw	0
  5566  0023D8  EC73  F012         	call	___xxtofl
  5567  0023DC  C01C  F02A         	movff	?___xxtofl,___flmul@b
  5568  0023E0  C01D  F02B         	movff	?___xxtofl+1,___flmul@b+1
  5569  0023E4  C01E  F02C         	movff	?___xxtofl+2,___flmul@b+2
  5570  0023E8  C01F  F02D         	movff	?___xxtofl+3,___flmul@b+3
  5571  0023EC  EC81  F00A         	call	___flmul	;wreg free
  5572  0023F0  C02A  F0B2         	movff	?___flmul,___fladd@b
  5573  0023F4  C02B  F0B3         	movff	?___flmul+1,___fladd@b+1
  5574  0023F8  C02C  F0B4         	movff	?___flmul+2,___fladd@b+2
  5575  0023FC  C02D  F0B5         	movff	?___flmul+3,___fladd@b+3
  5576  002400  EC20  F008         	call	___fladd	;wreg free
  5577  002404  C0B2  F0BE         	movff	?___fladd,___fltol@f1
  5578  002408  C0B3  F0BF         	movff	?___fladd+1,___fltol@f1+1
  5579  00240C  C0B4  F0C0         	movff	?___fladd+2,___fltol@f1+2
  5580  002410  C0B5  F0C1         	movff	?___fladd+3,___fltol@f1+3
  5581  002414  EC5D  F017         	call	___fltol	;wreg free
  5582  002418  C0BE  F0CC         	movff	?___fltol,calcSpeed@speed
  5583  00241C  C0BF  F0CD         	movff	?___fltol+1,calcSpeed@speed+1
  5584                           
  5585                           ;main.c: 315:             } else {
  5586  002420  EF49  F012         	goto	l6748
  5587  002424                     l6734:
  5588                           
  5589                           ; BSR set to: 0
  5590                           ;main.c: 316:                 speed = (275);
  5591  002424  0E01               	movlw	1
  5592  002426  6FCD               	movwf	(calcSpeed@speed+1)& (0+255),b
  5593  002428  0E13               	movlw	19
  5594  00242A  6FCC               	movwf	calcSpeed@speed& (0+255),b
  5595  00242C  EF49  F012         	goto	l6748
  5596  002430                     l6736:
  5597                           
  5598                           ; BSR set to: 0
  5599                           ;main.c: 321:             speed = (-125);
  5600  002430  0EFF               	movlw	255
  5601  002432  6FCD               	movwf	(calcSpeed@speed+1)& (0+255),b
  5602  002434  0E83               	movlw	131
  5603  002436  6FCC               	movwf	calcSpeed@speed& (0+255),b
  5604                           
  5605                           ;main.c: 322:             break;
  5606  002438  EF49  F012         	goto	l6748
  5607  00243C                     l6740:
  5608                           
  5609                           ; BSR set to: 0
  5610                           ;main.c: 327:             speed = (200);
  5611  00243C  0E00               	movlw	0
  5612  00243E  6FCD               	movwf	(calcSpeed@speed+1)& (0+255),b
  5613  002440  0EC8               	movlw	200
  5614  002442  6FCC               	movwf	calcSpeed@speed& (0+255),b
  5615                           
  5616                           ;main.c: 328:             break;
  5617  002444  EF49  F012         	goto	l6748
  5618  002448                     l6746:
  5619                           
  5620                           ; BSR set to: 0
  5621  002448  51FC               	movf	_driveMode& (0+255),w,b
  5622  00244A  6FC8               	movwf	??_calcSpeed& (0+255),b
  5623  00244C  6BC9               	clrf	(??_calcSpeed+1)& (0+255),b
  5624                           
  5625                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5626                           ; Switch size 1, requested type "simple"
  5627                           ; Number of cases is 1, Range of values is 0 to 0
  5628                           ; switch strategies available:
  5629                           ; Name         Instructions Cycles
  5630                           ; simple_byte            4     3 (average)
  5631                           ;	Chosen strategy is simple_byte
  5632  00244E  51C9               	movf	(??_calcSpeed+1)& (0+255),w,b
  5633  002450  0A00               	xorlw	0	; case 0
  5634  002452  B4D8               	btfsc	status,2,c
  5635  002454  EF2E  F012         	goto	l7006
  5636  002458  EF49  F012         	goto	l6748
  5637  00245C                     l7006:
  5638                           
  5639                           ; BSR set to: 0
  5640                           ; Switch size 1, requested type "simple"
  5641                           ; Number of cases is 6, Range of values is 1 to 6
  5642                           ; switch strategies available:
  5643                           ; Name         Instructions Cycles
  5644                           ; simple_byte           19    10 (average)
  5645                           ;	Chosen strategy is simple_byte
  5646  00245C  51C8               	movf	??_calcSpeed& (0+255),w,b
  5647  00245E  0A01               	xorlw	1	; case 1
  5648  002460  B4D8               	btfsc	status,2,c
  5649  002462  EFB1  F011         	goto	l6726
  5650  002466  0A03               	xorlw	3	; case 2
  5651  002468  B4D8               	btfsc	status,2,c
  5652  00246A  EF75  F011         	goto	l6710
  5653  00246E  0A01               	xorlw	1	; case 3
  5654  002470  B4D8               	btfsc	status,2,c
  5655  002472  EF18  F012         	goto	l6736
  5656  002476  0A07               	xorlw	7	; case 4
  5657  002478  B4D8               	btfsc	status,2,c
  5658  00247A  EF18  F012         	goto	l6736
  5659  00247E  0A01               	xorlw	1	; case 5
  5660  002480  B4D8               	btfsc	status,2,c
  5661  002482  EF1E  F012         	goto	l6740
  5662  002486  0A03               	xorlw	3	; case 6
  5663  002488  B4D8               	btfsc	status,2,c
  5664  00248A  EF1E  F012         	goto	l6740
  5665  00248E  EF49  F012         	goto	l6748
  5666  002492                     l6748:
  5667                           
  5668                           ;main.c: 334:     if (speed > (400)) {
  5669  002492  0100               	movlb	0	; () banked
  5670  002494  BFCD               	btfsc	(calcSpeed@speed+1)& (0+255),7,b
  5671  002496  EF56  F012         	goto	u6101
  5672  00249A  0E91               	movlw	145
  5673  00249C  5DCC               	subwf	calcSpeed@speed& (0+255),w,b
  5674  00249E  0E01               	movlw	1
  5675  0024A0  59CD               	subwfb	(calcSpeed@speed+1)& (0+255),w,b
  5676  0024A2  A0D8               	btfss	status,0,c
  5677  0024A4  EF56  F012         	goto	u6101
  5678  0024A8  EF58  F012         	goto	u6100
  5679  0024AC                     u6101:
  5680  0024AC  EF5C  F012         	goto	l6752
  5681  0024B0                     u6100:
  5682  0024B0                     
  5683                           ; BSR set to: 0
  5684                           ;main.c: 335:         speed = (400);
  5685  0024B0  0E01               	movlw	1
  5686  0024B2  6FCD               	movwf	(calcSpeed@speed+1)& (0+255),b
  5687  0024B4  0E90               	movlw	144
  5688  0024B6  6FCC               	movwf	calcSpeed@speed& (0+255),b
  5689  0024B8                     l6752:
  5690                           
  5691                           ; BSR set to: 0
  5692                           ;main.c: 337:     if (speed < (-250)) {
  5693  0024B8  AFCD               	btfss	(calcSpeed@speed+1)& (0+255),7,b
  5694  0024BA  EF68  F012         	goto	u6111
  5695  0024BE  0E06               	movlw	6
  5696  0024C0  5DCC               	subwf	calcSpeed@speed& (0+255),w,b
  5697  0024C2  0EFF               	movlw	255
  5698  0024C4  59CD               	subwfb	(calcSpeed@speed+1)& (0+255),w,b
  5699  0024C6  B0D8               	btfsc	status,0,c
  5700  0024C8  EF68  F012         	goto	u6111
  5701  0024CC  EF6A  F012         	goto	u6110
  5702  0024D0                     u6111:
  5703  0024D0  EF6E  F012         	goto	l6756
  5704  0024D4                     u6110:
  5705  0024D4                     
  5706                           ; BSR set to: 0
  5707                           ;main.c: 338:         speed = (-250);
  5708  0024D4  0EFF               	movlw	255
  5709  0024D6  6FCD               	movwf	(calcSpeed@speed+1)& (0+255),b
  5710  0024D8  0E06               	movlw	6
  5711  0024DA  6FCC               	movwf	calcSpeed@speed& (0+255),b
  5712  0024DC                     l6756:
  5713                           
  5714                           ; BSR set to: 0
  5715                           ;main.c: 340:     setSpeed = speed;
  5716  0024DC  C0CC  F08E         	movff	calcSpeed@speed,_setSpeed
  5717  0024E0  C0CD  F08F         	movff	calcSpeed@speed+1,_setSpeed+1
  5718  0024E4                     
  5719                           ; BSR set to: 0
  5720  0024E4  0012               	return		;funcret
  5721  0024E6                     __end_of_calcSpeed:
  5722                           	callstack 0
  5723                           
  5724 ;; *************** function ___fladd *****************
  5725 ;; Defined at:
  5726 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  5727 ;; Parameters:    Size  Location     Type
  5728 ;;  b               4   13[BANK0 ] void 
  5729 ;;  a               4   17[BANK0 ] void 
  5730 ;; Auto vars:     Size  Location     Type
  5731 ;;  grs             1   24[BANK0 ] unsigned char 
  5732 ;;  bexp            1   23[BANK0 ] unsigned char 
  5733 ;;  aexp            1   22[BANK0 ] unsigned char 
  5734 ;;  signs           1   21[BANK0 ] unsigned char 
  5735 ;; Return value:  Size  Location     Type
  5736 ;;                  4   13[BANK0 ] unsigned char 
  5737 ;; Registers used:
  5738 ;;		wreg, status,2, status,0
  5739 ;; Tracked objects:
  5740 ;;		On entry : 0/0
  5741 ;;		On exit  : 0/0
  5742 ;;		Unchanged: 0/0
  5743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5744 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5745 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5746 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5747 ;;      Totals:         4      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5748 ;;Total ram usage:       16 bytes
  5749 ;; Hardware stack levels used: 1
  5750 ;; Hardware stack levels required when called: 8
  5751 ;; This function calls:
  5752 ;;		Nothing
  5753 ;; This function is called by:
  5754 ;;		_calcSpeed
  5755 ;; This function uses a non-reentrant model
  5756 ;;
  5757                           
  5758                           	psect	text26
  5759  001040                     __ptext26:
  5760                           	callstack 0
  5761  001040                     ___fladd:
  5762                           	callstack 20
  5763  001040  0100               	movlb	0	; () banked
  5764  001042  51B5               	movf	(___fladd@b+3)& (0+255),w,b
  5765  001044  0B80               	andlw	128
  5766  001046  6FBA               	movwf	___fladd@signs& (0+255),b
  5767  001048  51B5               	movf	(___fladd@b+3)& (0+255),w,b
  5768  00104A  25B5               	addwf	(___fladd@b+3)& (0+255),w,b
  5769  00104C  6FBC               	movwf	___fladd@bexp& (0+255),b
  5770  00104E                     
  5771                           ; BSR set to: 0
  5772  00104E  AFB4               	btfss	(___fladd@b+2)& (0+255),7,b
  5773  001050  EF2C  F008         	goto	u5191
  5774  001054  EF2E  F008         	goto	u5190
  5775  001058                     u5191:
  5776  001058  EF2F  F008         	goto	l6210
  5777  00105C                     u5190:
  5778  00105C                     
  5779                           ; BSR set to: 0
  5780  00105C  81BC               	bsf	___fladd@bexp& (0+255),0,b
  5781  00105E                     l6210:
  5782                           
  5783                           ; BSR set to: 0
  5784  00105E  51BC               	movf	___fladd@bexp& (0+255),w,b
  5785  001060  B4D8               	btfsc	status,2,c
  5786  001062  EF35  F008         	goto	u5201
  5787  001066  EF37  F008         	goto	u5200
  5788  00106A                     u5201:
  5789  00106A  EF4C  F008         	goto	l6220
  5790  00106E                     u5200:
  5791  00106E                     
  5792                           ; BSR set to: 0
  5793  00106E  29BC               	incf	___fladd@bexp& (0+255),w,b
  5794  001070  A4D8               	btfss	status,2,c
  5795  001072  EF3D  F008         	goto	u5211
  5796  001076  EF3F  F008         	goto	u5210
  5797  00107A                     u5211:
  5798  00107A  EF47  F008         	goto	l6216
  5799  00107E                     u5210:
  5800  00107E                     
  5801                           ; BSR set to: 0
  5802  00107E  0E00               	movlw	0
  5803  001080  6FB2               	movwf	___fladd@b& (0+255),b
  5804  001082  0E00               	movlw	0
  5805  001084  6FB3               	movwf	(___fladd@b+1)& (0+255),b
  5806  001086  0E00               	movlw	0
  5807  001088  6FB4               	movwf	(___fladd@b+2)& (0+255),b
  5808  00108A  0E00               	movlw	0
  5809  00108C  6FB5               	movwf	(___fladd@b+3)& (0+255),b
  5810  00108E                     l6216:
  5811                           
  5812                           ; BSR set to: 0
  5813  00108E  8FB4               	bsf	(___fladd@b+2)& (0+255),7,b
  5814  001090                     
  5815                           ; BSR set to: 0
  5816  001090  0E00               	movlw	0
  5817  001092  6FB5               	movwf	(___fladd@b+3)& (0+255),b
  5818  001094  EF54  F008         	goto	l6222
  5819  001098                     l6220:
  5820                           
  5821                           ; BSR set to: 0
  5822  001098  0E00               	movlw	0
  5823  00109A  6FB2               	movwf	___fladd@b& (0+255),b
  5824  00109C  0E00               	movlw	0
  5825  00109E  6FB3               	movwf	(___fladd@b+1)& (0+255),b
  5826  0010A0  0E00               	movlw	0
  5827  0010A2  6FB4               	movwf	(___fladd@b+2)& (0+255),b
  5828  0010A4  0E00               	movlw	0
  5829  0010A6  6FB5               	movwf	(___fladd@b+3)& (0+255),b
  5830  0010A8                     l6222:
  5831                           
  5832                           ; BSR set to: 0
  5833  0010A8  51B9               	movf	(___fladd@a+3)& (0+255),w,b
  5834  0010AA  0B80               	andlw	128
  5835  0010AC  6FBB               	movwf	___fladd@aexp& (0+255),b
  5836  0010AE                     
  5837                           ; BSR set to: 0
  5838  0010AE  51BA               	movf	___fladd@signs& (0+255),w,b
  5839  0010B0  19BB               	xorwf	___fladd@aexp& (0+255),w,b
  5840  0010B2  B4D8               	btfsc	status,2,c
  5841  0010B4  EF5E  F008         	goto	u5221
  5842  0010B8  EF60  F008         	goto	u5220
  5843  0010BC                     u5221:
  5844  0010BC  EF61  F008         	goto	l6228
  5845  0010C0                     u5220:
  5846  0010C0                     
  5847                           ; BSR set to: 0
  5848  0010C0  8DBA               	bsf	___fladd@signs& (0+255),6,b
  5849  0010C2                     l6228:
  5850                           
  5851                           ; BSR set to: 0
  5852  0010C2  51B9               	movf	(___fladd@a+3)& (0+255),w,b
  5853  0010C4  25B9               	addwf	(___fladd@a+3)& (0+255),w,b
  5854  0010C6  6FBB               	movwf	___fladd@aexp& (0+255),b
  5855  0010C8                     
  5856                           ; BSR set to: 0
  5857  0010C8  AFB8               	btfss	(___fladd@a+2)& (0+255),7,b
  5858  0010CA  EF69  F008         	goto	u5231
  5859  0010CE  EF6B  F008         	goto	u5230
  5860  0010D2                     u5231:
  5861  0010D2  EF6C  F008         	goto	l6234
  5862  0010D6                     u5230:
  5863  0010D6                     
  5864                           ; BSR set to: 0
  5865  0010D6  81BB               	bsf	___fladd@aexp& (0+255),0,b
  5866  0010D8                     l6234:
  5867                           
  5868                           ; BSR set to: 0
  5869  0010D8  51BB               	movf	___fladd@aexp& (0+255),w,b
  5870  0010DA  B4D8               	btfsc	status,2,c
  5871  0010DC  EF72  F008         	goto	u5241
  5872  0010E0  EF74  F008         	goto	u5240
  5873  0010E4                     u5241:
  5874  0010E4  EF89  F008         	goto	l6244
  5875  0010E8                     u5240:
  5876  0010E8                     
  5877                           ; BSR set to: 0
  5878  0010E8  29BB               	incf	___fladd@aexp& (0+255),w,b
  5879  0010EA  A4D8               	btfss	status,2,c
  5880  0010EC  EF7A  F008         	goto	u5251
  5881  0010F0  EF7C  F008         	goto	u5250
  5882  0010F4                     u5251:
  5883  0010F4  EF84  F008         	goto	l6240
  5884  0010F8                     u5250:
  5885  0010F8                     
  5886                           ; BSR set to: 0
  5887  0010F8  0E00               	movlw	0
  5888  0010FA  6FB6               	movwf	___fladd@a& (0+255),b
  5889  0010FC  0E00               	movlw	0
  5890  0010FE  6FB7               	movwf	(___fladd@a+1)& (0+255),b
  5891  001100  0E00               	movlw	0
  5892  001102  6FB8               	movwf	(___fladd@a+2)& (0+255),b
  5893  001104  0E00               	movlw	0
  5894  001106  6FB9               	movwf	(___fladd@a+3)& (0+255),b
  5895  001108                     l6240:
  5896                           
  5897                           ; BSR set to: 0
  5898  001108  8FB8               	bsf	(___fladd@a+2)& (0+255),7,b
  5899  00110A                     
  5900                           ; BSR set to: 0
  5901  00110A  0E00               	movlw	0
  5902  00110C  6FB9               	movwf	(___fladd@a+3)& (0+255),b
  5903  00110E  EF91  F008         	goto	l6246
  5904  001112                     l6244:
  5905                           
  5906                           ; BSR set to: 0
  5907  001112  0E00               	movlw	0
  5908  001114  6FB6               	movwf	___fladd@a& (0+255),b
  5909  001116  0E00               	movlw	0
  5910  001118  6FB7               	movwf	(___fladd@a+1)& (0+255),b
  5911  00111A  0E00               	movlw	0
  5912  00111C  6FB8               	movwf	(___fladd@a+2)& (0+255),b
  5913  00111E  0E00               	movlw	0
  5914  001120  6FB9               	movwf	(___fladd@a+3)& (0+255),b
  5915  001122                     l6246:
  5916                           
  5917                           ; BSR set to: 0
  5918  001122  51BC               	movf	___fladd@bexp& (0+255),w,b
  5919  001124  5DBB               	subwf	___fladd@aexp& (0+255),w,b
  5920  001126  B0D8               	btfsc	status,0,c
  5921  001128  EF98  F008         	goto	u5261
  5922  00112C  EF9A  F008         	goto	u5260
  5923  001130                     u5261:
  5924  001130  EFC1  F008         	goto	l6282
  5925  001134                     u5260:
  5926  001134                     
  5927                           ; BSR set to: 0
  5928  001134  ADBA               	btfss	___fladd@signs& (0+255),6,b
  5929  001136  EF9F  F008         	goto	u5271
  5930  00113A  EFA1  F008         	goto	u5270
  5931  00113E                     u5271:
  5932  00113E  EFA3  F008         	goto	l6252
  5933  001142                     u5270:
  5934  001142                     
  5935                           ; BSR set to: 0
  5936  001142  0E80               	movlw	128
  5937  001144  1BBA               	xorwf	___fladd@signs& (0+255),f,b
  5938  001146                     l6252:
  5939                           
  5940                           ; BSR set to: 0
  5941  001146  C0BC  F0BD         	movff	___fladd@bexp,___fladd@grs
  5942  00114A                     
  5943                           ; BSR set to: 0
  5944  00114A  C0BB  F0BC         	movff	___fladd@aexp,___fladd@bexp
  5945  00114E                     
  5946                           ; BSR set to: 0
  5947  00114E  C0BD  F0BB         	movff	___fladd@grs,___fladd@aexp
  5948  001152                     
  5949                           ; BSR set to: 0
  5950  001152  C0B2  F0BD         	movff	___fladd@b,___fladd@grs
  5951  001156                     
  5952                           ; BSR set to: 0
  5953  001156  C0B6  F0B2         	movff	___fladd@a,___fladd@b
  5954  00115A                     
  5955                           ; BSR set to: 0
  5956  00115A  C0BD  F0B6         	movff	___fladd@grs,___fladd@a
  5957  00115E                     
  5958                           ; BSR set to: 0
  5959  00115E  C0B3  F0BD         	movff	___fladd@b+1,___fladd@grs
  5960  001162                     
  5961                           ; BSR set to: 0
  5962  001162  C0B7  F0B3         	movff	___fladd@a+1,___fladd@b+1
  5963  001166                     
  5964                           ; BSR set to: 0
  5965  001166  C0BD  F0B7         	movff	___fladd@grs,___fladd@a+1
  5966  00116A                     
  5967                           ; BSR set to: 0
  5968  00116A  C0B4  F0BD         	movff	___fladd@b+2,___fladd@grs
  5969  00116E                     
  5970                           ; BSR set to: 0
  5971  00116E  C0B8  F0B4         	movff	___fladd@a+2,___fladd@b+2
  5972  001172                     
  5973                           ; BSR set to: 0
  5974  001172  C0BD  F0B8         	movff	___fladd@grs,___fladd@a+2
  5975  001176                     
  5976                           ; BSR set to: 0
  5977  001176  C0B5  F0BD         	movff	___fladd@b+3,___fladd@grs
  5978  00117A                     
  5979                           ; BSR set to: 0
  5980  00117A  C0B9  F0B5         	movff	___fladd@a+3,___fladd@b+3
  5981  00117E                     
  5982                           ; BSR set to: 0
  5983  00117E  C0BD  F0B9         	movff	___fladd@grs,___fladd@a+3
  5984  001182                     l6282:
  5985                           
  5986                           ; BSR set to: 0
  5987  001182  0E00               	movlw	0
  5988  001184  6FBD               	movwf	___fladd@grs& (0+255),b
  5989  001186                     
  5990                           ; BSR set to: 0
  5991  001186  51BC               	movf	___fladd@bexp& (0+255),w,b
  5992  001188  C0BB  F036         	movff	___fladd@aexp,??___fladd
  5993  00118C  6A37               	clrf	(??___fladd+1)^0,c
  5994  00118E  5E36               	subwf	??___fladd^0,f,c
  5995  001190  0E00               	movlw	0
  5996  001192  5A37               	subwfb	(??___fladd+1)^0,f,c
  5997  001194  BE37               	btfsc	(??___fladd+1)^0,7,c
  5998  001196  EFD6  F008         	goto	u5281
  5999  00119A  5037               	movf	(??___fladd+1)^0,w,c
  6000  00119C  E109               	bnz	u5280
  6001  00119E  0E1A               	movlw	26
  6002  0011A0  5C36               	subwf	??___fladd^0,w,c
  6003  0011A2  A0D8               	btfss	status,0,c
  6004  0011A4  EFD6  F008         	goto	u5281
  6005  0011A8  EFD8  F008         	goto	u5280
  6006  0011AC                     u5281:
  6007  0011AC  EF0F  F009         	goto	l1926
  6008  0011B0                     u5280:
  6009  0011B0                     
  6010                           ; BSR set to: 0
  6011  0011B0  51B2               	movf	___fladd@b& (0+255),w,b
  6012  0011B2  11B3               	iorwf	(___fladd@b+1)& (0+255),w,b
  6013  0011B4  11B4               	iorwf	(___fladd@b+2)& (0+255),w,b
  6014  0011B6  11B5               	iorwf	(___fladd@b+3)& (0+255),w,b
  6015  0011B8  A4D8               	btfss	status,2,c
  6016  0011BA  EFE1  F008         	goto	u5291
  6017  0011BE  EFE4  F008         	goto	u5290
  6018  0011C2                     u5291:
  6019  0011C2  0E01               	movlw	1
  6020  0011C4  EFE5  F008         	goto	u5300
  6021  0011C8                     u5290:
  6022  0011C8  0E00               	movlw	0
  6023  0011CA                     u5300:
  6024  0011CA  6FBD               	movwf	___fladd@grs& (0+255),b
  6025  0011CC                     
  6026                           ; BSR set to: 0
  6027  0011CC  0E00               	movlw	0
  6028  0011CE  6FB2               	movwf	___fladd@b& (0+255),b
  6029  0011D0  0E00               	movlw	0
  6030  0011D2  6FB3               	movwf	(___fladd@b+1)& (0+255),b
  6031  0011D4  0E00               	movlw	0
  6032  0011D6  6FB4               	movwf	(___fladd@b+2)& (0+255),b
  6033  0011D8  0E00               	movlw	0
  6034  0011DA  6FB5               	movwf	(___fladd@b+3)& (0+255),b
  6035  0011DC                     
  6036                           ; BSR set to: 0
  6037  0011DC  C0BB  F0BC         	movff	___fladd@aexp,___fladd@bexp
  6038  0011E0  EF18  F009         	goto	l1925
  6039  0011E4                     l1927:
  6040                           
  6041                           ; BSR set to: 0
  6042  0011E4  A1BD               	btfss	___fladd@grs& (0+255),0,b
  6043  0011E6  EFF7  F008         	goto	u5311
  6044  0011EA  EFF9  F008         	goto	u5310
  6045  0011EE                     u5311:
  6046  0011EE  EFFF  F008         	goto	l6294
  6047  0011F2                     u5310:
  6048  0011F2                     
  6049                           ; BSR set to: 0
  6050  0011F2  90D8               	bcf	status,0,c
  6051  0011F4  31BD               	rrcf	___fladd@grs& (0+255),w,b
  6052  0011F6  0901               	iorlw	1
  6053  0011F8  6FBD               	movwf	___fladd@grs& (0+255),b
  6054  0011FA  EF01  F009         	goto	l6296
  6055  0011FE                     l6294:
  6056                           
  6057                           ; BSR set to: 0
  6058  0011FE  90D8               	bcf	status,0,c
  6059  001200  33BD               	rrcf	___fladd@grs& (0+255),f,b
  6060  001202                     l6296:
  6061                           
  6062                           ; BSR set to: 0
  6063  001202  A1B2               	btfss	___fladd@b& (0+255),0,b
  6064  001204  EF06  F009         	goto	u5321
  6065  001208  EF08  F009         	goto	u5320
  6066  00120C                     u5321:
  6067  00120C  EF09  F009         	goto	l6300
  6068  001210                     u5320:
  6069  001210                     
  6070                           ; BSR set to: 0
  6071  001210  8FBD               	bsf	___fladd@grs& (0+255),7,b
  6072  001212                     l6300:
  6073                           
  6074                           ; BSR set to: 0
  6075  001212  35B5               	rlcf	(___fladd@b+3)& (0+255),w,b
  6076  001214  33B5               	rrcf	(___fladd@b+3)& (0+255),f,b
  6077  001216  33B4               	rrcf	(___fladd@b+2)& (0+255),f,b
  6078  001218  33B3               	rrcf	(___fladd@b+1)& (0+255),f,b
  6079  00121A  33B2               	rrcf	___fladd@b& (0+255),f,b
  6080  00121C                     
  6081                           ; BSR set to: 0
  6082  00121C  2BBC               	incf	___fladd@bexp& (0+255),f,b
  6083  00121E                     l1926:
  6084                           
  6085                           ; BSR set to: 0
  6086  00121E  51BB               	movf	___fladd@aexp& (0+255),w,b
  6087  001220  5DBC               	subwf	___fladd@bexp& (0+255),w,b
  6088  001222  A0D8               	btfss	status,0,c
  6089  001224  EF16  F009         	goto	u5331
  6090  001228  EF18  F009         	goto	u5330
  6091  00122C                     u5331:
  6092  00122C  EFF2  F008         	goto	l1927
  6093  001230                     u5330:
  6094  001230                     l1925:
  6095                           
  6096                           ; BSR set to: 0
  6097  001230  BDBA               	btfsc	___fladd@signs& (0+255),6,b
  6098  001232  EF1D  F009         	goto	u5341
  6099  001236  EF1F  F009         	goto	u5340
  6100  00123A                     u5341:
  6101  00123A  EF5F  F009         	goto	l6328
  6102  00123E                     u5340:
  6103  00123E                     
  6104                           ; BSR set to: 0
  6105  00123E  51BC               	movf	___fladd@bexp& (0+255),w,b
  6106  001240  A4D8               	btfss	status,2,c
  6107  001242  EF25  F009         	goto	u5351
  6108  001246  EF27  F009         	goto	u5350
  6109  00124A                     u5351:
  6110  00124A  EF31  F009         	goto	l6310
  6111  00124E                     u5350:
  6112  00124E                     
  6113                           ; BSR set to: 0
  6114  00124E  0E00               	movlw	0
  6115  001250  6FB2               	movwf	?___fladd& (0+255),b
  6116  001252  0E00               	movlw	0
  6117  001254  6FB3               	movwf	(?___fladd+1)& (0+255),b
  6118  001256  0E00               	movlw	0
  6119  001258  6FB4               	movwf	(?___fladd+2)& (0+255),b
  6120  00125A  0E00               	movlw	0
  6121  00125C  6FB5               	movwf	(?___fladd+3)& (0+255),b
  6122  00125E  EF80  F00A         	goto	l1934
  6123  001262                     l6310:
  6124                           
  6125                           ; BSR set to: 0
  6126  001262  51B6               	movf	___fladd@a& (0+255),w,b
  6127  001264  27B2               	addwf	___fladd@b& (0+255),f,b
  6128  001266  51B7               	movf	(___fladd@a+1)& (0+255),w,b
  6129  001268  23B3               	addwfc	(___fladd@b+1)& (0+255),f,b
  6130  00126A  51B8               	movf	(___fladd@a+2)& (0+255),w,b
  6131  00126C  23B4               	addwfc	(___fladd@b+2)& (0+255),f,b
  6132  00126E  51B9               	movf	(___fladd@a+3)& (0+255),w,b
  6133  001270  23B5               	addwfc	(___fladd@b+3)& (0+255),f,b
  6134  001272                     
  6135                           ; BSR set to: 0
  6136  001272  A1B5               	btfss	(___fladd@b+3)& (0+255),0,b
  6137  001274  EF3E  F009         	goto	u5361
  6138  001278  EF40  F009         	goto	u5360
  6139  00127C                     u5361:
  6140  00127C  EFEC  F009         	goto	l6364
  6141  001280                     u5360:
  6142  001280                     
  6143                           ; BSR set to: 0
  6144  001280  A1BD               	btfss	___fladd@grs& (0+255),0,b
  6145  001282  EF45  F009         	goto	u5371
  6146  001286  EF47  F009         	goto	u5370
  6147  00128A                     u5371:
  6148  00128A  EF4D  F009         	goto	l6318
  6149  00128E                     u5370:
  6150  00128E                     
  6151                           ; BSR set to: 0
  6152  00128E  90D8               	bcf	status,0,c
  6153  001290  31BD               	rrcf	___fladd@grs& (0+255),w,b
  6154  001292  0901               	iorlw	1
  6155  001294  6FBD               	movwf	___fladd@grs& (0+255),b
  6156  001296  EF4F  F009         	goto	l6320
  6157  00129A                     l6318:
  6158                           
  6159                           ; BSR set to: 0
  6160  00129A  90D8               	bcf	status,0,c
  6161  00129C  33BD               	rrcf	___fladd@grs& (0+255),f,b
  6162  00129E                     l6320:
  6163                           
  6164                           ; BSR set to: 0
  6165  00129E  A1B2               	btfss	___fladd@b& (0+255),0,b
  6166  0012A0  EF54  F009         	goto	u5381
  6167  0012A4  EF56  F009         	goto	u5380
  6168  0012A8                     u5381:
  6169  0012A8  EF57  F009         	goto	l6324
  6170  0012AC                     u5380:
  6171  0012AC                     
  6172                           ; BSR set to: 0
  6173  0012AC  8FBD               	bsf	___fladd@grs& (0+255),7,b
  6174  0012AE                     l6324:
  6175                           
  6176                           ; BSR set to: 0
  6177  0012AE  35B5               	rlcf	(___fladd@b+3)& (0+255),w,b
  6178  0012B0  33B5               	rrcf	(___fladd@b+3)& (0+255),f,b
  6179  0012B2  33B4               	rrcf	(___fladd@b+2)& (0+255),f,b
  6180  0012B4  33B3               	rrcf	(___fladd@b+1)& (0+255),f,b
  6181  0012B6  33B2               	rrcf	___fladd@b& (0+255),f,b
  6182  0012B8                     
  6183                           ; BSR set to: 0
  6184  0012B8  2BBC               	incf	___fladd@bexp& (0+255),f,b
  6185  0012BA  EFEC  F009         	goto	l6364
  6186  0012BE                     l6328:
  6187                           
  6188                           ; BSR set to: 0
  6189  0012BE  51B6               	movf	___fladd@a& (0+255),w,b
  6190  0012C0  5DB2               	subwf	___fladd@b& (0+255),w,b
  6191  0012C2  51B7               	movf	(___fladd@a+1)& (0+255),w,b
  6192  0012C4  59B3               	subwfb	(___fladd@b+1)& (0+255),w,b
  6193  0012C6  51B8               	movf	(___fladd@a+2)& (0+255),w,b
  6194  0012C8  59B4               	subwfb	(___fladd@b+2)& (0+255),w,b
  6195  0012CA  51B5               	movf	(___fladd@b+3)& (0+255),w,b
  6196  0012CC  0A80               	xorlw	128
  6197  0012CE  6E36               	movwf	??___fladd^0,c
  6198  0012D0  51B9               	movf	(___fladd@a+3)& (0+255),w,b
  6199  0012D2  0A80               	xorlw	128
  6200  0012D4  5836               	subwfb	??___fladd^0,w,c
  6201  0012D6  B0D8               	btfsc	status,0,c
  6202  0012D8  EF70  F009         	goto	u5391
  6203  0012DC  EF72  F009         	goto	u5390
  6204  0012E0                     u5391:
  6205  0012E0  EF9D  F009         	goto	l6338
  6206  0012E4                     u5390:
  6207  0012E4                     
  6208                           ; BSR set to: 0
  6209  0012E4  51B2               	movf	___fladd@b& (0+255),w,b
  6210  0012E6  5DB6               	subwf	___fladd@a& (0+255),w,b
  6211  0012E8  6E36               	movwf	??___fladd^0,c
  6212  0012EA  51B3               	movf	(___fladd@b+1)& (0+255),w,b
  6213  0012EC  59B7               	subwfb	(___fladd@a+1)& (0+255),w,b
  6214  0012EE  6E37               	movwf	(??___fladd+1)^0,c
  6215  0012F0  51B4               	movf	(___fladd@b+2)& (0+255),w,b
  6216  0012F2  59B8               	subwfb	(___fladd@a+2)& (0+255),w,b
  6217  0012F4  6E38               	movwf	(??___fladd+2)^0,c
  6218  0012F6  51B5               	movf	(___fladd@b+3)& (0+255),w,b
  6219  0012F8  59B9               	subwfb	(___fladd@a+3)& (0+255),w,b
  6220  0012FA  6E39               	movwf	(??___fladd+3)^0,c
  6221  0012FC  0EFF               	movlw	255
  6222  0012FE  2436               	addwf	??___fladd^0,w,c
  6223  001300  6FB2               	movwf	___fladd@b& (0+255),b
  6224  001302  0EFF               	movlw	255
  6225  001304  2037               	addwfc	(??___fladd+1)^0,w,c
  6226  001306  6FB3               	movwf	(___fladd@b+1)& (0+255),b
  6227  001308  0EFF               	movlw	255
  6228  00130A  2038               	addwfc	(??___fladd+2)^0,w,c
  6229  00130C  6FB4               	movwf	(___fladd@b+2)& (0+255),b
  6230  00130E  0EFF               	movlw	255
  6231  001310  2039               	addwfc	(??___fladd+3)^0,w,c
  6232  001312  6FB5               	movwf	(___fladd@b+3)& (0+255),b
  6233  001314  0E80               	movlw	128
  6234  001316  1BBA               	xorwf	___fladd@signs& (0+255),f,b
  6235  001318                     
  6236                           ; BSR set to: 0
  6237  001318  6DBD               	negf	___fladd@grs& (0+255),b
  6238  00131A                     
  6239                           ; BSR set to: 0
  6240  00131A  51BD               	movf	___fladd@grs& (0+255),w,b
  6241  00131C  A4D8               	btfss	status,2,c
  6242  00131E  EF93  F009         	goto	u5401
  6243  001322  EF95  F009         	goto	u5400
  6244  001326                     u5401:
  6245  001326  EFA5  F009         	goto	l1942
  6246  00132A                     u5400:
  6247  00132A                     
  6248                           ; BSR set to: 0
  6249  00132A  0E01               	movlw	1
  6250  00132C  27B2               	addwf	___fladd@b& (0+255),f,b
  6251  00132E  0E00               	movlw	0
  6252  001330  23B3               	addwfc	(___fladd@b+1)& (0+255),f,b
  6253  001332  23B4               	addwfc	(___fladd@b+2)& (0+255),f,b
  6254  001334  23B5               	addwfc	(___fladd@b+3)& (0+255),f,b
  6255  001336  EFA5  F009         	goto	l1942
  6256  00133A                     l6338:
  6257                           
  6258                           ; BSR set to: 0
  6259  00133A  51B6               	movf	___fladd@a& (0+255),w,b
  6260  00133C  5FB2               	subwf	___fladd@b& (0+255),f,b
  6261  00133E  51B7               	movf	(___fladd@a+1)& (0+255),w,b
  6262  001340  5BB3               	subwfb	(___fladd@b+1)& (0+255),f,b
  6263  001342  51B8               	movf	(___fladd@a+2)& (0+255),w,b
  6264  001344  5BB4               	subwfb	(___fladd@b+2)& (0+255),f,b
  6265  001346  51B9               	movf	(___fladd@a+3)& (0+255),w,b
  6266  001348  5BB5               	subwfb	(___fladd@b+3)& (0+255),f,b
  6267  00134A                     l1942:
  6268                           
  6269                           ; BSR set to: 0
  6270  00134A  51B2               	movf	___fladd@b& (0+255),w,b
  6271  00134C  11B3               	iorwf	(___fladd@b+1)& (0+255),w,b
  6272  00134E  11B4               	iorwf	(___fladd@b+2)& (0+255),w,b
  6273  001350  11B5               	iorwf	(___fladd@b+3)& (0+255),w,b
  6274  001352  A4D8               	btfss	status,2,c
  6275  001354  EFAE  F009         	goto	u5411
  6276  001358  EFB0  F009         	goto	u5410
  6277  00135C                     u5411:
  6278  00135C  EFE5  F009         	goto	l6362
  6279  001360                     u5410:
  6280  001360                     
  6281                           ; BSR set to: 0
  6282  001360  51BD               	movf	___fladd@grs& (0+255),w,b
  6283  001362  A4D8               	btfss	status,2,c
  6284  001364  EFB6  F009         	goto	u5421
  6285  001368  EFB8  F009         	goto	u5420
  6286  00136C                     u5421:
  6287  00136C  EFE5  F009         	goto	l6362
  6288  001370                     u5420:
  6289  001370                     
  6290                           ; BSR set to: 0
  6291  001370  0E00               	movlw	0
  6292  001372  6FB2               	movwf	?___fladd& (0+255),b
  6293  001374  0E00               	movlw	0
  6294  001376  6FB3               	movwf	(?___fladd+1)& (0+255),b
  6295  001378  0E00               	movlw	0
  6296  00137A  6FB4               	movwf	(?___fladd+2)& (0+255),b
  6297  00137C  0E00               	movlw	0
  6298  00137E  6FB5               	movwf	(?___fladd+3)& (0+255),b
  6299  001380  EF80  F00A         	goto	l1934
  6300  001384                     l6346:
  6301                           
  6302                           ; BSR set to: 0
  6303  001384  90D8               	bcf	status,0,c
  6304  001386  37B2               	rlcf	___fladd@b& (0+255),f,b
  6305  001388  37B3               	rlcf	(___fladd@b+1)& (0+255),f,b
  6306  00138A  37B4               	rlcf	(___fladd@b+2)& (0+255),f,b
  6307  00138C  37B5               	rlcf	(___fladd@b+3)& (0+255),f,b
  6308  00138E                     
  6309                           ; BSR set to: 0
  6310  00138E  AFBD               	btfss	___fladd@grs& (0+255),7,b
  6311  001390  EFCC  F009         	goto	u5431
  6312  001394  EFCE  F009         	goto	u5430
  6313  001398                     u5431:
  6314  001398  EFCF  F009         	goto	l6352
  6315  00139C                     u5430:
  6316  00139C                     
  6317                           ; BSR set to: 0
  6318  00139C  81B2               	bsf	___fladd@b& (0+255),0,b
  6319  00139E                     l6352:
  6320                           
  6321                           ; BSR set to: 0
  6322  00139E  A1BD               	btfss	___fladd@grs& (0+255),0,b
  6323  0013A0  EFD4  F009         	goto	u5441
  6324  0013A4  EFD6  F009         	goto	u5440
  6325  0013A8                     u5441:
  6326  0013A8  EFDA  F009         	goto	l6356
  6327  0013AC                     u5440:
  6328  0013AC                     
  6329                           ; BSR set to: 0
  6330  0013AC  80D8               	bsf	status,0,c
  6331  0013AE  37BD               	rlcf	___fladd@grs& (0+255),f,b
  6332  0013B0  EFDC  F009         	goto	l6358
  6333  0013B4                     l6356:
  6334                           
  6335                           ; BSR set to: 0
  6336  0013B4  90D8               	bcf	status,0,c
  6337  0013B6  37BD               	rlcf	___fladd@grs& (0+255),f,b
  6338  0013B8                     l6358:
  6339                           
  6340                           ; BSR set to: 0
  6341  0013B8  51BC               	movf	___fladd@bexp& (0+255),w,b
  6342  0013BA  B4D8               	btfsc	status,2,c
  6343  0013BC  EFE2  F009         	goto	u5451
  6344  0013C0  EFE4  F009         	goto	u5450
  6345  0013C4                     u5451:
  6346  0013C4  EFE5  F009         	goto	l6362
  6347  0013C8                     u5450:
  6348  0013C8                     
  6349                           ; BSR set to: 0
  6350  0013C8  07BC               	decf	___fladd@bexp& (0+255),f,b
  6351  0013CA                     l6362:
  6352                           
  6353                           ; BSR set to: 0
  6354  0013CA  AFB4               	btfss	(___fladd@b+2)& (0+255),7,b
  6355  0013CC  EFEA  F009         	goto	u5461
  6356  0013D0  EFEC  F009         	goto	u5460
  6357  0013D4                     u5461:
  6358  0013D4  EFC2  F009         	goto	l6346
  6359  0013D8                     u5460:
  6360  0013D8                     l6364:
  6361                           
  6362                           ; BSR set to: 0
  6363  0013D8  0E00               	movlw	0
  6364  0013DA  6FBB               	movwf	___fladd@aexp& (0+255),b
  6365  0013DC                     
  6366                           ; BSR set to: 0
  6367  0013DC  AFBD               	btfss	___fladd@grs& (0+255),7,b
  6368  0013DE  EFF3  F009         	goto	u5471
  6369  0013E2  EFF5  F009         	goto	u5470
  6370  0013E6                     u5471:
  6371  0013E6  EF0D  F00A         	goto	l1951
  6372  0013EA                     u5470:
  6373  0013EA                     
  6374                           ; BSR set to: 0
  6375  0013EA  C0BD  F036         	movff	___fladd@grs,??___fladd
  6376  0013EE  0E7F               	movlw	127
  6377  0013F0  1636               	andwf	??___fladd^0,f,c
  6378  0013F2  B4D8               	btfsc	status,2,c
  6379  0013F4  EFFE  F009         	goto	u5481
  6380  0013F8  EF00  F00A         	goto	u5480
  6381  0013FC                     u5481:
  6382  0013FC  EF04  F00A         	goto	l1952
  6383  001400                     u5480:
  6384  001400                     l6370:
  6385                           
  6386                           ; BSR set to: 0
  6387  001400  0E01               	movlw	1
  6388  001402  6FBB               	movwf	___fladd@aexp& (0+255),b
  6389  001404  EF0D  F00A         	goto	l1951
  6390  001408                     l1952:
  6391                           
  6392                           ; BSR set to: 0
  6393  001408  A1B2               	btfss	___fladd@b& (0+255),0,b
  6394  00140A  EF09  F00A         	goto	u5491
  6395  00140E  EF0B  F00A         	goto	u5490
  6396  001412                     u5491:
  6397  001412  EF0D  F00A         	goto	l1951
  6398  001416                     u5490:
  6399  001416  EF00  F00A         	goto	l6370
  6400  00141A                     l1951:
  6401                           
  6402                           ; BSR set to: 0
  6403  00141A  51BB               	movf	___fladd@aexp& (0+255),w,b
  6404  00141C  B4D8               	btfsc	status,2,c
  6405  00141E  EF13  F00A         	goto	u5501
  6406  001422  EF15  F00A         	goto	u5500
  6407  001426                     u5501:
  6408  001426  EF40  F00A         	goto	l6382
  6409  00142A                     u5500:
  6410  00142A                     
  6411                           ; BSR set to: 0
  6412  00142A  0E01               	movlw	1
  6413  00142C  27B2               	addwf	___fladd@b& (0+255),f,b
  6414  00142E  0E00               	movlw	0
  6415  001430  23B3               	addwfc	(___fladd@b+1)& (0+255),f,b
  6416  001432  23B4               	addwfc	(___fladd@b+2)& (0+255),f,b
  6417  001434  23B5               	addwfc	(___fladd@b+3)& (0+255),f,b
  6418  001436                     
  6419                           ; BSR set to: 0
  6420  001436  A1B5               	btfss	(___fladd@b+3)& (0+255),0,b
  6421  001438  EF20  F00A         	goto	u5511
  6422  00143C  EF22  F00A         	goto	u5510
  6423  001440                     u5511:
  6424  001440  EF40  F00A         	goto	l6382
  6425  001444                     u5510:
  6426  001444                     
  6427                           ; BSR set to: 0
  6428  001444  C0B2  F036         	movff	___fladd@b,??___fladd
  6429  001448  C0B3  F037         	movff	___fladd@b+1,??___fladd+1
  6430  00144C  C0B4  F038         	movff	___fladd@b+2,??___fladd+2
  6431  001450  C0B5  F039         	movff	___fladd@b+3,??___fladd+3
  6432  001454  3439               	rlcf	(??___fladd+3)^0,w,c
  6433  001456  3239               	rrcf	(??___fladd+3)^0,f,c
  6434  001458  3238               	rrcf	(??___fladd+2)^0,f,c
  6435  00145A  3237               	rrcf	(??___fladd+1)^0,f,c
  6436  00145C  3236               	rrcf	??___fladd^0,f,c
  6437  00145E  C036  F0B2         	movff	??___fladd,___fladd@b
  6438  001462  C037  F0B3         	movff	??___fladd+1,___fladd@b+1
  6439  001466  C038  F0B4         	movff	??___fladd+2,___fladd@b+2
  6440  00146A  C039  F0B5         	movff	??___fladd+3,___fladd@b+3
  6441  00146E  29BC               	incf	___fladd@bexp& (0+255),w,b
  6442  001470  B4D8               	btfsc	status,2,c
  6443  001472  EF3D  F00A         	goto	u5521
  6444  001476  EF3F  F00A         	goto	u5520
  6445  00147A                     u5521:
  6446  00147A  EF40  F00A         	goto	l6382
  6447  00147E                     u5520:
  6448  00147E                     
  6449                           ; BSR set to: 0
  6450  00147E  2BBC               	incf	___fladd@bexp& (0+255),f,b
  6451  001480                     l6382:
  6452                           
  6453                           ; BSR set to: 0
  6454  001480  29BC               	incf	___fladd@bexp& (0+255),w,b
  6455  001482  B4D8               	btfsc	status,2,c
  6456  001484  EF46  F00A         	goto	u5531
  6457  001488  EF48  F00A         	goto	u5530
  6458  00148C                     u5531:
  6459  00148C  EF50  F00A         	goto	l6386
  6460  001490                     u5530:
  6461  001490                     
  6462                           ; BSR set to: 0
  6463  001490  51BC               	movf	___fladd@bexp& (0+255),w,b
  6464  001492  A4D8               	btfss	status,2,c
  6465  001494  EF4E  F00A         	goto	u5541
  6466  001498  EF50  F00A         	goto	u5540
  6467  00149C                     u5541:
  6468  00149C  EF62  F00A         	goto	l6390
  6469  0014A0                     u5540:
  6470  0014A0                     l6386:
  6471                           
  6472                           ; BSR set to: 0
  6473  0014A0  0E00               	movlw	0
  6474  0014A2  6FB2               	movwf	___fladd@b& (0+255),b
  6475  0014A4  0E00               	movlw	0
  6476  0014A6  6FB3               	movwf	(___fladd@b+1)& (0+255),b
  6477  0014A8  0E00               	movlw	0
  6478  0014AA  6FB4               	movwf	(___fladd@b+2)& (0+255),b
  6479  0014AC  0E00               	movlw	0
  6480  0014AE  6FB5               	movwf	(___fladd@b+3)& (0+255),b
  6481  0014B0  51BC               	movf	___fladd@bexp& (0+255),w,b
  6482  0014B2  A4D8               	btfss	status,2,c
  6483  0014B4  EF5E  F00A         	goto	u5551
  6484  0014B8  EF60  F00A         	goto	u5550
  6485  0014BC                     u5551:
  6486  0014BC  EF62  F00A         	goto	l6390
  6487  0014C0                     u5550:
  6488  0014C0                     
  6489                           ; BSR set to: 0
  6490  0014C0  0E00               	movlw	0
  6491  0014C2  6FBA               	movwf	___fladd@signs& (0+255),b
  6492  0014C4                     l6390:
  6493                           
  6494                           ; BSR set to: 0
  6495  0014C4  A1BC               	btfss	___fladd@bexp& (0+255),0,b
  6496  0014C6  EF67  F00A         	goto	u5561
  6497  0014CA  EF69  F00A         	goto	u5560
  6498  0014CE                     u5561:
  6499  0014CE  EF6C  F00A         	goto	l6394
  6500  0014D2                     u5560:
  6501  0014D2                     
  6502                           ; BSR set to: 0
  6503  0014D2  8FB4               	bsf	(___fladd@b+2)& (0+255),7,b
  6504  0014D4  EF6D  F00A         	goto	l6396
  6505  0014D8                     l6394:
  6506                           
  6507                           ; BSR set to: 0
  6508  0014D8  9FB4               	bcf	(___fladd@b+2)& (0+255),7,b
  6509  0014DA                     l6396:
  6510                           
  6511                           ; BSR set to: 0
  6512  0014DA  90D8               	bcf	status,0,c
  6513  0014DC  31BC               	rrcf	___fladd@bexp& (0+255),w,b
  6514  0014DE  6FB5               	movwf	(___fladd@b+3)& (0+255),b
  6515  0014E0                     
  6516                           ; BSR set to: 0
  6517  0014E0  AFBA               	btfss	___fladd@signs& (0+255),7,b
  6518  0014E2  EF75  F00A         	goto	u5571
  6519  0014E6  EF77  F00A         	goto	u5570
  6520  0014EA                     u5571:
  6521  0014EA  EF78  F00A         	goto	l6402
  6522  0014EE                     u5570:
  6523  0014EE                     
  6524                           ; BSR set to: 0
  6525  0014EE  8FB5               	bsf	(___fladd@b+3)& (0+255),7,b
  6526  0014F0                     l6402:
  6527                           
  6528                           ; BSR set to: 0
  6529  0014F0  C0B2  F0B2         	movff	___fladd@b,?___fladd
  6530  0014F4  C0B3  F0B3         	movff	___fladd@b+1,?___fladd+1
  6531  0014F8  C0B4  F0B4         	movff	___fladd@b+2,?___fladd+2
  6532  0014FC  C0B5  F0B5         	movff	___fladd@b+3,?___fladd+3
  6533  001500                     l1934:
  6534                           
  6535                           ; BSR set to: 0
  6536  001500  0012               	return		;funcret
  6537  001502                     __end_of___fladd:
  6538                           	callstack 0
  6539                           
  6540 ;; *************** function _calcMotorPow *****************
  6541 ;; Defined at:
  6542 ;;		line 343 in file "main.c"
  6543 ;; Parameters:    Size  Location     Type
  6544 ;;		None
  6545 ;; Auto vars:     Size  Location     Type
  6546 ;;  oldSpeedDelt    2   39[BANK0 ] short 
  6547 ;;  setSpeedDelt    2   37[BANK0 ] short 
  6548 ;;  addMPow         1   41[BANK0 ] char 
  6549 ;; Return value:  Size  Location     Type
  6550 ;;                  1    wreg      void 
  6551 ;; Registers used:
  6552 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6553 ;; Tracked objects:
  6554 ;;		On entry : 0/0
  6555 ;;		On exit  : 0/0
  6556 ;;		Unchanged: 0/0
  6557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6559 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6560 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6561 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6562 ;;Total ram usage:        7 bytes
  6563 ;; Hardware stack levels used: 1
  6564 ;; Hardware stack levels required when called: 10
  6565 ;; This function calls:
  6566 ;;		___awdiv
  6567 ;;		___flmul
  6568 ;;		___fltol
  6569 ;;		___xxtofl
  6570 ;;		_actSpeed
  6571 ;;		_setMotor
  6572 ;; This function is called by:
  6573 ;;		_loop
  6574 ;; This function uses a non-reentrant model
  6575 ;;
  6576                           
  6577                           	psect	text27
  6578  002B2A                     __ptext27:
  6579                           	callstack 0
  6580  002B2A                     _calcMotorPow:
  6581                           	callstack 19
  6582  002B2A                     
  6583                           ;main.c: 344:     currentSpeed = actSpeed();
  6584  002B2A  EC75  F01B         	call	_actSpeed	;wreg free
  6585  002B2E  C022  F08C         	movff	?_actSpeed,_currentSpeed
  6586  002B32  C023  F08D         	movff	?_actSpeed+1,_currentSpeed+1
  6587  002B36                     
  6588                           ;main.c: 346:     int16_t setSpeedDelta = setSpeed - currentSpeed;
  6589  002B36  0100               	movlb	0	; () banked
  6590  002B38  518C               	movf	_currentSpeed& (0+255),w,b
  6591  002B3A  5D8E               	subwf	_setSpeed& (0+255),w,b
  6592  002B3C  6FCA               	movwf	calcMotorPow@setSpeedDelta& (0+255),b
  6593  002B3E  518D               	movf	(_currentSpeed+1)& (0+255),w,b
  6594  002B40  598F               	subwfb	(_setSpeed+1)& (0+255),w,b
  6595  002B42  6FCB               	movwf	(calcMotorPow@setSpeedDelta+1)& (0+255),b
  6596  002B44                     
  6597                           ; BSR set to: 0
  6598                           ;main.c: 347:     int16_t oldSpeedDelta = currentSpeed - oldSpeed;
  6599  002B44  518A               	movf	_oldSpeed& (0+255),w,b
  6600  002B46  5D8C               	subwf	_currentSpeed& (0+255),w,b
  6601  002B48  6FCC               	movwf	calcMotorPow@oldSpeedDelta& (0+255),b
  6602  002B4A  518B               	movf	(_oldSpeed+1)& (0+255),w,b
  6603  002B4C  598D               	subwfb	(_currentSpeed+1)& (0+255),w,b
  6604  002B4E  6FCD               	movwf	(calcMotorPow@oldSpeedDelta+1)& (0+255),b
  6605  002B50                     
  6606                           ; BSR set to: 0
  6607                           ;main.c: 353:     addMPow = (int8_t) ((0.020) * (setSpeedDelta - (oldSpeedDelta / (2))))
      +                          ;
  6608  002B50  0E0A               	movlw	10
  6609  002B52  6E2E               	movwf	___flmul@a^0,c
  6610  002B54  0ED7               	movlw	215
  6611  002B56  6E2F               	movwf	(___flmul@a+1)^0,c
  6612  002B58  0EA3               	movlw	163
  6613  002B5A  6E30               	movwf	(___flmul@a+2)^0,c
  6614  002B5C  0E3C               	movlw	60
  6615  002B5E  6E31               	movwf	(___flmul@a+3)^0,c
  6616  002B60  0E00               	movlw	0
  6617  002B62  6E17               	movwf	(___awdiv@divisor+1)^0,c
  6618  002B64  0E02               	movlw	2
  6619  002B66  6E16               	movwf	___awdiv@divisor^0,c
  6620  002B68  C0CC  F014         	movff	calcMotorPow@oldSpeedDelta,___awdiv@dividend
  6621  002B6C  C0CD  F015         	movff	calcMotorPow@oldSpeedDelta+1,___awdiv@dividend+1
  6622  002B70  ECB5  F019         	call	___awdiv	;wreg free
  6623  002B74  C0CA  F0C8         	movff	calcMotorPow@setSpeedDelta,??_calcMotorPow
  6624  002B78  C0CB  F0C9         	movff	calcMotorPow@setSpeedDelta+1,??_calcMotorPow+1
  6625  002B7C  5014               	movf	?___awdiv^0,w,c
  6626  002B7E  0100               	movlb	0	; () banked
  6627  002B80  5FC8               	subwf	??_calcMotorPow& (0+255),f,b
  6628  002B82  5015               	movf	(?___awdiv+1)^0,w,c
  6629  002B84  5BC9               	subwfb	(??_calcMotorPow+1)& (0+255),f,b
  6630  002B86  C0C8  F01C         	movff	??_calcMotorPow,___xxtofl@val
  6631  002B8A  C0C9  F01D         	movff	??_calcMotorPow+1,___xxtofl@val+1
  6632  002B8E  0E00               	movlw	0
  6633  002B90  BE1D               	btfsc	(___xxtofl@val+1)^0,7,c
  6634  002B92  0EFF               	movlw	-1
  6635  002B94  6E1E               	movwf	(___xxtofl@val+2)^0,c
  6636  002B96  6E1F               	movwf	(___xxtofl@val+3)^0,c
  6637  002B98  0E01               	movlw	1
  6638  002B9A  EC73  F012         	call	___xxtofl
  6639  002B9E  C01C  F02A         	movff	?___xxtofl,___flmul@b
  6640  002BA2  C01D  F02B         	movff	?___xxtofl+1,___flmul@b+1
  6641  002BA6  C01E  F02C         	movff	?___xxtofl+2,___flmul@b+2
  6642  002BAA  C01F  F02D         	movff	?___xxtofl+3,___flmul@b+3
  6643  002BAE  EC81  F00A         	call	___flmul	;wreg free
  6644  002BB2  C02A  F0BE         	movff	?___flmul,___fltol@f1
  6645  002BB6  C02B  F0BF         	movff	?___flmul+1,___fltol@f1+1
  6646  002BBA  C02C  F0C0         	movff	?___flmul+2,___fltol@f1+2
  6647  002BBE  C02D  F0C1         	movff	?___flmul+3,___fltol@f1+3
  6648  002BC2  EC5D  F017         	call	___fltol	;wreg free
  6649  002BC6  0100               	movlb	0	; () banked
  6650  002BC8  51BE               	movf	?___fltol& (0+255),w,b
  6651  002BCA  6FCE               	movwf	calcMotorPow@addMPow& (0+255),b
  6652  002BCC                     
  6653                           ; BSR set to: 0
  6654                           ;main.c: 355:     if (addMPow > (5)) {
  6655  002BCC  51CE               	movf	calcMotorPow@addMPow& (0+255),w,b
  6656  002BCE  0A80               	xorlw	128
  6657  002BD0  0F7A               	addlw	-134
  6658  002BD2  A0D8               	btfss	status,0,c
  6659  002BD4  EFEE  F015         	goto	u6121
  6660  002BD8  EFF0  F015         	goto	u6120
  6661  002BDC                     u6121:
  6662  002BDC  EFF4  F015         	goto	l6776
  6663  002BE0                     u6120:
  6664  002BE0                     
  6665                           ; BSR set to: 0
  6666                           ;main.c: 356:         addMPow = (5);
  6667  002BE0  0E05               	movlw	5
  6668  002BE2  6FCE               	movwf	calcMotorPow@addMPow& (0+255),b
  6669                           
  6670                           ;main.c: 357:     } else if (addMPow < -(5)) {
  6671  002BE4  EF00  F016         	goto	l6780
  6672  002BE8                     l6776:
  6673                           
  6674                           ; BSR set to: 0
  6675  002BE8  51CE               	movf	calcMotorPow@addMPow& (0+255),w,b
  6676  002BEA  0A80               	xorlw	128
  6677  002BEC  0F85               	addlw	133
  6678  002BEE  B0D8               	btfsc	status,0,c
  6679  002BF0  EFFC  F015         	goto	u6131
  6680  002BF4  EFFE  F015         	goto	u6130
  6681  002BF8                     u6131:
  6682  002BF8  EF00  F016         	goto	l6780
  6683  002BFC                     u6130:
  6684  002BFC                     
  6685                           ; BSR set to: 0
  6686                           ;main.c: 358:         addMPow = -(5);
  6687  002BFC  0EFB               	movlw	251
  6688  002BFE  6FCE               	movwf	calcMotorPow@addMPow& (0+255),b
  6689  002C00                     l6780:
  6690                           
  6691                           ; BSR set to: 0
  6692                           ;main.c: 361:     actMotorPow += addMPow;
  6693  002C00  51CE               	movf	calcMotorPow@addMPow& (0+255),w,b
  6694  002C02  2788               	addwf	_actMotorPow& (0+255),f,b
  6695  002C04  0E00               	movlw	0
  6696  002C06  BFCE               	btfsc	calcMotorPow@addMPow& (0+255),7,b
  6697  002C08  0EFF               	movlw	255
  6698  002C0A  2389               	addwfc	(_actMotorPow+1)& (0+255),f,b
  6699  002C0C                     
  6700                           ; BSR set to: 0
  6701                           ;main.c: 363:     if (actMotorPow > (700)) {
  6702  002C0C  BF89               	btfsc	(_actMotorPow+1)& (0+255),7,b
  6703  002C0E  EF12  F016         	goto	u6141
  6704  002C12  0EBD               	movlw	189
  6705  002C14  5D88               	subwf	_actMotorPow& (0+255),w,b
  6706  002C16  0E02               	movlw	2
  6707  002C18  5989               	subwfb	(_actMotorPow+1)& (0+255),w,b
  6708  002C1A  A0D8               	btfss	status,0,c
  6709  002C1C  EF12  F016         	goto	u6141
  6710  002C20  EF14  F016         	goto	u6140
  6711  002C24                     u6141:
  6712  002C24  EF1A  F016         	goto	l6786
  6713  002C28                     u6140:
  6714  002C28                     
  6715                           ; BSR set to: 0
  6716                           ;main.c: 364:         actMotorPow = (700);
  6717  002C28  0E02               	movlw	2
  6718  002C2A  6F89               	movwf	(_actMotorPow+1)& (0+255),b
  6719  002C2C  0EBC               	movlw	188
  6720  002C2E  6F88               	movwf	_actMotorPow& (0+255),b
  6721                           
  6722                           ;main.c: 365:     } else if (actMotorPow < (-400)) {
  6723  002C30  EF2C  F016         	goto	l6790
  6724  002C34                     l6786:
  6725                           
  6726                           ; BSR set to: 0
  6727  002C34  AF89               	btfss	(_actMotorPow+1)& (0+255),7,b
  6728  002C36  EF26  F016         	goto	u6151
  6729  002C3A  0E70               	movlw	112
  6730  002C3C  5D88               	subwf	_actMotorPow& (0+255),w,b
  6731  002C3E  0EFE               	movlw	254
  6732  002C40  5989               	subwfb	(_actMotorPow+1)& (0+255),w,b
  6733  002C42  B0D8               	btfsc	status,0,c
  6734  002C44  EF26  F016         	goto	u6151
  6735  002C48  EF28  F016         	goto	u6150
  6736  002C4C                     u6151:
  6737  002C4C  EF2C  F016         	goto	l6790
  6738  002C50                     u6150:
  6739  002C50                     
  6740                           ; BSR set to: 0
  6741                           ;main.c: 366:         actMotorPow = (-400);
  6742  002C50  0EFE               	movlw	254
  6743  002C52  6F89               	movwf	(_actMotorPow+1)& (0+255),b
  6744  002C54  0E70               	movlw	112
  6745  002C56  6F88               	movwf	_actMotorPow& (0+255),b
  6746  002C58                     l6790:
  6747                           
  6748                           ; BSR set to: 0
  6749                           ;main.c: 369:     setMotor(actMotorPow);
  6750  002C58  C088  F018         	movff	_actMotorPow,setMotor@motorPower
  6751  002C5C  C089  F019         	movff	_actMotorPow+1,setMotor@motorPower+1
  6752  002C60  ECDF  F018         	call	_setMotor	;wreg free
  6753  002C64                     
  6754                           ;main.c: 371:     oldSpeed = currentSpeed;
  6755  002C64  C08C  F08A         	movff	_currentSpeed,_oldSpeed
  6756  002C68  C08D  F08B         	movff	_currentSpeed+1,_oldSpeed+1
  6757  002C6C  0012               	return		;funcret
  6758  002C6E                     __end_of_calcMotorPow:
  6759                           	callstack 0
  6760                           
  6761 ;; *************** function _setMotor *****************
  6762 ;; Defined at:
  6763 ;;		line 374 in file "main.c"
  6764 ;; Parameters:    Size  Location     Type
  6765 ;;  motorPower      2   23[COMRAM] short 
  6766 ;; Auto vars:     Size  Location     Type
  6767 ;;		None
  6768 ;; Return value:  Size  Location     Type
  6769 ;;                  1    wreg      void 
  6770 ;; Registers used:
  6771 ;;		wreg, status,2, status,0, cstack
  6772 ;; Tracked objects:
  6773 ;;		On entry : 0/0
  6774 ;;		On exit  : 0/0
  6775 ;;		Unchanged: 0/0
  6776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6777 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6779 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6780 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6781 ;;Total ram usage:        4 bytes
  6782 ;; Hardware stack levels used: 1
  6783 ;; Hardware stack levels required when called: 9
  6784 ;; This function calls:
  6785 ;;		_PWM7_LoadDutyValue
  6786 ;;		_PWM8_LoadDutyValue
  6787 ;; This function is called by:
  6788 ;;		_loop
  6789 ;;		_calcMotorPow
  6790 ;;		_startAccell
  6791 ;; This function uses a non-reentrant model
  6792 ;;
  6793                           
  6794                           	psect	text28
  6795  0031BE                     __ptext28:
  6796                           	callstack 0
  6797  0031BE                     _setMotor:
  6798                           	callstack 20
  6799  0031BE                     
  6800                           ;main.c: 375:     if (motorPower >= (40)) {
  6801  0031BE  BE19               	btfsc	(setMotor@motorPower+1)^0,7,c
  6802  0031C0  EFEB  F018         	goto	u3041
  6803  0031C4  5019               	movf	(setMotor@motorPower+1)^0,w,c
  6804  0031C6  E109               	bnz	u3040
  6805  0031C8  0E28               	movlw	40
  6806  0031CA  5C18               	subwf	setMotor@motorPower^0,w,c
  6807  0031CC  A0D8               	btfss	status,0,c
  6808  0031CE  EFEB  F018         	goto	u3041
  6809  0031D2  EFED  F018         	goto	u3040
  6810  0031D6                     u3041:
  6811  0031D6  EF0D  F019         	goto	l4648
  6812  0031DA                     u3040:
  6813  0031DA                     
  6814                           ;main.c: 376:         if (motorPower > (700)) {
  6815  0031DA  BE19               	btfsc	(setMotor@motorPower+1)^0,7,c
  6816  0031DC  EFF9  F018         	goto	u3051
  6817  0031E0  0EBD               	movlw	189
  6818  0031E2  5C18               	subwf	setMotor@motorPower^0,w,c
  6819  0031E4  0E02               	movlw	2
  6820  0031E6  5819               	subwfb	(setMotor@motorPower+1)^0,w,c
  6821  0031E8  A0D8               	btfss	status,0,c
  6822  0031EA  EFF9  F018         	goto	u3051
  6823  0031EE  EFFB  F018         	goto	u3050
  6824  0031F2                     u3051:
  6825  0031F2  EFFF  F018         	goto	l4644
  6826  0031F6                     u3050:
  6827  0031F6                     
  6828                           ;main.c: 377:             motorPower = (700);
  6829  0031F6  0E02               	movlw	2
  6830  0031F8  6E19               	movwf	(setMotor@motorPower+1)^0,c
  6831  0031FA  0EBC               	movlw	188
  6832  0031FC  6E18               	movwf	setMotor@motorPower^0,c
  6833  0031FE                     l4644:
  6834                           
  6835                           ;main.c: 379:         PWM7_LoadDutyValue((uint16_t) (motorPower));
  6836  0031FE  C018  F014         	movff	setMotor@motorPower,PWM7_LoadDutyValue@dutyValue
  6837  003202  C019  F015         	movff	setMotor@motorPower+1,PWM7_LoadDutyValue@dutyValue+1
  6838  003206  ECC4  F01E         	call	_PWM7_LoadDutyValue	;wreg free
  6839  00320A                     
  6840                           ;main.c: 380:         PWM8_LoadDutyValue(0);
  6841  00320A  0E00               	movlw	0
  6842  00320C  6E15               	movwf	(PWM8_LoadDutyValue@dutyValue+1)^0,c
  6843  00320E  0E00               	movlw	0
  6844  003210  6E14               	movwf	PWM8_LoadDutyValue@dutyValue^0,c
  6845  003212  ECAA  F01E         	call	_PWM8_LoadDutyValue	;wreg free
  6846                           
  6847                           ;main.c: 381:     } else if (motorPower <= -(40)) {
  6848  003216  EF4F  F019         	goto	l1377
  6849  00321A                     l4648:
  6850  00321A  AE19               	btfss	(setMotor@motorPower+1)^0,7,c
  6851  00321C  EF19  F019         	goto	u3061
  6852  003220  0ED9               	movlw	217
  6853  003222  5C18               	subwf	setMotor@motorPower^0,w,c
  6854  003224  0EFF               	movlw	255
  6855  003226  5819               	subwfb	(setMotor@motorPower+1)^0,w,c
  6856  003228  B0D8               	btfsc	status,0,c
  6857  00322A  EF19  F019         	goto	u3061
  6858  00322E  EF1B  F019         	goto	u3060
  6859  003232                     u3061:
  6860  003232  EF43  F019         	goto	l4658
  6861  003236                     u3060:
  6862  003236                     
  6863                           ;main.c: 382:         if (motorPower < (-400)) {
  6864  003236  AE19               	btfss	(setMotor@motorPower+1)^0,7,c
  6865  003238  EF27  F019         	goto	u3071
  6866  00323C  0E70               	movlw	112
  6867  00323E  5C18               	subwf	setMotor@motorPower^0,w,c
  6868  003240  0EFE               	movlw	254
  6869  003242  5819               	subwfb	(setMotor@motorPower+1)^0,w,c
  6870  003244  B0D8               	btfsc	status,0,c
  6871  003246  EF27  F019         	goto	u3071
  6872  00324A  EF29  F019         	goto	u3070
  6873  00324E                     u3071:
  6874  00324E  EF2D  F019         	goto	l4654
  6875  003252                     u3070:
  6876  003252                     
  6877                           ;main.c: 383:             motorPower = (-400);
  6878  003252  0EFE               	movlw	254
  6879  003254  6E19               	movwf	(setMotor@motorPower+1)^0,c
  6880  003256  0E70               	movlw	112
  6881  003258  6E18               	movwf	setMotor@motorPower^0,c
  6882  00325A                     l4654:
  6883                           
  6884                           ;main.c: 385:         PWM7_LoadDutyValue(0);
  6885  00325A  0E00               	movlw	0
  6886  00325C  6E15               	movwf	(PWM7_LoadDutyValue@dutyValue+1)^0,c
  6887  00325E  0E00               	movlw	0
  6888  003260  6E14               	movwf	PWM7_LoadDutyValue@dutyValue^0,c
  6889  003262  ECC4  F01E         	call	_PWM7_LoadDutyValue	;wreg free
  6890  003266                     
  6891                           ;main.c: 386:         PWM8_LoadDutyValue((uint16_t) (-motorPower));
  6892  003266  C018  F01A         	movff	setMotor@motorPower,??_setMotor
  6893  00326A  C019  F01B         	movff	setMotor@motorPower+1,??_setMotor+1
  6894  00326E  1E1A               	comf	??_setMotor^0,f,c
  6895  003270  1E1B               	comf	(??_setMotor+1)^0,f,c
  6896  003272  4A1A               	infsnz	??_setMotor^0,f,c
  6897  003274  2A1B               	incf	(??_setMotor+1)^0,f,c
  6898  003276  C01A  F014         	movff	??_setMotor,PWM8_LoadDutyValue@dutyValue
  6899  00327A  C01B  F015         	movff	??_setMotor+1,PWM8_LoadDutyValue@dutyValue+1
  6900  00327E  ECAA  F01E         	call	_PWM8_LoadDutyValue	;wreg free
  6901                           
  6902                           ;main.c: 387:     } else {
  6903  003282  EF4F  F019         	goto	l1377
  6904  003286                     l4658:
  6905                           
  6906                           ;main.c: 389:         PWM7_LoadDutyValue(0);
  6907  003286  0E00               	movlw	0
  6908  003288  6E15               	movwf	(PWM7_LoadDutyValue@dutyValue+1)^0,c
  6909  00328A  0E00               	movlw	0
  6910  00328C  6E14               	movwf	PWM7_LoadDutyValue@dutyValue^0,c
  6911  00328E  ECC4  F01E         	call	_PWM7_LoadDutyValue	;wreg free
  6912                           
  6913                           ;main.c: 390:         PWM8_LoadDutyValue(0);
  6914  003292  0E00               	movlw	0
  6915  003294  6E15               	movwf	(PWM8_LoadDutyValue@dutyValue+1)^0,c
  6916  003296  0E00               	movlw	0
  6917  003298  6E14               	movwf	PWM8_LoadDutyValue@dutyValue^0,c
  6918  00329A  ECAA  F01E         	call	_PWM8_LoadDutyValue	;wreg free
  6919  00329E                     l1377:
  6920  00329E  0012               	return		;funcret
  6921  0032A0                     __end_of_setMotor:
  6922                           	callstack 0
  6923                           
  6924 ;; *************** function _PWM8_LoadDutyValue *****************
  6925 ;; Defined at:
  6926 ;;		line 74 in file "mcc_generated_files/pwm8.c"
  6927 ;; Parameters:    Size  Location     Type
  6928 ;;  dutyValue       2   19[COMRAM] unsigned short 
  6929 ;; Auto vars:     Size  Location     Type
  6930 ;;		None
  6931 ;; Return value:  Size  Location     Type
  6932 ;;                  1    wreg      void 
  6933 ;; Registers used:
  6934 ;;		wreg, status,2, status,0
  6935 ;; Tracked objects:
  6936 ;;		On entry : 0/0
  6937 ;;		On exit  : 0/0
  6938 ;;		Unchanged: 0/0
  6939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6940 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6942 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6943 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6944 ;;Total ram usage:        4 bytes
  6945 ;; Hardware stack levels used: 1
  6946 ;; Hardware stack levels required when called: 8
  6947 ;; This function calls:
  6948 ;;		Nothing
  6949 ;; This function is called by:
  6950 ;;		_setMotor
  6951 ;; This function uses a non-reentrant model
  6952 ;;
  6953                           
  6954                           	psect	text29
  6955  003D54                     __ptext29:
  6956                           	callstack 0
  6957  003D54                     _PWM8_LoadDutyValue:
  6958                           	callstack 20
  6959  003D54                     
  6960                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  6961  003D54  C014  F016         	movff	PWM8_LoadDutyValue@dutyValue,??_PWM8_LoadDutyValue
  6962  003D58  C015  F017         	movff	PWM8_LoadDutyValue@dutyValue+1,??_PWM8_LoadDutyValue+1
  6963  003D5C  90D8               	bcf	status,0,c
  6964  003D5E  3217               	rrcf	(??_PWM8_LoadDutyValue+1)^0,f,c
  6965  003D60  3216               	rrcf	??_PWM8_LoadDutyValue^0,f,c
  6966  003D62  90D8               	bcf	status,0,c
  6967  003D64  3217               	rrcf	(??_PWM8_LoadDutyValue+1)^0,f,c
  6968  003D66  3216               	rrcf	??_PWM8_LoadDutyValue^0,f,c
  6969  003D68  5016               	movf	??_PWM8_LoadDutyValue^0,w,c
  6970  003D6A  6E61               	movwf	97,c	;volatile
  6971                           
  6972                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
  6973  003D6C  C014  F016         	movff	PWM8_LoadDutyValue@dutyValue,??_PWM8_LoadDutyValue
  6974  003D70  0E03               	movlw	3
  6975  003D72  1616               	andwf	??_PWM8_LoadDutyValue^0,f,c
  6976  003D74  0E06               	movlw	6
  6977  003D76  6E17               	movwf	(??_PWM8_LoadDutyValue+1)^0,c
  6978  003D78                     u2855:
  6979  003D78  90D8               	bcf	status,0,c
  6980  003D7A  3616               	rlcf	??_PWM8_LoadDutyValue^0,f,c
  6981  003D7C  2E17               	decfsz	(??_PWM8_LoadDutyValue+1)^0,f,c
  6982  003D7E  EFBC  F01E         	goto	u2855
  6983  003D82  5016               	movf	??_PWM8_LoadDutyValue^0,w,c
  6984  003D84  6E60               	movwf	96,c	;volatile
  6985  003D86  0012               	return		;funcret
  6986  003D88                     __end_of_PWM8_LoadDutyValue:
  6987                           	callstack 0
  6988                           
  6989 ;; *************** function _PWM7_LoadDutyValue *****************
  6990 ;; Defined at:
  6991 ;;		line 74 in file "mcc_generated_files/pwm7.c"
  6992 ;; Parameters:    Size  Location     Type
  6993 ;;  dutyValue       2   19[COMRAM] unsigned short 
  6994 ;; Auto vars:     Size  Location     Type
  6995 ;;		None
  6996 ;; Return value:  Size  Location     Type
  6997 ;;                  1    wreg      void 
  6998 ;; Registers used:
  6999 ;;		wreg, status,2, status,0
  7000 ;; Tracked objects:
  7001 ;;		On entry : 0/0
  7002 ;;		On exit  : 0/0
  7003 ;;		Unchanged: 0/0
  7004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7005 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7007 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7008 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7009 ;;Total ram usage:        4 bytes
  7010 ;; Hardware stack levels used: 1
  7011 ;; Hardware stack levels required when called: 8
  7012 ;; This function calls:
  7013 ;;		Nothing
  7014 ;; This function is called by:
  7015 ;;		_setMotor
  7016 ;; This function uses a non-reentrant model
  7017 ;;
  7018                           
  7019                           	psect	text30
  7020  003D88                     __ptext30:
  7021                           	callstack 0
  7022  003D88                     _PWM7_LoadDutyValue:
  7023                           	callstack 20
  7024  003D88                     
  7025                           ;mcc_generated_files/pwm7.c: 74:  void PWM7_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm7.c: 75:  {;mcc_generated_files/pwm7.c: 77:      PWM7DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  7026  003D88  C014  F016         	movff	PWM7_LoadDutyValue@dutyValue,??_PWM7_LoadDutyValue
  7027  003D8C  C015  F017         	movff	PWM7_LoadDutyValue@dutyValue+1,??_PWM7_LoadDutyValue+1
  7028  003D90  90D8               	bcf	status,0,c
  7029  003D92  3217               	rrcf	(??_PWM7_LoadDutyValue+1)^0,f,c
  7030  003D94  3216               	rrcf	??_PWM7_LoadDutyValue^0,f,c
  7031  003D96  90D8               	bcf	status,0,c
  7032  003D98  3217               	rrcf	(??_PWM7_LoadDutyValue+1)^0,f,c
  7033  003D9A  3216               	rrcf	??_PWM7_LoadDutyValue^0,f,c
  7034  003D9C  5016               	movf	??_PWM7_LoadDutyValue^0,w,c
  7035  003D9E  6E65               	movwf	101,c	;volatile
  7036                           
  7037                           ;mcc_generated_files/pwm7.c: 80:      PWM7DCL = (dutyValue & 0x0003)<<6;
  7038  003DA0  C014  F016         	movff	PWM7_LoadDutyValue@dutyValue,??_PWM7_LoadDutyValue
  7039  003DA4  0E03               	movlw	3
  7040  003DA6  1616               	andwf	??_PWM7_LoadDutyValue^0,f,c
  7041  003DA8  0E06               	movlw	6
  7042  003DAA  6E17               	movwf	(??_PWM7_LoadDutyValue+1)^0,c
  7043  003DAC                     u2845:
  7044  003DAC  90D8               	bcf	status,0,c
  7045  003DAE  3616               	rlcf	??_PWM7_LoadDutyValue^0,f,c
  7046  003DB0  2E17               	decfsz	(??_PWM7_LoadDutyValue+1)^0,f,c
  7047  003DB2  EFD6  F01E         	goto	u2845
  7048  003DB6  5016               	movf	??_PWM7_LoadDutyValue^0,w,c
  7049  003DB8  6E64               	movwf	100,c	;volatile
  7050  003DBA  0012               	return		;funcret
  7051  003DBC                     __end_of_PWM7_LoadDutyValue:
  7052                           	callstack 0
  7053                           
  7054 ;; *************** function _actSpeed *****************
  7055 ;; Defined at:
  7056 ;;		line 69 in file "main.c"
  7057 ;; Parameters:    Size  Location     Type
  7058 ;;		None
  7059 ;; Auto vars:     Size  Location     Type
  7060 ;;  speed           2   35[COMRAM] short 
  7061 ;; Return value:  Size  Location     Type
  7062 ;;                  2   33[COMRAM] short 
  7063 ;; Registers used:
  7064 ;;		wreg, status,2, status,0, cstack
  7065 ;; Tracked objects:
  7066 ;;		On entry : 0/0
  7067 ;;		On exit  : 0/0
  7068 ;;		Unchanged: 0/0
  7069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7070 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7071 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7073 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7074 ;;Total ram usage:        4 bytes
  7075 ;; Hardware stack levels used: 1
  7076 ;; Hardware stack levels required when called: 9
  7077 ;; This function calls:
  7078 ;;		___aldiv
  7079 ;; This function is called by:
  7080 ;;		_calcMotorPow
  7081 ;; This function uses a non-reentrant model
  7082 ;;
  7083                           
  7084                           	psect	text31
  7085  0036EA                     __ptext31:
  7086                           	callstack 0
  7087  0036EA                     _actSpeed:
  7088                           	callstack 19
  7089  0036EA                     
  7090                           ;main.c: 70:     int16_t speed = 0;
  7091  0036EA  0E00               	movlw	0
  7092  0036EC  6E25               	movwf	(actSpeed@speed+1)^0,c
  7093  0036EE  0E00               	movlw	0
  7094  0036F0  6E24               	movwf	actSpeed@speed^0,c
  7095  0036F2                     
  7096                           ;main.c: 71:     if (smtPeriod) {
  7097  0036F2  5048               	movf	_smtPeriod^0,w,c	;volatile
  7098  0036F4  1049               	iorwf	(_smtPeriod+1)^0,w,c	;volatile
  7099  0036F6  104A               	iorwf	(_smtPeriod+2)^0,w,c	;volatile
  7100  0036F8  104B               	iorwf	(_smtPeriod+3)^0,w,c	;volatile
  7101  0036FA  B4D8               	btfsc	status,2,c
  7102  0036FC  EF82  F01B         	goto	u3121
  7103  003700  EF84  F01B         	goto	u3120
  7104  003704                     u3121:
  7105  003704  EFBA  F01B         	goto	l4718
  7106  003708                     u3120:
  7107  003708                     
  7108                           ;main.c: 72:         if (CLC3CONbits.LC3OUT) {
  7109  003708  013C               	movlb	60	; () banked
  7110  00370A  AB60               	btfss	96,5,b	;volatile
  7111  00370C  EF8A  F01B         	goto	u3131
  7112  003710  EF8C  F01B         	goto	u3130
  7113  003714                     u3131:
  7114  003714  EFA4  F01B         	goto	l4716
  7115  003718                     u3130:
  7116  003718                     
  7117                           ; BSR set to: 60
  7118                           ;main.c: 73:             speed = (int16_t) ((int32_t) (500000 / (int32_t) smtPeriod));
  7119  003718  0E20               	movlw	32
  7120  00371A  6E14               	movwf	___aldiv@dividend^0,c
  7121  00371C  0EA1               	movlw	161
  7122  00371E  6E15               	movwf	(___aldiv@dividend+1)^0,c
  7123  003720  0E07               	movlw	7
  7124  003722  6E16               	movwf	(___aldiv@dividend+2)^0,c
  7125  003724  0E00               	movlw	0
  7126  003726  6E17               	movwf	(___aldiv@dividend+3)^0,c
  7127  003728  C048  F018         	movff	_smtPeriod,___aldiv@divisor	;volatile
  7128  00372C  C049  F019         	movff	_smtPeriod+1,___aldiv@divisor+1	;volatile
  7129  003730  C04A  F01A         	movff	_smtPeriod+2,___aldiv@divisor+2	;volatile
  7130  003734  C04B  F01B         	movff	_smtPeriod+3,___aldiv@divisor+3	;volatile
  7131  003738  ECD7  F016         	call	___aldiv	;wreg free
  7132  00373C  C014  F024         	movff	?___aldiv,actSpeed@speed
  7133  003740  C015  F025         	movff	?___aldiv+1,actSpeed@speed+1
  7134                           
  7135                           ;main.c: 74:         } else {
  7136  003744  EFBA  F01B         	goto	l4718
  7137  003748                     l4716:
  7138                           
  7139                           ; BSR set to: 60
  7140                           ;main.c: 75:             speed = (int16_t) ((int32_t) (-500000 / (int32_t) smtPeriod));
  7141  003748  0EE0               	movlw	224
  7142  00374A  6E14               	movwf	___aldiv@dividend^0,c
  7143  00374C  0E5E               	movlw	94
  7144  00374E  6E15               	movwf	(___aldiv@dividend+1)^0,c
  7145  003750  0EF8               	movlw	248
  7146  003752  6E16               	movwf	(___aldiv@dividend+2)^0,c
  7147  003754  0EFF               	movlw	255
  7148  003756  6E17               	movwf	(___aldiv@dividend+3)^0,c
  7149  003758  C048  F018         	movff	_smtPeriod,___aldiv@divisor	;volatile
  7150  00375C  C049  F019         	movff	_smtPeriod+1,___aldiv@divisor+1	;volatile
  7151  003760  C04A  F01A         	movff	_smtPeriod+2,___aldiv@divisor+2	;volatile
  7152  003764  C04B  F01B         	movff	_smtPeriod+3,___aldiv@divisor+3	;volatile
  7153  003768  ECD7  F016         	call	___aldiv	;wreg free
  7154  00376C  C014  F024         	movff	?___aldiv,actSpeed@speed
  7155  003770  C015  F025         	movff	?___aldiv+1,actSpeed@speed+1
  7156  003774                     l4718:
  7157                           
  7158                           ;main.c: 78:     return speed;
  7159  003774  C024  F022         	movff	actSpeed@speed,?_actSpeed
  7160  003778  C025  F023         	movff	actSpeed@speed+1,?_actSpeed+1
  7161  00377C  0012               	return		;funcret
  7162  00377E                     __end_of_actSpeed:
  7163                           	callstack 0
  7164                           
  7165 ;; *************** function ___aldiv *****************
  7166 ;; Defined at:
  7167 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aldiv.c"
  7168 ;; Parameters:    Size  Location     Type
  7169 ;;  dividend        4   19[COMRAM] long 
  7170 ;;  divisor         4   23[COMRAM] long 
  7171 ;; Auto vars:     Size  Location     Type
  7172 ;;  quotient        4   29[COMRAM] long 
  7173 ;;  sign            1   28[COMRAM] unsigned char 
  7174 ;;  counter         1   27[COMRAM] unsigned char 
  7175 ;; Return value:  Size  Location     Type
  7176 ;;                  4   19[COMRAM] long 
  7177 ;; Registers used:
  7178 ;;		wreg, status,2, status,0
  7179 ;; Tracked objects:
  7180 ;;		On entry : 0/0
  7181 ;;		On exit  : 0/0
  7182 ;;		Unchanged: 0/0
  7183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7184 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7185 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7187 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7188 ;;Total ram usage:       14 bytes
  7189 ;; Hardware stack levels used: 1
  7190 ;; Hardware stack levels required when called: 8
  7191 ;; This function calls:
  7192 ;;		Nothing
  7193 ;; This function is called by:
  7194 ;;		_actSpeed
  7195 ;; This function uses a non-reentrant model
  7196 ;;
  7197                           
  7198                           	psect	text32
  7199  002DAE                     __ptext32:
  7200                           	callstack 0
  7201  002DAE                     ___aldiv:
  7202                           	callstack 19
  7203  002DAE  0E00               	movlw	0
  7204  002DB0  6E1D               	movwf	___aldiv@sign^0,c
  7205  002DB2  BE1B               	btfsc	(___aldiv@divisor+3)^0,7,c
  7206  002DB4  EFE0  F016         	goto	u2890
  7207  002DB8  EFDE  F016         	goto	u2891
  7208  002DBC                     u2891:
  7209  002DBC  EFEA  F016         	goto	l4508
  7210  002DC0                     u2890:
  7211  002DC0  1E1B               	comf	(___aldiv@divisor+3)^0,f,c
  7212  002DC2  1E1A               	comf	(___aldiv@divisor+2)^0,f,c
  7213  002DC4  1E19               	comf	(___aldiv@divisor+1)^0,f,c
  7214  002DC6  6C18               	negf	___aldiv@divisor^0,c
  7215  002DC8  0E00               	movlw	0
  7216  002DCA  2219               	addwfc	(___aldiv@divisor+1)^0,f,c
  7217  002DCC  221A               	addwfc	(___aldiv@divisor+2)^0,f,c
  7218  002DCE  221B               	addwfc	(___aldiv@divisor+3)^0,f,c
  7219  002DD0  0E01               	movlw	1
  7220  002DD2  6E1D               	movwf	___aldiv@sign^0,c
  7221  002DD4                     l4508:
  7222  002DD4  BE17               	btfsc	(___aldiv@dividend+3)^0,7,c
  7223  002DD6  EFF1  F016         	goto	u2900
  7224  002DDA  EFEF  F016         	goto	u2901
  7225  002DDE                     u2901:
  7226  002DDE  EFFB  F016         	goto	l4514
  7227  002DE2                     u2900:
  7228  002DE2  1E17               	comf	(___aldiv@dividend+3)^0,f,c
  7229  002DE4  1E16               	comf	(___aldiv@dividend+2)^0,f,c
  7230  002DE6  1E15               	comf	(___aldiv@dividend+1)^0,f,c
  7231  002DE8  6C14               	negf	___aldiv@dividend^0,c
  7232  002DEA  0E00               	movlw	0
  7233  002DEC  2215               	addwfc	(___aldiv@dividend+1)^0,f,c
  7234  002DEE  2216               	addwfc	(___aldiv@dividend+2)^0,f,c
  7235  002DF0  2217               	addwfc	(___aldiv@dividend+3)^0,f,c
  7236  002DF2  0E01               	movlw	1
  7237  002DF4  1A1D               	xorwf	___aldiv@sign^0,f,c
  7238  002DF6                     l4514:
  7239  002DF6  0E00               	movlw	0
  7240  002DF8  6E1E               	movwf	___aldiv@quotient^0,c
  7241  002DFA  0E00               	movlw	0
  7242  002DFC  6E1F               	movwf	(___aldiv@quotient+1)^0,c
  7243  002DFE  0E00               	movlw	0
  7244  002E00  6E20               	movwf	(___aldiv@quotient+2)^0,c
  7245  002E02  0E00               	movlw	0
  7246  002E04  6E21               	movwf	(___aldiv@quotient+3)^0,c
  7247  002E06  5018               	movf	___aldiv@divisor^0,w,c
  7248  002E08  1019               	iorwf	(___aldiv@divisor+1)^0,w,c
  7249  002E0A  101A               	iorwf	(___aldiv@divisor+2)^0,w,c
  7250  002E0C  101B               	iorwf	(___aldiv@divisor+3)^0,w,c
  7251  002E0E  B4D8               	btfsc	status,2,c
  7252  002E10  EF0C  F017         	goto	u2911
  7253  002E14  EF0E  F017         	goto	u2910
  7254  002E18                     u2911:
  7255  002E18  EF44  F017         	goto	l4536
  7256  002E1C                     u2910:
  7257  002E1C  0E01               	movlw	1
  7258  002E1E  6E1C               	movwf	___aldiv@counter^0,c
  7259  002E20  EF18  F017         	goto	l4522
  7260  002E24                     l4520:
  7261  002E24  90D8               	bcf	status,0,c
  7262  002E26  3618               	rlcf	___aldiv@divisor^0,f,c
  7263  002E28  3619               	rlcf	(___aldiv@divisor+1)^0,f,c
  7264  002E2A  361A               	rlcf	(___aldiv@divisor+2)^0,f,c
  7265  002E2C  361B               	rlcf	(___aldiv@divisor+3)^0,f,c
  7266  002E2E  2A1C               	incf	___aldiv@counter^0,f,c
  7267  002E30                     l4522:
  7268  002E30  AE1B               	btfss	(___aldiv@divisor+3)^0,7,c
  7269  002E32  EF1D  F017         	goto	u2921
  7270  002E36  EF1F  F017         	goto	u2920
  7271  002E3A                     u2921:
  7272  002E3A  EF12  F017         	goto	l4520
  7273  002E3E                     u2920:
  7274  002E3E                     l4524:
  7275  002E3E  90D8               	bcf	status,0,c
  7276  002E40  361E               	rlcf	___aldiv@quotient^0,f,c
  7277  002E42  361F               	rlcf	(___aldiv@quotient+1)^0,f,c
  7278  002E44  3620               	rlcf	(___aldiv@quotient+2)^0,f,c
  7279  002E46  3621               	rlcf	(___aldiv@quotient+3)^0,f,c
  7280  002E48  5018               	movf	___aldiv@divisor^0,w,c
  7281  002E4A  5C14               	subwf	___aldiv@dividend^0,w,c
  7282  002E4C  5019               	movf	(___aldiv@divisor+1)^0,w,c
  7283  002E4E  5815               	subwfb	(___aldiv@dividend+1)^0,w,c
  7284  002E50  501A               	movf	(___aldiv@divisor+2)^0,w,c
  7285  002E52  5816               	subwfb	(___aldiv@dividend+2)^0,w,c
  7286  002E54  501B               	movf	(___aldiv@divisor+3)^0,w,c
  7287  002E56  5817               	subwfb	(___aldiv@dividend+3)^0,w,c
  7288  002E58  A0D8               	btfss	status,0,c
  7289  002E5A  EF31  F017         	goto	u2931
  7290  002E5E  EF33  F017         	goto	u2930
  7291  002E62                     u2931:
  7292  002E62  EF3C  F017         	goto	l4532
  7293  002E66                     u2930:
  7294  002E66  5018               	movf	___aldiv@divisor^0,w,c
  7295  002E68  5E14               	subwf	___aldiv@dividend^0,f,c
  7296  002E6A  5019               	movf	(___aldiv@divisor+1)^0,w,c
  7297  002E6C  5A15               	subwfb	(___aldiv@dividend+1)^0,f,c
  7298  002E6E  501A               	movf	(___aldiv@divisor+2)^0,w,c
  7299  002E70  5A16               	subwfb	(___aldiv@dividend+2)^0,f,c
  7300  002E72  501B               	movf	(___aldiv@divisor+3)^0,w,c
  7301  002E74  5A17               	subwfb	(___aldiv@dividend+3)^0,f,c
  7302  002E76  801E               	bsf	___aldiv@quotient^0,0,c
  7303  002E78                     l4532:
  7304  002E78  90D8               	bcf	status,0,c
  7305  002E7A  321B               	rrcf	(___aldiv@divisor+3)^0,f,c
  7306  002E7C  321A               	rrcf	(___aldiv@divisor+2)^0,f,c
  7307  002E7E  3219               	rrcf	(___aldiv@divisor+1)^0,f,c
  7308  002E80  3218               	rrcf	___aldiv@divisor^0,f,c
  7309  002E82  2E1C               	decfsz	___aldiv@counter^0,f,c
  7310  002E84  EF1F  F017         	goto	l4524
  7311  002E88                     l4536:
  7312  002E88  501D               	movf	___aldiv@sign^0,w,c
  7313  002E8A  B4D8               	btfsc	status,2,c
  7314  002E8C  EF4A  F017         	goto	u2941
  7315  002E90  EF4C  F017         	goto	u2940
  7316  002E94                     u2941:
  7317  002E94  EF54  F017         	goto	l4540
  7318  002E98                     u2940:
  7319  002E98  1E21               	comf	(___aldiv@quotient+3)^0,f,c
  7320  002E9A  1E20               	comf	(___aldiv@quotient+2)^0,f,c
  7321  002E9C  1E1F               	comf	(___aldiv@quotient+1)^0,f,c
  7322  002E9E  6C1E               	negf	___aldiv@quotient^0,c
  7323  002EA0  0E00               	movlw	0
  7324  002EA2  221F               	addwfc	(___aldiv@quotient+1)^0,f,c
  7325  002EA4  2220               	addwfc	(___aldiv@quotient+2)^0,f,c
  7326  002EA6  2221               	addwfc	(___aldiv@quotient+3)^0,f,c
  7327  002EA8                     l4540:
  7328  002EA8  C01E  F014         	movff	___aldiv@quotient,?___aldiv
  7329  002EAC  C01F  F015         	movff	___aldiv@quotient+1,?___aldiv+1
  7330  002EB0  C020  F016         	movff	___aldiv@quotient+2,?___aldiv+2
  7331  002EB4  C021  F017         	movff	___aldiv@quotient+3,?___aldiv+3
  7332  002EB8  0012               	return		;funcret
  7333  002EBA                     __end_of___aldiv:
  7334                           	callstack 0
  7335                           
  7336 ;; *************** function ___xxtofl *****************
  7337 ;; Defined at:
  7338 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  7339 ;; Parameters:    Size  Location     Type
  7340 ;;  sign            1    wreg     unsigned char 
  7341 ;;  val             4   27[COMRAM] long 
  7342 ;; Auto vars:     Size  Location     Type
  7343 ;;  sign            1   35[COMRAM] unsigned char 
  7344 ;;  arg             4   37[COMRAM] unsigned long 
  7345 ;;  exp             1   36[COMRAM] unsigned char 
  7346 ;; Return value:  Size  Location     Type
  7347 ;;                  4   27[COMRAM] unsigned char 
  7348 ;; Registers used:
  7349 ;;		wreg, status,2, status,0
  7350 ;; Tracked objects:
  7351 ;;		On entry : 0/0
  7352 ;;		On exit  : 0/0
  7353 ;;		Unchanged: 0/0
  7354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7355 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7356 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7357 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7358 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7359 ;;Total ram usage:       14 bytes
  7360 ;; Hardware stack levels used: 1
  7361 ;; Hardware stack levels required when called: 8
  7362 ;; This function calls:
  7363 ;;		Nothing
  7364 ;; This function is called by:
  7365 ;;		_loop
  7366 ;;		_checkBatt
  7367 ;;		_calcSteering
  7368 ;;		_calcSpeed
  7369 ;;		_calcMotorPow
  7370 ;;		_startAccell
  7371 ;; This function uses a non-reentrant model
  7372 ;;
  7373                           
  7374                           	psect	text33
  7375  0024E6                     __ptext33:
  7376                           	callstack 0
  7377  0024E6                     ___xxtofl:
  7378                           	callstack 20
  7379                           
  7380                           ;incstack = 0
  7381                           ;___xxtofl@sign stored from wreg
  7382  0024E6  6E24               	movwf	___xxtofl@sign^0,c
  7383  0024E8  5024               	movf	___xxtofl@sign^0,w,c
  7384  0024EA  B4D8               	btfsc	status,2,c
  7385  0024EC  EF7A  F012         	goto	u3841
  7386  0024F0  EF7C  F012         	goto	u3840
  7387  0024F4                     u3841:
  7388  0024F4  EF9E  F012         	goto	l2052
  7389  0024F8                     u3840:
  7390  0024F8  BE1F               	btfsc	(___xxtofl@val+3)^0,7,c
  7391  0024FA  EF83  F012         	goto	u3850
  7392  0024FE  EF81  F012         	goto	u3851
  7393  002502                     u3851:
  7394  002502  EF9E  F012         	goto	l2052
  7395  002506                     u3850:
  7396  002506  C01C  F020         	movff	___xxtofl@val,??___xxtofl
  7397  00250A  C01D  F021         	movff	___xxtofl@val+1,??___xxtofl+1
  7398  00250E  C01E  F022         	movff	___xxtofl@val+2,??___xxtofl+2
  7399  002512  C01F  F023         	movff	___xxtofl@val+3,??___xxtofl+3
  7400  002516  1E20               	comf	??___xxtofl^0,f,c
  7401  002518  1E21               	comf	(??___xxtofl+1)^0,f,c
  7402  00251A  1E22               	comf	(??___xxtofl+2)^0,f,c
  7403  00251C  1E23               	comf	(??___xxtofl+3)^0,f,c
  7404  00251E  2A20               	incf	??___xxtofl^0,f,c
  7405  002520  0E00               	movlw	0
  7406  002522  2221               	addwfc	(??___xxtofl+1)^0,f,c
  7407  002524  2222               	addwfc	(??___xxtofl+2)^0,f,c
  7408  002526  2223               	addwfc	(??___xxtofl+3)^0,f,c
  7409  002528  C020  F026         	movff	??___xxtofl,___xxtofl@arg
  7410  00252C  C021  F027         	movff	??___xxtofl+1,___xxtofl@arg+1
  7411  002530  C022  F028         	movff	??___xxtofl+2,___xxtofl@arg+2
  7412  002534  C023  F029         	movff	??___xxtofl+3,___xxtofl@arg+3
  7413  002538  EFA6  F012         	goto	l5126
  7414  00253C                     l2052:
  7415  00253C  C01C  F026         	movff	___xxtofl@val,___xxtofl@arg
  7416  002540  C01D  F027         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7417  002544  C01E  F028         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7418  002548  C01F  F029         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7419  00254C                     l5126:
  7420  00254C  501C               	movf	___xxtofl@val^0,w,c
  7421  00254E  101D               	iorwf	(___xxtofl@val+1)^0,w,c
  7422  002550  101E               	iorwf	(___xxtofl@val+2)^0,w,c
  7423  002552  101F               	iorwf	(___xxtofl@val+3)^0,w,c
  7424  002554  A4D8               	btfss	status,2,c
  7425  002556  EFAF  F012         	goto	u3861
  7426  00255A  EFB1  F012         	goto	u3860
  7427  00255E                     u3861:
  7428  00255E  EFBB  F012         	goto	l5132
  7429  002562                     u3860:
  7430  002562  0E00               	movlw	0
  7431  002564  6E1C               	movwf	?___xxtofl^0,c
  7432  002566  0E00               	movlw	0
  7433  002568  6E1D               	movwf	(?___xxtofl+1)^0,c
  7434  00256A  0E00               	movlw	0
  7435  00256C  6E1E               	movwf	(?___xxtofl+2)^0,c
  7436  00256E  0E00               	movlw	0
  7437  002570  6E1F               	movwf	(?___xxtofl+3)^0,c
  7438  002572  EF4C  F013         	goto	l2055
  7439  002576                     l5132:
  7440  002576  0E96               	movlw	150
  7441  002578  6E25               	movwf	___xxtofl@exp^0,c
  7442  00257A  EFC5  F012         	goto	l5136
  7443  00257E                     l5134:
  7444  00257E  2A25               	incf	___xxtofl@exp^0,f,c
  7445  002580  90D8               	bcf	status,0,c
  7446  002582  3229               	rrcf	(___xxtofl@arg+3)^0,f,c
  7447  002584  3228               	rrcf	(___xxtofl@arg+2)^0,f,c
  7448  002586  3227               	rrcf	(___xxtofl@arg+1)^0,f,c
  7449  002588  3226               	rrcf	___xxtofl@arg^0,f,c
  7450  00258A                     l5136:
  7451  00258A  0E00               	movlw	0
  7452  00258C  1426               	andwf	___xxtofl@arg^0,w,c
  7453  00258E  6E20               	movwf	??___xxtofl^0,c
  7454  002590  0E00               	movlw	0
  7455  002592  1427               	andwf	(___xxtofl@arg+1)^0,w,c
  7456  002594  6E21               	movwf	(??___xxtofl+1)^0,c
  7457  002596  0E00               	movlw	0
  7458  002598  1428               	andwf	(___xxtofl@arg+2)^0,w,c
  7459  00259A  6E22               	movwf	(??___xxtofl+2)^0,c
  7460  00259C  0EFE               	movlw	254
  7461  00259E  1429               	andwf	(___xxtofl@arg+3)^0,w,c
  7462  0025A0  6E23               	movwf	(??___xxtofl+3)^0,c
  7463  0025A2  5020               	movf	??___xxtofl^0,w,c
  7464  0025A4  1021               	iorwf	(??___xxtofl+1)^0,w,c
  7465  0025A6  1022               	iorwf	(??___xxtofl+2)^0,w,c
  7466  0025A8  1023               	iorwf	(??___xxtofl+3)^0,w,c
  7467  0025AA  A4D8               	btfss	status,2,c
  7468  0025AC  EFDA  F012         	goto	u3871
  7469  0025B0  EFDC  F012         	goto	u3870
  7470  0025B4                     u3871:
  7471  0025B4  EFBF  F012         	goto	l5134
  7472  0025B8                     u3870:
  7473  0025B8  EFEA  F012         	goto	l2059
  7474  0025BC                     l5138:
  7475  0025BC  2A25               	incf	___xxtofl@exp^0,f,c
  7476  0025BE  0E01               	movlw	1
  7477  0025C0  2626               	addwf	___xxtofl@arg^0,f,c
  7478  0025C2  0E00               	movlw	0
  7479  0025C4  2227               	addwfc	(___xxtofl@arg+1)^0,f,c
  7480  0025C6  2228               	addwfc	(___xxtofl@arg+2)^0,f,c
  7481  0025C8  2229               	addwfc	(___xxtofl@arg+3)^0,f,c
  7482  0025CA  90D8               	bcf	status,0,c
  7483  0025CC  3229               	rrcf	(___xxtofl@arg+3)^0,f,c
  7484  0025CE  3228               	rrcf	(___xxtofl@arg+2)^0,f,c
  7485  0025D0  3227               	rrcf	(___xxtofl@arg+1)^0,f,c
  7486  0025D2  3226               	rrcf	___xxtofl@arg^0,f,c
  7487  0025D4                     l2059:
  7488  0025D4  0E00               	movlw	0
  7489  0025D6  1426               	andwf	___xxtofl@arg^0,w,c
  7490  0025D8  6E20               	movwf	??___xxtofl^0,c
  7491  0025DA  0E00               	movlw	0
  7492  0025DC  1427               	andwf	(___xxtofl@arg+1)^0,w,c
  7493  0025DE  6E21               	movwf	(??___xxtofl+1)^0,c
  7494  0025E0  0E00               	movlw	0
  7495  0025E2  1428               	andwf	(___xxtofl@arg+2)^0,w,c
  7496  0025E4  6E22               	movwf	(??___xxtofl+2)^0,c
  7497  0025E6  0EFF               	movlw	255
  7498  0025E8  1429               	andwf	(___xxtofl@arg+3)^0,w,c
  7499  0025EA  6E23               	movwf	(??___xxtofl+3)^0,c
  7500  0025EC  5020               	movf	??___xxtofl^0,w,c
  7501  0025EE  1021               	iorwf	(??___xxtofl+1)^0,w,c
  7502  0025F0  1022               	iorwf	(??___xxtofl+2)^0,w,c
  7503  0025F2  1023               	iorwf	(??___xxtofl+3)^0,w,c
  7504  0025F4  A4D8               	btfss	status,2,c
  7505  0025F6  EFFF  F012         	goto	u3881
  7506  0025FA  EF01  F013         	goto	u3880
  7507  0025FE                     u3881:
  7508  0025FE  EFDE  F012         	goto	l5138
  7509  002602                     u3880:
  7510  002602  EF09  F013         	goto	l5146
  7511  002606                     l5144:
  7512  002606  0625               	decf	___xxtofl@exp^0,f,c
  7513  002608  90D8               	bcf	status,0,c
  7514  00260A  3626               	rlcf	___xxtofl@arg^0,f,c
  7515  00260C  3627               	rlcf	(___xxtofl@arg+1)^0,f,c
  7516  00260E  3628               	rlcf	(___xxtofl@arg+2)^0,f,c
  7517  002610  3629               	rlcf	(___xxtofl@arg+3)^0,f,c
  7518  002612                     l5146:
  7519  002612  BE28               	btfsc	(___xxtofl@arg+2)^0,7,c
  7520  002614  EF0E  F013         	goto	u3891
  7521  002618  EF10  F013         	goto	u3890
  7522  00261C                     u3891:
  7523  00261C  EF18  F013         	goto	l2066
  7524  002620                     u3890:
  7525  002620  0E02               	movlw	2
  7526  002622  6025               	cpfslt	___xxtofl@exp^0,c
  7527  002624  EF16  F013         	goto	u3901
  7528  002628  EF18  F013         	goto	u3900
  7529  00262C                     u3901:
  7530  00262C  EF03  F013         	goto	l5144
  7531  002630                     u3900:
  7532  002630                     l2066:
  7533  002630  B025               	btfsc	___xxtofl@exp^0,0,c
  7534  002632  EF1D  F013         	goto	u3911
  7535  002636  EF1F  F013         	goto	u3910
  7536  00263A                     u3911:
  7537  00263A  EF20  F013         	goto	l5152
  7538  00263E                     u3910:
  7539  00263E  9E28               	bcf	(___xxtofl@arg+2)^0,7,c
  7540  002640                     l5152:
  7541  002640  90D8               	bcf	status,0,c
  7542  002642  3225               	rrcf	___xxtofl@exp^0,f,c
  7543  002644  C025  F020         	movff	___xxtofl@exp,??___xxtofl
  7544  002648  6A21               	clrf	(??___xxtofl+1)^0,c
  7545  00264A  6A22               	clrf	(??___xxtofl+2)^0,c
  7546  00264C  6A23               	clrf	(??___xxtofl+3)^0,c
  7547  00264E  C020  F023         	movff	??___xxtofl,??___xxtofl+3
  7548  002652  6A22               	clrf	(??___xxtofl+2)^0,c
  7549  002654  6A21               	clrf	(??___xxtofl+1)^0,c
  7550  002656  6A20               	clrf	??___xxtofl^0,c
  7551  002658  5020               	movf	??___xxtofl^0,w,c
  7552  00265A  1226               	iorwf	___xxtofl@arg^0,f,c
  7553  00265C  5021               	movf	(??___xxtofl+1)^0,w,c
  7554  00265E  1227               	iorwf	(___xxtofl@arg+1)^0,f,c
  7555  002660  5022               	movf	(??___xxtofl+2)^0,w,c
  7556  002662  1228               	iorwf	(___xxtofl@arg+2)^0,f,c
  7557  002664  5023               	movf	(??___xxtofl+3)^0,w,c
  7558  002666  1229               	iorwf	(___xxtofl@arg+3)^0,f,c
  7559  002668  5024               	movf	___xxtofl@sign^0,w,c
  7560  00266A  B4D8               	btfsc	status,2,c
  7561  00266C  EF3A  F013         	goto	u3921
  7562  002670  EF3C  F013         	goto	u3920
  7563  002674                     u3921:
  7564  002674  EF44  F013         	goto	l5162
  7565  002678                     u3920:
  7566  002678  BE1F               	btfsc	(___xxtofl@val+3)^0,7,c
  7567  00267A  EF43  F013         	goto	u3930
  7568  00267E  EF41  F013         	goto	u3931
  7569  002682                     u3931:
  7570  002682  EF44  F013         	goto	l5162
  7571  002686                     u3930:
  7572  002686  8E29               	bsf	(___xxtofl@arg+3)^0,7,c
  7573  002688                     l5162:
  7574  002688  C026  F01C         	movff	___xxtofl@arg,?___xxtofl
  7575  00268C  C027  F01D         	movff	___xxtofl@arg+1,?___xxtofl+1
  7576  002690  C028  F01E         	movff	___xxtofl@arg+2,?___xxtofl+2
  7577  002694  C029  F01F         	movff	___xxtofl@arg+3,?___xxtofl+3
  7578  002698                     l2055:
  7579  002698  0012               	return		;funcret
  7580  00269A                     __end_of___xxtofl:
  7581                           	callstack 0
  7582                           
  7583 ;; *************** function ___fltol *****************
  7584 ;; Defined at:
  7585 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  7586 ;; Parameters:    Size  Location     Type
  7587 ;;  f1              4   25[BANK0 ] unsigned char 
  7588 ;; Auto vars:     Size  Location     Type
  7589 ;;  exp1            1   34[BANK0 ] unsigned char 
  7590 ;;  sign1           1   33[BANK0 ] unsigned char 
  7591 ;; Return value:  Size  Location     Type
  7592 ;;                  4   25[BANK0 ] long 
  7593 ;; Registers used:
  7594 ;;		wreg, status,2, status,0
  7595 ;; Tracked objects:
  7596 ;;		On entry : 0/0
  7597 ;;		On exit  : 0/0
  7598 ;;		Unchanged: 0/0
  7599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7600 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7601 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7602 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7603 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7604 ;;Total ram usage:       10 bytes
  7605 ;; Hardware stack levels used: 1
  7606 ;; Hardware stack levels required when called: 8
  7607 ;; This function calls:
  7608 ;;		Nothing
  7609 ;; This function is called by:
  7610 ;;		_calcSteering
  7611 ;;		_calcSpeed
  7612 ;;		_calcMotorPow
  7613 ;;		_startAccell
  7614 ;; This function uses a non-reentrant model
  7615 ;;
  7616                           
  7617                           	psect	text34
  7618  002EBA                     __ptext34:
  7619                           	callstack 0
  7620  002EBA                     ___fltol:
  7621                           	callstack 20
  7622  002EBA  0100               	movlb	0	; () banked
  7623  002EBC  35C0               	rlcf	(___fltol@f1+2)& (0+255),w,b
  7624  002EBE  35C1               	rlcf	(___fltol@f1+3)& (0+255),w,b
  7625  002EC0  6FC7               	movwf	___fltol@exp1& (0+255),b
  7626  002EC2  51C7               	movf	___fltol@exp1& (0+255),w,b
  7627  002EC4  A4D8               	btfss	status,2,c
  7628  002EC6  EF67  F017         	goto	u5771
  7629  002ECA  EF69  F017         	goto	u5770
  7630  002ECE                     u5771:
  7631  002ECE  EF73  F017         	goto	l6542
  7632  002ED2                     u5770:
  7633  002ED2                     l6538:
  7634                           
  7635                           ; BSR set to: 0
  7636  002ED2  0E00               	movlw	0
  7637  002ED4  6FBE               	movwf	?___fltol& (0+255),b
  7638  002ED6  0E00               	movlw	0
  7639  002ED8  6FBF               	movwf	(?___fltol+1)& (0+255),b
  7640  002EDA  0E00               	movlw	0
  7641  002EDC  6FC0               	movwf	(?___fltol+2)& (0+255),b
  7642  002EDE  0E00               	movlw	0
  7643  002EE0  6FC1               	movwf	(?___fltol+3)& (0+255),b
  7644  002EE2  EFE0  F017         	goto	l1694
  7645  002EE6                     l6542:
  7646                           
  7647                           ; BSR set to: 0
  7648  002EE6  C0BE  F0C2         	movff	___fltol@f1,??___fltol
  7649  002EEA  C0BF  F0C3         	movff	___fltol@f1+1,??___fltol+1
  7650  002EEE  C0C0  F0C4         	movff	___fltol@f1+2,??___fltol+2
  7651  002EF2  C0C1  F0C5         	movff	___fltol@f1+3,??___fltol+3
  7652  002EF6  0E20               	movlw	32
  7653  002EF8  EF83  F017         	goto	u5780
  7654  002EFC                     u5785:
  7655  002EFC  90D8               	bcf	status,0,c
  7656  002EFE  33C5               	rrcf	(??___fltol+3)& (0+255),f,b
  7657  002F00  33C4               	rrcf	(??___fltol+2)& (0+255),f,b
  7658  002F02  33C3               	rrcf	(??___fltol+1)& (0+255),f,b
  7659  002F04  33C2               	rrcf	??___fltol& (0+255),f,b
  7660  002F06                     u5780:
  7661  002F06  2EE8               	decfsz	wreg,f,c
  7662  002F08  EF7E  F017         	goto	u5785
  7663  002F0C  51C2               	movf	??___fltol& (0+255),w,b
  7664  002F0E  6FC6               	movwf	___fltol@sign1& (0+255),b
  7665  002F10                     
  7666                           ; BSR set to: 0
  7667  002F10  8FC0               	bsf	(___fltol@f1+2)& (0+255),7,b
  7668  002F12                     
  7669                           ; BSR set to: 0
  7670  002F12  0EFF               	movlw	255
  7671  002F14  17BE               	andwf	___fltol@f1& (0+255),f,b
  7672  002F16  0EFF               	movlw	255
  7673  002F18  17BF               	andwf	(___fltol@f1+1)& (0+255),f,b
  7674  002F1A  0EFF               	movlw	255
  7675  002F1C  17C0               	andwf	(___fltol@f1+2)& (0+255),f,b
  7676  002F1E  0E00               	movlw	0
  7677  002F20  17C1               	andwf	(___fltol@f1+3)& (0+255),f,b
  7678  002F22                     
  7679                           ; BSR set to: 0
  7680  002F22  0E96               	movlw	150
  7681  002F24  5FC7               	subwf	___fltol@exp1& (0+255),f,b
  7682  002F26                     
  7683                           ; BSR set to: 0
  7684  002F26  BFC7               	btfsc	___fltol@exp1& (0+255),7,b
  7685  002F28  EF9A  F017         	goto	u5790
  7686  002F2C  EF98  F017         	goto	u5791
  7687  002F30                     u5791:
  7688  002F30  EFB0  F017         	goto	l6562
  7689  002F34                     u5790:
  7690  002F34                     
  7691                           ; BSR set to: 0
  7692  002F34  51C7               	movf	___fltol@exp1& (0+255),w,b
  7693  002F36  0A80               	xorlw	128
  7694  002F38  0F97               	addlw	151
  7695  002F3A  B0D8               	btfsc	status,0,c
  7696  002F3C  EFA2  F017         	goto	u5801
  7697  002F40  EFA4  F017         	goto	u5800
  7698  002F44                     u5801:
  7699  002F44  EFA6  F017         	goto	l6558
  7700  002F48                     u5800:
  7701  002F48  EF69  F017         	goto	l6538
  7702  002F4C                     l6558:
  7703                           
  7704                           ; BSR set to: 0
  7705  002F4C  90D8               	bcf	status,0,c
  7706  002F4E  33C1               	rrcf	(___fltol@f1+3)& (0+255),f,b
  7707  002F50  33C0               	rrcf	(___fltol@f1+2)& (0+255),f,b
  7708  002F52  33BF               	rrcf	(___fltol@f1+1)& (0+255),f,b
  7709  002F54  33BE               	rrcf	___fltol@f1& (0+255),f,b
  7710  002F56                     
  7711                           ; BSR set to: 0
  7712  002F56  3FC7               	incfsz	___fltol@exp1& (0+255),f,b
  7713  002F58  EFA6  F017         	goto	l6558
  7714  002F5C  EFC8  F017         	goto	l6572
  7715  002F60                     l6562:
  7716                           
  7717                           ; BSR set to: 0
  7718  002F60  0E1F               	movlw	31
  7719  002F62  65C7               	cpfsgt	___fltol@exp1& (0+255),b
  7720  002F64  EFB6  F017         	goto	u5811
  7721  002F68  EFB8  F017         	goto	u5810
  7722  002F6C                     u5811:
  7723  002F6C  EFC0  F017         	goto	l6570
  7724  002F70                     u5810:
  7725  002F70  EF69  F017         	goto	l6538
  7726  002F74                     l6568:
  7727                           
  7728                           ; BSR set to: 0
  7729  002F74  90D8               	bcf	status,0,c
  7730  002F76  37BE               	rlcf	___fltol@f1& (0+255),f,b
  7731  002F78  37BF               	rlcf	(___fltol@f1+1)& (0+255),f,b
  7732  002F7A  37C0               	rlcf	(___fltol@f1+2)& (0+255),f,b
  7733  002F7C  37C1               	rlcf	(___fltol@f1+3)& (0+255),f,b
  7734  002F7E  07C7               	decf	___fltol@exp1& (0+255),f,b
  7735  002F80                     l6570:
  7736                           
  7737                           ; BSR set to: 0
  7738  002F80  51C7               	movf	___fltol@exp1& (0+255),w,b
  7739  002F82  A4D8               	btfss	status,2,c
  7740  002F84  EFC6  F017         	goto	u5821
  7741  002F88  EFC8  F017         	goto	u5820
  7742  002F8C                     u5821:
  7743  002F8C  EFBA  F017         	goto	l6568
  7744  002F90                     u5820:
  7745  002F90                     l6572:
  7746                           
  7747                           ; BSR set to: 0
  7748  002F90  51C6               	movf	___fltol@sign1& (0+255),w,b
  7749  002F92  B4D8               	btfsc	status,2,c
  7750  002F94  EFCE  F017         	goto	u5831
  7751  002F98  EFD0  F017         	goto	u5830
  7752  002F9C                     u5831:
  7753  002F9C  EFD8  F017         	goto	l6576
  7754  002FA0                     u5830:
  7755  002FA0                     
  7756                           ; BSR set to: 0
  7757  002FA0  1FC1               	comf	(___fltol@f1+3)& (0+255),f,b
  7758  002FA2  1FC0               	comf	(___fltol@f1+2)& (0+255),f,b
  7759  002FA4  1FBF               	comf	(___fltol@f1+1)& (0+255),f,b
  7760  002FA6  6DBE               	negf	___fltol@f1& (0+255),b
  7761  002FA8  0E00               	movlw	0
  7762  002FAA  23BF               	addwfc	(___fltol@f1+1)& (0+255),f,b
  7763  002FAC  23C0               	addwfc	(___fltol@f1+2)& (0+255),f,b
  7764  002FAE  23C1               	addwfc	(___fltol@f1+3)& (0+255),f,b
  7765  002FB0                     l6576:
  7766                           
  7767                           ; BSR set to: 0
  7768  002FB0  C0BE  F0BE         	movff	___fltol@f1,?___fltol
  7769  002FB4  C0BF  F0BF         	movff	___fltol@f1+1,?___fltol+1
  7770  002FB8  C0C0  F0C0         	movff	___fltol@f1+2,?___fltol+2
  7771  002FBC  C0C1  F0C1         	movff	___fltol@f1+3,?___fltol+3
  7772  002FC0                     l1694:
  7773                           
  7774                           ; BSR set to: 0
  7775  002FC0  0012               	return		;funcret
  7776  002FC2                     __end_of___fltol:
  7777                           	callstack 0
  7778                           
  7779 ;; *************** function ___flmul *****************
  7780 ;; Defined at:
  7781 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
  7782 ;; Parameters:    Size  Location     Type
  7783 ;;  b               4   41[COMRAM] long 
  7784 ;;  a               4   45[COMRAM] long 
  7785 ;; Auto vars:     Size  Location     Type
  7786 ;;  prod            4    7[BANK0 ] struct .
  7787 ;;  grs             4    2[BANK0 ] unsigned long 
  7788 ;;  temp            2   11[BANK0 ] struct .
  7789 ;;  bexp            1    6[BANK0 ] unsigned char 
  7790 ;;  aexp            1    1[BANK0 ] unsigned char 
  7791 ;;  sign            1    0[BANK0 ] unsigned char 
  7792 ;; Return value:  Size  Location     Type
  7793 ;;                  4   41[COMRAM] unsigned char 
  7794 ;; Registers used:
  7795 ;;		wreg, status,2, status,0, prodl, prodh
  7796 ;; Tracked objects:
  7797 ;;		On entry : 0/0
  7798 ;;		On exit  : 0/0
  7799 ;;		Unchanged: 0/0
  7800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7801 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7802 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7803 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7804 ;;      Totals:        12      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7805 ;;Total ram usage:       25 bytes
  7806 ;; Hardware stack levels used: 1
  7807 ;; Hardware stack levels required when called: 8
  7808 ;; This function calls:
  7809 ;;		Nothing
  7810 ;; This function is called by:
  7811 ;;		_calcSteering
  7812 ;;		_calcSpeed
  7813 ;;		_calcMotorPow
  7814 ;;		_startAccell
  7815 ;; This function uses a non-reentrant model
  7816 ;;
  7817                           
  7818                           	psect	text35
  7819  001502                     __ptext35:
  7820                           	callstack 0
  7821  001502                     ___flmul:
  7822                           	callstack 20
  7823  001502  502D               	movf	(___flmul@b+3)^0,w,c
  7824  001504  0B80               	andlw	128
  7825  001506  0100               	movlb	0	; () banked
  7826  001508  6FA5               	movwf	___flmul@sign& (0+255),b
  7827  00150A  502D               	movf	(___flmul@b+3)^0,w,c
  7828  00150C  242D               	addwf	(___flmul@b+3)^0,w,c
  7829  00150E  6FAB               	movwf	___flmul@bexp& (0+255),b
  7830  001510                     
  7831                           ; BSR set to: 0
  7832  001510  AE2C               	btfss	(___flmul@b+2)^0,7,c
  7833  001512  EF8D  F00A         	goto	u5581
  7834  001516  EF8F  F00A         	goto	u5580
  7835  00151A                     u5581:
  7836  00151A  EF90  F00A         	goto	l6412
  7837  00151E                     u5580:
  7838  00151E                     
  7839                           ; BSR set to: 0
  7840  00151E  81AB               	bsf	___flmul@bexp& (0+255),0,b
  7841  001520                     l6412:
  7842                           
  7843                           ; BSR set to: 0
  7844  001520  51AB               	movf	___flmul@bexp& (0+255),w,b
  7845  001522  B4D8               	btfsc	status,2,c
  7846  001524  EF96  F00A         	goto	u5591
  7847  001528  EF98  F00A         	goto	u5590
  7848  00152C                     u5591:
  7849  00152C  EFAB  F00A         	goto	l6420
  7850  001530                     u5590:
  7851  001530                     
  7852                           ; BSR set to: 0
  7853  001530  29AB               	incf	___flmul@bexp& (0+255),w,b
  7854  001532  A4D8               	btfss	status,2,c
  7855  001534  EF9E  F00A         	goto	u5601
  7856  001538  EFA0  F00A         	goto	u5600
  7857  00153C                     u5601:
  7858  00153C  EFA8  F00A         	goto	l6418
  7859  001540                     u5600:
  7860  001540                     
  7861                           ; BSR set to: 0
  7862  001540  0E00               	movlw	0
  7863  001542  6E2A               	movwf	___flmul@b^0,c
  7864  001544  0E00               	movlw	0
  7865  001546  6E2B               	movwf	(___flmul@b+1)^0,c
  7866  001548  0E00               	movlw	0
  7867  00154A  6E2C               	movwf	(___flmul@b+2)^0,c
  7868  00154C  0E00               	movlw	0
  7869  00154E  6E2D               	movwf	(___flmul@b+3)^0,c
  7870  001550                     l6418:
  7871                           
  7872                           ; BSR set to: 0
  7873  001550  8E2C               	bsf	(___flmul@b+2)^0,7,c
  7874  001552  EFB3  F00A         	goto	l6422
  7875  001556                     l6420:
  7876                           
  7877                           ; BSR set to: 0
  7878  001556  0E00               	movlw	0
  7879  001558  6E2A               	movwf	___flmul@b^0,c
  7880  00155A  0E00               	movlw	0
  7881  00155C  6E2B               	movwf	(___flmul@b+1)^0,c
  7882  00155E  0E00               	movlw	0
  7883  001560  6E2C               	movwf	(___flmul@b+2)^0,c
  7884  001562  0E00               	movlw	0
  7885  001564  6E2D               	movwf	(___flmul@b+3)^0,c
  7886  001566                     l6422:
  7887                           
  7888                           ; BSR set to: 0
  7889  001566  5031               	movf	(___flmul@a+3)^0,w,c
  7890  001568  0B80               	andlw	128
  7891  00156A  1BA5               	xorwf	___flmul@sign& (0+255),f,b
  7892  00156C                     
  7893                           ; BSR set to: 0
  7894  00156C  5031               	movf	(___flmul@a+3)^0,w,c
  7895  00156E  2431               	addwf	(___flmul@a+3)^0,w,c
  7896  001570  6FA6               	movwf	___flmul@aexp& (0+255),b
  7897  001572                     
  7898                           ; BSR set to: 0
  7899  001572  AE30               	btfss	(___flmul@a+2)^0,7,c
  7900  001574  EFBE  F00A         	goto	u5611
  7901  001578  EFC0  F00A         	goto	u5610
  7902  00157C                     u5611:
  7903  00157C  EFC1  F00A         	goto	l6430
  7904  001580                     u5610:
  7905  001580                     
  7906                           ; BSR set to: 0
  7907  001580  81A6               	bsf	___flmul@aexp& (0+255),0,b
  7908  001582                     l6430:
  7909                           
  7910                           ; BSR set to: 0
  7911  001582  51A6               	movf	___flmul@aexp& (0+255),w,b
  7912  001584  B4D8               	btfsc	status,2,c
  7913  001586  EFC7  F00A         	goto	u5621
  7914  00158A  EFC9  F00A         	goto	u5620
  7915  00158E                     u5621:
  7916  00158E  EFDC  F00A         	goto	l6438
  7917  001592                     u5620:
  7918  001592                     
  7919                           ; BSR set to: 0
  7920  001592  29A6               	incf	___flmul@aexp& (0+255),w,b
  7921  001594  A4D8               	btfss	status,2,c
  7922  001596  EFCF  F00A         	goto	u5631
  7923  00159A  EFD1  F00A         	goto	u5630
  7924  00159E                     u5631:
  7925  00159E  EFD9  F00A         	goto	l6436
  7926  0015A2                     u5630:
  7927  0015A2                     
  7928                           ; BSR set to: 0
  7929  0015A2  0E00               	movlw	0
  7930  0015A4  6E2E               	movwf	___flmul@a^0,c
  7931  0015A6  0E00               	movlw	0
  7932  0015A8  6E2F               	movwf	(___flmul@a+1)^0,c
  7933  0015AA  0E00               	movlw	0
  7934  0015AC  6E30               	movwf	(___flmul@a+2)^0,c
  7935  0015AE  0E00               	movlw	0
  7936  0015B0  6E31               	movwf	(___flmul@a+3)^0,c
  7937  0015B2                     l6436:
  7938                           
  7939                           ; BSR set to: 0
  7940  0015B2  8E30               	bsf	(___flmul@a+2)^0,7,c
  7941  0015B4  EFE4  F00A         	goto	l2011
  7942  0015B8                     l6438:
  7943                           
  7944                           ; BSR set to: 0
  7945  0015B8  0E00               	movlw	0
  7946  0015BA  6E2E               	movwf	___flmul@a^0,c
  7947  0015BC  0E00               	movlw	0
  7948  0015BE  6E2F               	movwf	(___flmul@a+1)^0,c
  7949  0015C0  0E00               	movlw	0
  7950  0015C2  6E30               	movwf	(___flmul@a+2)^0,c
  7951  0015C4  0E00               	movlw	0
  7952  0015C6  6E31               	movwf	(___flmul@a+3)^0,c
  7953  0015C8                     l2011:
  7954                           
  7955                           ; BSR set to: 0
  7956  0015C8  51A6               	movf	___flmul@aexp& (0+255),w,b
  7957  0015CA  B4D8               	btfsc	status,2,c
  7958  0015CC  EFEA  F00A         	goto	u5641
  7959  0015D0  EFEC  F00A         	goto	u5640
  7960  0015D4                     u5641:
  7961  0015D4  EFF4  F00A         	goto	l6442
  7962  0015D8                     u5640:
  7963  0015D8                     
  7964                           ; BSR set to: 0
  7965  0015D8  51AB               	movf	___flmul@bexp& (0+255),w,b
  7966  0015DA  A4D8               	btfss	status,2,c
  7967  0015DC  EFF2  F00A         	goto	u5651
  7968  0015E0  EFF4  F00A         	goto	u5650
  7969  0015E4                     u5651:
  7970  0015E4  EFFE  F00A         	goto	l6446
  7971  0015E8                     u5650:
  7972  0015E8                     l6442:
  7973                           
  7974                           ; BSR set to: 0
  7975  0015E8  0E00               	movlw	0
  7976  0015EA  6E2A               	movwf	?___flmul^0,c
  7977  0015EC  0E00               	movlw	0
  7978  0015EE  6E2B               	movwf	(?___flmul+1)^0,c
  7979  0015F0  0E00               	movlw	0
  7980  0015F2  6E2C               	movwf	(?___flmul+2)^0,c
  7981  0015F4  0E00               	movlw	0
  7982  0015F6  6E2D               	movwf	(?___flmul+3)^0,c
  7983  0015F8  EFA8  F00C         	goto	l2015
  7984  0015FC                     l6446:
  7985                           
  7986                           ; BSR set to: 0
  7987  0015FC  5030               	movf	(___flmul@a+2)^0,w,c
  7988  0015FE  022A               	mulwf	___flmul@b^0,c
  7989  001600  006F FFCC  F0B0    	movff	prodl,___flmul@temp
  7990  001606  006F FFD0  F0B1    	movff	prodh,___flmul@temp+1
  7991  00160C                     
  7992                           ; BSR set to: 0
  7993  00160C  51B0               	movf	___flmul@temp& (0+255),w,b
  7994  00160E  6FA7               	movwf	___flmul@grs& (0+255),b
  7995  001610  6BA8               	clrf	(___flmul@grs+1)& (0+255),b
  7996  001612  6BA9               	clrf	(___flmul@grs+2)& (0+255),b
  7997  001614  6BAA               	clrf	(___flmul@grs+3)& (0+255),b
  7998  001616                     
  7999                           ; BSR set to: 0
  8000  001616  51B1               	movf	(___flmul@temp+1)& (0+255),w,b
  8001  001618  6FAC               	movwf	___flmul@prod& (0+255),b
  8002  00161A  6BAD               	clrf	(___flmul@prod+1)& (0+255),b
  8003  00161C  6BAE               	clrf	(___flmul@prod+2)& (0+255),b
  8004  00161E  6BAF               	clrf	(___flmul@prod+3)& (0+255),b
  8005  001620  502F               	movf	(___flmul@a+1)^0,w,c
  8006  001622  022B               	mulwf	(___flmul@b+1)^0,c
  8007  001624  006F FFCC  F0B0    	movff	prodl,___flmul@temp
  8008  00162A  006F FFD0  F0B1    	movff	prodh,___flmul@temp+1
  8009  001630                     
  8010                           ; BSR set to: 0
  8011  001630  51B0               	movf	___flmul@temp& (0+255),w,b
  8012  001632  27A7               	addwf	___flmul@grs& (0+255),f,b
  8013  001634  0E00               	movlw	0
  8014  001636  23A8               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8015  001638  23A9               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8016  00163A  23AA               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8017  00163C                     
  8018                           ; BSR set to: 0
  8019  00163C  51B1               	movf	(___flmul@temp+1)& (0+255),w,b
  8020  00163E  27AC               	addwf	___flmul@prod& (0+255),f,b
  8021  001640  0E00               	movlw	0
  8022  001642  23AD               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8023  001644  23AE               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8024  001646  23AF               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8025  001648  502E               	movf	___flmul@a^0,w,c
  8026  00164A  022C               	mulwf	(___flmul@b+2)^0,c
  8027  00164C  006F FFCC  F0B0    	movff	prodl,___flmul@temp
  8028  001652  006F FFD0  F0B1    	movff	prodh,___flmul@temp+1
  8029  001658                     
  8030                           ; BSR set to: 0
  8031  001658  51B0               	movf	___flmul@temp& (0+255),w,b
  8032  00165A  27A7               	addwf	___flmul@grs& (0+255),f,b
  8033  00165C  0E00               	movlw	0
  8034  00165E  23A8               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8035  001660  23A9               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8036  001662  23AA               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8037  001664                     
  8038                           ; BSR set to: 0
  8039  001664  51B1               	movf	(___flmul@temp+1)& (0+255),w,b
  8040  001666  27AC               	addwf	___flmul@prod& (0+255),f,b
  8041  001668  0E00               	movlw	0
  8042  00166A  23AD               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8043  00166C  23AE               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8044  00166E  23AF               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8045  001670                     
  8046                           ; BSR set to: 0
  8047  001670  C0A9  F0AA         	movff	___flmul@grs+2,___flmul@grs+3
  8048  001674  C0A8  F0A9         	movff	___flmul@grs+1,___flmul@grs+2
  8049  001678  C0A7  F0A8         	movff	___flmul@grs,___flmul@grs+1
  8050  00167C  6BA7               	clrf	___flmul@grs& (0+255),b
  8051  00167E                     
  8052                           ; BSR set to: 0
  8053  00167E  502E               	movf	___flmul@a^0,w,c
  8054  001680  022B               	mulwf	(___flmul@b+1)^0,c
  8055  001682  006F FFCC  F0B0    	movff	prodl,___flmul@temp
  8056  001688  006F FFD0  F0B1    	movff	prodh,___flmul@temp+1
  8057  00168E                     
  8058                           ; BSR set to: 0
  8059  00168E  51B0               	movf	___flmul@temp& (0+255),w,b
  8060  001690  27A7               	addwf	___flmul@grs& (0+255),f,b
  8061  001692  51B1               	movf	(___flmul@temp+1)& (0+255),w,b
  8062  001694  23A8               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8063  001696  0E00               	movlw	0
  8064  001698  23A9               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8065  00169A  0E00               	movlw	0
  8066  00169C  23AA               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8067  00169E                     
  8068                           ; BSR set to: 0
  8069  00169E  502F               	movf	(___flmul@a+1)^0,w,c
  8070  0016A0  022A               	mulwf	___flmul@b^0,c
  8071  0016A2  006F FFCC  F0B0    	movff	prodl,___flmul@temp
  8072  0016A8  006F FFD0  F0B1    	movff	prodh,___flmul@temp+1
  8073  0016AE                     
  8074                           ; BSR set to: 0
  8075  0016AE  51B0               	movf	___flmul@temp& (0+255),w,b
  8076  0016B0  27A7               	addwf	___flmul@grs& (0+255),f,b
  8077  0016B2  51B1               	movf	(___flmul@temp+1)& (0+255),w,b
  8078  0016B4  23A8               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8079  0016B6  0E00               	movlw	0
  8080  0016B8  23A9               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8081  0016BA  0E00               	movlw	0
  8082  0016BC  23AA               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8083  0016BE                     
  8084                           ; BSR set to: 0
  8085  0016BE  C0A9  F0AA         	movff	___flmul@grs+2,___flmul@grs+3
  8086  0016C2  C0A8  F0A9         	movff	___flmul@grs+1,___flmul@grs+2
  8087  0016C6  C0A7  F0A8         	movff	___flmul@grs,___flmul@grs+1
  8088  0016CA  6BA7               	clrf	___flmul@grs& (0+255),b
  8089  0016CC  502E               	movf	___flmul@a^0,w,c
  8090  0016CE  022A               	mulwf	___flmul@b^0,c
  8091  0016D0  006F FFCC  F0B0    	movff	prodl,___flmul@temp
  8092  0016D6  006F FFD0  F0B1    	movff	prodh,___flmul@temp+1
  8093  0016DC                     
  8094                           ; BSR set to: 0
  8095  0016DC  51B0               	movf	___flmul@temp& (0+255),w,b
  8096  0016DE  27A7               	addwf	___flmul@grs& (0+255),f,b
  8097  0016E0  51B1               	movf	(___flmul@temp+1)& (0+255),w,b
  8098  0016E2  23A8               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8099  0016E4  0E00               	movlw	0
  8100  0016E6  23A9               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8101  0016E8  0E00               	movlw	0
  8102  0016EA  23AA               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8103  0016EC                     
  8104                           ; BSR set to: 0
  8105  0016EC  5030               	movf	(___flmul@a+2)^0,w,c
  8106  0016EE  022B               	mulwf	(___flmul@b+1)^0,c
  8107  0016F0  006F FFCC  F0B0    	movff	prodl,___flmul@temp
  8108  0016F6  006F FFD0  F0B1    	movff	prodh,___flmul@temp+1
  8109  0016FC  51B0               	movf	___flmul@temp& (0+255),w,b
  8110  0016FE  27AC               	addwf	___flmul@prod& (0+255),f,b
  8111  001700  51B1               	movf	(___flmul@temp+1)& (0+255),w,b
  8112  001702  23AD               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8113  001704  0E00               	movlw	0
  8114  001706  23AE               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8115  001708  0E00               	movlw	0
  8116  00170A  23AF               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8117  00170C                     
  8118                           ; BSR set to: 0
  8119  00170C  502F               	movf	(___flmul@a+1)^0,w,c
  8120  00170E  022C               	mulwf	(___flmul@b+2)^0,c
  8121  001710  006F FFCC  F0B0    	movff	prodl,___flmul@temp
  8122  001716  006F FFD0  F0B1    	movff	prodh,___flmul@temp+1
  8123  00171C                     
  8124                           ; BSR set to: 0
  8125  00171C  51B0               	movf	___flmul@temp& (0+255),w,b
  8126  00171E  27AC               	addwf	___flmul@prod& (0+255),f,b
  8127  001720  51B1               	movf	(___flmul@temp+1)& (0+255),w,b
  8128  001722  23AD               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8129  001724  0E00               	movlw	0
  8130  001726  23AE               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8131  001728  0E00               	movlw	0
  8132  00172A  23AF               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8133  00172C  5030               	movf	(___flmul@a+2)^0,w,c
  8134  00172E  022C               	mulwf	(___flmul@b+2)^0,c
  8135  001730  006F FFCC  F0B0    	movff	prodl,___flmul@temp
  8136  001736  006F FFD0  F0B1    	movff	prodh,___flmul@temp+1
  8137  00173C                     
  8138                           ; BSR set to: 0
  8139  00173C  51B0               	movf	___flmul@temp& (0+255),w,b
  8140  00173E  6E32               	movwf	??___flmul^0,c
  8141  001740  51B1               	movf	(___flmul@temp+1)& (0+255),w,b
  8142  001742  6E33               	movwf	(??___flmul+1)^0,c
  8143  001744  6A34               	clrf	(??___flmul+2)^0,c
  8144  001746  6A35               	clrf	(??___flmul+3)^0,c
  8145  001748  C034  F035         	movff	??___flmul+2,??___flmul+3
  8146  00174C  C033  F034         	movff	??___flmul+1,??___flmul+2
  8147  001750  C032  F033         	movff	??___flmul,??___flmul+1
  8148  001754  6A32               	clrf	??___flmul^0,c
  8149  001756  5032               	movf	??___flmul^0,w,c
  8150  001758  27AC               	addwf	___flmul@prod& (0+255),f,b
  8151  00175A  5033               	movf	(??___flmul+1)^0,w,c
  8152  00175C  23AD               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8153  00175E  5034               	movf	(??___flmul+2)^0,w,c
  8154  001760  23AE               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8155  001762  5035               	movf	(??___flmul+3)^0,w,c
  8156  001764  23AF               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8157  001766                     
  8158                           ; BSR set to: 0
  8159  001766  C0A7  F032         	movff	___flmul@grs,??___flmul
  8160  00176A  C0A8  F033         	movff	___flmul@grs+1,??___flmul+1
  8161  00176E  C0A9  F034         	movff	___flmul@grs+2,??___flmul+2
  8162  001772  C0AA  F035         	movff	___flmul@grs+3,??___flmul+3
  8163  001776  0E19               	movlw	25
  8164  001778  EFC3  F00B         	goto	u5660
  8165  00177C                     u5665:
  8166  00177C  90D8               	bcf	status,0,c
  8167  00177E  3235               	rrcf	(??___flmul+3)^0,f,c
  8168  001780  3234               	rrcf	(??___flmul+2)^0,f,c
  8169  001782  3233               	rrcf	(??___flmul+1)^0,f,c
  8170  001784  3232               	rrcf	??___flmul^0,f,c
  8171  001786                     u5660:
  8172  001786  2EE8               	decfsz	wreg,f,c
  8173  001788  EFBE  F00B         	goto	u5665
  8174  00178C  5032               	movf	??___flmul^0,w,c
  8175  00178E  27AC               	addwf	___flmul@prod& (0+255),f,b
  8176  001790  5033               	movf	(??___flmul+1)^0,w,c
  8177  001792  23AD               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8178  001794  5034               	movf	(??___flmul+2)^0,w,c
  8179  001796  23AE               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8180  001798  5035               	movf	(??___flmul+3)^0,w,c
  8181  00179A  23AF               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8182  00179C                     
  8183                           ; BSR set to: 0
  8184  00179C  C0A9  F0AA         	movff	___flmul@grs+2,___flmul@grs+3
  8185  0017A0  C0A8  F0A9         	movff	___flmul@grs+1,___flmul@grs+2
  8186  0017A4  C0A7  F0A8         	movff	___flmul@grs,___flmul@grs+1
  8187  0017A8  6BA7               	clrf	___flmul@grs& (0+255),b
  8188  0017AA                     
  8189                           ; BSR set to: 0
  8190  0017AA  51A6               	movf	___flmul@aexp& (0+255),w,b
  8191  0017AC  C0AB  F032         	movff	___flmul@bexp,??___flmul
  8192  0017B0  6A33               	clrf	(??___flmul+1)^0,c
  8193  0017B2  2632               	addwf	??___flmul^0,f,c
  8194  0017B4  0E00               	movlw	0
  8195  0017B6  2233               	addwfc	(??___flmul+1)^0,f,c
  8196  0017B8  0E82               	movlw	130
  8197  0017BA  2432               	addwf	??___flmul^0,w,c
  8198  0017BC  6FB0               	movwf	___flmul@temp& (0+255),b
  8199  0017BE  0EFF               	movlw	255
  8200  0017C0  2033               	addwfc	(??___flmul+1)^0,w,c
  8201  0017C2  6FB1               	movwf	(___flmul@temp+1)& (0+255),b
  8202  0017C4  EFF9  F00B         	goto	l6494
  8203  0017C8                     l6488:
  8204                           
  8205                           ; BSR set to: 0
  8206  0017C8  90D8               	bcf	status,0,c
  8207  0017CA  37AC               	rlcf	___flmul@prod& (0+255),f,b
  8208  0017CC  37AD               	rlcf	(___flmul@prod+1)& (0+255),f,b
  8209  0017CE  37AE               	rlcf	(___flmul@prod+2)& (0+255),f,b
  8210  0017D0  37AF               	rlcf	(___flmul@prod+3)& (0+255),f,b
  8211  0017D2                     
  8212                           ; BSR set to: 0
  8213  0017D2  AFAA               	btfss	(___flmul@grs+3)& (0+255),7,b
  8214  0017D4  EFEE  F00B         	goto	u5671
  8215  0017D8  EFF0  F00B         	goto	u5670
  8216  0017DC                     u5671:
  8217  0017DC  EFF1  F00B         	goto	l2018
  8218  0017E0                     u5670:
  8219  0017E0                     
  8220                           ; BSR set to: 0
  8221  0017E0  81AC               	bsf	___flmul@prod& (0+255),0,b
  8222  0017E2                     l2018:
  8223                           
  8224                           ; BSR set to: 0
  8225  0017E2  90D8               	bcf	status,0,c
  8226  0017E4  37A7               	rlcf	___flmul@grs& (0+255),f,b
  8227  0017E6  37A8               	rlcf	(___flmul@grs+1)& (0+255),f,b
  8228  0017E8  37A9               	rlcf	(___flmul@grs+2)& (0+255),f,b
  8229  0017EA  37AA               	rlcf	(___flmul@grs+3)& (0+255),f,b
  8230  0017EC  07B0               	decf	___flmul@temp& (0+255),f,b
  8231  0017EE  A0D8               	btfss	status,0,c
  8232  0017F0  07B1               	decf	(___flmul@temp+1)& (0+255),f,b
  8233  0017F2                     l6494:
  8234                           
  8235                           ; BSR set to: 0
  8236  0017F2  AFAE               	btfss	(___flmul@prod+2)& (0+255),7,b
  8237  0017F4  EFFE  F00B         	goto	u5681
  8238  0017F8  EF00  F00C         	goto	u5680
  8239  0017FC                     u5681:
  8240  0017FC  EFE4  F00B         	goto	l6488
  8241  001800                     u5680:
  8242  001800                     
  8243                           ; BSR set to: 0
  8244  001800  0E00               	movlw	0
  8245  001802  6FA6               	movwf	___flmul@aexp& (0+255),b
  8246  001804                     
  8247                           ; BSR set to: 0
  8248  001804  AFAA               	btfss	(___flmul@grs+3)& (0+255),7,b
  8249  001806  EF07  F00C         	goto	u5691
  8250  00180A  EF09  F00C         	goto	u5690
  8251  00180E                     u5691:
  8252  00180E  EF2D  F00C         	goto	l2020
  8253  001812                     u5690:
  8254  001812                     
  8255                           ; BSR set to: 0
  8256  001812  0EFF               	movlw	255
  8257  001814  15A7               	andwf	___flmul@grs& (0+255),w,b
  8258  001816  6E32               	movwf	??___flmul^0,c
  8259  001818  0EFF               	movlw	255
  8260  00181A  15A8               	andwf	(___flmul@grs+1)& (0+255),w,b
  8261  00181C  6E33               	movwf	(??___flmul+1)^0,c
  8262  00181E  0EFF               	movlw	255
  8263  001820  15A9               	andwf	(___flmul@grs+2)& (0+255),w,b
  8264  001822  6E34               	movwf	(??___flmul+2)^0,c
  8265  001824  0E7F               	movlw	127
  8266  001826  15AA               	andwf	(___flmul@grs+3)& (0+255),w,b
  8267  001828  6E35               	movwf	(??___flmul+3)^0,c
  8268  00182A  5032               	movf	??___flmul^0,w,c
  8269  00182C  1033               	iorwf	(??___flmul+1)^0,w,c
  8270  00182E  1034               	iorwf	(??___flmul+2)^0,w,c
  8271  001830  1035               	iorwf	(??___flmul+3)^0,w,c
  8272  001832  B4D8               	btfsc	status,2,c
  8273  001834  EF1E  F00C         	goto	u5701
  8274  001838  EF20  F00C         	goto	u5700
  8275  00183C                     u5701:
  8276  00183C  EF24  F00C         	goto	l2021
  8277  001840                     u5700:
  8278  001840                     l6502:
  8279                           
  8280                           ; BSR set to: 0
  8281  001840  0E01               	movlw	1
  8282  001842  6FA6               	movwf	___flmul@aexp& (0+255),b
  8283  001844  EF2D  F00C         	goto	l2020
  8284  001848                     l2021:
  8285                           
  8286                           ; BSR set to: 0
  8287  001848  A1AC               	btfss	___flmul@prod& (0+255),0,b
  8288  00184A  EF29  F00C         	goto	u5711
  8289  00184E  EF2B  F00C         	goto	u5710
  8290  001852                     u5711:
  8291  001852  EF2D  F00C         	goto	l2020
  8292  001856                     u5710:
  8293  001856  EF20  F00C         	goto	l6502
  8294  00185A                     l2020:
  8295                           
  8296                           ; BSR set to: 0
  8297  00185A  51A6               	movf	___flmul@aexp& (0+255),w,b
  8298  00185C  B4D8               	btfsc	status,2,c
  8299  00185E  EF33  F00C         	goto	u5721
  8300  001862  EF35  F00C         	goto	u5720
  8301  001866                     u5721:
  8302  001866  EF59  F00C         	goto	l6514
  8303  00186A                     u5720:
  8304  00186A                     
  8305                           ; BSR set to: 0
  8306  00186A  0E01               	movlw	1
  8307  00186C  27AC               	addwf	___flmul@prod& (0+255),f,b
  8308  00186E  0E00               	movlw	0
  8309  001870  23AD               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8310  001872  23AE               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8311  001874  23AF               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8312  001876                     
  8313                           ; BSR set to: 0
  8314  001876  A1AF               	btfss	(___flmul@prod+3)& (0+255),0,b
  8315  001878  EF40  F00C         	goto	u5731
  8316  00187C  EF42  F00C         	goto	u5730
  8317  001880                     u5731:
  8318  001880  EF59  F00C         	goto	l6514
  8319  001884                     u5730:
  8320  001884                     
  8321                           ; BSR set to: 0
  8322  001884  C0AC  F032         	movff	___flmul@prod,??___flmul
  8323  001888  C0AD  F033         	movff	___flmul@prod+1,??___flmul+1
  8324  00188C  C0AE  F034         	movff	___flmul@prod+2,??___flmul+2
  8325  001890  C0AF  F035         	movff	___flmul@prod+3,??___flmul+3
  8326  001894  3435               	rlcf	(??___flmul+3)^0,w,c
  8327  001896  3235               	rrcf	(??___flmul+3)^0,f,c
  8328  001898  3234               	rrcf	(??___flmul+2)^0,f,c
  8329  00189A  3233               	rrcf	(??___flmul+1)^0,f,c
  8330  00189C  3232               	rrcf	??___flmul^0,f,c
  8331  00189E  C032  F0AC         	movff	??___flmul,___flmul@prod
  8332  0018A2  C033  F0AD         	movff	??___flmul+1,___flmul@prod+1
  8333  0018A6  C034  F0AE         	movff	??___flmul+2,___flmul@prod+2
  8334  0018AA  C035  F0AF         	movff	??___flmul+3,___flmul@prod+3
  8335  0018AE                     
  8336                           ; BSR set to: 0
  8337  0018AE  4BB0               	infsnz	___flmul@temp& (0+255),f,b
  8338  0018B0  2BB1               	incf	(___flmul@temp+1)& (0+255),f,b
  8339  0018B2                     l6514:
  8340                           
  8341                           ; BSR set to: 0
  8342  0018B2  BFB1               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8343  0018B4  EF64  F00C         	goto	u5741
  8344  0018B8  51B1               	movf	(___flmul@temp+1)& (0+255),w,b
  8345  0018BA  E108               	bnz	u5740
  8346  0018BC  29B0               	incf	___flmul@temp& (0+255),w,b
  8347  0018BE  A0D8               	btfss	status,0,c
  8348  0018C0  EF64  F00C         	goto	u5741
  8349  0018C4  EF66  F00C         	goto	u5740
  8350  0018C8                     u5741:
  8351  0018C8  EF70  F00C         	goto	l6518
  8352  0018CC                     u5740:
  8353  0018CC                     
  8354                           ; BSR set to: 0
  8355  0018CC  0E00               	movlw	0
  8356  0018CE  6FAC               	movwf	___flmul@prod& (0+255),b
  8357  0018D0  0E00               	movlw	0
  8358  0018D2  6FAD               	movwf	(___flmul@prod+1)& (0+255),b
  8359  0018D4  0E80               	movlw	128
  8360  0018D6  6FAE               	movwf	(___flmul@prod+2)& (0+255),b
  8361  0018D8  0E7F               	movlw	127
  8362  0018DA  6FAF               	movwf	(___flmul@prod+3)& (0+255),b
  8363  0018DC  EF9E  F00C         	goto	l6530
  8364  0018E0                     l6518:
  8365                           
  8366                           ; BSR set to: 0
  8367  0018E0  BFB1               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8368  0018E2  EF7D  F00C         	goto	u5750
  8369  0018E6  51B1               	movf	(___flmul@temp+1)& (0+255),w,b
  8370  0018E8  E106               	bnz	u5751
  8371  0018EA  05B0               	decf	___flmul@temp& (0+255),w,b
  8372  0018EC  B0D8               	btfsc	status,0,c
  8373  0018EE  EF7B  F00C         	goto	u5751
  8374  0018F2  EF7D  F00C         	goto	u5750
  8375  0018F6                     u5751:
  8376  0018F6  EF89  F00C         	goto	l2028
  8377  0018FA                     u5750:
  8378  0018FA                     
  8379                           ; BSR set to: 0
  8380  0018FA  0E00               	movlw	0
  8381  0018FC  6FAC               	movwf	___flmul@prod& (0+255),b
  8382  0018FE  0E00               	movlw	0
  8383  001900  6FAD               	movwf	(___flmul@prod+1)& (0+255),b
  8384  001902  0E00               	movlw	0
  8385  001904  6FAE               	movwf	(___flmul@prod+2)& (0+255),b
  8386  001906  0E00               	movlw	0
  8387  001908  6FAF               	movwf	(___flmul@prod+3)& (0+255),b
  8388  00190A  0E00               	movlw	0
  8389  00190C  6FA5               	movwf	___flmul@sign& (0+255),b
  8390  00190E  EF9E  F00C         	goto	l6530
  8391  001912                     l2028:
  8392                           
  8393                           ; BSR set to: 0
  8394  001912  C0B0  F0AB         	movff	___flmul@temp,___flmul@bexp
  8395  001916                     
  8396                           ; BSR set to: 0
  8397  001916  0EFF               	movlw	255
  8398  001918  17AC               	andwf	___flmul@prod& (0+255),f,b
  8399  00191A  0EFF               	movlw	255
  8400  00191C  17AD               	andwf	(___flmul@prod+1)& (0+255),f,b
  8401  00191E  0E7F               	movlw	127
  8402  001920  17AE               	andwf	(___flmul@prod+2)& (0+255),f,b
  8403  001922  0E00               	movlw	0
  8404  001924  17AF               	andwf	(___flmul@prod+3)& (0+255),f,b
  8405  001926                     
  8406                           ; BSR set to: 0
  8407  001926  A1AB               	btfss	___flmul@bexp& (0+255),0,b
  8408  001928  EF98  F00C         	goto	u5761
  8409  00192C  EF9A  F00C         	goto	u5760
  8410  001930                     u5761:
  8411  001930  EF9B  F00C         	goto	l6528
  8412  001934                     u5760:
  8413  001934                     
  8414                           ; BSR set to: 0
  8415  001934  8FAE               	bsf	(___flmul@prod+2)& (0+255),7,b
  8416  001936                     l6528:
  8417                           
  8418                           ; BSR set to: 0
  8419  001936  90D8               	bcf	status,0,c
  8420  001938  31AB               	rrcf	___flmul@bexp& (0+255),w,b
  8421  00193A  6FAF               	movwf	(___flmul@prod+3)& (0+255),b
  8422  00193C                     l6530:
  8423                           
  8424                           ; BSR set to: 0
  8425  00193C  51A5               	movf	___flmul@sign& (0+255),w,b
  8426  00193E  13AF               	iorwf	(___flmul@prod+3)& (0+255),f,b
  8427  001940                     
  8428                           ; BSR set to: 0
  8429  001940  C0AC  F02A         	movff	___flmul@prod,?___flmul
  8430  001944  C0AD  F02B         	movff	___flmul@prod+1,?___flmul+1
  8431  001948  C0AE  F02C         	movff	___flmul@prod+2,?___flmul+2
  8432  00194C  C0AF  F02D         	movff	___flmul@prod+3,?___flmul+3
  8433  001950                     l2015:
  8434                           
  8435                           ; BSR set to: 0
  8436  001950  0012               	return		;funcret
  8437  001952                     __end_of___flmul:
  8438                           	callstack 0
  8439                           
  8440 ;; *************** function ___awdiv *****************
  8441 ;; Defined at:
  8442 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  8443 ;; Parameters:    Size  Location     Type
  8444 ;;  dividend        2   19[COMRAM] int 
  8445 ;;  divisor         2   21[COMRAM] int 
  8446 ;; Auto vars:     Size  Location     Type
  8447 ;;  quotient        2   25[COMRAM] int 
  8448 ;;  sign            1   24[COMRAM] unsigned char 
  8449 ;;  counter         1   23[COMRAM] unsigned char 
  8450 ;; Return value:  Size  Location     Type
  8451 ;;                  2   19[COMRAM] int 
  8452 ;; Registers used:
  8453 ;;		wreg, status,2, status,0
  8454 ;; Tracked objects:
  8455 ;;		On entry : 0/0
  8456 ;;		On exit  : 0/0
  8457 ;;		Unchanged: 0/0
  8458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8459 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8460 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8462 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8463 ;;Total ram usage:        8 bytes
  8464 ;; Hardware stack levels used: 1
  8465 ;; Hardware stack levels required when called: 8
  8466 ;; This function calls:
  8467 ;;		Nothing
  8468 ;; This function is called by:
  8469 ;;		_calcSteering
  8470 ;;		_calcMotorPow
  8471 ;;		_setSteering
  8472 ;; This function uses a non-reentrant model
  8473 ;;
  8474                           
  8475                           	psect	text36
  8476  00336A                     __ptext36:
  8477                           	callstack 0
  8478  00336A                     ___awdiv:
  8479                           	callstack 20
  8480  00336A  0E00               	movlw	0
  8481  00336C  6E19               	movwf	___awdiv@sign^0,c
  8482  00336E  BE17               	btfsc	(___awdiv@divisor+1)^0,7,c
  8483  003370  EFBE  F019         	goto	u2950
  8484  003374  EFBC  F019         	goto	u2951
  8485  003378                     u2951:
  8486  003378  EFC4  F019         	goto	l4552
  8487  00337C                     u2950:
  8488  00337C  6C16               	negf	___awdiv@divisor^0,c
  8489  00337E  1E17               	comf	(___awdiv@divisor+1)^0,f,c
  8490  003380  B0D8               	btfsc	status,0,c
  8491  003382  2A17               	incf	(___awdiv@divisor+1)^0,f,c
  8492  003384  0E01               	movlw	1
  8493  003386  6E19               	movwf	___awdiv@sign^0,c
  8494  003388                     l4552:
  8495  003388  BE15               	btfsc	(___awdiv@dividend+1)^0,7,c
  8496  00338A  EFCB  F019         	goto	u2960
  8497  00338E  EFC9  F019         	goto	u2961
  8498  003392                     u2961:
  8499  003392  EFD1  F019         	goto	l4558
  8500  003396                     u2960:
  8501  003396  6C14               	negf	___awdiv@dividend^0,c
  8502  003398  1E15               	comf	(___awdiv@dividend+1)^0,f,c
  8503  00339A  B0D8               	btfsc	status,0,c
  8504  00339C  2A15               	incf	(___awdiv@dividend+1)^0,f,c
  8505  00339E  0E01               	movlw	1
  8506  0033A0  1A19               	xorwf	___awdiv@sign^0,f,c
  8507  0033A2                     l4558:
  8508  0033A2  0E00               	movlw	0
  8509  0033A4  6E1B               	movwf	(___awdiv@quotient+1)^0,c
  8510  0033A6  0E00               	movlw	0
  8511  0033A8  6E1A               	movwf	___awdiv@quotient^0,c
  8512  0033AA  5016               	movf	___awdiv@divisor^0,w,c
  8513  0033AC  1017               	iorwf	(___awdiv@divisor+1)^0,w,c
  8514  0033AE  B4D8               	btfsc	status,2,c
  8515  0033B0  EFDC  F019         	goto	u2971
  8516  0033B4  EFDE  F019         	goto	u2970
  8517  0033B8                     u2971:
  8518  0033B8  EF06  F01A         	goto	l4580
  8519  0033BC                     u2970:
  8520  0033BC  0E01               	movlw	1
  8521  0033BE  6E18               	movwf	___awdiv@counter^0,c
  8522  0033C0  EFE6  F019         	goto	l4566
  8523  0033C4                     l4564:
  8524  0033C4  90D8               	bcf	status,0,c
  8525  0033C6  3616               	rlcf	___awdiv@divisor^0,f,c
  8526  0033C8  3617               	rlcf	(___awdiv@divisor+1)^0,f,c
  8527  0033CA  2A18               	incf	___awdiv@counter^0,f,c
  8528  0033CC                     l4566:
  8529  0033CC  AE17               	btfss	(___awdiv@divisor+1)^0,7,c
  8530  0033CE  EFEB  F019         	goto	u2981
  8531  0033D2  EFED  F019         	goto	u2980
  8532  0033D6                     u2981:
  8533  0033D6  EFE2  F019         	goto	l4564
  8534  0033DA                     u2980:
  8535  0033DA                     l4568:
  8536  0033DA  90D8               	bcf	status,0,c
  8537  0033DC  361A               	rlcf	___awdiv@quotient^0,f,c
  8538  0033DE  361B               	rlcf	(___awdiv@quotient+1)^0,f,c
  8539  0033E0  5016               	movf	___awdiv@divisor^0,w,c
  8540  0033E2  5C14               	subwf	___awdiv@dividend^0,w,c
  8541  0033E4  5017               	movf	(___awdiv@divisor+1)^0,w,c
  8542  0033E6  5815               	subwfb	(___awdiv@dividend+1)^0,w,c
  8543  0033E8  A0D8               	btfss	status,0,c
  8544  0033EA  EFF9  F019         	goto	u2991
  8545  0033EE  EFFB  F019         	goto	u2990
  8546  0033F2                     u2991:
  8547  0033F2  EF00  F01A         	goto	l4576
  8548  0033F6                     u2990:
  8549  0033F6  5016               	movf	___awdiv@divisor^0,w,c
  8550  0033F8  5E14               	subwf	___awdiv@dividend^0,f,c
  8551  0033FA  5017               	movf	(___awdiv@divisor+1)^0,w,c
  8552  0033FC  5A15               	subwfb	(___awdiv@dividend+1)^0,f,c
  8553  0033FE  801A               	bsf	___awdiv@quotient^0,0,c
  8554  003400                     l4576:
  8555  003400  90D8               	bcf	status,0,c
  8556  003402  3217               	rrcf	(___awdiv@divisor+1)^0,f,c
  8557  003404  3216               	rrcf	___awdiv@divisor^0,f,c
  8558  003406  2E18               	decfsz	___awdiv@counter^0,f,c
  8559  003408  EFED  F019         	goto	l4568
  8560  00340C                     l4580:
  8561  00340C  5019               	movf	___awdiv@sign^0,w,c
  8562  00340E  B4D8               	btfsc	status,2,c
  8563  003410  EF0C  F01A         	goto	u3001
  8564  003414  EF0E  F01A         	goto	u3000
  8565  003418                     u3001:
  8566  003418  EF12  F01A         	goto	l4584
  8567  00341C                     u3000:
  8568  00341C  6C1A               	negf	___awdiv@quotient^0,c
  8569  00341E  1E1B               	comf	(___awdiv@quotient+1)^0,f,c
  8570  003420  B0D8               	btfsc	status,0,c
  8571  003422  2A1B               	incf	(___awdiv@quotient+1)^0,f,c
  8572  003424                     l4584:
  8573  003424  C01A  F014         	movff	___awdiv@quotient,?___awdiv
  8574  003428  C01B  F015         	movff	___awdiv@quotient+1,?___awdiv+1
  8575  00342C  0012               	return		;funcret
  8576  00342E                     __end_of___awdiv:
  8577                           	callstack 0
  8578                           
  8579 ;; *************** function _SYSTEM_Initialize *****************
  8580 ;; Defined at:
  8581 ;;		line 50 in file "mcc_generated_files/mcc.c"
  8582 ;; Parameters:    Size  Location     Type
  8583 ;;		None
  8584 ;; Auto vars:     Size  Location     Type
  8585 ;;		None
  8586 ;; Return value:  Size  Location     Type
  8587 ;;                  1    wreg      void 
  8588 ;; Registers used:
  8589 ;;		wreg, status,2, status,0, cstack
  8590 ;; Tracked objects:
  8591 ;;		On entry : 0/0
  8592 ;;		On exit  : 0/0
  8593 ;;		Unchanged: 0/0
  8594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8598 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8599 ;;Total ram usage:        0 bytes
  8600 ;; Hardware stack levels used: 1
  8601 ;; Hardware stack levels required when called: 10
  8602 ;; This function calls:
  8603 ;;		_ADCC_Initialize
  8604 ;;		_CCP3_Initialize
  8605 ;;		_CCP4_Initialize
  8606 ;;		_CLC3_Initialize
  8607 ;;		_INTERRUPT_Initialize
  8608 ;;		_OSCILLATOR_Initialize
  8609 ;;		_PIN_MANAGER_Initialize
  8610 ;;		_PMD_Initialize
  8611 ;;		_PWM5_Initialize
  8612 ;;		_PWM6_Initialize
  8613 ;;		_PWM7_Initialize
  8614 ;;		_PWM8_Initialize
  8615 ;;		_SMT1_Initialize
  8616 ;;		_TMR2_Initialize
  8617 ;;		_TMR3_Initialize
  8618 ;;		_TMR4_Initialize
  8619 ;;		_TMR5_Initialize
  8620 ;;		_UART1_Initialize
  8621 ;; This function is called by:
  8622 ;;		_main
  8623 ;; This function uses a non-reentrant model
  8624 ;;
  8625                           
  8626                           	psect	text37
  8627  003A22                     __ptext37:
  8628                           	callstack 0
  8629  003A22                     _SYSTEM_Initialize:
  8630                           	callstack 20
  8631  003A22                     
  8632                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
  8633  003A22  ECEB  F01C         	call	_INTERRUPT_Initialize	;wreg free
  8634                           
  8635                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  8636  003A26  EC52  F020         	call	_PMD_Initialize	;wreg free
  8637                           
  8638                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  8639  003A2A  EC50  F019         	call	_PIN_MANAGER_Initialize	;wreg free
  8640                           
  8641                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  8642  003A2E  ECD3  F020         	call	_OSCILLATOR_Initialize	;wreg free
  8643  003A32                     
  8644                           ;mcc_generated_files/mcc.c: 56:     CCP3_Initialize();
  8645  003A32  ECA4  F01F         	call	_CCP3_Initialize	;wreg free
  8646  003A36                     
  8647                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
  8648  003A36  EC69  F01C         	call	_ADCC_Initialize	;wreg free
  8649                           
  8650                           ;mcc_generated_files/mcc.c: 58:     TMR4_Initialize();
  8651  003A3A  ECD2  F01F         	call	_TMR4_Initialize	;wreg free
  8652  003A3E                     
  8653                           ;mcc_generated_files/mcc.c: 59:     SMT1_Initialize();
  8654  003A3E  EC45  F01F         	call	_SMT1_Initialize	;wreg free
  8655  003A42                     
  8656                           ;mcc_generated_files/mcc.c: 60:     PWM8_Initialize();
  8657  003A42  ECA3  F020         	call	_PWM8_Initialize	;wreg free
  8658  003A46                     
  8659                           ;mcc_generated_files/mcc.c: 61:     TMR2_Initialize();
  8660  003A46  EC95  F020         	call	_TMR2_Initialize	;wreg free
  8661  003A4A                     
  8662                           ;mcc_generated_files/mcc.c: 62:     PWM6_Initialize();
  8663  003A4A  ECBB  F020         	call	_PWM6_Initialize	;wreg free
  8664                           
  8665                           ;mcc_generated_files/mcc.c: 63:     CCP4_Initialize();
  8666  003A4E  EC8D  F01F         	call	_CCP4_Initialize	;wreg free
  8667  003A52                     
  8668                           ;mcc_generated_files/mcc.c: 64:     CLC3_Initialize();
  8669  003A52  ECE8  F01F         	call	_CLC3_Initialize	;wreg free
  8670  003A56                     
  8671                           ;mcc_generated_files/mcc.c: 65:     TMR3_Initialize();
  8672  003A56  EC3D  F01E         	call	_TMR3_Initialize	;wreg free
  8673                           
  8674                           ;mcc_generated_files/mcc.c: 66:     PWM5_Initialize();
  8675  003A5A  ECC7  F020         	call	_PWM5_Initialize	;wreg free
  8676  003A5E                     
  8677                           ;mcc_generated_files/mcc.c: 67:     TMR5_Initialize();
  8678  003A5E  EC36  F01D         	call	_TMR5_Initialize	;wreg free
  8679  003A62                     
  8680                           ;mcc_generated_files/mcc.c: 68:     PWM7_Initialize();
  8681  003A62  ECAF  F020         	call	_PWM7_Initialize	;wreg free
  8682                           
  8683                           ;mcc_generated_files/mcc.c: 69:     UART1_Initialize();
  8684  003A66  ECD8  F01A         	call	_UART1_Initialize	;wreg free
  8685  003A6A  0012               	return		;funcret
  8686  003A6C                     __end_of_SYSTEM_Initialize:
  8687                           	callstack 0
  8688                           
  8689 ;; *************** function _UART1_Initialize *****************
  8690 ;; Defined at:
  8691 ;;		line 87 in file "mcc_generated_files/uart1.c"
  8692 ;; Parameters:    Size  Location     Type
  8693 ;;		None
  8694 ;; Auto vars:     Size  Location     Type
  8695 ;;		None
  8696 ;; Return value:  Size  Location     Type
  8697 ;;                  1    wreg      void 
  8698 ;; Registers used:
  8699 ;;		wreg, status,2, status,0, cstack
  8700 ;; Tracked objects:
  8701 ;;		On entry : 0/0
  8702 ;;		On exit  : 0/0
  8703 ;;		Unchanged: 0/0
  8704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8708 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8709 ;;Total ram usage:        0 bytes
  8710 ;; Hardware stack levels used: 1
  8711 ;; Hardware stack levels required when called: 9
  8712 ;; This function calls:
  8713 ;;		_UART1_SetErrorHandler
  8714 ;;		_UART1_SetFramingErrorHandler
  8715 ;;		_UART1_SetOverrunErrorHandler
  8716 ;;		_UART1_SetRxInterruptHandler
  8717 ;;		_UART1_SetTxInterruptHandler
  8718 ;; This function is called by:
  8719 ;;		_SYSTEM_Initialize
  8720 ;; This function uses a non-reentrant model
  8721 ;;
  8722                           
  8723                           	psect	text38
  8724  0035B0                     __ptext38:
  8725                           	callstack 0
  8726  0035B0                     _UART1_Initialize:
  8727                           	callstack 20
  8728  0035B0                     
  8729                           ;mcc_generated_files/uart1.c: 90:     PIE3bits.U1RXIE = 0;
  8730  0035B0  0139               	movlb	57	; () banked
  8731  0035B2  9793               	bcf	147,3,b	;volatile
  8732  0035B4                     
  8733                           ; BSR set to: 57
  8734                           ;mcc_generated_files/uart1.c: 91:     UART1_SetRxInterruptHandler(UART1_Receive_ISR);
  8735  0035B4  0EF0               	movlw	low _UART1_Receive_ISR
  8736  0035B6  6E14               	movwf	UART1_SetRxInterruptHandler@InterruptHandler^0,c
  8737  0035B8  0E34               	movlw	high _UART1_Receive_ISR
  8738  0035BA  6E15               	movwf	(UART1_SetRxInterruptHandler@InterruptHandler+1)^0,c
  8739  0035BC  ECF8  F020         	call	_UART1_SetRxInterruptHandler	;wreg free
  8740  0035C0                     
  8741                           ;mcc_generated_files/uart1.c: 92:     PIE3bits.U1TXIE = 0;
  8742  0035C0  0139               	movlb	57	; () banked
  8743  0035C2  9993               	bcf	147,4,b	;volatile
  8744                           
  8745                           ;mcc_generated_files/uart1.c: 93:     UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
  8746  0035C4  0E46               	movlw	low _UART1_Transmit_ISR
  8747  0035C6  6E14               	movwf	UART1_SetTxInterruptHandler@InterruptHandler^0,c
  8748  0035C8  0E3B               	movlw	high _UART1_Transmit_ISR
  8749  0035CA  6E15               	movwf	(UART1_SetTxInterruptHandler@InterruptHandler+1)^0,c
  8750  0035CC  ECF3  F020         	call	_UART1_SetTxInterruptHandler	;wreg free
  8751  0035D0                     
  8752                           ;mcc_generated_files/uart1.c: 98:     U1P1L = 0x00;
  8753  0035D0  0E00               	movlw	0
  8754  0035D2  013D               	movlb	61	; () banked
  8755  0035D4  6FEC               	movwf	236,b	;volatile
  8756  0035D6                     
  8757                           ; BSR set to: 61
  8758                           ;mcc_generated_files/uart1.c: 101:     U1P1H = 0x00;
  8759  0035D6  0E00               	movlw	0
  8760  0035D8  6FED               	movwf	237,b	;volatile
  8761  0035DA                     
  8762                           ; BSR set to: 61
  8763                           ;mcc_generated_files/uart1.c: 104:     U1P2L = 0x00;
  8764  0035DA  0E00               	movlw	0
  8765  0035DC  6FEE               	movwf	238,b	;volatile
  8766  0035DE                     
  8767                           ; BSR set to: 61
  8768                           ;mcc_generated_files/uart1.c: 107:     U1P2H = 0x00;
  8769  0035DE  0E00               	movlw	0
  8770  0035E0  6FEF               	movwf	239,b	;volatile
  8771  0035E2                     
  8772                           ; BSR set to: 61
  8773                           ;mcc_generated_files/uart1.c: 110:     U1P3L = 0x00;
  8774  0035E2  0E00               	movlw	0
  8775  0035E4  6FF0               	movwf	240,b	;volatile
  8776  0035E6                     
  8777                           ; BSR set to: 61
  8778                           ;mcc_generated_files/uart1.c: 113:     U1P3H = 0x00;
  8779  0035E6  0E00               	movlw	0
  8780  0035E8  6FF1               	movwf	241,b	;volatile
  8781  0035EA                     
  8782                           ; BSR set to: 61
  8783                           ;mcc_generated_files/uart1.c: 116:     U1CON0 = 0xB0;
  8784  0035EA  0EB0               	movlw	176
  8785  0035EC  6FF2               	movwf	242,b	;volatile
  8786  0035EE                     
  8787                           ; BSR set to: 61
  8788                           ;mcc_generated_files/uart1.c: 119:     U1CON1 = 0x80;
  8789  0035EE  0E80               	movlw	128
  8790  0035F0  6FF3               	movwf	243,b	;volatile
  8791  0035F2                     
  8792                           ; BSR set to: 61
  8793                           ;mcc_generated_files/uart1.c: 122:     U1CON2 = 0x00;
  8794  0035F2  0E00               	movlw	0
  8795  0035F4  6FF4               	movwf	244,b	;volatile
  8796  0035F6                     
  8797                           ; BSR set to: 61
  8798                           ;mcc_generated_files/uart1.c: 125:     U1BRGL = 0x8A;
  8799  0035F6  0E8A               	movlw	138
  8800  0035F8  6FF5               	movwf	245,b	;volatile
  8801  0035FA                     
  8802                           ; BSR set to: 61
  8803                           ;mcc_generated_files/uart1.c: 128:     U1BRGH = 0x00;
  8804  0035FA  0E00               	movlw	0
  8805  0035FC  6FF6               	movwf	246,b	;volatile
  8806  0035FE                     
  8807                           ; BSR set to: 61
  8808                           ;mcc_generated_files/uart1.c: 131:     U1FIFO = 0x00;
  8809  0035FE  0E00               	movlw	0
  8810  003600  6FF7               	movwf	247,b	;volatile
  8811  003602                     
  8812                           ; BSR set to: 61
  8813                           ;mcc_generated_files/uart1.c: 134:     U1UIR = 0x00;
  8814  003602  0E00               	movlw	0
  8815  003604  6FF8               	movwf	248,b	;volatile
  8816  003606                     
  8817                           ; BSR set to: 61
  8818                           ;mcc_generated_files/uart1.c: 137:     U1ERRIR = 0x00;
  8819  003606  0E00               	movlw	0
  8820  003608  6FF9               	movwf	249,b	;volatile
  8821  00360A                     
  8822                           ; BSR set to: 61
  8823                           ;mcc_generated_files/uart1.c: 140:     U1ERRIE = 0x00;
  8824  00360A  0E00               	movlw	0
  8825  00360C  6FFA               	movwf	250,b	;volatile
  8826  00360E                     
  8827                           ; BSR set to: 61
  8828                           ;mcc_generated_files/uart1.c: 143:     UART1_SetFramingErrorHandler(UART1_DefaultFraming
      +                          ErrorHandler);
  8829  00360E  0E50               	movlw	low _UART1_DefaultFramingErrorHandler
  8830  003610  6E14               	movwf	UART1_SetFramingErrorHandler@interruptHandler^0,c
  8831  003612  0E42               	movlw	high _UART1_DefaultFramingErrorHandler
  8832  003614  6E15               	movwf	(UART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  8833  003616  EC02  F021         	call	_UART1_SetFramingErrorHandler	;wreg free
  8834  00361A                     
  8835                           ;mcc_generated_files/uart1.c: 144:     UART1_SetOverrunErrorHandler(UART1_DefaultOverrun
      +                          ErrorHandler);
  8836  00361A  0E4E               	movlw	low _UART1_DefaultOverrunErrorHandler
  8837  00361C  6E14               	movwf	UART1_SetOverrunErrorHandler@interruptHandler^0,c
  8838  00361E  0E42               	movlw	high _UART1_DefaultOverrunErrorHandler
  8839  003620  6E15               	movwf	(UART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  8840  003622  ECFD  F020         	call	_UART1_SetOverrunErrorHandler	;wreg free
  8841  003626                     
  8842                           ;mcc_generated_files/uart1.c: 145:     UART1_SetErrorHandler(UART1_DefaultErrorHandler);
  8843  003626  0E40               	movlw	low _UART1_DefaultErrorHandler
  8844  003628  6E14               	movwf	UART1_SetErrorHandler@interruptHandler^0,c
  8845  00362A  0E42               	movlw	high _UART1_DefaultErrorHandler
  8846  00362C  6E15               	movwf	(UART1_SetErrorHandler@interruptHandler+1)^0,c
  8847  00362E  EC07  F021         	call	_UART1_SetErrorHandler	;wreg free
  8848                           
  8849                           ;mcc_generated_files/uart1.c: 147:     uart1RxLastError.status = 0;
  8850  003632  0E00               	movlw	0
  8851  003634  6E42               	movwf	_uart1RxLastError^0,c	;volatile
  8852                           
  8853                           ;mcc_generated_files/uart1.c: 150:     uart1TxHead = 0;
  8854  003636  0E00               	movlw	0
  8855  003638  6E47               	movwf	_uart1TxHead^0,c	;volatile
  8856                           
  8857                           ;mcc_generated_files/uart1.c: 151:     uart1TxTail = 0;
  8858  00363A  0E00               	movlw	0
  8859  00363C  6E46               	movwf	_uart1TxTail^0,c	;volatile
  8860                           
  8861                           ;mcc_generated_files/uart1.c: 152:     uart1TxBufferRemaining = sizeof(uart1TxBuffer);
  8862  00363E  0E08               	movlw	8
  8863  003640  6E4C               	movwf	_uart1TxBufferRemaining^0,c	;volatile
  8864                           
  8865                           ;mcc_generated_files/uart1.c: 153:     uart1RxHead = 0;
  8866  003642  0E00               	movlw	0
  8867  003644  6E45               	movwf	_uart1RxHead^0,c	;volatile
  8868                           
  8869                           ;mcc_generated_files/uart1.c: 154:     uart1RxTail = 0;
  8870  003646  0E00               	movlw	0
  8871  003648  6E44               	movwf	_uart1RxTail^0,c	;volatile
  8872                           
  8873                           ;mcc_generated_files/uart1.c: 155:     uart1RxCount = 0;
  8874  00364A  0E00               	movlw	0
  8875  00364C  6E43               	movwf	_uart1RxCount^0,c	;volatile
  8876  00364E                     
  8877                           ;mcc_generated_files/uart1.c: 158:     PIE3bits.U1RXIE = 1;
  8878  00364E  0139               	movlb	57	; () banked
  8879  003650  8793               	bsf	147,3,b	;volatile
  8880  003652                     
  8881                           ; BSR set to: 57
  8882  003652  0012               	return		;funcret
  8883  003654                     __end_of_UART1_Initialize:
  8884                           	callstack 0
  8885                           
  8886 ;; *************** function _UART1_SetTxInterruptHandler *****************
  8887 ;; Defined at:
  8888 ;;		line 333 in file "mcc_generated_files/uart1.c"
  8889 ;; Parameters:    Size  Location     Type
  8890 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
  8891 ;;		 -> UART1_Transmit_ISR(1), 
  8892 ;; Auto vars:     Size  Location     Type
  8893 ;;		None
  8894 ;; Return value:  Size  Location     Type
  8895 ;;                  1    wreg      void 
  8896 ;; Registers used:
  8897 ;;		wreg, status,2, status,0
  8898 ;; Tracked objects:
  8899 ;;		On entry : 0/0
  8900 ;;		On exit  : 0/0
  8901 ;;		Unchanged: 0/0
  8902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8903 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8906 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8907 ;;Total ram usage:        2 bytes
  8908 ;; Hardware stack levels used: 1
  8909 ;; Hardware stack levels required when called: 8
  8910 ;; This function calls:
  8911 ;;		Nothing
  8912 ;; This function is called by:
  8913 ;;		_UART1_Initialize
  8914 ;; This function uses a non-reentrant model
  8915 ;;
  8916                           
  8917                           	psect	text39
  8918  0041E6                     __ptext39:
  8919                           	callstack 0
  8920  0041E6                     _UART1_SetTxInterruptHandler:
  8921                           	callstack 20
  8922  0041E6                     
  8923                           ;mcc_generated_files/uart1.c: 334:     UART1_TxInterruptHandler = InterruptHandler;
  8924  0041E6  C014  F0F7         	movff	UART1_SetTxInterruptHandler@InterruptHandler,_UART1_TxInterruptHandler
  8925  0041EA  C015  F0F8         	movff	UART1_SetTxInterruptHandler@InterruptHandler+1,_UART1_TxInterruptHandler+1
  8926  0041EE  0012               	return		;funcret
  8927  0041F0                     __end_of_UART1_SetTxInterruptHandler:
  8928                           	callstack 0
  8929                           
  8930 ;; *************** function _UART1_SetRxInterruptHandler *****************
  8931 ;; Defined at:
  8932 ;;		line 329 in file "mcc_generated_files/uart1.c"
  8933 ;; Parameters:    Size  Location     Type
  8934 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
  8935 ;;		 -> UART1_Receive_ISR(1), 
  8936 ;; Auto vars:     Size  Location     Type
  8937 ;;		None
  8938 ;; Return value:  Size  Location     Type
  8939 ;;                  1    wreg      void 
  8940 ;; Registers used:
  8941 ;;		wreg, status,2, status,0
  8942 ;; Tracked objects:
  8943 ;;		On entry : 0/0
  8944 ;;		On exit  : 0/0
  8945 ;;		Unchanged: 0/0
  8946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8947 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8950 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8951 ;;Total ram usage:        2 bytes
  8952 ;; Hardware stack levels used: 1
  8953 ;; Hardware stack levels required when called: 8
  8954 ;; This function calls:
  8955 ;;		Nothing
  8956 ;; This function is called by:
  8957 ;;		_UART1_Initialize
  8958 ;; This function uses a non-reentrant model
  8959 ;;
  8960                           
  8961                           	psect	text40
  8962  0041F0                     __ptext40:
  8963                           	callstack 0
  8964  0041F0                     _UART1_SetRxInterruptHandler:
  8965                           	callstack 20
  8966  0041F0                     
  8967                           ;mcc_generated_files/uart1.c: 330:     UART1_RxInterruptHandler = InterruptHandler;
  8968  0041F0  C014  F0F9         	movff	UART1_SetRxInterruptHandler@InterruptHandler,_UART1_RxInterruptHandler
  8969  0041F4  C015  F0FA         	movff	UART1_SetRxInterruptHandler@InterruptHandler+1,_UART1_RxInterruptHandler+1
  8970  0041F8  0012               	return		;funcret
  8971  0041FA                     __end_of_UART1_SetRxInterruptHandler:
  8972                           	callstack 0
  8973                           
  8974 ;; *************** function _UART1_SetOverrunErrorHandler *****************
  8975 ;; Defined at:
  8976 ;;		line 319 in file "mcc_generated_files/uart1.c"
  8977 ;; Parameters:    Size  Location     Type
  8978 ;;  interruptHan    2   19[COMRAM] PTR FTN()void 
  8979 ;;		 -> UART1_DefaultOverrunErrorHandler(1), 
  8980 ;; Auto vars:     Size  Location     Type
  8981 ;;		None
  8982 ;; Return value:  Size  Location     Type
  8983 ;;                  1    wreg      void 
  8984 ;; Registers used:
  8985 ;;		wreg, status,2, status,0
  8986 ;; Tracked objects:
  8987 ;;		On entry : 0/0
  8988 ;;		On exit  : 0/0
  8989 ;;		Unchanged: 0/0
  8990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8991 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8994 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8995 ;;Total ram usage:        2 bytes
  8996 ;; Hardware stack levels used: 1
  8997 ;; Hardware stack levels required when called: 8
  8998 ;; This function calls:
  8999 ;;		Nothing
  9000 ;; This function is called by:
  9001 ;;		_UART1_Initialize
  9002 ;; This function uses a non-reentrant model
  9003 ;;
  9004                           
  9005                           	psect	text41
  9006  0041FA                     __ptext41:
  9007                           	callstack 0
  9008  0041FA                     _UART1_SetOverrunErrorHandler:
  9009                           	callstack 20
  9010  0041FA                     
  9011                           ;mcc_generated_files/uart1.c: 320:     UART1_OverrunErrorHandler = interruptHandler;
  9012  0041FA  C014  F0F3         	movff	UART1_SetOverrunErrorHandler@interruptHandler,_UART1_OverrunErrorHandler
  9013  0041FE  C015  F0F4         	movff	UART1_SetOverrunErrorHandler@interruptHandler+1,_UART1_OverrunErrorHandler+1
  9014  004202  0012               	return		;funcret
  9015  004204                     __end_of_UART1_SetOverrunErrorHandler:
  9016                           	callstack 0
  9017                           
  9018 ;; *************** function _UART1_SetFramingErrorHandler *****************
  9019 ;; Defined at:
  9020 ;;		line 315 in file "mcc_generated_files/uart1.c"
  9021 ;; Parameters:    Size  Location     Type
  9022 ;;  interruptHan    2   19[COMRAM] PTR FTN()void 
  9023 ;;		 -> UART1_DefaultFramingErrorHandler(1), 
  9024 ;; Auto vars:     Size  Location     Type
  9025 ;;		None
  9026 ;; Return value:  Size  Location     Type
  9027 ;;                  1    wreg      void 
  9028 ;; Registers used:
  9029 ;;		wreg, status,2, status,0
  9030 ;; Tracked objects:
  9031 ;;		On entry : 0/0
  9032 ;;		On exit  : 0/0
  9033 ;;		Unchanged: 0/0
  9034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9035 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9038 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9039 ;;Total ram usage:        2 bytes
  9040 ;; Hardware stack levels used: 1
  9041 ;; Hardware stack levels required when called: 8
  9042 ;; This function calls:
  9043 ;;		Nothing
  9044 ;; This function is called by:
  9045 ;;		_UART1_Initialize
  9046 ;; This function uses a non-reentrant model
  9047 ;;
  9048                           
  9049                           	psect	text42
  9050  004204                     __ptext42:
  9051                           	callstack 0
  9052  004204                     _UART1_SetFramingErrorHandler:
  9053                           	callstack 20
  9054  004204                     
  9055                           ;mcc_generated_files/uart1.c: 316:     UART1_FramingErrorHandler = interruptHandler;
  9056  004204  C014  F0F5         	movff	UART1_SetFramingErrorHandler@interruptHandler,_UART1_FramingErrorHandler
  9057  004208  C015  F0F6         	movff	UART1_SetFramingErrorHandler@interruptHandler+1,_UART1_FramingErrorHandler+1
  9058  00420C  0012               	return		;funcret
  9059  00420E                     __end_of_UART1_SetFramingErrorHandler:
  9060                           	callstack 0
  9061                           
  9062 ;; *************** function _UART1_SetErrorHandler *****************
  9063 ;; Defined at:
  9064 ;;		line 323 in file "mcc_generated_files/uart1.c"
  9065 ;; Parameters:    Size  Location     Type
  9066 ;;  interruptHan    2   19[COMRAM] PTR FTN()void 
  9067 ;;		 -> UART1_DefaultErrorHandler(1), 
  9068 ;; Auto vars:     Size  Location     Type
  9069 ;;		None
  9070 ;; Return value:  Size  Location     Type
  9071 ;;                  1    wreg      void 
  9072 ;; Registers used:
  9073 ;;		wreg, status,2, status,0
  9074 ;; Tracked objects:
  9075 ;;		On entry : 0/0
  9076 ;;		On exit  : 0/0
  9077 ;;		Unchanged: 0/0
  9078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9079 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9082 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9083 ;;Total ram usage:        2 bytes
  9084 ;; Hardware stack levels used: 1
  9085 ;; Hardware stack levels required when called: 8
  9086 ;; This function calls:
  9087 ;;		Nothing
  9088 ;; This function is called by:
  9089 ;;		_UART1_Initialize
  9090 ;; This function uses a non-reentrant model
  9091 ;;
  9092                           
  9093                           	psect	text43
  9094  00420E                     __ptext43:
  9095                           	callstack 0
  9096  00420E                     _UART1_SetErrorHandler:
  9097                           	callstack 20
  9098  00420E                     
  9099                           ;mcc_generated_files/uart1.c: 324:     UART1_ErrorHandler = interruptHandler;
  9100  00420E  C014  F0F1         	movff	UART1_SetErrorHandler@interruptHandler,_UART1_ErrorHandler
  9101  004212  C015  F0F2         	movff	UART1_SetErrorHandler@interruptHandler+1,_UART1_ErrorHandler+1
  9102  004216  0012               	return		;funcret
  9103  004218                     __end_of_UART1_SetErrorHandler:
  9104                           	callstack 0
  9105                           
  9106 ;; *************** function _TMR5_Initialize *****************
  9107 ;; Defined at:
  9108 ;;		line 67 in file "mcc_generated_files/tmr5.c"
  9109 ;; Parameters:    Size  Location     Type
  9110 ;;		None
  9111 ;; Auto vars:     Size  Location     Type
  9112 ;;		None
  9113 ;; Return value:  Size  Location     Type
  9114 ;;                  1    wreg      void 
  9115 ;; Registers used:
  9116 ;;		wreg, status,2, status,0, cstack
  9117 ;; Tracked objects:
  9118 ;;		On entry : 0/0
  9119 ;;		On exit  : 0/0
  9120 ;;		Unchanged: 0/0
  9121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9124 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9125 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9126 ;;Total ram usage:        2 bytes
  9127 ;; Hardware stack levels used: 1
  9128 ;; Hardware stack levels required when called: 9
  9129 ;; This function calls:
  9130 ;;		_TMR5_SetGateInterruptHandler
  9131 ;; This function is called by:
  9132 ;;		_SYSTEM_Initialize
  9133 ;; This function uses a non-reentrant model
  9134 ;;
  9135                           
  9136                           	psect	text44
  9137  003A6C                     __ptext44:
  9138                           	callstack 0
  9139  003A6C                     _TMR5_Initialize:
  9140                           	callstack 20
  9141  003A6C                     
  9142                           ;mcc_generated_files/tmr5.c: 72:     T5GCON = 0xC0;
  9143  003A6C  0EC0               	movlw	192
  9144  003A6E  6E9B               	movwf	155,c	;volatile
  9145                           
  9146                           ;mcc_generated_files/tmr5.c: 75:     T5GATE = 0x00;
  9147  003A70  0E00               	movlw	0
  9148  003A72  6E9C               	movwf	156,c	;volatile
  9149                           
  9150                           ;mcc_generated_files/tmr5.c: 78:     T5CLK = 0x05;
  9151  003A74  0E05               	movlw	5
  9152  003A76  6E9D               	movwf	157,c	;volatile
  9153                           
  9154                           ;mcc_generated_files/tmr5.c: 81:     TMR5H = 0x00;
  9155  003A78  0E00               	movlw	0
  9156  003A7A  6E99               	movwf	153,c	;volatile
  9157                           
  9158                           ;mcc_generated_files/tmr5.c: 84:     TMR5L = 0x00;
  9159  003A7C  0E00               	movlw	0
  9160  003A7E  6E98               	movwf	152,c	;volatile
  9161  003A80                     
  9162                           ;mcc_generated_files/tmr5.c: 87:     PIR8bits.TMR5IF = 0;
  9163  003A80  0139               	movlb	57	; () banked
  9164  003A82  9DA8               	bcf	168,6,b	;volatile
  9165  003A84                     
  9166                           ; BSR set to: 57
  9167                           ;mcc_generated_files/tmr5.c: 90:     timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
  9168  003A84  5098               	movf	152,w,c	;volatile
  9169  003A86  006F FE64  F016    	movff	16281,??_TMR5_Initialize	;volatile
  9170  003A8C  6A17               	clrf	(??_TMR5_Initialize+1)^0,c
  9171  003A8E  C016  F017         	movff	??_TMR5_Initialize,??_TMR5_Initialize+1
  9172  003A92  6A16               	clrf	??_TMR5_Initialize^0,c
  9173  003A94  1016               	iorwf	??_TMR5_Initialize^0,w,c
  9174  003A96  0100               	movlb	0	; () banked
  9175  003A98  6FEB               	movwf	_timer5ReloadVal& (0+255),b	;volatile
  9176  003A9A  5017               	movf	(??_TMR5_Initialize+1)^0,w,c
  9177  003A9C  6FEC               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
  9178  003A9E                     
  9179                           ; BSR set to: 0
  9180                           ;mcc_generated_files/tmr5.c: 93:     PIR8bits.TMR5GIF = 0;
  9181  003A9E  0139               	movlb	57	; () banked
  9182  003AA0  9FA8               	bcf	168,7,b	;volatile
  9183  003AA2                     
  9184                           ; BSR set to: 57
  9185                           ;mcc_generated_files/tmr5.c: 96:     PIE8bits.TMR5GIE = 1;
  9186  003AA2  8F98               	bsf	152,7,b	;volatile
  9187  003AA4                     
  9188                           ; BSR set to: 57
  9189                           ;mcc_generated_files/tmr5.c: 99:     TMR5_SetGateInterruptHandler(TMR5_DefaultGateInterr
      +                          uptHandler);
  9190  003AA4  0E0C               	movlw	low _TMR5_DefaultGateInterruptHandler
  9191  003AA6  6E14               	movwf	TMR5_SetGateInterruptHandler@InterruptHandler^0,c
  9192  003AA8  0E41               	movlw	high _TMR5_DefaultGateInterruptHandler
  9193  003AAA  6E15               	movwf	(TMR5_SetGateInterruptHandler@InterruptHandler+1)^0,c
  9194  003AAC  EC0C  F021         	call	_TMR5_SetGateInterruptHandler	;wreg free
  9195  003AB0                     
  9196                           ;mcc_generated_files/tmr5.c: 102:     T5CON = 0x03;
  9197  003AB0  0E03               	movlw	3
  9198  003AB2  6E9A               	movwf	154,c	;volatile
  9199  003AB4  0012               	return		;funcret
  9200  003AB6                     __end_of_TMR5_Initialize:
  9201                           	callstack 0
  9202                           
  9203 ;; *************** function _TMR5_SetGateInterruptHandler *****************
  9204 ;; Defined at:
  9205 ;;		line 186 in file "mcc_generated_files/tmr5.c"
  9206 ;; Parameters:    Size  Location     Type
  9207 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
  9208 ;;		 -> TMR5_DefaultGateInterruptHandler(1), 
  9209 ;; Auto vars:     Size  Location     Type
  9210 ;;		None
  9211 ;; Return value:  Size  Location     Type
  9212 ;;                  1    wreg      void 
  9213 ;; Registers used:
  9214 ;;		wreg, status,2, status,0
  9215 ;; Tracked objects:
  9216 ;;		On entry : 0/0
  9217 ;;		On exit  : 0/0
  9218 ;;		Unchanged: 0/0
  9219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9220 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9223 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9224 ;;Total ram usage:        2 bytes
  9225 ;; Hardware stack levels used: 1
  9226 ;; Hardware stack levels required when called: 8
  9227 ;; This function calls:
  9228 ;;		Nothing
  9229 ;; This function is called by:
  9230 ;;		_TMR5_Initialize
  9231 ;; This function uses a non-reentrant model
  9232 ;;
  9233                           
  9234                           	psect	text45
  9235  004218                     __ptext45:
  9236                           	callstack 0
  9237  004218                     _TMR5_SetGateInterruptHandler:
  9238                           	callstack 20
  9239  004218                     
  9240                           ;mcc_generated_files/tmr5.c: 187:     TMR5_GateInterruptHandler = InterruptHandler;
  9241  004218  C014  F0E9         	movff	TMR5_SetGateInterruptHandler@InterruptHandler,_TMR5_GateInterruptHandler
  9242  00421C  C015  F0EA         	movff	TMR5_SetGateInterruptHandler@InterruptHandler+1,_TMR5_GateInterruptHandler+1
  9243  004220  0012               	return		;funcret
  9244  004222                     __end_of_TMR5_SetGateInterruptHandler:
  9245                           	callstack 0
  9246                           
  9247 ;; *************** function _TMR4_Initialize *****************
  9248 ;; Defined at:
  9249 ;;		line 65 in file "mcc_generated_files/tmr4.c"
  9250 ;; Parameters:    Size  Location     Type
  9251 ;;		None
  9252 ;; Auto vars:     Size  Location     Type
  9253 ;;		None
  9254 ;; Return value:  Size  Location     Type
  9255 ;;                  1    wreg      void 
  9256 ;; Registers used:
  9257 ;;		wreg, status,2, status,0, cstack
  9258 ;; Tracked objects:
  9259 ;;		On entry : 0/0
  9260 ;;		On exit  : 0/0
  9261 ;;		Unchanged: 0/0
  9262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9266 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9267 ;;Total ram usage:        0 bytes
  9268 ;; Hardware stack levels used: 1
  9269 ;; Hardware stack levels required when called: 9
  9270 ;; This function calls:
  9271 ;;		_TMR4_SetInterruptHandler
  9272 ;; This function is called by:
  9273 ;;		_SYSTEM_Initialize
  9274 ;; This function uses a non-reentrant model
  9275 ;;
  9276                           
  9277                           	psect	text46
  9278  003FA4                     __ptext46:
  9279                           	callstack 0
  9280  003FA4                     _TMR4_Initialize:
  9281                           	callstack 20
  9282  003FA4                     
  9283                           ;mcc_generated_files/tmr4.c: 70:     T4CLKCON = 0x01;
  9284  003FA4  0E01               	movlw	1
  9285  003FA6  6EA2               	movwf	162,c	;volatile
  9286                           
  9287                           ;mcc_generated_files/tmr4.c: 73:     T4HLT = 0x00;
  9288  003FA8  0E00               	movlw	0
  9289  003FAA  6EA1               	movwf	161,c	;volatile
  9290                           
  9291                           ;mcc_generated_files/tmr4.c: 76:     T4RST = 0x00;
  9292  003FAC  0E00               	movlw	0
  9293  003FAE  6EA3               	movwf	163,c	;volatile
  9294                           
  9295                           ;mcc_generated_files/tmr4.c: 79:     T4PR = 0xF9;
  9296  003FB0  0EF9               	movlw	249
  9297  003FB2  6E9F               	movwf	159,c	;volatile
  9298                           
  9299                           ;mcc_generated_files/tmr4.c: 82:     T4TMR = 0x00;
  9300  003FB4  0E00               	movlw	0
  9301  003FB6  6E9E               	movwf	158,c	;volatile
  9302  003FB8                     
  9303                           ;mcc_generated_files/tmr4.c: 85:     PIR7bits.TMR4IF = 0;
  9304  003FB8  0139               	movlb	57	; () banked
  9305  003FBA  91A7               	bcf	167,0,b	;volatile
  9306  003FBC                     
  9307                           ; BSR set to: 57
  9308                           ;mcc_generated_files/tmr4.c: 88:     PIE7bits.TMR4IE = 1;
  9309  003FBC  8197               	bsf	151,0,b	;volatile
  9310  003FBE                     
  9311                           ; BSR set to: 57
  9312                           ;mcc_generated_files/tmr4.c: 91:     TMR4_SetInterruptHandler(TMR4_DefaultInterruptHandl
      +                          er);
  9313  003FBE  0E52               	movlw	low _TMR4_DefaultInterruptHandler
  9314  003FC0  6E14               	movwf	TMR4_SetInterruptHandler@InterruptHandler^0,c
  9315  003FC2  0E42               	movlw	high _TMR4_DefaultInterruptHandler
  9316  003FC4  6E15               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)^0,c
  9317  003FC6  EC11  F021         	call	_TMR4_SetInterruptHandler	;wreg free
  9318  003FCA                     
  9319                           ;mcc_generated_files/tmr4.c: 94:     T4CON = 0xE0;
  9320  003FCA  0EE0               	movlw	224
  9321  003FCC  6EA0               	movwf	160,c	;volatile
  9322  003FCE  0012               	return		;funcret
  9323  003FD0                     __end_of_TMR4_Initialize:
  9324                           	callstack 0
  9325                           
  9326 ;; *************** function _TMR4_SetInterruptHandler *****************
  9327 ;; Defined at:
  9328 ;;		line 194 in file "mcc_generated_files/tmr4.c"
  9329 ;; Parameters:    Size  Location     Type
  9330 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
  9331 ;;		 -> TMR4_10msISR(1), TMR4_DefaultInterruptHandler(1), 
  9332 ;; Auto vars:     Size  Location     Type
  9333 ;;		None
  9334 ;; Return value:  Size  Location     Type
  9335 ;;                  1    wreg      void 
  9336 ;; Registers used:
  9337 ;;		wreg, status,2, status,0
  9338 ;; Tracked objects:
  9339 ;;		On entry : 0/0
  9340 ;;		On exit  : 0/0
  9341 ;;		Unchanged: 0/0
  9342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9343 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9346 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9347 ;;Total ram usage:        2 bytes
  9348 ;; Hardware stack levels used: 1
  9349 ;; Hardware stack levels required when called: 8
  9350 ;; This function calls:
  9351 ;;		Nothing
  9352 ;; This function is called by:
  9353 ;;		_TMR4_Initialize
  9354 ;;		_main
  9355 ;; This function uses a non-reentrant model
  9356 ;;
  9357                           
  9358                           	psect	text47
  9359  004222                     __ptext47:
  9360                           	callstack 0
  9361  004222                     _TMR4_SetInterruptHandler:
  9362                           	callstack 22
  9363  004222                     
  9364                           ;mcc_generated_files/tmr4.c: 195:     TMR4_InterruptHandler = InterruptHandler;
  9365  004222  C014  F0E5         	movff	TMR4_SetInterruptHandler@InterruptHandler,_TMR4_InterruptHandler
  9366  004226  C015  F0E6         	movff	TMR4_SetInterruptHandler@InterruptHandler+1,_TMR4_InterruptHandler+1
  9367  00422A  0012               	return		;funcret
  9368  00422C                     __end_of_TMR4_SetInterruptHandler:
  9369                           	callstack 0
  9370                           
  9371 ;; *************** function _TMR3_Initialize *****************
  9372 ;; Defined at:
  9373 ;;		line 63 in file "mcc_generated_files/tmr3.c"
  9374 ;; Parameters:    Size  Location     Type
  9375 ;;		None
  9376 ;; Auto vars:     Size  Location     Type
  9377 ;;		None
  9378 ;; Return value:  Size  Location     Type
  9379 ;;                  1    wreg      void 
  9380 ;; Registers used:
  9381 ;;		wreg, status,2, status,0
  9382 ;; Tracked objects:
  9383 ;;		On entry : 0/0
  9384 ;;		On exit  : 0/0
  9385 ;;		Unchanged: 0/0
  9386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9389 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9390 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9391 ;;Total ram usage:        2 bytes
  9392 ;; Hardware stack levels used: 1
  9393 ;; Hardware stack levels required when called: 8
  9394 ;; This function calls:
  9395 ;;		Nothing
  9396 ;; This function is called by:
  9397 ;;		_SYSTEM_Initialize
  9398 ;; This function uses a non-reentrant model
  9399 ;;
  9400                           
  9401                           	psect	text48
  9402  003C7A                     __ptext48:
  9403                           	callstack 0
  9404  003C7A                     _TMR3_Initialize:
  9405                           	callstack 21
  9406  003C7A                     
  9407                           ;mcc_generated_files/tmr3.c: 68:     T3GCON = 0x00;
  9408  003C7A  0E00               	movlw	0
  9409  003C7C  6EA7               	movwf	167,c	;volatile
  9410                           
  9411                           ;mcc_generated_files/tmr3.c: 71:     T3GATE = 0x00;
  9412  003C7E  0E00               	movlw	0
  9413  003C80  6EA8               	movwf	168,c	;volatile
  9414                           
  9415                           ;mcc_generated_files/tmr3.c: 74:     T3CLK = 0x05;
  9416  003C82  0E05               	movlw	5
  9417  003C84  6EA9               	movwf	169,c	;volatile
  9418                           
  9419                           ;mcc_generated_files/tmr3.c: 77:     TMR3H = 0x00;
  9420  003C86  0E00               	movlw	0
  9421  003C88  6EA5               	movwf	165,c	;volatile
  9422                           
  9423                           ;mcc_generated_files/tmr3.c: 80:     TMR3L = 0x00;
  9424  003C8A  0E00               	movlw	0
  9425  003C8C  6EA4               	movwf	164,c	;volatile
  9426  003C8E                     
  9427                           ;mcc_generated_files/tmr3.c: 83:     PIR6bits.TMR3IF = 0;
  9428  003C8E  0139               	movlb	57	; () banked
  9429  003C90  9DA6               	bcf	166,6,b	;volatile
  9430  003C92                     
  9431                           ; BSR set to: 57
  9432                           ;mcc_generated_files/tmr3.c: 86:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
  9433  003C92  50A4               	movf	164,w,c	;volatile
  9434  003C94  006F FE94  F014    	movff	16293,??_TMR3_Initialize	;volatile
  9435  003C9A  6A15               	clrf	(??_TMR3_Initialize+1)^0,c
  9436  003C9C  C014  F015         	movff	??_TMR3_Initialize,??_TMR3_Initialize+1
  9437  003CA0  6A14               	clrf	??_TMR3_Initialize^0,c
  9438  003CA2  1014               	iorwf	??_TMR3_Initialize^0,w,c
  9439  003CA4  0100               	movlb	0	; () banked
  9440  003CA6  6FE7               	movwf	_timer3ReloadVal& (0+255),b	;volatile
  9441  003CA8  5015               	movf	(??_TMR3_Initialize+1)^0,w,c
  9442  003CAA  6FE8               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
  9443  003CAC                     
  9444                           ; BSR set to: 0
  9445                           ;mcc_generated_files/tmr3.c: 89:     T3CON = 0x01;
  9446  003CAC  0E01               	movlw	1
  9447  003CAE  6EA6               	movwf	166,c	;volatile
  9448  003CB0                     
  9449                           ; BSR set to: 0
  9450  003CB0  0012               	return		;funcret
  9451  003CB2                     __end_of_TMR3_Initialize:
  9452                           	callstack 0
  9453                           
  9454 ;; *************** function _TMR2_Initialize *****************
  9455 ;; Defined at:
  9456 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  9457 ;; Parameters:    Size  Location     Type
  9458 ;;		None
  9459 ;; Auto vars:     Size  Location     Type
  9460 ;;		None
  9461 ;; Return value:  Size  Location     Type
  9462 ;;                  1    wreg      void 
  9463 ;; Registers used:
  9464 ;;		wreg, status,2
  9465 ;; Tracked objects:
  9466 ;;		On entry : 0/0
  9467 ;;		On exit  : 0/0
  9468 ;;		Unchanged: 0/0
  9469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9473 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9474 ;;Total ram usage:        0 bytes
  9475 ;; Hardware stack levels used: 1
  9476 ;; Hardware stack levels required when called: 8
  9477 ;; This function calls:
  9478 ;;		Nothing
  9479 ;; This function is called by:
  9480 ;;		_SYSTEM_Initialize
  9481 ;; This function uses a non-reentrant model
  9482 ;;
  9483                           
  9484                           	psect	text49
  9485  00412A                     __ptext49:
  9486                           	callstack 0
  9487  00412A                     _TMR2_Initialize:
  9488                           	callstack 21
  9489  00412A                     
  9490                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x05;
  9491  00412A  0E05               	movlw	5
  9492  00412C  6EAE               	movwf	174,c	;volatile
  9493                           
  9494                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
  9495  00412E  0E00               	movlw	0
  9496  004130  6EAD               	movwf	173,c	;volatile
  9497                           
  9498                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
  9499  004132  0E00               	movlw	0
  9500  004134  6EAF               	movwf	175,c	;volatile
  9501  004136                     
  9502                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0xFF;
  9503  004136  68AB               	setf	171,c	;volatile
  9504                           
  9505                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
  9506  004138  0E00               	movlw	0
  9507  00413A  6EAA               	movwf	170,c	;volatile
  9508  00413C                     
  9509                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
  9510  00413C  0139               	movlb	57	; () banked
  9511  00413E  95A4               	bcf	164,2,b	;volatile
  9512                           
  9513                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xB0;
  9514  004140  0EB0               	movlw	176
  9515  004142  6EAC               	movwf	172,c	;volatile
  9516  004144                     
  9517                           ; BSR set to: 57
  9518  004144  0012               	return		;funcret
  9519  004146                     __end_of_TMR2_Initialize:
  9520                           	callstack 0
  9521                           
  9522 ;; *************** function _SMT1_Initialize *****************
  9523 ;; Defined at:
  9524 ;;		line 60 in file "mcc_generated_files/smt1.c"
  9525 ;; Parameters:    Size  Location     Type
  9526 ;;		None
  9527 ;; Auto vars:     Size  Location     Type
  9528 ;;		None
  9529 ;; Return value:  Size  Location     Type
  9530 ;;                  1    wreg      void 
  9531 ;; Registers used:
  9532 ;;		wreg, status,2
  9533 ;; Tracked objects:
  9534 ;;		On entry : 0/0
  9535 ;;		On exit  : 0/0
  9536 ;;		Unchanged: 0/0
  9537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9541 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9542 ;;Total ram usage:        0 bytes
  9543 ;; Hardware stack levels used: 1
  9544 ;; Hardware stack levels required when called: 8
  9545 ;; This function calls:
  9546 ;;		Nothing
  9547 ;; This function is called by:
  9548 ;;		_SYSTEM_Initialize
  9549 ;; This function uses a non-reentrant model
  9550 ;;
  9551                           
  9552                           	psect	text50
  9553  003E8A                     __ptext50:
  9554                           	callstack 0
  9555  003E8A                     _SMT1_Initialize:
  9556                           	callstack 21
  9557  003E8A                     
  9558                           ;mcc_generated_files/smt1.c: 63:     SMT1CON0 = 0x80;
  9559  003E8A  0E80               	movlw	128
  9560  003E8C  013F               	movlb	63	; () banked
  9561  003E8E  6F1E               	movwf	30,b	;volatile
  9562                           
  9563                           ;mcc_generated_files/smt1.c: 66:     SMT1CON1 = 0x42;
  9564  003E90  0E42               	movlw	66
  9565  003E92  6F1F               	movwf	31,b	;volatile
  9566                           
  9567                           ;mcc_generated_files/smt1.c: 69:     SMT1STAT = 0x00;
  9568  003E94  0E00               	movlw	0
  9569  003E96  6F20               	movwf	32,b	;volatile
  9570                           
  9571                           ;mcc_generated_files/smt1.c: 72:     SMT1CLK = 0x04;
  9572  003E98  0E04               	movlw	4
  9573  003E9A  6F21               	movwf	33,b	;volatile
  9574                           
  9575                           ;mcc_generated_files/smt1.c: 75:     SMT1WIN = 0x00;
  9576  003E9C  0E00               	movlw	0
  9577  003E9E  6F23               	movwf	35,b	;volatile
  9578                           
  9579                           ;mcc_generated_files/smt1.c: 78:     SMT1SIG = 0x00;
  9580  003EA0  0E00               	movlw	0
  9581  003EA2  6F22               	movwf	34,b	;volatile
  9582                           
  9583                           ;mcc_generated_files/smt1.c: 81:     SMT1PRU = 0x01;
  9584  003EA4  0E01               	movlw	1
  9585  003EA6  6F1D               	movwf	29,b	;volatile
  9586  003EA8                     
  9587                           ; BSR set to: 63
  9588                           ;mcc_generated_files/smt1.c: 84:     SMT1PRH = 0xFF;
  9589  003EA8  691C               	setf	28,b	;volatile
  9590  003EAA                     
  9591                           ; BSR set to: 63
  9592                           ;mcc_generated_files/smt1.c: 87:     SMT1PRL = 0xFF;
  9593  003EAA  691B               	setf	27,b	;volatile
  9594  003EAC                     
  9595                           ; BSR set to: 63
  9596                           ;mcc_generated_files/smt1.c: 90:     PIE1bits.SMT1IE = 1;
  9597  003EAC  0139               	movlb	57	; () banked
  9598  003EAE  8B91               	bsf	145,5,b	;volatile
  9599  003EB0                     
  9600                           ; BSR set to: 57
  9601                           ;mcc_generated_files/smt1.c: 93:     PIE1bits.SMT1PWAIE = 1;
  9602  003EB0  8F91               	bsf	145,7,b	;volatile
  9603  003EB2                     
  9604                           ; BSR set to: 57
  9605                           ;mcc_generated_files/smt1.c: 96:     PIE1bits.SMT1PRAIE = 1;
  9606  003EB2  8D91               	bsf	145,6,b	;volatile
  9607  003EB4                     
  9608                           ; BSR set to: 57
  9609                           ;mcc_generated_files/smt1.c: 99:     SMT1CON1bits.SMT1GO = 1;
  9610  003EB4  013F               	movlb	63	; () banked
  9611  003EB6  8F1F               	bsf	31,7,b	;volatile
  9612  003EB8                     
  9613                           ; BSR set to: 63
  9614  003EB8  0012               	return		;funcret
  9615  003EBA                     __end_of_SMT1_Initialize:
  9616                           	callstack 0
  9617                           
  9618 ;; *************** function _PWM8_Initialize *****************
  9619 ;; Defined at:
  9620 ;;		line 58 in file "mcc_generated_files/pwm8.c"
  9621 ;; Parameters:    Size  Location     Type
  9622 ;;		None
  9623 ;; Auto vars:     Size  Location     Type
  9624 ;;		None
  9625 ;; Return value:  Size  Location     Type
  9626 ;;                  1    wreg      void 
  9627 ;; Registers used:
  9628 ;;		wreg, status,2
  9629 ;; Tracked objects:
  9630 ;;		On entry : 0/0
  9631 ;;		On exit  : 0/0
  9632 ;;		Unchanged: 0/0
  9633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9637 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9638 ;;Total ram usage:        0 bytes
  9639 ;; Hardware stack levels used: 1
  9640 ;; Hardware stack levels required when called: 8
  9641 ;; This function calls:
  9642 ;;		Nothing
  9643 ;; This function is called by:
  9644 ;;		_SYSTEM_Initialize
  9645 ;; This function uses a non-reentrant model
  9646 ;;
  9647                           
  9648                           	psect	text51
  9649  004146                     __ptext51:
  9650                           	callstack 0
  9651  004146                     _PWM8_Initialize:
  9652                           	callstack 21
  9653  004146                     
  9654                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
  9655  004146  0E80               	movlw	128
  9656  004148  6E62               	movwf	98,c	;volatile
  9657                           
  9658                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
  9659  00414A  0E00               	movlw	0
  9660  00414C  6E61               	movwf	97,c	;volatile
  9661                           
  9662                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x00;
  9663  00414E  0E00               	movlw	0
  9664  004150  6E60               	movwf	96,c	;volatile
  9665                           
  9666                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 2;
  9667  004152  013F               	movlb	63	; () banked
  9668  004154  515F               	movf	95,w,b	;volatile
  9669  004156  0B3F               	andlw	-193
  9670  004158  0980               	iorlw	128
  9671  00415A  6F5F               	movwf	95,b	;volatile
  9672  00415C                     
  9673                           ; BSR set to: 63
  9674  00415C  0012               	return		;funcret
  9675  00415E                     __end_of_PWM8_Initialize:
  9676                           	callstack 0
  9677                           
  9678 ;; *************** function _PWM7_Initialize *****************
  9679 ;; Defined at:
  9680 ;;		line 58 in file "mcc_generated_files/pwm7.c"
  9681 ;; Parameters:    Size  Location     Type
  9682 ;;		None
  9683 ;; Auto vars:     Size  Location     Type
  9684 ;;		None
  9685 ;; Return value:  Size  Location     Type
  9686 ;;                  1    wreg      void 
  9687 ;; Registers used:
  9688 ;;		wreg, status,2
  9689 ;; Tracked objects:
  9690 ;;		On entry : 0/0
  9691 ;;		On exit  : 0/0
  9692 ;;		Unchanged: 0/0
  9693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9697 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9698 ;;Total ram usage:        0 bytes
  9699 ;; Hardware stack levels used: 1
  9700 ;; Hardware stack levels required when called: 8
  9701 ;; This function calls:
  9702 ;;		Nothing
  9703 ;; This function is called by:
  9704 ;;		_SYSTEM_Initialize
  9705 ;; This function uses a non-reentrant model
  9706 ;;
  9707                           
  9708                           	psect	text52
  9709  00415E                     __ptext52:
  9710                           	callstack 0
  9711  00415E                     _PWM7_Initialize:
  9712                           	callstack 21
  9713  00415E                     
  9714                           ;mcc_generated_files/pwm7.c: 62:     PWM7CON = 0x80;
  9715  00415E  0E80               	movlw	128
  9716  004160  6E66               	movwf	102,c	;volatile
  9717                           
  9718                           ;mcc_generated_files/pwm7.c: 65:     PWM7DCH = 0x00;
  9719  004162  0E00               	movlw	0
  9720  004164  6E65               	movwf	101,c	;volatile
  9721                           
  9722                           ;mcc_generated_files/pwm7.c: 68:     PWM7DCL = 0x00;
  9723  004166  0E00               	movlw	0
  9724  004168  6E64               	movwf	100,c	;volatile
  9725                           
  9726                           ;mcc_generated_files/pwm7.c: 71:     CCPTMRS1bits.P7TSEL = 2;
  9727  00416A  013F               	movlb	63	; () banked
  9728  00416C  515F               	movf	95,w,b	;volatile
  9729  00416E  0BCF               	andlw	-49
  9730  004170  0920               	iorlw	32
  9731  004172  6F5F               	movwf	95,b	;volatile
  9732  004174                     
  9733                           ; BSR set to: 63
  9734  004174  0012               	return		;funcret
  9735  004176                     __end_of_PWM7_Initialize:
  9736                           	callstack 0
  9737                           
  9738 ;; *************** function _PWM6_Initialize *****************
  9739 ;; Defined at:
  9740 ;;		line 58 in file "mcc_generated_files/pwm6.c"
  9741 ;; Parameters:    Size  Location     Type
  9742 ;;		None
  9743 ;; Auto vars:     Size  Location     Type
  9744 ;;		None
  9745 ;; Return value:  Size  Location     Type
  9746 ;;                  1    wreg      void 
  9747 ;; Registers used:
  9748 ;;		wreg, status,2
  9749 ;; Tracked objects:
  9750 ;;		On entry : 0/0
  9751 ;;		On exit  : 0/0
  9752 ;;		Unchanged: 0/0
  9753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9757 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9758 ;;Total ram usage:        0 bytes
  9759 ;; Hardware stack levels used: 1
  9760 ;; Hardware stack levels required when called: 8
  9761 ;; This function calls:
  9762 ;;		Nothing
  9763 ;; This function is called by:
  9764 ;;		_SYSTEM_Initialize
  9765 ;; This function uses a non-reentrant model
  9766 ;;
  9767                           
  9768                           	psect	text53
  9769  004176                     __ptext53:
  9770                           	callstack 0
  9771  004176                     _PWM6_Initialize:
  9772                           	callstack 21
  9773  004176                     
  9774                           ;mcc_generated_files/pwm6.c: 62:     PWM6CON = 0x80;
  9775  004176  0E80               	movlw	128
  9776  004178  6E6A               	movwf	106,c	;volatile
  9777                           
  9778                           ;mcc_generated_files/pwm6.c: 65:     PWM6DCH = 0x59;
  9779  00417A  0E59               	movlw	89
  9780  00417C  6E69               	movwf	105,c	;volatile
  9781                           
  9782                           ;mcc_generated_files/pwm6.c: 68:     PWM6DCL = 0x40;
  9783  00417E  0E40               	movlw	64
  9784  004180  6E68               	movwf	104,c	;volatile
  9785                           
  9786                           ;mcc_generated_files/pwm6.c: 71:     CCPTMRS1bits.P6TSEL = 1;
  9787  004182  013F               	movlb	63	; () banked
  9788  004184  515F               	movf	95,w,b	;volatile
  9789  004186  0BF3               	andlw	-13
  9790  004188  0904               	iorlw	4
  9791  00418A  6F5F               	movwf	95,b	;volatile
  9792  00418C                     
  9793                           ; BSR set to: 63
  9794  00418C  0012               	return		;funcret
  9795  00418E                     __end_of_PWM6_Initialize:
  9796                           	callstack 0
  9797                           
  9798 ;; *************** function _PWM5_Initialize *****************
  9799 ;; Defined at:
  9800 ;;		line 58 in file "mcc_generated_files/pwm5.c"
  9801 ;; Parameters:    Size  Location     Type
  9802 ;;		None
  9803 ;; Auto vars:     Size  Location     Type
  9804 ;;		None
  9805 ;; Return value:  Size  Location     Type
  9806 ;;                  1    wreg      void 
  9807 ;; Registers used:
  9808 ;;		wreg, status,2
  9809 ;; Tracked objects:
  9810 ;;		On entry : 0/0
  9811 ;;		On exit  : 0/0
  9812 ;;		Unchanged: 0/0
  9813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9817 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9818 ;;Total ram usage:        0 bytes
  9819 ;; Hardware stack levels used: 1
  9820 ;; Hardware stack levels required when called: 8
  9821 ;; This function calls:
  9822 ;;		Nothing
  9823 ;; This function is called by:
  9824 ;;		_SYSTEM_Initialize
  9825 ;; This function uses a non-reentrant model
  9826 ;;
  9827                           
  9828                           	psect	text54
  9829  00418E                     __ptext54:
  9830                           	callstack 0
  9831  00418E                     _PWM5_Initialize:
  9832                           	callstack 21
  9833  00418E                     
  9834                           ;mcc_generated_files/pwm5.c: 62:     PWM5CON = 0x80;
  9835  00418E  0E80               	movlw	128
  9836  004190  6E6E               	movwf	110,c	;volatile
  9837                           
  9838                           ;mcc_generated_files/pwm5.c: 65:     PWM5DCH = 0x59;
  9839  004192  0E59               	movlw	89
  9840  004194  6E6D               	movwf	109,c	;volatile
  9841                           
  9842                           ;mcc_generated_files/pwm5.c: 68:     PWM5DCL = 0x40;
  9843  004196  0E40               	movlw	64
  9844  004198  6E6C               	movwf	108,c	;volatile
  9845                           
  9846                           ;mcc_generated_files/pwm5.c: 71:     CCPTMRS1bits.P5TSEL = 1;
  9847  00419A  013F               	movlb	63	; () banked
  9848  00419C  515F               	movf	95,w,b	;volatile
  9849  00419E  0BFC               	andlw	-4
  9850  0041A0  0901               	iorlw	1
  9851  0041A2  6F5F               	movwf	95,b	;volatile
  9852  0041A4                     
  9853                           ; BSR set to: 63
  9854  0041A4  0012               	return		;funcret
  9855  0041A6                     __end_of_PWM5_Initialize:
  9856                           	callstack 0
  9857                           
  9858 ;; *************** function _PMD_Initialize *****************
  9859 ;; Defined at:
  9860 ;;		line 86 in file "mcc_generated_files/mcc.c"
  9861 ;; Parameters:    Size  Location     Type
  9862 ;;		None
  9863 ;; Auto vars:     Size  Location     Type
  9864 ;;		None
  9865 ;; Return value:  Size  Location     Type
  9866 ;;                  1    wreg      void 
  9867 ;; Registers used:
  9868 ;;		wreg, status,2
  9869 ;; Tracked objects:
  9870 ;;		On entry : 0/0
  9871 ;;		On exit  : 0/0
  9872 ;;		Unchanged: 0/0
  9873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9877 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9878 ;;Total ram usage:        0 bytes
  9879 ;; Hardware stack levels used: 1
  9880 ;; Hardware stack levels required when called: 8
  9881 ;; This function calls:
  9882 ;;		Nothing
  9883 ;; This function is called by:
  9884 ;;		_SYSTEM_Initialize
  9885 ;; This function uses a non-reentrant model
  9886 ;;
  9887                           
  9888                           	psect	text55
  9889  0040A4                     __ptext55:
  9890                           	callstack 0
  9891  0040A4                     _PMD_Initialize:
  9892                           	callstack 21
  9893  0040A4                     
  9894                           ;mcc_generated_files/mcc.c: 89:     PMD0 = 0x00;
  9895  0040A4  0E00               	movlw	0
  9896  0040A6  0139               	movlb	57	; () banked
  9897  0040A8  6FC0               	movwf	192,b	;volatile
  9898                           
  9899                           ;mcc_generated_files/mcc.c: 91:     PMD1 = 0x00;
  9900  0040AA  0E00               	movlw	0
  9901  0040AC  6FC1               	movwf	193,b	;volatile
  9902                           
  9903                           ;mcc_generated_files/mcc.c: 93:     PMD2 = 0x00;
  9904  0040AE  0E00               	movlw	0
  9905  0040B0  6FC2               	movwf	194,b	;volatile
  9906                           
  9907                           ;mcc_generated_files/mcc.c: 95:     PMD3 = 0x00;
  9908  0040B2  0E00               	movlw	0
  9909  0040B4  6FC3               	movwf	195,b	;volatile
  9910                           
  9911                           ;mcc_generated_files/mcc.c: 97:     PMD4 = 0x00;
  9912  0040B6  0E00               	movlw	0
  9913  0040B8  6FC4               	movwf	196,b	;volatile
  9914                           
  9915                           ;mcc_generated_files/mcc.c: 99:     PMD5 = 0x00;
  9916  0040BA  0E00               	movlw	0
  9917  0040BC  6FC5               	movwf	197,b	;volatile
  9918                           
  9919                           ;mcc_generated_files/mcc.c: 101:     PMD6 = 0x00;
  9920  0040BE  0E00               	movlw	0
  9921  0040C0  6FC6               	movwf	198,b	;volatile
  9922                           
  9923                           ;mcc_generated_files/mcc.c: 103:     PMD7 = 0x00;
  9924  0040C2  0E00               	movlw	0
  9925  0040C4  6FC7               	movwf	199,b	;volatile
  9926  0040C6                     
  9927                           ; BSR set to: 57
  9928  0040C6  0012               	return		;funcret
  9929  0040C8                     __end_of_PMD_Initialize:
  9930                           	callstack 0
  9931                           
  9932 ;; *************** function _PIN_MANAGER_Initialize *****************
  9933 ;; Defined at:
  9934 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  9935 ;; Parameters:    Size  Location     Type
  9936 ;;		None
  9937 ;; Auto vars:     Size  Location     Type
  9938 ;;		None
  9939 ;; Return value:  Size  Location     Type
  9940 ;;                  1    wreg      void 
  9941 ;; Registers used:
  9942 ;;		wreg, status,2
  9943 ;; Tracked objects:
  9944 ;;		On entry : 0/0
  9945 ;;		On exit  : 0/0
  9946 ;;		Unchanged: 0/0
  9947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9951 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9952 ;;Total ram usage:        0 bytes
  9953 ;; Hardware stack levels used: 1
  9954 ;; Hardware stack levels required when called: 8
  9955 ;; This function calls:
  9956 ;;		Nothing
  9957 ;; This function is called by:
  9958 ;;		_SYSTEM_Initialize
  9959 ;; This function uses a non-reentrant model
  9960 ;;
  9961                           
  9962                           	psect	text56
  9963  0032A0                     __ptext56:
  9964                           	callstack 0
  9965  0032A0                     _PIN_MANAGER_Initialize:
  9966                           	callstack 21
  9967  0032A0                     
  9968                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  9969  0032A0  0E00               	movlw	0
  9970  0032A2  6EBE               	movwf	190,c	;volatile
  9971                           
  9972                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  9973  0032A4  0E00               	movlw	0
  9974  0032A6  6EBD               	movwf	189,c	;volatile
  9975                           
  9976                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x24;
  9977  0032A8  0E24               	movlw	36
  9978  0032AA  6EBA               	movwf	186,c	;volatile
  9979                           
  9980                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  9981  0032AC  0E00               	movlw	0
  9982  0032AE  6EBB               	movwf	187,c	;volatile
  9983                           
  9984                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  9985  0032B0  0E00               	movlw	0
  9986  0032B2  6EBC               	movwf	188,c	;volatile
  9987                           
  9988                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  9989  0032B4  0E07               	movlw	7
  9990  0032B6  6EC6               	movwf	198,c	;volatile
  9991                           
  9992                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xC0;
  9993  0032B8  0EC0               	movlw	192
  9994  0032BA  6EC2               	movwf	194,c	;volatile
  9995                           
  9996                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xF7;
  9997  0032BC  0EF7               	movlw	247
  9998  0032BE  6EC3               	movwf	195,c	;volatile
  9999  0032C0                     
 10000                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xFF;
 10001  0032C0  68C4               	setf	196,c	;volatile
 10002  0032C2                     
 10003                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
 10004  0032C2  68C5               	setf	197,c	;volatile
 10005                           
 10006                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0x1F;
 10007  0032C4  0E1F               	movlw	31
 10008  0032C6  013A               	movlb	58	; () banked
 10009  0032C8  6F70               	movwf	112,b	;volatile
 10010  0032CA                     
 10011                           ; BSR set to: 58
 10012                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0xFF;
 10013  0032CA  6960               	setf	96,b	;volatile
 10014                           
 10015                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0xC0;
 10016  0032CC  0EC0               	movlw	192
 10017  0032CE  6F50               	movwf	80,b	;volatile
 10018                           
 10019                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
 10020  0032D0  0E07               	movlw	7
 10021  0032D2  6F80               	movwf	128,b	;volatile
 10022                           
 10023                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x7F;
 10024  0032D4  0E7F               	movlw	127
 10025  0032D6  6F40               	movwf	64,b	;volatile
 10026                           
 10027                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
 10028  0032D8  0E00               	movlw	0
 10029  0032DA  6F71               	movwf	113,b	;volatile
 10030                           
 10031                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
 10032  0032DC  0E00               	movlw	0
 10033  0032DE  6F81               	movwf	129,b	;volatile
 10034                           
 10035                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
 10036  0032E0  0E00               	movlw	0
 10037  0032E2  6F51               	movwf	81,b	;volatile
 10038                           
 10039                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
 10040  0032E4  0E00               	movlw	0
 10041  0032E6  6F41               	movwf	65,b	;volatile
 10042                           
 10043                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
 10044  0032E8  0E00               	movlw	0
 10045  0032EA  6F61               	movwf	97,b	;volatile
 10046                           
 10047                           ;mcc_generated_files/pin_manager.c: 96:     RB1I2C = 0x00;
 10048  0032EC  0E00               	movlw	0
 10049  0032EE  6F5A               	movwf	90,b	;volatile
 10050                           
 10051                           ;mcc_generated_files/pin_manager.c: 97:     RB2I2C = 0x00;
 10052  0032F0  0E00               	movlw	0
 10053  0032F2  6F5B               	movwf	91,b	;volatile
 10054                           
 10055                           ;mcc_generated_files/pin_manager.c: 98:     RC3I2C = 0x00;
 10056  0032F4  0E00               	movlw	0
 10057  0032F6  6F6A               	movwf	106,b	;volatile
 10058                           
 10059                           ;mcc_generated_files/pin_manager.c: 99:     RC4I2C = 0x00;
 10060  0032F8  0E00               	movlw	0
 10061  0032FA  6F6B               	movwf	107,b	;volatile
 10062                           
 10063                           ;mcc_generated_files/pin_manager.c: 100:     RD0I2C = 0x00;
 10064  0032FC  0E00               	movlw	0
 10065  0032FE  6F7A               	movwf	122,b	;volatile
 10066                           
 10067                           ;mcc_generated_files/pin_manager.c: 101:     RD1I2C = 0x00;
 10068  003300  0E00               	movlw	0
 10069  003302  6F7B               	movwf	123,b	;volatile
 10070                           
 10071                           ;mcc_generated_files/pin_manager.c: 106:     ODCONE = 0x00;
 10072  003304  0E00               	movlw	0
 10073  003306  6F82               	movwf	130,b	;volatile
 10074                           
 10075                           ;mcc_generated_files/pin_manager.c: 107:     ODCONA = 0x00;
 10076  003308  0E00               	movlw	0
 10077  00330A  6F42               	movwf	66,b	;volatile
 10078                           
 10079                           ;mcc_generated_files/pin_manager.c: 108:     ODCONB = 0x00;
 10080  00330C  0E00               	movlw	0
 10081  00330E  6F52               	movwf	82,b	;volatile
 10082                           
 10083                           ;mcc_generated_files/pin_manager.c: 109:     ODCONC = 0x00;
 10084  003310  0E00               	movlw	0
 10085  003312  6F62               	movwf	98,b	;volatile
 10086                           
 10087                           ;mcc_generated_files/pin_manager.c: 110:     ODCOND = 0x00;
 10088  003314  0E00               	movlw	0
 10089  003316  6F72               	movwf	114,b	;volatile
 10090  003318                     
 10091                           ; BSR set to: 58
 10092                           ;mcc_generated_files/pin_manager.c: 115:     SLRCONA = 0xFF;
 10093  003318  6943               	setf	67,b	;volatile
 10094  00331A                     
 10095                           ; BSR set to: 58
 10096                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONB = 0xFF;
 10097  00331A  6953               	setf	83,b	;volatile
 10098  00331C                     
 10099                           ; BSR set to: 58
 10100                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONC = 0xFF;
 10101  00331C  6963               	setf	99,b	;volatile
 10102  00331E                     
 10103                           ; BSR set to: 58
 10104                           ;mcc_generated_files/pin_manager.c: 118:     SLRCOND = 0xFF;
 10105  00331E  6973               	setf	115,b	;volatile
 10106                           
 10107                           ;mcc_generated_files/pin_manager.c: 119:     SLRCONE = 0x07;
 10108  003320  0E07               	movlw	7
 10109  003322  6F83               	movwf	131,b	;volatile
 10110  003324                     
 10111                           ; BSR set to: 58
 10112                           ;mcc_generated_files/pin_manager.c: 124:     INLVLA = 0xFF;
 10113  003324  6944               	setf	68,b	;volatile
 10114  003326                     
 10115                           ; BSR set to: 58
 10116                           ;mcc_generated_files/pin_manager.c: 125:     INLVLB = 0xFF;
 10117  003326  6954               	setf	84,b	;volatile
 10118  003328                     
 10119                           ; BSR set to: 58
 10120                           ;mcc_generated_files/pin_manager.c: 126:     INLVLC = 0xFF;
 10121  003328  6964               	setf	100,b	;volatile
 10122  00332A                     
 10123                           ; BSR set to: 58
 10124                           ;mcc_generated_files/pin_manager.c: 127:     INLVLD = 0xFF;
 10125  00332A  6974               	setf	116,b	;volatile
 10126                           
 10127                           ;mcc_generated_files/pin_manager.c: 128:     INLVLE = 0x0F;
 10128  00332C  0E0F               	movlw	15
 10129  00332E  6F84               	movwf	132,b	;volatile
 10130                           
 10131                           ;mcc_generated_files/pin_manager.c: 137:     CCP3PPS = 0x1F;
 10132  003330  0E1F               	movlw	31
 10133  003332  6FCF               	movwf	207,b	;volatile
 10134                           
 10135                           ;mcc_generated_files/pin_manager.c: 138:     CLCIN3PPS = 0x09;
 10136  003334  0E09               	movlw	9
 10137  003336  6FDC               	movwf	220,b	;volatile
 10138                           
 10139                           ;mcc_generated_files/pin_manager.c: 139:     RA1PPS = 0x0E;
 10140  003338  0E0E               	movlw	14
 10141  00333A  6F01               	movwf	1,b	;volatile
 10142                           
 10143                           ;mcc_generated_files/pin_manager.c: 140:     U1RXPPS = 0x0A;
 10144  00333C  0E0A               	movlw	10
 10145  00333E  6FE5               	movwf	229,b	;volatile
 10146                           
 10147                           ;mcc_generated_files/pin_manager.c: 141:     RA0PPS = 0x0D;
 10148  003340  0E0D               	movlw	13
 10149  003342  6F00               	movwf	0,b	;volatile
 10150                           
 10151                           ;mcc_generated_files/pin_manager.c: 142:     T5GPPS = 0x1D;
 10152  003344  0E1D               	movlw	29
 10153  003346  6FC9               	movwf	201,b	;volatile
 10154                           
 10155                           ;mcc_generated_files/pin_manager.c: 143:     RA4PPS = 0x10;
 10156  003348  0E10               	movlw	16
 10157  00334A  6F04               	movwf	4,b	;volatile
 10158                           
 10159                           ;mcc_generated_files/pin_manager.c: 144:     CLCIN0PPS = 0x07;
 10160  00334C  0E07               	movlw	7
 10161  00334E  6FD9               	movwf	217,b	;volatile
 10162                           
 10163                           ;mcc_generated_files/pin_manager.c: 145:     SMT1WINPPS = 0x09;
 10164  003350  0E09               	movlw	9
 10165  003352  6FD1               	movwf	209,b	;volatile
 10166                           
 10167                           ;mcc_generated_files/pin_manager.c: 146:     RA3PPS = 0x0F;
 10168  003354  0E0F               	movlw	15
 10169  003356  6F03               	movwf	3,b	;volatile
 10170                           
 10171                           ;mcc_generated_files/pin_manager.c: 147:     RB3PPS = 0x13;
 10172  003358  0E13               	movlw	19
 10173  00335A  6F0B               	movwf	11,b	;volatile
 10174                           
 10175                           ;mcc_generated_files/pin_manager.c: 148:     CLCIN2PPS = 0x08;
 10176  00335C  0E08               	movlw	8
 10177  00335E  6FDB               	movwf	219,b	;volatile
 10178                           
 10179                           ;mcc_generated_files/pin_manager.c: 149:     SMT1SIGPPS = 0x08;
 10180  003360  0E08               	movlw	8
 10181  003362  6FD2               	movwf	210,b	;volatile
 10182                           
 10183                           ;mcc_generated_files/pin_manager.c: 150:     CCP4PPS = 0x1E;
 10184  003364  0E1E               	movlw	30
 10185  003366  6FD0               	movwf	208,b	;volatile
 10186  003368                     
 10187                           ; BSR set to: 58
 10188  003368  0012               	return		;funcret
 10189  00336A                     __end_of_PIN_MANAGER_Initialize:
 10190                           	callstack 0
 10191                           
 10192 ;; *************** function _OSCILLATOR_Initialize *****************
 10193 ;; Defined at:
 10194 ;;		line 72 in file "mcc_generated_files/mcc.c"
 10195 ;; Parameters:    Size  Location     Type
 10196 ;;		None
 10197 ;; Auto vars:     Size  Location     Type
 10198 ;;		None
 10199 ;; Return value:  Size  Location     Type
 10200 ;;                  1    wreg      void 
 10201 ;; Registers used:
 10202 ;;		wreg, status,2
 10203 ;; Tracked objects:
 10204 ;;		On entry : 0/0
 10205 ;;		On exit  : 0/0
 10206 ;;		Unchanged: 0/0
 10207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10211 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10212 ;;Total ram usage:        0 bytes
 10213 ;; Hardware stack levels used: 1
 10214 ;; Hardware stack levels required when called: 8
 10215 ;; This function calls:
 10216 ;;		Nothing
 10217 ;; This function is called by:
 10218 ;;		_SYSTEM_Initialize
 10219 ;; This function uses a non-reentrant model
 10220 ;;
 10221                           
 10222                           	psect	text57
 10223  0041A6                     __ptext57:
 10224                           	callstack 0
 10225  0041A6                     _OSCILLATOR_Initialize:
 10226                           	callstack 21
 10227  0041A6                     
 10228                           ;mcc_generated_files/mcc.c: 75:     OSCCON1 = 0x60;
 10229  0041A6  0E60               	movlw	96
 10230  0041A8  0139               	movlb	57	; () banked
 10231  0041AA  6FD9               	movwf	217,b	;volatile
 10232                           
 10233                           ;mcc_generated_files/mcc.c: 77:     OSCCON3 = 0x00;
 10234  0041AC  0E00               	movlw	0
 10235  0041AE  6FDB               	movwf	219,b	;volatile
 10236                           
 10237                           ;mcc_generated_files/mcc.c: 79:     OSCEN = 0x00;
 10238  0041B0  0E00               	movlw	0
 10239  0041B2  6FDD               	movwf	221,b	;volatile
 10240                           
 10241                           ;mcc_generated_files/mcc.c: 81:     OSCFRQ = 0x08;
 10242  0041B4  0E08               	movlw	8
 10243  0041B6  6FDF               	movwf	223,b	;volatile
 10244                           
 10245                           ;mcc_generated_files/mcc.c: 83:     OSCTUNE = 0x00;
 10246  0041B8  0E00               	movlw	0
 10247  0041BA  6FDE               	movwf	222,b	;volatile
 10248  0041BC                     
 10249                           ; BSR set to: 57
 10250  0041BC  0012               	return		;funcret
 10251  0041BE                     __end_of_OSCILLATOR_Initialize:
 10252                           	callstack 0
 10253                           
 10254 ;; *************** function _INTERRUPT_Initialize *****************
 10255 ;; Defined at:
 10256 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 10257 ;; Parameters:    Size  Location     Type
 10258 ;;		None
 10259 ;; Auto vars:     Size  Location     Type
 10260 ;;  state           1   19[COMRAM] _Bool 
 10261 ;; Return value:  Size  Location     Type
 10262 ;;                  1    wreg      void 
 10263 ;; Registers used:
 10264 ;;		wreg, status,2
 10265 ;; Tracked objects:
 10266 ;;		On entry : 0/0
 10267 ;;		On exit  : 0/0
 10268 ;;		Unchanged: 0/0
 10269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10271 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10273 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10274 ;;Total ram usage:        1 bytes
 10275 ;; Hardware stack levels used: 1
 10276 ;; Hardware stack levels required when called: 8
 10277 ;; This function calls:
 10278 ;;		Nothing
 10279 ;; This function is called by:
 10280 ;;		_SYSTEM_Initialize
 10281 ;; This function uses a non-reentrant model
 10282 ;;
 10283                           
 10284                           	psect	text58
 10285  0039D6                     __ptext58:
 10286                           	callstack 0
 10287  0039D6                     _INTERRUPT_Initialize:
 10288                           	callstack 21
 10289  0039D6                     
 10290                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 10291  0039D6  8AD2               	bsf	210,5,c	;volatile
 10292  0039D8                     
 10293                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 10294  0039D8  0E00               	movlw	0
 10295  0039DA  BED2               	btfsc	16338,7,c	;volatile
 10296  0039DC  0E01               	movlw	1
 10297  0039DE  6E14               	movwf	INTERRUPT_Initialize@state^0,c
 10298  0039E0                     
 10299                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 10300  0039E0  9ED2               	bcf	16338,7,c	;volatile
 10301                           
 10302                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 10303  0039E2  0E55               	movlw	85
 10304  0039E4  6ED4               	movwf	212,c	;volatile
 10305                           
 10306                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 10307  0039E6  0EAA               	movlw	170
 10308  0039E8  6ED4               	movwf	212,c	;volatile
 10309  0039EA                     
 10310                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 10311  0039EA  90D4               	bcf	212,0,c	;volatile
 10312                           
 10313                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTBASEU = 0;
 10314  0039EC  0E00               	movlw	0
 10315  0039EE  6ED7               	movwf	215,c	;volatile
 10316                           
 10317                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTBASEH = 0;
 10318  0039F0  0E00               	movlw	0
 10319  0039F2  6ED6               	movwf	214,c	;volatile
 10320                           
 10321                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTBASEL = 8;
 10322  0039F4  0E08               	movlw	8
 10323  0039F6  6ED5               	movwf	213,c	;volatile
 10324                           
 10325                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 10326  0039F8  0E55               	movlw	85
 10327  0039FA  6ED4               	movwf	212,c	;volatile
 10328                           
 10329                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 10330  0039FC  0EAA               	movlw	170
 10331  0039FE  6ED4               	movwf	212,c	;volatile
 10332  003A00                     
 10333                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 10334  003A00  80D4               	bsf	212,0,c	;volatile
 10335  003A02                     
 10336                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 10337  003A02  B014               	btfsc	INTERRUPT_Initialize@state^0,0,c
 10338  003A04  D002               	bra	u1575
 10339  003A06  9ED2               	bcf	16338,7,c	;volatile
 10340  003A08  D001               	bra	u1576
 10341  003A0A                     u1575:
 10342  003A0A  8ED2               	bsf	16338,7,c	;volatile
 10343  003A0C                     u1576:
 10344  003A0C                     
 10345                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR3bits.U1TXIP = 0;
 10346  003A0C  0139               	movlb	57	; () banked
 10347  003A0E  9983               	bcf	131,4,b	;volatile
 10348  003A10                     
 10349                           ; BSR set to: 57
 10350                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR3bits.U1RXIP = 0;
 10351  003A10  9783               	bcf	131,3,b	;volatile
 10352  003A12                     
 10353                           ; BSR set to: 57
 10354                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR1bits.SMT1PWAIP = 1;
 10355  003A12  8F81               	bsf	129,7,b	;volatile
 10356  003A14                     
 10357                           ; BSR set to: 57
 10358                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR1bits.SMT1IP = 1;
 10359  003A14  8B81               	bsf	129,5,b	;volatile
 10360  003A16                     
 10361                           ; BSR set to: 57
 10362                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR1bits.SMT1PRAIP = 1;
 10363  003A16  8D81               	bsf	129,6,b	;volatile
 10364  003A18                     
 10365                           ; BSR set to: 57
 10366                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR8bits.TMR5GIP = 1;
 10367  003A18  8F88               	bsf	136,7,b	;volatile
 10368  003A1A                     
 10369                           ; BSR set to: 57
 10370                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR10bits.CCP4IP = 1;
 10371  003A1A  818A               	bsf	138,0,b	;volatile
 10372  003A1C                     
 10373                           ; BSR set to: 57
 10374                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR7bits.TMR4IP = 0;
 10375  003A1C  9187               	bcf	135,0,b	;volatile
 10376  003A1E                     
 10377                           ; BSR set to: 57
 10378                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR9bits.CCP3IP = 1;
 10379  003A1E  8389               	bsf	137,1,b	;volatile
 10380  003A20                     
 10381                           ; BSR set to: 57
 10382  003A20  0012               	return		;funcret
 10383  003A22                     __end_of_INTERRUPT_Initialize:
 10384                           	callstack 0
 10385                           
 10386 ;; *************** function _CLC3_Initialize *****************
 10387 ;; Defined at:
 10388 ;;		line 58 in file "mcc_generated_files/clc3.c"
 10389 ;; Parameters:    Size  Location     Type
 10390 ;;		None
 10391 ;; Auto vars:     Size  Location     Type
 10392 ;;		None
 10393 ;; Return value:  Size  Location     Type
 10394 ;;                  1    wreg      void 
 10395 ;; Registers used:
 10396 ;;		wreg, status,2
 10397 ;; Tracked objects:
 10398 ;;		On entry : 0/0
 10399 ;;		On exit  : 0/0
 10400 ;;		Unchanged: 0/0
 10401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10405 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10406 ;;Total ram usage:        0 bytes
 10407 ;; Hardware stack levels used: 1
 10408 ;; Hardware stack levels required when called: 8
 10409 ;; This function calls:
 10410 ;;		Nothing
 10411 ;; This function is called by:
 10412 ;;		_SYSTEM_Initialize
 10413 ;; This function uses a non-reentrant model
 10414 ;;
 10415                           
 10416                           	psect	text59
 10417  003FD0                     __ptext59:
 10418                           	callstack 0
 10419  003FD0                     _CLC3_Initialize:
 10420                           	callstack 21
 10421  003FD0                     
 10422                           ;mcc_generated_files/clc3.c: 63:     CLC3POL = 0x00;
 10423  003FD0  0E00               	movlw	0
 10424  003FD2  013C               	movlb	60	; () banked
 10425  003FD4  6F61               	movwf	97,b	;volatile
 10426                           
 10427                           ;mcc_generated_files/clc3.c: 65:     CLC3SEL0 = 0x03;
 10428  003FD6  0E03               	movlw	3
 10429  003FD8  6F62               	movwf	98,b	;volatile
 10430                           
 10431                           ;mcc_generated_files/clc3.c: 67:     CLC3SEL1 = 0x02;
 10432  003FDA  0E02               	movlw	2
 10433  003FDC  6F63               	movwf	99,b	;volatile
 10434                           
 10435                           ;mcc_generated_files/clc3.c: 69:     CLC3SEL2 = 0x00;
 10436  003FDE  0E00               	movlw	0
 10437  003FE0  6F64               	movwf	100,b	;volatile
 10438                           
 10439                           ;mcc_generated_files/clc3.c: 71:     CLC3SEL3 = 0x00;
 10440  003FE2  0E00               	movlw	0
 10441  003FE4  6F65               	movwf	101,b	;volatile
 10442                           
 10443                           ;mcc_generated_files/clc3.c: 73:     CLC3GLS0 = 0x02;
 10444  003FE6  0E02               	movlw	2
 10445  003FE8  6F66               	movwf	102,b	;volatile
 10446                           
 10447                           ;mcc_generated_files/clc3.c: 75:     CLC3GLS1 = 0x08;
 10448  003FEA  0E08               	movlw	8
 10449  003FEC  6F67               	movwf	103,b	;volatile
 10450                           
 10451                           ;mcc_generated_files/clc3.c: 77:     CLC3GLS2 = 0x00;
 10452  003FEE  0E00               	movlw	0
 10453  003FF0  6F68               	movwf	104,b	;volatile
 10454                           
 10455                           ;mcc_generated_files/clc3.c: 79:     CLC3GLS3 = 0x00;
 10456  003FF2  0E00               	movlw	0
 10457  003FF4  6F69               	movwf	105,b	;volatile
 10458                           
 10459                           ;mcc_generated_files/clc3.c: 81:     CLC3CON = 0x85;
 10460  003FF6  0E85               	movlw	133
 10461  003FF8  6F60               	movwf	96,b	;volatile
 10462  003FFA                     
 10463                           ; BSR set to: 60
 10464  003FFA  0012               	return		;funcret
 10465  003FFC                     __end_of_CLC3_Initialize:
 10466                           	callstack 0
 10467                           
 10468 ;; *************** function _CCP4_Initialize *****************
 10469 ;; Defined at:
 10470 ;;		line 78 in file "mcc_generated_files/ccp4.c"
 10471 ;; Parameters:    Size  Location     Type
 10472 ;;		None
 10473 ;; Auto vars:     Size  Location     Type
 10474 ;;		None
 10475 ;; Return value:  Size  Location     Type
 10476 ;;                  1    wreg      void 
 10477 ;; Registers used:
 10478 ;;		wreg, status,2, status,0, cstack
 10479 ;; Tracked objects:
 10480 ;;		On entry : 0/0
 10481 ;;		On exit  : 0/0
 10482 ;;		Unchanged: 0/0
 10483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10487 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10488 ;;Total ram usage:        0 bytes
 10489 ;; Hardware stack levels used: 1
 10490 ;; Hardware stack levels required when called: 9
 10491 ;; This function calls:
 10492 ;;		_CCP4_SetCallBack
 10493 ;; This function is called by:
 10494 ;;		_SYSTEM_Initialize
 10495 ;; This function uses a non-reentrant model
 10496 ;;
 10497                           
 10498                           	psect	text60
 10499  003F1A                     __ptext60:
 10500                           	callstack 0
 10501  003F1A                     _CCP4_Initialize:
 10502                           	callstack 20
 10503  003F1A                     
 10504                           ;mcc_generated_files/ccp4.c: 83:  CCP4CON = 0x83;
 10505  003F1A  0E83               	movlw	131
 10506  003F1C  6E72               	movwf	114,c	;volatile
 10507                           
 10508                           ;mcc_generated_files/ccp4.c: 86:  CCP4CAP = 0x00;
 10509  003F1E  0E00               	movlw	0
 10510  003F20  6E73               	movwf	115,c	;volatile
 10511                           
 10512                           ;mcc_generated_files/ccp4.c: 89:  CCPR4H = 0x00;
 10513  003F22  0E00               	movlw	0
 10514  003F24  6E71               	movwf	113,c	;volatile
 10515                           
 10516                           ;mcc_generated_files/ccp4.c: 92:  CCPR4L = 0x00;
 10517  003F26  0E00               	movlw	0
 10518  003F28  6E70               	movwf	112,c	;volatile
 10519  003F2A                     
 10520                           ;mcc_generated_files/ccp4.c: 95:     CCP4_SetCallBack(CCP4_DefaultCallBack);
 10521  003F2A  0EEA               	movlw	low _CCP4_DefaultCallBack
 10522  003F2C  6E14               	movwf	CCP4_SetCallBack@customCallBack^0,c
 10523  003F2E  0E3E               	movlw	high _CCP4_DefaultCallBack
 10524  003F30  6E15               	movwf	(CCP4_SetCallBack@customCallBack+1)^0,c
 10525  003F32  EC16  F021         	call	_CCP4_SetCallBack	;wreg free
 10526  003F36                     
 10527                           ;mcc_generated_files/ccp4.c: 98:  CCPTMRS0bits.C4TSEL = 0x2;
 10528  003F36  013F               	movlb	63	; () banked
 10529  003F38  515E               	movf	94,w,b	;volatile
 10530  003F3A  0B3F               	andlw	-193
 10531  003F3C  0980               	iorlw	128
 10532  003F3E  6F5E               	movwf	94,b	;volatile
 10533  003F40                     
 10534                           ; BSR set to: 63
 10535                           ;mcc_generated_files/ccp4.c: 101:     PIR10bits.CCP4IF = 0;
 10536  003F40  0139               	movlb	57	; () banked
 10537  003F42  91AA               	bcf	170,0,b	;volatile
 10538  003F44                     
 10539                           ; BSR set to: 57
 10540                           ;mcc_generated_files/ccp4.c: 104:     PIE10bits.CCP4IE = 1;
 10541  003F44  819A               	bsf	154,0,b	;volatile
 10542  003F46                     
 10543                           ; BSR set to: 57
 10544  003F46  0012               	return		;funcret
 10545  003F48                     __end_of_CCP4_Initialize:
 10546                           	callstack 0
 10547                           
 10548 ;; *************** function _CCP4_SetCallBack *****************
 10549 ;; Defined at:
 10550 ;;		line 75 in file "mcc_generated_files/ccp4.c"
 10551 ;; Parameters:    Size  Location     Type
 10552 ;;  customCallBa    2   19[COMRAM] PTR FTN(unsigned short ,
 10553 ;;		 -> CCP4_DefaultCallBack(1), 
 10554 ;; Auto vars:     Size  Location     Type
 10555 ;;		None
 10556 ;; Return value:  Size  Location     Type
 10557 ;;                  1    wreg      void 
 10558 ;; Registers used:
 10559 ;;		wreg, status,2, status,0
 10560 ;; Tracked objects:
 10561 ;;		On entry : 0/0
 10562 ;;		On exit  : 0/0
 10563 ;;		Unchanged: 0/0
 10564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10565 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10568 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10569 ;;Total ram usage:        2 bytes
 10570 ;; Hardware stack levels used: 1
 10571 ;; Hardware stack levels required when called: 8
 10572 ;; This function calls:
 10573 ;;		Nothing
 10574 ;; This function is called by:
 10575 ;;		_CCP4_Initialize
 10576 ;; This function uses a non-reentrant model
 10577 ;;
 10578                           
 10579                           	psect	text61
 10580  00422C                     __ptext61:
 10581                           	callstack 0
 10582  00422C                     _CCP4_SetCallBack:
 10583                           	callstack 20
 10584  00422C                     
 10585                           ;mcc_generated_files/ccp4.c: 76:     CCP4_CallBack = customCallBack;
 10586  00422C  C014  F0ED         	movff	CCP4_SetCallBack@customCallBack,_CCP4_CallBack
 10587  004230  C015  F0EE         	movff	CCP4_SetCallBack@customCallBack+1,_CCP4_CallBack+1
 10588  004234  0012               	return		;funcret
 10589  004236                     __end_of_CCP4_SetCallBack:
 10590                           	callstack 0
 10591                           
 10592 ;; *************** function _CCP3_Initialize *****************
 10593 ;; Defined at:
 10594 ;;		line 75 in file "mcc_generated_files/ccp3.c"
 10595 ;; Parameters:    Size  Location     Type
 10596 ;;		None
 10597 ;; Auto vars:     Size  Location     Type
 10598 ;;		None
 10599 ;; Return value:  Size  Location     Type
 10600 ;;                  1    wreg      void 
 10601 ;; Registers used:
 10602 ;;		wreg, status,2, status,0, cstack
 10603 ;; Tracked objects:
 10604 ;;		On entry : 0/0
 10605 ;;		On exit  : 0/0
 10606 ;;		Unchanged: 0/0
 10607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10611 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10612 ;;Total ram usage:        0 bytes
 10613 ;; Hardware stack levels used: 1
 10614 ;; Hardware stack levels required when called: 9
 10615 ;; This function calls:
 10616 ;;		_CCP3_SetCallBack
 10617 ;; This function is called by:
 10618 ;;		_SYSTEM_Initialize
 10619 ;; This function uses a non-reentrant model
 10620 ;;
 10621                           
 10622                           	psect	text62
 10623  003F48                     __ptext62:
 10624                           	callstack 0
 10625  003F48                     _CCP3_Initialize:
 10626                           	callstack 20
 10627  003F48                     
 10628                           ;mcc_generated_files/ccp3.c: 80:  CCP3CON = 0x83;
 10629  003F48  0E83               	movlw	131
 10630  003F4A  6E76               	movwf	118,c	;volatile
 10631                           
 10632                           ;mcc_generated_files/ccp3.c: 83:  CCP3CAP = 0x00;
 10633  003F4C  0E00               	movlw	0
 10634  003F4E  6E77               	movwf	119,c	;volatile
 10635                           
 10636                           ;mcc_generated_files/ccp3.c: 86:  CCPR3H = 0x00;
 10637  003F50  0E00               	movlw	0
 10638  003F52  6E75               	movwf	117,c	;volatile
 10639                           
 10640                           ;mcc_generated_files/ccp3.c: 89:  CCPR3L = 0x00;
 10641  003F54  0E00               	movlw	0
 10642  003F56  6E74               	movwf	116,c	;volatile
 10643  003F58                     
 10644                           ;mcc_generated_files/ccp3.c: 92:     CCP3_SetCallBack(CCP3_DefaultCallBack);
 10645  003F58  0EBA               	movlw	low _CCP3_DefaultCallBack
 10646  003F5A  6E14               	movwf	CCP3_SetCallBack@customCallBack^0,c
 10647  003F5C  0E3E               	movlw	high _CCP3_DefaultCallBack
 10648  003F5E  6E15               	movwf	(CCP3_SetCallBack@customCallBack+1)^0,c
 10649  003F60  EC1B  F021         	call	_CCP3_SetCallBack	;wreg free
 10650  003F64                     
 10651                           ;mcc_generated_files/ccp3.c: 95:  CCPTMRS0bits.C3TSEL = 0x2;
 10652  003F64  013F               	movlb	63	; () banked
 10653  003F66  515E               	movf	94,w,b	;volatile
 10654  003F68  0BCF               	andlw	-49
 10655  003F6A  0920               	iorlw	32
 10656  003F6C  6F5E               	movwf	94,b	;volatile
 10657  003F6E                     
 10658                           ; BSR set to: 63
 10659                           ;mcc_generated_files/ccp3.c: 98:     PIR9bits.CCP3IF = 0;
 10660  003F6E  0139               	movlb	57	; () banked
 10661  003F70  93A9               	bcf	169,1,b	;volatile
 10662  003F72                     
 10663                           ; BSR set to: 57
 10664                           ;mcc_generated_files/ccp3.c: 101:     PIE9bits.CCP3IE = 1;
 10665  003F72  8399               	bsf	153,1,b	;volatile
 10666  003F74                     
 10667                           ; BSR set to: 57
 10668  003F74  0012               	return		;funcret
 10669  003F76                     __end_of_CCP3_Initialize:
 10670                           	callstack 0
 10671                           
 10672 ;; *************** function _CCP3_SetCallBack *****************
 10673 ;; Defined at:
 10674 ;;		line 119 in file "mcc_generated_files/ccp3.c"
 10675 ;; Parameters:    Size  Location     Type
 10676 ;;  customCallBa    2   19[COMRAM] PTR FTN(unsigned short ,
 10677 ;;		 -> CCP3_DefaultCallBack(1), 
 10678 ;; Auto vars:     Size  Location     Type
 10679 ;;		None
 10680 ;; Return value:  Size  Location     Type
 10681 ;;                  1    wreg      void 
 10682 ;; Registers used:
 10683 ;;		wreg, status,2, status,0
 10684 ;; Tracked objects:
 10685 ;;		On entry : 0/0
 10686 ;;		On exit  : 0/0
 10687 ;;		Unchanged: 0/0
 10688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10689 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10692 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10693 ;;Total ram usage:        2 bytes
 10694 ;; Hardware stack levels used: 1
 10695 ;; Hardware stack levels required when called: 8
 10696 ;; This function calls:
 10697 ;;		Nothing
 10698 ;; This function is called by:
 10699 ;;		_CCP3_Initialize
 10700 ;; This function uses a non-reentrant model
 10701 ;;
 10702                           
 10703                           	psect	text63
 10704  004236                     __ptext63:
 10705                           	callstack 0
 10706  004236                     _CCP3_SetCallBack:
 10707                           	callstack 20
 10708  004236                     
 10709                           ;mcc_generated_files/ccp3.c: 120:     CCP3_CallBack = customCallBack;
 10710  004236  C014  F0EF         	movff	CCP3_SetCallBack@customCallBack,_CCP3_CallBack
 10711  00423A  C015  F0F0         	movff	CCP3_SetCallBack@customCallBack+1,_CCP3_CallBack+1
 10712  00423E  0012               	return		;funcret
 10713  004240                     __end_of_CCP3_SetCallBack:
 10714                           	callstack 0
 10715                           
 10716 ;; *************** function _ADCC_Initialize *****************
 10717 ;; Defined at:
 10718 ;;		line 62 in file "mcc_generated_files/adcc.c"
 10719 ;; Parameters:    Size  Location     Type
 10720 ;;		None
 10721 ;; Auto vars:     Size  Location     Type
 10722 ;;		None
 10723 ;; Return value:  Size  Location     Type
 10724 ;;                  1    wreg      void 
 10725 ;; Registers used:
 10726 ;;		wreg, status,2
 10727 ;; Tracked objects:
 10728 ;;		On entry : 0/0
 10729 ;;		On exit  : 0/0
 10730 ;;		Unchanged: 0/0
 10731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10735 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10736 ;;Total ram usage:        0 bytes
 10737 ;; Hardware stack levels used: 1
 10738 ;; Hardware stack levels required when called: 8
 10739 ;; This function calls:
 10740 ;;		Nothing
 10741 ;; This function is called by:
 10742 ;;		_SYSTEM_Initialize
 10743 ;; This function uses a non-reentrant model
 10744 ;;
 10745                           
 10746                           	psect	text64
 10747  0038D2                     __ptext64:
 10748                           	callstack 0
 10749  0038D2                     _ADCC_Initialize:
 10750                           	callstack 21
 10751  0038D2                     
 10752                           ;mcc_generated_files/adcc.c: 66:     ADLTHL = 0x00;
 10753  0038D2  0E00               	movlw	0
 10754  0038D4  013E               	movlb	62	; () banked
 10755  0038D6  6FDE               	movwf	222,b	;volatile
 10756                           
 10757                           ;mcc_generated_files/adcc.c: 68:     ADLTHH = 0x00;
 10758  0038D8  0E00               	movlw	0
 10759  0038DA  6FDF               	movwf	223,b	;volatile
 10760                           
 10761                           ;mcc_generated_files/adcc.c: 70:     ADUTHL = 0x00;
 10762  0038DC  0E00               	movlw	0
 10763  0038DE  6FE0               	movwf	224,b	;volatile
 10764                           
 10765                           ;mcc_generated_files/adcc.c: 72:     ADUTHH = 0x00;
 10766  0038E0  0E00               	movlw	0
 10767  0038E2  6FE1               	movwf	225,b	;volatile
 10768                           
 10769                           ;mcc_generated_files/adcc.c: 74:     ADSTPTL = 0x00;
 10770  0038E4  0E00               	movlw	0
 10771  0038E6  6FE4               	movwf	228,b	;volatile
 10772                           
 10773                           ;mcc_generated_files/adcc.c: 76:     ADSTPTH = 0x00;
 10774  0038E8  0E00               	movlw	0
 10775  0038EA  6FE5               	movwf	229,b	;volatile
 10776                           
 10777                           ;mcc_generated_files/adcc.c: 78:     ADACCU = 0x00;
 10778  0038EC  0E00               	movlw	0
 10779  0038EE  6FEA               	movwf	234,b	;volatile
 10780                           
 10781                           ;mcc_generated_files/adcc.c: 80:     ADRPT = 0x00;
 10782  0038F0  0E00               	movlw	0
 10783  0038F2  6FEC               	movwf	236,b	;volatile
 10784                           
 10785                           ;mcc_generated_files/adcc.c: 82:     ADPCH = 0x00;
 10786  0038F4  0E00               	movlw	0
 10787  0038F6  6FF1               	movwf	241,b	;volatile
 10788                           
 10789                           ;mcc_generated_files/adcc.c: 84:     ADACQL = 0x58;
 10790  0038F8  0E58               	movlw	88
 10791  0038FA  6FF3               	movwf	243,b	;volatile
 10792                           
 10793                           ;mcc_generated_files/adcc.c: 86:     ADACQH = 0x02;
 10794  0038FC  0E02               	movlw	2
 10795  0038FE  6FF4               	movwf	244,b	;volatile
 10796                           
 10797                           ;mcc_generated_files/adcc.c: 88:     ADCAP = 0x00;
 10798  003900  0E00               	movlw	0
 10799  003902  6FF5               	movwf	245,b	;volatile
 10800                           
 10801                           ;mcc_generated_files/adcc.c: 90:     ADPREL = 0x00;
 10802  003904  0E00               	movlw	0
 10803  003906  6FF6               	movwf	246,b	;volatile
 10804                           
 10805                           ;mcc_generated_files/adcc.c: 92:     ADPREH = 0x00;
 10806  003908  0E00               	movlw	0
 10807  00390A  6FF7               	movwf	247,b	;volatile
 10808                           
 10809                           ;mcc_generated_files/adcc.c: 94:     ADCON1 = 0x00;
 10810  00390C  0E00               	movlw	0
 10811  00390E  6FF9               	movwf	249,b	;volatile
 10812                           
 10813                           ;mcc_generated_files/adcc.c: 96:     ADCON2 = 0x00;
 10814  003910  0E00               	movlw	0
 10815  003912  6FFA               	movwf	250,b	;volatile
 10816                           
 10817                           ;mcc_generated_files/adcc.c: 98:     ADCON3 = 0x00;
 10818  003914  0E00               	movlw	0
 10819  003916  6FFB               	movwf	251,b	;volatile
 10820                           
 10821                           ;mcc_generated_files/adcc.c: 100:     ADSTAT = 0x00;
 10822  003918  0E00               	movlw	0
 10823  00391A  6FFC               	movwf	252,b	;volatile
 10824                           
 10825                           ;mcc_generated_files/adcc.c: 102:     ADREF = 0x00;
 10826  00391C  0E00               	movlw	0
 10827  00391E  6FFD               	movwf	253,b	;volatile
 10828                           
 10829                           ;mcc_generated_files/adcc.c: 104:     ADACT = 0x00;
 10830  003920  0E00               	movlw	0
 10831  003922  6FFE               	movwf	254,b	;volatile
 10832                           
 10833                           ;mcc_generated_files/adcc.c: 106:     ADCLK = 0x1F;
 10834  003924  0E1F               	movlw	31
 10835  003926  6FFF               	movwf	255,b	;volatile
 10836                           
 10837                           ;mcc_generated_files/adcc.c: 108:     ADCON0 = 0x84;
 10838  003928  0E84               	movlw	132
 10839  00392A  6FF8               	movwf	248,b	;volatile
 10840  00392C                     
 10841                           ; BSR set to: 62
 10842  00392C  0012               	return		;funcret
 10843  00392E                     __end_of_ADCC_Initialize:
 10844                           	callstack 0
 10845                           
 10846 ;; *************** function _UART1_tx_vect_isr *****************
 10847 ;; Defined at:
 10848 ;;		line 235 in file "mcc_generated_files/uart1.c"
 10849 ;; Parameters:    Size  Location     Type
 10850 ;;		None
 10851 ;; Auto vars:     Size  Location     Type
 10852 ;;		None
 10853 ;; Return value:  Size  Location     Type
 10854 ;;                  1    wreg      void 
 10855 ;; Registers used:
 10856 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 10857 ;; Tracked objects:
 10858 ;;		On entry : 0/0
 10859 ;;		On exit  : 0/0
 10860 ;;		Unchanged: 0/0
 10861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10864 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10865 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10866 ;;Total ram usage:        1 bytes
 10867 ;; Hardware stack levels used: 1
 10868 ;; Hardware stack levels required when called: 5
 10869 ;; This function calls:
 10870 ;;		Absolute function
 10871 ;;		_UART1_Transmit_ISR
 10872 ;; This function is called by:
 10873 ;;		Interrupt level 1
 10874 ;; This function uses a non-reentrant model
 10875 ;;
 10876                           
 10877                           	psect	text65
 10878  003C04                     __ptext65:
 10879                           	callstack 0
 10880  003C04                     _UART1_tx_vect_isr:
 10881                           	callstack 14
 10882                           
 10883                           ; BSR set to: 62
 10884                           ;incstack = 0
 10885  003C04  006F FF60  F011    	movff	status,??_UART1_tx_vect_isr
 10886  003C0A                     
 10887                           ;mcc_generated_files/uart1.c: 237:     if(UART1_TxInterruptHandler)
 10888  003C0A  0100               	movlb	0	; () banked
 10889  003C0C  51F7               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 10890  003C0E  11F8               	iorwf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 10891  003C10  B4D8               	btfsc	status,2,c
 10892  003C12  EF0D  F01E         	goto	i1u458_21
 10893  003C16  EF0F  F01E         	goto	i1u458_20
 10894  003C1A                     i1u458_21:
 10895  003C1A  EF1B  F01E         	goto	i1l324
 10896  003C1E                     i1u458_20:
 10897  003C1E                     
 10898                           ; BSR set to: 0
 10899                           ;mcc_generated_files/uart1.c: 238:     {;mcc_generated_files/uart1.c: 239:         UART1
      +                          _TxInterruptHandler();
 10900  003C1E  D802               	call	i1u459_28
 10901  003C20  EF1B  F01E         	goto	i1u459_29
 10902  003C24                     i1u459_28:
 10903  003C24  0005               	push	
 10904  003C26  6EFA               	movwf	pclath,c
 10905  003C28  51F7               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 10906  003C2A  6EFD               	movwf	tosl,c
 10907  003C2C  51F8               	movf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 10908  003C2E  6EFE               	movwf	tosh,c
 10909  003C30  6AFF               	clrf	tosu,c
 10910  003C32  50FA               	movf	pclath,w,c
 10911  003C34  0012               	return		;indir
 10912  003C36                     i1u459_29:
 10913  003C36                     i1l324:
 10914  003C36  0060  F047  FFD8   	movff	??_UART1_tx_vect_isr,status
 10915  003C3C  0011               	retfie		f
 10916  003C3E                     __end_of_UART1_tx_vect_isr:
 10917                           	callstack 0
 10918                           
 10919 ;; *************** function _UART1_Transmit_ISR *****************
 10920 ;; Defined at:
 10921 ;;		line 253 in file "mcc_generated_files/uart1.c"
 10922 ;; Parameters:    Size  Location     Type
 10923 ;;		None
 10924 ;; Auto vars:     Size  Location     Type
 10925 ;;		None
 10926 ;; Return value:  Size  Location     Type
 10927 ;;                  1    wreg      void 
 10928 ;; Registers used:
 10929 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10930 ;; Tracked objects:
 10931 ;;		On entry : 0/0
 10932 ;;		On exit  : 0/0
 10933 ;;		Unchanged: 0/0
 10934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10938 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10939 ;;Total ram usage:        0 bytes
 10940 ;; Hardware stack levels used: 1
 10941 ;; Hardware stack levels required when called: 4
 10942 ;; This function calls:
 10943 ;;		Nothing
 10944 ;; This function is called by:
 10945 ;;		_UART1_Initialize
 10946 ;;		_UART1_tx_vect_isr
 10947 ;; This function uses a non-reentrant model
 10948 ;;
 10949                           
 10950                           	psect	text66
 10951  003B46                     __ptext66:
 10952                           	callstack 0
 10953  003B46                     _UART1_Transmit_ISR:
 10954                           	callstack 14
 10955  003B46                     
 10956                           ;mcc_generated_files/uart1.c: 256:     if(sizeof(uart1TxBuffer) > uart1TxBufferRemaining
      +                          )
 10957  003B46  0E08               	movlw	8
 10958  003B48  604C               	cpfslt	_uart1TxBufferRemaining^0,c	;volatile
 10959  003B4A  EFA9  F01D         	goto	i1u439_21
 10960  003B4E  EFAB  F01D         	goto	i1u439_20
 10961  003B52                     i1u439_21:
 10962  003B52  EFC2  F01D         	goto	i1l333
 10963  003B56                     i1u439_20:
 10964  003B56                     
 10965                           ;mcc_generated_files/uart1.c: 257:     {;mcc_generated_files/uart1.c: 258:         U1TXB
      +                           = uart1TxBuffer[uart1TxTail++];
 10966  003B56  0E70               	movlw	low _uart1TxBuffer
 10967  003B58  2446               	addwf	_uart1TxTail^0,w,c	;volatile
 10968  003B5A  6ED9               	movwf	fsr2l,c
 10969  003B5C  6ADA               	clrf	fsr2h,c
 10970  003B5E  0E00               	movlw	high _uart1TxBuffer
 10971  003B60  22DA               	addwfc	fsr2h,f,c
 10972  003B62  50DF               	movf	indf2,w,c
 10973  003B64  013D               	movlb	61	; () banked
 10974  003B66  6FEA               	movwf	234,b	;volatile
 10975  003B68                     
 10976                           ; BSR set to: 61
 10977  003B68  2A46               	incf	_uart1TxTail^0,f,c	;volatile
 10978  003B6A                     
 10979                           ; BSR set to: 61
 10980                           ;mcc_generated_files/uart1.c: 259:        if(sizeof(uart1TxBuffer) <= uart1TxTail)
 10981  003B6A  0E07               	movlw	7
 10982  003B6C  6446               	cpfsgt	_uart1TxTail^0,c	;volatile
 10983  003B6E  EFBB  F01D         	goto	i1u440_21
 10984  003B72  EFBD  F01D         	goto	i1u440_20
 10985  003B76                     i1u440_21:
 10986  003B76  EFBF  F01D         	goto	i1l5600
 10987  003B7A                     i1u440_20:
 10988  003B7A                     
 10989                           ; BSR set to: 61
 10990                           ;mcc_generated_files/uart1.c: 260:         {;mcc_generated_files/uart1.c: 261:          
      +                             uart1TxTail = 0;
 10991  003B7A  0E00               	movlw	0
 10992  003B7C  6E46               	movwf	_uart1TxTail^0,c	;volatile
 10993  003B7E                     i1l5600:
 10994                           
 10995                           ; BSR set to: 61
 10996                           ;mcc_generated_files/uart1.c: 263:         uart1TxBufferRemaining++;
 10997  003B7E  2A4C               	incf	_uart1TxBufferRemaining^0,f,c	;volatile
 10998                           
 10999                           ;mcc_generated_files/uart1.c: 264:     }
 11000  003B80  EFC4  F01D         	goto	i1l336
 11001  003B84                     i1l333:
 11002                           
 11003                           ;mcc_generated_files/uart1.c: 266:     {;mcc_generated_files/uart1.c: 267:         PIE3b
      +                          its.U1TXIE = 0;
 11004  003B84  0139               	movlb	57	; () banked
 11005  003B86  9993               	bcf	147,4,b	;volatile
 11006  003B88                     i1l336:
 11007  003B88  0012               	return		;funcret
 11008  003B8A                     __end_of_UART1_Transmit_ISR:
 11009                           	callstack 0
 11010                           
 11011 ;; *************** function _UART1_rx_vect_isr *****************
 11012 ;; Defined at:
 11013 ;;		line 243 in file "mcc_generated_files/uart1.c"
 11014 ;; Parameters:    Size  Location     Type
 11015 ;;		None
 11016 ;; Auto vars:     Size  Location     Type
 11017 ;;		None
 11018 ;; Return value:  Size  Location     Type
 11019 ;;                  1    wreg      void 
 11020 ;; Registers used:
 11021 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 11022 ;; Tracked objects:
 11023 ;;		On entry : 0/0
 11024 ;;		On exit  : 0/0
 11025 ;;		Unchanged: 0/0
 11026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11029 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11030 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11031 ;;Total ram usage:        1 bytes
 11032 ;; Hardware stack levels used: 1
 11033 ;; Hardware stack levels required when called: 7
 11034 ;; This function calls:
 11035 ;;		Absolute function
 11036 ;;		_UART1_Receive_ISR
 11037 ;; This function is called by:
 11038 ;;		Interrupt level 1
 11039 ;; This function uses a non-reentrant model
 11040 ;;
 11041                           
 11042                           	psect	text67
 11043  003C40                     __ptext67:
 11044                           	callstack 0
 11045  003C40                     _UART1_rx_vect_isr:
 11046                           	callstack 12
 11047                           
 11048                           ;incstack = 0
 11049  003C40  006F FF60  F012    	movff	status,??_UART1_rx_vect_isr
 11050  003C46                     
 11051                           ;mcc_generated_files/uart1.c: 245:     if(UART1_RxInterruptHandler)
 11052  003C46  0100               	movlb	0	; () banked
 11053  003C48  51F9               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 11054  003C4A  11FA               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 11055  003C4C  B4D8               	btfsc	status,2,c
 11056  003C4E  EF2B  F01E         	goto	i1u460_21
 11057  003C52  EF2D  F01E         	goto	i1u460_20
 11058  003C56                     i1u460_21:
 11059  003C56  EF39  F01E         	goto	i1l330
 11060  003C5A                     i1u460_20:
 11061  003C5A                     
 11062                           ; BSR set to: 0
 11063                           ;mcc_generated_files/uart1.c: 246:     {;mcc_generated_files/uart1.c: 247:         UART1
      +                          _RxInterruptHandler();
 11064  003C5A  D802               	call	i1u461_28
 11065  003C5C  EF39  F01E         	goto	i1u461_29
 11066  003C60                     i1u461_28:
 11067  003C60  0005               	push	
 11068  003C62  6EFA               	movwf	pclath,c
 11069  003C64  51F9               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 11070  003C66  6EFD               	movwf	tosl,c
 11071  003C68  51FA               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 11072  003C6A  6EFE               	movwf	tosh,c
 11073  003C6C  6AFF               	clrf	tosu,c
 11074  003C6E  50FA               	movf	pclath,w,c
 11075  003C70  0012               	return		;indir
 11076  003C72                     i1u461_29:
 11077  003C72                     i1l330:
 11078  003C72  0060  F04B  FFD8   	movff	??_UART1_rx_vect_isr,status
 11079  003C78  0011               	retfie		f
 11080  003C7A                     __end_of_UART1_rx_vect_isr:
 11081                           	callstack 0
 11082                           
 11083 ;; *************** function _UART1_Receive_ISR *****************
 11084 ;; Defined at:
 11085 ;;		line 273 in file "mcc_generated_files/uart1.c"
 11086 ;; Parameters:    Size  Location     Type
 11087 ;;		None
 11088 ;; Auto vars:     Size  Location     Type
 11089 ;;		None
 11090 ;; Return value:  Size  Location     Type
 11091 ;;                  1    wreg      void 
 11092 ;; Registers used:
 11093 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 11094 ;; Tracked objects:
 11095 ;;		On entry : 0/0
 11096 ;;		On exit  : 0/0
 11097 ;;		Unchanged: 0/0
 11098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11102 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11103 ;;Total ram usage:        0 bytes
 11104 ;; Hardware stack levels used: 1
 11105 ;; Hardware stack levels required when called: 6
 11106 ;; This function calls:
 11107 ;;		Absolute function
 11108 ;;		_UART1_DefaultErrorHandler
 11109 ;;		_UART1_DefaultFramingErrorHandler
 11110 ;;		_UART1_DefaultOverrunErrorHandler
 11111 ;;		_UART1_RxDataHandler
 11112 ;; This function is called by:
 11113 ;;		_UART1_Initialize
 11114 ;;		_UART1_rx_vect_isr
 11115 ;; This function uses a non-reentrant model
 11116 ;;
 11117                           
 11118                           	psect	text68
 11119  0034F0                     __ptext68:
 11120                           	callstack 0
 11121  0034F0                     _UART1_Receive_ISR:
 11122                           	callstack 12
 11123  0034F0                     
 11124                           ;mcc_generated_files/uart1.c: 276:     uart1RxStatusBuffer[uart1RxHead].status = 0;
 11125  0034F0  0E60               	movlw	low _uart1RxStatusBuffer
 11126  0034F2  2445               	addwf	_uart1RxHead^0,w,c	;volatile
 11127  0034F4  6ED9               	movwf	fsr2l,c
 11128  0034F6  6ADA               	clrf	fsr2h,c
 11129  0034F8  0E00               	movlw	high _uart1RxStatusBuffer
 11130  0034FA  22DA               	addwfc	fsr2h,f,c
 11131  0034FC  0E00               	movlw	0
 11132  0034FE  6EDF               	movwf	indf2,c
 11133  003500                     
 11134                           ;mcc_generated_files/uart1.c: 278:     if(U1ERRIRbits.FERIF){
 11135  003500  013D               	movlb	61	; () banked
 11136  003502  A7F9               	btfss	249,3,b	;volatile
 11137  003504  EF86  F01A         	goto	i1u441_21
 11138  003508  EF88  F01A         	goto	i1u441_20
 11139  00350C                     i1u441_21:
 11140  00350C  EF9C  F01A         	goto	i1l5610
 11141  003510                     i1u441_20:
 11142  003510                     
 11143                           ; BSR set to: 61
 11144                           ;mcc_generated_files/uart1.c: 279:         uart1RxStatusBuffer[uart1RxHead].ferr = 1;
 11145  003510  0E60               	movlw	low _uart1RxStatusBuffer
 11146  003512  2445               	addwf	_uart1RxHead^0,w,c	;volatile
 11147  003514  6ED9               	movwf	fsr2l,c
 11148  003516  6ADA               	clrf	fsr2h,c
 11149  003518  0E00               	movlw	high _uart1RxStatusBuffer
 11150  00351A  22DA               	addwfc	fsr2h,f,c
 11151  00351C  0100               	movlb	0	; () banked
 11152  00351E  82DF               	bsf	indf2,1,c
 11153  003520                     
 11154                           ; BSR set to: 0
 11155                           ;mcc_generated_files/uart1.c: 280:         UART1_FramingErrorHandler();
 11156  003520  D802               	call	i1u442_28
 11157  003522  EF9C  F01A         	goto	i1u442_29
 11158  003526                     i1u442_28:
 11159  003526  0005               	push	
 11160  003528  6EFA               	movwf	pclath,c
 11161  00352A  51F5               	movf	_UART1_FramingErrorHandler& (0+255),w,b
 11162  00352C  6EFD               	movwf	tosl,c
 11163  00352E  51F6               	movf	(_UART1_FramingErrorHandler+1)& (0+255),w,b
 11164  003530  6EFE               	movwf	tosh,c
 11165  003532  6AFF               	clrf	tosu,c
 11166  003534  50FA               	movf	pclath,w,c
 11167  003536  0012               	return		;indir
 11168  003538                     i1u442_29:
 11169  003538                     i1l5610:
 11170                           
 11171                           ;mcc_generated_files/uart1.c: 283:     if(U1ERRIRbits.RXFOIF){
 11172  003538  013D               	movlb	61	; () banked
 11173  00353A  A3F9               	btfss	249,1,b	;volatile
 11174  00353C  EFA2  F01A         	goto	i1u443_21
 11175  003540  EFA4  F01A         	goto	i1u443_20
 11176  003544                     i1u443_21:
 11177  003544  EFB8  F01A         	goto	i1l5616
 11178  003548                     i1u443_20:
 11179  003548                     
 11180                           ; BSR set to: 61
 11181                           ;mcc_generated_files/uart1.c: 284:         uart1RxStatusBuffer[uart1RxHead].oerr = 1;
 11182  003548  0E60               	movlw	low _uart1RxStatusBuffer
 11183  00354A  2445               	addwf	_uart1RxHead^0,w,c	;volatile
 11184  00354C  6ED9               	movwf	fsr2l,c
 11185  00354E  6ADA               	clrf	fsr2h,c
 11186  003550  0E00               	movlw	high _uart1RxStatusBuffer
 11187  003552  22DA               	addwfc	fsr2h,f,c
 11188  003554  0100               	movlb	0	; () banked
 11189  003556  84DF               	bsf	indf2,2,c
 11190  003558                     
 11191                           ; BSR set to: 0
 11192                           ;mcc_generated_files/uart1.c: 285:         UART1_OverrunErrorHandler();
 11193  003558  D802               	call	i1u444_28
 11194  00355A  EFB8  F01A         	goto	i1u444_29
 11195  00355E                     i1u444_28:
 11196  00355E  0005               	push	
 11197  003560  6EFA               	movwf	pclath,c
 11198  003562  51F3               	movf	_UART1_OverrunErrorHandler& (0+255),w,b
 11199  003564  6EFD               	movwf	tosl,c
 11200  003566  51F4               	movf	(_UART1_OverrunErrorHandler+1)& (0+255),w,b
 11201  003568  6EFE               	movwf	tosh,c
 11202  00356A  6AFF               	clrf	tosu,c
 11203  00356C  50FA               	movf	pclath,w,c
 11204  00356E  0012               	return		;indir
 11205  003570                     i1u444_29:
 11206  003570                     i1l5616:
 11207                           
 11208                           ;mcc_generated_files/uart1.c: 288:     if(uart1RxStatusBuffer[uart1RxHead].status){
 11209  003570  0E60               	movlw	low _uart1RxStatusBuffer
 11210  003572  2445               	addwf	_uart1RxHead^0,w,c	;volatile
 11211  003574  6ED9               	movwf	fsr2l,c
 11212  003576  6ADA               	clrf	fsr2h,c
 11213  003578  0E00               	movlw	high _uart1RxStatusBuffer
 11214  00357A  22DA               	addwfc	fsr2h,f,c
 11215  00357C  50DF               	movf	indf2,w,c
 11216  00357E  B4D8               	btfsc	status,2,c
 11217  003580  EFC4  F01A         	goto	i1u445_21
 11218  003584  EFC6  F01A         	goto	i1u445_20
 11219  003588                     i1u445_21:
 11220  003588  EFD5  F01A         	goto	i1l5620
 11221  00358C                     i1u445_20:
 11222  00358C                     
 11223                           ;mcc_generated_files/uart1.c: 289:         UART1_ErrorHandler();
 11224  00358C  D802               	call	i1u446_28
 11225  00358E  EFD3  F01A         	goto	i1u446_29
 11226  003592                     i1u446_28:
 11227  003592  0005               	push	
 11228  003594  6EFA               	movwf	pclath,c
 11229  003596  0100               	movlb	0	; () banked
 11230  003598  51F1               	movf	_UART1_ErrorHandler& (0+255),w,b
 11231  00359A  6EFD               	movwf	tosl,c
 11232  00359C  51F2               	movf	(_UART1_ErrorHandler+1)& (0+255),w,b
 11233  00359E  6EFE               	movwf	tosh,c
 11234  0035A0  6AFF               	clrf	tosu,c
 11235  0035A2  50FA               	movf	pclath,w,c
 11236  0035A4  0012               	return		;indir
 11237  0035A6                     i1u446_29:
 11238                           
 11239                           ;mcc_generated_files/uart1.c: 290:     } else {
 11240  0035A6  EFD7  F01A         	goto	i1l343
 11241  0035AA                     i1l5620:
 11242                           
 11243                           ;mcc_generated_files/uart1.c: 291:         UART1_RxDataHandler();
 11244  0035AA  ECFE  F01F         	call	_UART1_RxDataHandler	;wreg free
 11245  0035AE                     i1l343:
 11246  0035AE  0012               	return		;funcret
 11247  0035B0                     __end_of_UART1_Receive_ISR:
 11248                           	callstack 0
 11249                           
 11250 ;; *************** function _UART1_DefaultOverrunErrorHandler *****************
 11251 ;; Defined at:
 11252 ;;		line 309 in file "mcc_generated_files/uart1.c"
 11253 ;; Parameters:    Size  Location     Type
 11254 ;;		None
 11255 ;; Auto vars:     Size  Location     Type
 11256 ;;		None
 11257 ;; Return value:  Size  Location     Type
 11258 ;;                  1    wreg      void 
 11259 ;; Registers used:
 11260 ;;		None
 11261 ;; Tracked objects:
 11262 ;;		On entry : 0/0
 11263 ;;		On exit  : 0/0
 11264 ;;		Unchanged: 0/0
 11265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11269 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11270 ;;Total ram usage:        0 bytes
 11271 ;; Hardware stack levels used: 1
 11272 ;; Hardware stack levels required when called: 4
 11273 ;; This function calls:
 11274 ;;		Nothing
 11275 ;; This function is called by:
 11276 ;;		_UART1_Initialize
 11277 ;;		_UART1_Receive_ISR
 11278 ;; This function uses a non-reentrant model
 11279 ;;
 11280                           
 11281                           	psect	text69
 11282  00424E                     __ptext69:
 11283                           	callstack 0
 11284  00424E                     _UART1_DefaultOverrunErrorHandler:
 11285                           	callstack 13
 11286  00424E  0012               	return		;funcret
 11287  004250                     __end_of_UART1_DefaultOverrunErrorHandler:
 11288                           	callstack 0
 11289                           
 11290 ;; *************** function _UART1_DefaultFramingErrorHandler *****************
 11291 ;; Defined at:
 11292 ;;		line 307 in file "mcc_generated_files/uart1.c"
 11293 ;; Parameters:    Size  Location     Type
 11294 ;;		None
 11295 ;; Auto vars:     Size  Location     Type
 11296 ;;		None
 11297 ;; Return value:  Size  Location     Type
 11298 ;;                  1    wreg      void 
 11299 ;; Registers used:
 11300 ;;		None
 11301 ;; Tracked objects:
 11302 ;;		On entry : 0/0
 11303 ;;		On exit  : 0/0
 11304 ;;		Unchanged: 0/0
 11305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11309 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11310 ;;Total ram usage:        0 bytes
 11311 ;; Hardware stack levels used: 1
 11312 ;; Hardware stack levels required when called: 4
 11313 ;; This function calls:
 11314 ;;		Nothing
 11315 ;; This function is called by:
 11316 ;;		_UART1_Initialize
 11317 ;;		_UART1_Receive_ISR
 11318 ;; This function uses a non-reentrant model
 11319 ;;
 11320                           
 11321                           	psect	text70
 11322  004250                     __ptext70:
 11323                           	callstack 0
 11324  004250                     _UART1_DefaultFramingErrorHandler:
 11325                           	callstack 13
 11326  004250  0012               	return		;funcret
 11327  004252                     __end_of_UART1_DefaultFramingErrorHandler:
 11328                           	callstack 0
 11329                           
 11330 ;; *************** function _UART1_DefaultErrorHandler *****************
 11331 ;; Defined at:
 11332 ;;		line 311 in file "mcc_generated_files/uart1.c"
 11333 ;; Parameters:    Size  Location     Type
 11334 ;;		None
 11335 ;; Auto vars:     Size  Location     Type
 11336 ;;		None
 11337 ;; Return value:  Size  Location     Type
 11338 ;;                  1    wreg      void 
 11339 ;; Registers used:
 11340 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11341 ;; Tracked objects:
 11342 ;;		On entry : 0/0
 11343 ;;		On exit  : 0/0
 11344 ;;		Unchanged: 0/0
 11345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11349 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11350 ;;Total ram usage:        0 bytes
 11351 ;; Hardware stack levels used: 1
 11352 ;; Hardware stack levels required when called: 5
 11353 ;; This function calls:
 11354 ;;		_UART1_RxDataHandler
 11355 ;; This function is called by:
 11356 ;;		_UART1_Initialize
 11357 ;;		_UART1_Receive_ISR
 11358 ;; This function uses a non-reentrant model
 11359 ;;
 11360                           
 11361                           	psect	text71
 11362  004240                     __ptext71:
 11363                           	callstack 0
 11364  004240                     _UART1_DefaultErrorHandler:
 11365                           	callstack 12
 11366  004240                     
 11367                           ;mcc_generated_files/uart1.c: 312:     UART1_RxDataHandler();
 11368  004240  ECFE  F01F         	call	_UART1_RxDataHandler	;wreg free
 11369  004244  0012               	return		;funcret
 11370  004246                     __end_of_UART1_DefaultErrorHandler:
 11371                           	callstack 0
 11372                           
 11373 ;; *************** function _UART1_RxDataHandler *****************
 11374 ;; Defined at:
 11375 ;;		line 297 in file "mcc_generated_files/uart1.c"
 11376 ;; Parameters:    Size  Location     Type
 11377 ;;		None
 11378 ;; Auto vars:     Size  Location     Type
 11379 ;;		None
 11380 ;; Return value:  Size  Location     Type
 11381 ;;                  1    wreg      void 
 11382 ;; Registers used:
 11383 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11384 ;; Tracked objects:
 11385 ;;		On entry : 0/0
 11386 ;;		On exit  : 0/0
 11387 ;;		Unchanged: 0/0
 11388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11392 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11393 ;;Total ram usage:        0 bytes
 11394 ;; Hardware stack levels used: 1
 11395 ;; Hardware stack levels required when called: 4
 11396 ;; This function calls:
 11397 ;;		Nothing
 11398 ;; This function is called by:
 11399 ;;		_UART1_Receive_ISR
 11400 ;;		_UART1_DefaultErrorHandler
 11401 ;; This function uses a non-reentrant model
 11402 ;;
 11403                           
 11404                           	psect	text72
 11405  003FFC                     __ptext72:
 11406                           	callstack 0
 11407  003FFC                     _UART1_RxDataHandler:
 11408                           	callstack 13
 11409  003FFC                     
 11410                           ;mcc_generated_files/uart1.c: 299:     uart1RxBuffer[uart1RxHead++] = U1RXB;
 11411  003FFC  0E68               	movlw	low _uart1RxBuffer
 11412  003FFE  2445               	addwf	_uart1RxHead^0,w,c	;volatile
 11413  004000  6ED9               	movwf	fsr2l,c
 11414  004002  6ADA               	clrf	fsr2h,c
 11415  004004  0E00               	movlw	high _uart1RxBuffer
 11416  004006  22DA               	addwfc	fsr2h,f,c
 11417  004008  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 11418  00400E  2A45               	incf	_uart1RxHead^0,f,c	;volatile
 11419  004010                     
 11420                           ;mcc_generated_files/uart1.c: 300:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 11421  004010  0E07               	movlw	7
 11422  004012  6445               	cpfsgt	_uart1RxHead^0,c	;volatile
 11423  004014  EF0E  F020         	goto	i1u302_21
 11424  004018  EF10  F020         	goto	i1u302_20
 11425  00401C                     i1u302_21:
 11426  00401C  EF12  F020         	goto	i1l4614
 11427  004020                     i1u302_20:
 11428  004020                     
 11429                           ;mcc_generated_files/uart1.c: 301:     {;mcc_generated_files/uart1.c: 302:         uart1
      +                          RxHead = 0;
 11430  004020  0E00               	movlw	0
 11431  004022  6E45               	movwf	_uart1RxHead^0,c	;volatile
 11432  004024                     i1l4614:
 11433                           
 11434                           ;mcc_generated_files/uart1.c: 304:     uart1RxCount++;
 11435  004024  2A43               	incf	_uart1RxCount^0,f,c	;volatile
 11436  004026  0012               	return		;funcret
 11437  004028                     __end_of_UART1_RxDataHandler:
 11438                           	callstack 0
 11439                           
 11440 ;; *************** function _TMR4_ISR *****************
 11441 ;; Defined at:
 11442 ;;		line 166 in file "mcc_generated_files/tmr4.c"
 11443 ;; Parameters:    Size  Location     Type
 11444 ;;		None
 11445 ;; Auto vars:     Size  Location     Type
 11446 ;;		None
 11447 ;; Return value:  Size  Location     Type
 11448 ;;                  1    wreg      void 
 11449 ;; Registers used:
 11450 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 11451 ;; Tracked objects:
 11452 ;;		On entry : 0/0
 11453 ;;		On exit  : 0/0
 11454 ;;		Unchanged: 0/0
 11455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11458 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11459 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11460 ;;Total ram usage:        1 bytes
 11461 ;; Hardware stack levels used: 1
 11462 ;; Hardware stack levels required when called: 6
 11463 ;; This function calls:
 11464 ;;		_TMR4_CallBack
 11465 ;; This function is called by:
 11466 ;;		Interrupt level 1
 11467 ;; This function uses a non-reentrant model
 11468 ;;
 11469                           
 11470                           	psect	text73
 11471  003CB4                     __ptext73:
 11472                           	callstack 0
 11473  003CB4                     _TMR4_ISR:
 11474                           	callstack 13
 11475                           
 11476                           ;incstack = 0
 11477  003CB4  006F FF60  F013    	movff	status,??_TMR4_ISR
 11478  003CBA                     
 11479                           ;mcc_generated_files/tmr4.c: 168:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr4.c: 171:     PIR7bits.TMR4IF = 0;
 11480  003CBA  0139               	movlb	57	; () banked
 11481  003CBC  91A7               	bcf	167,0,b	;volatile
 11482  003CBE                     
 11483                           ; BSR set to: 57
 11484                           ;mcc_generated_files/tmr4.c: 174:     if (++CountCallBack >= 10)
 11485  003CBE  4A3E               	infsnz	TMR4_ISR@CountCallBack^0,f,c	;volatile
 11486  003CC0  2A3F               	incf	(TMR4_ISR@CountCallBack+1)^0,f,c	;volatile
 11487  003CC2  503F               	movf	(TMR4_ISR@CountCallBack+1)^0,w,c	;volatile
 11488  003CC4  E109               	bnz	i1u466_20
 11489  003CC6  0E0A               	movlw	10
 11490  003CC8  5C3E               	subwf	TMR4_ISR@CountCallBack^0,w,c	;volatile
 11491  003CCA  A0D8               	btfss	status,0,c
 11492  003CCC  EF6A  F01E         	goto	i1u466_21
 11493  003CD0  EF6C  F01E         	goto	i1u466_20
 11494  003CD4                     i1u466_21:
 11495  003CD4  EF72  F01E         	goto	i1l688
 11496  003CD8                     i1u466_20:
 11497  003CD8                     
 11498                           ; BSR set to: 57
 11499                           ;mcc_generated_files/tmr4.c: 175:     {;mcc_generated_files/tmr4.c: 177:         TMR4_Ca
      +                          llBack();
 11500  003CD8  ECBB  F01F         	call	_TMR4_CallBack	;wreg free
 11501  003CDC                     
 11502                           ;mcc_generated_files/tmr4.c: 180:         CountCallBack = 0;
 11503  003CDC  0E00               	movlw	0
 11504  003CDE  6E3F               	movwf	(TMR4_ISR@CountCallBack+1)^0,c	;volatile
 11505  003CE0  0E00               	movlw	0
 11506  003CE2  6E3E               	movwf	TMR4_ISR@CountCallBack^0,c	;volatile
 11507  003CE4                     i1l688:
 11508  003CE4  0060  F04F  FFD8   	movff	??_TMR4_ISR,status
 11509  003CEA  0011               	retfie		f
 11510  003CEC                     __end_of_TMR4_ISR:
 11511                           	callstack 0
 11512                           
 11513 ;; *************** function _TMR4_CallBack *****************
 11514 ;; Defined at:
 11515 ;;		line 184 in file "mcc_generated_files/tmr4.c"
 11516 ;; Parameters:    Size  Location     Type
 11517 ;;		None
 11518 ;; Auto vars:     Size  Location     Type
 11519 ;;		None
 11520 ;; Return value:  Size  Location     Type
 11521 ;;                  1    wreg      void 
 11522 ;; Registers used:
 11523 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 11524 ;; Tracked objects:
 11525 ;;		On entry : 0/0
 11526 ;;		On exit  : 0/0
 11527 ;;		Unchanged: 0/0
 11528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11532 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11533 ;;Total ram usage:        0 bytes
 11534 ;; Hardware stack levels used: 1
 11535 ;; Hardware stack levels required when called: 5
 11536 ;; This function calls:
 11537 ;;		Absolute function
 11538 ;;		_TMR4_10msISR
 11539 ;;		_TMR4_DefaultInterruptHandler
 11540 ;; This function is called by:
 11541 ;;		_TMR4_ISR
 11542 ;; This function uses a non-reentrant model
 11543 ;;
 11544                           
 11545                           	psect	text74
 11546  003F76                     __ptext74:
 11547                           	callstack 0
 11548  003F76                     _TMR4_CallBack:
 11549                           	callstack 13
 11550  003F76                     
 11551                           ;mcc_generated_files/tmr4.c: 188:     if(TMR4_InterruptHandler)
 11552  003F76  0100               	movlb	0	; () banked
 11553  003F78  51E5               	movf	_TMR4_InterruptHandler& (0+255),w,b
 11554  003F7A  11E6               	iorwf	(_TMR4_InterruptHandler+1)& (0+255),w,b
 11555  003F7C  B4D8               	btfsc	status,2,c
 11556  003F7E  EFC3  F01F         	goto	i1u450_21
 11557  003F82  EFC5  F01F         	goto	i1u450_20
 11558  003F86                     i1u450_21:
 11559  003F86  EFD1  F01F         	goto	i1l692
 11560  003F8A                     i1u450_20:
 11561  003F8A                     
 11562                           ; BSR set to: 0
 11563                           ;mcc_generated_files/tmr4.c: 189:     {;mcc_generated_files/tmr4.c: 190:         TMR4_In
      +                          terruptHandler();
 11564  003F8A  D802               	call	i1u451_28
 11565  003F8C  EFD1  F01F         	goto	i1u451_29
 11566  003F90                     i1u451_28:
 11567  003F90  0005               	push	
 11568  003F92  6EFA               	movwf	pclath,c
 11569  003F94  51E5               	movf	_TMR4_InterruptHandler& (0+255),w,b
 11570  003F96  6EFD               	movwf	tosl,c
 11571  003F98  51E6               	movf	(_TMR4_InterruptHandler+1)& (0+255),w,b
 11572  003F9A  6EFE               	movwf	tosh,c
 11573  003F9C  6AFF               	clrf	tosu,c
 11574  003F9E  50FA               	movf	pclath,w,c
 11575  003FA0  0012               	return		;indir
 11576  003FA2                     i1u451_29:
 11577  003FA2                     i1l692:
 11578  003FA2  0012               	return		;funcret
 11579  003FA4                     __end_of_TMR4_CallBack:
 11580                           	callstack 0
 11581                           
 11582 ;; *************** function _TMR4_10msISR *****************
 11583 ;; Defined at:
 11584 ;;		line 65 in file "main.c"
 11585 ;; Parameters:    Size  Location     Type
 11586 ;;		None
 11587 ;; Auto vars:     Size  Location     Type
 11588 ;;		None
 11589 ;; Return value:  Size  Location     Type
 11590 ;;                  1    wreg      void 
 11591 ;; Registers used:
 11592 ;;		status,2, status,0
 11593 ;; Tracked objects:
 11594 ;;		On entry : 0/0
 11595 ;;		On exit  : 0/0
 11596 ;;		Unchanged: 0/0
 11597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11602 ;;Total ram usage:        0 bytes
 11603 ;; Hardware stack levels used: 1
 11604 ;; Hardware stack levels required when called: 4
 11605 ;; This function calls:
 11606 ;;		Nothing
 11607 ;; This function is called by:
 11608 ;;		_main
 11609 ;;		_TMR4_CallBack
 11610 ;; This function uses a non-reentrant model
 11611 ;;
 11612                           
 11613                           	psect	text75
 11614  004246                     __ptext75:
 11615                           	callstack 0
 11616  004246                     _TMR4_10msISR:
 11617                           	callstack 13
 11618  004246                     
 11619                           ;main.c: 66:     ++cycle10ms;
 11620  004246  0100               	movlb	0	; () banked
 11621  004248  2BA1               	incf	_cycle10ms& (0+255),f,b	;volatile
 11622  00424A                     
 11623                           ; BSR set to: 0
 11624  00424A  0012               	return		;funcret
 11625  00424C                     __end_of_TMR4_10msISR:
 11626                           	callstack 0
 11627                           
 11628 ;; *************** function _TMR4_DefaultInterruptHandler *****************
 11629 ;; Defined at:
 11630 ;;		line 198 in file "mcc_generated_files/tmr4.c"
 11631 ;; Parameters:    Size  Location     Type
 11632 ;;		None
 11633 ;; Auto vars:     Size  Location     Type
 11634 ;;		None
 11635 ;; Return value:  Size  Location     Type
 11636 ;;                  1    wreg      void 
 11637 ;; Registers used:
 11638 ;;		None
 11639 ;; Tracked objects:
 11640 ;;		On entry : 0/0
 11641 ;;		On exit  : 0/0
 11642 ;;		Unchanged: 0/0
 11643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11647 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11648 ;;Total ram usage:        0 bytes
 11649 ;; Hardware stack levels used: 1
 11650 ;; Hardware stack levels required when called: 4
 11651 ;; This function calls:
 11652 ;;		Nothing
 11653 ;; This function is called by:
 11654 ;;		_TMR4_Initialize
 11655 ;;		_TMR4_CallBack
 11656 ;; This function uses a non-reentrant model
 11657 ;;
 11658                           
 11659                           	psect	text76
 11660  004252                     __ptext76:
 11661                           	callstack 0
 11662  004252                     _TMR4_DefaultInterruptHandler:
 11663                           	callstack 13
 11664  004252  0012               	return		;funcret
 11665  004254                     __end_of_TMR4_DefaultInterruptHandler:
 11666                           	callstack 0
 11667                           
 11668 ;; *************** function _Default_ISR *****************
 11669 ;; Defined at:
 11670 ;;		line 83 in file "mcc_generated_files/interrupt_manager.c"
 11671 ;; Parameters:    Size  Location     Type
 11672 ;;		None
 11673 ;; Auto vars:     Size  Location     Type
 11674 ;;		None
 11675 ;; Return value:  Size  Location     Type
 11676 ;;                  1    wreg      void 
 11677 ;; Registers used:
 11678 ;;		None
 11679 ;; Tracked objects:
 11680 ;;		On entry : 0/0
 11681 ;;		On exit  : 0/0
 11682 ;;		Unchanged: 0/0
 11683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11687 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11688 ;;Total ram usage:        0 bytes
 11689 ;; Hardware stack levels used: 1
 11690 ;; This function calls:
 11691 ;;		Nothing
 11692 ;; This function is called by:
 11693 ;;		Interrupt level 2
 11694 ;; This function uses a non-reentrant model
 11695 ;;
 11696                           
 11697                           	psect	text77
 11698  004254                     __ptext77:
 11699                           	callstack 0
 11700  004254                     _Default_ISR:
 11701                           	callstack 15
 11702  004254  0011               	retfie		f
 11703  004256                     __end_of_Default_ISR:
 11704                           	callstack 0
 11705                           
 11706 ;; *************** function _CCP3_CaptureISR *****************
 11707 ;; Defined at:
 11708 ;;		line 104 in file "mcc_generated_files/ccp3.c"
 11709 ;; Parameters:    Size  Location     Type
 11710 ;;		None
 11711 ;; Auto vars:     Size  Location     Type
 11712 ;;  module          2    2[COMRAM] struct CCPR3Reg_tag
 11713 ;; Return value:  Size  Location     Type
 11714 ;;                  1    wreg      void 
 11715 ;; Registers used:
 11716 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 11717 ;; Tracked objects:
 11718 ;;		On entry : 0/0
 11719 ;;		On exit  : 0/0
 11720 ;;		Unchanged: 0/0
 11721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11723 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11725 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11726 ;;Total ram usage:        2 bytes
 11727 ;; Hardware stack levels used: 1
 11728 ;; Hardware stack levels required when called: 1
 11729 ;; This function calls:
 11730 ;;		Absolute function
 11731 ;;		_CCP3_DefaultCallBack
 11732 ;; This function is called by:
 11733 ;;		Interrupt level 2
 11734 ;; This function uses a non-reentrant model
 11735 ;;
 11736                           
 11737                           	psect	text78
 11738  003DBC                     __ptext78:
 11739                           	callstack 0
 11740  003DBC                     _CCP3_CaptureISR:
 11741                           	callstack 14
 11742  003DBC                     
 11743                           ;mcc_generated_files/ccp3.c: 106:     CCP3_PERIOD_REG_T module;;mcc_generated_files/ccp3
      +                          .c: 109:     PIR9bits.CCP3IF = 0;
 11744  003DBC  0139               	movlb	57	; () banked
 11745  003DBE  93A9               	bcf	169,1,b	;volatile
 11746                           
 11747                           ;mcc_generated_files/ccp3.c: 112:     module.ccpr3l = CCPR3L;
 11748  003DC0  006F FDD0  F003    	movff	16244,CCP3_CaptureISR@module	;volatile
 11749                           
 11750                           ;mcc_generated_files/ccp3.c: 113:     module.ccpr3h = CCPR3H;
 11751  003DC6  006F FDD4  F004    	movff	16245,CCP3_CaptureISR@module+1	;volatile
 11752  003DCC                     
 11753                           ; BSR set to: 57
 11754                           ;mcc_generated_files/ccp3.c: 116:     CCP3_CallBack(module.ccpr3_16Bit);
 11755  003DCC  C003  F001         	movff	CCP3_CaptureISR@module,CCP3_DefaultCallBack@capturedValue
 11756  003DD0  C004  F002         	movff	CCP3_CaptureISR@module+1,CCP3_DefaultCallBack@capturedValue+1
 11757  003DD4  D802               	call	i2u462_48
 11758  003DD6  EFF7  F01E         	goto	i2u462_49
 11759  003DDA                     i2u462_48:
 11760  003DDA  0005               	push	
 11761  003DDC  6EFA               	movwf	pclath,c
 11762  003DDE  0100               	movlb	0	; () banked
 11763  003DE0  51EF               	movf	_CCP3_CallBack& (0+255),w,b
 11764  003DE2  6EFD               	movwf	tosl,c
 11765  003DE4  51F0               	movf	(_CCP3_CallBack+1)& (0+255),w,b
 11766  003DE6  6EFE               	movwf	tosh,c
 11767  003DE8  6AFF               	clrf	tosu,c
 11768  003DEA  50FA               	movf	pclath,w,c
 11769  003DEC  0012               	return		;indir
 11770  003DEE                     i2u462_49:
 11771  003DEE  0011               	retfie		f
 11772  003DF0                     __end_of_CCP3_CaptureISR:
 11773                           	callstack 0
 11774                           
 11775 ;; *************** function _CCP3_DefaultCallBack *****************
 11776 ;; Defined at:
 11777 ;;		line 64 in file "mcc_generated_files/ccp3.c"
 11778 ;; Parameters:    Size  Location     Type
 11779 ;;  capturedValu    2    0[COMRAM] unsigned short 
 11780 ;; Auto vars:     Size  Location     Type
 11781 ;;		None
 11782 ;; Return value:  Size  Location     Type
 11783 ;;                  1    wreg      void 
 11784 ;; Registers used:
 11785 ;;		wreg, status,2, status,0
 11786 ;; Tracked objects:
 11787 ;;		On entry : 0/0
 11788 ;;		On exit  : 0/0
 11789 ;;		Unchanged: 0/0
 11790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11791 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11794 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11795 ;;Total ram usage:        2 bytes
 11796 ;; Hardware stack levels used: 1
 11797 ;; This function calls:
 11798 ;;		Nothing
 11799 ;; This function is called by:
 11800 ;;		_CCP3_Initialize
 11801 ;;		_CCP3_CaptureISR
 11802 ;; This function uses a non-reentrant model
 11803 ;;
 11804                           
 11805                           	psect	text79
 11806  003EBA                     __ptext79:
 11807                           	callstack 0
 11808  003EBA                     _CCP3_DefaultCallBack:
 11809                           	callstack 14
 11810  003EBA                     
 11811                           ;mcc_generated_files/ccp3.c: 64: static void CCP3_DefaultCallBack(uint16_t capturedValue
      +                          );mcc_generated_files/ccp3.c: 65: {;mcc_generated_files/ccp3.c: 67:     if(PORTDbits.RD7
      +                          ) {
 11812  003EBA  AECD               	btfss	205,7,c	;volatile
 11813  003EBC  EF62  F01F         	goto	i2u447_41
 11814  003EC0  EF64  F01F         	goto	i2u447_40
 11815  003EC4                     i2u447_41:
 11816  003EC4  EF6A  F01F         	goto	i2l5626
 11817  003EC8                     i2u447_40:
 11818  003EC8                     
 11819                           ;mcc_generated_files/ccp3.c: 68:         distLeftM = capturedValue;
 11820  003EC8  C001  F040         	movff	CCP3_DefaultCallBack@capturedValue,_distLeftM
 11821  003ECC  C002  F041         	movff	CCP3_DefaultCallBack@capturedValue+1,_distLeftM+1
 11822                           
 11823                           ;mcc_generated_files/ccp3.c: 69:     } else {
 11824  003ED0  EF74  F01F         	goto	i2l438
 11825  003ED4                     i2l5626:
 11826                           
 11827                           ;mcc_generated_files/ccp3.c: 70:         distLeft = capturedValue - distLeftM;
 11828  003ED4  5040               	movf	_distLeftM^0,w,c
 11829  003ED6  5C01               	subwf	CCP3_DefaultCallBack@capturedValue^0,w,c
 11830  003ED8  0100               	movlb	0	; () banked
 11831  003EDA  6F9E               	movwf	_distLeft& (0+255),b	;volatile
 11832  003EDC  5041               	movf	(_distLeftM+1)^0,w,c
 11833  003EDE  5802               	subwfb	(CCP3_DefaultCallBack@capturedValue+1)^0,w,c
 11834  003EE0  6F9F               	movwf	(_distLeft+1)& (0+255),b	;volatile
 11835  003EE2                     
 11836                           ; BSR set to: 0
 11837                           ;mcc_generated_files/ccp3.c: 71:         distLeft >>= 1;
 11838  003EE2  90D8               	bcf	status,0,c
 11839  003EE4  339F               	rrcf	(_distLeft+1)& (0+255),f,b	;volatile
 11840  003EE6  339E               	rrcf	_distLeft& (0+255),f,b	;volatile
 11841  003EE8                     i2l438:
 11842  003EE8  0012               	return		;funcret
 11843  003EEA                     __end_of_CCP3_DefaultCallBack:
 11844                           	callstack 0
 11845                           
 11846 ;; *************** function _CCP4_CaptureISR *****************
 11847 ;; Defined at:
 11848 ;;		line 107 in file "mcc_generated_files/ccp4.c"
 11849 ;; Parameters:    Size  Location     Type
 11850 ;;		None
 11851 ;; Auto vars:     Size  Location     Type
 11852 ;;  module          2    6[COMRAM] struct CCPR4Reg_tag
 11853 ;; Return value:  Size  Location     Type
 11854 ;;                  1    wreg      void 
 11855 ;; Registers used:
 11856 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 11857 ;; Tracked objects:
 11858 ;;		On entry : 0/0
 11859 ;;		On exit  : 0/0
 11860 ;;		Unchanged: 0/0
 11861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11863 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11865 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11866 ;;Total ram usage:        2 bytes
 11867 ;; Hardware stack levels used: 1
 11868 ;; Hardware stack levels required when called: 1
 11869 ;; This function calls:
 11870 ;;		Absolute function
 11871 ;;		_CCP4_DefaultCallBack
 11872 ;; This function is called by:
 11873 ;;		Interrupt level 2
 11874 ;; This function uses a non-reentrant model
 11875 ;;
 11876                           
 11877                           	psect	text80
 11878  003DF0                     __ptext80:
 11879                           	callstack 0
 11880  003DF0                     _CCP4_CaptureISR:
 11881                           	callstack 14
 11882  003DF0                     
 11883                           ;mcc_generated_files/ccp4.c: 109:     CCP4_PERIOD_REG_T module;;mcc_generated_files/ccp4
      +                          .c: 112:     PIR10bits.CCP4IF = 0;
 11884  003DF0  0139               	movlb	57	; () banked
 11885  003DF2  91AA               	bcf	170,0,b	;volatile
 11886                           
 11887                           ;mcc_generated_files/ccp4.c: 115:     module.ccpr4l = CCPR4L;
 11888  003DF4  006F FDC0  F007    	movff	16240,CCP4_CaptureISR@module	;volatile
 11889                           
 11890                           ;mcc_generated_files/ccp4.c: 116:     module.ccpr4h = CCPR4H;
 11891  003DFA  006F FDC4  F008    	movff	16241,CCP4_CaptureISR@module+1	;volatile
 11892  003E00                     
 11893                           ; BSR set to: 57
 11894                           ;mcc_generated_files/ccp4.c: 119:     CCP4_CallBack(module.ccpr4_16Bit);
 11895  003E00  C007  F005         	movff	CCP4_CaptureISR@module,CCP4_DefaultCallBack@capturedValue
 11896  003E04  C008  F006         	movff	CCP4_CaptureISR@module+1,CCP4_DefaultCallBack@capturedValue+1
 11897  003E08  D802               	call	i2u463_48
 11898  003E0A  EF11  F01F         	goto	i2u463_49
 11899  003E0E                     i2u463_48:
 11900  003E0E  0005               	push	
 11901  003E10  6EFA               	movwf	pclath,c
 11902  003E12  0100               	movlb	0	; () banked
 11903  003E14  51ED               	movf	_CCP4_CallBack& (0+255),w,b
 11904  003E16  6EFD               	movwf	tosl,c
 11905  003E18  51EE               	movf	(_CCP4_CallBack+1)& (0+255),w,b
 11906  003E1A  6EFE               	movwf	tosh,c
 11907  003E1C  6AFF               	clrf	tosu,c
 11908  003E1E  50FA               	movf	pclath,w,c
 11909  003E20  0012               	return		;indir
 11910  003E22                     i2u463_49:
 11911  003E22  0011               	retfie		f
 11912  003E24                     __end_of_CCP4_CaptureISR:
 11913                           	callstack 0
 11914                           
 11915 ;; *************** function _CCP4_DefaultCallBack *****************
 11916 ;; Defined at:
 11917 ;;		line 64 in file "mcc_generated_files/ccp4.c"
 11918 ;; Parameters:    Size  Location     Type
 11919 ;;  capturedValu    2    4[COMRAM] unsigned short 
 11920 ;; Auto vars:     Size  Location     Type
 11921 ;;		None
 11922 ;; Return value:  Size  Location     Type
 11923 ;;                  1    wreg      void 
 11924 ;; Registers used:
 11925 ;;		wreg, status,2, status,0
 11926 ;; Tracked objects:
 11927 ;;		On entry : 0/0
 11928 ;;		On exit  : 0/0
 11929 ;;		Unchanged: 0/0
 11930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11931 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11934 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11935 ;;Total ram usage:        2 bytes
 11936 ;; Hardware stack levels used: 1
 11937 ;; This function calls:
 11938 ;;		Nothing
 11939 ;; This function is called by:
 11940 ;;		_CCP4_Initialize
 11941 ;;		_CCP4_CaptureISR
 11942 ;; This function uses a non-reentrant model
 11943 ;;
 11944                           
 11945                           	psect	text81
 11946  003EEA                     __ptext81:
 11947                           	callstack 0
 11948  003EEA                     _CCP4_DefaultCallBack:
 11949                           	callstack 14
 11950  003EEA                     
 11951                           ;mcc_generated_files/ccp4.c: 64: static void CCP4_DefaultCallBack(uint16_t capturedValue
      +                          );mcc_generated_files/ccp4.c: 65: {;mcc_generated_files/ccp4.c: 67:     if(PORTDbits.RD6
      +                          ) {
 11952  003EEA  ACCD               	btfss	205,6,c	;volatile
 11953  003EEC  EF7A  F01F         	goto	i2u448_41
 11954  003EF0  EF7C  F01F         	goto	i2u448_40
 11955  003EF4                     i2u448_41:
 11956  003EF4  EF82  F01F         	goto	i2l5634
 11957  003EF8                     i2u448_40:
 11958  003EF8                     
 11959                           ;mcc_generated_files/ccp4.c: 68:         distRightM = capturedValue;
 11960  003EF8  C005  F09A         	movff	CCP4_DefaultCallBack@capturedValue,_distRightM
 11961  003EFC  C006  F09B         	movff	CCP4_DefaultCallBack@capturedValue+1,_distRightM+1
 11962                           
 11963                           ;mcc_generated_files/ccp4.c: 70:     } else {
 11964  003F00  EF8C  F01F         	goto	i2l476
 11965  003F04                     i2l5634:
 11966                           
 11967                           ;mcc_generated_files/ccp4.c: 71:         distRight = capturedValue - distRightM;
 11968  003F04  0100               	movlb	0	; () banked
 11969  003F06  519A               	movf	_distRightM& (0+255),w,b
 11970  003F08  5C05               	subwf	CCP4_DefaultCallBack@capturedValue^0,w,c
 11971  003F0A  6F9C               	movwf	_distRight& (0+255),b	;volatile
 11972  003F0C  519B               	movf	(_distRightM+1)& (0+255),w,b
 11973  003F0E  5806               	subwfb	(CCP4_DefaultCallBack@capturedValue+1)^0,w,c
 11974  003F10  6F9D               	movwf	(_distRight+1)& (0+255),b	;volatile
 11975  003F12                     
 11976                           ; BSR set to: 0
 11977                           ;mcc_generated_files/ccp4.c: 72:         distRight >>= 1;
 11978  003F12  90D8               	bcf	status,0,c
 11979  003F14  339D               	rrcf	(_distRight+1)& (0+255),f,b	;volatile
 11980  003F16  339C               	rrcf	_distRight& (0+255),f,b	;volatile
 11981  003F18                     i2l476:
 11982  003F18  0012               	return		;funcret
 11983  003F1A                     __end_of_CCP4_DefaultCallBack:
 11984                           	callstack 0
 11985                           
 11986 ;; *************** function _TMR5_GATE_ISR *****************
 11987 ;; Defined at:
 11988 ;;		line 175 in file "mcc_generated_files/tmr5.c"
 11989 ;; Parameters:    Size  Location     Type
 11990 ;;		None
 11991 ;; Auto vars:     Size  Location     Type
 11992 ;;		None
 11993 ;; Return value:  Size  Location     Type
 11994 ;;                  1    wreg      void 
 11995 ;; Registers used:
 11996 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 11997 ;; Tracked objects:
 11998 ;;		On entry : 0/0
 11999 ;;		On exit  : 0/0
 12000 ;;		Unchanged: 0/0
 12001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12005 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12006 ;;Total ram usage:        0 bytes
 12007 ;; Hardware stack levels used: 1
 12008 ;; Hardware stack levels required when called: 3
 12009 ;; This function calls:
 12010 ;;		Absolute function
 12011 ;;		_TMR5_DefaultGateInterruptHandler
 12012 ;; This function is called by:
 12013 ;;		Interrupt level 2
 12014 ;; This function uses a non-reentrant model
 12015 ;;
 12016                           
 12017                           	psect	text82
 12018  003E58                     __ptext82:
 12019                           	callstack 0
 12020  003E58                     _TMR5_GATE_ISR:
 12021                           	callstack 12
 12022  003E58                     
 12023                           ;mcc_generated_files/tmr5.c: 178:     PIR8bits.TMR5GIF = 0;
 12024  003E58  0139               	movlb	57	; () banked
 12025  003E5A  9FA8               	bcf	168,7,b	;volatile
 12026  003E5C                     
 12027                           ; BSR set to: 57
 12028                           ;mcc_generated_files/tmr5.c: 180:     if(TMR5_GateInterruptHandler)
 12029  003E5C  0100               	movlb	0	; () banked
 12030  003E5E  51E9               	movf	_TMR5_GateInterruptHandler& (0+255),w,b
 12031  003E60  11EA               	iorwf	(_TMR5_GateInterruptHandler+1)& (0+255),w,b
 12032  003E62  B4D8               	btfsc	status,2,c
 12033  003E64  EF36  F01F         	goto	i2u464_41
 12034  003E68  EF38  F01F         	goto	i2u464_40
 12035  003E6C                     i2u464_41:
 12036  003E6C  EF44  F01F         	goto	i2l552
 12037  003E70                     i2u464_40:
 12038  003E70                     
 12039                           ; BSR set to: 0
 12040                           ;mcc_generated_files/tmr5.c: 181:     {;mcc_generated_files/tmr5.c: 182:         TMR5_Ga
      +                          teInterruptHandler();
 12041  003E70  D802               	call	i2u465_48
 12042  003E72  EF44  F01F         	goto	i2u465_49
 12043  003E76                     i2u465_48:
 12044  003E76  0005               	push	
 12045  003E78  6EFA               	movwf	pclath,c
 12046  003E7A  51E9               	movf	_TMR5_GateInterruptHandler& (0+255),w,b
 12047  003E7C  6EFD               	movwf	tosl,c
 12048  003E7E  51EA               	movf	(_TMR5_GateInterruptHandler+1)& (0+255),w,b
 12049  003E80  6EFE               	movwf	tosh,c
 12050  003E82  6AFF               	clrf	tosu,c
 12051  003E84  50FA               	movf	pclath,w,c
 12052  003E86  0012               	return		;indir
 12053  003E88                     i2u465_49:
 12054  003E88                     i2l552:
 12055  003E88  0011               	retfie		f
 12056  003E8A                     __end_of_TMR5_GATE_ISR:
 12057                           	callstack 0
 12058                           
 12059 ;; *************** function _TMR5_DefaultGateInterruptHandler *****************
 12060 ;; Defined at:
 12061 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 12062 ;; Parameters:    Size  Location     Type
 12063 ;;		None
 12064 ;; Auto vars:     Size  Location     Type
 12065 ;;		None
 12066 ;; Return value:  Size  Location     Type
 12067 ;;                  1    wreg      void 
 12068 ;; Registers used:
 12069 ;;		wreg, status,2, status,0, cstack
 12070 ;; Tracked objects:
 12071 ;;		On entry : 0/0
 12072 ;;		On exit  : 0/0
 12073 ;;		Unchanged: 0/0
 12074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12078 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12079 ;;Total ram usage:        0 bytes
 12080 ;; Hardware stack levels used: 1
 12081 ;; Hardware stack levels required when called: 2
 12082 ;; This function calls:
 12083 ;;		_TMR5_ReadTimer
 12084 ;;		_TMR5_Reload
 12085 ;; This function is called by:
 12086 ;;		_TMR5_Initialize
 12087 ;;		_TMR5_GATE_ISR
 12088 ;; This function uses a non-reentrant model
 12089 ;;
 12090                           
 12091                           	psect	text83
 12092  00410C                     __ptext83:
 12093                           	callstack 0
 12094  00410C                     _TMR5_DefaultGateInterruptHandler:
 12095                           	callstack 12
 12096  00410C                     
 12097                           ;mcc_generated_files/tmr5.c: 194:     distFront = TMR5_ReadTimer();
 12098  00410C  EC64  F020         	call	_TMR5_ReadTimer	;wreg free
 12099  004110  C009  F0A3         	movff	?_TMR5_ReadTimer,_distFront	;volatile
 12100  004114  C00A  F0A4         	movff	?_TMR5_ReadTimer+1,_distFront+1	;volatile
 12101  004118                     
 12102                           ;mcc_generated_files/tmr5.c: 195:     distFront >>= 1;
 12103  004118  0100               	movlb	0	; () banked
 12104  00411A  90D8               	bcf	status,0,c
 12105  00411C  33A4               	rrcf	(_distFront+1)& (0+255),f,b	;volatile
 12106  00411E  33A3               	rrcf	_distFront& (0+255),f,b	;volatile
 12107  004120                     
 12108                           ; BSR set to: 0
 12109                           ;mcc_generated_files/tmr5.c: 196:     TMR5_Reload();
 12110  004120  ECE7  F020         	call	_TMR5_Reload	;wreg free
 12111  004124                     
 12112                           ;mcc_generated_files/tmr5.c: 197:     PIR8bits.TMR5GIF = 0;
 12113  004124  0139               	movlb	57	; () banked
 12114  004126  9FA8               	bcf	168,7,b	;volatile
 12115  004128                     
 12116                           ; BSR set to: 57
 12117  004128  0012               	return		;funcret
 12118  00412A                     __end_of_TMR5_DefaultGateInterruptHandler:
 12119                           	callstack 0
 12120                           
 12121 ;; *************** function _TMR5_Reload *****************
 12122 ;; Defined at:
 12123 ;;		line 155 in file "mcc_generated_files/tmr5.c"
 12124 ;; Parameters:    Size  Location     Type
 12125 ;;		None
 12126 ;; Auto vars:     Size  Location     Type
 12127 ;;		None
 12128 ;; Return value:  Size  Location     Type
 12129 ;;                  1    wreg      void 
 12130 ;; Registers used:
 12131 ;;		wreg, status,2, cstack
 12132 ;; Tracked objects:
 12133 ;;		On entry : 0/0
 12134 ;;		On exit  : 0/0
 12135 ;;		Unchanged: 0/0
 12136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12140 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12141 ;;Total ram usage:        0 bytes
 12142 ;; Hardware stack levels used: 1
 12143 ;; Hardware stack levels required when called: 1
 12144 ;; This function calls:
 12145 ;;		_TMR5_WriteTimer
 12146 ;; This function is called by:
 12147 ;;		_TMR5_DefaultGateInterruptHandler
 12148 ;; This function uses a non-reentrant model
 12149 ;;
 12150                           
 12151                           	psect	text84
 12152  0041CE                     __ptext84:
 12153                           	callstack 0
 12154  0041CE                     _TMR5_Reload:
 12155                           	callstack 12
 12156  0041CE                     
 12157                           ;mcc_generated_files/tmr5.c: 157:     TMR5_WriteTimer(timer5ReloadVal);
 12158  0041CE  C0EB  F009         	movff	_timer5ReloadVal,TMR5_WriteTimer@timerVal	;volatile
 12159  0041D2  C0EC  F00A         	movff	_timer5ReloadVal+1,TMR5_WriteTimer@timerVal+1	;volatile
 12160  0041D6  EC14  F020         	call	_TMR5_WriteTimer	;wreg free
 12161  0041DA  0012               	return		;funcret
 12162  0041DC                     __end_of_TMR5_Reload:
 12163                           	callstack 0
 12164                           
 12165 ;; *************** function _TMR5_WriteTimer *****************
 12166 ;; Defined at:
 12167 ;;		line 133 in file "mcc_generated_files/tmr5.c"
 12168 ;; Parameters:    Size  Location     Type
 12169 ;;  timerVal        2    8[COMRAM] unsigned short 
 12170 ;; Auto vars:     Size  Location     Type
 12171 ;;		None
 12172 ;; Return value:  Size  Location     Type
 12173 ;;                  1    wreg      void 
 12174 ;; Registers used:
 12175 ;;		wreg, status,2
 12176 ;; Tracked objects:
 12177 ;;		On entry : 0/0
 12178 ;;		On exit  : 0/0
 12179 ;;		Unchanged: 0/0
 12180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12181 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12184 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12185 ;;Total ram usage:        2 bytes
 12186 ;; Hardware stack levels used: 1
 12187 ;; This function calls:
 12188 ;;		Nothing
 12189 ;; This function is called by:
 12190 ;;		_TMR5_Reload
 12191 ;; This function uses a non-reentrant model
 12192 ;;
 12193                           
 12194                           	psect	text85
 12195  004028                     __ptext85:
 12196                           	callstack 0
 12197  004028                     _TMR5_WriteTimer:
 12198                           	callstack 12
 12199  004028                     
 12200                           ;mcc_generated_files/tmr5.c: 133: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 134: {;mcc_generated_files/tmr5.c: 135:     if (T5CONbits.NOT_SYNC == 1)
 12201  004028  A49A               	btfss	154,2,c	;volatile
 12202  00402A  EF19  F020         	goto	i2u303_41
 12203  00402E  EF1B  F020         	goto	i2u303_40
 12204  004032                     i2u303_41:
 12205  004032  EF24  F020         	goto	i2l4632
 12206  004036                     i2u303_40:
 12207  004036                     
 12208                           ;mcc_generated_files/tmr5.c: 136:     {;mcc_generated_files/tmr5.c: 138:         T5CONbi
      +                          ts.TMR5ON = 0;
 12209  004036  909A               	bcf	154,0,c	;volatile
 12210  004038                     
 12211                           ;mcc_generated_files/tmr5.c: 141:         TMR5H = (uint8_t)(timerVal >> 8);
 12212  004038  500A               	movf	(TMR5_WriteTimer@timerVal+1)^0,w,c
 12213  00403A  6E99               	movwf	153,c	;volatile
 12214  00403C                     
 12215                           ;mcc_generated_files/tmr5.c: 142:         TMR5L = (uint8_t)timerVal;
 12216  00403C  0060  F027  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
 12217  004042                     
 12218                           ;mcc_generated_files/tmr5.c: 145:         T5CONbits.TMR5ON =1;
 12219  004042  809A               	bsf	154,0,c	;volatile
 12220                           
 12221                           ;mcc_generated_files/tmr5.c: 146:     }
 12222  004044  EF29  F020         	goto	i2l534
 12223  004048                     i2l4632:
 12224                           
 12225                           ;mcc_generated_files/tmr5.c: 148:     {;mcc_generated_files/tmr5.c: 150:         TMR5H =
      +                           (uint8_t)(timerVal >> 8);
 12226  004048  500A               	movf	(TMR5_WriteTimer@timerVal+1)^0,w,c
 12227  00404A  6E99               	movwf	153,c	;volatile
 12228  00404C                     
 12229                           ;mcc_generated_files/tmr5.c: 151:         TMR5L = (uint8_t)timerVal;
 12230  00404C  0060  F027  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
 12231  004052                     i2l534:
 12232  004052  0012               	return		;funcret
 12233  004054                     __end_of_TMR5_WriteTimer:
 12234                           	callstack 0
 12235                           
 12236 ;; *************** function _TMR5_ReadTimer *****************
 12237 ;; Defined at:
 12238 ;;		line 117 in file "mcc_generated_files/tmr5.c"
 12239 ;; Parameters:    Size  Location     Type
 12240 ;;		None
 12241 ;; Auto vars:     Size  Location     Type
 12242 ;;  readVal         2   12[COMRAM] unsigned short 
 12243 ;;  readValLow      1   15[COMRAM] unsigned char 
 12244 ;;  readValHigh     1   14[COMRAM] unsigned char 
 12245 ;; Return value:  Size  Location     Type
 12246 ;;                  2    8[COMRAM] unsigned short 
 12247 ;; Registers used:
 12248 ;;		wreg, status,2
 12249 ;; Tracked objects:
 12250 ;;		On entry : 0/0
 12251 ;;		On exit  : 0/0
 12252 ;;		Unchanged: 0/0
 12253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12254 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12255 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12256 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12257 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12258 ;;Total ram usage:        8 bytes
 12259 ;; Hardware stack levels used: 1
 12260 ;; This function calls:
 12261 ;;		Nothing
 12262 ;; This function is called by:
 12263 ;;		_TMR5_DefaultGateInterruptHandler
 12264 ;; This function uses a non-reentrant model
 12265 ;;
 12266                           
 12267                           	psect	text86
 12268  0040C8                     __ptext86:
 12269                           	callstack 0
 12270  0040C8                     _TMR5_ReadTimer:
 12271                           	callstack 13
 12272  0040C8                     
 12273                           ;mcc_generated_files/tmr5.c: 119:     uint16_t readVal;;mcc_generated_files/tmr5.c: 120:
      +                               uint8_t readValHigh;;mcc_generated_files/tmr5.c: 121:     uint8_t readValLow;;mcc_g
      +                          enerated_files/tmr5.c: 123:     T5CONbits.T5RD16 = 1;
 12274  0040C8  829A               	bsf	154,1,c	;volatile
 12275                           
 12276                           ;mcc_generated_files/tmr5.c: 125:     readValLow = TMR5L;
 12277  0040CA  006F FE60  F010    	movff	16280,TMR5_ReadTimer@readValLow	;volatile
 12278                           
 12279                           ;mcc_generated_files/tmr5.c: 126:     readValHigh = TMR5H;
 12280  0040D0  006F FE64  F00F    	movff	16281,TMR5_ReadTimer@readValHigh	;volatile
 12281  0040D6                     
 12282                           ;mcc_generated_files/tmr5.c: 128:     readVal = ((uint16_t)readValHigh << 8) | readValLo
      +                          w;
 12283  0040D6  500F               	movf	TMR5_ReadTimer@readValHigh^0,w,c
 12284  0040D8  6E0B               	movwf	??_TMR5_ReadTimer^0,c
 12285  0040DA  5010               	movf	TMR5_ReadTimer@readValLow^0,w,c
 12286  0040DC  6E0D               	movwf	TMR5_ReadTimer@readVal^0,c
 12287  0040DE  C00B  F00E         	movff	??_TMR5_ReadTimer,TMR5_ReadTimer@readVal+1
 12288  0040E2                     
 12289                           ;mcc_generated_files/tmr5.c: 130:     return readVal;
 12290  0040E2  C00D  F009         	movff	TMR5_ReadTimer@readVal,?_TMR5_ReadTimer
 12291  0040E6  C00E  F00A         	movff	TMR5_ReadTimer@readVal+1,?_TMR5_ReadTimer+1
 12292  0040EA  0012               	return		;funcret
 12293  0040EC                     __end_of_TMR5_ReadTimer:
 12294                           	callstack 0
 12295                           
 12296 ;; *************** function _SMT1_PR_ACQ_ISR *****************
 12297 ;; Defined at:
 12298 ;;		line 192 in file "mcc_generated_files/smt1.c"
 12299 ;; Parameters:    Size  Location     Type
 12300 ;;		None
 12301 ;; Auto vars:     Size  Location     Type
 12302 ;;		None
 12303 ;; Return value:  Size  Location     Type
 12304 ;;                  1    wreg      void 
 12305 ;; Registers used:
 12306 ;;		wreg, status,2, status,0
 12307 ;; Tracked objects:
 12308 ;;		On entry : 0/0
 12309 ;;		On exit  : 0/0
 12310 ;;		Unchanged: 0/0
 12311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12315 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12316 ;;Total ram usage:        0 bytes
 12317 ;; Hardware stack levels used: 1
 12318 ;; This function calls:
 12319 ;;		Nothing
 12320 ;; This function is called by:
 12321 ;;		Interrupt level 2
 12322 ;; This function uses a non-reentrant model
 12323 ;;
 12324                           
 12325                           	psect	text87
 12326  003AB8                     __ptext87:
 12327                           	callstack 0
 12328  003AB8                     _SMT1_PR_ACQ_ISR:
 12329                           	callstack 15
 12330  003AB8                     
 12331                           ;mcc_generated_files/smt1.c: 196:     PIR1bits.SMT1PRAIF = 0;
 12332  003AB8  0139               	movlb	57	; () banked
 12333  003ABA  9DA1               	bcf	161,6,b	;volatile
 12334  003ABC                     
 12335                           ; BSR set to: 57
 12336                           ;mcc_generated_files/smt1.c: 197:     smtPeriod = SMT1CPR;
 12337  003ABC  013F               	movlb	63	; () banked
 12338  003ABE  5115               	movf	21,w,b	;volatile
 12339  003AC0  6E48               	movwf	_smtPeriod^0,c	;volatile
 12340  003AC2  5116               	movf	22,w,b	;volatile
 12341  003AC4  6E49               	movwf	(_smtPeriod+1)^0,c	;volatile
 12342  003AC6  5117               	movf	23,w,b	;volatile
 12343  003AC8  6E4A               	movwf	(_smtPeriod+2)^0,c	;volatile
 12344  003ACA  6A4B               	clrf	(_smtPeriod+3)^0,c	;volatile
 12345  003ACC                     
 12346                           ; BSR set to: 63
 12347                           ;mcc_generated_files/smt1.c: 198:     if(CLC3CONbits.LC3OUT) smtWay++;
 12348  003ACC  013C               	movlb	60	; () banked
 12349  003ACE  AB60               	btfss	96,5,b	;volatile
 12350  003AD0  EF6C  F01D         	goto	i2u467_41
 12351  003AD4  EF6E  F01D         	goto	i2u467_40
 12352  003AD8                     i2u467_41:
 12353  003AD8  EF77  F01D         	goto	i2l5752
 12354  003ADC                     i2u467_40:
 12355  003ADC                     
 12356                           ; BSR set to: 60
 12357  003ADC  0E01               	movlw	1
 12358  003ADE  0100               	movlb	0	; () banked
 12359  003AE0  2778               	addwf	_smtWay& (0+255),f,b	;volatile
 12360  003AE2  0E00               	movlw	0
 12361  003AE4  2379               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 12362  003AE6  237A               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 12363  003AE8  237B               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 12364  003AEA  EF80  F01D         	goto	i2l856
 12365  003AEE                     i2l5752:
 12366                           
 12367                           ; BSR set to: 60
 12368  003AEE  0EFF               	movlw	255
 12369  003AF0  0100               	movlb	0	; () banked
 12370  003AF2  2778               	addwf	_smtWay& (0+255),f,b	;volatile
 12371  003AF4  0EFF               	movlw	255
 12372  003AF6  2379               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 12373  003AF8  0EFF               	movlw	255
 12374  003AFA  237A               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 12375  003AFC  0EFF               	movlw	255
 12376  003AFE  237B               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 12377  003B00                     i2l856:
 12378                           
 12379                           ; BSR set to: 0
 12380  003B00  0011               	retfie		f
 12381  003B02                     __end_of_SMT1_PR_ACQ_ISR:
 12382                           	callstack 0
 12383                           
 12384 ;; *************** function _SMT1_PW_ACQ_ISR *****************
 12385 ;; Defined at:
 12386 ;;		line 203 in file "mcc_generated_files/smt1.c"
 12387 ;; Parameters:    Size  Location     Type
 12388 ;;		None
 12389 ;; Auto vars:     Size  Location     Type
 12390 ;;		None
 12391 ;; Return value:  Size  Location     Type
 12392 ;;                  1    wreg      void 
 12393 ;; Registers used:
 12394 ;;		wreg, status,2, status,0
 12395 ;; Tracked objects:
 12396 ;;		On entry : 0/0
 12397 ;;		On exit  : 0/0
 12398 ;;		Unchanged: 0/0
 12399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12403 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12404 ;;Total ram usage:        0 bytes
 12405 ;; Hardware stack levels used: 1
 12406 ;; This function calls:
 12407 ;;		Nothing
 12408 ;; This function is called by:
 12409 ;;		Interrupt level 2
 12410 ;; This function uses a non-reentrant model
 12411 ;;
 12412                           
 12413                           	psect	text88
 12414  003930                     __ptext88:
 12415                           	callstack 0
 12416  003930                     _SMT1_PW_ACQ_ISR:
 12417                           	callstack 15
 12418  003930                     
 12419                           ;mcc_generated_files/smt1.c: 207:     PIR1bits.SMT1PWAIF = 0;
 12420  003930  0139               	movlb	57	; () banked
 12421  003932  9FA1               	bcf	161,7,b	;volatile
 12422  003934                     
 12423                           ; BSR set to: 57
 12424                           ;mcc_generated_files/smt1.c: 208:     smtDuty = SMT1CPW;
 12425  003934  013F               	movlb	63	; () banked
 12426  003936  5118               	movf	24,w,b	;volatile
 12427  003938  0100               	movlb	0	; () banked
 12428  00393A  6F7C               	movwf	_smtDuty& (0+255),b	;volatile
 12429  00393C  013F               	movlb	63	; () banked
 12430  00393E  5119               	movf	25,w,b	;volatile
 12431  003940  0100               	movlb	0	; () banked
 12432  003942  6F7D               	movwf	(_smtDuty+1)& (0+255),b	;volatile
 12433  003944  013F               	movlb	63	; () banked
 12434  003946  511A               	movf	26,w,b	;volatile
 12435  003948  0100               	movlb	0	; () banked
 12436  00394A  6F7E               	movwf	(_smtDuty+2)& (0+255),b	;volatile
 12437  00394C  6B7F               	clrf	(_smtDuty+3)& (0+255),b	;volatile
 12438  00394E                     
 12439                           ; BSR set to: 0
 12440                           ;mcc_generated_files/smt1.c: 209:     if(CLC3CONbits.LC3OUT) smtWay++;
 12441  00394E  013C               	movlb	60	; () banked
 12442  003950  AB60               	btfss	96,5,b	;volatile
 12443  003952  EFAD  F01C         	goto	i2u468_41
 12444  003956  EFAF  F01C         	goto	i2u468_40
 12445  00395A                     i2u468_41:
 12446  00395A  EFB8  F01C         	goto	i2l5762
 12447  00395E                     i2u468_40:
 12448  00395E                     
 12449                           ; BSR set to: 60
 12450  00395E  0E01               	movlw	1
 12451  003960  0100               	movlb	0	; () banked
 12452  003962  2778               	addwf	_smtWay& (0+255),f,b	;volatile
 12453  003964  0E00               	movlw	0
 12454  003966  2379               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 12455  003968  237A               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 12456  00396A  237B               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 12457  00396C  EFC1  F01C         	goto	i2l863
 12458  003970                     i2l5762:
 12459                           
 12460                           ; BSR set to: 60
 12461  003970  0EFF               	movlw	255
 12462  003972  0100               	movlb	0	; () banked
 12463  003974  2778               	addwf	_smtWay& (0+255),f,b	;volatile
 12464  003976  0EFF               	movlw	255
 12465  003978  2379               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 12466  00397A  0EFF               	movlw	255
 12467  00397C  237A               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 12468  00397E  0EFF               	movlw	255
 12469  003980  237B               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 12470  003982                     i2l863:
 12471                           
 12472                           ; BSR set to: 0
 12473  003982  0011               	retfie		f
 12474  003984                     __end_of_SMT1_PW_ACQ_ISR:
 12475                           	callstack 0
 12476                           
 12477 ;; *************** function _SMT1_Overflow_ISR *****************
 12478 ;; Defined at:
 12479 ;;		line 213 in file "mcc_generated_files/smt1.c"
 12480 ;; Parameters:    Size  Location     Type
 12481 ;;		None
 12482 ;; Auto vars:     Size  Location     Type
 12483 ;;		None
 12484 ;; Return value:  Size  Location     Type
 12485 ;;                  1    wreg      void 
 12486 ;; Registers used:
 12487 ;;		wreg, status,2
 12488 ;; Tracked objects:
 12489 ;;		On entry : 0/0
 12490 ;;		On exit  : 0/0
 12491 ;;		Unchanged: 0/0
 12492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12497 ;;Total ram usage:        0 bytes
 12498 ;; Hardware stack levels used: 1
 12499 ;; This function calls:
 12500 ;;		Nothing
 12501 ;; This function is called by:
 12502 ;;		Interrupt level 2
 12503 ;; This function uses a non-reentrant model
 12504 ;;
 12505                           
 12506                           	psect	text89
 12507  00407C                     __ptext89:
 12508                           	callstack 0
 12509  00407C                     _SMT1_Overflow_ISR:
 12510                           	callstack 15
 12511  00407C                     
 12512                           ;mcc_generated_files/smt1.c: 217:     PIR1bits.SMT1IF = 0;
 12513  00407C  0139               	movlb	57	; () banked
 12514  00407E  9BA1               	bcf	161,5,b	;volatile
 12515  004080                     
 12516                           ; BSR set to: 57
 12517                           ;mcc_generated_files/smt1.c: 218:     smtPeriod = 0;
 12518  004080  0E00               	movlw	0
 12519  004082  6E48               	movwf	_smtPeriod^0,c	;volatile
 12520  004084  0E00               	movlw	0
 12521  004086  6E49               	movwf	(_smtPeriod+1)^0,c	;volatile
 12522  004088  0E00               	movlw	0
 12523  00408A  6E4A               	movwf	(_smtPeriod+2)^0,c	;volatile
 12524  00408C  0E00               	movlw	0
 12525  00408E  6E4B               	movwf	(_smtPeriod+3)^0,c	;volatile
 12526                           
 12527                           ;mcc_generated_files/smt1.c: 219:     smtDuty = 0;
 12528  004090  0E00               	movlw	0
 12529  004092  0100               	movlb	0	; () banked
 12530  004094  6F7C               	movwf	_smtDuty& (0+255),b	;volatile
 12531  004096  0E00               	movlw	0
 12532  004098  6F7D               	movwf	(_smtDuty+1)& (0+255),b	;volatile
 12533  00409A  0E00               	movlw	0
 12534  00409C  6F7E               	movwf	(_smtDuty+2)& (0+255),b	;volatile
 12535  00409E  0E00               	movlw	0
 12536  0040A0  6F7F               	movwf	(_smtDuty+3)& (0+255),b	;volatile
 12537  0040A2                     
 12538                           ; BSR set to: 0
 12539  0040A2  0011               	retfie		f
 12540  0040A4                     __end_of_SMT1_Overflow_ISR:
 12541                           	callstack 0
 12542                           
 12543                           ;
 12544                           ; Interrupt Vector Table @ 0x8
 12545                           ;
 12546                           
 12547                           	psect	ivt0x8
 12548  000008                     __pivt0x8:
 12549                           	callstack 0
 12550  000008                     ivt0x8_base:
 12551                           	callstack 0
 12552                           
 12553                           ; Vector 0 : SWINT
 12554  000008  1095               	dw	_Default_ISR shr (0+2)
 12555                           
 12556                           ; Vector 1 : HLVD
 12557  00000A  1095               	dw	_Default_ISR shr (0+2)
 12558                           
 12559                           ; Vector 2 : OSF
 12560  00000C  1095               	dw	_Default_ISR shr (0+2)
 12561                           
 12562                           ; Vector 3 : CSW
 12563  00000E  1095               	dw	_Default_ISR shr (0+2)
 12564                           
 12565                           ; Vector 4 : NVM
 12566  000010  1095               	dw	_Default_ISR shr (0+2)
 12567                           
 12568                           ; Vector 5 : SCAN
 12569  000012  1095               	dw	_Default_ISR shr (0+2)
 12570                           
 12571                           ; Vector 6 : CRC
 12572  000014  1095               	dw	_Default_ISR shr (0+2)
 12573                           
 12574                           ; Vector 7 : IOC
 12575  000016  1095               	dw	_Default_ISR shr (0+2)
 12576                           
 12577                           ; Vector 8 : INT0
 12578  000018  1095               	dw	_Default_ISR shr (0+2)
 12579                           
 12580                           ; Vector 9 : ZCD
 12581  00001A  1095               	dw	_Default_ISR shr (0+2)
 12582                           
 12583                           ; Vector 10 : AD
 12584  00001C  1095               	dw	_Default_ISR shr (0+2)
 12585                           
 12586                           ; Vector 11 : ADT
 12587  00001E  1095               	dw	_Default_ISR shr (0+2)
 12588                           
 12589                           ; Vector 12 : CMP1
 12590  000020  1095               	dw	_Default_ISR shr (0+2)
 12591                           
 12592                           ; Vector 13 : SMT1
 12593  000022  101F               	dw	_SMT1_Overflow_ISR shr (0+2)
 12594                           
 12595                           ; Vector 14 : SMT1PRA
 12596  000024  0EAE               	dw	_SMT1_PR_ACQ_ISR shr (0+2)
 12597                           
 12598                           ; Vector 15 : SMT1PRW
 12599  000026  0E4C               	dw	_SMT1_PW_ACQ_ISR shr (0+2)
 12600                           
 12601                           ; Vector 16 : DMA1SCNT
 12602  000028  1095               	dw	_Default_ISR shr (0+2)
 12603                           
 12604                           ; Vector 17 : DMA1DCNT
 12605  00002A  1095               	dw	_Default_ISR shr (0+2)
 12606                           
 12607                           ; Vector 18 : DMA1OR
 12608  00002C  1095               	dw	_Default_ISR shr (0+2)
 12609                           
 12610                           ; Vector 19 : DMA1A
 12611  00002E  1095               	dw	_Default_ISR shr (0+2)
 12612                           
 12613                           ; Vector 20 : SPI1RX
 12614  000030  1095               	dw	_Default_ISR shr (0+2)
 12615                           
 12616                           ; Vector 21 : SPI1TX
 12617  000032  1095               	dw	_Default_ISR shr (0+2)
 12618                           
 12619                           ; Vector 22 : SPI1
 12620  000034  1095               	dw	_Default_ISR shr (0+2)
 12621                           
 12622                           ; Vector 23 : I2C1RX
 12623  000036  1095               	dw	_Default_ISR shr (0+2)
 12624                           
 12625                           ; Vector 24 : I2C1TX
 12626  000038  1095               	dw	_Default_ISR shr (0+2)
 12627                           
 12628                           ; Vector 25 : I2C1
 12629  00003A  1095               	dw	_Default_ISR shr (0+2)
 12630                           
 12631                           ; Vector 26 : I2C1E
 12632  00003C  1095               	dw	_Default_ISR shr (0+2)
 12633                           
 12634                           ; Vector 27 : U1RX
 12635  00003E  0F10               	dw	_UART1_rx_vect_isr shr (0+2)
 12636                           
 12637                           ; Vector 28 : U1TX
 12638  000040  0F01               	dw	_UART1_tx_vect_isr shr (0+2)
 12639                           
 12640                           ; Vector 29 : U1E
 12641  000042  1095               	dw	_Default_ISR shr (0+2)
 12642                           
 12643                           ; Vector 30 : U1
 12644  000044  1095               	dw	_Default_ISR shr (0+2)
 12645                           
 12646                           ; Vector 31 : TMR0
 12647  000046  1095               	dw	_Default_ISR shr (0+2)
 12648                           
 12649                           ; Vector 32 : TMR1
 12650  000048  1095               	dw	_Default_ISR shr (0+2)
 12651                           
 12652                           ; Vector 33 : TMR1G
 12653  00004A  1095               	dw	_Default_ISR shr (0+2)
 12654                           
 12655                           ; Vector 34 : TMR2
 12656  00004C  1095               	dw	_Default_ISR shr (0+2)
 12657                           
 12658                           ; Vector 35 : CCP1
 12659  00004E  1095               	dw	_Default_ISR shr (0+2)
 12660                           
 12661                           ; Vector 36 : Undefined
 12662  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 12663                           
 12664                           ; Vector 37 : NCO1
 12665  000052  1095               	dw	_Default_ISR shr (0+2)
 12666                           
 12667                           ; Vector 38 : CWG1
 12668  000054  1095               	dw	_Default_ISR shr (0+2)
 12669                           
 12670                           ; Vector 39 : CLC1
 12671  000056  1095               	dw	_Default_ISR shr (0+2)
 12672                           
 12673                           ; Vector 40 : INT1
 12674  000058  1095               	dw	_Default_ISR shr (0+2)
 12675                           
 12676                           ; Vector 41 : CMP2
 12677  00005A  1095               	dw	_Default_ISR shr (0+2)
 12678                           
 12679                           ; Vector 42 : DMA2SCNT
 12680  00005C  1095               	dw	_Default_ISR shr (0+2)
 12681                           
 12682                           ; Vector 43 : DMA2DCNT
 12683  00005E  1095               	dw	_Default_ISR shr (0+2)
 12684                           
 12685                           ; Vector 44 : DMA2OR
 12686  000060  1095               	dw	_Default_ISR shr (0+2)
 12687                           
 12688                           ; Vector 45 : DMA2A
 12689  000062  1095               	dw	_Default_ISR shr (0+2)
 12690                           
 12691                           ; Vector 46 : I2C2RX
 12692  000064  1095               	dw	_Default_ISR shr (0+2)
 12693                           
 12694                           ; Vector 47 : I2C2TX
 12695  000066  1095               	dw	_Default_ISR shr (0+2)
 12696                           
 12697                           ; Vector 48 : I2C2
 12698  000068  1095               	dw	_Default_ISR shr (0+2)
 12699                           
 12700                           ; Vector 49 : I2C2E
 12701  00006A  1095               	dw	_Default_ISR shr (0+2)
 12702                           
 12703                           ; Vector 50 : U2RX
 12704  00006C  1095               	dw	_Default_ISR shr (0+2)
 12705                           
 12706                           ; Vector 51 : U2TX
 12707  00006E  1095               	dw	_Default_ISR shr (0+2)
 12708                           
 12709                           ; Vector 52 : U2E
 12710  000070  1095               	dw	_Default_ISR shr (0+2)
 12711                           
 12712                           ; Vector 53 : U2
 12713  000072  1095               	dw	_Default_ISR shr (0+2)
 12714                           
 12715                           ; Vector 54 : TMR3
 12716  000074  1095               	dw	_Default_ISR shr (0+2)
 12717                           
 12718                           ; Vector 55 : TMR3G
 12719  000076  1095               	dw	_Default_ISR shr (0+2)
 12720                           
 12721                           ; Vector 56 : TMR4
 12722  000078  0F2D               	dw	_TMR4_ISR shr (0+2)
 12723                           
 12724                           ; Vector 57 : CCP2
 12725  00007A  1095               	dw	_Default_ISR shr (0+2)
 12726                           
 12727                           ; Vector 58 : Undefined
 12728  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 12729                           
 12730                           ; Vector 59 : CWG2
 12731  00007E  1095               	dw	_Default_ISR shr (0+2)
 12732                           
 12733                           ; Vector 60 : CLC2
 12734  000080  1095               	dw	_Default_ISR shr (0+2)
 12735                           
 12736                           ; Vector 61 : INT2
 12737  000082  1095               	dw	_Default_ISR shr (0+2)
 12738                           
 12739                           ; Vector 62 : Undefined
 12740  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 12741                           
 12742                           ; Vector 63 : Undefined
 12743  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 12744                           
 12745                           ; Vector 64 : Undefined
 12746  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 12747                           
 12748                           ; Vector 65 : Undefined
 12749  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 12750                           
 12751                           ; Vector 66 : Undefined
 12752  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 12753                           
 12754                           ; Vector 67 : Undefined
 12755  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 12756                           
 12757                           ; Vector 68 : Undefined
 12758  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 12759                           
 12760                           ; Vector 69 : Undefined
 12761  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 12762                           
 12763                           ; Vector 70 : TMR5
 12764  000094  1095               	dw	_Default_ISR shr (0+2)
 12765                           
 12766                           ; Vector 71 : TMR5G
 12767  000096  0F96               	dw	_TMR5_GATE_ISR shr (0+2)
 12768                           
 12769                           ; Vector 72 : TMR6
 12770  000098  1095               	dw	_Default_ISR shr (0+2)
 12771                           
 12772                           ; Vector 73 : CCP3
 12773  00009A  0F6F               	dw	_CCP3_CaptureISR shr (0+2)
 12774                           
 12775                           ; Vector 74 : CWG3
 12776  00009C  1095               	dw	_Default_ISR shr (0+2)
 12777                           
 12778                           ; Vector 75 : CLC3
 12779  00009E  1095               	dw	_Default_ISR shr (0+2)
 12780                           
 12781                           ; Vector 76 : Undefined
 12782  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 12783                           
 12784                           ; Vector 77 : Undefined
 12785  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 12786                           
 12787                           ; Vector 78 : Undefined
 12788  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 12789                           
 12790                           ; Vector 79 : Undefined
 12791  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 12792                           
 12793                           ; Vector 80 : CCP4
 12794  0000A8  0F7C               	dw	_CCP4_CaptureISR shr (0+2)
 12795                           
 12796                           ; Vector 81 : CLC4
 12797  0000AA  1095               	dw	_Default_ISR shr (0+2)
 12798  0000AC                     ivt0x8_undefint:
 12799                           	callstack 0
 12800  0000AC  00FF               	reset	
 12801                           
 12802                           	psect	text90
 12803  000000                     __ptext90:
 12804                           	callstack 0
 12805  000000                     
 12806                           	psect	rparam
 12807  0000                     
 12808                           	psect	idloc
 12809                           
 12810                           ;Config register IDLOC0 @ 0x200000
 12811                           ;	unspecified, using default values
 12812  200000                     	org	2097152
 12813  200000  0FFF               	dw	4095
 12814                           
 12815                           ;Config register IDLOC1 @ 0x200002
 12816                           ;	unspecified, using default values
 12817  200002                     	org	2097154
 12818  200002  0FFF               	dw	4095
 12819                           
 12820                           ;Config register IDLOC2 @ 0x200004
 12821                           ;	unspecified, using default values
 12822  200004                     	org	2097156
 12823  200004  0FFF               	dw	4095
 12824                           
 12825                           ;Config register IDLOC3 @ 0x200006
 12826                           ;	unspecified, using default values
 12827  200006                     	org	2097158
 12828  200006  0FFF               	dw	4095
 12829                           
 12830                           ;Config register IDLOC4 @ 0x200008
 12831                           ;	unspecified, using default values
 12832  200008                     	org	2097160
 12833  200008  0FFF               	dw	4095
 12834                           
 12835                           ;Config register IDLOC5 @ 0x20000A
 12836                           ;	unspecified, using default values
 12837  20000A                     	org	2097162
 12838  20000A  0FFF               	dw	4095
 12839                           
 12840                           ;Config register IDLOC6 @ 0x20000C
 12841                           ;	unspecified, using default values
 12842  20000C                     	org	2097164
 12843  20000C  0FFF               	dw	4095
 12844                           
 12845                           ;Config register IDLOC7 @ 0x20000E
 12846                           ;	unspecified, using default values
 12847  20000E                     	org	2097166
 12848  20000E  0FFF               	dw	4095
 12849                           
 12850                           	psect	config
 12851                           
 12852                           ;Config register CONFIG1L @ 0x300000
 12853                           ;	External Oscillator Selection
 12854                           ;	FEXTOSC = OFF, Oscillator not enabled
 12855                           ;	Reset Oscillator Selection
 12856                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
 12857  300000                     	org	3145728
 12858  300000  8C                 	db	140
 12859                           
 12860                           ;Config register CONFIG1H @ 0x300001
 12861                           ;	Clock out Enable bit
 12862                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 12863                           ;	PRLOCKED One-Way Set Enable bit
 12864                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
 12865                           ;	Clock Switch Enable bit
 12866                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 12867                           ;	Fail-Safe Clock Monitor Enable bit
 12868                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 12869  300001                     	org	3145729
 12870  300001  FF                 	db	255
 12871                           
 12872                           ;Config register CONFIG2L @ 0x300002
 12873                           ;	MCLR Enable bit
 12874                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 12875                           ;	Power-up timer selection bits
 12876                           ;	PWRTS = PWRT_OFF, PWRT is disabled
 12877                           ;	Multi-vector enable bit
 12878                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
 12879                           ;	IVTLOCK bit One-way set enable bit
 12880                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
 12881                           ;	Low Power BOR Enable bit
 12882                           ;	LPBOREN = OFF, ULPBOR disabled
 12883                           ;	Brown-out Reset Enable bits
 12884                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 12885  300002                     	org	3145730
 12886  300002  FF                 	db	255
 12887                           
 12888                           ;Config register CONFIG2H @ 0x300003
 12889                           ;	Brown-out Reset Voltage Selection bits
 12890                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
 12891                           ;	ZCD Disable bit
 12892                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 12893                           ;	PPSLOCK bit One-Way Set Enable bit
 12894                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
 12895                           ;	Stack Full/Underflow Reset Enable bit
 12896                           ;	STVREN = ON, Stack full/underflow will cause Reset
 12897                           ;	Debugger Enable bit
 12898                           ;	DEBUG = OFF, Background debugger disabled
 12899                           ;	Extended Instruction Set Enable bit
 12900                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 12901  300003                     	org	3145731
 12902  300003  FF                 	db	255
 12903                           
 12904                           ;Config register CONFIG3L @ 0x300004
 12905                           ;	WDT Period selection bits
 12906                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 12907                           ;	WDT operating mode
 12908                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
 12909  300004                     	org	3145732
 12910  300004  9F                 	db	159
 12911                           
 12912                           ;Config register CONFIG3H @ 0x300005
 12913                           ;	WDT Window Select bits
 12914                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 12915                           ;	WDT input clock selector
 12916                           ;	WDTCCS = SC, Software Control
 12917  300005                     	org	3145733
 12918  300005  FF                 	db	255
 12919                           
 12920                           ;Config register CONFIG4L @ 0x300006
 12921                           ;	Boot Block Size selection bits
 12922                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
 12923                           ;	Boot Block enable bit
 12924                           ;	BBEN = OFF, Boot block disabled
 12925                           ;	Storage Area Flash enable bit
 12926                           ;	SAFEN = OFF, SAF disabled
 12927                           ;	Application Block write protection bit
 12928                           ;	WRTAPP = OFF, Application Block not write protected
 12929  300006                     	org	3145734
 12930  300006  FF                 	db	255
 12931                           
 12932                           ;Config register CONFIG4H @ 0x300007
 12933                           ;	Configuration Register Write Protection bit
 12934                           ;	WRTB = OFF, Configuration registers (300000-30000Bh) not write-protected
 12935                           ;	Boot Block Write Protection bit
 12936                           ;	WRTC = OFF, Boot Block (000000-0007FFh) not write-protected
 12937                           ;	Data EEPROM Write Protection bit
 12938                           ;	WRTD = OFF, Data EEPROM not write-protected
 12939                           ;	SAF Write protection bit
 12940                           ;	WRTSAF = OFF, SAF not Write Protected
 12941                           ;	Low Voltage Programming Enable bit
 12942                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
 12943  300007                     	org	3145735
 12944  300007  FF                 	db	255
 12945                           
 12946                           ;Config register CONFIG5L @ 0x300008
 12947                           ;	PFM and Data EEPROM Code Protection bit
 12948                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
 12949  300008                     	org	3145736
 12950  300008  FF                 	db	255
 12951                           
 12952                           ;Config register CONFIG5H @ 0x300009
 12953                           ;	unspecified, using default values
 12954  300009                     	org	3145737
 12955  300009  FF                 	db	255
 12956                           tosu	equ	0x3FFF
 12957                           tosh	equ	0x3FFE
 12958                           tosl	equ	0x3FFD
 12959                           stkptr	equ	0x3FFC
 12960                           pclatu	equ	0x3FFB
 12961                           pclath	equ	0x3FFA
 12962                           pcl	equ	0x3FF9
 12963                           tblptru	equ	0x3FF8
 12964                           tblptrh	equ	0x3FF7
 12965                           tblptrl	equ	0x3FF6
 12966                           tablat	equ	0x3FF5
 12967                           prodh	equ	0x3FF4
 12968                           prodl	equ	0x3FF3
 12969                           indf0	equ	0x3FEF
 12970                           postinc0	equ	0x3FEE
 12971                           postdec0	equ	0x3FED
 12972                           preinc0	equ	0x3FEC
 12973                           plusw0	equ	0x3FEB
 12974                           fsr0h	equ	0x3FEA
 12975                           fsr0l	equ	0x3FE9
 12976                           wreg	equ	0x3FE8
 12977                           indf1	equ	0x3FE7
 12978                           postinc1	equ	0x3FE6
 12979                           postdec1	equ	0x3FE5
 12980                           preinc1	equ	0x3FE4
 12981                           plusw1	equ	0x3FE3
 12982                           fsr1h	equ	0x3FE2
 12983                           fsr1l	equ	0x3FE1
 12984                           bsr	equ	0x3FE0
 12985                           indf2	equ	0x3FDF
 12986                           postinc2	equ	0x3FDE
 12987                           postdec2	equ	0x3FDD
 12988                           preinc2	equ	0x3FDC
 12989                           plusw2	equ	0x3FDB
 12990                           fsr2h	equ	0x3FDA
 12991                           fsr2l	equ	0x3FD9
 12992                           status	equ	0x3FD8

Data Sizes:
    Strings     61
    Constant    0
    Data        2
    BSS         119
    Persistent  23
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     57      76
    BANK0           160     64     157
    BANK1           256      0      32
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S3427_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_5(CODE[12]), STR_4(CODE[11]), STR_3(CODE[16]), STR_2(CODE[12]), 
		 -> STR_1(CODE[10]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 16
		 -> STR_5(CODE[12]), STR_4(CODE[11]), STR_3(CODE[16]), STR_2(CODE[12]), 
		 -> STR_1(CODE[10]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_5(CODE[12]), STR_4(CODE[11]), STR_3(CODE[16]), STR_2(CODE[12]), 
		 -> STR_1(CODE[10]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    TMR4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_10msISR(), TMR4_DefaultInterruptHandler(), 

    TMR4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_10msISR(), TMR4_DefaultInterruptHandler(), Absolute function(), 

    TMR5_SetGateInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR5_DefaultGateInterruptHandler(), 

    TMR5_GateInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR5_DefaultGateInterruptHandler(), Absolute function(), 

    CCP4_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP4_DefaultCallBack(), 

    CCP4_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP4_DefaultCallBack(), Absolute function(), 

    CCP3_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP3_DefaultCallBack(), 

    CCP3_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP3_DefaultCallBack(), Absolute function(), 

    UART1_SetTxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    UART1_SetRxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultErrorHandler(), 

    UART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), 

    UART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), 

    UART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultErrorHandler(), 

    UART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultOverrunErrorHandler(), 

    UART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultFramingErrorHandler(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_Receive_ISR(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_Transmit_ISR(), 


Critical Paths under _main in COMRAM

    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_UART1_Write
    _abs->___aomod
    _checkBatt->___flge
    _getBatteryVoltage->_ADCC_GetSingleConversion
    ___flge->___xxtofl
    _setSteering->___awdiv
    _calcSpeed->___fladd
    ___fladd->___flmul
    _setMotor->_PWM7_LoadDutyValue
    _setMotor->_PWM8_LoadDutyValue
    _actSpeed->___aldiv
    ___xxtofl->___awdiv
    ___fltol->___fladd
    ___flmul->___xxtofl
    _SYSTEM_Initialize->_TMR5_Initialize
    _UART1_Initialize->_UART1_SetErrorHandler
    _UART1_Initialize->_UART1_SetFramingErrorHandler
    _UART1_Initialize->_UART1_SetOverrunErrorHandler
    _UART1_Initialize->_UART1_SetRxInterruptHandler
    _UART1_Initialize->_UART1_SetTxInterruptHandler
    _TMR5_Initialize->_TMR5_SetGateInterruptHandler
    _TMR4_Initialize->_TMR4_SetInterruptHandler
    _CCP4_Initialize->_CCP4_SetCallBack
    _CCP3_Initialize->_CCP3_SetCallBack

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR4_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _CCP3_CaptureISR in COMRAM

    _CCP3_CaptureISR->_CCP3_DefaultCallBack

Critical Paths under _CCP4_CaptureISR in COMRAM

    _CCP4_CaptureISR->_CCP4_DefaultCallBack

Critical Paths under _TMR5_GATE_ISR in COMRAM

    _TMR5_DefaultGateInterruptHandler->_TMR5_ReadTimer
    _TMR5_Reload->_TMR5_WriteTimer

Critical Paths under _SMT1_PR_ACQ_ISR in COMRAM

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in COMRAM

    None.

Critical Paths under _SMT1_Overflow_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _loop->_getCurve
    _getCurve->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _calcSteering->___fltol
    _calcSpeed->___fltol
    ___fladd->___flmul
    _calcMotorPow->___fltol
    ___fltol->___fladd

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR4_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _CCP3_CaptureISR in BANK0

    None.

Critical Paths under _CCP4_CaptureISR in BANK0

    None.

Critical Paths under _TMR5_GATE_ISR in BANK0

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK0

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK0

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR4_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _CCP3_CaptureISR in BANK1

    None.

Critical Paths under _CCP4_CaptureISR in BANK1

    None.

Critical Paths under _TMR5_GATE_ISR in BANK1

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK1

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK1

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR4_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _CCP3_CaptureISR in BANK2

    None.

Critical Paths under _CCP4_CaptureISR in BANK2

    None.

Critical Paths under _TMR5_GATE_ISR in BANK2

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK2

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK2

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR4_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _CCP3_CaptureISR in BANK3

    None.

Critical Paths under _CCP4_CaptureISR in BANK3

    None.

Critical Paths under _TMR5_GATE_ISR in BANK3

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK3

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK3

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR4_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _CCP3_CaptureISR in BANK4

    None.

Critical Paths under _CCP4_CaptureISR in BANK4

    None.

Critical Paths under _TMR5_GATE_ISR in BANK4

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK4

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK4

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR4_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _CCP3_CaptureISR in BANK5

    None.

Critical Paths under _CCP4_CaptureISR in BANK5

    None.

Critical Paths under _TMR5_GATE_ISR in BANK5

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK5

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK5

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR4_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _CCP3_CaptureISR in BANK6

    None.

Critical Paths under _CCP4_CaptureISR in BANK6

    None.

Critical Paths under _TMR5_GATE_ISR in BANK6

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK6

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK6

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR4_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _CCP3_CaptureISR in BANK7

    None.

Critical Paths under _CCP4_CaptureISR in BANK7

    None.

Critical Paths under _TMR5_GATE_ISR in BANK7

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK7

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK7

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR4_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _CCP3_CaptureISR in BANK8

    None.

Critical Paths under _CCP4_CaptureISR in BANK8

    None.

Critical Paths under _TMR5_GATE_ISR in BANK8

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK8

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK8

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR4_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _CCP3_CaptureISR in BANK9

    None.

Critical Paths under _CCP4_CaptureISR in BANK9

    None.

Critical Paths under _TMR5_GATE_ISR in BANK9

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK9

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK9

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR4_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _CCP3_CaptureISR in BANK10

    None.

Critical Paths under _CCP4_CaptureISR in BANK10

    None.

Critical Paths under _TMR5_GATE_ISR in BANK10

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK10

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK10

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR4_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _CCP3_CaptureISR in BANK11

    None.

Critical Paths under _CCP4_CaptureISR in BANK11

    None.

Critical Paths under _TMR5_GATE_ISR in BANK11

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK11

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK11

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR4_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _CCP3_CaptureISR in BANK12

    None.

Critical Paths under _CCP4_CaptureISR in BANK12

    None.

Critical Paths under _TMR5_GATE_ISR in BANK12

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK12

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK12

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR4_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _CCP3_CaptureISR in BANK13

    None.

Critical Paths under _CCP4_CaptureISR in BANK13

    None.

Critical Paths under _TMR5_GATE_ISR in BANK13

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK13

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK13

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR4_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _CCP3_CaptureISR in BANK14

    None.

Critical Paths under _CCP4_CaptureISR in BANK14

    None.

Critical Paths under _TMR5_GATE_ISR in BANK14

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK14

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK14

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR4_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _CCP3_CaptureISR in BANK15

    None.

Critical Paths under _CCP4_CaptureISR in BANK15

    None.

Critical Paths under _TMR5_GATE_ISR in BANK15

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK15

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK15

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   52724
                  _SYSTEM_Initialize
           _TMR4_SetInterruptHandler
                               _loop
 ---------------------------------------------------------------------------------
 (1) _loop                                                 0     0      0   51577
                             ___flge
                           ___xxtofl
                       _calcMotorPow
                          _calcSpeed
                       _calcSteering
                          _checkBatt
                  _getBatteryVoltage
                           _getCurve
                         _getReverse
                             _printf
                           _setMotor
                        _setSteering
 ---------------------------------------------------------------------------------
 (2) _getReverse                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _getCurve                                             6     6      0    8623
                                             58 BANK0      6     6      0
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                               8     4      4    8462
                                             52 BANK0      6     2      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    7931
                                             44 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           42    36      6    7458
                                             28 BANK0     16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    5683
                                             48 COMRAM     8     8      0
                                              0 BANK0     28    18     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3417
                                             37 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     220
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1537
                                             30 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4    1037
                                             21 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0      93
                                             20 COMRAM     1     1      0
                        _UART1_Write
 ---------------------------------------------------------------------------------
 (7) _UART1_Write                                          1     1      0      62
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             37 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                             19 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                             19 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (2) _checkBatt                                            0     0      0    4758
                             ___flge
                           ___xxtofl
                  _getBatteryVoltage
                        _setSteering
 ---------------------------------------------------------------------------------
 (2) _getBatteryVoltage                                    0     0      0      22
           _ADCC_GetSingleConversion
 ---------------------------------------------------------------------------------
 (3) _ADCC_GetSingleConversion                             5     3      2      22
                                             19 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     638
                                             41 COMRAM    12     4      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _calcSteering                                         6     6      0    8864
                                             35 BANK0      6     6      0
                            ___awdiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                        _setSteering
 ---------------------------------------------------------------------------------
 (2) _setSteering                                          9     6      3    3320
                                             27 COMRAM     9     6      3
                 _PWM5_LoadDutyValue
                 _PWM6_LoadDutyValue
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) _PWM6_LoadDutyValue                                   4     2      2     120
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _PWM5_LoadDutyValue                                   4     2      2     120
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _calcSpeed                                            6     6      0    8062
                                             35 BANK0      6     6      0
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             16     8      8    3402
                                             53 COMRAM     4     4      0
                                             13 BANK0     12     4      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _calcMotorPow                                         7     7      0    7068
                                             35 BANK0      7     7      0
                            ___awdiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                           _actSpeed
                           _setMotor
 ---------------------------------------------------------------------------------
 (2) _setMotor                                             4     2      2     982
                                             23 COMRAM     4     2      2
                 _PWM7_LoadDutyValue
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (3) _PWM8_LoadDutyValue                                   4     2      2     272
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _PWM7_LoadDutyValue                                   4     2      2     272
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _actSpeed                                             4     2      2     629
                                             33 COMRAM     4     2      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             14     6      8     604
                                             19 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     778
                                             27 COMRAM    14    10      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     697
                                             25 BANK0     10     6      4
                            ___awdiv (ARG)
                            ___fladd (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    3053
                                             41 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                            ___awdiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     756
                                             19 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     973
                    _ADCC_Initialize
                    _CCP3_Initialize
                    _CCP4_Initialize
                    _CLC3_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM5_Initialize
                    _PWM6_Initialize
                    _PWM7_Initialize
                    _PWM8_Initialize
                    _SMT1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR4_Initialize
                    _TMR5_Initialize
                   _UART1_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0     490
              _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetOverrunErrorHandler                         2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetFramingErrorHandler                         2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetErrorHandler                                2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      2     2      0      98
                                             21 COMRAM     2     2      0
       _TMR5_SetGateInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetGateInterruptHandler                         2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0     174
           _TMR4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR4_SetInterruptHandler                             2     0      2     174
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      2     2      0       0
                                             19 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMT1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM7_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      15
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _CLC3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP4_Initialize                                      0     0      0      98
                   _CCP4_SetCallBack
 ---------------------------------------------------------------------------------
 (3) _CCP4_SetCallBack                                     2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CCP3_Initialize                                      0     0      0      98
                   _CCP3_SetCallBack
 ---------------------------------------------------------------------------------
 (3) _CCP3_SetCallBack                                     2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_tx_vect_isr                                   1     1      0       0
                                             16 COMRAM     1     1      0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_rx_vect_isr                                   1     1      0       0
                                             17 COMRAM     1     1      0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Receive_ISR                                   0     0      0       0
                   Absolute function *
          _UART1_DefaultErrorHandler *
   _UART1_DefaultFramingErrorHandler *
   _UART1_DefaultOverrunErrorHandler *
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (14) _UART1_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _UART1_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _UART1_DefaultErrorHandler                           0     0      0       0
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (14) _UART1_RxDataHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TMR4_ISR                                            1     1      0       0
                                             18 COMRAM     1     1      0
                      _TMR4_CallBack
 ---------------------------------------------------------------------------------
 (13) _TMR4_CallBack                                       0     0      0       0
                   Absolute function *
                       _TMR4_10msISR *
       _TMR4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _TMR4_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _TMR4_10msISR                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _CCP3_CaptureISR                                     2     2      0     144
                                              2 COMRAM     2     2      0
                   Absolute function *
               _CCP3_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (17) _CCP3_DefaultCallBack                                2     0      2      97
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _CCP4_CaptureISR                                     2     2      0     144
                                              6 COMRAM     2     2      0
                   Absolute function *
               _CCP4_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (17) _CCP4_DefaultCallBack                                2     0      2      97
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _TMR5_GATE_ISR                                       0     0      0     233
                   Absolute function *
   _TMR5_DefaultGateInterruptHandler *
 ---------------------------------------------------------------------------------
 (17) _TMR5_DefaultGateInterruptHandler                    0     0      0     233
                     _TMR5_ReadTimer
                        _TMR5_Reload
 ---------------------------------------------------------------------------------
 (18) _TMR5_Reload                                         0     0      0     164
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (19) _TMR5_WriteTimer                                     2     0      2     164
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (18) _TMR5_ReadTimer                                      8     6      2      69
                                              8 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _SMT1_PR_ACQ_ISR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _SMT1_PW_ACQ_ISR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _SMT1_Overflow_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
     _CCP3_Initialize
       _CCP3_SetCallBack
     _CCP4_Initialize
       _CCP4_SetCallBack
     _CLC3_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM5_Initialize
     _PWM6_Initialize
     _PWM7_Initialize
     _PWM8_Initialize
     _SMT1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
     _TMR4_Initialize
       _TMR4_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetGateInterruptHandler
     _UART1_Initialize
       _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
   _TMR4_SetInterruptHandler
   _loop
     ___flge
       ___xxtofl (ARG)
         ___awdiv (ARG)
     ___xxtofl
     _calcMotorPow
       ___awdiv
       ___flmul
         ___awdiv (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___awdiv (ARG)
         ___fladd (ARG)
           ___flmul (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl
       _actSpeed
         ___aldiv
       _setMotor
         _PWM7_LoadDutyValue
         _PWM8_LoadDutyValue
     _calcSpeed
       ___fladd
       ___flmul
       ___fltol
       ___xxtofl
     _calcSteering
       ___awdiv
       ___flmul
       ___fltol
       ___xxtofl
       _setSteering
         _PWM5_LoadDutyValue
         _PWM6_LoadDutyValue
         ___awdiv
     _checkBatt
       ___flge
       ___xxtofl
       _getBatteryVoltage
         _ADCC_GetSingleConversion
       _setSteering
     _getBatteryVoltage
     _getCurve
       _printf
         _vfprintf
           _vfpfcnvrt
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                 _fputs
                   _fputc
                 _strlen
             _fputc
     _getReverse
     _printf
     _setMotor
     _setSteering

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *
     Absolute function(Fake) *
     _UART1_DefaultErrorHandler *
       _UART1_RxDataHandler
     _UART1_DefaultFramingErrorHandler *
     _UART1_DefaultOverrunErrorHandler *
     _UART1_RxDataHandler *

 _TMR4_ISR (ROOT)
   _TMR4_CallBack
     Absolute function(Fake) *
     _TMR4_10msISR *
     _TMR4_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _CCP3_CaptureISR (ROOT)
   Absolute function(Fake) *
   _CCP3_DefaultCallBack *

 _CCP4_CaptureISR (ROOT)
   Absolute function(Fake) *
   _CCP4_DefaultCallBack *

 _TMR5_GATE_ISR (ROOT)
   Absolute function(Fake) *
   _TMR5_DefaultGateInterruptHandler *
     _TMR5_ReadTimer
     _TMR5_Reload
       _TMR5_WriteTimer

 _SMT1_PR_ACQ_ISR (ROOT)

 _SMT1_PW_ACQ_ISR (ROOT)

 _SMT1_Overflow_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FFF      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK15          100      0       0      30        0.0%
BANK15             100      0       0      31        0.0%
BITBANK14          100      0       0      28        0.0%
BANK14             100      0       0      29        0.0%
BITBANK13          100      0       0      36        0.0%
BANK13             100      0       0      27        0.0%
BITBANK12          100      0       0      35        0.0%
BANK12             100      0       0      26        0.0%
BITBANK11          100      0       0      34        0.0%
BANK11             100      0       0      25        0.0%
BITBANK10          100      0       0      33        0.0%
BANK10             100      0       0      24        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      20       7       12.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     40      9D       5       98.1%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     39      4C       1       80.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     109      32        0.0%
DATA                 0      0     109       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Jan 31 14:52:27 2024

                             _CCP4_Initialize 3F1A                        ??_CCP3_DefaultCallBack 0003  
                                          l72 41BC                                            l75 40C6  
                                          l69 3A6A                                  ___awdiv@sign 0019  
                           ??_TMR5_WriteTimer 000B                   __size_of_PWM6_LoadDutyValue 0034  
                                         l312 38D0                                           l404 3A20  
                                         l308 3888                                           l309 38A2  
                                         l318 41E4                                           l520 3AB4  
                                         l441 3F74                                           l362 4202  
                                         l371 41EE                                           l188 3368  
                                         l284 3652                                           l365 4216  
                                         l359 420C                                           l368 41F8  
                                         l712 3DBA                                           l449 423E  
                                         l482 3F46                                           l723 415C  
                                         l555 4220                                           l644 3FCE  
                                         l740 3D52                                           l709 4174  
                                         l581 3CB0                                           l726 3D86  
                                         l479 4234                                           l751 418C  
                                         l737 41A4                                           l754 3D1E  
                                         l923 4144                                           l695 422A  
                                         l795 3EB8                                           l893 3FFA  
                                         _GIE 01FE97                                           _PR2 003FAB  
                                         _PR4 003F9F                                           _abs 3B8A  
                                         _pad 342E                       __size_of_PMD_Initialize 0024  
                             _TMR2_Initialize 412A                CCP4_SetCallBack@customCallBack 0014  
                                         tosl 003FFD                                           wreg 003FE8  
                            _CCP4_SetCallBack 422C                                  ___flmul@aexp 00A6  
                                ___flmul@bexp 00AB                            _UART1_Transmit_ISR 3B46  
                                ___flmul@sign 00A5                                  ___flmul@temp 00B0  
                                ___flmul@prod 00AC                       __end_of_CCP4_CaptureISR 3E24  
                                ___fltol@exp1 00C7                                          l1042 392C  
                                        l2011 15C8                                          ?_abs 0026  
                                        l2020 185A                                          l2021 1848  
                                        l1054 3E34                                          l2102 3472  
                                        l1310 31AC                                          l2015 1950  
                                        l1311 31BC                                          l1057 3E54  
                                        l2105 34B4                                          l2113 19F2  
                                        l2018 17E2                                          l1250 41CC  
                                        l1323 1FAC                                          l2107 34EE  
                                        l2115 19FA                                          l2028 1912  
                                        l2052 253C                                          l2140 22DA  
                                        l2133 1C36                                          l1318 1F1A  
                                        l1238 2DAC                                          l2055 2698  
                                        l1247 377C                                          l1255 380C  
                                        l1511 29C4                                          l2151 3BC0  
                                        l3130 39D6                                          l3210 3E8A  
                                        l2066 2630                                          l1338 20CE  
                                        l2154 3BC8                                          l2146 386C  
                                        l2059 25D4                                          l2147 3874  
                                        l2075 407A                                          l1275 1E8E  
                             _timer3ReloadVal 00E7                                          l3140 3A02  
                                        l3132 39D8                                          l3220 3EB2  
                                        l3212 3EA8                                          l1524 2B28  
                                        l2180 3C02                                          l1381 26A6  
                                        l3150 3A16                                          l3142 3A0C  
                                        l3134 39E0                                          l3222 3EB4  
                                        l3214 3EAA                                          l3230 413C  
                                        l2166 36E8                                          l2174 3B44  
                                        l1359 24E4                                          l1383 26CA  
                                        l3152 3A18                                          l3144 3A10  
                                        l3136 39EA                                          l3160 40A4  
                                        l3232 4176                                          l3224 4146  
                                        l3216 3EAC                                          l1368 2C6C  
                                        l1384 26DE                                          l1296 1E9E  
                                        l1377 329E                                          l1385 2706  
                                        l3154 3A1A                                          l3146 3A12  
                                        l3138 3A00                                          l3170 3318  
                                        l3162 32A0                                          l3218 3EB0  
                                        l3226 412A                                          l1394 283C  
                                        l3244 3FD0                                          l3156 3A1C  
                                        l3148 3A14                                          l3180 3326  
                                        l3172 331A                                          l3164 32C0  
                                        l3228 4136                                          l1628 342C  
                                        l1476 2EB8                                          l3158 3A1E  
                                        l3182 3328                                          l3174 331C  
                                        l3166 32C2                                          l3254 418E  
                                        l3270 415E                                          l1662 307E  
                                        l3184 332A                                          l3176 331E  
                                        l3168 32CA                                          l5200 3C92  
                                        l5120 24E8                                          l6000 28D8  
                                        l3186 41A6                                          l3178 3324  
                                        l5202 3CAC                                          l5210 3A9E  
                                        l5122 24F8                                          l6010 295A  
                                        l6002 28EC                                          l1667 30C4  
                                        l5212 3AA2                                          l5204 3A6C  
                                        l5220 35B4                                          l5140 25BE  
                                        l5132 2576                                          l5124 2506  
                                        l4500 2DAE                                          l5060 302E  
                                        l6020 29A4                                          l6012 295C  
                                        l6004 28FA                                          l6100 1A02  
                                        l1925 1230                                          l3198 38D2  
                                        l5214 3AA4                                          l5206 3A80  
                                        l5230 35DE                                          l5222 35C0  
                                        l1694 2FC0                                          l5150 263E  
                                        l5142 25CA                                          l5134 257E  
                                        l5126 254C                                          l4510 2DE2  
                                        l4502 2DB2                                          l1942 134A  
                                        l1934 1500                                          l1926 121E  
                                        l5070 30BC                                          l5062 303E  
                                        l5054 2FC2                                          l6014 296E  
                                        l6006 290C                                          l6030 29F8  
                                        l6110 1A3A                                          l6102 1A14  
                                        l1951 141A                                          l1927 11E4  
                                        l5216 3AB0                                          l5208 3A84  
                                        l4600 4204                                          l5240 35F2  
                                        l5232 35E2                                          l5224 35D0  
                                        l5160 2686                                          l5152 2640  
                                        l5144 2606                                          l5136 258A  
                                        l5128 2562                                          l4520 2E24  
                                        l4512 2DF2                                          l4504 2DC0  
                                        l1952 1408                                          l7000 1F7E  
                                        l5072 30C2                                          l5064 304C  
                                        l5056 2FF0                                          l6008 293A  
                                        l6016 2974                                          l6040 2A50  
                                        l6032 29FC                                          l6024 29C6  
                                        l6112 1A40                                          l6120 1B34  
                                        l6104 1A22                                          l6200 405E  
                                        l5400 31A8                                          l5170 3F64  
                                        l4602 41FA                                          l5250 3606  
                                        l5242 35F6                                          l5234 35E6  
                                        l5226 35D6                                          l5218 35B0  
                                        l5162 2688                                          l5154 2644  
                                        l5146 2612                                          l5138 25BC  
                                        l4530 2E76                                          l4522 2E30  
                                        l4514 2DF6                                          l4506 2DD0  
                                        l6210 105E                                          l7002 2090  
                                        l5066 305E                                          l5058 3000  
                                        l6018 2984                                          l6050 2AD2  
                                        l6042 2A64                                          l6034 2A0A  
                                        l6026 29CA                                          l6122 1B50  
                                        l6130 1BB0                                          l6114 1AC2  
                                        l6106 1A28                                          l5402 31A8  
                                        l5172 3F6E                                          l5180 3FBC  
                                        l4620 4218                                          l4604 420E  
                                        l5260 364E                                          l5252 360A  
                                        l5244 35FA                                          l5236 35EA  
                                        l5228 35DA                                          l5156 2668  
                                        l5148 2620                                          l4540 2EA8  
                                        l4532 2E78                                          l4524 2E3E  
                                        l4516 2E06                                          l4508 2DD4  
                                        l6300 1212                                          l6212 106E  
                                        l6220 1098                                          l6204 1040  
                                        l7004 2756                                          l5068 306C  
                                        l6044 2A72                                          l6052 2AD8  
                                        l6036 2A2A                                          l6028 29D8  
                                        l6060 342E                                          l6140 1BF4  
                                        l6132 1BC2                                          l6124 1B6E  
                                        l6116 1ACA                                          l6108 1A30  
                                        l5174 3F72                                          l5166 3F48  
                                        l5190 3F36                                          l5182 3FBE  
                                        l5254 360E                                          l5246 35FE  
                                        l5238 35EE                                          l4550 3384  
                                        l5158 2678                                          l4534 2E82  
                                        l4526 2E48                                          l4518 2E1C  
                                        l4710 36F2                                          l6310 1262  
                                        l6302 121C                                          l6230 10C8  
                                        l6222 10A8                                          l6214 107E  
                                        l6206 104E                                          l7006 245C  
                                        l6054 2AE8                                          l6046 2AA0  
                                        l6038 2A48                                          l6070 347E  
                                        l6062 343C                                          l6142 1BFC  
                                        l6134 1BD0                                          l6126 1B88  
                                        l6118 1AD0                                          l6150 20FE  
                                        ?_pad 0026                                          l4616 4236  
                                        l5168 3F58                                          l5192 3F40  
                                        l5184 3FCA                                          l5176 3FA4  
                                        l5256 361A                                          l5248 3602  
                                        l4560 33AA                                          l4552 3388  
                                        l4544 336A                                          l4528 2E66  
                                        l4536 2E88                                          l4712 3708  
                                        l4480 3D88                                          l4640 31DA  
                                        l6400 14EE                                          l6320 129E  
                                        l6312 1272                                          l6304 123E  
                                        l6240 1108                                          l6232 10D6  
                                        l6224 10AE                                          l6216 108E  
                                        l6208 105C                                          l5280 37A2  
                                        l6056 2B08                                          l6048 2AC0  
                                        l6072 3492                                          l6064 3450  
                                        l6136 1BD6                                          l6144 1C0E  
                                        l6128 1BA2                                          l6160 2182  
                                        l6152 2110                                          l4618 422C  
                                        l5194 3F44                                          l5186 3F1A  
                                        l5178 3FB8                                          l5258 3626  
                                        l4570 33E0                                          l4562 33BC  
                                        l4554 3396                                          l4546 336E  
                                        l6410 151E                                          l4538 2E98  
                                        l4714 3718                                          l4482 3D54  
                                        l4650 3236                                          l4642 31F6  
                                        l6402 14F0                                          l6330 12E4  
                                        l6322 12AC                                          l6314 1280  
                                        l6306 124E                                          l6250 1142  
                                        l6242 110A                                          l6234 10D8  
                                        l6226 10C0                                          l6218 1090  
                                        l4490 3E2C                                          l4706 41BE  
                                        l5282 37A6                                          l5274 377E  
                                        l6082 3B8A                                          l6074 3496  
                                        l6066 345E                                          l6138 1BE8  
                                        l6090 199C                                          l6170 2256  
                                        l6162 21DE                                          l6154 2122  
                                        l5188 3F2A                                          l5196 3C7A  
                                        l4636 4222                                          l4572 33F6  
                                        l4564 33C4                                          l4580 340C  
                                        l4556 339E                                          l4548 337C  
                                        l6500 1812                                          l6420 1556  
                                        l6412 1520                                          l4716 3748  
                                        l4708 36EA                                          l4652 3252  
                                        l4644 31FE                                          l6340 1360  
                                        l6332 1318                                          l6324 12AE  
                                        l6316 128E                                          l6260 1156  
                                        l6252 1146                                          l6236 10E8  
                                        l6244 1112                                          l6228 10C2  
                                        l4484 3D20                                          l4660 269A  
                                        l4492 3E30                                          l5284 37EA  
                                        l5292 380A                                          l5276 3784  
                                        l6084 3BA4                                          l6076 34C2  
                                        l6068 346A                                          l6092 19BC  
                                        l6172 226A                                          l6156 2126  
                                        l6148 20D0                                          l5380 310A  
                                        l5372 30C6                                          l5198 3C8E  
                                        l5550 3A36                                          l4582 341C  
                                        l4574 33FE                                          l4566 33CC  
                                        l4558 33A2                                          l6510 1884  
                                        l6502 1840                                          l6430 1582  
                                        l6422 1566                                          l6414 1530  
                                        l6406 1502                                          l4718 3774  
                                        l4654 325A                                          l4646 320A  
                                        l4638 31BE                                          l6350 139C  
                                        l6342 1370                                          l6334 131A  
                                        l6326 12B8                                          l6318 129A  
                                        l6270 116A                                          l6262 115A  
                                        l6254 114A                                          l6246 1122  
                                        l6238 10F8                                          l4486 3CEC  
                                        l4670 272E                                          l4662 26E6  
                                        l4494 3E32                                          l5286 37F4  
                                        l5278 379A                                          l6078 34D6  
                                        l6094 19CA                                          l6086 1952  
                                        l6166 2216                                          l6158 2154  
                                        l6182 2296                                          l6190 380E  
                                        l5390 3150                                          l5382 3112  
                                        l5374 30DE                                          l5560 3A52  
                                        l5552 3A3E                                          l4584 3424  
                                        l4576 3400                                          l4568 33DA  
                                        l6520 18FA                                          l6512 18AE  
                                        l6440 15D8                                          l6432 1592  
                                        l6424 156C                                          l6416 1540  
                                        l6408 1510                                          l4656 3266  
                                        l4648 321A                                          l6360 13C8  
                                        l6352 139E                                          l6336 132A  
                                        l6328 12BE                                          l6280 117E  
                                        l6272 116E                                          l6264 115E  
                                        l6256 114E                                          l6248 1134  
                                        l4680 27AC                                          l4664 270E  
                                        l4496 3E42                                          l4488 3E26  
                                        l5288 3804                                          l6096 19CC  
                                        l6088 1972                                          l6184 22C4  
                                        l6168 2244                                          l6176 2278  
                                        l6192 3816                                          l6600 1D22  
                                        l5392 3166                                          l5384 3128  
                                        l5376 30E6                                          l5562 3A56  
                                        l5554 3A42                                          l5546 3A22  
                                        l4578 3406                                          l6522 1916  
                                        l6530 193C                                          l6506 186A  
                                        l6514 18B2                                          l6450 1616  
                                        l6442 15E8                                          l6434 15A2  
                                        l6426 1572                                          l6418 1550  
                                        l4658 3286                                          l6370 1400  
                                        l6354 13AC                                          l6346 1384  
                                        l6362 13CA                                          l6338 133A  
                                        l6290 11DC                                          l6274 1172  
                                        l6266 1162                                          l6258 1152  
                                        l6282 1182                                          l4690 2814  
                                        l4682 27C8                                          l4666 271A  
                                        l4674 2742                                          l6098 19E6  
                                        l6178 228A                                          l6194 3824  
                                        l6610 1D6C                                          l6602 1D2E  
                                        l5394 316E                                          l5386 312C  
                                        l5378 30F8                                          l4596 41F0  
                                        l5564 3A5E                                          l5556 3A46  
                                        l5548 3A32                                          l6532 1940  
                                        l6524 1926                                          l6516 18CC  
                                        l6508 1876                                          l6460 1670  
                                        l6452 1630                                          l6436 15B2  
                                        l6428 1580                                          l6380 147E  
                                        l6356 13B4                                          l6348 138E  
                                        l6364 13D8                                          l6292 11F2  
                                        l6284 1186                                          l6276 1176  
                                        l6268 1166                                          l4692 281C  
                                        l4684 27D0                                          l4668 2722  
                                        l4676 2784                                          l6196 384A  
                                        l6620 1DCE                                          l6612 1D7E  
                                        l6604 1D34                                          l5388 313E  
                                        l5396 3172                                          l4598 41E6  
                                        l5566 3A62                                          l5558 3A4A  
                                        l6526 1934                                          l6518 18E0  
                                        l6470 16BE                                          l6462 167E  
                                        l6454 163C                                          l6446 15FC  
                                        l6438 15B8                                          l6550 2F26  
                                        l6542 2EE6                                          l6390 14C4  
                                        l6374 142A                                          l6382 1480  
                                        l6366 13DC                                          l6358 13B8  
                                        l6294 11FE                                          l6286 11B0  
                                        l6278 117A                                          l6710 22EA  
                                        l4694 282C                                          l4686 27EC  
                                        l4678 27A0                                          l6198 4054  
                                        l6630 1DFA                                          l6622 1DDA  
                                        l6614 1D94                                          l6606 1D44  
                                        l5398 3188                                          l6528 1936  
                                        l6480 173C                                          l6472 16DC  
                                        l6464 168E                                          l6456 1658  
                                        l6448 160C                                          l6560 2F56  
                                        l6552 2F34                                          l6544 2F10  
                                        l6536 2EBA                                          l6392 14D2  
                                        l6384 1490                                          l6376 1436  
                                        l6368 13EA                                          l6296 1202  
                                        l6288 11CC                                          l6720 233E  
                                        l6712 2300                                          l4688 27F8  
                                        l6632 1DFE                                          l6624 1DE4  
                                        l6616 1DAA                                          l6608 1D56  
                                        l6800 2CAA                                          l6490 17D2  
                                        l6482 1766                                          l6474 16EC  
                                        l6466 169E                                          l6458 1664  
                                        l6570 2F80                                          l6562 2F60  
                                        l6546 2F12                                          l6538 2ED2  
                                        l6394 14D8                                          l6386 14A0  
                                        l6378 1444                                          l6298 1210  
                                        l6730 237C                                          l6722 234A  
                                        l6714 2304                                          l5930 3878  
                                        l6642 1E38                                          l6626 1DF0  
                                        l6618 1DBC                                          l6634 1E06  
                                        l6650 1E54                                          l6810 2D12  
                                        l6802 2CBC                                          l6492 17E0  
                                        l6484 179C                                          l6476 170C  
                                        l6468 16AE                                          l6572 2F90  
                                        l6548 2F22                                          l6396 14DA  
                                        l6388 14C0                                          l6740 243C  
                                        l6732 2392                                          l6716 2320  
                                        l6724 2356                                          l6708 22DC  
                                        l6660 1F36                                          l5940 38C8  
                                        l5932 3898                                          l6644 1E48  
                                        l6636 1E18                                          l6628 1DF6  
                                        l6580 1C38                                          l6820 2D4A  
                                        l6812 2D1A                                          l6804 2CC0  
                                        l6494 17F2                                          l6486 17AA  
                                        l6478 171C                                          l6574 2FA0  
                                        l6558 2F4C                                          l6398 14E0  
                                        l6750 24B0                                          l6734 2424  
                                        l6726 2362                                          l6718 2328  
                                        l6670 1FB0                                          l6662 1F42  
                                        l5942 38CC                                          l5934 38A4  
                                        l5950 3666                                          l6590 1CB4  
                                        l6582 1C56                                          l6830 2D98  
                                        l6822 2D5A                                          l6814 2D26  
                                        l6806 2CC4                                          l6496 1800  
                                        l6488 17C8                                          l6576 2FB0  
                                        l6568 2F74                                          l6752 24B8  
                                        l6736 2430                                          l6728 2378  
                                        l6680 2030                                          l6672 1FC4  
                                        l6664 1F5E                                          l6656 1EA0  
                                        l5936 38B6                                          l5944 38CE  
                                        l5928 3878                                          l5952 3678  
                                        l6592 1CD0                                          l6584 1C72  
                                        l6832 2D9C                                          l6824 2D6E  
                                        l6816 2D38                                          l6808 2D08  
                                        l6840 40F0                                          l6498 1804  
                                        l6770 2B50                                          l6762 2B2A  
                                        l6754 24D4                                          l6746 2448  
                                        l6682 2042                                          l6674 1FD8  
                                        l6658 1F1A                                          l5938 38B8  
                                        l5946 41DE                                          l5954 3682  
                                        l5962 3B02                                          l5970 3BCA  
                                        l6594 1CEC                                          l6586 1C8E  
                                        l6834 2DA0                                          l6826 2D82  
                                        l6818 2D3C                                          l6842 40F2  
                                        l6780 2C00                                          l6772 2BCC  
                                        l6764 2B36                                          l6756 24DC  
                                        l6748 2492                                          l6676 2008  
                                        l6668 1F6A                                          l5980 283E  
                                        l5956 36A0                                          l5948 3654  
                                        l5964 3B0E                                          l5972 3BD6  
                                        l6596 1D02                                          l6588 1CA4  
                                        l6836 2DA4                                          l6828 2D94  
                                        l6844 4100                                          l6790 2C58  
                                        l6782 2C0C                                          l6774 2BE0  
                                        l6766 2B44                                          l6686 2056  
                                        l6678 201C                                          l6694 207C  
                                        l5990 2882                                          l5982 2842  
                                        l5958 36D6                                          l5966 3B20  
                                        l5974 3BDA                                          l6598 1D12  
                                        l6838 40EC                                          l6792 2C64  
                                        l6784 2C28                                          l6776 2BE8  
                                        l6768 2B50                                          l6688 2068  
                                        l5992 28A2                                          l5984 2850  
                                        l5968 3B24                                          l5976 3BF6  
                                        l6786 2C34                                          l6778 2BFC  
                                        l5994 28A6                                          l5986 2870  
                                        l6794 2C6E                                          l6788 2C50  
                                        l5996 28B2                                          l5988 2874  
                                        l6796 2C8E                                          l5998 28D0  
                                        l6798 2C9C                                          l6998 1E68  
                                        STR_1 1034                                          STR_2 101D  
                                        STR_3 1001                                          STR_4 1029  
                                        STR_5 1011                                          u3000 341C  
                                        u3001 3418                                          u3100 27EC  
                                        u3101 27E8                                          _LATA 003FBA  
                                        u3110 2814                                          _LATB 003FBB  
                                        u3111 2810                                          _LATC 003FBC  
                                        u3120 3708                                          u3040 31DA  
                                        _LATD 003FBD                                          u3121 3704  
                                        u3041 31D6                                          _LATE 003FBE  
                                        u3130 3718                                          u3050 31F6  
                                        u3131 3714                                          u3051 31F2  
                                        u3060 3236                                          u3061 3232  
                                        u3070 3252                                          u3071 324E  
                                        u3080 27A0                                          u5000 1986  
                                        u4200 3188                                          u3081 279C  
                                        u4201 3184                                          u3090 27C8  
                                        u5010 199C                                          u4210 31A4  
                                        u4130 30DE                                          _T2PR 003FAB  
                                        u3091 27C4                                          u5011 1998  
                                        u4211 31A0                                          u4131 30DA  
                                        u5100 1BB0                                          u5020 19CA  
                                        u4140 30F8                                          u5101 1BAC  
                                        u5021 19C6                                          u4141 30F4  
                                        u5110 1BC2                                          u5030 19E6  
                                        u4150 310A                                          u1575 3A0A  
                                        u5111 1BBE                                          u5031 19E2  
                                        u4151 3106                                          u1576 3A0C  
                                        u5200 106E                                          u5120 1BD0  
                                        u5040 1A14                                          u6000 1E48  
                                        u4160 3128                                          u5201 106A  
                                        u5121 1BCC                                          u5041 1A10  
                                        u6001 1E44                                          u4161 3124  
                                        u5210 107E                                          u6010 1F36  
                                        u5130 1BE8                                          u5050 1A22  
                                        u4170 313E                                          _T4PR 003F9F  
                                        u5211 107A                                          u6011 1F32  
                                        u5131 1BE4                                          u5051 1A1E  
                                        u4171 313A                                          u2900 2DE2  
                                        u5300 11CA                                          u5220 10C0  
                                        u6100 24B0                                          u6020 1F5E  
                                        u5060 1B50                                          u5140 20FE  
                                        u4180 3150                                          u2901 2DDE  
                                        u5221 10BC                                          u6101 24AC  
                                        u6021 1F5A                                          u5061 1B4C  
                                        u5141 20FA                                          u4181 314C  
                                        u2910 2E1C                                          u5310 11F2  
                                        u5230 10D6                                          u6110 24D4  
                                        u6030 2042                                          u5070 1B6E  
                                        u5150 2154                                          u4190 3166  
                                        u2911 2E18                                          u5311 11EE  
                                        u5231 10D2                                          u6111 24D0  
                                        u6031 203E                                          u5071 1B6A  
                                        u5151 2150                                          u4191 3162  
                                        u2920 2E3E                                          u6120 2BE0  
                                        u5400 132A                                          u5320 1210  
                                        u5240 10E8                                          u6040 2068  
                                        u3720 2FF0                                          u5080 1B88  
                                        u5160 2182                                          u6200 2D4A  
                                        u2921 2E3A                                          u6121 2BDC  
                                        u5401 1326                                          u5321 120C  
                                        u5241 10E4                                          u6041 2064  
                                        u3721 2FEC                                          u5081 1B84  
                                        u5161 217E                                          u6201 2D46  
                                        u2930 2E66                                          u6130 2BFC  
                                        u5410 1360                                          u5330 1230  
                                        u5250 10F8                                          u6050 2300  
                                        u3730 302E                                          u5090 1BA2  
                                        u5170 2244                                          u6210 2D82  
                                        u2931 2E62                                          u6131 2BF8  
                                        u5411 135C                                          u5331 122C  
                                        u5251 10F4                                          u6051 22FC  
                                        u3731 302A                                          u5091 1B9E  
                                        u5171 2240                                          u6211 2D7E  
                                        u3900 2630                                          u2940 2E98  
                                        u6140 2C28                                          u5500 142A  
                                        u5420 1370                                          u5340 123E  
                                        u5260 1134                                          u6060 2320  
                                        u3740 304C                                          u5180 386C  
                                        _PMD0 0039C0                                          u3901 262C  
                                        u2941 2E94                                          u2845 3DAC  
                                        u6141 2C24                                          u5501 1426  
                                        u5421 136C                                          u5341 123A  
                                        u5261 1130                                          u6061 231C  
                                        u3741 3048                                          u5181 3868  
                                        _PMD1 0039C1                                          u2950 337C  
                                        u3910 263E                                          u6150 2C50  
                                        u5510 1444                                          u5430 139C  
                                        u5350 124E                                          u5270 1142  
                                        u5190 105C                                          u6070 233E  
                                        u3750 306C                                          _PMD2 0039C2  
                                        u2951 3378                                          u3911 263A  
                                        u2855 3D78                                          u6151 2C4C  
                                        u5511 1440                                          u5431 1398  
                                        u5351 124A                                          u5271 113E  
                                        u5191 1058                                          u6071 233A  
                                        u3751 3068                                          _PMD3 0039C3  
                                        u2960 3396                                          u5600 1540  
                                        u3920 2678                                          u3840 24F8  
                                        u5520 147E                                          u5440 13AC  
                                        u5360 1280                                          u5280 11B0  
                                        u6080 2378                                          u3760 30BC  
                                        u2880 3E42                                          u4720 3888  
                                        u4800 3BF6                                          u6160 2CAA  
                                        _PMD4 0039C4                                          u2961 3392  
                                        u5601 153C                                          u3921 2674  
                                        u3841 24F4                                          u5521 147A  
                                        u5441 13A8                                          u5361 127C  
                                        u5281 11AC                                          u6081 2374  
                                        u2865 3D44                                          u3761 30B8  
                                        u2881 3E3E                                          u4721 3884  
                                        u4801 3BF2                                          u6161 2CA6  
                                        _PMD5 0039C5                                          u2970 33BC  
                                        u5610 1580                                          u3930 2686  
                                        u3850 2506                                          u2890 2DC0  
                                        u5530 1490                                          u5450 13C8  
                                        u5370 128E                                          u5290 11C8  
                                        u6090 2392                                          u4810 2850  
                                        u4730 3898                                          u6170 2CBC  
                                        _PMD6 0039C6                                          u2971 33B8  
                                        u5611 157C                                          u3931 2682  
                                        u3851 2502                                          u2891 2DBC  
                                        u5531 148C                                          u5451 13C4  
                                        u5371 128A                                          u5291 11C2  
                                        u6091 238E                                          u2875 3D10  
                                        u4811 284C                                          u4731 3894  
                                        u6171 2CB8                                          _PMD7 0039C7  
                                        u2980 33DA                                          u5700 1840  
                                        u5620 1592                                          u3860 2562  
                                        u5540 14A0                                          u5460 13D8  
                                        u5380 12AC                                          u3940 379A  
                                        u4820 2882                                          u4900 2A48  
                                        u4740 38C8                                          u6180 2D08  
                                        u2981 33D6                                          u5701 183C  
                                        u5621 158E                                          u3861 255E  
                                        u5541 149C                                          u5461 13D4  
                                        u5381 12A8                                          u3941 3796  
                                        u4821 287E                                          u4901 2A44  
                                        u4741 38C4                                          u6181 2D04  
                                        u2990 33F6                                          u5710 1856  
                                        u5630 15A2                                          u3870 25B8  
                                        u5550 14C0                                          u5470 13EA  
                                        u5390 12E4                                          u3950 37EA  
                                        u4910 2A72                                          u4750 3666  
                                        u6190 2D38                                          u2991 33F2  
                                        u5711 1852                                          u5631 159E  
                                        u3871 25B4                                          u5551 14BC  
                                        u5471 13E6                                          u5391 12E0  
                                        u3951 37E6                                          u4831 28AC  
                                        u4911 2A6E                                          u4751 3662  
                                        u6191 2D34                                          u5720 186A  
                                        u5640 15D8                                          u5800 2F48  
                                        u3880 2602                                          u5560 14D2  
                                        u5480 1400                                          u4840 28D0  
                                        u4920 2AA0                                          u4760 3678  
                                        u5721 1866                                          u5641 15D4  
                                        u5801 2F44                                          u3881 25FE  
                                        u5561 14CE                                          u5481 13FC  
                                        u4841 28CC                                          u4921 2A9C  
                                        u4761 3674                                          u5730 1884  
                                        u5650 15E8                                          u5810 2F70  
                                        u3890 2620                                          u5570 14EE  
                                        u5490 1416                                          u4850 28FA  
                                        u4930 2AE8                                          u4770 36A0  
                                        u5731 1880                                          u5651 15E4  
                                        u5811 2F6C                                          u3891 261C  
                                        u5571 14EA                                          u5491 1412  
                                        u4851 28F6                                          u4931 2AE4  
                                        u4771 369C                                          u5740 18CC  
                                        u5660 1786                                          u5580 151E  
                                        u5820 2F90                                          u4860 293A  
                                        u4780 36D6                                          u4940 343C  
                                        u5900 1D22                                          u5741 18C8  
                                        u5581 151A                                          u5821 2F8C  
                                        u4861 2936                                          u4781 36D2  
                                        u4941 3438                                          u5901 1D1E  
                                        u5750 18FA                                          u5670 17E0  
                                        u5590 1530                                          u5830 2FA0  
                                        u4870 2984                                          u4790 3B44  
                                        u4950 345E                                          u5910 1D44  
                                        u5751 18F6                                          u5671 17DC  
                                        u5591 152C                                          u5831 2F9C  
                                        u4871 2980                                          u4791 3B40  
                                        u4951 345A                                          u5911 1D40  
                                        u5760 1934                                          u5680 1800  
                                        u4880 29D8                                          u4960 34B4  
                                        u5920 1D56                                          u5840 1C72  
                                        u5761 1930                                          u5681 17FC  
                                        u5665 177C                                          u4881 29D4  
                                        u4961 34B0                                          u5921 1D52  
                                        u5841 1C6E                                          u5690 1812  
                                        u5770 2ED2                                          u4890 2A0A  
                                        u4970 34C2                                          u5930 1D6C  
                                        u5850 1C8E                                          u5691 180E  
                                        u5771 2ECE                                          u4891 2A06  
                                        u4971 34BE                                          u5931 1D68  
                                        u5851 1C8A                                          u5780 2F06  
                                        u4980 3BA4                                          u5940 1D7E  
                                        u5860 1CA4                                          u4981 3BA0  
                                        u5941 1D7A                                          u5861 1CA0  
                                        u5790 2F34                                          u4990 1984  
                                        u5950 1D94                                          u5870 1CD0  
                                        u5791 2F30                                          u4991 197E  
                                        u5951 1D90                                          u5871 1CCC  
                                        u5960 1DAA                                          u5880 1CEC  
                                        u5785 2EFC                                          u5961 1DA6  
                                        u5881 1CE8                                          u5970 1DCE  
                                        u5890 1D02                                          u5971 1DCA  
                                        u5891 1CFE                                          u5980 1E18  
                                        u5981 1E14                                          u5990 1E34  
                                        u5991 1E30                                          _TMR2 003FAA  
                                        _TMR4 003F9E                                          _WPUA 003A41  
                                        _WPUB 003A51                                          _WPUC 003A61  
                                        _WPUD 003A71                                          _WPUE 003A81  
                         ?_UART1_Transmit_ISR 0001                                          abs@a 0026  
                                        _dbuf 0100                                          _main 40EC  
                                        _dtoa 1952                                          _loop 2C6E  
                                        _prec 003A                                          _nout 0080  
                                        pad@i 002D                                          pad@p 002A  
                                        fsr1h 003FE2                                          fsr2h 003FDA  
                                        indf2 003FDF                                          fsr1l 003FE1  
                                        pad@w 002F                                          fsr2l 003FD9  
                                        prodh 003FF4                                          prodl 003FF3  
                                        start 00AE                               _timer5ReloadVal 00EB  
                             _TMR3_Initialize 3C7A                               _PWM5_Initialize 418E  
                           ??_CLC3_Initialize 0014                 ??_UART1_SetTxInterruptHandler 0016  
                  ??_TMR4_SetInterruptHandler 0016                             _UART1_rx_vect_isr 3C40  
                                ___param_bank 000000                    __end_of_PWM5_LoadDutyValue 3D54  
                          ?_UART1_rx_vect_isr 0001                                         ??_abs 0028  
                                       ??_pad 002C                __size_of_OSCILLATOR_Initialize 0018  
                        ??_UART1_Transmit_ISR 0011                 __end_of_OSCILLATOR_Initialize 41BE  
                               ___fltol@sign1 00C6                               __end_of___aldiv 2EBA  
                             __end_of___aodiv 29C6                                         _ADCAP 003EF5  
                                       _ADACT 003EFE                       __end_of_CCP3_Initialize 3F76  
                             __end_of___fladd 1502                                         ?_main 0001  
                                       ?_dtoa 00A5                                         _ADCLK 003EFF  
                             __end_of___aomod 2B2A                                         _ADCNT 003EEB  
                                       _ADPCH 003EF1                                         _ADREF 003EFD  
                             __end_of___awdiv 342E                                         ?_loop 0001  
                                       _ADRPT 003EEC                        ??_CCP4_DefaultCallBack 0007  
                             __end_of___flmul 1952                      TMR5_ReadTimer@readValLow 0010  
                             __end_of___fltol 2FC2                               ___awdiv@divisor 0016  
                                       _U1P1H 003DED                                         _U1P2H 003DEF  
                                       _U1P1L 003DEC                                         _U1P3H 003DF1  
                                       _T3CLK 003FA9                                         _T2CON 003FAC  
                                       _U1P2L 003DEE                                         _U1P3L 003DF0  
                                       _T3CON 003FA6                                         _T5CLK 003F9D  
                                       _T4CON 003FA0                                         _T2HLT 003FAD  
                                       _T5CON 003F9A                                         _T4HLT 003FA1  
                                       _T2TMR 003FAA                                         _U1UIR 003DF8  
                                       i1l330 3C72                                         _T2RST 003FAF  
                                       _U1RXB 003DE8                                         i1l324 3C36  
                                       i1l333 3B84                                         i1l350 4250  
                                       i1l343 35AE                                         i1l336 3B88  
                                       i1l353 424E                                         _U1TXB 003DEA  
                                       i1l347 4026                                         i1l356 4244  
                                       _T4TMR 003F9E                                         _T4RST 003FA3  
                                       i2l409 4254                                         i1l692 3FA2  
                                       i2l534 4052                                         i2l438 3EE8  
                                       i2l446 3DEE                                         i2l552 3E88  
                                       i1l688 3CE4                                         i2l529 40EA  
                                       i2l537 41DA                                         i1l698 4252  
                                       i2l476 3F18                                         i2l558 4128  
                                       i2l487 3E22                           ??_UART1_rx_vect_isr 0012  
                                       i2l863 3982                                         i2l856 3B00  
                                       i2l868 40A2                               ___awdiv@counter 0018  
                                       _OSCEN 0039DD                                  vfpfcnvrt@fmt 00C3  
                                       _TMR3H 003FA5                                         _TMR5H 003F99  
                                       _TMR3L 003FA4                                         _TMR5L 003F98  
                                       _TRISA 003FC2                                         _TRISB 003FC3  
                                       _TRISC 003FC4                                         _TRISD 003FC5  
                                       _TRISE 003FC6                                   _Default_ISR 4254  
                             _TMR4_Initialize 3FA4                               _PWM6_Initialize 4176  
                           _UART1_tx_vect_isr 3C04                              __end_of_TMR4_ISR 3CEC  
                     setSteering@steeringMode 001E                                         _delay 00A0  
                                       _flags 003C                                         _fputc 3654  
                                       _fputs 3B02                         __size_of_calcMotorPow 0144  
                          ?_UART1_tx_vect_isr 0001                                         pad@fp 0026  
                                       _width 0082                                         _putch 41DC  
                                       dtoa@d 00A7                                         dtoa@i 00BF  
                                       dtoa@n 00B7                                         dtoa@p 00B1  
                                       dtoa@s 00B5                                         dtoa@w 00B3  
                            ?_SMT1_Initialize 0001                                         pclath 003FFA  
                                       tablat 003FF5                                   _BatteryVolt 0084  
                       __size_of_calcSteering 0230                                         status 003FD8  
         __end_of_UART1_SetRxInterruptHandler 41FA                   _UART1_SetRxInterruptHandler 41F0  
                     __end_of_CCP4_Initialize 3F48           fp__UART1_DefaultFramingErrorHandler 0000  
    __end_of_UART1_DefaultFramingErrorHandler 4252     __size_of_UART1_DefaultFramingErrorHandler 0002  
          ??_UART1_DefaultFramingErrorHandler 0012             ?_UART1_DefaultFramingErrorHandler 0001  
            _UART1_DefaultFramingErrorHandler 4250                           ??_UART1_tx_vect_isr 0011  
                   __end_of_UART1_rx_vect_isr 3C7A                               _TMR5_Initialize 3A6C  
                             _PWM7_Initialize 415E                               __initialization 3984  
                       TMR5_ReadTimer@readVal 000D                              ?_CCP3_CaptureISR 0001  
                                __end_of_main 410C                                  __end_of_dtoa 1C38  
                                __end_of_loop 2DAE                   ??_UART1_DefaultErrorHandler 0012  
                     __end_of_TMR2_Initialize 4146                                  ?_UART1_Write 0001  
                                      ??_main 003A                                        ??_dtoa 0031  
                                      ??_loop 003A                                 __activetblptr 000003  
                                _calcMotorPow 2B2A          __size_of_UART1_SetTxInterruptHandler 000A  
                   __end_of_UART1_tx_vect_isr 3C3E                               _PWM8_Initialize 4146  
                            _UART1_Initialize 35B0                                  _calcSteering 1EA0  
                            ?_CCP4_CaptureISR 0001                                        _ADACCH 003EE9  
                                      _ADACCL 003EE8                                        _ADACCU 003EEA  
                                      _ADACQH 003EF4                                        _ADACQL 003EF3  
                                      _ADCON0 003EF8                                        _ADCON1 003EF9  
                                      _ADCON2 003EFA                                        _ADCON3 003EFB  
                                      _ADERRH 003EE3                                        _ADERRL 003EE2  
                                      ?_fputc 0016                                        _ADLTHH 003EDF  
                                      _ADLTHL 003EDE                                        ?_fputs 001F  
                                      _ADRESH 003EF0                                        _ADRESL 003EEF  
                                      _ADPREH 003EF7                                        _ADPREL 003EF6  
                                      _CCPR3H 003F75                                        _CCPR4H 003F71  
                                      _CCPR3L 003F74                                        _CCPR4L 003F70  
                                      _ADSTAT 003EFC                                        _ADUTHH 003EE1  
                            ___awdiv@dividend 0014                                        _ADUTHL 003EE0  
                          _PWM8_LoadDutyValue 3D54                                        _ANSELA 003A40  
                                      ?_putch 0001                                        _ANSELB 003A50  
                                      _ANSELC 003A60                                        _ANSELD 003A70  
                                      _ANSELE 003A80                                        _RB1I2C 003A5A  
                                      _RB2I2C 003A5B                                        _RD0I2C 003A7A  
                                      _U1CON0 003DF2                                        _U1CON1 003DF3  
                                      _U1CON2 003DF4                                        _RC3I2C 003A6A  
                                      _RD1I2C 003A7B                                        _T3GATE 003FA8  
                                      _RC4I2C 003A6B                                        _U1BRGH 003DF6  
                                      _U1FIFO 003DF7                                        _T3GCON 003FA7  
                                      _U1BRGL 003DF5                                        _T5GATE 003F9C  
                                      _T5GCON 003F9B                                        _RA0PPS 003A00  
                                      _RA1PPS 003A01                                        _RA3PPS 003A03  
                                      _RA4PPS 003A04                                        _RB3PPS 003A0B  
                                      _T5GPPS 003AC9                                        i1l1241 424A  
                                      _ODCONA 003A42                                        _ODCONB 003A52  
                                      _ODCONC 003A62                                        _ODCOND 003A72  
                                      _ODCONE 003A82                       __end_of_PWM5_Initialize 41A6  
                     __end_of_TMR3_Initialize 3CB2                                        i1l4610 4010  
                                      i1l4612 4020                                        i1l4614 4024  
                                      i1l4606 3FFC                                        i1l5262 4240  
                                      i1l4608 400E                                        i1l5600 3B7E  
                                      i1l5610 3538                                        i1l5602 34F0  
                                      i1l5620 35AA                                        i1l5612 3548  
                                      i1l5604 3500                                        i1l5614 3558  
                                      i1l5606 3510                                        i1l5544 4246  
                                      i1l5616 3570                                        i1l5608 3520  
                                      i1l5712 3C0A                                        i1l5618 358C  
                                      i1l5714 3C1E                                        i1l5660 3F76  
                                      i1l5740 3CD8                                        i1l5716 3C46  
                                      i1l5662 3F8A                                        i1l5742 3CDC  
                                      i1l5718 3C5A                                        i1l5590 3B46  
                                      i1l5736 3CBA                                        i1l5592 3B56  
                                      i1l5738 3CBE                                        i1l5594 3B68  
                                      i1l5596 3B6A                                        i1l5598 3B7A  
                                      i2l4630 4042                                        i2l4622 4028  
                                      i2l5264 40C8                                        i2l4624 4036  
                                      i2l4632 4048                                        i2l5272 41CE  
                                      _INLVLA 003A44                                        i2l5266 40D6  
                                      i2l4634 404C                                        i2l4626 4038  
                                      _INLVLB 003A54                                        _INLVLC 003A64  
                                      i2l5268 40E2                                        i2l4628 403C  
                                      _INLVLD 003A74                                        _INLVLE 003A84  
                                      i2l5630 3EEA                                        i2l5622 3EBA  
                                      i2l5640 4118                                        i2l5632 3EF8  
                                      i2l5624 3EC8                                        i2l5720 3DBC  
                                      i2l5642 4120                                        i2l5730 3E5C  
                                      i2l5634 3F04                                        i2l5626 3ED4  
                                      i2l5722 3DCC                                        i2l5644 4124  
                                      i2l5732 3E70                                        i2l5636 3F12  
                                      i2l5724 3DF0                                        i2l5628 3EE2  
                                      i2l5750 3ADC                                        i2l5638 410C  
                                      i2l5726 3E00                                        i2l5760 395E  
                                      i2l5752 3AEE                                        i2l5744 3AB8  
                                      i2l5728 3E58                                        i2l5762 3970  
                                      i2l5754 3930                                        i2l5746 3ABC  
                                      i2l5764 407C                                        i2l5756 3934  
                                      i2l5748 3ACC                                        i2l5766 4080  
                                      i2l5758 394E                                  ?_setSteering 001C  
                                      _OSCFRQ 0039DF                              __end_of_actSpeed 377E  
                                      _SMT1PR 003F1B                         _UART1_SetErrorHandler 420E  
                            __end_of___xxtofl 269A                           ?_PWM8_LoadDutyValue 0014  
                            __end_of_getCurve 1EA0                      __end_of_CCP3_SetCallBack 4240  
                                _CCPTMRS0bits 003F5E                                  _CCPTMRS1bits 003F5F  
                                vfprintf@cfmt 00D7                                        ___flge 2FC2  
                                   ??___aldiv 001C                                     ??___aodiv 0024  
                                   ??___fladd 0036                                     ??___aomod 0024  
                                   ??___awdiv 0018                                     ??___flmul 0032  
                                   ??___fltol 00C2                                 _CCP3_CallBack 00EF  
                                ?_TMR5_Reload 0001                       __end_of_PWM6_Initialize 418E  
                     __end_of_TMR4_Initialize 3FD0                                        clear_0 39A6  
                                      clear_1 39B2                                        clear_2 39BE  
                            ___awdiv@quotient 001A                                        _motPow 0090  
                     fp__CCP3_DefaultCallBack 0000                                        isa$std 000001  
                               _CCP4_CallBack 00ED                                        _smtWay 0078  
                                      _printf 4054                                        pad@buf 0028  
                                      dtoa@fp 00A5                              ?_CCP3_Initialize 0001  
                                      _strlen 3BCA                          ??_PWM8_LoadDutyValue 0016  
                            __end_of_setMotor 32A0                               _ADCC_Initialize 38D2  
        __end_of_TMR4_DefaultInterruptHandler 4254         __size_of_TMR4_DefaultInterruptHandler 0002  
                _TMR4_DefaultInterruptHandler 4252                                        fputc@c 0016  
                              _PMD_Initialize 40A4                                        fputs@c 0023  
                                      fputs@i 0024                                        fputs@s 001F  
                                __mediumconst 0000                         __end_of_TMR5_GATE_ISR 3E8A  
                                      tblptrh 003FF7                                        tblptrl 003FF6  
                                      tblptru 003FF8             __size_of_ADCC_GetSingleConversion 0032  
                            __end_of_vfprintf 3876                     ?_ADCC_GetSingleConversion 0014  
    TMR4_SetInterruptHandler@InterruptHandler 0014  TMR5_SetGateInterruptHandler@InterruptHandler 0014  
 UART1_SetTxInterruptHandler@InterruptHandler 0014   UART1_SetRxInterruptHandler@InterruptHandler 0014  
        __end_of_UART1_SetOverrunErrorHandler 4204         __size_of_UART1_SetOverrunErrorHandler 000A  
                _UART1_SetOverrunErrorHandler 41FA                     _UART1_DefaultErrorHandler 4240  
               __size_of_INTERRUPT_Initialize 004C                  __size_of_UART1_RxDataHandler 002C  
                           getCurve@deltaLeft 00E3                                    ___flge@ff1 002A  
                                  ___flge@ff2 002E                       __end_of_PWM7_Initialize 4176  
                     __end_of_TMR5_Initialize 3AB6                                  ___xxtofl@arg 0026  
                                ___xxtofl@exp 0025                             _SYSTEM_Initialize 3A22  
                                ___xxtofl@val 001C                                    __accesstop 0060  
                     __end_of__initialization 39D0                              ?_CCP4_Initialize 0001  
                         setSteering@steering 001C                            ?_SYSTEM_Initialize 0001  
                               ___rparam_used 000001                    __size_of_UART1_rx_vect_isr 003A  
                                  ___fltol@f1 00BE                               _TMR5_WriteTimer 4028  
                          __size_of_calcSpeed 020A                     calcMotorPow@setSpeedDelta 00CA  
                    __end_of_CCP4_SetCallBack 4236                                __pcstackCOMRAM 0001  
                       __end_of_TMR4_CallBack 3FA4                                  __pidataBANK0 424C  
                          __size_of_checkBatt 0090                           ??_SYSTEM_Initialize 0018  
                                   ?_TMR4_ISR 0001                                ivt0x8_undefint 00AC  
                               __end_of_fputc 36EA                                 __end_of_fputs 3B46  
                             fp__TMR4_10msISR 0000                                 __end_of_putch 41E6  
                            ?_TMR2_Initialize 0001                       __end_of_PWM8_Initialize 415E  
                      __end_of_PMD_Initialize 40C8                   __size_of_PWM7_LoadDutyValue 0034  
                       CCP3_CaptureISR@module 0003                    __size_of_UART1_tx_vect_isr 003A  
              CCP3_SetCallBack@customCallBack 0014                     _UART1_FramingErrorHandler 00F5  
             fp__TMR4_DefaultInterruptHandler 0000                 ?_TMR4_DefaultInterruptHandler 0001  
                     fp__CCP4_DefaultCallBack 0000                      __size_of_SMT1_PR_ACQ_ISR 004A  
                           _calcSteering$4029 00CA                                       ??_fputc 001A  
                   __end_of_SYSTEM_Initialize 3A6C                                       ??_fputs 0023  
                             _CLC3_Initialize 3FD0                                       ??_putch 0015  
                 PWM7_LoadDutyValue@dutyValue 0014                                    __pbssBANK0 0060  
                                  __pbssBANK1 0100                 ?_UART1_SetOverrunErrorHandler 0014  
                      ?_UART1_SetErrorHandler 0014                              ?_PWM5_Initialize 0001  
                            ?_TMR3_Initialize 0001                                    __pnvCOMRAM 004C  
                    __size_of_SMT1_PW_ACQ_ISR 0054                         _TMR4_InterruptHandler 00E5  
                                     IVTBASEH 003FD6                                       IVTBASEL 003FD5  
                                     IVTBASEU 003FD7                                       ?___flge 002A  
                                  ??_TMR4_ISR 0013                       __end_of_ADCC_Initialize 392E  
                  __end_of_PWM6_LoadDutyValue 3D20          __end_of_TMR5_SetGateInterruptHandler 4222  
       __size_of_TMR5_SetGateInterruptHandler 000A                  _TMR5_SetGateInterruptHandler 4218  
                                     _CCP3CAP 003F77                                       _CCP4CAP 003F73  
                                     _CCP3CON 003F76                                       _CCP4CON 003F72  
                                     _ADFLTRH 003EE7                                       _ADFLTRL 003EE6  
               __size_of_CCP3_DefaultCallBack 0030                                       _CCP3PPS 003ACF  
                                     _CCP4PPS 003AD0                                       _CLC3CON 003C60  
                                     _CLC3POL 003C61                                       _ADPREVH 003EEE  
                                     _ADPREVL 003EED                              ?_PWM6_Initialize 0001  
                            ?_TMR4_Initialize 0001                                       _ADSTPTH 003EE5  
                                     _ADSTPTL 003EE4                                       ?_printf 00D9  
                             ?_PMD_Initialize 0001                             _UART1_Receive_ISR 34F0  
                                  _getReverse 30C6                                       ?_strlen 0014  
                                     _U1ERRIE 003DFA                                     ?_actSpeed 0022  
                                     _U1ERRIR 003DF9                                 ?_TMR4_10msISR 0001  
                                ?_Default_ISR 0001                          __size_of_UART1_Write 005C  
                          ?_UART1_Receive_ISR 0001                                       _U1RXPPS 003AE5  
                                   ?___xxtofl 001C                            _PWM5_LoadDutyValue 3D20  
                                  _distRightM 009A                       __size_of_TMR5_ReadTimer 0024  
                                     _OSCCON1 0039D9                                       _OSCCON3 0039DB  
                           __end_of_calcSpeed 24E6                                       _IVTLOCK 003FD4  
                          __size_of_vfpfcnvrt 020C                                       _SMT1CLK 003F21  
                                     _OSCTUNE 0039DE                                       _SMT1CPR 003F15  
                                     _SMT1CPW 003F18                                       _PWM5DCH 003F6D  
                                     _PWM5DCL 003F6C                                       _PWM6DCH 003F69  
                                     _PWM6DCL 003F68                                       _PWM7DCH 003F65  
                                     _PWM7DCL 003F64                                       _SMT1SIG 003F22  
                                     _PWM8DCH 003F61                                       _PWM5CON 003F6E  
                                     _PWM8DCL 003F60                                       _SMT1PRH 003F1C  
                                     _PWM6CON 003F6A                                       _SMT1PRL 003F1B  
                                     _PWM7CON 003F66                                       _SMT1PRU 003F1D  
                                   ?_getCurve 0001                                       _SMT1WIN 003F23  
                                     _SMT1TMR 003F12                                       _PWM8CON 003F62  
                                     _SLRCONA 003A43                                       _SLRCONB 003A53  
                                     _SLRCONC 003A63                                       _SLRCOND 003A73  
                                     _SLRCONE 003A83                             __end_of_checkBatt 380E  
                         ??_UART1_Receive_ISR 0012                       __end_of_TMR5_WriteTimer 4054  
                         ?_PWM5_LoadDutyValue 0014                              ?_PWM7_Initialize 0001  
                            ?_TMR5_Initialize 0001                     INTERRUPT_Initialize@state 0014  
                        __size_of_setSteering 01A4                                     _CLCIN0PPS 003AD9  
                                   _CLCIN2PPS 003ADB                                     _CLCIN3PPS 003ADC  
                                     __Hparam 0000                                     ?_setMotor 0018  
                                     __Lparam 0000                      __end_of_UART1_Initialize 3654  
                                     ___aldiv 2DAE                               __size_of___flge 0104  
                                     ___aodiv 283E                                       ___fladd 1040  
                                     ___aomod 29C6                                       ___awdiv 336A  
                                     ___flmul 1502                                       ___fltol 2EBA  
                   __end_of_UART1_Receive_ISR 35B0                                     ?_vfprintf 00D1  
                        ??_PWM5_LoadDutyValue 0016                                  __psmallconst 1000  
                                     __pcinit 3984                     _TMR5_GateInterruptHandler 00E9  
                            ?_PWM8_Initialize 0001                                       __ramtop 1000  
                 __size_of_UART1_Transmit_ISR 0044                 ?_TMR5_SetGateInterruptHandler 0014  
                                     __ptext0 40EC                                       __ptext1 2C6E  
                                     __ptext2 30C6                                       __ptext3 1C38  
                                     __ptext4 4054                                       __ptext5 380E  
                                     __ptext6 20D0                                       __ptext7 1952  
                                     __ptext8 342E                                       __ptext9 3BCA  
                             __size_of_printf 0028                                ??_TMR4_10msISR 0013  
                        __size_of_TMR5_Reload 000E                                    ??_actSpeed 0024  
                             __size_of_strlen 003A                       __end_of_CLC3_Initialize 3FFC  
                       _OSCILLATOR_Initialize 41A6                                     _T2CONbits 003FAC  
                                __size_of_abs 0040                                  __size_of_pad 00C2  
                                  ??___xxtofl 0020                                     _T3CONbits 003FA6  
               __size_of_CCP4_DefaultCallBack 0030                              ___aldiv@dividend 0014  
                                   _T4CONbits 003FA0                      ??_PIN_MANAGER_Initialize 0014  
           __size_of_TMR4_SetInterruptHandler 000A                                     _T2HLTbits 003FAD  
                                   _T5CONbits 003F9A                     ?_TMR4_SetInterruptHandler 0014  
                                   _IPR10bits 00398A                                       _smtDuty 007C  
                                   _T4HLTbits 003FA1                                    ??_getCurve 00DF  
                                   _PIE10bits 00399A                    __size_of_SYSTEM_Initialize 004A  
                        end_of_initialization 39D0                                     _T2RSTbits 003FAF  
              ??_TMR4_DefaultInterruptHandler 0013                                     _T4RSTbits 003FA3  
                                   _PIR10bits 0039AA                                       fputc@fp 0018  
                           ??_SMT1_PR_ACQ_ISR 0011           __end_of_UART1_SetTxInterruptHandler 41F0  
                 _UART1_SetTxInterruptHandler 41E6                                       fputs@fp 0021  
              ??_UART1_SetOverrunErrorHandler 0016                                    ??_setMotor 001A  
                    __size_of_SMT1_Initialize 0030                             __end_of_vfpfcnvrt 22DC  
                           ?_CCP3_SetCallBack 0014                              ___aldiv@quotient 001E  
                                     postdec2 003FDD                             ??_SMT1_PW_ACQ_ISR 0011  
                                     postinc0 003FEE                                       postinc1 003FE6  
                                     postinc2 003FDE                              ?_ADCC_Initialize 0001  
                          ??_CCP3_SetCallBack 0016                                    ??_vfprintf 0039  
            __end_of_ADCC_GetSingleConversion 3E56                             UART1_Write@txData 0014  
                         _UART1_RxDataHandler 3FFC                                       strlen@a 0016  
                                     strlen@s 0014                                   ?_getReverse 0001  
                                   _PORTBbits 003FCB                                     _PORTDbits 003FCD  
                    __size_of_CCP3_CaptureISR 0034                                   ___fladd@grs 00BD  
                          getCurve@deltaRight 00E1                                 ___xxtofl@sign 0024  
                        ?_UART1_RxDataHandler 0001                              ?_TMR5_WriteTimer 0009  
                        setSteering@steeringB 0023                          setSteering@steeringF 0021  
                     TMR5_WriteTimer@timerVal 0009                                   ___flmul@grs 00A7  
                    __size_of_CCP4_CaptureISR 0034             CCP4_DefaultCallBack@capturedValue 0005  
                           ?_CCP4_SetCallBack 0014                  __end_of_INTERRUPT_Initialize 3A22  
                              __end_of___flge 30C6                    __size_of_UART1_Receive_ISR 00C0  
                          ??_CCP4_SetCallBack 0016                                   _CLC3CONbits 003C60  
                                 vfpfcnvrt@ap 00C5                                   vfpfcnvrt@fp 00C1  
                                 vfpfcnvrt@ll 00C9                             __size_of_TMR4_ISR 0038  
                      ?_OSCILLATOR_Initialize 0001                                __end_of_printf 407C  
                 __size_of_PWM8_LoadDutyValue 0034                              ?_CLC3_Initialize 0001  
                              __end_of_strlen 3C04                                _TMR5_ReadTimer 40C8  
                         start_initialization 3984                ??_TMR5_SetGateInterruptHandler 0016  
             __size_of_PIN_MANAGER_Initialize 00CA                                   __end_of_abs 3BCA  
                                 __end_of_pad 34F0                          __size_of_Default_ISR 0002  
                     ??_UART1_SetErrorHandler 0016                      __size_of_CCP3_Initialize 002E  
                       ??_UART1_RxDataHandler 0012                                   putch@txData 0015  
                                  ivt0x8_base 0008                                 _uart1RxBuffer 0068  
                                 _actMotorPow 0088                                 _uart1TxBuffer 0070  
                         __size_of_getReverse 00F8                          __end_of_TMR4_10msISR 424C  
                                _middleOffSet 00FB                                   vfprintf@fmt 00D3  
                                    ??___flge 0032                              ??_PMD_Initialize 0014  
                      __size_of_TMR5_GATE_ISR 0032                                  _oldDistRight 0094  
                    __size_of_CCP4_Initialize 002E                                   __pdataBANK0 00FB  
                  __end_of_PWM7_LoadDutyValue 3DBC                             ??_SMT1_Initialize 0014  
                                    ??_printf 0039                                      ??_strlen 0016  
                      __end_of_TMR5_ReadTimer 40EC                         CCP4_CaptureISR@module 0007  
                                   ___fladd@a 00B6                                     ___fladd@b 00B2  
                         calcMotorPow@addMPow 00CE                      _ADCC_GetSingleConversion 3E24  
                 PWM5_LoadDutyValue@dutyValue 0014                         TMR4_ISR@CountCallBack 003E  
                                   ___flmul@a 002E                                     ___flmul@b 002A  
                                 __pbssCOMRAM 003A                            _UART1_ErrorHandler 00F1  
                               __pcstackBANK0 00A5                             __size_of_actSpeed 0094  
                            ___aodiv@dividend 0014                            _PWM6_LoadDutyValue 3CEC  
                    __size_of_TMR2_Initialize 001C                             __size_of___xxtofl 01B4  
                    _UART1_RxInterruptHandler 00F9                             ??_CCP3_CaptureISR 0003  
                __end_of_CCP3_DefaultCallBack 3EEA                        __size_of_TMR4_CallBack 002E  
                                   _calcSpeed 22DC                             __size_of_getCurve 0268  
                         ?_PWM6_LoadDutyValue 0014                   PWM8_LoadDutyValue@dutyValue 0014  
                fp__UART1_DefaultErrorHandler 0000                                     _checkBatt 377E  
                                _currentSpeed 008C                  ?_UART1_SetRxInterruptHandler 0014  
                                   __pnvBANK0 00E5                            setMotor@motorPower 0018  
                      _PIN_MANAGER_Initialize 32A0                                     _dtoa$3491 00AF  
                    __size_of_PWM5_Initialize 0018                      __size_of_TMR3_Initialize 0038  
                           ?_UART1_Initialize 0001          __end_of_UART1_SetFramingErrorHandler 420E  
       __size_of_UART1_SetFramingErrorHandler 000A                  _UART1_SetFramingErrorHandler 4204  
                                    ?___aldiv 0014               ADCC_GetSingleConversion@channel 0018  
                                    ?___aodiv 0014                                      ?___fladd 00B2  
                                    ?___aomod 0014                             __size_of_setMotor 00E2  
            __end_of_TMR4_SetInterruptHandler 422C                                      ?___awdiv 0014  
                            ___aodiv@quotient 0026             CCP3_DefaultCallBack@capturedValue 0001  
                           ??_CCP4_CaptureISR 0007                                      ?___flmul 002A  
                                    ?___fltol 00BE                            ??_UART1_Initialize 0016  
                                   _distLeftM 0040                                     _distFront 00A3  
                            _uart1RxLastError 0042                                 ??_UART1_Write 0014  
                                   _distRight 009C                          ??_PWM6_LoadDutyValue 0016  
                                   _cycle10ms 00A1                             __size_of_vfprintf 0068  
                             ?_TMR5_ReadTimer 0009                                 ?_calcMotorPow 0001  
                                 __smallconst 1000                                      _CLC3GLS0 003C66  
                                    _CLC3GLS1 003C67                                      _CLC3GLS2 003C68  
                                    _CLC3GLS3 003C69                                     _driveMode 00FC  
         fp__UART1_DefaultOverrunErrorHandler 0000      __end_of_UART1_DefaultOverrunErrorHandler 4250  
   __size_of_UART1_DefaultOverrunErrorHandler 0002            ??_UART1_DefaultOverrunErrorHandler 0012  
           ?_UART1_DefaultOverrunErrorHandler 0001              _UART1_DefaultOverrunErrorHandler 424E  
                                    _CLC3SEL0 003C62                                      _CLC3SEL1 003C63  
                                    _CLC3SEL2 003C64                                      _CLC3SEL3 003C65  
                             _SMT1_PR_ACQ_ISR 3AB8                                 ?_calcSteering 0001  
                    __size_of_PWM6_Initialize 0018                      __size_of_TMR4_Initialize 002C  
                               _TMR5_GATE_ISR 3E58                                     _curveMode 00A2  
                              __size_of_fputc 0096                                      _T2CLKCON 003FAE  
                              __size_of_fputs 0044                                   _U1ERRIRbits 003DF9  
                                    _T4CLKCON 003FA2                                __size_of_putch 000A  
                                  ?_calcSpeed 0001                          _INTERRUPT_Initialize 39D6  
                               ??_setSteering 001F                               ___aldiv@divisor 0018  
                             _SMT1_PW_ACQ_ISR 3930                               ___aldiv@counter 001C  
                                  ?_checkBatt 0001         UART1_SetErrorHandler@interruptHandler 0014  
                                    _IPR1bits 003981                  __end_of_CCP4_DefaultCallBack 3F1A  
                           ??_CCP3_Initialize 0016                                      _IPR3bits 003983  
                                    _PIE1bits 003991                                      _PIE3bits 003993  
                                    _IPR7bits 003987                                      _IPR8bits 003988  
                                    _IPR9bits 003989                                      _PIE7bits 003997  
                                    _PIE8bits 003998                                      _PIE9bits 003999  
                                    i1u302_20 4020                                      i1u302_21 401C  
                                    _IVTBASEH 003FD6                                      _IVTBASEL 003FD5  
                                    _IVTBASEU 003FD7                                      i1u440_20 3B7A  
                                    i1u440_21 3B76                                      i1u441_20 3510  
                                    i1u441_21 350C                                      i1u450_20 3F8A  
                                    i1u450_21 3F86                                      i1u443_20 3548  
                                    i1u442_28 3526                                      i1u443_21 3544  
                                    i1u442_29 3538                 ??_UART1_SetRxInterruptHandler 0016  
                                    i1u451_28 3F90                                      i1u460_20 3C5A  
                                    i1u451_29 3FA2                                      i1u460_21 3C56  
                                    i1u445_20 358C                                      i1u444_28 355E  
                                    i1u445_21 3588                                      i1u444_29 3570  
                                    i1u461_28 3C60                                      i1u461_29 3C72  
                                    i1u446_28 3592                                      i1u439_20 3B56  
                                    i1u446_29 35A6                                      i1u439_21 3B52  
                                    i2u303_40 4036                                      i2u303_41 4032  
                                    i1u466_20 3CD8                                      i1u458_20 3C1E  
                                    i1u466_21 3CD4                                      i1u458_21 3C1A  
                                    i1u459_28 3C24                                      i1u459_29 3C36  
                                    _PIR1bits 0039A1                                      i2u447_40 3EC8  
                                    i2u462_48 3DDA                                      i2u447_41 3EC4  
                                    i2u462_49 3DEE                                      _PIR4bits 0039A4  
                                    i2u464_40 3E70                                      i2u448_40 3EF8  
                                    i2u463_48 3E0E                                      i2u464_41 3E6C  
                                    i2u448_41 3EF4                                      i2u463_49 3E22  
                                    i2u465_48 3E76                                      i2u465_49 3E88  
                                    i2u467_40 3ADC                                      i2u467_41 3AD8  
                                    _PIR6bits 0039A6                                      i2u468_40 395E  
                                    i2u468_41 395A                                      _PIR7bits 0039A7  
                                    _PIR8bits 0039A8                                      _PIR9bits 0039A9  
                                    _SMT1CON0 003F1E                                      _SMT1CON1 003F1F  
                    __size_of_PWM7_Initialize 0018                      __size_of_TMR5_Initialize 004A  
                                    _SMT1STAT 003F20                             _SMT1_Overflow_ISR 407C  
                                    _TMR4_ISR 3CB4                    __end_of_UART1_Transmit_ISR 3B8A  
                               _TMR4_CallBack 3F76                                     _smtPeriod 0048  
               ?_UART1_SetFramingErrorHandler 0014                                 ??_TMR5_Reload 000B  
                 __size_of_PWM5_LoadDutyValue 0034                                     _vfpfcnvrt 20D0  
                          ?_SMT1_Overflow_ISR 0001                             _getBatteryVoltage 41BE  
                                ??_getReverse 0014                                ??_calcMotorPow 00C8  
                                  _ADCON0bits 003EF8                                    _ADCON1bits 003EF9  
                                  _ADCON2bits 003EFA                                    _ADCON3bits 003EFB  
                          ?_getBatteryVoltage 0001                             ??_CCP4_Initialize 0016  
                              ??_calcSteering 00C8                           ??_SMT1_Overflow_ISR 0011  
                   TMR5_ReadTimer@readValHigh 000F                     __size_of_CCP3_SetCallBack 000A  
                              ?_TMR5_GATE_ISR 0001                           __end_of_UART1_Write 38D2  
                    __size_of_PWM8_Initialize 0018                                  _SMT1CON0bits 003F1E  
                                _SMT1CON1bits 003F1F                           ??_getBatteryVoltage 0019  
                                 _INTCON0bits 003FD2                         ?_INTERRUPT_Initialize 0001  
                       __size_of_TMR4_10msISR 0006                          fp__UART1_Receive_ISR 0000  
                      _uart1TxBufferRemaining 004C                             ??_TMR2_Initialize 0014  
                                _uart1RxCount 0043                            __end_of_getReverse 31BE  
                                  _ADSTATbits 003EFC                                      __Hrparam 0000  
                   __end_of_SMT1_Overflow_ISR 40A4                           __end_of_setSteering 283E  
                                  vfprintf@ap 00D5                                      __Lrparam 0000  
                                  vfprintf@fp 00D1                                   _oldDistLeft 0096  
                              ?_TMR4_CallBack 0001                                calcSpeed@speed 00CC  
                   __end_of_getBatteryVoltage 41CE                       ??_OSCILLATOR_Initialize 0014  
                            __size_of___aldiv 010C                              __size_of___aodiv 0188  
                            __size_of___fladd 04C2                              __size_of___aomod 0164  
                            __size_of___awdiv 00C4                              __size_of___flmul 0450  
                            __size_of___fltol 0108                                  _SMT1STATbits 003F20  
                        _CCP3_DefaultCallBack 3EBA                       __end_of_SMT1_PR_ACQ_ISR 3B02  
                                  ?_vfpfcnvrt 00C1                               ___aodiv@divisor 001C  
                           ??_PWM5_Initialize 0014                             ??_TMR3_Initialize 0014  
                             ___aodiv@counter 0024                      _TMR4_SetInterruptHandler 4222  
                                    _actSpeed 36EA          __size_of_UART1_SetRxInterruptHandler 000A  
                                _TMR4_10msISR 4246                                      ___xxtofl 24E6  
                    __size_of_ADCC_Initialize 005C                           __end_of_TMR5_Reload 41DC  
                   __size_of_CCP4_SetCallBack 000A                                      __pivt0x8 0008  
                     __end_of_SMT1_PW_ACQ_ISR 3984                                      _getCurve 1C38  
                                    __ptext10 3B02                                      __ptext11 3654  
                                    __ptext20 2FC2                                      __ptext12 41DC  
                                    __ptext21 1EA0                                      __ptext13 3876  
                                    __ptext30 3D88                                      __ptext22 269A  
                                    __ptext14 3B8A                                      __ptext31 36EA  
                                    __ptext23 3CEC                                      __ptext15 29C6  
                                    __ptext40 41F0                                      __ptext32 2DAE  
                                    __ptext24 3D20                                      __ptext16 283E  
                                    __ptext41 41FA                                      __ptext33 24E6  
                                    __ptext25 22DC                                      __ptext17 377E  
                                    __ptext50 3E8A                                      __ptext42 4204  
                                    __ptext34 2EBA                                      __ptext26 1040  
                                    __ptext18 41BE                                      __ptext51 4146  
                                    __ptext43 420E                                      __ptext35 1502  
                                    __ptext27 2B2A                                      __ptext19 3E24  
                                    __ptext60 3F1A                                      __ptext52 415E  
                                    __ptext44 3A6C                                      __ptext36 336A  
                                    __ptext28 31BE                                      __ptext61 422C  
                                    __ptext53 4176                                      __ptext45 4218  
                                    __ptext37 3A22                                      __ptext29 3D54  
                                    __ptext70 4250                                      __ptext62 3F48  
                                    __ptext54 418E                                      __ptext46 3FA4  
                                    __ptext38 35B0                                      __ptext71 4240  
                                    __ptext63 4236                                      __ptext55 40A4  
                                    __ptext47 4222                                      __ptext39 41E6  
                                    __ptext80 3DF0                                      __ptext72 3FFC  
                                    __ptext64 38D2                                      __ptext56 32A0  
                                    __ptext48 3C7A                                      __ptext81 3EEA  
                                    __ptext73 3CB4                                      __ptext65 3C04  
                                    __ptext57 41A6                                      __ptext49 412A  
                                    __ptext90 0000                                      __ptext82 3E58  
                                    __ptext74 3F76                                      __ptext66 3B46  
                                    __ptext58 39D6                                      __ptext83 410C  
                                    __ptext75 4246                                      __ptext67 3C40  
                                    __ptext59 3FD0                                      __ptext84 41CE  
                                    __ptext76 4252                                      __ptext68 34F0  
                                    __ptext85 4028                                      __ptext77 4254  
                                    __ptext69 424E                                      __ptext86 40C8  
                                    __ptext78 3DBC                                      __ptext87 3AB8  
                                    __ptext79 3EBA                                      __ptext88 3930  
                                    __ptext89 407C                                      _distLeft 009E  
              __size_of_UART1_SetErrorHandler 000A                                   ??_calcSpeed 00C8  
               __end_of_UART1_SetErrorHandler 4218                                    _T3GCONbits 003FA7  
                                 ??_checkBatt 0036                             ??_TMR4_Initialize 0016  
                           ??_PWM6_Initialize 0014                                 __size_of_main 0020  
                               __size_of_dtoa 02E6                                      _oldSpeed 008A  
                                  _T5GCONbits 003F9B                                 __size_of_loop 0140  
                             _SMT1_Initialize 3E8A                                   _IVTLOCKbits 003FD4  
                                    _setMotor 31BE                                      _setSpeed 008E  
                    __size_of_TMR5_WriteTimer 002C                     _UART1_OverrunErrorHandler 00F3  
UART1_SetOverrunErrorHandler@interruptHandler 0014                                      isa$xinst 000000  
          __size_of_UART1_DefaultErrorHandler 0006                    ??_ADCC_GetSingleConversion 0016  
                  ?_UART1_DefaultErrorHandler 0001                         ?_CCP3_DefaultCallBack 0001  
                                    _vfprintf 380E                                     printf@fmt 00D9  
                  __end_of_PWM8_LoadDutyValue 3D88                               _CCP3_CaptureISR 3DBC  
                                 _UART1_Write 3876                         fp__UART1_Transmit_ISR 0000  
                           ??_TMR5_Initialize 0016                             ??_PWM7_Initialize 0014  
         fp__TMR5_DefaultGateInterruptHandler 0000      __end_of_TMR5_DefaultGateInterruptHandler 412A  
   __size_of_TMR5_DefaultGateInterruptHandler 001E            ??_TMR5_DefaultGateInterruptHandler 0011  
           ?_TMR5_DefaultGateInterruptHandler 0001              _TMR5_DefaultGateInterruptHandler 410C  
                            ___aomod@dividend 0014                                _battCheckCount 0092  
                               ??_Default_ISR 0001                ??_UART1_SetFramingErrorHandler 0016  
                                _reverseCount 0098                               ??_TMR5_GATE_ISR 0011  
                 __end_of_UART1_RxDataHandler 4028                                   _uart1RxHead 0045  
                        _CCP4_DefaultCallBack 3EEA                                   _uart1TxHead 0047  
                                 _uart1RxTail 0044                                   _uart1TxTail 0046  
                      ??_INTERRUPT_Initialize 0014                            _PWM7_LoadDutyValue 3D88  
                                    intlevel1 0000                                      intlevel2 0000  
                    __size_of_CLC3_Initialize 002C                                   _setSteering 269A  
                             _CCP4_CaptureISR 3DF0                       ?_PIN_MANAGER_Initialize 0001  
                           ??_PWM8_Initialize 0014                           ?_PWM7_LoadDutyValue 0014  
                        __end_of_calcMotorPow 2C6E                               ??_TMR4_CallBack 0013  
                  __size_of_SMT1_Overflow_ISR 0028                          __end_of_calcSteering 20D0  
                         _uart1RxStatusBuffer 0060                                      printf@ap 00DD  
                            ??_TMR5_ReadTimer 000B                    __size_of_getBatteryVoltage 0010  
UART1_SetFramingErrorHandler@interruptHandler 0014             __end_of_UART1_DefaultErrorHandler 4246  
                             ___aomod@divisor 001C                                   ??_vfpfcnvrt 00C7  
                                 _reverseTime 0086                               ___aomod@counter 0024  
                            ?_SMT1_PR_ACQ_ISR 0001                                   _TMR5_Reload 41CE  
                                  _SMT1SIGPPS 003AD2                                    _SMT1WINPPS 003AD1  
                        ??_PWM7_LoadDutyValue 0016                                 actSpeed@speed 0024  
                       ?_CCP4_DefaultCallBack 0005                     calcMotorPow@oldSpeedDelta 00CC  
                            _CCP3_SetCallBack 4236                     __size_of_UART1_Initialize 00A4  
                                ___aldiv@sign 001D                              ?_SMT1_PW_ACQ_ISR 0001  
                             _CCP3_Initialize 3F48                   PWM6_LoadDutyValue@dutyValue 0014  
                           calcSteering@delta 00CC                      _UART1_TxInterruptHandler 00F7  
                               ___fladd@signs 00BA                           __end_of_Default_ISR 4256  
                     __end_of_SMT1_Initialize 3EBA                                  ___aodiv@sign 0025  
              __end_of_PIN_MANAGER_Initialize 336A                             ??_ADCC_Initialize 0014  
                                ___fladd@aexp 00BB                                  ___fladd@bexp 00BC  
                ?_UART1_SetTxInterruptHandler 0014                                  ___aomod@sign 0025  
                     __end_of_CCP3_CaptureISR 3DF0  
