

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Jan 22 07:33:50 2024

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F46K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1
    68                           	psect	text54,global,reloc=2,class=CODE,delta=1
    69                           	psect	text55,global,reloc=2,class=CODE,delta=1
    70                           	psect	text56,global,reloc=2,class=CODE,delta=1
    71                           	psect	text57,global,reloc=2,class=CODE,delta=1
    72                           	psect	text58,global,reloc=2,class=CODE,delta=1
    73                           	psect	text59,global,reloc=2,class=CODE,delta=1
    74                           	psect	text60,global,reloc=2,class=CODE,delta=1
    75                           	psect	text61,global,reloc=2,class=CODE,delta=1
    76                           	psect	text62,global,reloc=2,class=CODE,delta=1
    77                           	psect	text63,global,reloc=2,class=CODE,delta=1
    78                           	psect	text64,global,reloc=4,class=CODE,delta=1
    79                           	psect	text65,global,reloc=2,class=CODE,delta=1
    80                           	psect	text66,global,reloc=4,class=CODE,delta=1
    81                           	psect	text67,global,reloc=2,class=CODE,delta=1
    82                           	psect	text68,global,reloc=2,class=CODE,delta=1
    83                           	psect	text69,global,reloc=2,class=CODE,delta=1
    84                           	psect	text70,global,reloc=2,class=CODE,delta=1
    85                           	psect	text71,global,reloc=2,class=CODE,delta=1
    86                           	psect	text72,global,reloc=4,class=CODE,delta=1
    87                           	psect	text73,global,reloc=2,class=CODE,delta=1
    88                           	psect	text74,global,reloc=2,class=CODE,delta=1
    89                           	psect	text75,global,reloc=2,class=CODE,delta=1
    90                           	psect	text76,global,reloc=4,class=CODE,delta=1
    91                           	psect	text77,global,reloc=4,class=CODE,delta=1
    92                           	psect	text78,global,reloc=2,class=CODE,delta=1
    93                           	psect	text79,global,reloc=2,class=CODE,delta=1
    94                           	psect	text80,global,reloc=2,class=CODE,delta=1
    95                           	psect	text81,global,reloc=2,class=CODE,delta=1
    96                           	psect	text82,global,reloc=4,class=CODE,delta=1
    97                           	psect	text83,global,reloc=4,class=CODE,delta=1
    98                           	psect	text84,global,reloc=4,class=CODE,delta=1
    99                           	psect	text85,global,reloc=4,class=CODE,delta=1
   100                           	psect	text86,global,reloc=2,class=CODE,delta=1
   101                           	psect	text87,global,reloc=4,class=CODE,delta=1
   102                           	psect	text88,global,reloc=2,class=CODE,delta=1
   103                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   104                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   105                           	psect	text89,global,reloc=2,class=CODE,delta=1
   106                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   107                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   108                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   109  0000                     
   110                           ; Version 2.20
   111                           ; Generated 05/05/2020 GMT
   112                           ; 
   113                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   114                           ; All rights reserved.
   115                           ; 
   116                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   117                           ; 
   118                           ; Redistribution and use in source and binary forms, with or without modification, are
   119                           ; permitted provided that the following conditions are met:
   120                           ; 
   121                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   122                           ;        conditions and the following disclaimer.
   123                           ; 
   124                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   125                           ;        of conditions and the following disclaimer in the documentation and/or other
   126                           ;        materials provided with the distribution.
   127                           ; 
   128                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   129                           ;        software without specific prior written permission.
   130                           ; 
   131                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   132                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   133                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   134                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   135                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   136                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   137                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   138                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   139                           ; 
   140                           ; 
   141                           ; Code-generator required, PIC18F46K42 Definitions
   142                           ; 
   143                           ; SFR Addresses
   144  0000                     
   145                           	psect	nvCOMRAM
   146  00004C                     __pnvCOMRAM:
   147                           	callstack 0
   148  00004C                     _uart1TxBufferRemaining:
   149                           	callstack 0
   150  00004C                     	ds	1
   151                           
   152                           	psect	nvBANK0
   153  0000E2                     __pnvBANK0:
   154                           	callstack 0
   155  0000E2                     _CCP4_CallBack:
   156                           	callstack 0
   157  0000E2                     	ds	2
   158  0000E4                     _CCP3_CallBack:
   159                           	callstack 0
   160  0000E4                     	ds	2
   161  0000E6                     _TMR4_InterruptHandler:
   162                           	callstack 0
   163  0000E6                     	ds	2
   164  0000E8                     _timer3ReloadVal:
   165                           	callstack 0
   166  0000E8                     	ds	2
   167  0000EA                     _TMR5_GateInterruptHandler:
   168                           	callstack 0
   169  0000EA                     	ds	2
   170  0000EC                     _timer5ReloadVal:
   171                           	callstack 0
   172  0000EC                     	ds	2
   173  0000EE                     _UART1_ErrorHandler:
   174                           	callstack 0
   175  0000EE                     	ds	2
   176  0000F0                     _UART1_OverrunErrorHandler:
   177                           	callstack 0
   178  0000F0                     	ds	2
   179  0000F2                     _UART1_FramingErrorHandler:
   180                           	callstack 0
   181  0000F2                     	ds	2
   182  0000F4                     _UART1_TxInterruptHandler:
   183                           	callstack 0
   184  0000F4                     	ds	2
   185  0000F6                     _UART1_RxInterruptHandler:
   186                           	callstack 0
   187  0000F6                     	ds	2
   188  0000                     _PIE10bits	set	14746
   189  0000                     _PIR10bits	set	14762
   190  0000                     _PIE9bits	set	14745
   191  0000                     _PIR9bits	set	14761
   192  0000                     _PIR4bits	set	14756
   193  0000                     _PIR1bits	set	14753
   194  0000                     _PIE1bits	set	14737
   195  0000                     _PIE7bits	set	14743
   196  0000                     _PIR7bits	set	14759
   197  0000                     _PIR6bits	set	14758
   198  0000                     _PIE8bits	set	14744
   199  0000                     _PIR8bits	set	14760
   200  0000                     _IPR9bits	set	14729
   201  0000                     _IPR7bits	set	14727
   202  0000                     _IPR10bits	set	14730
   203  0000                     _IPR8bits	set	14728
   204  0000                     _IPR1bits	set	14721
   205  0000                     _IPR3bits	set	14723
   206  0000                     _PIE3bits	set	14739
   207  0000                     _PMD7	set	14791
   208  0000                     _PMD6	set	14790
   209  0000                     _PMD5	set	14789
   210  0000                     _PMD4	set	14788
   211  0000                     _PMD3	set	14787
   212  0000                     _PMD2	set	14786
   213  0000                     _PMD1	set	14785
   214  0000                     _PMD0	set	14784
   215  0000                     _OSCTUNE	set	14814
   216  0000                     _OSCFRQ	set	14815
   217  0000                     _OSCEN	set	14813
   218  0000                     _OSCCON3	set	14811
   219  0000                     _OSCCON1	set	14809
   220  0000                     _CCP4PPS	set	15056
   221  0000                     _SMT1SIGPPS	set	15058
   222  0000                     _CLCIN2PPS	set	15067
   223  0000                     _RB3PPS	set	14859
   224  0000                     _RA3PPS	set	14851
   225  0000                     _SMT1WINPPS	set	15057
   226  0000                     _CLCIN0PPS	set	15065
   227  0000                     _RA4PPS	set	14852
   228  0000                     _T5GPPS	set	15049
   229  0000                     _RA0PPS	set	14848
   230  0000                     _U1RXPPS	set	15077
   231  0000                     _RA1PPS	set	14849
   232  0000                     _CLCIN3PPS	set	15068
   233  0000                     _CCP3PPS	set	15055
   234  0000                     _INLVLE	set	14980
   235  0000                     _INLVLD	set	14964
   236  0000                     _INLVLC	set	14948
   237  0000                     _INLVLB	set	14932
   238  0000                     _INLVLA	set	14916
   239  0000                     _SLRCONE	set	14979
   240  0000                     _SLRCOND	set	14963
   241  0000                     _SLRCONC	set	14947
   242  0000                     _SLRCONB	set	14931
   243  0000                     _SLRCONA	set	14915
   244  0000                     _ODCOND	set	14962
   245  0000                     _ODCONC	set	14946
   246  0000                     _ODCONB	set	14930
   247  0000                     _ODCONA	set	14914
   248  0000                     _ODCONE	set	14978
   249  0000                     _RD1I2C	set	14971
   250  0000                     _RD0I2C	set	14970
   251  0000                     _RC4I2C	set	14955
   252  0000                     _RC3I2C	set	14954
   253  0000                     _RB2I2C	set	14939
   254  0000                     _RB1I2C	set	14938
   255  0000                     _WPUC	set	14945
   256  0000                     _WPUA	set	14913
   257  0000                     _WPUB	set	14929
   258  0000                     _WPUE	set	14977
   259  0000                     _WPUD	set	14961
   260  0000                     _ANSELA	set	14912
   261  0000                     _ANSELE	set	14976
   262  0000                     _ANSELB	set	14928
   263  0000                     _ANSELC	set	14944
   264  0000                     _ANSELD	set	14960
   265  0000                     _CLC3CON	set	15456
   266  0000                     _CLC3GLS3	set	15465
   267  0000                     _CLC3GLS2	set	15464
   268  0000                     _CLC3GLS1	set	15463
   269  0000                     _CLC3GLS0	set	15462
   270  0000                     _CLC3SEL3	set	15461
   271  0000                     _CLC3SEL2	set	15460
   272  0000                     _CLC3SEL1	set	15459
   273  0000                     _CLC3SEL0	set	15458
   274  0000                     _CLC3POL	set	15457
   275  0000                     _CLC3CONbits	set	15456
   276  0000                     _U1RXB	set	15848
   277  0000                     _U1TXB	set	15850
   278  0000                     _U1ERRIRbits	set	15865
   279  0000                     _U1ERRIE	set	15866
   280  0000                     _U1ERRIR	set	15865
   281  0000                     _U1UIR	set	15864
   282  0000                     _U1FIFO	set	15863
   283  0000                     _U1BRGH	set	15862
   284  0000                     _U1BRGL	set	15861
   285  0000                     _U1CON2	set	15860
   286  0000                     _U1CON1	set	15859
   287  0000                     _U1CON0	set	15858
   288  0000                     _U1P3H	set	15857
   289  0000                     _U1P3L	set	15856
   290  0000                     _U1P2H	set	15855
   291  0000                     _U1P2L	set	15854
   292  0000                     _U1P1H	set	15853
   293  0000                     _U1P1L	set	15852
   294  0000                     _ADCON1bits	set	16121
   295  0000                     _ADERRL	set	16098
   296  0000                     _ADERRH	set	16099
   297  0000                     _ADPREVL	set	16109
   298  0000                     _ADPREVH	set	16110
   299  0000                     _ADFLTRL	set	16102
   300  0000                     _ADFLTRH	set	16103
   301  0000                     _ADSTATbits	set	16124
   302  0000                     _ADACCL	set	16104
   303  0000                     _ADACCH	set	16105
   304  0000                     _ADCON2bits	set	16122
   305  0000                     _ADCNT	set	16107
   306  0000                     _ADCON3bits	set	16123
   307  0000                     _ADRESL	set	16111
   308  0000                     _ADRESH	set	16112
   309  0000                     _ADCON0bits	set	16120
   310  0000                     _ADCON0	set	16120
   311  0000                     _ADCLK	set	16127
   312  0000                     _ADACT	set	16126
   313  0000                     _ADREF	set	16125
   314  0000                     _ADSTAT	set	16124
   315  0000                     _ADCON3	set	16123
   316  0000                     _ADCON2	set	16122
   317  0000                     _ADCON1	set	16121
   318  0000                     _ADPREH	set	16119
   319  0000                     _ADPREL	set	16118
   320  0000                     _ADCAP	set	16117
   321  0000                     _ADACQH	set	16116
   322  0000                     _ADACQL	set	16115
   323  0000                     _ADPCH	set	16113
   324  0000                     _ADRPT	set	16108
   325  0000                     _ADACCU	set	16106
   326  0000                     _ADSTPTH	set	16101
   327  0000                     _ADSTPTL	set	16100
   328  0000                     _ADUTHH	set	16097
   329  0000                     _ADUTHL	set	16096
   330  0000                     _ADLTHH	set	16095
   331  0000                     _ADLTHL	set	16094
   332  0000                     _SMT1TMR	set	16146
   333  0000                     _SMT1CPR	set	16149
   334  0000                     _SMT1CPW	set	16152
   335  0000                     _SMT1PR	set	16155
   336  0000                     _CCPTMRS0bits	set	16222
   337  0000                     _SMT1STATbits	set	16160
   338  0000                     _SMT1CON0bits	set	16158
   339  0000                     _SMT1CON1bits	set	16159
   340  0000                     _SMT1PRL	set	16155
   341  0000                     _SMT1PRH	set	16156
   342  0000                     _SMT1PRU	set	16157
   343  0000                     _SMT1SIG	set	16162
   344  0000                     _SMT1WIN	set	16163
   345  0000                     _SMT1CLK	set	16161
   346  0000                     _SMT1STAT	set	16160
   347  0000                     _SMT1CON1	set	16159
   348  0000                     _SMT1CON0	set	16158
   349  0000                     _CCPTMRS1bits	set	16223
   350  0000                     _PORTBbits	set	16331
   351  0000                     _CCPR4L	set	16240
   352  0000                     _CCPR4H	set	16241
   353  0000                     _CCP4CAP	set	16243
   354  0000                     _CCP4CON	set	16242
   355  0000                     _CCPR3L	set	16244
   356  0000                     _CCPR3H	set	16245
   357  0000                     _CCP3CAP	set	16247
   358  0000                     _CCP3CON	set	16246
   359  0000                     _PORTDbits	set	16333
   360  0000                     _PR2	set	16299
   361  0000                     _TMR2	set	16298
   362  0000                     _T2CONbits	set	16300
   363  0000                     _T2RSTbits	set	16303
   364  0000                     _T2HLTbits	set	16301
   365  0000                     _T2CON	set	16300
   366  0000                     _T2TMR	set	16298
   367  0000                     _T2PR	set	16299
   368  0000                     _T2RST	set	16303
   369  0000                     _T2HLT	set	16301
   370  0000                     _T2CLKCON	set	16302
   371  0000                     _PWM6DCL	set	16232
   372  0000                     _PWM6DCH	set	16233
   373  0000                     _PWM6CON	set	16234
   374  0000                     _PWM5DCL	set	16236
   375  0000                     _PWM5DCH	set	16237
   376  0000                     _PWM5CON	set	16238
   377  0000                     _PWM8DCL	set	16224
   378  0000                     _PWM8DCH	set	16225
   379  0000                     _PWM8CON	set	16226
   380  0000                     _PWM7DCL	set	16228
   381  0000                     _PWM7DCH	set	16229
   382  0000                     _PWM7CON	set	16230
   383  0000                     _PR4	set	16287
   384  0000                     _TMR4	set	16286
   385  0000                     _T4CONbits	set	16288
   386  0000                     _T4RSTbits	set	16291
   387  0000                     _T4HLTbits	set	16289
   388  0000                     _T4CON	set	16288
   389  0000                     _T4TMR	set	16286
   390  0000                     _T4PR	set	16287
   391  0000                     _T4RST	set	16291
   392  0000                     _T4HLT	set	16289
   393  0000                     _T4CLKCON	set	16290
   394  0000                     _T3GCONbits	set	16295
   395  0000                     _T3CONbits	set	16294
   396  0000                     _T3CON	set	16294
   397  0000                     _TMR3L	set	16292
   398  0000                     _TMR3H	set	16293
   399  0000                     _T3CLK	set	16297
   400  0000                     _T3GATE	set	16296
   401  0000                     _T3GCON	set	16295
   402  0000                     _T5GCONbits	set	16283
   403  0000                     _T5CONbits	set	16282
   404  0000                     _T5CON	set	16282
   405  0000                     _TMR5L	set	16280
   406  0000                     _TMR5H	set	16281
   407  0000                     _T5CLK	set	16285
   408  0000                     _T5GATE	set	16284
   409  0000                     _T5GCON	set	16283
   410  0000                     _IVTBASEL	set	16341
   411  0000                     _IVTBASEH	set	16342
   412  0000                     _IVTBASEU	set	16343
   413  0000                     _IVTLOCKbits	set	16340
   414  0000                     _IVTLOCK	set	16340
   415  0000                     _INTCON0bits	set	16338
   416  0000                     _TRISD	set	16325
   417  0000                     _TRISC	set	16324
   418  0000                     _TRISB	set	16323
   419  0000                     _TRISA	set	16322
   420  0000                     _TRISE	set	16326
   421  0000                     _LATC	set	16316
   422  0000                     _LATB	set	16315
   423  0000                     _LATA	set	16314
   424  0000                     _LATD	set	16317
   425  0000                     _LATE	set	16318
   426  0000                     _GIE	set	130711
   427                           
   428                           	psect	smallconst
   429  001000                     __psmallconst:
   430                           	callstack 0
   431  001000  00                 	db	0
   432  001001                     STR_1:
   433  001001  4F                 	db	79	;'O'
   434  001002  75                 	db	117	;'u'
   435  001003  74                 	db	116	;'t'
   436  001004  20                 	db	32
   437  001005  7C                 	db	124
   438  001006  20                 	db	32
   439  001007  64                 	db	100	;'d'
   440  001008  4C                 	db	76	;'L'
   441  001009  3D                 	db	61	;'='
   442  00100A  20                 	db	32
   443  00100B  25                 	db	37
   444  00100C  64                 	db	100	;'d'
   445  00100D  20                 	db	32
   446  00100E  7C                 	db	124
   447  00100F  20                 	db	32
   448  001010  64                 	db	100	;'d'
   449  001011  52                 	db	82	;'R'
   450  001012  3D                 	db	61	;'='
   451  001013  20                 	db	32
   452  001014  25                 	db	37
   453  001015  64                 	db	100	;'d'
   454  001016  00                 	db	0
   455  001017                     STR_3:
   456  001017  20                 	db	32
   457  001018  20                 	db	32
   458  001019  20                 	db	32
   459  00101A  43                 	db	67	;'C'
   460  00101B  75                 	db	117	;'u'
   461  00101C  72                 	db	114	;'r'
   462  00101D  76                 	db	118	;'v'
   463  00101E  65                 	db	101	;'e'
   464  00101F  52                 	db	82	;'R'
   465  001020  69                 	db	105	;'i'
   466  001021  67                 	db	103	;'g'
   467  001022  68                 	db	104	;'h'
   468  001023  74                 	db	116	;'t'
   469  001024  00                 	db	0
   470  001025                     STR_2:
   471  001025  20                 	db	32
   472  001026  20                 	db	32
   473  001027  20                 	db	32
   474  001028  43                 	db	67	;'C'
   475  001029  75                 	db	117	;'u'
   476  00102A  72                 	db	114	;'r'
   477  00102B  76                 	db	118	;'v'
   478  00102C  65                 	db	101	;'e'
   479  00102D  4C                 	db	76	;'L'
   480  00102E  65                 	db	101	;'e'
   481  00102F  66                 	db	102	;'f'
   482  001030  74                 	db	116	;'t'
   483  001031  00                 	db	0
   484  001032                     STR_8:
   485  001032  41                 	db	65	;'A'
   486  001033  66                 	db	102	;'f'
   487  001034  74                 	db	116	;'t'
   488  001035  65                 	db	101	;'e'
   489  001036  72                 	db	114	;'r'
   490  001037  43                 	db	67	;'C'
   491  001038  75                 	db	117	;'u'
   492  001039  72                 	db	114	;'r'
   493  00103A  76                 	db	118	;'v'
   494  00103B  65                 	db	101	;'e'
   495  00103C  0A                 	db	10
   496  00103D  00                 	db	0
   497  00103E                     STR_6:
   498  00103E  64                 	db	100	;'d'
   499  00103F  69                 	db	105	;'i'
   500  001040  73                 	db	115	;'s'
   501  001041  74                 	db	116	;'t'
   502  001042  4C                 	db	76	;'L'
   503  001043  3D                 	db	61	;'='
   504  001044  20                 	db	32
   505  001045  25                 	db	37
   506  001046  64                 	db	100	;'d'
   507  001047  0A                 	db	10
   508  001048  00                 	db	0
   509  001049                     STR_7:
   510  001049  64                 	db	100	;'d'
   511  00104A  69                 	db	105	;'i'
   512  00104B  73                 	db	115	;'s'
   513  00104C  74                 	db	116	;'t'
   514  00104D  52                 	db	82	;'R'
   515  00104E  3D                 	db	61	;'='
   516  00104F  20                 	db	32
   517  001050  25                 	db	37
   518  001051  64                 	db	100	;'d'
   519  001052  0A                 	db	10
   520  001053  00                 	db	0
   521  001054                     STR_9:
   522  001054  4F                 	db	79	;'O'
   523  001055  75                 	db	117	;'u'
   524  001056  74                 	db	116	;'t'
   525  001057  43                 	db	67	;'C'
   526  001058  75                 	db	117	;'u'
   527  001059  72                 	db	114	;'r'
   528  00105A  76                 	db	118	;'v'
   529  00105B  65                 	db	101	;'e'
   530  00105C  0A                 	db	10
   531  00105D  00                 	db	0
   532  00105E                     STR_5:
   533  00105E  49                 	db	73	;'I'
   534  00105F  6E                 	db	110	;'n'
   535  001060  43                 	db	67	;'C'
   536  001061  75                 	db	117	;'u'
   537  001062  72                 	db	114	;'r'
   538  001063  76                 	db	118	;'v'
   539  001064  65                 	db	101	;'e'
   540  001065  0A                 	db	10
   541  001066  00                 	db	0
   542  001067  00                 	db	0	; dummy byte at the end
   543  0000                     
   544                           ; #config settings
   545                           
   546                           	psect	cinit
   547  0039F4                     __pcinit:
   548                           	callstack 0
   549  0039F4                     start_initialization:
   550                           	callstack 0
   551  0039F4                     __initialization:
   552                           	callstack 0
   553                           
   554                           ; Clear objects allocated to BANK1 (32 bytes)
   555  0039F4  EE00  F100         	lfsr	0,__pbssBANK1
   556  0039F8  0E20               	movlw	32
   557  0039FA                     clear_0:
   558  0039FA  6AEE               	clrf	postinc0,c
   559  0039FC  06E8               	decf	wreg,f,c
   560  0039FE  E1FD               	bnz	clear_0
   561                           
   562                           ; Clear objects allocated to BANK0 (66 bytes)
   563  003A00  EE00  F060         	lfsr	0,__pbssBANK0
   564  003A04  0E42               	movlw	66
   565  003A06                     clear_1:
   566  003A06  6AEE               	clrf	postinc0,c
   567  003A08  06E8               	decf	wreg,f,c
   568  003A0A  E1FD               	bnz	clear_1
   569                           
   570                           ; Clear objects allocated to COMRAM (17 bytes)
   571  003A0C  EE00  F03B         	lfsr	0,__pbssCOMRAM
   572  003A10  0E11               	movlw	17
   573  003A12                     clear_2:
   574  003A12  6AEE               	clrf	postinc0,c
   575  003A14  06E8               	decf	wreg,f,c
   576  003A16  E1FD               	bnz	clear_2
   577                           
   578                           ;
   579                           ; Setup IVTBASE
   580                           ;
   581  003A18  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   582  003A1A  6ED5               	movwf	213,c
   583  003A1C  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   584  003A1E  6ED6               	movwf	214,c
   585  003A20  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   586  003A22  6ED7               	movwf	215,c
   587  003A24                     end_of_initialization:
   588                           	callstack 0
   589  003A24                     __end_of__initialization:
   590                           	callstack 0
   591  003A24  0100               	movlb	0
   592  003A26  EF16  F01F         	goto	_main	;jump to C main() function
   593                           
   594                           	psect	bssCOMRAM
   595  00003B                     __pbssCOMRAM:
   596                           	callstack 0
   597  00003B                     _prec:
   598                           	callstack 0
   599  00003B                     	ds	2
   600  00003D                     _flags:
   601                           	callstack 0
   602  00003D                     	ds	2
   603  00003F                     TMR4_ISR@CountCallBack:
   604                           	callstack 0
   605  00003F                     	ds	2
   606  000041                     _reverseCount:
   607                           	callstack 0
   608  000041                     	ds	1
   609  000042                     _uart1RxLastError:
   610                           	callstack 0
   611  000042                     	ds	1
   612  000043                     _uart1RxCount:
   613                           	callstack 0
   614  000043                     	ds	1
   615  000044                     _uart1RxTail:
   616                           	callstack 0
   617  000044                     	ds	1
   618  000045                     _uart1RxHead:
   619                           	callstack 0
   620  000045                     	ds	1
   621  000046                     _uart1TxTail:
   622                           	callstack 0
   623  000046                     	ds	1
   624  000047                     _uart1TxHead:
   625                           	callstack 0
   626  000047                     	ds	1
   627  000048                     _smtPeriod:
   628                           	callstack 0
   629  000048                     	ds	4
   630                           
   631                           	psect	bssBANK0
   632  000060                     __pbssBANK0:
   633                           	callstack 0
   634  000060                     _uart1RxStatusBuffer:
   635                           	callstack 0
   636  000060                     	ds	8
   637  000068                     _uart1RxBuffer:
   638                           	callstack 0
   639  000068                     	ds	8
   640  000070                     _uart1TxBuffer:
   641                           	callstack 0
   642  000070                     	ds	8
   643  000078                     _smtWay:
   644                           	callstack 0
   645  000078                     	ds	4
   646  00007C                     _smtDuty:
   647                           	callstack 0
   648  00007C                     	ds	4
   649  000080                     _nout:
   650                           	callstack 0
   651  000080                     	ds	2
   652  000082                     _width:
   653                           	callstack 0
   654  000082                     	ds	2
   655  000084                     _BatteryVolt:
   656                           	callstack 0
   657  000084                     	ds	2
   658  000086                     _actMotorPow:
   659                           	callstack 0
   660  000086                     	ds	2
   661  000088                     _oldSpeed:
   662                           	callstack 0
   663  000088                     	ds	2
   664  00008A                     _currentSpeed:
   665                           	callstack 0
   666  00008A                     	ds	2
   667  00008C                     _setSpeed:
   668                           	callstack 0
   669  00008C                     	ds	2
   670  00008E                     _motPow:
   671                           	callstack 0
   672  00008E                     	ds	2
   673  000090                     _oldDistRight:
   674                           	callstack 0
   675  000090                     	ds	2
   676  000092                     _oldDistLeft:
   677                           	callstack 0
   678  000092                     	ds	2
   679  000094                     _distRightM:
   680                           	callstack 0
   681  000094                     	ds	2
   682  000096                     _distRight:
   683                           	callstack 0
   684  000096                     	ds	2
   685  000098                     _distLeftM:
   686                           	callstack 0
   687  000098                     	ds	2
   688  00009A                     _distLeft:
   689                           	callstack 0
   690  00009A                     	ds	2
   691  00009C                     _delay:
   692                           	callstack 0
   693  00009C                     	ds	1
   694  00009D                     _cycle10ms:
   695                           	callstack 0
   696  00009D                     	ds	1
   697  00009E                     _curveMode:
   698                           	callstack 0
   699  00009E                     	ds	1
   700  00009F                     _driveMode:
   701                           	callstack 0
   702  00009F                     	ds	1
   703  0000A0                     _distFront:
   704                           	callstack 0
   705  0000A0                     	ds	2
   706                           
   707                           	psect	bssBANK1
   708  000100                     __pbssBANK1:
   709                           	callstack 0
   710  000100                     _dbuf:
   711                           	callstack 0
   712  000100                     	ds	32
   713                           
   714                           	psect	cstackBANK0
   715  0000A2                     __pcstackBANK0:
   716                           	callstack 0
   717  0000A2                     ??_dtoa:
   718  0000A2                     ___flmul@sign:
   719                           	callstack 0
   720                           
   721                           ; 1 bytes @ 0x0
   722  0000A2                     	ds	1
   723  0000A3                     ___flmul@aexp:
   724                           	callstack 0
   725                           
   726                           ; 1 bytes @ 0x1
   727  0000A3                     	ds	1
   728  0000A4                     ___flmul@grs:
   729                           	callstack 0
   730                           
   731                           ; 4 bytes @ 0x2
   732  0000A4                     	ds	4
   733  0000A8                     ___flmul@bexp:
   734                           	callstack 0
   735                           
   736                           ; 1 bytes @ 0x6
   737  0000A8                     	ds	1
   738  0000A9                     ___flmul@prod:
   739                           	callstack 0
   740                           
   741                           ; 4 bytes @ 0x7
   742  0000A9                     	ds	1
   743  0000AA                     _dtoa$3483:
   744                           	callstack 0
   745                           
   746                           ; 2 bytes @ 0x8
   747  0000AA                     	ds	2
   748  0000AC                     dtoa@p:
   749                           	callstack 0
   750                           
   751                           ; 2 bytes @ 0xA
   752  0000AC                     	ds	1
   753  0000AD                     ___flmul@temp:
   754                           	callstack 0
   755                           
   756                           ; 2 bytes @ 0xB
   757  0000AD                     	ds	1
   758  0000AE                     dtoa@w:
   759                           	callstack 0
   760                           
   761                           ; 2 bytes @ 0xC
   762  0000AE                     	ds	1
   763  0000AF                     ??___fladd:
   764                           
   765                           ; 1 bytes @ 0xD
   766  0000AF                     	ds	1
   767  0000B0                     dtoa@s:
   768                           	callstack 0
   769                           
   770                           ; 2 bytes @ 0xE
   771  0000B0                     	ds	2
   772  0000B2                     dtoa@n:
   773                           	callstack 0
   774                           
   775                           ; 8 bytes @ 0x10
   776  0000B2                     	ds	1
   777  0000B3                     ___fladd@signs:
   778                           	callstack 0
   779                           
   780                           ; 1 bytes @ 0x11
   781  0000B3                     	ds	1
   782  0000B4                     ___fladd@aexp:
   783                           	callstack 0
   784                           
   785                           ; 1 bytes @ 0x12
   786  0000B4                     	ds	1
   787  0000B5                     ___fladd@bexp:
   788                           	callstack 0
   789                           
   790                           ; 1 bytes @ 0x13
   791  0000B5                     	ds	1
   792  0000B6                     ___fladd@grs:
   793                           	callstack 0
   794                           
   795                           ; 1 bytes @ 0x14
   796  0000B6                     	ds	1
   797  0000B7                     ?___fltol:
   798                           	callstack 0
   799  0000B7                     ___fltol@f1:
   800                           	callstack 0
   801                           
   802                           ; 4 bytes @ 0x15
   803  0000B7                     	ds	3
   804  0000BA                     dtoa@i:
   805                           	callstack 0
   806                           
   807                           ; 2 bytes @ 0x18
   808  0000BA                     	ds	1
   809  0000BB                     ??___fltol:
   810                           
   811                           ; 1 bytes @ 0x19
   812  0000BB                     	ds	1
   813  0000BC                     ?_vfpfcnvrt:
   814                           	callstack 0
   815  0000BC                     vfpfcnvrt@fp:
   816                           	callstack 0
   817                           
   818                           ; 2 bytes @ 0x1A
   819  0000BC                     	ds	2
   820  0000BE                     vfpfcnvrt@fmt:
   821                           	callstack 0
   822                           
   823                           ; 2 bytes @ 0x1C
   824  0000BE                     	ds	1
   825  0000BF                     ___fltol@sign1:
   826                           	callstack 0
   827                           
   828                           ; 1 bytes @ 0x1D
   829  0000BF                     	ds	1
   830  0000C0                     ___fltol@exp1:
   831                           	callstack 0
   832  0000C0                     vfpfcnvrt@ap:
   833                           	callstack 0
   834                           
   835                           ; 2 bytes @ 0x1E
   836  0000C0                     	ds	1
   837  0000C1                     ??_calcSpeed:
   838  0000C1                     ??_calcMotorPow:
   839                           
   840                           ; 1 bytes @ 0x1F
   841  0000C1                     	ds	1
   842  0000C2                     ??_vfpfcnvrt:
   843                           
   844                           ; 1 bytes @ 0x20
   845  0000C2                     	ds	1
   846  0000C3                     calcSpeed@speed:
   847                           	callstack 0
   848  0000C3                     calcMotorPow@setSpeedDelta:
   849                           	callstack 0
   850                           
   851                           ; 2 bytes @ 0x21
   852  0000C3                     	ds	1
   853  0000C4                     vfpfcnvrt@ll:
   854                           	callstack 0
   855                           
   856                           ; 8 bytes @ 0x22
   857  0000C4                     	ds	1
   858  0000C5                     calcMotorPow@oldSpeedDelta:
   859                           	callstack 0
   860                           
   861                           ; 2 bytes @ 0x23
   862  0000C5                     	ds	2
   863  0000C7                     calcMotorPow@addMPow:
   864                           	callstack 0
   865                           
   866                           ; 1 bytes @ 0x25
   867  0000C7                     	ds	5
   868  0000CC                     ?_vfprintf:
   869                           	callstack 0
   870  0000CC                     vfprintf@fp:
   871                           	callstack 0
   872                           
   873                           ; 2 bytes @ 0x2A
   874  0000CC                     	ds	2
   875  0000CE                     vfprintf@fmt:
   876                           	callstack 0
   877                           
   878                           ; 2 bytes @ 0x2C
   879  0000CE                     	ds	2
   880  0000D0                     vfprintf@ap:
   881                           	callstack 0
   882                           
   883                           ; 2 bytes @ 0x2E
   884  0000D0                     	ds	2
   885  0000D2                     vfprintf@cfmt:
   886                           	callstack 0
   887                           
   888                           ; 2 bytes @ 0x30
   889  0000D2                     	ds	2
   890  0000D4                     ?_printf:
   891                           	callstack 0
   892  0000D4                     printf@fmt:
   893                           	callstack 0
   894                           
   895                           ; 2 bytes @ 0x32
   896  0000D4                     	ds	6
   897  0000DA                     printf@ap:
   898                           	callstack 0
   899                           
   900                           ; 2 bytes @ 0x38
   901  0000DA                     	ds	2
   902  0000DC                     ??_getCurve:
   903                           
   904                           ; 1 bytes @ 0x3A
   905  0000DC                     	ds	2
   906  0000DE                     getCurve@deltaLeft:
   907                           	callstack 0
   908                           
   909                           ; 2 bytes @ 0x3C
   910  0000DE                     	ds	2
   911  0000E0                     getCurve@deltaRight:
   912                           	callstack 0
   913                           
   914                           ; 2 bytes @ 0x3E
   915  0000E0                     	ds	2
   916                           
   917                           	psect	cstackCOMRAM
   918  000001                     __pcstackCOMRAM:
   919                           	callstack 0
   920  000001                     ?_TMR5_ReadTimer:
   921                           	callstack 0
   922  000001                     TMR5_WriteTimer@timerVal:
   923                           	callstack 0
   924                           
   925                           ; 2 bytes @ 0x0
   926  000001                     	ds	2
   927  000003                     ??_TMR5_ReadTimer:
   928  000003                     
   929                           ; 1 bytes @ 0x2
   930  000003                     	ds	2
   931  000005                     TMR5_ReadTimer@readVal:
   932                           	callstack 0
   933                           
   934                           ; 2 bytes @ 0x4
   935  000005                     	ds	2
   936  000007                     TMR5_ReadTimer@readValHigh:
   937                           	callstack 0
   938                           
   939                           ; 1 bytes @ 0x6
   940  000007                     	ds	1
   941  000008                     TMR5_ReadTimer@readValLow:
   942                           	callstack 0
   943                           
   944                           ; 1 bytes @ 0x7
   945  000008                     	ds	1
   946  000009                     CCP3_DefaultCallBack@capturedValue:
   947                           	callstack 0
   948                           
   949                           ; 2 bytes @ 0x8
   950  000009                     	ds	2
   951  00000B                     CCP3_CaptureISR@module:
   952                           	callstack 0
   953                           
   954                           ; 2 bytes @ 0xA
   955  00000B                     	ds	2
   956  00000D                     CCP4_DefaultCallBack@capturedValue:
   957                           	callstack 0
   958                           
   959                           ; 2 bytes @ 0xC
   960  00000D                     	ds	2
   961  00000F                     CCP4_CaptureISR@module:
   962                           	callstack 0
   963                           
   964                           ; 2 bytes @ 0xE
   965  00000F                     	ds	2
   966  000011                     ??_UART1_tx_vect_isr:
   967                           
   968                           ; 1 bytes @ 0x10
   969  000011                     	ds	1
   970  000012                     ??_UART1_rx_vect_isr:
   971                           
   972                           ; 1 bytes @ 0x11
   973  000012                     	ds	1
   974  000013                     ??_TMR4_ISR:
   975                           
   976                           ; 1 bytes @ 0x12
   977  000013                     	ds	1
   978  000014                     ??_TMR3_Initialize:
   979  000014                     ?_strlen:
   980                           	callstack 0
   981  000014                     ?_ADCC_GetSingleConversion:
   982                           	callstack 0
   983  000014                     ?___awdiv:
   984                           	callstack 0
   985  000014                     ?___aldiv:
   986                           	callstack 0
   987  000014                     ?___aodiv:
   988                           	callstack 0
   989  000014                     ?___aomod:
   990                           	callstack 0
   991  000014                     UART1_Write@txData:
   992                           	callstack 0
   993  000014                     INTERRUPT_Initialize@state:
   994                           	callstack 0
   995  000014                     UART1_SetFramingErrorHandler@interruptHandler:
   996                           	callstack 0
   997  000014                     UART1_SetOverrunErrorHandler@interruptHandler:
   998                           	callstack 0
   999  000014                     UART1_SetErrorHandler@interruptHandler:
  1000                           	callstack 0
  1001  000014                     UART1_SetRxInterruptHandler@InterruptHandler:
  1002                           	callstack 0
  1003  000014                     UART1_SetTxInterruptHandler@InterruptHandler:
  1004                           	callstack 0
  1005  000014                     TMR5_SetGateInterruptHandler@InterruptHandler:
  1006                           	callstack 0
  1007  000014                     TMR4_SetInterruptHandler@InterruptHandler:
  1008                           	callstack 0
  1009  000014                     PWM7_LoadDutyValue@dutyValue:
  1010                           	callstack 0
  1011  000014                     PWM8_LoadDutyValue@dutyValue:
  1012                           	callstack 0
  1013  000014                     PWM5_LoadDutyValue@dutyValue:
  1014                           	callstack 0
  1015  000014                     PWM6_LoadDutyValue@dutyValue:
  1016                           	callstack 0
  1017  000014                     CCP3_SetCallBack@customCallBack:
  1018                           	callstack 0
  1019  000014                     CCP4_SetCallBack@customCallBack:
  1020                           	callstack 0
  1021  000014                     ___awdiv@dividend:
  1022                           	callstack 0
  1023  000014                     strlen@s:
  1024                           	callstack 0
  1025  000014                     ___aldiv@dividend:
  1026                           	callstack 0
  1027  000014                     ___aodiv@dividend:
  1028                           	callstack 0
  1029  000014                     ___aomod@dividend:
  1030                           	callstack 0
  1031                           
  1032                           ; 8 bytes @ 0x13
  1033  000014                     	ds	1
  1034  000015                     putch@txData:
  1035                           	callstack 0
  1036                           
  1037                           ; 1 bytes @ 0x14
  1038  000015                     	ds	1
  1039  000016                     ??_TMR5_Initialize:
  1040  000016                     ??_PWM7_LoadDutyValue:
  1041  000016                     ??_PWM8_LoadDutyValue:
  1042  000016                     ??_PWM5_LoadDutyValue:
  1043  000016                     ??_PWM6_LoadDutyValue:
  1044  000016                     ??_ADCC_GetSingleConversion:
  1045  000016                     ___awdiv@divisor:
  1046                           	callstack 0
  1047  000016                     fputc@c:
  1048                           	callstack 0
  1049  000016                     strlen@a:
  1050                           	callstack 0
  1051                           
  1052                           ; 2 bytes @ 0x15
  1053  000016                     	ds	2
  1054  000018                     ADCC_GetSingleConversion@channel:
  1055                           	callstack 0
  1056  000018                     ___awdiv@counter:
  1057                           	callstack 0
  1058  000018                     setMotor@motorPower:
  1059                           	callstack 0
  1060  000018                     fputc@fp:
  1061                           	callstack 0
  1062  000018                     ___aldiv@divisor:
  1063                           	callstack 0
  1064                           
  1065                           ; 4 bytes @ 0x17
  1066  000018                     	ds	1
  1067  000019                     ?___xxtofl:
  1068                           	callstack 0
  1069  000019                     ___awdiv@sign:
  1070                           	callstack 0
  1071  000019                     ___xxtofl@val:
  1072                           	callstack 0
  1073                           
  1074                           ; 4 bytes @ 0x18
  1075  000019                     	ds	1
  1076  00001A                     ??_setMotor:
  1077  00001A                     ??_fputc:
  1078  00001A                     ___awdiv@quotient:
  1079                           	callstack 0
  1080                           
  1081                           ; 2 bytes @ 0x19
  1082  00001A                     	ds	2
  1083  00001C                     ___aldiv@counter:
  1084                           	callstack 0
  1085  00001C                     setSteering@steering:
  1086                           	callstack 0
  1087  00001C                     ___aodiv@divisor:
  1088                           	callstack 0
  1089  00001C                     ___aomod@divisor:
  1090                           	callstack 0
  1091                           
  1092                           ; 8 bytes @ 0x1B
  1093  00001C                     	ds	1
  1094  00001D                     ??___xxtofl:
  1095  00001D                     ___aldiv@sign:
  1096                           	callstack 0
  1097                           
  1098                           ; 1 bytes @ 0x1C
  1099  00001D                     	ds	1
  1100  00001E                     setSteering@steeringMode:
  1101                           	callstack 0
  1102  00001E                     ___aldiv@quotient:
  1103                           	callstack 0
  1104                           
  1105                           ; 4 bytes @ 0x1D
  1106  00001E                     	ds	1
  1107  00001F                     ??_setSteering:
  1108  00001F                     fputs@s:
  1109                           	callstack 0
  1110                           
  1111                           ; 2 bytes @ 0x1E
  1112  00001F                     	ds	2
  1113  000021                     ___xxtofl@sign:
  1114                           	callstack 0
  1115  000021                     setSteering@steeringF:
  1116                           	callstack 0
  1117  000021                     fputs@fp:
  1118                           	callstack 0
  1119                           
  1120                           ; 2 bytes @ 0x20
  1121  000021                     	ds	1
  1122  000022                     ?_actSpeed:
  1123                           	callstack 0
  1124  000022                     ___xxtofl@exp:
  1125                           	callstack 0
  1126                           
  1127                           ; 1 bytes @ 0x21
  1128  000022                     	ds	1
  1129  000023                     fputs@c:
  1130                           	callstack 0
  1131  000023                     setSteering@steeringB:
  1132                           	callstack 0
  1133  000023                     ___xxtofl@arg:
  1134                           	callstack 0
  1135                           
  1136                           ; 4 bytes @ 0x22
  1137  000023                     	ds	1
  1138  000024                     ___aodiv@counter:
  1139                           	callstack 0
  1140  000024                     ___aomod@counter:
  1141                           	callstack 0
  1142  000024                     actSpeed@speed:
  1143                           	callstack 0
  1144  000024                     fputs@i:
  1145                           	callstack 0
  1146                           
  1147                           ; 2 bytes @ 0x23
  1148  000024                     	ds	1
  1149  000025                     ??_calcSteering:
  1150  000025                     ___aodiv@sign:
  1151                           	callstack 0
  1152  000025                     ___aomod@sign:
  1153                           	callstack 0
  1154                           
  1155                           ; 1 bytes @ 0x24
  1156  000025                     	ds	1
  1157  000026                     ?_abs:
  1158                           	callstack 0
  1159  000026                     ?_pad:
  1160                           	callstack 0
  1161  000026                     pad@fp:
  1162                           	callstack 0
  1163  000026                     abs@a:
  1164                           	callstack 0
  1165  000026                     ___aodiv@quotient:
  1166                           	callstack 0
  1167                           
  1168                           ; 8 bytes @ 0x25
  1169  000026                     	ds	1
  1170  000027                     ?___flmul:
  1171                           	callstack 0
  1172  000027                     calcSteering@delta:
  1173                           	callstack 0
  1174  000027                     ___flge@ff1:
  1175                           	callstack 0
  1176  000027                     ___flmul@b:
  1177                           	callstack 0
  1178                           
  1179                           ; 4 bytes @ 0x26
  1180  000027                     	ds	1
  1181  000028                     ??_abs:
  1182  000028                     pad@buf:
  1183                           	callstack 0
  1184                           
  1185                           ; 2 bytes @ 0x27
  1186  000028                     	ds	2
  1187  00002A                     pad@p:
  1188                           	callstack 0
  1189                           
  1190                           ; 2 bytes @ 0x29
  1191  00002A                     	ds	1
  1192  00002B                     ___flge@ff2:
  1193                           	callstack 0
  1194  00002B                     ___flmul@a:
  1195                           	callstack 0
  1196                           
  1197                           ; 4 bytes @ 0x2A
  1198  00002B                     	ds	1
  1199  00002C                     ??_pad:
  1200                           
  1201                           ; 1 bytes @ 0x2B
  1202  00002C                     	ds	1
  1203  00002D                     pad@i:
  1204                           	callstack 0
  1205                           
  1206                           ; 2 bytes @ 0x2C
  1207  00002D                     	ds	2
  1208  00002F                     ??___flmul:
  1209  00002F                     ??___flge:
  1210  00002F                     pad@w:
  1211                           	callstack 0
  1212                           
  1213                           ; 2 bytes @ 0x2E
  1214  00002F                     	ds	2
  1215  000031                     ?_dtoa:
  1216                           	callstack 0
  1217  000031                     dtoa@fp:
  1218                           	callstack 0
  1219                           
  1220                           ; 2 bytes @ 0x30
  1221  000031                     	ds	2
  1222  000033                     ?___fladd:
  1223                           	callstack 0
  1224  000033                     ___fladd@b:
  1225                           	callstack 0
  1226  000033                     dtoa@d:
  1227                           	callstack 0
  1228                           
  1229                           ; 8 bytes @ 0x32
  1230  000033                     	ds	4
  1231  000037                     ___fladd@a:
  1232                           	callstack 0
  1233                           
  1234                           ; 4 bytes @ 0x36
  1235  000037                     	ds	4
  1236  00003B                     
  1237                           ; 1 bytes @ 0x3A
  1238 ;;
  1239 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1240 ;;
  1241 ;; *************** function _main *****************
  1242 ;; Defined at:
  1243 ;;		line 9 in file "main.c"
  1244 ;; Parameters:    Size  Location     Type
  1245 ;;		None
  1246 ;; Auto vars:     Size  Location     Type
  1247 ;;		None
  1248 ;; Return value:  Size  Location     Type
  1249 ;;                  1    wreg      void 
  1250 ;; Registers used:
  1251 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1252 ;; Tracked objects:
  1253 ;;		On entry : 0/0
  1254 ;;		On exit  : 0/0
  1255 ;;		Unchanged: 0/0
  1256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1260 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1261 ;;Total ram usage:        0 bytes
  1262 ;; Hardware stack levels required when called: 19
  1263 ;; This function calls:
  1264 ;;		_SYSTEM_Initialize
  1265 ;;		_TMR4_SetInterruptHandler
  1266 ;;		_loop
  1267 ;; This function is called by:
  1268 ;;		Startup code after reset
  1269 ;; This function uses a non-reentrant model
  1270 ;;
  1271                           
  1272                           	psect	text0
  1273  003E2C                     __ptext0:
  1274                           	callstack 0
  1275  003E2C                     _main:
  1276                           	callstack 12
  1277  003E2C                     
  1278                           ;main.c: 10:     SYSTEM_Initialize();
  1279  003E2C  EC96  F01B         	call	_SYSTEM_Initialize	;wreg free
  1280  003E30                     
  1281                           ;main.c: 11:     (INTCON0bits.GIEH = 1);
  1282  003E30  8ED2               	bsf	210,7,c	;volatile
  1283  003E32                     
  1284                           ;main.c: 12:     (INTCON0bits.GIEL = 1);
  1285  003E32  8CD2               	bsf	210,6,c	;volatile
  1286                           
  1287                           ;main.c: 13:     TMR4_SetInterruptHandler(TMR4_10msISR);
  1288  003E34  0E86               	movlw	low _TMR4_10msISR
  1289  003E36  6E14               	movwf	TMR4_SetInterruptHandler@InterruptHandler^0,c
  1290  003E38  0E3F               	movlw	high _TMR4_10msISR
  1291  003E3A  6E15               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)^0,c
  1292  003E3C  ECB1  F01F         	call	_TMR4_SetInterruptHandler	;wreg free
  1293  003E40                     l6321:
  1294                           
  1295                           ;main.c: 16:         loop();
  1296  003E40  EC8F  F015         	call	_loop	;wreg free
  1297  003E44  EF20  F01F         	goto	l6321
  1298  003E48  EF57  F000         	goto	start
  1299  003E4C                     __end_of_main:
  1300                           	callstack 0
  1301                           
  1302 ;; *************** function _loop *****************
  1303 ;; Defined at:
  1304 ;;		line 20 in file "main.c"
  1305 ;; Parameters:    Size  Location     Type
  1306 ;;		None
  1307 ;; Auto vars:     Size  Location     Type
  1308 ;;		None
  1309 ;; Return value:  Size  Location     Type
  1310 ;;                  1    wreg      void 
  1311 ;; Registers used:
  1312 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1313 ;; Tracked objects:
  1314 ;;		On entry : 0/0
  1315 ;;		On exit  : 0/0
  1316 ;;		Unchanged: 0/0
  1317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1321 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1322 ;;Total ram usage:        0 bytes
  1323 ;; Hardware stack levels used: 1
  1324 ;; Hardware stack levels required when called: 18
  1325 ;; This function calls:
  1326 ;;		_ADCC_GetSingleConversion
  1327 ;;		___flge
  1328 ;;		___xxtofl
  1329 ;;		_calcMotorPow
  1330 ;;		_calcSpeed
  1331 ;;		_calcSteering
  1332 ;;		_getBatteryVoltage
  1333 ;;		_getCurve
  1334 ;;		_getReverse
  1335 ;;		_setSteering
  1336 ;; This function is called by:
  1337 ;;		_main
  1338 ;; This function uses a non-reentrant model
  1339 ;;
  1340                           
  1341                           	psect	text1
  1342  002B1E                     __ptext1:
  1343                           	callstack 0
  1344  002B1E                     _loop:
  1345                           	callstack 12
  1346  002B1E                     l1214:
  1347  002B1E  A8CB               	btfss	203,4,c	;volatile
  1348  002B20  EF94  F015         	goto	u5571
  1349  002B24  EF96  F015         	goto	u5570
  1350  002B28                     u5571:
  1351  002B28  EF8F  F015         	goto	l1214
  1352  002B2C                     u5570:
  1353  002B2C                     l6287:
  1354                           
  1355                           ;main.c: 26:         getBatteryVoltage();
  1356  002B2C  EC7F  F01F         	call	_getBatteryVoltage	;wreg free
  1357                           
  1358                           ;main.c: 27:     }while(BatteryVolt < ((7.4) * 409.6));
  1359  002B30  C084  F019         	movff	_BatteryVolt,___xxtofl@val
  1360  002B34  C085  F01A         	movff	_BatteryVolt+1,___xxtofl@val+1
  1361  002B38  6A1B               	clrf	(___xxtofl@val+2)^0,c
  1362  002B3A  6A1C               	clrf	(___xxtofl@val+3)^0,c
  1363  002B3C  0E00               	movlw	0
  1364  002B3E  EC14  F012         	call	___xxtofl
  1365  002B42  C019  F027         	movff	?___xxtofl,___flge@ff1
  1366  002B46  C01A  F028         	movff	?___xxtofl+1,___flge@ff1+1
  1367  002B4A  C01B  F029         	movff	?___xxtofl+2,___flge@ff1+2
  1368  002B4E  C01C  F02A         	movff	?___xxtofl+3,___flge@ff1+3
  1369  002B52  0EA4               	movlw	164
  1370  002B54  6E2B               	movwf	___flge@ff2^0,c
  1371  002B56  0E70               	movlw	112
  1372  002B58  6E2C               	movwf	(___flge@ff2+1)^0,c
  1373  002B5A  0E3D               	movlw	61
  1374  002B5C  6E2D               	movwf	(___flge@ff2+2)^0,c
  1375  002B5E  0E45               	movlw	69
  1376  002B60  6E2E               	movwf	(___flge@ff2+3)^0,c
  1377  002B62  EC21  F017         	call	___flge	;wreg free
  1378  002B66  A0D8               	btfss	status,0,c
  1379  002B68  EFB8  F015         	goto	u5581
  1380  002B6C  EFBA  F015         	goto	u5580
  1381  002B70                     u5581:
  1382  002B70  EF96  F015         	goto	l6287
  1383  002B74                     u5580:
  1384  002B74                     
  1385                           ;main.c: 29:     oldDistLeft = distLeft;
  1386  002B74  C09A  F092         	movff	_distLeft,_oldDistLeft	;volatile
  1387  002B78  C09B  F093         	movff	_distLeft+1,_oldDistLeft+1	;volatile
  1388                           
  1389                           ;main.c: 30:     oldDistRight = distRight;
  1390  002B7C  C096  F090         	movff	_distRight,_oldDistRight	;volatile
  1391  002B80  C097  F091         	movff	_distRight+1,_oldDistRight+1	;volatile
  1392  002B84                     l6289:
  1393  002B84  0100               	movlb	0	; () banked
  1394  002B86  519D               	movf	_cycle10ms& (0+255),w,b
  1395  002B88  B4D8               	btfsc	status,2,c
  1396  002B8A  EFC9  F015         	goto	u5591
  1397  002B8E  EFCB  F015         	goto	u5590
  1398  002B92                     u5591:
  1399  002B92  EFC2  F015         	goto	l6289
  1400  002B96                     u5590:
  1401  002B96                     
  1402                           ; BSR set to: 0
  1403                           ;main.c: 34:         cycle10ms = 0;
  1404  002B96  0E00               	movlw	0
  1405  002B98  6F9D               	movwf	_cycle10ms& (0+255),b
  1406  002B9A                     
  1407                           ; BSR set to: 0
  1408                           ;main.c: 36:         if(PORTBbits.RB5){
  1409  002B9A  AACB               	btfss	203,5,c	;volatile
  1410  002B9C  EFD2  F015         	goto	u5601
  1411  002BA0  EFD4  F015         	goto	u5600
  1412  002BA4                     u5601:
  1413  002BA4  EFE3  F015         	goto	l6299
  1414  002BA8                     u5600:
  1415  002BA8                     l6295:
  1416                           
  1417                           ;main.c: 37:             setSpeed = 0;
  1418  002BA8  0E00               	movlw	0
  1419  002BAA  0100               	movlb	0	; () banked
  1420  002BAC  6F8D               	movwf	(_setSpeed+1)& (0+255),b
  1421  002BAE  0E00               	movlw	0
  1422  002BB0  6F8C               	movwf	_setSpeed& (0+255),b
  1423  002BB2                     
  1424                           ; BSR set to: 0
  1425                           ;main.c: 38:             setSteering(0,Front);
  1426  002BB2  0E00               	movlw	0
  1427  002BB4  6E1D               	movwf	(setSteering@steering+1)^0,c
  1428  002BB6  0E00               	movlw	0
  1429  002BB8  6E1C               	movwf	setSteering@steering^0,c
  1430  002BBA  0E03               	movlw	3
  1431  002BBC  6E1E               	movwf	setSteering@steeringMode^0,c
  1432  002BBE  EC39  F010         	call	_setSteering	;wreg free
  1433                           
  1434                           ;main.c: 39:             break;
  1435  002BC2  EF16  F016         	goto	l1227
  1436  002BC6                     l6299:
  1437                           
  1438                           ; BSR set to: 0
  1439                           ;main.c: 41:         if(ADCC_GetSingleConversion(aiBatt) < (7.4) * 409.6){
  1440  002BC6  0E22               	movlw	34
  1441  002BC8  ECB2  F01D         	call	_ADCC_GetSingleConversion
  1442  002BCC  C014  F019         	movff	?_ADCC_GetSingleConversion,___xxtofl@val
  1443  002BD0  C015  F01A         	movff	?_ADCC_GetSingleConversion+1,___xxtofl@val+1
  1444  002BD4  6A1B               	clrf	(___xxtofl@val+2)^0,c
  1445  002BD6  6A1C               	clrf	(___xxtofl@val+3)^0,c
  1446  002BD8  0E00               	movlw	0
  1447  002BDA  EC14  F012         	call	___xxtofl
  1448  002BDE  C019  F027         	movff	?___xxtofl,___flge@ff1
  1449  002BE2  C01A  F028         	movff	?___xxtofl+1,___flge@ff1+1
  1450  002BE6  C01B  F029         	movff	?___xxtofl+2,___flge@ff1+2
  1451  002BEA  C01C  F02A         	movff	?___xxtofl+3,___flge@ff1+3
  1452  002BEE  0EA4               	movlw	164
  1453  002BF0  6E2B               	movwf	___flge@ff2^0,c
  1454  002BF2  0E70               	movlw	112
  1455  002BF4  6E2C               	movwf	(___flge@ff2+1)^0,c
  1456  002BF6  0E3D               	movlw	61
  1457  002BF8  6E2D               	movwf	(___flge@ff2+2)^0,c
  1458  002BFA  0E45               	movlw	69
  1459  002BFC  6E2E               	movwf	(___flge@ff2+3)^0,c
  1460  002BFE  EC21  F017         	call	___flge	;wreg free
  1461  002C02  B0D8               	btfsc	status,0,c
  1462  002C04  EF06  F016         	goto	u5611
  1463  002C08  EF08  F016         	goto	u5610
  1464  002C0C                     u5611:
  1465  002C0C  EF0A  F016         	goto	l6305
  1466  002C10                     u5610:
  1467  002C10  EFD4  F015         	goto	l6295
  1468  002C14                     l6305:
  1469                           
  1470                           ;main.c: 48:         getCurve();
  1471  002C14  EC36  F00F         	call	_getCurve	;wreg free
  1472  002C18                     
  1473                           ;main.c: 49:         getReverse();
  1474  002C18  EC82  F01A         	call	_getReverse	;wreg free
  1475  002C1C                     
  1476                           ;main.c: 51:         calcSteering();
  1477  002C1C  ECFC  F014         	call	_calcSteering	;wreg free
  1478  002C20                     
  1479                           ;main.c: 52:         calcSpeed();
  1480  002C20  EC29  F011         	call	_calcSpeed	;wreg free
  1481  002C24                     
  1482                           ;main.c: 53:         calcMotorPow();
  1483  002C24  EC64  F014         	call	_calcMotorPow	;wreg free
  1484  002C28  EFC2  F015         	goto	l6289
  1485  002C2C                     l1227:
  1486  002C2C  0012               	return		;funcret
  1487  002C2E                     __end_of_loop:
  1488                           	callstack 0
  1489                           
  1490 ;; *************** function _getReverse *****************
  1491 ;; Defined at:
  1492 ;;		line 144 in file "main.c"
  1493 ;; Parameters:    Size  Location     Type
  1494 ;;		None
  1495 ;; Auto vars:     Size  Location     Type
  1496 ;;		None
  1497 ;; Return value:  Size  Location     Type
  1498 ;;                  1    wreg      void 
  1499 ;; Registers used:
  1500 ;;		wreg, status,2, status,0
  1501 ;; Tracked objects:
  1502 ;;		On entry : 0/0
  1503 ;;		On exit  : 0/0
  1504 ;;		Unchanged: 0/0
  1505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1509 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1510 ;;Total ram usage:        0 bytes
  1511 ;; Hardware stack levels used: 1
  1512 ;; Hardware stack levels required when called: 8
  1513 ;; This function calls:
  1514 ;;		Nothing
  1515 ;; This function is called by:
  1516 ;;		_loop
  1517 ;; This function uses a non-reentrant model
  1518 ;;
  1519                           
  1520                           	psect	text2
  1521  003504                     __ptext2:
  1522                           	callstack 0
  1523  003504                     _getReverse:
  1524                           	callstack 21
  1525  003504                     
  1526                           ;main.c: 145:     if(distFront < (10)){
  1527  003504  0100               	movlb	0	; () banked
  1528  003506  51A1               	movf	(_distFront+1)& (0+255),w,b	;volatile
  1529  003508  E107               	bnz	u3781
  1530  00350A  0E0A               	movlw	10
  1531  00350C  5DA0               	subwf	_distFront& (0+255),w,b	;volatile
  1532  00350E  B0D8               	btfsc	status,0,c
  1533  003510  EF8C  F01A         	goto	u3781
  1534  003514  EF8E  F01A         	goto	u3780
  1535  003518                     u3781:
  1536  003518  EF91  F01A         	goto	l5087
  1537  00351C                     u3780:
  1538  00351C                     
  1539                           ; BSR set to: 0
  1540                           ;main.c: 146:         ++reverseCount;
  1541  00351C  2A41               	incf	_reverseCount^0,f,c
  1542                           
  1543                           ;main.c: 147:     }else if(driveMode != Backwards){
  1544  00351E  EF9C  F01A         	goto	l5091
  1545  003522                     l5087:
  1546                           
  1547                           ; BSR set to: 0
  1548  003522  0E02               	movlw	2
  1549  003524  199F               	xorwf	_driveMode& (0+255),w,b
  1550  003526  B4D8               	btfsc	status,2,c
  1551  003528  EF98  F01A         	goto	u3791
  1552  00352C  EF9A  F01A         	goto	u3790
  1553  003530                     u3791:
  1554  003530  EF9C  F01A         	goto	l5091
  1555  003534                     u3790:
  1556  003534                     
  1557                           ; BSR set to: 0
  1558                           ;main.c: 148:         reverseCount = 0;
  1559  003534  0E00               	movlw	0
  1560  003536  6E41               	movwf	_reverseCount^0,c
  1561  003538                     l5091:
  1562                           
  1563                           ; BSR set to: 0
  1564                           ;main.c: 151:     if(reverseCount > (25)){
  1565  003538  0E19               	movlw	25
  1566  00353A  6441               	cpfsgt	_reverseCount^0,c
  1567  00353C  EFA2  F01A         	goto	u3801
  1568  003540  EFA4  F01A         	goto	u3800
  1569  003544                     u3801:
  1570  003544  EFB5  F01A         	goto	l1271
  1571  003548                     u3800:
  1572  003548                     
  1573                           ; BSR set to: 0
  1574                           ;main.c: 152:         driveMode = Backwards;
  1575  003548  0E02               	movlw	2
  1576  00354A  6F9F               	movwf	_driveMode& (0+255),b
  1577  00354C                     
  1578                           ; BSR set to: 0
  1579                           ;main.c: 153:         if(distFront > (40)){
  1580  00354C  51A1               	movf	(_distFront+1)& (0+255),w,b	;volatile
  1581  00354E  E109               	bnz	u3810
  1582  003550  0E29               	movlw	41
  1583  003552  5DA0               	subwf	_distFront& (0+255),w,b	;volatile
  1584  003554  A0D8               	btfss	status,0,c
  1585  003556  EFAF  F01A         	goto	u3811
  1586  00355A  EFB1  F01A         	goto	u3810
  1587  00355E                     u3811:
  1588  00355E  EFB5  F01A         	goto	l1271
  1589  003562                     u3810:
  1590  003562                     
  1591                           ; BSR set to: 0
  1592                           ;main.c: 154:              driveMode = Straight;
  1593  003562  0E00               	movlw	0
  1594  003564  6F9F               	movwf	_driveMode& (0+255),b
  1595                           
  1596                           ;main.c: 155:              reverseCount = 0;
  1597  003566  0E00               	movlw	0
  1598  003568  6E41               	movwf	_reverseCount^0,c
  1599  00356A                     l1271:
  1600                           
  1601                           ; BSR set to: 0
  1602  00356A  0012               	return		;funcret
  1603  00356C                     __end_of_getReverse:
  1604                           	callstack 0
  1605                           
  1606 ;; *************** function _getCurve *****************
  1607 ;; Defined at:
  1608 ;;		line 79 in file "main.c"
  1609 ;; Parameters:    Size  Location     Type
  1610 ;;		None
  1611 ;; Auto vars:     Size  Location     Type
  1612 ;;  deltaRight      2   62[BANK0 ] short 
  1613 ;;  deltaLeft       2   60[BANK0 ] short 
  1614 ;; Return value:  Size  Location     Type
  1615 ;;                  1    wreg      void 
  1616 ;; Registers used:
  1617 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1618 ;; Tracked objects:
  1619 ;;		On entry : 0/0
  1620 ;;		On exit  : 0/0
  1621 ;;		Unchanged: 0/0
  1622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1624 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1625 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1626 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1627 ;;Total ram usage:        6 bytes
  1628 ;; Hardware stack levels used: 1
  1629 ;; Hardware stack levels required when called: 17
  1630 ;; This function calls:
  1631 ;;		_printf
  1632 ;; This function is called by:
  1633 ;;		_loop
  1634 ;; This function uses a non-reentrant model
  1635 ;;
  1636                           
  1637                           	psect	text3
  1638  001E6C                     __ptext3:
  1639                           	callstack 0
  1640  001E6C                     _getCurve:
  1641                           	callstack 12
  1642  001E6C                     
  1643                           ;main.c: 80:     int16_t deltaLeft;;main.c: 81:     int16_t deltaRight;;main.c: 83:     
      +                          switch (curveMode){
  1644  001E6C  EF12  F010         	goto	l6199
  1645  001E70                     l6143:
  1646                           
  1647                           ; BSR set to: 0
  1648                           ;main.c: 85:             deltaLeft = (int16_t)(distLeft - oldDistLeft);
  1649  001E70  5192               	movf	_oldDistLeft& (0+255),w,b
  1650  001E72  5D9A               	subwf	_distLeft& (0+255),w,b	;volatile
  1651  001E74  6FDE               	movwf	getCurve@deltaLeft& (0+255),b
  1652  001E76  5193               	movf	(_oldDistLeft+1)& (0+255),w,b
  1653  001E78  599B               	subwfb	(_distLeft+1)& (0+255),w,b	;volatile
  1654  001E7A  6FDF               	movwf	(getCurve@deltaLeft+1)& (0+255),b
  1655                           
  1656                           ;main.c: 86:             deltaRight = (int16_t)(distRight - oldDistRight);
  1657  001E7C  5190               	movf	_oldDistRight& (0+255),w,b
  1658  001E7E  5D96               	subwf	_distRight& (0+255),w,b	;volatile
  1659  001E80  6FE0               	movwf	getCurve@deltaRight& (0+255),b
  1660  001E82  5191               	movf	(_oldDistRight+1)& (0+255),w,b
  1661  001E84  5997               	subwfb	(_distRight+1)& (0+255),w,b	;volatile
  1662  001E86  6FE1               	movwf	(getCurve@deltaRight+1)& (0+255),b
  1663  001E88                     
  1664                           ; BSR set to: 0
  1665                           ;main.c: 87:             printf("Out | dL= %d | dR= %d", deltaLeft, deltaRight);
  1666  001E88  0E01               	movlw	low STR_1
  1667  001E8A  6FD4               	movwf	printf@fmt& (0+255),b
  1668  001E8C  0E10               	movlw	high STR_1
  1669  001E8E  6FD5               	movwf	(printf@fmt+1)& (0+255),b
  1670  001E90  C0DE  F0D6         	movff	getCurve@deltaLeft,?_printf+2
  1671  001E94  C0DF  F0D7         	movff	getCurve@deltaLeft+1,?_printf+3
  1672  001E98  C0E0  F0D8         	movff	getCurve@deltaRight,?_printf+4
  1673  001E9C  C0E1  F0D9         	movff	getCurve@deltaRight+1,?_printf+5
  1674  001EA0  ECCA  F01E         	call	_printf	;wreg free
  1675  001EA4                     
  1676                           ;main.c: 89:             if(deltaLeft > (50)){
  1677  001EA4  0100               	movlb	0	; () banked
  1678  001EA6  BFDF               	btfsc	(getCurve@deltaLeft+1)& (0+255),7,b
  1679  001EA8  EF5F  F00F         	goto	u5371
  1680  001EAC  51DF               	movf	(getCurve@deltaLeft+1)& (0+255),w,b
  1681  001EAE  E109               	bnz	u5370
  1682  001EB0  0E33               	movlw	51
  1683  001EB2  5DDE               	subwf	getCurve@deltaLeft& (0+255),w,b
  1684  001EB4  A0D8               	btfss	status,0,c
  1685  001EB6  EF5F  F00F         	goto	u5371
  1686  001EBA  EF61  F00F         	goto	u5370
  1687  001EBE                     u5371:
  1688  001EBE  EF6F  F00F         	goto	l6153
  1689  001EC2                     u5370:
  1690  001EC2                     
  1691                           ; BSR set to: 0
  1692                           ;main.c: 90:                 delay = 0;
  1693  001EC2  0E00               	movlw	0
  1694  001EC4  6F9C               	movwf	_delay& (0+255),b
  1695                           
  1696                           ;main.c: 91:                 curveMode = BeforeCurve;
  1697  001EC6  0E01               	movlw	1
  1698  001EC8  6F9E               	movwf	_curveMode& (0+255),b
  1699                           
  1700                           ;main.c: 92:                 driveMode = CurveLeft;
  1701  001ECA  0E03               	movlw	3
  1702  001ECC  6F9F               	movwf	_driveMode& (0+255),b
  1703  001ECE                     
  1704                           ; BSR set to: 0
  1705                           ;main.c: 93:                 printf("   CurveLeft");
  1706  001ECE  0E25               	movlw	low STR_2
  1707  001ED0  6FD4               	movwf	printf@fmt& (0+255),b
  1708  001ED2  0E10               	movlw	high STR_2
  1709  001ED4  6FD5               	movwf	(printf@fmt+1)& (0+255),b
  1710  001ED6  ECCA  F01E         	call	_printf	;wreg free
  1711                           
  1712                           ;main.c: 94:             } else if(deltaRight > (50)){
  1713  001EDA  EF89  F00F         	goto	l6159
  1714  001EDE                     l6153:
  1715                           
  1716                           ; BSR set to: 0
  1717  001EDE  BFE1               	btfsc	(getCurve@deltaRight+1)& (0+255),7,b
  1718  001EE0  EF7B  F00F         	goto	u5381
  1719  001EE4  51E1               	movf	(getCurve@deltaRight+1)& (0+255),w,b
  1720  001EE6  E109               	bnz	u5380
  1721  001EE8  0E33               	movlw	51
  1722  001EEA  5DE0               	subwf	getCurve@deltaRight& (0+255),w,b
  1723  001EEC  A0D8               	btfss	status,0,c
  1724  001EEE  EF7B  F00F         	goto	u5381
  1725  001EF2  EF7D  F00F         	goto	u5380
  1726  001EF6                     u5381:
  1727  001EF6  EF89  F00F         	goto	l6159
  1728  001EFA                     u5380:
  1729  001EFA                     
  1730                           ; BSR set to: 0
  1731                           ;main.c: 95:                 delay = 0;
  1732  001EFA  0E00               	movlw	0
  1733  001EFC  6F9C               	movwf	_delay& (0+255),b
  1734                           
  1735                           ;main.c: 96:                 curveMode = BeforeCurve;
  1736  001EFE  0E01               	movlw	1
  1737  001F00  6F9E               	movwf	_curveMode& (0+255),b
  1738                           
  1739                           ;main.c: 97:                 driveMode = CurveRight;
  1740  001F02  0E04               	movlw	4
  1741  001F04  6F9F               	movwf	_driveMode& (0+255),b
  1742  001F06                     
  1743                           ; BSR set to: 0
  1744                           ;main.c: 98:                 printf("   CurveRight");
  1745  001F06  0E17               	movlw	low STR_3
  1746  001F08  6FD4               	movwf	printf@fmt& (0+255),b
  1747  001F0A  0E10               	movlw	high STR_3
  1748  001F0C  6FD5               	movwf	(printf@fmt+1)& (0+255),b
  1749  001F0E  ECCA  F01E         	call	_printf	;wreg free
  1750  001F12                     l6159:
  1751                           
  1752                           ;main.c: 100:             printf("\n");
  1753  001F12  0E47               	movlw	low (STR_6+9)
  1754  001F14  0100               	movlb	0	; () banked
  1755  001F16  6FD4               	movwf	printf@fmt& (0+255),b
  1756  001F18  0E10               	movlw	high (STR_6+9)
  1757  001F1A  6FD5               	movwf	(printf@fmt+1)& (0+255),b
  1758  001F1C  ECCA  F01E         	call	_printf	;wreg free
  1759                           
  1760                           ;main.c: 102:             break;
  1761  001F20  EF30  F010         	goto	l1247
  1762  001F24                     l6161:
  1763                           
  1764                           ; BSR set to: 0
  1765                           ;main.c: 104:             if(delay > (5)){
  1766  001F24  0E05               	movlw	5
  1767  001F26  659C               	cpfsgt	_delay& (0+255),b
  1768  001F28  EF98  F00F         	goto	u5391
  1769  001F2C  EF9A  F00F         	goto	u5390
  1770  001F30                     u5391:
  1771  001F30  EFA6  F00F         	goto	l6167
  1772  001F34                     u5390:
  1773  001F34                     
  1774                           ; BSR set to: 0
  1775                           ;main.c: 105:                 delay = 0;
  1776  001F34  0E00               	movlw	0
  1777  001F36  6F9C               	movwf	_delay& (0+255),b
  1778                           
  1779                           ;main.c: 106:                 curveMode = InCurve;
  1780  001F38  0E02               	movlw	2
  1781  001F3A  6F9E               	movwf	_curveMode& (0+255),b
  1782  001F3C                     
  1783                           ; BSR set to: 0
  1784                           ;main.c: 107:                 printf("InCurve\n");
  1785  001F3C  0E5E               	movlw	low STR_5
  1786  001F3E  6FD4               	movwf	printf@fmt& (0+255),b
  1787  001F40  0E10               	movlw	high STR_5
  1788  001F42  6FD5               	movwf	(printf@fmt+1)& (0+255),b
  1789  001F44  ECCA  F01E         	call	_printf	;wreg free
  1790                           
  1791                           ;main.c: 108:             } else {
  1792  001F48  EF30  F010         	goto	l1247
  1793  001F4C                     l6167:
  1794                           
  1795                           ; BSR set to: 0
  1796                           ;main.c: 109:                 delay++;
  1797  001F4C  2B9C               	incf	_delay& (0+255),f,b
  1798  001F4E  EF30  F010         	goto	l1247
  1799  001F52                     l6169:
  1800                           
  1801                           ; BSR set to: 0
  1802                           ;main.c: 113:             if(delay > (20)){
  1803  001F52  0E14               	movlw	20
  1804  001F54  659C               	cpfsgt	_delay& (0+255),b
  1805  001F56  EFAF  F00F         	goto	u5401
  1806  001F5A  EFB1  F00F         	goto	u5400
  1807  001F5E                     u5401:
  1808  001F5E  EFA6  F00F         	goto	l6167
  1809  001F62                     u5400:
  1810  001F62                     
  1811                           ; BSR set to: 0
  1812                           ;main.c: 114:                 if(driveMode == CurveLeft){
  1813  001F62  0E03               	movlw	3
  1814  001F64  199F               	xorwf	_driveMode& (0+255),w,b
  1815  001F66  A4D8               	btfss	status,2,c
  1816  001F68  EFB8  F00F         	goto	u5411
  1817  001F6C  EFBA  F00F         	goto	u5410
  1818  001F70                     u5411:
  1819  001F70  EFC6  F00F         	goto	l6175
  1820  001F74                     u5410:
  1821  001F74                     
  1822                           ; BSR set to: 0
  1823                           ;main.c: 115:                     printf("distL= %d\n", distLeft);
  1824  001F74  0E3E               	movlw	low STR_6
  1825  001F76  6FD4               	movwf	printf@fmt& (0+255),b
  1826  001F78  0E10               	movlw	high STR_6
  1827  001F7A  6FD5               	movwf	(printf@fmt+1)& (0+255),b
  1828  001F7C  C09A  F0D6         	movff	_distLeft,?_printf+2	;volatile
  1829  001F80  C09B  F0D7         	movff	_distLeft+1,?_printf+3	;volatile
  1830  001F84  ECCA  F01E         	call	_printf	;wreg free
  1831                           
  1832                           ;main.c: 116:                 } else if(driveMode == CurveLeft){
  1833  001F88  EFD9  F00F         	goto	l6179
  1834  001F8C                     l6175:
  1835                           
  1836                           ; BSR set to: 0
  1837  001F8C  0E03               	movlw	3
  1838  001F8E  199F               	xorwf	_driveMode& (0+255),w,b
  1839  001F90  A4D8               	btfss	status,2,c
  1840  001F92  EFCD  F00F         	goto	u5421
  1841  001F96  EFCF  F00F         	goto	u5420
  1842  001F9A                     u5421:
  1843  001F9A  EFD9  F00F         	goto	l6179
  1844  001F9E                     u5420:
  1845  001F9E                     
  1846                           ; BSR set to: 0
  1847                           ;main.c: 117:                     printf("distR= %d\n", distRight);
  1848  001F9E  0E49               	movlw	low STR_7
  1849  001FA0  6FD4               	movwf	printf@fmt& (0+255),b
  1850  001FA2  0E10               	movlw	high STR_7
  1851  001FA4  6FD5               	movwf	(printf@fmt+1)& (0+255),b
  1852  001FA6  C096  F0D6         	movff	_distRight,?_printf+2	;volatile
  1853  001FAA  C097  F0D7         	movff	_distRight+1,?_printf+3	;volatile
  1854  001FAE  ECCA  F01E         	call	_printf	;wreg free
  1855  001FB2                     l6179:
  1856                           
  1857                           ;main.c: 120:                 if(distLeft < (40) || distRight < (40)){
  1858  001FB2  0100               	movlb	0	; () banked
  1859  001FB4  519B               	movf	(_distLeft+1)& (0+255),w,b	;volatile
  1860  001FB6  E109               	bnz	u5430
  1861  001FB8  0E28               	movlw	40
  1862  001FBA  5D9A               	subwf	_distLeft& (0+255),w,b	;volatile
  1863  001FBC  A0D8               	btfss	status,0,c
  1864  001FBE  EFE3  F00F         	goto	u5431
  1865  001FC2  EFE5  F00F         	goto	u5430
  1866  001FC6                     u5431:
  1867  001FC6  EFF0  F00F         	goto	l6183
  1868  001FCA                     u5430:
  1869  001FCA                     
  1870                           ; BSR set to: 0
  1871  001FCA  5197               	movf	(_distRight+1)& (0+255),w,b	;volatile
  1872  001FCC  E107               	bnz	u5441
  1873  001FCE  0E28               	movlw	40
  1874  001FD0  5D96               	subwf	_distRight& (0+255),w,b	;volatile
  1875  001FD2  B0D8               	btfsc	status,0,c
  1876  001FD4  EFEE  F00F         	goto	u5441
  1877  001FD8  EFF0  F00F         	goto	u5440
  1878  001FDC                     u5441:
  1879  001FDC  EF30  F010         	goto	l1247
  1880  001FE0                     u5440:
  1881  001FE0                     l6183:
  1882                           
  1883                           ; BSR set to: 0
  1884                           ;main.c: 121:                     delay = 0;
  1885  001FE0  0E00               	movlw	0
  1886  001FE2  6F9C               	movwf	_delay& (0+255),b
  1887                           
  1888                           ;main.c: 122:                     curveMode = AfterCurve;
  1889  001FE4  0E03               	movlw	3
  1890  001FE6  6F9E               	movwf	_curveMode& (0+255),b
  1891                           
  1892                           ;main.c: 123:                     driveMode = Straight;
  1893  001FE8  0E00               	movlw	0
  1894  001FEA  6F9F               	movwf	_driveMode& (0+255),b
  1895  001FEC                     
  1896                           ; BSR set to: 0
  1897                           ;main.c: 124:                     printf("AfterCurve\n");
  1898  001FEC  0E32               	movlw	low STR_8
  1899  001FEE  6FD4               	movwf	printf@fmt& (0+255),b
  1900  001FF0  0E10               	movlw	high STR_8
  1901  001FF2  6FD5               	movwf	(printf@fmt+1)& (0+255),b
  1902  001FF4  ECCA  F01E         	call	_printf	;wreg free
  1903  001FF8  EF30  F010         	goto	l1247
  1904  001FFC                     l6189:
  1905                           
  1906                           ; BSR set to: 0
  1907                           ;main.c: 131:             if(delay > (20)){
  1908  001FFC  0E14               	movlw	20
  1909  001FFE  659C               	cpfsgt	_delay& (0+255),b
  1910  002000  EF04  F010         	goto	u5451
  1911  002004  EF06  F010         	goto	u5450
  1912  002008                     u5451:
  1913  002008  EFA6  F00F         	goto	l6167
  1914  00200C                     u5450:
  1915  00200C                     
  1916                           ; BSR set to: 0
  1917                           ;main.c: 132:                 delay = 0;
  1918  00200C  0E00               	movlw	0
  1919  00200E  6F9C               	movwf	_delay& (0+255),b
  1920                           
  1921                           ;main.c: 133:                 curveMode = OutCurve;
  1922  002010  0E00               	movlw	0
  1923  002012  6F9E               	movwf	_curveMode& (0+255),b
  1924  002014                     
  1925                           ; BSR set to: 0
  1926                           ;main.c: 134:                 printf("OutCurve\n");
  1927  002014  0E54               	movlw	low STR_9
  1928  002016  6FD4               	movwf	printf@fmt& (0+255),b
  1929  002018  0E10               	movlw	high STR_9
  1930  00201A  6FD5               	movwf	(printf@fmt+1)& (0+255),b
  1931  00201C  ECCA  F01E         	call	_printf	;wreg free
  1932                           
  1933                           ;main.c: 135:             } else {
  1934  002020  EF30  F010         	goto	l1247
  1935  002024                     l6199:
  1936  002024  0100               	movlb	0	; () banked
  1937  002026  519E               	movf	_curveMode& (0+255),w,b
  1938  002028  6FDC               	movwf	??_getCurve& (0+255),b
  1939  00202A  6BDD               	clrf	(??_getCurve+1)& (0+255),b
  1940                           
  1941                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1942                           ; Switch size 1, requested type "simple"
  1943                           ; Number of cases is 1, Range of values is 0 to 0
  1944                           ; switch strategies available:
  1945                           ; Name         Instructions Cycles
  1946                           ; simple_byte            4     3 (average)
  1947                           ;	Chosen strategy is simple_byte
  1948  00202C  51DD               	movf	(??_getCurve+1)& (0+255),w,b
  1949  00202E  0A00               	xorlw	0	; case 0
  1950  002030  B4D8               	btfsc	status,2,c
  1951  002032  EF1D  F010         	goto	l6403
  1952  002036  EF30  F010         	goto	l1247
  1953  00203A                     l6403:
  1954                           
  1955                           ; BSR set to: 0
  1956                           ; Switch size 1, requested type "simple"
  1957                           ; Number of cases is 4, Range of values is 0 to 3
  1958                           ; switch strategies available:
  1959                           ; Name         Instructions Cycles
  1960                           ; simple_byte           13     7 (average)
  1961                           ;	Chosen strategy is simple_byte
  1962  00203A  51DC               	movf	??_getCurve& (0+255),w,b
  1963  00203C  0A00               	xorlw	0	; case 0
  1964  00203E  B4D8               	btfsc	status,2,c
  1965  002040  EF38  F00F         	goto	l6143
  1966  002044  0A01               	xorlw	1	; case 1
  1967  002046  B4D8               	btfsc	status,2,c
  1968  002048  EF92  F00F         	goto	l6161
  1969  00204C  0A03               	xorlw	3	; case 2
  1970  00204E  B4D8               	btfsc	status,2,c
  1971  002050  EFA9  F00F         	goto	l6169
  1972  002054  0A01               	xorlw	1	; case 3
  1973  002056  B4D8               	btfsc	status,2,c
  1974  002058  EFFE  F00F         	goto	l6189
  1975  00205C  EF30  F010         	goto	l1247
  1976  002060                     l1247:
  1977                           
  1978                           ;main.c: 140:     oldDistLeft = distLeft;
  1979  002060  C09A  F092         	movff	_distLeft,_oldDistLeft	;volatile
  1980  002064  C09B  F093         	movff	_distLeft+1,_oldDistLeft+1	;volatile
  1981                           
  1982                           ;main.c: 141:     oldDistRight = distRight;
  1983  002068  C096  F090         	movff	_distRight,_oldDistRight	;volatile
  1984  00206C  C097  F091         	movff	_distRight+1,_oldDistRight+1	;volatile
  1985  002070  0012               	return		;funcret
  1986  002072                     __end_of_getCurve:
  1987                           	callstack 0
  1988                           
  1989 ;; *************** function _printf *****************
  1990 ;; Defined at:
  1991 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\printf.c"
  1992 ;; Parameters:    Size  Location     Type
  1993 ;;  fmt             2   50[BANK0 ] PTR const unsigned char 
  1994 ;;		 -> STR_9(10), STR_8(12), STR_7(11), STR_6(11), 
  1995 ;;		 -> STR_5(9), STR_4(2), STR_3(14), STR_2(13), 
  1996 ;;		 -> STR_1(22), 
  1997 ;; Auto vars:     Size  Location     Type
  1998 ;;  ap              2   56[BANK0 ] PTR void [1]
  1999 ;;		 -> ?_printf(2), 
  2000 ;;  ret             2    0        int 
  2001 ;; Return value:  Size  Location     Type
  2002 ;;                  2   50[BANK0 ] int 
  2003 ;; Registers used:
  2004 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2005 ;; Tracked objects:
  2006 ;;		On entry : 0/0
  2007 ;;		On exit  : 0/0
  2008 ;;		Unchanged: 0/0
  2009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2010 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2011 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2013 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2014 ;;Total ram usage:        8 bytes
  2015 ;; Hardware stack levels used: 1
  2016 ;; Hardware stack levels required when called: 16
  2017 ;; This function calls:
  2018 ;;		_vfprintf
  2019 ;; This function is called by:
  2020 ;;		_getCurve
  2021 ;; This function uses a non-reentrant model
  2022 ;;
  2023                           
  2024                           	psect	text4
  2025  003D94                     __ptext4:
  2026                           	callstack 0
  2027  003D94                     _printf:
  2028                           	callstack 12
  2029  003D94  0ED6               	movlw	low (?_printf+2)
  2030  003D96  0100               	movlb	0	; () banked
  2031  003D98  6FDA               	movwf	printf@ap& (0+255),b
  2032  003D9A  0E00               	movlw	high (?_printf+2)
  2033  003D9C  6FDB               	movwf	(printf@ap+1)& (0+255),b
  2034  003D9E                     
  2035                           ; BSR set to: 0
  2036  003D9E  0E00               	movlw	0
  2037  003DA0  6FCC               	movwf	vfprintf@fp& (0+255),b
  2038  003DA2  0E00               	movlw	0
  2039  003DA4  6FCD               	movwf	(vfprintf@fp+1)& (0+255),b
  2040  003DA6  C0D4  F0CE         	movff	printf@fmt,vfprintf@fmt
  2041  003DAA  C0D5  F0CF         	movff	printf@fmt+1,vfprintf@fmt+1
  2042  003DAE  0EDA               	movlw	low printf@ap
  2043  003DB0  6FD0               	movwf	vfprintf@ap& (0+255),b
  2044  003DB2  0E00               	movlw	high printf@ap
  2045  003DB4  6FD1               	movwf	(vfprintf@ap+1)& (0+255),b
  2046  003DB6  ECB6  F01A         	call	_vfprintf	;wreg free
  2047  003DBA  0012               	return		;funcret
  2048  003DBC                     __end_of_printf:
  2049                           	callstack 0
  2050                           
  2051 ;; *************** function _vfprintf *****************
  2052 ;; Defined at:
  2053 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2054 ;; Parameters:    Size  Location     Type
  2055 ;;  fp              2   42[BANK0 ] PTR struct _IO_FILE
  2056 ;;		 -> NULL(0), 
  2057 ;;  fmt             2   44[BANK0 ] PTR const unsigned char 
  2058 ;;		 -> STR_9(10), STR_8(12), STR_7(11), STR_6(11), 
  2059 ;;		 -> STR_5(9), STR_4(2), STR_3(14), STR_2(13), 
  2060 ;;		 -> STR_1(22), 
  2061 ;;  ap              2   46[BANK0 ] PTR PTR void 
  2062 ;;		 -> printf@ap(2), 
  2063 ;; Auto vars:     Size  Location     Type
  2064 ;;  cfmt            2   48[BANK0 ] PTR unsigned char 
  2065 ;;		 -> STR_9(10), STR_8(12), STR_7(11), STR_6(11), 
  2066 ;;		 -> STR_5(9), STR_4(2), STR_3(14), STR_2(13), 
  2067 ;;		 -> STR_1(22), 
  2068 ;; Return value:  Size  Location     Type
  2069 ;;                  2   42[BANK0 ] int 
  2070 ;; Registers used:
  2071 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2072 ;; Tracked objects:
  2073 ;;		On entry : 0/0
  2074 ;;		On exit  : 0/0
  2075 ;;		Unchanged: 0/0
  2076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2077 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2078 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2080 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2081 ;;Total ram usage:        8 bytes
  2082 ;; Hardware stack levels used: 1
  2083 ;; Hardware stack levels required when called: 15
  2084 ;; This function calls:
  2085 ;;		_vfpfcnvrt
  2086 ;; This function is called by:
  2087 ;;		_printf
  2088 ;; This function uses a non-reentrant model
  2089 ;;
  2090                           
  2091                           	psect	text5
  2092  00356C                     __ptext5:
  2093                           	callstack 0
  2094  00356C                     _vfprintf:
  2095                           	callstack 12
  2096  00356C                     
  2097                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  2098  00356C  C0CE  F0D2         	movff	vfprintf@fmt,vfprintf@cfmt
  2099  003570  C0CF  F0D3         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2100  003574                     
  2101                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  2102  003574  0E00               	movlw	0
  2103  003576  0100               	movlb	0	; () banked
  2104  003578  6F81               	movwf	(_nout+1)& (0+255),b
  2105  00357A  0E00               	movlw	0
  2106  00357C  6F80               	movwf	_nout& (0+255),b
  2107                           
  2108                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2109  00357E  EFD4  F01A         	goto	l5801
  2110  003582                     l5799:
  2111                           
  2112                           ; BSR set to: 0
  2113                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  2114  003582  C0CC  F0BC         	movff	vfprintf@fp,vfpfcnvrt@fp
  2115  003586  C0CD  F0BD         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2116  00358A  0ED2               	movlw	low vfprintf@cfmt
  2117  00358C  6FBE               	movwf	vfpfcnvrt@fmt& (0+255),b
  2118  00358E  0E00               	movlw	high vfprintf@cfmt
  2119  003590  6FBF               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2120  003592  C0D0  F0C0         	movff	vfprintf@ap,vfpfcnvrt@ap
  2121  003596  C0D1  F0C1         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2122  00359A  EC30  F00E         	call	_vfpfcnvrt	;wreg free
  2123  00359E  0100               	movlb	0	; () banked
  2124  0035A0  51BC               	movf	?_vfpfcnvrt& (0+255),w,b
  2125  0035A2  2780               	addwf	_nout& (0+255),f,b
  2126  0035A4  51BD               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  2127  0035A6  2381               	addwfc	(_nout+1)& (0+255),f,b
  2128  0035A8                     l5801:
  2129                           
  2130                           ; BSR set to: 0
  2131                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2132  0035A8  0060  F34B  FFF6   	movff	vfprintf@cfmt,tblptrl
  2133  0035AE  0060  F34F  FFF7   	movff	vfprintf@cfmt+1,tblptrh
  2134  0035B4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2135  0035B4  6AF8               	clrf	tblptru,c
  2136  0035B6                     	endif
  2137  0035B6                     	if	0	;tblptru may be non-zero
  2138  0035B6                     	endif
  2139  0035B6  0008               	tblrd		*
  2140  0035B8  50F5               	movf	tablat,w,c
  2141  0035BA  0900               	iorlw	0
  2142  0035BC  A4D8               	btfss	status,2,c
  2143  0035BE  EFE3  F01A         	goto	u4781
  2144  0035C2  EFE5  F01A         	goto	u4780
  2145  0035C6                     u4781:
  2146  0035C6  EFC1  F01A         	goto	l5799
  2147  0035CA                     u4780:
  2148  0035CA                     
  2149                           ; BSR set to: 0
  2150                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  2151  0035CA  C080  F0CC         	movff	_nout,?_vfprintf
  2152  0035CE  C081  F0CD         	movff	_nout+1,?_vfprintf+1
  2153  0035D2                     
  2154                           ; BSR set to: 0
  2155  0035D2  0012               	return		;funcret
  2156  0035D4                     __end_of_vfprintf:
  2157                           	callstack 0
  2158                           
  2159 ;; *************** function _vfpfcnvrt *****************
  2160 ;; Defined at:
  2161 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2162 ;; Parameters:    Size  Location     Type
  2163 ;;  fp              2   26[BANK0 ] PTR struct _IO_FILE
  2164 ;;		 -> NULL(0), 
  2165 ;;  fmt             2   28[BANK0 ] PTR PTR unsigned char 
  2166 ;;		 -> vfprintf@cfmt(2), 
  2167 ;;  ap              2   30[BANK0 ] PTR PTR void 
  2168 ;;		 -> printf@ap(2), 
  2169 ;; Auto vars:     Size  Location     Type
  2170 ;;  ll              8   34[BANK0 ] long long 
  2171 ;;  llu             8    0        unsigned long long 
  2172 ;;  f               4    0        unsigned long long 
  2173 ;;  vp              3    0        PTR void 
  2174 ;;  ct              3    0        unsigned char [3]
  2175 ;;  cp              3    0        PTR unsigned char 
  2176 ;;  i               2    0        int 
  2177 ;;  done            2    0        int 
  2178 ;;  c               1    0        unsigned char 
  2179 ;; Return value:  Size  Location     Type
  2180 ;;                  2   26[BANK0 ] int 
  2181 ;; Registers used:
  2182 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2183 ;; Tracked objects:
  2184 ;;		On entry : 0/0
  2185 ;;		On exit  : 0/0
  2186 ;;		Unchanged: 0/0
  2187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2188 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2189 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2190 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2191 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2192 ;;Total ram usage:       16 bytes
  2193 ;; Hardware stack levels used: 1
  2194 ;; Hardware stack levels required when called: 14
  2195 ;; This function calls:
  2196 ;;		_dtoa
  2197 ;;		_fputc
  2198 ;; This function is called by:
  2199 ;;		_vfprintf
  2200 ;; This function uses a non-reentrant model
  2201 ;;
  2202                           
  2203                           	psect	text6
  2204  001C60                     __ptext6:
  2205                           	callstack 0
  2206  001C60                     _vfpfcnvrt:
  2207                           	callstack 12
  2208  001C60                     
  2209                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  2210  001C60  0060  F2FB  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2211  001C66  0060  F2FF  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2212  001C6C  006F FF7B FFF6     	movff	postinc2,tblptrl
  2213  001C72  006F FF77 FFF7     	movff	postdec2,tblptrh
  2214  001C78                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2215  001C78  6AF8               	clrf	tblptru,c
  2216  001C7A                     	endif
  2217  001C7A                     	if	0	;tblptru may be non-zero
  2218  001C7A                     	endif
  2219  001C7A  0008               	tblrd		*
  2220  001C7C  50F5               	movf	tablat,w,c
  2221  001C7E  0A25               	xorlw	37
  2222  001C80  A4D8               	btfss	status,2,c
  2223  001C82  EF45  F00E         	goto	u4741
  2224  001C86  EF47  F00E         	goto	u4740
  2225  001C8A                     u4741:
  2226  001C8A  EF13  F00F         	goto	l5787
  2227  001C8E                     u4740:
  2228  001C8E                     
  2229                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  2230  001C8E  0060  F2FB  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2231  001C94  0060  F2FF  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2232  001C9A  2ADE               	incf	postinc2,f,c
  2233  001C9C  0E00               	movlw	0
  2234  001C9E  22DD               	addwfc	postdec2,f,c
  2235  001CA0                     
  2236                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  2237  001CA0  0E00               	movlw	0
  2238  001CA2  0100               	movlb	0	; () banked
  2239  001CA4  6F83               	movwf	(_width+1)& (0+255),b
  2240  001CA6  0E00               	movlw	0
  2241  001CA8  6F82               	movwf	_width& (0+255),b
  2242  001CAA  C082  F03D         	movff	_width,_flags
  2243  001CAE  C083  F03E         	movff	_width+1,_flags+1
  2244  001CB2                     
  2245                           ; BSR set to: 0
  2246                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  2247  001CB2  683B               	setf	_prec^0,c
  2248  001CB4  683C               	setf	(_prec+1)^0,c
  2249  001CB6                     
  2250                           ; BSR set to: 0
  2251                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2252  001CB6  0060  F2FB  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2253  001CBC  0060  F2FF  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2254  001CC2  006F FF7B FFF6     	movff	postinc2,tblptrl
  2255  001CC8  006F FF77 FFF7     	movff	postdec2,tblptrh
  2256  001CCE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2257  001CCE  6AF8               	clrf	tblptru,c
  2258  001CD0                     	endif
  2259  001CD0                     	if	0	;tblptru may be non-zero
  2260  001CD0                     	endif
  2261  001CD0  0008               	tblrd		*
  2262  001CD2  50F5               	movf	tablat,w,c
  2263  001CD4  0A64               	xorlw	100
  2264  001CD6  B4D8               	btfsc	status,2,c
  2265  001CD8  EF70  F00E         	goto	u4751
  2266  001CDC  EF72  F00E         	goto	u4750
  2267  001CE0                     u4751:
  2268  001CE0  EF89  F00E         	goto	l5765
  2269  001CE4                     u4750:
  2270  001CE4                     
  2271                           ; BSR set to: 0
  2272  001CE4  0060  F2FB  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2273  001CEA  0060  F2FF  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2274  001CF0  006F FF7B FFF6     	movff	postinc2,tblptrl
  2275  001CF6  006F FF77 FFF7     	movff	postdec2,tblptrh
  2276  001CFC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2277  001CFC  6AF8               	clrf	tblptru,c
  2278  001CFE                     	endif
  2279  001CFE                     	if	0	;tblptru may be non-zero
  2280  001CFE                     	endif
  2281  001CFE  0008               	tblrd		*
  2282  001D00  50F5               	movf	tablat,w,c
  2283  001D02  0A69               	xorlw	105
  2284  001D04  A4D8               	btfss	status,2,c
  2285  001D06  EF87  F00E         	goto	u4761
  2286  001D0A  EF89  F00E         	goto	u4760
  2287  001D0E                     u4761:
  2288  001D0E  EFD3  F00E         	goto	l5771
  2289  001D12                     u4760:
  2290  001D12                     l5765:
  2291                           
  2292                           ; BSR set to: 0
  2293                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  2294  001D12  0060  F2FB  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2295  001D18  0060  F2FF  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2296  001D1E  2ADE               	incf	postinc2,f,c
  2297  001D20  0E00               	movlw	0
  2298  001D22  22DD               	addwfc	postdec2,f,c
  2299                           
  2300                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2301  001D24  0060  F303  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  2302  001D2A  0060  F307  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  2303  001D30  006F FF7C  F0C2    	movff	indf2,??_vfpfcnvrt
  2304  001D36  0E02               	movlw	2
  2305  001D38  26DE               	addwf	postinc2,f,c
  2306  001D3A  006F FF7C  F0C3    	movff	indf2,??_vfpfcnvrt+1
  2307  001D40  0E00               	movlw	0
  2308  001D42  22DD               	addwfc	postdec2,f,c
  2309  001D44  0060  F30B  FFD9   	movff	??_vfpfcnvrt,fsr2l
  2310  001D4A  0060  F30F  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  2311  001D50  006F FF78  F0C4    	movff	postinc2,vfpfcnvrt@ll
  2312  001D56  006F FF74  F0C5    	movff	postdec2,vfpfcnvrt@ll+1
  2313  001D5C  0E00               	movlw	0
  2314  001D5E  BFC5               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  2315  001D60  0EFF               	movlw	-1
  2316  001D62  6FC6               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  2317  001D64  6FC7               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  2318  001D66  6FC8               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  2319  001D68  6FC9               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  2320  001D6A  6FCA               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  2321  001D6C  6FCB               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  2322  001D6E                     
  2323                           ; BSR set to: 0
  2324                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  2325  001D6E  C0BC  F031         	movff	vfpfcnvrt@fp,dtoa@fp
  2326  001D72  C0BD  F032         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2327  001D76  C0C4  F033         	movff	vfpfcnvrt@ll,dtoa@d
  2328  001D7A  C0C5  F034         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2329  001D7E  C0C6  F035         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2330  001D82  C0C7  F036         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2331  001D86  C0C8  F037         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2332  001D8A  C0C9  F038         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2333  001D8E  C0CA  F039         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2334  001D92  C0CB  F03A         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2335  001D96  ECBD  F00C         	call	_dtoa	;wreg free
  2336  001D9A  C031  F0BC         	movff	?_dtoa,?_vfpfcnvrt
  2337  001D9E  C032  F0BD         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2338  001DA2  EF35  F00F         	goto	l2085
  2339  001DA6                     l5771:
  2340                           
  2341                           ; BSR set to: 0
  2342                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2343  001DA6  0060  F2FB  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2344  001DAC  0060  F2FF  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2345  001DB2  006F FF7B FFF6     	movff	postinc2,tblptrl
  2346  001DB8  006F FF77 FFF7     	movff	postdec2,tblptrh
  2347  001DBE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2348  001DBE  6AF8               	clrf	tblptru,c
  2349  001DC0                     	endif
  2350  001DC0                     	if	0	;tblptru may be non-zero
  2351  001DC0                     	endif
  2352  001DC0  0008               	tblrd		*
  2353  001DC2  50F5               	movf	tablat,w,c
  2354  001DC4  0A25               	xorlw	37
  2355  001DC6  A4D8               	btfss	status,2,c
  2356  001DC8  EFE8  F00E         	goto	u4771
  2357  001DCC  EFEA  F00E         	goto	u4770
  2358  001DD0                     u4771:
  2359  001DD0  EF04  F00F         	goto	l5781
  2360  001DD4                     u4770:
  2361  001DD4                     
  2362                           ; BSR set to: 0
  2363                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2364  001DD4  0060  F2FB  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2365  001DDA  0060  F2FF  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2366  001DE0  2ADE               	incf	postinc2,f,c
  2367  001DE2  0E00               	movlw	0
  2368  001DE4  22DD               	addwfc	postdec2,f,c
  2369  001DE6                     
  2370                           ; BSR set to: 0
  2371                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2372  001DE6  0E00               	movlw	0
  2373  001DE8  6E17               	movwf	(fputc@c+1)^0,c
  2374  001DEA  0E25               	movlw	37
  2375  001DEC  6E16               	movwf	fputc@c^0,c
  2376  001DEE  C0BC  F018         	movff	vfpfcnvrt@fp,fputc@fp
  2377  001DF2  C0BD  F019         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2378  001DF6  ECED  F019         	call	_fputc	;wreg free
  2379  001DFA                     l5777:
  2380                           
  2381                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2382  001DFA  0E00               	movlw	0
  2383  001DFC  0100               	movlb	0	; () banked
  2384  001DFE  6FBD               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2385  001E00  0E01               	movlw	1
  2386  001E02  6FBC               	movwf	?_vfpfcnvrt& (0+255),b
  2387  001E04  EF35  F00F         	goto	l2085
  2388  001E08                     l5781:
  2389                           
  2390                           ; BSR set to: 0
  2391                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2392  001E08  0060  F2FB  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2393  001E0E  0060  F2FF  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2394  001E14  2ADE               	incf	postinc2,f,c
  2395  001E16  0E00               	movlw	0
  2396  001E18  22DD               	addwfc	postdec2,f,c
  2397  001E1A                     
  2398                           ; BSR set to: 0
  2399                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2400  001E1A  0E00               	movlw	0
  2401  001E1C  6FBD               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2402  001E1E  0E00               	movlw	0
  2403  001E20  6FBC               	movwf	?_vfpfcnvrt& (0+255),b
  2404  001E22  EF35  F00F         	goto	l2085
  2405  001E26                     l5787:
  2406                           
  2407                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2408  001E26  0060  F2FB  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2409  001E2C  0060  F2FF  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2410  001E32  006F FF7B FFF6     	movff	postinc2,tblptrl
  2411  001E38  006F FF77 FFF7     	movff	postdec2,tblptrh
  2412  001E3E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2413  001E3E  6AF8               	clrf	tblptru,c
  2414  001E40                     	endif
  2415  001E40                     	if	0	;tblptru may be non-zero
  2416  001E40                     	endif
  2417  001E40  0008               	tblrd		*
  2418  001E42  50F5               	movf	tablat,w,c
  2419  001E44  6E16               	movwf	fputc@c^0,c
  2420  001E46  6A17               	clrf	(fputc@c+1)^0,c
  2421  001E48  C0BC  F018         	movff	vfpfcnvrt@fp,fputc@fp
  2422  001E4C  C0BD  F019         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2423  001E50  ECED  F019         	call	_fputc	;wreg free
  2424  001E54                     
  2425                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2426  001E54  0060  F2FB  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2427  001E5A  0060  F2FF  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2428  001E60  2ADE               	incf	postinc2,f,c
  2429  001E62  0E00               	movlw	0
  2430  001E64  22DD               	addwfc	postdec2,f,c
  2431  001E66  EFFD  F00E         	goto	l5777
  2432  001E6A                     l2085:
  2433  001E6A  0012               	return		;funcret
  2434  001E6C                     __end_of_vfpfcnvrt:
  2435                           	callstack 0
  2436                           
  2437 ;; *************** function _dtoa *****************
  2438 ;; Defined at:
  2439 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2440 ;; Parameters:    Size  Location     Type
  2441 ;;  fp              2   48[COMRAM] PTR struct _IO_FILE
  2442 ;;		 -> NULL(0), 
  2443 ;;  d               8   50[COMRAM] long long 
  2444 ;; Auto vars:     Size  Location     Type
  2445 ;;  n               8   16[BANK0 ] long long 
  2446 ;;  i               2   24[BANK0 ] int 
  2447 ;;  s               2   14[BANK0 ] int 
  2448 ;;  w               2   12[BANK0 ] int 
  2449 ;;  p               2   10[BANK0 ] int 
  2450 ;; Return value:  Size  Location     Type
  2451 ;;                  2   48[COMRAM] int 
  2452 ;; Registers used:
  2453 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2454 ;; Tracked objects:
  2455 ;;		On entry : 0/0
  2456 ;;		On exit  : 0/0
  2457 ;;		Unchanged: 0/0
  2458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2459 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2460 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2461 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2462 ;;      Totals:        10      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2463 ;;Total ram usage:       36 bytes
  2464 ;; Hardware stack levels used: 1
  2465 ;; Hardware stack levels required when called: 13
  2466 ;; This function calls:
  2467 ;;		___aodiv
  2468 ;;		___aomod
  2469 ;;		_abs
  2470 ;;		_pad
  2471 ;; This function is called by:
  2472 ;;		_vfpfcnvrt
  2473 ;; This function uses a non-reentrant model
  2474 ;;
  2475                           
  2476                           	psect	text7
  2477  00197A                     __ptext7:
  2478                           	callstack 0
  2479  00197A                     _dtoa:
  2480                           	callstack 12
  2481  00197A                     
  2482                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  2483  00197A  C033  F0B2         	movff	dtoa@d,dtoa@n
  2484  00197E  C034  F0B3         	movff	dtoa@d+1,dtoa@n+1
  2485  001982  C035  F0B4         	movff	dtoa@d+2,dtoa@n+2
  2486  001986  C036  F0B5         	movff	dtoa@d+3,dtoa@n+3
  2487  00198A  C037  F0B6         	movff	dtoa@d+4,dtoa@n+4
  2488  00198E  C038  F0B7         	movff	dtoa@d+5,dtoa@n+5
  2489  001992  C039  F0B8         	movff	dtoa@d+6,dtoa@n+6
  2490  001996  C03A  F0B9         	movff	dtoa@d+7,dtoa@n+7
  2491  00199A                     
  2492                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  2493  00199A  0100               	movlb	0	; () banked
  2494  00199C  BFB9               	btfsc	(dtoa@n+7)& (0+255),7,b
  2495  00199E  EFD3  F00C         	goto	u4591
  2496  0019A2  EFD6  F00C         	goto	u4590
  2497  0019A6                     u4591:
  2498  0019A6  0E01               	movlw	1
  2499  0019A8  EFD7  F00C         	goto	u4600
  2500  0019AC                     u4590:
  2501  0019AC  0E00               	movlw	0
  2502  0019AE                     u4600:
  2503  0019AE  6FB0               	movwf	dtoa@s& (0+255),b
  2504  0019B0  6BB1               	clrf	(dtoa@s+1)& (0+255),b
  2505                           
  2506                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  2507  0019B2  51B0               	movf	dtoa@s& (0+255),w,b
  2508  0019B4  11B1               	iorwf	(dtoa@s+1)& (0+255),w,b
  2509  0019B6  B4D8               	btfsc	status,2,c
  2510  0019B8  EFE0  F00C         	goto	u4611
  2511  0019BC  EFE2  F00C         	goto	u4610
  2512  0019C0                     u4611:
  2513  0019C0  EFF2  F00C         	goto	l5697
  2514  0019C4                     u4610:
  2515  0019C4                     
  2516                           ; BSR set to: 0
  2517                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  2518  0019C4  1FB9               	comf	(dtoa@n+7)& (0+255),f,b
  2519  0019C6  1FB8               	comf	(dtoa@n+6)& (0+255),f,b
  2520  0019C8  1FB7               	comf	(dtoa@n+5)& (0+255),f,b
  2521  0019CA  1FB6               	comf	(dtoa@n+4)& (0+255),f,b
  2522  0019CC  1FB5               	comf	(dtoa@n+3)& (0+255),f,b
  2523  0019CE  1FB4               	comf	(dtoa@n+2)& (0+255),f,b
  2524  0019D0  1FB3               	comf	(dtoa@n+1)& (0+255),f,b
  2525  0019D2  6DB2               	negf	dtoa@n& (0+255),b
  2526  0019D4  0E00               	movlw	0
  2527  0019D6  23B3               	addwfc	(dtoa@n+1)& (0+255),f,b
  2528  0019D8  23B4               	addwfc	(dtoa@n+2)& (0+255),f,b
  2529  0019DA  23B5               	addwfc	(dtoa@n+3)& (0+255),f,b
  2530  0019DC  23B6               	addwfc	(dtoa@n+4)& (0+255),f,b
  2531  0019DE  23B7               	addwfc	(dtoa@n+5)& (0+255),f,b
  2532  0019E0  23B8               	addwfc	(dtoa@n+6)& (0+255),f,b
  2533  0019E2  23B9               	addwfc	(dtoa@n+7)& (0+255),f,b
  2534  0019E4                     l5697:
  2535                           
  2536                           ; BSR set to: 0
  2537                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  2538  0019E4  BE3C               	btfsc	(_prec+1)^0,7,c
  2539  0019E6  EFF7  F00C         	goto	u4621
  2540  0019EA  EFF9  F00C         	goto	u4620
  2541  0019EE                     u4621:
  2542  0019EE  EFFA  F00C         	goto	l5701
  2543  0019F2                     u4620:
  2544  0019F2                     
  2545                           ; BSR set to: 0
  2546                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  2547  0019F2  923D               	bcf	_flags^0,1,c
  2548  0019F4                     l5701:
  2549                           
  2550                           ; BSR set to: 0
  2551                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  2552  0019F4  BE3C               	btfsc	(_prec+1)^0,7,c
  2553  0019F6  EF07  F00D         	goto	u4630
  2554  0019FA  503C               	movf	(_prec+1)^0,w,c
  2555  0019FC  E106               	bnz	u4631
  2556  0019FE  043B               	decf	_prec^0,w,c
  2557  001A00  B0D8               	btfsc	status,0,c
  2558  001A02  EF05  F00D         	goto	u4631
  2559  001A06  EF07  F00D         	goto	u4630
  2560  001A0A                     u4631:
  2561  001A0A  EF0D  F00D         	goto	l2058
  2562  001A0E                     u4630:
  2563  001A0E                     
  2564                           ; BSR set to: 0
  2565  001A0E  0E00               	movlw	0
  2566  001A10  6FAD               	movwf	(dtoa@p+1)& (0+255),b
  2567  001A12  0E01               	movlw	1
  2568  001A14  6FAC               	movwf	dtoa@p& (0+255),b
  2569  001A16  EF11  F00D         	goto	l2060
  2570  001A1A                     l2058:
  2571                           
  2572                           ; BSR set to: 0
  2573  001A1A  C03B  F0AC         	movff	_prec,dtoa@p
  2574  001A1E  C03C  F0AD         	movff	_prec+1,dtoa@p+1
  2575  001A22                     l2060:
  2576                           
  2577                           ; BSR set to: 0
  2578                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  2579  001A22  C082  F0AE         	movff	_width,dtoa@w
  2580  001A26  C083  F0AF         	movff	_width+1,dtoa@w+1
  2581  001A2A                     
  2582                           ; BSR set to: 0
  2583                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  2584  001A2A  51B0               	movf	dtoa@s& (0+255),w,b
  2585  001A2C  11B1               	iorwf	(dtoa@s+1)& (0+255),w,b
  2586  001A2E  A4D8               	btfss	status,2,c
  2587  001A30  EF1C  F00D         	goto	u4641
  2588  001A34  EF1E  F00D         	goto	u4640
  2589  001A38                     u4641:
  2590  001A38  EF25  F00D         	goto	l5709
  2591  001A3C                     u4640:
  2592  001A3C                     
  2593                           ; BSR set to: 0
  2594  001A3C  A43D               	btfss	_flags^0,2,c
  2595  001A3E  EF23  F00D         	goto	u4651
  2596  001A42  EF25  F00D         	goto	u4650
  2597  001A46                     u4651:
  2598  001A46  EF28  F00D         	goto	l5711
  2599  001A4A                     u4650:
  2600  001A4A                     l5709:
  2601                           
  2602                           ; BSR set to: 0
  2603                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  2604  001A4A  07AE               	decf	dtoa@w& (0+255),f,b
  2605  001A4C  A0D8               	btfss	status,0,c
  2606  001A4E  07AF               	decf	(dtoa@w+1)& (0+255),f,b
  2607  001A50                     l5711:
  2608                           
  2609                           ; BSR set to: 0
  2610                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  2611  001A50  0E00               	movlw	0
  2612  001A52  6FBB               	movwf	(dtoa@i+1)& (0+255),b
  2613  001A54  0E1F               	movlw	31
  2614  001A56  6FBA               	movwf	dtoa@i& (0+255),b
  2615  001A58                     
  2616                           ; BSR set to: 0
  2617                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  2618  001A58  0E00               	movlw	0
  2619  001A5A  0101               	movlb	1	; () banked
  2620  001A5C  6F1F               	movwf	(_dbuf+31)& (0+255),b
  2621                           
  2622                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2623  001A5E  EFAE  F00D         	goto	l5725
  2624  001A62                     l5715:
  2625                           
  2626                           ; BSR set to: 0
  2627                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  2628  001A62  07BA               	decf	dtoa@i& (0+255),f,b
  2629  001A64  A0D8               	btfss	status,0,c
  2630  001A66  07BB               	decf	(dtoa@i+1)& (0+255),f,b
  2631  001A68                     
  2632                           ; BSR set to: 0
  2633                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  2634  001A68  0E00               	movlw	low _dbuf
  2635  001A6A  25BA               	addwf	dtoa@i& (0+255),w,b
  2636  001A6C  6ED9               	movwf	fsr2l,c
  2637  001A6E  0E01               	movlw	high _dbuf
  2638  001A70  21BB               	addwfc	(dtoa@i+1)& (0+255),w,b
  2639  001A72  6EDA               	movwf	fsr2h,c
  2640  001A74  C0B2  F014         	movff	dtoa@n,___aomod@dividend
  2641  001A78  C0B3  F015         	movff	dtoa@n+1,___aomod@dividend+1
  2642  001A7C  C0B4  F016         	movff	dtoa@n+2,___aomod@dividend+2
  2643  001A80  C0B5  F017         	movff	dtoa@n+3,___aomod@dividend+3
  2644  001A84  C0B6  F018         	movff	dtoa@n+4,___aomod@dividend+4
  2645  001A88  C0B7  F019         	movff	dtoa@n+5,___aomod@dividend+5
  2646  001A8C  C0B8  F01A         	movff	dtoa@n+6,___aomod@dividend+6
  2647  001A90  C0B9  F01B         	movff	dtoa@n+7,___aomod@dividend+7
  2648  001A94  0E0A               	movlw	10
  2649  001A96  6E1C               	movwf	___aomod@divisor^0,c
  2650  001A98  0E00               	movlw	0
  2651  001A9A  6E1D               	movwf	(___aomod@divisor+1)^0,c
  2652  001A9C  0E00               	movlw	0
  2653  001A9E  6E1E               	movwf	(___aomod@divisor+2)^0,c
  2654  001AA0  0E00               	movlw	0
  2655  001AA2  6E1F               	movwf	(___aomod@divisor+3)^0,c
  2656  001AA4  0E00               	movlw	0
  2657  001AA6  6E20               	movwf	(___aomod@divisor+4)^0,c
  2658  001AA8  0E00               	movlw	0
  2659  001AAA  6E21               	movwf	(___aomod@divisor+5)^0,c
  2660  001AAC  0E00               	movlw	0
  2661  001AAE  6E22               	movwf	(___aomod@divisor+6)^0,c
  2662  001AB0  0E00               	movlw	0
  2663  001AB2  6E23               	movwf	(___aomod@divisor+7)^0,c
  2664  001AB4  ECB2  F013         	call	___aomod	;wreg free
  2665  001AB8  C014  F0A2         	movff	?___aomod,??_dtoa
  2666  001ABC  C015  F0A3         	movff	?___aomod+1,??_dtoa+1
  2667  001AC0  C016  F0A4         	movff	?___aomod+2,??_dtoa+2
  2668  001AC4  C017  F0A5         	movff	?___aomod+3,??_dtoa+3
  2669  001AC8  C018  F0A6         	movff	?___aomod+4,??_dtoa+4
  2670  001ACC  C019  F0A7         	movff	?___aomod+5,??_dtoa+5
  2671  001AD0  C01A  F0A8         	movff	?___aomod+6,??_dtoa+6
  2672  001AD4  C01B  F0A9         	movff	?___aomod+7,??_dtoa+7
  2673  001AD8  C0A2  F026         	movff	??_dtoa,abs@a
  2674  001ADC  C0A4  F027         	movff	??_dtoa+2,abs@a+1
  2675  001AE0  EC49  F01C         	call	_abs	;wreg free
  2676  001AE4  5026               	movf	?_abs^0,w,c
  2677  001AE6  0F30               	addlw	48
  2678  001AE8  6EDF               	movwf	indf2,c
  2679  001AEA                     
  2680                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  2681  001AEA  0100               	movlb	0	; () banked
  2682  001AEC  07AC               	decf	dtoa@p& (0+255),f,b
  2683  001AEE  A0D8               	btfss	status,0,c
  2684  001AF0  07AD               	decf	(dtoa@p+1)& (0+255),f,b
  2685  001AF2                     
  2686                           ; BSR set to: 0
  2687                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  2688  001AF2  07AE               	decf	dtoa@w& (0+255),f,b
  2689  001AF4  A0D8               	btfss	status,0,c
  2690  001AF6  07AF               	decf	(dtoa@w+1)& (0+255),f,b
  2691  001AF8                     
  2692                           ; BSR set to: 0
  2693                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  2694  001AF8  C0B2  F014         	movff	dtoa@n,___aodiv@dividend
  2695  001AFC  C0B3  F015         	movff	dtoa@n+1,___aodiv@dividend+1
  2696  001B00  C0B4  F016         	movff	dtoa@n+2,___aodiv@dividend+2
  2697  001B04  C0B5  F017         	movff	dtoa@n+3,___aodiv@dividend+3
  2698  001B08  C0B6  F018         	movff	dtoa@n+4,___aodiv@dividend+4
  2699  001B0C  C0B7  F019         	movff	dtoa@n+5,___aodiv@dividend+5
  2700  001B10  C0B8  F01A         	movff	dtoa@n+6,___aodiv@dividend+6
  2701  001B14  C0B9  F01B         	movff	dtoa@n+7,___aodiv@dividend+7
  2702  001B18  0E0A               	movlw	10
  2703  001B1A  6E1C               	movwf	___aodiv@divisor^0,c
  2704  001B1C  0E00               	movlw	0
  2705  001B1E  6E1D               	movwf	(___aodiv@divisor+1)^0,c
  2706  001B20  0E00               	movlw	0
  2707  001B22  6E1E               	movwf	(___aodiv@divisor+2)^0,c
  2708  001B24  0E00               	movlw	0
  2709  001B26  6E1F               	movwf	(___aodiv@divisor+3)^0,c
  2710  001B28  0E00               	movlw	0
  2711  001B2A  6E20               	movwf	(___aodiv@divisor+4)^0,c
  2712  001B2C  0E00               	movlw	0
  2713  001B2E  6E21               	movwf	(___aodiv@divisor+5)^0,c
  2714  001B30  0E00               	movlw	0
  2715  001B32  6E22               	movwf	(___aodiv@divisor+6)^0,c
  2716  001B34  0E00               	movlw	0
  2717  001B36  6E23               	movwf	(___aodiv@divisor+7)^0,c
  2718  001B38  ECEE  F012         	call	___aodiv	;wreg free
  2719  001B3C  C014  F0B2         	movff	?___aodiv,dtoa@n
  2720  001B40  C015  F0B3         	movff	?___aodiv+1,dtoa@n+1
  2721  001B44  C016  F0B4         	movff	?___aodiv+2,dtoa@n+2
  2722  001B48  C017  F0B5         	movff	?___aodiv+3,dtoa@n+3
  2723  001B4C  C018  F0B6         	movff	?___aodiv+4,dtoa@n+4
  2724  001B50  C019  F0B7         	movff	?___aodiv+5,dtoa@n+5
  2725  001B54  C01A  F0B8         	movff	?___aodiv+6,dtoa@n+6
  2726  001B58  C01B  F0B9         	movff	?___aodiv+7,dtoa@n+7
  2727  001B5C                     l5725:
  2728                           
  2729                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2730  001B5C  0100               	movlb	0	; () banked
  2731  001B5E  BFBB               	btfsc	(dtoa@i+1)& (0+255),7,b
  2732  001B60  EFBA  F00D         	goto	u4661
  2733  001B64  51BB               	movf	(dtoa@i+1)& (0+255),w,b
  2734  001B66  E108               	bnz	u4660
  2735  001B68  05BA               	decf	dtoa@i& (0+255),w,b
  2736  001B6A  A0D8               	btfss	status,0,c
  2737  001B6C  EFBA  F00D         	goto	u4661
  2738  001B70  EFBC  F00D         	goto	u4660
  2739  001B74                     u4661:
  2740  001B74  EFEC  F00D         	goto	l5735
  2741  001B78                     u4660:
  2742  001B78                     
  2743                           ; BSR set to: 0
  2744  001B78  51B2               	movf	dtoa@n& (0+255),w,b
  2745  001B7A  11B3               	iorwf	(dtoa@n+1)& (0+255),w,b
  2746  001B7C  11B4               	iorwf	(dtoa@n+2)& (0+255),w,b
  2747  001B7E  11B5               	iorwf	(dtoa@n+3)& (0+255),w,b
  2748  001B80  11B6               	iorwf	(dtoa@n+4)& (0+255),w,b
  2749  001B82  11B7               	iorwf	(dtoa@n+5)& (0+255),w,b
  2750  001B84  11B8               	iorwf	(dtoa@n+6)& (0+255),w,b
  2751  001B86  11B9               	iorwf	(dtoa@n+7)& (0+255),w,b
  2752  001B88  A4D8               	btfss	status,2,c
  2753  001B8A  EFC9  F00D         	goto	u4671
  2754  001B8E  EFCB  F00D         	goto	u4670
  2755  001B92                     u4671:
  2756  001B92  EF31  F00D         	goto	l5715
  2757  001B96                     u4670:
  2758  001B96                     
  2759                           ; BSR set to: 0
  2760  001B96  BFAD               	btfsc	(dtoa@p+1)& (0+255),7,b
  2761  001B98  EFD8  F00D         	goto	u4680
  2762  001B9C  51AD               	movf	(dtoa@p+1)& (0+255),w,b
  2763  001B9E  E106               	bnz	u4681
  2764  001BA0  05AC               	decf	dtoa@p& (0+255),w,b
  2765  001BA2  B0D8               	btfsc	status,0,c
  2766  001BA4  EFD6  F00D         	goto	u4681
  2767  001BA8  EFD8  F00D         	goto	u4680
  2768  001BAC                     u4681:
  2769  001BAC  EF31  F00D         	goto	l5715
  2770  001BB0                     u4680:
  2771  001BB0                     
  2772                           ; BSR set to: 0
  2773  001BB0  BFAF               	btfsc	(dtoa@w+1)& (0+255),7,b
  2774  001BB2  EFE3  F00D         	goto	u4691
  2775  001BB6  51AF               	movf	(dtoa@w+1)& (0+255),w,b
  2776  001BB8  E108               	bnz	u4690
  2777  001BBA  05AE               	decf	dtoa@w& (0+255),w,b
  2778  001BBC  A0D8               	btfss	status,0,c
  2779  001BBE  EFE3  F00D         	goto	u4691
  2780  001BC2  EFE5  F00D         	goto	u4690
  2781  001BC6                     u4691:
  2782  001BC6  EFEC  F00D         	goto	l5735
  2783  001BCA                     u4690:
  2784  001BCA                     
  2785                           ; BSR set to: 0
  2786  001BCA  B23D               	btfsc	_flags^0,1,c
  2787  001BCC  EFEA  F00D         	goto	u4701
  2788  001BD0  EFEC  F00D         	goto	u4700
  2789  001BD4                     u4701:
  2790  001BD4  EF31  F00D         	goto	l5715
  2791  001BD8                     u4700:
  2792  001BD8                     l5735:
  2793                           
  2794                           ; BSR set to: 0
  2795                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  2796  001BD8  51B0               	movf	dtoa@s& (0+255),w,b
  2797  001BDA  11B1               	iorwf	(dtoa@s+1)& (0+255),w,b
  2798  001BDC  A4D8               	btfss	status,2,c
  2799  001BDE  EFF3  F00D         	goto	u4711
  2800  001BE2  EFF5  F00D         	goto	u4710
  2801  001BE6                     u4711:
  2802  001BE6  EFFC  F00D         	goto	l5739
  2803  001BEA                     u4710:
  2804  001BEA                     
  2805                           ; BSR set to: 0
  2806  001BEA  A43D               	btfss	_flags^0,2,c
  2807  001BEC  EFFA  F00D         	goto	u4721
  2808  001BF0  EFFC  F00D         	goto	u4720
  2809  001BF4                     u4721:
  2810  001BF4  EF1B  F00E         	goto	l5749
  2811  001BF8                     u4720:
  2812  001BF8                     l5739:
  2813                           
  2814                           ; BSR set to: 0
  2815                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  2816  001BF8  07BA               	decf	dtoa@i& (0+255),f,b
  2817  001BFA  A0D8               	btfss	status,0,c
  2818  001BFC  07BB               	decf	(dtoa@i+1)& (0+255),f,b
  2819  001BFE                     
  2820                           ; BSR set to: 0
  2821                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  2822  001BFE  51B0               	movf	dtoa@s& (0+255),w,b
  2823  001C00  11B1               	iorwf	(dtoa@s+1)& (0+255),w,b
  2824  001C02  A4D8               	btfss	status,2,c
  2825  001C04  EF06  F00E         	goto	u4731
  2826  001C08  EF08  F00E         	goto	u4730
  2827  001C0C                     u4731:
  2828  001C0C  EF0E  F00E         	goto	l5745
  2829  001C10                     u4730:
  2830  001C10                     
  2831                           ; BSR set to: 0
  2832  001C10  0E00               	movlw	0
  2833  001C12  6FAB               	movwf	(_dtoa$3483+1)& (0+255),b
  2834  001C14  0E2B               	movlw	43
  2835  001C16  6FAA               	movwf	_dtoa$3483& (0+255),b
  2836  001C18  EF12  F00E         	goto	l5747
  2837  001C1C                     l5745:
  2838                           
  2839                           ; BSR set to: 0
  2840  001C1C  0E00               	movlw	0
  2841  001C1E  6FAB               	movwf	(_dtoa$3483+1)& (0+255),b
  2842  001C20  0E2D               	movlw	45
  2843  001C22  6FAA               	movwf	_dtoa$3483& (0+255),b
  2844  001C24                     l5747:
  2845                           
  2846                           ; BSR set to: 0
  2847  001C24  0E00               	movlw	low _dbuf
  2848  001C26  25BA               	addwf	dtoa@i& (0+255),w,b
  2849  001C28  6ED9               	movwf	fsr2l,c
  2850  001C2A  0E01               	movlw	high _dbuf
  2851  001C2C  21BB               	addwfc	(dtoa@i+1)& (0+255),w,b
  2852  001C2E  6EDA               	movwf	fsr2h,c
  2853  001C30  0060  F2AB  FFDF   	movff	_dtoa$3483,indf2
  2854  001C36                     l5749:
  2855                           
  2856                           ; BSR set to: 0
  2857                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  2858  001C36  C031  F026         	movff	dtoa@fp,pad@fp
  2859  001C3A  C032  F027         	movff	dtoa@fp+1,pad@fp+1
  2860  001C3E  0E00               	movlw	low _dbuf
  2861  001C40  25BA               	addwf	dtoa@i& (0+255),w,b
  2862  001C42  6E28               	movwf	pad@buf^0,c
  2863  001C44  0E01               	movlw	high _dbuf
  2864  001C46  21BB               	addwfc	(dtoa@i+1)& (0+255),w,b
  2865  001C48  6E29               	movwf	(pad@buf+1)^0,c
  2866  001C4A  C0AE  F02A         	movff	dtoa@w,pad@p
  2867  001C4E  C0AF  F02B         	movff	dtoa@w+1,pad@p+1
  2868  001C52  ECDA  F018         	call	_pad	;wreg free
  2869  001C56  C026  F031         	movff	?_pad,?_dtoa
  2870  001C5A  C027  F032         	movff	?_pad+1,?_dtoa+1
  2871  001C5E  0012               	return		;funcret
  2872  001C60                     __end_of_dtoa:
  2873                           	callstack 0
  2874                           
  2875 ;; *************** function _pad *****************
  2876 ;; Defined at:
  2877 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2878 ;; Parameters:    Size  Location     Type
  2879 ;;  fp              2   37[COMRAM] PTR struct _IO_FILE
  2880 ;;		 -> NULL(0), 
  2881 ;;  buf             2   39[COMRAM] PTR unsigned char 
  2882 ;;		 -> dbuf(32), 
  2883 ;;  p               2   41[COMRAM] int 
  2884 ;; Auto vars:     Size  Location     Type
  2885 ;;  w               2   46[COMRAM] int 
  2886 ;;  i               2   44[COMRAM] int 
  2887 ;; Return value:  Size  Location     Type
  2888 ;;                  2   37[COMRAM] int 
  2889 ;; Registers used:
  2890 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2891 ;; Tracked objects:
  2892 ;;		On entry : 0/0
  2893 ;;		On exit  : 0/0
  2894 ;;		Unchanged: 0/0
  2895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2896 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2897 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2898 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2899 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2900 ;;Total ram usage:       11 bytes
  2901 ;; Hardware stack levels used: 1
  2902 ;; Hardware stack levels required when called: 12
  2903 ;; This function calls:
  2904 ;;		_fputc
  2905 ;;		_fputs
  2906 ;;		_strlen
  2907 ;; This function is called by:
  2908 ;;		_dtoa
  2909 ;; This function uses a non-reentrant model
  2910 ;;
  2911                           
  2912                           	psect	text8
  2913  0031B4                     __ptext8:
  2914                           	callstack 0
  2915  0031B4                     _pad:
  2916                           	callstack 12
  2917  0031B4                     
  2918                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  2919  0031B4  A03D               	btfss	_flags^0,0,c
  2920  0031B6  EFDF  F018         	goto	u4541
  2921  0031BA  EFE1  F018         	goto	u4540
  2922  0031BE                     u4541:
  2923  0031BE  EFEB  F018         	goto	l5669
  2924  0031C2                     u4540:
  2925  0031C2                     
  2926                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  2927  0031C2  C028  F01F         	movff	pad@buf,fputs@s
  2928  0031C6  C029  F020         	movff	pad@buf+1,fputs@s+1
  2929  0031CA  C026  F021         	movff	pad@fp,fputs@fp
  2930  0031CE  C027  F022         	movff	pad@fp+1,fputs@fp+1
  2931  0031D2  EC05  F01C         	call	_fputs	;wreg free
  2932  0031D6                     l5669:
  2933                           
  2934                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  2935  0031D6  BE2B               	btfsc	(pad@p+1)^0,7,c
  2936  0031D8  EFF0  F018         	goto	u4551
  2937  0031DC  EFF2  F018         	goto	u4550
  2938  0031E0                     u4551:
  2939  0031E0  EFF8  F018         	goto	l5673
  2940  0031E4                     u4550:
  2941  0031E4  C02A  F02F         	movff	pad@p,pad@w
  2942  0031E8  C02B  F030         	movff	pad@p+1,pad@w+1
  2943  0031EC  EFFC  F018         	goto	l2047
  2944  0031F0                     l5673:
  2945  0031F0  0E00               	movlw	0
  2946  0031F2  6E30               	movwf	(pad@w+1)^0,c
  2947  0031F4  0E00               	movlw	0
  2948  0031F6  6E2F               	movwf	pad@w^0,c
  2949  0031F8                     l2047:
  2950                           
  2951                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  2952  0031F8  0E00               	movlw	0
  2953  0031FA  6E2E               	movwf	(pad@i+1)^0,c
  2954  0031FC  0E00               	movlw	0
  2955  0031FE  6E2D               	movwf	pad@i^0,c
  2956                           
  2957                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2958  003200  EF0E  F019         	goto	l5679
  2959  003204                     l5675:
  2960                           
  2961                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  2962  003204  0E00               	movlw	0
  2963  003206  6E17               	movwf	(fputc@c+1)^0,c
  2964  003208  0E20               	movlw	32
  2965  00320A  6E16               	movwf	fputc@c^0,c
  2966  00320C  C026  F018         	movff	pad@fp,fputc@fp
  2967  003210  C027  F019         	movff	pad@fp+1,fputc@fp+1
  2968  003214  ECED  F019         	call	_fputc	;wreg free
  2969  003218                     
  2970                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  2971  003218  4A2D               	infsnz	pad@i^0,f,c
  2972  00321A  2A2E               	incf	(pad@i+1)^0,f,c
  2973  00321C                     l5679:
  2974                           
  2975                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2976  00321C  502F               	movf	pad@w^0,w,c
  2977  00321E  5C2D               	subwf	pad@i^0,w,c
  2978  003220  502E               	movf	(pad@i+1)^0,w,c
  2979  003222  0A80               	xorlw	128
  2980  003224  6E2C               	movwf	??_pad^0,c
  2981  003226  5030               	movf	(pad@w+1)^0,w,c
  2982  003228  0A80               	xorlw	128
  2983  00322A  582C               	subwfb	??_pad^0,w,c
  2984  00322C  A0D8               	btfss	status,0,c
  2985  00322E  EF1B  F019         	goto	u4561
  2986  003232  EF1D  F019         	goto	u4560
  2987  003236                     u4561:
  2988  003236  EF02  F019         	goto	l5675
  2989  00323A                     u4560:
  2990  00323A                     
  2991                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  2992  00323A  B03D               	btfsc	_flags^0,0,c
  2993  00323C  EF22  F019         	goto	u4571
  2994  003240  EF24  F019         	goto	u4570
  2995  003244                     u4571:
  2996  003244  EF2E  F019         	goto	l5683
  2997  003248                     u4570:
  2998  003248                     
  2999                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  3000  003248  C028  F01F         	movff	pad@buf,fputs@s
  3001  00324C  C029  F020         	movff	pad@buf+1,fputs@s+1
  3002  003250  C026  F021         	movff	pad@fp,fputs@fp
  3003  003254  C027  F022         	movff	pad@fp+1,fputs@fp+1
  3004  003258  EC05  F01C         	call	_fputs	;wreg free
  3005  00325C                     l5683:
  3006                           
  3007                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  3008  00325C  C028  F014         	movff	pad@buf,strlen@s
  3009  003260  C029  F015         	movff	pad@buf+1,strlen@s+1
  3010  003264  EC69  F01C         	call	_strlen	;wreg free
  3011  003268  502F               	movf	pad@w^0,w,c
  3012  00326A  2414               	addwf	?_strlen^0,w,c
  3013  00326C  6E26               	movwf	?_pad^0,c
  3014  00326E  5030               	movf	(pad@w+1)^0,w,c
  3015  003270  2015               	addwfc	(?_strlen+1)^0,w,c
  3016  003272  6E27               	movwf	(?_pad+1)^0,c
  3017  003274  0012               	return		;funcret
  3018  003276                     __end_of_pad:
  3019                           	callstack 0
  3020                           
  3021 ;; *************** function _strlen *****************
  3022 ;; Defined at:
  3023 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  3024 ;; Parameters:    Size  Location     Type
  3025 ;;  s               2   19[COMRAM] PTR const unsigned char 
  3026 ;;		 -> dbuf(32), 
  3027 ;; Auto vars:     Size  Location     Type
  3028 ;;  a               2   21[COMRAM] PTR const unsigned char 
  3029 ;;		 -> dbuf(32), 
  3030 ;; Return value:  Size  Location     Type
  3031 ;;                  2   19[COMRAM] unsigned int 
  3032 ;; Registers used:
  3033 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3034 ;; Tracked objects:
  3035 ;;		On entry : 0/0
  3036 ;;		On exit  : 0/0
  3037 ;;		Unchanged: 0/0
  3038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3039 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3040 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3042 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3043 ;;Total ram usage:        4 bytes
  3044 ;; Hardware stack levels used: 1
  3045 ;; Hardware stack levels required when called: 8
  3046 ;; This function calls:
  3047 ;;		Nothing
  3048 ;; This function is called by:
  3049 ;;		_pad
  3050 ;; This function uses a non-reentrant model
  3051 ;;
  3052                           
  3053                           	psect	text9
  3054  0038D2                     __ptext9:
  3055                           	callstack 0
  3056  0038D2                     _strlen:
  3057                           	callstack 15
  3058  0038D2  C014  F016         	movff	strlen@s,strlen@a
  3059  0038D6  C015  F017         	movff	strlen@s+1,strlen@a+1
  3060  0038DA  EF71  F01C         	goto	l5579
  3061  0038DE                     l5577:
  3062  0038DE  4A14               	infsnz	strlen@s^0,f,c
  3063  0038E0  2A15               	incf	(strlen@s+1)^0,f,c
  3064  0038E2                     l5579:
  3065  0038E2  0060  F053  FFD9   	movff	strlen@s,fsr2l
  3066  0038E8  0060  F057  FFDA   	movff	strlen@s+1,fsr2h
  3067  0038EE  50DF               	movf	indf2,w,c
  3068  0038F0  A4D8               	btfss	status,2,c
  3069  0038F2  EF7D  F01C         	goto	u4401
  3070  0038F6  EF7F  F01C         	goto	u4400
  3071  0038FA                     u4401:
  3072  0038FA  EF6F  F01C         	goto	l5577
  3073  0038FE                     u4400:
  3074  0038FE  5016               	movf	strlen@a^0,w,c
  3075  003900  5C14               	subwf	strlen@s^0,w,c
  3076  003902  6E14               	movwf	?_strlen^0,c
  3077  003904  5017               	movf	(strlen@a+1)^0,w,c
  3078  003906  5815               	subwfb	(strlen@s+1)^0,w,c
  3079  003908  6E15               	movwf	(?_strlen+1)^0,c
  3080  00390A  0012               	return		;funcret
  3081  00390C                     __end_of_strlen:
  3082                           	callstack 0
  3083                           
  3084 ;; *************** function _fputs *****************
  3085 ;; Defined at:
  3086 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  3087 ;; Parameters:    Size  Location     Type
  3088 ;;  s               2   30[COMRAM] PTR const unsigned char 
  3089 ;;		 -> dbuf(32), 
  3090 ;;  fp              2   32[COMRAM] PTR struct _IO_FILE
  3091 ;;		 -> NULL(0), 
  3092 ;; Auto vars:     Size  Location     Type
  3093 ;;  i               2   35[COMRAM] int 
  3094 ;;  c               1   34[COMRAM] unsigned char 
  3095 ;; Return value:  Size  Location     Type
  3096 ;;                  2   30[COMRAM] int 
  3097 ;; Registers used:
  3098 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3099 ;; Tracked objects:
  3100 ;;		On entry : 0/0
  3101 ;;		On exit  : 0/0
  3102 ;;		Unchanged: 0/0
  3103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3104 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3105 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3107 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3108 ;;Total ram usage:        7 bytes
  3109 ;; Hardware stack levels used: 1
  3110 ;; Hardware stack levels required when called: 11
  3111 ;; This function calls:
  3112 ;;		_fputc
  3113 ;; This function is called by:
  3114 ;;		_pad
  3115 ;; This function uses a non-reentrant model
  3116 ;;
  3117                           
  3118                           	psect	text10
  3119  00380A                     __ptext10:
  3120                           	callstack 0
  3121  00380A                     _fputs:
  3122                           	callstack 12
  3123  00380A  0E00               	movlw	0
  3124  00380C  6E25               	movwf	(fputs@i+1)^0,c
  3125  00380E  0E00               	movlw	0
  3126  003810  6E24               	movwf	fputs@i^0,c
  3127  003812  EF16  F01C         	goto	l5573
  3128  003816                     l5569:
  3129  003816  C023  F016         	movff	fputs@c,fputc@c
  3130  00381A  6A17               	clrf	(fputc@c+1)^0,c
  3131  00381C  C021  F018         	movff	fputs@fp,fputc@fp
  3132  003820  C022  F019         	movff	fputs@fp+1,fputc@fp+1
  3133  003824  ECED  F019         	call	_fputc	;wreg free
  3134  003828  4A24               	infsnz	fputs@i^0,f,c
  3135  00382A  2A25               	incf	(fputs@i+1)^0,f,c
  3136  00382C                     l5573:
  3137  00382C  5024               	movf	fputs@i^0,w,c
  3138  00382E  241F               	addwf	fputs@s^0,w,c
  3139  003830  6ED9               	movwf	fsr2l,c
  3140  003832  5025               	movf	(fputs@i+1)^0,w,c
  3141  003834  2020               	addwfc	(fputs@s+1)^0,w,c
  3142  003836  6EDA               	movwf	fsr2h,c
  3143  003838  50DF               	movf	indf2,w,c
  3144  00383A  6E23               	movwf	fputs@c^0,c
  3145  00383C  5023               	movf	fputs@c^0,w,c
  3146  00383E  A4D8               	btfss	status,2,c
  3147  003840  EF24  F01C         	goto	u4391
  3148  003844  EF26  F01C         	goto	u4390
  3149  003848                     u4391:
  3150  003848  EF0B  F01C         	goto	l5569
  3151  00384C                     u4390:
  3152  00384C  0012               	return		;funcret
  3153  00384E                     __end_of_fputs:
  3154                           	callstack 0
  3155                           
  3156 ;; *************** function _fputc *****************
  3157 ;; Defined at:
  3158 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  3159 ;; Parameters:    Size  Location     Type
  3160 ;;  c               2   21[COMRAM] int 
  3161 ;;  fp              2   23[COMRAM] PTR struct _IO_FILE
  3162 ;;		 -> NULL(0), 
  3163 ;; Auto vars:     Size  Location     Type
  3164 ;;		None
  3165 ;; Return value:  Size  Location     Type
  3166 ;;                  2   21[COMRAM] int 
  3167 ;; Registers used:
  3168 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3169 ;; Tracked objects:
  3170 ;;		On entry : 0/0
  3171 ;;		On exit  : 0/0
  3172 ;;		Unchanged: 0/0
  3173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3174 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3176 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3177 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3178 ;;Total ram usage:        9 bytes
  3179 ;; Hardware stack levels used: 1
  3180 ;; Hardware stack levels required when called: 10
  3181 ;; This function calls:
  3182 ;;		_putch
  3183 ;; This function is called by:
  3184 ;;		_pad
  3185 ;;		_vfpfcnvrt
  3186 ;;		_fputs
  3187 ;; This function uses a non-reentrant model
  3188 ;;
  3189                           
  3190                           	psect	text11
  3191  0033DA                     __ptext11:
  3192                           	callstack 0
  3193  0033DA                     _fputc:
  3194                           	callstack 15
  3195  0033DA  5018               	movf	fputc@fp^0,w,c
  3196  0033DC  1019               	iorwf	(fputc@fp+1)^0,w,c
  3197  0033DE  B4D8               	btfsc	status,2,c
  3198  0033E0  EFF4  F019         	goto	u4351
  3199  0033E4  EFF6  F019         	goto	u4350
  3200  0033E8                     u4351:
  3201  0033E8  EFFF  F019         	goto	l5557
  3202  0033EC                     u4350:
  3203  0033EC  5018               	movf	fputc@fp^0,w,c
  3204  0033EE  1019               	iorwf	(fputc@fp+1)^0,w,c
  3205  0033F0  A4D8               	btfss	status,2,c
  3206  0033F2  EFFD  F019         	goto	u4361
  3207  0033F6  EFFF  F019         	goto	u4360
  3208  0033FA                     u4361:
  3209  0033FA  EF04  F01A         	goto	l5559
  3210  0033FE                     u4360:
  3211  0033FE                     l5557:
  3212  0033FE  5016               	movf	fputc@c^0,w,c
  3213  003400  EC8E  F01F         	call	_putch
  3214  003404  EF37  F01A         	goto	l2111
  3215  003408                     l5559:
  3216  003408  EE20 F004          	lfsr	2,4
  3217  00340C  5018               	movf	fputc@fp^0,w,c
  3218  00340E  26D9               	addwf	fsr2l,f,c
  3219  003410  5019               	movf	(fputc@fp+1)^0,w,c
  3220  003412  22DA               	addwfc	fsr2h,f,c
  3221  003414  50DE               	movf	postinc2,w,c
  3222  003416  10DE               	iorwf	postinc2,w,c
  3223  003418  B4D8               	btfsc	status,2,c
  3224  00341A  EF11  F01A         	goto	u4371
  3225  00341E  EF13  F01A         	goto	u4370
  3226  003422                     u4371:
  3227  003422  EF2E  F01A         	goto	l5563
  3228  003426                     u4370:
  3229  003426  EE20 F004          	lfsr	2,4
  3230  00342A  5018               	movf	fputc@fp^0,w,c
  3231  00342C  26D9               	addwf	fsr2l,f,c
  3232  00342E  5019               	movf	(fputc@fp+1)^0,w,c
  3233  003430  22DA               	addwfc	fsr2h,f,c
  3234  003432  EE10 F002          	lfsr	1,2
  3235  003436  5018               	movf	fputc@fp^0,w,c
  3236  003438  26E1               	addwf	fsr1l,f,c
  3237  00343A  5019               	movf	(fputc@fp+1)^0,w,c
  3238  00343C  22E2               	addwfc	fsr1h,f,c
  3239  00343E  50DE               	movf	postinc2,w,c
  3240  003440  5CE6               	subwf	postinc1,w,c
  3241  003442  50E6               	movf	postinc1,w,c
  3242  003444  0A80               	xorlw	128
  3243  003446  6E1E               	movwf	(??_fputc+4)^0,c
  3244  003448  50DE               	movf	postinc2,w,c
  3245  00344A  0A80               	xorlw	128
  3246  00344C  581E               	subwfb	(??_fputc+4)^0,w,c
  3247  00344E  B0D8               	btfsc	status,0,c
  3248  003450  EF2C  F01A         	goto	u4381
  3249  003454  EF2E  F01A         	goto	u4380
  3250  003458                     u4381:
  3251  003458  EF37  F01A         	goto	l2111
  3252  00345C                     u4380:
  3253  00345C                     l5563:
  3254  00345C  EE20 F002          	lfsr	2,2
  3255  003460  5018               	movf	fputc@fp^0,w,c
  3256  003462  26D9               	addwf	fsr2l,f,c
  3257  003464  5019               	movf	(fputc@fp+1)^0,w,c
  3258  003466  22DA               	addwfc	fsr2h,f,c
  3259  003468  2ADE               	incf	postinc2,f,c
  3260  00346A  0E00               	movlw	0
  3261  00346C  22DD               	addwfc	postdec2,f,c
  3262  00346E                     l2111:
  3263  00346E  0012               	return		;funcret
  3264  003470                     __end_of_fputc:
  3265                           	callstack 0
  3266                           
  3267 ;; *************** function _putch *****************
  3268 ;; Defined at:
  3269 ;;		line 230 in file "mcc_generated_files/uart1.c"
  3270 ;; Parameters:    Size  Location     Type
  3271 ;;  txData          1    wreg     unsigned char 
  3272 ;; Auto vars:     Size  Location     Type
  3273 ;;  txData          1   20[COMRAM] unsigned char 
  3274 ;; Return value:  Size  Location     Type
  3275 ;;                  1    wreg      void 
  3276 ;; Registers used:
  3277 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3278 ;; Tracked objects:
  3279 ;;		On entry : 0/0
  3280 ;;		On exit  : 0/0
  3281 ;;		Unchanged: 0/0
  3282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3284 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3286 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3287 ;;Total ram usage:        1 bytes
  3288 ;; Hardware stack levels used: 1
  3289 ;; Hardware stack levels required when called: 9
  3290 ;; This function calls:
  3291 ;;		_UART1_Write
  3292 ;; This function is called by:
  3293 ;;		_fputc
  3294 ;; This function uses a non-reentrant model
  3295 ;;
  3296                           
  3297                           	psect	text12
  3298  003F1C                     __ptext12:
  3299                           	callstack 0
  3300  003F1C                     _putch:
  3301                           	callstack 15
  3302                           
  3303                           ;incstack = 0
  3304                           ;putch@txData stored from wreg
  3305  003F1C  6E15               	movwf	putch@txData^0,c
  3306  003F1E                     
  3307                           ;mcc_generated_files/uart1.c: 230: void putch(char txData);mcc_generated_files/uart1.c: 
      +                          231: {;mcc_generated_files/uart1.c: 232:     UART1_Write(txData);
  3308  003F1E  5015               	movf	putch@txData^0,w,c
  3309  003F20  ECEA  F01A         	call	_UART1_Write
  3310  003F24  0012               	return		;funcret
  3311  003F26                     __end_of_putch:
  3312                           	callstack 0
  3313                           
  3314 ;; *************** function _UART1_Write *****************
  3315 ;; Defined at:
  3316 ;;		line 202 in file "mcc_generated_files/uart1.c"
  3317 ;; Parameters:    Size  Location     Type
  3318 ;;  txData          1    wreg     unsigned char 
  3319 ;; Auto vars:     Size  Location     Type
  3320 ;;  txData          1   19[COMRAM] unsigned char 
  3321 ;; Return value:  Size  Location     Type
  3322 ;;                  1    wreg      void 
  3323 ;; Registers used:
  3324 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3325 ;; Tracked objects:
  3326 ;;		On entry : 0/0
  3327 ;;		On exit  : 0/0
  3328 ;;		Unchanged: 0/0
  3329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3331 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3333 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3334 ;;Total ram usage:        1 bytes
  3335 ;; Hardware stack levels used: 1
  3336 ;; Hardware stack levels required when called: 8
  3337 ;; This function calls:
  3338 ;;		Nothing
  3339 ;; This function is called by:
  3340 ;;		_putch
  3341 ;; This function uses a non-reentrant model
  3342 ;;
  3343                           
  3344                           	psect	text13
  3345  0035D4                     __ptext13:
  3346                           	callstack 0
  3347  0035D4                     _UART1_Write:
  3348                           	callstack 15
  3349                           
  3350                           ;incstack = 0
  3351                           ;UART1_Write@txData stored from wreg
  3352  0035D4  6E14               	movwf	UART1_Write@txData^0,c
  3353  0035D6                     l5535:
  3354                           
  3355                           ;mcc_generated_files/uart1.c: 204:     while(0 == uart1TxBufferRemaining)
  3356  0035D6  504C               	movf	_uart1TxBufferRemaining^0,w,c	;volatile
  3357  0035D8  B4D8               	btfsc	status,2,c
  3358  0035DA  EFF1  F01A         	goto	u4321
  3359  0035DE  EFF3  F01A         	goto	u4320
  3360  0035E2                     u4321:
  3361  0035E2  EFEB  F01A         	goto	l5535
  3362  0035E6                     u4320:
  3363  0035E6                     
  3364                           ;mcc_generated_files/uart1.c: 208:     if(0 == PIE3bits.U1TXIE)
  3365  0035E6  0139               	movlb	57	; () banked
  3366  0035E8  B993               	btfsc	147,4,b	;volatile
  3367  0035EA  EFF9  F01A         	goto	u4331
  3368  0035EE  EFFB  F01A         	goto	u4330
  3369  0035F2                     u4331:
  3370  0035F2  EF00  F01B         	goto	l309
  3371  0035F6                     u4330:
  3372  0035F6                     
  3373                           ; BSR set to: 57
  3374                           ;mcc_generated_files/uart1.c: 209:     {;mcc_generated_files/uart1.c: 210:         U1TXB
      +                           = txData;
  3375  0035F6  0060  F053  FDEA   	movff	UART1_Write@txData,15850	;volatile
  3376                           
  3377                           ;mcc_generated_files/uart1.c: 211:     }
  3378  0035FC  EF16  F01B         	goto	l5549
  3379  003600                     l309:
  3380                           
  3381                           ; BSR set to: 57
  3382                           ;mcc_generated_files/uart1.c: 213:     {;mcc_generated_files/uart1.c: 214:         PIE3b
      +                          its.U1TXIE = 0;
  3383  003600  9993               	bcf	147,4,b	;volatile
  3384  003602                     
  3385                           ; BSR set to: 57
  3386                           ;mcc_generated_files/uart1.c: 215:         uart1TxBuffer[uart1TxHead++] = txData;
  3387  003602  0E70               	movlw	low _uart1TxBuffer
  3388  003604  2447               	addwf	_uart1TxHead^0,w,c	;volatile
  3389  003606  6ED9               	movwf	fsr2l,c
  3390  003608  6ADA               	clrf	fsr2h,c
  3391  00360A  0E00               	movlw	high _uart1TxBuffer
  3392  00360C  22DA               	addwfc	fsr2h,f,c
  3393  00360E  0060  F053  FFDF   	movff	UART1_Write@txData,indf2
  3394  003614                     
  3395                           ; BSR set to: 57
  3396  003614  2A47               	incf	_uart1TxHead^0,f,c	;volatile
  3397  003616                     
  3398                           ; BSR set to: 57
  3399                           ;mcc_generated_files/uart1.c: 216:         if(sizeof(uart1TxBuffer) <= uart1TxHead)
  3400  003616  0E07               	movlw	7
  3401  003618  6447               	cpfsgt	_uart1TxHead^0,c	;volatile
  3402  00361A  EF11  F01B         	goto	u4341
  3403  00361E  EF13  F01B         	goto	u4340
  3404  003622                     u4341:
  3405  003622  EF15  F01B         	goto	l5547
  3406  003626                     u4340:
  3407  003626                     
  3408                           ; BSR set to: 57
  3409                           ;mcc_generated_files/uart1.c: 217:         {;mcc_generated_files/uart1.c: 218:          
      +                             uart1TxHead = 0;
  3410  003626  0E00               	movlw	0
  3411  003628  6E47               	movwf	_uart1TxHead^0,c	;volatile
  3412  00362A                     l5547:
  3413                           
  3414                           ; BSR set to: 57
  3415                           ;mcc_generated_files/uart1.c: 220:         uart1TxBufferRemaining--;
  3416  00362A  064C               	decf	_uart1TxBufferRemaining^0,f,c	;volatile
  3417  00362C                     l5549:
  3418                           
  3419                           ; BSR set to: 57
  3420                           ;mcc_generated_files/uart1.c: 222:     PIE3bits.U1TXIE = 1;
  3421  00362C  8993               	bsf	147,4,b	;volatile
  3422  00362E                     
  3423                           ; BSR set to: 57
  3424  00362E  0012               	return		;funcret
  3425  003630                     __end_of_UART1_Write:
  3426                           	callstack 0
  3427                           
  3428 ;; *************** function _abs *****************
  3429 ;; Defined at:
  3430 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  3431 ;; Parameters:    Size  Location     Type
  3432 ;;  a               2   37[COMRAM] int 
  3433 ;; Auto vars:     Size  Location     Type
  3434 ;;		None
  3435 ;; Return value:  Size  Location     Type
  3436 ;;                  2   37[COMRAM] int 
  3437 ;; Registers used:
  3438 ;;		wreg, status,2, status,0
  3439 ;; Tracked objects:
  3440 ;;		On entry : 0/0
  3441 ;;		On exit  : 0/0
  3442 ;;		Unchanged: 0/0
  3443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3444 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3446 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3447 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3448 ;;Total ram usage:        4 bytes
  3449 ;; Hardware stack levels used: 1
  3450 ;; Hardware stack levels required when called: 8
  3451 ;; This function calls:
  3452 ;;		Nothing
  3453 ;; This function is called by:
  3454 ;;		_dtoa
  3455 ;; This function uses a non-reentrant model
  3456 ;;
  3457                           
  3458                           	psect	text14
  3459  003892                     __ptext14:
  3460                           	callstack 0
  3461  003892                     _abs:
  3462                           	callstack 16
  3463  003892  BE27               	btfsc	(abs@a+1)^0,7,c
  3464  003894  EF56  F01C         	goto	u4580
  3465  003898  5027               	movf	(abs@a+1)^0,w,c
  3466  00389A  E106               	bnz	u4581
  3467  00389C  0426               	decf	abs@a^0,w,c
  3468  00389E  B0D8               	btfsc	status,0,c
  3469  0038A0  EF54  F01C         	goto	u4581
  3470  0038A4  EF56  F01C         	goto	u4580
  3471  0038A8                     u4581:
  3472  0038A8  EF64  F01C         	goto	l2096
  3473  0038AC                     u4580:
  3474  0038AC  C026  F028         	movff	abs@a,??_abs
  3475  0038B0  C027  F029         	movff	abs@a+1,??_abs+1
  3476  0038B4  1E28               	comf	??_abs^0,f,c
  3477  0038B6  1E29               	comf	(??_abs+1)^0,f,c
  3478  0038B8  4A28               	infsnz	??_abs^0,f,c
  3479  0038BA  2A29               	incf	(??_abs+1)^0,f,c
  3480  0038BC  C028  F026         	movff	??_abs,?_abs
  3481  0038C0  C029  F027         	movff	??_abs+1,?_abs+1
  3482  0038C4  EF68  F01C         	goto	l2099
  3483  0038C8                     l2096:
  3484  0038C8  C026  F026         	movff	abs@a,?_abs
  3485  0038CC  C027  F027         	movff	abs@a+1,?_abs+1
  3486  0038D0                     l2099:
  3487  0038D0  0012               	return		;funcret
  3488  0038D2                     __end_of_abs:
  3489                           	callstack 0
  3490                           
  3491 ;; *************** function ___aomod *****************
  3492 ;; Defined at:
  3493 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  3494 ;; Parameters:    Size  Location     Type
  3495 ;;  dividend        8   19[COMRAM] long long 
  3496 ;;  divisor         8   27[COMRAM] long long 
  3497 ;; Auto vars:     Size  Location     Type
  3498 ;;  sign            1   36[COMRAM] unsigned char 
  3499 ;;  counter         1   35[COMRAM] unsigned char 
  3500 ;; Return value:  Size  Location     Type
  3501 ;;                  8   19[COMRAM] long long 
  3502 ;; Registers used:
  3503 ;;		wreg, status,2, status,0
  3504 ;; Tracked objects:
  3505 ;;		On entry : 0/0
  3506 ;;		On exit  : 0/0
  3507 ;;		Unchanged: 0/0
  3508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3509 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3510 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3512 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3513 ;;Total ram usage:       18 bytes
  3514 ;; Hardware stack levels used: 1
  3515 ;; Hardware stack levels required when called: 8
  3516 ;; This function calls:
  3517 ;;		Nothing
  3518 ;; This function is called by:
  3519 ;;		_dtoa
  3520 ;; This function uses a non-reentrant model
  3521 ;;
  3522                           
  3523                           	psect	text15
  3524  002764                     __ptext15:
  3525                           	callstack 0
  3526  002764                     ___aomod:
  3527                           	callstack 16
  3528  002764  0E00               	movlw	0
  3529  002766  6E25               	movwf	___aomod@sign^0,c
  3530  002768  BE1B               	btfsc	(___aomod@dividend+7)^0,7,c
  3531  00276A  EFBB  F013         	goto	u4480
  3532  00276E  EFB9  F013         	goto	u4481
  3533  002772                     u4481:
  3534  002772  EFCD  F013         	goto	l5637
  3535  002776                     u4480:
  3536  002776  1E1B               	comf	(___aomod@dividend+7)^0,f,c
  3537  002778  1E1A               	comf	(___aomod@dividend+6)^0,f,c
  3538  00277A  1E19               	comf	(___aomod@dividend+5)^0,f,c
  3539  00277C  1E18               	comf	(___aomod@dividend+4)^0,f,c
  3540  00277E  1E17               	comf	(___aomod@dividend+3)^0,f,c
  3541  002780  1E16               	comf	(___aomod@dividend+2)^0,f,c
  3542  002782  1E15               	comf	(___aomod@dividend+1)^0,f,c
  3543  002784  6C14               	negf	___aomod@dividend^0,c
  3544  002786  0E00               	movlw	0
  3545  002788  2215               	addwfc	(___aomod@dividend+1)^0,f,c
  3546  00278A  2216               	addwfc	(___aomod@dividend+2)^0,f,c
  3547  00278C  2217               	addwfc	(___aomod@dividend+3)^0,f,c
  3548  00278E  2218               	addwfc	(___aomod@dividend+4)^0,f,c
  3549  002790  2219               	addwfc	(___aomod@dividend+5)^0,f,c
  3550  002792  221A               	addwfc	(___aomod@dividend+6)^0,f,c
  3551  002794  221B               	addwfc	(___aomod@dividend+7)^0,f,c
  3552  002796  0E01               	movlw	1
  3553  002798  6E25               	movwf	___aomod@sign^0,c
  3554  00279A                     l5637:
  3555  00279A  BE23               	btfsc	(___aomod@divisor+7)^0,7,c
  3556  00279C  EFD4  F013         	goto	u4490
  3557  0027A0  EFD2  F013         	goto	u4491
  3558  0027A4                     u4491:
  3559  0027A4  EFE4  F013         	goto	l5641
  3560  0027A8                     u4490:
  3561  0027A8  1E23               	comf	(___aomod@divisor+7)^0,f,c
  3562  0027AA  1E22               	comf	(___aomod@divisor+6)^0,f,c
  3563  0027AC  1E21               	comf	(___aomod@divisor+5)^0,f,c
  3564  0027AE  1E20               	comf	(___aomod@divisor+4)^0,f,c
  3565  0027B0  1E1F               	comf	(___aomod@divisor+3)^0,f,c
  3566  0027B2  1E1E               	comf	(___aomod@divisor+2)^0,f,c
  3567  0027B4  1E1D               	comf	(___aomod@divisor+1)^0,f,c
  3568  0027B6  6C1C               	negf	___aomod@divisor^0,c
  3569  0027B8  0E00               	movlw	0
  3570  0027BA  221D               	addwfc	(___aomod@divisor+1)^0,f,c
  3571  0027BC  221E               	addwfc	(___aomod@divisor+2)^0,f,c
  3572  0027BE  221F               	addwfc	(___aomod@divisor+3)^0,f,c
  3573  0027C0  2220               	addwfc	(___aomod@divisor+4)^0,f,c
  3574  0027C2  2221               	addwfc	(___aomod@divisor+5)^0,f,c
  3575  0027C4  2222               	addwfc	(___aomod@divisor+6)^0,f,c
  3576  0027C6  2223               	addwfc	(___aomod@divisor+7)^0,f,c
  3577  0027C8                     l5641:
  3578  0027C8  501C               	movf	___aomod@divisor^0,w,c
  3579  0027CA  101D               	iorwf	(___aomod@divisor+1)^0,w,c
  3580  0027CC  101E               	iorwf	(___aomod@divisor+2)^0,w,c
  3581  0027CE  101F               	iorwf	(___aomod@divisor+3)^0,w,c
  3582  0027D0  1020               	iorwf	(___aomod@divisor+4)^0,w,c
  3583  0027D2  1021               	iorwf	(___aomod@divisor+5)^0,w,c
  3584  0027D4  1022               	iorwf	(___aomod@divisor+6)^0,w,c
  3585  0027D6  1023               	iorwf	(___aomod@divisor+7)^0,w,c
  3586  0027D8  B4D8               	btfsc	status,2,c
  3587  0027DA  EFF1  F013         	goto	u4501
  3588  0027DE  EFF3  F013         	goto	u4500
  3589  0027E2                     u4501:
  3590  0027E2  EF3B  F014         	goto	l5657
  3591  0027E6                     u4500:
  3592  0027E6  0E01               	movlw	1
  3593  0027E8  6E24               	movwf	___aomod@counter^0,c
  3594  0027EA  EF01  F014         	goto	l5647
  3595  0027EE                     l5645:
  3596  0027EE  90D8               	bcf	status,0,c
  3597  0027F0  361C               	rlcf	___aomod@divisor^0,f,c
  3598  0027F2  361D               	rlcf	(___aomod@divisor+1)^0,f,c
  3599  0027F4  361E               	rlcf	(___aomod@divisor+2)^0,f,c
  3600  0027F6  361F               	rlcf	(___aomod@divisor+3)^0,f,c
  3601  0027F8  3620               	rlcf	(___aomod@divisor+4)^0,f,c
  3602  0027FA  3621               	rlcf	(___aomod@divisor+5)^0,f,c
  3603  0027FC  3622               	rlcf	(___aomod@divisor+6)^0,f,c
  3604  0027FE  3623               	rlcf	(___aomod@divisor+7)^0,f,c
  3605  002800  2A24               	incf	___aomod@counter^0,f,c
  3606  002802                     l5647:
  3607  002802  AE23               	btfss	(___aomod@divisor+7)^0,7,c
  3608  002804  EF06  F014         	goto	u4511
  3609  002808  EF08  F014         	goto	u4510
  3610  00280C                     u4511:
  3611  00280C  EFF7  F013         	goto	l5645
  3612  002810                     u4510:
  3613  002810                     l5649:
  3614  002810  501C               	movf	___aomod@divisor^0,w,c
  3615  002812  5C14               	subwf	___aomod@dividend^0,w,c
  3616  002814  501D               	movf	(___aomod@divisor+1)^0,w,c
  3617  002816  5815               	subwfb	(___aomod@dividend+1)^0,w,c
  3618  002818  501E               	movf	(___aomod@divisor+2)^0,w,c
  3619  00281A  5816               	subwfb	(___aomod@dividend+2)^0,w,c
  3620  00281C  501F               	movf	(___aomod@divisor+3)^0,w,c
  3621  00281E  5817               	subwfb	(___aomod@dividend+3)^0,w,c
  3622  002820  5020               	movf	(___aomod@divisor+4)^0,w,c
  3623  002822  5818               	subwfb	(___aomod@dividend+4)^0,w,c
  3624  002824  5021               	movf	(___aomod@divisor+5)^0,w,c
  3625  002826  5819               	subwfb	(___aomod@dividend+5)^0,w,c
  3626  002828  5022               	movf	(___aomod@divisor+6)^0,w,c
  3627  00282A  581A               	subwfb	(___aomod@dividend+6)^0,w,c
  3628  00282C  5023               	movf	(___aomod@divisor+7)^0,w,c
  3629  00282E  581B               	subwfb	(___aomod@dividend+7)^0,w,c
  3630  002830  A0D8               	btfss	status,0,c
  3631  002832  EF1D  F014         	goto	u4521
  3632  002836  EF1F  F014         	goto	u4520
  3633  00283A                     u4521:
  3634  00283A  EF2F  F014         	goto	l5653
  3635  00283E                     u4520:
  3636  00283E  501C               	movf	___aomod@divisor^0,w,c
  3637  002840  5E14               	subwf	___aomod@dividend^0,f,c
  3638  002842  501D               	movf	(___aomod@divisor+1)^0,w,c
  3639  002844  5A15               	subwfb	(___aomod@dividend+1)^0,f,c
  3640  002846  501E               	movf	(___aomod@divisor+2)^0,w,c
  3641  002848  5A16               	subwfb	(___aomod@dividend+2)^0,f,c
  3642  00284A  501F               	movf	(___aomod@divisor+3)^0,w,c
  3643  00284C  5A17               	subwfb	(___aomod@dividend+3)^0,f,c
  3644  00284E  5020               	movf	(___aomod@divisor+4)^0,w,c
  3645  002850  5A18               	subwfb	(___aomod@dividend+4)^0,f,c
  3646  002852  5021               	movf	(___aomod@divisor+5)^0,w,c
  3647  002854  5A19               	subwfb	(___aomod@dividend+5)^0,f,c
  3648  002856  5022               	movf	(___aomod@divisor+6)^0,w,c
  3649  002858  5A1A               	subwfb	(___aomod@dividend+6)^0,f,c
  3650  00285A  5023               	movf	(___aomod@divisor+7)^0,w,c
  3651  00285C  5A1B               	subwfb	(___aomod@dividend+7)^0,f,c
  3652  00285E                     l5653:
  3653  00285E  90D8               	bcf	status,0,c
  3654  002860  3223               	rrcf	(___aomod@divisor+7)^0,f,c
  3655  002862  3222               	rrcf	(___aomod@divisor+6)^0,f,c
  3656  002864  3221               	rrcf	(___aomod@divisor+5)^0,f,c
  3657  002866  3220               	rrcf	(___aomod@divisor+4)^0,f,c
  3658  002868  321F               	rrcf	(___aomod@divisor+3)^0,f,c
  3659  00286A  321E               	rrcf	(___aomod@divisor+2)^0,f,c
  3660  00286C  321D               	rrcf	(___aomod@divisor+1)^0,f,c
  3661  00286E  321C               	rrcf	___aomod@divisor^0,f,c
  3662  002870  2E24               	decfsz	___aomod@counter^0,f,c
  3663  002872  EF08  F014         	goto	l5649
  3664  002876                     l5657:
  3665  002876  5025               	movf	___aomod@sign^0,w,c
  3666  002878  B4D8               	btfsc	status,2,c
  3667  00287A  EF41  F014         	goto	u4531
  3668  00287E  EF43  F014         	goto	u4530
  3669  002882                     u4531:
  3670  002882  EF53  F014         	goto	l5661
  3671  002886                     u4530:
  3672  002886  1E1B               	comf	(___aomod@dividend+7)^0,f,c
  3673  002888  1E1A               	comf	(___aomod@dividend+6)^0,f,c
  3674  00288A  1E19               	comf	(___aomod@dividend+5)^0,f,c
  3675  00288C  1E18               	comf	(___aomod@dividend+4)^0,f,c
  3676  00288E  1E17               	comf	(___aomod@dividend+3)^0,f,c
  3677  002890  1E16               	comf	(___aomod@dividend+2)^0,f,c
  3678  002892  1E15               	comf	(___aomod@dividend+1)^0,f,c
  3679  002894  6C14               	negf	___aomod@dividend^0,c
  3680  002896  0E00               	movlw	0
  3681  002898  2215               	addwfc	(___aomod@dividend+1)^0,f,c
  3682  00289A  2216               	addwfc	(___aomod@dividend+2)^0,f,c
  3683  00289C  2217               	addwfc	(___aomod@dividend+3)^0,f,c
  3684  00289E  2218               	addwfc	(___aomod@dividend+4)^0,f,c
  3685  0028A0  2219               	addwfc	(___aomod@dividend+5)^0,f,c
  3686  0028A2  221A               	addwfc	(___aomod@dividend+6)^0,f,c
  3687  0028A4  221B               	addwfc	(___aomod@dividend+7)^0,f,c
  3688  0028A6                     l5661:
  3689  0028A6  C014  F014         	movff	___aomod@dividend,?___aomod
  3690  0028AA  C015  F015         	movff	___aomod@dividend+1,?___aomod+1
  3691  0028AE  C016  F016         	movff	___aomod@dividend+2,?___aomod+2
  3692  0028B2  C017  F017         	movff	___aomod@dividend+3,?___aomod+3
  3693  0028B6  C018  F018         	movff	___aomod@dividend+4,?___aomod+4
  3694  0028BA  C019  F019         	movff	___aomod@dividend+5,?___aomod+5
  3695  0028BE  C01A  F01A         	movff	___aomod@dividend+6,?___aomod+6
  3696  0028C2  C01B  F01B         	movff	___aomod@dividend+7,?___aomod+7
  3697  0028C6  0012               	return		;funcret
  3698  0028C8                     __end_of___aomod:
  3699                           	callstack 0
  3700                           
  3701 ;; *************** function ___aodiv *****************
  3702 ;; Defined at:
  3703 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  3704 ;; Parameters:    Size  Location     Type
  3705 ;;  dividend        8   19[COMRAM] long long 
  3706 ;;  divisor         8   27[COMRAM] long long 
  3707 ;; Auto vars:     Size  Location     Type
  3708 ;;  quotient        8   37[COMRAM] long long 
  3709 ;;  sign            1   36[COMRAM] unsigned char 
  3710 ;;  counter         1   35[COMRAM] unsigned char 
  3711 ;; Return value:  Size  Location     Type
  3712 ;;                  8   19[COMRAM] long long 
  3713 ;; Registers used:
  3714 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3715 ;; Tracked objects:
  3716 ;;		On entry : 0/0
  3717 ;;		On exit  : 0/0
  3718 ;;		Unchanged: 0/0
  3719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3720 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3721 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3723 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3724 ;;Total ram usage:       26 bytes
  3725 ;; Hardware stack levels used: 1
  3726 ;; Hardware stack levels required when called: 8
  3727 ;; This function calls:
  3728 ;;		Nothing
  3729 ;; This function is called by:
  3730 ;;		_dtoa
  3731 ;; This function uses a non-reentrant model
  3732 ;;
  3733                           
  3734                           	psect	text16
  3735  0025DC                     __ptext16:
  3736                           	callstack 0
  3737  0025DC                     ___aodiv:
  3738                           	callstack 16
  3739  0025DC  0E00               	movlw	0
  3740  0025DE  6E25               	movwf	___aodiv@sign^0,c
  3741  0025E0  BE23               	btfsc	(___aodiv@divisor+7)^0,7,c
  3742  0025E2  EFF7  F012         	goto	u4410
  3743  0025E6  EFF5  F012         	goto	u4411
  3744  0025EA                     u4411:
  3745  0025EA  EF09  F013         	goto	l5593
  3746  0025EE                     u4410:
  3747  0025EE  1E23               	comf	(___aodiv@divisor+7)^0,f,c
  3748  0025F0  1E22               	comf	(___aodiv@divisor+6)^0,f,c
  3749  0025F2  1E21               	comf	(___aodiv@divisor+5)^0,f,c
  3750  0025F4  1E20               	comf	(___aodiv@divisor+4)^0,f,c
  3751  0025F6  1E1F               	comf	(___aodiv@divisor+3)^0,f,c
  3752  0025F8  1E1E               	comf	(___aodiv@divisor+2)^0,f,c
  3753  0025FA  1E1D               	comf	(___aodiv@divisor+1)^0,f,c
  3754  0025FC  6C1C               	negf	___aodiv@divisor^0,c
  3755  0025FE  0E00               	movlw	0
  3756  002600  221D               	addwfc	(___aodiv@divisor+1)^0,f,c
  3757  002602  221E               	addwfc	(___aodiv@divisor+2)^0,f,c
  3758  002604  221F               	addwfc	(___aodiv@divisor+3)^0,f,c
  3759  002606  2220               	addwfc	(___aodiv@divisor+4)^0,f,c
  3760  002608  2221               	addwfc	(___aodiv@divisor+5)^0,f,c
  3761  00260A  2222               	addwfc	(___aodiv@divisor+6)^0,f,c
  3762  00260C  2223               	addwfc	(___aodiv@divisor+7)^0,f,c
  3763  00260E  0E01               	movlw	1
  3764  002610  6E25               	movwf	___aodiv@sign^0,c
  3765  002612                     l5593:
  3766  002612  BE1B               	btfsc	(___aodiv@dividend+7)^0,7,c
  3767  002614  EF10  F013         	goto	u4420
  3768  002618  EF0E  F013         	goto	u4421
  3769  00261C                     u4421:
  3770  00261C  EF22  F013         	goto	l5599
  3771  002620                     u4420:
  3772  002620  1E1B               	comf	(___aodiv@dividend+7)^0,f,c
  3773  002622  1E1A               	comf	(___aodiv@dividend+6)^0,f,c
  3774  002624  1E19               	comf	(___aodiv@dividend+5)^0,f,c
  3775  002626  1E18               	comf	(___aodiv@dividend+4)^0,f,c
  3776  002628  1E17               	comf	(___aodiv@dividend+3)^0,f,c
  3777  00262A  1E16               	comf	(___aodiv@dividend+2)^0,f,c
  3778  00262C  1E15               	comf	(___aodiv@dividend+1)^0,f,c
  3779  00262E  6C14               	negf	___aodiv@dividend^0,c
  3780  002630  0E00               	movlw	0
  3781  002632  2215               	addwfc	(___aodiv@dividend+1)^0,f,c
  3782  002634  2216               	addwfc	(___aodiv@dividend+2)^0,f,c
  3783  002636  2217               	addwfc	(___aodiv@dividend+3)^0,f,c
  3784  002638  2218               	addwfc	(___aodiv@dividend+4)^0,f,c
  3785  00263A  2219               	addwfc	(___aodiv@dividend+5)^0,f,c
  3786  00263C  221A               	addwfc	(___aodiv@dividend+6)^0,f,c
  3787  00263E  221B               	addwfc	(___aodiv@dividend+7)^0,f,c
  3788  002640  0E01               	movlw	1
  3789  002642  1A25               	xorwf	___aodiv@sign^0,f,c
  3790  002644                     l5599:
  3791  002644  EE20  F026         	lfsr	2,___aodiv@quotient
  3792  002648  0E07               	movlw	7
  3793  00264A                     u4431:
  3794  00264A  6ADE               	clrf	postinc2,c
  3795  00264C  06E8               	decf	wreg,f,c
  3796  00264E  E2FD               	bc	u4431
  3797  002650  501C               	movf	___aodiv@divisor^0,w,c
  3798  002652  101D               	iorwf	(___aodiv@divisor+1)^0,w,c
  3799  002654  101E               	iorwf	(___aodiv@divisor+2)^0,w,c
  3800  002656  101F               	iorwf	(___aodiv@divisor+3)^0,w,c
  3801  002658  1020               	iorwf	(___aodiv@divisor+4)^0,w,c
  3802  00265A  1021               	iorwf	(___aodiv@divisor+5)^0,w,c
  3803  00265C  1022               	iorwf	(___aodiv@divisor+6)^0,w,c
  3804  00265E  1023               	iorwf	(___aodiv@divisor+7)^0,w,c
  3805  002660  B4D8               	btfsc	status,2,c
  3806  002662  EF35  F013         	goto	u4441
  3807  002666  EF37  F013         	goto	u4440
  3808  00266A                     u4441:
  3809  00266A  EF89  F013         	goto	l5621
  3810  00266E                     u4440:
  3811  00266E  0E01               	movlw	1
  3812  002670  6E24               	movwf	___aodiv@counter^0,c
  3813  002672  EF45  F013         	goto	l5607
  3814  002676                     l5605:
  3815  002676  90D8               	bcf	status,0,c
  3816  002678  361C               	rlcf	___aodiv@divisor^0,f,c
  3817  00267A  361D               	rlcf	(___aodiv@divisor+1)^0,f,c
  3818  00267C  361E               	rlcf	(___aodiv@divisor+2)^0,f,c
  3819  00267E  361F               	rlcf	(___aodiv@divisor+3)^0,f,c
  3820  002680  3620               	rlcf	(___aodiv@divisor+4)^0,f,c
  3821  002682  3621               	rlcf	(___aodiv@divisor+5)^0,f,c
  3822  002684  3622               	rlcf	(___aodiv@divisor+6)^0,f,c
  3823  002686  3623               	rlcf	(___aodiv@divisor+7)^0,f,c
  3824  002688  2A24               	incf	___aodiv@counter^0,f,c
  3825  00268A                     l5607:
  3826  00268A  AE23               	btfss	(___aodiv@divisor+7)^0,7,c
  3827  00268C  EF4A  F013         	goto	u4451
  3828  002690  EF4C  F013         	goto	u4450
  3829  002694                     u4451:
  3830  002694  EF3B  F013         	goto	l5605
  3831  002698                     u4450:
  3832  002698                     l5609:
  3833  002698  90D8               	bcf	status,0,c
  3834  00269A  3626               	rlcf	___aodiv@quotient^0,f,c
  3835  00269C  3627               	rlcf	(___aodiv@quotient+1)^0,f,c
  3836  00269E  3628               	rlcf	(___aodiv@quotient+2)^0,f,c
  3837  0026A0  3629               	rlcf	(___aodiv@quotient+3)^0,f,c
  3838  0026A2  362A               	rlcf	(___aodiv@quotient+4)^0,f,c
  3839  0026A4  362B               	rlcf	(___aodiv@quotient+5)^0,f,c
  3840  0026A6  362C               	rlcf	(___aodiv@quotient+6)^0,f,c
  3841  0026A8  362D               	rlcf	(___aodiv@quotient+7)^0,f,c
  3842  0026AA  501C               	movf	___aodiv@divisor^0,w,c
  3843  0026AC  5C14               	subwf	___aodiv@dividend^0,w,c
  3844  0026AE  501D               	movf	(___aodiv@divisor+1)^0,w,c
  3845  0026B0  5815               	subwfb	(___aodiv@dividend+1)^0,w,c
  3846  0026B2  501E               	movf	(___aodiv@divisor+2)^0,w,c
  3847  0026B4  5816               	subwfb	(___aodiv@dividend+2)^0,w,c
  3848  0026B6  501F               	movf	(___aodiv@divisor+3)^0,w,c
  3849  0026B8  5817               	subwfb	(___aodiv@dividend+3)^0,w,c
  3850  0026BA  5020               	movf	(___aodiv@divisor+4)^0,w,c
  3851  0026BC  5818               	subwfb	(___aodiv@dividend+4)^0,w,c
  3852  0026BE  5021               	movf	(___aodiv@divisor+5)^0,w,c
  3853  0026C0  5819               	subwfb	(___aodiv@dividend+5)^0,w,c
  3854  0026C2  5022               	movf	(___aodiv@divisor+6)^0,w,c
  3855  0026C4  581A               	subwfb	(___aodiv@dividend+6)^0,w,c
  3856  0026C6  5023               	movf	(___aodiv@divisor+7)^0,w,c
  3857  0026C8  581B               	subwfb	(___aodiv@dividend+7)^0,w,c
  3858  0026CA  A0D8               	btfss	status,0,c
  3859  0026CC  EF6A  F013         	goto	u4461
  3860  0026D0  EF6C  F013         	goto	u4460
  3861  0026D4                     u4461:
  3862  0026D4  EF7D  F013         	goto	l5617
  3863  0026D8                     u4460:
  3864  0026D8  501C               	movf	___aodiv@divisor^0,w,c
  3865  0026DA  5E14               	subwf	___aodiv@dividend^0,f,c
  3866  0026DC  501D               	movf	(___aodiv@divisor+1)^0,w,c
  3867  0026DE  5A15               	subwfb	(___aodiv@dividend+1)^0,f,c
  3868  0026E0  501E               	movf	(___aodiv@divisor+2)^0,w,c
  3869  0026E2  5A16               	subwfb	(___aodiv@dividend+2)^0,f,c
  3870  0026E4  501F               	movf	(___aodiv@divisor+3)^0,w,c
  3871  0026E6  5A17               	subwfb	(___aodiv@dividend+3)^0,f,c
  3872  0026E8  5020               	movf	(___aodiv@divisor+4)^0,w,c
  3873  0026EA  5A18               	subwfb	(___aodiv@dividend+4)^0,f,c
  3874  0026EC  5021               	movf	(___aodiv@divisor+5)^0,w,c
  3875  0026EE  5A19               	subwfb	(___aodiv@dividend+5)^0,f,c
  3876  0026F0  5022               	movf	(___aodiv@divisor+6)^0,w,c
  3877  0026F2  5A1A               	subwfb	(___aodiv@dividend+6)^0,f,c
  3878  0026F4  5023               	movf	(___aodiv@divisor+7)^0,w,c
  3879  0026F6  5A1B               	subwfb	(___aodiv@dividend+7)^0,f,c
  3880  0026F8  8026               	bsf	___aodiv@quotient^0,0,c
  3881  0026FA                     l5617:
  3882  0026FA  90D8               	bcf	status,0,c
  3883  0026FC  3223               	rrcf	(___aodiv@divisor+7)^0,f,c
  3884  0026FE  3222               	rrcf	(___aodiv@divisor+6)^0,f,c
  3885  002700  3221               	rrcf	(___aodiv@divisor+5)^0,f,c
  3886  002702  3220               	rrcf	(___aodiv@divisor+4)^0,f,c
  3887  002704  321F               	rrcf	(___aodiv@divisor+3)^0,f,c
  3888  002706  321E               	rrcf	(___aodiv@divisor+2)^0,f,c
  3889  002708  321D               	rrcf	(___aodiv@divisor+1)^0,f,c
  3890  00270A  321C               	rrcf	___aodiv@divisor^0,f,c
  3891  00270C  2E24               	decfsz	___aodiv@counter^0,f,c
  3892  00270E  EF4C  F013         	goto	l5609
  3893  002712                     l5621:
  3894  002712  5025               	movf	___aodiv@sign^0,w,c
  3895  002714  B4D8               	btfsc	status,2,c
  3896  002716  EF8F  F013         	goto	u4471
  3897  00271A  EF91  F013         	goto	u4470
  3898  00271E                     u4471:
  3899  00271E  EFA1  F013         	goto	l5625
  3900  002722                     u4470:
  3901  002722  1E2D               	comf	(___aodiv@quotient+7)^0,f,c
  3902  002724  1E2C               	comf	(___aodiv@quotient+6)^0,f,c
  3903  002726  1E2B               	comf	(___aodiv@quotient+5)^0,f,c
  3904  002728  1E2A               	comf	(___aodiv@quotient+4)^0,f,c
  3905  00272A  1E29               	comf	(___aodiv@quotient+3)^0,f,c
  3906  00272C  1E28               	comf	(___aodiv@quotient+2)^0,f,c
  3907  00272E  1E27               	comf	(___aodiv@quotient+1)^0,f,c
  3908  002730  6C26               	negf	___aodiv@quotient^0,c
  3909  002732  0E00               	movlw	0
  3910  002734  2227               	addwfc	(___aodiv@quotient+1)^0,f,c
  3911  002736  2228               	addwfc	(___aodiv@quotient+2)^0,f,c
  3912  002738  2229               	addwfc	(___aodiv@quotient+3)^0,f,c
  3913  00273A  222A               	addwfc	(___aodiv@quotient+4)^0,f,c
  3914  00273C  222B               	addwfc	(___aodiv@quotient+5)^0,f,c
  3915  00273E  222C               	addwfc	(___aodiv@quotient+6)^0,f,c
  3916  002740  222D               	addwfc	(___aodiv@quotient+7)^0,f,c
  3917  002742                     l5625:
  3918  002742  C026  F014         	movff	___aodiv@quotient,?___aodiv
  3919  002746  C027  F015         	movff	___aodiv@quotient+1,?___aodiv+1
  3920  00274A  C028  F016         	movff	___aodiv@quotient+2,?___aodiv+2
  3921  00274E  C029  F017         	movff	___aodiv@quotient+3,?___aodiv+3
  3922  002752  C02A  F018         	movff	___aodiv@quotient+4,?___aodiv+4
  3923  002756  C02B  F019         	movff	___aodiv@quotient+5,?___aodiv+5
  3924  00275A  C02C  F01A         	movff	___aodiv@quotient+6,?___aodiv+6
  3925  00275E  C02D  F01B         	movff	___aodiv@quotient+7,?___aodiv+7
  3926  002762  0012               	return		;funcret
  3927  002764                     __end_of___aodiv:
  3928                           	callstack 0
  3929                           
  3930 ;; *************** function _getBatteryVoltage *****************
  3931 ;; Defined at:
  3932 ;;		line 74 in file "main.c"
  3933 ;; Parameters:    Size  Location     Type
  3934 ;;		None
  3935 ;; Auto vars:     Size  Location     Type
  3936 ;;		None
  3937 ;; Return value:  Size  Location     Type
  3938 ;;                  1    wreg      void 
  3939 ;; Registers used:
  3940 ;;		wreg, status,2, status,0, cstack
  3941 ;; Tracked objects:
  3942 ;;		On entry : 0/0
  3943 ;;		On exit  : 0/0
  3944 ;;		Unchanged: 0/0
  3945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3949 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3950 ;;Total ram usage:        0 bytes
  3951 ;; Hardware stack levels used: 1
  3952 ;; Hardware stack levels required when called: 9
  3953 ;; This function calls:
  3954 ;;		_ADCC_GetSingleConversion
  3955 ;; This function is called by:
  3956 ;;		_loop
  3957 ;; This function uses a non-reentrant model
  3958 ;;
  3959                           
  3960                           	psect	text17
  3961  003EFE                     __ptext17:
  3962                           	callstack 0
  3963  003EFE                     _getBatteryVoltage:
  3964                           	callstack 20
  3965  003EFE                     
  3966                           ;main.c: 75:     BatteryVolt = ADCC_GetSingleConversion(aiBatt);
  3967  003EFE  0E22               	movlw	34
  3968  003F00  ECB2  F01D         	call	_ADCC_GetSingleConversion
  3969  003F04  C014  F084         	movff	?_ADCC_GetSingleConversion,_BatteryVolt
  3970  003F08  C015  F085         	movff	?_ADCC_GetSingleConversion+1,_BatteryVolt+1
  3971  003F0C  0012               	return		;funcret
  3972  003F0E                     __end_of_getBatteryVoltage:
  3973                           	callstack 0
  3974                           
  3975 ;; *************** function _ADCC_GetSingleConversion *****************
  3976 ;; Defined at:
  3977 ;;		line 137 in file "mcc_generated_files/adcc.c"
  3978 ;; Parameters:    Size  Location     Type
  3979 ;;  channel         1    wreg     enum E16058
  3980 ;; Auto vars:     Size  Location     Type
  3981 ;;  channel         1   23[COMRAM] enum E16058
  3982 ;; Return value:  Size  Location     Type
  3983 ;;                  2   19[COMRAM] unsigned short 
  3984 ;; Registers used:
  3985 ;;		wreg, status,2, status,0
  3986 ;; Tracked objects:
  3987 ;;		On entry : 0/0
  3988 ;;		On exit  : 0/0
  3989 ;;		Unchanged: 0/0
  3990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3991 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3992 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3993 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3994 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3995 ;;Total ram usage:        5 bytes
  3996 ;; Hardware stack levels used: 1
  3997 ;; Hardware stack levels required when called: 8
  3998 ;; This function calls:
  3999 ;;		Nothing
  4000 ;; This function is called by:
  4001 ;;		_loop
  4002 ;;		_getBatteryVoltage
  4003 ;; This function uses a non-reentrant model
  4004 ;;
  4005                           
  4006                           	psect	text18
  4007  003B64                     __ptext18:
  4008                           	callstack 0
  4009  003B64                     _ADCC_GetSingleConversion:
  4010                           	callstack 20
  4011                           
  4012                           ;incstack = 0
  4013                           ;ADCC_GetSingleConversion@channel stored from wreg
  4014  003B64  6E18               	movwf	ADCC_GetSingleConversion@channel^0,c
  4015  003B66                     
  4016                           ;mcc_generated_files/adcc.c: 137: adc_result_t ADCC_GetSingleConversion(adcc_channel_t c
      +                          hannel);mcc_generated_files/adcc.c: 138: {;mcc_generated_files/adcc.c: 140:     ADPCH = 
      +                          channel;
  4017  003B66  0060  F063  FEF1   	movff	ADCC_GetSingleConversion@channel,16113	;volatile
  4018  003B6C                     
  4019                           ;mcc_generated_files/adcc.c: 143:     ADCON0bits.ADON = 1;
  4020  003B6C  013E               	movlb	62	; () banked
  4021  003B6E  8FF8               	bsf	248,7,b	;volatile
  4022  003B70                     
  4023                           ; BSR set to: 62
  4024                           ;mcc_generated_files/adcc.c: 146:     ADCON0bits.ADCONT = 0;
  4025  003B70  9DF8               	bcf	248,6,b	;volatile
  4026  003B72                     
  4027                           ; BSR set to: 62
  4028                           ;mcc_generated_files/adcc.c: 149:     ADCON0bits.ADGO = 1;
  4029  003B72  81F8               	bsf	248,0,b	;volatile
  4030  003B74                     l976:
  4031                           
  4032                           ; BSR set to: 62
  4033                           ;mcc_generated_files/adcc.c: 153:     while (ADCON0bits.ADGO)
  4034  003B74  B1F8               	btfsc	248,0,b	;volatile
  4035  003B76  EFBF  F01D         	goto	u2831
  4036  003B7A  EFC1  F01D         	goto	u2830
  4037  003B7E                     u2831:
  4038  003B7E  EFBA  F01D         	goto	l976
  4039  003B82                     u2830:
  4040  003B82                     
  4041                           ; BSR set to: 62
  4042                           ;mcc_generated_files/adcc.c: 159:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  4043  003B82  51F0               	movf	240,w,b	;volatile
  4044  003B84  6E17               	movwf	(??_ADCC_GetSingleConversion+1)^0,c
  4045  003B86  6A16               	clrf	??_ADCC_GetSingleConversion^0,c
  4046  003B88  51EF               	movf	239,w,b	;volatile
  4047  003B8A  2416               	addwf	??_ADCC_GetSingleConversion^0,w,c
  4048  003B8C  6E14               	movwf	?_ADCC_GetSingleConversion^0,c
  4049  003B8E  0E00               	movlw	0
  4050  003B90  2017               	addwfc	(??_ADCC_GetSingleConversion+1)^0,w,c
  4051  003B92  6E15               	movwf	(?_ADCC_GetSingleConversion+1)^0,c
  4052  003B94                     
  4053                           ; BSR set to: 62
  4054  003B94  0012               	return		;funcret
  4055  003B96                     __end_of_ADCC_GetSingleConversion:
  4056                           	callstack 0
  4057                           
  4058 ;; *************** function _calcSteering *****************
  4059 ;; Defined at:
  4060 ;;		line 160 in file "main.c"
  4061 ;; Parameters:    Size  Location     Type
  4062 ;;		None
  4063 ;; Auto vars:     Size  Location     Type
  4064 ;;  delta           2   38[COMRAM] short 
  4065 ;; Return value:  Size  Location     Type
  4066 ;;                  1    wreg      void 
  4067 ;; Registers used:
  4068 ;;		wreg, status,2, status,0, cstack
  4069 ;; Tracked objects:
  4070 ;;		On entry : 0/0
  4071 ;;		On exit  : 0/0
  4072 ;;		Unchanged: 0/0
  4073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4075 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4076 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4077 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4078 ;;Total ram usage:        4 bytes
  4079 ;; Hardware stack levels used: 1
  4080 ;; Hardware stack levels required when called: 10
  4081 ;; This function calls:
  4082 ;;		___awdiv
  4083 ;;		_setSteering
  4084 ;; This function is called by:
  4085 ;;		_loop
  4086 ;; This function uses a non-reentrant model
  4087 ;;
  4088                           
  4089                           	psect	text19
  4090  0029F8                     __ptext19:
  4091                           	callstack 0
  4092  0029F8                     _calcSteering:
  4093                           	callstack 19
  4094  0029F8                     
  4095                           ;main.c: 161:     int16_t delta = (int16_t)(distLeft - distRight ) - (int8_t)((0) * 1.41
      +                          42135);
  4096  0029F8  0100               	movlb	0	; () banked
  4097  0029FA  5196               	movf	_distRight& (0+255),w,b	;volatile
  4098  0029FC  5D9A               	subwf	_distLeft& (0+255),w,b	;volatile
  4099  0029FE  6E27               	movwf	calcSteering@delta^0,c
  4100  002A00  5197               	movf	(_distRight+1)& (0+255),w,b	;volatile
  4101  002A02  599B               	subwfb	(_distLeft+1)& (0+255),w,b	;volatile
  4102  002A04  6E28               	movwf	(calcSteering@delta+1)^0,c
  4103  002A06                     
  4104                           ; BSR set to: 0
  4105                           ;main.c: 162:     delta /= (2);
  4106  002A06  C027  F014         	movff	calcSteering@delta,___awdiv@dividend
  4107  002A0A  C028  F015         	movff	calcSteering@delta+1,___awdiv@dividend+1
  4108  002A0E  0E00               	movlw	0
  4109  002A10  6E17               	movwf	(___awdiv@divisor+1)^0,c
  4110  002A12  0E02               	movlw	2
  4111  002A14  6E16               	movwf	___awdiv@divisor^0,c
  4112  002A16  EC78  F018         	call	___awdiv	;wreg free
  4113  002A1A  C014  F027         	movff	?___awdiv,calcSteering@delta
  4114  002A1E  C015  F028         	movff	?___awdiv+1,calcSteering@delta+1
  4115                           
  4116                           ;main.c: 166:     switch (driveMode){
  4117  002A22  EF6C  F015         	goto	l5127
  4118  002A26                     l5103:
  4119                           
  4120                           ; BSR set to: 0
  4121                           ;main.c: 168:             setSteering(delta, Ratio);
  4122  002A26  C027  F01C         	movff	calcSteering@delta,setSteering@steering
  4123  002A2A  C028  F01D         	movff	calcSteering@delta+1,setSteering@steering+1
  4124  002A2E  0E02               	movlw	2
  4125  002A30  6E1E               	movwf	setSteering@steeringMode^0,c
  4126  002A32  EC39  F010         	call	_setSteering	;wreg free
  4127                           
  4128                           ;main.c: 169:             break;
  4129  002A36  EF8E  F015         	goto	l1287
  4130  002A3A                     l5105:
  4131                           
  4132                           ; BSR set to: 0
  4133                           ;main.c: 171:             setSteering(delta, Front);
  4134  002A3A  C027  F01C         	movff	calcSteering@delta,setSteering@steering
  4135  002A3E  C028  F01D         	movff	calcSteering@delta+1,setSteering@steering+1
  4136  002A42  0E03               	movlw	3
  4137  002A44  6E1E               	movwf	setSteering@steeringMode^0,c
  4138  002A46  EC39  F010         	call	_setSteering	;wreg free
  4139                           
  4140                           ;main.c: 172:             break;
  4141  002A4A  EF8E  F015         	goto	l1287
  4142  002A4E                     l5107:
  4143                           
  4144                           ; BSR set to: 0
  4145                           ;main.c: 174:             if(distLeft < distRight){
  4146  002A4E  5196               	movf	_distRight& (0+255),w,b	;volatile
  4147  002A50  5D9A               	subwf	_distLeft& (0+255),w,b	;volatile
  4148  002A52  5197               	movf	(_distRight+1)& (0+255),w,b	;volatile
  4149  002A54  599B               	subwfb	(_distLeft+1)& (0+255),w,b	;volatile
  4150  002A56  B0D8               	btfsc	status,0,c
  4151  002A58  EF30  F015         	goto	u3821
  4152  002A5C  EF32  F015         	goto	u3820
  4153  002A60                     u3821:
  4154  002A60  EF3C  F015         	goto	l5111
  4155  002A64                     u3820:
  4156  002A64                     
  4157                           ; BSR set to: 0
  4158                           ;main.c: 175:                 setSteering(-(65), Front);
  4159  002A64  0EFF               	movlw	255
  4160  002A66  6E1D               	movwf	(setSteering@steering+1)^0,c
  4161  002A68  0EBF               	movlw	191
  4162  002A6A  6E1C               	movwf	setSteering@steering^0,c
  4163  002A6C  0E03               	movlw	3
  4164  002A6E  6E1E               	movwf	setSteering@steeringMode^0,c
  4165  002A70  EC39  F010         	call	_setSteering	;wreg free
  4166                           
  4167                           ;main.c: 176:             }else{
  4168  002A74  EF8E  F015         	goto	l1287
  4169  002A78                     l5111:
  4170                           
  4171                           ; BSR set to: 0
  4172                           ;main.c: 177:                 setSteering((65), Front);
  4173  002A78  0E00               	movlw	0
  4174  002A7A  6E1D               	movwf	(setSteering@steering+1)^0,c
  4175  002A7C  0E41               	movlw	65
  4176  002A7E  6E1C               	movwf	setSteering@steering^0,c
  4177  002A80  0E03               	movlw	3
  4178  002A82  6E1E               	movwf	setSteering@steeringMode^0,c
  4179  002A84  EC39  F010         	call	_setSteering	;wreg free
  4180  002A88  EF8E  F015         	goto	l1287
  4181  002A8C                     l5113:
  4182                           
  4183                           ; BSR set to: 0
  4184                           ;main.c: 181:             if(curveMode == InCurve){
  4185  002A8C  0E02               	movlw	2
  4186  002A8E  199E               	xorwf	_curveMode& (0+255),w,b
  4187  002A90  A4D8               	btfss	status,2,c
  4188  002A92  EF4D  F015         	goto	u3831
  4189  002A96  EF4F  F015         	goto	u3830
  4190  002A9A                     u3831:
  4191  002A9A  EF1D  F015         	goto	l5105
  4192  002A9E                     u3830:
  4193  002A9E                     
  4194                           ; BSR set to: 0
  4195                           ;main.c: 182:                 setSteering((65), Inverted);
  4196  002A9E  0E00               	movlw	0
  4197  002AA0  6E1D               	movwf	(setSteering@steering+1)^0,c
  4198  002AA2  0E41               	movlw	65
  4199  002AA4  6E1C               	movwf	setSteering@steering^0,c
  4200  002AA6  0E00               	movlw	0
  4201  002AA8  6E1E               	movwf	setSteering@steeringMode^0,c
  4202  002AAA  EC39  F010         	call	_setSteering	;wreg free
  4203                           
  4204                           ;main.c: 183:             } else {
  4205  002AAE  EF8E  F015         	goto	l1287
  4206  002AB2                     l5119:
  4207                           
  4208                           ; BSR set to: 0
  4209                           ;main.c: 188:             if(curveMode == InCurve){
  4210  002AB2  0E02               	movlw	2
  4211  002AB4  199E               	xorwf	_curveMode& (0+255),w,b
  4212  002AB6  A4D8               	btfss	status,2,c
  4213  002AB8  EF60  F015         	goto	u3841
  4214  002ABC  EF62  F015         	goto	u3840
  4215  002AC0                     u3841:
  4216  002AC0  EF1D  F015         	goto	l5105
  4217  002AC4                     u3840:
  4218  002AC4                     
  4219                           ; BSR set to: 0
  4220                           ;main.c: 189:                 setSteering(-(65), Inverted);
  4221  002AC4  0EFF               	movlw	255
  4222  002AC6  6E1D               	movwf	(setSteering@steering+1)^0,c
  4223  002AC8  0EBF               	movlw	191
  4224  002ACA  6E1C               	movwf	setSteering@steering^0,c
  4225  002ACC  0E00               	movlw	0
  4226  002ACE  6E1E               	movwf	setSteering@steeringMode^0,c
  4227  002AD0  EC39  F010         	call	_setSteering	;wreg free
  4228                           
  4229                           ;main.c: 190:             } else {
  4230  002AD4  EF8E  F015         	goto	l1287
  4231  002AD8                     l5127:
  4232  002AD8  0100               	movlb	0	; () banked
  4233  002ADA  519F               	movf	_driveMode& (0+255),w,b
  4234  002ADC  6E25               	movwf	??_calcSteering^0,c
  4235  002ADE  6A26               	clrf	(??_calcSteering+1)^0,c
  4236                           
  4237                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4238                           ; Switch size 1, requested type "simple"
  4239                           ; Number of cases is 1, Range of values is 0 to 0
  4240                           ; switch strategies available:
  4241                           ; Name         Instructions Cycles
  4242                           ; simple_byte            4     3 (average)
  4243                           ;	Chosen strategy is simple_byte
  4244  002AE0  5026               	movf	(??_calcSteering+1)^0,w,c
  4245  002AE2  0A00               	xorlw	0	; case 0
  4246  002AE4  B4D8               	btfsc	status,2,c
  4247  002AE6  EF77  F015         	goto	l6405
  4248  002AEA  EF8E  F015         	goto	l1287
  4249  002AEE                     l6405:
  4250                           
  4251                           ; BSR set to: 0
  4252                           ; Switch size 1, requested type "simple"
  4253                           ; Number of cases is 5, Range of values is 0 to 4
  4254                           ; switch strategies available:
  4255                           ; Name         Instructions Cycles
  4256                           ; simple_byte           16     9 (average)
  4257                           ;	Chosen strategy is simple_byte
  4258  002AEE  5025               	movf	??_calcSteering^0,w,c
  4259  002AF0  0A00               	xorlw	0	; case 0
  4260  002AF2  B4D8               	btfsc	status,2,c
  4261  002AF4  EF1D  F015         	goto	l5105
  4262  002AF8  0A01               	xorlw	1	; case 1
  4263  002AFA  B4D8               	btfsc	status,2,c
  4264  002AFC  EF13  F015         	goto	l5103
  4265  002B00  0A03               	xorlw	3	; case 2
  4266  002B02  B4D8               	btfsc	status,2,c
  4267  002B04  EF27  F015         	goto	l5107
  4268  002B08  0A01               	xorlw	1	; case 3
  4269  002B0A  B4D8               	btfsc	status,2,c
  4270  002B0C  EF46  F015         	goto	l5113
  4271  002B10  0A07               	xorlw	7	; case 4
  4272  002B12  B4D8               	btfsc	status,2,c
  4273  002B14  EF59  F015         	goto	l5119
  4274  002B18  EF8E  F015         	goto	l1287
  4275  002B1C                     l1287:
  4276  002B1C  0012               	return		;funcret
  4277  002B1E                     __end_of_calcSteering:
  4278                           	callstack 0
  4279                           
  4280 ;; *************** function _setSteering *****************
  4281 ;; Defined at:
  4282 ;;		line 200 in file "main.c"
  4283 ;; Parameters:    Size  Location     Type
  4284 ;;  steering        2   27[COMRAM] short 
  4285 ;;  steeringMode    1   29[COMRAM] enum E17302
  4286 ;; Auto vars:     Size  Location     Type
  4287 ;;  steeringB       2   34[COMRAM] short 
  4288 ;;  steeringF       2   32[COMRAM] short 
  4289 ;; Return value:  Size  Location     Type
  4290 ;;                  1    wreg      void 
  4291 ;; Registers used:
  4292 ;;		wreg, status,2, status,0, cstack
  4293 ;; Tracked objects:
  4294 ;;		On entry : 0/0
  4295 ;;		On exit  : 0/0
  4296 ;;		Unchanged: 0/0
  4297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4298 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4299 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4300 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4301 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4302 ;;Total ram usage:        9 bytes
  4303 ;; Hardware stack levels used: 1
  4304 ;; Hardware stack levels required when called: 9
  4305 ;; This function calls:
  4306 ;;		_PWM5_LoadDutyValue
  4307 ;;		_PWM6_LoadDutyValue
  4308 ;;		___awdiv
  4309 ;; This function is called by:
  4310 ;;		_loop
  4311 ;;		_calcSteering
  4312 ;; This function uses a non-reentrant model
  4313 ;;
  4314                           
  4315                           	psect	text20
  4316  002072                     __ptext20:
  4317                           	callstack 0
  4318  002072                     _setSteering:
  4319                           	callstack 20
  4320  002072                     
  4321                           ;main.c: 201:     int16_t steeringF = 0, steeringB = 0;
  4322  002072  0E00               	movlw	0
  4323  002074  6E22               	movwf	(setSteering@steeringF+1)^0,c
  4324  002076  0E00               	movlw	0
  4325  002078  6E21               	movwf	setSteering@steeringF^0,c
  4326  00207A  0E00               	movlw	0
  4327  00207C  6E24               	movwf	(setSteering@steeringB+1)^0,c
  4328  00207E  0E00               	movlw	0
  4329  002080  6E23               	movwf	setSteering@steeringB^0,c
  4330                           
  4331                           ;main.c: 202:     switch(steeringMode){
  4332  002082  EFA7  F010         	goto	l4419
  4333  002086                     l1291:
  4334                           
  4335                           ;main.c: 204:             steeringF = (-steering);
  4336  002086  C01C  F01F         	movff	setSteering@steering,??_setSteering
  4337  00208A  C01D  F020         	movff	setSteering@steering+1,??_setSteering+1
  4338  00208E  1E1F               	comf	??_setSteering^0,f,c
  4339  002090  1E20               	comf	(??_setSteering+1)^0,f,c
  4340  002092  4A1F               	infsnz	??_setSteering^0,f,c
  4341  002094  2A20               	incf	(??_setSteering+1)^0,f,c
  4342  002096  C01F  F021         	movff	??_setSteering,setSteering@steeringF
  4343  00209A  C020  F022         	movff	??_setSteering+1,setSteering@steeringF+1
  4344                           
  4345                           ;main.c: 205:             steeringB = steering;
  4346  00209E  C01C  F023         	movff	setSteering@steering,setSteering@steeringB
  4347  0020A2  C01D  F024         	movff	setSteering@steering+1,setSteering@steeringB+1
  4348                           
  4349                           ;main.c: 206:             break;
  4350  0020A6  EFC8  F010         	goto	l4421
  4351  0020AA                     l1293:
  4352                           
  4353                           ;main.c: 208:             steeringF = (-steering);
  4354  0020AA  C01C  F01F         	movff	setSteering@steering,??_setSteering
  4355  0020AE  C01D  F020         	movff	setSteering@steering+1,??_setSteering+1
  4356  0020B2  1E1F               	comf	??_setSteering^0,f,c
  4357  0020B4  1E20               	comf	(??_setSteering+1)^0,f,c
  4358  0020B6  4A1F               	infsnz	??_setSteering^0,f,c
  4359  0020B8  2A20               	incf	(??_setSteering+1)^0,f,c
  4360  0020BA  C01F  F021         	movff	??_setSteering,setSteering@steeringF
  4361  0020BE  C020  F022         	movff	??_setSteering+1,setSteering@steeringF+1
  4362                           
  4363                           ;main.c: 209:             steeringB = (-steering);
  4364  0020C2  C01C  F01F         	movff	setSteering@steering,??_setSteering
  4365  0020C6  C01D  F020         	movff	setSteering@steering+1,??_setSteering+1
  4366  0020CA  1E1F               	comf	??_setSteering^0,f,c
  4367  0020CC  1E20               	comf	(??_setSteering+1)^0,f,c
  4368  0020CE  4A1F               	infsnz	??_setSteering^0,f,c
  4369  0020D0  2A20               	incf	(??_setSteering+1)^0,f,c
  4370  0020D2  C01F  F023         	movff	??_setSteering,setSteering@steeringB
  4371  0020D6  C020  F024         	movff	??_setSteering+1,setSteering@steeringB+1
  4372                           
  4373                           ;main.c: 210:             break;
  4374  0020DA  EFC8  F010         	goto	l4421
  4375  0020DE                     l1294:
  4376                           
  4377                           ;main.c: 212:             steeringF = (-steering);
  4378  0020DE  C01C  F01F         	movff	setSteering@steering,??_setSteering
  4379  0020E2  C01D  F020         	movff	setSteering@steering+1,??_setSteering+1
  4380  0020E6  1E1F               	comf	??_setSteering^0,f,c
  4381  0020E8  1E20               	comf	(??_setSteering+1)^0,f,c
  4382  0020EA  4A1F               	infsnz	??_setSteering^0,f,c
  4383  0020EC  2A20               	incf	(??_setSteering+1)^0,f,c
  4384  0020EE  C01F  F021         	movff	??_setSteering,setSteering@steeringF
  4385  0020F2  C020  F022         	movff	??_setSteering+1,setSteering@steeringF+1
  4386  0020F6                     
  4387                           ;main.c: 213:             steeringB = (steering / (3));
  4388  0020F6  C01C  F014         	movff	setSteering@steering,___awdiv@dividend
  4389  0020FA  C01D  F015         	movff	setSteering@steering+1,___awdiv@dividend+1
  4390  0020FE  0E00               	movlw	0
  4391  002100  6E17               	movwf	(___awdiv@divisor+1)^0,c
  4392  002102  0E03               	movlw	3
  4393  002104  6E16               	movwf	___awdiv@divisor^0,c
  4394  002106  EC78  F018         	call	___awdiv	;wreg free
  4395  00210A  C014  F023         	movff	?___awdiv,setSteering@steeringB
  4396  00210E  C015  F024         	movff	?___awdiv+1,setSteering@steeringB+1
  4397                           
  4398                           ;main.c: 214:             break;
  4399  002112  EFC8  F010         	goto	l4421
  4400  002116                     l1295:
  4401                           
  4402                           ;main.c: 216:             steeringF = (-steering);
  4403  002116  C01C  F01F         	movff	setSteering@steering,??_setSteering
  4404  00211A  C01D  F020         	movff	setSteering@steering+1,??_setSteering+1
  4405  00211E  1E1F               	comf	??_setSteering^0,f,c
  4406  002120  1E20               	comf	(??_setSteering+1)^0,f,c
  4407  002122  4A1F               	infsnz	??_setSteering^0,f,c
  4408  002124  2A20               	incf	(??_setSteering+1)^0,f,c
  4409  002126  C01F  F021         	movff	??_setSteering,setSteering@steeringF
  4410  00212A  C020  F022         	movff	??_setSteering+1,setSteering@steeringF+1
  4411                           
  4412                           ;main.c: 218:             break;
  4413  00212E  EFC8  F010         	goto	l4421
  4414  002132                     l1296:
  4415                           
  4416                           ;main.c: 221:             steeringB = (-steering);
  4417  002132  C01C  F01F         	movff	setSteering@steering,??_setSteering
  4418  002136  C01D  F020         	movff	setSteering@steering+1,??_setSteering+1
  4419  00213A  1E1F               	comf	??_setSteering^0,f,c
  4420  00213C  1E20               	comf	(??_setSteering+1)^0,f,c
  4421  00213E  4A1F               	infsnz	??_setSteering^0,f,c
  4422  002140  2A20               	incf	(??_setSteering+1)^0,f,c
  4423  002142  C01F  F023         	movff	??_setSteering,setSteering@steeringB
  4424  002146  C020  F024         	movff	??_setSteering+1,setSteering@steeringB+1
  4425                           
  4426                           ;main.c: 222:             break;
  4427  00214A  EFC8  F010         	goto	l4421
  4428  00214E                     l4419:
  4429  00214E  501E               	movf	setSteering@steeringMode^0,w,c
  4430  002150  6E1F               	movwf	??_setSteering^0,c
  4431  002152  6A20               	clrf	(??_setSteering+1)^0,c
  4432                           
  4433                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4434                           ; Switch size 1, requested type "simple"
  4435                           ; Number of cases is 1, Range of values is 0 to 0
  4436                           ; switch strategies available:
  4437                           ; Name         Instructions Cycles
  4438                           ; simple_byte            4     3 (average)
  4439                           ;	Chosen strategy is simple_byte
  4440  002154  5020               	movf	(??_setSteering+1)^0,w,c
  4441  002156  0A00               	xorlw	0	; case 0
  4442  002158  B4D8               	btfsc	status,2,c
  4443  00215A  EFB1  F010         	goto	l6407
  4444  00215E  EFC8  F010         	goto	l4421
  4445  002162                     l6407:
  4446                           
  4447                           ; Switch size 1, requested type "simple"
  4448                           ; Number of cases is 5, Range of values is 0 to 4
  4449                           ; switch strategies available:
  4450                           ; Name         Instructions Cycles
  4451                           ; simple_byte           16     9 (average)
  4452                           ;	Chosen strategy is simple_byte
  4453  002162  501F               	movf	??_setSteering^0,w,c
  4454  002164  0A00               	xorlw	0	; case 0
  4455  002166  B4D8               	btfsc	status,2,c
  4456  002168  EF43  F010         	goto	l1291
  4457  00216C  0A01               	xorlw	1	; case 1
  4458  00216E  B4D8               	btfsc	status,2,c
  4459  002170  EF55  F010         	goto	l1293
  4460  002174  0A03               	xorlw	3	; case 2
  4461  002176  B4D8               	btfsc	status,2,c
  4462  002178  EF6F  F010         	goto	l1294
  4463  00217C  0A01               	xorlw	1	; case 3
  4464  00217E  B4D8               	btfsc	status,2,c
  4465  002180  EF8B  F010         	goto	l1295
  4466  002184  0A07               	xorlw	7	; case 4
  4467  002186  B4D8               	btfsc	status,2,c
  4468  002188  EF99  F010         	goto	l1296
  4469  00218C  EFC8  F010         	goto	l4421
  4470  002190                     l4421:
  4471                           
  4472                           ;main.c: 229:     if(steeringF > ((65))){
  4473  002190  BE22               	btfsc	(setSteering@steeringF+1)^0,7,c
  4474  002192  EFD4  F010         	goto	u2841
  4475  002196  5022               	movf	(setSteering@steeringF+1)^0,w,c
  4476  002198  E109               	bnz	u2840
  4477  00219A  0E42               	movlw	66
  4478  00219C  5C21               	subwf	setSteering@steeringF^0,w,c
  4479  00219E  A0D8               	btfss	status,0,c
  4480  0021A0  EFD4  F010         	goto	u2841
  4481  0021A4  EFD6  F010         	goto	u2840
  4482  0021A8                     u2841:
  4483  0021A8  EFDC  F010         	goto	l4425
  4484  0021AC                     u2840:
  4485  0021AC                     
  4486                           ;main.c: 230:         steeringF = ((65));
  4487  0021AC  0E00               	movlw	0
  4488  0021AE  6E22               	movwf	(setSteering@steeringF+1)^0,c
  4489  0021B0  0E41               	movlw	65
  4490  0021B2  6E21               	movwf	setSteering@steeringF^0,c
  4491                           
  4492                           ;main.c: 231:     } else if(steeringF < (-(65))){
  4493  0021B4  EFEE  F010         	goto	l4429
  4494  0021B8                     l4425:
  4495  0021B8  AE22               	btfss	(setSteering@steeringF+1)^0,7,c
  4496  0021BA  EFE8  F010         	goto	u2851
  4497  0021BE  0EBF               	movlw	191
  4498  0021C0  5C21               	subwf	setSteering@steeringF^0,w,c
  4499  0021C2  0EFF               	movlw	255
  4500  0021C4  5822               	subwfb	(setSteering@steeringF+1)^0,w,c
  4501  0021C6  B0D8               	btfsc	status,0,c
  4502  0021C8  EFE8  F010         	goto	u2851
  4503  0021CC  EFEA  F010         	goto	u2850
  4504  0021D0                     u2851:
  4505  0021D0  EFEE  F010         	goto	l4429
  4506  0021D4                     u2850:
  4507  0021D4                     
  4508                           ;main.c: 232:         steeringF = (-(65));
  4509  0021D4  0EFF               	movlw	255
  4510  0021D6  6E22               	movwf	(setSteering@steeringF+1)^0,c
  4511  0021D8  0EBF               	movlw	191
  4512  0021DA  6E21               	movwf	setSteering@steeringF^0,c
  4513  0021DC                     l4429:
  4514                           
  4515                           ;main.c: 235:     if(steeringB > ((45))){
  4516  0021DC  BE24               	btfsc	(setSteering@steeringB+1)^0,7,c
  4517  0021DE  EFFA  F010         	goto	u2861
  4518  0021E2  5024               	movf	(setSteering@steeringB+1)^0,w,c
  4519  0021E4  E109               	bnz	u2860
  4520  0021E6  0E2E               	movlw	46
  4521  0021E8  5C23               	subwf	setSteering@steeringB^0,w,c
  4522  0021EA  A0D8               	btfss	status,0,c
  4523  0021EC  EFFA  F010         	goto	u2861
  4524  0021F0  EFFC  F010         	goto	u2860
  4525  0021F4                     u2861:
  4526  0021F4  EF02  F011         	goto	l4433
  4527  0021F8                     u2860:
  4528  0021F8                     
  4529                           ;main.c: 236:         steeringB = ((45));
  4530  0021F8  0E00               	movlw	0
  4531  0021FA  6E24               	movwf	(setSteering@steeringB+1)^0,c
  4532  0021FC  0E2D               	movlw	45
  4533  0021FE  6E23               	movwf	setSteering@steeringB^0,c
  4534                           
  4535                           ;main.c: 237:     } else if(steeringB < (-(45))){
  4536  002200  EF14  F011         	goto	l4437
  4537  002204                     l4433:
  4538  002204  AE24               	btfss	(setSteering@steeringB+1)^0,7,c
  4539  002206  EF0E  F011         	goto	u2871
  4540  00220A  0ED3               	movlw	211
  4541  00220C  5C23               	subwf	setSteering@steeringB^0,w,c
  4542  00220E  0EFF               	movlw	255
  4543  002210  5824               	subwfb	(setSteering@steeringB+1)^0,w,c
  4544  002212  B0D8               	btfsc	status,0,c
  4545  002214  EF0E  F011         	goto	u2871
  4546  002218  EF10  F011         	goto	u2870
  4547  00221C                     u2871:
  4548  00221C  EF14  F011         	goto	l4437
  4549  002220                     u2870:
  4550  002220                     
  4551                           ;main.c: 238:         steeringB = (-(45));
  4552  002220  0EFF               	movlw	255
  4553  002222  6E24               	movwf	(setSteering@steeringB+1)^0,c
  4554  002224  0ED3               	movlw	211
  4555  002226  6E23               	movwf	setSteering@steeringB^0,c
  4556  002228                     l4437:
  4557                           
  4558                           ;main.c: 242:     PWM6_LoadDutyValue((uint16_t)((352) - steeringF));
  4559  002228  5021               	movf	setSteering@steeringF^0,w,c
  4560  00222A  0860               	sublw	96
  4561  00222C  6E14               	movwf	PWM6_LoadDutyValue@dutyValue^0,c
  4562  00222E  5022               	movf	(setSteering@steeringF+1)^0,w,c
  4563  002230  A0D8               	btfss	status,0,c
  4564  002232  2AE8               	incf	wreg,f,c
  4565  002234  0801               	sublw	1
  4566  002236  6E15               	movwf	(PWM6_LoadDutyValue@dutyValue+1)^0,c
  4567  002238  EC15  F01D         	call	_PWM6_LoadDutyValue	;wreg free
  4568  00223C                     
  4569                           ;main.c: 243:     PWM5_LoadDutyValue((uint16_t)((357) - steeringB));
  4570  00223C  5023               	movf	setSteering@steeringB^0,w,c
  4571  00223E  0865               	sublw	101
  4572  002240  6E14               	movwf	PWM5_LoadDutyValue@dutyValue^0,c
  4573  002242  5024               	movf	(setSteering@steeringB+1)^0,w,c
  4574  002244  A0D8               	btfss	status,0,c
  4575  002246  2AE8               	incf	wreg,f,c
  4576  002248  0801               	sublw	1
  4577  00224A  6E15               	movwf	(PWM5_LoadDutyValue@dutyValue+1)^0,c
  4578  00224C  EC2F  F01D         	call	_PWM5_LoadDutyValue	;wreg free
  4579  002250  0012               	return		;funcret
  4580  002252                     __end_of_setSteering:
  4581                           	callstack 0
  4582                           
  4583 ;; *************** function ___awdiv *****************
  4584 ;; Defined at:
  4585 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  4586 ;; Parameters:    Size  Location     Type
  4587 ;;  dividend        2   19[COMRAM] int 
  4588 ;;  divisor         2   21[COMRAM] int 
  4589 ;; Auto vars:     Size  Location     Type
  4590 ;;  quotient        2   25[COMRAM] int 
  4591 ;;  sign            1   24[COMRAM] unsigned char 
  4592 ;;  counter         1   23[COMRAM] unsigned char 
  4593 ;; Return value:  Size  Location     Type
  4594 ;;                  2   19[COMRAM] int 
  4595 ;; Registers used:
  4596 ;;		wreg, status,2, status,0
  4597 ;; Tracked objects:
  4598 ;;		On entry : 0/0
  4599 ;;		On exit  : 0/0
  4600 ;;		Unchanged: 0/0
  4601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4602 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4603 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4605 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4606 ;;Total ram usage:        8 bytes
  4607 ;; Hardware stack levels used: 1
  4608 ;; Hardware stack levels required when called: 8
  4609 ;; This function calls:
  4610 ;;		Nothing
  4611 ;; This function is called by:
  4612 ;;		_calcSteering
  4613 ;;		_setSteering
  4614 ;; This function uses a non-reentrant model
  4615 ;;
  4616                           
  4617                           	psect	text21
  4618  0030F0                     __ptext21:
  4619                           	callstack 0
  4620  0030F0                     ___awdiv:
  4621                           	callstack 20
  4622  0030F0  0E00               	movlw	0
  4623  0030F2  6E19               	movwf	___awdiv@sign^0,c
  4624  0030F4  BE17               	btfsc	(___awdiv@divisor+1)^0,7,c
  4625  0030F6  EF81  F018         	goto	u2740
  4626  0030FA  EF7F  F018         	goto	u2741
  4627  0030FE                     u2741:
  4628  0030FE  EF87  F018         	goto	l4315
  4629  003102                     u2740:
  4630  003102  6C16               	negf	___awdiv@divisor^0,c
  4631  003104  1E17               	comf	(___awdiv@divisor+1)^0,f,c
  4632  003106  B0D8               	btfsc	status,0,c
  4633  003108  2A17               	incf	(___awdiv@divisor+1)^0,f,c
  4634  00310A  0E01               	movlw	1
  4635  00310C  6E19               	movwf	___awdiv@sign^0,c
  4636  00310E                     l4315:
  4637  00310E  BE15               	btfsc	(___awdiv@dividend+1)^0,7,c
  4638  003110  EF8E  F018         	goto	u2750
  4639  003114  EF8C  F018         	goto	u2751
  4640  003118                     u2751:
  4641  003118  EF94  F018         	goto	l4321
  4642  00311C                     u2750:
  4643  00311C  6C14               	negf	___awdiv@dividend^0,c
  4644  00311E  1E15               	comf	(___awdiv@dividend+1)^0,f,c
  4645  003120  B0D8               	btfsc	status,0,c
  4646  003122  2A15               	incf	(___awdiv@dividend+1)^0,f,c
  4647  003124  0E01               	movlw	1
  4648  003126  1A19               	xorwf	___awdiv@sign^0,f,c
  4649  003128                     l4321:
  4650  003128  0E00               	movlw	0
  4651  00312A  6E1B               	movwf	(___awdiv@quotient+1)^0,c
  4652  00312C  0E00               	movlw	0
  4653  00312E  6E1A               	movwf	___awdiv@quotient^0,c
  4654  003130  5016               	movf	___awdiv@divisor^0,w,c
  4655  003132  1017               	iorwf	(___awdiv@divisor+1)^0,w,c
  4656  003134  B4D8               	btfsc	status,2,c
  4657  003136  EF9F  F018         	goto	u2761
  4658  00313A  EFA1  F018         	goto	u2760
  4659  00313E                     u2761:
  4660  00313E  EFC9  F018         	goto	l4343
  4661  003142                     u2760:
  4662  003142  0E01               	movlw	1
  4663  003144  6E18               	movwf	___awdiv@counter^0,c
  4664  003146  EFA9  F018         	goto	l4329
  4665  00314A                     l4327:
  4666  00314A  90D8               	bcf	status,0,c
  4667  00314C  3616               	rlcf	___awdiv@divisor^0,f,c
  4668  00314E  3617               	rlcf	(___awdiv@divisor+1)^0,f,c
  4669  003150  2A18               	incf	___awdiv@counter^0,f,c
  4670  003152                     l4329:
  4671  003152  AE17               	btfss	(___awdiv@divisor+1)^0,7,c
  4672  003154  EFAE  F018         	goto	u2771
  4673  003158  EFB0  F018         	goto	u2770
  4674  00315C                     u2771:
  4675  00315C  EFA5  F018         	goto	l4327
  4676  003160                     u2770:
  4677  003160                     l4331:
  4678  003160  90D8               	bcf	status,0,c
  4679  003162  361A               	rlcf	___awdiv@quotient^0,f,c
  4680  003164  361B               	rlcf	(___awdiv@quotient+1)^0,f,c
  4681  003166  5016               	movf	___awdiv@divisor^0,w,c
  4682  003168  5C14               	subwf	___awdiv@dividend^0,w,c
  4683  00316A  5017               	movf	(___awdiv@divisor+1)^0,w,c
  4684  00316C  5815               	subwfb	(___awdiv@dividend+1)^0,w,c
  4685  00316E  A0D8               	btfss	status,0,c
  4686  003170  EFBC  F018         	goto	u2781
  4687  003174  EFBE  F018         	goto	u2780
  4688  003178                     u2781:
  4689  003178  EFC3  F018         	goto	l4339
  4690  00317C                     u2780:
  4691  00317C  5016               	movf	___awdiv@divisor^0,w,c
  4692  00317E  5E14               	subwf	___awdiv@dividend^0,f,c
  4693  003180  5017               	movf	(___awdiv@divisor+1)^0,w,c
  4694  003182  5A15               	subwfb	(___awdiv@dividend+1)^0,f,c
  4695  003184  801A               	bsf	___awdiv@quotient^0,0,c
  4696  003186                     l4339:
  4697  003186  90D8               	bcf	status,0,c
  4698  003188  3217               	rrcf	(___awdiv@divisor+1)^0,f,c
  4699  00318A  3216               	rrcf	___awdiv@divisor^0,f,c
  4700  00318C  2E18               	decfsz	___awdiv@counter^0,f,c
  4701  00318E  EFB0  F018         	goto	l4331
  4702  003192                     l4343:
  4703  003192  5019               	movf	___awdiv@sign^0,w,c
  4704  003194  B4D8               	btfsc	status,2,c
  4705  003196  EFCF  F018         	goto	u2791
  4706  00319A  EFD1  F018         	goto	u2790
  4707  00319E                     u2791:
  4708  00319E  EFD5  F018         	goto	l4347
  4709  0031A2                     u2790:
  4710  0031A2  6C1A               	negf	___awdiv@quotient^0,c
  4711  0031A4  1E1B               	comf	(___awdiv@quotient+1)^0,f,c
  4712  0031A6  B0D8               	btfsc	status,0,c
  4713  0031A8  2A1B               	incf	(___awdiv@quotient+1)^0,f,c
  4714  0031AA                     l4347:
  4715  0031AA  C01A  F014         	movff	___awdiv@quotient,?___awdiv
  4716  0031AE  C01B  F015         	movff	___awdiv@quotient+1,?___awdiv+1
  4717  0031B2  0012               	return		;funcret
  4718  0031B4                     __end_of___awdiv:
  4719                           	callstack 0
  4720                           
  4721 ;; *************** function _PWM6_LoadDutyValue *****************
  4722 ;; Defined at:
  4723 ;;		line 74 in file "mcc_generated_files/pwm6.c"
  4724 ;; Parameters:    Size  Location     Type
  4725 ;;  dutyValue       2   19[COMRAM] unsigned short 
  4726 ;; Auto vars:     Size  Location     Type
  4727 ;;		None
  4728 ;; Return value:  Size  Location     Type
  4729 ;;                  1    wreg      void 
  4730 ;; Registers used:
  4731 ;;		wreg, status,2, status,0
  4732 ;; Tracked objects:
  4733 ;;		On entry : 0/0
  4734 ;;		On exit  : 0/0
  4735 ;;		Unchanged: 0/0
  4736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4737 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4739 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4740 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4741 ;;Total ram usage:        4 bytes
  4742 ;; Hardware stack levels used: 1
  4743 ;; Hardware stack levels required when called: 8
  4744 ;; This function calls:
  4745 ;;		Nothing
  4746 ;; This function is called by:
  4747 ;;		_setSteering
  4748 ;; This function uses a non-reentrant model
  4749 ;;
  4750                           
  4751                           	psect	text22
  4752  003A2A                     __ptext22:
  4753                           	callstack 0
  4754  003A2A                     _PWM6_LoadDutyValue:
  4755                           	callstack 20
  4756  003A2A                     
  4757                           ;mcc_generated_files/pwm6.c: 74:  void PWM6_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm6.c: 75:  {;mcc_generated_files/pwm6.c: 77:      PWM6DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  4758  003A2A  C014  F016         	movff	PWM6_LoadDutyValue@dutyValue,??_PWM6_LoadDutyValue
  4759  003A2E  C015  F017         	movff	PWM6_LoadDutyValue@dutyValue+1,??_PWM6_LoadDutyValue+1
  4760  003A32  90D8               	bcf	status,0,c
  4761  003A34  3217               	rrcf	(??_PWM6_LoadDutyValue+1)^0,f,c
  4762  003A36  3216               	rrcf	??_PWM6_LoadDutyValue^0,f,c
  4763  003A38  90D8               	bcf	status,0,c
  4764  003A3A  3217               	rrcf	(??_PWM6_LoadDutyValue+1)^0,f,c
  4765  003A3C  3216               	rrcf	??_PWM6_LoadDutyValue^0,f,c
  4766  003A3E  5016               	movf	??_PWM6_LoadDutyValue^0,w,c
  4767  003A40  6E69               	movwf	105,c	;volatile
  4768                           
  4769                           ;mcc_generated_files/pwm6.c: 80:      PWM6DCL = (dutyValue & 0x0003)<<6;
  4770  003A42  C014  F016         	movff	PWM6_LoadDutyValue@dutyValue,??_PWM6_LoadDutyValue
  4771  003A46  0E03               	movlw	3
  4772  003A48  1616               	andwf	??_PWM6_LoadDutyValue^0,f,c
  4773  003A4A  0E06               	movlw	6
  4774  003A4C  6E17               	movwf	(??_PWM6_LoadDutyValue+1)^0,c
  4775  003A4E                     u2675:
  4776  003A4E  90D8               	bcf	status,0,c
  4777  003A50  3616               	rlcf	??_PWM6_LoadDutyValue^0,f,c
  4778  003A52  2E17               	decfsz	(??_PWM6_LoadDutyValue+1)^0,f,c
  4779  003A54  EF27  F01D         	goto	u2675
  4780  003A58  5016               	movf	??_PWM6_LoadDutyValue^0,w,c
  4781  003A5A  6E68               	movwf	104,c	;volatile
  4782  003A5C  0012               	return		;funcret
  4783  003A5E                     __end_of_PWM6_LoadDutyValue:
  4784                           	callstack 0
  4785                           
  4786 ;; *************** function _PWM5_LoadDutyValue *****************
  4787 ;; Defined at:
  4788 ;;		line 74 in file "mcc_generated_files/pwm5.c"
  4789 ;; Parameters:    Size  Location     Type
  4790 ;;  dutyValue       2   19[COMRAM] unsigned short 
  4791 ;; Auto vars:     Size  Location     Type
  4792 ;;		None
  4793 ;; Return value:  Size  Location     Type
  4794 ;;                  1    wreg      void 
  4795 ;; Registers used:
  4796 ;;		wreg, status,2, status,0
  4797 ;; Tracked objects:
  4798 ;;		On entry : 0/0
  4799 ;;		On exit  : 0/0
  4800 ;;		Unchanged: 0/0
  4801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4802 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4804 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4805 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4806 ;;Total ram usage:        4 bytes
  4807 ;; Hardware stack levels used: 1
  4808 ;; Hardware stack levels required when called: 8
  4809 ;; This function calls:
  4810 ;;		Nothing
  4811 ;; This function is called by:
  4812 ;;		_setSteering
  4813 ;; This function uses a non-reentrant model
  4814 ;;
  4815                           
  4816                           	psect	text23
  4817  003A5E                     __ptext23:
  4818                           	callstack 0
  4819  003A5E                     _PWM5_LoadDutyValue:
  4820                           	callstack 20
  4821  003A5E                     
  4822                           ;mcc_generated_files/pwm5.c: 74:  void PWM5_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm5.c: 75:  {;mcc_generated_files/pwm5.c: 77:      PWM5DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  4823  003A5E  C014  F016         	movff	PWM5_LoadDutyValue@dutyValue,??_PWM5_LoadDutyValue
  4824  003A62  C015  F017         	movff	PWM5_LoadDutyValue@dutyValue+1,??_PWM5_LoadDutyValue+1
  4825  003A66  90D8               	bcf	status,0,c
  4826  003A68  3217               	rrcf	(??_PWM5_LoadDutyValue+1)^0,f,c
  4827  003A6A  3216               	rrcf	??_PWM5_LoadDutyValue^0,f,c
  4828  003A6C  90D8               	bcf	status,0,c
  4829  003A6E  3217               	rrcf	(??_PWM5_LoadDutyValue+1)^0,f,c
  4830  003A70  3216               	rrcf	??_PWM5_LoadDutyValue^0,f,c
  4831  003A72  5016               	movf	??_PWM5_LoadDutyValue^0,w,c
  4832  003A74  6E6D               	movwf	109,c	;volatile
  4833                           
  4834                           ;mcc_generated_files/pwm5.c: 80:      PWM5DCL = (dutyValue & 0x0003)<<6;
  4835  003A76  C014  F016         	movff	PWM5_LoadDutyValue@dutyValue,??_PWM5_LoadDutyValue
  4836  003A7A  0E03               	movlw	3
  4837  003A7C  1616               	andwf	??_PWM5_LoadDutyValue^0,f,c
  4838  003A7E  0E06               	movlw	6
  4839  003A80  6E17               	movwf	(??_PWM5_LoadDutyValue+1)^0,c
  4840  003A82                     u2665:
  4841  003A82  90D8               	bcf	status,0,c
  4842  003A84  3616               	rlcf	??_PWM5_LoadDutyValue^0,f,c
  4843  003A86  2E17               	decfsz	(??_PWM5_LoadDutyValue+1)^0,f,c
  4844  003A88  EF41  F01D         	goto	u2665
  4845  003A8C  5016               	movf	??_PWM5_LoadDutyValue^0,w,c
  4846  003A8E  6E6C               	movwf	108,c	;volatile
  4847  003A90  0012               	return		;funcret
  4848  003A92                     __end_of_PWM5_LoadDutyValue:
  4849                           	callstack 0
  4850                           
  4851 ;; *************** function _calcSpeed *****************
  4852 ;; Defined at:
  4853 ;;		line 246 in file "main.c"
  4854 ;; Parameters:    Size  Location     Type
  4855 ;;		None
  4856 ;; Auto vars:     Size  Location     Type
  4857 ;;  speed           2   33[BANK0 ] short 
  4858 ;; Return value:  Size  Location     Type
  4859 ;;                  1    wreg      void 
  4860 ;; Registers used:
  4861 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4862 ;; Tracked objects:
  4863 ;;		On entry : 0/0
  4864 ;;		On exit  : 0/0
  4865 ;;		Unchanged: 0/0
  4866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4868 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4869 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4870 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4871 ;;Total ram usage:        4 bytes
  4872 ;; Hardware stack levels used: 1
  4873 ;; Hardware stack levels required when called: 9
  4874 ;; This function calls:
  4875 ;;		___fladd
  4876 ;;		___flmul
  4877 ;;		___fltol
  4878 ;;		___xxtofl
  4879 ;; This function is called by:
  4880 ;;		_loop
  4881 ;; This function uses a non-reentrant model
  4882 ;;
  4883                           
  4884                           	psect	text24
  4885  002252                     __ptext24:
  4886                           	callstack 0
  4887  002252                     _calcSpeed:
  4888                           	callstack 20
  4889  002252                     
  4890                           ;main.c: 247:     int16_t speed = 0;
  4891  002252  0E00               	movlw	0
  4892  002254  0100               	movlb	0	; () banked
  4893  002256  6FC4               	movwf	(calcSpeed@speed+1)& (0+255),b
  4894  002258  0E00               	movlw	0
  4895  00225A  6FC3               	movwf	calcSpeed@speed& (0+255),b
  4896                           
  4897                           ;main.c: 249:     switch (driveMode){
  4898  00225C  EFC9  F011         	goto	l6239
  4899  002260                     l6207:
  4900                           
  4901                           ; BSR set to: 0
  4902                           ;main.c: 251:             if(distFront > 40) {
  4903  002260  51A1               	movf	(_distFront+1)& (0+255),w,b	;volatile
  4904  002262  E109               	bnz	u5460
  4905  002264  0E29               	movlw	41
  4906  002266  5DA0               	subwf	_distFront& (0+255),w,b	;volatile
  4907  002268  A0D8               	btfss	status,0,c
  4908  00226A  EF39  F011         	goto	u5461
  4909  00226E  EF3B  F011         	goto	u5460
  4910  002272                     u5461:
  4911  002272  EF3D  F011         	goto	l6211
  4912  002276                     u5460:
  4913  002276                     
  4914                           ; BSR set to: 0
  4915                           ;main.c: 252:                 driveMode = Straight;
  4916  002276  0E00               	movlw	0
  4917  002278  6F9F               	movwf	_driveMode& (0+255),b
  4918  00227A                     l6211:
  4919                           
  4920                           ; BSR set to: 0
  4921                           ;main.c: 255:             if(distFront < 40 && setSpeed > 0){
  4922  00227A  51A1               	movf	(_distFront+1)& (0+255),w,b	;volatile
  4923  00227C  E107               	bnz	u5471
  4924  00227E  0E28               	movlw	40
  4925  002280  5DA0               	subwf	_distFront& (0+255),w,b	;volatile
  4926  002282  B0D8               	btfsc	status,0,c
  4927  002284  EF46  F011         	goto	u5471
  4928  002288  EF48  F011         	goto	u5470
  4929  00228C                     u5471:
  4930  00228C  EF5E  F011         	goto	l6219
  4931  002290                     u5470:
  4932  002290                     
  4933                           ; BSR set to: 0
  4934  002290  BF8D               	btfsc	(_setSpeed+1)& (0+255),7,b
  4935  002292  EF53  F011         	goto	u5481
  4936  002296  518D               	movf	(_setSpeed+1)& (0+255),w,b
  4937  002298  E108               	bnz	u5480
  4938  00229A  058C               	decf	_setSpeed& (0+255),w,b
  4939  00229C  A0D8               	btfss	status,0,c
  4940  00229E  EF53  F011         	goto	u5481
  4941  0022A2  EF55  F011         	goto	u5480
  4942  0022A6                     u5481:
  4943  0022A6  EF5E  F011         	goto	l6219
  4944  0022AA                     u5480:
  4945  0022AA                     
  4946                           ; BSR set to: 0
  4947                           ;main.c: 256:                 speed = setSpeed;
  4948  0022AA  C08C  F0C3         	movff	_setSpeed,calcSpeed@speed
  4949  0022AE  C08D  F0C4         	movff	_setSpeed+1,calcSpeed@speed+1
  4950  0022B2                     
  4951                           ; BSR set to: 0
  4952                           ;main.c: 257:                 speed -= 1;
  4953  0022B2  07C3               	decf	calcSpeed@speed& (0+255),f,b
  4954  0022B4  A0D8               	btfss	status,0,c
  4955  0022B6  07C4               	decf	(calcSpeed@speed+1)& (0+255),f,b
  4956                           
  4957                           ;main.c: 258:             }else if( distFront < 20){
  4958  0022B8  EFEA  F011         	goto	l6241
  4959  0022BC                     l6219:
  4960                           
  4961                           ; BSR set to: 0
  4962  0022BC  51A1               	movf	(_distFront+1)& (0+255),w,b	;volatile
  4963  0022BE  E107               	bnz	u5491
  4964  0022C0  0E14               	movlw	20
  4965  0022C2  5DA0               	subwf	_distFront& (0+255),w,b	;volatile
  4966  0022C4  B0D8               	btfsc	status,0,c
  4967  0022C6  EF67  F011         	goto	u5491
  4968  0022CA  EF69  F011         	goto	u5490
  4969  0022CE                     u5491:
  4970  0022CE  EFEA  F011         	goto	l6241
  4971  0022D2                     u5490:
  4972  0022D2                     
  4973                           ; BSR set to: 0
  4974                           ;main.c: 259:                 speed = setSpeed;
  4975  0022D2  C08C  F0C3         	movff	_setSpeed,calcSpeed@speed
  4976  0022D6  C08D  F0C4         	movff	_setSpeed+1,calcSpeed@speed+1
  4977  0022DA                     
  4978                           ; BSR set to: 0
  4979                           ;main.c: 260:                 speed -= 2;
  4980  0022DA  0EFE               	movlw	254
  4981  0022DC  27C3               	addwf	calcSpeed@speed& (0+255),f,b
  4982  0022DE  0EFF               	movlw	255
  4983  0022E0  23C4               	addwfc	(calcSpeed@speed+1)& (0+255),f,b
  4984  0022E2  EFEA  F011         	goto	l6241
  4985  0022E6                     l6225:
  4986                           
  4987                           ; BSR set to: 0
  4988                           ;main.c: 264:             if(distFront < 40) {
  4989  0022E6  51A1               	movf	(_distFront+1)& (0+255),w,b	;volatile
  4990  0022E8  E107               	bnz	u5501
  4991  0022EA  0E28               	movlw	40
  4992  0022EC  5DA0               	subwf	_distFront& (0+255),w,b	;volatile
  4993  0022EE  B0D8               	btfsc	status,0,c
  4994  0022F0  EF7C  F011         	goto	u5501
  4995  0022F4  EF7E  F011         	goto	u5500
  4996  0022F8                     u5501:
  4997  0022F8  EF80  F011         	goto	l6229
  4998  0022FC                     u5500:
  4999  0022FC                     
  5000                           ; BSR set to: 0
  5001                           ;main.c: 265:                 driveMode = Brake;
  5002  0022FC  0E01               	movlw	1
  5003  0022FE  6F9F               	movwf	_driveMode& (0+255),b
  5004  002300                     l6229:
  5005                           
  5006                           ; BSR set to: 0
  5007                           ;main.c: 268:             speed = (int16_t)((0.8) * distFront + (150));
  5008  002300  0E00               	movlw	0
  5009  002302  6E37               	movwf	___fladd@a^0,c
  5010  002304  0E00               	movlw	0
  5011  002306  6E38               	movwf	(___fladd@a+1)^0,c
  5012  002308  0E16               	movlw	22
  5013  00230A  6E39               	movwf	(___fladd@a+2)^0,c
  5014  00230C  0E43               	movlw	67
  5015  00230E  6E3A               	movwf	(___fladd@a+3)^0,c
  5016  002310  0ECD               	movlw	205
  5017  002312  6E2B               	movwf	___flmul@a^0,c
  5018  002314  0ECC               	movlw	204
  5019  002316  6E2C               	movwf	(___flmul@a+1)^0,c
  5020  002318  0E4C               	movlw	76
  5021  00231A  6E2D               	movwf	(___flmul@a+2)^0,c
  5022  00231C  0E3F               	movlw	63
  5023  00231E  6E2E               	movwf	(___flmul@a+3)^0,c
  5024  002320  C0A0  F019         	movff	_distFront,___xxtofl@val	;volatile
  5025  002324  C0A1  F01A         	movff	_distFront+1,___xxtofl@val+1	;volatile
  5026  002328  6A1B               	clrf	(___xxtofl@val+2)^0,c
  5027  00232A  6A1C               	clrf	(___xxtofl@val+3)^0,c
  5028  00232C  0E00               	movlw	0
  5029  00232E  EC14  F012         	call	___xxtofl
  5030  002332  C019  F027         	movff	?___xxtofl,___flmul@b
  5031  002336  C01A  F028         	movff	?___xxtofl+1,___flmul@b+1
  5032  00233A  C01B  F029         	movff	?___xxtofl+2,___flmul@b+2
  5033  00233E  C01C  F02A         	movff	?___xxtofl+3,___flmul@b+3
  5034  002342  EC95  F00A         	call	___flmul	;wreg free
  5035  002346  C027  F033         	movff	?___flmul,___fladd@b
  5036  00234A  C028  F034         	movff	?___flmul+1,___fladd@b+1
  5037  00234E  C029  F035         	movff	?___flmul+2,___fladd@b+2
  5038  002352  C02A  F036         	movff	?___flmul+3,___fladd@b+3
  5039  002356  EC34  F008         	call	___fladd	;wreg free
  5040  00235A  C033  F0B7         	movff	?___fladd,___fltol@f1
  5041  00235E  C034  F0B8         	movff	?___fladd+1,___fltol@f1+1
  5042  002362  C035  F0B9         	movff	?___fladd+2,___fltol@f1+2
  5043  002366  C036  F0BA         	movff	?___fladd+3,___fltol@f1+3
  5044  00236A  EC9D  F016         	call	___fltol	;wreg free
  5045  00236E  C0B7  F0C3         	movff	?___fltol,calcSpeed@speed
  5046  002372  C0B8  F0C4         	movff	?___fltol+1,calcSpeed@speed+1
  5047                           
  5048                           ;main.c: 269:             break;
  5049  002376  EFEA  F011         	goto	l6241
  5050  00237A                     l6231:
  5051                           
  5052                           ; BSR set to: 0
  5053                           ;main.c: 271:             speed = (-150);
  5054  00237A  0EFF               	movlw	255
  5055  00237C  6FC4               	movwf	(calcSpeed@speed+1)& (0+255),b
  5056  00237E  0E6A               	movlw	106
  5057  002380  6FC3               	movwf	calcSpeed@speed& (0+255),b
  5058                           
  5059                           ;main.c: 272:             break;
  5060  002382  EFEA  F011         	goto	l6241
  5061  002386                     l6233:
  5062                           
  5063                           ; BSR set to: 0
  5064                           ;main.c: 274:             speed = (150);
  5065  002386  0E00               	movlw	0
  5066  002388  6FC4               	movwf	(calcSpeed@speed+1)& (0+255),b
  5067  00238A  0E96               	movlw	150
  5068  00238C  6FC3               	movwf	calcSpeed@speed& (0+255),b
  5069                           
  5070                           ;main.c: 275:             break;
  5071  00238E  EFEA  F011         	goto	l6241
  5072  002392                     l6239:
  5073                           
  5074                           ; BSR set to: 0
  5075  002392  519F               	movf	_driveMode& (0+255),w,b
  5076  002394  6FC1               	movwf	??_calcSpeed& (0+255),b
  5077  002396  6BC2               	clrf	(??_calcSpeed+1)& (0+255),b
  5078                           
  5079                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5080                           ; Switch size 1, requested type "simple"
  5081                           ; Number of cases is 1, Range of values is 0 to 0
  5082                           ; switch strategies available:
  5083                           ; Name         Instructions Cycles
  5084                           ; simple_byte            4     3 (average)
  5085                           ;	Chosen strategy is simple_byte
  5086  002398  51C2               	movf	(??_calcSpeed+1)& (0+255),w,b
  5087  00239A  0A00               	xorlw	0	; case 0
  5088  00239C  B4D8               	btfsc	status,2,c
  5089  00239E  EFD3  F011         	goto	l6409
  5090  0023A2  EFEA  F011         	goto	l6241
  5091  0023A6                     l6409:
  5092                           
  5093                           ; BSR set to: 0
  5094                           ; Switch size 1, requested type "simple"
  5095                           ; Number of cases is 5, Range of values is 0 to 4
  5096                           ; switch strategies available:
  5097                           ; Name         Instructions Cycles
  5098                           ; simple_byte           16     9 (average)
  5099                           ;	Chosen strategy is simple_byte
  5100  0023A6  51C1               	movf	??_calcSpeed& (0+255),w,b
  5101  0023A8  0A00               	xorlw	0	; case 0
  5102  0023AA  B4D8               	btfsc	status,2,c
  5103  0023AC  EF73  F011         	goto	l6225
  5104  0023B0  0A01               	xorlw	1	; case 1
  5105  0023B2  B4D8               	btfsc	status,2,c
  5106  0023B4  EF30  F011         	goto	l6207
  5107  0023B8  0A03               	xorlw	3	; case 2
  5108  0023BA  B4D8               	btfsc	status,2,c
  5109  0023BC  EFBD  F011         	goto	l6231
  5110  0023C0  0A01               	xorlw	1	; case 3
  5111  0023C2  B4D8               	btfsc	status,2,c
  5112  0023C4  EFC3  F011         	goto	l6233
  5113  0023C8  0A07               	xorlw	7	; case 4
  5114  0023CA  B4D8               	btfsc	status,2,c
  5115  0023CC  EFC3  F011         	goto	l6233
  5116  0023D0  EFEA  F011         	goto	l6241
  5117  0023D4                     l6241:
  5118                           
  5119                           ;main.c: 281:     if(speed > (400)){
  5120  0023D4  0100               	movlb	0	; () banked
  5121  0023D6  BFC4               	btfsc	(calcSpeed@speed+1)& (0+255),7,b
  5122  0023D8  EFF7  F011         	goto	u5511
  5123  0023DC  0E91               	movlw	145
  5124  0023DE  5DC3               	subwf	calcSpeed@speed& (0+255),w,b
  5125  0023E0  0E01               	movlw	1
  5126  0023E2  59C4               	subwfb	(calcSpeed@speed+1)& (0+255),w,b
  5127  0023E4  A0D8               	btfss	status,0,c
  5128  0023E6  EFF7  F011         	goto	u5511
  5129  0023EA  EFF9  F011         	goto	u5510
  5130  0023EE                     u5511:
  5131  0023EE  EFFD  F011         	goto	l6245
  5132  0023F2                     u5510:
  5133  0023F2                     
  5134                           ; BSR set to: 0
  5135                           ;main.c: 282:         speed = (400);
  5136  0023F2  0E01               	movlw	1
  5137  0023F4  6FC4               	movwf	(calcSpeed@speed+1)& (0+255),b
  5138  0023F6  0E90               	movlw	144
  5139  0023F8  6FC3               	movwf	calcSpeed@speed& (0+255),b
  5140  0023FA                     l6245:
  5141                           
  5142                           ; BSR set to: 0
  5143                           ;main.c: 284:     if(speed < (-250)){
  5144  0023FA  AFC4               	btfss	(calcSpeed@speed+1)& (0+255),7,b
  5145  0023FC  EF09  F012         	goto	u5521
  5146  002400  0E06               	movlw	6
  5147  002402  5DC3               	subwf	calcSpeed@speed& (0+255),w,b
  5148  002404  0EFF               	movlw	255
  5149  002406  59C4               	subwfb	(calcSpeed@speed+1)& (0+255),w,b
  5150  002408  B0D8               	btfsc	status,0,c
  5151  00240A  EF09  F012         	goto	u5521
  5152  00240E  EF0B  F012         	goto	u5520
  5153  002412                     u5521:
  5154  002412  EF0F  F012         	goto	l6249
  5155  002416                     u5520:
  5156  002416                     
  5157                           ; BSR set to: 0
  5158                           ;main.c: 285:         speed = (-250);
  5159  002416  0EFF               	movlw	255
  5160  002418  6FC4               	movwf	(calcSpeed@speed+1)& (0+255),b
  5161  00241A  0E06               	movlw	6
  5162  00241C  6FC3               	movwf	calcSpeed@speed& (0+255),b
  5163  00241E                     l6249:
  5164                           
  5165                           ; BSR set to: 0
  5166                           ;main.c: 287:     setSpeed = speed;
  5167  00241E  C0C3  F08C         	movff	calcSpeed@speed,_setSpeed
  5168  002422  C0C4  F08D         	movff	calcSpeed@speed+1,_setSpeed+1
  5169  002426                     
  5170                           ; BSR set to: 0
  5171  002426  0012               	return		;funcret
  5172  002428                     __end_of_calcSpeed:
  5173                           	callstack 0
  5174                           
  5175 ;; *************** function ___fladd *****************
  5176 ;; Defined at:
  5177 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  5178 ;; Parameters:    Size  Location     Type
  5179 ;;  b               4   50[COMRAM] void 
  5180 ;;  a               4   54[COMRAM] void 
  5181 ;; Auto vars:     Size  Location     Type
  5182 ;;  grs             1   20[BANK0 ] unsigned char 
  5183 ;;  bexp            1   19[BANK0 ] unsigned char 
  5184 ;;  aexp            1   18[BANK0 ] unsigned char 
  5185 ;;  signs           1   17[BANK0 ] unsigned char 
  5186 ;; Return value:  Size  Location     Type
  5187 ;;                  4   50[COMRAM] unsigned char 
  5188 ;; Registers used:
  5189 ;;		wreg, status,2, status,0
  5190 ;; Tracked objects:
  5191 ;;		On entry : 0/0
  5192 ;;		On exit  : 0/0
  5193 ;;		Unchanged: 0/0
  5194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5195 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5196 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5197 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5198 ;;      Totals:         8       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5199 ;;Total ram usage:       16 bytes
  5200 ;; Hardware stack levels used: 1
  5201 ;; Hardware stack levels required when called: 8
  5202 ;; This function calls:
  5203 ;;		Nothing
  5204 ;; This function is called by:
  5205 ;;		_calcSpeed
  5206 ;; This function uses a non-reentrant model
  5207 ;;
  5208                           
  5209                           	psect	text25
  5210  001068                     __ptext25:
  5211                           	callstack 0
  5212  001068                     ___fladd:
  5213                           	callstack 20
  5214  001068  5036               	movf	(___fladd@b+3)^0,w,c
  5215  00106A  0B80               	andlw	128
  5216  00106C  0100               	movlb	0	; () banked
  5217  00106E  6FB3               	movwf	___fladd@signs& (0+255),b
  5218  001070  5036               	movf	(___fladd@b+3)^0,w,c
  5219  001072  2436               	addwf	(___fladd@b+3)^0,w,c
  5220  001074  6FB5               	movwf	___fladd@bexp& (0+255),b
  5221  001076                     
  5222                           ; BSR set to: 0
  5223  001076  AE35               	btfss	(___fladd@b+2)^0,7,c
  5224  001078  EF40  F008         	goto	u4791
  5225  00107C  EF42  F008         	goto	u4790
  5226  001080                     u4791:
  5227  001080  EF43  F008         	goto	l5815
  5228  001084                     u4790:
  5229  001084                     
  5230                           ; BSR set to: 0
  5231  001084  81B5               	bsf	___fladd@bexp& (0+255),0,b
  5232  001086                     l5815:
  5233                           
  5234                           ; BSR set to: 0
  5235  001086  51B5               	movf	___fladd@bexp& (0+255),w,b
  5236  001088  B4D8               	btfsc	status,2,c
  5237  00108A  EF49  F008         	goto	u4801
  5238  00108E  EF4B  F008         	goto	u4800
  5239  001092                     u4801:
  5240  001092  EF60  F008         	goto	l5825
  5241  001096                     u4800:
  5242  001096                     
  5243                           ; BSR set to: 0
  5244  001096  29B5               	incf	___fladd@bexp& (0+255),w,b
  5245  001098  A4D8               	btfss	status,2,c
  5246  00109A  EF51  F008         	goto	u4811
  5247  00109E  EF53  F008         	goto	u4810
  5248  0010A2                     u4811:
  5249  0010A2  EF5B  F008         	goto	l5821
  5250  0010A6                     u4810:
  5251  0010A6                     
  5252                           ; BSR set to: 0
  5253  0010A6  0E00               	movlw	0
  5254  0010A8  6E33               	movwf	___fladd@b^0,c
  5255  0010AA  0E00               	movlw	0
  5256  0010AC  6E34               	movwf	(___fladd@b+1)^0,c
  5257  0010AE  0E00               	movlw	0
  5258  0010B0  6E35               	movwf	(___fladd@b+2)^0,c
  5259  0010B2  0E00               	movlw	0
  5260  0010B4  6E36               	movwf	(___fladd@b+3)^0,c
  5261  0010B6                     l5821:
  5262                           
  5263                           ; BSR set to: 0
  5264  0010B6  8E35               	bsf	(___fladd@b+2)^0,7,c
  5265  0010B8                     
  5266                           ; BSR set to: 0
  5267  0010B8  0E00               	movlw	0
  5268  0010BA  6E36               	movwf	(___fladd@b+3)^0,c
  5269  0010BC  EF68  F008         	goto	l5827
  5270  0010C0                     l5825:
  5271                           
  5272                           ; BSR set to: 0
  5273  0010C0  0E00               	movlw	0
  5274  0010C2  6E33               	movwf	___fladd@b^0,c
  5275  0010C4  0E00               	movlw	0
  5276  0010C6  6E34               	movwf	(___fladd@b+1)^0,c
  5277  0010C8  0E00               	movlw	0
  5278  0010CA  6E35               	movwf	(___fladd@b+2)^0,c
  5279  0010CC  0E00               	movlw	0
  5280  0010CE  6E36               	movwf	(___fladd@b+3)^0,c
  5281  0010D0                     l5827:
  5282                           
  5283                           ; BSR set to: 0
  5284  0010D0  503A               	movf	(___fladd@a+3)^0,w,c
  5285  0010D2  0B80               	andlw	128
  5286  0010D4  6FB4               	movwf	___fladd@aexp& (0+255),b
  5287  0010D6                     
  5288                           ; BSR set to: 0
  5289  0010D6  51B3               	movf	___fladd@signs& (0+255),w,b
  5290  0010D8  19B4               	xorwf	___fladd@aexp& (0+255),w,b
  5291  0010DA  B4D8               	btfsc	status,2,c
  5292  0010DC  EF72  F008         	goto	u4821
  5293  0010E0  EF74  F008         	goto	u4820
  5294  0010E4                     u4821:
  5295  0010E4  EF75  F008         	goto	l5833
  5296  0010E8                     u4820:
  5297  0010E8                     
  5298                           ; BSR set to: 0
  5299  0010E8  8DB3               	bsf	___fladd@signs& (0+255),6,b
  5300  0010EA                     l5833:
  5301                           
  5302                           ; BSR set to: 0
  5303  0010EA  503A               	movf	(___fladd@a+3)^0,w,c
  5304  0010EC  243A               	addwf	(___fladd@a+3)^0,w,c
  5305  0010EE  6FB4               	movwf	___fladd@aexp& (0+255),b
  5306  0010F0                     
  5307                           ; BSR set to: 0
  5308  0010F0  AE39               	btfss	(___fladd@a+2)^0,7,c
  5309  0010F2  EF7D  F008         	goto	u4831
  5310  0010F6  EF7F  F008         	goto	u4830
  5311  0010FA                     u4831:
  5312  0010FA  EF80  F008         	goto	l5839
  5313  0010FE                     u4830:
  5314  0010FE                     
  5315                           ; BSR set to: 0
  5316  0010FE  81B4               	bsf	___fladd@aexp& (0+255),0,b
  5317  001100                     l5839:
  5318                           
  5319                           ; BSR set to: 0
  5320  001100  51B4               	movf	___fladd@aexp& (0+255),w,b
  5321  001102  B4D8               	btfsc	status,2,c
  5322  001104  EF86  F008         	goto	u4841
  5323  001108  EF88  F008         	goto	u4840
  5324  00110C                     u4841:
  5325  00110C  EF9D  F008         	goto	l5849
  5326  001110                     u4840:
  5327  001110                     
  5328                           ; BSR set to: 0
  5329  001110  29B4               	incf	___fladd@aexp& (0+255),w,b
  5330  001112  A4D8               	btfss	status,2,c
  5331  001114  EF8E  F008         	goto	u4851
  5332  001118  EF90  F008         	goto	u4850
  5333  00111C                     u4851:
  5334  00111C  EF98  F008         	goto	l5845
  5335  001120                     u4850:
  5336  001120                     
  5337                           ; BSR set to: 0
  5338  001120  0E00               	movlw	0
  5339  001122  6E37               	movwf	___fladd@a^0,c
  5340  001124  0E00               	movlw	0
  5341  001126  6E38               	movwf	(___fladd@a+1)^0,c
  5342  001128  0E00               	movlw	0
  5343  00112A  6E39               	movwf	(___fladd@a+2)^0,c
  5344  00112C  0E00               	movlw	0
  5345  00112E  6E3A               	movwf	(___fladd@a+3)^0,c
  5346  001130                     l5845:
  5347                           
  5348                           ; BSR set to: 0
  5349  001130  8E39               	bsf	(___fladd@a+2)^0,7,c
  5350  001132                     
  5351                           ; BSR set to: 0
  5352  001132  0E00               	movlw	0
  5353  001134  6E3A               	movwf	(___fladd@a+3)^0,c
  5354  001136  EFA5  F008         	goto	l5851
  5355  00113A                     l5849:
  5356                           
  5357                           ; BSR set to: 0
  5358  00113A  0E00               	movlw	0
  5359  00113C  6E37               	movwf	___fladd@a^0,c
  5360  00113E  0E00               	movlw	0
  5361  001140  6E38               	movwf	(___fladd@a+1)^0,c
  5362  001142  0E00               	movlw	0
  5363  001144  6E39               	movwf	(___fladd@a+2)^0,c
  5364  001146  0E00               	movlw	0
  5365  001148  6E3A               	movwf	(___fladd@a+3)^0,c
  5366  00114A                     l5851:
  5367                           
  5368                           ; BSR set to: 0
  5369  00114A  51B5               	movf	___fladd@bexp& (0+255),w,b
  5370  00114C  5DB4               	subwf	___fladd@aexp& (0+255),w,b
  5371  00114E  B0D8               	btfsc	status,0,c
  5372  001150  EFAC  F008         	goto	u4861
  5373  001154  EFAE  F008         	goto	u4860
  5374  001158                     u4861:
  5375  001158  EFD5  F008         	goto	l5887
  5376  00115C                     u4860:
  5377  00115C                     
  5378                           ; BSR set to: 0
  5379  00115C  ADB3               	btfss	___fladd@signs& (0+255),6,b
  5380  00115E  EFB3  F008         	goto	u4871
  5381  001162  EFB5  F008         	goto	u4870
  5382  001166                     u4871:
  5383  001166  EFB7  F008         	goto	l5857
  5384  00116A                     u4870:
  5385  00116A                     
  5386                           ; BSR set to: 0
  5387  00116A  0E80               	movlw	128
  5388  00116C  1BB3               	xorwf	___fladd@signs& (0+255),f,b
  5389  00116E                     l5857:
  5390                           
  5391                           ; BSR set to: 0
  5392  00116E  C0B5  F0B6         	movff	___fladd@bexp,___fladd@grs
  5393  001172                     
  5394                           ; BSR set to: 0
  5395  001172  C0B4  F0B5         	movff	___fladd@aexp,___fladd@bexp
  5396  001176                     
  5397                           ; BSR set to: 0
  5398  001176  C0B6  F0B4         	movff	___fladd@grs,___fladd@aexp
  5399  00117A                     
  5400                           ; BSR set to: 0
  5401  00117A  C033  F0B6         	movff	___fladd@b,___fladd@grs
  5402  00117E                     
  5403                           ; BSR set to: 0
  5404  00117E  C037  F033         	movff	___fladd@a,___fladd@b
  5405  001182                     
  5406                           ; BSR set to: 0
  5407  001182  C0B6  F037         	movff	___fladd@grs,___fladd@a
  5408  001186                     
  5409                           ; BSR set to: 0
  5410  001186  C034  F0B6         	movff	___fladd@b+1,___fladd@grs
  5411  00118A                     
  5412                           ; BSR set to: 0
  5413  00118A  C038  F034         	movff	___fladd@a+1,___fladd@b+1
  5414  00118E                     
  5415                           ; BSR set to: 0
  5416  00118E  C0B6  F038         	movff	___fladd@grs,___fladd@a+1
  5417  001192                     
  5418                           ; BSR set to: 0
  5419  001192  C035  F0B6         	movff	___fladd@b+2,___fladd@grs
  5420  001196                     
  5421                           ; BSR set to: 0
  5422  001196  C039  F035         	movff	___fladd@a+2,___fladd@b+2
  5423  00119A                     
  5424                           ; BSR set to: 0
  5425  00119A  C0B6  F039         	movff	___fladd@grs,___fladd@a+2
  5426  00119E                     
  5427                           ; BSR set to: 0
  5428  00119E  C036  F0B6         	movff	___fladd@b+3,___fladd@grs
  5429  0011A2                     
  5430                           ; BSR set to: 0
  5431  0011A2  C03A  F036         	movff	___fladd@a+3,___fladd@b+3
  5432  0011A6                     
  5433                           ; BSR set to: 0
  5434  0011A6  C0B6  F03A         	movff	___fladd@grs,___fladd@a+3
  5435  0011AA                     l5887:
  5436                           
  5437                           ; BSR set to: 0
  5438  0011AA  0E00               	movlw	0
  5439  0011AC  6FB6               	movwf	___fladd@grs& (0+255),b
  5440  0011AE                     
  5441                           ; BSR set to: 0
  5442  0011AE  51B5               	movf	___fladd@bexp& (0+255),w,b
  5443  0011B0  C0B4  F0AF         	movff	___fladd@aexp,??___fladd
  5444  0011B4  6BB0               	clrf	(??___fladd+1)& (0+255),b
  5445  0011B6  5FAF               	subwf	??___fladd& (0+255),f,b
  5446  0011B8  0E00               	movlw	0
  5447  0011BA  5BB0               	subwfb	(??___fladd+1)& (0+255),f,b
  5448  0011BC  BFB0               	btfsc	(??___fladd+1)& (0+255),7,b
  5449  0011BE  EFEA  F008         	goto	u4881
  5450  0011C2  51B0               	movf	(??___fladd+1)& (0+255),w,b
  5451  0011C4  E109               	bnz	u4880
  5452  0011C6  0E1A               	movlw	26
  5453  0011C8  5DAF               	subwf	??___fladd& (0+255),w,b
  5454  0011CA  A0D8               	btfss	status,0,c
  5455  0011CC  EFEA  F008         	goto	u4881
  5456  0011D0  EFEC  F008         	goto	u4880
  5457  0011D4                     u4881:
  5458  0011D4  EF23  F009         	goto	l1871
  5459  0011D8                     u4880:
  5460  0011D8                     
  5461                           ; BSR set to: 0
  5462  0011D8  5033               	movf	___fladd@b^0,w,c
  5463  0011DA  1034               	iorwf	(___fladd@b+1)^0,w,c
  5464  0011DC  1035               	iorwf	(___fladd@b+2)^0,w,c
  5465  0011DE  1036               	iorwf	(___fladd@b+3)^0,w,c
  5466  0011E0  A4D8               	btfss	status,2,c
  5467  0011E2  EFF5  F008         	goto	u4891
  5468  0011E6  EFF8  F008         	goto	u4890
  5469  0011EA                     u4891:
  5470  0011EA  0E01               	movlw	1
  5471  0011EC  EFF9  F008         	goto	u4900
  5472  0011F0                     u4890:
  5473  0011F0  0E00               	movlw	0
  5474  0011F2                     u4900:
  5475  0011F2  6FB6               	movwf	___fladd@grs& (0+255),b
  5476  0011F4                     
  5477                           ; BSR set to: 0
  5478  0011F4  0E00               	movlw	0
  5479  0011F6  6E33               	movwf	___fladd@b^0,c
  5480  0011F8  0E00               	movlw	0
  5481  0011FA  6E34               	movwf	(___fladd@b+1)^0,c
  5482  0011FC  0E00               	movlw	0
  5483  0011FE  6E35               	movwf	(___fladd@b+2)^0,c
  5484  001200  0E00               	movlw	0
  5485  001202  6E36               	movwf	(___fladd@b+3)^0,c
  5486  001204                     
  5487                           ; BSR set to: 0
  5488  001204  C0B4  F0B5         	movff	___fladd@aexp,___fladd@bexp
  5489  001208  EF2C  F009         	goto	l1870
  5490  00120C                     l1872:
  5491                           
  5492                           ; BSR set to: 0
  5493  00120C  A1B6               	btfss	___fladd@grs& (0+255),0,b
  5494  00120E  EF0B  F009         	goto	u4911
  5495  001212  EF0D  F009         	goto	u4910
  5496  001216                     u4911:
  5497  001216  EF13  F009         	goto	l5899
  5498  00121A                     u4910:
  5499  00121A                     
  5500                           ; BSR set to: 0
  5501  00121A  90D8               	bcf	status,0,c
  5502  00121C  31B6               	rrcf	___fladd@grs& (0+255),w,b
  5503  00121E  0901               	iorlw	1
  5504  001220  6FB6               	movwf	___fladd@grs& (0+255),b
  5505  001222  EF15  F009         	goto	l5901
  5506  001226                     l5899:
  5507                           
  5508                           ; BSR set to: 0
  5509  001226  90D8               	bcf	status,0,c
  5510  001228  33B6               	rrcf	___fladd@grs& (0+255),f,b
  5511  00122A                     l5901:
  5512                           
  5513                           ; BSR set to: 0
  5514  00122A  A033               	btfss	___fladd@b^0,0,c
  5515  00122C  EF1A  F009         	goto	u4921
  5516  001230  EF1C  F009         	goto	u4920
  5517  001234                     u4921:
  5518  001234  EF1D  F009         	goto	l5905
  5519  001238                     u4920:
  5520  001238                     
  5521                           ; BSR set to: 0
  5522  001238  8FB6               	bsf	___fladd@grs& (0+255),7,b
  5523  00123A                     l5905:
  5524                           
  5525                           ; BSR set to: 0
  5526  00123A  3436               	rlcf	(___fladd@b+3)^0,w,c
  5527  00123C  3236               	rrcf	(___fladd@b+3)^0,f,c
  5528  00123E  3235               	rrcf	(___fladd@b+2)^0,f,c
  5529  001240  3234               	rrcf	(___fladd@b+1)^0,f,c
  5530  001242  3233               	rrcf	___fladd@b^0,f,c
  5531  001244                     
  5532                           ; BSR set to: 0
  5533  001244  2BB5               	incf	___fladd@bexp& (0+255),f,b
  5534  001246                     l1871:
  5535                           
  5536                           ; BSR set to: 0
  5537  001246  51B4               	movf	___fladd@aexp& (0+255),w,b
  5538  001248  5DB5               	subwf	___fladd@bexp& (0+255),w,b
  5539  00124A  A0D8               	btfss	status,0,c
  5540  00124C  EF2A  F009         	goto	u4931
  5541  001250  EF2C  F009         	goto	u4930
  5542  001254                     u4931:
  5543  001254  EF06  F009         	goto	l1872
  5544  001258                     u4930:
  5545  001258                     l1870:
  5546                           
  5547                           ; BSR set to: 0
  5548  001258  BDB3               	btfsc	___fladd@signs& (0+255),6,b
  5549  00125A  EF31  F009         	goto	u4941
  5550  00125E  EF33  F009         	goto	u4940
  5551  001262                     u4941:
  5552  001262  EF73  F009         	goto	l5933
  5553  001266                     u4940:
  5554  001266                     
  5555                           ; BSR set to: 0
  5556  001266  51B5               	movf	___fladd@bexp& (0+255),w,b
  5557  001268  A4D8               	btfss	status,2,c
  5558  00126A  EF39  F009         	goto	u4951
  5559  00126E  EF3B  F009         	goto	u4950
  5560  001272                     u4951:
  5561  001272  EF45  F009         	goto	l5915
  5562  001276                     u4950:
  5563  001276                     
  5564                           ; BSR set to: 0
  5565  001276  0E00               	movlw	0
  5566  001278  6E33               	movwf	?___fladd^0,c
  5567  00127A  0E00               	movlw	0
  5568  00127C  6E34               	movwf	(?___fladd+1)^0,c
  5569  00127E  0E00               	movlw	0
  5570  001280  6E35               	movwf	(?___fladd+2)^0,c
  5571  001282  0E00               	movlw	0
  5572  001284  6E36               	movwf	(?___fladd+3)^0,c
  5573  001286  EF94  F00A         	goto	l1879
  5574  00128A                     l5915:
  5575                           
  5576                           ; BSR set to: 0
  5577  00128A  5037               	movf	___fladd@a^0,w,c
  5578  00128C  2633               	addwf	___fladd@b^0,f,c
  5579  00128E  5038               	movf	(___fladd@a+1)^0,w,c
  5580  001290  2234               	addwfc	(___fladd@b+1)^0,f,c
  5581  001292  5039               	movf	(___fladd@a+2)^0,w,c
  5582  001294  2235               	addwfc	(___fladd@b+2)^0,f,c
  5583  001296  503A               	movf	(___fladd@a+3)^0,w,c
  5584  001298  2236               	addwfc	(___fladd@b+3)^0,f,c
  5585  00129A                     
  5586                           ; BSR set to: 0
  5587  00129A  A036               	btfss	(___fladd@b+3)^0,0,c
  5588  00129C  EF52  F009         	goto	u4961
  5589  0012A0  EF54  F009         	goto	u4960
  5590  0012A4                     u4961:
  5591  0012A4  EF00  F00A         	goto	l5969
  5592  0012A8                     u4960:
  5593  0012A8                     
  5594                           ; BSR set to: 0
  5595  0012A8  A1B6               	btfss	___fladd@grs& (0+255),0,b
  5596  0012AA  EF59  F009         	goto	u4971
  5597  0012AE  EF5B  F009         	goto	u4970
  5598  0012B2                     u4971:
  5599  0012B2  EF61  F009         	goto	l5923
  5600  0012B6                     u4970:
  5601  0012B6                     
  5602                           ; BSR set to: 0
  5603  0012B6  90D8               	bcf	status,0,c
  5604  0012B8  31B6               	rrcf	___fladd@grs& (0+255),w,b
  5605  0012BA  0901               	iorlw	1
  5606  0012BC  6FB6               	movwf	___fladd@grs& (0+255),b
  5607  0012BE  EF63  F009         	goto	l5925
  5608  0012C2                     l5923:
  5609                           
  5610                           ; BSR set to: 0
  5611  0012C2  90D8               	bcf	status,0,c
  5612  0012C4  33B6               	rrcf	___fladd@grs& (0+255),f,b
  5613  0012C6                     l5925:
  5614                           
  5615                           ; BSR set to: 0
  5616  0012C6  A033               	btfss	___fladd@b^0,0,c
  5617  0012C8  EF68  F009         	goto	u4981
  5618  0012CC  EF6A  F009         	goto	u4980
  5619  0012D0                     u4981:
  5620  0012D0  EF6B  F009         	goto	l5929
  5621  0012D4                     u4980:
  5622  0012D4                     
  5623                           ; BSR set to: 0
  5624  0012D4  8FB6               	bsf	___fladd@grs& (0+255),7,b
  5625  0012D6                     l5929:
  5626                           
  5627                           ; BSR set to: 0
  5628  0012D6  3436               	rlcf	(___fladd@b+3)^0,w,c
  5629  0012D8  3236               	rrcf	(___fladd@b+3)^0,f,c
  5630  0012DA  3235               	rrcf	(___fladd@b+2)^0,f,c
  5631  0012DC  3234               	rrcf	(___fladd@b+1)^0,f,c
  5632  0012DE  3233               	rrcf	___fladd@b^0,f,c
  5633  0012E0                     
  5634                           ; BSR set to: 0
  5635  0012E0  2BB5               	incf	___fladd@bexp& (0+255),f,b
  5636  0012E2  EF00  F00A         	goto	l5969
  5637  0012E6                     l5933:
  5638                           
  5639                           ; BSR set to: 0
  5640  0012E6  5037               	movf	___fladd@a^0,w,c
  5641  0012E8  5C33               	subwf	___fladd@b^0,w,c
  5642  0012EA  5038               	movf	(___fladd@a+1)^0,w,c
  5643  0012EC  5834               	subwfb	(___fladd@b+1)^0,w,c
  5644  0012EE  5039               	movf	(___fladd@a+2)^0,w,c
  5645  0012F0  5835               	subwfb	(___fladd@b+2)^0,w,c
  5646  0012F2  5036               	movf	(___fladd@b+3)^0,w,c
  5647  0012F4  0A80               	xorlw	128
  5648  0012F6  6FAF               	movwf	??___fladd& (0+255),b
  5649  0012F8  503A               	movf	(___fladd@a+3)^0,w,c
  5650  0012FA  0A80               	xorlw	128
  5651  0012FC  59AF               	subwfb	??___fladd& (0+255),w,b
  5652  0012FE  B0D8               	btfsc	status,0,c
  5653  001300  EF84  F009         	goto	u4991
  5654  001304  EF86  F009         	goto	u4990
  5655  001308                     u4991:
  5656  001308  EFB1  F009         	goto	l5943
  5657  00130C                     u4990:
  5658  00130C                     
  5659                           ; BSR set to: 0
  5660  00130C  5033               	movf	___fladd@b^0,w,c
  5661  00130E  5C37               	subwf	___fladd@a^0,w,c
  5662  001310  6FAF               	movwf	??___fladd& (0+255),b
  5663  001312  5034               	movf	(___fladd@b+1)^0,w,c
  5664  001314  5838               	subwfb	(___fladd@a+1)^0,w,c
  5665  001316  6FB0               	movwf	(??___fladd+1)& (0+255),b
  5666  001318  5035               	movf	(___fladd@b+2)^0,w,c
  5667  00131A  5839               	subwfb	(___fladd@a+2)^0,w,c
  5668  00131C  6FB1               	movwf	(??___fladd+2)& (0+255),b
  5669  00131E  5036               	movf	(___fladd@b+3)^0,w,c
  5670  001320  583A               	subwfb	(___fladd@a+3)^0,w,c
  5671  001322  6FB2               	movwf	(??___fladd+3)& (0+255),b
  5672  001324  0EFF               	movlw	255
  5673  001326  25AF               	addwf	??___fladd& (0+255),w,b
  5674  001328  6E33               	movwf	___fladd@b^0,c
  5675  00132A  0EFF               	movlw	255
  5676  00132C  21B0               	addwfc	(??___fladd+1)& (0+255),w,b
  5677  00132E  6E34               	movwf	(___fladd@b+1)^0,c
  5678  001330  0EFF               	movlw	255
  5679  001332  21B1               	addwfc	(??___fladd+2)& (0+255),w,b
  5680  001334  6E35               	movwf	(___fladd@b+2)^0,c
  5681  001336  0EFF               	movlw	255
  5682  001338  21B2               	addwfc	(??___fladd+3)& (0+255),w,b
  5683  00133A  6E36               	movwf	(___fladd@b+3)^0,c
  5684  00133C  0E80               	movlw	128
  5685  00133E  1BB3               	xorwf	___fladd@signs& (0+255),f,b
  5686  001340                     
  5687                           ; BSR set to: 0
  5688  001340  6DB6               	negf	___fladd@grs& (0+255),b
  5689  001342                     
  5690                           ; BSR set to: 0
  5691  001342  51B6               	movf	___fladd@grs& (0+255),w,b
  5692  001344  A4D8               	btfss	status,2,c
  5693  001346  EFA7  F009         	goto	u5001
  5694  00134A  EFA9  F009         	goto	u5000
  5695  00134E                     u5001:
  5696  00134E  EFB9  F009         	goto	l1887
  5697  001352                     u5000:
  5698  001352                     
  5699                           ; BSR set to: 0
  5700  001352  0E01               	movlw	1
  5701  001354  2633               	addwf	___fladd@b^0,f,c
  5702  001356  0E00               	movlw	0
  5703  001358  2234               	addwfc	(___fladd@b+1)^0,f,c
  5704  00135A  2235               	addwfc	(___fladd@b+2)^0,f,c
  5705  00135C  2236               	addwfc	(___fladd@b+3)^0,f,c
  5706  00135E  EFB9  F009         	goto	l1887
  5707  001362                     l5943:
  5708                           
  5709                           ; BSR set to: 0
  5710  001362  5037               	movf	___fladd@a^0,w,c
  5711  001364  5E33               	subwf	___fladd@b^0,f,c
  5712  001366  5038               	movf	(___fladd@a+1)^0,w,c
  5713  001368  5A34               	subwfb	(___fladd@b+1)^0,f,c
  5714  00136A  5039               	movf	(___fladd@a+2)^0,w,c
  5715  00136C  5A35               	subwfb	(___fladd@b+2)^0,f,c
  5716  00136E  503A               	movf	(___fladd@a+3)^0,w,c
  5717  001370  5A36               	subwfb	(___fladd@b+3)^0,f,c
  5718  001372                     l1887:
  5719                           
  5720                           ; BSR set to: 0
  5721  001372  5033               	movf	___fladd@b^0,w,c
  5722  001374  1034               	iorwf	(___fladd@b+1)^0,w,c
  5723  001376  1035               	iorwf	(___fladd@b+2)^0,w,c
  5724  001378  1036               	iorwf	(___fladd@b+3)^0,w,c
  5725  00137A  A4D8               	btfss	status,2,c
  5726  00137C  EFC2  F009         	goto	u5011
  5727  001380  EFC4  F009         	goto	u5010
  5728  001384                     u5011:
  5729  001384  EFF9  F009         	goto	l5967
  5730  001388                     u5010:
  5731  001388                     
  5732                           ; BSR set to: 0
  5733  001388  51B6               	movf	___fladd@grs& (0+255),w,b
  5734  00138A  A4D8               	btfss	status,2,c
  5735  00138C  EFCA  F009         	goto	u5021
  5736  001390  EFCC  F009         	goto	u5020
  5737  001394                     u5021:
  5738  001394  EFF9  F009         	goto	l5967
  5739  001398                     u5020:
  5740  001398                     
  5741                           ; BSR set to: 0
  5742  001398  0E00               	movlw	0
  5743  00139A  6E33               	movwf	?___fladd^0,c
  5744  00139C  0E00               	movlw	0
  5745  00139E  6E34               	movwf	(?___fladd+1)^0,c
  5746  0013A0  0E00               	movlw	0
  5747  0013A2  6E35               	movwf	(?___fladd+2)^0,c
  5748  0013A4  0E00               	movlw	0
  5749  0013A6  6E36               	movwf	(?___fladd+3)^0,c
  5750  0013A8  EF94  F00A         	goto	l1879
  5751  0013AC                     l5951:
  5752                           
  5753                           ; BSR set to: 0
  5754  0013AC  90D8               	bcf	status,0,c
  5755  0013AE  3633               	rlcf	___fladd@b^0,f,c
  5756  0013B0  3634               	rlcf	(___fladd@b+1)^0,f,c
  5757  0013B2  3635               	rlcf	(___fladd@b+2)^0,f,c
  5758  0013B4  3636               	rlcf	(___fladd@b+3)^0,f,c
  5759  0013B6                     
  5760                           ; BSR set to: 0
  5761  0013B6  AFB6               	btfss	___fladd@grs& (0+255),7,b
  5762  0013B8  EFE0  F009         	goto	u5031
  5763  0013BC  EFE2  F009         	goto	u5030
  5764  0013C0                     u5031:
  5765  0013C0  EFE3  F009         	goto	l5957
  5766  0013C4                     u5030:
  5767  0013C4                     
  5768                           ; BSR set to: 0
  5769  0013C4  8033               	bsf	___fladd@b^0,0,c
  5770  0013C6                     l5957:
  5771                           
  5772                           ; BSR set to: 0
  5773  0013C6  A1B6               	btfss	___fladd@grs& (0+255),0,b
  5774  0013C8  EFE8  F009         	goto	u5041
  5775  0013CC  EFEA  F009         	goto	u5040
  5776  0013D0                     u5041:
  5777  0013D0  EFEE  F009         	goto	l5961
  5778  0013D4                     u5040:
  5779  0013D4                     
  5780                           ; BSR set to: 0
  5781  0013D4  80D8               	bsf	status,0,c
  5782  0013D6  37B6               	rlcf	___fladd@grs& (0+255),f,b
  5783  0013D8  EFF0  F009         	goto	l5963
  5784  0013DC                     l5961:
  5785                           
  5786                           ; BSR set to: 0
  5787  0013DC  90D8               	bcf	status,0,c
  5788  0013DE  37B6               	rlcf	___fladd@grs& (0+255),f,b
  5789  0013E0                     l5963:
  5790                           
  5791                           ; BSR set to: 0
  5792  0013E0  51B5               	movf	___fladd@bexp& (0+255),w,b
  5793  0013E2  B4D8               	btfsc	status,2,c
  5794  0013E4  EFF6  F009         	goto	u5051
  5795  0013E8  EFF8  F009         	goto	u5050
  5796  0013EC                     u5051:
  5797  0013EC  EFF9  F009         	goto	l5967
  5798  0013F0                     u5050:
  5799  0013F0                     
  5800                           ; BSR set to: 0
  5801  0013F0  07B5               	decf	___fladd@bexp& (0+255),f,b
  5802  0013F2                     l5967:
  5803                           
  5804                           ; BSR set to: 0
  5805  0013F2  AE35               	btfss	(___fladd@b+2)^0,7,c
  5806  0013F4  EFFE  F009         	goto	u5061
  5807  0013F8  EF00  F00A         	goto	u5060
  5808  0013FC                     u5061:
  5809  0013FC  EFD6  F009         	goto	l5951
  5810  001400                     u5060:
  5811  001400                     l5969:
  5812                           
  5813                           ; BSR set to: 0
  5814  001400  0E00               	movlw	0
  5815  001402  6FB4               	movwf	___fladd@aexp& (0+255),b
  5816  001404                     
  5817                           ; BSR set to: 0
  5818  001404  AFB6               	btfss	___fladd@grs& (0+255),7,b
  5819  001406  EF07  F00A         	goto	u5071
  5820  00140A  EF09  F00A         	goto	u5070
  5821  00140E                     u5071:
  5822  00140E  EF21  F00A         	goto	l1896
  5823  001412                     u5070:
  5824  001412                     
  5825                           ; BSR set to: 0
  5826  001412  C0B6  F0AF         	movff	___fladd@grs,??___fladd
  5827  001416  0E7F               	movlw	127
  5828  001418  17AF               	andwf	??___fladd& (0+255),f,b
  5829  00141A  B4D8               	btfsc	status,2,c
  5830  00141C  EF12  F00A         	goto	u5081
  5831  001420  EF14  F00A         	goto	u5080
  5832  001424                     u5081:
  5833  001424  EF18  F00A         	goto	l1897
  5834  001428                     u5080:
  5835  001428                     l5975:
  5836                           
  5837                           ; BSR set to: 0
  5838  001428  0E01               	movlw	1
  5839  00142A  6FB4               	movwf	___fladd@aexp& (0+255),b
  5840  00142C  EF21  F00A         	goto	l1896
  5841  001430                     l1897:
  5842                           
  5843                           ; BSR set to: 0
  5844  001430  A033               	btfss	___fladd@b^0,0,c
  5845  001432  EF1D  F00A         	goto	u5091
  5846  001436  EF1F  F00A         	goto	u5090
  5847  00143A                     u5091:
  5848  00143A  EF21  F00A         	goto	l1896
  5849  00143E                     u5090:
  5850  00143E  EF14  F00A         	goto	l5975
  5851  001442                     l1896:
  5852                           
  5853                           ; BSR set to: 0
  5854  001442  51B4               	movf	___fladd@aexp& (0+255),w,b
  5855  001444  B4D8               	btfsc	status,2,c
  5856  001446  EF27  F00A         	goto	u5101
  5857  00144A  EF29  F00A         	goto	u5100
  5858  00144E                     u5101:
  5859  00144E  EF54  F00A         	goto	l5987
  5860  001452                     u5100:
  5861  001452                     
  5862                           ; BSR set to: 0
  5863  001452  0E01               	movlw	1
  5864  001454  2633               	addwf	___fladd@b^0,f,c
  5865  001456  0E00               	movlw	0
  5866  001458  2234               	addwfc	(___fladd@b+1)^0,f,c
  5867  00145A  2235               	addwfc	(___fladd@b+2)^0,f,c
  5868  00145C  2236               	addwfc	(___fladd@b+3)^0,f,c
  5869  00145E                     
  5870                           ; BSR set to: 0
  5871  00145E  A036               	btfss	(___fladd@b+3)^0,0,c
  5872  001460  EF34  F00A         	goto	u5111
  5873  001464  EF36  F00A         	goto	u5110
  5874  001468                     u5111:
  5875  001468  EF54  F00A         	goto	l5987
  5876  00146C                     u5110:
  5877  00146C                     
  5878                           ; BSR set to: 0
  5879  00146C  C033  F0AF         	movff	___fladd@b,??___fladd
  5880  001470  C034  F0B0         	movff	___fladd@b+1,??___fladd+1
  5881  001474  C035  F0B1         	movff	___fladd@b+2,??___fladd+2
  5882  001478  C036  F0B2         	movff	___fladd@b+3,??___fladd+3
  5883  00147C  35B2               	rlcf	(??___fladd+3)& (0+255),w,b
  5884  00147E  33B2               	rrcf	(??___fladd+3)& (0+255),f,b
  5885  001480  33B1               	rrcf	(??___fladd+2)& (0+255),f,b
  5886  001482  33B0               	rrcf	(??___fladd+1)& (0+255),f,b
  5887  001484  33AF               	rrcf	??___fladd& (0+255),f,b
  5888  001486  C0AF  F033         	movff	??___fladd,___fladd@b
  5889  00148A  C0B0  F034         	movff	??___fladd+1,___fladd@b+1
  5890  00148E  C0B1  F035         	movff	??___fladd+2,___fladd@b+2
  5891  001492  C0B2  F036         	movff	??___fladd+3,___fladd@b+3
  5892  001496  29B5               	incf	___fladd@bexp& (0+255),w,b
  5893  001498  B4D8               	btfsc	status,2,c
  5894  00149A  EF51  F00A         	goto	u5121
  5895  00149E  EF53  F00A         	goto	u5120
  5896  0014A2                     u5121:
  5897  0014A2  EF54  F00A         	goto	l5987
  5898  0014A6                     u5120:
  5899  0014A6                     
  5900                           ; BSR set to: 0
  5901  0014A6  2BB5               	incf	___fladd@bexp& (0+255),f,b
  5902  0014A8                     l5987:
  5903                           
  5904                           ; BSR set to: 0
  5905  0014A8  29B5               	incf	___fladd@bexp& (0+255),w,b
  5906  0014AA  B4D8               	btfsc	status,2,c
  5907  0014AC  EF5A  F00A         	goto	u5131
  5908  0014B0  EF5C  F00A         	goto	u5130
  5909  0014B4                     u5131:
  5910  0014B4  EF64  F00A         	goto	l5991
  5911  0014B8                     u5130:
  5912  0014B8                     
  5913                           ; BSR set to: 0
  5914  0014B8  51B5               	movf	___fladd@bexp& (0+255),w,b
  5915  0014BA  A4D8               	btfss	status,2,c
  5916  0014BC  EF62  F00A         	goto	u5141
  5917  0014C0  EF64  F00A         	goto	u5140
  5918  0014C4                     u5141:
  5919  0014C4  EF76  F00A         	goto	l5995
  5920  0014C8                     u5140:
  5921  0014C8                     l5991:
  5922                           
  5923                           ; BSR set to: 0
  5924  0014C8  0E00               	movlw	0
  5925  0014CA  6E33               	movwf	___fladd@b^0,c
  5926  0014CC  0E00               	movlw	0
  5927  0014CE  6E34               	movwf	(___fladd@b+1)^0,c
  5928  0014D0  0E00               	movlw	0
  5929  0014D2  6E35               	movwf	(___fladd@b+2)^0,c
  5930  0014D4  0E00               	movlw	0
  5931  0014D6  6E36               	movwf	(___fladd@b+3)^0,c
  5932  0014D8  51B5               	movf	___fladd@bexp& (0+255),w,b
  5933  0014DA  A4D8               	btfss	status,2,c
  5934  0014DC  EF72  F00A         	goto	u5151
  5935  0014E0  EF74  F00A         	goto	u5150
  5936  0014E4                     u5151:
  5937  0014E4  EF76  F00A         	goto	l5995
  5938  0014E8                     u5150:
  5939  0014E8                     
  5940                           ; BSR set to: 0
  5941  0014E8  0E00               	movlw	0
  5942  0014EA  6FB3               	movwf	___fladd@signs& (0+255),b
  5943  0014EC                     l5995:
  5944                           
  5945                           ; BSR set to: 0
  5946  0014EC  A1B5               	btfss	___fladd@bexp& (0+255),0,b
  5947  0014EE  EF7B  F00A         	goto	u5161
  5948  0014F2  EF7D  F00A         	goto	u5160
  5949  0014F6                     u5161:
  5950  0014F6  EF80  F00A         	goto	l5999
  5951  0014FA                     u5160:
  5952  0014FA                     
  5953                           ; BSR set to: 0
  5954  0014FA  8E35               	bsf	(___fladd@b+2)^0,7,c
  5955  0014FC  EF81  F00A         	goto	l6001
  5956  001500                     l5999:
  5957                           
  5958                           ; BSR set to: 0
  5959  001500  9E35               	bcf	(___fladd@b+2)^0,7,c
  5960  001502                     l6001:
  5961                           
  5962                           ; BSR set to: 0
  5963  001502  90D8               	bcf	status,0,c
  5964  001504  31B5               	rrcf	___fladd@bexp& (0+255),w,b
  5965  001506  6E36               	movwf	(___fladd@b+3)^0,c
  5966  001508                     
  5967                           ; BSR set to: 0
  5968  001508  AFB3               	btfss	___fladd@signs& (0+255),7,b
  5969  00150A  EF89  F00A         	goto	u5171
  5970  00150E  EF8B  F00A         	goto	u5170
  5971  001512                     u5171:
  5972  001512  EF8C  F00A         	goto	l6007
  5973  001516                     u5170:
  5974  001516                     
  5975                           ; BSR set to: 0
  5976  001516  8E36               	bsf	(___fladd@b+3)^0,7,c
  5977  001518                     l6007:
  5978                           
  5979                           ; BSR set to: 0
  5980  001518  C033  F033         	movff	___fladd@b,?___fladd
  5981  00151C  C034  F034         	movff	___fladd@b+1,?___fladd+1
  5982  001520  C035  F035         	movff	___fladd@b+2,?___fladd+2
  5983  001524  C036  F036         	movff	___fladd@b+3,?___fladd+3
  5984  001528                     l1879:
  5985                           
  5986                           ; BSR set to: 0
  5987  001528  0012               	return		;funcret
  5988  00152A                     __end_of___fladd:
  5989                           	callstack 0
  5990                           
  5991 ;; *************** function _calcMotorPow *****************
  5992 ;; Defined at:
  5993 ;;		line 290 in file "main.c"
  5994 ;; Parameters:    Size  Location     Type
  5995 ;;		None
  5996 ;; Auto vars:     Size  Location     Type
  5997 ;;  oldSpeedDelt    2   35[BANK0 ] short 
  5998 ;;  setSpeedDelt    2   33[BANK0 ] short 
  5999 ;;  addMPow         1   37[BANK0 ] char 
  6000 ;; Return value:  Size  Location     Type
  6001 ;;                  1    wreg      void 
  6002 ;; Registers used:
  6003 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6004 ;; Tracked objects:
  6005 ;;		On entry : 0/0
  6006 ;;		On exit  : 0/0
  6007 ;;		Unchanged: 0/0
  6008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6010 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6011 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6012 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6013 ;;Total ram usage:        7 bytes
  6014 ;; Hardware stack levels used: 1
  6015 ;; Hardware stack levels required when called: 10
  6016 ;; This function calls:
  6017 ;;		___flmul
  6018 ;;		___fltol
  6019 ;;		___xxtofl
  6020 ;;		_actSpeed
  6021 ;;		_setMotor
  6022 ;; This function is called by:
  6023 ;;		_loop
  6024 ;; This function uses a non-reentrant model
  6025 ;;
  6026                           
  6027                           	psect	text26
  6028  0028C8                     __ptext26:
  6029                           	callstack 0
  6030  0028C8                     _calcMotorPow:
  6031                           	callstack 19
  6032  0028C8                     
  6033                           ;main.c: 291:     int16_t setSpeedDelta = setSpeed - currentSpeed;
  6034  0028C8  0100               	movlb	0	; () banked
  6035  0028CA  518A               	movf	_currentSpeed& (0+255),w,b
  6036  0028CC  5D8C               	subwf	_setSpeed& (0+255),w,b
  6037  0028CE  6FC3               	movwf	calcMotorPow@setSpeedDelta& (0+255),b
  6038  0028D0  518B               	movf	(_currentSpeed+1)& (0+255),w,b
  6039  0028D2  598D               	subwfb	(_setSpeed+1)& (0+255),w,b
  6040  0028D4  6FC4               	movwf	(calcMotorPow@setSpeedDelta+1)& (0+255),b
  6041                           
  6042                           ;main.c: 292:     int16_t oldSpeedDelta = currentSpeed - oldSpeed;
  6043  0028D6  5188               	movf	_oldSpeed& (0+255),w,b
  6044  0028D8  5D8A               	subwf	_currentSpeed& (0+255),w,b
  6045  0028DA  6FC5               	movwf	calcMotorPow@oldSpeedDelta& (0+255),b
  6046  0028DC  5189               	movf	(_oldSpeed+1)& (0+255),w,b
  6047  0028DE  598B               	subwfb	(_currentSpeed+1)& (0+255),w,b
  6048  0028E0  6FC6               	movwf	(calcMotorPow@oldSpeedDelta+1)& (0+255),b
  6049  0028E2                     
  6050                           ; BSR set to: 0
  6051                           ;main.c: 295:     currentSpeed = actSpeed();
  6052  0028E2  EC38  F01A         	call	_actSpeed	;wreg free
  6053  0028E6  C022  F08A         	movff	?_actSpeed,_currentSpeed
  6054  0028EA  C023  F08B         	movff	?_actSpeed+1,_currentSpeed+1
  6055  0028EE                     
  6056                           ;main.c: 299:  addMPow = (int8_t)((0.05) * (setSpeedDelta - (oldSpeedDelta / (1))));
  6057  0028EE  0ECD               	movlw	205
  6058  0028F0  6E2B               	movwf	___flmul@a^0,c
  6059  0028F2  0ECC               	movlw	204
  6060  0028F4  6E2C               	movwf	(___flmul@a+1)^0,c
  6061  0028F6  0E4C               	movlw	76
  6062  0028F8  6E2D               	movwf	(___flmul@a+2)^0,c
  6063  0028FA  0E3D               	movlw	61
  6064  0028FC  6E2E               	movwf	(___flmul@a+3)^0,c
  6065  0028FE  0100               	movlb	0	; () banked
  6066  002900  51C5               	movf	calcMotorPow@oldSpeedDelta& (0+255),w,b
  6067  002902  5DC3               	subwf	calcMotorPow@setSpeedDelta& (0+255),w,b
  6068  002904  6FC1               	movwf	??_calcMotorPow& (0+255),b
  6069  002906  51C6               	movf	(calcMotorPow@oldSpeedDelta+1)& (0+255),w,b
  6070  002908  59C4               	subwfb	(calcMotorPow@setSpeedDelta+1)& (0+255),w,b
  6071  00290A  6FC2               	movwf	(??_calcMotorPow+1)& (0+255),b
  6072  00290C  C0C1  F019         	movff	??_calcMotorPow,___xxtofl@val
  6073  002910  C0C2  F01A         	movff	??_calcMotorPow+1,___xxtofl@val+1
  6074  002914  0E00               	movlw	0
  6075  002916  BE1A               	btfsc	(___xxtofl@val+1)^0,7,c
  6076  002918  0EFF               	movlw	-1
  6077  00291A  6E1B               	movwf	(___xxtofl@val+2)^0,c
  6078  00291C  6E1C               	movwf	(___xxtofl@val+3)^0,c
  6079  00291E  0E01               	movlw	1
  6080  002920  EC14  F012         	call	___xxtofl
  6081  002924  C019  F027         	movff	?___xxtofl,___flmul@b
  6082  002928  C01A  F028         	movff	?___xxtofl+1,___flmul@b+1
  6083  00292C  C01B  F029         	movff	?___xxtofl+2,___flmul@b+2
  6084  002930  C01C  F02A         	movff	?___xxtofl+3,___flmul@b+3
  6085  002934  EC95  F00A         	call	___flmul	;wreg free
  6086  002938  C027  F0B7         	movff	?___flmul,___fltol@f1
  6087  00293C  C028  F0B8         	movff	?___flmul+1,___fltol@f1+1
  6088  002940  C029  F0B9         	movff	?___flmul+2,___fltol@f1+2
  6089  002944  C02A  F0BA         	movff	?___flmul+3,___fltol@f1+3
  6090  002948  EC9D  F016         	call	___fltol	;wreg free
  6091  00294C  0100               	movlb	0	; () banked
  6092  00294E  51B7               	movf	?___fltol& (0+255),w,b
  6093  002950  6FC7               	movwf	calcMotorPow@addMPow& (0+255),b
  6094  002952                     
  6095                           ; BSR set to: 0
  6096                           ;main.c: 301:     if(addMPow > (3)){
  6097  002952  51C7               	movf	calcMotorPow@addMPow& (0+255),w,b
  6098  002954  0A80               	xorlw	128
  6099  002956  0F7C               	addlw	-132
  6100  002958  A0D8               	btfss	status,0,c
  6101  00295A  EFB1  F014         	goto	u5531
  6102  00295E  EFB3  F014         	goto	u5530
  6103  002962                     u5531:
  6104  002962  EFB7  F014         	goto	l6267
  6105  002966                     u5530:
  6106  002966                     
  6107                           ; BSR set to: 0
  6108                           ;main.c: 302:         addMPow = (3);
  6109  002966  0E03               	movlw	3
  6110  002968  6FC7               	movwf	calcMotorPow@addMPow& (0+255),b
  6111                           
  6112                           ;main.c: 303:     }else if(addMPow < -(3)){
  6113  00296A  EFC3  F014         	goto	l6271
  6114  00296E                     l6267:
  6115                           
  6116                           ; BSR set to: 0
  6117  00296E  51C7               	movf	calcMotorPow@addMPow& (0+255),w,b
  6118  002970  0A80               	xorlw	128
  6119  002972  0F83               	addlw	131
  6120  002974  B0D8               	btfsc	status,0,c
  6121  002976  EFBF  F014         	goto	u5541
  6122  00297A  EFC1  F014         	goto	u5540
  6123  00297E                     u5541:
  6124  00297E  EFC3  F014         	goto	l6271
  6125  002982                     u5540:
  6126  002982                     
  6127                           ; BSR set to: 0
  6128                           ;main.c: 304:         addMPow = -(3);
  6129  002982  0EFD               	movlw	253
  6130  002984  6FC7               	movwf	calcMotorPow@addMPow& (0+255),b
  6131  002986                     l6271:
  6132                           
  6133                           ; BSR set to: 0
  6134                           ;main.c: 307:  actMotorPow = actMotorPow + addMPow;
  6135  002986  5186               	movf	_actMotorPow& (0+255),w,b
  6136  002988  25C7               	addwf	calcMotorPow@addMPow& (0+255),w,b
  6137  00298A  6F86               	movwf	_actMotorPow& (0+255),b
  6138  00298C  0E00               	movlw	0
  6139  00298E  BFC7               	btfsc	calcMotorPow@addMPow& (0+255),7,b
  6140  002990  0EFF               	movlw	255
  6141  002992  2187               	addwfc	(_actMotorPow+1)& (0+255),w,b
  6142  002994  6F87               	movwf	(_actMotorPow+1)& (0+255),b
  6143  002996                     
  6144                           ; BSR set to: 0
  6145                           ;main.c: 309:  if(actMotorPow > (600)){
  6146  002996  BF87               	btfsc	(_actMotorPow+1)& (0+255),7,b
  6147  002998  EFD7  F014         	goto	u5551
  6148  00299C  0E59               	movlw	89
  6149  00299E  5D86               	subwf	_actMotorPow& (0+255),w,b
  6150  0029A0  0E02               	movlw	2
  6151  0029A2  5987               	subwfb	(_actMotorPow+1)& (0+255),w,b
  6152  0029A4  A0D8               	btfss	status,0,c
  6153  0029A6  EFD7  F014         	goto	u5551
  6154  0029AA  EFD9  F014         	goto	u5550
  6155  0029AE                     u5551:
  6156  0029AE  EFDF  F014         	goto	l6277
  6157  0029B2                     u5550:
  6158  0029B2                     
  6159                           ; BSR set to: 0
  6160                           ;main.c: 310:   actMotorPow = (600);
  6161  0029B2  0E02               	movlw	2
  6162  0029B4  6F87               	movwf	(_actMotorPow+1)& (0+255),b
  6163  0029B6  0E58               	movlw	88
  6164  0029B8  6F86               	movwf	_actMotorPow& (0+255),b
  6165                           
  6166                           ;main.c: 311:  }else if(actMotorPow < (-300)){
  6167  0029BA  EFF1  F014         	goto	l6281
  6168  0029BE                     l6277:
  6169                           
  6170                           ; BSR set to: 0
  6171  0029BE  AF87               	btfss	(_actMotorPow+1)& (0+255),7,b
  6172  0029C0  EFEB  F014         	goto	u5561
  6173  0029C4  0ED4               	movlw	212
  6174  0029C6  5D86               	subwf	_actMotorPow& (0+255),w,b
  6175  0029C8  0EFE               	movlw	254
  6176  0029CA  5987               	subwfb	(_actMotorPow+1)& (0+255),w,b
  6177  0029CC  B0D8               	btfsc	status,0,c
  6178  0029CE  EFEB  F014         	goto	u5561
  6179  0029D2  EFED  F014         	goto	u5560
  6180  0029D6                     u5561:
  6181  0029D6  EFF1  F014         	goto	l6281
  6182  0029DA                     u5560:
  6183  0029DA                     
  6184                           ; BSR set to: 0
  6185                           ;main.c: 312:   actMotorPow = (-300);
  6186  0029DA  0EFE               	movlw	254
  6187  0029DC  6F87               	movwf	(_actMotorPow+1)& (0+255),b
  6188  0029DE  0ED4               	movlw	212
  6189  0029E0  6F86               	movwf	_actMotorPow& (0+255),b
  6190  0029E2                     l6281:
  6191                           
  6192                           ; BSR set to: 0
  6193                           ;main.c: 315:     setMotor(actMotorPow);
  6194  0029E2  C086  F018         	movff	_actMotorPow,setMotor@motorPower
  6195  0029E6  C087  F019         	movff	_actMotorPow+1,setMotor@motorPower+1
  6196  0029EA  ECA3  F017         	call	_setMotor	;wreg free
  6197  0029EE                     
  6198                           ;main.c: 317:     oldSpeed = currentSpeed;
  6199  0029EE  C08A  F088         	movff	_currentSpeed,_oldSpeed
  6200  0029F2  C08B  F089         	movff	_currentSpeed+1,_oldSpeed+1
  6201  0029F6  0012               	return		;funcret
  6202  0029F8                     __end_of_calcMotorPow:
  6203                           	callstack 0
  6204                           
  6205 ;; *************** function _setMotor *****************
  6206 ;; Defined at:
  6207 ;;		line 320 in file "main.c"
  6208 ;; Parameters:    Size  Location     Type
  6209 ;;  motorPower      2   23[COMRAM] short 
  6210 ;; Auto vars:     Size  Location     Type
  6211 ;;		None
  6212 ;; Return value:  Size  Location     Type
  6213 ;;                  1    wreg      void 
  6214 ;; Registers used:
  6215 ;;		wreg, status,2, status,0, cstack
  6216 ;; Tracked objects:
  6217 ;;		On entry : 0/0
  6218 ;;		On exit  : 0/0
  6219 ;;		Unchanged: 0/0
  6220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6221 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6222 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6223 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6224 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6225 ;;Total ram usage:        4 bytes
  6226 ;; Hardware stack levels used: 1
  6227 ;; Hardware stack levels required when called: 9
  6228 ;; This function calls:
  6229 ;;		_PWM7_LoadDutyValue
  6230 ;;		_PWM8_LoadDutyValue
  6231 ;; This function is called by:
  6232 ;;		_calcMotorPow
  6233 ;; This function uses a non-reentrant model
  6234 ;;
  6235                           
  6236                           	psect	text27
  6237  002F46                     __ptext27:
  6238                           	callstack 0
  6239  002F46                     _setMotor:
  6240                           	callstack 19
  6241  002F46                     
  6242                           ;main.c: 321:     if(motorPower > 1){
  6243  002F46  BE19               	btfsc	(setMotor@motorPower+1)^0,7,c
  6244  002F48  EFAF  F017         	goto	u2901
  6245  002F4C  5019               	movf	(setMotor@motorPower+1)^0,w,c
  6246  002F4E  E109               	bnz	u2900
  6247  002F50  0E02               	movlw	2
  6248  002F52  5C18               	subwf	setMotor@motorPower^0,w,c
  6249  002F54  A0D8               	btfss	status,0,c
  6250  002F56  EFAF  F017         	goto	u2901
  6251  002F5A  EFB1  F017         	goto	u2900
  6252  002F5E                     u2901:
  6253  002F5E  EFD1  F017         	goto	l4475
  6254  002F62                     u2900:
  6255  002F62                     
  6256                           ;main.c: 322:        if(motorPower > (600)){
  6257  002F62  BE19               	btfsc	(setMotor@motorPower+1)^0,7,c
  6258  002F64  EFBD  F017         	goto	u2911
  6259  002F68  0E59               	movlw	89
  6260  002F6A  5C18               	subwf	setMotor@motorPower^0,w,c
  6261  002F6C  0E02               	movlw	2
  6262  002F6E  5819               	subwfb	(setMotor@motorPower+1)^0,w,c
  6263  002F70  A0D8               	btfss	status,0,c
  6264  002F72  EFBD  F017         	goto	u2911
  6265  002F76  EFBF  F017         	goto	u2910
  6266  002F7A                     u2911:
  6267  002F7A  EFC3  F017         	goto	l4471
  6268  002F7E                     u2910:
  6269  002F7E                     
  6270                           ;main.c: 323:             motorPower = (600);
  6271  002F7E  0E02               	movlw	2
  6272  002F80  6E19               	movwf	(setMotor@motorPower+1)^0,c
  6273  002F82  0E58               	movlw	88
  6274  002F84  6E18               	movwf	setMotor@motorPower^0,c
  6275  002F86                     l4471:
  6276                           
  6277                           ;main.c: 325:         PWM7_LoadDutyValue((uint16_t)(motorPower));
  6278  002F86  C018  F014         	movff	setMotor@motorPower,PWM7_LoadDutyValue@dutyValue
  6279  002F8A  C019  F015         	movff	setMotor@motorPower+1,PWM7_LoadDutyValue@dutyValue+1
  6280  002F8E  EC63  F01D         	call	_PWM7_LoadDutyValue	;wreg free
  6281  002F92                     
  6282                           ;main.c: 326:         PWM8_LoadDutyValue(0);
  6283  002F92  0E00               	movlw	0
  6284  002F94  6E15               	movwf	(PWM8_LoadDutyValue@dutyValue+1)^0,c
  6285  002F96  0E00               	movlw	0
  6286  002F98  6E14               	movwf	PWM8_LoadDutyValue@dutyValue^0,c
  6287  002F9A  EC49  F01D         	call	_PWM8_LoadDutyValue	;wreg free
  6288                           
  6289                           ;main.c: 327:     } else if(motorPower < -1){
  6290  002F9E  EF12  F018         	goto	l1339
  6291  002FA2                     l4475:
  6292  002FA2  AE19               	btfss	(setMotor@motorPower+1)^0,7,c
  6293  002FA4  EFDC  F017         	goto	u2921
  6294  002FA8  2818               	incf	setMotor@motorPower^0,w,c
  6295  002FAA  0EFF               	movlw	255
  6296  002FAC  5819               	subwfb	(setMotor@motorPower+1)^0,w,c
  6297  002FAE  B0D8               	btfsc	status,0,c
  6298  002FB0  EFDC  F017         	goto	u2921
  6299  002FB4  EFDE  F017         	goto	u2920
  6300  002FB8                     u2921:
  6301  002FB8  EF06  F018         	goto	l4485
  6302  002FBC                     u2920:
  6303  002FBC                     
  6304                           ;main.c: 328:         if(motorPower < (-300)){
  6305  002FBC  AE19               	btfss	(setMotor@motorPower+1)^0,7,c
  6306  002FBE  EFEA  F017         	goto	u2931
  6307  002FC2  0ED4               	movlw	212
  6308  002FC4  5C18               	subwf	setMotor@motorPower^0,w,c
  6309  002FC6  0EFE               	movlw	254
  6310  002FC8  5819               	subwfb	(setMotor@motorPower+1)^0,w,c
  6311  002FCA  B0D8               	btfsc	status,0,c
  6312  002FCC  EFEA  F017         	goto	u2931
  6313  002FD0  EFEC  F017         	goto	u2930
  6314  002FD4                     u2931:
  6315  002FD4  EFF0  F017         	goto	l4481
  6316  002FD8                     u2930:
  6317  002FD8                     
  6318                           ;main.c: 329:             motorPower = (-300);
  6319  002FD8  0EFE               	movlw	254
  6320  002FDA  6E19               	movwf	(setMotor@motorPower+1)^0,c
  6321  002FDC  0ED4               	movlw	212
  6322  002FDE  6E18               	movwf	setMotor@motorPower^0,c
  6323  002FE0                     l4481:
  6324                           
  6325                           ;main.c: 331:         PWM7_LoadDutyValue(0);
  6326  002FE0  0E00               	movlw	0
  6327  002FE2  6E15               	movwf	(PWM7_LoadDutyValue@dutyValue+1)^0,c
  6328  002FE4  0E00               	movlw	0
  6329  002FE6  6E14               	movwf	PWM7_LoadDutyValue@dutyValue^0,c
  6330  002FE8  EC63  F01D         	call	_PWM7_LoadDutyValue	;wreg free
  6331  002FEC                     
  6332                           ;main.c: 332:         PWM8_LoadDutyValue((uint16_t)(-motorPower));
  6333  002FEC  C018  F01A         	movff	setMotor@motorPower,??_setMotor
  6334  002FF0  C019  F01B         	movff	setMotor@motorPower+1,??_setMotor+1
  6335  002FF4  1E1A               	comf	??_setMotor^0,f,c
  6336  002FF6  1E1B               	comf	(??_setMotor+1)^0,f,c
  6337  002FF8  4A1A               	infsnz	??_setMotor^0,f,c
  6338  002FFA  2A1B               	incf	(??_setMotor+1)^0,f,c
  6339  002FFC  C01A  F014         	movff	??_setMotor,PWM8_LoadDutyValue@dutyValue
  6340  003000  C01B  F015         	movff	??_setMotor+1,PWM8_LoadDutyValue@dutyValue+1
  6341  003004  EC49  F01D         	call	_PWM8_LoadDutyValue	;wreg free
  6342                           
  6343                           ;main.c: 333:     } else {
  6344  003008  EF12  F018         	goto	l1339
  6345  00300C                     l4485:
  6346                           
  6347                           ;main.c: 334:         PWM7_LoadDutyValue(0);
  6348  00300C  0E00               	movlw	0
  6349  00300E  6E15               	movwf	(PWM7_LoadDutyValue@dutyValue+1)^0,c
  6350  003010  0E00               	movlw	0
  6351  003012  6E14               	movwf	PWM7_LoadDutyValue@dutyValue^0,c
  6352  003014  EC63  F01D         	call	_PWM7_LoadDutyValue	;wreg free
  6353                           
  6354                           ;main.c: 335:         PWM8_LoadDutyValue(0);
  6355  003018  0E00               	movlw	0
  6356  00301A  6E15               	movwf	(PWM8_LoadDutyValue@dutyValue+1)^0,c
  6357  00301C  0E00               	movlw	0
  6358  00301E  6E14               	movwf	PWM8_LoadDutyValue@dutyValue^0,c
  6359  003020  EC49  F01D         	call	_PWM8_LoadDutyValue	;wreg free
  6360  003024                     l1339:
  6361  003024  0012               	return		;funcret
  6362  003026                     __end_of_setMotor:
  6363                           	callstack 0
  6364                           
  6365 ;; *************** function _PWM8_LoadDutyValue *****************
  6366 ;; Defined at:
  6367 ;;		line 74 in file "mcc_generated_files/pwm8.c"
  6368 ;; Parameters:    Size  Location     Type
  6369 ;;  dutyValue       2   19[COMRAM] unsigned short 
  6370 ;; Auto vars:     Size  Location     Type
  6371 ;;		None
  6372 ;; Return value:  Size  Location     Type
  6373 ;;                  1    wreg      void 
  6374 ;; Registers used:
  6375 ;;		wreg, status,2, status,0
  6376 ;; Tracked objects:
  6377 ;;		On entry : 0/0
  6378 ;;		On exit  : 0/0
  6379 ;;		Unchanged: 0/0
  6380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6381 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6383 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6384 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6385 ;;Total ram usage:        4 bytes
  6386 ;; Hardware stack levels used: 1
  6387 ;; Hardware stack levels required when called: 8
  6388 ;; This function calls:
  6389 ;;		Nothing
  6390 ;; This function is called by:
  6391 ;;		_setMotor
  6392 ;; This function uses a non-reentrant model
  6393 ;;
  6394                           
  6395                           	psect	text28
  6396  003A92                     __ptext28:
  6397                           	callstack 0
  6398  003A92                     _PWM8_LoadDutyValue:
  6399                           	callstack 19
  6400  003A92                     
  6401                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  6402  003A92  C014  F016         	movff	PWM8_LoadDutyValue@dutyValue,??_PWM8_LoadDutyValue
  6403  003A96  C015  F017         	movff	PWM8_LoadDutyValue@dutyValue+1,??_PWM8_LoadDutyValue+1
  6404  003A9A  90D8               	bcf	status,0,c
  6405  003A9C  3217               	rrcf	(??_PWM8_LoadDutyValue+1)^0,f,c
  6406  003A9E  3216               	rrcf	??_PWM8_LoadDutyValue^0,f,c
  6407  003AA0  90D8               	bcf	status,0,c
  6408  003AA2  3217               	rrcf	(??_PWM8_LoadDutyValue+1)^0,f,c
  6409  003AA4  3216               	rrcf	??_PWM8_LoadDutyValue^0,f,c
  6410  003AA6  5016               	movf	??_PWM8_LoadDutyValue^0,w,c
  6411  003AA8  6E61               	movwf	97,c	;volatile
  6412                           
  6413                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
  6414  003AAA  C014  F016         	movff	PWM8_LoadDutyValue@dutyValue,??_PWM8_LoadDutyValue
  6415  003AAE  0E03               	movlw	3
  6416  003AB0  1616               	andwf	??_PWM8_LoadDutyValue^0,f,c
  6417  003AB2  0E06               	movlw	6
  6418  003AB4  6E17               	movwf	(??_PWM8_LoadDutyValue+1)^0,c
  6419  003AB6                     u2655:
  6420  003AB6  90D8               	bcf	status,0,c
  6421  003AB8  3616               	rlcf	??_PWM8_LoadDutyValue^0,f,c
  6422  003ABA  2E17               	decfsz	(??_PWM8_LoadDutyValue+1)^0,f,c
  6423  003ABC  EF5B  F01D         	goto	u2655
  6424  003AC0  5016               	movf	??_PWM8_LoadDutyValue^0,w,c
  6425  003AC2  6E60               	movwf	96,c	;volatile
  6426  003AC4  0012               	return		;funcret
  6427  003AC6                     __end_of_PWM8_LoadDutyValue:
  6428                           	callstack 0
  6429                           
  6430 ;; *************** function _PWM7_LoadDutyValue *****************
  6431 ;; Defined at:
  6432 ;;		line 74 in file "mcc_generated_files/pwm7.c"
  6433 ;; Parameters:    Size  Location     Type
  6434 ;;  dutyValue       2   19[COMRAM] unsigned short 
  6435 ;; Auto vars:     Size  Location     Type
  6436 ;;		None
  6437 ;; Return value:  Size  Location     Type
  6438 ;;                  1    wreg      void 
  6439 ;; Registers used:
  6440 ;;		wreg, status,2, status,0
  6441 ;; Tracked objects:
  6442 ;;		On entry : 0/0
  6443 ;;		On exit  : 0/0
  6444 ;;		Unchanged: 0/0
  6445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6446 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6448 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6449 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6450 ;;Total ram usage:        4 bytes
  6451 ;; Hardware stack levels used: 1
  6452 ;; Hardware stack levels required when called: 8
  6453 ;; This function calls:
  6454 ;;		Nothing
  6455 ;; This function is called by:
  6456 ;;		_setMotor
  6457 ;; This function uses a non-reentrant model
  6458 ;;
  6459                           
  6460                           	psect	text29
  6461  003AC6                     __ptext29:
  6462                           	callstack 0
  6463  003AC6                     _PWM7_LoadDutyValue:
  6464                           	callstack 19
  6465  003AC6                     
  6466                           ;mcc_generated_files/pwm7.c: 74:  void PWM7_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm7.c: 75:  {;mcc_generated_files/pwm7.c: 77:      PWM7DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  6467  003AC6  C014  F016         	movff	PWM7_LoadDutyValue@dutyValue,??_PWM7_LoadDutyValue
  6468  003ACA  C015  F017         	movff	PWM7_LoadDutyValue@dutyValue+1,??_PWM7_LoadDutyValue+1
  6469  003ACE  90D8               	bcf	status,0,c
  6470  003AD0  3217               	rrcf	(??_PWM7_LoadDutyValue+1)^0,f,c
  6471  003AD2  3216               	rrcf	??_PWM7_LoadDutyValue^0,f,c
  6472  003AD4  90D8               	bcf	status,0,c
  6473  003AD6  3217               	rrcf	(??_PWM7_LoadDutyValue+1)^0,f,c
  6474  003AD8  3216               	rrcf	??_PWM7_LoadDutyValue^0,f,c
  6475  003ADA  5016               	movf	??_PWM7_LoadDutyValue^0,w,c
  6476  003ADC  6E65               	movwf	101,c	;volatile
  6477                           
  6478                           ;mcc_generated_files/pwm7.c: 80:      PWM7DCL = (dutyValue & 0x0003)<<6;
  6479  003ADE  C014  F016         	movff	PWM7_LoadDutyValue@dutyValue,??_PWM7_LoadDutyValue
  6480  003AE2  0E03               	movlw	3
  6481  003AE4  1616               	andwf	??_PWM7_LoadDutyValue^0,f,c
  6482  003AE6  0E06               	movlw	6
  6483  003AE8  6E17               	movwf	(??_PWM7_LoadDutyValue+1)^0,c
  6484  003AEA                     u2645:
  6485  003AEA  90D8               	bcf	status,0,c
  6486  003AEC  3616               	rlcf	??_PWM7_LoadDutyValue^0,f,c
  6487  003AEE  2E17               	decfsz	(??_PWM7_LoadDutyValue+1)^0,f,c
  6488  003AF0  EF75  F01D         	goto	u2645
  6489  003AF4  5016               	movf	??_PWM7_LoadDutyValue^0,w,c
  6490  003AF6  6E64               	movwf	100,c	;volatile
  6491  003AF8  0012               	return		;funcret
  6492  003AFA                     __end_of_PWM7_LoadDutyValue:
  6493                           	callstack 0
  6494                           
  6495 ;; *************** function _actSpeed *****************
  6496 ;; Defined at:
  6497 ;;		line 62 in file "main.c"
  6498 ;; Parameters:    Size  Location     Type
  6499 ;;		None
  6500 ;; Auto vars:     Size  Location     Type
  6501 ;;  speed           2   35[COMRAM] short 
  6502 ;; Return value:  Size  Location     Type
  6503 ;;                  2   33[COMRAM] short 
  6504 ;; Registers used:
  6505 ;;		wreg, status,2, status,0, cstack
  6506 ;; Tracked objects:
  6507 ;;		On entry : 0/0
  6508 ;;		On exit  : 0/0
  6509 ;;		Unchanged: 0/0
  6510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6511 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6512 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6514 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6515 ;;Total ram usage:        4 bytes
  6516 ;; Hardware stack levels used: 1
  6517 ;; Hardware stack levels required when called: 9
  6518 ;; This function calls:
  6519 ;;		___aldiv
  6520 ;; This function is called by:
  6521 ;;		_calcMotorPow
  6522 ;; This function uses a non-reentrant model
  6523 ;;
  6524                           
  6525                           	psect	text30
  6526  003470                     __ptext30:
  6527                           	callstack 0
  6528  003470                     _actSpeed:
  6529                           	callstack 19
  6530  003470                     
  6531                           ;main.c: 63:     int16_t speed = 0;
  6532  003470  0E00               	movlw	0
  6533  003472  6E25               	movwf	(actSpeed@speed+1)^0,c
  6534  003474  0E00               	movlw	0
  6535  003476  6E24               	movwf	actSpeed@speed^0,c
  6536  003478                     
  6537                           ;main.c: 64:     if(smtPeriod){
  6538  003478  5048               	movf	_smtPeriod^0,w,c	;volatile
  6539  00347A  1049               	iorwf	(_smtPeriod+1)^0,w,c	;volatile
  6540  00347C  104A               	iorwf	(_smtPeriod+2)^0,w,c	;volatile
  6541  00347E  104B               	iorwf	(_smtPeriod+3)^0,w,c	;volatile
  6542  003480  B4D8               	btfsc	status,2,c
  6543  003482  EF45  F01A         	goto	u2881
  6544  003486  EF47  F01A         	goto	u2880
  6545  00348A                     u2881:
  6546  00348A  EF7D  F01A         	goto	l4455
  6547  00348E                     u2880:
  6548  00348E                     
  6549                           ;main.c: 65:         if(CLC3CONbits.LC3OUT){
  6550  00348E  013C               	movlb	60	; () banked
  6551  003490  AB60               	btfss	96,5,b	;volatile
  6552  003492  EF4D  F01A         	goto	u2891
  6553  003496  EF4F  F01A         	goto	u2890
  6554  00349A                     u2891:
  6555  00349A  EF67  F01A         	goto	l4453
  6556  00349E                     u2890:
  6557  00349E                     
  6558                           ; BSR set to: 60
  6559                           ;main.c: 66:             speed = (int16_t)((int32_t)(500000 / (int32_t)smtPeriod));
  6560  00349E  0E20               	movlw	32
  6561  0034A0  6E14               	movwf	___aldiv@dividend^0,c
  6562  0034A2  0EA1               	movlw	161
  6563  0034A4  6E15               	movwf	(___aldiv@dividend+1)^0,c
  6564  0034A6  0E07               	movlw	7
  6565  0034A8  6E16               	movwf	(___aldiv@dividend+2)^0,c
  6566  0034AA  0E00               	movlw	0
  6567  0034AC  6E17               	movwf	(___aldiv@dividend+3)^0,c
  6568  0034AE  C048  F018         	movff	_smtPeriod,___aldiv@divisor	;volatile
  6569  0034B2  C049  F019         	movff	_smtPeriod+1,___aldiv@divisor+1	;volatile
  6570  0034B6  C04A  F01A         	movff	_smtPeriod+2,___aldiv@divisor+2	;volatile
  6571  0034BA  C04B  F01B         	movff	_smtPeriod+3,___aldiv@divisor+3	;volatile
  6572  0034BE  EC17  F016         	call	___aldiv	;wreg free
  6573  0034C2  C014  F024         	movff	?___aldiv,actSpeed@speed
  6574  0034C6  C015  F025         	movff	?___aldiv+1,actSpeed@speed+1
  6575                           
  6576                           ;main.c: 67:         } else {
  6577  0034CA  EF7D  F01A         	goto	l4455
  6578  0034CE                     l4453:
  6579                           
  6580                           ; BSR set to: 60
  6581                           ;main.c: 68:             speed = (int16_t)((int32_t)(-500000 / (int32_t)smtPeriod));
  6582  0034CE  0EE0               	movlw	224
  6583  0034D0  6E14               	movwf	___aldiv@dividend^0,c
  6584  0034D2  0E5E               	movlw	94
  6585  0034D4  6E15               	movwf	(___aldiv@dividend+1)^0,c
  6586  0034D6  0EF8               	movlw	248
  6587  0034D8  6E16               	movwf	(___aldiv@dividend+2)^0,c
  6588  0034DA  0EFF               	movlw	255
  6589  0034DC  6E17               	movwf	(___aldiv@dividend+3)^0,c
  6590  0034DE  C048  F018         	movff	_smtPeriod,___aldiv@divisor	;volatile
  6591  0034E2  C049  F019         	movff	_smtPeriod+1,___aldiv@divisor+1	;volatile
  6592  0034E6  C04A  F01A         	movff	_smtPeriod+2,___aldiv@divisor+2	;volatile
  6593  0034EA  C04B  F01B         	movff	_smtPeriod+3,___aldiv@divisor+3	;volatile
  6594  0034EE  EC17  F016         	call	___aldiv	;wreg free
  6595  0034F2  C014  F024         	movff	?___aldiv,actSpeed@speed
  6596  0034F6  C015  F025         	movff	?___aldiv+1,actSpeed@speed+1
  6597  0034FA                     l4455:
  6598                           
  6599                           ;main.c: 71:     return speed;
  6600  0034FA  C024  F022         	movff	actSpeed@speed,?_actSpeed
  6601  0034FE  C025  F023         	movff	actSpeed@speed+1,?_actSpeed+1
  6602  003502  0012               	return		;funcret
  6603  003504                     __end_of_actSpeed:
  6604                           	callstack 0
  6605                           
  6606 ;; *************** function ___aldiv *****************
  6607 ;; Defined at:
  6608 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aldiv.c"
  6609 ;; Parameters:    Size  Location     Type
  6610 ;;  dividend        4   19[COMRAM] long 
  6611 ;;  divisor         4   23[COMRAM] long 
  6612 ;; Auto vars:     Size  Location     Type
  6613 ;;  quotient        4   29[COMRAM] long 
  6614 ;;  sign            1   28[COMRAM] unsigned char 
  6615 ;;  counter         1   27[COMRAM] unsigned char 
  6616 ;; Return value:  Size  Location     Type
  6617 ;;                  4   19[COMRAM] long 
  6618 ;; Registers used:
  6619 ;;		wreg, status,2, status,0
  6620 ;; Tracked objects:
  6621 ;;		On entry : 0/0
  6622 ;;		On exit  : 0/0
  6623 ;;		Unchanged: 0/0
  6624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6625 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6626 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6628 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6629 ;;Total ram usage:       14 bytes
  6630 ;; Hardware stack levels used: 1
  6631 ;; Hardware stack levels required when called: 8
  6632 ;; This function calls:
  6633 ;;		Nothing
  6634 ;; This function is called by:
  6635 ;;		_actSpeed
  6636 ;; This function uses a non-reentrant model
  6637 ;;
  6638                           
  6639                           	psect	text31
  6640  002C2E                     __ptext31:
  6641                           	callstack 0
  6642  002C2E                     ___aldiv:
  6643                           	callstack 19
  6644  002C2E  0E00               	movlw	0
  6645  002C30  6E1D               	movwf	___aldiv@sign^0,c
  6646  002C32  BE1B               	btfsc	(___aldiv@divisor+3)^0,7,c
  6647  002C34  EF20  F016         	goto	u2680
  6648  002C38  EF1E  F016         	goto	u2681
  6649  002C3C                     u2681:
  6650  002C3C  EF2A  F016         	goto	l4271
  6651  002C40                     u2680:
  6652  002C40  1E1B               	comf	(___aldiv@divisor+3)^0,f,c
  6653  002C42  1E1A               	comf	(___aldiv@divisor+2)^0,f,c
  6654  002C44  1E19               	comf	(___aldiv@divisor+1)^0,f,c
  6655  002C46  6C18               	negf	___aldiv@divisor^0,c
  6656  002C48  0E00               	movlw	0
  6657  002C4A  2219               	addwfc	(___aldiv@divisor+1)^0,f,c
  6658  002C4C  221A               	addwfc	(___aldiv@divisor+2)^0,f,c
  6659  002C4E  221B               	addwfc	(___aldiv@divisor+3)^0,f,c
  6660  002C50  0E01               	movlw	1
  6661  002C52  6E1D               	movwf	___aldiv@sign^0,c
  6662  002C54                     l4271:
  6663  002C54  BE17               	btfsc	(___aldiv@dividend+3)^0,7,c
  6664  002C56  EF31  F016         	goto	u2690
  6665  002C5A  EF2F  F016         	goto	u2691
  6666  002C5E                     u2691:
  6667  002C5E  EF3B  F016         	goto	l4277
  6668  002C62                     u2690:
  6669  002C62  1E17               	comf	(___aldiv@dividend+3)^0,f,c
  6670  002C64  1E16               	comf	(___aldiv@dividend+2)^0,f,c
  6671  002C66  1E15               	comf	(___aldiv@dividend+1)^0,f,c
  6672  002C68  6C14               	negf	___aldiv@dividend^0,c
  6673  002C6A  0E00               	movlw	0
  6674  002C6C  2215               	addwfc	(___aldiv@dividend+1)^0,f,c
  6675  002C6E  2216               	addwfc	(___aldiv@dividend+2)^0,f,c
  6676  002C70  2217               	addwfc	(___aldiv@dividend+3)^0,f,c
  6677  002C72  0E01               	movlw	1
  6678  002C74  1A1D               	xorwf	___aldiv@sign^0,f,c
  6679  002C76                     l4277:
  6680  002C76  0E00               	movlw	0
  6681  002C78  6E1E               	movwf	___aldiv@quotient^0,c
  6682  002C7A  0E00               	movlw	0
  6683  002C7C  6E1F               	movwf	(___aldiv@quotient+1)^0,c
  6684  002C7E  0E00               	movlw	0
  6685  002C80  6E20               	movwf	(___aldiv@quotient+2)^0,c
  6686  002C82  0E00               	movlw	0
  6687  002C84  6E21               	movwf	(___aldiv@quotient+3)^0,c
  6688  002C86  5018               	movf	___aldiv@divisor^0,w,c
  6689  002C88  1019               	iorwf	(___aldiv@divisor+1)^0,w,c
  6690  002C8A  101A               	iorwf	(___aldiv@divisor+2)^0,w,c
  6691  002C8C  101B               	iorwf	(___aldiv@divisor+3)^0,w,c
  6692  002C8E  B4D8               	btfsc	status,2,c
  6693  002C90  EF4C  F016         	goto	u2701
  6694  002C94  EF4E  F016         	goto	u2700
  6695  002C98                     u2701:
  6696  002C98  EF84  F016         	goto	l4299
  6697  002C9C                     u2700:
  6698  002C9C  0E01               	movlw	1
  6699  002C9E  6E1C               	movwf	___aldiv@counter^0,c
  6700  002CA0  EF58  F016         	goto	l4285
  6701  002CA4                     l4283:
  6702  002CA4  90D8               	bcf	status,0,c
  6703  002CA6  3618               	rlcf	___aldiv@divisor^0,f,c
  6704  002CA8  3619               	rlcf	(___aldiv@divisor+1)^0,f,c
  6705  002CAA  361A               	rlcf	(___aldiv@divisor+2)^0,f,c
  6706  002CAC  361B               	rlcf	(___aldiv@divisor+3)^0,f,c
  6707  002CAE  2A1C               	incf	___aldiv@counter^0,f,c
  6708  002CB0                     l4285:
  6709  002CB0  AE1B               	btfss	(___aldiv@divisor+3)^0,7,c
  6710  002CB2  EF5D  F016         	goto	u2711
  6711  002CB6  EF5F  F016         	goto	u2710
  6712  002CBA                     u2711:
  6713  002CBA  EF52  F016         	goto	l4283
  6714  002CBE                     u2710:
  6715  002CBE                     l4287:
  6716  002CBE  90D8               	bcf	status,0,c
  6717  002CC0  361E               	rlcf	___aldiv@quotient^0,f,c
  6718  002CC2  361F               	rlcf	(___aldiv@quotient+1)^0,f,c
  6719  002CC4  3620               	rlcf	(___aldiv@quotient+2)^0,f,c
  6720  002CC6  3621               	rlcf	(___aldiv@quotient+3)^0,f,c
  6721  002CC8  5018               	movf	___aldiv@divisor^0,w,c
  6722  002CCA  5C14               	subwf	___aldiv@dividend^0,w,c
  6723  002CCC  5019               	movf	(___aldiv@divisor+1)^0,w,c
  6724  002CCE  5815               	subwfb	(___aldiv@dividend+1)^0,w,c
  6725  002CD0  501A               	movf	(___aldiv@divisor+2)^0,w,c
  6726  002CD2  5816               	subwfb	(___aldiv@dividend+2)^0,w,c
  6727  002CD4  501B               	movf	(___aldiv@divisor+3)^0,w,c
  6728  002CD6  5817               	subwfb	(___aldiv@dividend+3)^0,w,c
  6729  002CD8  A0D8               	btfss	status,0,c
  6730  002CDA  EF71  F016         	goto	u2721
  6731  002CDE  EF73  F016         	goto	u2720
  6732  002CE2                     u2721:
  6733  002CE2  EF7C  F016         	goto	l4295
  6734  002CE6                     u2720:
  6735  002CE6  5018               	movf	___aldiv@divisor^0,w,c
  6736  002CE8  5E14               	subwf	___aldiv@dividend^0,f,c
  6737  002CEA  5019               	movf	(___aldiv@divisor+1)^0,w,c
  6738  002CEC  5A15               	subwfb	(___aldiv@dividend+1)^0,f,c
  6739  002CEE  501A               	movf	(___aldiv@divisor+2)^0,w,c
  6740  002CF0  5A16               	subwfb	(___aldiv@dividend+2)^0,f,c
  6741  002CF2  501B               	movf	(___aldiv@divisor+3)^0,w,c
  6742  002CF4  5A17               	subwfb	(___aldiv@dividend+3)^0,f,c
  6743  002CF6  801E               	bsf	___aldiv@quotient^0,0,c
  6744  002CF8                     l4295:
  6745  002CF8  90D8               	bcf	status,0,c
  6746  002CFA  321B               	rrcf	(___aldiv@divisor+3)^0,f,c
  6747  002CFC  321A               	rrcf	(___aldiv@divisor+2)^0,f,c
  6748  002CFE  3219               	rrcf	(___aldiv@divisor+1)^0,f,c
  6749  002D00  3218               	rrcf	___aldiv@divisor^0,f,c
  6750  002D02  2E1C               	decfsz	___aldiv@counter^0,f,c
  6751  002D04  EF5F  F016         	goto	l4287
  6752  002D08                     l4299:
  6753  002D08  501D               	movf	___aldiv@sign^0,w,c
  6754  002D0A  B4D8               	btfsc	status,2,c
  6755  002D0C  EF8A  F016         	goto	u2731
  6756  002D10  EF8C  F016         	goto	u2730
  6757  002D14                     u2731:
  6758  002D14  EF94  F016         	goto	l4303
  6759  002D18                     u2730:
  6760  002D18  1E21               	comf	(___aldiv@quotient+3)^0,f,c
  6761  002D1A  1E20               	comf	(___aldiv@quotient+2)^0,f,c
  6762  002D1C  1E1F               	comf	(___aldiv@quotient+1)^0,f,c
  6763  002D1E  6C1E               	negf	___aldiv@quotient^0,c
  6764  002D20  0E00               	movlw	0
  6765  002D22  221F               	addwfc	(___aldiv@quotient+1)^0,f,c
  6766  002D24  2220               	addwfc	(___aldiv@quotient+2)^0,f,c
  6767  002D26  2221               	addwfc	(___aldiv@quotient+3)^0,f,c
  6768  002D28                     l4303:
  6769  002D28  C01E  F014         	movff	___aldiv@quotient,?___aldiv
  6770  002D2C  C01F  F015         	movff	___aldiv@quotient+1,?___aldiv+1
  6771  002D30  C020  F016         	movff	___aldiv@quotient+2,?___aldiv+2
  6772  002D34  C021  F017         	movff	___aldiv@quotient+3,?___aldiv+3
  6773  002D38  0012               	return		;funcret
  6774  002D3A                     __end_of___aldiv:
  6775                           	callstack 0
  6776                           
  6777 ;; *************** function ___xxtofl *****************
  6778 ;; Defined at:
  6779 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  6780 ;; Parameters:    Size  Location     Type
  6781 ;;  sign            1    wreg     unsigned char 
  6782 ;;  val             4   24[COMRAM] long 
  6783 ;; Auto vars:     Size  Location     Type
  6784 ;;  sign            1   32[COMRAM] unsigned char 
  6785 ;;  arg             4   34[COMRAM] unsigned long 
  6786 ;;  exp             1   33[COMRAM] unsigned char 
  6787 ;; Return value:  Size  Location     Type
  6788 ;;                  4   24[COMRAM] unsigned char 
  6789 ;; Registers used:
  6790 ;;		wreg, status,2, status,0
  6791 ;; Tracked objects:
  6792 ;;		On entry : 0/0
  6793 ;;		On exit  : 0/0
  6794 ;;		Unchanged: 0/0
  6795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6796 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6797 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6798 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6799 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6800 ;;Total ram usage:       14 bytes
  6801 ;; Hardware stack levels used: 1
  6802 ;; Hardware stack levels required when called: 8
  6803 ;; This function calls:
  6804 ;;		Nothing
  6805 ;; This function is called by:
  6806 ;;		_loop
  6807 ;;		_calcSpeed
  6808 ;;		_calcMotorPow
  6809 ;; This function uses a non-reentrant model
  6810 ;;
  6811                           
  6812                           	psect	text32
  6813  002428                     __ptext32:
  6814                           	callstack 0
  6815  002428                     ___xxtofl:
  6816                           	callstack 20
  6817                           
  6818                           ;incstack = 0
  6819                           ;___xxtofl@sign stored from wreg
  6820  002428  6E21               	movwf	___xxtofl@sign^0,c
  6821  00242A  5021               	movf	___xxtofl@sign^0,w,c
  6822  00242C  B4D8               	btfsc	status,2,c
  6823  00242E  EF1B  F012         	goto	u3591
  6824  002432  EF1D  F012         	goto	u3590
  6825  002436                     u3591:
  6826  002436  EF3F  F012         	goto	l1997
  6827  00243A                     u3590:
  6828  00243A  BE1C               	btfsc	(___xxtofl@val+3)^0,7,c
  6829  00243C  EF24  F012         	goto	u3600
  6830  002440  EF22  F012         	goto	u3601
  6831  002444                     u3601:
  6832  002444  EF3F  F012         	goto	l1997
  6833  002448                     u3600:
  6834  002448  C019  F01D         	movff	___xxtofl@val,??___xxtofl
  6835  00244C  C01A  F01E         	movff	___xxtofl@val+1,??___xxtofl+1
  6836  002450  C01B  F01F         	movff	___xxtofl@val+2,??___xxtofl+2
  6837  002454  C01C  F020         	movff	___xxtofl@val+3,??___xxtofl+3
  6838  002458  1E1D               	comf	??___xxtofl^0,f,c
  6839  00245A  1E1E               	comf	(??___xxtofl+1)^0,f,c
  6840  00245C  1E1F               	comf	(??___xxtofl+2)^0,f,c
  6841  00245E  1E20               	comf	(??___xxtofl+3)^0,f,c
  6842  002460  2A1D               	incf	??___xxtofl^0,f,c
  6843  002462  0E00               	movlw	0
  6844  002464  221E               	addwfc	(??___xxtofl+1)^0,f,c
  6845  002466  221F               	addwfc	(??___xxtofl+2)^0,f,c
  6846  002468  2220               	addwfc	(??___xxtofl+3)^0,f,c
  6847  00246A  C01D  F023         	movff	??___xxtofl,___xxtofl@arg
  6848  00246E  C01E  F024         	movff	??___xxtofl+1,___xxtofl@arg+1
  6849  002472  C01F  F025         	movff	??___xxtofl+2,___xxtofl@arg+2
  6850  002476  C020  F026         	movff	??___xxtofl+3,___xxtofl@arg+3
  6851  00247A  EF47  F012         	goto	l4869
  6852  00247E                     l1997:
  6853  00247E  C019  F023         	movff	___xxtofl@val,___xxtofl@arg
  6854  002482  C01A  F024         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6855  002486  C01B  F025         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6856  00248A  C01C  F026         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6857  00248E                     l4869:
  6858  00248E  5019               	movf	___xxtofl@val^0,w,c
  6859  002490  101A               	iorwf	(___xxtofl@val+1)^0,w,c
  6860  002492  101B               	iorwf	(___xxtofl@val+2)^0,w,c
  6861  002494  101C               	iorwf	(___xxtofl@val+3)^0,w,c
  6862  002496  A4D8               	btfss	status,2,c
  6863  002498  EF50  F012         	goto	u3611
  6864  00249C  EF52  F012         	goto	u3610
  6865  0024A0                     u3611:
  6866  0024A0  EF5C  F012         	goto	l4875
  6867  0024A4                     u3610:
  6868  0024A4  0E00               	movlw	0
  6869  0024A6  6E19               	movwf	?___xxtofl^0,c
  6870  0024A8  0E00               	movlw	0
  6871  0024AA  6E1A               	movwf	(?___xxtofl+1)^0,c
  6872  0024AC  0E00               	movlw	0
  6873  0024AE  6E1B               	movwf	(?___xxtofl+2)^0,c
  6874  0024B0  0E00               	movlw	0
  6875  0024B2  6E1C               	movwf	(?___xxtofl+3)^0,c
  6876  0024B4  EFED  F012         	goto	l2000
  6877  0024B8                     l4875:
  6878  0024B8  0E96               	movlw	150
  6879  0024BA  6E22               	movwf	___xxtofl@exp^0,c
  6880  0024BC  EF66  F012         	goto	l4879
  6881  0024C0                     l4877:
  6882  0024C0  2A22               	incf	___xxtofl@exp^0,f,c
  6883  0024C2  90D8               	bcf	status,0,c
  6884  0024C4  3226               	rrcf	(___xxtofl@arg+3)^0,f,c
  6885  0024C6  3225               	rrcf	(___xxtofl@arg+2)^0,f,c
  6886  0024C8  3224               	rrcf	(___xxtofl@arg+1)^0,f,c
  6887  0024CA  3223               	rrcf	___xxtofl@arg^0,f,c
  6888  0024CC                     l4879:
  6889  0024CC  0E00               	movlw	0
  6890  0024CE  1423               	andwf	___xxtofl@arg^0,w,c
  6891  0024D0  6E1D               	movwf	??___xxtofl^0,c
  6892  0024D2  0E00               	movlw	0
  6893  0024D4  1424               	andwf	(___xxtofl@arg+1)^0,w,c
  6894  0024D6  6E1E               	movwf	(??___xxtofl+1)^0,c
  6895  0024D8  0E00               	movlw	0
  6896  0024DA  1425               	andwf	(___xxtofl@arg+2)^0,w,c
  6897  0024DC  6E1F               	movwf	(??___xxtofl+2)^0,c
  6898  0024DE  0EFE               	movlw	254
  6899  0024E0  1426               	andwf	(___xxtofl@arg+3)^0,w,c
  6900  0024E2  6E20               	movwf	(??___xxtofl+3)^0,c
  6901  0024E4  501D               	movf	??___xxtofl^0,w,c
  6902  0024E6  101E               	iorwf	(??___xxtofl+1)^0,w,c
  6903  0024E8  101F               	iorwf	(??___xxtofl+2)^0,w,c
  6904  0024EA  1020               	iorwf	(??___xxtofl+3)^0,w,c
  6905  0024EC  A4D8               	btfss	status,2,c
  6906  0024EE  EF7B  F012         	goto	u3621
  6907  0024F2  EF7D  F012         	goto	u3620
  6908  0024F6                     u3621:
  6909  0024F6  EF60  F012         	goto	l4877
  6910  0024FA                     u3620:
  6911  0024FA  EF8B  F012         	goto	l2004
  6912  0024FE                     l4881:
  6913  0024FE  2A22               	incf	___xxtofl@exp^0,f,c
  6914  002500  0E01               	movlw	1
  6915  002502  2623               	addwf	___xxtofl@arg^0,f,c
  6916  002504  0E00               	movlw	0
  6917  002506  2224               	addwfc	(___xxtofl@arg+1)^0,f,c
  6918  002508  2225               	addwfc	(___xxtofl@arg+2)^0,f,c
  6919  00250A  2226               	addwfc	(___xxtofl@arg+3)^0,f,c
  6920  00250C  90D8               	bcf	status,0,c
  6921  00250E  3226               	rrcf	(___xxtofl@arg+3)^0,f,c
  6922  002510  3225               	rrcf	(___xxtofl@arg+2)^0,f,c
  6923  002512  3224               	rrcf	(___xxtofl@arg+1)^0,f,c
  6924  002514  3223               	rrcf	___xxtofl@arg^0,f,c
  6925  002516                     l2004:
  6926  002516  0E00               	movlw	0
  6927  002518  1423               	andwf	___xxtofl@arg^0,w,c
  6928  00251A  6E1D               	movwf	??___xxtofl^0,c
  6929  00251C  0E00               	movlw	0
  6930  00251E  1424               	andwf	(___xxtofl@arg+1)^0,w,c
  6931  002520  6E1E               	movwf	(??___xxtofl+1)^0,c
  6932  002522  0E00               	movlw	0
  6933  002524  1425               	andwf	(___xxtofl@arg+2)^0,w,c
  6934  002526  6E1F               	movwf	(??___xxtofl+2)^0,c
  6935  002528  0EFF               	movlw	255
  6936  00252A  1426               	andwf	(___xxtofl@arg+3)^0,w,c
  6937  00252C  6E20               	movwf	(??___xxtofl+3)^0,c
  6938  00252E  501D               	movf	??___xxtofl^0,w,c
  6939  002530  101E               	iorwf	(??___xxtofl+1)^0,w,c
  6940  002532  101F               	iorwf	(??___xxtofl+2)^0,w,c
  6941  002534  1020               	iorwf	(??___xxtofl+3)^0,w,c
  6942  002536  A4D8               	btfss	status,2,c
  6943  002538  EFA0  F012         	goto	u3631
  6944  00253C  EFA2  F012         	goto	u3630
  6945  002540                     u3631:
  6946  002540  EF7F  F012         	goto	l4881
  6947  002544                     u3630:
  6948  002544  EFAA  F012         	goto	l4889
  6949  002548                     l4887:
  6950  002548  0622               	decf	___xxtofl@exp^0,f,c
  6951  00254A  90D8               	bcf	status,0,c
  6952  00254C  3623               	rlcf	___xxtofl@arg^0,f,c
  6953  00254E  3624               	rlcf	(___xxtofl@arg+1)^0,f,c
  6954  002550  3625               	rlcf	(___xxtofl@arg+2)^0,f,c
  6955  002552  3626               	rlcf	(___xxtofl@arg+3)^0,f,c
  6956  002554                     l4889:
  6957  002554  BE25               	btfsc	(___xxtofl@arg+2)^0,7,c
  6958  002556  EFAF  F012         	goto	u3641
  6959  00255A  EFB1  F012         	goto	u3640
  6960  00255E                     u3641:
  6961  00255E  EFB9  F012         	goto	l2011
  6962  002562                     u3640:
  6963  002562  0E02               	movlw	2
  6964  002564  6022               	cpfslt	___xxtofl@exp^0,c
  6965  002566  EFB7  F012         	goto	u3651
  6966  00256A  EFB9  F012         	goto	u3650
  6967  00256E                     u3651:
  6968  00256E  EFA4  F012         	goto	l4887
  6969  002572                     u3650:
  6970  002572                     l2011:
  6971  002572  B022               	btfsc	___xxtofl@exp^0,0,c
  6972  002574  EFBE  F012         	goto	u3661
  6973  002578  EFC0  F012         	goto	u3660
  6974  00257C                     u3661:
  6975  00257C  EFC1  F012         	goto	l4895
  6976  002580                     u3660:
  6977  002580  9E25               	bcf	(___xxtofl@arg+2)^0,7,c
  6978  002582                     l4895:
  6979  002582  90D8               	bcf	status,0,c
  6980  002584  3222               	rrcf	___xxtofl@exp^0,f,c
  6981  002586  C022  F01D         	movff	___xxtofl@exp,??___xxtofl
  6982  00258A  6A1E               	clrf	(??___xxtofl+1)^0,c
  6983  00258C  6A1F               	clrf	(??___xxtofl+2)^0,c
  6984  00258E  6A20               	clrf	(??___xxtofl+3)^0,c
  6985  002590  C01D  F020         	movff	??___xxtofl,??___xxtofl+3
  6986  002594  6A1F               	clrf	(??___xxtofl+2)^0,c
  6987  002596  6A1E               	clrf	(??___xxtofl+1)^0,c
  6988  002598  6A1D               	clrf	??___xxtofl^0,c
  6989  00259A  501D               	movf	??___xxtofl^0,w,c
  6990  00259C  1223               	iorwf	___xxtofl@arg^0,f,c
  6991  00259E  501E               	movf	(??___xxtofl+1)^0,w,c
  6992  0025A0  1224               	iorwf	(___xxtofl@arg+1)^0,f,c
  6993  0025A2  501F               	movf	(??___xxtofl+2)^0,w,c
  6994  0025A4  1225               	iorwf	(___xxtofl@arg+2)^0,f,c
  6995  0025A6  5020               	movf	(??___xxtofl+3)^0,w,c
  6996  0025A8  1226               	iorwf	(___xxtofl@arg+3)^0,f,c
  6997  0025AA  5021               	movf	___xxtofl@sign^0,w,c
  6998  0025AC  B4D8               	btfsc	status,2,c
  6999  0025AE  EFDB  F012         	goto	u3671
  7000  0025B2  EFDD  F012         	goto	u3670
  7001  0025B6                     u3671:
  7002  0025B6  EFE5  F012         	goto	l4905
  7003  0025BA                     u3670:
  7004  0025BA  BE1C               	btfsc	(___xxtofl@val+3)^0,7,c
  7005  0025BC  EFE4  F012         	goto	u3680
  7006  0025C0  EFE2  F012         	goto	u3681
  7007  0025C4                     u3681:
  7008  0025C4  EFE5  F012         	goto	l4905
  7009  0025C8                     u3680:
  7010  0025C8  8E26               	bsf	(___xxtofl@arg+3)^0,7,c
  7011  0025CA                     l4905:
  7012  0025CA  C023  F019         	movff	___xxtofl@arg,?___xxtofl
  7013  0025CE  C024  F01A         	movff	___xxtofl@arg+1,?___xxtofl+1
  7014  0025D2  C025  F01B         	movff	___xxtofl@arg+2,?___xxtofl+2
  7015  0025D6  C026  F01C         	movff	___xxtofl@arg+3,?___xxtofl+3
  7016  0025DA                     l2000:
  7017  0025DA  0012               	return		;funcret
  7018  0025DC                     __end_of___xxtofl:
  7019                           	callstack 0
  7020                           
  7021 ;; *************** function ___fltol *****************
  7022 ;; Defined at:
  7023 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  7024 ;; Parameters:    Size  Location     Type
  7025 ;;  f1              4   21[BANK0 ] unsigned char 
  7026 ;; Auto vars:     Size  Location     Type
  7027 ;;  exp1            1   30[BANK0 ] unsigned char 
  7028 ;;  sign1           1   29[BANK0 ] unsigned char 
  7029 ;; Return value:  Size  Location     Type
  7030 ;;                  4   21[BANK0 ] long 
  7031 ;; Registers used:
  7032 ;;		wreg, status,2, status,0
  7033 ;; Tracked objects:
  7034 ;;		On entry : 0/0
  7035 ;;		On exit  : 0/0
  7036 ;;		Unchanged: 0/0
  7037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7038 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7039 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7040 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7041 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7042 ;;Total ram usage:       10 bytes
  7043 ;; Hardware stack levels used: 1
  7044 ;; Hardware stack levels required when called: 8
  7045 ;; This function calls:
  7046 ;;		Nothing
  7047 ;; This function is called by:
  7048 ;;		_calcSpeed
  7049 ;;		_calcMotorPow
  7050 ;; This function uses a non-reentrant model
  7051 ;;
  7052                           
  7053                           	psect	text33
  7054  002D3A                     __ptext33:
  7055                           	callstack 0
  7056  002D3A                     ___fltol:
  7057                           	callstack 20
  7058  002D3A  0100               	movlb	0	; () banked
  7059  002D3C  35B9               	rlcf	(___fltol@f1+2)& (0+255),w,b
  7060  002D3E  35BA               	rlcf	(___fltol@f1+3)& (0+255),w,b
  7061  002D40  6FC0               	movwf	___fltol@exp1& (0+255),b
  7062  002D42  51C0               	movf	___fltol@exp1& (0+255),w,b
  7063  002D44  A4D8               	btfss	status,2,c
  7064  002D46  EFA7  F016         	goto	u3521
  7065  002D4A  EFA9  F016         	goto	u3520
  7066  002D4E                     u3521:
  7067  002D4E  EFB3  F016         	goto	l4825
  7068  002D52                     u3520:
  7069  002D52                     l4821:
  7070                           
  7071                           ; BSR set to: 0
  7072  002D52  0E00               	movlw	0
  7073  002D54  6FB7               	movwf	?___fltol& (0+255),b
  7074  002D56  0E00               	movlw	0
  7075  002D58  6FB8               	movwf	(?___fltol+1)& (0+255),b
  7076  002D5A  0E00               	movlw	0
  7077  002D5C  6FB9               	movwf	(?___fltol+2)& (0+255),b
  7078  002D5E  0E00               	movlw	0
  7079  002D60  6FBA               	movwf	(?___fltol+3)& (0+255),b
  7080  002D62  EF20  F017         	goto	l1639
  7081  002D66                     l4825:
  7082                           
  7083                           ; BSR set to: 0
  7084  002D66  C0B7  F0BB         	movff	___fltol@f1,??___fltol
  7085  002D6A  C0B8  F0BC         	movff	___fltol@f1+1,??___fltol+1
  7086  002D6E  C0B9  F0BD         	movff	___fltol@f1+2,??___fltol+2
  7087  002D72  C0BA  F0BE         	movff	___fltol@f1+3,??___fltol+3
  7088  002D76  0E20               	movlw	32
  7089  002D78  EFC3  F016         	goto	u3530
  7090  002D7C                     u3535:
  7091  002D7C  90D8               	bcf	status,0,c
  7092  002D7E  33BE               	rrcf	(??___fltol+3)& (0+255),f,b
  7093  002D80  33BD               	rrcf	(??___fltol+2)& (0+255),f,b
  7094  002D82  33BC               	rrcf	(??___fltol+1)& (0+255),f,b
  7095  002D84  33BB               	rrcf	??___fltol& (0+255),f,b
  7096  002D86                     u3530:
  7097  002D86  2EE8               	decfsz	wreg,f,c
  7098  002D88  EFBE  F016         	goto	u3535
  7099  002D8C  51BB               	movf	??___fltol& (0+255),w,b
  7100  002D8E  6FBF               	movwf	___fltol@sign1& (0+255),b
  7101  002D90                     
  7102                           ; BSR set to: 0
  7103  002D90  8FB9               	bsf	(___fltol@f1+2)& (0+255),7,b
  7104  002D92                     
  7105                           ; BSR set to: 0
  7106  002D92  0EFF               	movlw	255
  7107  002D94  17B7               	andwf	___fltol@f1& (0+255),f,b
  7108  002D96  0EFF               	movlw	255
  7109  002D98  17B8               	andwf	(___fltol@f1+1)& (0+255),f,b
  7110  002D9A  0EFF               	movlw	255
  7111  002D9C  17B9               	andwf	(___fltol@f1+2)& (0+255),f,b
  7112  002D9E  0E00               	movlw	0
  7113  002DA0  17BA               	andwf	(___fltol@f1+3)& (0+255),f,b
  7114  002DA2                     
  7115                           ; BSR set to: 0
  7116  002DA2  0E96               	movlw	150
  7117  002DA4  5FC0               	subwf	___fltol@exp1& (0+255),f,b
  7118  002DA6                     
  7119                           ; BSR set to: 0
  7120  002DA6  BFC0               	btfsc	___fltol@exp1& (0+255),7,b
  7121  002DA8  EFDA  F016         	goto	u3540
  7122  002DAC  EFD8  F016         	goto	u3541
  7123  002DB0                     u3541:
  7124  002DB0  EFF0  F016         	goto	l4845
  7125  002DB4                     u3540:
  7126  002DB4                     
  7127                           ; BSR set to: 0
  7128  002DB4  51C0               	movf	___fltol@exp1& (0+255),w,b
  7129  002DB6  0A80               	xorlw	128
  7130  002DB8  0F97               	addlw	151
  7131  002DBA  B0D8               	btfsc	status,0,c
  7132  002DBC  EFE2  F016         	goto	u3551
  7133  002DC0  EFE4  F016         	goto	u3550
  7134  002DC4                     u3551:
  7135  002DC4  EFE6  F016         	goto	l4841
  7136  002DC8                     u3550:
  7137  002DC8  EFA9  F016         	goto	l4821
  7138  002DCC                     l4841:
  7139                           
  7140                           ; BSR set to: 0
  7141  002DCC  90D8               	bcf	status,0,c
  7142  002DCE  33BA               	rrcf	(___fltol@f1+3)& (0+255),f,b
  7143  002DD0  33B9               	rrcf	(___fltol@f1+2)& (0+255),f,b
  7144  002DD2  33B8               	rrcf	(___fltol@f1+1)& (0+255),f,b
  7145  002DD4  33B7               	rrcf	___fltol@f1& (0+255),f,b
  7146  002DD6                     
  7147                           ; BSR set to: 0
  7148  002DD6  3FC0               	incfsz	___fltol@exp1& (0+255),f,b
  7149  002DD8  EFE6  F016         	goto	l4841
  7150  002DDC  EF08  F017         	goto	l4855
  7151  002DE0                     l4845:
  7152                           
  7153                           ; BSR set to: 0
  7154  002DE0  0E1F               	movlw	31
  7155  002DE2  65C0               	cpfsgt	___fltol@exp1& (0+255),b
  7156  002DE4  EFF6  F016         	goto	u3561
  7157  002DE8  EFF8  F016         	goto	u3560
  7158  002DEC                     u3561:
  7159  002DEC  EF00  F017         	goto	l4853
  7160  002DF0                     u3560:
  7161  002DF0  EFA9  F016         	goto	l4821
  7162  002DF4                     l4851:
  7163                           
  7164                           ; BSR set to: 0
  7165  002DF4  90D8               	bcf	status,0,c
  7166  002DF6  37B7               	rlcf	___fltol@f1& (0+255),f,b
  7167  002DF8  37B8               	rlcf	(___fltol@f1+1)& (0+255),f,b
  7168  002DFA  37B9               	rlcf	(___fltol@f1+2)& (0+255),f,b
  7169  002DFC  37BA               	rlcf	(___fltol@f1+3)& (0+255),f,b
  7170  002DFE  07C0               	decf	___fltol@exp1& (0+255),f,b
  7171  002E00                     l4853:
  7172                           
  7173                           ; BSR set to: 0
  7174  002E00  51C0               	movf	___fltol@exp1& (0+255),w,b
  7175  002E02  A4D8               	btfss	status,2,c
  7176  002E04  EF06  F017         	goto	u3571
  7177  002E08  EF08  F017         	goto	u3570
  7178  002E0C                     u3571:
  7179  002E0C  EFFA  F016         	goto	l4851
  7180  002E10                     u3570:
  7181  002E10                     l4855:
  7182                           
  7183                           ; BSR set to: 0
  7184  002E10  51BF               	movf	___fltol@sign1& (0+255),w,b
  7185  002E12  B4D8               	btfsc	status,2,c
  7186  002E14  EF0E  F017         	goto	u3581
  7187  002E18  EF10  F017         	goto	u3580
  7188  002E1C                     u3581:
  7189  002E1C  EF18  F017         	goto	l4859
  7190  002E20                     u3580:
  7191  002E20                     
  7192                           ; BSR set to: 0
  7193  002E20  1FBA               	comf	(___fltol@f1+3)& (0+255),f,b
  7194  002E22  1FB9               	comf	(___fltol@f1+2)& (0+255),f,b
  7195  002E24  1FB8               	comf	(___fltol@f1+1)& (0+255),f,b
  7196  002E26  6DB7               	negf	___fltol@f1& (0+255),b
  7197  002E28  0E00               	movlw	0
  7198  002E2A  23B8               	addwfc	(___fltol@f1+1)& (0+255),f,b
  7199  002E2C  23B9               	addwfc	(___fltol@f1+2)& (0+255),f,b
  7200  002E2E  23BA               	addwfc	(___fltol@f1+3)& (0+255),f,b
  7201  002E30                     l4859:
  7202                           
  7203                           ; BSR set to: 0
  7204  002E30  C0B7  F0B7         	movff	___fltol@f1,?___fltol
  7205  002E34  C0B8  F0B8         	movff	___fltol@f1+1,?___fltol+1
  7206  002E38  C0B9  F0B9         	movff	___fltol@f1+2,?___fltol+2
  7207  002E3C  C0BA  F0BA         	movff	___fltol@f1+3,?___fltol+3
  7208  002E40                     l1639:
  7209                           
  7210                           ; BSR set to: 0
  7211  002E40  0012               	return		;funcret
  7212  002E42                     __end_of___fltol:
  7213                           	callstack 0
  7214                           
  7215 ;; *************** function ___flmul *****************
  7216 ;; Defined at:
  7217 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
  7218 ;; Parameters:    Size  Location     Type
  7219 ;;  b               4   38[COMRAM] long 
  7220 ;;  a               4   42[COMRAM] long 
  7221 ;; Auto vars:     Size  Location     Type
  7222 ;;  prod            4    7[BANK0 ] struct .
  7223 ;;  grs             4    2[BANK0 ] unsigned long 
  7224 ;;  temp            2   11[BANK0 ] struct .
  7225 ;;  bexp            1    6[BANK0 ] unsigned char 
  7226 ;;  aexp            1    1[BANK0 ] unsigned char 
  7227 ;;  sign            1    0[BANK0 ] unsigned char 
  7228 ;; Return value:  Size  Location     Type
  7229 ;;                  4   38[COMRAM] unsigned char 
  7230 ;; Registers used:
  7231 ;;		wreg, status,2, status,0, prodl, prodh
  7232 ;; Tracked objects:
  7233 ;;		On entry : 0/0
  7234 ;;		On exit  : 0/0
  7235 ;;		Unchanged: 0/0
  7236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7237 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7238 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7239 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7240 ;;      Totals:        12      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7241 ;;Total ram usage:       25 bytes
  7242 ;; Hardware stack levels used: 1
  7243 ;; Hardware stack levels required when called: 8
  7244 ;; This function calls:
  7245 ;;		Nothing
  7246 ;; This function is called by:
  7247 ;;		_calcSpeed
  7248 ;;		_calcMotorPow
  7249 ;; This function uses a non-reentrant model
  7250 ;;
  7251                           
  7252                           	psect	text34
  7253  00152A                     __ptext34:
  7254                           	callstack 0
  7255  00152A                     ___flmul:
  7256                           	callstack 20
  7257  00152A  502A               	movf	(___flmul@b+3)^0,w,c
  7258  00152C  0B80               	andlw	128
  7259  00152E  0100               	movlb	0	; () banked
  7260  001530  6FA2               	movwf	___flmul@sign& (0+255),b
  7261  001532  502A               	movf	(___flmul@b+3)^0,w,c
  7262  001534  242A               	addwf	(___flmul@b+3)^0,w,c
  7263  001536  6FA8               	movwf	___flmul@bexp& (0+255),b
  7264  001538                     
  7265                           ; BSR set to: 0
  7266  001538  AE29               	btfss	(___flmul@b+2)^0,7,c
  7267  00153A  EFA1  F00A         	goto	u5181
  7268  00153E  EFA3  F00A         	goto	u5180
  7269  001542                     u5181:
  7270  001542  EFA4  F00A         	goto	l6017
  7271  001546                     u5180:
  7272  001546                     
  7273                           ; BSR set to: 0
  7274  001546  81A8               	bsf	___flmul@bexp& (0+255),0,b
  7275  001548                     l6017:
  7276                           
  7277                           ; BSR set to: 0
  7278  001548  51A8               	movf	___flmul@bexp& (0+255),w,b
  7279  00154A  B4D8               	btfsc	status,2,c
  7280  00154C  EFAA  F00A         	goto	u5191
  7281  001550  EFAC  F00A         	goto	u5190
  7282  001554                     u5191:
  7283  001554  EFBF  F00A         	goto	l6025
  7284  001558                     u5190:
  7285  001558                     
  7286                           ; BSR set to: 0
  7287  001558  29A8               	incf	___flmul@bexp& (0+255),w,b
  7288  00155A  A4D8               	btfss	status,2,c
  7289  00155C  EFB2  F00A         	goto	u5201
  7290  001560  EFB4  F00A         	goto	u5200
  7291  001564                     u5201:
  7292  001564  EFBC  F00A         	goto	l6023
  7293  001568                     u5200:
  7294  001568                     
  7295                           ; BSR set to: 0
  7296  001568  0E00               	movlw	0
  7297  00156A  6E27               	movwf	___flmul@b^0,c
  7298  00156C  0E00               	movlw	0
  7299  00156E  6E28               	movwf	(___flmul@b+1)^0,c
  7300  001570  0E00               	movlw	0
  7301  001572  6E29               	movwf	(___flmul@b+2)^0,c
  7302  001574  0E00               	movlw	0
  7303  001576  6E2A               	movwf	(___flmul@b+3)^0,c
  7304  001578                     l6023:
  7305                           
  7306                           ; BSR set to: 0
  7307  001578  8E29               	bsf	(___flmul@b+2)^0,7,c
  7308  00157A  EFC7  F00A         	goto	l6027
  7309  00157E                     l6025:
  7310                           
  7311                           ; BSR set to: 0
  7312  00157E  0E00               	movlw	0
  7313  001580  6E27               	movwf	___flmul@b^0,c
  7314  001582  0E00               	movlw	0
  7315  001584  6E28               	movwf	(___flmul@b+1)^0,c
  7316  001586  0E00               	movlw	0
  7317  001588  6E29               	movwf	(___flmul@b+2)^0,c
  7318  00158A  0E00               	movlw	0
  7319  00158C  6E2A               	movwf	(___flmul@b+3)^0,c
  7320  00158E                     l6027:
  7321                           
  7322                           ; BSR set to: 0
  7323  00158E  502E               	movf	(___flmul@a+3)^0,w,c
  7324  001590  0B80               	andlw	128
  7325  001592  1BA2               	xorwf	___flmul@sign& (0+255),f,b
  7326  001594                     
  7327                           ; BSR set to: 0
  7328  001594  502E               	movf	(___flmul@a+3)^0,w,c
  7329  001596  242E               	addwf	(___flmul@a+3)^0,w,c
  7330  001598  6FA3               	movwf	___flmul@aexp& (0+255),b
  7331  00159A                     
  7332                           ; BSR set to: 0
  7333  00159A  AE2D               	btfss	(___flmul@a+2)^0,7,c
  7334  00159C  EFD2  F00A         	goto	u5211
  7335  0015A0  EFD4  F00A         	goto	u5210
  7336  0015A4                     u5211:
  7337  0015A4  EFD5  F00A         	goto	l6035
  7338  0015A8                     u5210:
  7339  0015A8                     
  7340                           ; BSR set to: 0
  7341  0015A8  81A3               	bsf	___flmul@aexp& (0+255),0,b
  7342  0015AA                     l6035:
  7343                           
  7344                           ; BSR set to: 0
  7345  0015AA  51A3               	movf	___flmul@aexp& (0+255),w,b
  7346  0015AC  B4D8               	btfsc	status,2,c
  7347  0015AE  EFDB  F00A         	goto	u5221
  7348  0015B2  EFDD  F00A         	goto	u5220
  7349  0015B6                     u5221:
  7350  0015B6  EFF0  F00A         	goto	l6043
  7351  0015BA                     u5220:
  7352  0015BA                     
  7353                           ; BSR set to: 0
  7354  0015BA  29A3               	incf	___flmul@aexp& (0+255),w,b
  7355  0015BC  A4D8               	btfss	status,2,c
  7356  0015BE  EFE3  F00A         	goto	u5231
  7357  0015C2  EFE5  F00A         	goto	u5230
  7358  0015C6                     u5231:
  7359  0015C6  EFED  F00A         	goto	l6041
  7360  0015CA                     u5230:
  7361  0015CA                     
  7362                           ; BSR set to: 0
  7363  0015CA  0E00               	movlw	0
  7364  0015CC  6E2B               	movwf	___flmul@a^0,c
  7365  0015CE  0E00               	movlw	0
  7366  0015D0  6E2C               	movwf	(___flmul@a+1)^0,c
  7367  0015D2  0E00               	movlw	0
  7368  0015D4  6E2D               	movwf	(___flmul@a+2)^0,c
  7369  0015D6  0E00               	movlw	0
  7370  0015D8  6E2E               	movwf	(___flmul@a+3)^0,c
  7371  0015DA                     l6041:
  7372                           
  7373                           ; BSR set to: 0
  7374  0015DA  8E2D               	bsf	(___flmul@a+2)^0,7,c
  7375  0015DC  EFF8  F00A         	goto	l1956
  7376  0015E0                     l6043:
  7377                           
  7378                           ; BSR set to: 0
  7379  0015E0  0E00               	movlw	0
  7380  0015E2  6E2B               	movwf	___flmul@a^0,c
  7381  0015E4  0E00               	movlw	0
  7382  0015E6  6E2C               	movwf	(___flmul@a+1)^0,c
  7383  0015E8  0E00               	movlw	0
  7384  0015EA  6E2D               	movwf	(___flmul@a+2)^0,c
  7385  0015EC  0E00               	movlw	0
  7386  0015EE  6E2E               	movwf	(___flmul@a+3)^0,c
  7387  0015F0                     l1956:
  7388                           
  7389                           ; BSR set to: 0
  7390  0015F0  51A3               	movf	___flmul@aexp& (0+255),w,b
  7391  0015F2  B4D8               	btfsc	status,2,c
  7392  0015F4  EFFE  F00A         	goto	u5241
  7393  0015F8  EF00  F00B         	goto	u5240
  7394  0015FC                     u5241:
  7395  0015FC  EF08  F00B         	goto	l6047
  7396  001600                     u5240:
  7397  001600                     
  7398                           ; BSR set to: 0
  7399  001600  51A8               	movf	___flmul@bexp& (0+255),w,b
  7400  001602  A4D8               	btfss	status,2,c
  7401  001604  EF06  F00B         	goto	u5251
  7402  001608  EF08  F00B         	goto	u5250
  7403  00160C                     u5251:
  7404  00160C  EF12  F00B         	goto	l6051
  7405  001610                     u5250:
  7406  001610                     l6047:
  7407                           
  7408                           ; BSR set to: 0
  7409  001610  0E00               	movlw	0
  7410  001612  6E27               	movwf	?___flmul^0,c
  7411  001614  0E00               	movlw	0
  7412  001616  6E28               	movwf	(?___flmul+1)^0,c
  7413  001618  0E00               	movlw	0
  7414  00161A  6E29               	movwf	(?___flmul+2)^0,c
  7415  00161C  0E00               	movlw	0
  7416  00161E  6E2A               	movwf	(?___flmul+3)^0,c
  7417  001620  EFBC  F00C         	goto	l1960
  7418  001624                     l6051:
  7419                           
  7420                           ; BSR set to: 0
  7421  001624  502D               	movf	(___flmul@a+2)^0,w,c
  7422  001626  0227               	mulwf	___flmul@b^0,c
  7423  001628  006F FFCC  F0AD    	movff	prodl,___flmul@temp
  7424  00162E  006F FFD0  F0AE    	movff	prodh,___flmul@temp+1
  7425  001634                     
  7426                           ; BSR set to: 0
  7427  001634  51AD               	movf	___flmul@temp& (0+255),w,b
  7428  001636  6FA4               	movwf	___flmul@grs& (0+255),b
  7429  001638  6BA5               	clrf	(___flmul@grs+1)& (0+255),b
  7430  00163A  6BA6               	clrf	(___flmul@grs+2)& (0+255),b
  7431  00163C  6BA7               	clrf	(___flmul@grs+3)& (0+255),b
  7432  00163E                     
  7433                           ; BSR set to: 0
  7434  00163E  51AE               	movf	(___flmul@temp+1)& (0+255),w,b
  7435  001640  6FA9               	movwf	___flmul@prod& (0+255),b
  7436  001642  6BAA               	clrf	(___flmul@prod+1)& (0+255),b
  7437  001644  6BAB               	clrf	(___flmul@prod+2)& (0+255),b
  7438  001646  6BAC               	clrf	(___flmul@prod+3)& (0+255),b
  7439  001648  502C               	movf	(___flmul@a+1)^0,w,c
  7440  00164A  0228               	mulwf	(___flmul@b+1)^0,c
  7441  00164C  006F FFCC  F0AD    	movff	prodl,___flmul@temp
  7442  001652  006F FFD0  F0AE    	movff	prodh,___flmul@temp+1
  7443  001658                     
  7444                           ; BSR set to: 0
  7445  001658  51AD               	movf	___flmul@temp& (0+255),w,b
  7446  00165A  27A4               	addwf	___flmul@grs& (0+255),f,b
  7447  00165C  0E00               	movlw	0
  7448  00165E  23A5               	addwfc	(___flmul@grs+1)& (0+255),f,b
  7449  001660  23A6               	addwfc	(___flmul@grs+2)& (0+255),f,b
  7450  001662  23A7               	addwfc	(___flmul@grs+3)& (0+255),f,b
  7451  001664                     
  7452                           ; BSR set to: 0
  7453  001664  51AE               	movf	(___flmul@temp+1)& (0+255),w,b
  7454  001666  27A9               	addwf	___flmul@prod& (0+255),f,b
  7455  001668  0E00               	movlw	0
  7456  00166A  23AA               	addwfc	(___flmul@prod+1)& (0+255),f,b
  7457  00166C  23AB               	addwfc	(___flmul@prod+2)& (0+255),f,b
  7458  00166E  23AC               	addwfc	(___flmul@prod+3)& (0+255),f,b
  7459  001670  502B               	movf	___flmul@a^0,w,c
  7460  001672  0229               	mulwf	(___flmul@b+2)^0,c
  7461  001674  006F FFCC  F0AD    	movff	prodl,___flmul@temp
  7462  00167A  006F FFD0  F0AE    	movff	prodh,___flmul@temp+1
  7463  001680                     
  7464                           ; BSR set to: 0
  7465  001680  51AD               	movf	___flmul@temp& (0+255),w,b
  7466  001682  27A4               	addwf	___flmul@grs& (0+255),f,b
  7467  001684  0E00               	movlw	0
  7468  001686  23A5               	addwfc	(___flmul@grs+1)& (0+255),f,b
  7469  001688  23A6               	addwfc	(___flmul@grs+2)& (0+255),f,b
  7470  00168A  23A7               	addwfc	(___flmul@grs+3)& (0+255),f,b
  7471  00168C                     
  7472                           ; BSR set to: 0
  7473  00168C  51AE               	movf	(___flmul@temp+1)& (0+255),w,b
  7474  00168E  27A9               	addwf	___flmul@prod& (0+255),f,b
  7475  001690  0E00               	movlw	0
  7476  001692  23AA               	addwfc	(___flmul@prod+1)& (0+255),f,b
  7477  001694  23AB               	addwfc	(___flmul@prod+2)& (0+255),f,b
  7478  001696  23AC               	addwfc	(___flmul@prod+3)& (0+255),f,b
  7479  001698                     
  7480                           ; BSR set to: 0
  7481  001698  C0A6  F0A7         	movff	___flmul@grs+2,___flmul@grs+3
  7482  00169C  C0A5  F0A6         	movff	___flmul@grs+1,___flmul@grs+2
  7483  0016A0  C0A4  F0A5         	movff	___flmul@grs,___flmul@grs+1
  7484  0016A4  6BA4               	clrf	___flmul@grs& (0+255),b
  7485  0016A6                     
  7486                           ; BSR set to: 0
  7487  0016A6  502B               	movf	___flmul@a^0,w,c
  7488  0016A8  0228               	mulwf	(___flmul@b+1)^0,c
  7489  0016AA  006F FFCC  F0AD    	movff	prodl,___flmul@temp
  7490  0016B0  006F FFD0  F0AE    	movff	prodh,___flmul@temp+1
  7491  0016B6                     
  7492                           ; BSR set to: 0
  7493  0016B6  51AD               	movf	___flmul@temp& (0+255),w,b
  7494  0016B8  27A4               	addwf	___flmul@grs& (0+255),f,b
  7495  0016BA  51AE               	movf	(___flmul@temp+1)& (0+255),w,b
  7496  0016BC  23A5               	addwfc	(___flmul@grs+1)& (0+255),f,b
  7497  0016BE  0E00               	movlw	0
  7498  0016C0  23A6               	addwfc	(___flmul@grs+2)& (0+255),f,b
  7499  0016C2  0E00               	movlw	0
  7500  0016C4  23A7               	addwfc	(___flmul@grs+3)& (0+255),f,b
  7501  0016C6                     
  7502                           ; BSR set to: 0
  7503  0016C6  502C               	movf	(___flmul@a+1)^0,w,c
  7504  0016C8  0227               	mulwf	___flmul@b^0,c
  7505  0016CA  006F FFCC  F0AD    	movff	prodl,___flmul@temp
  7506  0016D0  006F FFD0  F0AE    	movff	prodh,___flmul@temp+1
  7507  0016D6                     
  7508                           ; BSR set to: 0
  7509  0016D6  51AD               	movf	___flmul@temp& (0+255),w,b
  7510  0016D8  27A4               	addwf	___flmul@grs& (0+255),f,b
  7511  0016DA  51AE               	movf	(___flmul@temp+1)& (0+255),w,b
  7512  0016DC  23A5               	addwfc	(___flmul@grs+1)& (0+255),f,b
  7513  0016DE  0E00               	movlw	0
  7514  0016E0  23A6               	addwfc	(___flmul@grs+2)& (0+255),f,b
  7515  0016E2  0E00               	movlw	0
  7516  0016E4  23A7               	addwfc	(___flmul@grs+3)& (0+255),f,b
  7517  0016E6                     
  7518                           ; BSR set to: 0
  7519  0016E6  C0A6  F0A7         	movff	___flmul@grs+2,___flmul@grs+3
  7520  0016EA  C0A5  F0A6         	movff	___flmul@grs+1,___flmul@grs+2
  7521  0016EE  C0A4  F0A5         	movff	___flmul@grs,___flmul@grs+1
  7522  0016F2  6BA4               	clrf	___flmul@grs& (0+255),b
  7523  0016F4  502B               	movf	___flmul@a^0,w,c
  7524  0016F6  0227               	mulwf	___flmul@b^0,c
  7525  0016F8  006F FFCC  F0AD    	movff	prodl,___flmul@temp
  7526  0016FE  006F FFD0  F0AE    	movff	prodh,___flmul@temp+1
  7527  001704                     
  7528                           ; BSR set to: 0
  7529  001704  51AD               	movf	___flmul@temp& (0+255),w,b
  7530  001706  27A4               	addwf	___flmul@grs& (0+255),f,b
  7531  001708  51AE               	movf	(___flmul@temp+1)& (0+255),w,b
  7532  00170A  23A5               	addwfc	(___flmul@grs+1)& (0+255),f,b
  7533  00170C  0E00               	movlw	0
  7534  00170E  23A6               	addwfc	(___flmul@grs+2)& (0+255),f,b
  7535  001710  0E00               	movlw	0
  7536  001712  23A7               	addwfc	(___flmul@grs+3)& (0+255),f,b
  7537  001714                     
  7538                           ; BSR set to: 0
  7539  001714  502D               	movf	(___flmul@a+2)^0,w,c
  7540  001716  0228               	mulwf	(___flmul@b+1)^0,c
  7541  001718  006F FFCC  F0AD    	movff	prodl,___flmul@temp
  7542  00171E  006F FFD0  F0AE    	movff	prodh,___flmul@temp+1
  7543  001724  51AD               	movf	___flmul@temp& (0+255),w,b
  7544  001726  27A9               	addwf	___flmul@prod& (0+255),f,b
  7545  001728  51AE               	movf	(___flmul@temp+1)& (0+255),w,b
  7546  00172A  23AA               	addwfc	(___flmul@prod+1)& (0+255),f,b
  7547  00172C  0E00               	movlw	0
  7548  00172E  23AB               	addwfc	(___flmul@prod+2)& (0+255),f,b
  7549  001730  0E00               	movlw	0
  7550  001732  23AC               	addwfc	(___flmul@prod+3)& (0+255),f,b
  7551  001734                     
  7552                           ; BSR set to: 0
  7553  001734  502C               	movf	(___flmul@a+1)^0,w,c
  7554  001736  0229               	mulwf	(___flmul@b+2)^0,c
  7555  001738  006F FFCC  F0AD    	movff	prodl,___flmul@temp
  7556  00173E  006F FFD0  F0AE    	movff	prodh,___flmul@temp+1
  7557  001744                     
  7558                           ; BSR set to: 0
  7559  001744  51AD               	movf	___flmul@temp& (0+255),w,b
  7560  001746  27A9               	addwf	___flmul@prod& (0+255),f,b
  7561  001748  51AE               	movf	(___flmul@temp+1)& (0+255),w,b
  7562  00174A  23AA               	addwfc	(___flmul@prod+1)& (0+255),f,b
  7563  00174C  0E00               	movlw	0
  7564  00174E  23AB               	addwfc	(___flmul@prod+2)& (0+255),f,b
  7565  001750  0E00               	movlw	0
  7566  001752  23AC               	addwfc	(___flmul@prod+3)& (0+255),f,b
  7567  001754  502D               	movf	(___flmul@a+2)^0,w,c
  7568  001756  0229               	mulwf	(___flmul@b+2)^0,c
  7569  001758  006F FFCC  F0AD    	movff	prodl,___flmul@temp
  7570  00175E  006F FFD0  F0AE    	movff	prodh,___flmul@temp+1
  7571  001764                     
  7572                           ; BSR set to: 0
  7573  001764  51AD               	movf	___flmul@temp& (0+255),w,b
  7574  001766  6E2F               	movwf	??___flmul^0,c
  7575  001768  51AE               	movf	(___flmul@temp+1)& (0+255),w,b
  7576  00176A  6E30               	movwf	(??___flmul+1)^0,c
  7577  00176C  6A31               	clrf	(??___flmul+2)^0,c
  7578  00176E  6A32               	clrf	(??___flmul+3)^0,c
  7579  001770  C031  F032         	movff	??___flmul+2,??___flmul+3
  7580  001774  C030  F031         	movff	??___flmul+1,??___flmul+2
  7581  001778  C02F  F030         	movff	??___flmul,??___flmul+1
  7582  00177C  6A2F               	clrf	??___flmul^0,c
  7583  00177E  502F               	movf	??___flmul^0,w,c
  7584  001780  27A9               	addwf	___flmul@prod& (0+255),f,b
  7585  001782  5030               	movf	(??___flmul+1)^0,w,c
  7586  001784  23AA               	addwfc	(___flmul@prod+1)& (0+255),f,b
  7587  001786  5031               	movf	(??___flmul+2)^0,w,c
  7588  001788  23AB               	addwfc	(___flmul@prod+2)& (0+255),f,b
  7589  00178A  5032               	movf	(??___flmul+3)^0,w,c
  7590  00178C  23AC               	addwfc	(___flmul@prod+3)& (0+255),f,b
  7591  00178E                     
  7592                           ; BSR set to: 0
  7593  00178E  C0A4  F02F         	movff	___flmul@grs,??___flmul
  7594  001792  C0A5  F030         	movff	___flmul@grs+1,??___flmul+1
  7595  001796  C0A6  F031         	movff	___flmul@grs+2,??___flmul+2
  7596  00179A  C0A7  F032         	movff	___flmul@grs+3,??___flmul+3
  7597  00179E  0E19               	movlw	25
  7598  0017A0  EFD7  F00B         	goto	u5260
  7599  0017A4                     u5265:
  7600  0017A4  90D8               	bcf	status,0,c
  7601  0017A6  3232               	rrcf	(??___flmul+3)^0,f,c
  7602  0017A8  3231               	rrcf	(??___flmul+2)^0,f,c
  7603  0017AA  3230               	rrcf	(??___flmul+1)^0,f,c
  7604  0017AC  322F               	rrcf	??___flmul^0,f,c
  7605  0017AE                     u5260:
  7606  0017AE  2EE8               	decfsz	wreg,f,c
  7607  0017B0  EFD2  F00B         	goto	u5265
  7608  0017B4  502F               	movf	??___flmul^0,w,c
  7609  0017B6  27A9               	addwf	___flmul@prod& (0+255),f,b
  7610  0017B8  5030               	movf	(??___flmul+1)^0,w,c
  7611  0017BA  23AA               	addwfc	(___flmul@prod+1)& (0+255),f,b
  7612  0017BC  5031               	movf	(??___flmul+2)^0,w,c
  7613  0017BE  23AB               	addwfc	(___flmul@prod+2)& (0+255),f,b
  7614  0017C0  5032               	movf	(??___flmul+3)^0,w,c
  7615  0017C2  23AC               	addwfc	(___flmul@prod+3)& (0+255),f,b
  7616  0017C4                     
  7617                           ; BSR set to: 0
  7618  0017C4  C0A6  F0A7         	movff	___flmul@grs+2,___flmul@grs+3
  7619  0017C8  C0A5  F0A6         	movff	___flmul@grs+1,___flmul@grs+2
  7620  0017CC  C0A4  F0A5         	movff	___flmul@grs,___flmul@grs+1
  7621  0017D0  6BA4               	clrf	___flmul@grs& (0+255),b
  7622  0017D2                     
  7623                           ; BSR set to: 0
  7624  0017D2  51A3               	movf	___flmul@aexp& (0+255),w,b
  7625  0017D4  C0A8  F02F         	movff	___flmul@bexp,??___flmul
  7626  0017D8  6A30               	clrf	(??___flmul+1)^0,c
  7627  0017DA  262F               	addwf	??___flmul^0,f,c
  7628  0017DC  0E00               	movlw	0
  7629  0017DE  2230               	addwfc	(??___flmul+1)^0,f,c
  7630  0017E0  0E82               	movlw	130
  7631  0017E2  242F               	addwf	??___flmul^0,w,c
  7632  0017E4  6FAD               	movwf	___flmul@temp& (0+255),b
  7633  0017E6  0EFF               	movlw	255
  7634  0017E8  2030               	addwfc	(??___flmul+1)^0,w,c
  7635  0017EA  6FAE               	movwf	(___flmul@temp+1)& (0+255),b
  7636  0017EC  EF0D  F00C         	goto	l6099
  7637  0017F0                     l6093:
  7638                           
  7639                           ; BSR set to: 0
  7640  0017F0  90D8               	bcf	status,0,c
  7641  0017F2  37A9               	rlcf	___flmul@prod& (0+255),f,b
  7642  0017F4  37AA               	rlcf	(___flmul@prod+1)& (0+255),f,b
  7643  0017F6  37AB               	rlcf	(___flmul@prod+2)& (0+255),f,b
  7644  0017F8  37AC               	rlcf	(___flmul@prod+3)& (0+255),f,b
  7645  0017FA                     
  7646                           ; BSR set to: 0
  7647  0017FA  AFA7               	btfss	(___flmul@grs+3)& (0+255),7,b
  7648  0017FC  EF02  F00C         	goto	u5271
  7649  001800  EF04  F00C         	goto	u5270
  7650  001804                     u5271:
  7651  001804  EF05  F00C         	goto	l1963
  7652  001808                     u5270:
  7653  001808                     
  7654                           ; BSR set to: 0
  7655  001808  81A9               	bsf	___flmul@prod& (0+255),0,b
  7656  00180A                     l1963:
  7657                           
  7658                           ; BSR set to: 0
  7659  00180A  90D8               	bcf	status,0,c
  7660  00180C  37A4               	rlcf	___flmul@grs& (0+255),f,b
  7661  00180E  37A5               	rlcf	(___flmul@grs+1)& (0+255),f,b
  7662  001810  37A6               	rlcf	(___flmul@grs+2)& (0+255),f,b
  7663  001812  37A7               	rlcf	(___flmul@grs+3)& (0+255),f,b
  7664  001814  07AD               	decf	___flmul@temp& (0+255),f,b
  7665  001816  A0D8               	btfss	status,0,c
  7666  001818  07AE               	decf	(___flmul@temp+1)& (0+255),f,b
  7667  00181A                     l6099:
  7668                           
  7669                           ; BSR set to: 0
  7670  00181A  AFAB               	btfss	(___flmul@prod+2)& (0+255),7,b
  7671  00181C  EF12  F00C         	goto	u5281
  7672  001820  EF14  F00C         	goto	u5280
  7673  001824                     u5281:
  7674  001824  EFF8  F00B         	goto	l6093
  7675  001828                     u5280:
  7676  001828                     
  7677                           ; BSR set to: 0
  7678  001828  0E00               	movlw	0
  7679  00182A  6FA3               	movwf	___flmul@aexp& (0+255),b
  7680  00182C                     
  7681                           ; BSR set to: 0
  7682  00182C  AFA7               	btfss	(___flmul@grs+3)& (0+255),7,b
  7683  00182E  EF1B  F00C         	goto	u5291
  7684  001832  EF1D  F00C         	goto	u5290
  7685  001836                     u5291:
  7686  001836  EF41  F00C         	goto	l1965
  7687  00183A                     u5290:
  7688  00183A                     
  7689                           ; BSR set to: 0
  7690  00183A  0EFF               	movlw	255
  7691  00183C  15A4               	andwf	___flmul@grs& (0+255),w,b
  7692  00183E  6E2F               	movwf	??___flmul^0,c
  7693  001840  0EFF               	movlw	255
  7694  001842  15A5               	andwf	(___flmul@grs+1)& (0+255),w,b
  7695  001844  6E30               	movwf	(??___flmul+1)^0,c
  7696  001846  0EFF               	movlw	255
  7697  001848  15A6               	andwf	(___flmul@grs+2)& (0+255),w,b
  7698  00184A  6E31               	movwf	(??___flmul+2)^0,c
  7699  00184C  0E7F               	movlw	127
  7700  00184E  15A7               	andwf	(___flmul@grs+3)& (0+255),w,b
  7701  001850  6E32               	movwf	(??___flmul+3)^0,c
  7702  001852  502F               	movf	??___flmul^0,w,c
  7703  001854  1030               	iorwf	(??___flmul+1)^0,w,c
  7704  001856  1031               	iorwf	(??___flmul+2)^0,w,c
  7705  001858  1032               	iorwf	(??___flmul+3)^0,w,c
  7706  00185A  B4D8               	btfsc	status,2,c
  7707  00185C  EF32  F00C         	goto	u5301
  7708  001860  EF34  F00C         	goto	u5300
  7709  001864                     u5301:
  7710  001864  EF38  F00C         	goto	l1966
  7711  001868                     u5300:
  7712  001868                     l6107:
  7713                           
  7714                           ; BSR set to: 0
  7715  001868  0E01               	movlw	1
  7716  00186A  6FA3               	movwf	___flmul@aexp& (0+255),b
  7717  00186C  EF41  F00C         	goto	l1965
  7718  001870                     l1966:
  7719                           
  7720                           ; BSR set to: 0
  7721  001870  A1A9               	btfss	___flmul@prod& (0+255),0,b
  7722  001872  EF3D  F00C         	goto	u5311
  7723  001876  EF3F  F00C         	goto	u5310
  7724  00187A                     u5311:
  7725  00187A  EF41  F00C         	goto	l1965
  7726  00187E                     u5310:
  7727  00187E  EF34  F00C         	goto	l6107
  7728  001882                     l1965:
  7729                           
  7730                           ; BSR set to: 0
  7731  001882  51A3               	movf	___flmul@aexp& (0+255),w,b
  7732  001884  B4D8               	btfsc	status,2,c
  7733  001886  EF47  F00C         	goto	u5321
  7734  00188A  EF49  F00C         	goto	u5320
  7735  00188E                     u5321:
  7736  00188E  EF6D  F00C         	goto	l6119
  7737  001892                     u5320:
  7738  001892                     
  7739                           ; BSR set to: 0
  7740  001892  0E01               	movlw	1
  7741  001894  27A9               	addwf	___flmul@prod& (0+255),f,b
  7742  001896  0E00               	movlw	0
  7743  001898  23AA               	addwfc	(___flmul@prod+1)& (0+255),f,b
  7744  00189A  23AB               	addwfc	(___flmul@prod+2)& (0+255),f,b
  7745  00189C  23AC               	addwfc	(___flmul@prod+3)& (0+255),f,b
  7746  00189E                     
  7747                           ; BSR set to: 0
  7748  00189E  A1AC               	btfss	(___flmul@prod+3)& (0+255),0,b
  7749  0018A0  EF54  F00C         	goto	u5331
  7750  0018A4  EF56  F00C         	goto	u5330
  7751  0018A8                     u5331:
  7752  0018A8  EF6D  F00C         	goto	l6119
  7753  0018AC                     u5330:
  7754  0018AC                     
  7755                           ; BSR set to: 0
  7756  0018AC  C0A9  F02F         	movff	___flmul@prod,??___flmul
  7757  0018B0  C0AA  F030         	movff	___flmul@prod+1,??___flmul+1
  7758  0018B4  C0AB  F031         	movff	___flmul@prod+2,??___flmul+2
  7759  0018B8  C0AC  F032         	movff	___flmul@prod+3,??___flmul+3
  7760  0018BC  3432               	rlcf	(??___flmul+3)^0,w,c
  7761  0018BE  3232               	rrcf	(??___flmul+3)^0,f,c
  7762  0018C0  3231               	rrcf	(??___flmul+2)^0,f,c
  7763  0018C2  3230               	rrcf	(??___flmul+1)^0,f,c
  7764  0018C4  322F               	rrcf	??___flmul^0,f,c
  7765  0018C6  C02F  F0A9         	movff	??___flmul,___flmul@prod
  7766  0018CA  C030  F0AA         	movff	??___flmul+1,___flmul@prod+1
  7767  0018CE  C031  F0AB         	movff	??___flmul+2,___flmul@prod+2
  7768  0018D2  C032  F0AC         	movff	??___flmul+3,___flmul@prod+3
  7769  0018D6                     
  7770                           ; BSR set to: 0
  7771  0018D6  4BAD               	infsnz	___flmul@temp& (0+255),f,b
  7772  0018D8  2BAE               	incf	(___flmul@temp+1)& (0+255),f,b
  7773  0018DA                     l6119:
  7774                           
  7775                           ; BSR set to: 0
  7776  0018DA  BFAE               	btfsc	(___flmul@temp+1)& (0+255),7,b
  7777  0018DC  EF78  F00C         	goto	u5341
  7778  0018E0  51AE               	movf	(___flmul@temp+1)& (0+255),w,b
  7779  0018E2  E108               	bnz	u5340
  7780  0018E4  29AD               	incf	___flmul@temp& (0+255),w,b
  7781  0018E6  A0D8               	btfss	status,0,c
  7782  0018E8  EF78  F00C         	goto	u5341
  7783  0018EC  EF7A  F00C         	goto	u5340
  7784  0018F0                     u5341:
  7785  0018F0  EF84  F00C         	goto	l6123
  7786  0018F4                     u5340:
  7787  0018F4                     
  7788                           ; BSR set to: 0
  7789  0018F4  0E00               	movlw	0
  7790  0018F6  6FA9               	movwf	___flmul@prod& (0+255),b
  7791  0018F8  0E00               	movlw	0
  7792  0018FA  6FAA               	movwf	(___flmul@prod+1)& (0+255),b
  7793  0018FC  0E80               	movlw	128
  7794  0018FE  6FAB               	movwf	(___flmul@prod+2)& (0+255),b
  7795  001900  0E7F               	movlw	127
  7796  001902  6FAC               	movwf	(___flmul@prod+3)& (0+255),b
  7797  001904  EFB2  F00C         	goto	l6135
  7798  001908                     l6123:
  7799                           
  7800                           ; BSR set to: 0
  7801  001908  BFAE               	btfsc	(___flmul@temp+1)& (0+255),7,b
  7802  00190A  EF91  F00C         	goto	u5350
  7803  00190E  51AE               	movf	(___flmul@temp+1)& (0+255),w,b
  7804  001910  E106               	bnz	u5351
  7805  001912  05AD               	decf	___flmul@temp& (0+255),w,b
  7806  001914  B0D8               	btfsc	status,0,c
  7807  001916  EF8F  F00C         	goto	u5351
  7808  00191A  EF91  F00C         	goto	u5350
  7809  00191E                     u5351:
  7810  00191E  EF9D  F00C         	goto	l1973
  7811  001922                     u5350:
  7812  001922                     
  7813                           ; BSR set to: 0
  7814  001922  0E00               	movlw	0
  7815  001924  6FA9               	movwf	___flmul@prod& (0+255),b
  7816  001926  0E00               	movlw	0
  7817  001928  6FAA               	movwf	(___flmul@prod+1)& (0+255),b
  7818  00192A  0E00               	movlw	0
  7819  00192C  6FAB               	movwf	(___flmul@prod+2)& (0+255),b
  7820  00192E  0E00               	movlw	0
  7821  001930  6FAC               	movwf	(___flmul@prod+3)& (0+255),b
  7822  001932  0E00               	movlw	0
  7823  001934  6FA2               	movwf	___flmul@sign& (0+255),b
  7824  001936  EFB2  F00C         	goto	l6135
  7825  00193A                     l1973:
  7826                           
  7827                           ; BSR set to: 0
  7828  00193A  C0AD  F0A8         	movff	___flmul@temp,___flmul@bexp
  7829  00193E                     
  7830                           ; BSR set to: 0
  7831  00193E  0EFF               	movlw	255
  7832  001940  17A9               	andwf	___flmul@prod& (0+255),f,b
  7833  001942  0EFF               	movlw	255
  7834  001944  17AA               	andwf	(___flmul@prod+1)& (0+255),f,b
  7835  001946  0E7F               	movlw	127
  7836  001948  17AB               	andwf	(___flmul@prod+2)& (0+255),f,b
  7837  00194A  0E00               	movlw	0
  7838  00194C  17AC               	andwf	(___flmul@prod+3)& (0+255),f,b
  7839  00194E                     
  7840                           ; BSR set to: 0
  7841  00194E  A1A8               	btfss	___flmul@bexp& (0+255),0,b
  7842  001950  EFAC  F00C         	goto	u5361
  7843  001954  EFAE  F00C         	goto	u5360
  7844  001958                     u5361:
  7845  001958  EFAF  F00C         	goto	l6133
  7846  00195C                     u5360:
  7847  00195C                     
  7848                           ; BSR set to: 0
  7849  00195C  8FAB               	bsf	(___flmul@prod+2)& (0+255),7,b
  7850  00195E                     l6133:
  7851                           
  7852                           ; BSR set to: 0
  7853  00195E  90D8               	bcf	status,0,c
  7854  001960  31A8               	rrcf	___flmul@bexp& (0+255),w,b
  7855  001962  6FAC               	movwf	(___flmul@prod+3)& (0+255),b
  7856  001964                     l6135:
  7857                           
  7858                           ; BSR set to: 0
  7859  001964  51A2               	movf	___flmul@sign& (0+255),w,b
  7860  001966  13AC               	iorwf	(___flmul@prod+3)& (0+255),f,b
  7861  001968                     
  7862                           ; BSR set to: 0
  7863  001968  C0A9  F027         	movff	___flmul@prod,?___flmul
  7864  00196C  C0AA  F028         	movff	___flmul@prod+1,?___flmul+1
  7865  001970  C0AB  F029         	movff	___flmul@prod+2,?___flmul+2
  7866  001974  C0AC  F02A         	movff	___flmul@prod+3,?___flmul+3
  7867  001978                     l1960:
  7868                           
  7869                           ; BSR set to: 0
  7870  001978  0012               	return		;funcret
  7871  00197A                     __end_of___flmul:
  7872                           	callstack 0
  7873                           
  7874 ;; *************** function ___flge *****************
  7875 ;; Defined at:
  7876 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  7877 ;; Parameters:    Size  Location     Type
  7878 ;;  ff1             4   38[COMRAM] unsigned char 
  7879 ;;  ff2             4   42[COMRAM] unsigned char 
  7880 ;; Auto vars:     Size  Location     Type
  7881 ;;		None
  7882 ;; Return value:  Size  Location     Type
  7883 ;;		None               void
  7884 ;; Registers used:
  7885 ;;		wreg, status,2, status,0
  7886 ;; Tracked objects:
  7887 ;;		On entry : 0/0
  7888 ;;		On exit  : 0/0
  7889 ;;		Unchanged: 0/0
  7890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7891 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7893 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7894 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7895 ;;Total ram usage:       12 bytes
  7896 ;; Hardware stack levels used: 1
  7897 ;; Hardware stack levels required when called: 8
  7898 ;; This function calls:
  7899 ;;		Nothing
  7900 ;; This function is called by:
  7901 ;;		_loop
  7902 ;; This function uses a non-reentrant model
  7903 ;;
  7904                           
  7905                           	psect	text35
  7906  002E42                     __ptext35:
  7907                           	callstack 0
  7908  002E42                     ___flge:
  7909                           	callstack 21
  7910  002E42  0E00               	movlw	0
  7911  002E44  1427               	andwf	___flge@ff1^0,w,c
  7912  002E46  6E2F               	movwf	??___flge^0,c
  7913  002E48  0E00               	movlw	0
  7914  002E4A  1428               	andwf	(___flge@ff1+1)^0,w,c
  7915  002E4C  6E30               	movwf	(??___flge+1)^0,c
  7916  002E4E  0E80               	movlw	128
  7917  002E50  1429               	andwf	(___flge@ff1+2)^0,w,c
  7918  002E52  6E31               	movwf	(??___flge+2)^0,c
  7919  002E54  0E7F               	movlw	127
  7920  002E56  142A               	andwf	(___flge@ff1+3)^0,w,c
  7921  002E58  6E32               	movwf	(??___flge+3)^0,c
  7922  002E5A  502F               	movf	??___flge^0,w,c
  7923  002E5C  1030               	iorwf	(??___flge+1)^0,w,c
  7924  002E5E  1031               	iorwf	(??___flge+2)^0,w,c
  7925  002E60  1032               	iorwf	(??___flge+3)^0,w,c
  7926  002E62  A4D8               	btfss	status,2,c
  7927  002E64  EF36  F017         	goto	u3961
  7928  002E68  EF38  F017         	goto	u3960
  7929  002E6C                     u3961:
  7930  002E6C  EF40  F017         	goto	l5219
  7931  002E70                     u3960:
  7932  002E70  0E00               	movlw	0
  7933  002E72  6E27               	movwf	___flge@ff1^0,c
  7934  002E74  0E00               	movlw	0
  7935  002E76  6E28               	movwf	(___flge@ff1+1)^0,c
  7936  002E78  0E00               	movlw	0
  7937  002E7A  6E29               	movwf	(___flge@ff1+2)^0,c
  7938  002E7C  0E00               	movlw	0
  7939  002E7E  6E2A               	movwf	(___flge@ff1+3)^0,c
  7940  002E80                     l5219:
  7941  002E80  0E00               	movlw	0
  7942  002E82  142B               	andwf	___flge@ff2^0,w,c
  7943  002E84  6E2F               	movwf	??___flge^0,c
  7944  002E86  0E00               	movlw	0
  7945  002E88  142C               	andwf	(___flge@ff2+1)^0,w,c
  7946  002E8A  6E30               	movwf	(??___flge+1)^0,c
  7947  002E8C  0E80               	movlw	128
  7948  002E8E  142D               	andwf	(___flge@ff2+2)^0,w,c
  7949  002E90  6E31               	movwf	(??___flge+2)^0,c
  7950  002E92  0E7F               	movlw	127
  7951  002E94  142E               	andwf	(___flge@ff2+3)^0,w,c
  7952  002E96  6E32               	movwf	(??___flge+3)^0,c
  7953  002E98  502F               	movf	??___flge^0,w,c
  7954  002E9A  1030               	iorwf	(??___flge+1)^0,w,c
  7955  002E9C  1031               	iorwf	(??___flge+2)^0,w,c
  7956  002E9E  1032               	iorwf	(??___flge+3)^0,w,c
  7957  002EA0  A4D8               	btfss	status,2,c
  7958  002EA2  EF55  F017         	goto	u3971
  7959  002EA6  EF57  F017         	goto	u3970
  7960  002EAA                     u3971:
  7961  002EAA  EF5F  F017         	goto	l5223
  7962  002EAE                     u3970:
  7963  002EAE  0E00               	movlw	0
  7964  002EB0  6E2B               	movwf	___flge@ff2^0,c
  7965  002EB2  0E00               	movlw	0
  7966  002EB4  6E2C               	movwf	(___flge@ff2+1)^0,c
  7967  002EB6  0E00               	movlw	0
  7968  002EB8  6E2D               	movwf	(___flge@ff2+2)^0,c
  7969  002EBA  0E00               	movlw	0
  7970  002EBC  6E2E               	movwf	(___flge@ff2+3)^0,c
  7971  002EBE                     l5223:
  7972  002EBE  AE2A               	btfss	(___flge@ff1+3)^0,7,c
  7973  002EC0  EF64  F017         	goto	u3981
  7974  002EC4  EF66  F017         	goto	u3980
  7975  002EC8                     u3981:
  7976  002EC8  EF6F  F017         	goto	l5227
  7977  002ECC                     u3980:
  7978  002ECC  6C27               	negf	___flge@ff1^0,c
  7979  002ECE  1E28               	comf	(___flge@ff1+1)^0,f,c
  7980  002ED0  B0D8               	btfsc	status,0,c
  7981  002ED2  2A28               	incf	(___flge@ff1+1)^0,f,c
  7982  002ED4  1E29               	comf	(___flge@ff1+2)^0,f,c
  7983  002ED6  B0D8               	btfsc	status,0,c
  7984  002ED8  2A29               	incf	(___flge@ff1+2)^0,f,c
  7985  002EDA  0E80               	movlw	128
  7986  002EDC  562A               	subfwb	(___flge@ff1+3)^0,f,c
  7987  002EDE                     l5227:
  7988  002EDE  AE2E               	btfss	(___flge@ff2+3)^0,7,c
  7989  002EE0  EF74  F017         	goto	u3991
  7990  002EE4  EF76  F017         	goto	u3990
  7991  002EE8                     u3991:
  7992  002EE8  EF7F  F017         	goto	l1607
  7993  002EEC                     u3990:
  7994  002EEC  6C2B               	negf	___flge@ff2^0,c
  7995  002EEE  1E2C               	comf	(___flge@ff2+1)^0,f,c
  7996  002EF0  B0D8               	btfsc	status,0,c
  7997  002EF2  2A2C               	incf	(___flge@ff2+1)^0,f,c
  7998  002EF4  1E2D               	comf	(___flge@ff2+2)^0,f,c
  7999  002EF6  B0D8               	btfsc	status,0,c
  8000  002EF8  2A2D               	incf	(___flge@ff2+2)^0,f,c
  8001  002EFA  0E80               	movlw	128
  8002  002EFC  562E               	subfwb	(___flge@ff2+3)^0,f,c
  8003  002EFE                     l1607:
  8004  002EFE  0E00               	movlw	0
  8005  002F00  1A27               	xorwf	___flge@ff1^0,f,c
  8006  002F02  0E00               	movlw	0
  8007  002F04  1A28               	xorwf	(___flge@ff1+1)^0,f,c
  8008  002F06  0E00               	movlw	0
  8009  002F08  1A29               	xorwf	(___flge@ff1+2)^0,f,c
  8010  002F0A  0E80               	movlw	128
  8011  002F0C  1A2A               	xorwf	(___flge@ff1+3)^0,f,c
  8012  002F0E  0E00               	movlw	0
  8013  002F10  1A2B               	xorwf	___flge@ff2^0,f,c
  8014  002F12  0E00               	movlw	0
  8015  002F14  1A2C               	xorwf	(___flge@ff2+1)^0,f,c
  8016  002F16  0E00               	movlw	0
  8017  002F18  1A2D               	xorwf	(___flge@ff2+2)^0,f,c
  8018  002F1A  0E80               	movlw	128
  8019  002F1C  1A2E               	xorwf	(___flge@ff2+3)^0,f,c
  8020  002F1E  502B               	movf	___flge@ff2^0,w,c
  8021  002F20  5C27               	subwf	___flge@ff1^0,w,c
  8022  002F22  502C               	movf	(___flge@ff2+1)^0,w,c
  8023  002F24  5828               	subwfb	(___flge@ff1+1)^0,w,c
  8024  002F26  502D               	movf	(___flge@ff2+2)^0,w,c
  8025  002F28  5829               	subwfb	(___flge@ff1+2)^0,w,c
  8026  002F2A  502E               	movf	(___flge@ff2+3)^0,w,c
  8027  002F2C  582A               	subwfb	(___flge@ff1+3)^0,w,c
  8028  002F2E  B0D8               	btfsc	status,0,c
  8029  002F30  EF9C  F017         	goto	u4001
  8030  002F34  EF9E  F017         	goto	u4000
  8031  002F38                     u4001:
  8032  002F38  EFA1  F017         	goto	l5233
  8033  002F3C                     u4000:
  8034  002F3C  90D8               	bcf	status,0,c
  8035  002F3E  EFA2  F017         	goto	l1612
  8036  002F42                     l5233:
  8037  002F42  80D8               	bsf	status,0,c
  8038  002F44                     l1612:
  8039  002F44  0012               	return		;funcret
  8040  002F46                     __end_of___flge:
  8041                           	callstack 0
  8042                           
  8043 ;; *************** function _SYSTEM_Initialize *****************
  8044 ;; Defined at:
  8045 ;;		line 50 in file "mcc_generated_files/mcc.c"
  8046 ;; Parameters:    Size  Location     Type
  8047 ;;		None
  8048 ;; Auto vars:     Size  Location     Type
  8049 ;;		None
  8050 ;; Return value:  Size  Location     Type
  8051 ;;                  1    wreg      void 
  8052 ;; Registers used:
  8053 ;;		wreg, status,2, status,0, cstack
  8054 ;; Tracked objects:
  8055 ;;		On entry : 0/0
  8056 ;;		On exit  : 0/0
  8057 ;;		Unchanged: 0/0
  8058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8062 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8063 ;;Total ram usage:        0 bytes
  8064 ;; Hardware stack levels used: 1
  8065 ;; Hardware stack levels required when called: 10
  8066 ;; This function calls:
  8067 ;;		_ADCC_Initialize
  8068 ;;		_CCP3_Initialize
  8069 ;;		_CCP4_Initialize
  8070 ;;		_CLC3_Initialize
  8071 ;;		_INTERRUPT_Initialize
  8072 ;;		_OSCILLATOR_Initialize
  8073 ;;		_PIN_MANAGER_Initialize
  8074 ;;		_PMD_Initialize
  8075 ;;		_PWM5_Initialize
  8076 ;;		_PWM6_Initialize
  8077 ;;		_PWM7_Initialize
  8078 ;;		_PWM8_Initialize
  8079 ;;		_SMT1_Initialize
  8080 ;;		_TMR2_Initialize
  8081 ;;		_TMR3_Initialize
  8082 ;;		_TMR4_Initialize
  8083 ;;		_TMR5_Initialize
  8084 ;;		_UART1_Initialize
  8085 ;; This function is called by:
  8086 ;;		_main
  8087 ;; This function uses a non-reentrant model
  8088 ;;
  8089                           
  8090                           	psect	text36
  8091  00372C                     __ptext36:
  8092                           	callstack 0
  8093  00372C                     _SYSTEM_Initialize:
  8094                           	callstack 20
  8095  00372C                     
  8096                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
  8097  00372C  EC70  F01B         	call	_INTERRUPT_Initialize	;wreg free
  8098                           
  8099                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  8100  003730  ECF2  F01E         	call	_PMD_Initialize	;wreg free
  8101                           
  8102                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  8103  003734  EC13  F018         	call	_PIN_MANAGER_Initialize	;wreg free
  8104                           
  8105                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  8106  003738  EC73  F01F         	call	_OSCILLATOR_Initialize	;wreg free
  8107  00373C                     
  8108                           ;mcc_generated_files/mcc.c: 56:     CCP3_Initialize();
  8109  00373C  EC44  F01E         	call	_CCP3_Initialize	;wreg free
  8110  003740                     
  8111                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
  8112  003740  EC18  F01B         	call	_ADCC_Initialize	;wreg free
  8113                           
  8114                           ;mcc_generated_files/mcc.c: 58:     TMR4_Initialize();
  8115  003744  EC72  F01E         	call	_TMR4_Initialize	;wreg free
  8116  003748                     
  8117                           ;mcc_generated_files/mcc.c: 59:     SMT1_Initialize();
  8118  003748  ECE5  F01D         	call	_SMT1_Initialize	;wreg free
  8119  00374C                     
  8120                           ;mcc_generated_files/mcc.c: 60:     TMR2_Initialize();
  8121  00374C  EC35  F01F         	call	_TMR2_Initialize	;wreg free
  8122  003750                     
  8123                           ;mcc_generated_files/mcc.c: 61:     PWM8_Initialize();
  8124  003750  EC43  F01F         	call	_PWM8_Initialize	;wreg free
  8125  003754                     
  8126                           ;mcc_generated_files/mcc.c: 62:     PWM6_Initialize();
  8127  003754  EC5B  F01F         	call	_PWM6_Initialize	;wreg free
  8128                           
  8129                           ;mcc_generated_files/mcc.c: 63:     CCP4_Initialize();
  8130  003758  EC2D  F01E         	call	_CCP4_Initialize	;wreg free
  8131  00375C                     
  8132                           ;mcc_generated_files/mcc.c: 64:     CLC3_Initialize();
  8133  00375C  EC88  F01E         	call	_CLC3_Initialize	;wreg free
  8134  003760                     
  8135                           ;mcc_generated_files/mcc.c: 65:     TMR3_Initialize();
  8136  003760  ECC1  F01C         	call	_TMR3_Initialize	;wreg free
  8137                           
  8138                           ;mcc_generated_files/mcc.c: 66:     PWM5_Initialize();
  8139  003764  EC67  F01F         	call	_PWM5_Initialize	;wreg free
  8140  003768                     
  8141                           ;mcc_generated_files/mcc.c: 67:     TMR5_Initialize();
  8142  003768  ECBB  F01B         	call	_TMR5_Initialize	;wreg free
  8143  00376C                     
  8144                           ;mcc_generated_files/mcc.c: 68:     PWM7_Initialize();
  8145  00376C  EC4F  F01F         	call	_PWM7_Initialize	;wreg free
  8146                           
  8147                           ;mcc_generated_files/mcc.c: 69:     UART1_Initialize();
  8148  003770  EC9B  F019         	call	_UART1_Initialize	;wreg free
  8149  003774  0012               	return		;funcret
  8150  003776                     __end_of_SYSTEM_Initialize:
  8151                           	callstack 0
  8152                           
  8153 ;; *************** function _UART1_Initialize *****************
  8154 ;; Defined at:
  8155 ;;		line 87 in file "mcc_generated_files/uart1.c"
  8156 ;; Parameters:    Size  Location     Type
  8157 ;;		None
  8158 ;; Auto vars:     Size  Location     Type
  8159 ;;		None
  8160 ;; Return value:  Size  Location     Type
  8161 ;;                  1    wreg      void 
  8162 ;; Registers used:
  8163 ;;		wreg, status,2, status,0, cstack
  8164 ;; Tracked objects:
  8165 ;;		On entry : 0/0
  8166 ;;		On exit  : 0/0
  8167 ;;		Unchanged: 0/0
  8168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8172 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8173 ;;Total ram usage:        0 bytes
  8174 ;; Hardware stack levels used: 1
  8175 ;; Hardware stack levels required when called: 9
  8176 ;; This function calls:
  8177 ;;		_UART1_SetErrorHandler
  8178 ;;		_UART1_SetFramingErrorHandler
  8179 ;;		_UART1_SetOverrunErrorHandler
  8180 ;;		_UART1_SetRxInterruptHandler
  8181 ;;		_UART1_SetTxInterruptHandler
  8182 ;; This function is called by:
  8183 ;;		_SYSTEM_Initialize
  8184 ;; This function uses a non-reentrant model
  8185 ;;
  8186                           
  8187                           	psect	text37
  8188  003336                     __ptext37:
  8189                           	callstack 0
  8190  003336                     _UART1_Initialize:
  8191                           	callstack 20
  8192  003336                     
  8193                           ;mcc_generated_files/uart1.c: 90:     PIE3bits.U1RXIE = 0;
  8194  003336  0139               	movlb	57	; () banked
  8195  003338  9793               	bcf	147,3,b	;volatile
  8196  00333A                     
  8197                           ; BSR set to: 57
  8198                           ;mcc_generated_files/uart1.c: 91:     UART1_SetRxInterruptHandler(UART1_Receive_ISR);
  8199  00333A  0E76               	movlw	low _UART1_Receive_ISR
  8200  00333C  6E14               	movwf	UART1_SetRxInterruptHandler@InterruptHandler^0,c
  8201  00333E  0E32               	movlw	high _UART1_Receive_ISR
  8202  003340  6E15               	movwf	(UART1_SetRxInterruptHandler@InterruptHandler+1)^0,c
  8203  003342  EC98  F01F         	call	_UART1_SetRxInterruptHandler	;wreg free
  8204  003346                     
  8205                           ;mcc_generated_files/uart1.c: 92:     PIE3bits.U1TXIE = 0;
  8206  003346  0139               	movlb	57	; () banked
  8207  003348  9993               	bcf	147,4,b	;volatile
  8208                           
  8209                           ;mcc_generated_files/uart1.c: 93:     UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
  8210  00334A  0E4E               	movlw	low _UART1_Transmit_ISR
  8211  00334C  6E14               	movwf	UART1_SetTxInterruptHandler@InterruptHandler^0,c
  8212  00334E  0E38               	movlw	high _UART1_Transmit_ISR
  8213  003350  6E15               	movwf	(UART1_SetTxInterruptHandler@InterruptHandler+1)^0,c
  8214  003352  EC93  F01F         	call	_UART1_SetTxInterruptHandler	;wreg free
  8215  003356                     
  8216                           ;mcc_generated_files/uart1.c: 98:     U1P1L = 0x00;
  8217  003356  0E00               	movlw	0
  8218  003358  013D               	movlb	61	; () banked
  8219  00335A  6FEC               	movwf	236,b	;volatile
  8220  00335C                     
  8221                           ; BSR set to: 61
  8222                           ;mcc_generated_files/uart1.c: 101:     U1P1H = 0x00;
  8223  00335C  0E00               	movlw	0
  8224  00335E  6FED               	movwf	237,b	;volatile
  8225  003360                     
  8226                           ; BSR set to: 61
  8227                           ;mcc_generated_files/uart1.c: 104:     U1P2L = 0x00;
  8228  003360  0E00               	movlw	0
  8229  003362  6FEE               	movwf	238,b	;volatile
  8230  003364                     
  8231                           ; BSR set to: 61
  8232                           ;mcc_generated_files/uart1.c: 107:     U1P2H = 0x00;
  8233  003364  0E00               	movlw	0
  8234  003366  6FEF               	movwf	239,b	;volatile
  8235  003368                     
  8236                           ; BSR set to: 61
  8237                           ;mcc_generated_files/uart1.c: 110:     U1P3L = 0x00;
  8238  003368  0E00               	movlw	0
  8239  00336A  6FF0               	movwf	240,b	;volatile
  8240  00336C                     
  8241                           ; BSR set to: 61
  8242                           ;mcc_generated_files/uart1.c: 113:     U1P3H = 0x00;
  8243  00336C  0E00               	movlw	0
  8244  00336E  6FF1               	movwf	241,b	;volatile
  8245  003370                     
  8246                           ; BSR set to: 61
  8247                           ;mcc_generated_files/uart1.c: 116:     U1CON0 = 0xB0;
  8248  003370  0EB0               	movlw	176
  8249  003372  6FF2               	movwf	242,b	;volatile
  8250  003374                     
  8251                           ; BSR set to: 61
  8252                           ;mcc_generated_files/uart1.c: 119:     U1CON1 = 0x80;
  8253  003374  0E80               	movlw	128
  8254  003376  6FF3               	movwf	243,b	;volatile
  8255  003378                     
  8256                           ; BSR set to: 61
  8257                           ;mcc_generated_files/uart1.c: 122:     U1CON2 = 0x00;
  8258  003378  0E00               	movlw	0
  8259  00337A  6FF4               	movwf	244,b	;volatile
  8260  00337C                     
  8261                           ; BSR set to: 61
  8262                           ;mcc_generated_files/uart1.c: 125:     U1BRGL = 0x8A;
  8263  00337C  0E8A               	movlw	138
  8264  00337E  6FF5               	movwf	245,b	;volatile
  8265  003380                     
  8266                           ; BSR set to: 61
  8267                           ;mcc_generated_files/uart1.c: 128:     U1BRGH = 0x00;
  8268  003380  0E00               	movlw	0
  8269  003382  6FF6               	movwf	246,b	;volatile
  8270  003384                     
  8271                           ; BSR set to: 61
  8272                           ;mcc_generated_files/uart1.c: 131:     U1FIFO = 0x00;
  8273  003384  0E00               	movlw	0
  8274  003386  6FF7               	movwf	247,b	;volatile
  8275  003388                     
  8276                           ; BSR set to: 61
  8277                           ;mcc_generated_files/uart1.c: 134:     U1UIR = 0x00;
  8278  003388  0E00               	movlw	0
  8279  00338A  6FF8               	movwf	248,b	;volatile
  8280  00338C                     
  8281                           ; BSR set to: 61
  8282                           ;mcc_generated_files/uart1.c: 137:     U1ERRIR = 0x00;
  8283  00338C  0E00               	movlw	0
  8284  00338E  6FF9               	movwf	249,b	;volatile
  8285  003390                     
  8286                           ; BSR set to: 61
  8287                           ;mcc_generated_files/uart1.c: 140:     U1ERRIE = 0x00;
  8288  003390  0E00               	movlw	0
  8289  003392  6FFA               	movwf	250,b	;volatile
  8290  003394                     
  8291                           ; BSR set to: 61
  8292                           ;mcc_generated_files/uart1.c: 143:     UART1_SetFramingErrorHandler(UART1_DefaultFraming
      +                          ErrorHandler);
  8293  003394  0E8E               	movlw	low _UART1_DefaultFramingErrorHandler
  8294  003396  6E14               	movwf	UART1_SetFramingErrorHandler@interruptHandler^0,c
  8295  003398  0E3F               	movlw	high _UART1_DefaultFramingErrorHandler
  8296  00339A  6E15               	movwf	(UART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  8297  00339C  ECA2  F01F         	call	_UART1_SetFramingErrorHandler	;wreg free
  8298  0033A0                     
  8299                           ;mcc_generated_files/uart1.c: 144:     UART1_SetOverrunErrorHandler(UART1_DefaultOverrun
      +                          ErrorHandler);
  8300  0033A0  0E8C               	movlw	low _UART1_DefaultOverrunErrorHandler
  8301  0033A2  6E14               	movwf	UART1_SetOverrunErrorHandler@interruptHandler^0,c
  8302  0033A4  0E3F               	movlw	high _UART1_DefaultOverrunErrorHandler
  8303  0033A6  6E15               	movwf	(UART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  8304  0033A8  EC9D  F01F         	call	_UART1_SetOverrunErrorHandler	;wreg free
  8305  0033AC                     
  8306                           ;mcc_generated_files/uart1.c: 145:     UART1_SetErrorHandler(UART1_DefaultErrorHandler);
  8307  0033AC  0E80               	movlw	low _UART1_DefaultErrorHandler
  8308  0033AE  6E14               	movwf	UART1_SetErrorHandler@interruptHandler^0,c
  8309  0033B0  0E3F               	movlw	high _UART1_DefaultErrorHandler
  8310  0033B2  6E15               	movwf	(UART1_SetErrorHandler@interruptHandler+1)^0,c
  8311  0033B4  ECA7  F01F         	call	_UART1_SetErrorHandler	;wreg free
  8312                           
  8313                           ;mcc_generated_files/uart1.c: 147:     uart1RxLastError.status = 0;
  8314  0033B8  0E00               	movlw	0
  8315  0033BA  6E42               	movwf	_uart1RxLastError^0,c	;volatile
  8316                           
  8317                           ;mcc_generated_files/uart1.c: 150:     uart1TxHead = 0;
  8318  0033BC  0E00               	movlw	0
  8319  0033BE  6E47               	movwf	_uart1TxHead^0,c	;volatile
  8320                           
  8321                           ;mcc_generated_files/uart1.c: 151:     uart1TxTail = 0;
  8322  0033C0  0E00               	movlw	0
  8323  0033C2  6E46               	movwf	_uart1TxTail^0,c	;volatile
  8324                           
  8325                           ;mcc_generated_files/uart1.c: 152:     uart1TxBufferRemaining = sizeof(uart1TxBuffer);
  8326  0033C4  0E08               	movlw	8
  8327  0033C6  6E4C               	movwf	_uart1TxBufferRemaining^0,c	;volatile
  8328                           
  8329                           ;mcc_generated_files/uart1.c: 153:     uart1RxHead = 0;
  8330  0033C8  0E00               	movlw	0
  8331  0033CA  6E45               	movwf	_uart1RxHead^0,c	;volatile
  8332                           
  8333                           ;mcc_generated_files/uart1.c: 154:     uart1RxTail = 0;
  8334  0033CC  0E00               	movlw	0
  8335  0033CE  6E44               	movwf	_uart1RxTail^0,c	;volatile
  8336                           
  8337                           ;mcc_generated_files/uart1.c: 155:     uart1RxCount = 0;
  8338  0033D0  0E00               	movlw	0
  8339  0033D2  6E43               	movwf	_uart1RxCount^0,c	;volatile
  8340  0033D4                     
  8341                           ;mcc_generated_files/uart1.c: 158:     PIE3bits.U1RXIE = 1;
  8342  0033D4  0139               	movlb	57	; () banked
  8343  0033D6  8793               	bsf	147,3,b	;volatile
  8344  0033D8                     
  8345                           ; BSR set to: 57
  8346  0033D8  0012               	return		;funcret
  8347  0033DA                     __end_of_UART1_Initialize:
  8348                           	callstack 0
  8349                           
  8350 ;; *************** function _UART1_SetTxInterruptHandler *****************
  8351 ;; Defined at:
  8352 ;;		line 333 in file "mcc_generated_files/uart1.c"
  8353 ;; Parameters:    Size  Location     Type
  8354 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
  8355 ;;		 -> UART1_Transmit_ISR(1), 
  8356 ;; Auto vars:     Size  Location     Type
  8357 ;;		None
  8358 ;; Return value:  Size  Location     Type
  8359 ;;                  1    wreg      void 
  8360 ;; Registers used:
  8361 ;;		wreg, status,2, status,0
  8362 ;; Tracked objects:
  8363 ;;		On entry : 0/0
  8364 ;;		On exit  : 0/0
  8365 ;;		Unchanged: 0/0
  8366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8367 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8370 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8371 ;;Total ram usage:        2 bytes
  8372 ;; Hardware stack levels used: 1
  8373 ;; Hardware stack levels required when called: 8
  8374 ;; This function calls:
  8375 ;;		Nothing
  8376 ;; This function is called by:
  8377 ;;		_UART1_Initialize
  8378 ;; This function uses a non-reentrant model
  8379 ;;
  8380                           
  8381                           	psect	text38
  8382  003F26                     __ptext38:
  8383                           	callstack 0
  8384  003F26                     _UART1_SetTxInterruptHandler:
  8385                           	callstack 20
  8386  003F26                     
  8387                           ;mcc_generated_files/uart1.c: 334:     UART1_TxInterruptHandler = InterruptHandler;
  8388  003F26  C014  F0F4         	movff	UART1_SetTxInterruptHandler@InterruptHandler,_UART1_TxInterruptHandler
  8389  003F2A  C015  F0F5         	movff	UART1_SetTxInterruptHandler@InterruptHandler+1,_UART1_TxInterruptHandler+1
  8390  003F2E  0012               	return		;funcret
  8391  003F30                     __end_of_UART1_SetTxInterruptHandler:
  8392                           	callstack 0
  8393                           
  8394 ;; *************** function _UART1_SetRxInterruptHandler *****************
  8395 ;; Defined at:
  8396 ;;		line 329 in file "mcc_generated_files/uart1.c"
  8397 ;; Parameters:    Size  Location     Type
  8398 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
  8399 ;;		 -> UART1_Receive_ISR(1), 
  8400 ;; Auto vars:     Size  Location     Type
  8401 ;;		None
  8402 ;; Return value:  Size  Location     Type
  8403 ;;                  1    wreg      void 
  8404 ;; Registers used:
  8405 ;;		wreg, status,2, status,0
  8406 ;; Tracked objects:
  8407 ;;		On entry : 0/0
  8408 ;;		On exit  : 0/0
  8409 ;;		Unchanged: 0/0
  8410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8411 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8414 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8415 ;;Total ram usage:        2 bytes
  8416 ;; Hardware stack levels used: 1
  8417 ;; Hardware stack levels required when called: 8
  8418 ;; This function calls:
  8419 ;;		Nothing
  8420 ;; This function is called by:
  8421 ;;		_UART1_Initialize
  8422 ;; This function uses a non-reentrant model
  8423 ;;
  8424                           
  8425                           	psect	text39
  8426  003F30                     __ptext39:
  8427                           	callstack 0
  8428  003F30                     _UART1_SetRxInterruptHandler:
  8429                           	callstack 20
  8430  003F30                     
  8431                           ;mcc_generated_files/uart1.c: 330:     UART1_RxInterruptHandler = InterruptHandler;
  8432  003F30  C014  F0F6         	movff	UART1_SetRxInterruptHandler@InterruptHandler,_UART1_RxInterruptHandler
  8433  003F34  C015  F0F7         	movff	UART1_SetRxInterruptHandler@InterruptHandler+1,_UART1_RxInterruptHandler+1
  8434  003F38  0012               	return		;funcret
  8435  003F3A                     __end_of_UART1_SetRxInterruptHandler:
  8436                           	callstack 0
  8437                           
  8438 ;; *************** function _UART1_SetOverrunErrorHandler *****************
  8439 ;; Defined at:
  8440 ;;		line 319 in file "mcc_generated_files/uart1.c"
  8441 ;; Parameters:    Size  Location     Type
  8442 ;;  interruptHan    2   19[COMRAM] PTR FTN()void 
  8443 ;;		 -> UART1_DefaultOverrunErrorHandler(1), 
  8444 ;; Auto vars:     Size  Location     Type
  8445 ;;		None
  8446 ;; Return value:  Size  Location     Type
  8447 ;;                  1    wreg      void 
  8448 ;; Registers used:
  8449 ;;		wreg, status,2, status,0
  8450 ;; Tracked objects:
  8451 ;;		On entry : 0/0
  8452 ;;		On exit  : 0/0
  8453 ;;		Unchanged: 0/0
  8454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8455 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8458 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8459 ;;Total ram usage:        2 bytes
  8460 ;; Hardware stack levels used: 1
  8461 ;; Hardware stack levels required when called: 8
  8462 ;; This function calls:
  8463 ;;		Nothing
  8464 ;; This function is called by:
  8465 ;;		_UART1_Initialize
  8466 ;; This function uses a non-reentrant model
  8467 ;;
  8468                           
  8469                           	psect	text40
  8470  003F3A                     __ptext40:
  8471                           	callstack 0
  8472  003F3A                     _UART1_SetOverrunErrorHandler:
  8473                           	callstack 20
  8474  003F3A                     
  8475                           ;mcc_generated_files/uart1.c: 320:     UART1_OverrunErrorHandler = interruptHandler;
  8476  003F3A  C014  F0F0         	movff	UART1_SetOverrunErrorHandler@interruptHandler,_UART1_OverrunErrorHandler
  8477  003F3E  C015  F0F1         	movff	UART1_SetOverrunErrorHandler@interruptHandler+1,_UART1_OverrunErrorHandler+1
  8478  003F42  0012               	return		;funcret
  8479  003F44                     __end_of_UART1_SetOverrunErrorHandler:
  8480                           	callstack 0
  8481                           
  8482 ;; *************** function _UART1_SetFramingErrorHandler *****************
  8483 ;; Defined at:
  8484 ;;		line 315 in file "mcc_generated_files/uart1.c"
  8485 ;; Parameters:    Size  Location     Type
  8486 ;;  interruptHan    2   19[COMRAM] PTR FTN()void 
  8487 ;;		 -> UART1_DefaultFramingErrorHandler(1), 
  8488 ;; Auto vars:     Size  Location     Type
  8489 ;;		None
  8490 ;; Return value:  Size  Location     Type
  8491 ;;                  1    wreg      void 
  8492 ;; Registers used:
  8493 ;;		wreg, status,2, status,0
  8494 ;; Tracked objects:
  8495 ;;		On entry : 0/0
  8496 ;;		On exit  : 0/0
  8497 ;;		Unchanged: 0/0
  8498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8499 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8502 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8503 ;;Total ram usage:        2 bytes
  8504 ;; Hardware stack levels used: 1
  8505 ;; Hardware stack levels required when called: 8
  8506 ;; This function calls:
  8507 ;;		Nothing
  8508 ;; This function is called by:
  8509 ;;		_UART1_Initialize
  8510 ;; This function uses a non-reentrant model
  8511 ;;
  8512                           
  8513                           	psect	text41
  8514  003F44                     __ptext41:
  8515                           	callstack 0
  8516  003F44                     _UART1_SetFramingErrorHandler:
  8517                           	callstack 20
  8518  003F44                     
  8519                           ;mcc_generated_files/uart1.c: 316:     UART1_FramingErrorHandler = interruptHandler;
  8520  003F44  C014  F0F2         	movff	UART1_SetFramingErrorHandler@interruptHandler,_UART1_FramingErrorHandler
  8521  003F48  C015  F0F3         	movff	UART1_SetFramingErrorHandler@interruptHandler+1,_UART1_FramingErrorHandler+1
  8522  003F4C  0012               	return		;funcret
  8523  003F4E                     __end_of_UART1_SetFramingErrorHandler:
  8524                           	callstack 0
  8525                           
  8526 ;; *************** function _UART1_SetErrorHandler *****************
  8527 ;; Defined at:
  8528 ;;		line 323 in file "mcc_generated_files/uart1.c"
  8529 ;; Parameters:    Size  Location     Type
  8530 ;;  interruptHan    2   19[COMRAM] PTR FTN()void 
  8531 ;;		 -> UART1_DefaultErrorHandler(1), 
  8532 ;; Auto vars:     Size  Location     Type
  8533 ;;		None
  8534 ;; Return value:  Size  Location     Type
  8535 ;;                  1    wreg      void 
  8536 ;; Registers used:
  8537 ;;		wreg, status,2, status,0
  8538 ;; Tracked objects:
  8539 ;;		On entry : 0/0
  8540 ;;		On exit  : 0/0
  8541 ;;		Unchanged: 0/0
  8542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8543 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8546 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8547 ;;Total ram usage:        2 bytes
  8548 ;; Hardware stack levels used: 1
  8549 ;; Hardware stack levels required when called: 8
  8550 ;; This function calls:
  8551 ;;		Nothing
  8552 ;; This function is called by:
  8553 ;;		_UART1_Initialize
  8554 ;; This function uses a non-reentrant model
  8555 ;;
  8556                           
  8557                           	psect	text42
  8558  003F4E                     __ptext42:
  8559                           	callstack 0
  8560  003F4E                     _UART1_SetErrorHandler:
  8561                           	callstack 20
  8562  003F4E                     
  8563                           ;mcc_generated_files/uart1.c: 324:     UART1_ErrorHandler = interruptHandler;
  8564  003F4E  C014  F0EE         	movff	UART1_SetErrorHandler@interruptHandler,_UART1_ErrorHandler
  8565  003F52  C015  F0EF         	movff	UART1_SetErrorHandler@interruptHandler+1,_UART1_ErrorHandler+1
  8566  003F56  0012               	return		;funcret
  8567  003F58                     __end_of_UART1_SetErrorHandler:
  8568                           	callstack 0
  8569                           
  8570 ;; *************** function _TMR5_Initialize *****************
  8571 ;; Defined at:
  8572 ;;		line 67 in file "mcc_generated_files/tmr5.c"
  8573 ;; Parameters:    Size  Location     Type
  8574 ;;		None
  8575 ;; Auto vars:     Size  Location     Type
  8576 ;;		None
  8577 ;; Return value:  Size  Location     Type
  8578 ;;                  1    wreg      void 
  8579 ;; Registers used:
  8580 ;;		wreg, status,2, status,0, cstack
  8581 ;; Tracked objects:
  8582 ;;		On entry : 0/0
  8583 ;;		On exit  : 0/0
  8584 ;;		Unchanged: 0/0
  8585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8588 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8589 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8590 ;;Total ram usage:        2 bytes
  8591 ;; Hardware stack levels used: 1
  8592 ;; Hardware stack levels required when called: 9
  8593 ;; This function calls:
  8594 ;;		_TMR5_SetGateInterruptHandler
  8595 ;; This function is called by:
  8596 ;;		_SYSTEM_Initialize
  8597 ;; This function uses a non-reentrant model
  8598 ;;
  8599                           
  8600                           	psect	text43
  8601  003776                     __ptext43:
  8602                           	callstack 0
  8603  003776                     _TMR5_Initialize:
  8604                           	callstack 20
  8605  003776                     
  8606                           ;mcc_generated_files/tmr5.c: 72:     T5GCON = 0xC0;
  8607  003776  0EC0               	movlw	192
  8608  003778  6E9B               	movwf	155,c	;volatile
  8609                           
  8610                           ;mcc_generated_files/tmr5.c: 75:     T5GATE = 0x00;
  8611  00377A  0E00               	movlw	0
  8612  00377C  6E9C               	movwf	156,c	;volatile
  8613                           
  8614                           ;mcc_generated_files/tmr5.c: 78:     T5CLK = 0x05;
  8615  00377E  0E05               	movlw	5
  8616  003780  6E9D               	movwf	157,c	;volatile
  8617                           
  8618                           ;mcc_generated_files/tmr5.c: 81:     TMR5H = 0x00;
  8619  003782  0E00               	movlw	0
  8620  003784  6E99               	movwf	153,c	;volatile
  8621                           
  8622                           ;mcc_generated_files/tmr5.c: 84:     TMR5L = 0x00;
  8623  003786  0E00               	movlw	0
  8624  003788  6E98               	movwf	152,c	;volatile
  8625  00378A                     
  8626                           ;mcc_generated_files/tmr5.c: 87:     PIR8bits.TMR5IF = 0;
  8627  00378A  0139               	movlb	57	; () banked
  8628  00378C  9DA8               	bcf	168,6,b	;volatile
  8629  00378E                     
  8630                           ; BSR set to: 57
  8631                           ;mcc_generated_files/tmr5.c: 90:     timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
  8632  00378E  5098               	movf	152,w,c	;volatile
  8633  003790  006F FE64  F016    	movff	16281,??_TMR5_Initialize	;volatile
  8634  003796  6A17               	clrf	(??_TMR5_Initialize+1)^0,c
  8635  003798  C016  F017         	movff	??_TMR5_Initialize,??_TMR5_Initialize+1
  8636  00379C  6A16               	clrf	??_TMR5_Initialize^0,c
  8637  00379E  1016               	iorwf	??_TMR5_Initialize^0,w,c
  8638  0037A0  0100               	movlb	0	; () banked
  8639  0037A2  6FEC               	movwf	_timer5ReloadVal& (0+255),b	;volatile
  8640  0037A4  5017               	movf	(??_TMR5_Initialize+1)^0,w,c
  8641  0037A6  6FED               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
  8642  0037A8                     
  8643                           ; BSR set to: 0
  8644                           ;mcc_generated_files/tmr5.c: 93:     PIR8bits.TMR5GIF = 0;
  8645  0037A8  0139               	movlb	57	; () banked
  8646  0037AA  9FA8               	bcf	168,7,b	;volatile
  8647  0037AC                     
  8648                           ; BSR set to: 57
  8649                           ;mcc_generated_files/tmr5.c: 96:     PIE8bits.TMR5GIE = 1;
  8650  0037AC  8F98               	bsf	152,7,b	;volatile
  8651  0037AE                     
  8652                           ; BSR set to: 57
  8653                           ;mcc_generated_files/tmr5.c: 99:     TMR5_SetGateInterruptHandler(TMR5_DefaultGateInterr
      +                          uptHandler);
  8654  0037AE  0E4C               	movlw	low _TMR5_DefaultGateInterruptHandler
  8655  0037B0  6E14               	movwf	TMR5_SetGateInterruptHandler@InterruptHandler^0,c
  8656  0037B2  0E3E               	movlw	high _TMR5_DefaultGateInterruptHandler
  8657  0037B4  6E15               	movwf	(TMR5_SetGateInterruptHandler@InterruptHandler+1)^0,c
  8658  0037B6  ECAC  F01F         	call	_TMR5_SetGateInterruptHandler	;wreg free
  8659  0037BA                     
  8660                           ;mcc_generated_files/tmr5.c: 102:     T5CON = 0x03;
  8661  0037BA  0E03               	movlw	3
  8662  0037BC  6E9A               	movwf	154,c	;volatile
  8663  0037BE  0012               	return		;funcret
  8664  0037C0                     __end_of_TMR5_Initialize:
  8665                           	callstack 0
  8666                           
  8667 ;; *************** function _TMR5_SetGateInterruptHandler *****************
  8668 ;; Defined at:
  8669 ;;		line 186 in file "mcc_generated_files/tmr5.c"
  8670 ;; Parameters:    Size  Location     Type
  8671 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
  8672 ;;		 -> TMR5_DefaultGateInterruptHandler(1), 
  8673 ;; Auto vars:     Size  Location     Type
  8674 ;;		None
  8675 ;; Return value:  Size  Location     Type
  8676 ;;                  1    wreg      void 
  8677 ;; Registers used:
  8678 ;;		wreg, status,2, status,0
  8679 ;; Tracked objects:
  8680 ;;		On entry : 0/0
  8681 ;;		On exit  : 0/0
  8682 ;;		Unchanged: 0/0
  8683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8684 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8687 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8688 ;;Total ram usage:        2 bytes
  8689 ;; Hardware stack levels used: 1
  8690 ;; Hardware stack levels required when called: 8
  8691 ;; This function calls:
  8692 ;;		Nothing
  8693 ;; This function is called by:
  8694 ;;		_TMR5_Initialize
  8695 ;; This function uses a non-reentrant model
  8696 ;;
  8697                           
  8698                           	psect	text44
  8699  003F58                     __ptext44:
  8700                           	callstack 0
  8701  003F58                     _TMR5_SetGateInterruptHandler:
  8702                           	callstack 20
  8703  003F58                     
  8704                           ;mcc_generated_files/tmr5.c: 187:     TMR5_GateInterruptHandler = InterruptHandler;
  8705  003F58  C014  F0EA         	movff	TMR5_SetGateInterruptHandler@InterruptHandler,_TMR5_GateInterruptHandler
  8706  003F5C  C015  F0EB         	movff	TMR5_SetGateInterruptHandler@InterruptHandler+1,_TMR5_GateInterruptHandler+1
  8707  003F60  0012               	return		;funcret
  8708  003F62                     __end_of_TMR5_SetGateInterruptHandler:
  8709                           	callstack 0
  8710                           
  8711 ;; *************** function _TMR4_Initialize *****************
  8712 ;; Defined at:
  8713 ;;		line 65 in file "mcc_generated_files/tmr4.c"
  8714 ;; Parameters:    Size  Location     Type
  8715 ;;		None
  8716 ;; Auto vars:     Size  Location     Type
  8717 ;;		None
  8718 ;; Return value:  Size  Location     Type
  8719 ;;                  1    wreg      void 
  8720 ;; Registers used:
  8721 ;;		wreg, status,2, status,0, cstack
  8722 ;; Tracked objects:
  8723 ;;		On entry : 0/0
  8724 ;;		On exit  : 0/0
  8725 ;;		Unchanged: 0/0
  8726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8730 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8731 ;;Total ram usage:        0 bytes
  8732 ;; Hardware stack levels used: 1
  8733 ;; Hardware stack levels required when called: 9
  8734 ;; This function calls:
  8735 ;;		_TMR4_SetInterruptHandler
  8736 ;; This function is called by:
  8737 ;;		_SYSTEM_Initialize
  8738 ;; This function uses a non-reentrant model
  8739 ;;
  8740                           
  8741                           	psect	text45
  8742  003CE4                     __ptext45:
  8743                           	callstack 0
  8744  003CE4                     _TMR4_Initialize:
  8745                           	callstack 20
  8746  003CE4                     
  8747                           ;mcc_generated_files/tmr4.c: 70:     T4CLKCON = 0x01;
  8748  003CE4  0E01               	movlw	1
  8749  003CE6  6EA2               	movwf	162,c	;volatile
  8750                           
  8751                           ;mcc_generated_files/tmr4.c: 73:     T4HLT = 0x00;
  8752  003CE8  0E00               	movlw	0
  8753  003CEA  6EA1               	movwf	161,c	;volatile
  8754                           
  8755                           ;mcc_generated_files/tmr4.c: 76:     T4RST = 0x00;
  8756  003CEC  0E00               	movlw	0
  8757  003CEE  6EA3               	movwf	163,c	;volatile
  8758                           
  8759                           ;mcc_generated_files/tmr4.c: 79:     T4PR = 0xF9;
  8760  003CF0  0EF9               	movlw	249
  8761  003CF2  6E9F               	movwf	159,c	;volatile
  8762                           
  8763                           ;mcc_generated_files/tmr4.c: 82:     T4TMR = 0x00;
  8764  003CF4  0E00               	movlw	0
  8765  003CF6  6E9E               	movwf	158,c	;volatile
  8766  003CF8                     
  8767                           ;mcc_generated_files/tmr4.c: 85:     PIR7bits.TMR4IF = 0;
  8768  003CF8  0139               	movlb	57	; () banked
  8769  003CFA  91A7               	bcf	167,0,b	;volatile
  8770  003CFC                     
  8771                           ; BSR set to: 57
  8772                           ;mcc_generated_files/tmr4.c: 88:     PIE7bits.TMR4IE = 1;
  8773  003CFC  8197               	bsf	151,0,b	;volatile
  8774  003CFE                     
  8775                           ; BSR set to: 57
  8776                           ;mcc_generated_files/tmr4.c: 91:     TMR4_SetInterruptHandler(TMR4_DefaultInterruptHandl
      +                          er);
  8777  003CFE  0E90               	movlw	low _TMR4_DefaultInterruptHandler
  8778  003D00  6E14               	movwf	TMR4_SetInterruptHandler@InterruptHandler^0,c
  8779  003D02  0E3F               	movlw	high _TMR4_DefaultInterruptHandler
  8780  003D04  6E15               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)^0,c
  8781  003D06  ECB1  F01F         	call	_TMR4_SetInterruptHandler	;wreg free
  8782  003D0A                     
  8783                           ;mcc_generated_files/tmr4.c: 94:     T4CON = 0xE0;
  8784  003D0A  0EE0               	movlw	224
  8785  003D0C  6EA0               	movwf	160,c	;volatile
  8786  003D0E  0012               	return		;funcret
  8787  003D10                     __end_of_TMR4_Initialize:
  8788                           	callstack 0
  8789                           
  8790 ;; *************** function _TMR4_SetInterruptHandler *****************
  8791 ;; Defined at:
  8792 ;;		line 194 in file "mcc_generated_files/tmr4.c"
  8793 ;; Parameters:    Size  Location     Type
  8794 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
  8795 ;;		 -> TMR4_10msISR(1), TMR4_DefaultInterruptHandler(1), 
  8796 ;; Auto vars:     Size  Location     Type
  8797 ;;		None
  8798 ;; Return value:  Size  Location     Type
  8799 ;;                  1    wreg      void 
  8800 ;; Registers used:
  8801 ;;		wreg, status,2, status,0
  8802 ;; Tracked objects:
  8803 ;;		On entry : 0/0
  8804 ;;		On exit  : 0/0
  8805 ;;		Unchanged: 0/0
  8806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8807 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8810 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8811 ;;Total ram usage:        2 bytes
  8812 ;; Hardware stack levels used: 1
  8813 ;; Hardware stack levels required when called: 8
  8814 ;; This function calls:
  8815 ;;		Nothing
  8816 ;; This function is called by:
  8817 ;;		_TMR4_Initialize
  8818 ;;		_main
  8819 ;; This function uses a non-reentrant model
  8820 ;;
  8821                           
  8822                           	psect	text46
  8823  003F62                     __ptext46:
  8824                           	callstack 0
  8825  003F62                     _TMR4_SetInterruptHandler:
  8826                           	callstack 22
  8827  003F62                     
  8828                           ;mcc_generated_files/tmr4.c: 195:     TMR4_InterruptHandler = InterruptHandler;
  8829  003F62  C014  F0E6         	movff	TMR4_SetInterruptHandler@InterruptHandler,_TMR4_InterruptHandler
  8830  003F66  C015  F0E7         	movff	TMR4_SetInterruptHandler@InterruptHandler+1,_TMR4_InterruptHandler+1
  8831  003F6A  0012               	return		;funcret
  8832  003F6C                     __end_of_TMR4_SetInterruptHandler:
  8833                           	callstack 0
  8834                           
  8835 ;; *************** function _TMR3_Initialize *****************
  8836 ;; Defined at:
  8837 ;;		line 63 in file "mcc_generated_files/tmr3.c"
  8838 ;; Parameters:    Size  Location     Type
  8839 ;;		None
  8840 ;; Auto vars:     Size  Location     Type
  8841 ;;		None
  8842 ;; Return value:  Size  Location     Type
  8843 ;;                  1    wreg      void 
  8844 ;; Registers used:
  8845 ;;		wreg, status,2, status,0
  8846 ;; Tracked objects:
  8847 ;;		On entry : 0/0
  8848 ;;		On exit  : 0/0
  8849 ;;		Unchanged: 0/0
  8850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8853 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8854 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8855 ;;Total ram usage:        2 bytes
  8856 ;; Hardware stack levels used: 1
  8857 ;; Hardware stack levels required when called: 8
  8858 ;; This function calls:
  8859 ;;		Nothing
  8860 ;; This function is called by:
  8861 ;;		_SYSTEM_Initialize
  8862 ;; This function uses a non-reentrant model
  8863 ;;
  8864                           
  8865                           	psect	text47
  8866  003982                     __ptext47:
  8867                           	callstack 0
  8868  003982                     _TMR3_Initialize:
  8869                           	callstack 21
  8870  003982                     
  8871                           ;mcc_generated_files/tmr3.c: 68:     T3GCON = 0x00;
  8872  003982  0E00               	movlw	0
  8873  003984  6EA7               	movwf	167,c	;volatile
  8874                           
  8875                           ;mcc_generated_files/tmr3.c: 71:     T3GATE = 0x00;
  8876  003986  0E00               	movlw	0
  8877  003988  6EA8               	movwf	168,c	;volatile
  8878                           
  8879                           ;mcc_generated_files/tmr3.c: 74:     T3CLK = 0x05;
  8880  00398A  0E05               	movlw	5
  8881  00398C  6EA9               	movwf	169,c	;volatile
  8882                           
  8883                           ;mcc_generated_files/tmr3.c: 77:     TMR3H = 0x00;
  8884  00398E  0E00               	movlw	0
  8885  003990  6EA5               	movwf	165,c	;volatile
  8886                           
  8887                           ;mcc_generated_files/tmr3.c: 80:     TMR3L = 0x00;
  8888  003992  0E00               	movlw	0
  8889  003994  6EA4               	movwf	164,c	;volatile
  8890  003996                     
  8891                           ;mcc_generated_files/tmr3.c: 83:     PIR6bits.TMR3IF = 0;
  8892  003996  0139               	movlb	57	; () banked
  8893  003998  9DA6               	bcf	166,6,b	;volatile
  8894  00399A                     
  8895                           ; BSR set to: 57
  8896                           ;mcc_generated_files/tmr3.c: 86:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
  8897  00399A  50A4               	movf	164,w,c	;volatile
  8898  00399C  006F FE94  F014    	movff	16293,??_TMR3_Initialize	;volatile
  8899  0039A2  6A15               	clrf	(??_TMR3_Initialize+1)^0,c
  8900  0039A4  C014  F015         	movff	??_TMR3_Initialize,??_TMR3_Initialize+1
  8901  0039A8  6A14               	clrf	??_TMR3_Initialize^0,c
  8902  0039AA  1014               	iorwf	??_TMR3_Initialize^0,w,c
  8903  0039AC  0100               	movlb	0	; () banked
  8904  0039AE  6FE8               	movwf	_timer3ReloadVal& (0+255),b	;volatile
  8905  0039B0  5015               	movf	(??_TMR3_Initialize+1)^0,w,c
  8906  0039B2  6FE9               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
  8907  0039B4                     
  8908                           ; BSR set to: 0
  8909                           ;mcc_generated_files/tmr3.c: 89:     T3CON = 0x01;
  8910  0039B4  0E01               	movlw	1
  8911  0039B6  6EA6               	movwf	166,c	;volatile
  8912  0039B8                     
  8913                           ; BSR set to: 0
  8914  0039B8  0012               	return		;funcret
  8915  0039BA                     __end_of_TMR3_Initialize:
  8916                           	callstack 0
  8917                           
  8918 ;; *************** function _TMR2_Initialize *****************
  8919 ;; Defined at:
  8920 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  8921 ;; Parameters:    Size  Location     Type
  8922 ;;		None
  8923 ;; Auto vars:     Size  Location     Type
  8924 ;;		None
  8925 ;; Return value:  Size  Location     Type
  8926 ;;                  1    wreg      void 
  8927 ;; Registers used:
  8928 ;;		wreg, status,2
  8929 ;; Tracked objects:
  8930 ;;		On entry : 0/0
  8931 ;;		On exit  : 0/0
  8932 ;;		Unchanged: 0/0
  8933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8937 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8938 ;;Total ram usage:        0 bytes
  8939 ;; Hardware stack levels used: 1
  8940 ;; Hardware stack levels required when called: 8
  8941 ;; This function calls:
  8942 ;;		Nothing
  8943 ;; This function is called by:
  8944 ;;		_SYSTEM_Initialize
  8945 ;; This function uses a non-reentrant model
  8946 ;;
  8947                           
  8948                           	psect	text48
  8949  003E6A                     __ptext48:
  8950                           	callstack 0
  8951  003E6A                     _TMR2_Initialize:
  8952                           	callstack 21
  8953  003E6A                     
  8954                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x05;
  8955  003E6A  0E05               	movlw	5
  8956  003E6C  6EAE               	movwf	174,c	;volatile
  8957                           
  8958                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
  8959  003E6E  0E00               	movlw	0
  8960  003E70  6EAD               	movwf	173,c	;volatile
  8961                           
  8962                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
  8963  003E72  0E00               	movlw	0
  8964  003E74  6EAF               	movwf	175,c	;volatile
  8965  003E76                     
  8966                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0xFF;
  8967  003E76  68AB               	setf	171,c	;volatile
  8968                           
  8969                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
  8970  003E78  0E00               	movlw	0
  8971  003E7A  6EAA               	movwf	170,c	;volatile
  8972  003E7C                     
  8973                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
  8974  003E7C  0139               	movlb	57	; () banked
  8975  003E7E  95A4               	bcf	164,2,b	;volatile
  8976                           
  8977                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xB0;
  8978  003E80  0EB0               	movlw	176
  8979  003E82  6EAC               	movwf	172,c	;volatile
  8980  003E84                     
  8981                           ; BSR set to: 57
  8982  003E84  0012               	return		;funcret
  8983  003E86                     __end_of_TMR2_Initialize:
  8984                           	callstack 0
  8985                           
  8986 ;; *************** function _SMT1_Initialize *****************
  8987 ;; Defined at:
  8988 ;;		line 60 in file "mcc_generated_files/smt1.c"
  8989 ;; Parameters:    Size  Location     Type
  8990 ;;		None
  8991 ;; Auto vars:     Size  Location     Type
  8992 ;;		None
  8993 ;; Return value:  Size  Location     Type
  8994 ;;                  1    wreg      void 
  8995 ;; Registers used:
  8996 ;;		wreg, status,2
  8997 ;; Tracked objects:
  8998 ;;		On entry : 0/0
  8999 ;;		On exit  : 0/0
  9000 ;;		Unchanged: 0/0
  9001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9005 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9006 ;;Total ram usage:        0 bytes
  9007 ;; Hardware stack levels used: 1
  9008 ;; Hardware stack levels required when called: 8
  9009 ;; This function calls:
  9010 ;;		Nothing
  9011 ;; This function is called by:
  9012 ;;		_SYSTEM_Initialize
  9013 ;; This function uses a non-reentrant model
  9014 ;;
  9015                           
  9016                           	psect	text49
  9017  003BCA                     __ptext49:
  9018                           	callstack 0
  9019  003BCA                     _SMT1_Initialize:
  9020                           	callstack 21
  9021  003BCA                     
  9022                           ;mcc_generated_files/smt1.c: 63:     SMT1CON0 = 0x80;
  9023  003BCA  0E80               	movlw	128
  9024  003BCC  013F               	movlb	63	; () banked
  9025  003BCE  6F1E               	movwf	30,b	;volatile
  9026                           
  9027                           ;mcc_generated_files/smt1.c: 66:     SMT1CON1 = 0x42;
  9028  003BD0  0E42               	movlw	66
  9029  003BD2  6F1F               	movwf	31,b	;volatile
  9030                           
  9031                           ;mcc_generated_files/smt1.c: 69:     SMT1STAT = 0x00;
  9032  003BD4  0E00               	movlw	0
  9033  003BD6  6F20               	movwf	32,b	;volatile
  9034                           
  9035                           ;mcc_generated_files/smt1.c: 72:     SMT1CLK = 0x04;
  9036  003BD8  0E04               	movlw	4
  9037  003BDA  6F21               	movwf	33,b	;volatile
  9038                           
  9039                           ;mcc_generated_files/smt1.c: 75:     SMT1WIN = 0x00;
  9040  003BDC  0E00               	movlw	0
  9041  003BDE  6F23               	movwf	35,b	;volatile
  9042                           
  9043                           ;mcc_generated_files/smt1.c: 78:     SMT1SIG = 0x00;
  9044  003BE0  0E00               	movlw	0
  9045  003BE2  6F22               	movwf	34,b	;volatile
  9046                           
  9047                           ;mcc_generated_files/smt1.c: 81:     SMT1PRU = 0x01;
  9048  003BE4  0E01               	movlw	1
  9049  003BE6  6F1D               	movwf	29,b	;volatile
  9050  003BE8                     
  9051                           ; BSR set to: 63
  9052                           ;mcc_generated_files/smt1.c: 84:     SMT1PRH = 0xFF;
  9053  003BE8  691C               	setf	28,b	;volatile
  9054  003BEA                     
  9055                           ; BSR set to: 63
  9056                           ;mcc_generated_files/smt1.c: 87:     SMT1PRL = 0xFF;
  9057  003BEA  691B               	setf	27,b	;volatile
  9058  003BEC                     
  9059                           ; BSR set to: 63
  9060                           ;mcc_generated_files/smt1.c: 90:     PIE1bits.SMT1IE = 1;
  9061  003BEC  0139               	movlb	57	; () banked
  9062  003BEE  8B91               	bsf	145,5,b	;volatile
  9063  003BF0                     
  9064                           ; BSR set to: 57
  9065                           ;mcc_generated_files/smt1.c: 93:     PIE1bits.SMT1PWAIE = 1;
  9066  003BF0  8F91               	bsf	145,7,b	;volatile
  9067  003BF2                     
  9068                           ; BSR set to: 57
  9069                           ;mcc_generated_files/smt1.c: 96:     PIE1bits.SMT1PRAIE = 1;
  9070  003BF2  8D91               	bsf	145,6,b	;volatile
  9071  003BF4                     
  9072                           ; BSR set to: 57
  9073                           ;mcc_generated_files/smt1.c: 99:     SMT1CON1bits.SMT1GO = 1;
  9074  003BF4  013F               	movlb	63	; () banked
  9075  003BF6  8F1F               	bsf	31,7,b	;volatile
  9076  003BF8                     
  9077                           ; BSR set to: 63
  9078  003BF8  0012               	return		;funcret
  9079  003BFA                     __end_of_SMT1_Initialize:
  9080                           	callstack 0
  9081                           
  9082 ;; *************** function _PWM8_Initialize *****************
  9083 ;; Defined at:
  9084 ;;		line 58 in file "mcc_generated_files/pwm8.c"
  9085 ;; Parameters:    Size  Location     Type
  9086 ;;		None
  9087 ;; Auto vars:     Size  Location     Type
  9088 ;;		None
  9089 ;; Return value:  Size  Location     Type
  9090 ;;                  1    wreg      void 
  9091 ;; Registers used:
  9092 ;;		wreg, status,2
  9093 ;; Tracked objects:
  9094 ;;		On entry : 0/0
  9095 ;;		On exit  : 0/0
  9096 ;;		Unchanged: 0/0
  9097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9101 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9102 ;;Total ram usage:        0 bytes
  9103 ;; Hardware stack levels used: 1
  9104 ;; Hardware stack levels required when called: 8
  9105 ;; This function calls:
  9106 ;;		Nothing
  9107 ;; This function is called by:
  9108 ;;		_SYSTEM_Initialize
  9109 ;; This function uses a non-reentrant model
  9110 ;;
  9111                           
  9112                           	psect	text50
  9113  003E86                     __ptext50:
  9114                           	callstack 0
  9115  003E86                     _PWM8_Initialize:
  9116                           	callstack 21
  9117  003E86                     
  9118                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
  9119  003E86  0E80               	movlw	128
  9120  003E88  6E62               	movwf	98,c	;volatile
  9121                           
  9122                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
  9123  003E8A  0E00               	movlw	0
  9124  003E8C  6E61               	movwf	97,c	;volatile
  9125                           
  9126                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x00;
  9127  003E8E  0E00               	movlw	0
  9128  003E90  6E60               	movwf	96,c	;volatile
  9129                           
  9130                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 2;
  9131  003E92  013F               	movlb	63	; () banked
  9132  003E94  515F               	movf	95,w,b	;volatile
  9133  003E96  0B3F               	andlw	-193
  9134  003E98  0980               	iorlw	128
  9135  003E9A  6F5F               	movwf	95,b	;volatile
  9136  003E9C                     
  9137                           ; BSR set to: 63
  9138  003E9C  0012               	return		;funcret
  9139  003E9E                     __end_of_PWM8_Initialize:
  9140                           	callstack 0
  9141                           
  9142 ;; *************** function _PWM7_Initialize *****************
  9143 ;; Defined at:
  9144 ;;		line 58 in file "mcc_generated_files/pwm7.c"
  9145 ;; Parameters:    Size  Location     Type
  9146 ;;		None
  9147 ;; Auto vars:     Size  Location     Type
  9148 ;;		None
  9149 ;; Return value:  Size  Location     Type
  9150 ;;                  1    wreg      void 
  9151 ;; Registers used:
  9152 ;;		wreg, status,2
  9153 ;; Tracked objects:
  9154 ;;		On entry : 0/0
  9155 ;;		On exit  : 0/0
  9156 ;;		Unchanged: 0/0
  9157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9161 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9162 ;;Total ram usage:        0 bytes
  9163 ;; Hardware stack levels used: 1
  9164 ;; Hardware stack levels required when called: 8
  9165 ;; This function calls:
  9166 ;;		Nothing
  9167 ;; This function is called by:
  9168 ;;		_SYSTEM_Initialize
  9169 ;; This function uses a non-reentrant model
  9170 ;;
  9171                           
  9172                           	psect	text51
  9173  003E9E                     __ptext51:
  9174                           	callstack 0
  9175  003E9E                     _PWM7_Initialize:
  9176                           	callstack 21
  9177  003E9E                     
  9178                           ;mcc_generated_files/pwm7.c: 62:     PWM7CON = 0x80;
  9179  003E9E  0E80               	movlw	128
  9180  003EA0  6E66               	movwf	102,c	;volatile
  9181                           
  9182                           ;mcc_generated_files/pwm7.c: 65:     PWM7DCH = 0x00;
  9183  003EA2  0E00               	movlw	0
  9184  003EA4  6E65               	movwf	101,c	;volatile
  9185                           
  9186                           ;mcc_generated_files/pwm7.c: 68:     PWM7DCL = 0x00;
  9187  003EA6  0E00               	movlw	0
  9188  003EA8  6E64               	movwf	100,c	;volatile
  9189                           
  9190                           ;mcc_generated_files/pwm7.c: 71:     CCPTMRS1bits.P7TSEL = 2;
  9191  003EAA  013F               	movlb	63	; () banked
  9192  003EAC  515F               	movf	95,w,b	;volatile
  9193  003EAE  0BCF               	andlw	-49
  9194  003EB0  0920               	iorlw	32
  9195  003EB2  6F5F               	movwf	95,b	;volatile
  9196  003EB4                     
  9197                           ; BSR set to: 63
  9198  003EB4  0012               	return		;funcret
  9199  003EB6                     __end_of_PWM7_Initialize:
  9200                           	callstack 0
  9201                           
  9202 ;; *************** function _PWM6_Initialize *****************
  9203 ;; Defined at:
  9204 ;;		line 58 in file "mcc_generated_files/pwm6.c"
  9205 ;; Parameters:    Size  Location     Type
  9206 ;;		None
  9207 ;; Auto vars:     Size  Location     Type
  9208 ;;		None
  9209 ;; Return value:  Size  Location     Type
  9210 ;;                  1    wreg      void 
  9211 ;; Registers used:
  9212 ;;		wreg, status,2
  9213 ;; Tracked objects:
  9214 ;;		On entry : 0/0
  9215 ;;		On exit  : 0/0
  9216 ;;		Unchanged: 0/0
  9217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9221 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9222 ;;Total ram usage:        0 bytes
  9223 ;; Hardware stack levels used: 1
  9224 ;; Hardware stack levels required when called: 8
  9225 ;; This function calls:
  9226 ;;		Nothing
  9227 ;; This function is called by:
  9228 ;;		_SYSTEM_Initialize
  9229 ;; This function uses a non-reentrant model
  9230 ;;
  9231                           
  9232                           	psect	text52
  9233  003EB6                     __ptext52:
  9234                           	callstack 0
  9235  003EB6                     _PWM6_Initialize:
  9236                           	callstack 21
  9237  003EB6                     
  9238                           ;mcc_generated_files/pwm6.c: 62:     PWM6CON = 0x80;
  9239  003EB6  0E80               	movlw	128
  9240  003EB8  6E6A               	movwf	106,c	;volatile
  9241                           
  9242                           ;mcc_generated_files/pwm6.c: 65:     PWM6DCH = 0x59;
  9243  003EBA  0E59               	movlw	89
  9244  003EBC  6E69               	movwf	105,c	;volatile
  9245                           
  9246                           ;mcc_generated_files/pwm6.c: 68:     PWM6DCL = 0x40;
  9247  003EBE  0E40               	movlw	64
  9248  003EC0  6E68               	movwf	104,c	;volatile
  9249                           
  9250                           ;mcc_generated_files/pwm6.c: 71:     CCPTMRS1bits.P6TSEL = 1;
  9251  003EC2  013F               	movlb	63	; () banked
  9252  003EC4  515F               	movf	95,w,b	;volatile
  9253  003EC6  0BF3               	andlw	-13
  9254  003EC8  0904               	iorlw	4
  9255  003ECA  6F5F               	movwf	95,b	;volatile
  9256  003ECC                     
  9257                           ; BSR set to: 63
  9258  003ECC  0012               	return		;funcret
  9259  003ECE                     __end_of_PWM6_Initialize:
  9260                           	callstack 0
  9261                           
  9262 ;; *************** function _PWM5_Initialize *****************
  9263 ;; Defined at:
  9264 ;;		line 58 in file "mcc_generated_files/pwm5.c"
  9265 ;; Parameters:    Size  Location     Type
  9266 ;;		None
  9267 ;; Auto vars:     Size  Location     Type
  9268 ;;		None
  9269 ;; Return value:  Size  Location     Type
  9270 ;;                  1    wreg      void 
  9271 ;; Registers used:
  9272 ;;		wreg, status,2
  9273 ;; Tracked objects:
  9274 ;;		On entry : 0/0
  9275 ;;		On exit  : 0/0
  9276 ;;		Unchanged: 0/0
  9277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9282 ;;Total ram usage:        0 bytes
  9283 ;; Hardware stack levels used: 1
  9284 ;; Hardware stack levels required when called: 8
  9285 ;; This function calls:
  9286 ;;		Nothing
  9287 ;; This function is called by:
  9288 ;;		_SYSTEM_Initialize
  9289 ;; This function uses a non-reentrant model
  9290 ;;
  9291                           
  9292                           	psect	text53
  9293  003ECE                     __ptext53:
  9294                           	callstack 0
  9295  003ECE                     _PWM5_Initialize:
  9296                           	callstack 21
  9297  003ECE                     
  9298                           ;mcc_generated_files/pwm5.c: 62:     PWM5CON = 0x80;
  9299  003ECE  0E80               	movlw	128
  9300  003ED0  6E6E               	movwf	110,c	;volatile
  9301                           
  9302                           ;mcc_generated_files/pwm5.c: 65:     PWM5DCH = 0x59;
  9303  003ED2  0E59               	movlw	89
  9304  003ED4  6E6D               	movwf	109,c	;volatile
  9305                           
  9306                           ;mcc_generated_files/pwm5.c: 68:     PWM5DCL = 0x40;
  9307  003ED6  0E40               	movlw	64
  9308  003ED8  6E6C               	movwf	108,c	;volatile
  9309                           
  9310                           ;mcc_generated_files/pwm5.c: 71:     CCPTMRS1bits.P5TSEL = 1;
  9311  003EDA  013F               	movlb	63	; () banked
  9312  003EDC  515F               	movf	95,w,b	;volatile
  9313  003EDE  0BFC               	andlw	-4
  9314  003EE0  0901               	iorlw	1
  9315  003EE2  6F5F               	movwf	95,b	;volatile
  9316  003EE4                     
  9317                           ; BSR set to: 63
  9318  003EE4  0012               	return		;funcret
  9319  003EE6                     __end_of_PWM5_Initialize:
  9320                           	callstack 0
  9321                           
  9322 ;; *************** function _PMD_Initialize *****************
  9323 ;; Defined at:
  9324 ;;		line 86 in file "mcc_generated_files/mcc.c"
  9325 ;; Parameters:    Size  Location     Type
  9326 ;;		None
  9327 ;; Auto vars:     Size  Location     Type
  9328 ;;		None
  9329 ;; Return value:  Size  Location     Type
  9330 ;;                  1    wreg      void 
  9331 ;; Registers used:
  9332 ;;		wreg, status,2
  9333 ;; Tracked objects:
  9334 ;;		On entry : 0/0
  9335 ;;		On exit  : 0/0
  9336 ;;		Unchanged: 0/0
  9337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9341 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9342 ;;Total ram usage:        0 bytes
  9343 ;; Hardware stack levels used: 1
  9344 ;; Hardware stack levels required when called: 8
  9345 ;; This function calls:
  9346 ;;		Nothing
  9347 ;; This function is called by:
  9348 ;;		_SYSTEM_Initialize
  9349 ;; This function uses a non-reentrant model
  9350 ;;
  9351                           
  9352                           	psect	text54
  9353  003DE4                     __ptext54:
  9354                           	callstack 0
  9355  003DE4                     _PMD_Initialize:
  9356                           	callstack 21
  9357  003DE4                     
  9358                           ;mcc_generated_files/mcc.c: 89:     PMD0 = 0x00;
  9359  003DE4  0E00               	movlw	0
  9360  003DE6  0139               	movlb	57	; () banked
  9361  003DE8  6FC0               	movwf	192,b	;volatile
  9362                           
  9363                           ;mcc_generated_files/mcc.c: 91:     PMD1 = 0x00;
  9364  003DEA  0E00               	movlw	0
  9365  003DEC  6FC1               	movwf	193,b	;volatile
  9366                           
  9367                           ;mcc_generated_files/mcc.c: 93:     PMD2 = 0x00;
  9368  003DEE  0E00               	movlw	0
  9369  003DF0  6FC2               	movwf	194,b	;volatile
  9370                           
  9371                           ;mcc_generated_files/mcc.c: 95:     PMD3 = 0x00;
  9372  003DF2  0E00               	movlw	0
  9373  003DF4  6FC3               	movwf	195,b	;volatile
  9374                           
  9375                           ;mcc_generated_files/mcc.c: 97:     PMD4 = 0x00;
  9376  003DF6  0E00               	movlw	0
  9377  003DF8  6FC4               	movwf	196,b	;volatile
  9378                           
  9379                           ;mcc_generated_files/mcc.c: 99:     PMD5 = 0x00;
  9380  003DFA  0E00               	movlw	0
  9381  003DFC  6FC5               	movwf	197,b	;volatile
  9382                           
  9383                           ;mcc_generated_files/mcc.c: 101:     PMD6 = 0x00;
  9384  003DFE  0E00               	movlw	0
  9385  003E00  6FC6               	movwf	198,b	;volatile
  9386                           
  9387                           ;mcc_generated_files/mcc.c: 103:     PMD7 = 0x00;
  9388  003E02  0E00               	movlw	0
  9389  003E04  6FC7               	movwf	199,b	;volatile
  9390  003E06                     
  9391                           ; BSR set to: 57
  9392  003E06  0012               	return		;funcret
  9393  003E08                     __end_of_PMD_Initialize:
  9394                           	callstack 0
  9395                           
  9396 ;; *************** function _PIN_MANAGER_Initialize *****************
  9397 ;; Defined at:
  9398 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  9399 ;; Parameters:    Size  Location     Type
  9400 ;;		None
  9401 ;; Auto vars:     Size  Location     Type
  9402 ;;		None
  9403 ;; Return value:  Size  Location     Type
  9404 ;;                  1    wreg      void 
  9405 ;; Registers used:
  9406 ;;		wreg, status,2
  9407 ;; Tracked objects:
  9408 ;;		On entry : 0/0
  9409 ;;		On exit  : 0/0
  9410 ;;		Unchanged: 0/0
  9411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9413 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9415 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9416 ;;Total ram usage:        0 bytes
  9417 ;; Hardware stack levels used: 1
  9418 ;; Hardware stack levels required when called: 8
  9419 ;; This function calls:
  9420 ;;		Nothing
  9421 ;; This function is called by:
  9422 ;;		_SYSTEM_Initialize
  9423 ;; This function uses a non-reentrant model
  9424 ;;
  9425                           
  9426                           	psect	text55
  9427  003026                     __ptext55:
  9428                           	callstack 0
  9429  003026                     _PIN_MANAGER_Initialize:
  9430                           	callstack 21
  9431  003026                     
  9432                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  9433  003026  0E00               	movlw	0
  9434  003028  6EBE               	movwf	190,c	;volatile
  9435                           
  9436                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  9437  00302A  0E00               	movlw	0
  9438  00302C  6EBD               	movwf	189,c	;volatile
  9439                           
  9440                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x24;
  9441  00302E  0E24               	movlw	36
  9442  003030  6EBA               	movwf	186,c	;volatile
  9443                           
  9444                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  9445  003032  0E00               	movlw	0
  9446  003034  6EBB               	movwf	187,c	;volatile
  9447                           
  9448                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  9449  003036  0E00               	movlw	0
  9450  003038  6EBC               	movwf	188,c	;volatile
  9451                           
  9452                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  9453  00303A  0E07               	movlw	7
  9454  00303C  6EC6               	movwf	198,c	;volatile
  9455                           
  9456                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xC0;
  9457  00303E  0EC0               	movlw	192
  9458  003040  6EC2               	movwf	194,c	;volatile
  9459                           
  9460                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xF7;
  9461  003042  0EF7               	movlw	247
  9462  003044  6EC3               	movwf	195,c	;volatile
  9463  003046                     
  9464                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xFF;
  9465  003046  68C4               	setf	196,c	;volatile
  9466  003048                     
  9467                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
  9468  003048  68C5               	setf	197,c	;volatile
  9469                           
  9470                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0x1F;
  9471  00304A  0E1F               	movlw	31
  9472  00304C  013A               	movlb	58	; () banked
  9473  00304E  6F70               	movwf	112,b	;volatile
  9474  003050                     
  9475                           ; BSR set to: 58
  9476                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0xFF;
  9477  003050  6960               	setf	96,b	;volatile
  9478                           
  9479                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0xC0;
  9480  003052  0EC0               	movlw	192
  9481  003054  6F50               	movwf	80,b	;volatile
  9482                           
  9483                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
  9484  003056  0E07               	movlw	7
  9485  003058  6F80               	movwf	128,b	;volatile
  9486                           
  9487                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x7F;
  9488  00305A  0E7F               	movlw	127
  9489  00305C  6F40               	movwf	64,b	;volatile
  9490                           
  9491                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
  9492  00305E  0E00               	movlw	0
  9493  003060  6F71               	movwf	113,b	;volatile
  9494                           
  9495                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
  9496  003062  0E00               	movlw	0
  9497  003064  6F81               	movwf	129,b	;volatile
  9498                           
  9499                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
  9500  003066  0E00               	movlw	0
  9501  003068  6F51               	movwf	81,b	;volatile
  9502                           
  9503                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
  9504  00306A  0E00               	movlw	0
  9505  00306C  6F41               	movwf	65,b	;volatile
  9506                           
  9507                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
  9508  00306E  0E00               	movlw	0
  9509  003070  6F61               	movwf	97,b	;volatile
  9510                           
  9511                           ;mcc_generated_files/pin_manager.c: 96:     RB1I2C = 0x00;
  9512  003072  0E00               	movlw	0
  9513  003074  6F5A               	movwf	90,b	;volatile
  9514                           
  9515                           ;mcc_generated_files/pin_manager.c: 97:     RB2I2C = 0x00;
  9516  003076  0E00               	movlw	0
  9517  003078  6F5B               	movwf	91,b	;volatile
  9518                           
  9519                           ;mcc_generated_files/pin_manager.c: 98:     RC3I2C = 0x00;
  9520  00307A  0E00               	movlw	0
  9521  00307C  6F6A               	movwf	106,b	;volatile
  9522                           
  9523                           ;mcc_generated_files/pin_manager.c: 99:     RC4I2C = 0x00;
  9524  00307E  0E00               	movlw	0
  9525  003080  6F6B               	movwf	107,b	;volatile
  9526                           
  9527                           ;mcc_generated_files/pin_manager.c: 100:     RD0I2C = 0x00;
  9528  003082  0E00               	movlw	0
  9529  003084  6F7A               	movwf	122,b	;volatile
  9530                           
  9531                           ;mcc_generated_files/pin_manager.c: 101:     RD1I2C = 0x00;
  9532  003086  0E00               	movlw	0
  9533  003088  6F7B               	movwf	123,b	;volatile
  9534                           
  9535                           ;mcc_generated_files/pin_manager.c: 106:     ODCONE = 0x00;
  9536  00308A  0E00               	movlw	0
  9537  00308C  6F82               	movwf	130,b	;volatile
  9538                           
  9539                           ;mcc_generated_files/pin_manager.c: 107:     ODCONA = 0x00;
  9540  00308E  0E00               	movlw	0
  9541  003090  6F42               	movwf	66,b	;volatile
  9542                           
  9543                           ;mcc_generated_files/pin_manager.c: 108:     ODCONB = 0x00;
  9544  003092  0E00               	movlw	0
  9545  003094  6F52               	movwf	82,b	;volatile
  9546                           
  9547                           ;mcc_generated_files/pin_manager.c: 109:     ODCONC = 0x00;
  9548  003096  0E00               	movlw	0
  9549  003098  6F62               	movwf	98,b	;volatile
  9550                           
  9551                           ;mcc_generated_files/pin_manager.c: 110:     ODCOND = 0x00;
  9552  00309A  0E00               	movlw	0
  9553  00309C  6F72               	movwf	114,b	;volatile
  9554  00309E                     
  9555                           ; BSR set to: 58
  9556                           ;mcc_generated_files/pin_manager.c: 115:     SLRCONA = 0xFF;
  9557  00309E  6943               	setf	67,b	;volatile
  9558  0030A0                     
  9559                           ; BSR set to: 58
  9560                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONB = 0xFF;
  9561  0030A0  6953               	setf	83,b	;volatile
  9562  0030A2                     
  9563                           ; BSR set to: 58
  9564                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONC = 0xFF;
  9565  0030A2  6963               	setf	99,b	;volatile
  9566  0030A4                     
  9567                           ; BSR set to: 58
  9568                           ;mcc_generated_files/pin_manager.c: 118:     SLRCOND = 0xFF;
  9569  0030A4  6973               	setf	115,b	;volatile
  9570                           
  9571                           ;mcc_generated_files/pin_manager.c: 119:     SLRCONE = 0x07;
  9572  0030A6  0E07               	movlw	7
  9573  0030A8  6F83               	movwf	131,b	;volatile
  9574  0030AA                     
  9575                           ; BSR set to: 58
  9576                           ;mcc_generated_files/pin_manager.c: 124:     INLVLA = 0xFF;
  9577  0030AA  6944               	setf	68,b	;volatile
  9578  0030AC                     
  9579                           ; BSR set to: 58
  9580                           ;mcc_generated_files/pin_manager.c: 125:     INLVLB = 0xFF;
  9581  0030AC  6954               	setf	84,b	;volatile
  9582  0030AE                     
  9583                           ; BSR set to: 58
  9584                           ;mcc_generated_files/pin_manager.c: 126:     INLVLC = 0xFF;
  9585  0030AE  6964               	setf	100,b	;volatile
  9586  0030B0                     
  9587                           ; BSR set to: 58
  9588                           ;mcc_generated_files/pin_manager.c: 127:     INLVLD = 0xFF;
  9589  0030B0  6974               	setf	116,b	;volatile
  9590                           
  9591                           ;mcc_generated_files/pin_manager.c: 128:     INLVLE = 0x0F;
  9592  0030B2  0E0F               	movlw	15
  9593  0030B4  6F84               	movwf	132,b	;volatile
  9594                           
  9595                           ;mcc_generated_files/pin_manager.c: 137:     CCP3PPS = 0x1F;
  9596  0030B6  0E1F               	movlw	31
  9597  0030B8  6FCF               	movwf	207,b	;volatile
  9598                           
  9599                           ;mcc_generated_files/pin_manager.c: 138:     CLCIN3PPS = 0x09;
  9600  0030BA  0E09               	movlw	9
  9601  0030BC  6FDC               	movwf	220,b	;volatile
  9602                           
  9603                           ;mcc_generated_files/pin_manager.c: 139:     RA1PPS = 0x0E;
  9604  0030BE  0E0E               	movlw	14
  9605  0030C0  6F01               	movwf	1,b	;volatile
  9606                           
  9607                           ;mcc_generated_files/pin_manager.c: 140:     U1RXPPS = 0x0A;
  9608  0030C2  0E0A               	movlw	10
  9609  0030C4  6FE5               	movwf	229,b	;volatile
  9610                           
  9611                           ;mcc_generated_files/pin_manager.c: 141:     RA0PPS = 0x0D;
  9612  0030C6  0E0D               	movlw	13
  9613  0030C8  6F00               	movwf	0,b	;volatile
  9614                           
  9615                           ;mcc_generated_files/pin_manager.c: 142:     T5GPPS = 0x1D;
  9616  0030CA  0E1D               	movlw	29
  9617  0030CC  6FC9               	movwf	201,b	;volatile
  9618                           
  9619                           ;mcc_generated_files/pin_manager.c: 143:     RA4PPS = 0x10;
  9620  0030CE  0E10               	movlw	16
  9621  0030D0  6F04               	movwf	4,b	;volatile
  9622                           
  9623                           ;mcc_generated_files/pin_manager.c: 144:     CLCIN0PPS = 0x07;
  9624  0030D2  0E07               	movlw	7
  9625  0030D4  6FD9               	movwf	217,b	;volatile
  9626                           
  9627                           ;mcc_generated_files/pin_manager.c: 145:     SMT1WINPPS = 0x09;
  9628  0030D6  0E09               	movlw	9
  9629  0030D8  6FD1               	movwf	209,b	;volatile
  9630                           
  9631                           ;mcc_generated_files/pin_manager.c: 146:     RA3PPS = 0x0F;
  9632  0030DA  0E0F               	movlw	15
  9633  0030DC  6F03               	movwf	3,b	;volatile
  9634                           
  9635                           ;mcc_generated_files/pin_manager.c: 147:     RB3PPS = 0x13;
  9636  0030DE  0E13               	movlw	19
  9637  0030E0  6F0B               	movwf	11,b	;volatile
  9638                           
  9639                           ;mcc_generated_files/pin_manager.c: 148:     CLCIN2PPS = 0x08;
  9640  0030E2  0E08               	movlw	8
  9641  0030E4  6FDB               	movwf	219,b	;volatile
  9642                           
  9643                           ;mcc_generated_files/pin_manager.c: 149:     SMT1SIGPPS = 0x08;
  9644  0030E6  0E08               	movlw	8
  9645  0030E8  6FD2               	movwf	210,b	;volatile
  9646                           
  9647                           ;mcc_generated_files/pin_manager.c: 150:     CCP4PPS = 0x1E;
  9648  0030EA  0E1E               	movlw	30
  9649  0030EC  6FD0               	movwf	208,b	;volatile
  9650  0030EE                     
  9651                           ; BSR set to: 58
  9652  0030EE  0012               	return		;funcret
  9653  0030F0                     __end_of_PIN_MANAGER_Initialize:
  9654                           	callstack 0
  9655                           
  9656 ;; *************** function _OSCILLATOR_Initialize *****************
  9657 ;; Defined at:
  9658 ;;		line 72 in file "mcc_generated_files/mcc.c"
  9659 ;; Parameters:    Size  Location     Type
  9660 ;;		None
  9661 ;; Auto vars:     Size  Location     Type
  9662 ;;		None
  9663 ;; Return value:  Size  Location     Type
  9664 ;;                  1    wreg      void 
  9665 ;; Registers used:
  9666 ;;		wreg, status,2
  9667 ;; Tracked objects:
  9668 ;;		On entry : 0/0
  9669 ;;		On exit  : 0/0
  9670 ;;		Unchanged: 0/0
  9671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9675 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9676 ;;Total ram usage:        0 bytes
  9677 ;; Hardware stack levels used: 1
  9678 ;; Hardware stack levels required when called: 8
  9679 ;; This function calls:
  9680 ;;		Nothing
  9681 ;; This function is called by:
  9682 ;;		_SYSTEM_Initialize
  9683 ;; This function uses a non-reentrant model
  9684 ;;
  9685                           
  9686                           	psect	text56
  9687  003EE6                     __ptext56:
  9688                           	callstack 0
  9689  003EE6                     _OSCILLATOR_Initialize:
  9690                           	callstack 21
  9691  003EE6                     
  9692                           ;mcc_generated_files/mcc.c: 75:     OSCCON1 = 0x60;
  9693  003EE6  0E60               	movlw	96
  9694  003EE8  0139               	movlb	57	; () banked
  9695  003EEA  6FD9               	movwf	217,b	;volatile
  9696                           
  9697                           ;mcc_generated_files/mcc.c: 77:     OSCCON3 = 0x00;
  9698  003EEC  0E00               	movlw	0
  9699  003EEE  6FDB               	movwf	219,b	;volatile
  9700                           
  9701                           ;mcc_generated_files/mcc.c: 79:     OSCEN = 0x00;
  9702  003EF0  0E00               	movlw	0
  9703  003EF2  6FDD               	movwf	221,b	;volatile
  9704                           
  9705                           ;mcc_generated_files/mcc.c: 81:     OSCFRQ = 0x08;
  9706  003EF4  0E08               	movlw	8
  9707  003EF6  6FDF               	movwf	223,b	;volatile
  9708                           
  9709                           ;mcc_generated_files/mcc.c: 83:     OSCTUNE = 0x00;
  9710  003EF8  0E00               	movlw	0
  9711  003EFA  6FDE               	movwf	222,b	;volatile
  9712  003EFC                     
  9713                           ; BSR set to: 57
  9714  003EFC  0012               	return		;funcret
  9715  003EFE                     __end_of_OSCILLATOR_Initialize:
  9716                           	callstack 0
  9717                           
  9718 ;; *************** function _INTERRUPT_Initialize *****************
  9719 ;; Defined at:
  9720 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  9721 ;; Parameters:    Size  Location     Type
  9722 ;;		None
  9723 ;; Auto vars:     Size  Location     Type
  9724 ;;  state           1   19[COMRAM] _Bool 
  9725 ;; Return value:  Size  Location     Type
  9726 ;;                  1    wreg      void 
  9727 ;; Registers used:
  9728 ;;		wreg, status,2
  9729 ;; Tracked objects:
  9730 ;;		On entry : 0/0
  9731 ;;		On exit  : 0/0
  9732 ;;		Unchanged: 0/0
  9733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9735 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9737 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9738 ;;Total ram usage:        1 bytes
  9739 ;; Hardware stack levels used: 1
  9740 ;; Hardware stack levels required when called: 8
  9741 ;; This function calls:
  9742 ;;		Nothing
  9743 ;; This function is called by:
  9744 ;;		_SYSTEM_Initialize
  9745 ;; This function uses a non-reentrant model
  9746 ;;
  9747                           
  9748                           	psect	text57
  9749  0036E0                     __ptext57:
  9750                           	callstack 0
  9751  0036E0                     _INTERRUPT_Initialize:
  9752                           	callstack 21
  9753  0036E0                     
  9754                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
  9755  0036E0  8AD2               	bsf	210,5,c	;volatile
  9756  0036E2                     
  9757                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
  9758  0036E2  0E00               	movlw	0
  9759  0036E4  BED2               	btfsc	16338,7,c	;volatile
  9760  0036E6  0E01               	movlw	1
  9761  0036E8  6E14               	movwf	INTERRUPT_Initialize@state^0,c
  9762  0036EA                     
  9763                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
  9764  0036EA  9ED2               	bcf	16338,7,c	;volatile
  9765                           
  9766                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
  9767  0036EC  0E55               	movlw	85
  9768  0036EE  6ED4               	movwf	212,c	;volatile
  9769                           
  9770                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
  9771  0036F0  0EAA               	movlw	170
  9772  0036F2  6ED4               	movwf	212,c	;volatile
  9773  0036F4                     
  9774                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
  9775  0036F4  90D4               	bcf	212,0,c	;volatile
  9776                           
  9777                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTBASEU = 0;
  9778  0036F6  0E00               	movlw	0
  9779  0036F8  6ED7               	movwf	215,c	;volatile
  9780                           
  9781                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTBASEH = 0;
  9782  0036FA  0E00               	movlw	0
  9783  0036FC  6ED6               	movwf	214,c	;volatile
  9784                           
  9785                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTBASEL = 8;
  9786  0036FE  0E08               	movlw	8
  9787  003700  6ED5               	movwf	213,c	;volatile
  9788                           
  9789                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
  9790  003702  0E55               	movlw	85
  9791  003704  6ED4               	movwf	212,c	;volatile
  9792                           
  9793                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
  9794  003706  0EAA               	movlw	170
  9795  003708  6ED4               	movwf	212,c	;volatile
  9796  00370A                     
  9797                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
  9798  00370A  80D4               	bsf	212,0,c	;volatile
  9799  00370C                     
  9800                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
  9801  00370C  B014               	btfsc	INTERRUPT_Initialize@state^0,0,c
  9802  00370E  D002               	bra	u1525
  9803  003710  9ED2               	bcf	16338,7,c	;volatile
  9804  003712  D001               	bra	u1526
  9805  003714                     u1525:
  9806  003714  8ED2               	bsf	16338,7,c	;volatile
  9807  003716                     u1526:
  9808  003716                     
  9809                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR3bits.U1TXIP = 0;
  9810  003716  0139               	movlb	57	; () banked
  9811  003718  9983               	bcf	131,4,b	;volatile
  9812  00371A                     
  9813                           ; BSR set to: 57
  9814                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR3bits.U1RXIP = 0;
  9815  00371A  9783               	bcf	131,3,b	;volatile
  9816  00371C                     
  9817                           ; BSR set to: 57
  9818                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR1bits.SMT1PWAIP = 1;
  9819  00371C  8F81               	bsf	129,7,b	;volatile
  9820  00371E                     
  9821                           ; BSR set to: 57
  9822                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR1bits.SMT1IP = 1;
  9823  00371E  8B81               	bsf	129,5,b	;volatile
  9824  003720                     
  9825                           ; BSR set to: 57
  9826                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR1bits.SMT1PRAIP = 1;
  9827  003720  8D81               	bsf	129,6,b	;volatile
  9828  003722                     
  9829                           ; BSR set to: 57
  9830                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR8bits.TMR5GIP = 1;
  9831  003722  8F88               	bsf	136,7,b	;volatile
  9832  003724                     
  9833                           ; BSR set to: 57
  9834                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR10bits.CCP4IP = 1;
  9835  003724  818A               	bsf	138,0,b	;volatile
  9836  003726                     
  9837                           ; BSR set to: 57
  9838                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR7bits.TMR4IP = 0;
  9839  003726  9187               	bcf	135,0,b	;volatile
  9840  003728                     
  9841                           ; BSR set to: 57
  9842                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR9bits.CCP3IP = 1;
  9843  003728  8389               	bsf	137,1,b	;volatile
  9844  00372A                     
  9845                           ; BSR set to: 57
  9846  00372A  0012               	return		;funcret
  9847  00372C                     __end_of_INTERRUPT_Initialize:
  9848                           	callstack 0
  9849                           
  9850 ;; *************** function _CLC3_Initialize *****************
  9851 ;; Defined at:
  9852 ;;		line 58 in file "mcc_generated_files/clc3.c"
  9853 ;; Parameters:    Size  Location     Type
  9854 ;;		None
  9855 ;; Auto vars:     Size  Location     Type
  9856 ;;		None
  9857 ;; Return value:  Size  Location     Type
  9858 ;;                  1    wreg      void 
  9859 ;; Registers used:
  9860 ;;		wreg, status,2
  9861 ;; Tracked objects:
  9862 ;;		On entry : 0/0
  9863 ;;		On exit  : 0/0
  9864 ;;		Unchanged: 0/0
  9865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9869 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9870 ;;Total ram usage:        0 bytes
  9871 ;; Hardware stack levels used: 1
  9872 ;; Hardware stack levels required when called: 8
  9873 ;; This function calls:
  9874 ;;		Nothing
  9875 ;; This function is called by:
  9876 ;;		_SYSTEM_Initialize
  9877 ;; This function uses a non-reentrant model
  9878 ;;
  9879                           
  9880                           	psect	text58
  9881  003D10                     __ptext58:
  9882                           	callstack 0
  9883  003D10                     _CLC3_Initialize:
  9884                           	callstack 21
  9885  003D10                     
  9886                           ;mcc_generated_files/clc3.c: 63:     CLC3POL = 0x00;
  9887  003D10  0E00               	movlw	0
  9888  003D12  013C               	movlb	60	; () banked
  9889  003D14  6F61               	movwf	97,b	;volatile
  9890                           
  9891                           ;mcc_generated_files/clc3.c: 65:     CLC3SEL0 = 0x03;
  9892  003D16  0E03               	movlw	3
  9893  003D18  6F62               	movwf	98,b	;volatile
  9894                           
  9895                           ;mcc_generated_files/clc3.c: 67:     CLC3SEL1 = 0x02;
  9896  003D1A  0E02               	movlw	2
  9897  003D1C  6F63               	movwf	99,b	;volatile
  9898                           
  9899                           ;mcc_generated_files/clc3.c: 69:     CLC3SEL2 = 0x00;
  9900  003D1E  0E00               	movlw	0
  9901  003D20  6F64               	movwf	100,b	;volatile
  9902                           
  9903                           ;mcc_generated_files/clc3.c: 71:     CLC3SEL3 = 0x00;
  9904  003D22  0E00               	movlw	0
  9905  003D24  6F65               	movwf	101,b	;volatile
  9906                           
  9907                           ;mcc_generated_files/clc3.c: 73:     CLC3GLS0 = 0x02;
  9908  003D26  0E02               	movlw	2
  9909  003D28  6F66               	movwf	102,b	;volatile
  9910                           
  9911                           ;mcc_generated_files/clc3.c: 75:     CLC3GLS1 = 0x08;
  9912  003D2A  0E08               	movlw	8
  9913  003D2C  6F67               	movwf	103,b	;volatile
  9914                           
  9915                           ;mcc_generated_files/clc3.c: 77:     CLC3GLS2 = 0x00;
  9916  003D2E  0E00               	movlw	0
  9917  003D30  6F68               	movwf	104,b	;volatile
  9918                           
  9919                           ;mcc_generated_files/clc3.c: 79:     CLC3GLS3 = 0x00;
  9920  003D32  0E00               	movlw	0
  9921  003D34  6F69               	movwf	105,b	;volatile
  9922                           
  9923                           ;mcc_generated_files/clc3.c: 81:     CLC3CON = 0x85;
  9924  003D36  0E85               	movlw	133
  9925  003D38  6F60               	movwf	96,b	;volatile
  9926  003D3A                     
  9927                           ; BSR set to: 60
  9928  003D3A  0012               	return		;funcret
  9929  003D3C                     __end_of_CLC3_Initialize:
  9930                           	callstack 0
  9931                           
  9932 ;; *************** function _CCP4_Initialize *****************
  9933 ;; Defined at:
  9934 ;;		line 126 in file "mcc_generated_files/ccp4.c"
  9935 ;; Parameters:    Size  Location     Type
  9936 ;;		None
  9937 ;; Auto vars:     Size  Location     Type
  9938 ;;		None
  9939 ;; Return value:  Size  Location     Type
  9940 ;;                  1    wreg      void 
  9941 ;; Registers used:
  9942 ;;		wreg, status,2, status,0, cstack
  9943 ;; Tracked objects:
  9944 ;;		On entry : 0/0
  9945 ;;		On exit  : 0/0
  9946 ;;		Unchanged: 0/0
  9947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9951 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9952 ;;Total ram usage:        0 bytes
  9953 ;; Hardware stack levels used: 1
  9954 ;; Hardware stack levels required when called: 9
  9955 ;; This function calls:
  9956 ;;		_CCP4_SetCallBack
  9957 ;; This function is called by:
  9958 ;;		_SYSTEM_Initialize
  9959 ;; This function uses a non-reentrant model
  9960 ;;
  9961                           
  9962                           	psect	text59
  9963  003C5A                     __ptext59:
  9964                           	callstack 0
  9965  003C5A                     _CCP4_Initialize:
  9966                           	callstack 20
  9967  003C5A                     
  9968                           ;mcc_generated_files/ccp4.c: 130:  CCP4CON = 0x83;
  9969  003C5A  0E83               	movlw	131
  9970  003C5C  6E72               	movwf	114,c	;volatile
  9971                           
  9972                           ;mcc_generated_files/ccp4.c: 132:  CCP4CAP = 0x00;
  9973  003C5E  0E00               	movlw	0
  9974  003C60  6E73               	movwf	115,c	;volatile
  9975                           
  9976                           ;mcc_generated_files/ccp4.c: 134:  CCPR4H = 0x00;
  9977  003C62  0E00               	movlw	0
  9978  003C64  6E71               	movwf	113,c	;volatile
  9979                           
  9980                           ;mcc_generated_files/ccp4.c: 136:  CCPR4L = 0x00;
  9981  003C66  0E00               	movlw	0
  9982  003C68  6E70               	movwf	112,c	;volatile
  9983  003C6A                     
  9984                           ;mcc_generated_files/ccp4.c: 138:     CCP4_SetCallBack(CCP4_DefaultCallBack);
  9985  003C6A  0E2A               	movlw	low _CCP4_DefaultCallBack
  9986  003C6C  6E14               	movwf	CCP4_SetCallBack@customCallBack^0,c
  9987  003C6E  0E3C               	movlw	high _CCP4_DefaultCallBack
  9988  003C70  6E15               	movwf	(CCP4_SetCallBack@customCallBack+1)^0,c
  9989  003C72  ECB6  F01F         	call	_CCP4_SetCallBack	;wreg free
  9990  003C76                     
  9991                           ;mcc_generated_files/ccp4.c: 141:  CCPTMRS0bits.C4TSEL = 0x2;
  9992  003C76  013F               	movlb	63	; () banked
  9993  003C78  515E               	movf	94,w,b	;volatile
  9994  003C7A  0B3F               	andlw	-193
  9995  003C7C  0980               	iorlw	128
  9996  003C7E  6F5E               	movwf	94,b	;volatile
  9997  003C80                     
  9998                           ; BSR set to: 63
  9999                           ;mcc_generated_files/ccp4.c: 143:     PIR10bits.CCP4IF = 0;
 10000  003C80  0139               	movlb	57	; () banked
 10001  003C82  91AA               	bcf	170,0,b	;volatile
 10002  003C84                     
 10003                           ; BSR set to: 57
 10004                           ;mcc_generated_files/ccp4.c: 146:     PIE10bits.CCP4IE = 1;
 10005  003C84  819A               	bsf	154,0,b	;volatile
 10006  003C86                     
 10007                           ; BSR set to: 57
 10008  003C86  0012               	return		;funcret
 10009  003C88                     __end_of_CCP4_Initialize:
 10010                           	callstack 0
 10011                           
 10012 ;; *************** function _CCP4_SetCallBack *****************
 10013 ;; Defined at:
 10014 ;;		line 123 in file "mcc_generated_files/ccp4.c"
 10015 ;; Parameters:    Size  Location     Type
 10016 ;;  customCallBa    2   19[COMRAM] PTR FTN(unsigned short ,
 10017 ;;		 -> CCP4_DefaultCallBack(1), 
 10018 ;; Auto vars:     Size  Location     Type
 10019 ;;		None
 10020 ;; Return value:  Size  Location     Type
 10021 ;;                  1    wreg      void 
 10022 ;; Registers used:
 10023 ;;		wreg, status,2, status,0
 10024 ;; Tracked objects:
 10025 ;;		On entry : 0/0
 10026 ;;		On exit  : 0/0
 10027 ;;		Unchanged: 0/0
 10028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10029 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10032 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10033 ;;Total ram usage:        2 bytes
 10034 ;; Hardware stack levels used: 1
 10035 ;; Hardware stack levels required when called: 8
 10036 ;; This function calls:
 10037 ;;		Nothing
 10038 ;; This function is called by:
 10039 ;;		_CCP4_Initialize
 10040 ;; This function uses a non-reentrant model
 10041 ;;
 10042                           
 10043                           	psect	text60
 10044  003F6C                     __ptext60:
 10045                           	callstack 0
 10046  003F6C                     _CCP4_SetCallBack:
 10047                           	callstack 20
 10048  003F6C                     
 10049                           ;mcc_generated_files/ccp4.c: 124:     CCP4_CallBack = customCallBack;
 10050  003F6C  C014  F0E2         	movff	CCP4_SetCallBack@customCallBack,_CCP4_CallBack
 10051  003F70  C015  F0E3         	movff	CCP4_SetCallBack@customCallBack+1,_CCP4_CallBack+1
 10052  003F74  0012               	return		;funcret
 10053  003F76                     __end_of_CCP4_SetCallBack:
 10054                           	callstack 0
 10055                           
 10056 ;; *************** function _CCP3_Initialize *****************
 10057 ;; Defined at:
 10058 ;;		line 74 in file "mcc_generated_files/ccp3.c"
 10059 ;; Parameters:    Size  Location     Type
 10060 ;;		None
 10061 ;; Auto vars:     Size  Location     Type
 10062 ;;		None
 10063 ;; Return value:  Size  Location     Type
 10064 ;;                  1    wreg      void 
 10065 ;; Registers used:
 10066 ;;		wreg, status,2, status,0, cstack
 10067 ;; Tracked objects:
 10068 ;;		On entry : 0/0
 10069 ;;		On exit  : 0/0
 10070 ;;		Unchanged: 0/0
 10071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10075 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10076 ;;Total ram usage:        0 bytes
 10077 ;; Hardware stack levels used: 1
 10078 ;; Hardware stack levels required when called: 9
 10079 ;; This function calls:
 10080 ;;		_CCP3_SetCallBack
 10081 ;; This function is called by:
 10082 ;;		_SYSTEM_Initialize
 10083 ;; This function uses a non-reentrant model
 10084 ;;
 10085                           
 10086                           	psect	text61
 10087  003C88                     __ptext61:
 10088                           	callstack 0
 10089  003C88                     _CCP3_Initialize:
 10090                           	callstack 20
 10091  003C88                     
 10092                           ;mcc_generated_files/ccp3.c: 78:  CCP3CON = 0x83;
 10093  003C88  0E83               	movlw	131
 10094  003C8A  6E76               	movwf	118,c	;volatile
 10095                           
 10096                           ;mcc_generated_files/ccp3.c: 80:  CCP3CAP = 0x00;
 10097  003C8C  0E00               	movlw	0
 10098  003C8E  6E77               	movwf	119,c	;volatile
 10099                           
 10100                           ;mcc_generated_files/ccp3.c: 82:  CCPR3H = 0x00;
 10101  003C90  0E00               	movlw	0
 10102  003C92  6E75               	movwf	117,c	;volatile
 10103                           
 10104                           ;mcc_generated_files/ccp3.c: 84:  CCPR3L = 0x00;
 10105  003C94  0E00               	movlw	0
 10106  003C96  6E74               	movwf	116,c	;volatile
 10107  003C98                     
 10108                           ;mcc_generated_files/ccp3.c: 86:     CCP3_SetCallBack(CCP3_DefaultCallBack);
 10109  003C98  0EFA               	movlw	low _CCP3_DefaultCallBack
 10110  003C9A  6E14               	movwf	CCP3_SetCallBack@customCallBack^0,c
 10111  003C9C  0E3B               	movlw	high _CCP3_DefaultCallBack
 10112  003C9E  6E15               	movwf	(CCP3_SetCallBack@customCallBack+1)^0,c
 10113  003CA0  ECBB  F01F         	call	_CCP3_SetCallBack	;wreg free
 10114  003CA4                     
 10115                           ;mcc_generated_files/ccp3.c: 89:  CCPTMRS0bits.C3TSEL = 0x2;
 10116  003CA4  013F               	movlb	63	; () banked
 10117  003CA6  515E               	movf	94,w,b	;volatile
 10118  003CA8  0BCF               	andlw	-49
 10119  003CAA  0920               	iorlw	32
 10120  003CAC  6F5E               	movwf	94,b	;volatile
 10121  003CAE                     
 10122                           ; BSR set to: 63
 10123                           ;mcc_generated_files/ccp3.c: 91:     PIR9bits.CCP3IF = 0;
 10124  003CAE  0139               	movlb	57	; () banked
 10125  003CB0  93A9               	bcf	169,1,b	;volatile
 10126  003CB2                     
 10127                           ; BSR set to: 57
 10128                           ;mcc_generated_files/ccp3.c: 94:     PIE9bits.CCP3IE = 1;
 10129  003CB2  8399               	bsf	153,1,b	;volatile
 10130  003CB4                     
 10131                           ; BSR set to: 57
 10132  003CB4  0012               	return		;funcret
 10133  003CB6                     __end_of_CCP3_Initialize:
 10134                           	callstack 0
 10135                           
 10136 ;; *************** function _CCP3_SetCallBack *****************
 10137 ;; Defined at:
 10138 ;;		line 110 in file "mcc_generated_files/ccp3.c"
 10139 ;; Parameters:    Size  Location     Type
 10140 ;;  customCallBa    2   19[COMRAM] PTR FTN(unsigned short ,
 10141 ;;		 -> CCP3_DefaultCallBack(1), 
 10142 ;; Auto vars:     Size  Location     Type
 10143 ;;		None
 10144 ;; Return value:  Size  Location     Type
 10145 ;;                  1    wreg      void 
 10146 ;; Registers used:
 10147 ;;		wreg, status,2, status,0
 10148 ;; Tracked objects:
 10149 ;;		On entry : 0/0
 10150 ;;		On exit  : 0/0
 10151 ;;		Unchanged: 0/0
 10152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10153 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10156 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10157 ;;Total ram usage:        2 bytes
 10158 ;; Hardware stack levels used: 1
 10159 ;; Hardware stack levels required when called: 8
 10160 ;; This function calls:
 10161 ;;		Nothing
 10162 ;; This function is called by:
 10163 ;;		_CCP3_Initialize
 10164 ;; This function uses a non-reentrant model
 10165 ;;
 10166                           
 10167                           	psect	text62
 10168  003F76                     __ptext62:
 10169                           	callstack 0
 10170  003F76                     _CCP3_SetCallBack:
 10171                           	callstack 20
 10172  003F76                     
 10173                           ;mcc_generated_files/ccp3.c: 111:     CCP3_CallBack = customCallBack;
 10174  003F76  C014  F0E4         	movff	CCP3_SetCallBack@customCallBack,_CCP3_CallBack
 10175  003F7A  C015  F0E5         	movff	CCP3_SetCallBack@customCallBack+1,_CCP3_CallBack+1
 10176  003F7E  0012               	return		;funcret
 10177  003F80                     __end_of_CCP3_SetCallBack:
 10178                           	callstack 0
 10179                           
 10180 ;; *************** function _ADCC_Initialize *****************
 10181 ;; Defined at:
 10182 ;;		line 62 in file "mcc_generated_files/adcc.c"
 10183 ;; Parameters:    Size  Location     Type
 10184 ;;		None
 10185 ;; Auto vars:     Size  Location     Type
 10186 ;;		None
 10187 ;; Return value:  Size  Location     Type
 10188 ;;                  1    wreg      void 
 10189 ;; Registers used:
 10190 ;;		wreg, status,2
 10191 ;; Tracked objects:
 10192 ;;		On entry : 0/0
 10193 ;;		On exit  : 0/0
 10194 ;;		Unchanged: 0/0
 10195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10199 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10200 ;;Total ram usage:        0 bytes
 10201 ;; Hardware stack levels used: 1
 10202 ;; Hardware stack levels required when called: 8
 10203 ;; This function calls:
 10204 ;;		Nothing
 10205 ;; This function is called by:
 10206 ;;		_SYSTEM_Initialize
 10207 ;; This function uses a non-reentrant model
 10208 ;;
 10209                           
 10210                           	psect	text63
 10211  003630                     __ptext63:
 10212                           	callstack 0
 10213  003630                     _ADCC_Initialize:
 10214                           	callstack 21
 10215  003630                     
 10216                           ;mcc_generated_files/adcc.c: 66:     ADLTHL = 0x00;
 10217  003630  0E00               	movlw	0
 10218  003632  013E               	movlb	62	; () banked
 10219  003634  6FDE               	movwf	222,b	;volatile
 10220                           
 10221                           ;mcc_generated_files/adcc.c: 68:     ADLTHH = 0x00;
 10222  003636  0E00               	movlw	0
 10223  003638  6FDF               	movwf	223,b	;volatile
 10224                           
 10225                           ;mcc_generated_files/adcc.c: 70:     ADUTHL = 0x00;
 10226  00363A  0E00               	movlw	0
 10227  00363C  6FE0               	movwf	224,b	;volatile
 10228                           
 10229                           ;mcc_generated_files/adcc.c: 72:     ADUTHH = 0x00;
 10230  00363E  0E00               	movlw	0
 10231  003640  6FE1               	movwf	225,b	;volatile
 10232                           
 10233                           ;mcc_generated_files/adcc.c: 74:     ADSTPTL = 0x00;
 10234  003642  0E00               	movlw	0
 10235  003644  6FE4               	movwf	228,b	;volatile
 10236                           
 10237                           ;mcc_generated_files/adcc.c: 76:     ADSTPTH = 0x00;
 10238  003646  0E00               	movlw	0
 10239  003648  6FE5               	movwf	229,b	;volatile
 10240                           
 10241                           ;mcc_generated_files/adcc.c: 78:     ADACCU = 0x00;
 10242  00364A  0E00               	movlw	0
 10243  00364C  6FEA               	movwf	234,b	;volatile
 10244                           
 10245                           ;mcc_generated_files/adcc.c: 80:     ADRPT = 0x00;
 10246  00364E  0E00               	movlw	0
 10247  003650  6FEC               	movwf	236,b	;volatile
 10248                           
 10249                           ;mcc_generated_files/adcc.c: 82:     ADPCH = 0x00;
 10250  003652  0E00               	movlw	0
 10251  003654  6FF1               	movwf	241,b	;volatile
 10252                           
 10253                           ;mcc_generated_files/adcc.c: 84:     ADACQL = 0x58;
 10254  003656  0E58               	movlw	88
 10255  003658  6FF3               	movwf	243,b	;volatile
 10256                           
 10257                           ;mcc_generated_files/adcc.c: 86:     ADACQH = 0x02;
 10258  00365A  0E02               	movlw	2
 10259  00365C  6FF4               	movwf	244,b	;volatile
 10260                           
 10261                           ;mcc_generated_files/adcc.c: 88:     ADCAP = 0x00;
 10262  00365E  0E00               	movlw	0
 10263  003660  6FF5               	movwf	245,b	;volatile
 10264                           
 10265                           ;mcc_generated_files/adcc.c: 90:     ADPREL = 0x00;
 10266  003662  0E00               	movlw	0
 10267  003664  6FF6               	movwf	246,b	;volatile
 10268                           
 10269                           ;mcc_generated_files/adcc.c: 92:     ADPREH = 0x00;
 10270  003666  0E00               	movlw	0
 10271  003668  6FF7               	movwf	247,b	;volatile
 10272                           
 10273                           ;mcc_generated_files/adcc.c: 94:     ADCON1 = 0x00;
 10274  00366A  0E00               	movlw	0
 10275  00366C  6FF9               	movwf	249,b	;volatile
 10276                           
 10277                           ;mcc_generated_files/adcc.c: 96:     ADCON2 = 0x00;
 10278  00366E  0E00               	movlw	0
 10279  003670  6FFA               	movwf	250,b	;volatile
 10280                           
 10281                           ;mcc_generated_files/adcc.c: 98:     ADCON3 = 0x00;
 10282  003672  0E00               	movlw	0
 10283  003674  6FFB               	movwf	251,b	;volatile
 10284                           
 10285                           ;mcc_generated_files/adcc.c: 100:     ADSTAT = 0x00;
 10286  003676  0E00               	movlw	0
 10287  003678  6FFC               	movwf	252,b	;volatile
 10288                           
 10289                           ;mcc_generated_files/adcc.c: 102:     ADREF = 0x00;
 10290  00367A  0E00               	movlw	0
 10291  00367C  6FFD               	movwf	253,b	;volatile
 10292                           
 10293                           ;mcc_generated_files/adcc.c: 104:     ADACT = 0x00;
 10294  00367E  0E00               	movlw	0
 10295  003680  6FFE               	movwf	254,b	;volatile
 10296                           
 10297                           ;mcc_generated_files/adcc.c: 106:     ADCLK = 0x1F;
 10298  003682  0E1F               	movlw	31
 10299  003684  6FFF               	movwf	255,b	;volatile
 10300                           
 10301                           ;mcc_generated_files/adcc.c: 108:     ADCON0 = 0x84;
 10302  003686  0E84               	movlw	132
 10303  003688  6FF8               	movwf	248,b	;volatile
 10304  00368A                     
 10305                           ; BSR set to: 62
 10306  00368A  0012               	return		;funcret
 10307  00368C                     __end_of_ADCC_Initialize:
 10308                           	callstack 0
 10309                           
 10310 ;; *************** function _UART1_tx_vect_isr *****************
 10311 ;; Defined at:
 10312 ;;		line 235 in file "mcc_generated_files/uart1.c"
 10313 ;; Parameters:    Size  Location     Type
 10314 ;;		None
 10315 ;; Auto vars:     Size  Location     Type
 10316 ;;		None
 10317 ;; Return value:  Size  Location     Type
 10318 ;;                  1    wreg      void 
 10319 ;; Registers used:
 10320 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 10321 ;; Tracked objects:
 10322 ;;		On entry : 0/0
 10323 ;;		On exit  : 0/0
 10324 ;;		Unchanged: 0/0
 10325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10328 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10329 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10330 ;;Total ram usage:        1 bytes
 10331 ;; Hardware stack levels used: 1
 10332 ;; Hardware stack levels required when called: 5
 10333 ;; This function calls:
 10334 ;;		Absolute function
 10335 ;;		_UART1_Transmit_ISR
 10336 ;; This function is called by:
 10337 ;;		Interrupt level 1
 10338 ;; This function uses a non-reentrant model
 10339 ;;
 10340                           
 10341                           	psect	text64
 10342  00390C                     __ptext64:
 10343                           	callstack 0
 10344  00390C                     _UART1_tx_vect_isr:
 10345                           	callstack 14
 10346                           
 10347                           ; BSR set to: 62
 10348                           ;incstack = 0
 10349  00390C  006F FF60  F011    	movff	status,??_UART1_tx_vect_isr
 10350  003912                     
 10351                           ;mcc_generated_files/uart1.c: 237:     if(UART1_TxInterruptHandler)
 10352  003912  0100               	movlb	0	; () banked
 10353  003914  51F4               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 10354  003916  11F5               	iorwf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 10355  003918  B4D8               	btfsc	status,2,c
 10356  00391A  EF91  F01C         	goto	i1u421_21
 10357  00391E  EF93  F01C         	goto	i1u421_20
 10358  003922                     i1u421_21:
 10359  003922  EF9F  F01C         	goto	i1l324
 10360  003926                     i1u421_20:
 10361  003926                     
 10362                           ; BSR set to: 0
 10363                           ;mcc_generated_files/uart1.c: 238:     {;mcc_generated_files/uart1.c: 239:         UART1
      +                          _TxInterruptHandler();
 10364  003926  D802               	call	i1u422_28
 10365  003928  EF9F  F01C         	goto	i1u422_29
 10366  00392C                     i1u422_28:
 10367  00392C  0005               	push	
 10368  00392E  6EFA               	movwf	pclath,c
 10369  003930  51F4               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 10370  003932  6EFD               	movwf	tosl,c
 10371  003934  51F5               	movf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 10372  003936  6EFE               	movwf	tosh,c
 10373  003938  6AFF               	clrf	tosu,c
 10374  00393A  50FA               	movf	pclath,w,c
 10375  00393C  0012               	return		;indir
 10376  00393E                     i1u422_29:
 10377  00393E                     i1l324:
 10378  00393E  0060  F047  FFD8   	movff	??_UART1_tx_vect_isr,status
 10379  003944  0011               	retfie		f
 10380  003946                     __end_of_UART1_tx_vect_isr:
 10381                           	callstack 0
 10382                           
 10383 ;; *************** function _UART1_Transmit_ISR *****************
 10384 ;; Defined at:
 10385 ;;		line 253 in file "mcc_generated_files/uart1.c"
 10386 ;; Parameters:    Size  Location     Type
 10387 ;;		None
 10388 ;; Auto vars:     Size  Location     Type
 10389 ;;		None
 10390 ;; Return value:  Size  Location     Type
 10391 ;;                  1    wreg      void 
 10392 ;; Registers used:
 10393 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10394 ;; Tracked objects:
 10395 ;;		On entry : 0/0
 10396 ;;		On exit  : 0/0
 10397 ;;		Unchanged: 0/0
 10398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10402 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10403 ;;Total ram usage:        0 bytes
 10404 ;; Hardware stack levels used: 1
 10405 ;; Hardware stack levels required when called: 4
 10406 ;; This function calls:
 10407 ;;		Nothing
 10408 ;; This function is called by:
 10409 ;;		_UART1_Initialize
 10410 ;;		_UART1_tx_vect_isr
 10411 ;; This function uses a non-reentrant model
 10412 ;;
 10413                           
 10414                           	psect	text65
 10415  00384E                     __ptext65:
 10416                           	callstack 0
 10417  00384E                     _UART1_Transmit_ISR:
 10418                           	callstack 14
 10419  00384E                     
 10420                           ;mcc_generated_files/uart1.c: 256:     if(sizeof(uart1TxBuffer) > uart1TxBufferRemaining
      +                          )
 10421  00384E  0E08               	movlw	8
 10422  003850  604C               	cpfslt	_uart1TxBufferRemaining^0,c	;volatile
 10423  003852  EF2D  F01C         	goto	i1u403_21
 10424  003856  EF2F  F01C         	goto	i1u403_20
 10425  00385A                     i1u403_21:
 10426  00385A  EF46  F01C         	goto	i1l333
 10427  00385E                     i1u403_20:
 10428  00385E                     
 10429                           ;mcc_generated_files/uart1.c: 257:     {;mcc_generated_files/uart1.c: 258:         U1TXB
      +                           = uart1TxBuffer[uart1TxTail++];
 10430  00385E  0E70               	movlw	low _uart1TxBuffer
 10431  003860  2446               	addwf	_uart1TxTail^0,w,c	;volatile
 10432  003862  6ED9               	movwf	fsr2l,c
 10433  003864  6ADA               	clrf	fsr2h,c
 10434  003866  0E00               	movlw	high _uart1TxBuffer
 10435  003868  22DA               	addwfc	fsr2h,f,c
 10436  00386A  50DF               	movf	indf2,w,c
 10437  00386C  013D               	movlb	61	; () banked
 10438  00386E  6FEA               	movwf	234,b	;volatile
 10439  003870                     
 10440                           ; BSR set to: 61
 10441  003870  2A46               	incf	_uart1TxTail^0,f,c	;volatile
 10442  003872                     
 10443                           ; BSR set to: 61
 10444                           ;mcc_generated_files/uart1.c: 259:        if(sizeof(uart1TxBuffer) <= uart1TxTail)
 10445  003872  0E07               	movlw	7
 10446  003874  6446               	cpfsgt	_uart1TxTail^0,c	;volatile
 10447  003876  EF3F  F01C         	goto	i1u404_21
 10448  00387A  EF41  F01C         	goto	i1u404_20
 10449  00387E                     i1u404_21:
 10450  00387E  EF43  F01C         	goto	i1l5291
 10451  003882                     i1u404_20:
 10452  003882                     
 10453                           ; BSR set to: 61
 10454                           ;mcc_generated_files/uart1.c: 260:         {;mcc_generated_files/uart1.c: 261:          
      +                             uart1TxTail = 0;
 10455  003882  0E00               	movlw	0
 10456  003884  6E46               	movwf	_uart1TxTail^0,c	;volatile
 10457  003886                     i1l5291:
 10458                           
 10459                           ; BSR set to: 61
 10460                           ;mcc_generated_files/uart1.c: 263:         uart1TxBufferRemaining++;
 10461  003886  2A4C               	incf	_uart1TxBufferRemaining^0,f,c	;volatile
 10462                           
 10463                           ;mcc_generated_files/uart1.c: 264:     }
 10464  003888  EF48  F01C         	goto	i1l336
 10465  00388C                     i1l333:
 10466                           
 10467                           ;mcc_generated_files/uart1.c: 266:     {;mcc_generated_files/uart1.c: 267:         PIE3b
      +                          its.U1TXIE = 0;
 10468  00388C  0139               	movlb	57	; () banked
 10469  00388E  9993               	bcf	147,4,b	;volatile
 10470  003890                     i1l336:
 10471  003890  0012               	return		;funcret
 10472  003892                     __end_of_UART1_Transmit_ISR:
 10473                           	callstack 0
 10474                           
 10475 ;; *************** function _UART1_rx_vect_isr *****************
 10476 ;; Defined at:
 10477 ;;		line 243 in file "mcc_generated_files/uart1.c"
 10478 ;; Parameters:    Size  Location     Type
 10479 ;;		None
 10480 ;; Auto vars:     Size  Location     Type
 10481 ;;		None
 10482 ;; Return value:  Size  Location     Type
 10483 ;;                  1    wreg      void 
 10484 ;; Registers used:
 10485 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 10486 ;; Tracked objects:
 10487 ;;		On entry : 0/0
 10488 ;;		On exit  : 0/0
 10489 ;;		Unchanged: 0/0
 10490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10493 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10494 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10495 ;;Total ram usage:        1 bytes
 10496 ;; Hardware stack levels used: 1
 10497 ;; Hardware stack levels required when called: 7
 10498 ;; This function calls:
 10499 ;;		Absolute function
 10500 ;;		_UART1_Receive_ISR
 10501 ;; This function is called by:
 10502 ;;		Interrupt level 1
 10503 ;; This function uses a non-reentrant model
 10504 ;;
 10505                           
 10506                           	psect	text66
 10507  003948                     __ptext66:
 10508                           	callstack 0
 10509  003948                     _UART1_rx_vect_isr:
 10510                           	callstack 12
 10511                           
 10512                           ;incstack = 0
 10513  003948  006F FF60  F012    	movff	status,??_UART1_rx_vect_isr
 10514  00394E                     
 10515                           ;mcc_generated_files/uart1.c: 245:     if(UART1_RxInterruptHandler)
 10516  00394E  0100               	movlb	0	; () banked
 10517  003950  51F6               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 10518  003952  11F7               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 10519  003954  B4D8               	btfsc	status,2,c
 10520  003956  EFAF  F01C         	goto	i1u423_21
 10521  00395A  EFB1  F01C         	goto	i1u423_20
 10522  00395E                     i1u423_21:
 10523  00395E  EFBD  F01C         	goto	i1l330
 10524  003962                     i1u423_20:
 10525  003962                     
 10526                           ; BSR set to: 0
 10527                           ;mcc_generated_files/uart1.c: 246:     {;mcc_generated_files/uart1.c: 247:         UART1
      +                          _RxInterruptHandler();
 10528  003962  D802               	call	i1u424_28
 10529  003964  EFBD  F01C         	goto	i1u424_29
 10530  003968                     i1u424_28:
 10531  003968  0005               	push	
 10532  00396A  6EFA               	movwf	pclath,c
 10533  00396C  51F6               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 10534  00396E  6EFD               	movwf	tosl,c
 10535  003970  51F7               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 10536  003972  6EFE               	movwf	tosh,c
 10537  003974  6AFF               	clrf	tosu,c
 10538  003976  50FA               	movf	pclath,w,c
 10539  003978  0012               	return		;indir
 10540  00397A                     i1u424_29:
 10541  00397A                     i1l330:
 10542  00397A  0060  F04B  FFD8   	movff	??_UART1_rx_vect_isr,status
 10543  003980  0011               	retfie		f
 10544  003982                     __end_of_UART1_rx_vect_isr:
 10545                           	callstack 0
 10546                           
 10547 ;; *************** function _UART1_Receive_ISR *****************
 10548 ;; Defined at:
 10549 ;;		line 273 in file "mcc_generated_files/uart1.c"
 10550 ;; Parameters:    Size  Location     Type
 10551 ;;		None
 10552 ;; Auto vars:     Size  Location     Type
 10553 ;;		None
 10554 ;; Return value:  Size  Location     Type
 10555 ;;                  1    wreg      void 
 10556 ;; Registers used:
 10557 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 10558 ;; Tracked objects:
 10559 ;;		On entry : 0/0
 10560 ;;		On exit  : 0/0
 10561 ;;		Unchanged: 0/0
 10562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10566 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10567 ;;Total ram usage:        0 bytes
 10568 ;; Hardware stack levels used: 1
 10569 ;; Hardware stack levels required when called: 6
 10570 ;; This function calls:
 10571 ;;		Absolute function
 10572 ;;		_UART1_DefaultErrorHandler
 10573 ;;		_UART1_DefaultFramingErrorHandler
 10574 ;;		_UART1_DefaultOverrunErrorHandler
 10575 ;;		_UART1_RxDataHandler
 10576 ;; This function is called by:
 10577 ;;		_UART1_Initialize
 10578 ;;		_UART1_rx_vect_isr
 10579 ;; This function uses a non-reentrant model
 10580 ;;
 10581                           
 10582                           	psect	text67
 10583  003276                     __ptext67:
 10584                           	callstack 0
 10585  003276                     _UART1_Receive_ISR:
 10586                           	callstack 12
 10587  003276                     
 10588                           ;mcc_generated_files/uart1.c: 276:     uart1RxStatusBuffer[uart1RxHead].status = 0;
 10589  003276  0E60               	movlw	low _uart1RxStatusBuffer
 10590  003278  2445               	addwf	_uart1RxHead^0,w,c	;volatile
 10591  00327A  6ED9               	movwf	fsr2l,c
 10592  00327C  6ADA               	clrf	fsr2h,c
 10593  00327E  0E00               	movlw	high _uart1RxStatusBuffer
 10594  003280  22DA               	addwfc	fsr2h,f,c
 10595  003282  0E00               	movlw	0
 10596  003284  6EDF               	movwf	indf2,c
 10597  003286                     
 10598                           ;mcc_generated_files/uart1.c: 278:     if(U1ERRIRbits.FERIF){
 10599  003286  013D               	movlb	61	; () banked
 10600  003288  A7F9               	btfss	249,3,b	;volatile
 10601  00328A  EF49  F019         	goto	i1u405_21
 10602  00328E  EF4B  F019         	goto	i1u405_20
 10603  003292                     i1u405_21:
 10604  003292  EF5F  F019         	goto	i1l5301
 10605  003296                     i1u405_20:
 10606  003296                     
 10607                           ; BSR set to: 61
 10608                           ;mcc_generated_files/uart1.c: 279:         uart1RxStatusBuffer[uart1RxHead].ferr = 1;
 10609  003296  0E60               	movlw	low _uart1RxStatusBuffer
 10610  003298  2445               	addwf	_uart1RxHead^0,w,c	;volatile
 10611  00329A  6ED9               	movwf	fsr2l,c
 10612  00329C  6ADA               	clrf	fsr2h,c
 10613  00329E  0E00               	movlw	high _uart1RxStatusBuffer
 10614  0032A0  22DA               	addwfc	fsr2h,f,c
 10615  0032A2  0100               	movlb	0	; () banked
 10616  0032A4  82DF               	bsf	indf2,1,c
 10617  0032A6                     
 10618                           ; BSR set to: 0
 10619                           ;mcc_generated_files/uart1.c: 280:         UART1_FramingErrorHandler();
 10620  0032A6  D802               	call	i1u406_28
 10621  0032A8  EF5F  F019         	goto	i1u406_29
 10622  0032AC                     i1u406_28:
 10623  0032AC  0005               	push	
 10624  0032AE  6EFA               	movwf	pclath,c
 10625  0032B0  51F2               	movf	_UART1_FramingErrorHandler& (0+255),w,b
 10626  0032B2  6EFD               	movwf	tosl,c
 10627  0032B4  51F3               	movf	(_UART1_FramingErrorHandler+1)& (0+255),w,b
 10628  0032B6  6EFE               	movwf	tosh,c
 10629  0032B8  6AFF               	clrf	tosu,c
 10630  0032BA  50FA               	movf	pclath,w,c
 10631  0032BC  0012               	return		;indir
 10632  0032BE                     i1u406_29:
 10633  0032BE                     i1l5301:
 10634                           
 10635                           ;mcc_generated_files/uart1.c: 283:     if(U1ERRIRbits.RXFOIF){
 10636  0032BE  013D               	movlb	61	; () banked
 10637  0032C0  A3F9               	btfss	249,1,b	;volatile
 10638  0032C2  EF65  F019         	goto	i1u407_21
 10639  0032C6  EF67  F019         	goto	i1u407_20
 10640  0032CA                     i1u407_21:
 10641  0032CA  EF7B  F019         	goto	i1l5307
 10642  0032CE                     i1u407_20:
 10643  0032CE                     
 10644                           ; BSR set to: 61
 10645                           ;mcc_generated_files/uart1.c: 284:         uart1RxStatusBuffer[uart1RxHead].oerr = 1;
 10646  0032CE  0E60               	movlw	low _uart1RxStatusBuffer
 10647  0032D0  2445               	addwf	_uart1RxHead^0,w,c	;volatile
 10648  0032D2  6ED9               	movwf	fsr2l,c
 10649  0032D4  6ADA               	clrf	fsr2h,c
 10650  0032D6  0E00               	movlw	high _uart1RxStatusBuffer
 10651  0032D8  22DA               	addwfc	fsr2h,f,c
 10652  0032DA  0100               	movlb	0	; () banked
 10653  0032DC  84DF               	bsf	indf2,2,c
 10654  0032DE                     
 10655                           ; BSR set to: 0
 10656                           ;mcc_generated_files/uart1.c: 285:         UART1_OverrunErrorHandler();
 10657  0032DE  D802               	call	i1u408_28
 10658  0032E0  EF7B  F019         	goto	i1u408_29
 10659  0032E4                     i1u408_28:
 10660  0032E4  0005               	push	
 10661  0032E6  6EFA               	movwf	pclath,c
 10662  0032E8  51F0               	movf	_UART1_OverrunErrorHandler& (0+255),w,b
 10663  0032EA  6EFD               	movwf	tosl,c
 10664  0032EC  51F1               	movf	(_UART1_OverrunErrorHandler+1)& (0+255),w,b
 10665  0032EE  6EFE               	movwf	tosh,c
 10666  0032F0  6AFF               	clrf	tosu,c
 10667  0032F2  50FA               	movf	pclath,w,c
 10668  0032F4  0012               	return		;indir
 10669  0032F6                     i1u408_29:
 10670  0032F6                     i1l5307:
 10671                           
 10672                           ;mcc_generated_files/uart1.c: 288:     if(uart1RxStatusBuffer[uart1RxHead].status){
 10673  0032F6  0E60               	movlw	low _uart1RxStatusBuffer
 10674  0032F8  2445               	addwf	_uart1RxHead^0,w,c	;volatile
 10675  0032FA  6ED9               	movwf	fsr2l,c
 10676  0032FC  6ADA               	clrf	fsr2h,c
 10677  0032FE  0E00               	movlw	high _uart1RxStatusBuffer
 10678  003300  22DA               	addwfc	fsr2h,f,c
 10679  003302  50DF               	movf	indf2,w,c
 10680  003304  B4D8               	btfsc	status,2,c
 10681  003306  EF87  F019         	goto	i1u409_21
 10682  00330A  EF89  F019         	goto	i1u409_20
 10683  00330E                     i1u409_21:
 10684  00330E  EF98  F019         	goto	i1l5311
 10685  003312                     i1u409_20:
 10686  003312                     
 10687                           ;mcc_generated_files/uart1.c: 289:         UART1_ErrorHandler();
 10688  003312  D802               	call	i1u410_28
 10689  003314  EF96  F019         	goto	i1u410_29
 10690  003318                     i1u410_28:
 10691  003318  0005               	push	
 10692  00331A  6EFA               	movwf	pclath,c
 10693  00331C  0100               	movlb	0	; () banked
 10694  00331E  51EE               	movf	_UART1_ErrorHandler& (0+255),w,b
 10695  003320  6EFD               	movwf	tosl,c
 10696  003322  51EF               	movf	(_UART1_ErrorHandler+1)& (0+255),w,b
 10697  003324  6EFE               	movwf	tosh,c
 10698  003326  6AFF               	clrf	tosu,c
 10699  003328  50FA               	movf	pclath,w,c
 10700  00332A  0012               	return		;indir
 10701  00332C                     i1u410_29:
 10702                           
 10703                           ;mcc_generated_files/uart1.c: 290:     } else {
 10704  00332C  EF9A  F019         	goto	i1l343
 10705  003330                     i1l5311:
 10706                           
 10707                           ;mcc_generated_files/uart1.c: 291:         UART1_RxDataHandler();
 10708  003330  EC9E  F01E         	call	_UART1_RxDataHandler	;wreg free
 10709  003334                     i1l343:
 10710  003334  0012               	return		;funcret
 10711  003336                     __end_of_UART1_Receive_ISR:
 10712                           	callstack 0
 10713                           
 10714 ;; *************** function _UART1_DefaultOverrunErrorHandler *****************
 10715 ;; Defined at:
 10716 ;;		line 309 in file "mcc_generated_files/uart1.c"
 10717 ;; Parameters:    Size  Location     Type
 10718 ;;		None
 10719 ;; Auto vars:     Size  Location     Type
 10720 ;;		None
 10721 ;; Return value:  Size  Location     Type
 10722 ;;                  1    wreg      void 
 10723 ;; Registers used:
 10724 ;;		None
 10725 ;; Tracked objects:
 10726 ;;		On entry : 0/0
 10727 ;;		On exit  : 0/0
 10728 ;;		Unchanged: 0/0
 10729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10733 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10734 ;;Total ram usage:        0 bytes
 10735 ;; Hardware stack levels used: 1
 10736 ;; Hardware stack levels required when called: 4
 10737 ;; This function calls:
 10738 ;;		Nothing
 10739 ;; This function is called by:
 10740 ;;		_UART1_Initialize
 10741 ;;		_UART1_Receive_ISR
 10742 ;; This function uses a non-reentrant model
 10743 ;;
 10744                           
 10745                           	psect	text68
 10746  003F8C                     __ptext68:
 10747                           	callstack 0
 10748  003F8C                     _UART1_DefaultOverrunErrorHandler:
 10749                           	callstack 13
 10750  003F8C  0012               	return		;funcret
 10751  003F8E                     __end_of_UART1_DefaultOverrunErrorHandler:
 10752                           	callstack 0
 10753                           
 10754 ;; *************** function _UART1_DefaultFramingErrorHandler *****************
 10755 ;; Defined at:
 10756 ;;		line 307 in file "mcc_generated_files/uart1.c"
 10757 ;; Parameters:    Size  Location     Type
 10758 ;;		None
 10759 ;; Auto vars:     Size  Location     Type
 10760 ;;		None
 10761 ;; Return value:  Size  Location     Type
 10762 ;;                  1    wreg      void 
 10763 ;; Registers used:
 10764 ;;		None
 10765 ;; Tracked objects:
 10766 ;;		On entry : 0/0
 10767 ;;		On exit  : 0/0
 10768 ;;		Unchanged: 0/0
 10769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10773 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10774 ;;Total ram usage:        0 bytes
 10775 ;; Hardware stack levels used: 1
 10776 ;; Hardware stack levels required when called: 4
 10777 ;; This function calls:
 10778 ;;		Nothing
 10779 ;; This function is called by:
 10780 ;;		_UART1_Initialize
 10781 ;;		_UART1_Receive_ISR
 10782 ;; This function uses a non-reentrant model
 10783 ;;
 10784                           
 10785                           	psect	text69
 10786  003F8E                     __ptext69:
 10787                           	callstack 0
 10788  003F8E                     _UART1_DefaultFramingErrorHandler:
 10789                           	callstack 13
 10790  003F8E  0012               	return		;funcret
 10791  003F90                     __end_of_UART1_DefaultFramingErrorHandler:
 10792                           	callstack 0
 10793                           
 10794 ;; *************** function _UART1_DefaultErrorHandler *****************
 10795 ;; Defined at:
 10796 ;;		line 311 in file "mcc_generated_files/uart1.c"
 10797 ;; Parameters:    Size  Location     Type
 10798 ;;		None
 10799 ;; Auto vars:     Size  Location     Type
 10800 ;;		None
 10801 ;; Return value:  Size  Location     Type
 10802 ;;                  1    wreg      void 
 10803 ;; Registers used:
 10804 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10805 ;; Tracked objects:
 10806 ;;		On entry : 0/0
 10807 ;;		On exit  : 0/0
 10808 ;;		Unchanged: 0/0
 10809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10813 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10814 ;;Total ram usage:        0 bytes
 10815 ;; Hardware stack levels used: 1
 10816 ;; Hardware stack levels required when called: 5
 10817 ;; This function calls:
 10818 ;;		_UART1_RxDataHandler
 10819 ;; This function is called by:
 10820 ;;		_UART1_Initialize
 10821 ;;		_UART1_Receive_ISR
 10822 ;; This function uses a non-reentrant model
 10823 ;;
 10824                           
 10825                           	psect	text70
 10826  003F80                     __ptext70:
 10827                           	callstack 0
 10828  003F80                     _UART1_DefaultErrorHandler:
 10829                           	callstack 12
 10830  003F80                     
 10831                           ;mcc_generated_files/uart1.c: 312:     UART1_RxDataHandler();
 10832  003F80  EC9E  F01E         	call	_UART1_RxDataHandler	;wreg free
 10833  003F84  0012               	return		;funcret
 10834  003F86                     __end_of_UART1_DefaultErrorHandler:
 10835                           	callstack 0
 10836                           
 10837 ;; *************** function _UART1_RxDataHandler *****************
 10838 ;; Defined at:
 10839 ;;		line 297 in file "mcc_generated_files/uart1.c"
 10840 ;; Parameters:    Size  Location     Type
 10841 ;;		None
 10842 ;; Auto vars:     Size  Location     Type
 10843 ;;		None
 10844 ;; Return value:  Size  Location     Type
 10845 ;;                  1    wreg      void 
 10846 ;; Registers used:
 10847 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10848 ;; Tracked objects:
 10849 ;;		On entry : 0/0
 10850 ;;		On exit  : 0/0
 10851 ;;		Unchanged: 0/0
 10852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10856 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10857 ;;Total ram usage:        0 bytes
 10858 ;; Hardware stack levels used: 1
 10859 ;; Hardware stack levels required when called: 4
 10860 ;; This function calls:
 10861 ;;		Nothing
 10862 ;; This function is called by:
 10863 ;;		_UART1_Receive_ISR
 10864 ;;		_UART1_DefaultErrorHandler
 10865 ;; This function uses a non-reentrant model
 10866 ;;
 10867                           
 10868                           	psect	text71
 10869  003D3C                     __ptext71:
 10870                           	callstack 0
 10871  003D3C                     _UART1_RxDataHandler:
 10872                           	callstack 13
 10873  003D3C                     
 10874                           ;mcc_generated_files/uart1.c: 299:     uart1RxBuffer[uart1RxHead++] = U1RXB;
 10875  003D3C  0E68               	movlw	low _uart1RxBuffer
 10876  003D3E  2445               	addwf	_uart1RxHead^0,w,c	;volatile
 10877  003D40  6ED9               	movwf	fsr2l,c
 10878  003D42  6ADA               	clrf	fsr2h,c
 10879  003D44  0E00               	movlw	high _uart1RxBuffer
 10880  003D46  22DA               	addwfc	fsr2h,f,c
 10881  003D48  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 10882  003D4E  2A45               	incf	_uart1RxHead^0,f,c	;volatile
 10883  003D50                     
 10884                           ;mcc_generated_files/uart1.c: 300:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 10885  003D50  0E07               	movlw	7
 10886  003D52  6445               	cpfsgt	_uart1RxHead^0,c	;volatile
 10887  003D54  EFAE  F01E         	goto	i1u281_21
 10888  003D58  EFB0  F01E         	goto	i1u281_20
 10889  003D5C                     i1u281_21:
 10890  003D5C  EFB2  F01E         	goto	i1l4377
 10891  003D60                     i1u281_20:
 10892  003D60                     
 10893                           ;mcc_generated_files/uart1.c: 301:     {;mcc_generated_files/uart1.c: 302:         uart1
      +                          RxHead = 0;
 10894  003D60  0E00               	movlw	0
 10895  003D62  6E45               	movwf	_uart1RxHead^0,c	;volatile
 10896  003D64                     i1l4377:
 10897                           
 10898                           ;mcc_generated_files/uart1.c: 304:     uart1RxCount++;
 10899  003D64  2A43               	incf	_uart1RxCount^0,f,c	;volatile
 10900  003D66  0012               	return		;funcret
 10901  003D68                     __end_of_UART1_RxDataHandler:
 10902                           	callstack 0
 10903                           
 10904 ;; *************** function _TMR4_ISR *****************
 10905 ;; Defined at:
 10906 ;;		line 166 in file "mcc_generated_files/tmr4.c"
 10907 ;; Parameters:    Size  Location     Type
 10908 ;;		None
 10909 ;; Auto vars:     Size  Location     Type
 10910 ;;		None
 10911 ;; Return value:  Size  Location     Type
 10912 ;;                  1    wreg      void 
 10913 ;; Registers used:
 10914 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 10915 ;; Tracked objects:
 10916 ;;		On entry : 0/0
 10917 ;;		On exit  : 0/0
 10918 ;;		Unchanged: 0/0
 10919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10922 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10923 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10924 ;;Total ram usage:        1 bytes
 10925 ;; Hardware stack levels used: 1
 10926 ;; Hardware stack levels required when called: 6
 10927 ;; This function calls:
 10928 ;;		_TMR4_CallBack
 10929 ;; This function is called by:
 10930 ;;		Interrupt level 1
 10931 ;; This function uses a non-reentrant model
 10932 ;;
 10933                           
 10934                           	psect	text72
 10935  0039BC                     __ptext72:
 10936                           	callstack 0
 10937  0039BC                     _TMR4_ISR:
 10938                           	callstack 13
 10939                           
 10940                           ;incstack = 0
 10941  0039BC  006F FF60  F013    	movff	status,??_TMR4_ISR
 10942  0039C2                     
 10943                           ;mcc_generated_files/tmr4.c: 168:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr4.c: 171:     PIR7bits.TMR4IF = 0;
 10944  0039C2  0139               	movlb	57	; () banked
 10945  0039C4  91A7               	bcf	167,0,b	;volatile
 10946  0039C6                     
 10947                           ; BSR set to: 57
 10948                           ;mcc_generated_files/tmr4.c: 174:     if (++CountCallBack >= 10)
 10949  0039C6  4A3F               	infsnz	TMR4_ISR@CountCallBack^0,f,c	;volatile
 10950  0039C8  2A40               	incf	(TMR4_ISR@CountCallBack+1)^0,f,c	;volatile
 10951  0039CA  5040               	movf	(TMR4_ISR@CountCallBack+1)^0,w,c	;volatile
 10952  0039CC  E109               	bnz	i1u427_20
 10953  0039CE  0E0A               	movlw	10
 10954  0039D0  5C3F               	subwf	TMR4_ISR@CountCallBack^0,w,c	;volatile
 10955  0039D2  A0D8               	btfss	status,0,c
 10956  0039D4  EFEE  F01C         	goto	i1u427_21
 10957  0039D8  EFF0  F01C         	goto	i1u427_20
 10958  0039DC                     i1u427_21:
 10959  0039DC  EFF6  F01C         	goto	i1l610
 10960  0039E0                     i1u427_20:
 10961  0039E0                     
 10962                           ; BSR set to: 57
 10963                           ;mcc_generated_files/tmr4.c: 175:     {;mcc_generated_files/tmr4.c: 177:         TMR4_Ca
      +                          llBack();
 10964  0039E0  EC5B  F01E         	call	_TMR4_CallBack	;wreg free
 10965  0039E4                     
 10966                           ;mcc_generated_files/tmr4.c: 180:         CountCallBack = 0;
 10967  0039E4  0E00               	movlw	0
 10968  0039E6  6E40               	movwf	(TMR4_ISR@CountCallBack+1)^0,c	;volatile
 10969  0039E8  0E00               	movlw	0
 10970  0039EA  6E3F               	movwf	TMR4_ISR@CountCallBack^0,c	;volatile
 10971  0039EC                     i1l610:
 10972  0039EC  0060  F04F  FFD8   	movff	??_TMR4_ISR,status
 10973  0039F2  0011               	retfie		f
 10974  0039F4                     __end_of_TMR4_ISR:
 10975                           	callstack 0
 10976                           
 10977 ;; *************** function _TMR4_CallBack *****************
 10978 ;; Defined at:
 10979 ;;		line 184 in file "mcc_generated_files/tmr4.c"
 10980 ;; Parameters:    Size  Location     Type
 10981 ;;		None
 10982 ;; Auto vars:     Size  Location     Type
 10983 ;;		None
 10984 ;; Return value:  Size  Location     Type
 10985 ;;                  1    wreg      void 
 10986 ;; Registers used:
 10987 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 10988 ;; Tracked objects:
 10989 ;;		On entry : 0/0
 10990 ;;		On exit  : 0/0
 10991 ;;		Unchanged: 0/0
 10992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10996 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10997 ;;Total ram usage:        0 bytes
 10998 ;; Hardware stack levels used: 1
 10999 ;; Hardware stack levels required when called: 5
 11000 ;; This function calls:
 11001 ;;		Absolute function
 11002 ;;		_TMR4_10msISR
 11003 ;;		_TMR4_DefaultInterruptHandler
 11004 ;; This function is called by:
 11005 ;;		_TMR4_ISR
 11006 ;; This function uses a non-reentrant model
 11007 ;;
 11008                           
 11009                           	psect	text73
 11010  003CB6                     __ptext73:
 11011                           	callstack 0
 11012  003CB6                     _TMR4_CallBack:
 11013                           	callstack 13
 11014  003CB6                     
 11015                           ;mcc_generated_files/tmr4.c: 188:     if(TMR4_InterruptHandler)
 11016  003CB6  0100               	movlb	0	; () banked
 11017  003CB8  51E6               	movf	_TMR4_InterruptHandler& (0+255),w,b
 11018  003CBA  11E7               	iorwf	(_TMR4_InterruptHandler+1)& (0+255),w,b
 11019  003CBC  B4D8               	btfsc	status,2,c
 11020  003CBE  EF63  F01E         	goto	i1u412_21
 11021  003CC2  EF65  F01E         	goto	i1u412_20
 11022  003CC6                     i1u412_21:
 11023  003CC6  EF71  F01E         	goto	i1l614
 11024  003CCA                     i1u412_20:
 11025  003CCA                     
 11026                           ; BSR set to: 0
 11027                           ;mcc_generated_files/tmr4.c: 189:     {;mcc_generated_files/tmr4.c: 190:         TMR4_In
      +                          terruptHandler();
 11028  003CCA  D802               	call	i1u413_28
 11029  003CCC  EF71  F01E         	goto	i1u413_29
 11030  003CD0                     i1u413_28:
 11031  003CD0  0005               	push	
 11032  003CD2  6EFA               	movwf	pclath,c
 11033  003CD4  51E6               	movf	_TMR4_InterruptHandler& (0+255),w,b
 11034  003CD6  6EFD               	movwf	tosl,c
 11035  003CD8  51E7               	movf	(_TMR4_InterruptHandler+1)& (0+255),w,b
 11036  003CDA  6EFE               	movwf	tosh,c
 11037  003CDC  6AFF               	clrf	tosu,c
 11038  003CDE  50FA               	movf	pclath,w,c
 11039  003CE0  0012               	return		;indir
 11040  003CE2                     i1u413_29:
 11041  003CE2                     i1l614:
 11042  003CE2  0012               	return		;funcret
 11043  003CE4                     __end_of_TMR4_CallBack:
 11044                           	callstack 0
 11045                           
 11046 ;; *************** function _TMR4_10msISR *****************
 11047 ;; Defined at:
 11048 ;;		line 58 in file "main.c"
 11049 ;; Parameters:    Size  Location     Type
 11050 ;;		None
 11051 ;; Auto vars:     Size  Location     Type
 11052 ;;		None
 11053 ;; Return value:  Size  Location     Type
 11054 ;;                  1    wreg      void 
 11055 ;; Registers used:
 11056 ;;		status,2, status,0
 11057 ;; Tracked objects:
 11058 ;;		On entry : 0/0
 11059 ;;		On exit  : 0/0
 11060 ;;		Unchanged: 0/0
 11061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11065 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11066 ;;Total ram usage:        0 bytes
 11067 ;; Hardware stack levels used: 1
 11068 ;; Hardware stack levels required when called: 4
 11069 ;; This function calls:
 11070 ;;		Nothing
 11071 ;; This function is called by:
 11072 ;;		_main
 11073 ;;		_TMR4_CallBack
 11074 ;; This function uses a non-reentrant model
 11075 ;;
 11076                           
 11077                           	psect	text74
 11078  003F86                     __ptext74:
 11079                           	callstack 0
 11080  003F86                     _TMR4_10msISR:
 11081                           	callstack 13
 11082  003F86                     
 11083                           ;main.c: 59:     ++cycle10ms;
 11084  003F86  0100               	movlb	0	; () banked
 11085  003F88  2B9D               	incf	_cycle10ms& (0+255),f,b
 11086  003F8A                     
 11087                           ; BSR set to: 0
 11088  003F8A  0012               	return		;funcret
 11089  003F8C                     __end_of_TMR4_10msISR:
 11090                           	callstack 0
 11091                           
 11092 ;; *************** function _TMR4_DefaultInterruptHandler *****************
 11093 ;; Defined at:
 11094 ;;		line 198 in file "mcc_generated_files/tmr4.c"
 11095 ;; Parameters:    Size  Location     Type
 11096 ;;		None
 11097 ;; Auto vars:     Size  Location     Type
 11098 ;;		None
 11099 ;; Return value:  Size  Location     Type
 11100 ;;                  1    wreg      void 
 11101 ;; Registers used:
 11102 ;;		None
 11103 ;; Tracked objects:
 11104 ;;		On entry : 0/0
 11105 ;;		On exit  : 0/0
 11106 ;;		Unchanged: 0/0
 11107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11111 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11112 ;;Total ram usage:        0 bytes
 11113 ;; Hardware stack levels used: 1
 11114 ;; Hardware stack levels required when called: 4
 11115 ;; This function calls:
 11116 ;;		Nothing
 11117 ;; This function is called by:
 11118 ;;		_TMR4_Initialize
 11119 ;;		_TMR4_CallBack
 11120 ;; This function uses a non-reentrant model
 11121 ;;
 11122                           
 11123                           	psect	text75
 11124  003F90                     __ptext75:
 11125                           	callstack 0
 11126  003F90                     _TMR4_DefaultInterruptHandler:
 11127                           	callstack 13
 11128  003F90  0012               	return		;funcret
 11129  003F92                     __end_of_TMR4_DefaultInterruptHandler:
 11130                           	callstack 0
 11131                           
 11132 ;; *************** function _Default_ISR *****************
 11133 ;; Defined at:
 11134 ;;		line 83 in file "mcc_generated_files/interrupt_manager.c"
 11135 ;; Parameters:    Size  Location     Type
 11136 ;;		None
 11137 ;; Auto vars:     Size  Location     Type
 11138 ;;		None
 11139 ;; Return value:  Size  Location     Type
 11140 ;;                  1    wreg      void 
 11141 ;; Registers used:
 11142 ;;		None
 11143 ;; Tracked objects:
 11144 ;;		On entry : 0/0
 11145 ;;		On exit  : 0/0
 11146 ;;		Unchanged: 0/0
 11147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11151 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11152 ;;Total ram usage:        0 bytes
 11153 ;; Hardware stack levels used: 1
 11154 ;; This function calls:
 11155 ;;		Nothing
 11156 ;; This function is called by:
 11157 ;;		Interrupt level 2
 11158 ;; This function uses a non-reentrant model
 11159 ;;
 11160                           
 11161                           	psect	text76
 11162  003F94                     __ptext76:
 11163                           	callstack 0
 11164  003F94                     _Default_ISR:
 11165                           	callstack 15
 11166  003F94  0011               	retfie		f
 11167  003F96                     __end_of_Default_ISR:
 11168                           	callstack 0
 11169                           
 11170 ;; *************** function _TMR5_GATE_ISR *****************
 11171 ;; Defined at:
 11172 ;;		line 175 in file "mcc_generated_files/tmr5.c"
 11173 ;; Parameters:    Size  Location     Type
 11174 ;;		None
 11175 ;; Auto vars:     Size  Location     Type
 11176 ;;		None
 11177 ;; Return value:  Size  Location     Type
 11178 ;;                  1    wreg      void 
 11179 ;; Registers used:
 11180 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 11181 ;; Tracked objects:
 11182 ;;		On entry : 0/0
 11183 ;;		On exit  : 0/0
 11184 ;;		Unchanged: 0/0
 11185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11189 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11190 ;;Total ram usage:        0 bytes
 11191 ;; Hardware stack levels used: 1
 11192 ;; Hardware stack levels required when called: 3
 11193 ;; This function calls:
 11194 ;;		Absolute function
 11195 ;;		_TMR5_DefaultGateInterruptHandler
 11196 ;; This function is called by:
 11197 ;;		Interrupt level 2
 11198 ;; This function uses a non-reentrant model
 11199 ;;
 11200                           
 11201                           	psect	text77
 11202  003B98                     __ptext77:
 11203                           	callstack 0
 11204  003B98                     _TMR5_GATE_ISR:
 11205                           	callstack 12
 11206  003B98                     
 11207                           ;mcc_generated_files/tmr5.c: 178:     PIR8bits.TMR5GIF = 0;
 11208  003B98  0139               	movlb	57	; () banked
 11209  003B9A  9FA8               	bcf	168,7,b	;volatile
 11210  003B9C                     
 11211                           ; BSR set to: 57
 11212                           ;mcc_generated_files/tmr5.c: 180:     if(TMR5_GateInterruptHandler)
 11213  003B9C  0100               	movlb	0	; () banked
 11214  003B9E  51EA               	movf	_TMR5_GateInterruptHandler& (0+255),w,b
 11215  003BA0  11EB               	iorwf	(_TMR5_GateInterruptHandler+1)& (0+255),w,b
 11216  003BA2  B4D8               	btfsc	status,2,c
 11217  003BA4  EFD6  F01D         	goto	i2u425_41
 11218  003BA8  EFD8  F01D         	goto	i2u425_40
 11219  003BAC                     i2u425_41:
 11220  003BAC  EFE4  F01D         	goto	i2l474
 11221  003BB0                     i2u425_40:
 11222  003BB0                     
 11223                           ; BSR set to: 0
 11224                           ;mcc_generated_files/tmr5.c: 181:     {;mcc_generated_files/tmr5.c: 182:         TMR5_Ga
      +                          teInterruptHandler();
 11225  003BB0  D802               	call	i2u426_48
 11226  003BB2  EFE4  F01D         	goto	i2u426_49
 11227  003BB6                     i2u426_48:
 11228  003BB6  0005               	push	
 11229  003BB8  6EFA               	movwf	pclath,c
 11230  003BBA  51EA               	movf	_TMR5_GateInterruptHandler& (0+255),w,b
 11231  003BBC  6EFD               	movwf	tosl,c
 11232  003BBE  51EB               	movf	(_TMR5_GateInterruptHandler+1)& (0+255),w,b
 11233  003BC0  6EFE               	movwf	tosh,c
 11234  003BC2  6AFF               	clrf	tosu,c
 11235  003BC4  50FA               	movf	pclath,w,c
 11236  003BC6  0012               	return		;indir
 11237  003BC8                     i2u426_49:
 11238  003BC8                     i2l474:
 11239  003BC8  0011               	retfie		f
 11240  003BCA                     __end_of_TMR5_GATE_ISR:
 11241                           	callstack 0
 11242                           
 11243 ;; *************** function _TMR5_DefaultGateInterruptHandler *****************
 11244 ;; Defined at:
 11245 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 11246 ;; Parameters:    Size  Location     Type
 11247 ;;		None
 11248 ;; Auto vars:     Size  Location     Type
 11249 ;;		None
 11250 ;; Return value:  Size  Location     Type
 11251 ;;                  1    wreg      void 
 11252 ;; Registers used:
 11253 ;;		wreg, status,2, status,0, cstack
 11254 ;; Tracked objects:
 11255 ;;		On entry : 0/0
 11256 ;;		On exit  : 0/0
 11257 ;;		Unchanged: 0/0
 11258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11262 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11263 ;;Total ram usage:        0 bytes
 11264 ;; Hardware stack levels used: 1
 11265 ;; Hardware stack levels required when called: 2
 11266 ;; This function calls:
 11267 ;;		_TMR5_ReadTimer
 11268 ;;		_TMR5_Reload
 11269 ;; This function is called by:
 11270 ;;		_TMR5_Initialize
 11271 ;;		_TMR5_GATE_ISR
 11272 ;; This function uses a non-reentrant model
 11273 ;;
 11274                           
 11275                           	psect	text78
 11276  003E4C                     __ptext78:
 11277                           	callstack 0
 11278  003E4C                     _TMR5_DefaultGateInterruptHandler:
 11279                           	callstack 12
 11280  003E4C                     
 11281                           ;mcc_generated_files/tmr5.c: 194:     distFront = TMR5_ReadTimer();
 11282  003E4C  EC04  F01F         	call	_TMR5_ReadTimer	;wreg free
 11283  003E50  C001  F0A0         	movff	?_TMR5_ReadTimer,_distFront	;volatile
 11284  003E54  C002  F0A1         	movff	?_TMR5_ReadTimer+1,_distFront+1	;volatile
 11285  003E58                     
 11286                           ;mcc_generated_files/tmr5.c: 195:     distFront >>= 1;
 11287  003E58  0100               	movlb	0	; () banked
 11288  003E5A  90D8               	bcf	status,0,c
 11289  003E5C  33A1               	rrcf	(_distFront+1)& (0+255),f,b	;volatile
 11290  003E5E  33A0               	rrcf	_distFront& (0+255),f,b	;volatile
 11291  003E60                     
 11292                           ; BSR set to: 0
 11293                           ;mcc_generated_files/tmr5.c: 196:     TMR5_Reload();
 11294  003E60  EC87  F01F         	call	_TMR5_Reload	;wreg free
 11295  003E64                     
 11296                           ;mcc_generated_files/tmr5.c: 197:     PIR8bits.TMR5GIF = 0;
 11297  003E64  0139               	movlb	57	; () banked
 11298  003E66  9FA8               	bcf	168,7,b	;volatile
 11299  003E68                     
 11300                           ; BSR set to: 57
 11301  003E68  0012               	return		;funcret
 11302  003E6A                     __end_of_TMR5_DefaultGateInterruptHandler:
 11303                           	callstack 0
 11304                           
 11305 ;; *************** function _TMR5_Reload *****************
 11306 ;; Defined at:
 11307 ;;		line 155 in file "mcc_generated_files/tmr5.c"
 11308 ;; Parameters:    Size  Location     Type
 11309 ;;		None
 11310 ;; Auto vars:     Size  Location     Type
 11311 ;;		None
 11312 ;; Return value:  Size  Location     Type
 11313 ;;                  1    wreg      void 
 11314 ;; Registers used:
 11315 ;;		wreg, status,2, cstack
 11316 ;; Tracked objects:
 11317 ;;		On entry : 0/0
 11318 ;;		On exit  : 0/0
 11319 ;;		Unchanged: 0/0
 11320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11324 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11325 ;;Total ram usage:        0 bytes
 11326 ;; Hardware stack levels used: 1
 11327 ;; Hardware stack levels required when called: 1
 11328 ;; This function calls:
 11329 ;;		_TMR5_WriteTimer
 11330 ;; This function is called by:
 11331 ;;		_TMR5_DefaultGateInterruptHandler
 11332 ;; This function uses a non-reentrant model
 11333 ;;
 11334                           
 11335                           	psect	text79
 11336  003F0E                     __ptext79:
 11337                           	callstack 0
 11338  003F0E                     _TMR5_Reload:
 11339                           	callstack 12
 11340  003F0E                     
 11341                           ;mcc_generated_files/tmr5.c: 157:     TMR5_WriteTimer(timer5ReloadVal);
 11342  003F0E  C0EC  F001         	movff	_timer5ReloadVal,TMR5_WriteTimer@timerVal	;volatile
 11343  003F12  C0ED  F002         	movff	_timer5ReloadVal+1,TMR5_WriteTimer@timerVal+1	;volatile
 11344  003F16  ECB4  F01E         	call	_TMR5_WriteTimer	;wreg free
 11345  003F1A  0012               	return		;funcret
 11346  003F1C                     __end_of_TMR5_Reload:
 11347                           	callstack 0
 11348                           
 11349 ;; *************** function _TMR5_WriteTimer *****************
 11350 ;; Defined at:
 11351 ;;		line 133 in file "mcc_generated_files/tmr5.c"
 11352 ;; Parameters:    Size  Location     Type
 11353 ;;  timerVal        2    0[COMRAM] unsigned short 
 11354 ;; Auto vars:     Size  Location     Type
 11355 ;;		None
 11356 ;; Return value:  Size  Location     Type
 11357 ;;                  1    wreg      void 
 11358 ;; Registers used:
 11359 ;;		wreg, status,2
 11360 ;; Tracked objects:
 11361 ;;		On entry : 0/0
 11362 ;;		On exit  : 0/0
 11363 ;;		Unchanged: 0/0
 11364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11365 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11368 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11369 ;;Total ram usage:        2 bytes
 11370 ;; Hardware stack levels used: 1
 11371 ;; This function calls:
 11372 ;;		Nothing
 11373 ;; This function is called by:
 11374 ;;		_TMR5_Reload
 11375 ;; This function uses a non-reentrant model
 11376 ;;
 11377                           
 11378                           	psect	text80
 11379  003D68                     __ptext80:
 11380                           	callstack 0
 11381  003D68                     _TMR5_WriteTimer:
 11382                           	callstack 12
 11383  003D68                     
 11384                           ;mcc_generated_files/tmr5.c: 133: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 134: {;mcc_generated_files/tmr5.c: 135:     if (T5CONbits.NOT_SYNC == 1)
 11385  003D68  A49A               	btfss	154,2,c	;volatile
 11386  003D6A  EFB9  F01E         	goto	i2u282_41
 11387  003D6E  EFBB  F01E         	goto	i2u282_40
 11388  003D72                     i2u282_41:
 11389  003D72  EFC4  F01E         	goto	i2l4391
 11390  003D76                     i2u282_40:
 11391  003D76                     
 11392                           ;mcc_generated_files/tmr5.c: 136:     {;mcc_generated_files/tmr5.c: 138:         T5CONbi
      +                          ts.TMR5ON = 0;
 11393  003D76  909A               	bcf	154,0,c	;volatile
 11394  003D78                     
 11395                           ;mcc_generated_files/tmr5.c: 141:         TMR5H = (uint8_t)(timerVal >> 8);
 11396  003D78  5002               	movf	(TMR5_WriteTimer@timerVal+1)^0,w,c
 11397  003D7A  6E99               	movwf	153,c	;volatile
 11398  003D7C                     
 11399                           ;mcc_generated_files/tmr5.c: 142:         TMR5L = (uint8_t)timerVal;
 11400  003D7C  0060  F007  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
 11401  003D82                     
 11402                           ;mcc_generated_files/tmr5.c: 145:         T5CONbits.TMR5ON =1;
 11403  003D82  809A               	bsf	154,0,c	;volatile
 11404                           
 11405                           ;mcc_generated_files/tmr5.c: 146:     }
 11406  003D84  EFC9  F01E         	goto	i2l456
 11407  003D88                     i2l4391:
 11408                           
 11409                           ;mcc_generated_files/tmr5.c: 148:     {;mcc_generated_files/tmr5.c: 150:         TMR5H =
      +                           (uint8_t)(timerVal >> 8);
 11410  003D88  5002               	movf	(TMR5_WriteTimer@timerVal+1)^0,w,c
 11411  003D8A  6E99               	movwf	153,c	;volatile
 11412  003D8C                     
 11413                           ;mcc_generated_files/tmr5.c: 151:         TMR5L = (uint8_t)timerVal;
 11414  003D8C  0060  F007  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
 11415  003D92                     i2l456:
 11416  003D92  0012               	return		;funcret
 11417  003D94                     __end_of_TMR5_WriteTimer:
 11418                           	callstack 0
 11419                           
 11420 ;; *************** function _TMR5_ReadTimer *****************
 11421 ;; Defined at:
 11422 ;;		line 117 in file "mcc_generated_files/tmr5.c"
 11423 ;; Parameters:    Size  Location     Type
 11424 ;;		None
 11425 ;; Auto vars:     Size  Location     Type
 11426 ;;  readVal         2    4[COMRAM] unsigned short 
 11427 ;;  readValLow      1    7[COMRAM] unsigned char 
 11428 ;;  readValHigh     1    6[COMRAM] unsigned char 
 11429 ;; Return value:  Size  Location     Type
 11430 ;;                  2    0[COMRAM] unsigned short 
 11431 ;; Registers used:
 11432 ;;		wreg, status,2
 11433 ;; Tracked objects:
 11434 ;;		On entry : 0/0
 11435 ;;		On exit  : 0/0
 11436 ;;		Unchanged: 0/0
 11437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11438 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11439 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11440 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11441 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11442 ;;Total ram usage:        8 bytes
 11443 ;; Hardware stack levels used: 1
 11444 ;; This function calls:
 11445 ;;		Nothing
 11446 ;; This function is called by:
 11447 ;;		_TMR5_DefaultGateInterruptHandler
 11448 ;; This function uses a non-reentrant model
 11449 ;;
 11450                           
 11451                           	psect	text81
 11452  003E08                     __ptext81:
 11453                           	callstack 0
 11454  003E08                     _TMR5_ReadTimer:
 11455                           	callstack 13
 11456  003E08                     
 11457                           ;mcc_generated_files/tmr5.c: 119:     uint16_t readVal;;mcc_generated_files/tmr5.c: 120:
      +                               uint8_t readValHigh;;mcc_generated_files/tmr5.c: 121:     uint8_t readValLow;;mcc_g
      +                          enerated_files/tmr5.c: 123:     T5CONbits.T5RD16 = 1;
 11458  003E08  829A               	bsf	154,1,c	;volatile
 11459                           
 11460                           ;mcc_generated_files/tmr5.c: 125:     readValLow = TMR5L;
 11461  003E0A  006F FE60  F008    	movff	16280,TMR5_ReadTimer@readValLow	;volatile
 11462                           
 11463                           ;mcc_generated_files/tmr5.c: 126:     readValHigh = TMR5H;
 11464  003E10  006F FE64  F007    	movff	16281,TMR5_ReadTimer@readValHigh	;volatile
 11465  003E16                     
 11466                           ;mcc_generated_files/tmr5.c: 128:     readVal = ((uint16_t)readValHigh << 8) | readValLo
      +                          w;
 11467  003E16  5007               	movf	TMR5_ReadTimer@readValHigh^0,w,c
 11468  003E18  6E03               	movwf	??_TMR5_ReadTimer^0,c
 11469  003E1A  5008               	movf	TMR5_ReadTimer@readValLow^0,w,c
 11470  003E1C  6E05               	movwf	TMR5_ReadTimer@readVal^0,c
 11471  003E1E  C003  F006         	movff	??_TMR5_ReadTimer,TMR5_ReadTimer@readVal+1
 11472  003E22                     
 11473                           ;mcc_generated_files/tmr5.c: 130:     return readVal;
 11474  003E22  C005  F001         	movff	TMR5_ReadTimer@readVal,?_TMR5_ReadTimer
 11475  003E26  C006  F002         	movff	TMR5_ReadTimer@readVal+1,?_TMR5_ReadTimer+1
 11476  003E2A  0012               	return		;funcret
 11477  003E2C                     __end_of_TMR5_ReadTimer:
 11478                           	callstack 0
 11479                           
 11480 ;; *************** function _SMT1_PR_ACQ_ISR *****************
 11481 ;; Defined at:
 11482 ;;		line 192 in file "mcc_generated_files/smt1.c"
 11483 ;; Parameters:    Size  Location     Type
 11484 ;;		None
 11485 ;; Auto vars:     Size  Location     Type
 11486 ;;		None
 11487 ;; Return value:  Size  Location     Type
 11488 ;;                  1    wreg      void 
 11489 ;; Registers used:
 11490 ;;		wreg, status,2, status,0
 11491 ;; Tracked objects:
 11492 ;;		On entry : 0/0
 11493 ;;		On exit  : 0/0
 11494 ;;		Unchanged: 0/0
 11495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11499 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11500 ;;Total ram usage:        0 bytes
 11501 ;; Hardware stack levels used: 1
 11502 ;; This function calls:
 11503 ;;		Nothing
 11504 ;; This function is called by:
 11505 ;;		Interrupt level 2
 11506 ;; This function uses a non-reentrant model
 11507 ;;
 11508                           
 11509                           	psect	text82
 11510  0037C0                     __ptext82:
 11511                           	callstack 0
 11512  0037C0                     _SMT1_PR_ACQ_ISR:
 11513                           	callstack 15
 11514  0037C0                     
 11515                           ;mcc_generated_files/smt1.c: 196:     PIR1bits.SMT1PRAIF = 0;
 11516  0037C0  0139               	movlb	57	; () banked
 11517  0037C2  9DA1               	bcf	161,6,b	;volatile
 11518  0037C4                     
 11519                           ; BSR set to: 57
 11520                           ;mcc_generated_files/smt1.c: 197:     smtPeriod = SMT1CPR;
 11521  0037C4  013F               	movlb	63	; () banked
 11522  0037C6  5115               	movf	21,w,b	;volatile
 11523  0037C8  6E48               	movwf	_smtPeriod^0,c	;volatile
 11524  0037CA  5116               	movf	22,w,b	;volatile
 11525  0037CC  6E49               	movwf	(_smtPeriod+1)^0,c	;volatile
 11526  0037CE  5117               	movf	23,w,b	;volatile
 11527  0037D0  6E4A               	movwf	(_smtPeriod+2)^0,c	;volatile
 11528  0037D2  6A4B               	clrf	(_smtPeriod+3)^0,c	;volatile
 11529  0037D4                     
 11530                           ; BSR set to: 63
 11531                           ;mcc_generated_files/smt1.c: 198:     if(CLC3CONbits.LC3OUT) smtWay++;
 11532  0037D4  013C               	movlb	60	; () banked
 11533  0037D6  AB60               	btfss	96,5,b	;volatile
 11534  0037D8  EFF0  F01B         	goto	i2u428_41
 11535  0037DC  EFF2  F01B         	goto	i2u428_40
 11536  0037E0                     i2u428_41:
 11537  0037E0  EFFB  F01B         	goto	i2l5421
 11538  0037E4                     i2u428_40:
 11539  0037E4                     
 11540                           ; BSR set to: 60
 11541  0037E4  0E01               	movlw	1
 11542  0037E6  0100               	movlb	0	; () banked
 11543  0037E8  2778               	addwf	_smtWay& (0+255),f,b	;volatile
 11544  0037EA  0E00               	movlw	0
 11545  0037EC  2379               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 11546  0037EE  237A               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 11547  0037F0  237B               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 11548  0037F2  EF04  F01C         	goto	i2l778
 11549  0037F6                     i2l5421:
 11550                           
 11551                           ; BSR set to: 60
 11552  0037F6  0EFF               	movlw	255
 11553  0037F8  0100               	movlb	0	; () banked
 11554  0037FA  2778               	addwf	_smtWay& (0+255),f,b	;volatile
 11555  0037FC  0EFF               	movlw	255
 11556  0037FE  2379               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 11557  003800  0EFF               	movlw	255
 11558  003802  237A               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 11559  003804  0EFF               	movlw	255
 11560  003806  237B               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 11561  003808                     i2l778:
 11562                           
 11563                           ; BSR set to: 0
 11564  003808  0011               	retfie		f
 11565  00380A                     __end_of_SMT1_PR_ACQ_ISR:
 11566                           	callstack 0
 11567                           
 11568 ;; *************** function _SMT1_PW_ACQ_ISR *****************
 11569 ;; Defined at:
 11570 ;;		line 203 in file "mcc_generated_files/smt1.c"
 11571 ;; Parameters:    Size  Location     Type
 11572 ;;		None
 11573 ;; Auto vars:     Size  Location     Type
 11574 ;;		None
 11575 ;; Return value:  Size  Location     Type
 11576 ;;                  1    wreg      void 
 11577 ;; Registers used:
 11578 ;;		wreg, status,2, status,0
 11579 ;; Tracked objects:
 11580 ;;		On entry : 0/0
 11581 ;;		On exit  : 0/0
 11582 ;;		Unchanged: 0/0
 11583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11587 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11588 ;;Total ram usage:        0 bytes
 11589 ;; Hardware stack levels used: 1
 11590 ;; This function calls:
 11591 ;;		Nothing
 11592 ;; This function is called by:
 11593 ;;		Interrupt level 2
 11594 ;; This function uses a non-reentrant model
 11595 ;;
 11596                           
 11597                           	psect	text83
 11598  00368C                     __ptext83:
 11599                           	callstack 0
 11600  00368C                     _SMT1_PW_ACQ_ISR:
 11601                           	callstack 15
 11602  00368C                     
 11603                           ;mcc_generated_files/smt1.c: 207:     PIR1bits.SMT1PWAIF = 0;
 11604  00368C  0139               	movlb	57	; () banked
 11605  00368E  9FA1               	bcf	161,7,b	;volatile
 11606  003690                     
 11607                           ; BSR set to: 57
 11608                           ;mcc_generated_files/smt1.c: 208:     smtDuty = SMT1CPW;
 11609  003690  013F               	movlb	63	; () banked
 11610  003692  5118               	movf	24,w,b	;volatile
 11611  003694  0100               	movlb	0	; () banked
 11612  003696  6F7C               	movwf	_smtDuty& (0+255),b	;volatile
 11613  003698  013F               	movlb	63	; () banked
 11614  00369A  5119               	movf	25,w,b	;volatile
 11615  00369C  0100               	movlb	0	; () banked
 11616  00369E  6F7D               	movwf	(_smtDuty+1)& (0+255),b	;volatile
 11617  0036A0  013F               	movlb	63	; () banked
 11618  0036A2  511A               	movf	26,w,b	;volatile
 11619  0036A4  0100               	movlb	0	; () banked
 11620  0036A6  6F7E               	movwf	(_smtDuty+2)& (0+255),b	;volatile
 11621  0036A8  6B7F               	clrf	(_smtDuty+3)& (0+255),b	;volatile
 11622  0036AA                     
 11623                           ; BSR set to: 0
 11624                           ;mcc_generated_files/smt1.c: 209:     if(CLC3CONbits.LC3OUT) smtWay++;
 11625  0036AA  013C               	movlb	60	; () banked
 11626  0036AC  AB60               	btfss	96,5,b	;volatile
 11627  0036AE  EF5B  F01B         	goto	i2u429_41
 11628  0036B2  EF5D  F01B         	goto	i2u429_40
 11629  0036B6                     i2u429_41:
 11630  0036B6  EF66  F01B         	goto	i2l5431
 11631  0036BA                     i2u429_40:
 11632  0036BA                     
 11633                           ; BSR set to: 60
 11634  0036BA  0E01               	movlw	1
 11635  0036BC  0100               	movlb	0	; () banked
 11636  0036BE  2778               	addwf	_smtWay& (0+255),f,b	;volatile
 11637  0036C0  0E00               	movlw	0
 11638  0036C2  2379               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 11639  0036C4  237A               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 11640  0036C6  237B               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 11641  0036C8  EF6F  F01B         	goto	i2l785
 11642  0036CC                     i2l5431:
 11643                           
 11644                           ; BSR set to: 60
 11645  0036CC  0EFF               	movlw	255
 11646  0036CE  0100               	movlb	0	; () banked
 11647  0036D0  2778               	addwf	_smtWay& (0+255),f,b	;volatile
 11648  0036D2  0EFF               	movlw	255
 11649  0036D4  2379               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 11650  0036D6  0EFF               	movlw	255
 11651  0036D8  237A               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 11652  0036DA  0EFF               	movlw	255
 11653  0036DC  237B               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 11654  0036DE                     i2l785:
 11655                           
 11656                           ; BSR set to: 0
 11657  0036DE  0011               	retfie		f
 11658  0036E0                     __end_of_SMT1_PW_ACQ_ISR:
 11659                           	callstack 0
 11660                           
 11661 ;; *************** function _SMT1_Overflow_ISR *****************
 11662 ;; Defined at:
 11663 ;;		line 213 in file "mcc_generated_files/smt1.c"
 11664 ;; Parameters:    Size  Location     Type
 11665 ;;		None
 11666 ;; Auto vars:     Size  Location     Type
 11667 ;;		None
 11668 ;; Return value:  Size  Location     Type
 11669 ;;                  1    wreg      void 
 11670 ;; Registers used:
 11671 ;;		wreg, status,2
 11672 ;; Tracked objects:
 11673 ;;		On entry : 0/0
 11674 ;;		On exit  : 0/0
 11675 ;;		Unchanged: 0/0
 11676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11680 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11681 ;;Total ram usage:        0 bytes
 11682 ;; Hardware stack levels used: 1
 11683 ;; This function calls:
 11684 ;;		Nothing
 11685 ;; This function is called by:
 11686 ;;		Interrupt level 2
 11687 ;; This function uses a non-reentrant model
 11688 ;;
 11689                           
 11690                           	psect	text84
 11691  003DBC                     __ptext84:
 11692                           	callstack 0
 11693  003DBC                     _SMT1_Overflow_ISR:
 11694                           	callstack 15
 11695  003DBC                     
 11696                           ;mcc_generated_files/smt1.c: 217:     PIR1bits.SMT1IF = 0;
 11697  003DBC  0139               	movlb	57	; () banked
 11698  003DBE  9BA1               	bcf	161,5,b	;volatile
 11699  003DC0                     
 11700                           ; BSR set to: 57
 11701                           ;mcc_generated_files/smt1.c: 218:     smtPeriod = 0;
 11702  003DC0  0E00               	movlw	0
 11703  003DC2  6E48               	movwf	_smtPeriod^0,c	;volatile
 11704  003DC4  0E00               	movlw	0
 11705  003DC6  6E49               	movwf	(_smtPeriod+1)^0,c	;volatile
 11706  003DC8  0E00               	movlw	0
 11707  003DCA  6E4A               	movwf	(_smtPeriod+2)^0,c	;volatile
 11708  003DCC  0E00               	movlw	0
 11709  003DCE  6E4B               	movwf	(_smtPeriod+3)^0,c	;volatile
 11710                           
 11711                           ;mcc_generated_files/smt1.c: 219:     smtDuty = 0;
 11712  003DD0  0E00               	movlw	0
 11713  003DD2  0100               	movlb	0	; () banked
 11714  003DD4  6F7C               	movwf	_smtDuty& (0+255),b	;volatile
 11715  003DD6  0E00               	movlw	0
 11716  003DD8  6F7D               	movwf	(_smtDuty+1)& (0+255),b	;volatile
 11717  003DDA  0E00               	movlw	0
 11718  003DDC  6F7E               	movwf	(_smtDuty+2)& (0+255),b	;volatile
 11719  003DDE  0E00               	movlw	0
 11720  003DE0  6F7F               	movwf	(_smtDuty+3)& (0+255),b	;volatile
 11721  003DE2                     
 11722                           ; BSR set to: 0
 11723  003DE2  0011               	retfie		f
 11724  003DE4                     __end_of_SMT1_Overflow_ISR:
 11725                           	callstack 0
 11726                           
 11727 ;; *************** function _CCP3_CaptureISR *****************
 11728 ;; Defined at:
 11729 ;;		line 97 in file "mcc_generated_files/ccp3.c"
 11730 ;; Parameters:    Size  Location     Type
 11731 ;;		None
 11732 ;; Auto vars:     Size  Location     Type
 11733 ;;  module          2   10[COMRAM] struct CCPR3Reg_tag
 11734 ;; Return value:  Size  Location     Type
 11735 ;;                  1    wreg      void 
 11736 ;; Registers used:
 11737 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 11738 ;; Tracked objects:
 11739 ;;		On entry : 0/0
 11740 ;;		On exit  : 0/0
 11741 ;;		Unchanged: 0/0
 11742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11744 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11746 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11747 ;;Total ram usage:        2 bytes
 11748 ;; Hardware stack levels used: 1
 11749 ;; Hardware stack levels required when called: 1
 11750 ;; This function calls:
 11751 ;;		Absolute function
 11752 ;;		_CCP3_DefaultCallBack
 11753 ;; This function is called by:
 11754 ;;		Interrupt level 2
 11755 ;; This function uses a non-reentrant model
 11756 ;;
 11757                           
 11758                           	psect	text85
 11759  003AFC                     __ptext85:
 11760                           	callstack 0
 11761  003AFC                     _CCP3_CaptureISR:
 11762                           	callstack 14
 11763  003AFC                     
 11764                           ;mcc_generated_files/ccp3.c: 99:     CCP3_PERIOD_REG_T module;;mcc_generated_files/ccp3.
      +                          c: 102:     PIR9bits.CCP3IF = 0;
 11765  003AFC  0139               	movlb	57	; () banked
 11766  003AFE  93A9               	bcf	169,1,b	;volatile
 11767                           
 11768                           ;mcc_generated_files/ccp3.c: 104:     module.ccpr3l = CCPR3L;
 11769  003B00  006F FDD0  F00B    	movff	16244,CCP3_CaptureISR@module	;volatile
 11770                           
 11771                           ;mcc_generated_files/ccp3.c: 105:     module.ccpr3h = CCPR3H;
 11772  003B06  006F FDD4  F00C    	movff	16245,CCP3_CaptureISR@module+1	;volatile
 11773  003B0C                     
 11774                           ; BSR set to: 57
 11775                           ;mcc_generated_files/ccp3.c: 107:     CCP3_CallBack(module.ccpr3_16Bit);
 11776  003B0C  C00B  F009         	movff	CCP3_CaptureISR@module,CCP3_DefaultCallBack@capturedValue
 11777  003B10  C00C  F00A         	movff	CCP3_CaptureISR@module+1,CCP3_DefaultCallBack@capturedValue+1
 11778  003B14  D802               	call	i2u430_48
 11779  003B16  EF97  F01D         	goto	i2u430_49
 11780  003B1A                     i2u430_48:
 11781  003B1A  0005               	push	
 11782  003B1C  6EFA               	movwf	pclath,c
 11783  003B1E  0100               	movlb	0	; () banked
 11784  003B20  51E4               	movf	_CCP3_CallBack& (0+255),w,b
 11785  003B22  6EFD               	movwf	tosl,c
 11786  003B24  51E5               	movf	(_CCP3_CallBack+1)& (0+255),w,b
 11787  003B26  6EFE               	movwf	tosh,c
 11788  003B28  6AFF               	clrf	tosu,c
 11789  003B2A  50FA               	movf	pclath,w,c
 11790  003B2C  0012               	return		;indir
 11791  003B2E                     i2u430_49:
 11792  003B2E  0011               	retfie		f
 11793  003B30                     __end_of_CCP3_CaptureISR:
 11794                           	callstack 0
 11795                           
 11796 ;; *************** function _CCP3_DefaultCallBack *****************
 11797 ;; Defined at:
 11798 ;;		line 63 in file "mcc_generated_files/ccp3.c"
 11799 ;; Parameters:    Size  Location     Type
 11800 ;;  capturedValu    2    8[COMRAM] unsigned short 
 11801 ;; Auto vars:     Size  Location     Type
 11802 ;;		None
 11803 ;; Return value:  Size  Location     Type
 11804 ;;                  1    wreg      void 
 11805 ;; Registers used:
 11806 ;;		wreg, status,2, status,0
 11807 ;; Tracked objects:
 11808 ;;		On entry : 0/0
 11809 ;;		On exit  : 0/0
 11810 ;;		Unchanged: 0/0
 11811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11812 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11815 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11816 ;;Total ram usage:        2 bytes
 11817 ;; Hardware stack levels used: 1
 11818 ;; This function calls:
 11819 ;;		Nothing
 11820 ;; This function is called by:
 11821 ;;		_CCP3_Initialize
 11822 ;;		_CCP3_CaptureISR
 11823 ;; This function uses a non-reentrant model
 11824 ;;
 11825                           
 11826                           	psect	text86
 11827  003BFA                     __ptext86:
 11828                           	callstack 0
 11829  003BFA                     _CCP3_DefaultCallBack:
 11830                           	callstack 14
 11831  003BFA                     
 11832                           ;mcc_generated_files/ccp3.c: 63: static void CCP3_DefaultCallBack(uint16_t capturedValue
      +                          );mcc_generated_files/ccp3.c: 64: {;mcc_generated_files/ccp3.c: 66:     if(PORTDbits.RD7
      +                          ) {
 11833  003BFA  AECD               	btfss	205,7,c	;volatile
 11834  003BFC  EF02  F01E         	goto	i2u414_41
 11835  003C00  EF04  F01E         	goto	i2u414_40
 11836  003C04                     i2u414_41:
 11837  003C04  EF0A  F01E         	goto	i2l5343
 11838  003C08                     i2u414_40:
 11839  003C08                     
 11840                           ;mcc_generated_files/ccp3.c: 67:         distLeftM = capturedValue;
 11841  003C08  C009  F098         	movff	CCP3_DefaultCallBack@capturedValue,_distLeftM
 11842  003C0C  C00A  F099         	movff	CCP3_DefaultCallBack@capturedValue+1,_distLeftM+1
 11843                           
 11844                           ;mcc_generated_files/ccp3.c: 68:     } else {
 11845  003C10  EF14  F01E         	goto	i2l1074
 11846  003C14                     i2l5343:
 11847                           
 11848                           ;mcc_generated_files/ccp3.c: 69:         distLeft = capturedValue - distLeftM;
 11849  003C14  0100               	movlb	0	; () banked
 11850  003C16  5198               	movf	_distLeftM& (0+255),w,b
 11851  003C18  5C09               	subwf	CCP3_DefaultCallBack@capturedValue^0,w,c
 11852  003C1A  6F9A               	movwf	_distLeft& (0+255),b	;volatile
 11853  003C1C  5199               	movf	(_distLeftM+1)& (0+255),w,b
 11854  003C1E  580A               	subwfb	(CCP3_DefaultCallBack@capturedValue+1)^0,w,c
 11855  003C20  6F9B               	movwf	(_distLeft+1)& (0+255),b	;volatile
 11856  003C22                     
 11857                           ; BSR set to: 0
 11858                           ;mcc_generated_files/ccp3.c: 70:         distLeft >>= 1;
 11859  003C22  90D8               	bcf	status,0,c
 11860  003C24  339B               	rrcf	(_distLeft+1)& (0+255),f,b	;volatile
 11861  003C26  339A               	rrcf	_distLeft& (0+255),f,b	;volatile
 11862  003C28                     i2l1074:
 11863  003C28  0012               	return		;funcret
 11864  003C2A                     __end_of_CCP3_DefaultCallBack:
 11865                           	callstack 0
 11866                           
 11867 ;; *************** function _CCP4_CaptureISR *****************
 11868 ;; Defined at:
 11869 ;;		line 149 in file "mcc_generated_files/ccp4.c"
 11870 ;; Parameters:    Size  Location     Type
 11871 ;;		None
 11872 ;; Auto vars:     Size  Location     Type
 11873 ;;  module          2   14[COMRAM] struct CCPR4Reg_tag
 11874 ;; Return value:  Size  Location     Type
 11875 ;;                  1    wreg      void 
 11876 ;; Registers used:
 11877 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 11878 ;; Tracked objects:
 11879 ;;		On entry : 0/0
 11880 ;;		On exit  : 0/0
 11881 ;;		Unchanged: 0/0
 11882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11884 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11886 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11887 ;;Total ram usage:        2 bytes
 11888 ;; Hardware stack levels used: 1
 11889 ;; Hardware stack levels required when called: 1
 11890 ;; This function calls:
 11891 ;;		Absolute function
 11892 ;;		_CCP4_DefaultCallBack
 11893 ;; This function is called by:
 11894 ;;		Interrupt level 2
 11895 ;; This function uses a non-reentrant model
 11896 ;;
 11897                           
 11898                           	psect	text87
 11899  003B30                     __ptext87:
 11900                           	callstack 0
 11901  003B30                     _CCP4_CaptureISR:
 11902                           	callstack 14
 11903  003B30                     
 11904                           ;mcc_generated_files/ccp4.c: 151:     CCP4_PERIOD_REG_T module;;mcc_generated_files/ccp4
      +                          .c: 154:     PIR10bits.CCP4IF = 0;
 11905  003B30  0139               	movlb	57	; () banked
 11906  003B32  91AA               	bcf	170,0,b	;volatile
 11907                           
 11908                           ;mcc_generated_files/ccp4.c: 156:     module.ccpr4l = CCPR4L;
 11909  003B34  006F FDC0  F00F    	movff	16240,CCP4_CaptureISR@module	;volatile
 11910                           
 11911                           ;mcc_generated_files/ccp4.c: 157:     module.ccpr4h = CCPR4H;
 11912  003B3A  006F FDC4  F010    	movff	16241,CCP4_CaptureISR@module+1	;volatile
 11913  003B40                     
 11914                           ; BSR set to: 57
 11915                           ;mcc_generated_files/ccp4.c: 159:     CCP4_CallBack(module.ccpr4_16Bit);
 11916  003B40  C00F  F00D         	movff	CCP4_CaptureISR@module,CCP4_DefaultCallBack@capturedValue
 11917  003B44  C010  F00E         	movff	CCP4_CaptureISR@module+1,CCP4_DefaultCallBack@capturedValue+1
 11918  003B48  D802               	call	i2u431_48
 11919  003B4A  EFB1  F01D         	goto	i2u431_49
 11920  003B4E                     i2u431_48:
 11921  003B4E  0005               	push	
 11922  003B50  6EFA               	movwf	pclath,c
 11923  003B52  0100               	movlb	0	; () banked
 11924  003B54  51E2               	movf	_CCP4_CallBack& (0+255),w,b
 11925  003B56  6EFD               	movwf	tosl,c
 11926  003B58  51E3               	movf	(_CCP4_CallBack+1)& (0+255),w,b
 11927  003B5A  6EFE               	movwf	tosh,c
 11928  003B5C  6AFF               	clrf	tosu,c
 11929  003B5E  50FA               	movf	pclath,w,c
 11930  003B60  0012               	return		;indir
 11931  003B62                     i2u431_49:
 11932  003B62  0011               	retfie		f
 11933  003B64                     __end_of_CCP4_CaptureISR:
 11934                           	callstack 0
 11935                           
 11936 ;; *************** function _CCP4_DefaultCallBack *****************
 11937 ;; Defined at:
 11938 ;;		line 112 in file "mcc_generated_files/ccp4.c"
 11939 ;; Parameters:    Size  Location     Type
 11940 ;;  capturedValu    2   12[COMRAM] unsigned short 
 11941 ;; Auto vars:     Size  Location     Type
 11942 ;;		None
 11943 ;; Return value:  Size  Location     Type
 11944 ;;                  1    wreg      void 
 11945 ;; Registers used:
 11946 ;;		wreg, status,2, status,0
 11947 ;; Tracked objects:
 11948 ;;		On entry : 0/0
 11949 ;;		On exit  : 0/0
 11950 ;;		Unchanged: 0/0
 11951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11952 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11955 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11956 ;;Total ram usage:        2 bytes
 11957 ;; Hardware stack levels used: 1
 11958 ;; This function calls:
 11959 ;;		Nothing
 11960 ;; This function is called by:
 11961 ;;		_CCP4_Initialize
 11962 ;;		_CCP4_CaptureISR
 11963 ;; This function uses a non-reentrant model
 11964 ;;
 11965                           
 11966                           	psect	text88
 11967  003C2A                     __ptext88:
 11968                           	callstack 0
 11969  003C2A                     _CCP4_DefaultCallBack:
 11970                           	callstack 14
 11971  003C2A                     
 11972                           ;mcc_generated_files/ccp4.c: 112: static void CCP4_DefaultCallBack(uint16_t capturedValu
      +                          e);mcc_generated_files/ccp4.c: 113: {;mcc_generated_files/ccp4.c: 115:     if(PORTDbits.
      +                          RD6) {
 11973  003C2A  ACCD               	btfss	205,6,c	;volatile
 11974  003C2C  EF1A  F01E         	goto	i2u415_41
 11975  003C30  EF1C  F01E         	goto	i2u415_40
 11976  003C34                     i2u415_41:
 11977  003C34  EF22  F01E         	goto	i2l5351
 11978  003C38                     i2u415_40:
 11979  003C38                     
 11980                           ;mcc_generated_files/ccp4.c: 116:         distRightM = capturedValue;
 11981  003C38  C00D  F094         	movff	CCP4_DefaultCallBack@capturedValue,_distRightM
 11982  003C3C  C00E  F095         	movff	CCP4_DefaultCallBack@capturedValue+1,_distRightM+1
 11983                           
 11984                           ;mcc_generated_files/ccp4.c: 118:     } else {
 11985  003C40  EF2C  F01E         	goto	i2l1112
 11986  003C44                     i2l5351:
 11987                           
 11988                           ;mcc_generated_files/ccp4.c: 119:         distRight = capturedValue - distRightM;
 11989  003C44  0100               	movlb	0	; () banked
 11990  003C46  5194               	movf	_distRightM& (0+255),w,b
 11991  003C48  5C0D               	subwf	CCP4_DefaultCallBack@capturedValue^0,w,c
 11992  003C4A  6F96               	movwf	_distRight& (0+255),b	;volatile
 11993  003C4C  5195               	movf	(_distRightM+1)& (0+255),w,b
 11994  003C4E  580E               	subwfb	(CCP4_DefaultCallBack@capturedValue+1)^0,w,c
 11995  003C50  6F97               	movwf	(_distRight+1)& (0+255),b	;volatile
 11996  003C52                     
 11997                           ; BSR set to: 0
 11998                           ;mcc_generated_files/ccp4.c: 120:         distRight >>= 1;
 11999  003C52  90D8               	bcf	status,0,c
 12000  003C54  3397               	rrcf	(_distRight+1)& (0+255),f,b	;volatile
 12001  003C56  3396               	rrcf	_distRight& (0+255),f,b	;volatile
 12002  003C58                     i2l1112:
 12003  003C58  0012               	return		;funcret
 12004  003C5A                     __end_of_CCP4_DefaultCallBack:
 12005                           	callstack 0
 12006                           
 12007                           ;
 12008                           ; Interrupt Vector Table @ 0x8
 12009                           ;
 12010                           
 12011                           	psect	ivt0x8
 12012  000008                     __pivt0x8:
 12013                           	callstack 0
 12014  000008                     ivt0x8_base:
 12015                           	callstack 0
 12016                           
 12017                           ; Vector 0 : SWINT
 12018  000008  0FE5               	dw	_Default_ISR shr (0+2)
 12019                           
 12020                           ; Vector 1 : HLVD
 12021  00000A  0FE5               	dw	_Default_ISR shr (0+2)
 12022                           
 12023                           ; Vector 2 : OSF
 12024  00000C  0FE5               	dw	_Default_ISR shr (0+2)
 12025                           
 12026                           ; Vector 3 : CSW
 12027  00000E  0FE5               	dw	_Default_ISR shr (0+2)
 12028                           
 12029                           ; Vector 4 : NVM
 12030  000010  0FE5               	dw	_Default_ISR shr (0+2)
 12031                           
 12032                           ; Vector 5 : SCAN
 12033  000012  0FE5               	dw	_Default_ISR shr (0+2)
 12034                           
 12035                           ; Vector 6 : CRC
 12036  000014  0FE5               	dw	_Default_ISR shr (0+2)
 12037                           
 12038                           ; Vector 7 : IOC
 12039  000016  0FE5               	dw	_Default_ISR shr (0+2)
 12040                           
 12041                           ; Vector 8 : INT0
 12042  000018  0FE5               	dw	_Default_ISR shr (0+2)
 12043                           
 12044                           ; Vector 9 : ZCD
 12045  00001A  0FE5               	dw	_Default_ISR shr (0+2)
 12046                           
 12047                           ; Vector 10 : AD
 12048  00001C  0FE5               	dw	_Default_ISR shr (0+2)
 12049                           
 12050                           ; Vector 11 : ADT
 12051  00001E  0FE5               	dw	_Default_ISR shr (0+2)
 12052                           
 12053                           ; Vector 12 : CMP1
 12054  000020  0FE5               	dw	_Default_ISR shr (0+2)
 12055                           
 12056                           ; Vector 13 : SMT1
 12057  000022  0F6F               	dw	_SMT1_Overflow_ISR shr (0+2)
 12058                           
 12059                           ; Vector 14 : SMT1PRA
 12060  000024  0DF0               	dw	_SMT1_PR_ACQ_ISR shr (0+2)
 12061                           
 12062                           ; Vector 15 : SMT1PRW
 12063  000026  0DA3               	dw	_SMT1_PW_ACQ_ISR shr (0+2)
 12064                           
 12065                           ; Vector 16 : DMA1SCNT
 12066  000028  0FE5               	dw	_Default_ISR shr (0+2)
 12067                           
 12068                           ; Vector 17 : DMA1DCNT
 12069  00002A  0FE5               	dw	_Default_ISR shr (0+2)
 12070                           
 12071                           ; Vector 18 : DMA1OR
 12072  00002C  0FE5               	dw	_Default_ISR shr (0+2)
 12073                           
 12074                           ; Vector 19 : DMA1A
 12075  00002E  0FE5               	dw	_Default_ISR shr (0+2)
 12076                           
 12077                           ; Vector 20 : SPI1RX
 12078  000030  0FE5               	dw	_Default_ISR shr (0+2)
 12079                           
 12080                           ; Vector 21 : SPI1TX
 12081  000032  0FE5               	dw	_Default_ISR shr (0+2)
 12082                           
 12083                           ; Vector 22 : SPI1
 12084  000034  0FE5               	dw	_Default_ISR shr (0+2)
 12085                           
 12086                           ; Vector 23 : I2C1RX
 12087  000036  0FE5               	dw	_Default_ISR shr (0+2)
 12088                           
 12089                           ; Vector 24 : I2C1TX
 12090  000038  0FE5               	dw	_Default_ISR shr (0+2)
 12091                           
 12092                           ; Vector 25 : I2C1
 12093  00003A  0FE5               	dw	_Default_ISR shr (0+2)
 12094                           
 12095                           ; Vector 26 : I2C1E
 12096  00003C  0FE5               	dw	_Default_ISR shr (0+2)
 12097                           
 12098                           ; Vector 27 : U1RX
 12099  00003E  0E52               	dw	_UART1_rx_vect_isr shr (0+2)
 12100                           
 12101                           ; Vector 28 : U1TX
 12102  000040  0E43               	dw	_UART1_tx_vect_isr shr (0+2)
 12103                           
 12104                           ; Vector 29 : U1E
 12105  000042  0FE5               	dw	_Default_ISR shr (0+2)
 12106                           
 12107                           ; Vector 30 : U1
 12108  000044  0FE5               	dw	_Default_ISR shr (0+2)
 12109                           
 12110                           ; Vector 31 : TMR0
 12111  000046  0FE5               	dw	_Default_ISR shr (0+2)
 12112                           
 12113                           ; Vector 32 : TMR1
 12114  000048  0FE5               	dw	_Default_ISR shr (0+2)
 12115                           
 12116                           ; Vector 33 : TMR1G
 12117  00004A  0FE5               	dw	_Default_ISR shr (0+2)
 12118                           
 12119                           ; Vector 34 : TMR2
 12120  00004C  0FE5               	dw	_Default_ISR shr (0+2)
 12121                           
 12122                           ; Vector 35 : CCP1
 12123  00004E  0FE5               	dw	_Default_ISR shr (0+2)
 12124                           
 12125                           ; Vector 36 : Undefined
 12126  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 12127                           
 12128                           ; Vector 37 : NCO1
 12129  000052  0FE5               	dw	_Default_ISR shr (0+2)
 12130                           
 12131                           ; Vector 38 : CWG1
 12132  000054  0FE5               	dw	_Default_ISR shr (0+2)
 12133                           
 12134                           ; Vector 39 : CLC1
 12135  000056  0FE5               	dw	_Default_ISR shr (0+2)
 12136                           
 12137                           ; Vector 40 : INT1
 12138  000058  0FE5               	dw	_Default_ISR shr (0+2)
 12139                           
 12140                           ; Vector 41 : CMP2
 12141  00005A  0FE5               	dw	_Default_ISR shr (0+2)
 12142                           
 12143                           ; Vector 42 : DMA2SCNT
 12144  00005C  0FE5               	dw	_Default_ISR shr (0+2)
 12145                           
 12146                           ; Vector 43 : DMA2DCNT
 12147  00005E  0FE5               	dw	_Default_ISR shr (0+2)
 12148                           
 12149                           ; Vector 44 : DMA2OR
 12150  000060  0FE5               	dw	_Default_ISR shr (0+2)
 12151                           
 12152                           ; Vector 45 : DMA2A
 12153  000062  0FE5               	dw	_Default_ISR shr (0+2)
 12154                           
 12155                           ; Vector 46 : I2C2RX
 12156  000064  0FE5               	dw	_Default_ISR shr (0+2)
 12157                           
 12158                           ; Vector 47 : I2C2TX
 12159  000066  0FE5               	dw	_Default_ISR shr (0+2)
 12160                           
 12161                           ; Vector 48 : I2C2
 12162  000068  0FE5               	dw	_Default_ISR shr (0+2)
 12163                           
 12164                           ; Vector 49 : I2C2E
 12165  00006A  0FE5               	dw	_Default_ISR shr (0+2)
 12166                           
 12167                           ; Vector 50 : U2RX
 12168  00006C  0FE5               	dw	_Default_ISR shr (0+2)
 12169                           
 12170                           ; Vector 51 : U2TX
 12171  00006E  0FE5               	dw	_Default_ISR shr (0+2)
 12172                           
 12173                           ; Vector 52 : U2E
 12174  000070  0FE5               	dw	_Default_ISR shr (0+2)
 12175                           
 12176                           ; Vector 53 : U2
 12177  000072  0FE5               	dw	_Default_ISR shr (0+2)
 12178                           
 12179                           ; Vector 54 : TMR3
 12180  000074  0FE5               	dw	_Default_ISR shr (0+2)
 12181                           
 12182                           ; Vector 55 : TMR3G
 12183  000076  0FE5               	dw	_Default_ISR shr (0+2)
 12184                           
 12185                           ; Vector 56 : TMR4
 12186  000078  0E6F               	dw	_TMR4_ISR shr (0+2)
 12187                           
 12188                           ; Vector 57 : CCP2
 12189  00007A  0FE5               	dw	_Default_ISR shr (0+2)
 12190                           
 12191                           ; Vector 58 : Undefined
 12192  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 12193                           
 12194                           ; Vector 59 : CWG2
 12195  00007E  0FE5               	dw	_Default_ISR shr (0+2)
 12196                           
 12197                           ; Vector 60 : CLC2
 12198  000080  0FE5               	dw	_Default_ISR shr (0+2)
 12199                           
 12200                           ; Vector 61 : INT2
 12201  000082  0FE5               	dw	_Default_ISR shr (0+2)
 12202                           
 12203                           ; Vector 62 : Undefined
 12204  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 12205                           
 12206                           ; Vector 63 : Undefined
 12207  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 12208                           
 12209                           ; Vector 64 : Undefined
 12210  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 12211                           
 12212                           ; Vector 65 : Undefined
 12213  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 12214                           
 12215                           ; Vector 66 : Undefined
 12216  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 12217                           
 12218                           ; Vector 67 : Undefined
 12219  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 12220                           
 12221                           ; Vector 68 : Undefined
 12222  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 12223                           
 12224                           ; Vector 69 : Undefined
 12225  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 12226                           
 12227                           ; Vector 70 : TMR5
 12228  000094  0FE5               	dw	_Default_ISR shr (0+2)
 12229                           
 12230                           ; Vector 71 : TMR5G
 12231  000096  0EE6               	dw	_TMR5_GATE_ISR shr (0+2)
 12232                           
 12233                           ; Vector 72 : TMR6
 12234  000098  0FE5               	dw	_Default_ISR shr (0+2)
 12235                           
 12236                           ; Vector 73 : CCP3
 12237  00009A  0EBF               	dw	_CCP3_CaptureISR shr (0+2)
 12238                           
 12239                           ; Vector 74 : CWG3
 12240  00009C  0FE5               	dw	_Default_ISR shr (0+2)
 12241                           
 12242                           ; Vector 75 : CLC3
 12243  00009E  0FE5               	dw	_Default_ISR shr (0+2)
 12244                           
 12245                           ; Vector 76 : Undefined
 12246  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 12247                           
 12248                           ; Vector 77 : Undefined
 12249  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 12250                           
 12251                           ; Vector 78 : Undefined
 12252  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 12253                           
 12254                           ; Vector 79 : Undefined
 12255  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 12256                           
 12257                           ; Vector 80 : CCP4
 12258  0000A8  0ECC               	dw	_CCP4_CaptureISR shr (0+2)
 12259                           
 12260                           ; Vector 81 : CLC4
 12261  0000AA  0FE5               	dw	_Default_ISR shr (0+2)
 12262  0000AC                     ivt0x8_undefint:
 12263                           	callstack 0
 12264  0000AC  00FF               	reset	
 12265                           
 12266                           	psect	text89
 12267  000000                     __ptext89:
 12268                           	callstack 0
 12269  000000                     
 12270                           	psect	rparam
 12271  0000                     
 12272                           	psect	idloc
 12273                           
 12274                           ;Config register IDLOC0 @ 0x200000
 12275                           ;	unspecified, using default values
 12276  200000                     	org	2097152
 12277  200000  0FFF               	dw	4095
 12278                           
 12279                           ;Config register IDLOC1 @ 0x200002
 12280                           ;	unspecified, using default values
 12281  200002                     	org	2097154
 12282  200002  0FFF               	dw	4095
 12283                           
 12284                           ;Config register IDLOC2 @ 0x200004
 12285                           ;	unspecified, using default values
 12286  200004                     	org	2097156
 12287  200004  0FFF               	dw	4095
 12288                           
 12289                           ;Config register IDLOC3 @ 0x200006
 12290                           ;	unspecified, using default values
 12291  200006                     	org	2097158
 12292  200006  0FFF               	dw	4095
 12293                           
 12294                           ;Config register IDLOC4 @ 0x200008
 12295                           ;	unspecified, using default values
 12296  200008                     	org	2097160
 12297  200008  0FFF               	dw	4095
 12298                           
 12299                           ;Config register IDLOC5 @ 0x20000A
 12300                           ;	unspecified, using default values
 12301  20000A                     	org	2097162
 12302  20000A  0FFF               	dw	4095
 12303                           
 12304                           ;Config register IDLOC6 @ 0x20000C
 12305                           ;	unspecified, using default values
 12306  20000C                     	org	2097164
 12307  20000C  0FFF               	dw	4095
 12308                           
 12309                           ;Config register IDLOC7 @ 0x20000E
 12310                           ;	unspecified, using default values
 12311  20000E                     	org	2097166
 12312  20000E  0FFF               	dw	4095
 12313                           
 12314                           	psect	config
 12315                           
 12316                           ;Config register CONFIG1L @ 0x300000
 12317                           ;	External Oscillator Selection
 12318                           ;	FEXTOSC = OFF, Oscillator not enabled
 12319                           ;	Reset Oscillator Selection
 12320                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
 12321  300000                     	org	3145728
 12322  300000  8C                 	db	140
 12323                           
 12324                           ;Config register CONFIG1H @ 0x300001
 12325                           ;	Clock out Enable bit
 12326                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 12327                           ;	PRLOCKED One-Way Set Enable bit
 12328                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
 12329                           ;	Clock Switch Enable bit
 12330                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 12331                           ;	Fail-Safe Clock Monitor Enable bit
 12332                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 12333  300001                     	org	3145729
 12334  300001  FF                 	db	255
 12335                           
 12336                           ;Config register CONFIG2L @ 0x300002
 12337                           ;	MCLR Enable bit
 12338                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 12339                           ;	Power-up timer selection bits
 12340                           ;	PWRTS = PWRT_OFF, PWRT is disabled
 12341                           ;	Multi-vector enable bit
 12342                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
 12343                           ;	IVTLOCK bit One-way set enable bit
 12344                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
 12345                           ;	Low Power BOR Enable bit
 12346                           ;	LPBOREN = OFF, ULPBOR disabled
 12347                           ;	Brown-out Reset Enable bits
 12348                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 12349  300002                     	org	3145730
 12350  300002  FF                 	db	255
 12351                           
 12352                           ;Config register CONFIG2H @ 0x300003
 12353                           ;	Brown-out Reset Voltage Selection bits
 12354                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
 12355                           ;	ZCD Disable bit
 12356                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 12357                           ;	PPSLOCK bit One-Way Set Enable bit
 12358                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
 12359                           ;	Stack Full/Underflow Reset Enable bit
 12360                           ;	STVREN = ON, Stack full/underflow will cause Reset
 12361                           ;	Debugger Enable bit
 12362                           ;	DEBUG = OFF, Background debugger disabled
 12363                           ;	Extended Instruction Set Enable bit
 12364                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 12365  300003                     	org	3145731
 12366  300003  FF                 	db	255
 12367                           
 12368                           ;Config register CONFIG3L @ 0x300004
 12369                           ;	WDT Period selection bits
 12370                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 12371                           ;	WDT operating mode
 12372                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
 12373  300004                     	org	3145732
 12374  300004  9F                 	db	159
 12375                           
 12376                           ;Config register CONFIG3H @ 0x300005
 12377                           ;	WDT Window Select bits
 12378                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 12379                           ;	WDT input clock selector
 12380                           ;	WDTCCS = SC, Software Control
 12381  300005                     	org	3145733
 12382  300005  FF                 	db	255
 12383                           
 12384                           ;Config register CONFIG4L @ 0x300006
 12385                           ;	Boot Block Size selection bits
 12386                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
 12387                           ;	Boot Block enable bit
 12388                           ;	BBEN = OFF, Boot block disabled
 12389                           ;	Storage Area Flash enable bit
 12390                           ;	SAFEN = OFF, SAF disabled
 12391                           ;	Application Block write protection bit
 12392                           ;	WRTAPP = OFF, Application Block not write protected
 12393  300006                     	org	3145734
 12394  300006  FF                 	db	255
 12395                           
 12396                           ;Config register CONFIG4H @ 0x300007
 12397                           ;	Configuration Register Write Protection bit
 12398                           ;	WRTB = OFF, Configuration registers (300000-30000Bh) not write-protected
 12399                           ;	Boot Block Write Protection bit
 12400                           ;	WRTC = OFF, Boot Block (000000-0007FFh) not write-protected
 12401                           ;	Data EEPROM Write Protection bit
 12402                           ;	WRTD = OFF, Data EEPROM not write-protected
 12403                           ;	SAF Write protection bit
 12404                           ;	WRTSAF = OFF, SAF not Write Protected
 12405                           ;	Low Voltage Programming Enable bit
 12406                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
 12407  300007                     	org	3145735
 12408  300007  FF                 	db	255
 12409                           
 12410                           ;Config register CONFIG5L @ 0x300008
 12411                           ;	PFM and Data EEPROM Code Protection bit
 12412                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
 12413  300008                     	org	3145736
 12414  300008  FF                 	db	255
 12415                           
 12416                           ;Config register CONFIG5H @ 0x300009
 12417                           ;	unspecified, using default values
 12418  300009                     	org	3145737
 12419  300009  FF                 	db	255
 12420                           tosu	equ	0x3FFF
 12421                           tosh	equ	0x3FFE
 12422                           tosl	equ	0x3FFD
 12423                           stkptr	equ	0x3FFC
 12424                           pclatu	equ	0x3FFB
 12425                           pclath	equ	0x3FFA
 12426                           pcl	equ	0x3FF9
 12427                           tblptru	equ	0x3FF8
 12428                           tblptrh	equ	0x3FF7
 12429                           tblptrl	equ	0x3FF6
 12430                           tablat	equ	0x3FF5
 12431                           prodh	equ	0x3FF4
 12432                           prodl	equ	0x3FF3
 12433                           indf0	equ	0x3FEF
 12434                           postinc0	equ	0x3FEE
 12435                           postdec0	equ	0x3FED
 12436                           preinc0	equ	0x3FEC
 12437                           plusw0	equ	0x3FEB
 12438                           fsr0h	equ	0x3FEA
 12439                           fsr0l	equ	0x3FE9
 12440                           wreg	equ	0x3FE8
 12441                           indf1	equ	0x3FE7
 12442                           postinc1	equ	0x3FE6
 12443                           postdec1	equ	0x3FE5
 12444                           preinc1	equ	0x3FE4
 12445                           plusw1	equ	0x3FE3
 12446                           fsr1h	equ	0x3FE2
 12447                           fsr1l	equ	0x3FE1
 12448                           bsr	equ	0x3FE0
 12449                           indf2	equ	0x3FDF
 12450                           postinc2	equ	0x3FDE
 12451                           postdec2	equ	0x3FDD
 12452                           preinc2	equ	0x3FDC
 12453                           plusw2	equ	0x3FDB
 12454                           fsr2h	equ	0x3FDA
 12455                           fsr2l	equ	0x3FD9
 12456                           status	equ	0x3FD8

Data Sizes:
    Strings     102
    Constant    0
    Data        0
    BSS         115
    Persistent  23
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     58      76
    BANK0           160     64     152
    BANK1           256      0      32
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S3419_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_9(CODE[10]), STR_8(CODE[12]), STR_7(CODE[11]), STR_6(CODE[11]), 
		 -> STR_5(CODE[9]), STR_4(CODE[2]), STR_3(CODE[14]), STR_2(CODE[13]), 
		 -> STR_1(CODE[22]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 22
		 -> STR_9(CODE[10]), STR_8(CODE[12]), STR_7(CODE[11]), STR_6(CODE[11]), 
		 -> STR_5(CODE[9]), STR_4(CODE[2]), STR_3(CODE[14]), STR_2(CODE[13]), 
		 -> STR_1(CODE[22]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_9(CODE[10]), STR_8(CODE[12]), STR_7(CODE[11]), STR_6(CODE[11]), 
		 -> STR_5(CODE[9]), STR_4(CODE[2]), STR_3(CODE[14]), STR_2(CODE[13]), 
		 -> STR_1(CODE[22]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    CCP4_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP4_DefaultCallBack(), 

    CCP4_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP4_DefaultCallBack(), Absolute function(), 

    CCP3_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP3_DefaultCallBack(), 

    CCP3_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP3_DefaultCallBack(), Absolute function(), 

    TMR4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_10msISR(), TMR4_DefaultInterruptHandler(), 

    TMR4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_10msISR(), TMR4_DefaultInterruptHandler(), Absolute function(), 

    TMR5_SetGateInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR5_DefaultGateInterruptHandler(), 

    TMR5_GateInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR5_DefaultGateInterruptHandler(), Absolute function(), 

    UART1_SetTxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    UART1_SetRxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultErrorHandler(), 

    UART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), 

    UART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), 

    UART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultErrorHandler(), 

    UART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultOverrunErrorHandler(), 

    UART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultFramingErrorHandler(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_Receive_ISR(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_Transmit_ISR(), 


Critical Paths under _main in COMRAM

    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_UART1_Write
    _abs->___aomod
    _getBatteryVoltage->_ADCC_GetSingleConversion
    _calcSteering->_setSteering
    _setSteering->___awdiv
    _calcSpeed->___fladd
    ___fladd->___flmul
    _setMotor->_PWM7_LoadDutyValue
    _setMotor->_PWM8_LoadDutyValue
    _actSpeed->___aldiv
    ___xxtofl->_ADCC_GetSingleConversion
    ___fltol->___fladd
    ___flmul->___xxtofl
    ___flge->___xxtofl
    _SYSTEM_Initialize->_TMR5_Initialize
    _UART1_Initialize->_UART1_SetErrorHandler
    _UART1_Initialize->_UART1_SetFramingErrorHandler
    _UART1_Initialize->_UART1_SetOverrunErrorHandler
    _UART1_Initialize->_UART1_SetRxInterruptHandler
    _UART1_Initialize->_UART1_SetTxInterruptHandler
    _TMR5_Initialize->_TMR5_SetGateInterruptHandler
    _TMR4_Initialize->_TMR4_SetInterruptHandler
    _CCP4_Initialize->_CCP4_SetCallBack
    _CCP3_Initialize->_CCP3_SetCallBack

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR4_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _TMR5_GATE_ISR in COMRAM

    _TMR5_DefaultGateInterruptHandler->_TMR5_ReadTimer
    _TMR5_Reload->_TMR5_WriteTimer

Critical Paths under _SMT1_PR_ACQ_ISR in COMRAM

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in COMRAM

    None.

Critical Paths under _SMT1_Overflow_ISR in COMRAM

    None.

Critical Paths under _CCP3_CaptureISR in COMRAM

    _CCP3_CaptureISR->_CCP3_DefaultCallBack

Critical Paths under _CCP4_CaptureISR in COMRAM

    _CCP4_CaptureISR->_CCP4_DefaultCallBack

Critical Paths under _main in BANK0

    _loop->_getCurve
    _getCurve->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _calcSpeed->___fltol
    ___fladd->___flmul
    _calcMotorPow->___fltol
    ___fltol->___fladd

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR4_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _TMR5_GATE_ISR in BANK0

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK0

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK0

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK0

    None.

Critical Paths under _CCP3_CaptureISR in BANK0

    None.

Critical Paths under _CCP4_CaptureISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR4_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _TMR5_GATE_ISR in BANK1

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK1

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK1

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK1

    None.

Critical Paths under _CCP3_CaptureISR in BANK1

    None.

Critical Paths under _CCP4_CaptureISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR4_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _TMR5_GATE_ISR in BANK2

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK2

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK2

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK2

    None.

Critical Paths under _CCP3_CaptureISR in BANK2

    None.

Critical Paths under _CCP4_CaptureISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR4_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _TMR5_GATE_ISR in BANK3

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK3

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK3

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK3

    None.

Critical Paths under _CCP3_CaptureISR in BANK3

    None.

Critical Paths under _CCP4_CaptureISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR4_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _TMR5_GATE_ISR in BANK4

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK4

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK4

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK4

    None.

Critical Paths under _CCP3_CaptureISR in BANK4

    None.

Critical Paths under _CCP4_CaptureISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR4_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _TMR5_GATE_ISR in BANK5

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK5

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK5

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK5

    None.

Critical Paths under _CCP3_CaptureISR in BANK5

    None.

Critical Paths under _CCP4_CaptureISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR4_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _TMR5_GATE_ISR in BANK6

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK6

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK6

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK6

    None.

Critical Paths under _CCP3_CaptureISR in BANK6

    None.

Critical Paths under _CCP4_CaptureISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR4_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _TMR5_GATE_ISR in BANK7

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK7

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK7

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK7

    None.

Critical Paths under _CCP3_CaptureISR in BANK7

    None.

Critical Paths under _CCP4_CaptureISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR4_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _TMR5_GATE_ISR in BANK8

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK8

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK8

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK8

    None.

Critical Paths under _CCP3_CaptureISR in BANK8

    None.

Critical Paths under _CCP4_CaptureISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR4_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _TMR5_GATE_ISR in BANK9

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK9

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK9

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK9

    None.

Critical Paths under _CCP3_CaptureISR in BANK9

    None.

Critical Paths under _CCP4_CaptureISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR4_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _TMR5_GATE_ISR in BANK10

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK10

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK10

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK10

    None.

Critical Paths under _CCP3_CaptureISR in BANK10

    None.

Critical Paths under _CCP4_CaptureISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR4_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _TMR5_GATE_ISR in BANK11

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK11

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK11

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK11

    None.

Critical Paths under _CCP3_CaptureISR in BANK11

    None.

Critical Paths under _CCP4_CaptureISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR4_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _TMR5_GATE_ISR in BANK12

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK12

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK12

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK12

    None.

Critical Paths under _CCP3_CaptureISR in BANK12

    None.

Critical Paths under _CCP4_CaptureISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR4_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _TMR5_GATE_ISR in BANK13

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK13

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK13

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK13

    None.

Critical Paths under _CCP3_CaptureISR in BANK13

    None.

Critical Paths under _CCP4_CaptureISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR4_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _TMR5_GATE_ISR in BANK14

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK14

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK14

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK14

    None.

Critical Paths under _CCP3_CaptureISR in BANK14

    None.

Critical Paths under _CCP4_CaptureISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR4_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _TMR5_GATE_ISR in BANK15

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK15

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK15

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK15

    None.

Critical Paths under _CCP3_CaptureISR in BANK15

    None.

Critical Paths under _CCP4_CaptureISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   29871
                  _SYSTEM_Initialize
           _TMR4_SetInterruptHandler
                               _loop
 ---------------------------------------------------------------------------------
 (1) _loop                                                 0     0      0   28724
           _ADCC_GetSingleConversion
                             ___flge
                           ___xxtofl
                       _calcMotorPow
                          _calcSpeed
                       _calcSteering
                  _getBatteryVoltage
                           _getCurve
                         _getReverse
                        _setSteering
 ---------------------------------------------------------------------------------
 (2) _getReverse                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _getCurve                                             6     6      0    8952
                                             58 BANK0      6     6      0
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                              10     4      6    8822
                                             50 BANK0      8     2      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6    7931
                                             42 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           42    36      6    7458
                                             26 BANK0     16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    5683
                                             48 COMRAM    10     0     10
                                              0 BANK0     26    26      0
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    3417
                                             37 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     220
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1537
                                             30 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4    1037
                                             21 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0      93
                                             20 COMRAM     1     1      0
                        _UART1_Write
 ---------------------------------------------------------------------------------
 (8) _UART1_Write                                          1     1      0      62
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     183
                                             37 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     613
                                             19 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     625
                                             19 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (2) _getBatteryVoltage                                    0     0      0      22
           _ADCC_GetSingleConversion
 ---------------------------------------------------------------------------------
 (3) _ADCC_GetSingleConversion                             5     3      2      22
                                             19 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _calcSteering                                         4     4      0    3424
                                             36 COMRAM     4     4      0
                            ___awdiv
                        _setSteering
 ---------------------------------------------------------------------------------
 (2) _setSteering                                          9     6      3    2708
                                             27 COMRAM     9     6      3
                 _PWM5_LoadDutyValue
                 _PWM6_LoadDutyValue
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     604
                                             19 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _PWM6_LoadDutyValue                                   4     2      2     120
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _PWM5_LoadDutyValue                                   4     2      2     120
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _calcSpeed                                            4     4      0    7228
                                             31 BANK0      4     4      0
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             16     8      8    3402
                                             50 COMRAM     8     0      8
                                             13 BANK0      8     8      0
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _calcMotorPow                                         7     7      0    5256
                                             31 BANK0      7     7      0
                            ___flmul
                            ___fltol
                           ___xxtofl
                           _actSpeed
                           _setMotor
 ---------------------------------------------------------------------------------
 (3) _setMotor                                             4     2      2     754
                                             23 COMRAM     4     2      2
                 _PWM7_LoadDutyValue
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (4) _PWM8_LoadDutyValue                                   4     2      2     272
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _PWM7_LoadDutyValue                                   4     2      2     272
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _actSpeed                                             4     2      2     629
                                             33 COMRAM     4     2      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             14     6      8     604
                                             19 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     626
                                             24 COMRAM    14    10      4
           _ADCC_GetSingleConversion (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     381
                                             21 BANK0     10     6      4
                            ___fladd (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    2693
                                             38 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     486
                                             38 COMRAM    12     4      8
           _ADCC_GetSingleConversion (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     973
                    _ADCC_Initialize
                    _CCP3_Initialize
                    _CCP4_Initialize
                    _CLC3_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM5_Initialize
                    _PWM6_Initialize
                    _PWM7_Initialize
                    _PWM8_Initialize
                    _SMT1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR4_Initialize
                    _TMR5_Initialize
                   _UART1_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0     490
              _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetOverrunErrorHandler                         2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetFramingErrorHandler                         2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetErrorHandler                                2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      2     2      0      98
                                             21 COMRAM     2     2      0
       _TMR5_SetGateInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetGateInterruptHandler                         2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0     174
           _TMR4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR4_SetInterruptHandler                             2     0      2     174
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      2     2      0       0
                                             19 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMT1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM7_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      15
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _CLC3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP4_Initialize                                      0     0      0      98
                   _CCP4_SetCallBack
 ---------------------------------------------------------------------------------
 (3) _CCP4_SetCallBack                                     2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CCP3_Initialize                                      0     0      0      98
                   _CCP3_SetCallBack
 ---------------------------------------------------------------------------------
 (3) _CCP3_SetCallBack                                     2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_tx_vect_isr                                   1     1      0       0
                                             16 COMRAM     1     1      0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_rx_vect_isr                                   1     1      0       0
                                             17 COMRAM     1     1      0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Receive_ISR                                   0     0      0       0
                   Absolute function *
          _UART1_DefaultErrorHandler *
   _UART1_DefaultFramingErrorHandler *
   _UART1_DefaultOverrunErrorHandler *
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (14) _UART1_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _UART1_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _UART1_DefaultErrorHandler                           0     0      0       0
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (14) _UART1_RxDataHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TMR4_ISR                                            1     1      0       0
                                             18 COMRAM     1     1      0
                      _TMR4_CallBack
 ---------------------------------------------------------------------------------
 (13) _TMR4_CallBack                                       0     0      0       0
                   Absolute function *
                       _TMR4_10msISR *
       _TMR4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _TMR4_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _TMR4_10msISR                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _TMR5_GATE_ISR                                       0     0      0     233
                   Absolute function *
   _TMR5_DefaultGateInterruptHandler *
 ---------------------------------------------------------------------------------
 (17) _TMR5_DefaultGateInterruptHandler                    0     0      0     233
                     _TMR5_ReadTimer
                        _TMR5_Reload
 ---------------------------------------------------------------------------------
 (18) _TMR5_Reload                                         0     0      0     164
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (19) _TMR5_WriteTimer                                     2     0      2     164
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (18) _TMR5_ReadTimer                                      8     6      2      69
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _SMT1_PR_ACQ_ISR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _SMT1_PW_ACQ_ISR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _SMT1_Overflow_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _CCP3_CaptureISR                                     2     2      0     144
                                             10 COMRAM     2     2      0
                   Absolute function *
               _CCP3_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (17) _CCP3_DefaultCallBack                                2     0      2      97
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _CCP4_CaptureISR                                     2     2      0     144
                                             14 COMRAM     2     2      0
                   Absolute function *
               _CCP4_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (17) _CCP4_DefaultCallBack                                2     0      2      97
                                             12 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
     _CCP3_Initialize
       _CCP3_SetCallBack
     _CCP4_Initialize
       _CCP4_SetCallBack
     _CLC3_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM5_Initialize
     _PWM6_Initialize
     _PWM7_Initialize
     _PWM8_Initialize
     _SMT1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
     _TMR4_Initialize
       _TMR4_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetGateInterruptHandler
     _UART1_Initialize
       _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
   _TMR4_SetInterruptHandler
   _loop
     _ADCC_GetSingleConversion
     ___flge
       _ADCC_GetSingleConversion (ARG)
       ___xxtofl (ARG)
         _ADCC_GetSingleConversion (ARG)
     ___xxtofl
     _calcMotorPow
       ___flmul
         ___xxtofl (ARG)
       ___fltol
         ___fladd (ARG)
           ___flmul (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl
       _actSpeed
         ___aldiv
       _setMotor
         _PWM7_LoadDutyValue
         _PWM8_LoadDutyValue
     _calcSpeed
       ___fladd
       ___flmul
       ___fltol
       ___xxtofl
     _calcSteering
       ___awdiv
       _setSteering
         _PWM5_LoadDutyValue
         _PWM6_LoadDutyValue
         ___awdiv
     _getBatteryVoltage
       _ADCC_GetSingleConversion
     _getCurve
       _printf
         _vfprintf
           _vfpfcnvrt
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                 _fputs
                   _fputc
                 _strlen
             _fputc
     _getReverse
     _setSteering

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *
     Absolute function(Fake) *
     _UART1_DefaultErrorHandler *
       _UART1_RxDataHandler
     _UART1_DefaultFramingErrorHandler *
     _UART1_DefaultOverrunErrorHandler *
     _UART1_RxDataHandler *

 _TMR4_ISR (ROOT)
   _TMR4_CallBack
     Absolute function(Fake) *
     _TMR4_10msISR *
     _TMR4_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _TMR5_GATE_ISR (ROOT)
   Absolute function(Fake) *
   _TMR5_DefaultGateInterruptHandler *
     _TMR5_ReadTimer
     _TMR5_Reload
       _TMR5_WriteTimer

 _SMT1_PR_ACQ_ISR (ROOT)

 _SMT1_PW_ACQ_ISR (ROOT)

 _SMT1_Overflow_ISR (ROOT)

 _CCP3_CaptureISR (ROOT)
   Absolute function(Fake) *
   _CCP3_DefaultCallBack *

 _CCP4_CaptureISR (ROOT)
   Absolute function(Fake) *
   _CCP4_DefaultCallBack *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FFF      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK15          100      0       0      30        0.0%
BANK15             100      0       0      31        0.0%
BITBANK14          100      0       0      28        0.0%
BANK14             100      0       0      29        0.0%
BITBANK13          100      0       0      36        0.0%
BANK13             100      0       0      27        0.0%
BITBANK12          100      0       0      35        0.0%
BANK12             100      0       0      26        0.0%
BITBANK11          100      0       0      34        0.0%
BANK11             100      0       0      25        0.0%
BITBANK10          100      0       0      33        0.0%
BANK10             100      0       0      24        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      20       7       12.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     40      98       5       95.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     3A      4C       1       80.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     104      32        0.0%
DATA                 0      0     104       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Jan 22 07:33:50 2024

                             _CCP4_Initialize 3C5A                        ??_CCP3_DefaultCallBack 000B  
                                          l72 3EFC                                            l75 3E06  
                                          l69 3774                                  ___awdiv@sign 0019  
                           ??_TMR5_WriteTimer 0003                   __size_of_PWM6_LoadDutyValue 0034  
                                         l312 362E                                           l404 372A  
                                         l308 35E6                                           l309 3600  
                                         l318 3F24                                           l503 39B8  
                                         l442 37BE                                           l362 3F42  
                                         l371 3F2E                                           l188 30EE  
                                         l284 33D8                                           l365 3F56  
                                         l631 3EB4                                           l359 3F4C  
                                         l368 3F38                                           l617 3F6A  
                                         l634 3AF8                                           l645 3E9C  
                                         l717 3BF8                                           l477 3F60  
                                         l566 3D0E                                           l662 3A90  
                                         l815 3D3A                                           l648 3AC4  
                                         l673 3ECC                                           l659 3EE4  
                                         l676 3A5C                                           l845 3E84  
                                         l964 368A                                           l976 3B74  
                                         l979 3B94                                           _GIE 01FE97  
                                         _PR2 003FAB                                           _PR4 003F9F  
                                         _abs 3892                                           _pad 31B4  
                     __size_of_PMD_Initialize 0024                               _TMR2_Initialize 3E6A  
              CCP4_SetCallBack@customCallBack 0014                                           tosl 003FFD  
                                         wreg 003FE8                              _CCP4_SetCallBack 3F6C  
                                ___flmul@aexp 00A3                                  ___flmul@bexp 00A8  
                          _UART1_Transmit_ISR 384E                                  ___flmul@sign 00A2  
                                ___flmul@temp 00AD                                  ___flmul@prod 00A9  
                     __end_of_CCP4_CaptureISR 3B64                                  ___fltol@exp1 00C0  
                                        l2000 25DA                                          l1115 3F74  
                                        l2011 2572                                          ?_abs 0026  
                                        l2004 2516                                          l2020 3DBA  
                                        l1118 3C86                                          l1214 2B1E  
                                        l2111 346E                                          l1304 2250  
                                        l1321 2426                                          l1330 29F6  
                                        l2050 323A                                          l1218 2B74  
                                        l1227 2C2C                                          l1236 3502  
                                        l2052 3274                                          l2060 1A22  
                                        l1085 3F7E                                          l1077 3CB4  
                                        l1421 2D38                                          l2125 390A  
                                        l3111 3630                                          l1239 3F0C  
                                        l2119 384C                                          l2047 31F8  
                                        l1263 2070                                          l1247 2060  
                                        l1271 356A                                          l2058 1A1A  
                                        l3051 370A                                          l3043 36E0  
                                        l3131 3BF0                                          l3123 3BCA  
                                        l1339 3024                                          l1291 2086  
                                        l2091 35CA                               _timer3ReloadVal 00E8  
                                        l1612 2F44                                          l2092 35D2  
                                        l3061 371E                                          l3053 370C  
                                        l3045 36E2                                          l3133 3BF2  
                                        l3125 3BE8                                          l3141 3E7C  
                                        l1293 20AA                                          l2085 1E6A  
                                        l1294 20DE                                          l2078 1C5E  
                                        l3071 3728                                          l3063 3720  
                                        l3055 3716                                          l3047 36EA  
                                        l3143 3E86                                          l3135 3BF4  
                                        l3127 3BEA                                          l1607 2EFE  
                                        l1295 2116                                          l1287 2B1C  
                                        l1296 2132                                          l1456 2762  
                                        l2096 38C8                                          l3065 3722  
                                        l3057 371A                                          l3049 36F4  
                                        l3081 3050                                          l3073 3DE4  
                                        l3145 3EB6                                          l3129 3BEC  
                                        l3137 3E6A                                          l5001 33AC  
                                        l3067 3724                                          l3059 371C  
                                        l3091 30AA                                          l3083 309E  
                                        l3075 3026                                          l3139 3E76  
                                        l5003 33D4                                          l2099 38D0  
                                        l3157 3D10                                          l3069 3726  
                                        l3093 30AC                                          l3085 30A0  
                                        l3077 3046                                          l4301 2D18  
                                        l1573 31B2                                          l5101 2A06  
                                        l1469 28C6                                          l3095 30AE  
                                        l3087 30A2                                          l3079 3048  
                                        l3167 3ECE                                          l3183 3E9E  
                                        l1639 2E40                                          l4303 2D28  
                                        l4311 3102                                          l5111 2A78  
                                        l5103 2A26                                          l3097 30B0  
                                        l3089 30A4                                          l6001 1502  
                                        l4321 3128                                          l4313 310A  
                                        l5121 2AC4                                          l5113 2A8C  
                                        l5105 2A3A                                          l4401 3B70  
                                        l5017 3EFE                                          l4411 3F6C  
                                        l3099 3EE6                                          l6011 152A  
                                        l6003 1508                                          l4331 3160  
                                        l4323 3130                                          l4315 310E  
                                        l4307 30F0                                          l5115 2A9E  
                                        l5107 2A4E                                          l4403 3B72  
                                        l5221 2EAE                                          l6101 1828  
                                        l6021 1568                                          l6013 1538  
                                        l6005 1516                                          l4261 3A2A  
                                        l4341 318C                                          l4333 3166  
                                        l4325 3142                                          l4317 311C  
                                        l4309 30F4                                          l4421 2190  
                                        l4413 2072                                          l5109 2A64  
                                        l4405 3B82                                          l1870 1258  
                                        l5231 2F3C                                          l5223 2EBE  
                                        l5215 2E42                                          l6111 1892  
                                        l6103 182C                                          l6031 159A  
                                        l6023 1578                                          l6015 1546  
                                        l4271 2C54                                          l4263 2C2E  
                                        l4255 3AC6                                          l6007 1518  
                                        l1871 1246                                          l4335 317C  
                                        l4327 314A                                          l4343 3192  
                                        l4319 3124                                          l4431 21F8  
                                        l4423 21AC                                          l4415 20F6  
                                        l5119 2AB2                                          l5127 2AD8  
                                        l1960 1978                                          l1872 120C  
                                        l4409 3F76                                          l4361 3F26  
                                        l5241 3740                                          l5233 2F42  
                                        l5225 2ECC                                          l5217 2E70  
                                        l6121 18F4                                          l6113 189E  
                                        l6105 183A                                          l6041 15DA  
                                        l6033 15A8                                          l6025 157E  
                                        l6017 1548                                          l4281 2C9C  
                                        l4273 2C62                                          l4265 2C32  
                                        l4257 3A92                                          l4345 31A2  
                                        l4337 3184                                          l4329 3152  
                                        l4433 2204                                          l4425 21B8  
                                        l4363 3F44                                          l5251 375C  
                                        l5243 3748                                          l5227 2EDE  
                                        l5219 2E80                                          l6131 195C  
                                        l6123 1908                                          l6115 18AC  
                                        l6107 1868                                          l1963 180A  
                                        l6051 1624                                          l6043 15E0  
                                        l6035 15AA                                          l6027 158E  
                                        l6019 1558                                          l4291 2CE6  
                                        l4283 2CA4                                          l4275 2C72  
                                        l4267 2C40                                          l4451 349E  
                                        l6211 227A                                          l4259 3A5E  
                                        l4347 31AA                                          l4339 3186  
                                        l4435 2220                                          l4427 21D4  
                                        l4419 214E                                          l5091 3538  
                                        l5083 3504                                          l1956 15F0  
                                        l4365 3F3A                                          l5253 3760  
                                        l5245 374C                                          l5237 372C  
                                        l5229 2EEC                                          l6133 195E  
                                        l6125 1922                                          l1973 193A  
                                        l6117 18D6                                          l1965 1882  
                                        l6061 1680                                          l6053 1634  
                                        l6045 1600                                          l6037 15BA  
                                        l6029 1594                                          l4293 2CF6  
                                        l4285 2CB0                                          l4277 2C76  
                                        l4269 2C50                                          l4453 34CE  
                                        l4445 3470                                          l6221 22D2  
                                        l6213 2290                                          l6205 2252  
                                        l4437 2228                                          l4429 21DC  
                                        l6141 1E6C                                          l5093 3548  
                                        l5085 351C                                          l1966 1870  
                                        ?_pad 0026                                          l4367 3F4E  
                                        l4359 3F30                                          l5255 3768  
                                        l5247 3750                                          l5239 373C  
                                        l6127 193E                                          l6135 1964  
                                        l6119 18DA                                          l6071 16C6  
                                        l6063 168C                                          l6055 163E  
                                        l6047 1610                                          l6039 15CA  
                                        l4295 2CF8                                          l4287 2CBE  
                                        l4279 2C86                                          l4455 34FA  
                                        l4447 3478                                          l4471 2F86  
                                        l1887 1372                                          l1879 1528  
                                        l6231 237A                                          l6223 22DA  
                                        l6215 22AA                                          l6207 2260  
                                        l4439 223C                                          l6151 1ECE  
                                        l6143 1E70                                          l5095 354C  
                                        l5087 3522                                          l6311 2C20  
                                        l1896 1442                                          l5257 376C  
                                        l5249 3754                                          l6137 1968  
                                        l6129 194E                                          l6081 1734  
                                        l6073 16D6                                          l6065 1698  
                                        l6057 1658                                          l4297 2D02  
                                        l4289 2CC8                                          l4449 348E  
                                        l4481 2FE0                                          l4473 2F92  
                                        l4465 2F46                                          l1897 1430  
                                        l6233 2386                                          l6225 22E6  
                                        l6241 23D4                                          l6217 22B2  
                                        l6209 2276                                          l5601 2650  
                                        l6161 1F24                                          l6153 1EDE  
                                        l6145 1E88                                          l5097 3562  
                                        l5089 3534                                          l6313 2C24  
                                        l6305 2C14                                          l6321 3E40  
                                        l4395 3F62                                          l4379 3F58  
                                        l6091 17D2                                          l6083 1744  
                                        l6075 16E6                                          l6067 16A6  
                                        l6059 1664                                          l4299 2D08  
                                        l4483 2FEC                                          l4467 2F62  
                                        l4475 2FA2                                          l6243 23F2  
                                        l6227 22FC                                          l6219 22BC  
                                        l5099 29F8                                          l5611 26AA  
                                        l5603 266E                                          l6403 203A  
                                        l6171 1F62                                          l6163 1F34  
                                        l6155 1EFA                                          l6147 1EA4  
                                        l6307 2C18                                          l6315 3E2C  
                                        l6093 17F0                                          l6085 1764  
                                        l6077 1704                                          l6069 16B6  
                                        l4821 2D52                                          l4901 25BA  
                                        l1997 247E                                          l4477 2FBC  
                                        l4485 300C                                          l4469 2F7E  
                                        l6261 28EE                                          l6245 23FA  
                                        l6229 2300                                          l6405 2AEE  
                                        l4397 3B66                                          l5613 26D8  
                                        l5605 2676                                          l5621 2712  
                                        l5541 3614                                          l5533 35D6  
                                        l5701 19F4                                          l6181 1FCA  
                                        l6173 1F74                                          l6165 1F3C  
                                        l6157 1F06                                          l6149 1EC2  
                                        l6309 2C1C                                          l6317 3E30  
                                        l4911 3C98                                          l6095 17FA  
                                        l6087 178E                                          l6079 1714  
                                        l4831 2DA2                                          l4903 25C8  
                                        l4479 2FD8                                          l6271 2986  
                                        l6263 2952                                          l6255 28C8  
                                        l6247 2416                                          l6239 2392  
                                        l6407 2162                                          l4399 3B6C  
                                        l5623 2722                                          l5615 26F8  
                                        l5607 268A                                          l5631 2768  
                                        l5543 3616                                          l5535 35D6  
                                        l5551 3F1E                                          l5711 1A50  
                                        l5703 1A0E                                          l6191 200C  
                                        l6183 1FE0                                          l6175 1F8C  
                                        l6167 1F4C                                          l6159 1F12  
                                        l6319 3E32                                          l4913 3CA4  
                                        l4921 3CF8                                          l6097 1808  
                                        l6089 17C4                                          l4841 2DCC  
                                        l4833 2DA6                                          l4825 2D66  
                                        l4905 25CA                                          l6281 29E2  
                                        l6273 2996                                          l6265 2966  
                                        l6257 28E2                                          l6249 241E  
                                        l6409 23A6                                          l5625 2742  
                                        l5617 26FA                                          l5609 2698  
                                        l5641 27C8                                          l5633 2776  
                                        l5545 3626                                          l5537 35F6  
                                        l5561 3426                                          l5553 33DA  
                                        l5721 1AF2                                          l5713 1A58  
                                        l5705 1A2A                                          l5801 35A8  
                                        l6193 2014                                          l6185 1FEC  
                                        l6177 1F9E                                          l6169 1F52  
                                        l4915 3CAE                                          l4931 3C6A  
                                        l4923 3CFC                                          l6099 181A  
                                        l4851 2DF4                                          l4843 2DD6  
                                        l4835 2DB4                                          l4827 2D90  
                                        l4819 2D3A                                          l6283 29EE  
                                        l6275 29B2                                          l6267 296E  
                                        l6259 28E2                                          l5811 1076  
                                        l5619 270C                                          l5651 283E  
                                        l5643 27E6                                          l5635 2796  
                                        l5547 362A                                          l5539 3602  
                                        l5563 345C                                          l5555 33EC  
                                        l5571 3828                                          l5731 1BB0  
                                        l5723 1AF8                                          l5715 1A62  
                                        l5707 1A3C                                          l5803 3D94  
                                        l6179 1FB2                                          l6291 2B96  
                                        l4917 3CB2                                          l4909 3C88  
                                        l4933 3C76                                          l4941 3996  
                                        l4925 3CFE                                          l4853 2E00  
                                        l4845 2DE0                                          l4829 2D92  
                                        l6277 29BE                                          l6269 2982  
                                        l5901 122A                                          l5821 10B6  
                                        l5813 1084                                          l5661 28A6  
                                        l5653 285E                                          l5645 27EE  
                                        l5637 279A                                          l5629 2764  
                                        l5549 362C                                          l5557 33FE  
                                        l5573 382C                                          l5581 38FE  
                                        l5741 1BFE                                          l5733 1BCA  
                                        l5717 1A68                                          l5725 1B5C  
                                        l5709 1A4A                                          l5805 3D9E  
                                        l6189 1FFC                                          l6293 2B9A  
                                        l6285 2B1E                                          l4935 3C80  
                                        l4943 399A                                          l4927 3D0A  
                                        l4919 3CE4                                          l4951 378E  
                                        l4855 2E10                                          l4871 24A4  
                                        l4863 242A                                          l6279 29DA  
                                        l5911 1276                                          l5903 1238  
                                        l5831 10E8                                          l5823 10B8  
                                        l5815 1086                                          l5591 260E  
                                        l5655 2870                                          l5647 2802  
                                        l5639 27A8                                          l5559 3408  
                                        l5567 380A                                          l5575 38D2  
                                        l5671 31E4                                          l5743 1C10  
                                        l5727 1B78                                          l5735 1BD8  
                                        l5719 1AEA                                          l6199 2024  
                                        l6295 2BA8                                          l6287 2B2C  
                                        l4937 3C84                                          l4929 3C5A  
                                        l4945 39B4                                          l4953 37A8  
                                        l4961 3336                                          l4857 2E20  
                                        l4881 24FE                                          l4865 243A  
                                        l5921 12B6                                          l5905 123A  
                                        l5841 1110                                          l5833 10EA  
                                        l5817 1096                                          l5825 10C0  
                                        l5809 1068                                          l5593 2612  
                                        l5585 25DC                                          l5649 2810  
                                        l5657 2876                                          l5569 3816  
                                        l5577 38DE                                          l5681 3248  
                                        l5673 31F0                                          l5665 31B4  
                                        l5745 1C1C                                          l5737 1BEA  
                                        l5729 1B96                                          l5761 1CB6  
                                        l5753 1C60                                          l6297 2BB2  
                                        l6289 2B84                                          l4939 3982  
                                        l4955 37AC                                          l4947 3776  
                                        l4971 3360                                          l4963 333A  
                                        l4859 2E30                                          l4891 2562  
                                        l4883 2500                                          l4875 24B8  
                                        l4867 2448                                          l5931 12E0  
                                        l5923 12C2                                          l5915 128A  
                                        l5907 1244                                          l5851 114A  
                                        l5843 1120                                          l5835 10F0  
                                        l5827 10D0                                          l5819 10A6  
                                        l5595 2620                                          l5587 25E0  
                                        l5659 2886                                          l5579 38E2  
                                        l5683 325C                                          l5675 3204  
                                        l5667 31C2                                          l5747 1C24  
                                        l5739 1BF8                                          l5691 197A  
                                        l5771 1DA6                                          l5763 1CE4  
                                        l5755 1C8E                                          l6299 2BC6  
                                        l4957 37AE                                          l4949 378A  
                                        l4981 3374                                          l4973 3364  
                                        l4965 3346                                          l4893 2580  
                                        l4885 250C                                          l4877 24C0  
                                        l4869 248E                                          l5941 1352  
                                        l5925 12C6                                          l5917 129A  
                                        l5909 1266                                          l5933 12E6  
                                        l5861 1176                                          l5853 115C  
                                        l5845 1130                                          l5837 10FE  
                                        l5829 10D6                                          l5597 2640  
                                        l5589 25EE                                          l5677 3218  
                                        l5669 31D6                                          l5749 1C36  
                                        l5693 199A                                          l5773 1DD4  
                                        l5781 1E08                                          l5765 1D12  
                                        l5757 1CA0                                          l4959 37BA  
                                        l4991 3388                                          l4983 3378  
                                        l4975 3368                                          l4967 3356  
                                        l4895 2582                                          l4887 2548  
                                        l4879 24CC                                          l5951 13AC  
                                        l5935 130C                                          l5943 1362  
                                        l5927 12D4                                          l5919 12A8  
                                        l5871 118A                                          l5863 117A  
                                        l5855 116A                                          l5847 1132  
                                        l5839 1100                                          l5599 2644  
                                        l5687 3892                                          l5679 321C  
                                        l5695 19C4                                          l5783 1E1A  
                                        l5775 1DE6                                          l5767 1D6E  
                                        l5759 1CB2                                          l4993 338C  
                                        l4985 337C                                          l4977 336C  
                                        l4969 335C                                          l4897 2586  
                                        l4889 2554                                          l5961 13DC  
                                        l5953 13B6                                          l5945 1388  
                                        l5937 1340                                          l5929 12D6  
                                        l5881 119E                                          l5873 118E  
                                        l5865 117E                                          l5857 116E  
                                        l5849 113A                                          l5689 38AC  
                                        l5697 19E4                                          l5777 1DFA  
                                        l4995 3390                                          l4987 3380  
                                        l4979 3370                                          l4899 25AA  
                                        l5971 1404                                          l5963 13E0  
                                        l5955 13C4                                          l5947 1398  
                                        l5939 1342                                          l5891 11D8  
                                        l5883 11A2                                          l5875 1192  
                                        l5867 1182                                          l5859 1172  
                                        l5699 19F2                                          l5787 1E26  
                                        l5795 356C                                          l4997 3394  
                                        l4989 3384                                          l5981 145E  
                                        l5973 1412                                          l5965 13F0  
                                        l5957 13C6                                          l5893 11F4  
                                        l5885 11A6                                          l5877 1196  
                                        l5869 1186                                          l5789 1E54  
                                        l5797 3574                                          l4999 33A0  
                                        l5991 14C8                                          l5983 146C  
                                        l5975 1428                                          l5959 13D4  
                                        l5967 13F2                                          l5895 1204  
                                        l5879 119A                                          l5887 11AA  
                                        l5799 3582                                          l5993 14E8  
                                        l5985 14A6                                          l5969 1400  
                                        l5897 121A                                          l5889 11AE  
                                        l5995 14EC                                          l5979 1452  
                                        l5987 14A8                                          l5899 1226  
                                        l5997 14FA                                          l5989 14B8  
                                        l5999 1500                                          STR_1 1001  
                                        STR_2 1025                                          STR_3 1017  
                                        STR_4 1047                                          STR_5 105E  
                                        STR_6 103E                                          STR_7 1049  
                                        STR_8 1032                                          STR_9 1054  
                                        _LATA 003FBA                                          _LATB 003FBB  
                                        _LATC 003FBC                                          u4000 2F3C  
                                        _LATD 003FBD                                          u4001 2F38  
                                        _LATE 003FBE                                          u1525 3714  
                                        u1526 3716                                          u5000 1352  
                                        u5001 134E                                          u5010 1388  
                                        _T2PR 003FAB                                          u5011 1384  
                                        u2700 2C9C                                          u5100 1452  
                                        u5020 1398                                          u2701 2C98  
                                        u5101 144E                                          u5021 1394  
                                        u2710 2CBE                                          u5110 146C  
                                        u5030 13C4                                          u2711 2CBA  
                                        u5111 1468                                          u5031 13C0  
                                        u5200 1568                                          u3520 2D52  
                                        u3600 2448                                          u2720 2CE6  
                                        u5120 14A6                                          u5040 13D4  
                                        u4320 35E6                                          u4400 38FE  
                                        u5201 1564                                          u3521 2D4E  
                                        u3601 2444                                          u2721 2CE2  
                                        u5121 14A2                                          u5041 13D0  
                                        u4321 35E2                                          u4401 38FA  
                                        u5210 15A8                                          u3530 2D86  
                                        u3610 24A4                                          u2730 2D18  
                                        u5130 14B8                                          u5050 13F0  
                                        u4410 25EE                                          u4330 35F6  
                                        _T4PR 003F9F                                          u5211 15A4  
                                        u3611 24A0                                          u2731 2D14  
                                        u5131 14B4                                          u5051 13EC  
                                        u4411 25EA                                          u4331 35F2  
                                        u5300 1868                                          u5220 15BA  
                                        u3540 2DB4                                          u3620 24FA  
                                        u2900 2F62                                          u5140 14C8  
                                        u5060 1400                                          u2740 3102  
                                        u4420 2620                                          u4500 27E6  
                                        u4340 3626                                          u5301 1864  
                                        u5221 15B6                                          u3541 2DB0  
                                        u3621 24F6                                          u2645 3AEA  
                                        u2901 2F5E                                          u5141 14C4  
                                        u5061 13FC                                          u2741 30FE  
                                        u4421 261C                                          u4501 27E2  
                                        u4341 3622                                          u5310 187E  
                                        u5230 15CA                                          u3550 2DC8  
                                        u3630 2544                                          u2910 2F7E  
                                        u5150 14E8                                          u5070 1412  
                                        u2750 311C                                          u2830 3B82  
                                        u4510 2810                                          u4350 33EC  
                                        u5311 187A                                          u5231 15C6  
                                        u3551 2DC4                                          u3535 2D7C  
                                        u3631 2540                                          u2655 3AB6  
                                        u2911 2F7A                                          u5151 14E4  
                                        u5071 140E                                          u2751 3118  
                                        u2831 3B7E                                          u4431 264A  
                                        u4511 280C                                          u4351 33E8  
                                        u5320 1892                                          u5240 1600  
                                        u3560 2DF0                                          u3640 2562  
                                        u2680 2C40                                          u2920 2FBC  
                                        u5160 14FA                                          u5080 1428  
                                        u2760 3142                                          u2840 21AC  
                                        u4440 266E                                          u4520 283E  
                                        u4360 33FE                                          u4600 19AE  
                                        u5400 1F62                                          u3800 3548  
                                        u5321 188E                                          u5241 15FC  
                                        u3561 2DEC                                          u3641 255E  
                                        u2681 2C3C                                          u2921 2FB8  
                                        u5161 14F6                                          u5081 1424  
                                        u2665 3A82                                          u2761 313E  
                                        u2841 21A8                                          u4441 266A  
                                        u4521 283A                                          u4361 33FA  
                                        u5401 1F5E                                          u3801 3544  
                                        u5330 18AC                                          u5250 1610  
                                        u3570 2E10                                          u3650 2572  
                                        u2690 2C62                                          u2930 2FD8  
                                        u5170 1516                                          u5090 143E  
                                        u2770 3160                                          u2850 21D4  
                                        u4450 2698                                          u4530 2886  
                                        u4370 3426                                          u4610 19C4  
                                        u5410 1F74                                          u3810 3562  
                                        u5331 18A8                                          u5251 160C  
                                        u3571 2E0C                                          u3651 256E  
                                        u2691 2C5E                                          u2931 2FD4  
                                        u5171 1512                                          u5091 143A  
                                        u2675 3A4E                                          u2771 315C  
                                        u2851 21D0                                          u4451 2694  
                                        u4531 2882                                          u4371 3422  
                                        u4611 19C0                                          u5411 1F70  
                                        u3811 355E                                          u5340 18F4  
                                        u5260 17AE                                          u5180 1546  
                                        u3580 2E20                                          u3660 2580  
                                        u5500 22FC                                          u2780 317C  
                                        u2860 21F8                                          u3820 2A64  
                                        u4460 26D8                                          u4380 345C  
                                        u4540 31C2                                          u4700 1BD8  
                                        u4620 19F2                                          u5420 1F9E  
                                        _PMD0 0039C0                                          u5341 18F0  
                                        u5181 1542                                          u3581 2E1C  
                                        u3661 257C                                          u5501 22F8  
                                        u2781 3178                                          u2861 21F4  
                                        u3821 2A60                                          u4461 26D4  
                                        u4381 3458                                          u4541 31BE  
                                        u4701 1BD4                                          u4621 19EE  
                                        u5421 1F9A                                          _PMD1 0039C1  
                                        u5350 1922                                          u5270 1808  
                                        u5190 1558                                          u3670 25BA  
                                        u3590 243A                                          u5510 23F2  
                                        u2790 31A2                                          u2870 2220  
                                        u3830 2A9E                                          u4470 2722  
                                        u4390 384C                                          u4550 31E4  
                                        u4710 1BEA                                          u4630 1A0E  
                                        u5430 1FCA                                          _PMD2 0039C2  
                                        u5351 191E                                          u5271 1804  
                                        u5191 1554                                          u3671 25B6  
                                        u3591 2436                                          u5511 23EE  
                                        u2791 319E                                          u2871 221C  
                                        u3831 2A9A                                          u4471 271E  
                                        u4391 3848                                          u4551 31E0  
                                        u4711 1BE6                                          u4631 1A0A  
                                        u5431 1FC6                                          _PMD3 0039C3  
                                        u5360 195C                                          u5280 1828  
                                        u3680 25C8                                          u2880 348E  
                                        u4800 1096                                          u5520 2416  
                                        u3840 2AC4                                          u4480 2776  
                                        u4560 323A                                          u4720 1BF8  
                                        u4640 1A3C                                          u5440 1FE0  
                                        u5600 2BA8                                          _PMD4 0039C4  
                                        u5361 1958                                          u5281 1824  
                                        u5265 17A4                                          u3681 25C4  
                                        u2881 348A                                          u4801 1092  
                                        u5521 2412                                          u3841 2AC0  
                                        u4481 2772                                          u4561 3236  
                                        u4721 1BF4                                          u4641 1A38  
                                        u5441 1FDC                                          u5601 2BA4  
                                        _PMD5 0039C5                                          u5290 183A  
                                        u2890 349E                                          u5530 2966  
                                        u4810 10A6                                          u4490 27A8  
                                        u4570 3248                                          u4730 1C10  
                                        u4650 1A4A                                          u5450 200C  
                                        u5370 1EC2                                          u5610 2C10  
                                        _PMD6 0039C6                                          u5291 1836  
                                        u2891 349A                                          u5531 2962  
                                        u4811 10A2                                          u4491 27A4  
                                        u4571 3244                                          u4731 1C0C  
                                        u4651 1A46                                          u5451 2008  
                                        u5371 1EBE                                          u5611 2C0C  
                                        _PMD7 0039C7                                          u5540 2982  
                                        u4900 11F2                                          u4820 10E8  
                                        u5460 2276                                          u4580 38AC  
                                        u4660 1B78                                          u4740 1C8E  
                                        u5380 1EFA                                          u3780 351C  
                                        u5541 297E                                          u4821 10E4  
                                        u5461 2272                                          u4581 38A8  
                                        u4661 1B74                                          u4741 1C8A  
                                        u5381 1EF6                                          u3781 3518  
                                        u5550 29B2                                          u4910 121A  
                                        u4830 10FE                                          u5470 2290  
                                        u4670 1B96                                          u4590 19AC  
                                        u4750 1CE4                                          u5390 1F34  
                                        u3790 3534                                          u5551 29AE  
                                        u4911 1216                                          u4831 10FA  
                                        u5471 228C                                          u4671 1B92  
                                        u4591 19A6                                          u4751 1CE0  
                                        u5391 1F30                                          u3791 3530  
                                        u3960 2E70                                          u5560 29DA  
                                        u4920 1238                                          u4840 1110  
                                        u5480 22AA                                          u4680 1BB0  
                                        u4760 1D12                                          u3961 2E6C  
                                        u5561 29D6                                          u4921 1234  
                                        u4841 110C                                          u5481 22A6  
                                        u4681 1BAC                                          u4761 1D0E  
                                        u3970 2EAE                                          u4930 1258  
                                        u4850 1120                                          u5490 22D2  
                                        u4690 1BCA                                          u4770 1DD4  
                                        u5570 2B2C                                          u3971 2EAA  
                                        u4931 1254                                          u4851 111C  
                                        u5491 22CE                                          u4691 1BC6  
                                        u4771 1DD0                                          u5571 2B28  
                                        u3980 2ECC                                          u4940 1266  
                                        u4860 115C                                          u4780 35CA  
                                        u5580 2B74                                          u3981 2EC8  
                                        u4941 1262                                          u4861 1158  
                                        u4781 35C6                                          u5581 2B70  
                                        u3990 2EEC                                          u4950 1276  
                                        u4870 116A                                          u4790 1084  
                                        u5590 2B96                                          u3991 2EE8  
                                        u4951 1272                                          u4871 1166  
                                        u4791 1080                                          u5591 2B92  
                                        u4960 12A8                                          u4880 11D8  
                                        u4961 12A4                                          u4881 11D4  
                                        u4970 12B6                                          u4890 11F0  
                                        u4971 12B2                                          u4891 11EA  
                                        u4980 12D4                                          u4981 12D0  
                                        u4990 130C                                          u4991 1308  
                                        _TMR2 003FAA                                          _TMR4 003F9E  
                                        _WPUA 003A41                                          _WPUB 003A51  
                                        _WPUC 003A61                                          _WPUD 003A71  
                                        _WPUE 003A81                           ?_UART1_Transmit_ISR 0001  
                                        abs@a 0026                                          _dbuf 0100  
                                        _main 3E2C                                          _dtoa 197A  
                                        _loop 2B1E                                          _prec 003B  
                                        _nout 0080                                          pad@i 002D  
                                        pad@p 002A                                          fsr1h 003FE2  
                                        fsr2h 003FDA                                          indf2 003FDF  
                                        fsr1l 003FE1                                          pad@w 002F  
                                        fsr2l 003FD9                                          prodh 003FF4  
                                        prodl 003FF3                                          start 00AE  
                             _timer5ReloadVal 00EC                               _TMR3_Initialize 3982  
                             _PWM5_Initialize 3ECE                             ??_CLC3_Initialize 0014  
               ??_UART1_SetTxInterruptHandler 0016                    ??_TMR4_SetInterruptHandler 0016  
                           _UART1_rx_vect_isr 3948                                  ___param_bank 000000  
                  __end_of_PWM5_LoadDutyValue 3A92                            ?_UART1_rx_vect_isr 0001  
                                       ??_abs 0028                                         ??_pad 002C  
              __size_of_OSCILLATOR_Initialize 0018                          ??_UART1_Transmit_ISR 0011  
               __end_of_OSCILLATOR_Initialize 3EFE                                 ___fltol@sign1 00BF  
                             __end_of___aldiv 2D3A                               __end_of___aodiv 2764  
                                       _ADCAP 003EF5                                         _ADACT 003EFE  
                     __end_of_CCP3_Initialize 3CB6                               __end_of___fladd 152A  
                                       ?_main 0001                                         ?_dtoa 0031  
                                       _ADCLK 003EFF                               __end_of___aomod 28C8  
                                       _ADCNT 003EEB                                         _ADPCH 003EF1  
                                       _ADREF 003EFD                               __end_of___awdiv 31B4  
                                       ?_loop 0001                                         _ADRPT 003EEC  
                      ??_CCP4_DefaultCallBack 000F                               __end_of___flmul 197A  
                    TMR5_ReadTimer@readValLow 0008                               __end_of___fltol 2E42  
                             ___awdiv@divisor 0016                                         _U1P1H 003DED  
                                       _U1P2H 003DEF                                         _U1P1L 003DEC  
                                       _U1P3H 003DF1                                         _T3CLK 003FA9  
                                       _T2CON 003FAC                                         _U1P2L 003DEE  
                                       _U1P3L 003DF0                                         _T3CON 003FA6  
                                       _T5CLK 003F9D                                         _T4CON 003FA0  
                                       _T2HLT 003FAD                                         _T5CON 003F9A  
                                       _T4HLT 003FA1                                         _T2TMR 003FAA  
                                       _U1UIR 003DF8                                         i1l330 397A  
                                       _T2RST 003FAF                                         _U1RXB 003DE8  
                                       i1l324 393E                                         i1l333 388C  
                                       i1l350 3F8E                                         i1l343 3334  
                                       i1l336 3890                                         i1l353 3F8C  
                                       i1l610 39EC                                         _U1TXB 003DEA  
                                       i1l347 3D66                                         i1l620 3F90  
                                       i1l356 3F84                                         _T4TMR 003F9E  
                                       i1l614 3CE2                                         _T4RST 003FA3  
                                       i2l409 3F94                                         i2l451 3E2A  
                                       i2l456 3D92                                         i2l480 3E68  
                                       i2l474 3BC8                                         i2l459 3F1A  
                         ??_UART1_rx_vect_isr 0012                                         i2l790 3DE2  
                                       i2l785 36DE                                         i2l778 3808  
                             ___awdiv@counter 0018                                         _OSCEN 0039DD  
                                vfpfcnvrt@fmt 00BE                                         _TMR3H 003FA5  
                                       _TMR5H 003F99                                         _TMR3L 003FA4  
                                       _TMR5L 003F98                                         _TRISA 003FC2  
                                       _TRISB 003FC3                                         _TRISC 003FC4  
                                       _TRISD 003FC5                                         _TRISE 003FC6  
                                 _Default_ISR 3F94                               _TMR4_Initialize 3CE4  
                             _PWM6_Initialize 3EB6                             _UART1_tx_vect_isr 390C  
                            __end_of_TMR4_ISR 39F4                       setSteering@steeringMode 001E  
                                       _delay 009C                                         _flags 003D  
                                       _fputc 33DA                                         _fputs 380A  
                       __size_of_calcMotorPow 0130                            ?_UART1_tx_vect_isr 0001  
                                       pad@fp 0026                                         _width 0082  
                                       _putch 3F1C                                         dtoa@d 0033  
                                       dtoa@i 00BA                                         dtoa@n 00B2  
                                       dtoa@p 00AC                                         dtoa@s 00B0  
                                       dtoa@w 00AE                              ?_SMT1_Initialize 0001  
                                       pclath 003FFA                                         tablat 003FF5  
                                 _BatteryVolt 0084                         __size_of_calcSteering 0126  
                                       status 003FD8           __end_of_UART1_SetRxInterruptHandler 3F3A  
                 _UART1_SetRxInterruptHandler 3F30                       __end_of_CCP4_Initialize 3C88  
         fp__UART1_DefaultFramingErrorHandler 0000      __end_of_UART1_DefaultFramingErrorHandler 3F90  
   __size_of_UART1_DefaultFramingErrorHandler 0002            ??_UART1_DefaultFramingErrorHandler 0012  
           ?_UART1_DefaultFramingErrorHandler 0001              _UART1_DefaultFramingErrorHandler 3F8E  
                         ??_UART1_tx_vect_isr 0011                     __end_of_UART1_rx_vect_isr 3982  
                             _TMR5_Initialize 3776                               _PWM7_Initialize 3E9E  
                             __initialization 39F4                         TMR5_ReadTimer@readVal 0005  
                            ?_CCP3_CaptureISR 0001                                  __end_of_main 3E4C  
                                __end_of_dtoa 1C60                                  __end_of_loop 2C2E  
                 ??_UART1_DefaultErrorHandler 0012                       __end_of_TMR2_Initialize 3E86  
                                ?_UART1_Write 0001                                        ??_main 003B  
                                      ??_dtoa 00A2                                        ??_loop 003B  
                               __activetblptr 000003                                  _calcMotorPow 28C8  
        __size_of_UART1_SetTxInterruptHandler 000A                     __end_of_UART1_tx_vect_isr 3946  
                             _PWM8_Initialize 3E86                              _UART1_Initialize 3336  
                                _calcSteering 29F8                              ?_CCP4_CaptureISR 0001  
                                      _ADACCH 003EE9                                        _ADACCL 003EE8  
                                      _ADACCU 003EEA                                        _ADACQH 003EF4  
                                      _ADACQL 003EF3                                        _ADCON0 003EF8  
                                      _ADCON1 003EF9                                        _ADCON2 003EFA  
                                      _ADCON3 003EFB                                        _ADERRH 003EE3  
                                      _ADERRL 003EE2                                        ?_fputc 0016  
                                      _ADLTHH 003EDF                                        _ADLTHL 003EDE  
                                      ?_fputs 001F                                        _ADRESH 003EF0  
                                      _ADRESL 003EEF                                        _ADPREH 003EF7  
                                      _ADPREL 003EF6                                        _CCPR3H 003F75  
                                      _CCPR4H 003F71                                        _CCPR3L 003F74  
                                      _CCPR4L 003F70                                        _ADSTAT 003EFC  
                                      _ADUTHH 003EE1                              ___awdiv@dividend 0014  
                                      _ADUTHL 003EE0                            _PWM8_LoadDutyValue 3A92  
                                      _ANSELA 003A40                                        ?_putch 0001  
                                      _ANSELB 003A50                                        _ANSELC 003A60  
                                      _ANSELD 003A70                                        _ANSELE 003A80  
                                      _RB1I2C 003A5A                                        _RB2I2C 003A5B  
                                      _RD0I2C 003A7A                                        _U1CON0 003DF2  
                                      _U1CON1 003DF3                                        _U1CON2 003DF4  
                                      _RC3I2C 003A6A                                        _RD1I2C 003A7B  
                                      _T3GATE 003FA8                                        _RC4I2C 003A6B  
                                      _U1BRGH 003DF6                                        _U1FIFO 003DF7  
                                      _T3GCON 003FA7                                        _U1BRGL 003DF5  
                                      _T5GATE 003F9C                                        _T5GCON 003F9B  
                                      _RA0PPS 003A00                                        _RA1PPS 003A01  
                                      _RA3PPS 003A03                                        _RA4PPS 003A04  
                                      _RB3PPS 003A0B                                        _T5GPPS 003AC9  
                                      i1l1230 3F8A                                        _ODCONA 003A42  
                                      _ODCONB 003A52                                        _ODCONC 003A62  
                                      _ODCOND 003A72                                        _ODCONE 003A82  
                                      i1l5005 3F80                                        i2l1112 3C58  
                                      i2l1123 3B62                       __end_of_PWM5_Initialize 3EE6  
                     __end_of_TMR3_Initialize 39BA                                        i1l5213 3F86  
                                      i1l5301 32BE                                        i1l5311 3330  
                                      i1l5303 32CE                                        i1l5305 32DE  
                                      i2l1074 3C28                                        i2l1082 3B2E  
                                      i1l5411 39E4                                        i1l4371 3D4E  
                                      i1l5307 32F6                                        i1l5405 39C2  
                                      i1l4373 3D50                                        i1l5309 3312  
                                      i1l5335 3CB6                                        i1l5407 39C6  
                                      i1l4375 3D60                                        i1l5337 3CCA  
                                      i1l5409 39E0                                        i1l4377 3D64  
                                      i1l4369 3D3C                                        i1l5281 384E  
                                      i1l5291 3886                                        i1l5283 385E  
                                      i1l5293 3276                                        i1l5285 3870  
                                      i1l5295 3286                                        i1l5287 3872  
                                      i1l5391 3926                                        i1l5297 3296  
                                      i1l5393 394E                                        i1l5289 3882  
                                      i2l5011 3E22                                        i1l5299 32A6  
                                      i1l5395 3962                                        i1l5389 3912  
                                      i2l5007 3E08                                        i2l5015 3F0E  
                                      i2l5009 3E16                                        i2l5313 3E4C  
                                      i2l5401 3BB0                                        i2l5315 3E58  
                                      i2l5341 3C08                                        i2l5421 37F6  
                                      i2l5413 37C0                                        i2l4381 3D68  
                                      i2l5317 3E60                                        i2l5351 3C44  
                                      i2l5343 3C14                                        i2l5431 36CC  
                                      i2l5423 368C                                        i2l5415 37C4  
                                      i2l4383 3D76                                        i2l4391 3D88  
                                      i2l5319 3E64                                        i2l5353 3C52  
                                      i2l5441 3B30                                        i2l5345 3C22  
                                      i2l5433 3DBC                                        i2l5425 3690  
                                      i2l5417 37D4                                        i2l4393 3D8C  
                                      i2l4385 3D78                                        _INLVLA 003A44  
                                      _INLVLB 003A54                                        i2l5347 3C2A  
                                      i2l5443 3B40                                        i2l5339 3BFA  
                                      i2l5435 3DC0                                        i2l5427 36AA  
                                      i2l5419 37E4                                        i2l4387 3D7C  
                                      _INLVLC 003A64                                        _INLVLD 003A74  
                                      i2l5349 3C38                                        i2l5437 3AFC  
                                      i2l5429 36BA                                        i2l4389 3D82  
                                      _INLVLE 003A84                                        i2l5439 3B0C  
                                      i2l5397 3B98                                        i2l5399 3B9C  
                                ?_setSteering 001C                                        _OSCFRQ 0039DF  
                            __end_of_actSpeed 3504                                        _SMT1PR 003F1B  
                       _UART1_SetErrorHandler 3F4E                              __end_of___xxtofl 25DC  
                         ?_PWM8_LoadDutyValue 0014                              __end_of_getCurve 2072  
                    __end_of_CCP3_SetCallBack 3F80                                  _CCPTMRS0bits 003F5E  
                                _CCPTMRS1bits 003F5F                                  vfprintf@cfmt 00D2  
                                      ___flge 2E42                                     ??___aldiv 001C  
                                   ??___aodiv 0024                                     ??___fladd 00AF  
                                   ??___aomod 0024                                     ??___awdiv 0018  
                                   ??___flmul 002F                                     ??___fltol 00BB  
                               _CCP3_CallBack 00E4                                  ?_TMR5_Reload 0001  
                     __end_of_PWM6_Initialize 3ECE                       __end_of_TMR4_Initialize 3D10  
                                      clear_0 39FA                                        clear_1 3A06  
                                      clear_2 3A12                              ___awdiv@quotient 001A  
                                      _motPow 008E                       fp__CCP3_DefaultCallBack 0000  
                                      isa$std 000001                                 _CCP4_CallBack 00E2  
                                      _smtWay 0078                                        _printf 3D94  
                                      pad@buf 0028                                        dtoa@fp 0031  
                            ?_CCP3_Initialize 0001                                        _strlen 38D2  
                        ??_PWM8_LoadDutyValue 0016                              __end_of_setMotor 3026  
                             _ADCC_Initialize 3630          __end_of_TMR4_DefaultInterruptHandler 3F92  
       __size_of_TMR4_DefaultInterruptHandler 0002                  _TMR4_DefaultInterruptHandler 3F90  
                                      fputc@c 0016                                _PMD_Initialize 3DE4  
                                      fputs@c 0023                                        fputs@i 0024  
                                      fputs@s 001F                                  __mediumconst 0000  
                       __end_of_TMR5_GATE_ISR 3BCA                                        tblptrh 003FF7  
                                      tblptrl 003FF6                                        tblptru 003FF8  
           __size_of_ADCC_GetSingleConversion 0032                              __end_of_vfprintf 35D4  
                   ?_ADCC_GetSingleConversion 0014      TMR4_SetInterruptHandler@InterruptHandler 0014  
TMR5_SetGateInterruptHandler@InterruptHandler 0014   UART1_SetTxInterruptHandler@InterruptHandler 0014  
 UART1_SetRxInterruptHandler@InterruptHandler 0014          __end_of_UART1_SetOverrunErrorHandler 3F44  
       __size_of_UART1_SetOverrunErrorHandler 000A                  _UART1_SetOverrunErrorHandler 3F3A  
                   _UART1_DefaultErrorHandler 3F80                 __size_of_INTERRUPT_Initialize 004C  
                __size_of_UART1_RxDataHandler 002C                             getCurve@deltaLeft 00DE  
                                  ___flge@ff1 0027                                    ___flge@ff2 002B  
                     __end_of_PWM7_Initialize 3EB6                       __end_of_TMR5_Initialize 37C0  
                                ___xxtofl@arg 0023                                  ___xxtofl@exp 0022  
                           _SYSTEM_Initialize 372C                                  ___xxtofl@val 0019  
                                  __accesstop 0060                       __end_of__initialization 3A24  
                            ?_CCP4_Initialize 0001                           setSteering@steering 001C  
                          ?_SYSTEM_Initialize 0001                                 ___rparam_used 000001  
                  __size_of_UART1_rx_vect_isr 003A                                    ___fltol@f1 00B7  
                             _TMR5_WriteTimer 3D68                            __size_of_calcSpeed 01D6  
                   calcMotorPow@setSpeedDelta 00C3                      __end_of_CCP4_SetCallBack 3F76  
                              __pcstackCOMRAM 0001                         __end_of_TMR4_CallBack 3CE4  
                         ??_SYSTEM_Initialize 0018                                     ?_TMR4_ISR 0001  
                              ivt0x8_undefint 00AC                                 __end_of_fputc 3470  
                               __end_of_fputs 384E                               fp__TMR4_10msISR 0000  
                               __end_of_putch 3F26                              ?_TMR2_Initialize 0001  
                     __end_of_PWM8_Initialize 3E9E                        __end_of_PMD_Initialize 3E08  
                 __size_of_PWM7_LoadDutyValue 0034                         CCP3_CaptureISR@module 000B  
                  __size_of_UART1_tx_vect_isr 003A                CCP3_SetCallBack@customCallBack 0014  
                   _UART1_FramingErrorHandler 00F2               fp__TMR4_DefaultInterruptHandler 0000  
               ?_TMR4_DefaultInterruptHandler 0001                       fp__CCP4_DefaultCallBack 0000  
                    __size_of_SMT1_PR_ACQ_ISR 004A                                       ??_fputc 001A  
                   __end_of_SYSTEM_Initialize 3776                                       ??_fputs 0023  
                             _CLC3_Initialize 3D10                                       ??_putch 0015  
                 PWM7_LoadDutyValue@dutyValue 0014                                    __pbssBANK0 0060  
                                  __pbssBANK1 0100                 ?_UART1_SetOverrunErrorHandler 0014  
                      ?_UART1_SetErrorHandler 0014                              ?_PWM5_Initialize 0001  
                            ?_TMR3_Initialize 0001                                    __pnvCOMRAM 004C  
                    __size_of_SMT1_PW_ACQ_ISR 0054                         _TMR4_InterruptHandler 00E6  
                                     IVTBASEH 003FD6                                       IVTBASEL 003FD5  
                                     IVTBASEU 003FD7                                       ?___flge 0027  
                                  ??_TMR4_ISR 0013                       __end_of_ADCC_Initialize 368C  
                  __end_of_PWM6_LoadDutyValue 3A5E          __end_of_TMR5_SetGateInterruptHandler 3F62  
       __size_of_TMR5_SetGateInterruptHandler 000A                  _TMR5_SetGateInterruptHandler 3F58  
                                     _CCP3CAP 003F77                                       _CCP4CAP 003F73  
                                     _CCP3CON 003F76                                       _CCP4CON 003F72  
                                     _ADFLTRH 003EE7                                       _ADFLTRL 003EE6  
               __size_of_CCP3_DefaultCallBack 0030                                       _CCP3PPS 003ACF  
                                     _CCP4PPS 003AD0                                       _CLC3CON 003C60  
                                     _CLC3POL 003C61                                       _ADPREVH 003EEE  
                                     _ADPREVL 003EED                              ?_PWM6_Initialize 0001  
                            ?_TMR4_Initialize 0001                                       _ADSTPTH 003EE5  
                                     _ADSTPTL 003EE4                                       ?_printf 00D4  
                             ?_PMD_Initialize 0001                             _UART1_Receive_ISR 3276  
                                  _getReverse 3504                                       ?_strlen 0014  
                                     _U1ERRIE 003DFA                                     ?_actSpeed 0022  
                                     _U1ERRIR 003DF9                                 ?_TMR4_10msISR 0001  
                                ?_Default_ISR 0001                          __size_of_UART1_Write 005C  
                          ?_UART1_Receive_ISR 0001                                       _U1RXPPS 003AE5  
                                   ?___xxtofl 0019                            _PWM5_LoadDutyValue 3A5E  
                                  _distRightM 0094                       __size_of_TMR5_ReadTimer 0024  
                                     _OSCCON1 0039D9                                       _OSCCON3 0039DB  
                           __end_of_calcSpeed 2428                                       _IVTLOCK 003FD4  
                          __size_of_vfpfcnvrt 020C                                       _SMT1CLK 003F21  
                                     _OSCTUNE 0039DE                                       _SMT1CPR 003F15  
                                     _SMT1CPW 003F18                                       _PWM5DCH 003F6D  
                                     _PWM5DCL 003F6C                                       _PWM6DCH 003F69  
                                     _PWM6DCL 003F68                                       _PWM7DCH 003F65  
                                     _PWM7DCL 003F64                                       _SMT1SIG 003F22  
                                     _PWM8DCH 003F61                                       _PWM5CON 003F6E  
                                     _PWM8DCL 003F60                                       _SMT1PRH 003F1C  
                                     _PWM6CON 003F6A                                       _SMT1PRL 003F1B  
                                     _PWM7CON 003F66                                       _SMT1PRU 003F1D  
                                   ?_getCurve 0001                                       _SMT1WIN 003F23  
                                     _SMT1TMR 003F12                                       _PWM8CON 003F62  
                                     _SLRCONA 003A43                                       _SLRCONB 003A53  
                                     _SLRCONC 003A63                                       _SLRCOND 003A73  
                                     _SLRCONE 003A83                           ??_UART1_Receive_ISR 0012  
                     __end_of_TMR5_WriteTimer 3D94                           ?_PWM5_LoadDutyValue 0014  
                            ?_PWM7_Initialize 0001                              ?_TMR5_Initialize 0001  
                   INTERRUPT_Initialize@state 0014                          __size_of_setSteering 01E0  
                                   _CLCIN0PPS 003AD9                                     _CLCIN2PPS 003ADB  
                                   _CLCIN3PPS 003ADC                                       __Hparam 0000  
                                   ?_setMotor 0018                                       __Lparam 0000  
                    __end_of_UART1_Initialize 33DA                                       ___aldiv 2C2E  
                             __size_of___flge 0104                                       ___aodiv 25DC  
                                     ___fladd 1068                                       ___aomod 2764  
                                     ___awdiv 30F0                                       ___flmul 152A  
                                     ___fltol 2D3A                     __end_of_UART1_Receive_ISR 3336  
                                   ?_vfprintf 00CC                          ??_PWM5_LoadDutyValue 0016  
                                __psmallconst 1000                                       __pcinit 39F4  
                   _TMR5_GateInterruptHandler 00EA                              ?_PWM8_Initialize 0001  
                                     __ramtop 1000                   __size_of_UART1_Transmit_ISR 0044  
               ?_TMR5_SetGateInterruptHandler 0014                                       __ptext0 3E2C  
                                     __ptext1 2B1E                                       __ptext2 3504  
                                     __ptext3 1E6C                                       __ptext4 3D94  
                                     __ptext5 356C                                       __ptext6 1C60  
                                     __ptext7 197A                                       __ptext8 31B4  
                                     __ptext9 38D2                               __size_of_printf 0028  
                              ??_TMR4_10msISR 0013                          __size_of_TMR5_Reload 000E  
                                  ??_actSpeed 0024                               __size_of_strlen 003A  
                     __end_of_CLC3_Initialize 3D3C                         _OSCILLATOR_Initialize 3EE6  
                                   _T2CONbits 003FAC                                  __size_of_abs 0040  
                                __size_of_pad 00C2                                    ??___xxtofl 001D  
                                   _T3CONbits 003FA6                 __size_of_CCP4_DefaultCallBack 0030  
                            ___aldiv@dividend 0014                                     _T4CONbits 003FA0  
                    ??_PIN_MANAGER_Initialize 0014             __size_of_TMR4_SetInterruptHandler 000A  
                                   _T2HLTbits 003FAD                                     _T5CONbits 003F9A  
                   ?_TMR4_SetInterruptHandler 0014                                     _IPR10bits 00398A  
                                     _smtDuty 007C                                     _T4HLTbits 003FA1  
                                  ??_getCurve 00DC                                     _PIE10bits 00399A  
                  __size_of_SYSTEM_Initialize 004A                          end_of_initialization 3A24  
                                   _T2RSTbits 003FAF                ??_TMR4_DefaultInterruptHandler 0013  
                                   _T4RSTbits 003FA3                                     _PIR10bits 0039AA  
                                     fputc@fp 0018                             ??_SMT1_PR_ACQ_ISR 0009  
         __end_of_UART1_SetTxInterruptHandler 3F30                   _UART1_SetTxInterruptHandler 3F26  
                                     fputs@fp 0021                ??_UART1_SetOverrunErrorHandler 0016  
                                  ??_setMotor 001A                      __size_of_SMT1_Initialize 0030  
                           __end_of_vfpfcnvrt 1E6C                             ?_CCP3_SetCallBack 0014  
                            ___aldiv@quotient 001E                                       postdec2 003FDD  
                           ??_SMT1_PW_ACQ_ISR 0009                                       postinc0 003FEE  
                                     postinc1 003FE6                                       postinc2 003FDE  
                            ?_ADCC_Initialize 0001                            ??_CCP3_SetCallBack 0016  
                                  ??_vfprintf 003B              __end_of_ADCC_GetSingleConversion 3B96  
                           UART1_Write@txData 0014                           _UART1_RxDataHandler 3D3C  
                                     strlen@a 0016                                       strlen@s 0014  
                                 ?_getReverse 0001                                     _PORTBbits 003FCB  
                                   _PORTDbits 003FCD                      __size_of_CCP3_CaptureISR 0034  
                                 ___fladd@grs 00B6                            getCurve@deltaRight 00E0  
                               ___xxtofl@sign 0021                          ?_UART1_RxDataHandler 0001  
                            ?_TMR5_WriteTimer 0001                          setSteering@steeringB 0023  
                        setSteering@steeringF 0021                       TMR5_WriteTimer@timerVal 0001  
                                 ___flmul@grs 00A4                      __size_of_CCP4_CaptureISR 0034  
           CCP4_DefaultCallBack@capturedValue 000D                             ?_CCP4_SetCallBack 0014  
                __end_of_INTERRUPT_Initialize 372C                                __end_of___flge 2F46  
                  __size_of_UART1_Receive_ISR 00C0                            ??_CCP4_SetCallBack 0016  
                                 _CLC3CONbits 003C60                                   vfpfcnvrt@ap 00C0  
                                 vfpfcnvrt@fp 00BC                                   vfpfcnvrt@ll 00C4  
                           __size_of_TMR4_ISR 0038                        ?_OSCILLATOR_Initialize 0001  
                              __end_of_printf 3DBC                   __size_of_PWM8_LoadDutyValue 0034  
                            ?_CLC3_Initialize 0001                                __end_of_strlen 390C  
                              _TMR5_ReadTimer 3E08                           start_initialization 39F4  
              ??_TMR5_SetGateInterruptHandler 0016               __size_of_PIN_MANAGER_Initialize 00CA  
                                 __end_of_abs 38D2                                   __end_of_pad 3276  
                        __size_of_Default_ISR 0002                       ??_UART1_SetErrorHandler 0016  
                    __size_of_CCP3_Initialize 002E                         ??_UART1_RxDataHandler 0012  
                                 putch@txData 0015                                    ivt0x8_base 0008  
                               _uart1RxBuffer 0068                                   _actMotorPow 0086  
                               _uart1TxBuffer 0070                           __size_of_getReverse 0068  
                        __end_of_TMR4_10msISR 3F8C                                   vfprintf@fmt 00CE  
                                    ??___flge 002F                              ??_PMD_Initialize 0014  
                      __size_of_TMR5_GATE_ISR 0032                                  _oldDistRight 0090  
                    __size_of_CCP4_Initialize 002E                    __end_of_PWM7_LoadDutyValue 3AFA  
                           ??_SMT1_Initialize 0014                                      ??_printf 003B  
                                    ??_strlen 0016                        __end_of_TMR5_ReadTimer 3E2C  
                       CCP4_CaptureISR@module 000F                                     ___fladd@a 0037  
                                   ___fladd@b 0033                           calcMotorPow@addMPow 00C7  
                    _ADCC_GetSingleConversion 3B64                   PWM5_LoadDutyValue@dutyValue 0014  
                       TMR4_ISR@CountCallBack 003F                                     ___flmul@a 002B  
                                   ___flmul@b 0027                                   __pbssCOMRAM 003B  
                          _UART1_ErrorHandler 00EE                                 __pcstackBANK0 00A2  
                           __size_of_actSpeed 0094                              ___aodiv@dividend 0014  
                          _PWM6_LoadDutyValue 3A2A                      __size_of_TMR2_Initialize 001C  
                           __size_of___xxtofl 01B4                      _UART1_RxInterruptHandler 00F6  
                           ??_CCP3_CaptureISR 000B                  __end_of_CCP3_DefaultCallBack 3C2A  
                      __size_of_TMR4_CallBack 002E                                     _calcSpeed 2252  
                           __size_of_getCurve 0206                           ?_PWM6_LoadDutyValue 0014  
                 PWM8_LoadDutyValue@dutyValue 0014                  fp__UART1_DefaultErrorHandler 0000  
                                _currentSpeed 008A                  ?_UART1_SetRxInterruptHandler 0014  
                                   __pnvBANK0 00E2                            setMotor@motorPower 0018  
                      _PIN_MANAGER_Initialize 3026                                     _dtoa$3483 00AA  
                    __size_of_PWM5_Initialize 0018                      __size_of_TMR3_Initialize 0038  
                           ?_UART1_Initialize 0001          __end_of_UART1_SetFramingErrorHandler 3F4E  
       __size_of_UART1_SetFramingErrorHandler 000A                  _UART1_SetFramingErrorHandler 3F44  
                                    ?___aldiv 0014               ADCC_GetSingleConversion@channel 0018  
                                    ?___aodiv 0014                                      ?___fladd 0033  
                                    ?___aomod 0014                             __size_of_setMotor 00E0  
            __end_of_TMR4_SetInterruptHandler 3F6C                                      ?___awdiv 0014  
                            ___aodiv@quotient 0026             CCP3_DefaultCallBack@capturedValue 0009  
                           ??_CCP4_CaptureISR 000F                                      ?___flmul 0027  
                                    ?___fltol 00B7                            ??_UART1_Initialize 0016  
                                   _distLeftM 0098                                     _distFront 00A0  
                            _uart1RxLastError 0042                                 ??_UART1_Write 0014  
                                   _distRight 0096                          ??_PWM6_LoadDutyValue 0016  
                                   _cycle10ms 009D                             __size_of_vfprintf 0068  
                             ?_TMR5_ReadTimer 0001                                 ?_calcMotorPow 0001  
                                 __smallconst 1000                                      _CLC3GLS0 003C66  
                                    _CLC3GLS1 003C67                                      _CLC3GLS2 003C68  
                                    _CLC3GLS3 003C69                                     _driveMode 009F  
         fp__UART1_DefaultOverrunErrorHandler 0000      __end_of_UART1_DefaultOverrunErrorHandler 3F8E  
   __size_of_UART1_DefaultOverrunErrorHandler 0002            ??_UART1_DefaultOverrunErrorHandler 0012  
           ?_UART1_DefaultOverrunErrorHandler 0001              _UART1_DefaultOverrunErrorHandler 3F8C  
                                    _CLC3SEL0 003C62                                      _CLC3SEL1 003C63  
                                    _CLC3SEL2 003C64                                      _CLC3SEL3 003C65  
                             _SMT1_PR_ACQ_ISR 37C0                                 ?_calcSteering 0001  
                    __size_of_PWM6_Initialize 0018                      __size_of_TMR4_Initialize 002C  
                               _TMR5_GATE_ISR 3B98                                     _curveMode 009E  
                              __size_of_fputc 0096                                      _T2CLKCON 003FAE  
                              __size_of_fputs 0044                                   _U1ERRIRbits 003DF9  
                                    _T4CLKCON 003FA2                                __size_of_putch 000A  
                                  ?_calcSpeed 0001                          _INTERRUPT_Initialize 36E0  
                               ??_setSteering 001F                               ___aldiv@divisor 0018  
                             _SMT1_PW_ACQ_ISR 368C                               ___aldiv@counter 001C  
       UART1_SetErrorHandler@interruptHandler 0014                                      _IPR1bits 003981  
                __end_of_CCP4_DefaultCallBack 3C5A                             ??_CCP3_Initialize 0016  
                                    _IPR3bits 003983                                      _PIE1bits 003991  
                                    _PIE3bits 003993                                      _IPR7bits 003987  
                                    _IPR8bits 003988                                      _IPR9bits 003989  
                                    _PIE7bits 003997                                      _PIE8bits 003998  
                                    _PIE9bits 003999                                      _IVTBASEH 003FD6  
                                    _IVTBASEL 003FD5                                      _IVTBASEU 003FD7  
                                    i1u410_28 3318                                      i1u403_20 385E  
                                    i1u410_29 332C                                      i1u403_21 385A  
                                    i1u412_20 3CCA                                      i1u404_20 3882  
                                    i1u412_21 3CC6                                      i1u404_21 387E  
                                    i1u405_20 3296                                      i1u421_20 3926  
                                    i1u405_21 3292                                      i1u421_21 3922  
                                    i1u413_28 3CD0                                      i1u413_29 3CE2  
                                    i1u407_20 32CE                                      i1u406_28 32AC  
                                    i1u423_20 3962                                      i1u422_28 392C  
                                    i1u407_21 32CA                                      i1u406_29 32BE  
                                    i1u423_21 395E                                      i1u422_29 393E  
                                    i1u281_20 3D60                                      i1u409_20 3312  
                                    i1u408_28 32E4                                      i1u424_28 3968  
                                    i1u281_21 3D5C                                      i1u409_21 330E  
                                    i1u408_29 32F6                                      i1u424_29 397A  
                                    i1u427_20 39E0                                      i1u427_21 39DC  
               ??_UART1_SetRxInterruptHandler 0016                                      i2u414_40 3C08  
                                    i2u414_41 3C04                                      i2u415_40 3C38  
                                    i2u430_48 3B1A                                      i2u415_41 3C34  
                                    i2u430_49 3B2E                                      i2u431_48 3B4E  
                                    i2u431_49 3B62                                      i2u425_40 3BB0  
                                    i2u425_41 3BAC                                      _PIR1bits 0039A1  
                                    i2u282_40 3D76                                      i2u282_41 3D72  
                                    i2u426_48 3BB6                                      i2u426_49 3BC8  
                                    i2u428_40 37E4                                      i2u428_41 37E0  
                                    i2u429_40 36BA                                      i2u429_41 36B6  
                                    _PIR4bits 0039A4                                      _PIR6bits 0039A6  
                                    _PIR7bits 0039A7                                      _PIR8bits 0039A8  
                                    _PIR9bits 0039A9                                      _SMT1CON0 003F1E  
                                    _SMT1CON1 003F1F                      __size_of_PWM7_Initialize 0018  
                    __size_of_TMR5_Initialize 004A                                      _SMT1STAT 003F20  
                           _SMT1_Overflow_ISR 3DBC                                      _TMR4_ISR 39BC  
                  __end_of_UART1_Transmit_ISR 3892                                 _TMR4_CallBack 3CB6  
                                   _smtPeriod 0048                 ?_UART1_SetFramingErrorHandler 0014  
                               ??_TMR5_Reload 0003                   __size_of_PWM5_LoadDutyValue 0034  
                                   _vfpfcnvrt 1C60                            ?_SMT1_Overflow_ISR 0001  
                           _getBatteryVoltage 3EFE                                  ??_getReverse 0014  
                              ??_calcMotorPow 00C1                                    _ADCON0bits 003EF8  
                                  _ADCON1bits 003EF9                                    _ADCON2bits 003EFA  
                                  _ADCON3bits 003EFB                            ?_getBatteryVoltage 0001  
                           ??_CCP4_Initialize 0016                                ??_calcSteering 0025  
                         ??_SMT1_Overflow_ISR 0009                     TMR5_ReadTimer@readValHigh 0007  
                   __size_of_CCP3_SetCallBack 000A                                ?_TMR5_GATE_ISR 0001  
                         __end_of_UART1_Write 3630                      __size_of_PWM8_Initialize 0018  
                                _SMT1CON0bits 003F1E                                  _SMT1CON1bits 003F1F  
                         ??_getBatteryVoltage 0019                                   _INTCON0bits 003FD2  
                       ?_INTERRUPT_Initialize 0001                         __size_of_TMR4_10msISR 0006  
                        fp__UART1_Receive_ISR 0000                        _uart1TxBufferRemaining 004C  
                           ??_TMR2_Initialize 0014                                  _uart1RxCount 0043  
                          __end_of_getReverse 356C                                    _ADSTATbits 003EFC  
                                    __Hrparam 0000                     __end_of_SMT1_Overflow_ISR 3DE4  
                         __end_of_setSteering 2252                                    vfprintf@ap 00D0  
                                    __Lrparam 0000                                    vfprintf@fp 00CC  
                                 _oldDistLeft 0092                                ?_TMR4_CallBack 0001  
                              calcSpeed@speed 00C3                     __end_of_getBatteryVoltage 3F0E  
                     ??_OSCILLATOR_Initialize 0014                              __size_of___aldiv 010C  
                            __size_of___aodiv 0188                              __size_of___fladd 04C2  
                            __size_of___aomod 0164                              __size_of___awdiv 00C4  
                            __size_of___flmul 0450                              __size_of___fltol 0108  
                                _SMT1STATbits 003F20                          _CCP3_DefaultCallBack 3BFA  
                     __end_of_SMT1_PR_ACQ_ISR 380A                                    ?_vfpfcnvrt 00BC  
                             ___aodiv@divisor 001C                             ??_PWM5_Initialize 0014  
                           ??_TMR3_Initialize 0014                               ___aodiv@counter 0024  
                    _TMR4_SetInterruptHandler 3F62                                      _actSpeed 3470  
        __size_of_UART1_SetRxInterruptHandler 000A                                  _TMR4_10msISR 3F86  
                                    ___xxtofl 2428                      __size_of_ADCC_Initialize 005C  
                         __end_of_TMR5_Reload 3F1C                     __size_of_CCP4_SetCallBack 000A  
                                    __pivt0x8 0008                       __end_of_SMT1_PW_ACQ_ISR 36E0  
                                    _getCurve 1E6C                                      __ptext10 380A  
                                    __ptext11 33DA                                      __ptext20 2072  
                                    __ptext12 3F1C                                      __ptext21 30F0  
                                    __ptext13 35D4                                      __ptext30 3470  
                                    __ptext22 3A2A                                      __ptext14 3892  
                                    __ptext31 2C2E                                      __ptext23 3A5E  
                                    __ptext15 2764                                      __ptext40 3F3A  
                                    __ptext32 2428                                      __ptext24 2252  
                                    __ptext16 25DC                                      __ptext41 3F44  
                                    __ptext33 2D3A                                      __ptext25 1068  
                                    __ptext17 3EFE                                      __ptext50 3E86  
                                    __ptext42 3F4E                                      __ptext34 152A  
                                    __ptext26 28C8                                      __ptext18 3B64  
                                    __ptext51 3E9E                                      __ptext43 3776  
                                    __ptext35 2E42                                      __ptext27 2F46  
                                    __ptext19 29F8                                      __ptext60 3F6C  
                                    __ptext52 3EB6                                      __ptext44 3F58  
                                    __ptext36 372C                                      __ptext28 3A92  
                                    __ptext61 3C88                                      __ptext53 3ECE  
                                    __ptext45 3CE4                                      __ptext37 3336  
                                    __ptext29 3AC6                                      __ptext70 3F80  
                                    __ptext62 3F76                                      __ptext54 3DE4  
                                    __ptext46 3F62                                      __ptext38 3F26  
                                    __ptext71 3D3C                                      __ptext63 3630  
                                    __ptext55 3026                                      __ptext47 3982  
                                    __ptext39 3F30                                      __ptext80 3D68  
                                    __ptext72 39BC                                      __ptext64 390C  
                                    __ptext56 3EE6                                      __ptext48 3E6A  
                                    __ptext81 3E08                                      __ptext73 3CB6  
                                    __ptext65 384E                                      __ptext57 36E0  
                                    __ptext49 3BCA                                      __ptext82 37C0  
                                    __ptext74 3F86                                      __ptext66 3948  
                                    __ptext58 3D10                                      __ptext83 368C  
                                    __ptext75 3F90                                      __ptext67 3276  
                                    __ptext59 3C5A                                      __ptext84 3DBC  
                                    __ptext76 3F94                                      __ptext68 3F8C  
                                    __ptext85 3AFC                                      __ptext77 3B98  
                                    __ptext69 3F8E                                      __ptext86 3BFA  
                                    __ptext78 3E4C                                      __ptext87 3B30  
                                    __ptext79 3F0E                                      __ptext88 3C2A  
                                    __ptext89 0000                                      _distLeft 009A  
              __size_of_UART1_SetErrorHandler 000A                                   ??_calcSpeed 00C1  
               __end_of_UART1_SetErrorHandler 3F58                                    _T3GCONbits 003FA7  
                           ??_TMR4_Initialize 0016                             ??_PWM6_Initialize 0014  
                               __size_of_main 0020                                 __size_of_dtoa 02E6  
                                    _oldSpeed 0088                                    _T5GCONbits 003F9B  
                               __size_of_loop 0110                               _SMT1_Initialize 3BCA  
                                 _IVTLOCKbits 003FD4                                      _setMotor 2F46  
                                    _setSpeed 008C                      __size_of_TMR5_WriteTimer 002C  
                   _UART1_OverrunErrorHandler 00F0  UART1_SetOverrunErrorHandler@interruptHandler 0014  
                                    isa$xinst 000000            __size_of_UART1_DefaultErrorHandler 0006  
                  ??_ADCC_GetSingleConversion 0016                    ?_UART1_DefaultErrorHandler 0001  
                       ?_CCP3_DefaultCallBack 0009                                      _vfprintf 356C  
                                   printf@fmt 00D4                    __end_of_PWM8_LoadDutyValue 3AC6  
                             _CCP3_CaptureISR 3AFC                                   _UART1_Write 35D4  
                       fp__UART1_Transmit_ISR 0000                             ??_TMR5_Initialize 0016  
                           ??_PWM7_Initialize 0014           fp__TMR5_DefaultGateInterruptHandler 0000  
    __end_of_TMR5_DefaultGateInterruptHandler 3E6A     __size_of_TMR5_DefaultGateInterruptHandler 001E  
          ??_TMR5_DefaultGateInterruptHandler 0009             ?_TMR5_DefaultGateInterruptHandler 0001  
            _TMR5_DefaultGateInterruptHandler 3E4C                              ___aomod@dividend 0014  
                               ??_Default_ISR 0001                ??_UART1_SetFramingErrorHandler 0016  
                                _reverseCount 0041                               ??_TMR5_GATE_ISR 0009  
                 __end_of_UART1_RxDataHandler 3D68                                   _uart1RxHead 0045  
                        _CCP4_DefaultCallBack 3C2A                                   _uart1TxHead 0047  
                                 _uart1RxTail 0044                                   _uart1TxTail 0046  
                      ??_INTERRUPT_Initialize 0014                            _PWM7_LoadDutyValue 3AC6  
                                    intlevel1 0000                                      intlevel2 0000  
                    __size_of_CLC3_Initialize 002C                                   _setSteering 2072  
                             _CCP4_CaptureISR 3B30                       ?_PIN_MANAGER_Initialize 0001  
                           ??_PWM8_Initialize 0014                           ?_PWM7_LoadDutyValue 0014  
                        __end_of_calcMotorPow 29F8                               ??_TMR4_CallBack 0013  
                  __size_of_SMT1_Overflow_ISR 0028                          __end_of_calcSteering 2B1E  
                         _uart1RxStatusBuffer 0060                                      printf@ap 00DA  
                            ??_TMR5_ReadTimer 0003                    __size_of_getBatteryVoltage 0010  
UART1_SetFramingErrorHandler@interruptHandler 0014             __end_of_UART1_DefaultErrorHandler 3F86  
                             ___aomod@divisor 001C                                   ??_vfpfcnvrt 00C2  
                             ___aomod@counter 0024                              ?_SMT1_PR_ACQ_ISR 0001  
                                 _TMR5_Reload 3F0E                                    _SMT1SIGPPS 003AD2  
                                  _SMT1WINPPS 003AD1                          ??_PWM7_LoadDutyValue 0016  
                               actSpeed@speed 0024                         ?_CCP4_DefaultCallBack 000D  
                   calcMotorPow@oldSpeedDelta 00C5                              _CCP3_SetCallBack 3F76  
                   __size_of_UART1_Initialize 00A4                                  ___aldiv@sign 001D  
                            ?_SMT1_PW_ACQ_ISR 0001                               _CCP3_Initialize 3C88  
                 PWM6_LoadDutyValue@dutyValue 0014                             calcSteering@delta 0027  
                    _UART1_TxInterruptHandler 00F4                                 ___fladd@signs 00B3  
                         __end_of_Default_ISR 3F96                       __end_of_SMT1_Initialize 3BFA  
                                ___aodiv@sign 0025                __end_of_PIN_MANAGER_Initialize 30F0  
                           ??_ADCC_Initialize 0014                                  ___fladd@aexp 00B4  
                                ___fladd@bexp 00B5                  ?_UART1_SetTxInterruptHandler 0014  
                                ___aomod@sign 0025                       __end_of_CCP3_CaptureISR 3B30  
