

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Jan 21 15:34:28 2024

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F46K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1
    68                           	psect	text54,global,reloc=2,class=CODE,delta=1
    69                           	psect	text55,global,reloc=2,class=CODE,delta=1
    70                           	psect	text56,global,reloc=2,class=CODE,delta=1
    71                           	psect	text57,global,reloc=2,class=CODE,delta=1
    72                           	psect	text58,global,reloc=2,class=CODE,delta=1
    73                           	psect	text59,global,reloc=2,class=CODE,delta=1
    74                           	psect	text60,global,reloc=2,class=CODE,delta=1
    75                           	psect	text61,global,reloc=2,class=CODE,delta=1
    76                           	psect	text62,global,reloc=2,class=CODE,delta=1
    77                           	psect	text63,global,reloc=2,class=CODE,delta=1
    78                           	psect	text64,global,reloc=4,class=CODE,delta=1
    79                           	psect	text65,global,reloc=2,class=CODE,delta=1
    80                           	psect	text66,global,reloc=4,class=CODE,delta=1
    81                           	psect	text67,global,reloc=2,class=CODE,delta=1
    82                           	psect	text68,global,reloc=2,class=CODE,delta=1
    83                           	psect	text69,global,reloc=2,class=CODE,delta=1
    84                           	psect	text70,global,reloc=2,class=CODE,delta=1
    85                           	psect	text71,global,reloc=2,class=CODE,delta=1
    86                           	psect	text72,global,reloc=4,class=CODE,delta=1
    87                           	psect	text73,global,reloc=2,class=CODE,delta=1
    88                           	psect	text74,global,reloc=2,class=CODE,delta=1
    89                           	psect	text75,global,reloc=2,class=CODE,delta=1
    90                           	psect	text76,global,reloc=4,class=CODE,delta=1
    91                           	psect	text77,global,reloc=4,class=CODE,delta=1
    92                           	psect	text78,global,reloc=2,class=CODE,delta=1
    93                           	psect	text79,global,reloc=2,class=CODE,delta=1
    94                           	psect	text80,global,reloc=2,class=CODE,delta=1
    95                           	psect	text81,global,reloc=2,class=CODE,delta=1
    96                           	psect	text82,global,reloc=4,class=CODE,delta=1
    97                           	psect	text83,global,reloc=4,class=CODE,delta=1
    98                           	psect	text84,global,reloc=4,class=CODE,delta=1
    99                           	psect	text85,global,reloc=4,class=CODE,delta=1
   100                           	psect	text86,global,reloc=2,class=CODE,delta=1
   101                           	psect	text87,global,reloc=4,class=CODE,delta=1
   102                           	psect	text88,global,reloc=2,class=CODE,delta=1
   103                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   104                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   105                           	psect	text89,global,reloc=2,class=CODE,delta=1
   106                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   107                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   108                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   109  0000                     
   110                           ; Version 2.20
   111                           ; Generated 05/05/2020 GMT
   112                           ; 
   113                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   114                           ; All rights reserved.
   115                           ; 
   116                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   117                           ; 
   118                           ; Redistribution and use in source and binary forms, with or without modification, are
   119                           ; permitted provided that the following conditions are met:
   120                           ; 
   121                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   122                           ;        conditions and the following disclaimer.
   123                           ; 
   124                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   125                           ;        of conditions and the following disclaimer in the documentation and/or other
   126                           ;        materials provided with the distribution.
   127                           ; 
   128                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   129                           ;        software without specific prior written permission.
   130                           ; 
   131                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   132                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   133                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   134                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   135                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   136                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   137                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   138                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   139                           ; 
   140                           ; 
   141                           ; Code-generator required, PIC18F46K42 Definitions
   142                           ; 
   143                           ; SFR Addresses
   144  0000                     
   145                           	psect	nvCOMRAM
   146  00004C                     __pnvCOMRAM:
   147                           	callstack 0
   148  00004C                     _uart1TxBufferRemaining:
   149                           	callstack 0
   150  00004C                     	ds	1
   151                           
   152                           	psect	nvBANK0
   153  0000E2                     __pnvBANK0:
   154                           	callstack 0
   155  0000E2                     _CCP4_CallBack:
   156                           	callstack 0
   157  0000E2                     	ds	2
   158  0000E4                     _CCP3_CallBack:
   159                           	callstack 0
   160  0000E4                     	ds	2
   161  0000E6                     _TMR4_InterruptHandler:
   162                           	callstack 0
   163  0000E6                     	ds	2
   164  0000E8                     _timer3ReloadVal:
   165                           	callstack 0
   166  0000E8                     	ds	2
   167  0000EA                     _TMR5_GateInterruptHandler:
   168                           	callstack 0
   169  0000EA                     	ds	2
   170  0000EC                     _timer5ReloadVal:
   171                           	callstack 0
   172  0000EC                     	ds	2
   173  0000EE                     _UART1_ErrorHandler:
   174                           	callstack 0
   175  0000EE                     	ds	2
   176  0000F0                     _UART1_OverrunErrorHandler:
   177                           	callstack 0
   178  0000F0                     	ds	2
   179  0000F2                     _UART1_FramingErrorHandler:
   180                           	callstack 0
   181  0000F2                     	ds	2
   182  0000F4                     _UART1_TxInterruptHandler:
   183                           	callstack 0
   184  0000F4                     	ds	2
   185  0000F6                     _UART1_RxInterruptHandler:
   186                           	callstack 0
   187  0000F6                     	ds	2
   188  0000                     _PIE10bits	set	14746
   189  0000                     _PIR10bits	set	14762
   190  0000                     _PIE9bits	set	14745
   191  0000                     _PIR9bits	set	14761
   192  0000                     _PIR4bits	set	14756
   193  0000                     _PIR1bits	set	14753
   194  0000                     _PIE1bits	set	14737
   195  0000                     _PIE7bits	set	14743
   196  0000                     _PIR7bits	set	14759
   197  0000                     _PIR6bits	set	14758
   198  0000                     _PIE8bits	set	14744
   199  0000                     _PIR8bits	set	14760
   200  0000                     _IPR9bits	set	14729
   201  0000                     _IPR7bits	set	14727
   202  0000                     _IPR10bits	set	14730
   203  0000                     _IPR8bits	set	14728
   204  0000                     _IPR1bits	set	14721
   205  0000                     _IPR3bits	set	14723
   206  0000                     _PIE3bits	set	14739
   207  0000                     _PMD7	set	14791
   208  0000                     _PMD6	set	14790
   209  0000                     _PMD5	set	14789
   210  0000                     _PMD4	set	14788
   211  0000                     _PMD3	set	14787
   212  0000                     _PMD2	set	14786
   213  0000                     _PMD1	set	14785
   214  0000                     _PMD0	set	14784
   215  0000                     _OSCTUNE	set	14814
   216  0000                     _OSCFRQ	set	14815
   217  0000                     _OSCEN	set	14813
   218  0000                     _OSCCON3	set	14811
   219  0000                     _OSCCON1	set	14809
   220  0000                     _CCP4PPS	set	15056
   221  0000                     _SMT1SIGPPS	set	15058
   222  0000                     _CLCIN2PPS	set	15067
   223  0000                     _RB3PPS	set	14859
   224  0000                     _RA3PPS	set	14851
   225  0000                     _SMT1WINPPS	set	15057
   226  0000                     _CLCIN0PPS	set	15065
   227  0000                     _RA4PPS	set	14852
   228  0000                     _T5GPPS	set	15049
   229  0000                     _RA0PPS	set	14848
   230  0000                     _U1RXPPS	set	15077
   231  0000                     _RA1PPS	set	14849
   232  0000                     _CLCIN3PPS	set	15068
   233  0000                     _CCP3PPS	set	15055
   234  0000                     _INLVLE	set	14980
   235  0000                     _INLVLD	set	14964
   236  0000                     _INLVLC	set	14948
   237  0000                     _INLVLB	set	14932
   238  0000                     _INLVLA	set	14916
   239  0000                     _SLRCONE	set	14979
   240  0000                     _SLRCOND	set	14963
   241  0000                     _SLRCONC	set	14947
   242  0000                     _SLRCONB	set	14931
   243  0000                     _SLRCONA	set	14915
   244  0000                     _ODCOND	set	14962
   245  0000                     _ODCONC	set	14946
   246  0000                     _ODCONB	set	14930
   247  0000                     _ODCONA	set	14914
   248  0000                     _ODCONE	set	14978
   249  0000                     _RD1I2C	set	14971
   250  0000                     _RD0I2C	set	14970
   251  0000                     _RC4I2C	set	14955
   252  0000                     _RC3I2C	set	14954
   253  0000                     _RB2I2C	set	14939
   254  0000                     _RB1I2C	set	14938
   255  0000                     _WPUC	set	14945
   256  0000                     _WPUA	set	14913
   257  0000                     _WPUB	set	14929
   258  0000                     _WPUE	set	14977
   259  0000                     _WPUD	set	14961
   260  0000                     _ANSELA	set	14912
   261  0000                     _ANSELE	set	14976
   262  0000                     _ANSELB	set	14928
   263  0000                     _ANSELC	set	14944
   264  0000                     _ANSELD	set	14960
   265  0000                     _CLC3CON	set	15456
   266  0000                     _CLC3GLS3	set	15465
   267  0000                     _CLC3GLS2	set	15464
   268  0000                     _CLC3GLS1	set	15463
   269  0000                     _CLC3GLS0	set	15462
   270  0000                     _CLC3SEL3	set	15461
   271  0000                     _CLC3SEL2	set	15460
   272  0000                     _CLC3SEL1	set	15459
   273  0000                     _CLC3SEL0	set	15458
   274  0000                     _CLC3POL	set	15457
   275  0000                     _CLC3CONbits	set	15456
   276  0000                     _U1RXB	set	15848
   277  0000                     _U1TXB	set	15850
   278  0000                     _U1ERRIRbits	set	15865
   279  0000                     _U1ERRIE	set	15866
   280  0000                     _U1ERRIR	set	15865
   281  0000                     _U1UIR	set	15864
   282  0000                     _U1FIFO	set	15863
   283  0000                     _U1BRGH	set	15862
   284  0000                     _U1BRGL	set	15861
   285  0000                     _U1CON2	set	15860
   286  0000                     _U1CON1	set	15859
   287  0000                     _U1CON0	set	15858
   288  0000                     _U1P3H	set	15857
   289  0000                     _U1P3L	set	15856
   290  0000                     _U1P2H	set	15855
   291  0000                     _U1P2L	set	15854
   292  0000                     _U1P1H	set	15853
   293  0000                     _U1P1L	set	15852
   294  0000                     _ADCON1bits	set	16121
   295  0000                     _ADERRL	set	16098
   296  0000                     _ADERRH	set	16099
   297  0000                     _ADPREVL	set	16109
   298  0000                     _ADPREVH	set	16110
   299  0000                     _ADFLTRL	set	16102
   300  0000                     _ADFLTRH	set	16103
   301  0000                     _ADSTATbits	set	16124
   302  0000                     _ADACCL	set	16104
   303  0000                     _ADACCH	set	16105
   304  0000                     _ADCON2bits	set	16122
   305  0000                     _ADCNT	set	16107
   306  0000                     _ADCON3bits	set	16123
   307  0000                     _ADRESL	set	16111
   308  0000                     _ADRESH	set	16112
   309  0000                     _ADCON0bits	set	16120
   310  0000                     _ADCON0	set	16120
   311  0000                     _ADCLK	set	16127
   312  0000                     _ADACT	set	16126
   313  0000                     _ADREF	set	16125
   314  0000                     _ADSTAT	set	16124
   315  0000                     _ADCON3	set	16123
   316  0000                     _ADCON2	set	16122
   317  0000                     _ADCON1	set	16121
   318  0000                     _ADPREH	set	16119
   319  0000                     _ADPREL	set	16118
   320  0000                     _ADCAP	set	16117
   321  0000                     _ADACQH	set	16116
   322  0000                     _ADACQL	set	16115
   323  0000                     _ADPCH	set	16113
   324  0000                     _ADRPT	set	16108
   325  0000                     _ADACCU	set	16106
   326  0000                     _ADSTPTH	set	16101
   327  0000                     _ADSTPTL	set	16100
   328  0000                     _ADUTHH	set	16097
   329  0000                     _ADUTHL	set	16096
   330  0000                     _ADLTHH	set	16095
   331  0000                     _ADLTHL	set	16094
   332  0000                     _SMT1TMR	set	16146
   333  0000                     _SMT1CPR	set	16149
   334  0000                     _SMT1CPW	set	16152
   335  0000                     _SMT1PR	set	16155
   336  0000                     _CCPTMRS0bits	set	16222
   337  0000                     _SMT1STATbits	set	16160
   338  0000                     _SMT1CON0bits	set	16158
   339  0000                     _SMT1CON1bits	set	16159
   340  0000                     _SMT1PRL	set	16155
   341  0000                     _SMT1PRH	set	16156
   342  0000                     _SMT1PRU	set	16157
   343  0000                     _SMT1SIG	set	16162
   344  0000                     _SMT1WIN	set	16163
   345  0000                     _SMT1CLK	set	16161
   346  0000                     _SMT1STAT	set	16160
   347  0000                     _SMT1CON1	set	16159
   348  0000                     _SMT1CON0	set	16158
   349  0000                     _CCPTMRS1bits	set	16223
   350  0000                     _PORTBbits	set	16331
   351  0000                     _CCPR4L	set	16240
   352  0000                     _CCPR4H	set	16241
   353  0000                     _CCP4CAP	set	16243
   354  0000                     _CCP4CON	set	16242
   355  0000                     _CCPR3L	set	16244
   356  0000                     _CCPR3H	set	16245
   357  0000                     _CCP3CAP	set	16247
   358  0000                     _CCP3CON	set	16246
   359  0000                     _PORTDbits	set	16333
   360  0000                     _PR2	set	16299
   361  0000                     _TMR2	set	16298
   362  0000                     _T2CONbits	set	16300
   363  0000                     _T2RSTbits	set	16303
   364  0000                     _T2HLTbits	set	16301
   365  0000                     _T2CON	set	16300
   366  0000                     _T2TMR	set	16298
   367  0000                     _T2PR	set	16299
   368  0000                     _T2RST	set	16303
   369  0000                     _T2HLT	set	16301
   370  0000                     _T2CLKCON	set	16302
   371  0000                     _PWM6DCL	set	16232
   372  0000                     _PWM6DCH	set	16233
   373  0000                     _PWM6CON	set	16234
   374  0000                     _PWM5DCL	set	16236
   375  0000                     _PWM5DCH	set	16237
   376  0000                     _PWM5CON	set	16238
   377  0000                     _PWM8DCL	set	16224
   378  0000                     _PWM8DCH	set	16225
   379  0000                     _PWM8CON	set	16226
   380  0000                     _PWM7DCL	set	16228
   381  0000                     _PWM7DCH	set	16229
   382  0000                     _PWM7CON	set	16230
   383  0000                     _PR4	set	16287
   384  0000                     _TMR4	set	16286
   385  0000                     _T4CONbits	set	16288
   386  0000                     _T4RSTbits	set	16291
   387  0000                     _T4HLTbits	set	16289
   388  0000                     _T4CON	set	16288
   389  0000                     _T4TMR	set	16286
   390  0000                     _T4PR	set	16287
   391  0000                     _T4RST	set	16291
   392  0000                     _T4HLT	set	16289
   393  0000                     _T4CLKCON	set	16290
   394  0000                     _T3GCONbits	set	16295
   395  0000                     _T3CONbits	set	16294
   396  0000                     _T3CON	set	16294
   397  0000                     _TMR3L	set	16292
   398  0000                     _TMR3H	set	16293
   399  0000                     _T3CLK	set	16297
   400  0000                     _T3GATE	set	16296
   401  0000                     _T3GCON	set	16295
   402  0000                     _T5GCONbits	set	16283
   403  0000                     _T5CONbits	set	16282
   404  0000                     _T5CON	set	16282
   405  0000                     _TMR5L	set	16280
   406  0000                     _TMR5H	set	16281
   407  0000                     _T5CLK	set	16285
   408  0000                     _T5GATE	set	16284
   409  0000                     _T5GCON	set	16283
   410  0000                     _IVTBASEL	set	16341
   411  0000                     _IVTBASEH	set	16342
   412  0000                     _IVTBASEU	set	16343
   413  0000                     _IVTLOCKbits	set	16340
   414  0000                     _IVTLOCK	set	16340
   415  0000                     _INTCON0bits	set	16338
   416  0000                     _TRISD	set	16325
   417  0000                     _TRISC	set	16324
   418  0000                     _TRISB	set	16323
   419  0000                     _TRISA	set	16322
   420  0000                     _TRISE	set	16326
   421  0000                     _LATC	set	16316
   422  0000                     _LATB	set	16315
   423  0000                     _LATA	set	16314
   424  0000                     _LATD	set	16317
   425  0000                     _LATE	set	16318
   426  0000                     _GIE	set	130711
   427                           
   428                           	psect	smallconst
   429  001000                     __psmallconst:
   430                           	callstack 0
   431  001000  00                 	db	0
   432  001001                     STR_2:
   433  001001  4F                 	db	79	;'O'
   434  001002  75                 	db	117	;'u'
   435  001003  74                 	db	116	;'t'
   436  001004  20                 	db	32
   437  001005  7C                 	db	124
   438  001006  20                 	db	32
   439  001007  64                 	db	100	;'d'
   440  001008  4C                 	db	76	;'L'
   441  001009  3D                 	db	61	;'='
   442  00100A  20                 	db	32
   443  00100B  25                 	db	37
   444  00100C  64                 	db	100	;'d'
   445  00100D  20                 	db	32
   446  00100E  7C                 	db	124
   447  00100F  20                 	db	32
   448  001010  64                 	db	100	;'d'
   449  001011  52                 	db	82	;'R'
   450  001012  3D                 	db	61	;'='
   451  001013  20                 	db	32
   452  001014  25                 	db	37
   453  001015  64                 	db	100	;'d'
   454  001016  00                 	db	0
   455  001017                     STR_4:
   456  001017  20                 	db	32
   457  001018  20                 	db	32
   458  001019  20                 	db	32
   459  00101A  43                 	db	67	;'C'
   460  00101B  75                 	db	117	;'u'
   461  00101C  72                 	db	114	;'r'
   462  00101D  76                 	db	118	;'v'
   463  00101E  65                 	db	101	;'e'
   464  00101F  52                 	db	82	;'R'
   465  001020  69                 	db	105	;'i'
   466  001021  67                 	db	103	;'g'
   467  001022  68                 	db	104	;'h'
   468  001023  74                 	db	116	;'t'
   469  001024  00                 	db	0
   470  001025                     STR_3:
   471  001025  20                 	db	32
   472  001026  20                 	db	32
   473  001027  20                 	db	32
   474  001028  43                 	db	67	;'C'
   475  001029  75                 	db	117	;'u'
   476  00102A  72                 	db	114	;'r'
   477  00102B  76                 	db	118	;'v'
   478  00102C  65                 	db	101	;'e'
   479  00102D  4C                 	db	76	;'L'
   480  00102E  65                 	db	101	;'e'
   481  00102F  66                 	db	102	;'f'
   482  001030  74                 	db	116	;'t'
   483  001031  00                 	db	0
   484  001032                     STR_9:
   485  001032  41                 	db	65	;'A'
   486  001033  66                 	db	102	;'f'
   487  001034  74                 	db	116	;'t'
   488  001035  65                 	db	101	;'e'
   489  001036  72                 	db	114	;'r'
   490  001037  43                 	db	67	;'C'
   491  001038  75                 	db	117	;'u'
   492  001039  72                 	db	114	;'r'
   493  00103A  76                 	db	118	;'v'
   494  00103B  65                 	db	101	;'e'
   495  00103C  0A                 	db	10
   496  00103D  00                 	db	0
   497  00103E                     STR_1:
   498  00103E  42                 	db	66	;'B'
   499  00103F  56                 	db	86	;'V'
   500  001040  6F                 	db	111	;'o'
   501  001041  6C                 	db	108	;'l'
   502  001042  74                 	db	116	;'t'
   503  001043  3A                 	db	58	;':'
   504  001044  20                 	db	32
   505  001045  25                 	db	37
   506  001046  64                 	db	100	;'d'
   507  001047  0A                 	db	10
   508  001048  00                 	db	0
   509  001049                     STR_7:
   510  001049  64                 	db	100	;'d'
   511  00104A  69                 	db	105	;'i'
   512  00104B  73                 	db	115	;'s'
   513  00104C  74                 	db	116	;'t'
   514  00104D  4C                 	db	76	;'L'
   515  00104E  3D                 	db	61	;'='
   516  00104F  20                 	db	32
   517  001050  25                 	db	37
   518  001051  64                 	db	100	;'d'
   519  001052  0A                 	db	10
   520  001053  00                 	db	0
   521  001054                     STR_8:
   522  001054  64                 	db	100	;'d'
   523  001055  69                 	db	105	;'i'
   524  001056  73                 	db	115	;'s'
   525  001057  74                 	db	116	;'t'
   526  001058  52                 	db	82	;'R'
   527  001059  3D                 	db	61	;'='
   528  00105A  20                 	db	32
   529  00105B  25                 	db	37
   530  00105C  64                 	db	100	;'d'
   531  00105D  0A                 	db	10
   532  00105E  00                 	db	0
   533  00105F                     STR_10:
   534  00105F  4F                 	db	79	;'O'
   535  001060  75                 	db	117	;'u'
   536  001061  74                 	db	116	;'t'
   537  001062  43                 	db	67	;'C'
   538  001063  75                 	db	117	;'u'
   539  001064  72                 	db	114	;'r'
   540  001065  76                 	db	118	;'v'
   541  001066  65                 	db	101	;'e'
   542  001067  0A                 	db	10
   543  001068  00                 	db	0
   544  001069                     STR_6:
   545  001069  49                 	db	73	;'I'
   546  00106A  6E                 	db	110	;'n'
   547  00106B  43                 	db	67	;'C'
   548  00106C  75                 	db	117	;'u'
   549  00106D  72                 	db	114	;'r'
   550  00106E  76                 	db	118	;'v'
   551  00106F  65                 	db	101	;'e'
   552  001070  0A                 	db	10
   553  001071  00                 	db	0
   554  001072  00                 	db	0	; dummy byte at the end
   555  0000                     
   556                           ; #config settings
   557                           
   558                           	psect	cinit
   559  003A00                     __pcinit:
   560                           	callstack 0
   561  003A00                     start_initialization:
   562                           	callstack 0
   563  003A00                     __initialization:
   564                           	callstack 0
   565                           
   566                           ; Clear objects allocated to BANK1 (32 bytes)
   567  003A00  EE00  F100         	lfsr	0,__pbssBANK1
   568  003A04  0E20               	movlw	32
   569  003A06                     clear_0:
   570  003A06  6AEE               	clrf	postinc0,c
   571  003A08  06E8               	decf	wreg,f,c
   572  003A0A  E1FD               	bnz	clear_0
   573                           
   574                           ; Clear objects allocated to BANK0 (66 bytes)
   575  003A0C  EE00  F060         	lfsr	0,__pbssBANK0
   576  003A10  0E42               	movlw	66
   577  003A12                     clear_1:
   578  003A12  6AEE               	clrf	postinc0,c
   579  003A14  06E8               	decf	wreg,f,c
   580  003A16  E1FD               	bnz	clear_1
   581                           
   582                           ; Clear objects allocated to COMRAM (17 bytes)
   583  003A18  EE00  F03B         	lfsr	0,__pbssCOMRAM
   584  003A1C  0E11               	movlw	17
   585  003A1E                     clear_2:
   586  003A1E  6AEE               	clrf	postinc0,c
   587  003A20  06E8               	decf	wreg,f,c
   588  003A22  E1FD               	bnz	clear_2
   589                           
   590                           ;
   591                           ; Setup IVTBASE
   592                           ;
   593  003A24  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   594  003A26  6ED5               	movwf	213,c
   595  003A28  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   596  003A2A  6ED6               	movwf	214,c
   597  003A2C  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   598  003A2E  6ED7               	movwf	215,c
   599  003A30                     end_of_initialization:
   600                           	callstack 0
   601  003A30                     __end_of__initialization:
   602                           	callstack 0
   603  003A30  0100               	movlb	0
   604  003A32  EF3E  F01F         	goto	_main	;jump to C main() function
   605                           
   606                           	psect	bssCOMRAM
   607  00003B                     __pbssCOMRAM:
   608                           	callstack 0
   609  00003B                     _prec:
   610                           	callstack 0
   611  00003B                     	ds	2
   612  00003D                     _flags:
   613                           	callstack 0
   614  00003D                     	ds	2
   615  00003F                     TMR4_ISR@CountCallBack:
   616                           	callstack 0
   617  00003F                     	ds	2
   618  000041                     _reverseCount:
   619                           	callstack 0
   620  000041                     	ds	1
   621  000042                     _uart1RxLastError:
   622                           	callstack 0
   623  000042                     	ds	1
   624  000043                     _uart1RxCount:
   625                           	callstack 0
   626  000043                     	ds	1
   627  000044                     _uart1RxTail:
   628                           	callstack 0
   629  000044                     	ds	1
   630  000045                     _uart1RxHead:
   631                           	callstack 0
   632  000045                     	ds	1
   633  000046                     _uart1TxTail:
   634                           	callstack 0
   635  000046                     	ds	1
   636  000047                     _uart1TxHead:
   637                           	callstack 0
   638  000047                     	ds	1
   639  000048                     _smtPeriod:
   640                           	callstack 0
   641  000048                     	ds	4
   642                           
   643                           	psect	bssBANK0
   644  000060                     __pbssBANK0:
   645                           	callstack 0
   646  000060                     _uart1RxStatusBuffer:
   647                           	callstack 0
   648  000060                     	ds	8
   649  000068                     _uart1RxBuffer:
   650                           	callstack 0
   651  000068                     	ds	8
   652  000070                     _uart1TxBuffer:
   653                           	callstack 0
   654  000070                     	ds	8
   655  000078                     _smtWay:
   656                           	callstack 0
   657  000078                     	ds	4
   658  00007C                     _smtDuty:
   659                           	callstack 0
   660  00007C                     	ds	4
   661  000080                     _nout:
   662                           	callstack 0
   663  000080                     	ds	2
   664  000082                     _width:
   665                           	callstack 0
   666  000082                     	ds	2
   667  000084                     _BatteryVolt:
   668                           	callstack 0
   669  000084                     	ds	2
   670  000086                     _actMotorPow:
   671                           	callstack 0
   672  000086                     	ds	2
   673  000088                     _oldSpeed:
   674                           	callstack 0
   675  000088                     	ds	2
   676  00008A                     _currentSpeed:
   677                           	callstack 0
   678  00008A                     	ds	2
   679  00008C                     _setSpeed:
   680                           	callstack 0
   681  00008C                     	ds	2
   682  00008E                     _motPow:
   683                           	callstack 0
   684  00008E                     	ds	2
   685  000090                     _oldDistRight:
   686                           	callstack 0
   687  000090                     	ds	2
   688  000092                     _oldDistLeft:
   689                           	callstack 0
   690  000092                     	ds	2
   691  000094                     _distRightM:
   692                           	callstack 0
   693  000094                     	ds	2
   694  000096                     _distRight:
   695                           	callstack 0
   696  000096                     	ds	2
   697  000098                     _distLeftM:
   698                           	callstack 0
   699  000098                     	ds	2
   700  00009A                     _distLeft:
   701                           	callstack 0
   702  00009A                     	ds	2
   703  00009C                     _delay:
   704                           	callstack 0
   705  00009C                     	ds	1
   706  00009D                     _cycle10ms:
   707                           	callstack 0
   708  00009D                     	ds	1
   709  00009E                     _curveMode:
   710                           	callstack 0
   711  00009E                     	ds	1
   712  00009F                     _driveMode:
   713                           	callstack 0
   714  00009F                     	ds	1
   715  0000A0                     _distFront:
   716                           	callstack 0
   717  0000A0                     	ds	2
   718                           
   719                           	psect	bssBANK1
   720  000100                     __pbssBANK1:
   721                           	callstack 0
   722  000100                     _dbuf:
   723                           	callstack 0
   724  000100                     	ds	32
   725                           
   726                           	psect	cstackBANK0
   727  0000A2                     __pcstackBANK0:
   728                           	callstack 0
   729  0000A2                     ??_dtoa:
   730  0000A2                     ___flmul@sign:
   731                           	callstack 0
   732                           
   733                           ; 1 bytes @ 0x0
   734  0000A2                     	ds	1
   735  0000A3                     ___flmul@aexp:
   736                           	callstack 0
   737                           
   738                           ; 1 bytes @ 0x1
   739  0000A3                     	ds	1
   740  0000A4                     ___flmul@grs:
   741                           	callstack 0
   742                           
   743                           ; 4 bytes @ 0x2
   744  0000A4                     	ds	4
   745  0000A8                     ___flmul@bexp:
   746                           	callstack 0
   747                           
   748                           ; 1 bytes @ 0x6
   749  0000A8                     	ds	1
   750  0000A9                     ___flmul@prod:
   751                           	callstack 0
   752                           
   753                           ; 4 bytes @ 0x7
   754  0000A9                     	ds	1
   755  0000AA                     _dtoa$3484:
   756                           	callstack 0
   757                           
   758                           ; 2 bytes @ 0x8
   759  0000AA                     	ds	2
   760  0000AC                     dtoa@p:
   761                           	callstack 0
   762                           
   763                           ; 2 bytes @ 0xA
   764  0000AC                     	ds	1
   765  0000AD                     ___flmul@temp:
   766                           	callstack 0
   767                           
   768                           ; 2 bytes @ 0xB
   769  0000AD                     	ds	1
   770  0000AE                     dtoa@w:
   771                           	callstack 0
   772                           
   773                           ; 2 bytes @ 0xC
   774  0000AE                     	ds	1
   775  0000AF                     ??___fladd:
   776                           
   777                           ; 1 bytes @ 0xD
   778  0000AF                     	ds	1
   779  0000B0                     dtoa@s:
   780                           	callstack 0
   781                           
   782                           ; 2 bytes @ 0xE
   783  0000B0                     	ds	2
   784  0000B2                     dtoa@n:
   785                           	callstack 0
   786                           
   787                           ; 8 bytes @ 0x10
   788  0000B2                     	ds	1
   789  0000B3                     ___fladd@signs:
   790                           	callstack 0
   791                           
   792                           ; 1 bytes @ 0x11
   793  0000B3                     	ds	1
   794  0000B4                     ___fladd@aexp:
   795                           	callstack 0
   796                           
   797                           ; 1 bytes @ 0x12
   798  0000B4                     	ds	1
   799  0000B5                     ___fladd@bexp:
   800                           	callstack 0
   801                           
   802                           ; 1 bytes @ 0x13
   803  0000B5                     	ds	1
   804  0000B6                     ___fladd@grs:
   805                           	callstack 0
   806                           
   807                           ; 1 bytes @ 0x14
   808  0000B6                     	ds	1
   809  0000B7                     ?___fltol:
   810                           	callstack 0
   811  0000B7                     ___fltol@f1:
   812                           	callstack 0
   813                           
   814                           ; 4 bytes @ 0x15
   815  0000B7                     	ds	3
   816  0000BA                     dtoa@i:
   817                           	callstack 0
   818                           
   819                           ; 2 bytes @ 0x18
   820  0000BA                     	ds	1
   821  0000BB                     ??___fltol:
   822                           
   823                           ; 1 bytes @ 0x19
   824  0000BB                     	ds	1
   825  0000BC                     ?_vfpfcnvrt:
   826                           	callstack 0
   827  0000BC                     vfpfcnvrt@fp:
   828                           	callstack 0
   829                           
   830                           ; 2 bytes @ 0x1A
   831  0000BC                     	ds	2
   832  0000BE                     vfpfcnvrt@fmt:
   833                           	callstack 0
   834                           
   835                           ; 2 bytes @ 0x1C
   836  0000BE                     	ds	1
   837  0000BF                     ___fltol@sign1:
   838                           	callstack 0
   839                           
   840                           ; 1 bytes @ 0x1D
   841  0000BF                     	ds	1
   842  0000C0                     ___fltol@exp1:
   843                           	callstack 0
   844  0000C0                     vfpfcnvrt@ap:
   845                           	callstack 0
   846                           
   847                           ; 2 bytes @ 0x1E
   848  0000C0                     	ds	1
   849  0000C1                     ??_calcMotorPow:
   850  0000C1                     ??_calcSpeed:
   851                           
   852                           ; 1 bytes @ 0x1F
   853  0000C1                     	ds	1
   854  0000C2                     ??_vfpfcnvrt:
   855                           
   856                           ; 1 bytes @ 0x20
   857  0000C2                     	ds	1
   858  0000C3                     calcSpeed@speed:
   859                           	callstack 0
   860  0000C3                     calcMotorPow@setSpeedDelta:
   861                           	callstack 0
   862                           
   863                           ; 2 bytes @ 0x21
   864  0000C3                     	ds	1
   865  0000C4                     vfpfcnvrt@ll:
   866                           	callstack 0
   867                           
   868                           ; 8 bytes @ 0x22
   869  0000C4                     	ds	1
   870  0000C5                     calcMotorPow@oldSpeedDelta:
   871                           	callstack 0
   872                           
   873                           ; 2 bytes @ 0x23
   874  0000C5                     	ds	2
   875  0000C7                     calcMotorPow@addMPow:
   876                           	callstack 0
   877                           
   878                           ; 1 bytes @ 0x25
   879  0000C7                     	ds	5
   880  0000CC                     ?_vfprintf:
   881                           	callstack 0
   882  0000CC                     vfprintf@fp:
   883                           	callstack 0
   884                           
   885                           ; 2 bytes @ 0x2A
   886  0000CC                     	ds	2
   887  0000CE                     vfprintf@fmt:
   888                           	callstack 0
   889                           
   890                           ; 2 bytes @ 0x2C
   891  0000CE                     	ds	2
   892  0000D0                     vfprintf@ap:
   893                           	callstack 0
   894                           
   895                           ; 2 bytes @ 0x2E
   896  0000D0                     	ds	2
   897  0000D2                     vfprintf@cfmt:
   898                           	callstack 0
   899                           
   900                           ; 2 bytes @ 0x30
   901  0000D2                     	ds	2
   902  0000D4                     ?_printf:
   903                           	callstack 0
   904  0000D4                     printf@fmt:
   905                           	callstack 0
   906                           
   907                           ; 2 bytes @ 0x32
   908  0000D4                     	ds	6
   909  0000DA                     printf@ap:
   910                           	callstack 0
   911                           
   912                           ; 2 bytes @ 0x38
   913  0000DA                     	ds	2
   914  0000DC                     ??_getCurve:
   915                           
   916                           ; 1 bytes @ 0x3A
   917  0000DC                     	ds	2
   918  0000DE                     getCurve@deltaLeft:
   919                           	callstack 0
   920                           
   921                           ; 2 bytes @ 0x3C
   922  0000DE                     	ds	2
   923  0000E0                     getCurve@deltaRight:
   924                           	callstack 0
   925                           
   926                           ; 2 bytes @ 0x3E
   927  0000E0                     	ds	2
   928                           
   929                           	psect	cstackCOMRAM
   930  000001                     __pcstackCOMRAM:
   931                           	callstack 0
   932  000001                     ?_TMR5_ReadTimer:
   933                           	callstack 0
   934  000001                     TMR5_WriteTimer@timerVal:
   935                           	callstack 0
   936                           
   937                           ; 2 bytes @ 0x0
   938  000001                     	ds	2
   939  000003                     ??_TMR5_ReadTimer:
   940  000003                     
   941                           ; 1 bytes @ 0x2
   942  000003                     	ds	2
   943  000005                     TMR5_ReadTimer@readVal:
   944                           	callstack 0
   945                           
   946                           ; 2 bytes @ 0x4
   947  000005                     	ds	2
   948  000007                     TMR5_ReadTimer@readValHigh:
   949                           	callstack 0
   950                           
   951                           ; 1 bytes @ 0x6
   952  000007                     	ds	1
   953  000008                     TMR5_ReadTimer@readValLow:
   954                           	callstack 0
   955                           
   956                           ; 1 bytes @ 0x7
   957  000008                     	ds	1
   958  000009                     CCP3_DefaultCallBack@capturedValue:
   959                           	callstack 0
   960                           
   961                           ; 2 bytes @ 0x8
   962  000009                     	ds	2
   963  00000B                     CCP3_CaptureISR@module:
   964                           	callstack 0
   965                           
   966                           ; 2 bytes @ 0xA
   967  00000B                     	ds	2
   968  00000D                     CCP4_DefaultCallBack@capturedValue:
   969                           	callstack 0
   970                           
   971                           ; 2 bytes @ 0xC
   972  00000D                     	ds	2
   973  00000F                     CCP4_CaptureISR@module:
   974                           	callstack 0
   975                           
   976                           ; 2 bytes @ 0xE
   977  00000F                     	ds	2
   978  000011                     ??_UART1_tx_vect_isr:
   979                           
   980                           ; 1 bytes @ 0x10
   981  000011                     	ds	1
   982  000012                     ??_UART1_rx_vect_isr:
   983                           
   984                           ; 1 bytes @ 0x11
   985  000012                     	ds	1
   986  000013                     ??_TMR4_ISR:
   987                           
   988                           ; 1 bytes @ 0x12
   989  000013                     	ds	1
   990  000014                     ??_TMR3_Initialize:
   991  000014                     ?_strlen:
   992                           	callstack 0
   993  000014                     ?_ADCC_GetSingleConversion:
   994                           	callstack 0
   995  000014                     ?___awdiv:
   996                           	callstack 0
   997  000014                     ?___aldiv:
   998                           	callstack 0
   999  000014                     ?___aodiv:
  1000                           	callstack 0
  1001  000014                     ?___aomod:
  1002                           	callstack 0
  1003  000014                     UART1_Write@txData:
  1004                           	callstack 0
  1005  000014                     INTERRUPT_Initialize@state:
  1006                           	callstack 0
  1007  000014                     UART1_SetFramingErrorHandler@interruptHandler:
  1008                           	callstack 0
  1009  000014                     UART1_SetOverrunErrorHandler@interruptHandler:
  1010                           	callstack 0
  1011  000014                     UART1_SetErrorHandler@interruptHandler:
  1012                           	callstack 0
  1013  000014                     UART1_SetRxInterruptHandler@InterruptHandler:
  1014                           	callstack 0
  1015  000014                     UART1_SetTxInterruptHandler@InterruptHandler:
  1016                           	callstack 0
  1017  000014                     TMR5_SetGateInterruptHandler@InterruptHandler:
  1018                           	callstack 0
  1019  000014                     TMR4_SetInterruptHandler@InterruptHandler:
  1020                           	callstack 0
  1021  000014                     PWM7_LoadDutyValue@dutyValue:
  1022                           	callstack 0
  1023  000014                     PWM8_LoadDutyValue@dutyValue:
  1024                           	callstack 0
  1025  000014                     PWM5_LoadDutyValue@dutyValue:
  1026                           	callstack 0
  1027  000014                     PWM6_LoadDutyValue@dutyValue:
  1028                           	callstack 0
  1029  000014                     CCP3_SetCallBack@customCallBack:
  1030                           	callstack 0
  1031  000014                     CCP4_SetCallBack@customCallBack:
  1032                           	callstack 0
  1033  000014                     ___awdiv@dividend:
  1034                           	callstack 0
  1035  000014                     strlen@s:
  1036                           	callstack 0
  1037  000014                     ___aldiv@dividend:
  1038                           	callstack 0
  1039  000014                     ___aodiv@dividend:
  1040                           	callstack 0
  1041  000014                     ___aomod@dividend:
  1042                           	callstack 0
  1043                           
  1044                           ; 8 bytes @ 0x13
  1045  000014                     	ds	1
  1046  000015                     putch@txData:
  1047                           	callstack 0
  1048                           
  1049                           ; 1 bytes @ 0x14
  1050  000015                     	ds	1
  1051  000016                     ??_TMR5_Initialize:
  1052  000016                     ??_PWM7_LoadDutyValue:
  1053  000016                     ??_PWM8_LoadDutyValue:
  1054  000016                     ??_PWM5_LoadDutyValue:
  1055  000016                     ??_PWM6_LoadDutyValue:
  1056  000016                     ??_ADCC_GetSingleConversion:
  1057  000016                     ___awdiv@divisor:
  1058                           	callstack 0
  1059  000016                     fputc@c:
  1060                           	callstack 0
  1061  000016                     strlen@a:
  1062                           	callstack 0
  1063                           
  1064                           ; 2 bytes @ 0x15
  1065  000016                     	ds	2
  1066  000018                     ADCC_GetSingleConversion@channel:
  1067                           	callstack 0
  1068  000018                     ___awdiv@counter:
  1069                           	callstack 0
  1070  000018                     setMotor@motorPower:
  1071                           	callstack 0
  1072  000018                     fputc@fp:
  1073                           	callstack 0
  1074  000018                     ___aldiv@divisor:
  1075                           	callstack 0
  1076                           
  1077                           ; 4 bytes @ 0x17
  1078  000018                     	ds	1
  1079  000019                     ?___xxtofl:
  1080                           	callstack 0
  1081  000019                     ___awdiv@sign:
  1082                           	callstack 0
  1083  000019                     ___xxtofl@val:
  1084                           	callstack 0
  1085                           
  1086                           ; 4 bytes @ 0x18
  1087  000019                     	ds	1
  1088  00001A                     ??_setMotor:
  1089  00001A                     ??_fputc:
  1090  00001A                     ___awdiv@quotient:
  1091                           	callstack 0
  1092                           
  1093                           ; 2 bytes @ 0x19
  1094  00001A                     	ds	2
  1095  00001C                     ___aldiv@counter:
  1096                           	callstack 0
  1097  00001C                     setSteering@steering:
  1098                           	callstack 0
  1099  00001C                     ___aodiv@divisor:
  1100                           	callstack 0
  1101  00001C                     ___aomod@divisor:
  1102                           	callstack 0
  1103                           
  1104                           ; 8 bytes @ 0x1B
  1105  00001C                     	ds	1
  1106  00001D                     ??___xxtofl:
  1107  00001D                     ___aldiv@sign:
  1108                           	callstack 0
  1109                           
  1110                           ; 1 bytes @ 0x1C
  1111  00001D                     	ds	1
  1112  00001E                     setSteering@steeringMode:
  1113                           	callstack 0
  1114  00001E                     ___aldiv@quotient:
  1115                           	callstack 0
  1116                           
  1117                           ; 4 bytes @ 0x1D
  1118  00001E                     	ds	1
  1119  00001F                     ??_setSteering:
  1120  00001F                     fputs@s:
  1121                           	callstack 0
  1122                           
  1123                           ; 2 bytes @ 0x1E
  1124  00001F                     	ds	2
  1125  000021                     ___xxtofl@sign:
  1126                           	callstack 0
  1127  000021                     setSteering@steeringF:
  1128                           	callstack 0
  1129  000021                     fputs@fp:
  1130                           	callstack 0
  1131                           
  1132                           ; 2 bytes @ 0x20
  1133  000021                     	ds	1
  1134  000022                     ?_actSpeed:
  1135                           	callstack 0
  1136  000022                     ___xxtofl@exp:
  1137                           	callstack 0
  1138                           
  1139                           ; 1 bytes @ 0x21
  1140  000022                     	ds	1
  1141  000023                     fputs@c:
  1142                           	callstack 0
  1143  000023                     setSteering@steeringB:
  1144                           	callstack 0
  1145  000023                     ___xxtofl@arg:
  1146                           	callstack 0
  1147                           
  1148                           ; 4 bytes @ 0x22
  1149  000023                     	ds	1
  1150  000024                     ___aodiv@counter:
  1151                           	callstack 0
  1152  000024                     ___aomod@counter:
  1153                           	callstack 0
  1154  000024                     actSpeed@speed:
  1155                           	callstack 0
  1156  000024                     fputs@i:
  1157                           	callstack 0
  1158                           
  1159                           ; 2 bytes @ 0x23
  1160  000024                     	ds	1
  1161  000025                     ??_calcSteering:
  1162  000025                     ___aodiv@sign:
  1163                           	callstack 0
  1164  000025                     ___aomod@sign:
  1165                           	callstack 0
  1166                           
  1167                           ; 1 bytes @ 0x24
  1168  000025                     	ds	1
  1169  000026                     ?_abs:
  1170                           	callstack 0
  1171  000026                     ?_pad:
  1172                           	callstack 0
  1173  000026                     pad@fp:
  1174                           	callstack 0
  1175  000026                     abs@a:
  1176                           	callstack 0
  1177  000026                     ___aodiv@quotient:
  1178                           	callstack 0
  1179                           
  1180                           ; 8 bytes @ 0x25
  1181  000026                     	ds	1
  1182  000027                     ?___flmul:
  1183                           	callstack 0
  1184  000027                     calcSteering@delta:
  1185                           	callstack 0
  1186  000027                     ___flge@ff1:
  1187                           	callstack 0
  1188  000027                     ___flmul@b:
  1189                           	callstack 0
  1190                           
  1191                           ; 4 bytes @ 0x26
  1192  000027                     	ds	1
  1193  000028                     ??_abs:
  1194  000028                     pad@buf:
  1195                           	callstack 0
  1196                           
  1197                           ; 2 bytes @ 0x27
  1198  000028                     	ds	2
  1199  00002A                     pad@p:
  1200                           	callstack 0
  1201                           
  1202                           ; 2 bytes @ 0x29
  1203  00002A                     	ds	1
  1204  00002B                     ___flge@ff2:
  1205                           	callstack 0
  1206  00002B                     ___flmul@a:
  1207                           	callstack 0
  1208                           
  1209                           ; 4 bytes @ 0x2A
  1210  00002B                     	ds	1
  1211  00002C                     ??_pad:
  1212                           
  1213                           ; 1 bytes @ 0x2B
  1214  00002C                     	ds	1
  1215  00002D                     pad@i:
  1216                           	callstack 0
  1217                           
  1218                           ; 2 bytes @ 0x2C
  1219  00002D                     	ds	2
  1220  00002F                     ??___flmul:
  1221  00002F                     ??___flge:
  1222  00002F                     pad@w:
  1223                           	callstack 0
  1224                           
  1225                           ; 2 bytes @ 0x2E
  1226  00002F                     	ds	2
  1227  000031                     ?_dtoa:
  1228                           	callstack 0
  1229  000031                     dtoa@fp:
  1230                           	callstack 0
  1231                           
  1232                           ; 2 bytes @ 0x30
  1233  000031                     	ds	2
  1234  000033                     ?___fladd:
  1235                           	callstack 0
  1236  000033                     ___fladd@b:
  1237                           	callstack 0
  1238  000033                     dtoa@d:
  1239                           	callstack 0
  1240                           
  1241                           ; 8 bytes @ 0x32
  1242  000033                     	ds	4
  1243  000037                     ___fladd@a:
  1244                           	callstack 0
  1245                           
  1246                           ; 4 bytes @ 0x36
  1247  000037                     	ds	4
  1248  00003B                     
  1249                           ; 1 bytes @ 0x3A
  1250 ;;
  1251 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1252 ;;
  1253 ;; *************** function _main *****************
  1254 ;; Defined at:
  1255 ;;		line 8 in file "main.c"
  1256 ;; Parameters:    Size  Location     Type
  1257 ;;		None
  1258 ;; Auto vars:     Size  Location     Type
  1259 ;;		None
  1260 ;; Return value:  Size  Location     Type
  1261 ;;                  1    wreg      void 
  1262 ;; Registers used:
  1263 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1264 ;; Tracked objects:
  1265 ;;		On entry : 0/0
  1266 ;;		On exit  : 0/0
  1267 ;;		Unchanged: 0/0
  1268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1272 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1273 ;;Total ram usage:        0 bytes
  1274 ;; Hardware stack levels required when called: 19
  1275 ;; This function calls:
  1276 ;;		_SYSTEM_Initialize
  1277 ;;		_TMR4_SetInterruptHandler
  1278 ;;		_loop
  1279 ;; This function is called by:
  1280 ;;		Startup code after reset
  1281 ;; This function uses a non-reentrant model
  1282 ;;
  1283                           
  1284                           	psect	text0
  1285  003E7C                     __ptext0:
  1286                           	callstack 0
  1287  003E7C                     _main:
  1288                           	callstack 12
  1289  003E7C                     
  1290                           ;main.c: 9:     SYSTEM_Initialize();
  1291  003E7C  EC9C  F01B         	call	_SYSTEM_Initialize	;wreg free
  1292  003E80                     
  1293                           ;main.c: 10:     (INTCON0bits.GIEH = 1);
  1294  003E80  8ED2               	bsf	210,7,c	;volatile
  1295  003E82                     
  1296                           ;main.c: 11:     (INTCON0bits.GIEL = 1);
  1297  003E82  8CD2               	bsf	210,6,c	;volatile
  1298                           
  1299                           ;main.c: 12:     TMR4_SetInterruptHandler(TMR4_10msISR);
  1300  003E84  0EA4               	movlw	low _TMR4_10msISR
  1301  003E86  6E14               	movwf	TMR4_SetInterruptHandler@InterruptHandler^0,c
  1302  003E88  0E3F               	movlw	high _TMR4_10msISR
  1303  003E8A  6E15               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)^0,c
  1304  003E8C  ECC0  F01F         	call	_TMR4_SetInterruptHandler	;wreg free
  1305  003E90                     
  1306                           ;main.c: 14:     loop();
  1307  003E90  EC95  F015         	call	_loop	;wreg free
  1308  003E94  EF57  F000         	goto	start
  1309  003E98                     __end_of_main:
  1310                           	callstack 0
  1311                           
  1312 ;; *************** function _loop *****************
  1313 ;; Defined at:
  1314 ;;		line 17 in file "main.c"
  1315 ;; Parameters:    Size  Location     Type
  1316 ;;		None
  1317 ;; Auto vars:     Size  Location     Type
  1318 ;;		None
  1319 ;; Return value:  Size  Location     Type
  1320 ;;                  1    wreg      void 
  1321 ;; Registers used:
  1322 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1323 ;; Tracked objects:
  1324 ;;		On entry : 0/0
  1325 ;;		On exit  : 0/0
  1326 ;;		Unchanged: 0/0
  1327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1331 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1332 ;;Total ram usage:        0 bytes
  1333 ;; Hardware stack levels used: 1
  1334 ;; Hardware stack levels required when called: 18
  1335 ;; This function calls:
  1336 ;;		_ADCC_GetSingleConversion
  1337 ;;		___flge
  1338 ;;		___xxtofl
  1339 ;;		_calcMotorPow
  1340 ;;		_calcSpeed
  1341 ;;		_calcSteering
  1342 ;;		_getBatteryVoltage
  1343 ;;		_getCurve
  1344 ;;		_getReverse
  1345 ;;		_setSteering
  1346 ;; This function is called by:
  1347 ;;		_main
  1348 ;; This function uses a non-reentrant model
  1349 ;;
  1350                           
  1351                           	psect	text1
  1352  002B2A                     __ptext1:
  1353                           	callstack 0
  1354  002B2A                     _loop:
  1355                           	callstack 12
  1356  002B2A                     l1211:
  1357  002B2A  A8CB               	btfss	203,4,c	;volatile
  1358  002B2C  EF9A  F015         	goto	u5571
  1359  002B30  EF9C  F015         	goto	u5570
  1360  002B34                     u5571:
  1361  002B34  EF95  F015         	goto	l1211
  1362  002B38                     u5570:
  1363  002B38                     l6292:
  1364                           
  1365                           ;main.c: 23:         getBatteryVoltage();
  1366  002B38  ECF8  F01E         	call	_getBatteryVoltage	;wreg free
  1367  002B3C                     
  1368                           ;main.c: 24:     }while(BatteryVolt < ((7.4) * 409.6));
  1369  002B3C  C084  F019         	movff	_BatteryVolt,___xxtofl@val
  1370  002B40  C085  F01A         	movff	_BatteryVolt+1,___xxtofl@val+1
  1371  002B44  6A1B               	clrf	(___xxtofl@val+2)^0,c
  1372  002B46  6A1C               	clrf	(___xxtofl@val+3)^0,c
  1373  002B48  0E00               	movlw	0
  1374  002B4A  EC1A  F012         	call	___xxtofl
  1375  002B4E  C019  F027         	movff	?___xxtofl,___flge@ff1
  1376  002B52  C01A  F028         	movff	?___xxtofl+1,___flge@ff1+1
  1377  002B56  C01B  F029         	movff	?___xxtofl+2,___flge@ff1+2
  1378  002B5A  C01C  F02A         	movff	?___xxtofl+3,___flge@ff1+3
  1379  002B5E  0EA4               	movlw	164
  1380  002B60  6E2B               	movwf	___flge@ff2^0,c
  1381  002B62  0E70               	movlw	112
  1382  002B64  6E2C               	movwf	(___flge@ff2+1)^0,c
  1383  002B66  0E3D               	movlw	61
  1384  002B68  6E2D               	movwf	(___flge@ff2+2)^0,c
  1385  002B6A  0E45               	movlw	69
  1386  002B6C  6E2E               	movwf	(___flge@ff2+3)^0,c
  1387  002B6E  EC27  F017         	call	___flge	;wreg free
  1388  002B72  A0D8               	btfss	status,0,c
  1389  002B74  EFBE  F015         	goto	u5581
  1390  002B78  EFC0  F015         	goto	u5580
  1391  002B7C                     u5581:
  1392  002B7C  EF9C  F015         	goto	l6292
  1393  002B80                     u5580:
  1394  002B80                     
  1395                           ;main.c: 26:     oldDistLeft = distLeft;
  1396  002B80  C09A  F092         	movff	_distLeft,_oldDistLeft	;volatile
  1397  002B84  C09B  F093         	movff	_distLeft+1,_oldDistLeft+1	;volatile
  1398                           
  1399                           ;main.c: 27:     oldDistRight = distRight;
  1400  002B88  C096  F090         	movff	_distRight,_oldDistRight	;volatile
  1401  002B8C  C097  F091         	movff	_distRight+1,_oldDistRight+1	;volatile
  1402  002B90                     l6296:
  1403  002B90  0100               	movlb	0	; () banked
  1404  002B92  519D               	movf	_cycle10ms& (0+255),w,b
  1405  002B94  B4D8               	btfsc	status,2,c
  1406  002B96  EFCF  F015         	goto	u5591
  1407  002B9A  EFD1  F015         	goto	u5590
  1408  002B9E                     u5591:
  1409  002B9E  EFC8  F015         	goto	l6296
  1410  002BA2                     u5590:
  1411  002BA2                     
  1412                           ; BSR set to: 0
  1413                           ;main.c: 31:         cycle10ms = 0;
  1414  002BA2  0E00               	movlw	0
  1415  002BA4  6F9D               	movwf	_cycle10ms& (0+255),b
  1416  002BA6                     
  1417                           ; BSR set to: 0
  1418                           ;main.c: 33:         if(PORTBbits.RB5){
  1419  002BA6  AACB               	btfss	203,5,c	;volatile
  1420  002BA8  EFD8  F015         	goto	u5601
  1421  002BAC  EFDA  F015         	goto	u5600
  1422  002BB0                     u5601:
  1423  002BB0  EFDC  F015         	goto	l6304
  1424  002BB4                     u5600:
  1425  002BB4  EF1C  F016         	goto	l1224
  1426  002BB8                     l6304:
  1427                           
  1428                           ; BSR set to: 0
  1429                           ;main.c: 36:         if(ADCC_GetSingleConversion(aiBatt) < (7.4)){
  1430  002BB8  0E22               	movlw	34
  1431  002BBA  ECB8  F01D         	call	_ADCC_GetSingleConversion
  1432  002BBE  C014  F019         	movff	?_ADCC_GetSingleConversion,___xxtofl@val
  1433  002BC2  C015  F01A         	movff	?_ADCC_GetSingleConversion+1,___xxtofl@val+1
  1434  002BC6  6A1B               	clrf	(___xxtofl@val+2)^0,c
  1435  002BC8  6A1C               	clrf	(___xxtofl@val+3)^0,c
  1436  002BCA  0E00               	movlw	0
  1437  002BCC  EC1A  F012         	call	___xxtofl
  1438  002BD0  C019  F027         	movff	?___xxtofl,___flge@ff1
  1439  002BD4  C01A  F028         	movff	?___xxtofl+1,___flge@ff1+1
  1440  002BD8  C01B  F029         	movff	?___xxtofl+2,___flge@ff1+2
  1441  002BDC  C01C  F02A         	movff	?___xxtofl+3,___flge@ff1+3
  1442  002BE0  0ECD               	movlw	205
  1443  002BE2  6E2B               	movwf	___flge@ff2^0,c
  1444  002BE4  0ECC               	movlw	204
  1445  002BE6  6E2C               	movwf	(___flge@ff2+1)^0,c
  1446  002BE8  0EEC               	movlw	236
  1447  002BEA  6E2D               	movwf	(___flge@ff2+2)^0,c
  1448  002BEC  0E40               	movlw	64
  1449  002BEE  6E2E               	movwf	(___flge@ff2+3)^0,c
  1450  002BF0  EC27  F017         	call	___flge	;wreg free
  1451  002BF4  B0D8               	btfsc	status,0,c
  1452  002BF6  EFFF  F015         	goto	u5611
  1453  002BFA  EF01  F016         	goto	u5610
  1454  002BFE                     u5611:
  1455  002BFE  EF10  F016         	goto	l6310
  1456  002C02                     u5610:
  1457  002C02                     
  1458                           ;main.c: 37:             setSpeed = 0;
  1459  002C02  0E00               	movlw	0
  1460  002C04  0100               	movlb	0	; () banked
  1461  002C06  6F8D               	movwf	(_setSpeed+1)& (0+255),b
  1462  002C08  0E00               	movlw	0
  1463  002C0A  6F8C               	movwf	_setSpeed& (0+255),b
  1464  002C0C                     
  1465                           ; BSR set to: 0
  1466                           ;main.c: 38:             setSteering(0,Front);
  1467  002C0C  0E00               	movlw	0
  1468  002C0E  6E1D               	movwf	(setSteering@steering+1)^0,c
  1469  002C10  0E00               	movlw	0
  1470  002C12  6E1C               	movwf	setSteering@steering^0,c
  1471  002C14  0E03               	movlw	3
  1472  002C16  6E1E               	movwf	setSteering@steeringMode^0,c
  1473  002C18  EC3F  F010         	call	_setSteering	;wreg free
  1474                           
  1475                           ;main.c: 39:             break;
  1476  002C1C  EF1C  F016         	goto	l1224
  1477  002C20                     l6310:
  1478                           
  1479                           ;main.c: 42:         getCurve();
  1480  002C20  EC3C  F00F         	call	_getCurve	;wreg free
  1481  002C24                     
  1482                           ;main.c: 43:         getReverse();
  1483  002C24  EC88  F01A         	call	_getReverse	;wreg free
  1484  002C28                     
  1485                           ;main.c: 45:         calcSteering();
  1486  002C28  EC02  F015         	call	_calcSteering	;wreg free
  1487  002C2C                     
  1488                           ;main.c: 46:         calcMotorPow();
  1489  002C2C  EC6A  F014         	call	_calcMotorPow	;wreg free
  1490  002C30                     
  1491                           ;main.c: 47:         calcSpeed();
  1492  002C30  EC2F  F011         	call	_calcSpeed	;wreg free
  1493  002C34  EFC8  F015         	goto	l6296
  1494  002C38                     l1224:
  1495  002C38  0012               	return		;funcret
  1496  002C3A                     __end_of_loop:
  1497                           	callstack 0
  1498                           
  1499 ;; *************** function _getReverse *****************
  1500 ;; Defined at:
  1501 ;;		line 137 in file "main.c"
  1502 ;; Parameters:    Size  Location     Type
  1503 ;;		None
  1504 ;; Auto vars:     Size  Location     Type
  1505 ;;		None
  1506 ;; Return value:  Size  Location     Type
  1507 ;;                  1    wreg      void 
  1508 ;; Registers used:
  1509 ;;		wreg, status,2, status,0
  1510 ;; Tracked objects:
  1511 ;;		On entry : 0/0
  1512 ;;		On exit  : 0/0
  1513 ;;		Unchanged: 0/0
  1514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1518 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1519 ;;Total ram usage:        0 bytes
  1520 ;; Hardware stack levels used: 1
  1521 ;; Hardware stack levels required when called: 8
  1522 ;; This function calls:
  1523 ;;		Nothing
  1524 ;; This function is called by:
  1525 ;;		_loop
  1526 ;; This function uses a non-reentrant model
  1527 ;;
  1528                           
  1529                           	psect	text2
  1530  003510                     __ptext2:
  1531                           	callstack 0
  1532  003510                     _getReverse:
  1533                           	callstack 21
  1534  003510                     
  1535                           ;main.c: 138:     if(distFront < (10)){
  1536  003510  0100               	movlb	0	; () banked
  1537  003512  51A1               	movf	(_distFront+1)& (0+255),w,b	;volatile
  1538  003514  E107               	bnz	u3781
  1539  003516  0E0A               	movlw	10
  1540  003518  5DA0               	subwf	_distFront& (0+255),w,b	;volatile
  1541  00351A  B0D8               	btfsc	status,0,c
  1542  00351C  EF92  F01A         	goto	u3781
  1543  003520  EF94  F01A         	goto	u3780
  1544  003524                     u3781:
  1545  003524  EF97  F01A         	goto	l5088
  1546  003528                     u3780:
  1547  003528                     
  1548                           ; BSR set to: 0
  1549                           ;main.c: 139:         ++reverseCount;
  1550  003528  2A41               	incf	_reverseCount^0,f,c
  1551                           
  1552                           ;main.c: 140:     }else if(driveMode != Backwards){
  1553  00352A  EFA2  F01A         	goto	l5092
  1554  00352E                     l5088:
  1555                           
  1556                           ; BSR set to: 0
  1557  00352E  0E02               	movlw	2
  1558  003530  199F               	xorwf	_driveMode& (0+255),w,b
  1559  003532  B4D8               	btfsc	status,2,c
  1560  003534  EF9E  F01A         	goto	u3791
  1561  003538  EFA0  F01A         	goto	u3790
  1562  00353C                     u3791:
  1563  00353C  EFA2  F01A         	goto	l5092
  1564  003540                     u3790:
  1565  003540                     
  1566                           ; BSR set to: 0
  1567                           ;main.c: 141:         reverseCount = 0;
  1568  003540  0E00               	movlw	0
  1569  003542  6E41               	movwf	_reverseCount^0,c
  1570  003544                     l5092:
  1571                           
  1572                           ; BSR set to: 0
  1573                           ;main.c: 144:     if(reverseCount > (25)){
  1574  003544  0E19               	movlw	25
  1575  003546  6441               	cpfsgt	_reverseCount^0,c
  1576  003548  EFA8  F01A         	goto	u3801
  1577  00354C  EFAA  F01A         	goto	u3800
  1578  003550                     u3801:
  1579  003550  EFBB  F01A         	goto	l1268
  1580  003554                     u3800:
  1581  003554                     
  1582                           ; BSR set to: 0
  1583                           ;main.c: 145:         driveMode = Backwards;
  1584  003554  0E02               	movlw	2
  1585  003556  6F9F               	movwf	_driveMode& (0+255),b
  1586  003558                     
  1587                           ; BSR set to: 0
  1588                           ;main.c: 146:         if(distFront > (40)){
  1589  003558  51A1               	movf	(_distFront+1)& (0+255),w,b	;volatile
  1590  00355A  E109               	bnz	u3810
  1591  00355C  0E29               	movlw	41
  1592  00355E  5DA0               	subwf	_distFront& (0+255),w,b	;volatile
  1593  003560  A0D8               	btfss	status,0,c
  1594  003562  EFB5  F01A         	goto	u3811
  1595  003566  EFB7  F01A         	goto	u3810
  1596  00356A                     u3811:
  1597  00356A  EFBB  F01A         	goto	l1268
  1598  00356E                     u3810:
  1599  00356E                     
  1600                           ; BSR set to: 0
  1601                           ;main.c: 147:              driveMode = Strait;
  1602  00356E  0E00               	movlw	0
  1603  003570  6F9F               	movwf	_driveMode& (0+255),b
  1604                           
  1605                           ;main.c: 148:              reverseCount = 0;
  1606  003572  0E00               	movlw	0
  1607  003574  6E41               	movwf	_reverseCount^0,c
  1608  003576                     l1268:
  1609                           
  1610                           ; BSR set to: 0
  1611  003576  0012               	return		;funcret
  1612  003578                     __end_of_getReverse:
  1613                           	callstack 0
  1614                           
  1615 ;; *************** function _getCurve *****************
  1616 ;; Defined at:
  1617 ;;		line 72 in file "main.c"
  1618 ;; Parameters:    Size  Location     Type
  1619 ;;		None
  1620 ;; Auto vars:     Size  Location     Type
  1621 ;;  deltaRight      2   62[BANK0 ] short 
  1622 ;;  deltaLeft       2   60[BANK0 ] short 
  1623 ;; Return value:  Size  Location     Type
  1624 ;;                  1    wreg      void 
  1625 ;; Registers used:
  1626 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1627 ;; Tracked objects:
  1628 ;;		On entry : 0/0
  1629 ;;		On exit  : 0/0
  1630 ;;		Unchanged: 0/0
  1631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1633 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1634 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1635 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1636 ;;Total ram usage:        6 bytes
  1637 ;; Hardware stack levels used: 1
  1638 ;; Hardware stack levels required when called: 17
  1639 ;; This function calls:
  1640 ;;		_printf
  1641 ;; This function is called by:
  1642 ;;		_loop
  1643 ;; This function uses a non-reentrant model
  1644 ;;
  1645                           
  1646                           	psect	text3
  1647  001E78                     __ptext3:
  1648                           	callstack 0
  1649  001E78                     _getCurve:
  1650                           	callstack 12
  1651  001E78                     
  1652                           ;main.c: 73:     int16_t deltaLeft;;main.c: 74:     int16_t deltaRight;;main.c: 76:     
      +                          switch (curveMode){
  1653  001E78  EF18  F010         	goto	l6204
  1654  001E7C                     l6148:
  1655                           
  1656                           ; BSR set to: 0
  1657                           ;main.c: 78:             deltaLeft = (int16_t)(distLeft - oldDistLeft);
  1658  001E7C  5192               	movf	_oldDistLeft& (0+255),w,b
  1659  001E7E  5D9A               	subwf	_distLeft& (0+255),w,b	;volatile
  1660  001E80  6FDE               	movwf	getCurve@deltaLeft& (0+255),b
  1661  001E82  5193               	movf	(_oldDistLeft+1)& (0+255),w,b
  1662  001E84  599B               	subwfb	(_distLeft+1)& (0+255),w,b	;volatile
  1663  001E86  6FDF               	movwf	(getCurve@deltaLeft+1)& (0+255),b
  1664                           
  1665                           ;main.c: 79:             deltaRight = (int16_t)(distRight - oldDistRight);
  1666  001E88  5190               	movf	_oldDistRight& (0+255),w,b
  1667  001E8A  5D96               	subwf	_distRight& (0+255),w,b	;volatile
  1668  001E8C  6FE0               	movwf	getCurve@deltaRight& (0+255),b
  1669  001E8E  5191               	movf	(_oldDistRight+1)& (0+255),w,b
  1670  001E90  5997               	subwfb	(_distRight+1)& (0+255),w,b	;volatile
  1671  001E92  6FE1               	movwf	(getCurve@deltaRight+1)& (0+255),b
  1672  001E94                     
  1673                           ; BSR set to: 0
  1674                           ;main.c: 80:             printf("Out | dL= %d | dR= %d", deltaLeft, deltaRight);
  1675  001E94  0E01               	movlw	low STR_2
  1676  001E96  6FD4               	movwf	printf@fmt& (0+255),b
  1677  001E98  0E10               	movlw	high STR_2
  1678  001E9A  6FD5               	movwf	(printf@fmt+1)& (0+255),b
  1679  001E9C  C0DE  F0D6         	movff	getCurve@deltaLeft,?_printf+2
  1680  001EA0  C0DF  F0D7         	movff	getCurve@deltaLeft+1,?_printf+3
  1681  001EA4  C0E0  F0D8         	movff	getCurve@deltaRight,?_printf+4
  1682  001EA8  C0E1  F0D9         	movff	getCurve@deltaRight+1,?_printf+5
  1683  001EAC  ECD0  F01E         	call	_printf	;wreg free
  1684  001EB0                     
  1685                           ;main.c: 82:             if(deltaLeft > (50)){
  1686  001EB0  0100               	movlb	0	; () banked
  1687  001EB2  BFDF               	btfsc	(getCurve@deltaLeft+1)& (0+255),7,b
  1688  001EB4  EF65  F00F         	goto	u5371
  1689  001EB8  51DF               	movf	(getCurve@deltaLeft+1)& (0+255),w,b
  1690  001EBA  E109               	bnz	u5370
  1691  001EBC  0E33               	movlw	51
  1692  001EBE  5DDE               	subwf	getCurve@deltaLeft& (0+255),w,b
  1693  001EC0  A0D8               	btfss	status,0,c
  1694  001EC2  EF65  F00F         	goto	u5371
  1695  001EC6  EF67  F00F         	goto	u5370
  1696  001ECA                     u5371:
  1697  001ECA  EF75  F00F         	goto	l6158
  1698  001ECE                     u5370:
  1699  001ECE                     
  1700                           ; BSR set to: 0
  1701                           ;main.c: 83:                 delay = 0;
  1702  001ECE  0E00               	movlw	0
  1703  001ED0  6F9C               	movwf	_delay& (0+255),b
  1704                           
  1705                           ;main.c: 84:                 curveMode = BeforeCurve;
  1706  001ED2  0E01               	movlw	1
  1707  001ED4  6F9E               	movwf	_curveMode& (0+255),b
  1708                           
  1709                           ;main.c: 85:                 driveMode = CurveLeft;
  1710  001ED6  0E03               	movlw	3
  1711  001ED8  6F9F               	movwf	_driveMode& (0+255),b
  1712  001EDA                     
  1713                           ; BSR set to: 0
  1714                           ;main.c: 86:                 printf("   CurveLeft");
  1715  001EDA  0E25               	movlw	low STR_3
  1716  001EDC  6FD4               	movwf	printf@fmt& (0+255),b
  1717  001EDE  0E10               	movlw	high STR_3
  1718  001EE0  6FD5               	movwf	(printf@fmt+1)& (0+255),b
  1719  001EE2  ECD0  F01E         	call	_printf	;wreg free
  1720                           
  1721                           ;main.c: 87:             } else if(deltaRight > (50)){
  1722  001EE6  EF8F  F00F         	goto	l6164
  1723  001EEA                     l6158:
  1724                           
  1725                           ; BSR set to: 0
  1726  001EEA  BFE1               	btfsc	(getCurve@deltaRight+1)& (0+255),7,b
  1727  001EEC  EF81  F00F         	goto	u5381
  1728  001EF0  51E1               	movf	(getCurve@deltaRight+1)& (0+255),w,b
  1729  001EF2  E109               	bnz	u5380
  1730  001EF4  0E33               	movlw	51
  1731  001EF6  5DE0               	subwf	getCurve@deltaRight& (0+255),w,b
  1732  001EF8  A0D8               	btfss	status,0,c
  1733  001EFA  EF81  F00F         	goto	u5381
  1734  001EFE  EF83  F00F         	goto	u5380
  1735  001F02                     u5381:
  1736  001F02  EF8F  F00F         	goto	l6164
  1737  001F06                     u5380:
  1738  001F06                     
  1739                           ; BSR set to: 0
  1740                           ;main.c: 88:                 delay = 0;
  1741  001F06  0E00               	movlw	0
  1742  001F08  6F9C               	movwf	_delay& (0+255),b
  1743                           
  1744                           ;main.c: 89:                 curveMode = BeforeCurve;
  1745  001F0A  0E01               	movlw	1
  1746  001F0C  6F9E               	movwf	_curveMode& (0+255),b
  1747                           
  1748                           ;main.c: 90:                 driveMode = CurveRight;
  1749  001F0E  0E04               	movlw	4
  1750  001F10  6F9F               	movwf	_driveMode& (0+255),b
  1751  001F12                     
  1752                           ; BSR set to: 0
  1753                           ;main.c: 91:                 printf("   CurveRight");
  1754  001F12  0E17               	movlw	low STR_4
  1755  001F14  6FD4               	movwf	printf@fmt& (0+255),b
  1756  001F16  0E10               	movlw	high STR_4
  1757  001F18  6FD5               	movwf	(printf@fmt+1)& (0+255),b
  1758  001F1A  ECD0  F01E         	call	_printf	;wreg free
  1759  001F1E                     l6164:
  1760                           
  1761                           ;main.c: 93:             printf("\n");
  1762  001F1E  0E47               	movlw	low (STR_1+9)
  1763  001F20  0100               	movlb	0	; () banked
  1764  001F22  6FD4               	movwf	printf@fmt& (0+255),b
  1765  001F24  0E10               	movlw	high (STR_1+9)
  1766  001F26  6FD5               	movwf	(printf@fmt+1)& (0+255),b
  1767  001F28  ECD0  F01E         	call	_printf	;wreg free
  1768                           
  1769                           ;main.c: 95:             break;
  1770  001F2C  EF36  F010         	goto	l1244
  1771  001F30                     l6166:
  1772                           
  1773                           ; BSR set to: 0
  1774                           ;main.c: 97:             if(delay > (5)){
  1775  001F30  0E05               	movlw	5
  1776  001F32  659C               	cpfsgt	_delay& (0+255),b
  1777  001F34  EF9E  F00F         	goto	u5391
  1778  001F38  EFA0  F00F         	goto	u5390
  1779  001F3C                     u5391:
  1780  001F3C  EFAC  F00F         	goto	l6172
  1781  001F40                     u5390:
  1782  001F40                     
  1783                           ; BSR set to: 0
  1784                           ;main.c: 98:                 delay = 0;
  1785  001F40  0E00               	movlw	0
  1786  001F42  6F9C               	movwf	_delay& (0+255),b
  1787                           
  1788                           ;main.c: 99:                 curveMode = InCurve;
  1789  001F44  0E02               	movlw	2
  1790  001F46  6F9E               	movwf	_curveMode& (0+255),b
  1791  001F48                     
  1792                           ; BSR set to: 0
  1793                           ;main.c: 100:                 printf("InCurve\n");
  1794  001F48  0E69               	movlw	low STR_6
  1795  001F4A  6FD4               	movwf	printf@fmt& (0+255),b
  1796  001F4C  0E10               	movlw	high STR_6
  1797  001F4E  6FD5               	movwf	(printf@fmt+1)& (0+255),b
  1798  001F50  ECD0  F01E         	call	_printf	;wreg free
  1799                           
  1800                           ;main.c: 101:             } else {
  1801  001F54  EF36  F010         	goto	l1244
  1802  001F58                     l6172:
  1803                           
  1804                           ; BSR set to: 0
  1805                           ;main.c: 102:                 delay++;
  1806  001F58  2B9C               	incf	_delay& (0+255),f,b
  1807  001F5A  EF36  F010         	goto	l1244
  1808  001F5E                     l6174:
  1809                           
  1810                           ; BSR set to: 0
  1811                           ;main.c: 106:             if(delay > (20)){
  1812  001F5E  0E14               	movlw	20
  1813  001F60  659C               	cpfsgt	_delay& (0+255),b
  1814  001F62  EFB5  F00F         	goto	u5401
  1815  001F66  EFB7  F00F         	goto	u5400
  1816  001F6A                     u5401:
  1817  001F6A  EFAC  F00F         	goto	l6172
  1818  001F6E                     u5400:
  1819  001F6E                     
  1820                           ; BSR set to: 0
  1821                           ;main.c: 107:                 if(driveMode == CurveLeft){
  1822  001F6E  0E03               	movlw	3
  1823  001F70  199F               	xorwf	_driveMode& (0+255),w,b
  1824  001F72  A4D8               	btfss	status,2,c
  1825  001F74  EFBE  F00F         	goto	u5411
  1826  001F78  EFC0  F00F         	goto	u5410
  1827  001F7C                     u5411:
  1828  001F7C  EFCC  F00F         	goto	l6180
  1829  001F80                     u5410:
  1830  001F80                     
  1831                           ; BSR set to: 0
  1832                           ;main.c: 108:                     printf("distL= %d\n", distLeft);
  1833  001F80  0E49               	movlw	low STR_7
  1834  001F82  6FD4               	movwf	printf@fmt& (0+255),b
  1835  001F84  0E10               	movlw	high STR_7
  1836  001F86  6FD5               	movwf	(printf@fmt+1)& (0+255),b
  1837  001F88  C09A  F0D6         	movff	_distLeft,?_printf+2	;volatile
  1838  001F8C  C09B  F0D7         	movff	_distLeft+1,?_printf+3	;volatile
  1839  001F90  ECD0  F01E         	call	_printf	;wreg free
  1840                           
  1841                           ;main.c: 109:                 } else if(driveMode == CurveLeft){
  1842  001F94  EFDF  F00F         	goto	l6184
  1843  001F98                     l6180:
  1844                           
  1845                           ; BSR set to: 0
  1846  001F98  0E03               	movlw	3
  1847  001F9A  199F               	xorwf	_driveMode& (0+255),w,b
  1848  001F9C  A4D8               	btfss	status,2,c
  1849  001F9E  EFD3  F00F         	goto	u5421
  1850  001FA2  EFD5  F00F         	goto	u5420
  1851  001FA6                     u5421:
  1852  001FA6  EFDF  F00F         	goto	l6184
  1853  001FAA                     u5420:
  1854  001FAA                     
  1855                           ; BSR set to: 0
  1856                           ;main.c: 110:                     printf("distR= %d\n", distRight);
  1857  001FAA  0E54               	movlw	low STR_8
  1858  001FAC  6FD4               	movwf	printf@fmt& (0+255),b
  1859  001FAE  0E10               	movlw	high STR_8
  1860  001FB0  6FD5               	movwf	(printf@fmt+1)& (0+255),b
  1861  001FB2  C096  F0D6         	movff	_distRight,?_printf+2	;volatile
  1862  001FB6  C097  F0D7         	movff	_distRight+1,?_printf+3	;volatile
  1863  001FBA  ECD0  F01E         	call	_printf	;wreg free
  1864  001FBE                     l6184:
  1865                           
  1866                           ;main.c: 113:                 if(distLeft < (40) || distRight < (40)){
  1867  001FBE  0100               	movlb	0	; () banked
  1868  001FC0  519B               	movf	(_distLeft+1)& (0+255),w,b	;volatile
  1869  001FC2  E109               	bnz	u5430
  1870  001FC4  0E28               	movlw	40
  1871  001FC6  5D9A               	subwf	_distLeft& (0+255),w,b	;volatile
  1872  001FC8  A0D8               	btfss	status,0,c
  1873  001FCA  EFE9  F00F         	goto	u5431
  1874  001FCE  EFEB  F00F         	goto	u5430
  1875  001FD2                     u5431:
  1876  001FD2  EFF6  F00F         	goto	l6188
  1877  001FD6                     u5430:
  1878  001FD6                     
  1879                           ; BSR set to: 0
  1880  001FD6  5197               	movf	(_distRight+1)& (0+255),w,b	;volatile
  1881  001FD8  E107               	bnz	u5441
  1882  001FDA  0E28               	movlw	40
  1883  001FDC  5D96               	subwf	_distRight& (0+255),w,b	;volatile
  1884  001FDE  B0D8               	btfsc	status,0,c
  1885  001FE0  EFF4  F00F         	goto	u5441
  1886  001FE4  EFF6  F00F         	goto	u5440
  1887  001FE8                     u5441:
  1888  001FE8  EF36  F010         	goto	l1244
  1889  001FEC                     u5440:
  1890  001FEC                     l6188:
  1891                           
  1892                           ; BSR set to: 0
  1893                           ;main.c: 114:                     delay = 0;
  1894  001FEC  0E00               	movlw	0
  1895  001FEE  6F9C               	movwf	_delay& (0+255),b
  1896                           
  1897                           ;main.c: 115:                     curveMode = AfterCurve;
  1898  001FF0  0E03               	movlw	3
  1899  001FF2  6F9E               	movwf	_curveMode& (0+255),b
  1900                           
  1901                           ;main.c: 116:                     driveMode = Strait;
  1902  001FF4  0E00               	movlw	0
  1903  001FF6  6F9F               	movwf	_driveMode& (0+255),b
  1904  001FF8                     
  1905                           ; BSR set to: 0
  1906                           ;main.c: 117:                     printf("AfterCurve\n");
  1907  001FF8  0E32               	movlw	low STR_9
  1908  001FFA  6FD4               	movwf	printf@fmt& (0+255),b
  1909  001FFC  0E10               	movlw	high STR_9
  1910  001FFE  6FD5               	movwf	(printf@fmt+1)& (0+255),b
  1911  002000  ECD0  F01E         	call	_printf	;wreg free
  1912  002004  EF36  F010         	goto	l1244
  1913  002008                     l6194:
  1914                           
  1915                           ; BSR set to: 0
  1916                           ;main.c: 124:             if(delay > (20)){
  1917  002008  0E14               	movlw	20
  1918  00200A  659C               	cpfsgt	_delay& (0+255),b
  1919  00200C  EF0A  F010         	goto	u5451
  1920  002010  EF0C  F010         	goto	u5450
  1921  002014                     u5451:
  1922  002014  EFAC  F00F         	goto	l6172
  1923  002018                     u5450:
  1924  002018                     
  1925                           ; BSR set to: 0
  1926                           ;main.c: 125:                 delay = 0;
  1927  002018  0E00               	movlw	0
  1928  00201A  6F9C               	movwf	_delay& (0+255),b
  1929                           
  1930                           ;main.c: 126:                 curveMode = OutCurve;
  1931  00201C  0E00               	movlw	0
  1932  00201E  6F9E               	movwf	_curveMode& (0+255),b
  1933  002020                     
  1934                           ; BSR set to: 0
  1935                           ;main.c: 127:                 printf("OutCurve\n");
  1936  002020  0E5F               	movlw	low STR_10
  1937  002022  6FD4               	movwf	printf@fmt& (0+255),b
  1938  002024  0E10               	movlw	high STR_10
  1939  002026  6FD5               	movwf	(printf@fmt+1)& (0+255),b
  1940  002028  ECD0  F01E         	call	_printf	;wreg free
  1941                           
  1942                           ;main.c: 128:             } else {
  1943  00202C  EF36  F010         	goto	l1244
  1944  002030                     l6204:
  1945  002030  0100               	movlb	0	; () banked
  1946  002032  519E               	movf	_curveMode& (0+255),w,b
  1947  002034  6FDC               	movwf	??_getCurve& (0+255),b
  1948  002036  6BDD               	clrf	(??_getCurve+1)& (0+255),b
  1949                           
  1950                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1951                           ; Switch size 1, requested type "simple"
  1952                           ; Number of cases is 1, Range of values is 0 to 0
  1953                           ; switch strategies available:
  1954                           ; Name         Instructions Cycles
  1955                           ; simple_byte            4     3 (average)
  1956                           ;	Chosen strategy is simple_byte
  1957  002038  51DD               	movf	(??_getCurve+1)& (0+255),w,b
  1958  00203A  0A00               	xorlw	0	; case 0
  1959  00203C  B4D8               	btfsc	status,2,c
  1960  00203E  EF23  F010         	goto	l6408
  1961  002042  EF36  F010         	goto	l1244
  1962  002046                     l6408:
  1963                           
  1964                           ; BSR set to: 0
  1965                           ; Switch size 1, requested type "simple"
  1966                           ; Number of cases is 4, Range of values is 0 to 3
  1967                           ; switch strategies available:
  1968                           ; Name         Instructions Cycles
  1969                           ; simple_byte           13     7 (average)
  1970                           ;	Chosen strategy is simple_byte
  1971  002046  51DC               	movf	??_getCurve& (0+255),w,b
  1972  002048  0A00               	xorlw	0	; case 0
  1973  00204A  B4D8               	btfsc	status,2,c
  1974  00204C  EF3E  F00F         	goto	l6148
  1975  002050  0A01               	xorlw	1	; case 1
  1976  002052  B4D8               	btfsc	status,2,c
  1977  002054  EF98  F00F         	goto	l6166
  1978  002058  0A03               	xorlw	3	; case 2
  1979  00205A  B4D8               	btfsc	status,2,c
  1980  00205C  EFAF  F00F         	goto	l6174
  1981  002060  0A01               	xorlw	1	; case 3
  1982  002062  B4D8               	btfsc	status,2,c
  1983  002064  EF04  F010         	goto	l6194
  1984  002068  EF36  F010         	goto	l1244
  1985  00206C                     l1244:
  1986                           
  1987                           ;main.c: 133:     oldDistLeft = distLeft;
  1988  00206C  C09A  F092         	movff	_distLeft,_oldDistLeft	;volatile
  1989  002070  C09B  F093         	movff	_distLeft+1,_oldDistLeft+1	;volatile
  1990                           
  1991                           ;main.c: 134:     oldDistRight = distRight;
  1992  002074  C096  F090         	movff	_distRight,_oldDistRight	;volatile
  1993  002078  C097  F091         	movff	_distRight+1,_oldDistRight+1	;volatile
  1994  00207C  0012               	return		;funcret
  1995  00207E                     __end_of_getCurve:
  1996                           	callstack 0
  1997                           
  1998 ;; *************** function _getBatteryVoltage *****************
  1999 ;; Defined at:
  2000 ;;		line 67 in file "main.c"
  2001 ;; Parameters:    Size  Location     Type
  2002 ;;		None
  2003 ;; Auto vars:     Size  Location     Type
  2004 ;;		None
  2005 ;; Return value:  Size  Location     Type
  2006 ;;                  1    wreg      void 
  2007 ;; Registers used:
  2008 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2009 ;; Tracked objects:
  2010 ;;		On entry : 0/0
  2011 ;;		On exit  : 0/0
  2012 ;;		Unchanged: 0/0
  2013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2017 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2018 ;;Total ram usage:        0 bytes
  2019 ;; Hardware stack levels used: 1
  2020 ;; Hardware stack levels required when called: 17
  2021 ;; This function calls:
  2022 ;;		_ADCC_GetSingleConversion
  2023 ;;		_printf
  2024 ;; This function is called by:
  2025 ;;		_loop
  2026 ;; This function uses a non-reentrant model
  2027 ;;
  2028                           
  2029                           	psect	text4
  2030  003DF0                     __ptext4:
  2031                           	callstack 0
  2032  003DF0                     _getBatteryVoltage:
  2033                           	callstack 12
  2034  003DF0                     
  2035                           ;main.c: 68:     BatteryVolt = ADCC_GetSingleConversion(aiBatt);
  2036  003DF0  0E22               	movlw	34
  2037  003DF2  ECB8  F01D         	call	_ADCC_GetSingleConversion
  2038  003DF6  C014  F084         	movff	?_ADCC_GetSingleConversion,_BatteryVolt
  2039  003DFA  C015  F085         	movff	?_ADCC_GetSingleConversion+1,_BatteryVolt+1
  2040  003DFE                     
  2041                           ;main.c: 69:     printf("BVolt: %d\n", BatteryVolt);
  2042  003DFE  0E3E               	movlw	low STR_1
  2043  003E00  0100               	movlb	0	; () banked
  2044  003E02  6FD4               	movwf	printf@fmt& (0+255),b
  2045  003E04  0E10               	movlw	high STR_1
  2046  003E06  6FD5               	movwf	(printf@fmt+1)& (0+255),b
  2047  003E08  C084  F0D6         	movff	_BatteryVolt,?_printf+2
  2048  003E0C  C085  F0D7         	movff	_BatteryVolt+1,?_printf+3
  2049  003E10  ECD0  F01E         	call	_printf	;wreg free
  2050  003E14  0012               	return		;funcret
  2051  003E16                     __end_of_getBatteryVoltage:
  2052                           	callstack 0
  2053                           
  2054 ;; *************** function _printf *****************
  2055 ;; Defined at:
  2056 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\printf.c"
  2057 ;; Parameters:    Size  Location     Type
  2058 ;;  fmt             2   50[BANK0 ] PTR const unsigned char 
  2059 ;;		 -> STR_10(10), STR_9(12), STR_8(11), STR_7(11), 
  2060 ;;		 -> STR_6(9), STR_5(2), STR_4(14), STR_3(13), 
  2061 ;;		 -> STR_2(22), STR_1(11), 
  2062 ;; Auto vars:     Size  Location     Type
  2063 ;;  ap              2   56[BANK0 ] PTR void [1]
  2064 ;;		 -> ?_printf(2), 
  2065 ;;  ret             2    0        int 
  2066 ;; Return value:  Size  Location     Type
  2067 ;;                  2   50[BANK0 ] int 
  2068 ;; Registers used:
  2069 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2070 ;; Tracked objects:
  2071 ;;		On entry : 0/0
  2072 ;;		On exit  : 0/0
  2073 ;;		Unchanged: 0/0
  2074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2075 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2076 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2078 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2079 ;;Total ram usage:        8 bytes
  2080 ;; Hardware stack levels used: 1
  2081 ;; Hardware stack levels required when called: 16
  2082 ;; This function calls:
  2083 ;;		_vfprintf
  2084 ;; This function is called by:
  2085 ;;		_getBatteryVoltage
  2086 ;;		_getCurve
  2087 ;; This function uses a non-reentrant model
  2088 ;;
  2089                           
  2090                           	psect	text5
  2091  003DA0                     __ptext5:
  2092                           	callstack 0
  2093  003DA0                     _printf:
  2094                           	callstack 12
  2095  003DA0  0ED6               	movlw	low (?_printf+2)
  2096  003DA2  0100               	movlb	0	; () banked
  2097  003DA4  6FDA               	movwf	printf@ap& (0+255),b
  2098  003DA6  0E00               	movlw	high (?_printf+2)
  2099  003DA8  6FDB               	movwf	(printf@ap+1)& (0+255),b
  2100  003DAA                     
  2101                           ; BSR set to: 0
  2102  003DAA  0E00               	movlw	0
  2103  003DAC  6FCC               	movwf	vfprintf@fp& (0+255),b
  2104  003DAE  0E00               	movlw	0
  2105  003DB0  6FCD               	movwf	(vfprintf@fp+1)& (0+255),b
  2106  003DB2  C0D4  F0CE         	movff	printf@fmt,vfprintf@fmt
  2107  003DB6  C0D5  F0CF         	movff	printf@fmt+1,vfprintf@fmt+1
  2108  003DBA  0EDA               	movlw	low printf@ap
  2109  003DBC  6FD0               	movwf	vfprintf@ap& (0+255),b
  2110  003DBE  0E00               	movlw	high printf@ap
  2111  003DC0  6FD1               	movwf	(vfprintf@ap+1)& (0+255),b
  2112  003DC2  ECBC  F01A         	call	_vfprintf	;wreg free
  2113  003DC6  0012               	return		;funcret
  2114  003DC8                     __end_of_printf:
  2115                           	callstack 0
  2116                           
  2117 ;; *************** function _vfprintf *****************
  2118 ;; Defined at:
  2119 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2120 ;; Parameters:    Size  Location     Type
  2121 ;;  fp              2   42[BANK0 ] PTR struct _IO_FILE
  2122 ;;		 -> NULL(0), 
  2123 ;;  fmt             2   44[BANK0 ] PTR const unsigned char 
  2124 ;;		 -> STR_10(10), STR_9(12), STR_8(11), STR_7(11), 
  2125 ;;		 -> STR_6(9), STR_5(2), STR_4(14), STR_3(13), 
  2126 ;;		 -> STR_2(22), STR_1(11), 
  2127 ;;  ap              2   46[BANK0 ] PTR PTR void 
  2128 ;;		 -> printf@ap(2), 
  2129 ;; Auto vars:     Size  Location     Type
  2130 ;;  cfmt            2   48[BANK0 ] PTR unsigned char 
  2131 ;;		 -> STR_10(10), STR_9(12), STR_8(11), STR_7(11), 
  2132 ;;		 -> STR_6(9), STR_5(2), STR_4(14), STR_3(13), 
  2133 ;;		 -> STR_2(22), STR_1(11), 
  2134 ;; Return value:  Size  Location     Type
  2135 ;;                  2   42[BANK0 ] int 
  2136 ;; Registers used:
  2137 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2138 ;; Tracked objects:
  2139 ;;		On entry : 0/0
  2140 ;;		On exit  : 0/0
  2141 ;;		Unchanged: 0/0
  2142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2143 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2144 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2146 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2147 ;;Total ram usage:        8 bytes
  2148 ;; Hardware stack levels used: 1
  2149 ;; Hardware stack levels required when called: 15
  2150 ;; This function calls:
  2151 ;;		_vfpfcnvrt
  2152 ;; This function is called by:
  2153 ;;		_printf
  2154 ;; This function uses a non-reentrant model
  2155 ;;
  2156                           
  2157                           	psect	text6
  2158  003578                     __ptext6:
  2159                           	callstack 0
  2160  003578                     _vfprintf:
  2161                           	callstack 12
  2162  003578                     
  2163                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  2164  003578  C0CE  F0D2         	movff	vfprintf@fmt,vfprintf@cfmt
  2165  00357C  C0CF  F0D3         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2166  003580                     
  2167                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  2168  003580  0E00               	movlw	0
  2169  003582  0100               	movlb	0	; () banked
  2170  003584  6F81               	movwf	(_nout+1)& (0+255),b
  2171  003586  0E00               	movlw	0
  2172  003588  6F80               	movwf	_nout& (0+255),b
  2173                           
  2174                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2175  00358A  EFDA  F01A         	goto	l5802
  2176  00358E                     l5800:
  2177                           
  2178                           ; BSR set to: 0
  2179                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  2180  00358E  C0CC  F0BC         	movff	vfprintf@fp,vfpfcnvrt@fp
  2181  003592  C0CD  F0BD         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2182  003596  0ED2               	movlw	low vfprintf@cfmt
  2183  003598  6FBE               	movwf	vfpfcnvrt@fmt& (0+255),b
  2184  00359A  0E00               	movlw	high vfprintf@cfmt
  2185  00359C  6FBF               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2186  00359E  C0D0  F0C0         	movff	vfprintf@ap,vfpfcnvrt@ap
  2187  0035A2  C0D1  F0C1         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2188  0035A6  EC36  F00E         	call	_vfpfcnvrt	;wreg free
  2189  0035AA  0100               	movlb	0	; () banked
  2190  0035AC  51BC               	movf	?_vfpfcnvrt& (0+255),w,b
  2191  0035AE  2780               	addwf	_nout& (0+255),f,b
  2192  0035B0  51BD               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  2193  0035B2  2381               	addwfc	(_nout+1)& (0+255),f,b
  2194  0035B4                     l5802:
  2195                           
  2196                           ; BSR set to: 0
  2197                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2198  0035B4  0060  F34B  FFF6   	movff	vfprintf@cfmt,tblptrl
  2199  0035BA  0060  F34F  FFF7   	movff	vfprintf@cfmt+1,tblptrh
  2200  0035C0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2201  0035C0  6AF8               	clrf	tblptru,c
  2202  0035C2                     	endif
  2203  0035C2                     	if	0	;tblptru may be non-zero
  2204  0035C2                     	endif
  2205  0035C2  0008               	tblrd		*
  2206  0035C4  50F5               	movf	tablat,w,c
  2207  0035C6  0900               	iorlw	0
  2208  0035C8  A4D8               	btfss	status,2,c
  2209  0035CA  EFE9  F01A         	goto	u4781
  2210  0035CE  EFEB  F01A         	goto	u4780
  2211  0035D2                     u4781:
  2212  0035D2  EFC7  F01A         	goto	l5800
  2213  0035D6                     u4780:
  2214  0035D6                     
  2215                           ; BSR set to: 0
  2216                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  2217  0035D6  C080  F0CC         	movff	_nout,?_vfprintf
  2218  0035DA  C081  F0CD         	movff	_nout+1,?_vfprintf+1
  2219  0035DE                     
  2220                           ; BSR set to: 0
  2221  0035DE  0012               	return		;funcret
  2222  0035E0                     __end_of_vfprintf:
  2223                           	callstack 0
  2224                           
  2225 ;; *************** function _vfpfcnvrt *****************
  2226 ;; Defined at:
  2227 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2228 ;; Parameters:    Size  Location     Type
  2229 ;;  fp              2   26[BANK0 ] PTR struct _IO_FILE
  2230 ;;		 -> NULL(0), 
  2231 ;;  fmt             2   28[BANK0 ] PTR PTR unsigned char 
  2232 ;;		 -> vfprintf@cfmt(2), 
  2233 ;;  ap              2   30[BANK0 ] PTR PTR void 
  2234 ;;		 -> printf@ap(2), 
  2235 ;; Auto vars:     Size  Location     Type
  2236 ;;  ll              8   34[BANK0 ] long long 
  2237 ;;  llu             8    0        unsigned long long 
  2238 ;;  f               4    0        unsigned long long 
  2239 ;;  vp              3    0        PTR void 
  2240 ;;  ct              3    0        unsigned char [3]
  2241 ;;  cp              3    0        PTR unsigned char 
  2242 ;;  i               2    0        int 
  2243 ;;  done            2    0        int 
  2244 ;;  c               1    0        unsigned char 
  2245 ;; Return value:  Size  Location     Type
  2246 ;;                  2   26[BANK0 ] int 
  2247 ;; Registers used:
  2248 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2249 ;; Tracked objects:
  2250 ;;		On entry : 0/0
  2251 ;;		On exit  : 0/0
  2252 ;;		Unchanged: 0/0
  2253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2254 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2255 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2256 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2257 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2258 ;;Total ram usage:       16 bytes
  2259 ;; Hardware stack levels used: 1
  2260 ;; Hardware stack levels required when called: 14
  2261 ;; This function calls:
  2262 ;;		_dtoa
  2263 ;;		_fputc
  2264 ;; This function is called by:
  2265 ;;		_vfprintf
  2266 ;; This function uses a non-reentrant model
  2267 ;;
  2268                           
  2269                           	psect	text7
  2270  001C6C                     __ptext7:
  2271                           	callstack 0
  2272  001C6C                     _vfpfcnvrt:
  2273                           	callstack 12
  2274  001C6C                     
  2275                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  2276  001C6C  0060  F2FB  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2277  001C72  0060  F2FF  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2278  001C78  006F FF7B FFF6     	movff	postinc2,tblptrl
  2279  001C7E  006F FF77 FFF7     	movff	postdec2,tblptrh
  2280  001C84                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2281  001C84  6AF8               	clrf	tblptru,c
  2282  001C86                     	endif
  2283  001C86                     	if	0	;tblptru may be non-zero
  2284  001C86                     	endif
  2285  001C86  0008               	tblrd		*
  2286  001C88  50F5               	movf	tablat,w,c
  2287  001C8A  0A25               	xorlw	37
  2288  001C8C  A4D8               	btfss	status,2,c
  2289  001C8E  EF4B  F00E         	goto	u4741
  2290  001C92  EF4D  F00E         	goto	u4740
  2291  001C96                     u4741:
  2292  001C96  EF19  F00F         	goto	l5788
  2293  001C9A                     u4740:
  2294  001C9A                     
  2295                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  2296  001C9A  0060  F2FB  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2297  001CA0  0060  F2FF  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2298  001CA6  2ADE               	incf	postinc2,f,c
  2299  001CA8  0E00               	movlw	0
  2300  001CAA  22DD               	addwfc	postdec2,f,c
  2301  001CAC                     
  2302                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  2303  001CAC  0E00               	movlw	0
  2304  001CAE  0100               	movlb	0	; () banked
  2305  001CB0  6F83               	movwf	(_width+1)& (0+255),b
  2306  001CB2  0E00               	movlw	0
  2307  001CB4  6F82               	movwf	_width& (0+255),b
  2308  001CB6  C082  F03D         	movff	_width,_flags
  2309  001CBA  C083  F03E         	movff	_width+1,_flags+1
  2310  001CBE                     
  2311                           ; BSR set to: 0
  2312                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  2313  001CBE  683B               	setf	_prec^0,c
  2314  001CC0  683C               	setf	(_prec+1)^0,c
  2315  001CC2                     
  2316                           ; BSR set to: 0
  2317                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2318  001CC2  0060  F2FB  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2319  001CC8  0060  F2FF  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2320  001CCE  006F FF7B FFF6     	movff	postinc2,tblptrl
  2321  001CD4  006F FF77 FFF7     	movff	postdec2,tblptrh
  2322  001CDA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2323  001CDA  6AF8               	clrf	tblptru,c
  2324  001CDC                     	endif
  2325  001CDC                     	if	0	;tblptru may be non-zero
  2326  001CDC                     	endif
  2327  001CDC  0008               	tblrd		*
  2328  001CDE  50F5               	movf	tablat,w,c
  2329  001CE0  0A64               	xorlw	100
  2330  001CE2  B4D8               	btfsc	status,2,c
  2331  001CE4  EF76  F00E         	goto	u4751
  2332  001CE8  EF78  F00E         	goto	u4750
  2333  001CEC                     u4751:
  2334  001CEC  EF8F  F00E         	goto	l5766
  2335  001CF0                     u4750:
  2336  001CF0                     
  2337                           ; BSR set to: 0
  2338  001CF0  0060  F2FB  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2339  001CF6  0060  F2FF  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2340  001CFC  006F FF7B FFF6     	movff	postinc2,tblptrl
  2341  001D02  006F FF77 FFF7     	movff	postdec2,tblptrh
  2342  001D08                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2343  001D08  6AF8               	clrf	tblptru,c
  2344  001D0A                     	endif
  2345  001D0A                     	if	0	;tblptru may be non-zero
  2346  001D0A                     	endif
  2347  001D0A  0008               	tblrd		*
  2348  001D0C  50F5               	movf	tablat,w,c
  2349  001D0E  0A69               	xorlw	105
  2350  001D10  A4D8               	btfss	status,2,c
  2351  001D12  EF8D  F00E         	goto	u4761
  2352  001D16  EF8F  F00E         	goto	u4760
  2353  001D1A                     u4761:
  2354  001D1A  EFD9  F00E         	goto	l5772
  2355  001D1E                     u4760:
  2356  001D1E                     l5766:
  2357                           
  2358                           ; BSR set to: 0
  2359                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  2360  001D1E  0060  F2FB  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2361  001D24  0060  F2FF  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2362  001D2A  2ADE               	incf	postinc2,f,c
  2363  001D2C  0E00               	movlw	0
  2364  001D2E  22DD               	addwfc	postdec2,f,c
  2365                           
  2366                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2367  001D30  0060  F303  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  2368  001D36  0060  F307  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  2369  001D3C  006F FF7C  F0C2    	movff	indf2,??_vfpfcnvrt
  2370  001D42  0E02               	movlw	2
  2371  001D44  26DE               	addwf	postinc2,f,c
  2372  001D46  006F FF7C  F0C3    	movff	indf2,??_vfpfcnvrt+1
  2373  001D4C  0E00               	movlw	0
  2374  001D4E  22DD               	addwfc	postdec2,f,c
  2375  001D50  0060  F30B  FFD9   	movff	??_vfpfcnvrt,fsr2l
  2376  001D56  0060  F30F  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  2377  001D5C  006F FF78  F0C4    	movff	postinc2,vfpfcnvrt@ll
  2378  001D62  006F FF74  F0C5    	movff	postdec2,vfpfcnvrt@ll+1
  2379  001D68  0E00               	movlw	0
  2380  001D6A  BFC5               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  2381  001D6C  0EFF               	movlw	-1
  2382  001D6E  6FC6               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  2383  001D70  6FC7               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  2384  001D72  6FC8               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  2385  001D74  6FC9               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  2386  001D76  6FCA               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  2387  001D78  6FCB               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  2388  001D7A                     
  2389                           ; BSR set to: 0
  2390                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  2391  001D7A  C0BC  F031         	movff	vfpfcnvrt@fp,dtoa@fp
  2392  001D7E  C0BD  F032         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2393  001D82  C0C4  F033         	movff	vfpfcnvrt@ll,dtoa@d
  2394  001D86  C0C5  F034         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2395  001D8A  C0C6  F035         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2396  001D8E  C0C7  F036         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2397  001D92  C0C8  F037         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2398  001D96  C0C9  F038         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2399  001D9A  C0CA  F039         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2400  001D9E  C0CB  F03A         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2401  001DA2  ECC3  F00C         	call	_dtoa	;wreg free
  2402  001DA6  C031  F0BC         	movff	?_dtoa,?_vfpfcnvrt
  2403  001DAA  C032  F0BD         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2404  001DAE  EF3B  F00F         	goto	l2082
  2405  001DB2                     l5772:
  2406                           
  2407                           ; BSR set to: 0
  2408                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2409  001DB2  0060  F2FB  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2410  001DB8  0060  F2FF  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2411  001DBE  006F FF7B FFF6     	movff	postinc2,tblptrl
  2412  001DC4  006F FF77 FFF7     	movff	postdec2,tblptrh
  2413  001DCA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2414  001DCA  6AF8               	clrf	tblptru,c
  2415  001DCC                     	endif
  2416  001DCC                     	if	0	;tblptru may be non-zero
  2417  001DCC                     	endif
  2418  001DCC  0008               	tblrd		*
  2419  001DCE  50F5               	movf	tablat,w,c
  2420  001DD0  0A25               	xorlw	37
  2421  001DD2  A4D8               	btfss	status,2,c
  2422  001DD4  EFEE  F00E         	goto	u4771
  2423  001DD8  EFF0  F00E         	goto	u4770
  2424  001DDC                     u4771:
  2425  001DDC  EF0A  F00F         	goto	l5782
  2426  001DE0                     u4770:
  2427  001DE0                     
  2428                           ; BSR set to: 0
  2429                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2430  001DE0  0060  F2FB  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2431  001DE6  0060  F2FF  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2432  001DEC  2ADE               	incf	postinc2,f,c
  2433  001DEE  0E00               	movlw	0
  2434  001DF0  22DD               	addwfc	postdec2,f,c
  2435  001DF2                     
  2436                           ; BSR set to: 0
  2437                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2438  001DF2  0E00               	movlw	0
  2439  001DF4  6E17               	movwf	(fputc@c+1)^0,c
  2440  001DF6  0E25               	movlw	37
  2441  001DF8  6E16               	movwf	fputc@c^0,c
  2442  001DFA  C0BC  F018         	movff	vfpfcnvrt@fp,fputc@fp
  2443  001DFE  C0BD  F019         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2444  001E02  ECF3  F019         	call	_fputc	;wreg free
  2445  001E06                     l5778:
  2446                           
  2447                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2448  001E06  0E00               	movlw	0
  2449  001E08  0100               	movlb	0	; () banked
  2450  001E0A  6FBD               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2451  001E0C  0E01               	movlw	1
  2452  001E0E  6FBC               	movwf	?_vfpfcnvrt& (0+255),b
  2453  001E10  EF3B  F00F         	goto	l2082
  2454  001E14                     l5782:
  2455                           
  2456                           ; BSR set to: 0
  2457                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2458  001E14  0060  F2FB  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2459  001E1A  0060  F2FF  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2460  001E20  2ADE               	incf	postinc2,f,c
  2461  001E22  0E00               	movlw	0
  2462  001E24  22DD               	addwfc	postdec2,f,c
  2463  001E26                     
  2464                           ; BSR set to: 0
  2465                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2466  001E26  0E00               	movlw	0
  2467  001E28  6FBD               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2468  001E2A  0E00               	movlw	0
  2469  001E2C  6FBC               	movwf	?_vfpfcnvrt& (0+255),b
  2470  001E2E  EF3B  F00F         	goto	l2082
  2471  001E32                     l5788:
  2472                           
  2473                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2474  001E32  0060  F2FB  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2475  001E38  0060  F2FF  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2476  001E3E  006F FF7B FFF6     	movff	postinc2,tblptrl
  2477  001E44  006F FF77 FFF7     	movff	postdec2,tblptrh
  2478  001E4A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2479  001E4A  6AF8               	clrf	tblptru,c
  2480  001E4C                     	endif
  2481  001E4C                     	if	0	;tblptru may be non-zero
  2482  001E4C                     	endif
  2483  001E4C  0008               	tblrd		*
  2484  001E4E  50F5               	movf	tablat,w,c
  2485  001E50  6E16               	movwf	fputc@c^0,c
  2486  001E52  6A17               	clrf	(fputc@c+1)^0,c
  2487  001E54  C0BC  F018         	movff	vfpfcnvrt@fp,fputc@fp
  2488  001E58  C0BD  F019         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2489  001E5C  ECF3  F019         	call	_fputc	;wreg free
  2490  001E60                     
  2491                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2492  001E60  0060  F2FB  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2493  001E66  0060  F2FF  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2494  001E6C  2ADE               	incf	postinc2,f,c
  2495  001E6E  0E00               	movlw	0
  2496  001E70  22DD               	addwfc	postdec2,f,c
  2497  001E72  EF03  F00F         	goto	l5778
  2498  001E76                     l2082:
  2499  001E76  0012               	return		;funcret
  2500  001E78                     __end_of_vfpfcnvrt:
  2501                           	callstack 0
  2502                           
  2503 ;; *************** function _dtoa *****************
  2504 ;; Defined at:
  2505 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2506 ;; Parameters:    Size  Location     Type
  2507 ;;  fp              2   48[COMRAM] PTR struct _IO_FILE
  2508 ;;		 -> NULL(0), 
  2509 ;;  d               8   50[COMRAM] long long 
  2510 ;; Auto vars:     Size  Location     Type
  2511 ;;  n               8   16[BANK0 ] long long 
  2512 ;;  i               2   24[BANK0 ] int 
  2513 ;;  s               2   14[BANK0 ] int 
  2514 ;;  w               2   12[BANK0 ] int 
  2515 ;;  p               2   10[BANK0 ] int 
  2516 ;; Return value:  Size  Location     Type
  2517 ;;                  2   48[COMRAM] int 
  2518 ;; Registers used:
  2519 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2520 ;; Tracked objects:
  2521 ;;		On entry : 0/0
  2522 ;;		On exit  : 0/0
  2523 ;;		Unchanged: 0/0
  2524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2525 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2526 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2527 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2528 ;;      Totals:        10      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2529 ;;Total ram usage:       36 bytes
  2530 ;; Hardware stack levels used: 1
  2531 ;; Hardware stack levels required when called: 13
  2532 ;; This function calls:
  2533 ;;		___aodiv
  2534 ;;		___aomod
  2535 ;;		_abs
  2536 ;;		_pad
  2537 ;; This function is called by:
  2538 ;;		_vfpfcnvrt
  2539 ;; This function uses a non-reentrant model
  2540 ;;
  2541                           
  2542                           	psect	text8
  2543  001986                     __ptext8:
  2544                           	callstack 0
  2545  001986                     _dtoa:
  2546                           	callstack 12
  2547  001986                     
  2548                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  2549  001986  C033  F0B2         	movff	dtoa@d,dtoa@n
  2550  00198A  C034  F0B3         	movff	dtoa@d+1,dtoa@n+1
  2551  00198E  C035  F0B4         	movff	dtoa@d+2,dtoa@n+2
  2552  001992  C036  F0B5         	movff	dtoa@d+3,dtoa@n+3
  2553  001996  C037  F0B6         	movff	dtoa@d+4,dtoa@n+4
  2554  00199A  C038  F0B7         	movff	dtoa@d+5,dtoa@n+5
  2555  00199E  C039  F0B8         	movff	dtoa@d+6,dtoa@n+6
  2556  0019A2  C03A  F0B9         	movff	dtoa@d+7,dtoa@n+7
  2557  0019A6                     
  2558                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  2559  0019A6  0100               	movlb	0	; () banked
  2560  0019A8  BFB9               	btfsc	(dtoa@n+7)& (0+255),7,b
  2561  0019AA  EFD9  F00C         	goto	u4591
  2562  0019AE  EFDC  F00C         	goto	u4590
  2563  0019B2                     u4591:
  2564  0019B2  0E01               	movlw	1
  2565  0019B4  EFDD  F00C         	goto	u4600
  2566  0019B8                     u4590:
  2567  0019B8  0E00               	movlw	0
  2568  0019BA                     u4600:
  2569  0019BA  6FB0               	movwf	dtoa@s& (0+255),b
  2570  0019BC  6BB1               	clrf	(dtoa@s+1)& (0+255),b
  2571                           
  2572                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  2573  0019BE  51B0               	movf	dtoa@s& (0+255),w,b
  2574  0019C0  11B1               	iorwf	(dtoa@s+1)& (0+255),w,b
  2575  0019C2  B4D8               	btfsc	status,2,c
  2576  0019C4  EFE6  F00C         	goto	u4611
  2577  0019C8  EFE8  F00C         	goto	u4610
  2578  0019CC                     u4611:
  2579  0019CC  EFF8  F00C         	goto	l5698
  2580  0019D0                     u4610:
  2581  0019D0                     
  2582                           ; BSR set to: 0
  2583                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  2584  0019D0  1FB9               	comf	(dtoa@n+7)& (0+255),f,b
  2585  0019D2  1FB8               	comf	(dtoa@n+6)& (0+255),f,b
  2586  0019D4  1FB7               	comf	(dtoa@n+5)& (0+255),f,b
  2587  0019D6  1FB6               	comf	(dtoa@n+4)& (0+255),f,b
  2588  0019D8  1FB5               	comf	(dtoa@n+3)& (0+255),f,b
  2589  0019DA  1FB4               	comf	(dtoa@n+2)& (0+255),f,b
  2590  0019DC  1FB3               	comf	(dtoa@n+1)& (0+255),f,b
  2591  0019DE  6DB2               	negf	dtoa@n& (0+255),b
  2592  0019E0  0E00               	movlw	0
  2593  0019E2  23B3               	addwfc	(dtoa@n+1)& (0+255),f,b
  2594  0019E4  23B4               	addwfc	(dtoa@n+2)& (0+255),f,b
  2595  0019E6  23B5               	addwfc	(dtoa@n+3)& (0+255),f,b
  2596  0019E8  23B6               	addwfc	(dtoa@n+4)& (0+255),f,b
  2597  0019EA  23B7               	addwfc	(dtoa@n+5)& (0+255),f,b
  2598  0019EC  23B8               	addwfc	(dtoa@n+6)& (0+255),f,b
  2599  0019EE  23B9               	addwfc	(dtoa@n+7)& (0+255),f,b
  2600  0019F0                     l5698:
  2601                           
  2602                           ; BSR set to: 0
  2603                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  2604  0019F0  BE3C               	btfsc	(_prec+1)^0,7,c
  2605  0019F2  EFFD  F00C         	goto	u4621
  2606  0019F6  EFFF  F00C         	goto	u4620
  2607  0019FA                     u4621:
  2608  0019FA  EF00  F00D         	goto	l5702
  2609  0019FE                     u4620:
  2610  0019FE                     
  2611                           ; BSR set to: 0
  2612                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  2613  0019FE  923D               	bcf	_flags^0,1,c
  2614  001A00                     l5702:
  2615                           
  2616                           ; BSR set to: 0
  2617                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  2618  001A00  BE3C               	btfsc	(_prec+1)^0,7,c
  2619  001A02  EF0D  F00D         	goto	u4630
  2620  001A06  503C               	movf	(_prec+1)^0,w,c
  2621  001A08  E106               	bnz	u4631
  2622  001A0A  043B               	decf	_prec^0,w,c
  2623  001A0C  B0D8               	btfsc	status,0,c
  2624  001A0E  EF0B  F00D         	goto	u4631
  2625  001A12  EF0D  F00D         	goto	u4630
  2626  001A16                     u4631:
  2627  001A16  EF13  F00D         	goto	l2055
  2628  001A1A                     u4630:
  2629  001A1A                     
  2630                           ; BSR set to: 0
  2631  001A1A  0E00               	movlw	0
  2632  001A1C  6FAD               	movwf	(dtoa@p+1)& (0+255),b
  2633  001A1E  0E01               	movlw	1
  2634  001A20  6FAC               	movwf	dtoa@p& (0+255),b
  2635  001A22  EF17  F00D         	goto	l2057
  2636  001A26                     l2055:
  2637                           
  2638                           ; BSR set to: 0
  2639  001A26  C03B  F0AC         	movff	_prec,dtoa@p
  2640  001A2A  C03C  F0AD         	movff	_prec+1,dtoa@p+1
  2641  001A2E                     l2057:
  2642                           
  2643                           ; BSR set to: 0
  2644                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  2645  001A2E  C082  F0AE         	movff	_width,dtoa@w
  2646  001A32  C083  F0AF         	movff	_width+1,dtoa@w+1
  2647  001A36                     
  2648                           ; BSR set to: 0
  2649                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  2650  001A36  51B0               	movf	dtoa@s& (0+255),w,b
  2651  001A38  11B1               	iorwf	(dtoa@s+1)& (0+255),w,b
  2652  001A3A  A4D8               	btfss	status,2,c
  2653  001A3C  EF22  F00D         	goto	u4641
  2654  001A40  EF24  F00D         	goto	u4640
  2655  001A44                     u4641:
  2656  001A44  EF2B  F00D         	goto	l5710
  2657  001A48                     u4640:
  2658  001A48                     
  2659                           ; BSR set to: 0
  2660  001A48  A43D               	btfss	_flags^0,2,c
  2661  001A4A  EF29  F00D         	goto	u4651
  2662  001A4E  EF2B  F00D         	goto	u4650
  2663  001A52                     u4651:
  2664  001A52  EF2E  F00D         	goto	l5712
  2665  001A56                     u4650:
  2666  001A56                     l5710:
  2667                           
  2668                           ; BSR set to: 0
  2669                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  2670  001A56  07AE               	decf	dtoa@w& (0+255),f,b
  2671  001A58  A0D8               	btfss	status,0,c
  2672  001A5A  07AF               	decf	(dtoa@w+1)& (0+255),f,b
  2673  001A5C                     l5712:
  2674                           
  2675                           ; BSR set to: 0
  2676                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  2677  001A5C  0E00               	movlw	0
  2678  001A5E  6FBB               	movwf	(dtoa@i+1)& (0+255),b
  2679  001A60  0E1F               	movlw	31
  2680  001A62  6FBA               	movwf	dtoa@i& (0+255),b
  2681  001A64                     
  2682                           ; BSR set to: 0
  2683                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  2684  001A64  0E00               	movlw	0
  2685  001A66  0101               	movlb	1	; () banked
  2686  001A68  6F1F               	movwf	(_dbuf+31)& (0+255),b
  2687                           
  2688                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2689  001A6A  EFB4  F00D         	goto	l5726
  2690  001A6E                     l5716:
  2691                           
  2692                           ; BSR set to: 0
  2693                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  2694  001A6E  07BA               	decf	dtoa@i& (0+255),f,b
  2695  001A70  A0D8               	btfss	status,0,c
  2696  001A72  07BB               	decf	(dtoa@i+1)& (0+255),f,b
  2697  001A74                     
  2698                           ; BSR set to: 0
  2699                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  2700  001A74  0E00               	movlw	low _dbuf
  2701  001A76  25BA               	addwf	dtoa@i& (0+255),w,b
  2702  001A78  6ED9               	movwf	fsr2l,c
  2703  001A7A  0E01               	movlw	high _dbuf
  2704  001A7C  21BB               	addwfc	(dtoa@i+1)& (0+255),w,b
  2705  001A7E  6EDA               	movwf	fsr2h,c
  2706  001A80  C0B2  F014         	movff	dtoa@n,___aomod@dividend
  2707  001A84  C0B3  F015         	movff	dtoa@n+1,___aomod@dividend+1
  2708  001A88  C0B4  F016         	movff	dtoa@n+2,___aomod@dividend+2
  2709  001A8C  C0B5  F017         	movff	dtoa@n+3,___aomod@dividend+3
  2710  001A90  C0B6  F018         	movff	dtoa@n+4,___aomod@dividend+4
  2711  001A94  C0B7  F019         	movff	dtoa@n+5,___aomod@dividend+5
  2712  001A98  C0B8  F01A         	movff	dtoa@n+6,___aomod@dividend+6
  2713  001A9C  C0B9  F01B         	movff	dtoa@n+7,___aomod@dividend+7
  2714  001AA0  0E0A               	movlw	10
  2715  001AA2  6E1C               	movwf	___aomod@divisor^0,c
  2716  001AA4  0E00               	movlw	0
  2717  001AA6  6E1D               	movwf	(___aomod@divisor+1)^0,c
  2718  001AA8  0E00               	movlw	0
  2719  001AAA  6E1E               	movwf	(___aomod@divisor+2)^0,c
  2720  001AAC  0E00               	movlw	0
  2721  001AAE  6E1F               	movwf	(___aomod@divisor+3)^0,c
  2722  001AB0  0E00               	movlw	0
  2723  001AB2  6E20               	movwf	(___aomod@divisor+4)^0,c
  2724  001AB4  0E00               	movlw	0
  2725  001AB6  6E21               	movwf	(___aomod@divisor+5)^0,c
  2726  001AB8  0E00               	movlw	0
  2727  001ABA  6E22               	movwf	(___aomod@divisor+6)^0,c
  2728  001ABC  0E00               	movlw	0
  2729  001ABE  6E23               	movwf	(___aomod@divisor+7)^0,c
  2730  001AC0  ECB8  F013         	call	___aomod	;wreg free
  2731  001AC4  C014  F0A2         	movff	?___aomod,??_dtoa
  2732  001AC8  C015  F0A3         	movff	?___aomod+1,??_dtoa+1
  2733  001ACC  C016  F0A4         	movff	?___aomod+2,??_dtoa+2
  2734  001AD0  C017  F0A5         	movff	?___aomod+3,??_dtoa+3
  2735  001AD4  C018  F0A6         	movff	?___aomod+4,??_dtoa+4
  2736  001AD8  C019  F0A7         	movff	?___aomod+5,??_dtoa+5
  2737  001ADC  C01A  F0A8         	movff	?___aomod+6,??_dtoa+6
  2738  001AE0  C01B  F0A9         	movff	?___aomod+7,??_dtoa+7
  2739  001AE4  C0A2  F026         	movff	??_dtoa,abs@a
  2740  001AE8  C0A4  F027         	movff	??_dtoa+2,abs@a+1
  2741  001AEC  EC4F  F01C         	call	_abs	;wreg free
  2742  001AF0  5026               	movf	?_abs^0,w,c
  2743  001AF2  0F30               	addlw	48
  2744  001AF4  6EDF               	movwf	indf2,c
  2745  001AF6                     
  2746                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  2747  001AF6  0100               	movlb	0	; () banked
  2748  001AF8  07AC               	decf	dtoa@p& (0+255),f,b
  2749  001AFA  A0D8               	btfss	status,0,c
  2750  001AFC  07AD               	decf	(dtoa@p+1)& (0+255),f,b
  2751  001AFE                     
  2752                           ; BSR set to: 0
  2753                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  2754  001AFE  07AE               	decf	dtoa@w& (0+255),f,b
  2755  001B00  A0D8               	btfss	status,0,c
  2756  001B02  07AF               	decf	(dtoa@w+1)& (0+255),f,b
  2757  001B04                     
  2758                           ; BSR set to: 0
  2759                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  2760  001B04  C0B2  F014         	movff	dtoa@n,___aodiv@dividend
  2761  001B08  C0B3  F015         	movff	dtoa@n+1,___aodiv@dividend+1
  2762  001B0C  C0B4  F016         	movff	dtoa@n+2,___aodiv@dividend+2
  2763  001B10  C0B5  F017         	movff	dtoa@n+3,___aodiv@dividend+3
  2764  001B14  C0B6  F018         	movff	dtoa@n+4,___aodiv@dividend+4
  2765  001B18  C0B7  F019         	movff	dtoa@n+5,___aodiv@dividend+5
  2766  001B1C  C0B8  F01A         	movff	dtoa@n+6,___aodiv@dividend+6
  2767  001B20  C0B9  F01B         	movff	dtoa@n+7,___aodiv@dividend+7
  2768  001B24  0E0A               	movlw	10
  2769  001B26  6E1C               	movwf	___aodiv@divisor^0,c
  2770  001B28  0E00               	movlw	0
  2771  001B2A  6E1D               	movwf	(___aodiv@divisor+1)^0,c
  2772  001B2C  0E00               	movlw	0
  2773  001B2E  6E1E               	movwf	(___aodiv@divisor+2)^0,c
  2774  001B30  0E00               	movlw	0
  2775  001B32  6E1F               	movwf	(___aodiv@divisor+3)^0,c
  2776  001B34  0E00               	movlw	0
  2777  001B36  6E20               	movwf	(___aodiv@divisor+4)^0,c
  2778  001B38  0E00               	movlw	0
  2779  001B3A  6E21               	movwf	(___aodiv@divisor+5)^0,c
  2780  001B3C  0E00               	movlw	0
  2781  001B3E  6E22               	movwf	(___aodiv@divisor+6)^0,c
  2782  001B40  0E00               	movlw	0
  2783  001B42  6E23               	movwf	(___aodiv@divisor+7)^0,c
  2784  001B44  ECF4  F012         	call	___aodiv	;wreg free
  2785  001B48  C014  F0B2         	movff	?___aodiv,dtoa@n
  2786  001B4C  C015  F0B3         	movff	?___aodiv+1,dtoa@n+1
  2787  001B50  C016  F0B4         	movff	?___aodiv+2,dtoa@n+2
  2788  001B54  C017  F0B5         	movff	?___aodiv+3,dtoa@n+3
  2789  001B58  C018  F0B6         	movff	?___aodiv+4,dtoa@n+4
  2790  001B5C  C019  F0B7         	movff	?___aodiv+5,dtoa@n+5
  2791  001B60  C01A  F0B8         	movff	?___aodiv+6,dtoa@n+6
  2792  001B64  C01B  F0B9         	movff	?___aodiv+7,dtoa@n+7
  2793  001B68                     l5726:
  2794                           
  2795                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2796  001B68  0100               	movlb	0	; () banked
  2797  001B6A  BFBB               	btfsc	(dtoa@i+1)& (0+255),7,b
  2798  001B6C  EFC0  F00D         	goto	u4661
  2799  001B70  51BB               	movf	(dtoa@i+1)& (0+255),w,b
  2800  001B72  E108               	bnz	u4660
  2801  001B74  05BA               	decf	dtoa@i& (0+255),w,b
  2802  001B76  A0D8               	btfss	status,0,c
  2803  001B78  EFC0  F00D         	goto	u4661
  2804  001B7C  EFC2  F00D         	goto	u4660
  2805  001B80                     u4661:
  2806  001B80  EFF2  F00D         	goto	l5736
  2807  001B84                     u4660:
  2808  001B84                     
  2809                           ; BSR set to: 0
  2810  001B84  51B2               	movf	dtoa@n& (0+255),w,b
  2811  001B86  11B3               	iorwf	(dtoa@n+1)& (0+255),w,b
  2812  001B88  11B4               	iorwf	(dtoa@n+2)& (0+255),w,b
  2813  001B8A  11B5               	iorwf	(dtoa@n+3)& (0+255),w,b
  2814  001B8C  11B6               	iorwf	(dtoa@n+4)& (0+255),w,b
  2815  001B8E  11B7               	iorwf	(dtoa@n+5)& (0+255),w,b
  2816  001B90  11B8               	iorwf	(dtoa@n+6)& (0+255),w,b
  2817  001B92  11B9               	iorwf	(dtoa@n+7)& (0+255),w,b
  2818  001B94  A4D8               	btfss	status,2,c
  2819  001B96  EFCF  F00D         	goto	u4671
  2820  001B9A  EFD1  F00D         	goto	u4670
  2821  001B9E                     u4671:
  2822  001B9E  EF37  F00D         	goto	l5716
  2823  001BA2                     u4670:
  2824  001BA2                     
  2825                           ; BSR set to: 0
  2826  001BA2  BFAD               	btfsc	(dtoa@p+1)& (0+255),7,b
  2827  001BA4  EFDE  F00D         	goto	u4680
  2828  001BA8  51AD               	movf	(dtoa@p+1)& (0+255),w,b
  2829  001BAA  E106               	bnz	u4681
  2830  001BAC  05AC               	decf	dtoa@p& (0+255),w,b
  2831  001BAE  B0D8               	btfsc	status,0,c
  2832  001BB0  EFDC  F00D         	goto	u4681
  2833  001BB4  EFDE  F00D         	goto	u4680
  2834  001BB8                     u4681:
  2835  001BB8  EF37  F00D         	goto	l5716
  2836  001BBC                     u4680:
  2837  001BBC                     
  2838                           ; BSR set to: 0
  2839  001BBC  BFAF               	btfsc	(dtoa@w+1)& (0+255),7,b
  2840  001BBE  EFE9  F00D         	goto	u4691
  2841  001BC2  51AF               	movf	(dtoa@w+1)& (0+255),w,b
  2842  001BC4  E108               	bnz	u4690
  2843  001BC6  05AE               	decf	dtoa@w& (0+255),w,b
  2844  001BC8  A0D8               	btfss	status,0,c
  2845  001BCA  EFE9  F00D         	goto	u4691
  2846  001BCE  EFEB  F00D         	goto	u4690
  2847  001BD2                     u4691:
  2848  001BD2  EFF2  F00D         	goto	l5736
  2849  001BD6                     u4690:
  2850  001BD6                     
  2851                           ; BSR set to: 0
  2852  001BD6  B23D               	btfsc	_flags^0,1,c
  2853  001BD8  EFF0  F00D         	goto	u4701
  2854  001BDC  EFF2  F00D         	goto	u4700
  2855  001BE0                     u4701:
  2856  001BE0  EF37  F00D         	goto	l5716
  2857  001BE4                     u4700:
  2858  001BE4                     l5736:
  2859                           
  2860                           ; BSR set to: 0
  2861                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  2862  001BE4  51B0               	movf	dtoa@s& (0+255),w,b
  2863  001BE6  11B1               	iorwf	(dtoa@s+1)& (0+255),w,b
  2864  001BE8  A4D8               	btfss	status,2,c
  2865  001BEA  EFF9  F00D         	goto	u4711
  2866  001BEE  EFFB  F00D         	goto	u4710
  2867  001BF2                     u4711:
  2868  001BF2  EF02  F00E         	goto	l5740
  2869  001BF6                     u4710:
  2870  001BF6                     
  2871                           ; BSR set to: 0
  2872  001BF6  A43D               	btfss	_flags^0,2,c
  2873  001BF8  EF00  F00E         	goto	u4721
  2874  001BFC  EF02  F00E         	goto	u4720
  2875  001C00                     u4721:
  2876  001C00  EF21  F00E         	goto	l5750
  2877  001C04                     u4720:
  2878  001C04                     l5740:
  2879                           
  2880                           ; BSR set to: 0
  2881                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  2882  001C04  07BA               	decf	dtoa@i& (0+255),f,b
  2883  001C06  A0D8               	btfss	status,0,c
  2884  001C08  07BB               	decf	(dtoa@i+1)& (0+255),f,b
  2885  001C0A                     
  2886                           ; BSR set to: 0
  2887                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  2888  001C0A  51B0               	movf	dtoa@s& (0+255),w,b
  2889  001C0C  11B1               	iorwf	(dtoa@s+1)& (0+255),w,b
  2890  001C0E  A4D8               	btfss	status,2,c
  2891  001C10  EF0C  F00E         	goto	u4731
  2892  001C14  EF0E  F00E         	goto	u4730
  2893  001C18                     u4731:
  2894  001C18  EF14  F00E         	goto	l5746
  2895  001C1C                     u4730:
  2896  001C1C                     
  2897                           ; BSR set to: 0
  2898  001C1C  0E00               	movlw	0
  2899  001C1E  6FAB               	movwf	(_dtoa$3484+1)& (0+255),b
  2900  001C20  0E2B               	movlw	43
  2901  001C22  6FAA               	movwf	_dtoa$3484& (0+255),b
  2902  001C24  EF18  F00E         	goto	l5748
  2903  001C28                     l5746:
  2904                           
  2905                           ; BSR set to: 0
  2906  001C28  0E00               	movlw	0
  2907  001C2A  6FAB               	movwf	(_dtoa$3484+1)& (0+255),b
  2908  001C2C  0E2D               	movlw	45
  2909  001C2E  6FAA               	movwf	_dtoa$3484& (0+255),b
  2910  001C30                     l5748:
  2911                           
  2912                           ; BSR set to: 0
  2913  001C30  0E00               	movlw	low _dbuf
  2914  001C32  25BA               	addwf	dtoa@i& (0+255),w,b
  2915  001C34  6ED9               	movwf	fsr2l,c
  2916  001C36  0E01               	movlw	high _dbuf
  2917  001C38  21BB               	addwfc	(dtoa@i+1)& (0+255),w,b
  2918  001C3A  6EDA               	movwf	fsr2h,c
  2919  001C3C  0060  F2AB  FFDF   	movff	_dtoa$3484,indf2
  2920  001C42                     l5750:
  2921                           
  2922                           ; BSR set to: 0
  2923                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  2924  001C42  C031  F026         	movff	dtoa@fp,pad@fp
  2925  001C46  C032  F027         	movff	dtoa@fp+1,pad@fp+1
  2926  001C4A  0E00               	movlw	low _dbuf
  2927  001C4C  25BA               	addwf	dtoa@i& (0+255),w,b
  2928  001C4E  6E28               	movwf	pad@buf^0,c
  2929  001C50  0E01               	movlw	high _dbuf
  2930  001C52  21BB               	addwfc	(dtoa@i+1)& (0+255),w,b
  2931  001C54  6E29               	movwf	(pad@buf+1)^0,c
  2932  001C56  C0AE  F02A         	movff	dtoa@w,pad@p
  2933  001C5A  C0AF  F02B         	movff	dtoa@w+1,pad@p+1
  2934  001C5E  ECE0  F018         	call	_pad	;wreg free
  2935  001C62  C026  F031         	movff	?_pad,?_dtoa
  2936  001C66  C027  F032         	movff	?_pad+1,?_dtoa+1
  2937  001C6A  0012               	return		;funcret
  2938  001C6C                     __end_of_dtoa:
  2939                           	callstack 0
  2940                           
  2941 ;; *************** function _pad *****************
  2942 ;; Defined at:
  2943 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2944 ;; Parameters:    Size  Location     Type
  2945 ;;  fp              2   37[COMRAM] PTR struct _IO_FILE
  2946 ;;		 -> NULL(0), 
  2947 ;;  buf             2   39[COMRAM] PTR unsigned char 
  2948 ;;		 -> dbuf(32), 
  2949 ;;  p               2   41[COMRAM] int 
  2950 ;; Auto vars:     Size  Location     Type
  2951 ;;  w               2   46[COMRAM] int 
  2952 ;;  i               2   44[COMRAM] int 
  2953 ;; Return value:  Size  Location     Type
  2954 ;;                  2   37[COMRAM] int 
  2955 ;; Registers used:
  2956 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2957 ;; Tracked objects:
  2958 ;;		On entry : 0/0
  2959 ;;		On exit  : 0/0
  2960 ;;		Unchanged: 0/0
  2961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2962 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2963 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2964 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2965 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2966 ;;Total ram usage:       11 bytes
  2967 ;; Hardware stack levels used: 1
  2968 ;; Hardware stack levels required when called: 12
  2969 ;; This function calls:
  2970 ;;		_fputc
  2971 ;;		_fputs
  2972 ;;		_strlen
  2973 ;; This function is called by:
  2974 ;;		_dtoa
  2975 ;; This function uses a non-reentrant model
  2976 ;;
  2977                           
  2978                           	psect	text9
  2979  0031C0                     __ptext9:
  2980                           	callstack 0
  2981  0031C0                     _pad:
  2982                           	callstack 12
  2983  0031C0                     
  2984                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  2985  0031C0  A03D               	btfss	_flags^0,0,c
  2986  0031C2  EFE5  F018         	goto	u4541
  2987  0031C6  EFE7  F018         	goto	u4540
  2988  0031CA                     u4541:
  2989  0031CA  EFF1  F018         	goto	l5670
  2990  0031CE                     u4540:
  2991  0031CE                     
  2992                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  2993  0031CE  C028  F01F         	movff	pad@buf,fputs@s
  2994  0031D2  C029  F020         	movff	pad@buf+1,fputs@s+1
  2995  0031D6  C026  F021         	movff	pad@fp,fputs@fp
  2996  0031DA  C027  F022         	movff	pad@fp+1,fputs@fp+1
  2997  0031DE  EC0B  F01C         	call	_fputs	;wreg free
  2998  0031E2                     l5670:
  2999                           
  3000                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  3001  0031E2  BE2B               	btfsc	(pad@p+1)^0,7,c
  3002  0031E4  EFF6  F018         	goto	u4551
  3003  0031E8  EFF8  F018         	goto	u4550
  3004  0031EC                     u4551:
  3005  0031EC  EFFE  F018         	goto	l5674
  3006  0031F0                     u4550:
  3007  0031F0  C02A  F02F         	movff	pad@p,pad@w
  3008  0031F4  C02B  F030         	movff	pad@p+1,pad@w+1
  3009  0031F8  EF02  F019         	goto	l2044
  3010  0031FC                     l5674:
  3011  0031FC  0E00               	movlw	0
  3012  0031FE  6E30               	movwf	(pad@w+1)^0,c
  3013  003200  0E00               	movlw	0
  3014  003202  6E2F               	movwf	pad@w^0,c
  3015  003204                     l2044:
  3016                           
  3017                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  3018  003204  0E00               	movlw	0
  3019  003206  6E2E               	movwf	(pad@i+1)^0,c
  3020  003208  0E00               	movlw	0
  3021  00320A  6E2D               	movwf	pad@i^0,c
  3022                           
  3023                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3024  00320C  EF14  F019         	goto	l5680
  3025  003210                     l5676:
  3026                           
  3027                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  3028  003210  0E00               	movlw	0
  3029  003212  6E17               	movwf	(fputc@c+1)^0,c
  3030  003214  0E20               	movlw	32
  3031  003216  6E16               	movwf	fputc@c^0,c
  3032  003218  C026  F018         	movff	pad@fp,fputc@fp
  3033  00321C  C027  F019         	movff	pad@fp+1,fputc@fp+1
  3034  003220  ECF3  F019         	call	_fputc	;wreg free
  3035  003224                     
  3036                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  3037  003224  4A2D               	infsnz	pad@i^0,f,c
  3038  003226  2A2E               	incf	(pad@i+1)^0,f,c
  3039  003228                     l5680:
  3040                           
  3041                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3042  003228  502F               	movf	pad@w^0,w,c
  3043  00322A  5C2D               	subwf	pad@i^0,w,c
  3044  00322C  502E               	movf	(pad@i+1)^0,w,c
  3045  00322E  0A80               	xorlw	128
  3046  003230  6E2C               	movwf	??_pad^0,c
  3047  003232  5030               	movf	(pad@w+1)^0,w,c
  3048  003234  0A80               	xorlw	128
  3049  003236  582C               	subwfb	??_pad^0,w,c
  3050  003238  A0D8               	btfss	status,0,c
  3051  00323A  EF21  F019         	goto	u4561
  3052  00323E  EF23  F019         	goto	u4560
  3053  003242                     u4561:
  3054  003242  EF08  F019         	goto	l5676
  3055  003246                     u4560:
  3056  003246                     
  3057                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  3058  003246  B03D               	btfsc	_flags^0,0,c
  3059  003248  EF28  F019         	goto	u4571
  3060  00324C  EF2A  F019         	goto	u4570
  3061  003250                     u4571:
  3062  003250  EF34  F019         	goto	l5684
  3063  003254                     u4570:
  3064  003254                     
  3065                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  3066  003254  C028  F01F         	movff	pad@buf,fputs@s
  3067  003258  C029  F020         	movff	pad@buf+1,fputs@s+1
  3068  00325C  C026  F021         	movff	pad@fp,fputs@fp
  3069  003260  C027  F022         	movff	pad@fp+1,fputs@fp+1
  3070  003264  EC0B  F01C         	call	_fputs	;wreg free
  3071  003268                     l5684:
  3072                           
  3073                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  3074  003268  C028  F014         	movff	pad@buf,strlen@s
  3075  00326C  C029  F015         	movff	pad@buf+1,strlen@s+1
  3076  003270  EC6F  F01C         	call	_strlen	;wreg free
  3077  003274  502F               	movf	pad@w^0,w,c
  3078  003276  2414               	addwf	?_strlen^0,w,c
  3079  003278  6E26               	movwf	?_pad^0,c
  3080  00327A  5030               	movf	(pad@w+1)^0,w,c
  3081  00327C  2015               	addwfc	(?_strlen+1)^0,w,c
  3082  00327E  6E27               	movwf	(?_pad+1)^0,c
  3083  003280  0012               	return		;funcret
  3084  003282                     __end_of_pad:
  3085                           	callstack 0
  3086                           
  3087 ;; *************** function _strlen *****************
  3088 ;; Defined at:
  3089 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  3090 ;; Parameters:    Size  Location     Type
  3091 ;;  s               2   19[COMRAM] PTR const unsigned char 
  3092 ;;		 -> dbuf(32), 
  3093 ;; Auto vars:     Size  Location     Type
  3094 ;;  a               2   21[COMRAM] PTR const unsigned char 
  3095 ;;		 -> dbuf(32), 
  3096 ;; Return value:  Size  Location     Type
  3097 ;;                  2   19[COMRAM] unsigned int 
  3098 ;; Registers used:
  3099 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3100 ;; Tracked objects:
  3101 ;;		On entry : 0/0
  3102 ;;		On exit  : 0/0
  3103 ;;		Unchanged: 0/0
  3104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3105 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3106 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3108 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3109 ;;Total ram usage:        4 bytes
  3110 ;; Hardware stack levels used: 1
  3111 ;; Hardware stack levels required when called: 8
  3112 ;; This function calls:
  3113 ;;		Nothing
  3114 ;; This function is called by:
  3115 ;;		_pad
  3116 ;; This function uses a non-reentrant model
  3117 ;;
  3118                           
  3119                           	psect	text10
  3120  0038DE                     __ptext10:
  3121                           	callstack 0
  3122  0038DE                     _strlen:
  3123                           	callstack 15
  3124  0038DE  C014  F016         	movff	strlen@s,strlen@a
  3125  0038E2  C015  F017         	movff	strlen@s+1,strlen@a+1
  3126  0038E6  EF77  F01C         	goto	l5580
  3127  0038EA                     l5578:
  3128  0038EA  4A14               	infsnz	strlen@s^0,f,c
  3129  0038EC  2A15               	incf	(strlen@s+1)^0,f,c
  3130  0038EE                     l5580:
  3131  0038EE  0060  F053  FFD9   	movff	strlen@s,fsr2l
  3132  0038F4  0060  F057  FFDA   	movff	strlen@s+1,fsr2h
  3133  0038FA  50DF               	movf	indf2,w,c
  3134  0038FC  A4D8               	btfss	status,2,c
  3135  0038FE  EF83  F01C         	goto	u4401
  3136  003902  EF85  F01C         	goto	u4400
  3137  003906                     u4401:
  3138  003906  EF75  F01C         	goto	l5578
  3139  00390A                     u4400:
  3140  00390A  5016               	movf	strlen@a^0,w,c
  3141  00390C  5C14               	subwf	strlen@s^0,w,c
  3142  00390E  6E14               	movwf	?_strlen^0,c
  3143  003910  5017               	movf	(strlen@a+1)^0,w,c
  3144  003912  5815               	subwfb	(strlen@s+1)^0,w,c
  3145  003914  6E15               	movwf	(?_strlen+1)^0,c
  3146  003916  0012               	return		;funcret
  3147  003918                     __end_of_strlen:
  3148                           	callstack 0
  3149                           
  3150 ;; *************** function _fputs *****************
  3151 ;; Defined at:
  3152 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  3153 ;; Parameters:    Size  Location     Type
  3154 ;;  s               2   30[COMRAM] PTR const unsigned char 
  3155 ;;		 -> dbuf(32), 
  3156 ;;  fp              2   32[COMRAM] PTR struct _IO_FILE
  3157 ;;		 -> NULL(0), 
  3158 ;; Auto vars:     Size  Location     Type
  3159 ;;  i               2   35[COMRAM] int 
  3160 ;;  c               1   34[COMRAM] unsigned char 
  3161 ;; Return value:  Size  Location     Type
  3162 ;;                  2   30[COMRAM] int 
  3163 ;; Registers used:
  3164 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3165 ;; Tracked objects:
  3166 ;;		On entry : 0/0
  3167 ;;		On exit  : 0/0
  3168 ;;		Unchanged: 0/0
  3169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3170 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3171 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3173 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3174 ;;Total ram usage:        7 bytes
  3175 ;; Hardware stack levels used: 1
  3176 ;; Hardware stack levels required when called: 11
  3177 ;; This function calls:
  3178 ;;		_fputc
  3179 ;; This function is called by:
  3180 ;;		_pad
  3181 ;; This function uses a non-reentrant model
  3182 ;;
  3183                           
  3184                           	psect	text11
  3185  003816                     __ptext11:
  3186                           	callstack 0
  3187  003816                     _fputs:
  3188                           	callstack 12
  3189  003816  0E00               	movlw	0
  3190  003818  6E25               	movwf	(fputs@i+1)^0,c
  3191  00381A  0E00               	movlw	0
  3192  00381C  6E24               	movwf	fputs@i^0,c
  3193  00381E  EF1C  F01C         	goto	l5574
  3194  003822                     l5570:
  3195  003822  C023  F016         	movff	fputs@c,fputc@c
  3196  003826  6A17               	clrf	(fputc@c+1)^0,c
  3197  003828  C021  F018         	movff	fputs@fp,fputc@fp
  3198  00382C  C022  F019         	movff	fputs@fp+1,fputc@fp+1
  3199  003830  ECF3  F019         	call	_fputc	;wreg free
  3200  003834  4A24               	infsnz	fputs@i^0,f,c
  3201  003836  2A25               	incf	(fputs@i+1)^0,f,c
  3202  003838                     l5574:
  3203  003838  5024               	movf	fputs@i^0,w,c
  3204  00383A  241F               	addwf	fputs@s^0,w,c
  3205  00383C  6ED9               	movwf	fsr2l,c
  3206  00383E  5025               	movf	(fputs@i+1)^0,w,c
  3207  003840  2020               	addwfc	(fputs@s+1)^0,w,c
  3208  003842  6EDA               	movwf	fsr2h,c
  3209  003844  50DF               	movf	indf2,w,c
  3210  003846  6E23               	movwf	fputs@c^0,c
  3211  003848  5023               	movf	fputs@c^0,w,c
  3212  00384A  A4D8               	btfss	status,2,c
  3213  00384C  EF2A  F01C         	goto	u4391
  3214  003850  EF2C  F01C         	goto	u4390
  3215  003854                     u4391:
  3216  003854  EF11  F01C         	goto	l5570
  3217  003858                     u4390:
  3218  003858  0012               	return		;funcret
  3219  00385A                     __end_of_fputs:
  3220                           	callstack 0
  3221                           
  3222 ;; *************** function _fputc *****************
  3223 ;; Defined at:
  3224 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  3225 ;; Parameters:    Size  Location     Type
  3226 ;;  c               2   21[COMRAM] int 
  3227 ;;  fp              2   23[COMRAM] PTR struct _IO_FILE
  3228 ;;		 -> NULL(0), 
  3229 ;; Auto vars:     Size  Location     Type
  3230 ;;		None
  3231 ;; Return value:  Size  Location     Type
  3232 ;;                  2   21[COMRAM] int 
  3233 ;; Registers used:
  3234 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3235 ;; Tracked objects:
  3236 ;;		On entry : 0/0
  3237 ;;		On exit  : 0/0
  3238 ;;		Unchanged: 0/0
  3239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3240 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3242 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3243 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3244 ;;Total ram usage:        9 bytes
  3245 ;; Hardware stack levels used: 1
  3246 ;; Hardware stack levels required when called: 10
  3247 ;; This function calls:
  3248 ;;		_putch
  3249 ;; This function is called by:
  3250 ;;		_pad
  3251 ;;		_vfpfcnvrt
  3252 ;;		_fputs
  3253 ;; This function uses a non-reentrant model
  3254 ;;
  3255                           
  3256                           	psect	text12
  3257  0033E6                     __ptext12:
  3258                           	callstack 0
  3259  0033E6                     _fputc:
  3260                           	callstack 15
  3261  0033E6  5018               	movf	fputc@fp^0,w,c
  3262  0033E8  1019               	iorwf	(fputc@fp+1)^0,w,c
  3263  0033EA  B4D8               	btfsc	status,2,c
  3264  0033EC  EFFA  F019         	goto	u4351
  3265  0033F0  EFFC  F019         	goto	u4350
  3266  0033F4                     u4351:
  3267  0033F4  EF05  F01A         	goto	l5558
  3268  0033F8                     u4350:
  3269  0033F8  5018               	movf	fputc@fp^0,w,c
  3270  0033FA  1019               	iorwf	(fputc@fp+1)^0,w,c
  3271  0033FC  A4D8               	btfss	status,2,c
  3272  0033FE  EF03  F01A         	goto	u4361
  3273  003402  EF05  F01A         	goto	u4360
  3274  003406                     u4361:
  3275  003406  EF0A  F01A         	goto	l5560
  3276  00340A                     u4360:
  3277  00340A                     l5558:
  3278  00340A  5016               	movf	fputc@c^0,w,c
  3279  00340C  EC9D  F01F         	call	_putch
  3280  003410  EF3D  F01A         	goto	l2108
  3281  003414                     l5560:
  3282  003414  EE20 F004          	lfsr	2,4
  3283  003418  5018               	movf	fputc@fp^0,w,c
  3284  00341A  26D9               	addwf	fsr2l,f,c
  3285  00341C  5019               	movf	(fputc@fp+1)^0,w,c
  3286  00341E  22DA               	addwfc	fsr2h,f,c
  3287  003420  50DE               	movf	postinc2,w,c
  3288  003422  10DE               	iorwf	postinc2,w,c
  3289  003424  B4D8               	btfsc	status,2,c
  3290  003426  EF17  F01A         	goto	u4371
  3291  00342A  EF19  F01A         	goto	u4370
  3292  00342E                     u4371:
  3293  00342E  EF34  F01A         	goto	l5564
  3294  003432                     u4370:
  3295  003432  EE20 F004          	lfsr	2,4
  3296  003436  5018               	movf	fputc@fp^0,w,c
  3297  003438  26D9               	addwf	fsr2l,f,c
  3298  00343A  5019               	movf	(fputc@fp+1)^0,w,c
  3299  00343C  22DA               	addwfc	fsr2h,f,c
  3300  00343E  EE10 F002          	lfsr	1,2
  3301  003442  5018               	movf	fputc@fp^0,w,c
  3302  003444  26E1               	addwf	fsr1l,f,c
  3303  003446  5019               	movf	(fputc@fp+1)^0,w,c
  3304  003448  22E2               	addwfc	fsr1h,f,c
  3305  00344A  50DE               	movf	postinc2,w,c
  3306  00344C  5CE6               	subwf	postinc1,w,c
  3307  00344E  50E6               	movf	postinc1,w,c
  3308  003450  0A80               	xorlw	128
  3309  003452  6E1E               	movwf	(??_fputc+4)^0,c
  3310  003454  50DE               	movf	postinc2,w,c
  3311  003456  0A80               	xorlw	128
  3312  003458  581E               	subwfb	(??_fputc+4)^0,w,c
  3313  00345A  B0D8               	btfsc	status,0,c
  3314  00345C  EF32  F01A         	goto	u4381
  3315  003460  EF34  F01A         	goto	u4380
  3316  003464                     u4381:
  3317  003464  EF3D  F01A         	goto	l2108
  3318  003468                     u4380:
  3319  003468                     l5564:
  3320  003468  EE20 F002          	lfsr	2,2
  3321  00346C  5018               	movf	fputc@fp^0,w,c
  3322  00346E  26D9               	addwf	fsr2l,f,c
  3323  003470  5019               	movf	(fputc@fp+1)^0,w,c
  3324  003472  22DA               	addwfc	fsr2h,f,c
  3325  003474  2ADE               	incf	postinc2,f,c
  3326  003476  0E00               	movlw	0
  3327  003478  22DD               	addwfc	postdec2,f,c
  3328  00347A                     l2108:
  3329  00347A  0012               	return		;funcret
  3330  00347C                     __end_of_fputc:
  3331                           	callstack 0
  3332                           
  3333 ;; *************** function _putch *****************
  3334 ;; Defined at:
  3335 ;;		line 230 in file "mcc_generated_files/uart1.c"
  3336 ;; Parameters:    Size  Location     Type
  3337 ;;  txData          1    wreg     unsigned char 
  3338 ;; Auto vars:     Size  Location     Type
  3339 ;;  txData          1   20[COMRAM] unsigned char 
  3340 ;; Return value:  Size  Location     Type
  3341 ;;                  1    wreg      void 
  3342 ;; Registers used:
  3343 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3344 ;; Tracked objects:
  3345 ;;		On entry : 0/0
  3346 ;;		On exit  : 0/0
  3347 ;;		Unchanged: 0/0
  3348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3350 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3352 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3353 ;;Total ram usage:        1 bytes
  3354 ;; Hardware stack levels used: 1
  3355 ;; Hardware stack levels required when called: 9
  3356 ;; This function calls:
  3357 ;;		_UART1_Write
  3358 ;; This function is called by:
  3359 ;;		_fputc
  3360 ;; This function uses a non-reentrant model
  3361 ;;
  3362                           
  3363                           	psect	text13
  3364  003F3A                     __ptext13:
  3365                           	callstack 0
  3366  003F3A                     _putch:
  3367                           	callstack 15
  3368                           
  3369                           ;incstack = 0
  3370                           ;putch@txData stored from wreg
  3371  003F3A  6E15               	movwf	putch@txData^0,c
  3372  003F3C                     
  3373                           ;mcc_generated_files/uart1.c: 230: void putch(char txData);mcc_generated_files/uart1.c: 
      +                          231: {;mcc_generated_files/uart1.c: 232:     UART1_Write(txData);
  3374  003F3C  5015               	movf	putch@txData^0,w,c
  3375  003F3E  ECF0  F01A         	call	_UART1_Write
  3376  003F42  0012               	return		;funcret
  3377  003F44                     __end_of_putch:
  3378                           	callstack 0
  3379                           
  3380 ;; *************** function _UART1_Write *****************
  3381 ;; Defined at:
  3382 ;;		line 202 in file "mcc_generated_files/uart1.c"
  3383 ;; Parameters:    Size  Location     Type
  3384 ;;  txData          1    wreg     unsigned char 
  3385 ;; Auto vars:     Size  Location     Type
  3386 ;;  txData          1   19[COMRAM] unsigned char 
  3387 ;; Return value:  Size  Location     Type
  3388 ;;                  1    wreg      void 
  3389 ;; Registers used:
  3390 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3391 ;; Tracked objects:
  3392 ;;		On entry : 0/0
  3393 ;;		On exit  : 0/0
  3394 ;;		Unchanged: 0/0
  3395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3397 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3399 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3400 ;;Total ram usage:        1 bytes
  3401 ;; Hardware stack levels used: 1
  3402 ;; Hardware stack levels required when called: 8
  3403 ;; This function calls:
  3404 ;;		Nothing
  3405 ;; This function is called by:
  3406 ;;		_putch
  3407 ;; This function uses a non-reentrant model
  3408 ;;
  3409                           
  3410                           	psect	text14
  3411  0035E0                     __ptext14:
  3412                           	callstack 0
  3413  0035E0                     _UART1_Write:
  3414                           	callstack 15
  3415                           
  3416                           ;incstack = 0
  3417                           ;UART1_Write@txData stored from wreg
  3418  0035E0  6E14               	movwf	UART1_Write@txData^0,c
  3419  0035E2                     l5536:
  3420                           
  3421                           ;mcc_generated_files/uart1.c: 204:     while(0 == uart1TxBufferRemaining)
  3422  0035E2  504C               	movf	_uart1TxBufferRemaining^0,w,c	;volatile
  3423  0035E4  B4D8               	btfsc	status,2,c
  3424  0035E6  EFF7  F01A         	goto	u4321
  3425  0035EA  EFF9  F01A         	goto	u4320
  3426  0035EE                     u4321:
  3427  0035EE  EFF1  F01A         	goto	l5536
  3428  0035F2                     u4320:
  3429  0035F2                     
  3430                           ;mcc_generated_files/uart1.c: 208:     if(0 == PIE3bits.U1TXIE)
  3431  0035F2  0139               	movlb	57	; () banked
  3432  0035F4  B993               	btfsc	147,4,b	;volatile
  3433  0035F6  EFFF  F01A         	goto	u4331
  3434  0035FA  EF01  F01B         	goto	u4330
  3435  0035FE                     u4331:
  3436  0035FE  EF06  F01B         	goto	l309
  3437  003602                     u4330:
  3438  003602                     
  3439                           ; BSR set to: 57
  3440                           ;mcc_generated_files/uart1.c: 209:     {;mcc_generated_files/uart1.c: 210:         U1TXB
      +                           = txData;
  3441  003602  0060  F053  FDEA   	movff	UART1_Write@txData,15850	;volatile
  3442                           
  3443                           ;mcc_generated_files/uart1.c: 211:     }
  3444  003608  EF1C  F01B         	goto	l5550
  3445  00360C                     l309:
  3446                           
  3447                           ; BSR set to: 57
  3448                           ;mcc_generated_files/uart1.c: 213:     {;mcc_generated_files/uart1.c: 214:         PIE3b
      +                          its.U1TXIE = 0;
  3449  00360C  9993               	bcf	147,4,b	;volatile
  3450  00360E                     
  3451                           ; BSR set to: 57
  3452                           ;mcc_generated_files/uart1.c: 215:         uart1TxBuffer[uart1TxHead++] = txData;
  3453  00360E  0E70               	movlw	low _uart1TxBuffer
  3454  003610  2447               	addwf	_uart1TxHead^0,w,c	;volatile
  3455  003612  6ED9               	movwf	fsr2l,c
  3456  003614  6ADA               	clrf	fsr2h,c
  3457  003616  0E00               	movlw	high _uart1TxBuffer
  3458  003618  22DA               	addwfc	fsr2h,f,c
  3459  00361A  0060  F053  FFDF   	movff	UART1_Write@txData,indf2
  3460  003620                     
  3461                           ; BSR set to: 57
  3462  003620  2A47               	incf	_uart1TxHead^0,f,c	;volatile
  3463  003622                     
  3464                           ; BSR set to: 57
  3465                           ;mcc_generated_files/uart1.c: 216:         if(sizeof(uart1TxBuffer) <= uart1TxHead)
  3466  003622  0E07               	movlw	7
  3467  003624  6447               	cpfsgt	_uart1TxHead^0,c	;volatile
  3468  003626  EF17  F01B         	goto	u4341
  3469  00362A  EF19  F01B         	goto	u4340
  3470  00362E                     u4341:
  3471  00362E  EF1B  F01B         	goto	l5548
  3472  003632                     u4340:
  3473  003632                     
  3474                           ; BSR set to: 57
  3475                           ;mcc_generated_files/uart1.c: 217:         {;mcc_generated_files/uart1.c: 218:          
      +                             uart1TxHead = 0;
  3476  003632  0E00               	movlw	0
  3477  003634  6E47               	movwf	_uart1TxHead^0,c	;volatile
  3478  003636                     l5548:
  3479                           
  3480                           ; BSR set to: 57
  3481                           ;mcc_generated_files/uart1.c: 220:         uart1TxBufferRemaining--;
  3482  003636  064C               	decf	_uart1TxBufferRemaining^0,f,c	;volatile
  3483  003638                     l5550:
  3484                           
  3485                           ; BSR set to: 57
  3486                           ;mcc_generated_files/uart1.c: 222:     PIE3bits.U1TXIE = 1;
  3487  003638  8993               	bsf	147,4,b	;volatile
  3488  00363A                     
  3489                           ; BSR set to: 57
  3490  00363A  0012               	return		;funcret
  3491  00363C                     __end_of_UART1_Write:
  3492                           	callstack 0
  3493                           
  3494 ;; *************** function _abs *****************
  3495 ;; Defined at:
  3496 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  3497 ;; Parameters:    Size  Location     Type
  3498 ;;  a               2   37[COMRAM] int 
  3499 ;; Auto vars:     Size  Location     Type
  3500 ;;		None
  3501 ;; Return value:  Size  Location     Type
  3502 ;;                  2   37[COMRAM] int 
  3503 ;; Registers used:
  3504 ;;		wreg, status,2, status,0
  3505 ;; Tracked objects:
  3506 ;;		On entry : 0/0
  3507 ;;		On exit  : 0/0
  3508 ;;		Unchanged: 0/0
  3509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3510 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3512 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3513 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3514 ;;Total ram usage:        4 bytes
  3515 ;; Hardware stack levels used: 1
  3516 ;; Hardware stack levels required when called: 8
  3517 ;; This function calls:
  3518 ;;		Nothing
  3519 ;; This function is called by:
  3520 ;;		_dtoa
  3521 ;; This function uses a non-reentrant model
  3522 ;;
  3523                           
  3524                           	psect	text15
  3525  00389E                     __ptext15:
  3526                           	callstack 0
  3527  00389E                     _abs:
  3528                           	callstack 16
  3529  00389E  BE27               	btfsc	(abs@a+1)^0,7,c
  3530  0038A0  EF5C  F01C         	goto	u4580
  3531  0038A4  5027               	movf	(abs@a+1)^0,w,c
  3532  0038A6  E106               	bnz	u4581
  3533  0038A8  0426               	decf	abs@a^0,w,c
  3534  0038AA  B0D8               	btfsc	status,0,c
  3535  0038AC  EF5A  F01C         	goto	u4581
  3536  0038B0  EF5C  F01C         	goto	u4580
  3537  0038B4                     u4581:
  3538  0038B4  EF6A  F01C         	goto	l2093
  3539  0038B8                     u4580:
  3540  0038B8  C026  F028         	movff	abs@a,??_abs
  3541  0038BC  C027  F029         	movff	abs@a+1,??_abs+1
  3542  0038C0  1E28               	comf	??_abs^0,f,c
  3543  0038C2  1E29               	comf	(??_abs+1)^0,f,c
  3544  0038C4  4A28               	infsnz	??_abs^0,f,c
  3545  0038C6  2A29               	incf	(??_abs+1)^0,f,c
  3546  0038C8  C028  F026         	movff	??_abs,?_abs
  3547  0038CC  C029  F027         	movff	??_abs+1,?_abs+1
  3548  0038D0  EF6E  F01C         	goto	l2096
  3549  0038D4                     l2093:
  3550  0038D4  C026  F026         	movff	abs@a,?_abs
  3551  0038D8  C027  F027         	movff	abs@a+1,?_abs+1
  3552  0038DC                     l2096:
  3553  0038DC  0012               	return		;funcret
  3554  0038DE                     __end_of_abs:
  3555                           	callstack 0
  3556                           
  3557 ;; *************** function ___aomod *****************
  3558 ;; Defined at:
  3559 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  3560 ;; Parameters:    Size  Location     Type
  3561 ;;  dividend        8   19[COMRAM] long long 
  3562 ;;  divisor         8   27[COMRAM] long long 
  3563 ;; Auto vars:     Size  Location     Type
  3564 ;;  sign            1   36[COMRAM] unsigned char 
  3565 ;;  counter         1   35[COMRAM] unsigned char 
  3566 ;; Return value:  Size  Location     Type
  3567 ;;                  8   19[COMRAM] long long 
  3568 ;; Registers used:
  3569 ;;		wreg, status,2, status,0
  3570 ;; Tracked objects:
  3571 ;;		On entry : 0/0
  3572 ;;		On exit  : 0/0
  3573 ;;		Unchanged: 0/0
  3574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3575 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3576 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3578 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3579 ;;Total ram usage:       18 bytes
  3580 ;; Hardware stack levels used: 1
  3581 ;; Hardware stack levels required when called: 8
  3582 ;; This function calls:
  3583 ;;		Nothing
  3584 ;; This function is called by:
  3585 ;;		_dtoa
  3586 ;; This function uses a non-reentrant model
  3587 ;;
  3588                           
  3589                           	psect	text16
  3590  002770                     __ptext16:
  3591                           	callstack 0
  3592  002770                     ___aomod:
  3593                           	callstack 16
  3594  002770  0E00               	movlw	0
  3595  002772  6E25               	movwf	___aomod@sign^0,c
  3596  002774  BE1B               	btfsc	(___aomod@dividend+7)^0,7,c
  3597  002776  EFC1  F013         	goto	u4480
  3598  00277A  EFBF  F013         	goto	u4481
  3599  00277E                     u4481:
  3600  00277E  EFD3  F013         	goto	l5638
  3601  002782                     u4480:
  3602  002782  1E1B               	comf	(___aomod@dividend+7)^0,f,c
  3603  002784  1E1A               	comf	(___aomod@dividend+6)^0,f,c
  3604  002786  1E19               	comf	(___aomod@dividend+5)^0,f,c
  3605  002788  1E18               	comf	(___aomod@dividend+4)^0,f,c
  3606  00278A  1E17               	comf	(___aomod@dividend+3)^0,f,c
  3607  00278C  1E16               	comf	(___aomod@dividend+2)^0,f,c
  3608  00278E  1E15               	comf	(___aomod@dividend+1)^0,f,c
  3609  002790  6C14               	negf	___aomod@dividend^0,c
  3610  002792  0E00               	movlw	0
  3611  002794  2215               	addwfc	(___aomod@dividend+1)^0,f,c
  3612  002796  2216               	addwfc	(___aomod@dividend+2)^0,f,c
  3613  002798  2217               	addwfc	(___aomod@dividend+3)^0,f,c
  3614  00279A  2218               	addwfc	(___aomod@dividend+4)^0,f,c
  3615  00279C  2219               	addwfc	(___aomod@dividend+5)^0,f,c
  3616  00279E  221A               	addwfc	(___aomod@dividend+6)^0,f,c
  3617  0027A0  221B               	addwfc	(___aomod@dividend+7)^0,f,c
  3618  0027A2  0E01               	movlw	1
  3619  0027A4  6E25               	movwf	___aomod@sign^0,c
  3620  0027A6                     l5638:
  3621  0027A6  BE23               	btfsc	(___aomod@divisor+7)^0,7,c
  3622  0027A8  EFDA  F013         	goto	u4490
  3623  0027AC  EFD8  F013         	goto	u4491
  3624  0027B0                     u4491:
  3625  0027B0  EFEA  F013         	goto	l5642
  3626  0027B4                     u4490:
  3627  0027B4  1E23               	comf	(___aomod@divisor+7)^0,f,c
  3628  0027B6  1E22               	comf	(___aomod@divisor+6)^0,f,c
  3629  0027B8  1E21               	comf	(___aomod@divisor+5)^0,f,c
  3630  0027BA  1E20               	comf	(___aomod@divisor+4)^0,f,c
  3631  0027BC  1E1F               	comf	(___aomod@divisor+3)^0,f,c
  3632  0027BE  1E1E               	comf	(___aomod@divisor+2)^0,f,c
  3633  0027C0  1E1D               	comf	(___aomod@divisor+1)^0,f,c
  3634  0027C2  6C1C               	negf	___aomod@divisor^0,c
  3635  0027C4  0E00               	movlw	0
  3636  0027C6  221D               	addwfc	(___aomod@divisor+1)^0,f,c
  3637  0027C8  221E               	addwfc	(___aomod@divisor+2)^0,f,c
  3638  0027CA  221F               	addwfc	(___aomod@divisor+3)^0,f,c
  3639  0027CC  2220               	addwfc	(___aomod@divisor+4)^0,f,c
  3640  0027CE  2221               	addwfc	(___aomod@divisor+5)^0,f,c
  3641  0027D0  2222               	addwfc	(___aomod@divisor+6)^0,f,c
  3642  0027D2  2223               	addwfc	(___aomod@divisor+7)^0,f,c
  3643  0027D4                     l5642:
  3644  0027D4  501C               	movf	___aomod@divisor^0,w,c
  3645  0027D6  101D               	iorwf	(___aomod@divisor+1)^0,w,c
  3646  0027D8  101E               	iorwf	(___aomod@divisor+2)^0,w,c
  3647  0027DA  101F               	iorwf	(___aomod@divisor+3)^0,w,c
  3648  0027DC  1020               	iorwf	(___aomod@divisor+4)^0,w,c
  3649  0027DE  1021               	iorwf	(___aomod@divisor+5)^0,w,c
  3650  0027E0  1022               	iorwf	(___aomod@divisor+6)^0,w,c
  3651  0027E2  1023               	iorwf	(___aomod@divisor+7)^0,w,c
  3652  0027E4  B4D8               	btfsc	status,2,c
  3653  0027E6  EFF7  F013         	goto	u4501
  3654  0027EA  EFF9  F013         	goto	u4500
  3655  0027EE                     u4501:
  3656  0027EE  EF41  F014         	goto	l5658
  3657  0027F2                     u4500:
  3658  0027F2  0E01               	movlw	1
  3659  0027F4  6E24               	movwf	___aomod@counter^0,c
  3660  0027F6  EF07  F014         	goto	l5648
  3661  0027FA                     l5646:
  3662  0027FA  90D8               	bcf	status,0,c
  3663  0027FC  361C               	rlcf	___aomod@divisor^0,f,c
  3664  0027FE  361D               	rlcf	(___aomod@divisor+1)^0,f,c
  3665  002800  361E               	rlcf	(___aomod@divisor+2)^0,f,c
  3666  002802  361F               	rlcf	(___aomod@divisor+3)^0,f,c
  3667  002804  3620               	rlcf	(___aomod@divisor+4)^0,f,c
  3668  002806  3621               	rlcf	(___aomod@divisor+5)^0,f,c
  3669  002808  3622               	rlcf	(___aomod@divisor+6)^0,f,c
  3670  00280A  3623               	rlcf	(___aomod@divisor+7)^0,f,c
  3671  00280C  2A24               	incf	___aomod@counter^0,f,c
  3672  00280E                     l5648:
  3673  00280E  AE23               	btfss	(___aomod@divisor+7)^0,7,c
  3674  002810  EF0C  F014         	goto	u4511
  3675  002814  EF0E  F014         	goto	u4510
  3676  002818                     u4511:
  3677  002818  EFFD  F013         	goto	l5646
  3678  00281C                     u4510:
  3679  00281C                     l5650:
  3680  00281C  501C               	movf	___aomod@divisor^0,w,c
  3681  00281E  5C14               	subwf	___aomod@dividend^0,w,c
  3682  002820  501D               	movf	(___aomod@divisor+1)^0,w,c
  3683  002822  5815               	subwfb	(___aomod@dividend+1)^0,w,c
  3684  002824  501E               	movf	(___aomod@divisor+2)^0,w,c
  3685  002826  5816               	subwfb	(___aomod@dividend+2)^0,w,c
  3686  002828  501F               	movf	(___aomod@divisor+3)^0,w,c
  3687  00282A  5817               	subwfb	(___aomod@dividend+3)^0,w,c
  3688  00282C  5020               	movf	(___aomod@divisor+4)^0,w,c
  3689  00282E  5818               	subwfb	(___aomod@dividend+4)^0,w,c
  3690  002830  5021               	movf	(___aomod@divisor+5)^0,w,c
  3691  002832  5819               	subwfb	(___aomod@dividend+5)^0,w,c
  3692  002834  5022               	movf	(___aomod@divisor+6)^0,w,c
  3693  002836  581A               	subwfb	(___aomod@dividend+6)^0,w,c
  3694  002838  5023               	movf	(___aomod@divisor+7)^0,w,c
  3695  00283A  581B               	subwfb	(___aomod@dividend+7)^0,w,c
  3696  00283C  A0D8               	btfss	status,0,c
  3697  00283E  EF23  F014         	goto	u4521
  3698  002842  EF25  F014         	goto	u4520
  3699  002846                     u4521:
  3700  002846  EF35  F014         	goto	l5654
  3701  00284A                     u4520:
  3702  00284A  501C               	movf	___aomod@divisor^0,w,c
  3703  00284C  5E14               	subwf	___aomod@dividend^0,f,c
  3704  00284E  501D               	movf	(___aomod@divisor+1)^0,w,c
  3705  002850  5A15               	subwfb	(___aomod@dividend+1)^0,f,c
  3706  002852  501E               	movf	(___aomod@divisor+2)^0,w,c
  3707  002854  5A16               	subwfb	(___aomod@dividend+2)^0,f,c
  3708  002856  501F               	movf	(___aomod@divisor+3)^0,w,c
  3709  002858  5A17               	subwfb	(___aomod@dividend+3)^0,f,c
  3710  00285A  5020               	movf	(___aomod@divisor+4)^0,w,c
  3711  00285C  5A18               	subwfb	(___aomod@dividend+4)^0,f,c
  3712  00285E  5021               	movf	(___aomod@divisor+5)^0,w,c
  3713  002860  5A19               	subwfb	(___aomod@dividend+5)^0,f,c
  3714  002862  5022               	movf	(___aomod@divisor+6)^0,w,c
  3715  002864  5A1A               	subwfb	(___aomod@dividend+6)^0,f,c
  3716  002866  5023               	movf	(___aomod@divisor+7)^0,w,c
  3717  002868  5A1B               	subwfb	(___aomod@dividend+7)^0,f,c
  3718  00286A                     l5654:
  3719  00286A  90D8               	bcf	status,0,c
  3720  00286C  3223               	rrcf	(___aomod@divisor+7)^0,f,c
  3721  00286E  3222               	rrcf	(___aomod@divisor+6)^0,f,c
  3722  002870  3221               	rrcf	(___aomod@divisor+5)^0,f,c
  3723  002872  3220               	rrcf	(___aomod@divisor+4)^0,f,c
  3724  002874  321F               	rrcf	(___aomod@divisor+3)^0,f,c
  3725  002876  321E               	rrcf	(___aomod@divisor+2)^0,f,c
  3726  002878  321D               	rrcf	(___aomod@divisor+1)^0,f,c
  3727  00287A  321C               	rrcf	___aomod@divisor^0,f,c
  3728  00287C  2E24               	decfsz	___aomod@counter^0,f,c
  3729  00287E  EF0E  F014         	goto	l5650
  3730  002882                     l5658:
  3731  002882  5025               	movf	___aomod@sign^0,w,c
  3732  002884  B4D8               	btfsc	status,2,c
  3733  002886  EF47  F014         	goto	u4531
  3734  00288A  EF49  F014         	goto	u4530
  3735  00288E                     u4531:
  3736  00288E  EF59  F014         	goto	l5662
  3737  002892                     u4530:
  3738  002892  1E1B               	comf	(___aomod@dividend+7)^0,f,c
  3739  002894  1E1A               	comf	(___aomod@dividend+6)^0,f,c
  3740  002896  1E19               	comf	(___aomod@dividend+5)^0,f,c
  3741  002898  1E18               	comf	(___aomod@dividend+4)^0,f,c
  3742  00289A  1E17               	comf	(___aomod@dividend+3)^0,f,c
  3743  00289C  1E16               	comf	(___aomod@dividend+2)^0,f,c
  3744  00289E  1E15               	comf	(___aomod@dividend+1)^0,f,c
  3745  0028A0  6C14               	negf	___aomod@dividend^0,c
  3746  0028A2  0E00               	movlw	0
  3747  0028A4  2215               	addwfc	(___aomod@dividend+1)^0,f,c
  3748  0028A6  2216               	addwfc	(___aomod@dividend+2)^0,f,c
  3749  0028A8  2217               	addwfc	(___aomod@dividend+3)^0,f,c
  3750  0028AA  2218               	addwfc	(___aomod@dividend+4)^0,f,c
  3751  0028AC  2219               	addwfc	(___aomod@dividend+5)^0,f,c
  3752  0028AE  221A               	addwfc	(___aomod@dividend+6)^0,f,c
  3753  0028B0  221B               	addwfc	(___aomod@dividend+7)^0,f,c
  3754  0028B2                     l5662:
  3755  0028B2  C014  F014         	movff	___aomod@dividend,?___aomod
  3756  0028B6  C015  F015         	movff	___aomod@dividend+1,?___aomod+1
  3757  0028BA  C016  F016         	movff	___aomod@dividend+2,?___aomod+2
  3758  0028BE  C017  F017         	movff	___aomod@dividend+3,?___aomod+3
  3759  0028C2  C018  F018         	movff	___aomod@dividend+4,?___aomod+4
  3760  0028C6  C019  F019         	movff	___aomod@dividend+5,?___aomod+5
  3761  0028CA  C01A  F01A         	movff	___aomod@dividend+6,?___aomod+6
  3762  0028CE  C01B  F01B         	movff	___aomod@dividend+7,?___aomod+7
  3763  0028D2  0012               	return		;funcret
  3764  0028D4                     __end_of___aomod:
  3765                           	callstack 0
  3766                           
  3767 ;; *************** function ___aodiv *****************
  3768 ;; Defined at:
  3769 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  3770 ;; Parameters:    Size  Location     Type
  3771 ;;  dividend        8   19[COMRAM] long long 
  3772 ;;  divisor         8   27[COMRAM] long long 
  3773 ;; Auto vars:     Size  Location     Type
  3774 ;;  quotient        8   37[COMRAM] long long 
  3775 ;;  sign            1   36[COMRAM] unsigned char 
  3776 ;;  counter         1   35[COMRAM] unsigned char 
  3777 ;; Return value:  Size  Location     Type
  3778 ;;                  8   19[COMRAM] long long 
  3779 ;; Registers used:
  3780 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3781 ;; Tracked objects:
  3782 ;;		On entry : 0/0
  3783 ;;		On exit  : 0/0
  3784 ;;		Unchanged: 0/0
  3785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3786 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3787 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3789 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3790 ;;Total ram usage:       26 bytes
  3791 ;; Hardware stack levels used: 1
  3792 ;; Hardware stack levels required when called: 8
  3793 ;; This function calls:
  3794 ;;		Nothing
  3795 ;; This function is called by:
  3796 ;;		_dtoa
  3797 ;; This function uses a non-reentrant model
  3798 ;;
  3799                           
  3800                           	psect	text17
  3801  0025E8                     __ptext17:
  3802                           	callstack 0
  3803  0025E8                     ___aodiv:
  3804                           	callstack 16
  3805  0025E8  0E00               	movlw	0
  3806  0025EA  6E25               	movwf	___aodiv@sign^0,c
  3807  0025EC  BE23               	btfsc	(___aodiv@divisor+7)^0,7,c
  3808  0025EE  EFFD  F012         	goto	u4410
  3809  0025F2  EFFB  F012         	goto	u4411
  3810  0025F6                     u4411:
  3811  0025F6  EF0F  F013         	goto	l5594
  3812  0025FA                     u4410:
  3813  0025FA  1E23               	comf	(___aodiv@divisor+7)^0,f,c
  3814  0025FC  1E22               	comf	(___aodiv@divisor+6)^0,f,c
  3815  0025FE  1E21               	comf	(___aodiv@divisor+5)^0,f,c
  3816  002600  1E20               	comf	(___aodiv@divisor+4)^0,f,c
  3817  002602  1E1F               	comf	(___aodiv@divisor+3)^0,f,c
  3818  002604  1E1E               	comf	(___aodiv@divisor+2)^0,f,c
  3819  002606  1E1D               	comf	(___aodiv@divisor+1)^0,f,c
  3820  002608  6C1C               	negf	___aodiv@divisor^0,c
  3821  00260A  0E00               	movlw	0
  3822  00260C  221D               	addwfc	(___aodiv@divisor+1)^0,f,c
  3823  00260E  221E               	addwfc	(___aodiv@divisor+2)^0,f,c
  3824  002610  221F               	addwfc	(___aodiv@divisor+3)^0,f,c
  3825  002612  2220               	addwfc	(___aodiv@divisor+4)^0,f,c
  3826  002614  2221               	addwfc	(___aodiv@divisor+5)^0,f,c
  3827  002616  2222               	addwfc	(___aodiv@divisor+6)^0,f,c
  3828  002618  2223               	addwfc	(___aodiv@divisor+7)^0,f,c
  3829  00261A  0E01               	movlw	1
  3830  00261C  6E25               	movwf	___aodiv@sign^0,c
  3831  00261E                     l5594:
  3832  00261E  BE1B               	btfsc	(___aodiv@dividend+7)^0,7,c
  3833  002620  EF16  F013         	goto	u4420
  3834  002624  EF14  F013         	goto	u4421
  3835  002628                     u4421:
  3836  002628  EF28  F013         	goto	l5600
  3837  00262C                     u4420:
  3838  00262C  1E1B               	comf	(___aodiv@dividend+7)^0,f,c
  3839  00262E  1E1A               	comf	(___aodiv@dividend+6)^0,f,c
  3840  002630  1E19               	comf	(___aodiv@dividend+5)^0,f,c
  3841  002632  1E18               	comf	(___aodiv@dividend+4)^0,f,c
  3842  002634  1E17               	comf	(___aodiv@dividend+3)^0,f,c
  3843  002636  1E16               	comf	(___aodiv@dividend+2)^0,f,c
  3844  002638  1E15               	comf	(___aodiv@dividend+1)^0,f,c
  3845  00263A  6C14               	negf	___aodiv@dividend^0,c
  3846  00263C  0E00               	movlw	0
  3847  00263E  2215               	addwfc	(___aodiv@dividend+1)^0,f,c
  3848  002640  2216               	addwfc	(___aodiv@dividend+2)^0,f,c
  3849  002642  2217               	addwfc	(___aodiv@dividend+3)^0,f,c
  3850  002644  2218               	addwfc	(___aodiv@dividend+4)^0,f,c
  3851  002646  2219               	addwfc	(___aodiv@dividend+5)^0,f,c
  3852  002648  221A               	addwfc	(___aodiv@dividend+6)^0,f,c
  3853  00264A  221B               	addwfc	(___aodiv@dividend+7)^0,f,c
  3854  00264C  0E01               	movlw	1
  3855  00264E  1A25               	xorwf	___aodiv@sign^0,f,c
  3856  002650                     l5600:
  3857  002650  EE20  F026         	lfsr	2,___aodiv@quotient
  3858  002654  0E07               	movlw	7
  3859  002656                     u4431:
  3860  002656  6ADE               	clrf	postinc2,c
  3861  002658  06E8               	decf	wreg,f,c
  3862  00265A  E2FD               	bc	u4431
  3863  00265C  501C               	movf	___aodiv@divisor^0,w,c
  3864  00265E  101D               	iorwf	(___aodiv@divisor+1)^0,w,c
  3865  002660  101E               	iorwf	(___aodiv@divisor+2)^0,w,c
  3866  002662  101F               	iorwf	(___aodiv@divisor+3)^0,w,c
  3867  002664  1020               	iorwf	(___aodiv@divisor+4)^0,w,c
  3868  002666  1021               	iorwf	(___aodiv@divisor+5)^0,w,c
  3869  002668  1022               	iorwf	(___aodiv@divisor+6)^0,w,c
  3870  00266A  1023               	iorwf	(___aodiv@divisor+7)^0,w,c
  3871  00266C  B4D8               	btfsc	status,2,c
  3872  00266E  EF3B  F013         	goto	u4441
  3873  002672  EF3D  F013         	goto	u4440
  3874  002676                     u4441:
  3875  002676  EF8F  F013         	goto	l5622
  3876  00267A                     u4440:
  3877  00267A  0E01               	movlw	1
  3878  00267C  6E24               	movwf	___aodiv@counter^0,c
  3879  00267E  EF4B  F013         	goto	l5608
  3880  002682                     l5606:
  3881  002682  90D8               	bcf	status,0,c
  3882  002684  361C               	rlcf	___aodiv@divisor^0,f,c
  3883  002686  361D               	rlcf	(___aodiv@divisor+1)^0,f,c
  3884  002688  361E               	rlcf	(___aodiv@divisor+2)^0,f,c
  3885  00268A  361F               	rlcf	(___aodiv@divisor+3)^0,f,c
  3886  00268C  3620               	rlcf	(___aodiv@divisor+4)^0,f,c
  3887  00268E  3621               	rlcf	(___aodiv@divisor+5)^0,f,c
  3888  002690  3622               	rlcf	(___aodiv@divisor+6)^0,f,c
  3889  002692  3623               	rlcf	(___aodiv@divisor+7)^0,f,c
  3890  002694  2A24               	incf	___aodiv@counter^0,f,c
  3891  002696                     l5608:
  3892  002696  AE23               	btfss	(___aodiv@divisor+7)^0,7,c
  3893  002698  EF50  F013         	goto	u4451
  3894  00269C  EF52  F013         	goto	u4450
  3895  0026A0                     u4451:
  3896  0026A0  EF41  F013         	goto	l5606
  3897  0026A4                     u4450:
  3898  0026A4                     l5610:
  3899  0026A4  90D8               	bcf	status,0,c
  3900  0026A6  3626               	rlcf	___aodiv@quotient^0,f,c
  3901  0026A8  3627               	rlcf	(___aodiv@quotient+1)^0,f,c
  3902  0026AA  3628               	rlcf	(___aodiv@quotient+2)^0,f,c
  3903  0026AC  3629               	rlcf	(___aodiv@quotient+3)^0,f,c
  3904  0026AE  362A               	rlcf	(___aodiv@quotient+4)^0,f,c
  3905  0026B0  362B               	rlcf	(___aodiv@quotient+5)^0,f,c
  3906  0026B2  362C               	rlcf	(___aodiv@quotient+6)^0,f,c
  3907  0026B4  362D               	rlcf	(___aodiv@quotient+7)^0,f,c
  3908  0026B6  501C               	movf	___aodiv@divisor^0,w,c
  3909  0026B8  5C14               	subwf	___aodiv@dividend^0,w,c
  3910  0026BA  501D               	movf	(___aodiv@divisor+1)^0,w,c
  3911  0026BC  5815               	subwfb	(___aodiv@dividend+1)^0,w,c
  3912  0026BE  501E               	movf	(___aodiv@divisor+2)^0,w,c
  3913  0026C0  5816               	subwfb	(___aodiv@dividend+2)^0,w,c
  3914  0026C2  501F               	movf	(___aodiv@divisor+3)^0,w,c
  3915  0026C4  5817               	subwfb	(___aodiv@dividend+3)^0,w,c
  3916  0026C6  5020               	movf	(___aodiv@divisor+4)^0,w,c
  3917  0026C8  5818               	subwfb	(___aodiv@dividend+4)^0,w,c
  3918  0026CA  5021               	movf	(___aodiv@divisor+5)^0,w,c
  3919  0026CC  5819               	subwfb	(___aodiv@dividend+5)^0,w,c
  3920  0026CE  5022               	movf	(___aodiv@divisor+6)^0,w,c
  3921  0026D0  581A               	subwfb	(___aodiv@dividend+6)^0,w,c
  3922  0026D2  5023               	movf	(___aodiv@divisor+7)^0,w,c
  3923  0026D4  581B               	subwfb	(___aodiv@dividend+7)^0,w,c
  3924  0026D6  A0D8               	btfss	status,0,c
  3925  0026D8  EF70  F013         	goto	u4461
  3926  0026DC  EF72  F013         	goto	u4460
  3927  0026E0                     u4461:
  3928  0026E0  EF83  F013         	goto	l5618
  3929  0026E4                     u4460:
  3930  0026E4  501C               	movf	___aodiv@divisor^0,w,c
  3931  0026E6  5E14               	subwf	___aodiv@dividend^0,f,c
  3932  0026E8  501D               	movf	(___aodiv@divisor+1)^0,w,c
  3933  0026EA  5A15               	subwfb	(___aodiv@dividend+1)^0,f,c
  3934  0026EC  501E               	movf	(___aodiv@divisor+2)^0,w,c
  3935  0026EE  5A16               	subwfb	(___aodiv@dividend+2)^0,f,c
  3936  0026F0  501F               	movf	(___aodiv@divisor+3)^0,w,c
  3937  0026F2  5A17               	subwfb	(___aodiv@dividend+3)^0,f,c
  3938  0026F4  5020               	movf	(___aodiv@divisor+4)^0,w,c
  3939  0026F6  5A18               	subwfb	(___aodiv@dividend+4)^0,f,c
  3940  0026F8  5021               	movf	(___aodiv@divisor+5)^0,w,c
  3941  0026FA  5A19               	subwfb	(___aodiv@dividend+5)^0,f,c
  3942  0026FC  5022               	movf	(___aodiv@divisor+6)^0,w,c
  3943  0026FE  5A1A               	subwfb	(___aodiv@dividend+6)^0,f,c
  3944  002700  5023               	movf	(___aodiv@divisor+7)^0,w,c
  3945  002702  5A1B               	subwfb	(___aodiv@dividend+7)^0,f,c
  3946  002704  8026               	bsf	___aodiv@quotient^0,0,c
  3947  002706                     l5618:
  3948  002706  90D8               	bcf	status,0,c
  3949  002708  3223               	rrcf	(___aodiv@divisor+7)^0,f,c
  3950  00270A  3222               	rrcf	(___aodiv@divisor+6)^0,f,c
  3951  00270C  3221               	rrcf	(___aodiv@divisor+5)^0,f,c
  3952  00270E  3220               	rrcf	(___aodiv@divisor+4)^0,f,c
  3953  002710  321F               	rrcf	(___aodiv@divisor+3)^0,f,c
  3954  002712  321E               	rrcf	(___aodiv@divisor+2)^0,f,c
  3955  002714  321D               	rrcf	(___aodiv@divisor+1)^0,f,c
  3956  002716  321C               	rrcf	___aodiv@divisor^0,f,c
  3957  002718  2E24               	decfsz	___aodiv@counter^0,f,c
  3958  00271A  EF52  F013         	goto	l5610
  3959  00271E                     l5622:
  3960  00271E  5025               	movf	___aodiv@sign^0,w,c
  3961  002720  B4D8               	btfsc	status,2,c
  3962  002722  EF95  F013         	goto	u4471
  3963  002726  EF97  F013         	goto	u4470
  3964  00272A                     u4471:
  3965  00272A  EFA7  F013         	goto	l5626
  3966  00272E                     u4470:
  3967  00272E  1E2D               	comf	(___aodiv@quotient+7)^0,f,c
  3968  002730  1E2C               	comf	(___aodiv@quotient+6)^0,f,c
  3969  002732  1E2B               	comf	(___aodiv@quotient+5)^0,f,c
  3970  002734  1E2A               	comf	(___aodiv@quotient+4)^0,f,c
  3971  002736  1E29               	comf	(___aodiv@quotient+3)^0,f,c
  3972  002738  1E28               	comf	(___aodiv@quotient+2)^0,f,c
  3973  00273A  1E27               	comf	(___aodiv@quotient+1)^0,f,c
  3974  00273C  6C26               	negf	___aodiv@quotient^0,c
  3975  00273E  0E00               	movlw	0
  3976  002740  2227               	addwfc	(___aodiv@quotient+1)^0,f,c
  3977  002742  2228               	addwfc	(___aodiv@quotient+2)^0,f,c
  3978  002744  2229               	addwfc	(___aodiv@quotient+3)^0,f,c
  3979  002746  222A               	addwfc	(___aodiv@quotient+4)^0,f,c
  3980  002748  222B               	addwfc	(___aodiv@quotient+5)^0,f,c
  3981  00274A  222C               	addwfc	(___aodiv@quotient+6)^0,f,c
  3982  00274C  222D               	addwfc	(___aodiv@quotient+7)^0,f,c
  3983  00274E                     l5626:
  3984  00274E  C026  F014         	movff	___aodiv@quotient,?___aodiv
  3985  002752  C027  F015         	movff	___aodiv@quotient+1,?___aodiv+1
  3986  002756  C028  F016         	movff	___aodiv@quotient+2,?___aodiv+2
  3987  00275A  C029  F017         	movff	___aodiv@quotient+3,?___aodiv+3
  3988  00275E  C02A  F018         	movff	___aodiv@quotient+4,?___aodiv+4
  3989  002762  C02B  F019         	movff	___aodiv@quotient+5,?___aodiv+5
  3990  002766  C02C  F01A         	movff	___aodiv@quotient+6,?___aodiv+6
  3991  00276A  C02D  F01B         	movff	___aodiv@quotient+7,?___aodiv+7
  3992  00276E  0012               	return		;funcret
  3993  002770                     __end_of___aodiv:
  3994                           	callstack 0
  3995                           
  3996 ;; *************** function _ADCC_GetSingleConversion *****************
  3997 ;; Defined at:
  3998 ;;		line 137 in file "mcc_generated_files/adcc.c"
  3999 ;; Parameters:    Size  Location     Type
  4000 ;;  channel         1    wreg     enum E16058
  4001 ;; Auto vars:     Size  Location     Type
  4002 ;;  channel         1   23[COMRAM] enum E16058
  4003 ;; Return value:  Size  Location     Type
  4004 ;;                  2   19[COMRAM] unsigned short 
  4005 ;; Registers used:
  4006 ;;		wreg, status,2, status,0
  4007 ;; Tracked objects:
  4008 ;;		On entry : 0/0
  4009 ;;		On exit  : 0/0
  4010 ;;		Unchanged: 0/0
  4011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4012 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4013 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4014 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4015 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4016 ;;Total ram usage:        5 bytes
  4017 ;; Hardware stack levels used: 1
  4018 ;; Hardware stack levels required when called: 8
  4019 ;; This function calls:
  4020 ;;		Nothing
  4021 ;; This function is called by:
  4022 ;;		_loop
  4023 ;;		_getBatteryVoltage
  4024 ;; This function uses a non-reentrant model
  4025 ;;
  4026                           
  4027                           	psect	text18
  4028  003B70                     __ptext18:
  4029                           	callstack 0
  4030  003B70                     _ADCC_GetSingleConversion:
  4031                           	callstack 20
  4032                           
  4033                           ;incstack = 0
  4034                           ;ADCC_GetSingleConversion@channel stored from wreg
  4035  003B70  6E18               	movwf	ADCC_GetSingleConversion@channel^0,c
  4036  003B72                     
  4037                           ;mcc_generated_files/adcc.c: 137: adc_result_t ADCC_GetSingleConversion(adcc_channel_t c
      +                          hannel);mcc_generated_files/adcc.c: 138: {;mcc_generated_files/adcc.c: 140:     ADPCH = 
      +                          channel;
  4038  003B72  0060  F063  FEF1   	movff	ADCC_GetSingleConversion@channel,16113	;volatile
  4039  003B78                     
  4040                           ;mcc_generated_files/adcc.c: 143:     ADCON0bits.ADON = 1;
  4041  003B78  013E               	movlb	62	; () banked
  4042  003B7A  8FF8               	bsf	248,7,b	;volatile
  4043  003B7C                     
  4044                           ; BSR set to: 62
  4045                           ;mcc_generated_files/adcc.c: 146:     ADCON0bits.ADCONT = 0;
  4046  003B7C  9DF8               	bcf	248,6,b	;volatile
  4047  003B7E                     
  4048                           ; BSR set to: 62
  4049                           ;mcc_generated_files/adcc.c: 149:     ADCON0bits.ADGO = 1;
  4050  003B7E  81F8               	bsf	248,0,b	;volatile
  4051  003B80                     l976:
  4052                           
  4053                           ; BSR set to: 62
  4054                           ;mcc_generated_files/adcc.c: 153:     while (ADCON0bits.ADGO)
  4055  003B80  B1F8               	btfsc	248,0,b	;volatile
  4056  003B82  EFC5  F01D         	goto	u2831
  4057  003B86  EFC7  F01D         	goto	u2830
  4058  003B8A                     u2831:
  4059  003B8A  EFC0  F01D         	goto	l976
  4060  003B8E                     u2830:
  4061  003B8E                     
  4062                           ; BSR set to: 62
  4063                           ;mcc_generated_files/adcc.c: 159:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  4064  003B8E  51F0               	movf	240,w,b	;volatile
  4065  003B90  6E17               	movwf	(??_ADCC_GetSingleConversion+1)^0,c
  4066  003B92  6A16               	clrf	??_ADCC_GetSingleConversion^0,c
  4067  003B94  51EF               	movf	239,w,b	;volatile
  4068  003B96  2416               	addwf	??_ADCC_GetSingleConversion^0,w,c
  4069  003B98  6E14               	movwf	?_ADCC_GetSingleConversion^0,c
  4070  003B9A  0E00               	movlw	0
  4071  003B9C  2017               	addwfc	(??_ADCC_GetSingleConversion+1)^0,w,c
  4072  003B9E  6E15               	movwf	(?_ADCC_GetSingleConversion+1)^0,c
  4073  003BA0                     
  4074                           ; BSR set to: 62
  4075  003BA0  0012               	return		;funcret
  4076  003BA2                     __end_of_ADCC_GetSingleConversion:
  4077                           	callstack 0
  4078                           
  4079 ;; *************** function _calcSteering *****************
  4080 ;; Defined at:
  4081 ;;		line 153 in file "main.c"
  4082 ;; Parameters:    Size  Location     Type
  4083 ;;		None
  4084 ;; Auto vars:     Size  Location     Type
  4085 ;;  delta           2   38[COMRAM] short 
  4086 ;; Return value:  Size  Location     Type
  4087 ;;                  1    wreg      void 
  4088 ;; Registers used:
  4089 ;;		wreg, status,2, status,0, cstack
  4090 ;; Tracked objects:
  4091 ;;		On entry : 0/0
  4092 ;;		On exit  : 0/0
  4093 ;;		Unchanged: 0/0
  4094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4096 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4097 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4098 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4099 ;;Total ram usage:        4 bytes
  4100 ;; Hardware stack levels used: 1
  4101 ;; Hardware stack levels required when called: 10
  4102 ;; This function calls:
  4103 ;;		___awdiv
  4104 ;;		_setSteering
  4105 ;; This function is called by:
  4106 ;;		_loop
  4107 ;; This function uses a non-reentrant model
  4108 ;;
  4109                           
  4110                           	psect	text19
  4111  002A04                     __ptext19:
  4112                           	callstack 0
  4113  002A04                     _calcSteering:
  4114                           	callstack 19
  4115  002A04                     
  4116                           ;main.c: 154:     int16_t delta = (int16_t)(distLeft - distRight ) - (int8_t)((0) * 1.41
      +                          42135);
  4117  002A04  0100               	movlb	0	; () banked
  4118  002A06  5196               	movf	_distRight& (0+255),w,b	;volatile
  4119  002A08  5D9A               	subwf	_distLeft& (0+255),w,b	;volatile
  4120  002A0A  6E27               	movwf	calcSteering@delta^0,c
  4121  002A0C  5197               	movf	(_distRight+1)& (0+255),w,b	;volatile
  4122  002A0E  599B               	subwfb	(_distLeft+1)& (0+255),w,b	;volatile
  4123  002A10  6E28               	movwf	(calcSteering@delta+1)^0,c
  4124  002A12                     
  4125                           ; BSR set to: 0
  4126                           ;main.c: 155:     delta /= (2);
  4127  002A12  C027  F014         	movff	calcSteering@delta,___awdiv@dividend
  4128  002A16  C028  F015         	movff	calcSteering@delta+1,___awdiv@dividend+1
  4129  002A1A  0E00               	movlw	0
  4130  002A1C  6E17               	movwf	(___awdiv@divisor+1)^0,c
  4131  002A1E  0E02               	movlw	2
  4132  002A20  6E16               	movwf	___awdiv@divisor^0,c
  4133  002A22  EC7E  F018         	call	___awdiv	;wreg free
  4134  002A26  C014  F027         	movff	?___awdiv,calcSteering@delta
  4135  002A2A  C015  F028         	movff	?___awdiv+1,calcSteering@delta+1
  4136                           
  4137                           ;main.c: 159:     switch (driveMode){
  4138  002A2E  EF72  F015         	goto	l5128
  4139  002A32                     l5104:
  4140                           
  4141                           ; BSR set to: 0
  4142                           ;main.c: 161:             setSteering(delta, Ratio);
  4143  002A32  C027  F01C         	movff	calcSteering@delta,setSteering@steering
  4144  002A36  C028  F01D         	movff	calcSteering@delta+1,setSteering@steering+1
  4145  002A3A  0E02               	movlw	2
  4146  002A3C  6E1E               	movwf	setSteering@steeringMode^0,c
  4147  002A3E  EC3F  F010         	call	_setSteering	;wreg free
  4148                           
  4149                           ;main.c: 162:             break;
  4150  002A42  EF94  F015         	goto	l1284
  4151  002A46                     l5106:
  4152                           
  4153                           ; BSR set to: 0
  4154                           ;main.c: 164:             setSteering(delta, Front);
  4155  002A46  C027  F01C         	movff	calcSteering@delta,setSteering@steering
  4156  002A4A  C028  F01D         	movff	calcSteering@delta+1,setSteering@steering+1
  4157  002A4E  0E03               	movlw	3
  4158  002A50  6E1E               	movwf	setSteering@steeringMode^0,c
  4159  002A52  EC3F  F010         	call	_setSteering	;wreg free
  4160                           
  4161                           ;main.c: 165:             break;
  4162  002A56  EF94  F015         	goto	l1284
  4163  002A5A                     l5108:
  4164                           
  4165                           ; BSR set to: 0
  4166                           ;main.c: 167:             if(distLeft < distRight){
  4167  002A5A  5196               	movf	_distRight& (0+255),w,b	;volatile
  4168  002A5C  5D9A               	subwf	_distLeft& (0+255),w,b	;volatile
  4169  002A5E  5197               	movf	(_distRight+1)& (0+255),w,b	;volatile
  4170  002A60  599B               	subwfb	(_distLeft+1)& (0+255),w,b	;volatile
  4171  002A62  B0D8               	btfsc	status,0,c
  4172  002A64  EF36  F015         	goto	u3821
  4173  002A68  EF38  F015         	goto	u3820
  4174  002A6C                     u3821:
  4175  002A6C  EF42  F015         	goto	l5112
  4176  002A70                     u3820:
  4177  002A70                     
  4178                           ; BSR set to: 0
  4179                           ;main.c: 168:                 setSteering(-(65), Front);
  4180  002A70  0EFF               	movlw	255
  4181  002A72  6E1D               	movwf	(setSteering@steering+1)^0,c
  4182  002A74  0EBF               	movlw	191
  4183  002A76  6E1C               	movwf	setSteering@steering^0,c
  4184  002A78  0E03               	movlw	3
  4185  002A7A  6E1E               	movwf	setSteering@steeringMode^0,c
  4186  002A7C  EC3F  F010         	call	_setSteering	;wreg free
  4187                           
  4188                           ;main.c: 169:             }else{
  4189  002A80  EF94  F015         	goto	l1284
  4190  002A84                     l5112:
  4191                           
  4192                           ; BSR set to: 0
  4193                           ;main.c: 170:                 setSteering((65), Front);
  4194  002A84  0E00               	movlw	0
  4195  002A86  6E1D               	movwf	(setSteering@steering+1)^0,c
  4196  002A88  0E41               	movlw	65
  4197  002A8A  6E1C               	movwf	setSteering@steering^0,c
  4198  002A8C  0E03               	movlw	3
  4199  002A8E  6E1E               	movwf	setSteering@steeringMode^0,c
  4200  002A90  EC3F  F010         	call	_setSteering	;wreg free
  4201  002A94  EF94  F015         	goto	l1284
  4202  002A98                     l5114:
  4203                           
  4204                           ; BSR set to: 0
  4205                           ;main.c: 174:             if(curveMode == InCurve){
  4206  002A98  0E02               	movlw	2
  4207  002A9A  199E               	xorwf	_curveMode& (0+255),w,b
  4208  002A9C  A4D8               	btfss	status,2,c
  4209  002A9E  EF53  F015         	goto	u3831
  4210  002AA2  EF55  F015         	goto	u3830
  4211  002AA6                     u3831:
  4212  002AA6  EF23  F015         	goto	l5106
  4213  002AAA                     u3830:
  4214  002AAA                     
  4215                           ; BSR set to: 0
  4216                           ;main.c: 175:                 setSteering((65), Inverted);
  4217  002AAA  0E00               	movlw	0
  4218  002AAC  6E1D               	movwf	(setSteering@steering+1)^0,c
  4219  002AAE  0E41               	movlw	65
  4220  002AB0  6E1C               	movwf	setSteering@steering^0,c
  4221  002AB2  0E00               	movlw	0
  4222  002AB4  6E1E               	movwf	setSteering@steeringMode^0,c
  4223  002AB6  EC3F  F010         	call	_setSteering	;wreg free
  4224                           
  4225                           ;main.c: 176:             } else {
  4226  002ABA  EF94  F015         	goto	l1284
  4227  002ABE                     l5120:
  4228                           
  4229                           ; BSR set to: 0
  4230                           ;main.c: 181:             if(curveMode == InCurve){
  4231  002ABE  0E02               	movlw	2
  4232  002AC0  199E               	xorwf	_curveMode& (0+255),w,b
  4233  002AC2  A4D8               	btfss	status,2,c
  4234  002AC4  EF66  F015         	goto	u3841
  4235  002AC8  EF68  F015         	goto	u3840
  4236  002ACC                     u3841:
  4237  002ACC  EF23  F015         	goto	l5106
  4238  002AD0                     u3840:
  4239  002AD0                     
  4240                           ; BSR set to: 0
  4241                           ;main.c: 182:                 setSteering(-(65), Inverted);
  4242  002AD0  0EFF               	movlw	255
  4243  002AD2  6E1D               	movwf	(setSteering@steering+1)^0,c
  4244  002AD4  0EBF               	movlw	191
  4245  002AD6  6E1C               	movwf	setSteering@steering^0,c
  4246  002AD8  0E00               	movlw	0
  4247  002ADA  6E1E               	movwf	setSteering@steeringMode^0,c
  4248  002ADC  EC3F  F010         	call	_setSteering	;wreg free
  4249                           
  4250                           ;main.c: 183:             } else {
  4251  002AE0  EF94  F015         	goto	l1284
  4252  002AE4                     l5128:
  4253  002AE4  0100               	movlb	0	; () banked
  4254  002AE6  519F               	movf	_driveMode& (0+255),w,b
  4255  002AE8  6E25               	movwf	??_calcSteering^0,c
  4256  002AEA  6A26               	clrf	(??_calcSteering+1)^0,c
  4257                           
  4258                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4259                           ; Switch size 1, requested type "simple"
  4260                           ; Number of cases is 1, Range of values is 0 to 0
  4261                           ; switch strategies available:
  4262                           ; Name         Instructions Cycles
  4263                           ; simple_byte            4     3 (average)
  4264                           ;	Chosen strategy is simple_byte
  4265  002AEC  5026               	movf	(??_calcSteering+1)^0,w,c
  4266  002AEE  0A00               	xorlw	0	; case 0
  4267  002AF0  B4D8               	btfsc	status,2,c
  4268  002AF2  EF7D  F015         	goto	l6410
  4269  002AF6  EF94  F015         	goto	l1284
  4270  002AFA                     l6410:
  4271                           
  4272                           ; BSR set to: 0
  4273                           ; Switch size 1, requested type "simple"
  4274                           ; Number of cases is 5, Range of values is 0 to 4
  4275                           ; switch strategies available:
  4276                           ; Name         Instructions Cycles
  4277                           ; simple_byte           16     9 (average)
  4278                           ;	Chosen strategy is simple_byte
  4279  002AFA  5025               	movf	??_calcSteering^0,w,c
  4280  002AFC  0A00               	xorlw	0	; case 0
  4281  002AFE  B4D8               	btfsc	status,2,c
  4282  002B00  EF23  F015         	goto	l5106
  4283  002B04  0A01               	xorlw	1	; case 1
  4284  002B06  B4D8               	btfsc	status,2,c
  4285  002B08  EF19  F015         	goto	l5104
  4286  002B0C  0A03               	xorlw	3	; case 2
  4287  002B0E  B4D8               	btfsc	status,2,c
  4288  002B10  EF2D  F015         	goto	l5108
  4289  002B14  0A01               	xorlw	1	; case 3
  4290  002B16  B4D8               	btfsc	status,2,c
  4291  002B18  EF4C  F015         	goto	l5114
  4292  002B1C  0A07               	xorlw	7	; case 4
  4293  002B1E  B4D8               	btfsc	status,2,c
  4294  002B20  EF5F  F015         	goto	l5120
  4295  002B24  EF94  F015         	goto	l1284
  4296  002B28                     l1284:
  4297  002B28  0012               	return		;funcret
  4298  002B2A                     __end_of_calcSteering:
  4299                           	callstack 0
  4300                           
  4301 ;; *************** function _setSteering *****************
  4302 ;; Defined at:
  4303 ;;		line 193 in file "main.c"
  4304 ;; Parameters:    Size  Location     Type
  4305 ;;  steering        2   27[COMRAM] short 
  4306 ;;  steeringMode    1   29[COMRAM] enum E17302
  4307 ;; Auto vars:     Size  Location     Type
  4308 ;;  steeringB       2   34[COMRAM] short 
  4309 ;;  steeringF       2   32[COMRAM] short 
  4310 ;; Return value:  Size  Location     Type
  4311 ;;                  1    wreg      void 
  4312 ;; Registers used:
  4313 ;;		wreg, status,2, status,0, cstack
  4314 ;; Tracked objects:
  4315 ;;		On entry : 0/0
  4316 ;;		On exit  : 0/0
  4317 ;;		Unchanged: 0/0
  4318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4319 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4320 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4321 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4322 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4323 ;;Total ram usage:        9 bytes
  4324 ;; Hardware stack levels used: 1
  4325 ;; Hardware stack levels required when called: 9
  4326 ;; This function calls:
  4327 ;;		_PWM5_LoadDutyValue
  4328 ;;		_PWM6_LoadDutyValue
  4329 ;;		___awdiv
  4330 ;; This function is called by:
  4331 ;;		_loop
  4332 ;;		_calcSteering
  4333 ;; This function uses a non-reentrant model
  4334 ;;
  4335                           
  4336                           	psect	text20
  4337  00207E                     __ptext20:
  4338                           	callstack 0
  4339  00207E                     _setSteering:
  4340                           	callstack 20
  4341  00207E                     
  4342                           ;main.c: 194:     int16_t steeringF = 0, steeringB = 0;
  4343  00207E  0E00               	movlw	0
  4344  002080  6E22               	movwf	(setSteering@steeringF+1)^0,c
  4345  002082  0E00               	movlw	0
  4346  002084  6E21               	movwf	setSteering@steeringF^0,c
  4347  002086  0E00               	movlw	0
  4348  002088  6E24               	movwf	(setSteering@steeringB+1)^0,c
  4349  00208A  0E00               	movlw	0
  4350  00208C  6E23               	movwf	setSteering@steeringB^0,c
  4351                           
  4352                           ;main.c: 195:     switch(steeringMode){
  4353  00208E  EFAD  F010         	goto	l4418
  4354  002092                     l1288:
  4355                           
  4356                           ;main.c: 197:             steeringF = (-steering);
  4357  002092  C01C  F01F         	movff	setSteering@steering,??_setSteering
  4358  002096  C01D  F020         	movff	setSteering@steering+1,??_setSteering+1
  4359  00209A  1E1F               	comf	??_setSteering^0,f,c
  4360  00209C  1E20               	comf	(??_setSteering+1)^0,f,c
  4361  00209E  4A1F               	infsnz	??_setSteering^0,f,c
  4362  0020A0  2A20               	incf	(??_setSteering+1)^0,f,c
  4363  0020A2  C01F  F021         	movff	??_setSteering,setSteering@steeringF
  4364  0020A6  C020  F022         	movff	??_setSteering+1,setSteering@steeringF+1
  4365                           
  4366                           ;main.c: 198:             steeringB = steering;
  4367  0020AA  C01C  F023         	movff	setSteering@steering,setSteering@steeringB
  4368  0020AE  C01D  F024         	movff	setSteering@steering+1,setSteering@steeringB+1
  4369                           
  4370                           ;main.c: 199:             break;
  4371  0020B2  EFCE  F010         	goto	l4420
  4372  0020B6                     l1290:
  4373                           
  4374                           ;main.c: 201:             steeringF = (-steering);
  4375  0020B6  C01C  F01F         	movff	setSteering@steering,??_setSteering
  4376  0020BA  C01D  F020         	movff	setSteering@steering+1,??_setSteering+1
  4377  0020BE  1E1F               	comf	??_setSteering^0,f,c
  4378  0020C0  1E20               	comf	(??_setSteering+1)^0,f,c
  4379  0020C2  4A1F               	infsnz	??_setSteering^0,f,c
  4380  0020C4  2A20               	incf	(??_setSteering+1)^0,f,c
  4381  0020C6  C01F  F021         	movff	??_setSteering,setSteering@steeringF
  4382  0020CA  C020  F022         	movff	??_setSteering+1,setSteering@steeringF+1
  4383                           
  4384                           ;main.c: 202:             steeringB = (-steering);
  4385  0020CE  C01C  F01F         	movff	setSteering@steering,??_setSteering
  4386  0020D2  C01D  F020         	movff	setSteering@steering+1,??_setSteering+1
  4387  0020D6  1E1F               	comf	??_setSteering^0,f,c
  4388  0020D8  1E20               	comf	(??_setSteering+1)^0,f,c
  4389  0020DA  4A1F               	infsnz	??_setSteering^0,f,c
  4390  0020DC  2A20               	incf	(??_setSteering+1)^0,f,c
  4391  0020DE  C01F  F023         	movff	??_setSteering,setSteering@steeringB
  4392  0020E2  C020  F024         	movff	??_setSteering+1,setSteering@steeringB+1
  4393                           
  4394                           ;main.c: 203:             break;
  4395  0020E6  EFCE  F010         	goto	l4420
  4396  0020EA                     l1291:
  4397                           
  4398                           ;main.c: 205:             steeringF = (-steering);
  4399  0020EA  C01C  F01F         	movff	setSteering@steering,??_setSteering
  4400  0020EE  C01D  F020         	movff	setSteering@steering+1,??_setSteering+1
  4401  0020F2  1E1F               	comf	??_setSteering^0,f,c
  4402  0020F4  1E20               	comf	(??_setSteering+1)^0,f,c
  4403  0020F6  4A1F               	infsnz	??_setSteering^0,f,c
  4404  0020F8  2A20               	incf	(??_setSteering+1)^0,f,c
  4405  0020FA  C01F  F021         	movff	??_setSteering,setSteering@steeringF
  4406  0020FE  C020  F022         	movff	??_setSteering+1,setSteering@steeringF+1
  4407  002102                     
  4408                           ;main.c: 206:             steeringB = (steering / (3));
  4409  002102  C01C  F014         	movff	setSteering@steering,___awdiv@dividend
  4410  002106  C01D  F015         	movff	setSteering@steering+1,___awdiv@dividend+1
  4411  00210A  0E00               	movlw	0
  4412  00210C  6E17               	movwf	(___awdiv@divisor+1)^0,c
  4413  00210E  0E03               	movlw	3
  4414  002110  6E16               	movwf	___awdiv@divisor^0,c
  4415  002112  EC7E  F018         	call	___awdiv	;wreg free
  4416  002116  C014  F023         	movff	?___awdiv,setSteering@steeringB
  4417  00211A  C015  F024         	movff	?___awdiv+1,setSteering@steeringB+1
  4418                           
  4419                           ;main.c: 207:             break;
  4420  00211E  EFCE  F010         	goto	l4420
  4421  002122                     l1292:
  4422                           
  4423                           ;main.c: 209:             steeringF = (-steering);
  4424  002122  C01C  F01F         	movff	setSteering@steering,??_setSteering
  4425  002126  C01D  F020         	movff	setSteering@steering+1,??_setSteering+1
  4426  00212A  1E1F               	comf	??_setSteering^0,f,c
  4427  00212C  1E20               	comf	(??_setSteering+1)^0,f,c
  4428  00212E  4A1F               	infsnz	??_setSteering^0,f,c
  4429  002130  2A20               	incf	(??_setSteering+1)^0,f,c
  4430  002132  C01F  F021         	movff	??_setSteering,setSteering@steeringF
  4431  002136  C020  F022         	movff	??_setSteering+1,setSteering@steeringF+1
  4432                           
  4433                           ;main.c: 211:             break;
  4434  00213A  EFCE  F010         	goto	l4420
  4435  00213E                     l1293:
  4436                           
  4437                           ;main.c: 214:             steeringB = (-steering);
  4438  00213E  C01C  F01F         	movff	setSteering@steering,??_setSteering
  4439  002142  C01D  F020         	movff	setSteering@steering+1,??_setSteering+1
  4440  002146  1E1F               	comf	??_setSteering^0,f,c
  4441  002148  1E20               	comf	(??_setSteering+1)^0,f,c
  4442  00214A  4A1F               	infsnz	??_setSteering^0,f,c
  4443  00214C  2A20               	incf	(??_setSteering+1)^0,f,c
  4444  00214E  C01F  F023         	movff	??_setSteering,setSteering@steeringB
  4445  002152  C020  F024         	movff	??_setSteering+1,setSteering@steeringB+1
  4446                           
  4447                           ;main.c: 215:             break;
  4448  002156  EFCE  F010         	goto	l4420
  4449  00215A                     l4418:
  4450  00215A  501E               	movf	setSteering@steeringMode^0,w,c
  4451  00215C  6E1F               	movwf	??_setSteering^0,c
  4452  00215E  6A20               	clrf	(??_setSteering+1)^0,c
  4453                           
  4454                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4455                           ; Switch size 1, requested type "simple"
  4456                           ; Number of cases is 1, Range of values is 0 to 0
  4457                           ; switch strategies available:
  4458                           ; Name         Instructions Cycles
  4459                           ; simple_byte            4     3 (average)
  4460                           ;	Chosen strategy is simple_byte
  4461  002160  5020               	movf	(??_setSteering+1)^0,w,c
  4462  002162  0A00               	xorlw	0	; case 0
  4463  002164  B4D8               	btfsc	status,2,c
  4464  002166  EFB7  F010         	goto	l6412
  4465  00216A  EFCE  F010         	goto	l4420
  4466  00216E                     l6412:
  4467                           
  4468                           ; Switch size 1, requested type "simple"
  4469                           ; Number of cases is 5, Range of values is 0 to 4
  4470                           ; switch strategies available:
  4471                           ; Name         Instructions Cycles
  4472                           ; simple_byte           16     9 (average)
  4473                           ;	Chosen strategy is simple_byte
  4474  00216E  501F               	movf	??_setSteering^0,w,c
  4475  002170  0A00               	xorlw	0	; case 0
  4476  002172  B4D8               	btfsc	status,2,c
  4477  002174  EF49  F010         	goto	l1288
  4478  002178  0A01               	xorlw	1	; case 1
  4479  00217A  B4D8               	btfsc	status,2,c
  4480  00217C  EF5B  F010         	goto	l1290
  4481  002180  0A03               	xorlw	3	; case 2
  4482  002182  B4D8               	btfsc	status,2,c
  4483  002184  EF75  F010         	goto	l1291
  4484  002188  0A01               	xorlw	1	; case 3
  4485  00218A  B4D8               	btfsc	status,2,c
  4486  00218C  EF91  F010         	goto	l1292
  4487  002190  0A07               	xorlw	7	; case 4
  4488  002192  B4D8               	btfsc	status,2,c
  4489  002194  EF9F  F010         	goto	l1293
  4490  002198  EFCE  F010         	goto	l4420
  4491  00219C                     l4420:
  4492                           
  4493                           ;main.c: 222:     if(steeringF > ((65))){
  4494  00219C  BE22               	btfsc	(setSteering@steeringF+1)^0,7,c
  4495  00219E  EFDA  F010         	goto	u2841
  4496  0021A2  5022               	movf	(setSteering@steeringF+1)^0,w,c
  4497  0021A4  E109               	bnz	u2840
  4498  0021A6  0E42               	movlw	66
  4499  0021A8  5C21               	subwf	setSteering@steeringF^0,w,c
  4500  0021AA  A0D8               	btfss	status,0,c
  4501  0021AC  EFDA  F010         	goto	u2841
  4502  0021B0  EFDC  F010         	goto	u2840
  4503  0021B4                     u2841:
  4504  0021B4  EFE2  F010         	goto	l4424
  4505  0021B8                     u2840:
  4506  0021B8                     
  4507                           ;main.c: 223:         steeringF = ((65));
  4508  0021B8  0E00               	movlw	0
  4509  0021BA  6E22               	movwf	(setSteering@steeringF+1)^0,c
  4510  0021BC  0E41               	movlw	65
  4511  0021BE  6E21               	movwf	setSteering@steeringF^0,c
  4512                           
  4513                           ;main.c: 224:     } else if(steeringF < (-(65))){
  4514  0021C0  EFF4  F010         	goto	l4428
  4515  0021C4                     l4424:
  4516  0021C4  AE22               	btfss	(setSteering@steeringF+1)^0,7,c
  4517  0021C6  EFEE  F010         	goto	u2851
  4518  0021CA  0EBF               	movlw	191
  4519  0021CC  5C21               	subwf	setSteering@steeringF^0,w,c
  4520  0021CE  0EFF               	movlw	255
  4521  0021D0  5822               	subwfb	(setSteering@steeringF+1)^0,w,c
  4522  0021D2  B0D8               	btfsc	status,0,c
  4523  0021D4  EFEE  F010         	goto	u2851
  4524  0021D8  EFF0  F010         	goto	u2850
  4525  0021DC                     u2851:
  4526  0021DC  EFF4  F010         	goto	l4428
  4527  0021E0                     u2850:
  4528  0021E0                     
  4529                           ;main.c: 225:         steeringF = (-(65));
  4530  0021E0  0EFF               	movlw	255
  4531  0021E2  6E22               	movwf	(setSteering@steeringF+1)^0,c
  4532  0021E4  0EBF               	movlw	191
  4533  0021E6  6E21               	movwf	setSteering@steeringF^0,c
  4534  0021E8                     l4428:
  4535                           
  4536                           ;main.c: 228:     if(steeringB > ((45))){
  4537  0021E8  BE24               	btfsc	(setSteering@steeringB+1)^0,7,c
  4538  0021EA  EF00  F011         	goto	u2861
  4539  0021EE  5024               	movf	(setSteering@steeringB+1)^0,w,c
  4540  0021F0  E109               	bnz	u2860
  4541  0021F2  0E2E               	movlw	46
  4542  0021F4  5C23               	subwf	setSteering@steeringB^0,w,c
  4543  0021F6  A0D8               	btfss	status,0,c
  4544  0021F8  EF00  F011         	goto	u2861
  4545  0021FC  EF02  F011         	goto	u2860
  4546  002200                     u2861:
  4547  002200  EF08  F011         	goto	l4432
  4548  002204                     u2860:
  4549  002204                     
  4550                           ;main.c: 229:         steeringB = ((45));
  4551  002204  0E00               	movlw	0
  4552  002206  6E24               	movwf	(setSteering@steeringB+1)^0,c
  4553  002208  0E2D               	movlw	45
  4554  00220A  6E23               	movwf	setSteering@steeringB^0,c
  4555                           
  4556                           ;main.c: 230:     } else if(steeringB < (-(45))){
  4557  00220C  EF1A  F011         	goto	l4436
  4558  002210                     l4432:
  4559  002210  AE24               	btfss	(setSteering@steeringB+1)^0,7,c
  4560  002212  EF14  F011         	goto	u2871
  4561  002216  0ED3               	movlw	211
  4562  002218  5C23               	subwf	setSteering@steeringB^0,w,c
  4563  00221A  0EFF               	movlw	255
  4564  00221C  5824               	subwfb	(setSteering@steeringB+1)^0,w,c
  4565  00221E  B0D8               	btfsc	status,0,c
  4566  002220  EF14  F011         	goto	u2871
  4567  002224  EF16  F011         	goto	u2870
  4568  002228                     u2871:
  4569  002228  EF1A  F011         	goto	l4436
  4570  00222C                     u2870:
  4571  00222C                     
  4572                           ;main.c: 231:         steeringB = (-(45));
  4573  00222C  0EFF               	movlw	255
  4574  00222E  6E24               	movwf	(setSteering@steeringB+1)^0,c
  4575  002230  0ED3               	movlw	211
  4576  002232  6E23               	movwf	setSteering@steeringB^0,c
  4577  002234                     l4436:
  4578                           
  4579                           ;main.c: 235:     PWM6_LoadDutyValue((uint16_t)((352) - steeringF));
  4580  002234  5021               	movf	setSteering@steeringF^0,w,c
  4581  002236  0860               	sublw	96
  4582  002238  6E14               	movwf	PWM6_LoadDutyValue@dutyValue^0,c
  4583  00223A  5022               	movf	(setSteering@steeringF+1)^0,w,c
  4584  00223C  A0D8               	btfss	status,0,c
  4585  00223E  2AE8               	incf	wreg,f,c
  4586  002240  0801               	sublw	1
  4587  002242  6E15               	movwf	(PWM6_LoadDutyValue@dutyValue+1)^0,c
  4588  002244  EC1B  F01D         	call	_PWM6_LoadDutyValue	;wreg free
  4589  002248                     
  4590                           ;main.c: 236:     PWM5_LoadDutyValue((uint16_t)((357) - steeringB));
  4591  002248  5023               	movf	setSteering@steeringB^0,w,c
  4592  00224A  0865               	sublw	101
  4593  00224C  6E14               	movwf	PWM5_LoadDutyValue@dutyValue^0,c
  4594  00224E  5024               	movf	(setSteering@steeringB+1)^0,w,c
  4595  002250  A0D8               	btfss	status,0,c
  4596  002252  2AE8               	incf	wreg,f,c
  4597  002254  0801               	sublw	1
  4598  002256  6E15               	movwf	(PWM5_LoadDutyValue@dutyValue+1)^0,c
  4599  002258  EC35  F01D         	call	_PWM5_LoadDutyValue	;wreg free
  4600  00225C  0012               	return		;funcret
  4601  00225E                     __end_of_setSteering:
  4602                           	callstack 0
  4603                           
  4604 ;; *************** function ___awdiv *****************
  4605 ;; Defined at:
  4606 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  4607 ;; Parameters:    Size  Location     Type
  4608 ;;  dividend        2   19[COMRAM] int 
  4609 ;;  divisor         2   21[COMRAM] int 
  4610 ;; Auto vars:     Size  Location     Type
  4611 ;;  quotient        2   25[COMRAM] int 
  4612 ;;  sign            1   24[COMRAM] unsigned char 
  4613 ;;  counter         1   23[COMRAM] unsigned char 
  4614 ;; Return value:  Size  Location     Type
  4615 ;;                  2   19[COMRAM] int 
  4616 ;; Registers used:
  4617 ;;		wreg, status,2, status,0
  4618 ;; Tracked objects:
  4619 ;;		On entry : 0/0
  4620 ;;		On exit  : 0/0
  4621 ;;		Unchanged: 0/0
  4622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4623 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4624 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4626 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4627 ;;Total ram usage:        8 bytes
  4628 ;; Hardware stack levels used: 1
  4629 ;; Hardware stack levels required when called: 8
  4630 ;; This function calls:
  4631 ;;		Nothing
  4632 ;; This function is called by:
  4633 ;;		_calcSteering
  4634 ;;		_setSteering
  4635 ;; This function uses a non-reentrant model
  4636 ;;
  4637                           
  4638                           	psect	text21
  4639  0030FC                     __ptext21:
  4640                           	callstack 0
  4641  0030FC                     ___awdiv:
  4642                           	callstack 20
  4643  0030FC  0E00               	movlw	0
  4644  0030FE  6E19               	movwf	___awdiv@sign^0,c
  4645  003100  BE17               	btfsc	(___awdiv@divisor+1)^0,7,c
  4646  003102  EF87  F018         	goto	u2740
  4647  003106  EF85  F018         	goto	u2741
  4648  00310A                     u2741:
  4649  00310A  EF8D  F018         	goto	l4314
  4650  00310E                     u2740:
  4651  00310E  6C16               	negf	___awdiv@divisor^0,c
  4652  003110  1E17               	comf	(___awdiv@divisor+1)^0,f,c
  4653  003112  B0D8               	btfsc	status,0,c
  4654  003114  2A17               	incf	(___awdiv@divisor+1)^0,f,c
  4655  003116  0E01               	movlw	1
  4656  003118  6E19               	movwf	___awdiv@sign^0,c
  4657  00311A                     l4314:
  4658  00311A  BE15               	btfsc	(___awdiv@dividend+1)^0,7,c
  4659  00311C  EF94  F018         	goto	u2750
  4660  003120  EF92  F018         	goto	u2751
  4661  003124                     u2751:
  4662  003124  EF9A  F018         	goto	l4320
  4663  003128                     u2750:
  4664  003128  6C14               	negf	___awdiv@dividend^0,c
  4665  00312A  1E15               	comf	(___awdiv@dividend+1)^0,f,c
  4666  00312C  B0D8               	btfsc	status,0,c
  4667  00312E  2A15               	incf	(___awdiv@dividend+1)^0,f,c
  4668  003130  0E01               	movlw	1
  4669  003132  1A19               	xorwf	___awdiv@sign^0,f,c
  4670  003134                     l4320:
  4671  003134  0E00               	movlw	0
  4672  003136  6E1B               	movwf	(___awdiv@quotient+1)^0,c
  4673  003138  0E00               	movlw	0
  4674  00313A  6E1A               	movwf	___awdiv@quotient^0,c
  4675  00313C  5016               	movf	___awdiv@divisor^0,w,c
  4676  00313E  1017               	iorwf	(___awdiv@divisor+1)^0,w,c
  4677  003140  B4D8               	btfsc	status,2,c
  4678  003142  EFA5  F018         	goto	u2761
  4679  003146  EFA7  F018         	goto	u2760
  4680  00314A                     u2761:
  4681  00314A  EFCF  F018         	goto	l4342
  4682  00314E                     u2760:
  4683  00314E  0E01               	movlw	1
  4684  003150  6E18               	movwf	___awdiv@counter^0,c
  4685  003152  EFAF  F018         	goto	l4328
  4686  003156                     l4326:
  4687  003156  90D8               	bcf	status,0,c
  4688  003158  3616               	rlcf	___awdiv@divisor^0,f,c
  4689  00315A  3617               	rlcf	(___awdiv@divisor+1)^0,f,c
  4690  00315C  2A18               	incf	___awdiv@counter^0,f,c
  4691  00315E                     l4328:
  4692  00315E  AE17               	btfss	(___awdiv@divisor+1)^0,7,c
  4693  003160  EFB4  F018         	goto	u2771
  4694  003164  EFB6  F018         	goto	u2770
  4695  003168                     u2771:
  4696  003168  EFAB  F018         	goto	l4326
  4697  00316C                     u2770:
  4698  00316C                     l4330:
  4699  00316C  90D8               	bcf	status,0,c
  4700  00316E  361A               	rlcf	___awdiv@quotient^0,f,c
  4701  003170  361B               	rlcf	(___awdiv@quotient+1)^0,f,c
  4702  003172  5016               	movf	___awdiv@divisor^0,w,c
  4703  003174  5C14               	subwf	___awdiv@dividend^0,w,c
  4704  003176  5017               	movf	(___awdiv@divisor+1)^0,w,c
  4705  003178  5815               	subwfb	(___awdiv@dividend+1)^0,w,c
  4706  00317A  A0D8               	btfss	status,0,c
  4707  00317C  EFC2  F018         	goto	u2781
  4708  003180  EFC4  F018         	goto	u2780
  4709  003184                     u2781:
  4710  003184  EFC9  F018         	goto	l4338
  4711  003188                     u2780:
  4712  003188  5016               	movf	___awdiv@divisor^0,w,c
  4713  00318A  5E14               	subwf	___awdiv@dividend^0,f,c
  4714  00318C  5017               	movf	(___awdiv@divisor+1)^0,w,c
  4715  00318E  5A15               	subwfb	(___awdiv@dividend+1)^0,f,c
  4716  003190  801A               	bsf	___awdiv@quotient^0,0,c
  4717  003192                     l4338:
  4718  003192  90D8               	bcf	status,0,c
  4719  003194  3217               	rrcf	(___awdiv@divisor+1)^0,f,c
  4720  003196  3216               	rrcf	___awdiv@divisor^0,f,c
  4721  003198  2E18               	decfsz	___awdiv@counter^0,f,c
  4722  00319A  EFB6  F018         	goto	l4330
  4723  00319E                     l4342:
  4724  00319E  5019               	movf	___awdiv@sign^0,w,c
  4725  0031A0  B4D8               	btfsc	status,2,c
  4726  0031A2  EFD5  F018         	goto	u2791
  4727  0031A6  EFD7  F018         	goto	u2790
  4728  0031AA                     u2791:
  4729  0031AA  EFDB  F018         	goto	l4346
  4730  0031AE                     u2790:
  4731  0031AE  6C1A               	negf	___awdiv@quotient^0,c
  4732  0031B0  1E1B               	comf	(___awdiv@quotient+1)^0,f,c
  4733  0031B2  B0D8               	btfsc	status,0,c
  4734  0031B4  2A1B               	incf	(___awdiv@quotient+1)^0,f,c
  4735  0031B6                     l4346:
  4736  0031B6  C01A  F014         	movff	___awdiv@quotient,?___awdiv
  4737  0031BA  C01B  F015         	movff	___awdiv@quotient+1,?___awdiv+1
  4738  0031BE  0012               	return		;funcret
  4739  0031C0                     __end_of___awdiv:
  4740                           	callstack 0
  4741                           
  4742 ;; *************** function _PWM6_LoadDutyValue *****************
  4743 ;; Defined at:
  4744 ;;		line 74 in file "mcc_generated_files/pwm6.c"
  4745 ;; Parameters:    Size  Location     Type
  4746 ;;  dutyValue       2   19[COMRAM] unsigned short 
  4747 ;; Auto vars:     Size  Location     Type
  4748 ;;		None
  4749 ;; Return value:  Size  Location     Type
  4750 ;;                  1    wreg      void 
  4751 ;; Registers used:
  4752 ;;		wreg, status,2, status,0
  4753 ;; Tracked objects:
  4754 ;;		On entry : 0/0
  4755 ;;		On exit  : 0/0
  4756 ;;		Unchanged: 0/0
  4757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4758 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4760 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4761 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4762 ;;Total ram usage:        4 bytes
  4763 ;; Hardware stack levels used: 1
  4764 ;; Hardware stack levels required when called: 8
  4765 ;; This function calls:
  4766 ;;		Nothing
  4767 ;; This function is called by:
  4768 ;;		_setSteering
  4769 ;; This function uses a non-reentrant model
  4770 ;;
  4771                           
  4772                           	psect	text22
  4773  003A36                     __ptext22:
  4774                           	callstack 0
  4775  003A36                     _PWM6_LoadDutyValue:
  4776                           	callstack 20
  4777  003A36                     
  4778                           ;mcc_generated_files/pwm6.c: 74:  void PWM6_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm6.c: 75:  {;mcc_generated_files/pwm6.c: 77:      PWM6DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  4779  003A36  C014  F016         	movff	PWM6_LoadDutyValue@dutyValue,??_PWM6_LoadDutyValue
  4780  003A3A  C015  F017         	movff	PWM6_LoadDutyValue@dutyValue+1,??_PWM6_LoadDutyValue+1
  4781  003A3E  90D8               	bcf	status,0,c
  4782  003A40  3217               	rrcf	(??_PWM6_LoadDutyValue+1)^0,f,c
  4783  003A42  3216               	rrcf	??_PWM6_LoadDutyValue^0,f,c
  4784  003A44  90D8               	bcf	status,0,c
  4785  003A46  3217               	rrcf	(??_PWM6_LoadDutyValue+1)^0,f,c
  4786  003A48  3216               	rrcf	??_PWM6_LoadDutyValue^0,f,c
  4787  003A4A  5016               	movf	??_PWM6_LoadDutyValue^0,w,c
  4788  003A4C  6E69               	movwf	105,c	;volatile
  4789                           
  4790                           ;mcc_generated_files/pwm6.c: 80:      PWM6DCL = (dutyValue & 0x0003)<<6;
  4791  003A4E  C014  F016         	movff	PWM6_LoadDutyValue@dutyValue,??_PWM6_LoadDutyValue
  4792  003A52  0E03               	movlw	3
  4793  003A54  1616               	andwf	??_PWM6_LoadDutyValue^0,f,c
  4794  003A56  0E06               	movlw	6
  4795  003A58  6E17               	movwf	(??_PWM6_LoadDutyValue+1)^0,c
  4796  003A5A                     u2675:
  4797  003A5A  90D8               	bcf	status,0,c
  4798  003A5C  3616               	rlcf	??_PWM6_LoadDutyValue^0,f,c
  4799  003A5E  2E17               	decfsz	(??_PWM6_LoadDutyValue+1)^0,f,c
  4800  003A60  EF2D  F01D         	goto	u2675
  4801  003A64  5016               	movf	??_PWM6_LoadDutyValue^0,w,c
  4802  003A66  6E68               	movwf	104,c	;volatile
  4803  003A68  0012               	return		;funcret
  4804  003A6A                     __end_of_PWM6_LoadDutyValue:
  4805                           	callstack 0
  4806                           
  4807 ;; *************** function _PWM5_LoadDutyValue *****************
  4808 ;; Defined at:
  4809 ;;		line 74 in file "mcc_generated_files/pwm5.c"
  4810 ;; Parameters:    Size  Location     Type
  4811 ;;  dutyValue       2   19[COMRAM] unsigned short 
  4812 ;; Auto vars:     Size  Location     Type
  4813 ;;		None
  4814 ;; Return value:  Size  Location     Type
  4815 ;;                  1    wreg      void 
  4816 ;; Registers used:
  4817 ;;		wreg, status,2, status,0
  4818 ;; Tracked objects:
  4819 ;;		On entry : 0/0
  4820 ;;		On exit  : 0/0
  4821 ;;		Unchanged: 0/0
  4822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4823 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4825 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4826 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4827 ;;Total ram usage:        4 bytes
  4828 ;; Hardware stack levels used: 1
  4829 ;; Hardware stack levels required when called: 8
  4830 ;; This function calls:
  4831 ;;		Nothing
  4832 ;; This function is called by:
  4833 ;;		_setSteering
  4834 ;; This function uses a non-reentrant model
  4835 ;;
  4836                           
  4837                           	psect	text23
  4838  003A6A                     __ptext23:
  4839                           	callstack 0
  4840  003A6A                     _PWM5_LoadDutyValue:
  4841                           	callstack 20
  4842  003A6A                     
  4843                           ;mcc_generated_files/pwm5.c: 74:  void PWM5_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm5.c: 75:  {;mcc_generated_files/pwm5.c: 77:      PWM5DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  4844  003A6A  C014  F016         	movff	PWM5_LoadDutyValue@dutyValue,??_PWM5_LoadDutyValue
  4845  003A6E  C015  F017         	movff	PWM5_LoadDutyValue@dutyValue+1,??_PWM5_LoadDutyValue+1
  4846  003A72  90D8               	bcf	status,0,c
  4847  003A74  3217               	rrcf	(??_PWM5_LoadDutyValue+1)^0,f,c
  4848  003A76  3216               	rrcf	??_PWM5_LoadDutyValue^0,f,c
  4849  003A78  90D8               	bcf	status,0,c
  4850  003A7A  3217               	rrcf	(??_PWM5_LoadDutyValue+1)^0,f,c
  4851  003A7C  3216               	rrcf	??_PWM5_LoadDutyValue^0,f,c
  4852  003A7E  5016               	movf	??_PWM5_LoadDutyValue^0,w,c
  4853  003A80  6E6D               	movwf	109,c	;volatile
  4854                           
  4855                           ;mcc_generated_files/pwm5.c: 80:      PWM5DCL = (dutyValue & 0x0003)<<6;
  4856  003A82  C014  F016         	movff	PWM5_LoadDutyValue@dutyValue,??_PWM5_LoadDutyValue
  4857  003A86  0E03               	movlw	3
  4858  003A88  1616               	andwf	??_PWM5_LoadDutyValue^0,f,c
  4859  003A8A  0E06               	movlw	6
  4860  003A8C  6E17               	movwf	(??_PWM5_LoadDutyValue+1)^0,c
  4861  003A8E                     u2665:
  4862  003A8E  90D8               	bcf	status,0,c
  4863  003A90  3616               	rlcf	??_PWM5_LoadDutyValue^0,f,c
  4864  003A92  2E17               	decfsz	(??_PWM5_LoadDutyValue+1)^0,f,c
  4865  003A94  EF47  F01D         	goto	u2665
  4866  003A98  5016               	movf	??_PWM5_LoadDutyValue^0,w,c
  4867  003A9A  6E6C               	movwf	108,c	;volatile
  4868  003A9C  0012               	return		;funcret
  4869  003A9E                     __end_of_PWM5_LoadDutyValue:
  4870                           	callstack 0
  4871                           
  4872 ;; *************** function _calcSpeed *****************
  4873 ;; Defined at:
  4874 ;;		line 239 in file "main.c"
  4875 ;; Parameters:    Size  Location     Type
  4876 ;;		None
  4877 ;; Auto vars:     Size  Location     Type
  4878 ;;  speed           2   33[BANK0 ] short 
  4879 ;; Return value:  Size  Location     Type
  4880 ;;                  1    wreg      void 
  4881 ;; Registers used:
  4882 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4883 ;; Tracked objects:
  4884 ;;		On entry : 0/0
  4885 ;;		On exit  : 0/0
  4886 ;;		Unchanged: 0/0
  4887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4889 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4890 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4891 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4892 ;;Total ram usage:        4 bytes
  4893 ;; Hardware stack levels used: 1
  4894 ;; Hardware stack levels required when called: 9
  4895 ;; This function calls:
  4896 ;;		___fladd
  4897 ;;		___flmul
  4898 ;;		___fltol
  4899 ;;		___xxtofl
  4900 ;; This function is called by:
  4901 ;;		_loop
  4902 ;; This function uses a non-reentrant model
  4903 ;;
  4904                           
  4905                           	psect	text24
  4906  00225E                     __ptext24:
  4907                           	callstack 0
  4908  00225E                     _calcSpeed:
  4909                           	callstack 20
  4910  00225E                     
  4911                           ;main.c: 240:     int16_t speed = 0;
  4912  00225E  0E00               	movlw	0
  4913  002260  0100               	movlb	0	; () banked
  4914  002262  6FC4               	movwf	(calcSpeed@speed+1)& (0+255),b
  4915  002264  0E00               	movlw	0
  4916  002266  6FC3               	movwf	calcSpeed@speed& (0+255),b
  4917                           
  4918                           ;main.c: 242:     switch (driveMode){
  4919  002268  EFCF  F011         	goto	l6274
  4920  00226C                     l6242:
  4921                           
  4922                           ; BSR set to: 0
  4923                           ;main.c: 244:             if(distFront > 40) {
  4924  00226C  51A1               	movf	(_distFront+1)& (0+255),w,b	;volatile
  4925  00226E  E109               	bnz	u5500
  4926  002270  0E29               	movlw	41
  4927  002272  5DA0               	subwf	_distFront& (0+255),w,b	;volatile
  4928  002274  A0D8               	btfss	status,0,c
  4929  002276  EF3F  F011         	goto	u5501
  4930  00227A  EF41  F011         	goto	u5500
  4931  00227E                     u5501:
  4932  00227E  EF43  F011         	goto	l6246
  4933  002282                     u5500:
  4934  002282                     
  4935                           ; BSR set to: 0
  4936                           ;main.c: 245:                 driveMode = Strait;
  4937  002282  0E00               	movlw	0
  4938  002284  6F9F               	movwf	_driveMode& (0+255),b
  4939  002286                     l6246:
  4940                           
  4941                           ; BSR set to: 0
  4942                           ;main.c: 248:             if(distFront < 40 && setSpeed > 0){
  4943  002286  51A1               	movf	(_distFront+1)& (0+255),w,b	;volatile
  4944  002288  E107               	bnz	u5511
  4945  00228A  0E28               	movlw	40
  4946  00228C  5DA0               	subwf	_distFront& (0+255),w,b	;volatile
  4947  00228E  B0D8               	btfsc	status,0,c
  4948  002290  EF4C  F011         	goto	u5511
  4949  002294  EF4E  F011         	goto	u5510
  4950  002298                     u5511:
  4951  002298  EF64  F011         	goto	l6254
  4952  00229C                     u5510:
  4953  00229C                     
  4954                           ; BSR set to: 0
  4955  00229C  BF8D               	btfsc	(_setSpeed+1)& (0+255),7,b
  4956  00229E  EF59  F011         	goto	u5521
  4957  0022A2  518D               	movf	(_setSpeed+1)& (0+255),w,b
  4958  0022A4  E108               	bnz	u5520
  4959  0022A6  058C               	decf	_setSpeed& (0+255),w,b
  4960  0022A8  A0D8               	btfss	status,0,c
  4961  0022AA  EF59  F011         	goto	u5521
  4962  0022AE  EF5B  F011         	goto	u5520
  4963  0022B2                     u5521:
  4964  0022B2  EF64  F011         	goto	l6254
  4965  0022B6                     u5520:
  4966  0022B6                     
  4967                           ; BSR set to: 0
  4968                           ;main.c: 249:                 speed = setSpeed;
  4969  0022B6  C08C  F0C3         	movff	_setSpeed,calcSpeed@speed
  4970  0022BA  C08D  F0C4         	movff	_setSpeed+1,calcSpeed@speed+1
  4971  0022BE                     
  4972                           ; BSR set to: 0
  4973                           ;main.c: 250:                 speed -= 1;
  4974  0022BE  07C3               	decf	calcSpeed@speed& (0+255),f,b
  4975  0022C0  A0D8               	btfss	status,0,c
  4976  0022C2  07C4               	decf	(calcSpeed@speed+1)& (0+255),f,b
  4977                           
  4978                           ;main.c: 251:             }else if( distFront < 20){
  4979  0022C4  EFF0  F011         	goto	l6276
  4980  0022C8                     l6254:
  4981                           
  4982                           ; BSR set to: 0
  4983  0022C8  51A1               	movf	(_distFront+1)& (0+255),w,b	;volatile
  4984  0022CA  E107               	bnz	u5531
  4985  0022CC  0E14               	movlw	20
  4986  0022CE  5DA0               	subwf	_distFront& (0+255),w,b	;volatile
  4987  0022D0  B0D8               	btfsc	status,0,c
  4988  0022D2  EF6D  F011         	goto	u5531
  4989  0022D6  EF6F  F011         	goto	u5530
  4990  0022DA                     u5531:
  4991  0022DA  EFF0  F011         	goto	l6276
  4992  0022DE                     u5530:
  4993  0022DE                     
  4994                           ; BSR set to: 0
  4995                           ;main.c: 252:                 speed = setSpeed;
  4996  0022DE  C08C  F0C3         	movff	_setSpeed,calcSpeed@speed
  4997  0022E2  C08D  F0C4         	movff	_setSpeed+1,calcSpeed@speed+1
  4998  0022E6                     
  4999                           ; BSR set to: 0
  5000                           ;main.c: 253:                 speed -= 2;
  5001  0022E6  0EFE               	movlw	254
  5002  0022E8  27C3               	addwf	calcSpeed@speed& (0+255),f,b
  5003  0022EA  0EFF               	movlw	255
  5004  0022EC  23C4               	addwfc	(calcSpeed@speed+1)& (0+255),f,b
  5005  0022EE  EFF0  F011         	goto	l6276
  5006  0022F2                     l6260:
  5007                           
  5008                           ; BSR set to: 0
  5009                           ;main.c: 257:             if(distFront < 40) {
  5010  0022F2  51A1               	movf	(_distFront+1)& (0+255),w,b	;volatile
  5011  0022F4  E107               	bnz	u5541
  5012  0022F6  0E28               	movlw	40
  5013  0022F8  5DA0               	subwf	_distFront& (0+255),w,b	;volatile
  5014  0022FA  B0D8               	btfsc	status,0,c
  5015  0022FC  EF82  F011         	goto	u5541
  5016  002300  EF84  F011         	goto	u5540
  5017  002304                     u5541:
  5018  002304  EF86  F011         	goto	l6264
  5019  002308                     u5540:
  5020  002308                     
  5021                           ; BSR set to: 0
  5022                           ;main.c: 258:                 driveMode = Brake;
  5023  002308  0E01               	movlw	1
  5024  00230A  6F9F               	movwf	_driveMode& (0+255),b
  5025  00230C                     l6264:
  5026                           
  5027                           ; BSR set to: 0
  5028                           ;main.c: 261:             speed = (int16_t)((0.8) * distFront + (150));
  5029  00230C  0E00               	movlw	0
  5030  00230E  6E37               	movwf	___fladd@a^0,c
  5031  002310  0E00               	movlw	0
  5032  002312  6E38               	movwf	(___fladd@a+1)^0,c
  5033  002314  0E16               	movlw	22
  5034  002316  6E39               	movwf	(___fladd@a+2)^0,c
  5035  002318  0E43               	movlw	67
  5036  00231A  6E3A               	movwf	(___fladd@a+3)^0,c
  5037  00231C  0ECD               	movlw	205
  5038  00231E  6E2B               	movwf	___flmul@a^0,c
  5039  002320  0ECC               	movlw	204
  5040  002322  6E2C               	movwf	(___flmul@a+1)^0,c
  5041  002324  0E4C               	movlw	76
  5042  002326  6E2D               	movwf	(___flmul@a+2)^0,c
  5043  002328  0E3F               	movlw	63
  5044  00232A  6E2E               	movwf	(___flmul@a+3)^0,c
  5045  00232C  C0A0  F019         	movff	_distFront,___xxtofl@val	;volatile
  5046  002330  C0A1  F01A         	movff	_distFront+1,___xxtofl@val+1	;volatile
  5047  002334  6A1B               	clrf	(___xxtofl@val+2)^0,c
  5048  002336  6A1C               	clrf	(___xxtofl@val+3)^0,c
  5049  002338  0E00               	movlw	0
  5050  00233A  EC1A  F012         	call	___xxtofl
  5051  00233E  C019  F027         	movff	?___xxtofl,___flmul@b
  5052  002342  C01A  F028         	movff	?___xxtofl+1,___flmul@b+1
  5053  002346  C01B  F029         	movff	?___xxtofl+2,___flmul@b+2
  5054  00234A  C01C  F02A         	movff	?___xxtofl+3,___flmul@b+3
  5055  00234E  EC9B  F00A         	call	___flmul	;wreg free
  5056  002352  C027  F033         	movff	?___flmul,___fladd@b
  5057  002356  C028  F034         	movff	?___flmul+1,___fladd@b+1
  5058  00235A  C029  F035         	movff	?___flmul+2,___fladd@b+2
  5059  00235E  C02A  F036         	movff	?___flmul+3,___fladd@b+3
  5060  002362  EC3A  F008         	call	___fladd	;wreg free
  5061  002366  C033  F0B7         	movff	?___fladd,___fltol@f1
  5062  00236A  C034  F0B8         	movff	?___fladd+1,___fltol@f1+1
  5063  00236E  C035  F0B9         	movff	?___fladd+2,___fltol@f1+2
  5064  002372  C036  F0BA         	movff	?___fladd+3,___fltol@f1+3
  5065  002376  ECA3  F016         	call	___fltol	;wreg free
  5066  00237A  C0B7  F0C3         	movff	?___fltol,calcSpeed@speed
  5067  00237E  C0B8  F0C4         	movff	?___fltol+1,calcSpeed@speed+1
  5068                           
  5069                           ;main.c: 262:             break;
  5070  002382  EFF0  F011         	goto	l6276
  5071  002386                     l6266:
  5072                           
  5073                           ; BSR set to: 0
  5074                           ;main.c: 264:             speed = (-150);
  5075  002386  0EFF               	movlw	255
  5076  002388  6FC4               	movwf	(calcSpeed@speed+1)& (0+255),b
  5077  00238A  0E6A               	movlw	106
  5078  00238C  6FC3               	movwf	calcSpeed@speed& (0+255),b
  5079                           
  5080                           ;main.c: 265:             break;
  5081  00238E  EFF0  F011         	goto	l6276
  5082  002392                     l6268:
  5083                           
  5084                           ; BSR set to: 0
  5085                           ;main.c: 267:             speed = (150);
  5086  002392  0E00               	movlw	0
  5087  002394  6FC4               	movwf	(calcSpeed@speed+1)& (0+255),b
  5088  002396  0E96               	movlw	150
  5089  002398  6FC3               	movwf	calcSpeed@speed& (0+255),b
  5090                           
  5091                           ;main.c: 268:             break;
  5092  00239A  EFF0  F011         	goto	l6276
  5093  00239E                     l6274:
  5094                           
  5095                           ; BSR set to: 0
  5096  00239E  519F               	movf	_driveMode& (0+255),w,b
  5097  0023A0  6FC1               	movwf	??_calcSpeed& (0+255),b
  5098  0023A2  6BC2               	clrf	(??_calcSpeed+1)& (0+255),b
  5099                           
  5100                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5101                           ; Switch size 1, requested type "simple"
  5102                           ; Number of cases is 1, Range of values is 0 to 0
  5103                           ; switch strategies available:
  5104                           ; Name         Instructions Cycles
  5105                           ; simple_byte            4     3 (average)
  5106                           ;	Chosen strategy is simple_byte
  5107  0023A4  51C2               	movf	(??_calcSpeed+1)& (0+255),w,b
  5108  0023A6  0A00               	xorlw	0	; case 0
  5109  0023A8  B4D8               	btfsc	status,2,c
  5110  0023AA  EFD9  F011         	goto	l6414
  5111  0023AE  EFF0  F011         	goto	l6276
  5112  0023B2                     l6414:
  5113                           
  5114                           ; BSR set to: 0
  5115                           ; Switch size 1, requested type "simple"
  5116                           ; Number of cases is 5, Range of values is 0 to 4
  5117                           ; switch strategies available:
  5118                           ; Name         Instructions Cycles
  5119                           ; simple_byte           16     9 (average)
  5120                           ;	Chosen strategy is simple_byte
  5121  0023B2  51C1               	movf	??_calcSpeed& (0+255),w,b
  5122  0023B4  0A00               	xorlw	0	; case 0
  5123  0023B6  B4D8               	btfsc	status,2,c
  5124  0023B8  EF79  F011         	goto	l6260
  5125  0023BC  0A01               	xorlw	1	; case 1
  5126  0023BE  B4D8               	btfsc	status,2,c
  5127  0023C0  EF36  F011         	goto	l6242
  5128  0023C4  0A03               	xorlw	3	; case 2
  5129  0023C6  B4D8               	btfsc	status,2,c
  5130  0023C8  EFC3  F011         	goto	l6266
  5131  0023CC  0A01               	xorlw	1	; case 3
  5132  0023CE  B4D8               	btfsc	status,2,c
  5133  0023D0  EFC9  F011         	goto	l6268
  5134  0023D4  0A07               	xorlw	7	; case 4
  5135  0023D6  B4D8               	btfsc	status,2,c
  5136  0023D8  EFC9  F011         	goto	l6268
  5137  0023DC  EFF0  F011         	goto	l6276
  5138  0023E0                     l6276:
  5139                           
  5140                           ;main.c: 274:     if(speed > (400)){
  5141  0023E0  0100               	movlb	0	; () banked
  5142  0023E2  BFC4               	btfsc	(calcSpeed@speed+1)& (0+255),7,b
  5143  0023E4  EFFD  F011         	goto	u5551
  5144  0023E8  0E91               	movlw	145
  5145  0023EA  5DC3               	subwf	calcSpeed@speed& (0+255),w,b
  5146  0023EC  0E01               	movlw	1
  5147  0023EE  59C4               	subwfb	(calcSpeed@speed+1)& (0+255),w,b
  5148  0023F0  A0D8               	btfss	status,0,c
  5149  0023F2  EFFD  F011         	goto	u5551
  5150  0023F6  EFFF  F011         	goto	u5550
  5151  0023FA                     u5551:
  5152  0023FA  EF03  F012         	goto	l6280
  5153  0023FE                     u5550:
  5154  0023FE                     
  5155                           ; BSR set to: 0
  5156                           ;main.c: 275:         speed = (400);
  5157  0023FE  0E01               	movlw	1
  5158  002400  6FC4               	movwf	(calcSpeed@speed+1)& (0+255),b
  5159  002402  0E90               	movlw	144
  5160  002404  6FC3               	movwf	calcSpeed@speed& (0+255),b
  5161  002406                     l6280:
  5162                           
  5163                           ; BSR set to: 0
  5164                           ;main.c: 277:     if(speed < (-250)){
  5165  002406  AFC4               	btfss	(calcSpeed@speed+1)& (0+255),7,b
  5166  002408  EF0F  F012         	goto	u5561
  5167  00240C  0E06               	movlw	6
  5168  00240E  5DC3               	subwf	calcSpeed@speed& (0+255),w,b
  5169  002410  0EFF               	movlw	255
  5170  002412  59C4               	subwfb	(calcSpeed@speed+1)& (0+255),w,b
  5171  002414  B0D8               	btfsc	status,0,c
  5172  002416  EF0F  F012         	goto	u5561
  5173  00241A  EF11  F012         	goto	u5560
  5174  00241E                     u5561:
  5175  00241E  EF15  F012         	goto	l6284
  5176  002422                     u5560:
  5177  002422                     
  5178                           ; BSR set to: 0
  5179                           ;main.c: 278:         speed = (-250);
  5180  002422  0EFF               	movlw	255
  5181  002424  6FC4               	movwf	(calcSpeed@speed+1)& (0+255),b
  5182  002426  0E06               	movlw	6
  5183  002428  6FC3               	movwf	calcSpeed@speed& (0+255),b
  5184  00242A                     l6284:
  5185                           
  5186                           ; BSR set to: 0
  5187                           ;main.c: 280:     setSpeed = speed;
  5188  00242A  C0C3  F08C         	movff	calcSpeed@speed,_setSpeed
  5189  00242E  C0C4  F08D         	movff	calcSpeed@speed+1,_setSpeed+1
  5190  002432                     
  5191                           ; BSR set to: 0
  5192  002432  0012               	return		;funcret
  5193  002434                     __end_of_calcSpeed:
  5194                           	callstack 0
  5195                           
  5196 ;; *************** function ___fladd *****************
  5197 ;; Defined at:
  5198 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  5199 ;; Parameters:    Size  Location     Type
  5200 ;;  b               4   50[COMRAM] void 
  5201 ;;  a               4   54[COMRAM] void 
  5202 ;; Auto vars:     Size  Location     Type
  5203 ;;  grs             1   20[BANK0 ] unsigned char 
  5204 ;;  bexp            1   19[BANK0 ] unsigned char 
  5205 ;;  aexp            1   18[BANK0 ] unsigned char 
  5206 ;;  signs           1   17[BANK0 ] unsigned char 
  5207 ;; Return value:  Size  Location     Type
  5208 ;;                  4   50[COMRAM] unsigned char 
  5209 ;; Registers used:
  5210 ;;		wreg, status,2, status,0
  5211 ;; Tracked objects:
  5212 ;;		On entry : 0/0
  5213 ;;		On exit  : 0/0
  5214 ;;		Unchanged: 0/0
  5215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5216 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5217 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5218 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5219 ;;      Totals:         8       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5220 ;;Total ram usage:       16 bytes
  5221 ;; Hardware stack levels used: 1
  5222 ;; Hardware stack levels required when called: 8
  5223 ;; This function calls:
  5224 ;;		Nothing
  5225 ;; This function is called by:
  5226 ;;		_calcSpeed
  5227 ;; This function uses a non-reentrant model
  5228 ;;
  5229                           
  5230                           	psect	text25
  5231  001074                     __ptext25:
  5232                           	callstack 0
  5233  001074                     ___fladd:
  5234                           	callstack 20
  5235  001074  5036               	movf	(___fladd@b+3)^0,w,c
  5236  001076  0B80               	andlw	128
  5237  001078  0100               	movlb	0	; () banked
  5238  00107A  6FB3               	movwf	___fladd@signs& (0+255),b
  5239  00107C  5036               	movf	(___fladd@b+3)^0,w,c
  5240  00107E  2436               	addwf	(___fladd@b+3)^0,w,c
  5241  001080  6FB5               	movwf	___fladd@bexp& (0+255),b
  5242  001082                     
  5243                           ; BSR set to: 0
  5244  001082  AE35               	btfss	(___fladd@b+2)^0,7,c
  5245  001084  EF46  F008         	goto	u4791
  5246  001088  EF48  F008         	goto	u4790
  5247  00108C                     u4791:
  5248  00108C  EF49  F008         	goto	l5816
  5249  001090                     u4790:
  5250  001090                     
  5251                           ; BSR set to: 0
  5252  001090  81B5               	bsf	___fladd@bexp& (0+255),0,b
  5253  001092                     l5816:
  5254                           
  5255                           ; BSR set to: 0
  5256  001092  51B5               	movf	___fladd@bexp& (0+255),w,b
  5257  001094  B4D8               	btfsc	status,2,c
  5258  001096  EF4F  F008         	goto	u4801
  5259  00109A  EF51  F008         	goto	u4800
  5260  00109E                     u4801:
  5261  00109E  EF66  F008         	goto	l5826
  5262  0010A2                     u4800:
  5263  0010A2                     
  5264                           ; BSR set to: 0
  5265  0010A2  29B5               	incf	___fladd@bexp& (0+255),w,b
  5266  0010A4  A4D8               	btfss	status,2,c
  5267  0010A6  EF57  F008         	goto	u4811
  5268  0010AA  EF59  F008         	goto	u4810
  5269  0010AE                     u4811:
  5270  0010AE  EF61  F008         	goto	l5822
  5271  0010B2                     u4810:
  5272  0010B2                     
  5273                           ; BSR set to: 0
  5274  0010B2  0E00               	movlw	0
  5275  0010B4  6E33               	movwf	___fladd@b^0,c
  5276  0010B6  0E00               	movlw	0
  5277  0010B8  6E34               	movwf	(___fladd@b+1)^0,c
  5278  0010BA  0E00               	movlw	0
  5279  0010BC  6E35               	movwf	(___fladd@b+2)^0,c
  5280  0010BE  0E00               	movlw	0
  5281  0010C0  6E36               	movwf	(___fladd@b+3)^0,c
  5282  0010C2                     l5822:
  5283                           
  5284                           ; BSR set to: 0
  5285  0010C2  8E35               	bsf	(___fladd@b+2)^0,7,c
  5286  0010C4                     
  5287                           ; BSR set to: 0
  5288  0010C4  0E00               	movlw	0
  5289  0010C6  6E36               	movwf	(___fladd@b+3)^0,c
  5290  0010C8  EF6E  F008         	goto	l5828
  5291  0010CC                     l5826:
  5292                           
  5293                           ; BSR set to: 0
  5294  0010CC  0E00               	movlw	0
  5295  0010CE  6E33               	movwf	___fladd@b^0,c
  5296  0010D0  0E00               	movlw	0
  5297  0010D2  6E34               	movwf	(___fladd@b+1)^0,c
  5298  0010D4  0E00               	movlw	0
  5299  0010D6  6E35               	movwf	(___fladd@b+2)^0,c
  5300  0010D8  0E00               	movlw	0
  5301  0010DA  6E36               	movwf	(___fladd@b+3)^0,c
  5302  0010DC                     l5828:
  5303                           
  5304                           ; BSR set to: 0
  5305  0010DC  503A               	movf	(___fladd@a+3)^0,w,c
  5306  0010DE  0B80               	andlw	128
  5307  0010E0  6FB4               	movwf	___fladd@aexp& (0+255),b
  5308  0010E2                     
  5309                           ; BSR set to: 0
  5310  0010E2  51B3               	movf	___fladd@signs& (0+255),w,b
  5311  0010E4  19B4               	xorwf	___fladd@aexp& (0+255),w,b
  5312  0010E6  B4D8               	btfsc	status,2,c
  5313  0010E8  EF78  F008         	goto	u4821
  5314  0010EC  EF7A  F008         	goto	u4820
  5315  0010F0                     u4821:
  5316  0010F0  EF7B  F008         	goto	l5834
  5317  0010F4                     u4820:
  5318  0010F4                     
  5319                           ; BSR set to: 0
  5320  0010F4  8DB3               	bsf	___fladd@signs& (0+255),6,b
  5321  0010F6                     l5834:
  5322                           
  5323                           ; BSR set to: 0
  5324  0010F6  503A               	movf	(___fladd@a+3)^0,w,c
  5325  0010F8  243A               	addwf	(___fladd@a+3)^0,w,c
  5326  0010FA  6FB4               	movwf	___fladd@aexp& (0+255),b
  5327  0010FC                     
  5328                           ; BSR set to: 0
  5329  0010FC  AE39               	btfss	(___fladd@a+2)^0,7,c
  5330  0010FE  EF83  F008         	goto	u4831
  5331  001102  EF85  F008         	goto	u4830
  5332  001106                     u4831:
  5333  001106  EF86  F008         	goto	l5840
  5334  00110A                     u4830:
  5335  00110A                     
  5336                           ; BSR set to: 0
  5337  00110A  81B4               	bsf	___fladd@aexp& (0+255),0,b
  5338  00110C                     l5840:
  5339                           
  5340                           ; BSR set to: 0
  5341  00110C  51B4               	movf	___fladd@aexp& (0+255),w,b
  5342  00110E  B4D8               	btfsc	status,2,c
  5343  001110  EF8C  F008         	goto	u4841
  5344  001114  EF8E  F008         	goto	u4840
  5345  001118                     u4841:
  5346  001118  EFA3  F008         	goto	l5850
  5347  00111C                     u4840:
  5348  00111C                     
  5349                           ; BSR set to: 0
  5350  00111C  29B4               	incf	___fladd@aexp& (0+255),w,b
  5351  00111E  A4D8               	btfss	status,2,c
  5352  001120  EF94  F008         	goto	u4851
  5353  001124  EF96  F008         	goto	u4850
  5354  001128                     u4851:
  5355  001128  EF9E  F008         	goto	l5846
  5356  00112C                     u4850:
  5357  00112C                     
  5358                           ; BSR set to: 0
  5359  00112C  0E00               	movlw	0
  5360  00112E  6E37               	movwf	___fladd@a^0,c
  5361  001130  0E00               	movlw	0
  5362  001132  6E38               	movwf	(___fladd@a+1)^0,c
  5363  001134  0E00               	movlw	0
  5364  001136  6E39               	movwf	(___fladd@a+2)^0,c
  5365  001138  0E00               	movlw	0
  5366  00113A  6E3A               	movwf	(___fladd@a+3)^0,c
  5367  00113C                     l5846:
  5368                           
  5369                           ; BSR set to: 0
  5370  00113C  8E39               	bsf	(___fladd@a+2)^0,7,c
  5371  00113E                     
  5372                           ; BSR set to: 0
  5373  00113E  0E00               	movlw	0
  5374  001140  6E3A               	movwf	(___fladd@a+3)^0,c
  5375  001142  EFAB  F008         	goto	l5852
  5376  001146                     l5850:
  5377                           
  5378                           ; BSR set to: 0
  5379  001146  0E00               	movlw	0
  5380  001148  6E37               	movwf	___fladd@a^0,c
  5381  00114A  0E00               	movlw	0
  5382  00114C  6E38               	movwf	(___fladd@a+1)^0,c
  5383  00114E  0E00               	movlw	0
  5384  001150  6E39               	movwf	(___fladd@a+2)^0,c
  5385  001152  0E00               	movlw	0
  5386  001154  6E3A               	movwf	(___fladd@a+3)^0,c
  5387  001156                     l5852:
  5388                           
  5389                           ; BSR set to: 0
  5390  001156  51B5               	movf	___fladd@bexp& (0+255),w,b
  5391  001158  5DB4               	subwf	___fladd@aexp& (0+255),w,b
  5392  00115A  B0D8               	btfsc	status,0,c
  5393  00115C  EFB2  F008         	goto	u4861
  5394  001160  EFB4  F008         	goto	u4860
  5395  001164                     u4861:
  5396  001164  EFDB  F008         	goto	l5888
  5397  001168                     u4860:
  5398  001168                     
  5399                           ; BSR set to: 0
  5400  001168  ADB3               	btfss	___fladd@signs& (0+255),6,b
  5401  00116A  EFB9  F008         	goto	u4871
  5402  00116E  EFBB  F008         	goto	u4870
  5403  001172                     u4871:
  5404  001172  EFBD  F008         	goto	l5858
  5405  001176                     u4870:
  5406  001176                     
  5407                           ; BSR set to: 0
  5408  001176  0E80               	movlw	128
  5409  001178  1BB3               	xorwf	___fladd@signs& (0+255),f,b
  5410  00117A                     l5858:
  5411                           
  5412                           ; BSR set to: 0
  5413  00117A  C0B5  F0B6         	movff	___fladd@bexp,___fladd@grs
  5414  00117E                     
  5415                           ; BSR set to: 0
  5416  00117E  C0B4  F0B5         	movff	___fladd@aexp,___fladd@bexp
  5417  001182                     
  5418                           ; BSR set to: 0
  5419  001182  C0B6  F0B4         	movff	___fladd@grs,___fladd@aexp
  5420  001186                     
  5421                           ; BSR set to: 0
  5422  001186  C033  F0B6         	movff	___fladd@b,___fladd@grs
  5423  00118A                     
  5424                           ; BSR set to: 0
  5425  00118A  C037  F033         	movff	___fladd@a,___fladd@b
  5426  00118E                     
  5427                           ; BSR set to: 0
  5428  00118E  C0B6  F037         	movff	___fladd@grs,___fladd@a
  5429  001192                     
  5430                           ; BSR set to: 0
  5431  001192  C034  F0B6         	movff	___fladd@b+1,___fladd@grs
  5432  001196                     
  5433                           ; BSR set to: 0
  5434  001196  C038  F034         	movff	___fladd@a+1,___fladd@b+1
  5435  00119A                     
  5436                           ; BSR set to: 0
  5437  00119A  C0B6  F038         	movff	___fladd@grs,___fladd@a+1
  5438  00119E                     
  5439                           ; BSR set to: 0
  5440  00119E  C035  F0B6         	movff	___fladd@b+2,___fladd@grs
  5441  0011A2                     
  5442                           ; BSR set to: 0
  5443  0011A2  C039  F035         	movff	___fladd@a+2,___fladd@b+2
  5444  0011A6                     
  5445                           ; BSR set to: 0
  5446  0011A6  C0B6  F039         	movff	___fladd@grs,___fladd@a+2
  5447  0011AA                     
  5448                           ; BSR set to: 0
  5449  0011AA  C036  F0B6         	movff	___fladd@b+3,___fladd@grs
  5450  0011AE                     
  5451                           ; BSR set to: 0
  5452  0011AE  C03A  F036         	movff	___fladd@a+3,___fladd@b+3
  5453  0011B2                     
  5454                           ; BSR set to: 0
  5455  0011B2  C0B6  F03A         	movff	___fladd@grs,___fladd@a+3
  5456  0011B6                     l5888:
  5457                           
  5458                           ; BSR set to: 0
  5459  0011B6  0E00               	movlw	0
  5460  0011B8  6FB6               	movwf	___fladd@grs& (0+255),b
  5461  0011BA                     
  5462                           ; BSR set to: 0
  5463  0011BA  51B5               	movf	___fladd@bexp& (0+255),w,b
  5464  0011BC  C0B4  F0AF         	movff	___fladd@aexp,??___fladd
  5465  0011C0  6BB0               	clrf	(??___fladd+1)& (0+255),b
  5466  0011C2  5FAF               	subwf	??___fladd& (0+255),f,b
  5467  0011C4  0E00               	movlw	0
  5468  0011C6  5BB0               	subwfb	(??___fladd+1)& (0+255),f,b
  5469  0011C8  BFB0               	btfsc	(??___fladd+1)& (0+255),7,b
  5470  0011CA  EFF0  F008         	goto	u4881
  5471  0011CE  51B0               	movf	(??___fladd+1)& (0+255),w,b
  5472  0011D0  E109               	bnz	u4880
  5473  0011D2  0E1A               	movlw	26
  5474  0011D4  5DAF               	subwf	??___fladd& (0+255),w,b
  5475  0011D6  A0D8               	btfss	status,0,c
  5476  0011D8  EFF0  F008         	goto	u4881
  5477  0011DC  EFF2  F008         	goto	u4880
  5478  0011E0                     u4881:
  5479  0011E0  EF29  F009         	goto	l1868
  5480  0011E4                     u4880:
  5481  0011E4                     
  5482                           ; BSR set to: 0
  5483  0011E4  5033               	movf	___fladd@b^0,w,c
  5484  0011E6  1034               	iorwf	(___fladd@b+1)^0,w,c
  5485  0011E8  1035               	iorwf	(___fladd@b+2)^0,w,c
  5486  0011EA  1036               	iorwf	(___fladd@b+3)^0,w,c
  5487  0011EC  A4D8               	btfss	status,2,c
  5488  0011EE  EFFB  F008         	goto	u4891
  5489  0011F2  EFFE  F008         	goto	u4890
  5490  0011F6                     u4891:
  5491  0011F6  0E01               	movlw	1
  5492  0011F8  EFFF  F008         	goto	u4900
  5493  0011FC                     u4890:
  5494  0011FC  0E00               	movlw	0
  5495  0011FE                     u4900:
  5496  0011FE  6FB6               	movwf	___fladd@grs& (0+255),b
  5497  001200                     
  5498                           ; BSR set to: 0
  5499  001200  0E00               	movlw	0
  5500  001202  6E33               	movwf	___fladd@b^0,c
  5501  001204  0E00               	movlw	0
  5502  001206  6E34               	movwf	(___fladd@b+1)^0,c
  5503  001208  0E00               	movlw	0
  5504  00120A  6E35               	movwf	(___fladd@b+2)^0,c
  5505  00120C  0E00               	movlw	0
  5506  00120E  6E36               	movwf	(___fladd@b+3)^0,c
  5507  001210                     
  5508                           ; BSR set to: 0
  5509  001210  C0B4  F0B5         	movff	___fladd@aexp,___fladd@bexp
  5510  001214  EF32  F009         	goto	l1867
  5511  001218                     l1869:
  5512                           
  5513                           ; BSR set to: 0
  5514  001218  A1B6               	btfss	___fladd@grs& (0+255),0,b
  5515  00121A  EF11  F009         	goto	u4911
  5516  00121E  EF13  F009         	goto	u4910
  5517  001222                     u4911:
  5518  001222  EF19  F009         	goto	l5900
  5519  001226                     u4910:
  5520  001226                     
  5521                           ; BSR set to: 0
  5522  001226  90D8               	bcf	status,0,c
  5523  001228  31B6               	rrcf	___fladd@grs& (0+255),w,b
  5524  00122A  0901               	iorlw	1
  5525  00122C  6FB6               	movwf	___fladd@grs& (0+255),b
  5526  00122E  EF1B  F009         	goto	l5902
  5527  001232                     l5900:
  5528                           
  5529                           ; BSR set to: 0
  5530  001232  90D8               	bcf	status,0,c
  5531  001234  33B6               	rrcf	___fladd@grs& (0+255),f,b
  5532  001236                     l5902:
  5533                           
  5534                           ; BSR set to: 0
  5535  001236  A033               	btfss	___fladd@b^0,0,c
  5536  001238  EF20  F009         	goto	u4921
  5537  00123C  EF22  F009         	goto	u4920
  5538  001240                     u4921:
  5539  001240  EF23  F009         	goto	l5906
  5540  001244                     u4920:
  5541  001244                     
  5542                           ; BSR set to: 0
  5543  001244  8FB6               	bsf	___fladd@grs& (0+255),7,b
  5544  001246                     l5906:
  5545                           
  5546                           ; BSR set to: 0
  5547  001246  3436               	rlcf	(___fladd@b+3)^0,w,c
  5548  001248  3236               	rrcf	(___fladd@b+3)^0,f,c
  5549  00124A  3235               	rrcf	(___fladd@b+2)^0,f,c
  5550  00124C  3234               	rrcf	(___fladd@b+1)^0,f,c
  5551  00124E  3233               	rrcf	___fladd@b^0,f,c
  5552  001250                     
  5553                           ; BSR set to: 0
  5554  001250  2BB5               	incf	___fladd@bexp& (0+255),f,b
  5555  001252                     l1868:
  5556                           
  5557                           ; BSR set to: 0
  5558  001252  51B4               	movf	___fladd@aexp& (0+255),w,b
  5559  001254  5DB5               	subwf	___fladd@bexp& (0+255),w,b
  5560  001256  A0D8               	btfss	status,0,c
  5561  001258  EF30  F009         	goto	u4931
  5562  00125C  EF32  F009         	goto	u4930
  5563  001260                     u4931:
  5564  001260  EF0C  F009         	goto	l1869
  5565  001264                     u4930:
  5566  001264                     l1867:
  5567                           
  5568                           ; BSR set to: 0
  5569  001264  BDB3               	btfsc	___fladd@signs& (0+255),6,b
  5570  001266  EF37  F009         	goto	u4941
  5571  00126A  EF39  F009         	goto	u4940
  5572  00126E                     u4941:
  5573  00126E  EF79  F009         	goto	l5934
  5574  001272                     u4940:
  5575  001272                     
  5576                           ; BSR set to: 0
  5577  001272  51B5               	movf	___fladd@bexp& (0+255),w,b
  5578  001274  A4D8               	btfss	status,2,c
  5579  001276  EF3F  F009         	goto	u4951
  5580  00127A  EF41  F009         	goto	u4950
  5581  00127E                     u4951:
  5582  00127E  EF4B  F009         	goto	l5916
  5583  001282                     u4950:
  5584  001282                     
  5585                           ; BSR set to: 0
  5586  001282  0E00               	movlw	0
  5587  001284  6E33               	movwf	?___fladd^0,c
  5588  001286  0E00               	movlw	0
  5589  001288  6E34               	movwf	(?___fladd+1)^0,c
  5590  00128A  0E00               	movlw	0
  5591  00128C  6E35               	movwf	(?___fladd+2)^0,c
  5592  00128E  0E00               	movlw	0
  5593  001290  6E36               	movwf	(?___fladd+3)^0,c
  5594  001292  EF9A  F00A         	goto	l1876
  5595  001296                     l5916:
  5596                           
  5597                           ; BSR set to: 0
  5598  001296  5037               	movf	___fladd@a^0,w,c
  5599  001298  2633               	addwf	___fladd@b^0,f,c
  5600  00129A  5038               	movf	(___fladd@a+1)^0,w,c
  5601  00129C  2234               	addwfc	(___fladd@b+1)^0,f,c
  5602  00129E  5039               	movf	(___fladd@a+2)^0,w,c
  5603  0012A0  2235               	addwfc	(___fladd@b+2)^0,f,c
  5604  0012A2  503A               	movf	(___fladd@a+3)^0,w,c
  5605  0012A4  2236               	addwfc	(___fladd@b+3)^0,f,c
  5606  0012A6                     
  5607                           ; BSR set to: 0
  5608  0012A6  A036               	btfss	(___fladd@b+3)^0,0,c
  5609  0012A8  EF58  F009         	goto	u4961
  5610  0012AC  EF5A  F009         	goto	u4960
  5611  0012B0                     u4961:
  5612  0012B0  EF06  F00A         	goto	l5970
  5613  0012B4                     u4960:
  5614  0012B4                     
  5615                           ; BSR set to: 0
  5616  0012B4  A1B6               	btfss	___fladd@grs& (0+255),0,b
  5617  0012B6  EF5F  F009         	goto	u4971
  5618  0012BA  EF61  F009         	goto	u4970
  5619  0012BE                     u4971:
  5620  0012BE  EF67  F009         	goto	l5924
  5621  0012C2                     u4970:
  5622  0012C2                     
  5623                           ; BSR set to: 0
  5624  0012C2  90D8               	bcf	status,0,c
  5625  0012C4  31B6               	rrcf	___fladd@grs& (0+255),w,b
  5626  0012C6  0901               	iorlw	1
  5627  0012C8  6FB6               	movwf	___fladd@grs& (0+255),b
  5628  0012CA  EF69  F009         	goto	l5926
  5629  0012CE                     l5924:
  5630                           
  5631                           ; BSR set to: 0
  5632  0012CE  90D8               	bcf	status,0,c
  5633  0012D0  33B6               	rrcf	___fladd@grs& (0+255),f,b
  5634  0012D2                     l5926:
  5635                           
  5636                           ; BSR set to: 0
  5637  0012D2  A033               	btfss	___fladd@b^0,0,c
  5638  0012D4  EF6E  F009         	goto	u4981
  5639  0012D8  EF70  F009         	goto	u4980
  5640  0012DC                     u4981:
  5641  0012DC  EF71  F009         	goto	l5930
  5642  0012E0                     u4980:
  5643  0012E0                     
  5644                           ; BSR set to: 0
  5645  0012E0  8FB6               	bsf	___fladd@grs& (0+255),7,b
  5646  0012E2                     l5930:
  5647                           
  5648                           ; BSR set to: 0
  5649  0012E2  3436               	rlcf	(___fladd@b+3)^0,w,c
  5650  0012E4  3236               	rrcf	(___fladd@b+3)^0,f,c
  5651  0012E6  3235               	rrcf	(___fladd@b+2)^0,f,c
  5652  0012E8  3234               	rrcf	(___fladd@b+1)^0,f,c
  5653  0012EA  3233               	rrcf	___fladd@b^0,f,c
  5654  0012EC                     
  5655                           ; BSR set to: 0
  5656  0012EC  2BB5               	incf	___fladd@bexp& (0+255),f,b
  5657  0012EE  EF06  F00A         	goto	l5970
  5658  0012F2                     l5934:
  5659                           
  5660                           ; BSR set to: 0
  5661  0012F2  5037               	movf	___fladd@a^0,w,c
  5662  0012F4  5C33               	subwf	___fladd@b^0,w,c
  5663  0012F6  5038               	movf	(___fladd@a+1)^0,w,c
  5664  0012F8  5834               	subwfb	(___fladd@b+1)^0,w,c
  5665  0012FA  5039               	movf	(___fladd@a+2)^0,w,c
  5666  0012FC  5835               	subwfb	(___fladd@b+2)^0,w,c
  5667  0012FE  5036               	movf	(___fladd@b+3)^0,w,c
  5668  001300  0A80               	xorlw	128
  5669  001302  6FAF               	movwf	??___fladd& (0+255),b
  5670  001304  503A               	movf	(___fladd@a+3)^0,w,c
  5671  001306  0A80               	xorlw	128
  5672  001308  59AF               	subwfb	??___fladd& (0+255),w,b
  5673  00130A  B0D8               	btfsc	status,0,c
  5674  00130C  EF8A  F009         	goto	u4991
  5675  001310  EF8C  F009         	goto	u4990
  5676  001314                     u4991:
  5677  001314  EFB7  F009         	goto	l5944
  5678  001318                     u4990:
  5679  001318                     
  5680                           ; BSR set to: 0
  5681  001318  5033               	movf	___fladd@b^0,w,c
  5682  00131A  5C37               	subwf	___fladd@a^0,w,c
  5683  00131C  6FAF               	movwf	??___fladd& (0+255),b
  5684  00131E  5034               	movf	(___fladd@b+1)^0,w,c
  5685  001320  5838               	subwfb	(___fladd@a+1)^0,w,c
  5686  001322  6FB0               	movwf	(??___fladd+1)& (0+255),b
  5687  001324  5035               	movf	(___fladd@b+2)^0,w,c
  5688  001326  5839               	subwfb	(___fladd@a+2)^0,w,c
  5689  001328  6FB1               	movwf	(??___fladd+2)& (0+255),b
  5690  00132A  5036               	movf	(___fladd@b+3)^0,w,c
  5691  00132C  583A               	subwfb	(___fladd@a+3)^0,w,c
  5692  00132E  6FB2               	movwf	(??___fladd+3)& (0+255),b
  5693  001330  0EFF               	movlw	255
  5694  001332  25AF               	addwf	??___fladd& (0+255),w,b
  5695  001334  6E33               	movwf	___fladd@b^0,c
  5696  001336  0EFF               	movlw	255
  5697  001338  21B0               	addwfc	(??___fladd+1)& (0+255),w,b
  5698  00133A  6E34               	movwf	(___fladd@b+1)^0,c
  5699  00133C  0EFF               	movlw	255
  5700  00133E  21B1               	addwfc	(??___fladd+2)& (0+255),w,b
  5701  001340  6E35               	movwf	(___fladd@b+2)^0,c
  5702  001342  0EFF               	movlw	255
  5703  001344  21B2               	addwfc	(??___fladd+3)& (0+255),w,b
  5704  001346  6E36               	movwf	(___fladd@b+3)^0,c
  5705  001348  0E80               	movlw	128
  5706  00134A  1BB3               	xorwf	___fladd@signs& (0+255),f,b
  5707  00134C                     
  5708                           ; BSR set to: 0
  5709  00134C  6DB6               	negf	___fladd@grs& (0+255),b
  5710  00134E                     
  5711                           ; BSR set to: 0
  5712  00134E  51B6               	movf	___fladd@grs& (0+255),w,b
  5713  001350  A4D8               	btfss	status,2,c
  5714  001352  EFAD  F009         	goto	u5001
  5715  001356  EFAF  F009         	goto	u5000
  5716  00135A                     u5001:
  5717  00135A  EFBF  F009         	goto	l1884
  5718  00135E                     u5000:
  5719  00135E                     
  5720                           ; BSR set to: 0
  5721  00135E  0E01               	movlw	1
  5722  001360  2633               	addwf	___fladd@b^0,f,c
  5723  001362  0E00               	movlw	0
  5724  001364  2234               	addwfc	(___fladd@b+1)^0,f,c
  5725  001366  2235               	addwfc	(___fladd@b+2)^0,f,c
  5726  001368  2236               	addwfc	(___fladd@b+3)^0,f,c
  5727  00136A  EFBF  F009         	goto	l1884
  5728  00136E                     l5944:
  5729                           
  5730                           ; BSR set to: 0
  5731  00136E  5037               	movf	___fladd@a^0,w,c
  5732  001370  5E33               	subwf	___fladd@b^0,f,c
  5733  001372  5038               	movf	(___fladd@a+1)^0,w,c
  5734  001374  5A34               	subwfb	(___fladd@b+1)^0,f,c
  5735  001376  5039               	movf	(___fladd@a+2)^0,w,c
  5736  001378  5A35               	subwfb	(___fladd@b+2)^0,f,c
  5737  00137A  503A               	movf	(___fladd@a+3)^0,w,c
  5738  00137C  5A36               	subwfb	(___fladd@b+3)^0,f,c
  5739  00137E                     l1884:
  5740                           
  5741                           ; BSR set to: 0
  5742  00137E  5033               	movf	___fladd@b^0,w,c
  5743  001380  1034               	iorwf	(___fladd@b+1)^0,w,c
  5744  001382  1035               	iorwf	(___fladd@b+2)^0,w,c
  5745  001384  1036               	iorwf	(___fladd@b+3)^0,w,c
  5746  001386  A4D8               	btfss	status,2,c
  5747  001388  EFC8  F009         	goto	u5011
  5748  00138C  EFCA  F009         	goto	u5010
  5749  001390                     u5011:
  5750  001390  EFFF  F009         	goto	l5968
  5751  001394                     u5010:
  5752  001394                     
  5753                           ; BSR set to: 0
  5754  001394  51B6               	movf	___fladd@grs& (0+255),w,b
  5755  001396  A4D8               	btfss	status,2,c
  5756  001398  EFD0  F009         	goto	u5021
  5757  00139C  EFD2  F009         	goto	u5020
  5758  0013A0                     u5021:
  5759  0013A0  EFFF  F009         	goto	l5968
  5760  0013A4                     u5020:
  5761  0013A4                     
  5762                           ; BSR set to: 0
  5763  0013A4  0E00               	movlw	0
  5764  0013A6  6E33               	movwf	?___fladd^0,c
  5765  0013A8  0E00               	movlw	0
  5766  0013AA  6E34               	movwf	(?___fladd+1)^0,c
  5767  0013AC  0E00               	movlw	0
  5768  0013AE  6E35               	movwf	(?___fladd+2)^0,c
  5769  0013B0  0E00               	movlw	0
  5770  0013B2  6E36               	movwf	(?___fladd+3)^0,c
  5771  0013B4  EF9A  F00A         	goto	l1876
  5772  0013B8                     l5952:
  5773                           
  5774                           ; BSR set to: 0
  5775  0013B8  90D8               	bcf	status,0,c
  5776  0013BA  3633               	rlcf	___fladd@b^0,f,c
  5777  0013BC  3634               	rlcf	(___fladd@b+1)^0,f,c
  5778  0013BE  3635               	rlcf	(___fladd@b+2)^0,f,c
  5779  0013C0  3636               	rlcf	(___fladd@b+3)^0,f,c
  5780  0013C2                     
  5781                           ; BSR set to: 0
  5782  0013C2  AFB6               	btfss	___fladd@grs& (0+255),7,b
  5783  0013C4  EFE6  F009         	goto	u5031
  5784  0013C8  EFE8  F009         	goto	u5030
  5785  0013CC                     u5031:
  5786  0013CC  EFE9  F009         	goto	l5958
  5787  0013D0                     u5030:
  5788  0013D0                     
  5789                           ; BSR set to: 0
  5790  0013D0  8033               	bsf	___fladd@b^0,0,c
  5791  0013D2                     l5958:
  5792                           
  5793                           ; BSR set to: 0
  5794  0013D2  A1B6               	btfss	___fladd@grs& (0+255),0,b
  5795  0013D4  EFEE  F009         	goto	u5041
  5796  0013D8  EFF0  F009         	goto	u5040
  5797  0013DC                     u5041:
  5798  0013DC  EFF4  F009         	goto	l5962
  5799  0013E0                     u5040:
  5800  0013E0                     
  5801                           ; BSR set to: 0
  5802  0013E0  80D8               	bsf	status,0,c
  5803  0013E2  37B6               	rlcf	___fladd@grs& (0+255),f,b
  5804  0013E4  EFF6  F009         	goto	l5964
  5805  0013E8                     l5962:
  5806                           
  5807                           ; BSR set to: 0
  5808  0013E8  90D8               	bcf	status,0,c
  5809  0013EA  37B6               	rlcf	___fladd@grs& (0+255),f,b
  5810  0013EC                     l5964:
  5811                           
  5812                           ; BSR set to: 0
  5813  0013EC  51B5               	movf	___fladd@bexp& (0+255),w,b
  5814  0013EE  B4D8               	btfsc	status,2,c
  5815  0013F0  EFFC  F009         	goto	u5051
  5816  0013F4  EFFE  F009         	goto	u5050
  5817  0013F8                     u5051:
  5818  0013F8  EFFF  F009         	goto	l5968
  5819  0013FC                     u5050:
  5820  0013FC                     
  5821                           ; BSR set to: 0
  5822  0013FC  07B5               	decf	___fladd@bexp& (0+255),f,b
  5823  0013FE                     l5968:
  5824                           
  5825                           ; BSR set to: 0
  5826  0013FE  AE35               	btfss	(___fladd@b+2)^0,7,c
  5827  001400  EF04  F00A         	goto	u5061
  5828  001404  EF06  F00A         	goto	u5060
  5829  001408                     u5061:
  5830  001408  EFDC  F009         	goto	l5952
  5831  00140C                     u5060:
  5832  00140C                     l5970:
  5833                           
  5834                           ; BSR set to: 0
  5835  00140C  0E00               	movlw	0
  5836  00140E  6FB4               	movwf	___fladd@aexp& (0+255),b
  5837  001410                     
  5838                           ; BSR set to: 0
  5839  001410  AFB6               	btfss	___fladd@grs& (0+255),7,b
  5840  001412  EF0D  F00A         	goto	u5071
  5841  001416  EF0F  F00A         	goto	u5070
  5842  00141A                     u5071:
  5843  00141A  EF27  F00A         	goto	l1893
  5844  00141E                     u5070:
  5845  00141E                     
  5846                           ; BSR set to: 0
  5847  00141E  C0B6  F0AF         	movff	___fladd@grs,??___fladd
  5848  001422  0E7F               	movlw	127
  5849  001424  17AF               	andwf	??___fladd& (0+255),f,b
  5850  001426  B4D8               	btfsc	status,2,c
  5851  001428  EF18  F00A         	goto	u5081
  5852  00142C  EF1A  F00A         	goto	u5080
  5853  001430                     u5081:
  5854  001430  EF1E  F00A         	goto	l1894
  5855  001434                     u5080:
  5856  001434                     l5976:
  5857                           
  5858                           ; BSR set to: 0
  5859  001434  0E01               	movlw	1
  5860  001436  6FB4               	movwf	___fladd@aexp& (0+255),b
  5861  001438  EF27  F00A         	goto	l1893
  5862  00143C                     l1894:
  5863                           
  5864                           ; BSR set to: 0
  5865  00143C  A033               	btfss	___fladd@b^0,0,c
  5866  00143E  EF23  F00A         	goto	u5091
  5867  001442  EF25  F00A         	goto	u5090
  5868  001446                     u5091:
  5869  001446  EF27  F00A         	goto	l1893
  5870  00144A                     u5090:
  5871  00144A  EF1A  F00A         	goto	l5976
  5872  00144E                     l1893:
  5873                           
  5874                           ; BSR set to: 0
  5875  00144E  51B4               	movf	___fladd@aexp& (0+255),w,b
  5876  001450  B4D8               	btfsc	status,2,c
  5877  001452  EF2D  F00A         	goto	u5101
  5878  001456  EF2F  F00A         	goto	u5100
  5879  00145A                     u5101:
  5880  00145A  EF5A  F00A         	goto	l5988
  5881  00145E                     u5100:
  5882  00145E                     
  5883                           ; BSR set to: 0
  5884  00145E  0E01               	movlw	1
  5885  001460  2633               	addwf	___fladd@b^0,f,c
  5886  001462  0E00               	movlw	0
  5887  001464  2234               	addwfc	(___fladd@b+1)^0,f,c
  5888  001466  2235               	addwfc	(___fladd@b+2)^0,f,c
  5889  001468  2236               	addwfc	(___fladd@b+3)^0,f,c
  5890  00146A                     
  5891                           ; BSR set to: 0
  5892  00146A  A036               	btfss	(___fladd@b+3)^0,0,c
  5893  00146C  EF3A  F00A         	goto	u5111
  5894  001470  EF3C  F00A         	goto	u5110
  5895  001474                     u5111:
  5896  001474  EF5A  F00A         	goto	l5988
  5897  001478                     u5110:
  5898  001478                     
  5899                           ; BSR set to: 0
  5900  001478  C033  F0AF         	movff	___fladd@b,??___fladd
  5901  00147C  C034  F0B0         	movff	___fladd@b+1,??___fladd+1
  5902  001480  C035  F0B1         	movff	___fladd@b+2,??___fladd+2
  5903  001484  C036  F0B2         	movff	___fladd@b+3,??___fladd+3
  5904  001488  35B2               	rlcf	(??___fladd+3)& (0+255),w,b
  5905  00148A  33B2               	rrcf	(??___fladd+3)& (0+255),f,b
  5906  00148C  33B1               	rrcf	(??___fladd+2)& (0+255),f,b
  5907  00148E  33B0               	rrcf	(??___fladd+1)& (0+255),f,b
  5908  001490  33AF               	rrcf	??___fladd& (0+255),f,b
  5909  001492  C0AF  F033         	movff	??___fladd,___fladd@b
  5910  001496  C0B0  F034         	movff	??___fladd+1,___fladd@b+1
  5911  00149A  C0B1  F035         	movff	??___fladd+2,___fladd@b+2
  5912  00149E  C0B2  F036         	movff	??___fladd+3,___fladd@b+3
  5913  0014A2  29B5               	incf	___fladd@bexp& (0+255),w,b
  5914  0014A4  B4D8               	btfsc	status,2,c
  5915  0014A6  EF57  F00A         	goto	u5121
  5916  0014AA  EF59  F00A         	goto	u5120
  5917  0014AE                     u5121:
  5918  0014AE  EF5A  F00A         	goto	l5988
  5919  0014B2                     u5120:
  5920  0014B2                     
  5921                           ; BSR set to: 0
  5922  0014B2  2BB5               	incf	___fladd@bexp& (0+255),f,b
  5923  0014B4                     l5988:
  5924                           
  5925                           ; BSR set to: 0
  5926  0014B4  29B5               	incf	___fladd@bexp& (0+255),w,b
  5927  0014B6  B4D8               	btfsc	status,2,c
  5928  0014B8  EF60  F00A         	goto	u5131
  5929  0014BC  EF62  F00A         	goto	u5130
  5930  0014C0                     u5131:
  5931  0014C0  EF6A  F00A         	goto	l5992
  5932  0014C4                     u5130:
  5933  0014C4                     
  5934                           ; BSR set to: 0
  5935  0014C4  51B5               	movf	___fladd@bexp& (0+255),w,b
  5936  0014C6  A4D8               	btfss	status,2,c
  5937  0014C8  EF68  F00A         	goto	u5141
  5938  0014CC  EF6A  F00A         	goto	u5140
  5939  0014D0                     u5141:
  5940  0014D0  EF7C  F00A         	goto	l5996
  5941  0014D4                     u5140:
  5942  0014D4                     l5992:
  5943                           
  5944                           ; BSR set to: 0
  5945  0014D4  0E00               	movlw	0
  5946  0014D6  6E33               	movwf	___fladd@b^0,c
  5947  0014D8  0E00               	movlw	0
  5948  0014DA  6E34               	movwf	(___fladd@b+1)^0,c
  5949  0014DC  0E00               	movlw	0
  5950  0014DE  6E35               	movwf	(___fladd@b+2)^0,c
  5951  0014E0  0E00               	movlw	0
  5952  0014E2  6E36               	movwf	(___fladd@b+3)^0,c
  5953  0014E4  51B5               	movf	___fladd@bexp& (0+255),w,b
  5954  0014E6  A4D8               	btfss	status,2,c
  5955  0014E8  EF78  F00A         	goto	u5151
  5956  0014EC  EF7A  F00A         	goto	u5150
  5957  0014F0                     u5151:
  5958  0014F0  EF7C  F00A         	goto	l5996
  5959  0014F4                     u5150:
  5960  0014F4                     
  5961                           ; BSR set to: 0
  5962  0014F4  0E00               	movlw	0
  5963  0014F6  6FB3               	movwf	___fladd@signs& (0+255),b
  5964  0014F8                     l5996:
  5965                           
  5966                           ; BSR set to: 0
  5967  0014F8  A1B5               	btfss	___fladd@bexp& (0+255),0,b
  5968  0014FA  EF81  F00A         	goto	u5161
  5969  0014FE  EF83  F00A         	goto	u5160
  5970  001502                     u5161:
  5971  001502  EF86  F00A         	goto	l6000
  5972  001506                     u5160:
  5973  001506                     
  5974                           ; BSR set to: 0
  5975  001506  8E35               	bsf	(___fladd@b+2)^0,7,c
  5976  001508  EF87  F00A         	goto	l6002
  5977  00150C                     l6000:
  5978                           
  5979                           ; BSR set to: 0
  5980  00150C  9E35               	bcf	(___fladd@b+2)^0,7,c
  5981  00150E                     l6002:
  5982                           
  5983                           ; BSR set to: 0
  5984  00150E  90D8               	bcf	status,0,c
  5985  001510  31B5               	rrcf	___fladd@bexp& (0+255),w,b
  5986  001512  6E36               	movwf	(___fladd@b+3)^0,c
  5987  001514                     
  5988                           ; BSR set to: 0
  5989  001514  AFB3               	btfss	___fladd@signs& (0+255),7,b
  5990  001516  EF8F  F00A         	goto	u5171
  5991  00151A  EF91  F00A         	goto	u5170
  5992  00151E                     u5171:
  5993  00151E  EF92  F00A         	goto	l6008
  5994  001522                     u5170:
  5995  001522                     
  5996                           ; BSR set to: 0
  5997  001522  8E36               	bsf	(___fladd@b+3)^0,7,c
  5998  001524                     l6008:
  5999                           
  6000                           ; BSR set to: 0
  6001  001524  C033  F033         	movff	___fladd@b,?___fladd
  6002  001528  C034  F034         	movff	___fladd@b+1,?___fladd+1
  6003  00152C  C035  F035         	movff	___fladd@b+2,?___fladd+2
  6004  001530  C036  F036         	movff	___fladd@b+3,?___fladd+3
  6005  001534                     l1876:
  6006                           
  6007                           ; BSR set to: 0
  6008  001534  0012               	return		;funcret
  6009  001536                     __end_of___fladd:
  6010                           	callstack 0
  6011                           
  6012 ;; *************** function _calcMotorPow *****************
  6013 ;; Defined at:
  6014 ;;		line 283 in file "main.c"
  6015 ;; Parameters:    Size  Location     Type
  6016 ;;		None
  6017 ;; Auto vars:     Size  Location     Type
  6018 ;;  oldSpeedDelt    2   35[BANK0 ] short 
  6019 ;;  setSpeedDelt    2   33[BANK0 ] short 
  6020 ;;  addMPow         1   37[BANK0 ] char 
  6021 ;; Return value:  Size  Location     Type
  6022 ;;                  1    wreg      void 
  6023 ;; Registers used:
  6024 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6025 ;; Tracked objects:
  6026 ;;		On entry : 0/0
  6027 ;;		On exit  : 0/0
  6028 ;;		Unchanged: 0/0
  6029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6031 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6032 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6033 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6034 ;;Total ram usage:        7 bytes
  6035 ;; Hardware stack levels used: 1
  6036 ;; Hardware stack levels required when called: 10
  6037 ;; This function calls:
  6038 ;;		___flmul
  6039 ;;		___fltol
  6040 ;;		___xxtofl
  6041 ;;		_actSpeed
  6042 ;;		_setMotor
  6043 ;; This function is called by:
  6044 ;;		_loop
  6045 ;; This function uses a non-reentrant model
  6046 ;;
  6047                           
  6048                           	psect	text26
  6049  0028D4                     __ptext26:
  6050                           	callstack 0
  6051  0028D4                     _calcMotorPow:
  6052                           	callstack 19
  6053  0028D4                     
  6054                           ;main.c: 284:     int16_t setSpeedDelta = setSpeed - currentSpeed;
  6055  0028D4  0100               	movlb	0	; () banked
  6056  0028D6  518A               	movf	_currentSpeed& (0+255),w,b
  6057  0028D8  5D8C               	subwf	_setSpeed& (0+255),w,b
  6058  0028DA  6FC3               	movwf	calcMotorPow@setSpeedDelta& (0+255),b
  6059  0028DC  518B               	movf	(_currentSpeed+1)& (0+255),w,b
  6060  0028DE  598D               	subwfb	(_setSpeed+1)& (0+255),w,b
  6061  0028E0  6FC4               	movwf	(calcMotorPow@setSpeedDelta+1)& (0+255),b
  6062                           
  6063                           ;main.c: 285:     int16_t oldSpeedDelta = currentSpeed - oldSpeed;
  6064  0028E2  5188               	movf	_oldSpeed& (0+255),w,b
  6065  0028E4  5D8A               	subwf	_currentSpeed& (0+255),w,b
  6066  0028E6  6FC5               	movwf	calcMotorPow@oldSpeedDelta& (0+255),b
  6067  0028E8  5189               	movf	(_oldSpeed+1)& (0+255),w,b
  6068  0028EA  598B               	subwfb	(_currentSpeed+1)& (0+255),w,b
  6069  0028EC  6FC6               	movwf	(calcMotorPow@oldSpeedDelta+1)& (0+255),b
  6070  0028EE                     
  6071                           ; BSR set to: 0
  6072                           ;main.c: 288:     currentSpeed = actSpeed();
  6073  0028EE  EC3E  F01A         	call	_actSpeed	;wreg free
  6074  0028F2  C022  F08A         	movff	?_actSpeed,_currentSpeed
  6075  0028F6  C023  F08B         	movff	?_actSpeed+1,_currentSpeed+1
  6076  0028FA                     
  6077                           ;main.c: 292:  addMPow = (int8_t)((0.05) * (setSpeedDelta - (oldSpeedDelta / (1))));
  6078  0028FA  0ECD               	movlw	205
  6079  0028FC  6E2B               	movwf	___flmul@a^0,c
  6080  0028FE  0ECC               	movlw	204
  6081  002900  6E2C               	movwf	(___flmul@a+1)^0,c
  6082  002902  0E4C               	movlw	76
  6083  002904  6E2D               	movwf	(___flmul@a+2)^0,c
  6084  002906  0E3D               	movlw	61
  6085  002908  6E2E               	movwf	(___flmul@a+3)^0,c
  6086  00290A  0100               	movlb	0	; () banked
  6087  00290C  51C5               	movf	calcMotorPow@oldSpeedDelta& (0+255),w,b
  6088  00290E  5DC3               	subwf	calcMotorPow@setSpeedDelta& (0+255),w,b
  6089  002910  6FC1               	movwf	??_calcMotorPow& (0+255),b
  6090  002912  51C6               	movf	(calcMotorPow@oldSpeedDelta+1)& (0+255),w,b
  6091  002914  59C4               	subwfb	(calcMotorPow@setSpeedDelta+1)& (0+255),w,b
  6092  002916  6FC2               	movwf	(??_calcMotorPow+1)& (0+255),b
  6093  002918  C0C1  F019         	movff	??_calcMotorPow,___xxtofl@val
  6094  00291C  C0C2  F01A         	movff	??_calcMotorPow+1,___xxtofl@val+1
  6095  002920  0E00               	movlw	0
  6096  002922  BE1A               	btfsc	(___xxtofl@val+1)^0,7,c
  6097  002924  0EFF               	movlw	-1
  6098  002926  6E1B               	movwf	(___xxtofl@val+2)^0,c
  6099  002928  6E1C               	movwf	(___xxtofl@val+3)^0,c
  6100  00292A  0E01               	movlw	1
  6101  00292C  EC1A  F012         	call	___xxtofl
  6102  002930  C019  F027         	movff	?___xxtofl,___flmul@b
  6103  002934  C01A  F028         	movff	?___xxtofl+1,___flmul@b+1
  6104  002938  C01B  F029         	movff	?___xxtofl+2,___flmul@b+2
  6105  00293C  C01C  F02A         	movff	?___xxtofl+3,___flmul@b+3
  6106  002940  EC9B  F00A         	call	___flmul	;wreg free
  6107  002944  C027  F0B7         	movff	?___flmul,___fltol@f1
  6108  002948  C028  F0B8         	movff	?___flmul+1,___fltol@f1+1
  6109  00294C  C029  F0B9         	movff	?___flmul+2,___fltol@f1+2
  6110  002950  C02A  F0BA         	movff	?___flmul+3,___fltol@f1+3
  6111  002954  ECA3  F016         	call	___fltol	;wreg free
  6112  002958  0100               	movlb	0	; () banked
  6113  00295A  51B7               	movf	?___fltol& (0+255),w,b
  6114  00295C  6FC7               	movwf	calcMotorPow@addMPow& (0+255),b
  6115  00295E                     
  6116                           ; BSR set to: 0
  6117                           ;main.c: 294:     if(addMPow > (3)){
  6118  00295E  51C7               	movf	calcMotorPow@addMPow& (0+255),w,b
  6119  002960  0A80               	xorlw	128
  6120  002962  0F7C               	addlw	-132
  6121  002964  A0D8               	btfss	status,0,c
  6122  002966  EFB7  F014         	goto	u5461
  6123  00296A  EFB9  F014         	goto	u5460
  6124  00296E                     u5461:
  6125  00296E  EFBD  F014         	goto	l6222
  6126  002972                     u5460:
  6127  002972                     
  6128                           ; BSR set to: 0
  6129                           ;main.c: 295:         addMPow = (3);
  6130  002972  0E03               	movlw	3
  6131  002974  6FC7               	movwf	calcMotorPow@addMPow& (0+255),b
  6132                           
  6133                           ;main.c: 296:     }else if(addMPow < -(3)){
  6134  002976  EFC9  F014         	goto	l6226
  6135  00297A                     l6222:
  6136                           
  6137                           ; BSR set to: 0
  6138  00297A  51C7               	movf	calcMotorPow@addMPow& (0+255),w,b
  6139  00297C  0A80               	xorlw	128
  6140  00297E  0F83               	addlw	131
  6141  002980  B0D8               	btfsc	status,0,c
  6142  002982  EFC5  F014         	goto	u5471
  6143  002986  EFC7  F014         	goto	u5470
  6144  00298A                     u5471:
  6145  00298A  EFC9  F014         	goto	l6226
  6146  00298E                     u5470:
  6147  00298E                     
  6148                           ; BSR set to: 0
  6149                           ;main.c: 297:         addMPow = -(3);
  6150  00298E  0EFD               	movlw	253
  6151  002990  6FC7               	movwf	calcMotorPow@addMPow& (0+255),b
  6152  002992                     l6226:
  6153                           
  6154                           ; BSR set to: 0
  6155                           ;main.c: 300:  actMotorPow = actMotorPow + addMPow;
  6156  002992  5186               	movf	_actMotorPow& (0+255),w,b
  6157  002994  25C7               	addwf	calcMotorPow@addMPow& (0+255),w,b
  6158  002996  6F86               	movwf	_actMotorPow& (0+255),b
  6159  002998  0E00               	movlw	0
  6160  00299A  BFC7               	btfsc	calcMotorPow@addMPow& (0+255),7,b
  6161  00299C  0EFF               	movlw	255
  6162  00299E  2187               	addwfc	(_actMotorPow+1)& (0+255),w,b
  6163  0029A0  6F87               	movwf	(_actMotorPow+1)& (0+255),b
  6164  0029A2                     
  6165                           ; BSR set to: 0
  6166                           ;main.c: 302:  if(actMotorPow > (600)){
  6167  0029A2  BF87               	btfsc	(_actMotorPow+1)& (0+255),7,b
  6168  0029A4  EFDD  F014         	goto	u5481
  6169  0029A8  0E59               	movlw	89
  6170  0029AA  5D86               	subwf	_actMotorPow& (0+255),w,b
  6171  0029AC  0E02               	movlw	2
  6172  0029AE  5987               	subwfb	(_actMotorPow+1)& (0+255),w,b
  6173  0029B0  A0D8               	btfss	status,0,c
  6174  0029B2  EFDD  F014         	goto	u5481
  6175  0029B6  EFDF  F014         	goto	u5480
  6176  0029BA                     u5481:
  6177  0029BA  EFE5  F014         	goto	l6232
  6178  0029BE                     u5480:
  6179  0029BE                     
  6180                           ; BSR set to: 0
  6181                           ;main.c: 303:   actMotorPow = (600);
  6182  0029BE  0E02               	movlw	2
  6183  0029C0  6F87               	movwf	(_actMotorPow+1)& (0+255),b
  6184  0029C2  0E58               	movlw	88
  6185  0029C4  6F86               	movwf	_actMotorPow& (0+255),b
  6186                           
  6187                           ;main.c: 304:  }else if(actMotorPow < (-300)){
  6188  0029C6  EFF7  F014         	goto	l6236
  6189  0029CA                     l6232:
  6190                           
  6191                           ; BSR set to: 0
  6192  0029CA  AF87               	btfss	(_actMotorPow+1)& (0+255),7,b
  6193  0029CC  EFF1  F014         	goto	u5491
  6194  0029D0  0ED4               	movlw	212
  6195  0029D2  5D86               	subwf	_actMotorPow& (0+255),w,b
  6196  0029D4  0EFE               	movlw	254
  6197  0029D6  5987               	subwfb	(_actMotorPow+1)& (0+255),w,b
  6198  0029D8  B0D8               	btfsc	status,0,c
  6199  0029DA  EFF1  F014         	goto	u5491
  6200  0029DE  EFF3  F014         	goto	u5490
  6201  0029E2                     u5491:
  6202  0029E2  EFF7  F014         	goto	l6236
  6203  0029E6                     u5490:
  6204  0029E6                     
  6205                           ; BSR set to: 0
  6206                           ;main.c: 305:   actMotorPow = (-300);
  6207  0029E6  0EFE               	movlw	254
  6208  0029E8  6F87               	movwf	(_actMotorPow+1)& (0+255),b
  6209  0029EA  0ED4               	movlw	212
  6210  0029EC  6F86               	movwf	_actMotorPow& (0+255),b
  6211  0029EE                     l6236:
  6212                           
  6213                           ; BSR set to: 0
  6214                           ;main.c: 308:     setMotor(actMotorPow);
  6215  0029EE  C086  F018         	movff	_actMotorPow,setMotor@motorPower
  6216  0029F2  C087  F019         	movff	_actMotorPow+1,setMotor@motorPower+1
  6217  0029F6  ECA9  F017         	call	_setMotor	;wreg free
  6218  0029FA                     
  6219                           ;main.c: 310:     oldSpeed = currentSpeed;
  6220  0029FA  C08A  F088         	movff	_currentSpeed,_oldSpeed
  6221  0029FE  C08B  F089         	movff	_currentSpeed+1,_oldSpeed+1
  6222  002A02  0012               	return		;funcret
  6223  002A04                     __end_of_calcMotorPow:
  6224                           	callstack 0
  6225                           
  6226 ;; *************** function _setMotor *****************
  6227 ;; Defined at:
  6228 ;;		line 313 in file "main.c"
  6229 ;; Parameters:    Size  Location     Type
  6230 ;;  motorPower      2   23[COMRAM] short 
  6231 ;; Auto vars:     Size  Location     Type
  6232 ;;		None
  6233 ;; Return value:  Size  Location     Type
  6234 ;;                  1    wreg      void 
  6235 ;; Registers used:
  6236 ;;		wreg, status,2, status,0, cstack
  6237 ;; Tracked objects:
  6238 ;;		On entry : 0/0
  6239 ;;		On exit  : 0/0
  6240 ;;		Unchanged: 0/0
  6241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6242 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6244 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6245 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6246 ;;Total ram usage:        4 bytes
  6247 ;; Hardware stack levels used: 1
  6248 ;; Hardware stack levels required when called: 9
  6249 ;; This function calls:
  6250 ;;		_PWM7_LoadDutyValue
  6251 ;;		_PWM8_LoadDutyValue
  6252 ;; This function is called by:
  6253 ;;		_calcMotorPow
  6254 ;; This function uses a non-reentrant model
  6255 ;;
  6256                           
  6257                           	psect	text27
  6258  002F52                     __ptext27:
  6259                           	callstack 0
  6260  002F52                     _setMotor:
  6261                           	callstack 19
  6262  002F52                     
  6263                           ;main.c: 314:     if(motorPower > 1){
  6264  002F52  BE19               	btfsc	(setMotor@motorPower+1)^0,7,c
  6265  002F54  EFB5  F017         	goto	u2901
  6266  002F58  5019               	movf	(setMotor@motorPower+1)^0,w,c
  6267  002F5A  E109               	bnz	u2900
  6268  002F5C  0E02               	movlw	2
  6269  002F5E  5C18               	subwf	setMotor@motorPower^0,w,c
  6270  002F60  A0D8               	btfss	status,0,c
  6271  002F62  EFB5  F017         	goto	u2901
  6272  002F66  EFB7  F017         	goto	u2900
  6273  002F6A                     u2901:
  6274  002F6A  EFD7  F017         	goto	l4474
  6275  002F6E                     u2900:
  6276  002F6E                     
  6277                           ;main.c: 315:        if(motorPower > (600)){
  6278  002F6E  BE19               	btfsc	(setMotor@motorPower+1)^0,7,c
  6279  002F70  EFC3  F017         	goto	u2911
  6280  002F74  0E59               	movlw	89
  6281  002F76  5C18               	subwf	setMotor@motorPower^0,w,c
  6282  002F78  0E02               	movlw	2
  6283  002F7A  5819               	subwfb	(setMotor@motorPower+1)^0,w,c
  6284  002F7C  A0D8               	btfss	status,0,c
  6285  002F7E  EFC3  F017         	goto	u2911
  6286  002F82  EFC5  F017         	goto	u2910
  6287  002F86                     u2911:
  6288  002F86  EFC9  F017         	goto	l4470
  6289  002F8A                     u2910:
  6290  002F8A                     
  6291                           ;main.c: 316:             motorPower = (600);
  6292  002F8A  0E02               	movlw	2
  6293  002F8C  6E19               	movwf	(setMotor@motorPower+1)^0,c
  6294  002F8E  0E58               	movlw	88
  6295  002F90  6E18               	movwf	setMotor@motorPower^0,c
  6296  002F92                     l4470:
  6297                           
  6298                           ;main.c: 318:         PWM7_LoadDutyValue((uint16_t)(motorPower));
  6299  002F92  C018  F014         	movff	setMotor@motorPower,PWM7_LoadDutyValue@dutyValue
  6300  002F96  C019  F015         	movff	setMotor@motorPower+1,PWM7_LoadDutyValue@dutyValue+1
  6301  002F9A  EC69  F01D         	call	_PWM7_LoadDutyValue	;wreg free
  6302  002F9E                     
  6303                           ;main.c: 319:         PWM8_LoadDutyValue(0);
  6304  002F9E  0E00               	movlw	0
  6305  002FA0  6E15               	movwf	(PWM8_LoadDutyValue@dutyValue+1)^0,c
  6306  002FA2  0E00               	movlw	0
  6307  002FA4  6E14               	movwf	PWM8_LoadDutyValue@dutyValue^0,c
  6308  002FA6  EC4F  F01D         	call	_PWM8_LoadDutyValue	;wreg free
  6309                           
  6310                           ;main.c: 320:     } else if(motorPower < -1){
  6311  002FAA  EF18  F018         	goto	l1336
  6312  002FAE                     l4474:
  6313  002FAE  AE19               	btfss	(setMotor@motorPower+1)^0,7,c
  6314  002FB0  EFE2  F017         	goto	u2921
  6315  002FB4  2818               	incf	setMotor@motorPower^0,w,c
  6316  002FB6  0EFF               	movlw	255
  6317  002FB8  5819               	subwfb	(setMotor@motorPower+1)^0,w,c
  6318  002FBA  B0D8               	btfsc	status,0,c
  6319  002FBC  EFE2  F017         	goto	u2921
  6320  002FC0  EFE4  F017         	goto	u2920
  6321  002FC4                     u2921:
  6322  002FC4  EF0C  F018         	goto	l4484
  6323  002FC8                     u2920:
  6324  002FC8                     
  6325                           ;main.c: 321:         if(motorPower < (-300)){
  6326  002FC8  AE19               	btfss	(setMotor@motorPower+1)^0,7,c
  6327  002FCA  EFF0  F017         	goto	u2931
  6328  002FCE  0ED4               	movlw	212
  6329  002FD0  5C18               	subwf	setMotor@motorPower^0,w,c
  6330  002FD2  0EFE               	movlw	254
  6331  002FD4  5819               	subwfb	(setMotor@motorPower+1)^0,w,c
  6332  002FD6  B0D8               	btfsc	status,0,c
  6333  002FD8  EFF0  F017         	goto	u2931
  6334  002FDC  EFF2  F017         	goto	u2930
  6335  002FE0                     u2931:
  6336  002FE0  EFF6  F017         	goto	l4480
  6337  002FE4                     u2930:
  6338  002FE4                     
  6339                           ;main.c: 322:             motorPower = (-300);
  6340  002FE4  0EFE               	movlw	254
  6341  002FE6  6E19               	movwf	(setMotor@motorPower+1)^0,c
  6342  002FE8  0ED4               	movlw	212
  6343  002FEA  6E18               	movwf	setMotor@motorPower^0,c
  6344  002FEC                     l4480:
  6345                           
  6346                           ;main.c: 324:         PWM7_LoadDutyValue(0);
  6347  002FEC  0E00               	movlw	0
  6348  002FEE  6E15               	movwf	(PWM7_LoadDutyValue@dutyValue+1)^0,c
  6349  002FF0  0E00               	movlw	0
  6350  002FF2  6E14               	movwf	PWM7_LoadDutyValue@dutyValue^0,c
  6351  002FF4  EC69  F01D         	call	_PWM7_LoadDutyValue	;wreg free
  6352  002FF8                     
  6353                           ;main.c: 325:         PWM8_LoadDutyValue((uint16_t)(-motorPower));
  6354  002FF8  C018  F01A         	movff	setMotor@motorPower,??_setMotor
  6355  002FFC  C019  F01B         	movff	setMotor@motorPower+1,??_setMotor+1
  6356  003000  1E1A               	comf	??_setMotor^0,f,c
  6357  003002  1E1B               	comf	(??_setMotor+1)^0,f,c
  6358  003004  4A1A               	infsnz	??_setMotor^0,f,c
  6359  003006  2A1B               	incf	(??_setMotor+1)^0,f,c
  6360  003008  C01A  F014         	movff	??_setMotor,PWM8_LoadDutyValue@dutyValue
  6361  00300C  C01B  F015         	movff	??_setMotor+1,PWM8_LoadDutyValue@dutyValue+1
  6362  003010  EC4F  F01D         	call	_PWM8_LoadDutyValue	;wreg free
  6363                           
  6364                           ;main.c: 326:     } else {
  6365  003014  EF18  F018         	goto	l1336
  6366  003018                     l4484:
  6367                           
  6368                           ;main.c: 327:         PWM7_LoadDutyValue(0);
  6369  003018  0E00               	movlw	0
  6370  00301A  6E15               	movwf	(PWM7_LoadDutyValue@dutyValue+1)^0,c
  6371  00301C  0E00               	movlw	0
  6372  00301E  6E14               	movwf	PWM7_LoadDutyValue@dutyValue^0,c
  6373  003020  EC69  F01D         	call	_PWM7_LoadDutyValue	;wreg free
  6374                           
  6375                           ;main.c: 328:         PWM8_LoadDutyValue(0);
  6376  003024  0E00               	movlw	0
  6377  003026  6E15               	movwf	(PWM8_LoadDutyValue@dutyValue+1)^0,c
  6378  003028  0E00               	movlw	0
  6379  00302A  6E14               	movwf	PWM8_LoadDutyValue@dutyValue^0,c
  6380  00302C  EC4F  F01D         	call	_PWM8_LoadDutyValue	;wreg free
  6381  003030                     l1336:
  6382  003030  0012               	return		;funcret
  6383  003032                     __end_of_setMotor:
  6384                           	callstack 0
  6385                           
  6386 ;; *************** function _PWM8_LoadDutyValue *****************
  6387 ;; Defined at:
  6388 ;;		line 74 in file "mcc_generated_files/pwm8.c"
  6389 ;; Parameters:    Size  Location     Type
  6390 ;;  dutyValue       2   19[COMRAM] unsigned short 
  6391 ;; Auto vars:     Size  Location     Type
  6392 ;;		None
  6393 ;; Return value:  Size  Location     Type
  6394 ;;                  1    wreg      void 
  6395 ;; Registers used:
  6396 ;;		wreg, status,2, status,0
  6397 ;; Tracked objects:
  6398 ;;		On entry : 0/0
  6399 ;;		On exit  : 0/0
  6400 ;;		Unchanged: 0/0
  6401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6402 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6404 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6405 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6406 ;;Total ram usage:        4 bytes
  6407 ;; Hardware stack levels used: 1
  6408 ;; Hardware stack levels required when called: 8
  6409 ;; This function calls:
  6410 ;;		Nothing
  6411 ;; This function is called by:
  6412 ;;		_setMotor
  6413 ;; This function uses a non-reentrant model
  6414 ;;
  6415                           
  6416                           	psect	text28
  6417  003A9E                     __ptext28:
  6418                           	callstack 0
  6419  003A9E                     _PWM8_LoadDutyValue:
  6420                           	callstack 19
  6421  003A9E                     
  6422                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  6423  003A9E  C014  F016         	movff	PWM8_LoadDutyValue@dutyValue,??_PWM8_LoadDutyValue
  6424  003AA2  C015  F017         	movff	PWM8_LoadDutyValue@dutyValue+1,??_PWM8_LoadDutyValue+1
  6425  003AA6  90D8               	bcf	status,0,c
  6426  003AA8  3217               	rrcf	(??_PWM8_LoadDutyValue+1)^0,f,c
  6427  003AAA  3216               	rrcf	??_PWM8_LoadDutyValue^0,f,c
  6428  003AAC  90D8               	bcf	status,0,c
  6429  003AAE  3217               	rrcf	(??_PWM8_LoadDutyValue+1)^0,f,c
  6430  003AB0  3216               	rrcf	??_PWM8_LoadDutyValue^0,f,c
  6431  003AB2  5016               	movf	??_PWM8_LoadDutyValue^0,w,c
  6432  003AB4  6E61               	movwf	97,c	;volatile
  6433                           
  6434                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
  6435  003AB6  C014  F016         	movff	PWM8_LoadDutyValue@dutyValue,??_PWM8_LoadDutyValue
  6436  003ABA  0E03               	movlw	3
  6437  003ABC  1616               	andwf	??_PWM8_LoadDutyValue^0,f,c
  6438  003ABE  0E06               	movlw	6
  6439  003AC0  6E17               	movwf	(??_PWM8_LoadDutyValue+1)^0,c
  6440  003AC2                     u2655:
  6441  003AC2  90D8               	bcf	status,0,c
  6442  003AC4  3616               	rlcf	??_PWM8_LoadDutyValue^0,f,c
  6443  003AC6  2E17               	decfsz	(??_PWM8_LoadDutyValue+1)^0,f,c
  6444  003AC8  EF61  F01D         	goto	u2655
  6445  003ACC  5016               	movf	??_PWM8_LoadDutyValue^0,w,c
  6446  003ACE  6E60               	movwf	96,c	;volatile
  6447  003AD0  0012               	return		;funcret
  6448  003AD2                     __end_of_PWM8_LoadDutyValue:
  6449                           	callstack 0
  6450                           
  6451 ;; *************** function _PWM7_LoadDutyValue *****************
  6452 ;; Defined at:
  6453 ;;		line 74 in file "mcc_generated_files/pwm7.c"
  6454 ;; Parameters:    Size  Location     Type
  6455 ;;  dutyValue       2   19[COMRAM] unsigned short 
  6456 ;; Auto vars:     Size  Location     Type
  6457 ;;		None
  6458 ;; Return value:  Size  Location     Type
  6459 ;;                  1    wreg      void 
  6460 ;; Registers used:
  6461 ;;		wreg, status,2, status,0
  6462 ;; Tracked objects:
  6463 ;;		On entry : 0/0
  6464 ;;		On exit  : 0/0
  6465 ;;		Unchanged: 0/0
  6466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6467 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6469 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6470 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6471 ;;Total ram usage:        4 bytes
  6472 ;; Hardware stack levels used: 1
  6473 ;; Hardware stack levels required when called: 8
  6474 ;; This function calls:
  6475 ;;		Nothing
  6476 ;; This function is called by:
  6477 ;;		_setMotor
  6478 ;; This function uses a non-reentrant model
  6479 ;;
  6480                           
  6481                           	psect	text29
  6482  003AD2                     __ptext29:
  6483                           	callstack 0
  6484  003AD2                     _PWM7_LoadDutyValue:
  6485                           	callstack 19
  6486  003AD2                     
  6487                           ;mcc_generated_files/pwm7.c: 74:  void PWM7_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm7.c: 75:  {;mcc_generated_files/pwm7.c: 77:      PWM7DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  6488  003AD2  C014  F016         	movff	PWM7_LoadDutyValue@dutyValue,??_PWM7_LoadDutyValue
  6489  003AD6  C015  F017         	movff	PWM7_LoadDutyValue@dutyValue+1,??_PWM7_LoadDutyValue+1
  6490  003ADA  90D8               	bcf	status,0,c
  6491  003ADC  3217               	rrcf	(??_PWM7_LoadDutyValue+1)^0,f,c
  6492  003ADE  3216               	rrcf	??_PWM7_LoadDutyValue^0,f,c
  6493  003AE0  90D8               	bcf	status,0,c
  6494  003AE2  3217               	rrcf	(??_PWM7_LoadDutyValue+1)^0,f,c
  6495  003AE4  3216               	rrcf	??_PWM7_LoadDutyValue^0,f,c
  6496  003AE6  5016               	movf	??_PWM7_LoadDutyValue^0,w,c
  6497  003AE8  6E65               	movwf	101,c	;volatile
  6498                           
  6499                           ;mcc_generated_files/pwm7.c: 80:      PWM7DCL = (dutyValue & 0x0003)<<6;
  6500  003AEA  C014  F016         	movff	PWM7_LoadDutyValue@dutyValue,??_PWM7_LoadDutyValue
  6501  003AEE  0E03               	movlw	3
  6502  003AF0  1616               	andwf	??_PWM7_LoadDutyValue^0,f,c
  6503  003AF2  0E06               	movlw	6
  6504  003AF4  6E17               	movwf	(??_PWM7_LoadDutyValue+1)^0,c
  6505  003AF6                     u2645:
  6506  003AF6  90D8               	bcf	status,0,c
  6507  003AF8  3616               	rlcf	??_PWM7_LoadDutyValue^0,f,c
  6508  003AFA  2E17               	decfsz	(??_PWM7_LoadDutyValue+1)^0,f,c
  6509  003AFC  EF7B  F01D         	goto	u2645
  6510  003B00  5016               	movf	??_PWM7_LoadDutyValue^0,w,c
  6511  003B02  6E64               	movwf	100,c	;volatile
  6512  003B04  0012               	return		;funcret
  6513  003B06                     __end_of_PWM7_LoadDutyValue:
  6514                           	callstack 0
  6515                           
  6516 ;; *************** function _actSpeed *****************
  6517 ;; Defined at:
  6518 ;;		line 55 in file "main.c"
  6519 ;; Parameters:    Size  Location     Type
  6520 ;;		None
  6521 ;; Auto vars:     Size  Location     Type
  6522 ;;  speed           2   35[COMRAM] short 
  6523 ;; Return value:  Size  Location     Type
  6524 ;;                  2   33[COMRAM] short 
  6525 ;; Registers used:
  6526 ;;		wreg, status,2, status,0, cstack
  6527 ;; Tracked objects:
  6528 ;;		On entry : 0/0
  6529 ;;		On exit  : 0/0
  6530 ;;		Unchanged: 0/0
  6531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6532 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6533 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6535 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6536 ;;Total ram usage:        4 bytes
  6537 ;; Hardware stack levels used: 1
  6538 ;; Hardware stack levels required when called: 9
  6539 ;; This function calls:
  6540 ;;		___aldiv
  6541 ;; This function is called by:
  6542 ;;		_calcMotorPow
  6543 ;; This function uses a non-reentrant model
  6544 ;;
  6545                           
  6546                           	psect	text30
  6547  00347C                     __ptext30:
  6548                           	callstack 0
  6549  00347C                     _actSpeed:
  6550                           	callstack 19
  6551  00347C                     
  6552                           ;main.c: 56:     int16_t speed = 0;
  6553  00347C  0E00               	movlw	0
  6554  00347E  6E25               	movwf	(actSpeed@speed+1)^0,c
  6555  003480  0E00               	movlw	0
  6556  003482  6E24               	movwf	actSpeed@speed^0,c
  6557  003484                     
  6558                           ;main.c: 57:     if(smtPeriod){
  6559  003484  5048               	movf	_smtPeriod^0,w,c	;volatile
  6560  003486  1049               	iorwf	(_smtPeriod+1)^0,w,c	;volatile
  6561  003488  104A               	iorwf	(_smtPeriod+2)^0,w,c	;volatile
  6562  00348A  104B               	iorwf	(_smtPeriod+3)^0,w,c	;volatile
  6563  00348C  B4D8               	btfsc	status,2,c
  6564  00348E  EF4B  F01A         	goto	u2881
  6565  003492  EF4D  F01A         	goto	u2880
  6566  003496                     u2881:
  6567  003496  EF83  F01A         	goto	l4454
  6568  00349A                     u2880:
  6569  00349A                     
  6570                           ;main.c: 58:         if(CLC3CONbits.LC3OUT){
  6571  00349A  013C               	movlb	60	; () banked
  6572  00349C  AB60               	btfss	96,5,b	;volatile
  6573  00349E  EF53  F01A         	goto	u2891
  6574  0034A2  EF55  F01A         	goto	u2890
  6575  0034A6                     u2891:
  6576  0034A6  EF6D  F01A         	goto	l4452
  6577  0034AA                     u2890:
  6578  0034AA                     
  6579                           ; BSR set to: 60
  6580                           ;main.c: 59:             speed = (int16_t)((int32_t)(500000 / (int32_t)smtPeriod));
  6581  0034AA  0E20               	movlw	32
  6582  0034AC  6E14               	movwf	___aldiv@dividend^0,c
  6583  0034AE  0EA1               	movlw	161
  6584  0034B0  6E15               	movwf	(___aldiv@dividend+1)^0,c
  6585  0034B2  0E07               	movlw	7
  6586  0034B4  6E16               	movwf	(___aldiv@dividend+2)^0,c
  6587  0034B6  0E00               	movlw	0
  6588  0034B8  6E17               	movwf	(___aldiv@dividend+3)^0,c
  6589  0034BA  C048  F018         	movff	_smtPeriod,___aldiv@divisor	;volatile
  6590  0034BE  C049  F019         	movff	_smtPeriod+1,___aldiv@divisor+1	;volatile
  6591  0034C2  C04A  F01A         	movff	_smtPeriod+2,___aldiv@divisor+2	;volatile
  6592  0034C6  C04B  F01B         	movff	_smtPeriod+3,___aldiv@divisor+3	;volatile
  6593  0034CA  EC1D  F016         	call	___aldiv	;wreg free
  6594  0034CE  C014  F024         	movff	?___aldiv,actSpeed@speed
  6595  0034D2  C015  F025         	movff	?___aldiv+1,actSpeed@speed+1
  6596                           
  6597                           ;main.c: 60:         } else {
  6598  0034D6  EF83  F01A         	goto	l4454
  6599  0034DA                     l4452:
  6600                           
  6601                           ; BSR set to: 60
  6602                           ;main.c: 61:             speed = (int16_t)((int32_t)(-500000 / (int32_t)smtPeriod));
  6603  0034DA  0EE0               	movlw	224
  6604  0034DC  6E14               	movwf	___aldiv@dividend^0,c
  6605  0034DE  0E5E               	movlw	94
  6606  0034E0  6E15               	movwf	(___aldiv@dividend+1)^0,c
  6607  0034E2  0EF8               	movlw	248
  6608  0034E4  6E16               	movwf	(___aldiv@dividend+2)^0,c
  6609  0034E6  0EFF               	movlw	255
  6610  0034E8  6E17               	movwf	(___aldiv@dividend+3)^0,c
  6611  0034EA  C048  F018         	movff	_smtPeriod,___aldiv@divisor	;volatile
  6612  0034EE  C049  F019         	movff	_smtPeriod+1,___aldiv@divisor+1	;volatile
  6613  0034F2  C04A  F01A         	movff	_smtPeriod+2,___aldiv@divisor+2	;volatile
  6614  0034F6  C04B  F01B         	movff	_smtPeriod+3,___aldiv@divisor+3	;volatile
  6615  0034FA  EC1D  F016         	call	___aldiv	;wreg free
  6616  0034FE  C014  F024         	movff	?___aldiv,actSpeed@speed
  6617  003502  C015  F025         	movff	?___aldiv+1,actSpeed@speed+1
  6618  003506                     l4454:
  6619                           
  6620                           ;main.c: 64:     return speed;
  6621  003506  C024  F022         	movff	actSpeed@speed,?_actSpeed
  6622  00350A  C025  F023         	movff	actSpeed@speed+1,?_actSpeed+1
  6623  00350E  0012               	return		;funcret
  6624  003510                     __end_of_actSpeed:
  6625                           	callstack 0
  6626                           
  6627 ;; *************** function ___aldiv *****************
  6628 ;; Defined at:
  6629 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aldiv.c"
  6630 ;; Parameters:    Size  Location     Type
  6631 ;;  dividend        4   19[COMRAM] long 
  6632 ;;  divisor         4   23[COMRAM] long 
  6633 ;; Auto vars:     Size  Location     Type
  6634 ;;  quotient        4   29[COMRAM] long 
  6635 ;;  sign            1   28[COMRAM] unsigned char 
  6636 ;;  counter         1   27[COMRAM] unsigned char 
  6637 ;; Return value:  Size  Location     Type
  6638 ;;                  4   19[COMRAM] long 
  6639 ;; Registers used:
  6640 ;;		wreg, status,2, status,0
  6641 ;; Tracked objects:
  6642 ;;		On entry : 0/0
  6643 ;;		On exit  : 0/0
  6644 ;;		Unchanged: 0/0
  6645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6646 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6647 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6649 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6650 ;;Total ram usage:       14 bytes
  6651 ;; Hardware stack levels used: 1
  6652 ;; Hardware stack levels required when called: 8
  6653 ;; This function calls:
  6654 ;;		Nothing
  6655 ;; This function is called by:
  6656 ;;		_actSpeed
  6657 ;; This function uses a non-reentrant model
  6658 ;;
  6659                           
  6660                           	psect	text31
  6661  002C3A                     __ptext31:
  6662                           	callstack 0
  6663  002C3A                     ___aldiv:
  6664                           	callstack 19
  6665  002C3A  0E00               	movlw	0
  6666  002C3C  6E1D               	movwf	___aldiv@sign^0,c
  6667  002C3E  BE1B               	btfsc	(___aldiv@divisor+3)^0,7,c
  6668  002C40  EF26  F016         	goto	u2680
  6669  002C44  EF24  F016         	goto	u2681
  6670  002C48                     u2681:
  6671  002C48  EF30  F016         	goto	l4270
  6672  002C4C                     u2680:
  6673  002C4C  1E1B               	comf	(___aldiv@divisor+3)^0,f,c
  6674  002C4E  1E1A               	comf	(___aldiv@divisor+2)^0,f,c
  6675  002C50  1E19               	comf	(___aldiv@divisor+1)^0,f,c
  6676  002C52  6C18               	negf	___aldiv@divisor^0,c
  6677  002C54  0E00               	movlw	0
  6678  002C56  2219               	addwfc	(___aldiv@divisor+1)^0,f,c
  6679  002C58  221A               	addwfc	(___aldiv@divisor+2)^0,f,c
  6680  002C5A  221B               	addwfc	(___aldiv@divisor+3)^0,f,c
  6681  002C5C  0E01               	movlw	1
  6682  002C5E  6E1D               	movwf	___aldiv@sign^0,c
  6683  002C60                     l4270:
  6684  002C60  BE17               	btfsc	(___aldiv@dividend+3)^0,7,c
  6685  002C62  EF37  F016         	goto	u2690
  6686  002C66  EF35  F016         	goto	u2691
  6687  002C6A                     u2691:
  6688  002C6A  EF41  F016         	goto	l4276
  6689  002C6E                     u2690:
  6690  002C6E  1E17               	comf	(___aldiv@dividend+3)^0,f,c
  6691  002C70  1E16               	comf	(___aldiv@dividend+2)^0,f,c
  6692  002C72  1E15               	comf	(___aldiv@dividend+1)^0,f,c
  6693  002C74  6C14               	negf	___aldiv@dividend^0,c
  6694  002C76  0E00               	movlw	0
  6695  002C78  2215               	addwfc	(___aldiv@dividend+1)^0,f,c
  6696  002C7A  2216               	addwfc	(___aldiv@dividend+2)^0,f,c
  6697  002C7C  2217               	addwfc	(___aldiv@dividend+3)^0,f,c
  6698  002C7E  0E01               	movlw	1
  6699  002C80  1A1D               	xorwf	___aldiv@sign^0,f,c
  6700  002C82                     l4276:
  6701  002C82  0E00               	movlw	0
  6702  002C84  6E1E               	movwf	___aldiv@quotient^0,c
  6703  002C86  0E00               	movlw	0
  6704  002C88  6E1F               	movwf	(___aldiv@quotient+1)^0,c
  6705  002C8A  0E00               	movlw	0
  6706  002C8C  6E20               	movwf	(___aldiv@quotient+2)^0,c
  6707  002C8E  0E00               	movlw	0
  6708  002C90  6E21               	movwf	(___aldiv@quotient+3)^0,c
  6709  002C92  5018               	movf	___aldiv@divisor^0,w,c
  6710  002C94  1019               	iorwf	(___aldiv@divisor+1)^0,w,c
  6711  002C96  101A               	iorwf	(___aldiv@divisor+2)^0,w,c
  6712  002C98  101B               	iorwf	(___aldiv@divisor+3)^0,w,c
  6713  002C9A  B4D8               	btfsc	status,2,c
  6714  002C9C  EF52  F016         	goto	u2701
  6715  002CA0  EF54  F016         	goto	u2700
  6716  002CA4                     u2701:
  6717  002CA4  EF8A  F016         	goto	l4298
  6718  002CA8                     u2700:
  6719  002CA8  0E01               	movlw	1
  6720  002CAA  6E1C               	movwf	___aldiv@counter^0,c
  6721  002CAC  EF5E  F016         	goto	l4284
  6722  002CB0                     l4282:
  6723  002CB0  90D8               	bcf	status,0,c
  6724  002CB2  3618               	rlcf	___aldiv@divisor^0,f,c
  6725  002CB4  3619               	rlcf	(___aldiv@divisor+1)^0,f,c
  6726  002CB6  361A               	rlcf	(___aldiv@divisor+2)^0,f,c
  6727  002CB8  361B               	rlcf	(___aldiv@divisor+3)^0,f,c
  6728  002CBA  2A1C               	incf	___aldiv@counter^0,f,c
  6729  002CBC                     l4284:
  6730  002CBC  AE1B               	btfss	(___aldiv@divisor+3)^0,7,c
  6731  002CBE  EF63  F016         	goto	u2711
  6732  002CC2  EF65  F016         	goto	u2710
  6733  002CC6                     u2711:
  6734  002CC6  EF58  F016         	goto	l4282
  6735  002CCA                     u2710:
  6736  002CCA                     l4286:
  6737  002CCA  90D8               	bcf	status,0,c
  6738  002CCC  361E               	rlcf	___aldiv@quotient^0,f,c
  6739  002CCE  361F               	rlcf	(___aldiv@quotient+1)^0,f,c
  6740  002CD0  3620               	rlcf	(___aldiv@quotient+2)^0,f,c
  6741  002CD2  3621               	rlcf	(___aldiv@quotient+3)^0,f,c
  6742  002CD4  5018               	movf	___aldiv@divisor^0,w,c
  6743  002CD6  5C14               	subwf	___aldiv@dividend^0,w,c
  6744  002CD8  5019               	movf	(___aldiv@divisor+1)^0,w,c
  6745  002CDA  5815               	subwfb	(___aldiv@dividend+1)^0,w,c
  6746  002CDC  501A               	movf	(___aldiv@divisor+2)^0,w,c
  6747  002CDE  5816               	subwfb	(___aldiv@dividend+2)^0,w,c
  6748  002CE0  501B               	movf	(___aldiv@divisor+3)^0,w,c
  6749  002CE2  5817               	subwfb	(___aldiv@dividend+3)^0,w,c
  6750  002CE4  A0D8               	btfss	status,0,c
  6751  002CE6  EF77  F016         	goto	u2721
  6752  002CEA  EF79  F016         	goto	u2720
  6753  002CEE                     u2721:
  6754  002CEE  EF82  F016         	goto	l4294
  6755  002CF2                     u2720:
  6756  002CF2  5018               	movf	___aldiv@divisor^0,w,c
  6757  002CF4  5E14               	subwf	___aldiv@dividend^0,f,c
  6758  002CF6  5019               	movf	(___aldiv@divisor+1)^0,w,c
  6759  002CF8  5A15               	subwfb	(___aldiv@dividend+1)^0,f,c
  6760  002CFA  501A               	movf	(___aldiv@divisor+2)^0,w,c
  6761  002CFC  5A16               	subwfb	(___aldiv@dividend+2)^0,f,c
  6762  002CFE  501B               	movf	(___aldiv@divisor+3)^0,w,c
  6763  002D00  5A17               	subwfb	(___aldiv@dividend+3)^0,f,c
  6764  002D02  801E               	bsf	___aldiv@quotient^0,0,c
  6765  002D04                     l4294:
  6766  002D04  90D8               	bcf	status,0,c
  6767  002D06  321B               	rrcf	(___aldiv@divisor+3)^0,f,c
  6768  002D08  321A               	rrcf	(___aldiv@divisor+2)^0,f,c
  6769  002D0A  3219               	rrcf	(___aldiv@divisor+1)^0,f,c
  6770  002D0C  3218               	rrcf	___aldiv@divisor^0,f,c
  6771  002D0E  2E1C               	decfsz	___aldiv@counter^0,f,c
  6772  002D10  EF65  F016         	goto	l4286
  6773  002D14                     l4298:
  6774  002D14  501D               	movf	___aldiv@sign^0,w,c
  6775  002D16  B4D8               	btfsc	status,2,c
  6776  002D18  EF90  F016         	goto	u2731
  6777  002D1C  EF92  F016         	goto	u2730
  6778  002D20                     u2731:
  6779  002D20  EF9A  F016         	goto	l4302
  6780  002D24                     u2730:
  6781  002D24  1E21               	comf	(___aldiv@quotient+3)^0,f,c
  6782  002D26  1E20               	comf	(___aldiv@quotient+2)^0,f,c
  6783  002D28  1E1F               	comf	(___aldiv@quotient+1)^0,f,c
  6784  002D2A  6C1E               	negf	___aldiv@quotient^0,c
  6785  002D2C  0E00               	movlw	0
  6786  002D2E  221F               	addwfc	(___aldiv@quotient+1)^0,f,c
  6787  002D30  2220               	addwfc	(___aldiv@quotient+2)^0,f,c
  6788  002D32  2221               	addwfc	(___aldiv@quotient+3)^0,f,c
  6789  002D34                     l4302:
  6790  002D34  C01E  F014         	movff	___aldiv@quotient,?___aldiv
  6791  002D38  C01F  F015         	movff	___aldiv@quotient+1,?___aldiv+1
  6792  002D3C  C020  F016         	movff	___aldiv@quotient+2,?___aldiv+2
  6793  002D40  C021  F017         	movff	___aldiv@quotient+3,?___aldiv+3
  6794  002D44  0012               	return		;funcret
  6795  002D46                     __end_of___aldiv:
  6796                           	callstack 0
  6797                           
  6798 ;; *************** function ___xxtofl *****************
  6799 ;; Defined at:
  6800 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  6801 ;; Parameters:    Size  Location     Type
  6802 ;;  sign            1    wreg     unsigned char 
  6803 ;;  val             4   24[COMRAM] long 
  6804 ;; Auto vars:     Size  Location     Type
  6805 ;;  sign            1   32[COMRAM] unsigned char 
  6806 ;;  arg             4   34[COMRAM] unsigned long 
  6807 ;;  exp             1   33[COMRAM] unsigned char 
  6808 ;; Return value:  Size  Location     Type
  6809 ;;                  4   24[COMRAM] unsigned char 
  6810 ;; Registers used:
  6811 ;;		wreg, status,2, status,0
  6812 ;; Tracked objects:
  6813 ;;		On entry : 0/0
  6814 ;;		On exit  : 0/0
  6815 ;;		Unchanged: 0/0
  6816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6817 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6818 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6819 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6820 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6821 ;;Total ram usage:       14 bytes
  6822 ;; Hardware stack levels used: 1
  6823 ;; Hardware stack levels required when called: 8
  6824 ;; This function calls:
  6825 ;;		Nothing
  6826 ;; This function is called by:
  6827 ;;		_loop
  6828 ;;		_calcSpeed
  6829 ;;		_calcMotorPow
  6830 ;; This function uses a non-reentrant model
  6831 ;;
  6832                           
  6833                           	psect	text32
  6834  002434                     __ptext32:
  6835                           	callstack 0
  6836  002434                     ___xxtofl:
  6837                           	callstack 20
  6838                           
  6839                           ;incstack = 0
  6840                           ;___xxtofl@sign stored from wreg
  6841  002434  6E21               	movwf	___xxtofl@sign^0,c
  6842  002436  5021               	movf	___xxtofl@sign^0,w,c
  6843  002438  B4D8               	btfsc	status,2,c
  6844  00243A  EF21  F012         	goto	u3591
  6845  00243E  EF23  F012         	goto	u3590
  6846  002442                     u3591:
  6847  002442  EF45  F012         	goto	l1994
  6848  002446                     u3590:
  6849  002446  BE1C               	btfsc	(___xxtofl@val+3)^0,7,c
  6850  002448  EF2A  F012         	goto	u3600
  6851  00244C  EF28  F012         	goto	u3601
  6852  002450                     u3601:
  6853  002450  EF45  F012         	goto	l1994
  6854  002454                     u3600:
  6855  002454  C019  F01D         	movff	___xxtofl@val,??___xxtofl
  6856  002458  C01A  F01E         	movff	___xxtofl@val+1,??___xxtofl+1
  6857  00245C  C01B  F01F         	movff	___xxtofl@val+2,??___xxtofl+2
  6858  002460  C01C  F020         	movff	___xxtofl@val+3,??___xxtofl+3
  6859  002464  1E1D               	comf	??___xxtofl^0,f,c
  6860  002466  1E1E               	comf	(??___xxtofl+1)^0,f,c
  6861  002468  1E1F               	comf	(??___xxtofl+2)^0,f,c
  6862  00246A  1E20               	comf	(??___xxtofl+3)^0,f,c
  6863  00246C  2A1D               	incf	??___xxtofl^0,f,c
  6864  00246E  0E00               	movlw	0
  6865  002470  221E               	addwfc	(??___xxtofl+1)^0,f,c
  6866  002472  221F               	addwfc	(??___xxtofl+2)^0,f,c
  6867  002474  2220               	addwfc	(??___xxtofl+3)^0,f,c
  6868  002476  C01D  F023         	movff	??___xxtofl,___xxtofl@arg
  6869  00247A  C01E  F024         	movff	??___xxtofl+1,___xxtofl@arg+1
  6870  00247E  C01F  F025         	movff	??___xxtofl+2,___xxtofl@arg+2
  6871  002482  C020  F026         	movff	??___xxtofl+3,___xxtofl@arg+3
  6872  002486  EF4D  F012         	goto	l4868
  6873  00248A                     l1994:
  6874  00248A  C019  F023         	movff	___xxtofl@val,___xxtofl@arg
  6875  00248E  C01A  F024         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6876  002492  C01B  F025         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6877  002496  C01C  F026         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6878  00249A                     l4868:
  6879  00249A  5019               	movf	___xxtofl@val^0,w,c
  6880  00249C  101A               	iorwf	(___xxtofl@val+1)^0,w,c
  6881  00249E  101B               	iorwf	(___xxtofl@val+2)^0,w,c
  6882  0024A0  101C               	iorwf	(___xxtofl@val+3)^0,w,c
  6883  0024A2  A4D8               	btfss	status,2,c
  6884  0024A4  EF56  F012         	goto	u3611
  6885  0024A8  EF58  F012         	goto	u3610
  6886  0024AC                     u3611:
  6887  0024AC  EF62  F012         	goto	l4874
  6888  0024B0                     u3610:
  6889  0024B0  0E00               	movlw	0
  6890  0024B2  6E19               	movwf	?___xxtofl^0,c
  6891  0024B4  0E00               	movlw	0
  6892  0024B6  6E1A               	movwf	(?___xxtofl+1)^0,c
  6893  0024B8  0E00               	movlw	0
  6894  0024BA  6E1B               	movwf	(?___xxtofl+2)^0,c
  6895  0024BC  0E00               	movlw	0
  6896  0024BE  6E1C               	movwf	(?___xxtofl+3)^0,c
  6897  0024C0  EFF3  F012         	goto	l1997
  6898  0024C4                     l4874:
  6899  0024C4  0E96               	movlw	150
  6900  0024C6  6E22               	movwf	___xxtofl@exp^0,c
  6901  0024C8  EF6C  F012         	goto	l4878
  6902  0024CC                     l4876:
  6903  0024CC  2A22               	incf	___xxtofl@exp^0,f,c
  6904  0024CE  90D8               	bcf	status,0,c
  6905  0024D0  3226               	rrcf	(___xxtofl@arg+3)^0,f,c
  6906  0024D2  3225               	rrcf	(___xxtofl@arg+2)^0,f,c
  6907  0024D4  3224               	rrcf	(___xxtofl@arg+1)^0,f,c
  6908  0024D6  3223               	rrcf	___xxtofl@arg^0,f,c
  6909  0024D8                     l4878:
  6910  0024D8  0E00               	movlw	0
  6911  0024DA  1423               	andwf	___xxtofl@arg^0,w,c
  6912  0024DC  6E1D               	movwf	??___xxtofl^0,c
  6913  0024DE  0E00               	movlw	0
  6914  0024E0  1424               	andwf	(___xxtofl@arg+1)^0,w,c
  6915  0024E2  6E1E               	movwf	(??___xxtofl+1)^0,c
  6916  0024E4  0E00               	movlw	0
  6917  0024E6  1425               	andwf	(___xxtofl@arg+2)^0,w,c
  6918  0024E8  6E1F               	movwf	(??___xxtofl+2)^0,c
  6919  0024EA  0EFE               	movlw	254
  6920  0024EC  1426               	andwf	(___xxtofl@arg+3)^0,w,c
  6921  0024EE  6E20               	movwf	(??___xxtofl+3)^0,c
  6922  0024F0  501D               	movf	??___xxtofl^0,w,c
  6923  0024F2  101E               	iorwf	(??___xxtofl+1)^0,w,c
  6924  0024F4  101F               	iorwf	(??___xxtofl+2)^0,w,c
  6925  0024F6  1020               	iorwf	(??___xxtofl+3)^0,w,c
  6926  0024F8  A4D8               	btfss	status,2,c
  6927  0024FA  EF81  F012         	goto	u3621
  6928  0024FE  EF83  F012         	goto	u3620
  6929  002502                     u3621:
  6930  002502  EF66  F012         	goto	l4876
  6931  002506                     u3620:
  6932  002506  EF91  F012         	goto	l2001
  6933  00250A                     l4880:
  6934  00250A  2A22               	incf	___xxtofl@exp^0,f,c
  6935  00250C  0E01               	movlw	1
  6936  00250E  2623               	addwf	___xxtofl@arg^0,f,c
  6937  002510  0E00               	movlw	0
  6938  002512  2224               	addwfc	(___xxtofl@arg+1)^0,f,c
  6939  002514  2225               	addwfc	(___xxtofl@arg+2)^0,f,c
  6940  002516  2226               	addwfc	(___xxtofl@arg+3)^0,f,c
  6941  002518  90D8               	bcf	status,0,c
  6942  00251A  3226               	rrcf	(___xxtofl@arg+3)^0,f,c
  6943  00251C  3225               	rrcf	(___xxtofl@arg+2)^0,f,c
  6944  00251E  3224               	rrcf	(___xxtofl@arg+1)^0,f,c
  6945  002520  3223               	rrcf	___xxtofl@arg^0,f,c
  6946  002522                     l2001:
  6947  002522  0E00               	movlw	0
  6948  002524  1423               	andwf	___xxtofl@arg^0,w,c
  6949  002526  6E1D               	movwf	??___xxtofl^0,c
  6950  002528  0E00               	movlw	0
  6951  00252A  1424               	andwf	(___xxtofl@arg+1)^0,w,c
  6952  00252C  6E1E               	movwf	(??___xxtofl+1)^0,c
  6953  00252E  0E00               	movlw	0
  6954  002530  1425               	andwf	(___xxtofl@arg+2)^0,w,c
  6955  002532  6E1F               	movwf	(??___xxtofl+2)^0,c
  6956  002534  0EFF               	movlw	255
  6957  002536  1426               	andwf	(___xxtofl@arg+3)^0,w,c
  6958  002538  6E20               	movwf	(??___xxtofl+3)^0,c
  6959  00253A  501D               	movf	??___xxtofl^0,w,c
  6960  00253C  101E               	iorwf	(??___xxtofl+1)^0,w,c
  6961  00253E  101F               	iorwf	(??___xxtofl+2)^0,w,c
  6962  002540  1020               	iorwf	(??___xxtofl+3)^0,w,c
  6963  002542  A4D8               	btfss	status,2,c
  6964  002544  EFA6  F012         	goto	u3631
  6965  002548  EFA8  F012         	goto	u3630
  6966  00254C                     u3631:
  6967  00254C  EF85  F012         	goto	l4880
  6968  002550                     u3630:
  6969  002550  EFB0  F012         	goto	l4888
  6970  002554                     l4886:
  6971  002554  0622               	decf	___xxtofl@exp^0,f,c
  6972  002556  90D8               	bcf	status,0,c
  6973  002558  3623               	rlcf	___xxtofl@arg^0,f,c
  6974  00255A  3624               	rlcf	(___xxtofl@arg+1)^0,f,c
  6975  00255C  3625               	rlcf	(___xxtofl@arg+2)^0,f,c
  6976  00255E  3626               	rlcf	(___xxtofl@arg+3)^0,f,c
  6977  002560                     l4888:
  6978  002560  BE25               	btfsc	(___xxtofl@arg+2)^0,7,c
  6979  002562  EFB5  F012         	goto	u3641
  6980  002566  EFB7  F012         	goto	u3640
  6981  00256A                     u3641:
  6982  00256A  EFBF  F012         	goto	l2008
  6983  00256E                     u3640:
  6984  00256E  0E02               	movlw	2
  6985  002570  6022               	cpfslt	___xxtofl@exp^0,c
  6986  002572  EFBD  F012         	goto	u3651
  6987  002576  EFBF  F012         	goto	u3650
  6988  00257A                     u3651:
  6989  00257A  EFAA  F012         	goto	l4886
  6990  00257E                     u3650:
  6991  00257E                     l2008:
  6992  00257E  B022               	btfsc	___xxtofl@exp^0,0,c
  6993  002580  EFC4  F012         	goto	u3661
  6994  002584  EFC6  F012         	goto	u3660
  6995  002588                     u3661:
  6996  002588  EFC7  F012         	goto	l4894
  6997  00258C                     u3660:
  6998  00258C  9E25               	bcf	(___xxtofl@arg+2)^0,7,c
  6999  00258E                     l4894:
  7000  00258E  90D8               	bcf	status,0,c
  7001  002590  3222               	rrcf	___xxtofl@exp^0,f,c
  7002  002592  C022  F01D         	movff	___xxtofl@exp,??___xxtofl
  7003  002596  6A1E               	clrf	(??___xxtofl+1)^0,c
  7004  002598  6A1F               	clrf	(??___xxtofl+2)^0,c
  7005  00259A  6A20               	clrf	(??___xxtofl+3)^0,c
  7006  00259C  C01D  F020         	movff	??___xxtofl,??___xxtofl+3
  7007  0025A0  6A1F               	clrf	(??___xxtofl+2)^0,c
  7008  0025A2  6A1E               	clrf	(??___xxtofl+1)^0,c
  7009  0025A4  6A1D               	clrf	??___xxtofl^0,c
  7010  0025A6  501D               	movf	??___xxtofl^0,w,c
  7011  0025A8  1223               	iorwf	___xxtofl@arg^0,f,c
  7012  0025AA  501E               	movf	(??___xxtofl+1)^0,w,c
  7013  0025AC  1224               	iorwf	(___xxtofl@arg+1)^0,f,c
  7014  0025AE  501F               	movf	(??___xxtofl+2)^0,w,c
  7015  0025B0  1225               	iorwf	(___xxtofl@arg+2)^0,f,c
  7016  0025B2  5020               	movf	(??___xxtofl+3)^0,w,c
  7017  0025B4  1226               	iorwf	(___xxtofl@arg+3)^0,f,c
  7018  0025B6  5021               	movf	___xxtofl@sign^0,w,c
  7019  0025B8  B4D8               	btfsc	status,2,c
  7020  0025BA  EFE1  F012         	goto	u3671
  7021  0025BE  EFE3  F012         	goto	u3670
  7022  0025C2                     u3671:
  7023  0025C2  EFEB  F012         	goto	l4904
  7024  0025C6                     u3670:
  7025  0025C6  BE1C               	btfsc	(___xxtofl@val+3)^0,7,c
  7026  0025C8  EFEA  F012         	goto	u3680
  7027  0025CC  EFE8  F012         	goto	u3681
  7028  0025D0                     u3681:
  7029  0025D0  EFEB  F012         	goto	l4904
  7030  0025D4                     u3680:
  7031  0025D4  8E26               	bsf	(___xxtofl@arg+3)^0,7,c
  7032  0025D6                     l4904:
  7033  0025D6  C023  F019         	movff	___xxtofl@arg,?___xxtofl
  7034  0025DA  C024  F01A         	movff	___xxtofl@arg+1,?___xxtofl+1
  7035  0025DE  C025  F01B         	movff	___xxtofl@arg+2,?___xxtofl+2
  7036  0025E2  C026  F01C         	movff	___xxtofl@arg+3,?___xxtofl+3
  7037  0025E6                     l1997:
  7038  0025E6  0012               	return		;funcret
  7039  0025E8                     __end_of___xxtofl:
  7040                           	callstack 0
  7041                           
  7042 ;; *************** function ___fltol *****************
  7043 ;; Defined at:
  7044 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  7045 ;; Parameters:    Size  Location     Type
  7046 ;;  f1              4   21[BANK0 ] unsigned char 
  7047 ;; Auto vars:     Size  Location     Type
  7048 ;;  exp1            1   30[BANK0 ] unsigned char 
  7049 ;;  sign1           1   29[BANK0 ] unsigned char 
  7050 ;; Return value:  Size  Location     Type
  7051 ;;                  4   21[BANK0 ] long 
  7052 ;; Registers used:
  7053 ;;		wreg, status,2, status,0
  7054 ;; Tracked objects:
  7055 ;;		On entry : 0/0
  7056 ;;		On exit  : 0/0
  7057 ;;		Unchanged: 0/0
  7058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7059 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7060 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7061 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7062 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7063 ;;Total ram usage:       10 bytes
  7064 ;; Hardware stack levels used: 1
  7065 ;; Hardware stack levels required when called: 8
  7066 ;; This function calls:
  7067 ;;		Nothing
  7068 ;; This function is called by:
  7069 ;;		_calcSpeed
  7070 ;;		_calcMotorPow
  7071 ;; This function uses a non-reentrant model
  7072 ;;
  7073                           
  7074                           	psect	text33
  7075  002D46                     __ptext33:
  7076                           	callstack 0
  7077  002D46                     ___fltol:
  7078                           	callstack 20
  7079  002D46  0100               	movlb	0	; () banked
  7080  002D48  35B9               	rlcf	(___fltol@f1+2)& (0+255),w,b
  7081  002D4A  35BA               	rlcf	(___fltol@f1+3)& (0+255),w,b
  7082  002D4C  6FC0               	movwf	___fltol@exp1& (0+255),b
  7083  002D4E  51C0               	movf	___fltol@exp1& (0+255),w,b
  7084  002D50  A4D8               	btfss	status,2,c
  7085  002D52  EFAD  F016         	goto	u3521
  7086  002D56  EFAF  F016         	goto	u3520
  7087  002D5A                     u3521:
  7088  002D5A  EFB9  F016         	goto	l4824
  7089  002D5E                     u3520:
  7090  002D5E                     l4820:
  7091                           
  7092                           ; BSR set to: 0
  7093  002D5E  0E00               	movlw	0
  7094  002D60  6FB7               	movwf	?___fltol& (0+255),b
  7095  002D62  0E00               	movlw	0
  7096  002D64  6FB8               	movwf	(?___fltol+1)& (0+255),b
  7097  002D66  0E00               	movlw	0
  7098  002D68  6FB9               	movwf	(?___fltol+2)& (0+255),b
  7099  002D6A  0E00               	movlw	0
  7100  002D6C  6FBA               	movwf	(?___fltol+3)& (0+255),b
  7101  002D6E  EF26  F017         	goto	l1636
  7102  002D72                     l4824:
  7103                           
  7104                           ; BSR set to: 0
  7105  002D72  C0B7  F0BB         	movff	___fltol@f1,??___fltol
  7106  002D76  C0B8  F0BC         	movff	___fltol@f1+1,??___fltol+1
  7107  002D7A  C0B9  F0BD         	movff	___fltol@f1+2,??___fltol+2
  7108  002D7E  C0BA  F0BE         	movff	___fltol@f1+3,??___fltol+3
  7109  002D82  0E20               	movlw	32
  7110  002D84  EFC9  F016         	goto	u3530
  7111  002D88                     u3535:
  7112  002D88  90D8               	bcf	status,0,c
  7113  002D8A  33BE               	rrcf	(??___fltol+3)& (0+255),f,b
  7114  002D8C  33BD               	rrcf	(??___fltol+2)& (0+255),f,b
  7115  002D8E  33BC               	rrcf	(??___fltol+1)& (0+255),f,b
  7116  002D90  33BB               	rrcf	??___fltol& (0+255),f,b
  7117  002D92                     u3530:
  7118  002D92  2EE8               	decfsz	wreg,f,c
  7119  002D94  EFC4  F016         	goto	u3535
  7120  002D98  51BB               	movf	??___fltol& (0+255),w,b
  7121  002D9A  6FBF               	movwf	___fltol@sign1& (0+255),b
  7122  002D9C                     
  7123                           ; BSR set to: 0
  7124  002D9C  8FB9               	bsf	(___fltol@f1+2)& (0+255),7,b
  7125  002D9E                     
  7126                           ; BSR set to: 0
  7127  002D9E  0EFF               	movlw	255
  7128  002DA0  17B7               	andwf	___fltol@f1& (0+255),f,b
  7129  002DA2  0EFF               	movlw	255
  7130  002DA4  17B8               	andwf	(___fltol@f1+1)& (0+255),f,b
  7131  002DA6  0EFF               	movlw	255
  7132  002DA8  17B9               	andwf	(___fltol@f1+2)& (0+255),f,b
  7133  002DAA  0E00               	movlw	0
  7134  002DAC  17BA               	andwf	(___fltol@f1+3)& (0+255),f,b
  7135  002DAE                     
  7136                           ; BSR set to: 0
  7137  002DAE  0E96               	movlw	150
  7138  002DB0  5FC0               	subwf	___fltol@exp1& (0+255),f,b
  7139  002DB2                     
  7140                           ; BSR set to: 0
  7141  002DB2  BFC0               	btfsc	___fltol@exp1& (0+255),7,b
  7142  002DB4  EFE0  F016         	goto	u3540
  7143  002DB8  EFDE  F016         	goto	u3541
  7144  002DBC                     u3541:
  7145  002DBC  EFF6  F016         	goto	l4844
  7146  002DC0                     u3540:
  7147  002DC0                     
  7148                           ; BSR set to: 0
  7149  002DC0  51C0               	movf	___fltol@exp1& (0+255),w,b
  7150  002DC2  0A80               	xorlw	128
  7151  002DC4  0F97               	addlw	151
  7152  002DC6  B0D8               	btfsc	status,0,c
  7153  002DC8  EFE8  F016         	goto	u3551
  7154  002DCC  EFEA  F016         	goto	u3550
  7155  002DD0                     u3551:
  7156  002DD0  EFEC  F016         	goto	l4840
  7157  002DD4                     u3550:
  7158  002DD4  EFAF  F016         	goto	l4820
  7159  002DD8                     l4840:
  7160                           
  7161                           ; BSR set to: 0
  7162  002DD8  90D8               	bcf	status,0,c
  7163  002DDA  33BA               	rrcf	(___fltol@f1+3)& (0+255),f,b
  7164  002DDC  33B9               	rrcf	(___fltol@f1+2)& (0+255),f,b
  7165  002DDE  33B8               	rrcf	(___fltol@f1+1)& (0+255),f,b
  7166  002DE0  33B7               	rrcf	___fltol@f1& (0+255),f,b
  7167  002DE2                     
  7168                           ; BSR set to: 0
  7169  002DE2  3FC0               	incfsz	___fltol@exp1& (0+255),f,b
  7170  002DE4  EFEC  F016         	goto	l4840
  7171  002DE8  EF0E  F017         	goto	l4854
  7172  002DEC                     l4844:
  7173                           
  7174                           ; BSR set to: 0
  7175  002DEC  0E1F               	movlw	31
  7176  002DEE  65C0               	cpfsgt	___fltol@exp1& (0+255),b
  7177  002DF0  EFFC  F016         	goto	u3561
  7178  002DF4  EFFE  F016         	goto	u3560
  7179  002DF8                     u3561:
  7180  002DF8  EF06  F017         	goto	l4852
  7181  002DFC                     u3560:
  7182  002DFC  EFAF  F016         	goto	l4820
  7183  002E00                     l4850:
  7184                           
  7185                           ; BSR set to: 0
  7186  002E00  90D8               	bcf	status,0,c
  7187  002E02  37B7               	rlcf	___fltol@f1& (0+255),f,b
  7188  002E04  37B8               	rlcf	(___fltol@f1+1)& (0+255),f,b
  7189  002E06  37B9               	rlcf	(___fltol@f1+2)& (0+255),f,b
  7190  002E08  37BA               	rlcf	(___fltol@f1+3)& (0+255),f,b
  7191  002E0A  07C0               	decf	___fltol@exp1& (0+255),f,b
  7192  002E0C                     l4852:
  7193                           
  7194                           ; BSR set to: 0
  7195  002E0C  51C0               	movf	___fltol@exp1& (0+255),w,b
  7196  002E0E  A4D8               	btfss	status,2,c
  7197  002E10  EF0C  F017         	goto	u3571
  7198  002E14  EF0E  F017         	goto	u3570
  7199  002E18                     u3571:
  7200  002E18  EF00  F017         	goto	l4850
  7201  002E1C                     u3570:
  7202  002E1C                     l4854:
  7203                           
  7204                           ; BSR set to: 0
  7205  002E1C  51BF               	movf	___fltol@sign1& (0+255),w,b
  7206  002E1E  B4D8               	btfsc	status,2,c
  7207  002E20  EF14  F017         	goto	u3581
  7208  002E24  EF16  F017         	goto	u3580
  7209  002E28                     u3581:
  7210  002E28  EF1E  F017         	goto	l4858
  7211  002E2C                     u3580:
  7212  002E2C                     
  7213                           ; BSR set to: 0
  7214  002E2C  1FBA               	comf	(___fltol@f1+3)& (0+255),f,b
  7215  002E2E  1FB9               	comf	(___fltol@f1+2)& (0+255),f,b
  7216  002E30  1FB8               	comf	(___fltol@f1+1)& (0+255),f,b
  7217  002E32  6DB7               	negf	___fltol@f1& (0+255),b
  7218  002E34  0E00               	movlw	0
  7219  002E36  23B8               	addwfc	(___fltol@f1+1)& (0+255),f,b
  7220  002E38  23B9               	addwfc	(___fltol@f1+2)& (0+255),f,b
  7221  002E3A  23BA               	addwfc	(___fltol@f1+3)& (0+255),f,b
  7222  002E3C                     l4858:
  7223                           
  7224                           ; BSR set to: 0
  7225  002E3C  C0B7  F0B7         	movff	___fltol@f1,?___fltol
  7226  002E40  C0B8  F0B8         	movff	___fltol@f1+1,?___fltol+1
  7227  002E44  C0B9  F0B9         	movff	___fltol@f1+2,?___fltol+2
  7228  002E48  C0BA  F0BA         	movff	___fltol@f1+3,?___fltol+3
  7229  002E4C                     l1636:
  7230                           
  7231                           ; BSR set to: 0
  7232  002E4C  0012               	return		;funcret
  7233  002E4E                     __end_of___fltol:
  7234                           	callstack 0
  7235                           
  7236 ;; *************** function ___flmul *****************
  7237 ;; Defined at:
  7238 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
  7239 ;; Parameters:    Size  Location     Type
  7240 ;;  b               4   38[COMRAM] long 
  7241 ;;  a               4   42[COMRAM] long 
  7242 ;; Auto vars:     Size  Location     Type
  7243 ;;  prod            4    7[BANK0 ] struct .
  7244 ;;  grs             4    2[BANK0 ] unsigned long 
  7245 ;;  temp            2   11[BANK0 ] struct .
  7246 ;;  bexp            1    6[BANK0 ] unsigned char 
  7247 ;;  aexp            1    1[BANK0 ] unsigned char 
  7248 ;;  sign            1    0[BANK0 ] unsigned char 
  7249 ;; Return value:  Size  Location     Type
  7250 ;;                  4   38[COMRAM] unsigned char 
  7251 ;; Registers used:
  7252 ;;		wreg, status,2, status,0, prodl, prodh
  7253 ;; Tracked objects:
  7254 ;;		On entry : 0/0
  7255 ;;		On exit  : 0/0
  7256 ;;		Unchanged: 0/0
  7257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7258 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7259 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7260 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7261 ;;      Totals:        12      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7262 ;;Total ram usage:       25 bytes
  7263 ;; Hardware stack levels used: 1
  7264 ;; Hardware stack levels required when called: 8
  7265 ;; This function calls:
  7266 ;;		Nothing
  7267 ;; This function is called by:
  7268 ;;		_calcSpeed
  7269 ;;		_calcMotorPow
  7270 ;; This function uses a non-reentrant model
  7271 ;;
  7272                           
  7273                           	psect	text34
  7274  001536                     __ptext34:
  7275                           	callstack 0
  7276  001536                     ___flmul:
  7277                           	callstack 20
  7278  001536  502A               	movf	(___flmul@b+3)^0,w,c
  7279  001538  0B80               	andlw	128
  7280  00153A  0100               	movlb	0	; () banked
  7281  00153C  6FA2               	movwf	___flmul@sign& (0+255),b
  7282  00153E  502A               	movf	(___flmul@b+3)^0,w,c
  7283  001540  242A               	addwf	(___flmul@b+3)^0,w,c
  7284  001542  6FA8               	movwf	___flmul@bexp& (0+255),b
  7285  001544                     
  7286                           ; BSR set to: 0
  7287  001544  AE29               	btfss	(___flmul@b+2)^0,7,c
  7288  001546  EFA7  F00A         	goto	u5181
  7289  00154A  EFA9  F00A         	goto	u5180
  7290  00154E                     u5181:
  7291  00154E  EFAA  F00A         	goto	l6018
  7292  001552                     u5180:
  7293  001552                     
  7294                           ; BSR set to: 0
  7295  001552  81A8               	bsf	___flmul@bexp& (0+255),0,b
  7296  001554                     l6018:
  7297                           
  7298                           ; BSR set to: 0
  7299  001554  51A8               	movf	___flmul@bexp& (0+255),w,b
  7300  001556  B4D8               	btfsc	status,2,c
  7301  001558  EFB0  F00A         	goto	u5191
  7302  00155C  EFB2  F00A         	goto	u5190
  7303  001560                     u5191:
  7304  001560  EFC5  F00A         	goto	l6026
  7305  001564                     u5190:
  7306  001564                     
  7307                           ; BSR set to: 0
  7308  001564  29A8               	incf	___flmul@bexp& (0+255),w,b
  7309  001566  A4D8               	btfss	status,2,c
  7310  001568  EFB8  F00A         	goto	u5201
  7311  00156C  EFBA  F00A         	goto	u5200
  7312  001570                     u5201:
  7313  001570  EFC2  F00A         	goto	l6024
  7314  001574                     u5200:
  7315  001574                     
  7316                           ; BSR set to: 0
  7317  001574  0E00               	movlw	0
  7318  001576  6E27               	movwf	___flmul@b^0,c
  7319  001578  0E00               	movlw	0
  7320  00157A  6E28               	movwf	(___flmul@b+1)^0,c
  7321  00157C  0E00               	movlw	0
  7322  00157E  6E29               	movwf	(___flmul@b+2)^0,c
  7323  001580  0E00               	movlw	0
  7324  001582  6E2A               	movwf	(___flmul@b+3)^0,c
  7325  001584                     l6024:
  7326                           
  7327                           ; BSR set to: 0
  7328  001584  8E29               	bsf	(___flmul@b+2)^0,7,c
  7329  001586  EFCD  F00A         	goto	l6028
  7330  00158A                     l6026:
  7331                           
  7332                           ; BSR set to: 0
  7333  00158A  0E00               	movlw	0
  7334  00158C  6E27               	movwf	___flmul@b^0,c
  7335  00158E  0E00               	movlw	0
  7336  001590  6E28               	movwf	(___flmul@b+1)^0,c
  7337  001592  0E00               	movlw	0
  7338  001594  6E29               	movwf	(___flmul@b+2)^0,c
  7339  001596  0E00               	movlw	0
  7340  001598  6E2A               	movwf	(___flmul@b+3)^0,c
  7341  00159A                     l6028:
  7342                           
  7343                           ; BSR set to: 0
  7344  00159A  502E               	movf	(___flmul@a+3)^0,w,c
  7345  00159C  0B80               	andlw	128
  7346  00159E  1BA2               	xorwf	___flmul@sign& (0+255),f,b
  7347  0015A0                     
  7348                           ; BSR set to: 0
  7349  0015A0  502E               	movf	(___flmul@a+3)^0,w,c
  7350  0015A2  242E               	addwf	(___flmul@a+3)^0,w,c
  7351  0015A4  6FA3               	movwf	___flmul@aexp& (0+255),b
  7352  0015A6                     
  7353                           ; BSR set to: 0
  7354  0015A6  AE2D               	btfss	(___flmul@a+2)^0,7,c
  7355  0015A8  EFD8  F00A         	goto	u5211
  7356  0015AC  EFDA  F00A         	goto	u5210
  7357  0015B0                     u5211:
  7358  0015B0  EFDB  F00A         	goto	l6036
  7359  0015B4                     u5210:
  7360  0015B4                     
  7361                           ; BSR set to: 0
  7362  0015B4  81A3               	bsf	___flmul@aexp& (0+255),0,b
  7363  0015B6                     l6036:
  7364                           
  7365                           ; BSR set to: 0
  7366  0015B6  51A3               	movf	___flmul@aexp& (0+255),w,b
  7367  0015B8  B4D8               	btfsc	status,2,c
  7368  0015BA  EFE1  F00A         	goto	u5221
  7369  0015BE  EFE3  F00A         	goto	u5220
  7370  0015C2                     u5221:
  7371  0015C2  EFF6  F00A         	goto	l6044
  7372  0015C6                     u5220:
  7373  0015C6                     
  7374                           ; BSR set to: 0
  7375  0015C6  29A3               	incf	___flmul@aexp& (0+255),w,b
  7376  0015C8  A4D8               	btfss	status,2,c
  7377  0015CA  EFE9  F00A         	goto	u5231
  7378  0015CE  EFEB  F00A         	goto	u5230
  7379  0015D2                     u5231:
  7380  0015D2  EFF3  F00A         	goto	l6042
  7381  0015D6                     u5230:
  7382  0015D6                     
  7383                           ; BSR set to: 0
  7384  0015D6  0E00               	movlw	0
  7385  0015D8  6E2B               	movwf	___flmul@a^0,c
  7386  0015DA  0E00               	movlw	0
  7387  0015DC  6E2C               	movwf	(___flmul@a+1)^0,c
  7388  0015DE  0E00               	movlw	0
  7389  0015E0  6E2D               	movwf	(___flmul@a+2)^0,c
  7390  0015E2  0E00               	movlw	0
  7391  0015E4  6E2E               	movwf	(___flmul@a+3)^0,c
  7392  0015E6                     l6042:
  7393                           
  7394                           ; BSR set to: 0
  7395  0015E6  8E2D               	bsf	(___flmul@a+2)^0,7,c
  7396  0015E8  EFFE  F00A         	goto	l1953
  7397  0015EC                     l6044:
  7398                           
  7399                           ; BSR set to: 0
  7400  0015EC  0E00               	movlw	0
  7401  0015EE  6E2B               	movwf	___flmul@a^0,c
  7402  0015F0  0E00               	movlw	0
  7403  0015F2  6E2C               	movwf	(___flmul@a+1)^0,c
  7404  0015F4  0E00               	movlw	0
  7405  0015F6  6E2D               	movwf	(___flmul@a+2)^0,c
  7406  0015F8  0E00               	movlw	0
  7407  0015FA  6E2E               	movwf	(___flmul@a+3)^0,c
  7408  0015FC                     l1953:
  7409                           
  7410                           ; BSR set to: 0
  7411  0015FC  51A3               	movf	___flmul@aexp& (0+255),w,b
  7412  0015FE  B4D8               	btfsc	status,2,c
  7413  001600  EF04  F00B         	goto	u5241
  7414  001604  EF06  F00B         	goto	u5240
  7415  001608                     u5241:
  7416  001608  EF0E  F00B         	goto	l6048
  7417  00160C                     u5240:
  7418  00160C                     
  7419                           ; BSR set to: 0
  7420  00160C  51A8               	movf	___flmul@bexp& (0+255),w,b
  7421  00160E  A4D8               	btfss	status,2,c
  7422  001610  EF0C  F00B         	goto	u5251
  7423  001614  EF0E  F00B         	goto	u5250
  7424  001618                     u5251:
  7425  001618  EF18  F00B         	goto	l6052
  7426  00161C                     u5250:
  7427  00161C                     l6048:
  7428                           
  7429                           ; BSR set to: 0
  7430  00161C  0E00               	movlw	0
  7431  00161E  6E27               	movwf	?___flmul^0,c
  7432  001620  0E00               	movlw	0
  7433  001622  6E28               	movwf	(?___flmul+1)^0,c
  7434  001624  0E00               	movlw	0
  7435  001626  6E29               	movwf	(?___flmul+2)^0,c
  7436  001628  0E00               	movlw	0
  7437  00162A  6E2A               	movwf	(?___flmul+3)^0,c
  7438  00162C  EFC2  F00C         	goto	l1957
  7439  001630                     l6052:
  7440                           
  7441                           ; BSR set to: 0
  7442  001630  502D               	movf	(___flmul@a+2)^0,w,c
  7443  001632  0227               	mulwf	___flmul@b^0,c
  7444  001634  006F FFCC  F0AD    	movff	prodl,___flmul@temp
  7445  00163A  006F FFD0  F0AE    	movff	prodh,___flmul@temp+1
  7446  001640                     
  7447                           ; BSR set to: 0
  7448  001640  51AD               	movf	___flmul@temp& (0+255),w,b
  7449  001642  6FA4               	movwf	___flmul@grs& (0+255),b
  7450  001644  6BA5               	clrf	(___flmul@grs+1)& (0+255),b
  7451  001646  6BA6               	clrf	(___flmul@grs+2)& (0+255),b
  7452  001648  6BA7               	clrf	(___flmul@grs+3)& (0+255),b
  7453  00164A                     
  7454                           ; BSR set to: 0
  7455  00164A  51AE               	movf	(___flmul@temp+1)& (0+255),w,b
  7456  00164C  6FA9               	movwf	___flmul@prod& (0+255),b
  7457  00164E  6BAA               	clrf	(___flmul@prod+1)& (0+255),b
  7458  001650  6BAB               	clrf	(___flmul@prod+2)& (0+255),b
  7459  001652  6BAC               	clrf	(___flmul@prod+3)& (0+255),b
  7460  001654  502C               	movf	(___flmul@a+1)^0,w,c
  7461  001656  0228               	mulwf	(___flmul@b+1)^0,c
  7462  001658  006F FFCC  F0AD    	movff	prodl,___flmul@temp
  7463  00165E  006F FFD0  F0AE    	movff	prodh,___flmul@temp+1
  7464  001664                     
  7465                           ; BSR set to: 0
  7466  001664  51AD               	movf	___flmul@temp& (0+255),w,b
  7467  001666  27A4               	addwf	___flmul@grs& (0+255),f,b
  7468  001668  0E00               	movlw	0
  7469  00166A  23A5               	addwfc	(___flmul@grs+1)& (0+255),f,b
  7470  00166C  23A6               	addwfc	(___flmul@grs+2)& (0+255),f,b
  7471  00166E  23A7               	addwfc	(___flmul@grs+3)& (0+255),f,b
  7472  001670                     
  7473                           ; BSR set to: 0
  7474  001670  51AE               	movf	(___flmul@temp+1)& (0+255),w,b
  7475  001672  27A9               	addwf	___flmul@prod& (0+255),f,b
  7476  001674  0E00               	movlw	0
  7477  001676  23AA               	addwfc	(___flmul@prod+1)& (0+255),f,b
  7478  001678  23AB               	addwfc	(___flmul@prod+2)& (0+255),f,b
  7479  00167A  23AC               	addwfc	(___flmul@prod+3)& (0+255),f,b
  7480  00167C  502B               	movf	___flmul@a^0,w,c
  7481  00167E  0229               	mulwf	(___flmul@b+2)^0,c
  7482  001680  006F FFCC  F0AD    	movff	prodl,___flmul@temp
  7483  001686  006F FFD0  F0AE    	movff	prodh,___flmul@temp+1
  7484  00168C                     
  7485                           ; BSR set to: 0
  7486  00168C  51AD               	movf	___flmul@temp& (0+255),w,b
  7487  00168E  27A4               	addwf	___flmul@grs& (0+255),f,b
  7488  001690  0E00               	movlw	0
  7489  001692  23A5               	addwfc	(___flmul@grs+1)& (0+255),f,b
  7490  001694  23A6               	addwfc	(___flmul@grs+2)& (0+255),f,b
  7491  001696  23A7               	addwfc	(___flmul@grs+3)& (0+255),f,b
  7492  001698                     
  7493                           ; BSR set to: 0
  7494  001698  51AE               	movf	(___flmul@temp+1)& (0+255),w,b
  7495  00169A  27A9               	addwf	___flmul@prod& (0+255),f,b
  7496  00169C  0E00               	movlw	0
  7497  00169E  23AA               	addwfc	(___flmul@prod+1)& (0+255),f,b
  7498  0016A0  23AB               	addwfc	(___flmul@prod+2)& (0+255),f,b
  7499  0016A2  23AC               	addwfc	(___flmul@prod+3)& (0+255),f,b
  7500  0016A4                     
  7501                           ; BSR set to: 0
  7502  0016A4  C0A6  F0A7         	movff	___flmul@grs+2,___flmul@grs+3
  7503  0016A8  C0A5  F0A6         	movff	___flmul@grs+1,___flmul@grs+2
  7504  0016AC  C0A4  F0A5         	movff	___flmul@grs,___flmul@grs+1
  7505  0016B0  6BA4               	clrf	___flmul@grs& (0+255),b
  7506  0016B2                     
  7507                           ; BSR set to: 0
  7508  0016B2  502B               	movf	___flmul@a^0,w,c
  7509  0016B4  0228               	mulwf	(___flmul@b+1)^0,c
  7510  0016B6  006F FFCC  F0AD    	movff	prodl,___flmul@temp
  7511  0016BC  006F FFD0  F0AE    	movff	prodh,___flmul@temp+1
  7512  0016C2                     
  7513                           ; BSR set to: 0
  7514  0016C2  51AD               	movf	___flmul@temp& (0+255),w,b
  7515  0016C4  27A4               	addwf	___flmul@grs& (0+255),f,b
  7516  0016C6  51AE               	movf	(___flmul@temp+1)& (0+255),w,b
  7517  0016C8  23A5               	addwfc	(___flmul@grs+1)& (0+255),f,b
  7518  0016CA  0E00               	movlw	0
  7519  0016CC  23A6               	addwfc	(___flmul@grs+2)& (0+255),f,b
  7520  0016CE  0E00               	movlw	0
  7521  0016D0  23A7               	addwfc	(___flmul@grs+3)& (0+255),f,b
  7522  0016D2                     
  7523                           ; BSR set to: 0
  7524  0016D2  502C               	movf	(___flmul@a+1)^0,w,c
  7525  0016D4  0227               	mulwf	___flmul@b^0,c
  7526  0016D6  006F FFCC  F0AD    	movff	prodl,___flmul@temp
  7527  0016DC  006F FFD0  F0AE    	movff	prodh,___flmul@temp+1
  7528  0016E2                     
  7529                           ; BSR set to: 0
  7530  0016E2  51AD               	movf	___flmul@temp& (0+255),w,b
  7531  0016E4  27A4               	addwf	___flmul@grs& (0+255),f,b
  7532  0016E6  51AE               	movf	(___flmul@temp+1)& (0+255),w,b
  7533  0016E8  23A5               	addwfc	(___flmul@grs+1)& (0+255),f,b
  7534  0016EA  0E00               	movlw	0
  7535  0016EC  23A6               	addwfc	(___flmul@grs+2)& (0+255),f,b
  7536  0016EE  0E00               	movlw	0
  7537  0016F0  23A7               	addwfc	(___flmul@grs+3)& (0+255),f,b
  7538  0016F2                     
  7539                           ; BSR set to: 0
  7540  0016F2  C0A6  F0A7         	movff	___flmul@grs+2,___flmul@grs+3
  7541  0016F6  C0A5  F0A6         	movff	___flmul@grs+1,___flmul@grs+2
  7542  0016FA  C0A4  F0A5         	movff	___flmul@grs,___flmul@grs+1
  7543  0016FE  6BA4               	clrf	___flmul@grs& (0+255),b
  7544  001700  502B               	movf	___flmul@a^0,w,c
  7545  001702  0227               	mulwf	___flmul@b^0,c
  7546  001704  006F FFCC  F0AD    	movff	prodl,___flmul@temp
  7547  00170A  006F FFD0  F0AE    	movff	prodh,___flmul@temp+1
  7548  001710                     
  7549                           ; BSR set to: 0
  7550  001710  51AD               	movf	___flmul@temp& (0+255),w,b
  7551  001712  27A4               	addwf	___flmul@grs& (0+255),f,b
  7552  001714  51AE               	movf	(___flmul@temp+1)& (0+255),w,b
  7553  001716  23A5               	addwfc	(___flmul@grs+1)& (0+255),f,b
  7554  001718  0E00               	movlw	0
  7555  00171A  23A6               	addwfc	(___flmul@grs+2)& (0+255),f,b
  7556  00171C  0E00               	movlw	0
  7557  00171E  23A7               	addwfc	(___flmul@grs+3)& (0+255),f,b
  7558  001720                     
  7559                           ; BSR set to: 0
  7560  001720  502D               	movf	(___flmul@a+2)^0,w,c
  7561  001722  0228               	mulwf	(___flmul@b+1)^0,c
  7562  001724  006F FFCC  F0AD    	movff	prodl,___flmul@temp
  7563  00172A  006F FFD0  F0AE    	movff	prodh,___flmul@temp+1
  7564  001730  51AD               	movf	___flmul@temp& (0+255),w,b
  7565  001732  27A9               	addwf	___flmul@prod& (0+255),f,b
  7566  001734  51AE               	movf	(___flmul@temp+1)& (0+255),w,b
  7567  001736  23AA               	addwfc	(___flmul@prod+1)& (0+255),f,b
  7568  001738  0E00               	movlw	0
  7569  00173A  23AB               	addwfc	(___flmul@prod+2)& (0+255),f,b
  7570  00173C  0E00               	movlw	0
  7571  00173E  23AC               	addwfc	(___flmul@prod+3)& (0+255),f,b
  7572  001740                     
  7573                           ; BSR set to: 0
  7574  001740  502C               	movf	(___flmul@a+1)^0,w,c
  7575  001742  0229               	mulwf	(___flmul@b+2)^0,c
  7576  001744  006F FFCC  F0AD    	movff	prodl,___flmul@temp
  7577  00174A  006F FFD0  F0AE    	movff	prodh,___flmul@temp+1
  7578  001750                     
  7579                           ; BSR set to: 0
  7580  001750  51AD               	movf	___flmul@temp& (0+255),w,b
  7581  001752  27A9               	addwf	___flmul@prod& (0+255),f,b
  7582  001754  51AE               	movf	(___flmul@temp+1)& (0+255),w,b
  7583  001756  23AA               	addwfc	(___flmul@prod+1)& (0+255),f,b
  7584  001758  0E00               	movlw	0
  7585  00175A  23AB               	addwfc	(___flmul@prod+2)& (0+255),f,b
  7586  00175C  0E00               	movlw	0
  7587  00175E  23AC               	addwfc	(___flmul@prod+3)& (0+255),f,b
  7588  001760  502D               	movf	(___flmul@a+2)^0,w,c
  7589  001762  0229               	mulwf	(___flmul@b+2)^0,c
  7590  001764  006F FFCC  F0AD    	movff	prodl,___flmul@temp
  7591  00176A  006F FFD0  F0AE    	movff	prodh,___flmul@temp+1
  7592  001770                     
  7593                           ; BSR set to: 0
  7594  001770  51AD               	movf	___flmul@temp& (0+255),w,b
  7595  001772  6E2F               	movwf	??___flmul^0,c
  7596  001774  51AE               	movf	(___flmul@temp+1)& (0+255),w,b
  7597  001776  6E30               	movwf	(??___flmul+1)^0,c
  7598  001778  6A31               	clrf	(??___flmul+2)^0,c
  7599  00177A  6A32               	clrf	(??___flmul+3)^0,c
  7600  00177C  C031  F032         	movff	??___flmul+2,??___flmul+3
  7601  001780  C030  F031         	movff	??___flmul+1,??___flmul+2
  7602  001784  C02F  F030         	movff	??___flmul,??___flmul+1
  7603  001788  6A2F               	clrf	??___flmul^0,c
  7604  00178A  502F               	movf	??___flmul^0,w,c
  7605  00178C  27A9               	addwf	___flmul@prod& (0+255),f,b
  7606  00178E  5030               	movf	(??___flmul+1)^0,w,c
  7607  001790  23AA               	addwfc	(___flmul@prod+1)& (0+255),f,b
  7608  001792  5031               	movf	(??___flmul+2)^0,w,c
  7609  001794  23AB               	addwfc	(___flmul@prod+2)& (0+255),f,b
  7610  001796  5032               	movf	(??___flmul+3)^0,w,c
  7611  001798  23AC               	addwfc	(___flmul@prod+3)& (0+255),f,b
  7612  00179A                     
  7613                           ; BSR set to: 0
  7614  00179A  C0A4  F02F         	movff	___flmul@grs,??___flmul
  7615  00179E  C0A5  F030         	movff	___flmul@grs+1,??___flmul+1
  7616  0017A2  C0A6  F031         	movff	___flmul@grs+2,??___flmul+2
  7617  0017A6  C0A7  F032         	movff	___flmul@grs+3,??___flmul+3
  7618  0017AA  0E19               	movlw	25
  7619  0017AC  EFDD  F00B         	goto	u5260
  7620  0017B0                     u5265:
  7621  0017B0  90D8               	bcf	status,0,c
  7622  0017B2  3232               	rrcf	(??___flmul+3)^0,f,c
  7623  0017B4  3231               	rrcf	(??___flmul+2)^0,f,c
  7624  0017B6  3230               	rrcf	(??___flmul+1)^0,f,c
  7625  0017B8  322F               	rrcf	??___flmul^0,f,c
  7626  0017BA                     u5260:
  7627  0017BA  2EE8               	decfsz	wreg,f,c
  7628  0017BC  EFD8  F00B         	goto	u5265
  7629  0017C0  502F               	movf	??___flmul^0,w,c
  7630  0017C2  27A9               	addwf	___flmul@prod& (0+255),f,b
  7631  0017C4  5030               	movf	(??___flmul+1)^0,w,c
  7632  0017C6  23AA               	addwfc	(___flmul@prod+1)& (0+255),f,b
  7633  0017C8  5031               	movf	(??___flmul+2)^0,w,c
  7634  0017CA  23AB               	addwfc	(___flmul@prod+2)& (0+255),f,b
  7635  0017CC  5032               	movf	(??___flmul+3)^0,w,c
  7636  0017CE  23AC               	addwfc	(___flmul@prod+3)& (0+255),f,b
  7637  0017D0                     
  7638                           ; BSR set to: 0
  7639  0017D0  C0A6  F0A7         	movff	___flmul@grs+2,___flmul@grs+3
  7640  0017D4  C0A5  F0A6         	movff	___flmul@grs+1,___flmul@grs+2
  7641  0017D8  C0A4  F0A5         	movff	___flmul@grs,___flmul@grs+1
  7642  0017DC  6BA4               	clrf	___flmul@grs& (0+255),b
  7643  0017DE                     
  7644                           ; BSR set to: 0
  7645  0017DE  51A3               	movf	___flmul@aexp& (0+255),w,b
  7646  0017E0  C0A8  F02F         	movff	___flmul@bexp,??___flmul
  7647  0017E4  6A30               	clrf	(??___flmul+1)^0,c
  7648  0017E6  262F               	addwf	??___flmul^0,f,c
  7649  0017E8  0E00               	movlw	0
  7650  0017EA  2230               	addwfc	(??___flmul+1)^0,f,c
  7651  0017EC  0E82               	movlw	130
  7652  0017EE  242F               	addwf	??___flmul^0,w,c
  7653  0017F0  6FAD               	movwf	___flmul@temp& (0+255),b
  7654  0017F2  0EFF               	movlw	255
  7655  0017F4  2030               	addwfc	(??___flmul+1)^0,w,c
  7656  0017F6  6FAE               	movwf	(___flmul@temp+1)& (0+255),b
  7657  0017F8  EF13  F00C         	goto	l6100
  7658  0017FC                     l6094:
  7659                           
  7660                           ; BSR set to: 0
  7661  0017FC  90D8               	bcf	status,0,c
  7662  0017FE  37A9               	rlcf	___flmul@prod& (0+255),f,b
  7663  001800  37AA               	rlcf	(___flmul@prod+1)& (0+255),f,b
  7664  001802  37AB               	rlcf	(___flmul@prod+2)& (0+255),f,b
  7665  001804  37AC               	rlcf	(___flmul@prod+3)& (0+255),f,b
  7666  001806                     
  7667                           ; BSR set to: 0
  7668  001806  AFA7               	btfss	(___flmul@grs+3)& (0+255),7,b
  7669  001808  EF08  F00C         	goto	u5271
  7670  00180C  EF0A  F00C         	goto	u5270
  7671  001810                     u5271:
  7672  001810  EF0B  F00C         	goto	l1960
  7673  001814                     u5270:
  7674  001814                     
  7675                           ; BSR set to: 0
  7676  001814  81A9               	bsf	___flmul@prod& (0+255),0,b
  7677  001816                     l1960:
  7678                           
  7679                           ; BSR set to: 0
  7680  001816  90D8               	bcf	status,0,c
  7681  001818  37A4               	rlcf	___flmul@grs& (0+255),f,b
  7682  00181A  37A5               	rlcf	(___flmul@grs+1)& (0+255),f,b
  7683  00181C  37A6               	rlcf	(___flmul@grs+2)& (0+255),f,b
  7684  00181E  37A7               	rlcf	(___flmul@grs+3)& (0+255),f,b
  7685  001820  07AD               	decf	___flmul@temp& (0+255),f,b
  7686  001822  A0D8               	btfss	status,0,c
  7687  001824  07AE               	decf	(___flmul@temp+1)& (0+255),f,b
  7688  001826                     l6100:
  7689                           
  7690                           ; BSR set to: 0
  7691  001826  AFAB               	btfss	(___flmul@prod+2)& (0+255),7,b
  7692  001828  EF18  F00C         	goto	u5281
  7693  00182C  EF1A  F00C         	goto	u5280
  7694  001830                     u5281:
  7695  001830  EFFE  F00B         	goto	l6094
  7696  001834                     u5280:
  7697  001834                     
  7698                           ; BSR set to: 0
  7699  001834  0E00               	movlw	0
  7700  001836  6FA3               	movwf	___flmul@aexp& (0+255),b
  7701  001838                     
  7702                           ; BSR set to: 0
  7703  001838  AFA7               	btfss	(___flmul@grs+3)& (0+255),7,b
  7704  00183A  EF21  F00C         	goto	u5291
  7705  00183E  EF23  F00C         	goto	u5290
  7706  001842                     u5291:
  7707  001842  EF47  F00C         	goto	l1962
  7708  001846                     u5290:
  7709  001846                     
  7710                           ; BSR set to: 0
  7711  001846  0EFF               	movlw	255
  7712  001848  15A4               	andwf	___flmul@grs& (0+255),w,b
  7713  00184A  6E2F               	movwf	??___flmul^0,c
  7714  00184C  0EFF               	movlw	255
  7715  00184E  15A5               	andwf	(___flmul@grs+1)& (0+255),w,b
  7716  001850  6E30               	movwf	(??___flmul+1)^0,c
  7717  001852  0EFF               	movlw	255
  7718  001854  15A6               	andwf	(___flmul@grs+2)& (0+255),w,b
  7719  001856  6E31               	movwf	(??___flmul+2)^0,c
  7720  001858  0E7F               	movlw	127
  7721  00185A  15A7               	andwf	(___flmul@grs+3)& (0+255),w,b
  7722  00185C  6E32               	movwf	(??___flmul+3)^0,c
  7723  00185E  502F               	movf	??___flmul^0,w,c
  7724  001860  1030               	iorwf	(??___flmul+1)^0,w,c
  7725  001862  1031               	iorwf	(??___flmul+2)^0,w,c
  7726  001864  1032               	iorwf	(??___flmul+3)^0,w,c
  7727  001866  B4D8               	btfsc	status,2,c
  7728  001868  EF38  F00C         	goto	u5301
  7729  00186C  EF3A  F00C         	goto	u5300
  7730  001870                     u5301:
  7731  001870  EF3E  F00C         	goto	l1963
  7732  001874                     u5300:
  7733  001874                     l6108:
  7734                           
  7735                           ; BSR set to: 0
  7736  001874  0E01               	movlw	1
  7737  001876  6FA3               	movwf	___flmul@aexp& (0+255),b
  7738  001878  EF47  F00C         	goto	l1962
  7739  00187C                     l1963:
  7740                           
  7741                           ; BSR set to: 0
  7742  00187C  A1A9               	btfss	___flmul@prod& (0+255),0,b
  7743  00187E  EF43  F00C         	goto	u5311
  7744  001882  EF45  F00C         	goto	u5310
  7745  001886                     u5311:
  7746  001886  EF47  F00C         	goto	l1962
  7747  00188A                     u5310:
  7748  00188A  EF3A  F00C         	goto	l6108
  7749  00188E                     l1962:
  7750                           
  7751                           ; BSR set to: 0
  7752  00188E  51A3               	movf	___flmul@aexp& (0+255),w,b
  7753  001890  B4D8               	btfsc	status,2,c
  7754  001892  EF4D  F00C         	goto	u5321
  7755  001896  EF4F  F00C         	goto	u5320
  7756  00189A                     u5321:
  7757  00189A  EF73  F00C         	goto	l6120
  7758  00189E                     u5320:
  7759  00189E                     
  7760                           ; BSR set to: 0
  7761  00189E  0E01               	movlw	1
  7762  0018A0  27A9               	addwf	___flmul@prod& (0+255),f,b
  7763  0018A2  0E00               	movlw	0
  7764  0018A4  23AA               	addwfc	(___flmul@prod+1)& (0+255),f,b
  7765  0018A6  23AB               	addwfc	(___flmul@prod+2)& (0+255),f,b
  7766  0018A8  23AC               	addwfc	(___flmul@prod+3)& (0+255),f,b
  7767  0018AA                     
  7768                           ; BSR set to: 0
  7769  0018AA  A1AC               	btfss	(___flmul@prod+3)& (0+255),0,b
  7770  0018AC  EF5A  F00C         	goto	u5331
  7771  0018B0  EF5C  F00C         	goto	u5330
  7772  0018B4                     u5331:
  7773  0018B4  EF73  F00C         	goto	l6120
  7774  0018B8                     u5330:
  7775  0018B8                     
  7776                           ; BSR set to: 0
  7777  0018B8  C0A9  F02F         	movff	___flmul@prod,??___flmul
  7778  0018BC  C0AA  F030         	movff	___flmul@prod+1,??___flmul+1
  7779  0018C0  C0AB  F031         	movff	___flmul@prod+2,??___flmul+2
  7780  0018C4  C0AC  F032         	movff	___flmul@prod+3,??___flmul+3
  7781  0018C8  3432               	rlcf	(??___flmul+3)^0,w,c
  7782  0018CA  3232               	rrcf	(??___flmul+3)^0,f,c
  7783  0018CC  3231               	rrcf	(??___flmul+2)^0,f,c
  7784  0018CE  3230               	rrcf	(??___flmul+1)^0,f,c
  7785  0018D0  322F               	rrcf	??___flmul^0,f,c
  7786  0018D2  C02F  F0A9         	movff	??___flmul,___flmul@prod
  7787  0018D6  C030  F0AA         	movff	??___flmul+1,___flmul@prod+1
  7788  0018DA  C031  F0AB         	movff	??___flmul+2,___flmul@prod+2
  7789  0018DE  C032  F0AC         	movff	??___flmul+3,___flmul@prod+3
  7790  0018E2                     
  7791                           ; BSR set to: 0
  7792  0018E2  4BAD               	infsnz	___flmul@temp& (0+255),f,b
  7793  0018E4  2BAE               	incf	(___flmul@temp+1)& (0+255),f,b
  7794  0018E6                     l6120:
  7795                           
  7796                           ; BSR set to: 0
  7797  0018E6  BFAE               	btfsc	(___flmul@temp+1)& (0+255),7,b
  7798  0018E8  EF7E  F00C         	goto	u5341
  7799  0018EC  51AE               	movf	(___flmul@temp+1)& (0+255),w,b
  7800  0018EE  E108               	bnz	u5340
  7801  0018F0  29AD               	incf	___flmul@temp& (0+255),w,b
  7802  0018F2  A0D8               	btfss	status,0,c
  7803  0018F4  EF7E  F00C         	goto	u5341
  7804  0018F8  EF80  F00C         	goto	u5340
  7805  0018FC                     u5341:
  7806  0018FC  EF8A  F00C         	goto	l6124
  7807  001900                     u5340:
  7808  001900                     
  7809                           ; BSR set to: 0
  7810  001900  0E00               	movlw	0
  7811  001902  6FA9               	movwf	___flmul@prod& (0+255),b
  7812  001904  0E00               	movlw	0
  7813  001906  6FAA               	movwf	(___flmul@prod+1)& (0+255),b
  7814  001908  0E80               	movlw	128
  7815  00190A  6FAB               	movwf	(___flmul@prod+2)& (0+255),b
  7816  00190C  0E7F               	movlw	127
  7817  00190E  6FAC               	movwf	(___flmul@prod+3)& (0+255),b
  7818  001910  EFB8  F00C         	goto	l6136
  7819  001914                     l6124:
  7820                           
  7821                           ; BSR set to: 0
  7822  001914  BFAE               	btfsc	(___flmul@temp+1)& (0+255),7,b
  7823  001916  EF97  F00C         	goto	u5350
  7824  00191A  51AE               	movf	(___flmul@temp+1)& (0+255),w,b
  7825  00191C  E106               	bnz	u5351
  7826  00191E  05AD               	decf	___flmul@temp& (0+255),w,b
  7827  001920  B0D8               	btfsc	status,0,c
  7828  001922  EF95  F00C         	goto	u5351
  7829  001926  EF97  F00C         	goto	u5350
  7830  00192A                     u5351:
  7831  00192A  EFA3  F00C         	goto	l1970
  7832  00192E                     u5350:
  7833  00192E                     
  7834                           ; BSR set to: 0
  7835  00192E  0E00               	movlw	0
  7836  001930  6FA9               	movwf	___flmul@prod& (0+255),b
  7837  001932  0E00               	movlw	0
  7838  001934  6FAA               	movwf	(___flmul@prod+1)& (0+255),b
  7839  001936  0E00               	movlw	0
  7840  001938  6FAB               	movwf	(___flmul@prod+2)& (0+255),b
  7841  00193A  0E00               	movlw	0
  7842  00193C  6FAC               	movwf	(___flmul@prod+3)& (0+255),b
  7843  00193E  0E00               	movlw	0
  7844  001940  6FA2               	movwf	___flmul@sign& (0+255),b
  7845  001942  EFB8  F00C         	goto	l6136
  7846  001946                     l1970:
  7847                           
  7848                           ; BSR set to: 0
  7849  001946  C0AD  F0A8         	movff	___flmul@temp,___flmul@bexp
  7850  00194A                     
  7851                           ; BSR set to: 0
  7852  00194A  0EFF               	movlw	255
  7853  00194C  17A9               	andwf	___flmul@prod& (0+255),f,b
  7854  00194E  0EFF               	movlw	255
  7855  001950  17AA               	andwf	(___flmul@prod+1)& (0+255),f,b
  7856  001952  0E7F               	movlw	127
  7857  001954  17AB               	andwf	(___flmul@prod+2)& (0+255),f,b
  7858  001956  0E00               	movlw	0
  7859  001958  17AC               	andwf	(___flmul@prod+3)& (0+255),f,b
  7860  00195A                     
  7861                           ; BSR set to: 0
  7862  00195A  A1A8               	btfss	___flmul@bexp& (0+255),0,b
  7863  00195C  EFB2  F00C         	goto	u5361
  7864  001960  EFB4  F00C         	goto	u5360
  7865  001964                     u5361:
  7866  001964  EFB5  F00C         	goto	l6134
  7867  001968                     u5360:
  7868  001968                     
  7869                           ; BSR set to: 0
  7870  001968  8FAB               	bsf	(___flmul@prod+2)& (0+255),7,b
  7871  00196A                     l6134:
  7872                           
  7873                           ; BSR set to: 0
  7874  00196A  90D8               	bcf	status,0,c
  7875  00196C  31A8               	rrcf	___flmul@bexp& (0+255),w,b
  7876  00196E  6FAC               	movwf	(___flmul@prod+3)& (0+255),b
  7877  001970                     l6136:
  7878                           
  7879                           ; BSR set to: 0
  7880  001970  51A2               	movf	___flmul@sign& (0+255),w,b
  7881  001972  13AC               	iorwf	(___flmul@prod+3)& (0+255),f,b
  7882  001974                     
  7883                           ; BSR set to: 0
  7884  001974  C0A9  F027         	movff	___flmul@prod,?___flmul
  7885  001978  C0AA  F028         	movff	___flmul@prod+1,?___flmul+1
  7886  00197C  C0AB  F029         	movff	___flmul@prod+2,?___flmul+2
  7887  001980  C0AC  F02A         	movff	___flmul@prod+3,?___flmul+3
  7888  001984                     l1957:
  7889                           
  7890                           ; BSR set to: 0
  7891  001984  0012               	return		;funcret
  7892  001986                     __end_of___flmul:
  7893                           	callstack 0
  7894                           
  7895 ;; *************** function ___flge *****************
  7896 ;; Defined at:
  7897 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  7898 ;; Parameters:    Size  Location     Type
  7899 ;;  ff1             4   38[COMRAM] unsigned char 
  7900 ;;  ff2             4   42[COMRAM] unsigned char 
  7901 ;; Auto vars:     Size  Location     Type
  7902 ;;		None
  7903 ;; Return value:  Size  Location     Type
  7904 ;;		None               void
  7905 ;; Registers used:
  7906 ;;		wreg, status,2, status,0
  7907 ;; Tracked objects:
  7908 ;;		On entry : 0/0
  7909 ;;		On exit  : 0/0
  7910 ;;		Unchanged: 0/0
  7911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7912 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7914 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7915 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7916 ;;Total ram usage:       12 bytes
  7917 ;; Hardware stack levels used: 1
  7918 ;; Hardware stack levels required when called: 8
  7919 ;; This function calls:
  7920 ;;		Nothing
  7921 ;; This function is called by:
  7922 ;;		_loop
  7923 ;; This function uses a non-reentrant model
  7924 ;;
  7925                           
  7926                           	psect	text35
  7927  002E4E                     __ptext35:
  7928                           	callstack 0
  7929  002E4E                     ___flge:
  7930                           	callstack 21
  7931  002E4E  0E00               	movlw	0
  7932  002E50  1427               	andwf	___flge@ff1^0,w,c
  7933  002E52  6E2F               	movwf	??___flge^0,c
  7934  002E54  0E00               	movlw	0
  7935  002E56  1428               	andwf	(___flge@ff1+1)^0,w,c
  7936  002E58  6E30               	movwf	(??___flge+1)^0,c
  7937  002E5A  0E80               	movlw	128
  7938  002E5C  1429               	andwf	(___flge@ff1+2)^0,w,c
  7939  002E5E  6E31               	movwf	(??___flge+2)^0,c
  7940  002E60  0E7F               	movlw	127
  7941  002E62  142A               	andwf	(___flge@ff1+3)^0,w,c
  7942  002E64  6E32               	movwf	(??___flge+3)^0,c
  7943  002E66  502F               	movf	??___flge^0,w,c
  7944  002E68  1030               	iorwf	(??___flge+1)^0,w,c
  7945  002E6A  1031               	iorwf	(??___flge+2)^0,w,c
  7946  002E6C  1032               	iorwf	(??___flge+3)^0,w,c
  7947  002E6E  A4D8               	btfss	status,2,c
  7948  002E70  EF3C  F017         	goto	u3961
  7949  002E74  EF3E  F017         	goto	u3960
  7950  002E78                     u3961:
  7951  002E78  EF46  F017         	goto	l5220
  7952  002E7C                     u3960:
  7953  002E7C  0E00               	movlw	0
  7954  002E7E  6E27               	movwf	___flge@ff1^0,c
  7955  002E80  0E00               	movlw	0
  7956  002E82  6E28               	movwf	(___flge@ff1+1)^0,c
  7957  002E84  0E00               	movlw	0
  7958  002E86  6E29               	movwf	(___flge@ff1+2)^0,c
  7959  002E88  0E00               	movlw	0
  7960  002E8A  6E2A               	movwf	(___flge@ff1+3)^0,c
  7961  002E8C                     l5220:
  7962  002E8C  0E00               	movlw	0
  7963  002E8E  142B               	andwf	___flge@ff2^0,w,c
  7964  002E90  6E2F               	movwf	??___flge^0,c
  7965  002E92  0E00               	movlw	0
  7966  002E94  142C               	andwf	(___flge@ff2+1)^0,w,c
  7967  002E96  6E30               	movwf	(??___flge+1)^0,c
  7968  002E98  0E80               	movlw	128
  7969  002E9A  142D               	andwf	(___flge@ff2+2)^0,w,c
  7970  002E9C  6E31               	movwf	(??___flge+2)^0,c
  7971  002E9E  0E7F               	movlw	127
  7972  002EA0  142E               	andwf	(___flge@ff2+3)^0,w,c
  7973  002EA2  6E32               	movwf	(??___flge+3)^0,c
  7974  002EA4  502F               	movf	??___flge^0,w,c
  7975  002EA6  1030               	iorwf	(??___flge+1)^0,w,c
  7976  002EA8  1031               	iorwf	(??___flge+2)^0,w,c
  7977  002EAA  1032               	iorwf	(??___flge+3)^0,w,c
  7978  002EAC  A4D8               	btfss	status,2,c
  7979  002EAE  EF5B  F017         	goto	u3971
  7980  002EB2  EF5D  F017         	goto	u3970
  7981  002EB6                     u3971:
  7982  002EB6  EF65  F017         	goto	l5224
  7983  002EBA                     u3970:
  7984  002EBA  0E00               	movlw	0
  7985  002EBC  6E2B               	movwf	___flge@ff2^0,c
  7986  002EBE  0E00               	movlw	0
  7987  002EC0  6E2C               	movwf	(___flge@ff2+1)^0,c
  7988  002EC2  0E00               	movlw	0
  7989  002EC4  6E2D               	movwf	(___flge@ff2+2)^0,c
  7990  002EC6  0E00               	movlw	0
  7991  002EC8  6E2E               	movwf	(___flge@ff2+3)^0,c
  7992  002ECA                     l5224:
  7993  002ECA  AE2A               	btfss	(___flge@ff1+3)^0,7,c
  7994  002ECC  EF6A  F017         	goto	u3981
  7995  002ED0  EF6C  F017         	goto	u3980
  7996  002ED4                     u3981:
  7997  002ED4  EF75  F017         	goto	l5228
  7998  002ED8                     u3980:
  7999  002ED8  6C27               	negf	___flge@ff1^0,c
  8000  002EDA  1E28               	comf	(___flge@ff1+1)^0,f,c
  8001  002EDC  B0D8               	btfsc	status,0,c
  8002  002EDE  2A28               	incf	(___flge@ff1+1)^0,f,c
  8003  002EE0  1E29               	comf	(___flge@ff1+2)^0,f,c
  8004  002EE2  B0D8               	btfsc	status,0,c
  8005  002EE4  2A29               	incf	(___flge@ff1+2)^0,f,c
  8006  002EE6  0E80               	movlw	128
  8007  002EE8  562A               	subfwb	(___flge@ff1+3)^0,f,c
  8008  002EEA                     l5228:
  8009  002EEA  AE2E               	btfss	(___flge@ff2+3)^0,7,c
  8010  002EEC  EF7A  F017         	goto	u3991
  8011  002EF0  EF7C  F017         	goto	u3990
  8012  002EF4                     u3991:
  8013  002EF4  EF85  F017         	goto	l1604
  8014  002EF8                     u3990:
  8015  002EF8  6C2B               	negf	___flge@ff2^0,c
  8016  002EFA  1E2C               	comf	(___flge@ff2+1)^0,f,c
  8017  002EFC  B0D8               	btfsc	status,0,c
  8018  002EFE  2A2C               	incf	(___flge@ff2+1)^0,f,c
  8019  002F00  1E2D               	comf	(___flge@ff2+2)^0,f,c
  8020  002F02  B0D8               	btfsc	status,0,c
  8021  002F04  2A2D               	incf	(___flge@ff2+2)^0,f,c
  8022  002F06  0E80               	movlw	128
  8023  002F08  562E               	subfwb	(___flge@ff2+3)^0,f,c
  8024  002F0A                     l1604:
  8025  002F0A  0E00               	movlw	0
  8026  002F0C  1A27               	xorwf	___flge@ff1^0,f,c
  8027  002F0E  0E00               	movlw	0
  8028  002F10  1A28               	xorwf	(___flge@ff1+1)^0,f,c
  8029  002F12  0E00               	movlw	0
  8030  002F14  1A29               	xorwf	(___flge@ff1+2)^0,f,c
  8031  002F16  0E80               	movlw	128
  8032  002F18  1A2A               	xorwf	(___flge@ff1+3)^0,f,c
  8033  002F1A  0E00               	movlw	0
  8034  002F1C  1A2B               	xorwf	___flge@ff2^0,f,c
  8035  002F1E  0E00               	movlw	0
  8036  002F20  1A2C               	xorwf	(___flge@ff2+1)^0,f,c
  8037  002F22  0E00               	movlw	0
  8038  002F24  1A2D               	xorwf	(___flge@ff2+2)^0,f,c
  8039  002F26  0E80               	movlw	128
  8040  002F28  1A2E               	xorwf	(___flge@ff2+3)^0,f,c
  8041  002F2A  502B               	movf	___flge@ff2^0,w,c
  8042  002F2C  5C27               	subwf	___flge@ff1^0,w,c
  8043  002F2E  502C               	movf	(___flge@ff2+1)^0,w,c
  8044  002F30  5828               	subwfb	(___flge@ff1+1)^0,w,c
  8045  002F32  502D               	movf	(___flge@ff2+2)^0,w,c
  8046  002F34  5829               	subwfb	(___flge@ff1+2)^0,w,c
  8047  002F36  502E               	movf	(___flge@ff2+3)^0,w,c
  8048  002F38  582A               	subwfb	(___flge@ff1+3)^0,w,c
  8049  002F3A  B0D8               	btfsc	status,0,c
  8050  002F3C  EFA2  F017         	goto	u4001
  8051  002F40  EFA4  F017         	goto	u4000
  8052  002F44                     u4001:
  8053  002F44  EFA7  F017         	goto	l5234
  8054  002F48                     u4000:
  8055  002F48  90D8               	bcf	status,0,c
  8056  002F4A  EFA8  F017         	goto	l1609
  8057  002F4E                     l5234:
  8058  002F4E  80D8               	bsf	status,0,c
  8059  002F50                     l1609:
  8060  002F50  0012               	return		;funcret
  8061  002F52                     __end_of___flge:
  8062                           	callstack 0
  8063                           
  8064 ;; *************** function _SYSTEM_Initialize *****************
  8065 ;; Defined at:
  8066 ;;		line 50 in file "mcc_generated_files/mcc.c"
  8067 ;; Parameters:    Size  Location     Type
  8068 ;;		None
  8069 ;; Auto vars:     Size  Location     Type
  8070 ;;		None
  8071 ;; Return value:  Size  Location     Type
  8072 ;;                  1    wreg      void 
  8073 ;; Registers used:
  8074 ;;		wreg, status,2, status,0, cstack
  8075 ;; Tracked objects:
  8076 ;;		On entry : 0/0
  8077 ;;		On exit  : 0/0
  8078 ;;		Unchanged: 0/0
  8079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8083 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8084 ;;Total ram usage:        0 bytes
  8085 ;; Hardware stack levels used: 1
  8086 ;; Hardware stack levels required when called: 10
  8087 ;; This function calls:
  8088 ;;		_ADCC_Initialize
  8089 ;;		_CCP3_Initialize
  8090 ;;		_CCP4_Initialize
  8091 ;;		_CLC3_Initialize
  8092 ;;		_INTERRUPT_Initialize
  8093 ;;		_OSCILLATOR_Initialize
  8094 ;;		_PIN_MANAGER_Initialize
  8095 ;;		_PMD_Initialize
  8096 ;;		_PWM5_Initialize
  8097 ;;		_PWM6_Initialize
  8098 ;;		_PWM7_Initialize
  8099 ;;		_PWM8_Initialize
  8100 ;;		_SMT1_Initialize
  8101 ;;		_TMR2_Initialize
  8102 ;;		_TMR3_Initialize
  8103 ;;		_TMR4_Initialize
  8104 ;;		_TMR5_Initialize
  8105 ;;		_UART1_Initialize
  8106 ;; This function is called by:
  8107 ;;		_main
  8108 ;; This function uses a non-reentrant model
  8109 ;;
  8110                           
  8111                           	psect	text36
  8112  003738                     __ptext36:
  8113                           	callstack 0
  8114  003738                     _SYSTEM_Initialize:
  8115                           	callstack 20
  8116  003738                     
  8117                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
  8118  003738  EC76  F01B         	call	_INTERRUPT_Initialize	;wreg free
  8119                           
  8120                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  8121  00373C  EC0B  F01F         	call	_PMD_Initialize	;wreg free
  8122                           
  8123                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  8124  003740  EC19  F018         	call	_PIN_MANAGER_Initialize	;wreg free
  8125                           
  8126                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  8127  003744  EC8A  F01F         	call	_OSCILLATOR_Initialize	;wreg free
  8128  003748                     
  8129                           ;mcc_generated_files/mcc.c: 56:     CCP3_Initialize();
  8130  003748  EC4A  F01E         	call	_CCP3_Initialize	;wreg free
  8131  00374C                     
  8132                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
  8133  00374C  EC1E  F01B         	call	_ADCC_Initialize	;wreg free
  8134                           
  8135                           ;mcc_generated_files/mcc.c: 58:     TMR4_Initialize();
  8136  003750  EC78  F01E         	call	_TMR4_Initialize	;wreg free
  8137  003754                     
  8138                           ;mcc_generated_files/mcc.c: 59:     SMT1_Initialize();
  8139  003754  ECEB  F01D         	call	_SMT1_Initialize	;wreg free
  8140  003758                     
  8141                           ;mcc_generated_files/mcc.c: 60:     TMR2_Initialize();
  8142  003758  EC4C  F01F         	call	_TMR2_Initialize	;wreg free
  8143  00375C                     
  8144                           ;mcc_generated_files/mcc.c: 61:     PWM8_Initialize();
  8145  00375C  EC5A  F01F         	call	_PWM8_Initialize	;wreg free
  8146  003760                     
  8147                           ;mcc_generated_files/mcc.c: 62:     PWM6_Initialize();
  8148  003760  EC72  F01F         	call	_PWM6_Initialize	;wreg free
  8149                           
  8150                           ;mcc_generated_files/mcc.c: 63:     CCP4_Initialize();
  8151  003764  EC33  F01E         	call	_CCP4_Initialize	;wreg free
  8152  003768                     
  8153                           ;mcc_generated_files/mcc.c: 64:     CLC3_Initialize();
  8154  003768  EC8E  F01E         	call	_CLC3_Initialize	;wreg free
  8155  00376C                     
  8156                           ;mcc_generated_files/mcc.c: 65:     TMR3_Initialize();
  8157  00376C  ECC7  F01C         	call	_TMR3_Initialize	;wreg free
  8158                           
  8159                           ;mcc_generated_files/mcc.c: 66:     PWM5_Initialize();
  8160  003770  EC7E  F01F         	call	_PWM5_Initialize	;wreg free
  8161  003774                     
  8162                           ;mcc_generated_files/mcc.c: 67:     TMR5_Initialize();
  8163  003774  ECC1  F01B         	call	_TMR5_Initialize	;wreg free
  8164  003778                     
  8165                           ;mcc_generated_files/mcc.c: 68:     PWM7_Initialize();
  8166  003778  EC66  F01F         	call	_PWM7_Initialize	;wreg free
  8167                           
  8168                           ;mcc_generated_files/mcc.c: 69:     UART1_Initialize();
  8169  00377C  ECA1  F019         	call	_UART1_Initialize	;wreg free
  8170  003780  0012               	return		;funcret
  8171  003782                     __end_of_SYSTEM_Initialize:
  8172                           	callstack 0
  8173                           
  8174 ;; *************** function _UART1_Initialize *****************
  8175 ;; Defined at:
  8176 ;;		line 87 in file "mcc_generated_files/uart1.c"
  8177 ;; Parameters:    Size  Location     Type
  8178 ;;		None
  8179 ;; Auto vars:     Size  Location     Type
  8180 ;;		None
  8181 ;; Return value:  Size  Location     Type
  8182 ;;                  1    wreg      void 
  8183 ;; Registers used:
  8184 ;;		wreg, status,2, status,0, cstack
  8185 ;; Tracked objects:
  8186 ;;		On entry : 0/0
  8187 ;;		On exit  : 0/0
  8188 ;;		Unchanged: 0/0
  8189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8193 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8194 ;;Total ram usage:        0 bytes
  8195 ;; Hardware stack levels used: 1
  8196 ;; Hardware stack levels required when called: 9
  8197 ;; This function calls:
  8198 ;;		_UART1_SetErrorHandler
  8199 ;;		_UART1_SetFramingErrorHandler
  8200 ;;		_UART1_SetOverrunErrorHandler
  8201 ;;		_UART1_SetRxInterruptHandler
  8202 ;;		_UART1_SetTxInterruptHandler
  8203 ;; This function is called by:
  8204 ;;		_SYSTEM_Initialize
  8205 ;; This function uses a non-reentrant model
  8206 ;;
  8207                           
  8208                           	psect	text37
  8209  003342                     __ptext37:
  8210                           	callstack 0
  8211  003342                     _UART1_Initialize:
  8212                           	callstack 20
  8213  003342                     
  8214                           ;mcc_generated_files/uart1.c: 90:     PIE3bits.U1RXIE = 0;
  8215  003342  0139               	movlb	57	; () banked
  8216  003344  9793               	bcf	147,3,b	;volatile
  8217  003346                     
  8218                           ; BSR set to: 57
  8219                           ;mcc_generated_files/uart1.c: 91:     UART1_SetRxInterruptHandler(UART1_Receive_ISR);
  8220  003346  0E82               	movlw	low _UART1_Receive_ISR
  8221  003348  6E14               	movwf	UART1_SetRxInterruptHandler@InterruptHandler^0,c
  8222  00334A  0E32               	movlw	high _UART1_Receive_ISR
  8223  00334C  6E15               	movwf	(UART1_SetRxInterruptHandler@InterruptHandler+1)^0,c
  8224  00334E  ECA7  F01F         	call	_UART1_SetRxInterruptHandler	;wreg free
  8225  003352                     
  8226                           ;mcc_generated_files/uart1.c: 92:     PIE3bits.U1TXIE = 0;
  8227  003352  0139               	movlb	57	; () banked
  8228  003354  9993               	bcf	147,4,b	;volatile
  8229                           
  8230                           ;mcc_generated_files/uart1.c: 93:     UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
  8231  003356  0E5A               	movlw	low _UART1_Transmit_ISR
  8232  003358  6E14               	movwf	UART1_SetTxInterruptHandler@InterruptHandler^0,c
  8233  00335A  0E38               	movlw	high _UART1_Transmit_ISR
  8234  00335C  6E15               	movwf	(UART1_SetTxInterruptHandler@InterruptHandler+1)^0,c
  8235  00335E  ECA2  F01F         	call	_UART1_SetTxInterruptHandler	;wreg free
  8236  003362                     
  8237                           ;mcc_generated_files/uart1.c: 98:     U1P1L = 0x00;
  8238  003362  0E00               	movlw	0
  8239  003364  013D               	movlb	61	; () banked
  8240  003366  6FEC               	movwf	236,b	;volatile
  8241  003368                     
  8242                           ; BSR set to: 61
  8243                           ;mcc_generated_files/uart1.c: 101:     U1P1H = 0x00;
  8244  003368  0E00               	movlw	0
  8245  00336A  6FED               	movwf	237,b	;volatile
  8246  00336C                     
  8247                           ; BSR set to: 61
  8248                           ;mcc_generated_files/uart1.c: 104:     U1P2L = 0x00;
  8249  00336C  0E00               	movlw	0
  8250  00336E  6FEE               	movwf	238,b	;volatile
  8251  003370                     
  8252                           ; BSR set to: 61
  8253                           ;mcc_generated_files/uart1.c: 107:     U1P2H = 0x00;
  8254  003370  0E00               	movlw	0
  8255  003372  6FEF               	movwf	239,b	;volatile
  8256  003374                     
  8257                           ; BSR set to: 61
  8258                           ;mcc_generated_files/uart1.c: 110:     U1P3L = 0x00;
  8259  003374  0E00               	movlw	0
  8260  003376  6FF0               	movwf	240,b	;volatile
  8261  003378                     
  8262                           ; BSR set to: 61
  8263                           ;mcc_generated_files/uart1.c: 113:     U1P3H = 0x00;
  8264  003378  0E00               	movlw	0
  8265  00337A  6FF1               	movwf	241,b	;volatile
  8266  00337C                     
  8267                           ; BSR set to: 61
  8268                           ;mcc_generated_files/uart1.c: 116:     U1CON0 = 0xB0;
  8269  00337C  0EB0               	movlw	176
  8270  00337E  6FF2               	movwf	242,b	;volatile
  8271  003380                     
  8272                           ; BSR set to: 61
  8273                           ;mcc_generated_files/uart1.c: 119:     U1CON1 = 0x80;
  8274  003380  0E80               	movlw	128
  8275  003382  6FF3               	movwf	243,b	;volatile
  8276  003384                     
  8277                           ; BSR set to: 61
  8278                           ;mcc_generated_files/uart1.c: 122:     U1CON2 = 0x00;
  8279  003384  0E00               	movlw	0
  8280  003386  6FF4               	movwf	244,b	;volatile
  8281  003388                     
  8282                           ; BSR set to: 61
  8283                           ;mcc_generated_files/uart1.c: 125:     U1BRGL = 0x8A;
  8284  003388  0E8A               	movlw	138
  8285  00338A  6FF5               	movwf	245,b	;volatile
  8286  00338C                     
  8287                           ; BSR set to: 61
  8288                           ;mcc_generated_files/uart1.c: 128:     U1BRGH = 0x00;
  8289  00338C  0E00               	movlw	0
  8290  00338E  6FF6               	movwf	246,b	;volatile
  8291  003390                     
  8292                           ; BSR set to: 61
  8293                           ;mcc_generated_files/uart1.c: 131:     U1FIFO = 0x00;
  8294  003390  0E00               	movlw	0
  8295  003392  6FF7               	movwf	247,b	;volatile
  8296  003394                     
  8297                           ; BSR set to: 61
  8298                           ;mcc_generated_files/uart1.c: 134:     U1UIR = 0x00;
  8299  003394  0E00               	movlw	0
  8300  003396  6FF8               	movwf	248,b	;volatile
  8301  003398                     
  8302                           ; BSR set to: 61
  8303                           ;mcc_generated_files/uart1.c: 137:     U1ERRIR = 0x00;
  8304  003398  0E00               	movlw	0
  8305  00339A  6FF9               	movwf	249,b	;volatile
  8306  00339C                     
  8307                           ; BSR set to: 61
  8308                           ;mcc_generated_files/uart1.c: 140:     U1ERRIE = 0x00;
  8309  00339C  0E00               	movlw	0
  8310  00339E  6FFA               	movwf	250,b	;volatile
  8311  0033A0                     
  8312                           ; BSR set to: 61
  8313                           ;mcc_generated_files/uart1.c: 143:     UART1_SetFramingErrorHandler(UART1_DefaultFraming
      +                          ErrorHandler);
  8314  0033A0  0EAC               	movlw	low _UART1_DefaultFramingErrorHandler
  8315  0033A2  6E14               	movwf	UART1_SetFramingErrorHandler@interruptHandler^0,c
  8316  0033A4  0E3F               	movlw	high _UART1_DefaultFramingErrorHandler
  8317  0033A6  6E15               	movwf	(UART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  8318  0033A8  ECB1  F01F         	call	_UART1_SetFramingErrorHandler	;wreg free
  8319  0033AC                     
  8320                           ;mcc_generated_files/uart1.c: 144:     UART1_SetOverrunErrorHandler(UART1_DefaultOverrun
      +                          ErrorHandler);
  8321  0033AC  0EAA               	movlw	low _UART1_DefaultOverrunErrorHandler
  8322  0033AE  6E14               	movwf	UART1_SetOverrunErrorHandler@interruptHandler^0,c
  8323  0033B0  0E3F               	movlw	high _UART1_DefaultOverrunErrorHandler
  8324  0033B2  6E15               	movwf	(UART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  8325  0033B4  ECAC  F01F         	call	_UART1_SetOverrunErrorHandler	;wreg free
  8326  0033B8                     
  8327                           ;mcc_generated_files/uart1.c: 145:     UART1_SetErrorHandler(UART1_DefaultErrorHandler);
  8328  0033B8  0E9E               	movlw	low _UART1_DefaultErrorHandler
  8329  0033BA  6E14               	movwf	UART1_SetErrorHandler@interruptHandler^0,c
  8330  0033BC  0E3F               	movlw	high _UART1_DefaultErrorHandler
  8331  0033BE  6E15               	movwf	(UART1_SetErrorHandler@interruptHandler+1)^0,c
  8332  0033C0  ECB6  F01F         	call	_UART1_SetErrorHandler	;wreg free
  8333                           
  8334                           ;mcc_generated_files/uart1.c: 147:     uart1RxLastError.status = 0;
  8335  0033C4  0E00               	movlw	0
  8336  0033C6  6E42               	movwf	_uart1RxLastError^0,c	;volatile
  8337                           
  8338                           ;mcc_generated_files/uart1.c: 150:     uart1TxHead = 0;
  8339  0033C8  0E00               	movlw	0
  8340  0033CA  6E47               	movwf	_uart1TxHead^0,c	;volatile
  8341                           
  8342                           ;mcc_generated_files/uart1.c: 151:     uart1TxTail = 0;
  8343  0033CC  0E00               	movlw	0
  8344  0033CE  6E46               	movwf	_uart1TxTail^0,c	;volatile
  8345                           
  8346                           ;mcc_generated_files/uart1.c: 152:     uart1TxBufferRemaining = sizeof(uart1TxBuffer);
  8347  0033D0  0E08               	movlw	8
  8348  0033D2  6E4C               	movwf	_uart1TxBufferRemaining^0,c	;volatile
  8349                           
  8350                           ;mcc_generated_files/uart1.c: 153:     uart1RxHead = 0;
  8351  0033D4  0E00               	movlw	0
  8352  0033D6  6E45               	movwf	_uart1RxHead^0,c	;volatile
  8353                           
  8354                           ;mcc_generated_files/uart1.c: 154:     uart1RxTail = 0;
  8355  0033D8  0E00               	movlw	0
  8356  0033DA  6E44               	movwf	_uart1RxTail^0,c	;volatile
  8357                           
  8358                           ;mcc_generated_files/uart1.c: 155:     uart1RxCount = 0;
  8359  0033DC  0E00               	movlw	0
  8360  0033DE  6E43               	movwf	_uart1RxCount^0,c	;volatile
  8361  0033E0                     
  8362                           ;mcc_generated_files/uart1.c: 158:     PIE3bits.U1RXIE = 1;
  8363  0033E0  0139               	movlb	57	; () banked
  8364  0033E2  8793               	bsf	147,3,b	;volatile
  8365  0033E4                     
  8366                           ; BSR set to: 57
  8367  0033E4  0012               	return		;funcret
  8368  0033E6                     __end_of_UART1_Initialize:
  8369                           	callstack 0
  8370                           
  8371 ;; *************** function _UART1_SetTxInterruptHandler *****************
  8372 ;; Defined at:
  8373 ;;		line 333 in file "mcc_generated_files/uart1.c"
  8374 ;; Parameters:    Size  Location     Type
  8375 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
  8376 ;;		 -> UART1_Transmit_ISR(1), 
  8377 ;; Auto vars:     Size  Location     Type
  8378 ;;		None
  8379 ;; Return value:  Size  Location     Type
  8380 ;;                  1    wreg      void 
  8381 ;; Registers used:
  8382 ;;		wreg, status,2, status,0
  8383 ;; Tracked objects:
  8384 ;;		On entry : 0/0
  8385 ;;		On exit  : 0/0
  8386 ;;		Unchanged: 0/0
  8387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8388 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8391 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8392 ;;Total ram usage:        2 bytes
  8393 ;; Hardware stack levels used: 1
  8394 ;; Hardware stack levels required when called: 8
  8395 ;; This function calls:
  8396 ;;		Nothing
  8397 ;; This function is called by:
  8398 ;;		_UART1_Initialize
  8399 ;; This function uses a non-reentrant model
  8400 ;;
  8401                           
  8402                           	psect	text38
  8403  003F44                     __ptext38:
  8404                           	callstack 0
  8405  003F44                     _UART1_SetTxInterruptHandler:
  8406                           	callstack 20
  8407  003F44                     
  8408                           ;mcc_generated_files/uart1.c: 334:     UART1_TxInterruptHandler = InterruptHandler;
  8409  003F44  C014  F0F4         	movff	UART1_SetTxInterruptHandler@InterruptHandler,_UART1_TxInterruptHandler
  8410  003F48  C015  F0F5         	movff	UART1_SetTxInterruptHandler@InterruptHandler+1,_UART1_TxInterruptHandler+1
  8411  003F4C  0012               	return		;funcret
  8412  003F4E                     __end_of_UART1_SetTxInterruptHandler:
  8413                           	callstack 0
  8414                           
  8415 ;; *************** function _UART1_SetRxInterruptHandler *****************
  8416 ;; Defined at:
  8417 ;;		line 329 in file "mcc_generated_files/uart1.c"
  8418 ;; Parameters:    Size  Location     Type
  8419 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
  8420 ;;		 -> UART1_Receive_ISR(1), 
  8421 ;; Auto vars:     Size  Location     Type
  8422 ;;		None
  8423 ;; Return value:  Size  Location     Type
  8424 ;;                  1    wreg      void 
  8425 ;; Registers used:
  8426 ;;		wreg, status,2, status,0
  8427 ;; Tracked objects:
  8428 ;;		On entry : 0/0
  8429 ;;		On exit  : 0/0
  8430 ;;		Unchanged: 0/0
  8431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8432 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8435 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8436 ;;Total ram usage:        2 bytes
  8437 ;; Hardware stack levels used: 1
  8438 ;; Hardware stack levels required when called: 8
  8439 ;; This function calls:
  8440 ;;		Nothing
  8441 ;; This function is called by:
  8442 ;;		_UART1_Initialize
  8443 ;; This function uses a non-reentrant model
  8444 ;;
  8445                           
  8446                           	psect	text39
  8447  003F4E                     __ptext39:
  8448                           	callstack 0
  8449  003F4E                     _UART1_SetRxInterruptHandler:
  8450                           	callstack 20
  8451  003F4E                     
  8452                           ;mcc_generated_files/uart1.c: 330:     UART1_RxInterruptHandler = InterruptHandler;
  8453  003F4E  C014  F0F6         	movff	UART1_SetRxInterruptHandler@InterruptHandler,_UART1_RxInterruptHandler
  8454  003F52  C015  F0F7         	movff	UART1_SetRxInterruptHandler@InterruptHandler+1,_UART1_RxInterruptHandler+1
  8455  003F56  0012               	return		;funcret
  8456  003F58                     __end_of_UART1_SetRxInterruptHandler:
  8457                           	callstack 0
  8458                           
  8459 ;; *************** function _UART1_SetOverrunErrorHandler *****************
  8460 ;; Defined at:
  8461 ;;		line 319 in file "mcc_generated_files/uart1.c"
  8462 ;; Parameters:    Size  Location     Type
  8463 ;;  interruptHan    2   19[COMRAM] PTR FTN()void 
  8464 ;;		 -> UART1_DefaultOverrunErrorHandler(1), 
  8465 ;; Auto vars:     Size  Location     Type
  8466 ;;		None
  8467 ;; Return value:  Size  Location     Type
  8468 ;;                  1    wreg      void 
  8469 ;; Registers used:
  8470 ;;		wreg, status,2, status,0
  8471 ;; Tracked objects:
  8472 ;;		On entry : 0/0
  8473 ;;		On exit  : 0/0
  8474 ;;		Unchanged: 0/0
  8475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8476 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8479 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8480 ;;Total ram usage:        2 bytes
  8481 ;; Hardware stack levels used: 1
  8482 ;; Hardware stack levels required when called: 8
  8483 ;; This function calls:
  8484 ;;		Nothing
  8485 ;; This function is called by:
  8486 ;;		_UART1_Initialize
  8487 ;; This function uses a non-reentrant model
  8488 ;;
  8489                           
  8490                           	psect	text40
  8491  003F58                     __ptext40:
  8492                           	callstack 0
  8493  003F58                     _UART1_SetOverrunErrorHandler:
  8494                           	callstack 20
  8495  003F58                     
  8496                           ;mcc_generated_files/uart1.c: 320:     UART1_OverrunErrorHandler = interruptHandler;
  8497  003F58  C014  F0F0         	movff	UART1_SetOverrunErrorHandler@interruptHandler,_UART1_OverrunErrorHandler
  8498  003F5C  C015  F0F1         	movff	UART1_SetOverrunErrorHandler@interruptHandler+1,_UART1_OverrunErrorHandler+1
  8499  003F60  0012               	return		;funcret
  8500  003F62                     __end_of_UART1_SetOverrunErrorHandler:
  8501                           	callstack 0
  8502                           
  8503 ;; *************** function _UART1_SetFramingErrorHandler *****************
  8504 ;; Defined at:
  8505 ;;		line 315 in file "mcc_generated_files/uart1.c"
  8506 ;; Parameters:    Size  Location     Type
  8507 ;;  interruptHan    2   19[COMRAM] PTR FTN()void 
  8508 ;;		 -> UART1_DefaultFramingErrorHandler(1), 
  8509 ;; Auto vars:     Size  Location     Type
  8510 ;;		None
  8511 ;; Return value:  Size  Location     Type
  8512 ;;                  1    wreg      void 
  8513 ;; Registers used:
  8514 ;;		wreg, status,2, status,0
  8515 ;; Tracked objects:
  8516 ;;		On entry : 0/0
  8517 ;;		On exit  : 0/0
  8518 ;;		Unchanged: 0/0
  8519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8520 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8523 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8524 ;;Total ram usage:        2 bytes
  8525 ;; Hardware stack levels used: 1
  8526 ;; Hardware stack levels required when called: 8
  8527 ;; This function calls:
  8528 ;;		Nothing
  8529 ;; This function is called by:
  8530 ;;		_UART1_Initialize
  8531 ;; This function uses a non-reentrant model
  8532 ;;
  8533                           
  8534                           	psect	text41
  8535  003F62                     __ptext41:
  8536                           	callstack 0
  8537  003F62                     _UART1_SetFramingErrorHandler:
  8538                           	callstack 20
  8539  003F62                     
  8540                           ;mcc_generated_files/uart1.c: 316:     UART1_FramingErrorHandler = interruptHandler;
  8541  003F62  C014  F0F2         	movff	UART1_SetFramingErrorHandler@interruptHandler,_UART1_FramingErrorHandler
  8542  003F66  C015  F0F3         	movff	UART1_SetFramingErrorHandler@interruptHandler+1,_UART1_FramingErrorHandler+1
  8543  003F6A  0012               	return		;funcret
  8544  003F6C                     __end_of_UART1_SetFramingErrorHandler:
  8545                           	callstack 0
  8546                           
  8547 ;; *************** function _UART1_SetErrorHandler *****************
  8548 ;; Defined at:
  8549 ;;		line 323 in file "mcc_generated_files/uart1.c"
  8550 ;; Parameters:    Size  Location     Type
  8551 ;;  interruptHan    2   19[COMRAM] PTR FTN()void 
  8552 ;;		 -> UART1_DefaultErrorHandler(1), 
  8553 ;; Auto vars:     Size  Location     Type
  8554 ;;		None
  8555 ;; Return value:  Size  Location     Type
  8556 ;;                  1    wreg      void 
  8557 ;; Registers used:
  8558 ;;		wreg, status,2, status,0
  8559 ;; Tracked objects:
  8560 ;;		On entry : 0/0
  8561 ;;		On exit  : 0/0
  8562 ;;		Unchanged: 0/0
  8563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8564 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8567 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8568 ;;Total ram usage:        2 bytes
  8569 ;; Hardware stack levels used: 1
  8570 ;; Hardware stack levels required when called: 8
  8571 ;; This function calls:
  8572 ;;		Nothing
  8573 ;; This function is called by:
  8574 ;;		_UART1_Initialize
  8575 ;; This function uses a non-reentrant model
  8576 ;;
  8577                           
  8578                           	psect	text42
  8579  003F6C                     __ptext42:
  8580                           	callstack 0
  8581  003F6C                     _UART1_SetErrorHandler:
  8582                           	callstack 20
  8583  003F6C                     
  8584                           ;mcc_generated_files/uart1.c: 324:     UART1_ErrorHandler = interruptHandler;
  8585  003F6C  C014  F0EE         	movff	UART1_SetErrorHandler@interruptHandler,_UART1_ErrorHandler
  8586  003F70  C015  F0EF         	movff	UART1_SetErrorHandler@interruptHandler+1,_UART1_ErrorHandler+1
  8587  003F74  0012               	return		;funcret
  8588  003F76                     __end_of_UART1_SetErrorHandler:
  8589                           	callstack 0
  8590                           
  8591 ;; *************** function _TMR5_Initialize *****************
  8592 ;; Defined at:
  8593 ;;		line 67 in file "mcc_generated_files/tmr5.c"
  8594 ;; Parameters:    Size  Location     Type
  8595 ;;		None
  8596 ;; Auto vars:     Size  Location     Type
  8597 ;;		None
  8598 ;; Return value:  Size  Location     Type
  8599 ;;                  1    wreg      void 
  8600 ;; Registers used:
  8601 ;;		wreg, status,2, status,0, cstack
  8602 ;; Tracked objects:
  8603 ;;		On entry : 0/0
  8604 ;;		On exit  : 0/0
  8605 ;;		Unchanged: 0/0
  8606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8609 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8610 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8611 ;;Total ram usage:        2 bytes
  8612 ;; Hardware stack levels used: 1
  8613 ;; Hardware stack levels required when called: 9
  8614 ;; This function calls:
  8615 ;;		_TMR5_SetGateInterruptHandler
  8616 ;; This function is called by:
  8617 ;;		_SYSTEM_Initialize
  8618 ;; This function uses a non-reentrant model
  8619 ;;
  8620                           
  8621                           	psect	text43
  8622  003782                     __ptext43:
  8623                           	callstack 0
  8624  003782                     _TMR5_Initialize:
  8625                           	callstack 20
  8626  003782                     
  8627                           ;mcc_generated_files/tmr5.c: 72:     T5GCON = 0xC0;
  8628  003782  0EC0               	movlw	192
  8629  003784  6E9B               	movwf	155,c	;volatile
  8630                           
  8631                           ;mcc_generated_files/tmr5.c: 75:     T5GATE = 0x00;
  8632  003786  0E00               	movlw	0
  8633  003788  6E9C               	movwf	156,c	;volatile
  8634                           
  8635                           ;mcc_generated_files/tmr5.c: 78:     T5CLK = 0x05;
  8636  00378A  0E05               	movlw	5
  8637  00378C  6E9D               	movwf	157,c	;volatile
  8638                           
  8639                           ;mcc_generated_files/tmr5.c: 81:     TMR5H = 0x00;
  8640  00378E  0E00               	movlw	0
  8641  003790  6E99               	movwf	153,c	;volatile
  8642                           
  8643                           ;mcc_generated_files/tmr5.c: 84:     TMR5L = 0x00;
  8644  003792  0E00               	movlw	0
  8645  003794  6E98               	movwf	152,c	;volatile
  8646  003796                     
  8647                           ;mcc_generated_files/tmr5.c: 87:     PIR8bits.TMR5IF = 0;
  8648  003796  0139               	movlb	57	; () banked
  8649  003798  9DA8               	bcf	168,6,b	;volatile
  8650  00379A                     
  8651                           ; BSR set to: 57
  8652                           ;mcc_generated_files/tmr5.c: 90:     timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
  8653  00379A  5098               	movf	152,w,c	;volatile
  8654  00379C  006F FE64  F016    	movff	16281,??_TMR5_Initialize	;volatile
  8655  0037A2  6A17               	clrf	(??_TMR5_Initialize+1)^0,c
  8656  0037A4  C016  F017         	movff	??_TMR5_Initialize,??_TMR5_Initialize+1
  8657  0037A8  6A16               	clrf	??_TMR5_Initialize^0,c
  8658  0037AA  1016               	iorwf	??_TMR5_Initialize^0,w,c
  8659  0037AC  0100               	movlb	0	; () banked
  8660  0037AE  6FEC               	movwf	_timer5ReloadVal& (0+255),b	;volatile
  8661  0037B0  5017               	movf	(??_TMR5_Initialize+1)^0,w,c
  8662  0037B2  6FED               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
  8663  0037B4                     
  8664                           ; BSR set to: 0
  8665                           ;mcc_generated_files/tmr5.c: 93:     PIR8bits.TMR5GIF = 0;
  8666  0037B4  0139               	movlb	57	; () banked
  8667  0037B6  9FA8               	bcf	168,7,b	;volatile
  8668  0037B8                     
  8669                           ; BSR set to: 57
  8670                           ;mcc_generated_files/tmr5.c: 96:     PIE8bits.TMR5GIE = 1;
  8671  0037B8  8F98               	bsf	152,7,b	;volatile
  8672  0037BA                     
  8673                           ; BSR set to: 57
  8674                           ;mcc_generated_files/tmr5.c: 99:     TMR5_SetGateInterruptHandler(TMR5_DefaultGateInterr
      +                          uptHandler);
  8675  0037BA  0E5E               	movlw	low _TMR5_DefaultGateInterruptHandler
  8676  0037BC  6E14               	movwf	TMR5_SetGateInterruptHandler@InterruptHandler^0,c
  8677  0037BE  0E3E               	movlw	high _TMR5_DefaultGateInterruptHandler
  8678  0037C0  6E15               	movwf	(TMR5_SetGateInterruptHandler@InterruptHandler+1)^0,c
  8679  0037C2  ECBB  F01F         	call	_TMR5_SetGateInterruptHandler	;wreg free
  8680  0037C6                     
  8681                           ;mcc_generated_files/tmr5.c: 102:     T5CON = 0x03;
  8682  0037C6  0E03               	movlw	3
  8683  0037C8  6E9A               	movwf	154,c	;volatile
  8684  0037CA  0012               	return		;funcret
  8685  0037CC                     __end_of_TMR5_Initialize:
  8686                           	callstack 0
  8687                           
  8688 ;; *************** function _TMR5_SetGateInterruptHandler *****************
  8689 ;; Defined at:
  8690 ;;		line 186 in file "mcc_generated_files/tmr5.c"
  8691 ;; Parameters:    Size  Location     Type
  8692 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
  8693 ;;		 -> TMR5_DefaultGateInterruptHandler(1), 
  8694 ;; Auto vars:     Size  Location     Type
  8695 ;;		None
  8696 ;; Return value:  Size  Location     Type
  8697 ;;                  1    wreg      void 
  8698 ;; Registers used:
  8699 ;;		wreg, status,2, status,0
  8700 ;; Tracked objects:
  8701 ;;		On entry : 0/0
  8702 ;;		On exit  : 0/0
  8703 ;;		Unchanged: 0/0
  8704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8705 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8708 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8709 ;;Total ram usage:        2 bytes
  8710 ;; Hardware stack levels used: 1
  8711 ;; Hardware stack levels required when called: 8
  8712 ;; This function calls:
  8713 ;;		Nothing
  8714 ;; This function is called by:
  8715 ;;		_TMR5_Initialize
  8716 ;; This function uses a non-reentrant model
  8717 ;;
  8718                           
  8719                           	psect	text44
  8720  003F76                     __ptext44:
  8721                           	callstack 0
  8722  003F76                     _TMR5_SetGateInterruptHandler:
  8723                           	callstack 20
  8724  003F76                     
  8725                           ;mcc_generated_files/tmr5.c: 187:     TMR5_GateInterruptHandler = InterruptHandler;
  8726  003F76  C014  F0EA         	movff	TMR5_SetGateInterruptHandler@InterruptHandler,_TMR5_GateInterruptHandler
  8727  003F7A  C015  F0EB         	movff	TMR5_SetGateInterruptHandler@InterruptHandler+1,_TMR5_GateInterruptHandler+1
  8728  003F7E  0012               	return		;funcret
  8729  003F80                     __end_of_TMR5_SetGateInterruptHandler:
  8730                           	callstack 0
  8731                           
  8732 ;; *************** function _TMR4_Initialize *****************
  8733 ;; Defined at:
  8734 ;;		line 65 in file "mcc_generated_files/tmr4.c"
  8735 ;; Parameters:    Size  Location     Type
  8736 ;;		None
  8737 ;; Auto vars:     Size  Location     Type
  8738 ;;		None
  8739 ;; Return value:  Size  Location     Type
  8740 ;;                  1    wreg      void 
  8741 ;; Registers used:
  8742 ;;		wreg, status,2, status,0, cstack
  8743 ;; Tracked objects:
  8744 ;;		On entry : 0/0
  8745 ;;		On exit  : 0/0
  8746 ;;		Unchanged: 0/0
  8747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8751 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8752 ;;Total ram usage:        0 bytes
  8753 ;; Hardware stack levels used: 1
  8754 ;; Hardware stack levels required when called: 9
  8755 ;; This function calls:
  8756 ;;		_TMR4_SetInterruptHandler
  8757 ;; This function is called by:
  8758 ;;		_SYSTEM_Initialize
  8759 ;; This function uses a non-reentrant model
  8760 ;;
  8761                           
  8762                           	psect	text45
  8763  003CF0                     __ptext45:
  8764                           	callstack 0
  8765  003CF0                     _TMR4_Initialize:
  8766                           	callstack 20
  8767  003CF0                     
  8768                           ;mcc_generated_files/tmr4.c: 70:     T4CLKCON = 0x01;
  8769  003CF0  0E01               	movlw	1
  8770  003CF2  6EA2               	movwf	162,c	;volatile
  8771                           
  8772                           ;mcc_generated_files/tmr4.c: 73:     T4HLT = 0x00;
  8773  003CF4  0E00               	movlw	0
  8774  003CF6  6EA1               	movwf	161,c	;volatile
  8775                           
  8776                           ;mcc_generated_files/tmr4.c: 76:     T4RST = 0x00;
  8777  003CF8  0E00               	movlw	0
  8778  003CFA  6EA3               	movwf	163,c	;volatile
  8779                           
  8780                           ;mcc_generated_files/tmr4.c: 79:     T4PR = 0xF9;
  8781  003CFC  0EF9               	movlw	249
  8782  003CFE  6E9F               	movwf	159,c	;volatile
  8783                           
  8784                           ;mcc_generated_files/tmr4.c: 82:     T4TMR = 0x00;
  8785  003D00  0E00               	movlw	0
  8786  003D02  6E9E               	movwf	158,c	;volatile
  8787  003D04                     
  8788                           ;mcc_generated_files/tmr4.c: 85:     PIR7bits.TMR4IF = 0;
  8789  003D04  0139               	movlb	57	; () banked
  8790  003D06  91A7               	bcf	167,0,b	;volatile
  8791  003D08                     
  8792                           ; BSR set to: 57
  8793                           ;mcc_generated_files/tmr4.c: 88:     PIE7bits.TMR4IE = 1;
  8794  003D08  8197               	bsf	151,0,b	;volatile
  8795  003D0A                     
  8796                           ; BSR set to: 57
  8797                           ;mcc_generated_files/tmr4.c: 91:     TMR4_SetInterruptHandler(TMR4_DefaultInterruptHandl
      +                          er);
  8798  003D0A  0EAE               	movlw	low _TMR4_DefaultInterruptHandler
  8799  003D0C  6E14               	movwf	TMR4_SetInterruptHandler@InterruptHandler^0,c
  8800  003D0E  0E3F               	movlw	high _TMR4_DefaultInterruptHandler
  8801  003D10  6E15               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)^0,c
  8802  003D12  ECC0  F01F         	call	_TMR4_SetInterruptHandler	;wreg free
  8803  003D16                     
  8804                           ;mcc_generated_files/tmr4.c: 94:     T4CON = 0xE0;
  8805  003D16  0EE0               	movlw	224
  8806  003D18  6EA0               	movwf	160,c	;volatile
  8807  003D1A  0012               	return		;funcret
  8808  003D1C                     __end_of_TMR4_Initialize:
  8809                           	callstack 0
  8810                           
  8811 ;; *************** function _TMR4_SetInterruptHandler *****************
  8812 ;; Defined at:
  8813 ;;		line 194 in file "mcc_generated_files/tmr4.c"
  8814 ;; Parameters:    Size  Location     Type
  8815 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
  8816 ;;		 -> TMR4_10msISR(1), TMR4_DefaultInterruptHandler(1), 
  8817 ;; Auto vars:     Size  Location     Type
  8818 ;;		None
  8819 ;; Return value:  Size  Location     Type
  8820 ;;                  1    wreg      void 
  8821 ;; Registers used:
  8822 ;;		wreg, status,2, status,0
  8823 ;; Tracked objects:
  8824 ;;		On entry : 0/0
  8825 ;;		On exit  : 0/0
  8826 ;;		Unchanged: 0/0
  8827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8828 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8831 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8832 ;;Total ram usage:        2 bytes
  8833 ;; Hardware stack levels used: 1
  8834 ;; Hardware stack levels required when called: 8
  8835 ;; This function calls:
  8836 ;;		Nothing
  8837 ;; This function is called by:
  8838 ;;		_TMR4_Initialize
  8839 ;;		_main
  8840 ;; This function uses a non-reentrant model
  8841 ;;
  8842                           
  8843                           	psect	text46
  8844  003F80                     __ptext46:
  8845                           	callstack 0
  8846  003F80                     _TMR4_SetInterruptHandler:
  8847                           	callstack 22
  8848  003F80                     
  8849                           ;mcc_generated_files/tmr4.c: 195:     TMR4_InterruptHandler = InterruptHandler;
  8850  003F80  C014  F0E6         	movff	TMR4_SetInterruptHandler@InterruptHandler,_TMR4_InterruptHandler
  8851  003F84  C015  F0E7         	movff	TMR4_SetInterruptHandler@InterruptHandler+1,_TMR4_InterruptHandler+1
  8852  003F88  0012               	return		;funcret
  8853  003F8A                     __end_of_TMR4_SetInterruptHandler:
  8854                           	callstack 0
  8855                           
  8856 ;; *************** function _TMR3_Initialize *****************
  8857 ;; Defined at:
  8858 ;;		line 63 in file "mcc_generated_files/tmr3.c"
  8859 ;; Parameters:    Size  Location     Type
  8860 ;;		None
  8861 ;; Auto vars:     Size  Location     Type
  8862 ;;		None
  8863 ;; Return value:  Size  Location     Type
  8864 ;;                  1    wreg      void 
  8865 ;; Registers used:
  8866 ;;		wreg, status,2, status,0
  8867 ;; Tracked objects:
  8868 ;;		On entry : 0/0
  8869 ;;		On exit  : 0/0
  8870 ;;		Unchanged: 0/0
  8871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8874 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8875 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8876 ;;Total ram usage:        2 bytes
  8877 ;; Hardware stack levels used: 1
  8878 ;; Hardware stack levels required when called: 8
  8879 ;; This function calls:
  8880 ;;		Nothing
  8881 ;; This function is called by:
  8882 ;;		_SYSTEM_Initialize
  8883 ;; This function uses a non-reentrant model
  8884 ;;
  8885                           
  8886                           	psect	text47
  8887  00398E                     __ptext47:
  8888                           	callstack 0
  8889  00398E                     _TMR3_Initialize:
  8890                           	callstack 21
  8891  00398E                     
  8892                           ;mcc_generated_files/tmr3.c: 68:     T3GCON = 0x00;
  8893  00398E  0E00               	movlw	0
  8894  003990  6EA7               	movwf	167,c	;volatile
  8895                           
  8896                           ;mcc_generated_files/tmr3.c: 71:     T3GATE = 0x00;
  8897  003992  0E00               	movlw	0
  8898  003994  6EA8               	movwf	168,c	;volatile
  8899                           
  8900                           ;mcc_generated_files/tmr3.c: 74:     T3CLK = 0x05;
  8901  003996  0E05               	movlw	5
  8902  003998  6EA9               	movwf	169,c	;volatile
  8903                           
  8904                           ;mcc_generated_files/tmr3.c: 77:     TMR3H = 0x00;
  8905  00399A  0E00               	movlw	0
  8906  00399C  6EA5               	movwf	165,c	;volatile
  8907                           
  8908                           ;mcc_generated_files/tmr3.c: 80:     TMR3L = 0x00;
  8909  00399E  0E00               	movlw	0
  8910  0039A0  6EA4               	movwf	164,c	;volatile
  8911  0039A2                     
  8912                           ;mcc_generated_files/tmr3.c: 83:     PIR6bits.TMR3IF = 0;
  8913  0039A2  0139               	movlb	57	; () banked
  8914  0039A4  9DA6               	bcf	166,6,b	;volatile
  8915  0039A6                     
  8916                           ; BSR set to: 57
  8917                           ;mcc_generated_files/tmr3.c: 86:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
  8918  0039A6  50A4               	movf	164,w,c	;volatile
  8919  0039A8  006F FE94  F014    	movff	16293,??_TMR3_Initialize	;volatile
  8920  0039AE  6A15               	clrf	(??_TMR3_Initialize+1)^0,c
  8921  0039B0  C014  F015         	movff	??_TMR3_Initialize,??_TMR3_Initialize+1
  8922  0039B4  6A14               	clrf	??_TMR3_Initialize^0,c
  8923  0039B6  1014               	iorwf	??_TMR3_Initialize^0,w,c
  8924  0039B8  0100               	movlb	0	; () banked
  8925  0039BA  6FE8               	movwf	_timer3ReloadVal& (0+255),b	;volatile
  8926  0039BC  5015               	movf	(??_TMR3_Initialize+1)^0,w,c
  8927  0039BE  6FE9               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
  8928  0039C0                     
  8929                           ; BSR set to: 0
  8930                           ;mcc_generated_files/tmr3.c: 89:     T3CON = 0x01;
  8931  0039C0  0E01               	movlw	1
  8932  0039C2  6EA6               	movwf	166,c	;volatile
  8933  0039C4                     
  8934                           ; BSR set to: 0
  8935  0039C4  0012               	return		;funcret
  8936  0039C6                     __end_of_TMR3_Initialize:
  8937                           	callstack 0
  8938                           
  8939 ;; *************** function _TMR2_Initialize *****************
  8940 ;; Defined at:
  8941 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  8942 ;; Parameters:    Size  Location     Type
  8943 ;;		None
  8944 ;; Auto vars:     Size  Location     Type
  8945 ;;		None
  8946 ;; Return value:  Size  Location     Type
  8947 ;;                  1    wreg      void 
  8948 ;; Registers used:
  8949 ;;		wreg, status,2
  8950 ;; Tracked objects:
  8951 ;;		On entry : 0/0
  8952 ;;		On exit  : 0/0
  8953 ;;		Unchanged: 0/0
  8954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8958 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8959 ;;Total ram usage:        0 bytes
  8960 ;; Hardware stack levels used: 1
  8961 ;; Hardware stack levels required when called: 8
  8962 ;; This function calls:
  8963 ;;		Nothing
  8964 ;; This function is called by:
  8965 ;;		_SYSTEM_Initialize
  8966 ;; This function uses a non-reentrant model
  8967 ;;
  8968                           
  8969                           	psect	text48
  8970  003E98                     __ptext48:
  8971                           	callstack 0
  8972  003E98                     _TMR2_Initialize:
  8973                           	callstack 21
  8974  003E98                     
  8975                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x05;
  8976  003E98  0E05               	movlw	5
  8977  003E9A  6EAE               	movwf	174,c	;volatile
  8978                           
  8979                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
  8980  003E9C  0E00               	movlw	0
  8981  003E9E  6EAD               	movwf	173,c	;volatile
  8982                           
  8983                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
  8984  003EA0  0E00               	movlw	0
  8985  003EA2  6EAF               	movwf	175,c	;volatile
  8986  003EA4                     
  8987                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0xFF;
  8988  003EA4  68AB               	setf	171,c	;volatile
  8989                           
  8990                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
  8991  003EA6  0E00               	movlw	0
  8992  003EA8  6EAA               	movwf	170,c	;volatile
  8993  003EAA                     
  8994                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
  8995  003EAA  0139               	movlb	57	; () banked
  8996  003EAC  95A4               	bcf	164,2,b	;volatile
  8997                           
  8998                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xB0;
  8999  003EAE  0EB0               	movlw	176
  9000  003EB0  6EAC               	movwf	172,c	;volatile
  9001  003EB2                     
  9002                           ; BSR set to: 57
  9003  003EB2  0012               	return		;funcret
  9004  003EB4                     __end_of_TMR2_Initialize:
  9005                           	callstack 0
  9006                           
  9007 ;; *************** function _SMT1_Initialize *****************
  9008 ;; Defined at:
  9009 ;;		line 60 in file "mcc_generated_files/smt1.c"
  9010 ;; Parameters:    Size  Location     Type
  9011 ;;		None
  9012 ;; Auto vars:     Size  Location     Type
  9013 ;;		None
  9014 ;; Return value:  Size  Location     Type
  9015 ;;                  1    wreg      void 
  9016 ;; Registers used:
  9017 ;;		wreg, status,2
  9018 ;; Tracked objects:
  9019 ;;		On entry : 0/0
  9020 ;;		On exit  : 0/0
  9021 ;;		Unchanged: 0/0
  9022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9026 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9027 ;;Total ram usage:        0 bytes
  9028 ;; Hardware stack levels used: 1
  9029 ;; Hardware stack levels required when called: 8
  9030 ;; This function calls:
  9031 ;;		Nothing
  9032 ;; This function is called by:
  9033 ;;		_SYSTEM_Initialize
  9034 ;; This function uses a non-reentrant model
  9035 ;;
  9036                           
  9037                           	psect	text49
  9038  003BD6                     __ptext49:
  9039                           	callstack 0
  9040  003BD6                     _SMT1_Initialize:
  9041                           	callstack 21
  9042  003BD6                     
  9043                           ;mcc_generated_files/smt1.c: 63:     SMT1CON0 = 0x80;
  9044  003BD6  0E80               	movlw	128
  9045  003BD8  013F               	movlb	63	; () banked
  9046  003BDA  6F1E               	movwf	30,b	;volatile
  9047                           
  9048                           ;mcc_generated_files/smt1.c: 66:     SMT1CON1 = 0x42;
  9049  003BDC  0E42               	movlw	66
  9050  003BDE  6F1F               	movwf	31,b	;volatile
  9051                           
  9052                           ;mcc_generated_files/smt1.c: 69:     SMT1STAT = 0x00;
  9053  003BE0  0E00               	movlw	0
  9054  003BE2  6F20               	movwf	32,b	;volatile
  9055                           
  9056                           ;mcc_generated_files/smt1.c: 72:     SMT1CLK = 0x04;
  9057  003BE4  0E04               	movlw	4
  9058  003BE6  6F21               	movwf	33,b	;volatile
  9059                           
  9060                           ;mcc_generated_files/smt1.c: 75:     SMT1WIN = 0x00;
  9061  003BE8  0E00               	movlw	0
  9062  003BEA  6F23               	movwf	35,b	;volatile
  9063                           
  9064                           ;mcc_generated_files/smt1.c: 78:     SMT1SIG = 0x00;
  9065  003BEC  0E00               	movlw	0
  9066  003BEE  6F22               	movwf	34,b	;volatile
  9067                           
  9068                           ;mcc_generated_files/smt1.c: 81:     SMT1PRU = 0x01;
  9069  003BF0  0E01               	movlw	1
  9070  003BF2  6F1D               	movwf	29,b	;volatile
  9071  003BF4                     
  9072                           ; BSR set to: 63
  9073                           ;mcc_generated_files/smt1.c: 84:     SMT1PRH = 0xFF;
  9074  003BF4  691C               	setf	28,b	;volatile
  9075  003BF6                     
  9076                           ; BSR set to: 63
  9077                           ;mcc_generated_files/smt1.c: 87:     SMT1PRL = 0xFF;
  9078  003BF6  691B               	setf	27,b	;volatile
  9079  003BF8                     
  9080                           ; BSR set to: 63
  9081                           ;mcc_generated_files/smt1.c: 90:     PIE1bits.SMT1IE = 1;
  9082  003BF8  0139               	movlb	57	; () banked
  9083  003BFA  8B91               	bsf	145,5,b	;volatile
  9084  003BFC                     
  9085                           ; BSR set to: 57
  9086                           ;mcc_generated_files/smt1.c: 93:     PIE1bits.SMT1PWAIE = 1;
  9087  003BFC  8F91               	bsf	145,7,b	;volatile
  9088  003BFE                     
  9089                           ; BSR set to: 57
  9090                           ;mcc_generated_files/smt1.c: 96:     PIE1bits.SMT1PRAIE = 1;
  9091  003BFE  8D91               	bsf	145,6,b	;volatile
  9092  003C00                     
  9093                           ; BSR set to: 57
  9094                           ;mcc_generated_files/smt1.c: 99:     SMT1CON1bits.SMT1GO = 1;
  9095  003C00  013F               	movlb	63	; () banked
  9096  003C02  8F1F               	bsf	31,7,b	;volatile
  9097  003C04                     
  9098                           ; BSR set to: 63
  9099  003C04  0012               	return		;funcret
  9100  003C06                     __end_of_SMT1_Initialize:
  9101                           	callstack 0
  9102                           
  9103 ;; *************** function _PWM8_Initialize *****************
  9104 ;; Defined at:
  9105 ;;		line 58 in file "mcc_generated_files/pwm8.c"
  9106 ;; Parameters:    Size  Location     Type
  9107 ;;		None
  9108 ;; Auto vars:     Size  Location     Type
  9109 ;;		None
  9110 ;; Return value:  Size  Location     Type
  9111 ;;                  1    wreg      void 
  9112 ;; Registers used:
  9113 ;;		wreg, status,2
  9114 ;; Tracked objects:
  9115 ;;		On entry : 0/0
  9116 ;;		On exit  : 0/0
  9117 ;;		Unchanged: 0/0
  9118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9122 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9123 ;;Total ram usage:        0 bytes
  9124 ;; Hardware stack levels used: 1
  9125 ;; Hardware stack levels required when called: 8
  9126 ;; This function calls:
  9127 ;;		Nothing
  9128 ;; This function is called by:
  9129 ;;		_SYSTEM_Initialize
  9130 ;; This function uses a non-reentrant model
  9131 ;;
  9132                           
  9133                           	psect	text50
  9134  003EB4                     __ptext50:
  9135                           	callstack 0
  9136  003EB4                     _PWM8_Initialize:
  9137                           	callstack 21
  9138  003EB4                     
  9139                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
  9140  003EB4  0E80               	movlw	128
  9141  003EB6  6E62               	movwf	98,c	;volatile
  9142                           
  9143                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
  9144  003EB8  0E00               	movlw	0
  9145  003EBA  6E61               	movwf	97,c	;volatile
  9146                           
  9147                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x00;
  9148  003EBC  0E00               	movlw	0
  9149  003EBE  6E60               	movwf	96,c	;volatile
  9150                           
  9151                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 2;
  9152  003EC0  013F               	movlb	63	; () banked
  9153  003EC2  515F               	movf	95,w,b	;volatile
  9154  003EC4  0B3F               	andlw	-193
  9155  003EC6  0980               	iorlw	128
  9156  003EC8  6F5F               	movwf	95,b	;volatile
  9157  003ECA                     
  9158                           ; BSR set to: 63
  9159  003ECA  0012               	return		;funcret
  9160  003ECC                     __end_of_PWM8_Initialize:
  9161                           	callstack 0
  9162                           
  9163 ;; *************** function _PWM7_Initialize *****************
  9164 ;; Defined at:
  9165 ;;		line 58 in file "mcc_generated_files/pwm7.c"
  9166 ;; Parameters:    Size  Location     Type
  9167 ;;		None
  9168 ;; Auto vars:     Size  Location     Type
  9169 ;;		None
  9170 ;; Return value:  Size  Location     Type
  9171 ;;                  1    wreg      void 
  9172 ;; Registers used:
  9173 ;;		wreg, status,2
  9174 ;; Tracked objects:
  9175 ;;		On entry : 0/0
  9176 ;;		On exit  : 0/0
  9177 ;;		Unchanged: 0/0
  9178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9182 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9183 ;;Total ram usage:        0 bytes
  9184 ;; Hardware stack levels used: 1
  9185 ;; Hardware stack levels required when called: 8
  9186 ;; This function calls:
  9187 ;;		Nothing
  9188 ;; This function is called by:
  9189 ;;		_SYSTEM_Initialize
  9190 ;; This function uses a non-reentrant model
  9191 ;;
  9192                           
  9193                           	psect	text51
  9194  003ECC                     __ptext51:
  9195                           	callstack 0
  9196  003ECC                     _PWM7_Initialize:
  9197                           	callstack 21
  9198  003ECC                     
  9199                           ;mcc_generated_files/pwm7.c: 62:     PWM7CON = 0x80;
  9200  003ECC  0E80               	movlw	128
  9201  003ECE  6E66               	movwf	102,c	;volatile
  9202                           
  9203                           ;mcc_generated_files/pwm7.c: 65:     PWM7DCH = 0x00;
  9204  003ED0  0E00               	movlw	0
  9205  003ED2  6E65               	movwf	101,c	;volatile
  9206                           
  9207                           ;mcc_generated_files/pwm7.c: 68:     PWM7DCL = 0x00;
  9208  003ED4  0E00               	movlw	0
  9209  003ED6  6E64               	movwf	100,c	;volatile
  9210                           
  9211                           ;mcc_generated_files/pwm7.c: 71:     CCPTMRS1bits.P7TSEL = 2;
  9212  003ED8  013F               	movlb	63	; () banked
  9213  003EDA  515F               	movf	95,w,b	;volatile
  9214  003EDC  0BCF               	andlw	-49
  9215  003EDE  0920               	iorlw	32
  9216  003EE0  6F5F               	movwf	95,b	;volatile
  9217  003EE2                     
  9218                           ; BSR set to: 63
  9219  003EE2  0012               	return		;funcret
  9220  003EE4                     __end_of_PWM7_Initialize:
  9221                           	callstack 0
  9222                           
  9223 ;; *************** function _PWM6_Initialize *****************
  9224 ;; Defined at:
  9225 ;;		line 58 in file "mcc_generated_files/pwm6.c"
  9226 ;; Parameters:    Size  Location     Type
  9227 ;;		None
  9228 ;; Auto vars:     Size  Location     Type
  9229 ;;		None
  9230 ;; Return value:  Size  Location     Type
  9231 ;;                  1    wreg      void 
  9232 ;; Registers used:
  9233 ;;		wreg, status,2
  9234 ;; Tracked objects:
  9235 ;;		On entry : 0/0
  9236 ;;		On exit  : 0/0
  9237 ;;		Unchanged: 0/0
  9238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9242 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9243 ;;Total ram usage:        0 bytes
  9244 ;; Hardware stack levels used: 1
  9245 ;; Hardware stack levels required when called: 8
  9246 ;; This function calls:
  9247 ;;		Nothing
  9248 ;; This function is called by:
  9249 ;;		_SYSTEM_Initialize
  9250 ;; This function uses a non-reentrant model
  9251 ;;
  9252                           
  9253                           	psect	text52
  9254  003EE4                     __ptext52:
  9255                           	callstack 0
  9256  003EE4                     _PWM6_Initialize:
  9257                           	callstack 21
  9258  003EE4                     
  9259                           ;mcc_generated_files/pwm6.c: 62:     PWM6CON = 0x80;
  9260  003EE4  0E80               	movlw	128
  9261  003EE6  6E6A               	movwf	106,c	;volatile
  9262                           
  9263                           ;mcc_generated_files/pwm6.c: 65:     PWM6DCH = 0x59;
  9264  003EE8  0E59               	movlw	89
  9265  003EEA  6E69               	movwf	105,c	;volatile
  9266                           
  9267                           ;mcc_generated_files/pwm6.c: 68:     PWM6DCL = 0x40;
  9268  003EEC  0E40               	movlw	64
  9269  003EEE  6E68               	movwf	104,c	;volatile
  9270                           
  9271                           ;mcc_generated_files/pwm6.c: 71:     CCPTMRS1bits.P6TSEL = 1;
  9272  003EF0  013F               	movlb	63	; () banked
  9273  003EF2  515F               	movf	95,w,b	;volatile
  9274  003EF4  0BF3               	andlw	-13
  9275  003EF6  0904               	iorlw	4
  9276  003EF8  6F5F               	movwf	95,b	;volatile
  9277  003EFA                     
  9278                           ; BSR set to: 63
  9279  003EFA  0012               	return		;funcret
  9280  003EFC                     __end_of_PWM6_Initialize:
  9281                           	callstack 0
  9282                           
  9283 ;; *************** function _PWM5_Initialize *****************
  9284 ;; Defined at:
  9285 ;;		line 58 in file "mcc_generated_files/pwm5.c"
  9286 ;; Parameters:    Size  Location     Type
  9287 ;;		None
  9288 ;; Auto vars:     Size  Location     Type
  9289 ;;		None
  9290 ;; Return value:  Size  Location     Type
  9291 ;;                  1    wreg      void 
  9292 ;; Registers used:
  9293 ;;		wreg, status,2
  9294 ;; Tracked objects:
  9295 ;;		On entry : 0/0
  9296 ;;		On exit  : 0/0
  9297 ;;		Unchanged: 0/0
  9298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9302 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9303 ;;Total ram usage:        0 bytes
  9304 ;; Hardware stack levels used: 1
  9305 ;; Hardware stack levels required when called: 8
  9306 ;; This function calls:
  9307 ;;		Nothing
  9308 ;; This function is called by:
  9309 ;;		_SYSTEM_Initialize
  9310 ;; This function uses a non-reentrant model
  9311 ;;
  9312                           
  9313                           	psect	text53
  9314  003EFC                     __ptext53:
  9315                           	callstack 0
  9316  003EFC                     _PWM5_Initialize:
  9317                           	callstack 21
  9318  003EFC                     
  9319                           ;mcc_generated_files/pwm5.c: 62:     PWM5CON = 0x80;
  9320  003EFC  0E80               	movlw	128
  9321  003EFE  6E6E               	movwf	110,c	;volatile
  9322                           
  9323                           ;mcc_generated_files/pwm5.c: 65:     PWM5DCH = 0x59;
  9324  003F00  0E59               	movlw	89
  9325  003F02  6E6D               	movwf	109,c	;volatile
  9326                           
  9327                           ;mcc_generated_files/pwm5.c: 68:     PWM5DCL = 0x40;
  9328  003F04  0E40               	movlw	64
  9329  003F06  6E6C               	movwf	108,c	;volatile
  9330                           
  9331                           ;mcc_generated_files/pwm5.c: 71:     CCPTMRS1bits.P5TSEL = 1;
  9332  003F08  013F               	movlb	63	; () banked
  9333  003F0A  515F               	movf	95,w,b	;volatile
  9334  003F0C  0BFC               	andlw	-4
  9335  003F0E  0901               	iorlw	1
  9336  003F10  6F5F               	movwf	95,b	;volatile
  9337  003F12                     
  9338                           ; BSR set to: 63
  9339  003F12  0012               	return		;funcret
  9340  003F14                     __end_of_PWM5_Initialize:
  9341                           	callstack 0
  9342                           
  9343 ;; *************** function _PMD_Initialize *****************
  9344 ;; Defined at:
  9345 ;;		line 86 in file "mcc_generated_files/mcc.c"
  9346 ;; Parameters:    Size  Location     Type
  9347 ;;		None
  9348 ;; Auto vars:     Size  Location     Type
  9349 ;;		None
  9350 ;; Return value:  Size  Location     Type
  9351 ;;                  1    wreg      void 
  9352 ;; Registers used:
  9353 ;;		wreg, status,2
  9354 ;; Tracked objects:
  9355 ;;		On entry : 0/0
  9356 ;;		On exit  : 0/0
  9357 ;;		Unchanged: 0/0
  9358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9362 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9363 ;;Total ram usage:        0 bytes
  9364 ;; Hardware stack levels used: 1
  9365 ;; Hardware stack levels required when called: 8
  9366 ;; This function calls:
  9367 ;;		Nothing
  9368 ;; This function is called by:
  9369 ;;		_SYSTEM_Initialize
  9370 ;; This function uses a non-reentrant model
  9371 ;;
  9372                           
  9373                           	psect	text54
  9374  003E16                     __ptext54:
  9375                           	callstack 0
  9376  003E16                     _PMD_Initialize:
  9377                           	callstack 21
  9378  003E16                     
  9379                           ;mcc_generated_files/mcc.c: 89:     PMD0 = 0x00;
  9380  003E16  0E00               	movlw	0
  9381  003E18  0139               	movlb	57	; () banked
  9382  003E1A  6FC0               	movwf	192,b	;volatile
  9383                           
  9384                           ;mcc_generated_files/mcc.c: 91:     PMD1 = 0x00;
  9385  003E1C  0E00               	movlw	0
  9386  003E1E  6FC1               	movwf	193,b	;volatile
  9387                           
  9388                           ;mcc_generated_files/mcc.c: 93:     PMD2 = 0x00;
  9389  003E20  0E00               	movlw	0
  9390  003E22  6FC2               	movwf	194,b	;volatile
  9391                           
  9392                           ;mcc_generated_files/mcc.c: 95:     PMD3 = 0x00;
  9393  003E24  0E00               	movlw	0
  9394  003E26  6FC3               	movwf	195,b	;volatile
  9395                           
  9396                           ;mcc_generated_files/mcc.c: 97:     PMD4 = 0x00;
  9397  003E28  0E00               	movlw	0
  9398  003E2A  6FC4               	movwf	196,b	;volatile
  9399                           
  9400                           ;mcc_generated_files/mcc.c: 99:     PMD5 = 0x00;
  9401  003E2C  0E00               	movlw	0
  9402  003E2E  6FC5               	movwf	197,b	;volatile
  9403                           
  9404                           ;mcc_generated_files/mcc.c: 101:     PMD6 = 0x00;
  9405  003E30  0E00               	movlw	0
  9406  003E32  6FC6               	movwf	198,b	;volatile
  9407                           
  9408                           ;mcc_generated_files/mcc.c: 103:     PMD7 = 0x00;
  9409  003E34  0E00               	movlw	0
  9410  003E36  6FC7               	movwf	199,b	;volatile
  9411  003E38                     
  9412                           ; BSR set to: 57
  9413  003E38  0012               	return		;funcret
  9414  003E3A                     __end_of_PMD_Initialize:
  9415                           	callstack 0
  9416                           
  9417 ;; *************** function _PIN_MANAGER_Initialize *****************
  9418 ;; Defined at:
  9419 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  9420 ;; Parameters:    Size  Location     Type
  9421 ;;		None
  9422 ;; Auto vars:     Size  Location     Type
  9423 ;;		None
  9424 ;; Return value:  Size  Location     Type
  9425 ;;                  1    wreg      void 
  9426 ;; Registers used:
  9427 ;;		wreg, status,2
  9428 ;; Tracked objects:
  9429 ;;		On entry : 0/0
  9430 ;;		On exit  : 0/0
  9431 ;;		Unchanged: 0/0
  9432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9434 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9436 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9437 ;;Total ram usage:        0 bytes
  9438 ;; Hardware stack levels used: 1
  9439 ;; Hardware stack levels required when called: 8
  9440 ;; This function calls:
  9441 ;;		Nothing
  9442 ;; This function is called by:
  9443 ;;		_SYSTEM_Initialize
  9444 ;; This function uses a non-reentrant model
  9445 ;;
  9446                           
  9447                           	psect	text55
  9448  003032                     __ptext55:
  9449                           	callstack 0
  9450  003032                     _PIN_MANAGER_Initialize:
  9451                           	callstack 21
  9452  003032                     
  9453                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  9454  003032  0E00               	movlw	0
  9455  003034  6EBE               	movwf	190,c	;volatile
  9456                           
  9457                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  9458  003036  0E00               	movlw	0
  9459  003038  6EBD               	movwf	189,c	;volatile
  9460                           
  9461                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x24;
  9462  00303A  0E24               	movlw	36
  9463  00303C  6EBA               	movwf	186,c	;volatile
  9464                           
  9465                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  9466  00303E  0E00               	movlw	0
  9467  003040  6EBB               	movwf	187,c	;volatile
  9468                           
  9469                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  9470  003042  0E00               	movlw	0
  9471  003044  6EBC               	movwf	188,c	;volatile
  9472                           
  9473                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  9474  003046  0E07               	movlw	7
  9475  003048  6EC6               	movwf	198,c	;volatile
  9476                           
  9477                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xC0;
  9478  00304A  0EC0               	movlw	192
  9479  00304C  6EC2               	movwf	194,c	;volatile
  9480                           
  9481                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xF7;
  9482  00304E  0EF7               	movlw	247
  9483  003050  6EC3               	movwf	195,c	;volatile
  9484  003052                     
  9485                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xFF;
  9486  003052  68C4               	setf	196,c	;volatile
  9487  003054                     
  9488                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
  9489  003054  68C5               	setf	197,c	;volatile
  9490                           
  9491                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0x1F;
  9492  003056  0E1F               	movlw	31
  9493  003058  013A               	movlb	58	; () banked
  9494  00305A  6F70               	movwf	112,b	;volatile
  9495  00305C                     
  9496                           ; BSR set to: 58
  9497                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0xFF;
  9498  00305C  6960               	setf	96,b	;volatile
  9499                           
  9500                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0xC0;
  9501  00305E  0EC0               	movlw	192
  9502  003060  6F50               	movwf	80,b	;volatile
  9503                           
  9504                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
  9505  003062  0E07               	movlw	7
  9506  003064  6F80               	movwf	128,b	;volatile
  9507                           
  9508                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x7F;
  9509  003066  0E7F               	movlw	127
  9510  003068  6F40               	movwf	64,b	;volatile
  9511                           
  9512                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
  9513  00306A  0E00               	movlw	0
  9514  00306C  6F71               	movwf	113,b	;volatile
  9515                           
  9516                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
  9517  00306E  0E00               	movlw	0
  9518  003070  6F81               	movwf	129,b	;volatile
  9519                           
  9520                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
  9521  003072  0E00               	movlw	0
  9522  003074  6F51               	movwf	81,b	;volatile
  9523                           
  9524                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
  9525  003076  0E00               	movlw	0
  9526  003078  6F41               	movwf	65,b	;volatile
  9527                           
  9528                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
  9529  00307A  0E00               	movlw	0
  9530  00307C  6F61               	movwf	97,b	;volatile
  9531                           
  9532                           ;mcc_generated_files/pin_manager.c: 96:     RB1I2C = 0x00;
  9533  00307E  0E00               	movlw	0
  9534  003080  6F5A               	movwf	90,b	;volatile
  9535                           
  9536                           ;mcc_generated_files/pin_manager.c: 97:     RB2I2C = 0x00;
  9537  003082  0E00               	movlw	0
  9538  003084  6F5B               	movwf	91,b	;volatile
  9539                           
  9540                           ;mcc_generated_files/pin_manager.c: 98:     RC3I2C = 0x00;
  9541  003086  0E00               	movlw	0
  9542  003088  6F6A               	movwf	106,b	;volatile
  9543                           
  9544                           ;mcc_generated_files/pin_manager.c: 99:     RC4I2C = 0x00;
  9545  00308A  0E00               	movlw	0
  9546  00308C  6F6B               	movwf	107,b	;volatile
  9547                           
  9548                           ;mcc_generated_files/pin_manager.c: 100:     RD0I2C = 0x00;
  9549  00308E  0E00               	movlw	0
  9550  003090  6F7A               	movwf	122,b	;volatile
  9551                           
  9552                           ;mcc_generated_files/pin_manager.c: 101:     RD1I2C = 0x00;
  9553  003092  0E00               	movlw	0
  9554  003094  6F7B               	movwf	123,b	;volatile
  9555                           
  9556                           ;mcc_generated_files/pin_manager.c: 106:     ODCONE = 0x00;
  9557  003096  0E00               	movlw	0
  9558  003098  6F82               	movwf	130,b	;volatile
  9559                           
  9560                           ;mcc_generated_files/pin_manager.c: 107:     ODCONA = 0x00;
  9561  00309A  0E00               	movlw	0
  9562  00309C  6F42               	movwf	66,b	;volatile
  9563                           
  9564                           ;mcc_generated_files/pin_manager.c: 108:     ODCONB = 0x00;
  9565  00309E  0E00               	movlw	0
  9566  0030A0  6F52               	movwf	82,b	;volatile
  9567                           
  9568                           ;mcc_generated_files/pin_manager.c: 109:     ODCONC = 0x00;
  9569  0030A2  0E00               	movlw	0
  9570  0030A4  6F62               	movwf	98,b	;volatile
  9571                           
  9572                           ;mcc_generated_files/pin_manager.c: 110:     ODCOND = 0x00;
  9573  0030A6  0E00               	movlw	0
  9574  0030A8  6F72               	movwf	114,b	;volatile
  9575  0030AA                     
  9576                           ; BSR set to: 58
  9577                           ;mcc_generated_files/pin_manager.c: 115:     SLRCONA = 0xFF;
  9578  0030AA  6943               	setf	67,b	;volatile
  9579  0030AC                     
  9580                           ; BSR set to: 58
  9581                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONB = 0xFF;
  9582  0030AC  6953               	setf	83,b	;volatile
  9583  0030AE                     
  9584                           ; BSR set to: 58
  9585                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONC = 0xFF;
  9586  0030AE  6963               	setf	99,b	;volatile
  9587  0030B0                     
  9588                           ; BSR set to: 58
  9589                           ;mcc_generated_files/pin_manager.c: 118:     SLRCOND = 0xFF;
  9590  0030B0  6973               	setf	115,b	;volatile
  9591                           
  9592                           ;mcc_generated_files/pin_manager.c: 119:     SLRCONE = 0x07;
  9593  0030B2  0E07               	movlw	7
  9594  0030B4  6F83               	movwf	131,b	;volatile
  9595  0030B6                     
  9596                           ; BSR set to: 58
  9597                           ;mcc_generated_files/pin_manager.c: 124:     INLVLA = 0xFF;
  9598  0030B6  6944               	setf	68,b	;volatile
  9599  0030B8                     
  9600                           ; BSR set to: 58
  9601                           ;mcc_generated_files/pin_manager.c: 125:     INLVLB = 0xFF;
  9602  0030B8  6954               	setf	84,b	;volatile
  9603  0030BA                     
  9604                           ; BSR set to: 58
  9605                           ;mcc_generated_files/pin_manager.c: 126:     INLVLC = 0xFF;
  9606  0030BA  6964               	setf	100,b	;volatile
  9607  0030BC                     
  9608                           ; BSR set to: 58
  9609                           ;mcc_generated_files/pin_manager.c: 127:     INLVLD = 0xFF;
  9610  0030BC  6974               	setf	116,b	;volatile
  9611                           
  9612                           ;mcc_generated_files/pin_manager.c: 128:     INLVLE = 0x0F;
  9613  0030BE  0E0F               	movlw	15
  9614  0030C0  6F84               	movwf	132,b	;volatile
  9615                           
  9616                           ;mcc_generated_files/pin_manager.c: 137:     CCP3PPS = 0x1F;
  9617  0030C2  0E1F               	movlw	31
  9618  0030C4  6FCF               	movwf	207,b	;volatile
  9619                           
  9620                           ;mcc_generated_files/pin_manager.c: 138:     CLCIN3PPS = 0x09;
  9621  0030C6  0E09               	movlw	9
  9622  0030C8  6FDC               	movwf	220,b	;volatile
  9623                           
  9624                           ;mcc_generated_files/pin_manager.c: 139:     RA1PPS = 0x0E;
  9625  0030CA  0E0E               	movlw	14
  9626  0030CC  6F01               	movwf	1,b	;volatile
  9627                           
  9628                           ;mcc_generated_files/pin_manager.c: 140:     U1RXPPS = 0x0A;
  9629  0030CE  0E0A               	movlw	10
  9630  0030D0  6FE5               	movwf	229,b	;volatile
  9631                           
  9632                           ;mcc_generated_files/pin_manager.c: 141:     RA0PPS = 0x0D;
  9633  0030D2  0E0D               	movlw	13
  9634  0030D4  6F00               	movwf	0,b	;volatile
  9635                           
  9636                           ;mcc_generated_files/pin_manager.c: 142:     T5GPPS = 0x1D;
  9637  0030D6  0E1D               	movlw	29
  9638  0030D8  6FC9               	movwf	201,b	;volatile
  9639                           
  9640                           ;mcc_generated_files/pin_manager.c: 143:     RA4PPS = 0x10;
  9641  0030DA  0E10               	movlw	16
  9642  0030DC  6F04               	movwf	4,b	;volatile
  9643                           
  9644                           ;mcc_generated_files/pin_manager.c: 144:     CLCIN0PPS = 0x07;
  9645  0030DE  0E07               	movlw	7
  9646  0030E0  6FD9               	movwf	217,b	;volatile
  9647                           
  9648                           ;mcc_generated_files/pin_manager.c: 145:     SMT1WINPPS = 0x09;
  9649  0030E2  0E09               	movlw	9
  9650  0030E4  6FD1               	movwf	209,b	;volatile
  9651                           
  9652                           ;mcc_generated_files/pin_manager.c: 146:     RA3PPS = 0x0F;
  9653  0030E6  0E0F               	movlw	15
  9654  0030E8  6F03               	movwf	3,b	;volatile
  9655                           
  9656                           ;mcc_generated_files/pin_manager.c: 147:     RB3PPS = 0x13;
  9657  0030EA  0E13               	movlw	19
  9658  0030EC  6F0B               	movwf	11,b	;volatile
  9659                           
  9660                           ;mcc_generated_files/pin_manager.c: 148:     CLCIN2PPS = 0x08;
  9661  0030EE  0E08               	movlw	8
  9662  0030F0  6FDB               	movwf	219,b	;volatile
  9663                           
  9664                           ;mcc_generated_files/pin_manager.c: 149:     SMT1SIGPPS = 0x08;
  9665  0030F2  0E08               	movlw	8
  9666  0030F4  6FD2               	movwf	210,b	;volatile
  9667                           
  9668                           ;mcc_generated_files/pin_manager.c: 150:     CCP4PPS = 0x1E;
  9669  0030F6  0E1E               	movlw	30
  9670  0030F8  6FD0               	movwf	208,b	;volatile
  9671  0030FA                     
  9672                           ; BSR set to: 58
  9673  0030FA  0012               	return		;funcret
  9674  0030FC                     __end_of_PIN_MANAGER_Initialize:
  9675                           	callstack 0
  9676                           
  9677 ;; *************** function _OSCILLATOR_Initialize *****************
  9678 ;; Defined at:
  9679 ;;		line 72 in file "mcc_generated_files/mcc.c"
  9680 ;; Parameters:    Size  Location     Type
  9681 ;;		None
  9682 ;; Auto vars:     Size  Location     Type
  9683 ;;		None
  9684 ;; Return value:  Size  Location     Type
  9685 ;;                  1    wreg      void 
  9686 ;; Registers used:
  9687 ;;		wreg, status,2
  9688 ;; Tracked objects:
  9689 ;;		On entry : 0/0
  9690 ;;		On exit  : 0/0
  9691 ;;		Unchanged: 0/0
  9692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9696 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9697 ;;Total ram usage:        0 bytes
  9698 ;; Hardware stack levels used: 1
  9699 ;; Hardware stack levels required when called: 8
  9700 ;; This function calls:
  9701 ;;		Nothing
  9702 ;; This function is called by:
  9703 ;;		_SYSTEM_Initialize
  9704 ;; This function uses a non-reentrant model
  9705 ;;
  9706                           
  9707                           	psect	text56
  9708  003F14                     __ptext56:
  9709                           	callstack 0
  9710  003F14                     _OSCILLATOR_Initialize:
  9711                           	callstack 21
  9712  003F14                     
  9713                           ;mcc_generated_files/mcc.c: 75:     OSCCON1 = 0x60;
  9714  003F14  0E60               	movlw	96
  9715  003F16  0139               	movlb	57	; () banked
  9716  003F18  6FD9               	movwf	217,b	;volatile
  9717                           
  9718                           ;mcc_generated_files/mcc.c: 77:     OSCCON3 = 0x00;
  9719  003F1A  0E00               	movlw	0
  9720  003F1C  6FDB               	movwf	219,b	;volatile
  9721                           
  9722                           ;mcc_generated_files/mcc.c: 79:     OSCEN = 0x00;
  9723  003F1E  0E00               	movlw	0
  9724  003F20  6FDD               	movwf	221,b	;volatile
  9725                           
  9726                           ;mcc_generated_files/mcc.c: 81:     OSCFRQ = 0x08;
  9727  003F22  0E08               	movlw	8
  9728  003F24  6FDF               	movwf	223,b	;volatile
  9729                           
  9730                           ;mcc_generated_files/mcc.c: 83:     OSCTUNE = 0x00;
  9731  003F26  0E00               	movlw	0
  9732  003F28  6FDE               	movwf	222,b	;volatile
  9733  003F2A                     
  9734                           ; BSR set to: 57
  9735  003F2A  0012               	return		;funcret
  9736  003F2C                     __end_of_OSCILLATOR_Initialize:
  9737                           	callstack 0
  9738                           
  9739 ;; *************** function _INTERRUPT_Initialize *****************
  9740 ;; Defined at:
  9741 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  9742 ;; Parameters:    Size  Location     Type
  9743 ;;		None
  9744 ;; Auto vars:     Size  Location     Type
  9745 ;;  state           1   19[COMRAM] _Bool 
  9746 ;; Return value:  Size  Location     Type
  9747 ;;                  1    wreg      void 
  9748 ;; Registers used:
  9749 ;;		wreg, status,2
  9750 ;; Tracked objects:
  9751 ;;		On entry : 0/0
  9752 ;;		On exit  : 0/0
  9753 ;;		Unchanged: 0/0
  9754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9756 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9758 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9759 ;;Total ram usage:        1 bytes
  9760 ;; Hardware stack levels used: 1
  9761 ;; Hardware stack levels required when called: 8
  9762 ;; This function calls:
  9763 ;;		Nothing
  9764 ;; This function is called by:
  9765 ;;		_SYSTEM_Initialize
  9766 ;; This function uses a non-reentrant model
  9767 ;;
  9768                           
  9769                           	psect	text57
  9770  0036EC                     __ptext57:
  9771                           	callstack 0
  9772  0036EC                     _INTERRUPT_Initialize:
  9773                           	callstack 21
  9774  0036EC                     
  9775                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
  9776  0036EC  8AD2               	bsf	210,5,c	;volatile
  9777  0036EE                     
  9778                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
  9779  0036EE  0E00               	movlw	0
  9780  0036F0  BED2               	btfsc	16338,7,c	;volatile
  9781  0036F2  0E01               	movlw	1
  9782  0036F4  6E14               	movwf	INTERRUPT_Initialize@state^0,c
  9783  0036F6                     
  9784                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
  9785  0036F6  9ED2               	bcf	16338,7,c	;volatile
  9786                           
  9787                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
  9788  0036F8  0E55               	movlw	85
  9789  0036FA  6ED4               	movwf	212,c	;volatile
  9790                           
  9791                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
  9792  0036FC  0EAA               	movlw	170
  9793  0036FE  6ED4               	movwf	212,c	;volatile
  9794  003700                     
  9795                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
  9796  003700  90D4               	bcf	212,0,c	;volatile
  9797                           
  9798                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTBASEU = 0;
  9799  003702  0E00               	movlw	0
  9800  003704  6ED7               	movwf	215,c	;volatile
  9801                           
  9802                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTBASEH = 0;
  9803  003706  0E00               	movlw	0
  9804  003708  6ED6               	movwf	214,c	;volatile
  9805                           
  9806                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTBASEL = 8;
  9807  00370A  0E08               	movlw	8
  9808  00370C  6ED5               	movwf	213,c	;volatile
  9809                           
  9810                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
  9811  00370E  0E55               	movlw	85
  9812  003710  6ED4               	movwf	212,c	;volatile
  9813                           
  9814                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
  9815  003712  0EAA               	movlw	170
  9816  003714  6ED4               	movwf	212,c	;volatile
  9817  003716                     
  9818                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
  9819  003716  80D4               	bsf	212,0,c	;volatile
  9820  003718                     
  9821                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
  9822  003718  B014               	btfsc	INTERRUPT_Initialize@state^0,0,c
  9823  00371A  D002               	bra	u1525
  9824  00371C  9ED2               	bcf	16338,7,c	;volatile
  9825  00371E  D001               	bra	u1526
  9826  003720                     u1525:
  9827  003720  8ED2               	bsf	16338,7,c	;volatile
  9828  003722                     u1526:
  9829  003722                     
  9830                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR3bits.U1TXIP = 0;
  9831  003722  0139               	movlb	57	; () banked
  9832  003724  9983               	bcf	131,4,b	;volatile
  9833  003726                     
  9834                           ; BSR set to: 57
  9835                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR3bits.U1RXIP = 0;
  9836  003726  9783               	bcf	131,3,b	;volatile
  9837  003728                     
  9838                           ; BSR set to: 57
  9839                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR1bits.SMT1PWAIP = 1;
  9840  003728  8F81               	bsf	129,7,b	;volatile
  9841  00372A                     
  9842                           ; BSR set to: 57
  9843                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR1bits.SMT1IP = 1;
  9844  00372A  8B81               	bsf	129,5,b	;volatile
  9845  00372C                     
  9846                           ; BSR set to: 57
  9847                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR1bits.SMT1PRAIP = 1;
  9848  00372C  8D81               	bsf	129,6,b	;volatile
  9849  00372E                     
  9850                           ; BSR set to: 57
  9851                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR8bits.TMR5GIP = 1;
  9852  00372E  8F88               	bsf	136,7,b	;volatile
  9853  003730                     
  9854                           ; BSR set to: 57
  9855                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR10bits.CCP4IP = 1;
  9856  003730  818A               	bsf	138,0,b	;volatile
  9857  003732                     
  9858                           ; BSR set to: 57
  9859                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR7bits.TMR4IP = 0;
  9860  003732  9187               	bcf	135,0,b	;volatile
  9861  003734                     
  9862                           ; BSR set to: 57
  9863                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR9bits.CCP3IP = 1;
  9864  003734  8389               	bsf	137,1,b	;volatile
  9865  003736                     
  9866                           ; BSR set to: 57
  9867  003736  0012               	return		;funcret
  9868  003738                     __end_of_INTERRUPT_Initialize:
  9869                           	callstack 0
  9870                           
  9871 ;; *************** function _CLC3_Initialize *****************
  9872 ;; Defined at:
  9873 ;;		line 58 in file "mcc_generated_files/clc3.c"
  9874 ;; Parameters:    Size  Location     Type
  9875 ;;		None
  9876 ;; Auto vars:     Size  Location     Type
  9877 ;;		None
  9878 ;; Return value:  Size  Location     Type
  9879 ;;                  1    wreg      void 
  9880 ;; Registers used:
  9881 ;;		wreg, status,2
  9882 ;; Tracked objects:
  9883 ;;		On entry : 0/0
  9884 ;;		On exit  : 0/0
  9885 ;;		Unchanged: 0/0
  9886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9890 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9891 ;;Total ram usage:        0 bytes
  9892 ;; Hardware stack levels used: 1
  9893 ;; Hardware stack levels required when called: 8
  9894 ;; This function calls:
  9895 ;;		Nothing
  9896 ;; This function is called by:
  9897 ;;		_SYSTEM_Initialize
  9898 ;; This function uses a non-reentrant model
  9899 ;;
  9900                           
  9901                           	psect	text58
  9902  003D1C                     __ptext58:
  9903                           	callstack 0
  9904  003D1C                     _CLC3_Initialize:
  9905                           	callstack 21
  9906  003D1C                     
  9907                           ;mcc_generated_files/clc3.c: 63:     CLC3POL = 0x00;
  9908  003D1C  0E00               	movlw	0
  9909  003D1E  013C               	movlb	60	; () banked
  9910  003D20  6F61               	movwf	97,b	;volatile
  9911                           
  9912                           ;mcc_generated_files/clc3.c: 65:     CLC3SEL0 = 0x03;
  9913  003D22  0E03               	movlw	3
  9914  003D24  6F62               	movwf	98,b	;volatile
  9915                           
  9916                           ;mcc_generated_files/clc3.c: 67:     CLC3SEL1 = 0x02;
  9917  003D26  0E02               	movlw	2
  9918  003D28  6F63               	movwf	99,b	;volatile
  9919                           
  9920                           ;mcc_generated_files/clc3.c: 69:     CLC3SEL2 = 0x00;
  9921  003D2A  0E00               	movlw	0
  9922  003D2C  6F64               	movwf	100,b	;volatile
  9923                           
  9924                           ;mcc_generated_files/clc3.c: 71:     CLC3SEL3 = 0x00;
  9925  003D2E  0E00               	movlw	0
  9926  003D30  6F65               	movwf	101,b	;volatile
  9927                           
  9928                           ;mcc_generated_files/clc3.c: 73:     CLC3GLS0 = 0x02;
  9929  003D32  0E02               	movlw	2
  9930  003D34  6F66               	movwf	102,b	;volatile
  9931                           
  9932                           ;mcc_generated_files/clc3.c: 75:     CLC3GLS1 = 0x08;
  9933  003D36  0E08               	movlw	8
  9934  003D38  6F67               	movwf	103,b	;volatile
  9935                           
  9936                           ;mcc_generated_files/clc3.c: 77:     CLC3GLS2 = 0x00;
  9937  003D3A  0E00               	movlw	0
  9938  003D3C  6F68               	movwf	104,b	;volatile
  9939                           
  9940                           ;mcc_generated_files/clc3.c: 79:     CLC3GLS3 = 0x00;
  9941  003D3E  0E00               	movlw	0
  9942  003D40  6F69               	movwf	105,b	;volatile
  9943                           
  9944                           ;mcc_generated_files/clc3.c: 81:     CLC3CON = 0x85;
  9945  003D42  0E85               	movlw	133
  9946  003D44  6F60               	movwf	96,b	;volatile
  9947  003D46                     
  9948                           ; BSR set to: 60
  9949  003D46  0012               	return		;funcret
  9950  003D48                     __end_of_CLC3_Initialize:
  9951                           	callstack 0
  9952                           
  9953 ;; *************** function _CCP4_Initialize *****************
  9954 ;; Defined at:
  9955 ;;		line 126 in file "mcc_generated_files/ccp4.c"
  9956 ;; Parameters:    Size  Location     Type
  9957 ;;		None
  9958 ;; Auto vars:     Size  Location     Type
  9959 ;;		None
  9960 ;; Return value:  Size  Location     Type
  9961 ;;                  1    wreg      void 
  9962 ;; Registers used:
  9963 ;;		wreg, status,2, status,0, cstack
  9964 ;; Tracked objects:
  9965 ;;		On entry : 0/0
  9966 ;;		On exit  : 0/0
  9967 ;;		Unchanged: 0/0
  9968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9972 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9973 ;;Total ram usage:        0 bytes
  9974 ;; Hardware stack levels used: 1
  9975 ;; Hardware stack levels required when called: 9
  9976 ;; This function calls:
  9977 ;;		_CCP4_SetCallBack
  9978 ;; This function is called by:
  9979 ;;		_SYSTEM_Initialize
  9980 ;; This function uses a non-reentrant model
  9981 ;;
  9982                           
  9983                           	psect	text59
  9984  003C66                     __ptext59:
  9985                           	callstack 0
  9986  003C66                     _CCP4_Initialize:
  9987                           	callstack 20
  9988  003C66                     
  9989                           ;mcc_generated_files/ccp4.c: 130:  CCP4CON = 0x83;
  9990  003C66  0E83               	movlw	131
  9991  003C68  6E72               	movwf	114,c	;volatile
  9992                           
  9993                           ;mcc_generated_files/ccp4.c: 132:  CCP4CAP = 0x00;
  9994  003C6A  0E00               	movlw	0
  9995  003C6C  6E73               	movwf	115,c	;volatile
  9996                           
  9997                           ;mcc_generated_files/ccp4.c: 134:  CCPR4H = 0x00;
  9998  003C6E  0E00               	movlw	0
  9999  003C70  6E71               	movwf	113,c	;volatile
 10000                           
 10001                           ;mcc_generated_files/ccp4.c: 136:  CCPR4L = 0x00;
 10002  003C72  0E00               	movlw	0
 10003  003C74  6E70               	movwf	112,c	;volatile
 10004  003C76                     
 10005                           ;mcc_generated_files/ccp4.c: 138:     CCP4_SetCallBack(CCP4_DefaultCallBack);
 10006  003C76  0E36               	movlw	low _CCP4_DefaultCallBack
 10007  003C78  6E14               	movwf	CCP4_SetCallBack@customCallBack^0,c
 10008  003C7A  0E3C               	movlw	high _CCP4_DefaultCallBack
 10009  003C7C  6E15               	movwf	(CCP4_SetCallBack@customCallBack+1)^0,c
 10010  003C7E  ECC5  F01F         	call	_CCP4_SetCallBack	;wreg free
 10011  003C82                     
 10012                           ;mcc_generated_files/ccp4.c: 141:  CCPTMRS0bits.C4TSEL = 0x2;
 10013  003C82  013F               	movlb	63	; () banked
 10014  003C84  515E               	movf	94,w,b	;volatile
 10015  003C86  0B3F               	andlw	-193
 10016  003C88  0980               	iorlw	128
 10017  003C8A  6F5E               	movwf	94,b	;volatile
 10018  003C8C                     
 10019                           ; BSR set to: 63
 10020                           ;mcc_generated_files/ccp4.c: 143:     PIR10bits.CCP4IF = 0;
 10021  003C8C  0139               	movlb	57	; () banked
 10022  003C8E  91AA               	bcf	170,0,b	;volatile
 10023  003C90                     
 10024                           ; BSR set to: 57
 10025                           ;mcc_generated_files/ccp4.c: 146:     PIE10bits.CCP4IE = 1;
 10026  003C90  819A               	bsf	154,0,b	;volatile
 10027  003C92                     
 10028                           ; BSR set to: 57
 10029  003C92  0012               	return		;funcret
 10030  003C94                     __end_of_CCP4_Initialize:
 10031                           	callstack 0
 10032                           
 10033 ;; *************** function _CCP4_SetCallBack *****************
 10034 ;; Defined at:
 10035 ;;		line 123 in file "mcc_generated_files/ccp4.c"
 10036 ;; Parameters:    Size  Location     Type
 10037 ;;  customCallBa    2   19[COMRAM] PTR FTN(unsigned short ,
 10038 ;;		 -> CCP4_DefaultCallBack(1), 
 10039 ;; Auto vars:     Size  Location     Type
 10040 ;;		None
 10041 ;; Return value:  Size  Location     Type
 10042 ;;                  1    wreg      void 
 10043 ;; Registers used:
 10044 ;;		wreg, status,2, status,0
 10045 ;; Tracked objects:
 10046 ;;		On entry : 0/0
 10047 ;;		On exit  : 0/0
 10048 ;;		Unchanged: 0/0
 10049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10050 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10053 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10054 ;;Total ram usage:        2 bytes
 10055 ;; Hardware stack levels used: 1
 10056 ;; Hardware stack levels required when called: 8
 10057 ;; This function calls:
 10058 ;;		Nothing
 10059 ;; This function is called by:
 10060 ;;		_CCP4_Initialize
 10061 ;; This function uses a non-reentrant model
 10062 ;;
 10063                           
 10064                           	psect	text60
 10065  003F8A                     __ptext60:
 10066                           	callstack 0
 10067  003F8A                     _CCP4_SetCallBack:
 10068                           	callstack 20
 10069  003F8A                     
 10070                           ;mcc_generated_files/ccp4.c: 124:     CCP4_CallBack = customCallBack;
 10071  003F8A  C014  F0E2         	movff	CCP4_SetCallBack@customCallBack,_CCP4_CallBack
 10072  003F8E  C015  F0E3         	movff	CCP4_SetCallBack@customCallBack+1,_CCP4_CallBack+1
 10073  003F92  0012               	return		;funcret
 10074  003F94                     __end_of_CCP4_SetCallBack:
 10075                           	callstack 0
 10076                           
 10077 ;; *************** function _CCP3_Initialize *****************
 10078 ;; Defined at:
 10079 ;;		line 74 in file "mcc_generated_files/ccp3.c"
 10080 ;; Parameters:    Size  Location     Type
 10081 ;;		None
 10082 ;; Auto vars:     Size  Location     Type
 10083 ;;		None
 10084 ;; Return value:  Size  Location     Type
 10085 ;;                  1    wreg      void 
 10086 ;; Registers used:
 10087 ;;		wreg, status,2, status,0, cstack
 10088 ;; Tracked objects:
 10089 ;;		On entry : 0/0
 10090 ;;		On exit  : 0/0
 10091 ;;		Unchanged: 0/0
 10092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10096 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10097 ;;Total ram usage:        0 bytes
 10098 ;; Hardware stack levels used: 1
 10099 ;; Hardware stack levels required when called: 9
 10100 ;; This function calls:
 10101 ;;		_CCP3_SetCallBack
 10102 ;; This function is called by:
 10103 ;;		_SYSTEM_Initialize
 10104 ;; This function uses a non-reentrant model
 10105 ;;
 10106                           
 10107                           	psect	text61
 10108  003C94                     __ptext61:
 10109                           	callstack 0
 10110  003C94                     _CCP3_Initialize:
 10111                           	callstack 20
 10112  003C94                     
 10113                           ;mcc_generated_files/ccp3.c: 78:  CCP3CON = 0x83;
 10114  003C94  0E83               	movlw	131
 10115  003C96  6E76               	movwf	118,c	;volatile
 10116                           
 10117                           ;mcc_generated_files/ccp3.c: 80:  CCP3CAP = 0x00;
 10118  003C98  0E00               	movlw	0
 10119  003C9A  6E77               	movwf	119,c	;volatile
 10120                           
 10121                           ;mcc_generated_files/ccp3.c: 82:  CCPR3H = 0x00;
 10122  003C9C  0E00               	movlw	0
 10123  003C9E  6E75               	movwf	117,c	;volatile
 10124                           
 10125                           ;mcc_generated_files/ccp3.c: 84:  CCPR3L = 0x00;
 10126  003CA0  0E00               	movlw	0
 10127  003CA2  6E74               	movwf	116,c	;volatile
 10128  003CA4                     
 10129                           ;mcc_generated_files/ccp3.c: 86:     CCP3_SetCallBack(CCP3_DefaultCallBack);
 10130  003CA4  0E06               	movlw	low _CCP3_DefaultCallBack
 10131  003CA6  6E14               	movwf	CCP3_SetCallBack@customCallBack^0,c
 10132  003CA8  0E3C               	movlw	high _CCP3_DefaultCallBack
 10133  003CAA  6E15               	movwf	(CCP3_SetCallBack@customCallBack+1)^0,c
 10134  003CAC  ECCA  F01F         	call	_CCP3_SetCallBack	;wreg free
 10135  003CB0                     
 10136                           ;mcc_generated_files/ccp3.c: 89:  CCPTMRS0bits.C3TSEL = 0x2;
 10137  003CB0  013F               	movlb	63	; () banked
 10138  003CB2  515E               	movf	94,w,b	;volatile
 10139  003CB4  0BCF               	andlw	-49
 10140  003CB6  0920               	iorlw	32
 10141  003CB8  6F5E               	movwf	94,b	;volatile
 10142  003CBA                     
 10143                           ; BSR set to: 63
 10144                           ;mcc_generated_files/ccp3.c: 91:     PIR9bits.CCP3IF = 0;
 10145  003CBA  0139               	movlb	57	; () banked
 10146  003CBC  93A9               	bcf	169,1,b	;volatile
 10147  003CBE                     
 10148                           ; BSR set to: 57
 10149                           ;mcc_generated_files/ccp3.c: 94:     PIE9bits.CCP3IE = 1;
 10150  003CBE  8399               	bsf	153,1,b	;volatile
 10151  003CC0                     
 10152                           ; BSR set to: 57
 10153  003CC0  0012               	return		;funcret
 10154  003CC2                     __end_of_CCP3_Initialize:
 10155                           	callstack 0
 10156                           
 10157 ;; *************** function _CCP3_SetCallBack *****************
 10158 ;; Defined at:
 10159 ;;		line 110 in file "mcc_generated_files/ccp3.c"
 10160 ;; Parameters:    Size  Location     Type
 10161 ;;  customCallBa    2   19[COMRAM] PTR FTN(unsigned short ,
 10162 ;;		 -> CCP3_DefaultCallBack(1), 
 10163 ;; Auto vars:     Size  Location     Type
 10164 ;;		None
 10165 ;; Return value:  Size  Location     Type
 10166 ;;                  1    wreg      void 
 10167 ;; Registers used:
 10168 ;;		wreg, status,2, status,0
 10169 ;; Tracked objects:
 10170 ;;		On entry : 0/0
 10171 ;;		On exit  : 0/0
 10172 ;;		Unchanged: 0/0
 10173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10174 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10177 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10178 ;;Total ram usage:        2 bytes
 10179 ;; Hardware stack levels used: 1
 10180 ;; Hardware stack levels required when called: 8
 10181 ;; This function calls:
 10182 ;;		Nothing
 10183 ;; This function is called by:
 10184 ;;		_CCP3_Initialize
 10185 ;; This function uses a non-reentrant model
 10186 ;;
 10187                           
 10188                           	psect	text62
 10189  003F94                     __ptext62:
 10190                           	callstack 0
 10191  003F94                     _CCP3_SetCallBack:
 10192                           	callstack 20
 10193  003F94                     
 10194                           ;mcc_generated_files/ccp3.c: 111:     CCP3_CallBack = customCallBack;
 10195  003F94  C014  F0E4         	movff	CCP3_SetCallBack@customCallBack,_CCP3_CallBack
 10196  003F98  C015  F0E5         	movff	CCP3_SetCallBack@customCallBack+1,_CCP3_CallBack+1
 10197  003F9C  0012               	return		;funcret
 10198  003F9E                     __end_of_CCP3_SetCallBack:
 10199                           	callstack 0
 10200                           
 10201 ;; *************** function _ADCC_Initialize *****************
 10202 ;; Defined at:
 10203 ;;		line 62 in file "mcc_generated_files/adcc.c"
 10204 ;; Parameters:    Size  Location     Type
 10205 ;;		None
 10206 ;; Auto vars:     Size  Location     Type
 10207 ;;		None
 10208 ;; Return value:  Size  Location     Type
 10209 ;;                  1    wreg      void 
 10210 ;; Registers used:
 10211 ;;		wreg, status,2
 10212 ;; Tracked objects:
 10213 ;;		On entry : 0/0
 10214 ;;		On exit  : 0/0
 10215 ;;		Unchanged: 0/0
 10216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10220 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10221 ;;Total ram usage:        0 bytes
 10222 ;; Hardware stack levels used: 1
 10223 ;; Hardware stack levels required when called: 8
 10224 ;; This function calls:
 10225 ;;		Nothing
 10226 ;; This function is called by:
 10227 ;;		_SYSTEM_Initialize
 10228 ;; This function uses a non-reentrant model
 10229 ;;
 10230                           
 10231                           	psect	text63
 10232  00363C                     __ptext63:
 10233                           	callstack 0
 10234  00363C                     _ADCC_Initialize:
 10235                           	callstack 21
 10236  00363C                     
 10237                           ;mcc_generated_files/adcc.c: 66:     ADLTHL = 0x00;
 10238  00363C  0E00               	movlw	0
 10239  00363E  013E               	movlb	62	; () banked
 10240  003640  6FDE               	movwf	222,b	;volatile
 10241                           
 10242                           ;mcc_generated_files/adcc.c: 68:     ADLTHH = 0x00;
 10243  003642  0E00               	movlw	0
 10244  003644  6FDF               	movwf	223,b	;volatile
 10245                           
 10246                           ;mcc_generated_files/adcc.c: 70:     ADUTHL = 0x00;
 10247  003646  0E00               	movlw	0
 10248  003648  6FE0               	movwf	224,b	;volatile
 10249                           
 10250                           ;mcc_generated_files/adcc.c: 72:     ADUTHH = 0x00;
 10251  00364A  0E00               	movlw	0
 10252  00364C  6FE1               	movwf	225,b	;volatile
 10253                           
 10254                           ;mcc_generated_files/adcc.c: 74:     ADSTPTL = 0x00;
 10255  00364E  0E00               	movlw	0
 10256  003650  6FE4               	movwf	228,b	;volatile
 10257                           
 10258                           ;mcc_generated_files/adcc.c: 76:     ADSTPTH = 0x00;
 10259  003652  0E00               	movlw	0
 10260  003654  6FE5               	movwf	229,b	;volatile
 10261                           
 10262                           ;mcc_generated_files/adcc.c: 78:     ADACCU = 0x00;
 10263  003656  0E00               	movlw	0
 10264  003658  6FEA               	movwf	234,b	;volatile
 10265                           
 10266                           ;mcc_generated_files/adcc.c: 80:     ADRPT = 0x00;
 10267  00365A  0E00               	movlw	0
 10268  00365C  6FEC               	movwf	236,b	;volatile
 10269                           
 10270                           ;mcc_generated_files/adcc.c: 82:     ADPCH = 0x00;
 10271  00365E  0E00               	movlw	0
 10272  003660  6FF1               	movwf	241,b	;volatile
 10273                           
 10274                           ;mcc_generated_files/adcc.c: 84:     ADACQL = 0x58;
 10275  003662  0E58               	movlw	88
 10276  003664  6FF3               	movwf	243,b	;volatile
 10277                           
 10278                           ;mcc_generated_files/adcc.c: 86:     ADACQH = 0x02;
 10279  003666  0E02               	movlw	2
 10280  003668  6FF4               	movwf	244,b	;volatile
 10281                           
 10282                           ;mcc_generated_files/adcc.c: 88:     ADCAP = 0x00;
 10283  00366A  0E00               	movlw	0
 10284  00366C  6FF5               	movwf	245,b	;volatile
 10285                           
 10286                           ;mcc_generated_files/adcc.c: 90:     ADPREL = 0x00;
 10287  00366E  0E00               	movlw	0
 10288  003670  6FF6               	movwf	246,b	;volatile
 10289                           
 10290                           ;mcc_generated_files/adcc.c: 92:     ADPREH = 0x00;
 10291  003672  0E00               	movlw	0
 10292  003674  6FF7               	movwf	247,b	;volatile
 10293                           
 10294                           ;mcc_generated_files/adcc.c: 94:     ADCON1 = 0x00;
 10295  003676  0E00               	movlw	0
 10296  003678  6FF9               	movwf	249,b	;volatile
 10297                           
 10298                           ;mcc_generated_files/adcc.c: 96:     ADCON2 = 0x00;
 10299  00367A  0E00               	movlw	0
 10300  00367C  6FFA               	movwf	250,b	;volatile
 10301                           
 10302                           ;mcc_generated_files/adcc.c: 98:     ADCON3 = 0x00;
 10303  00367E  0E00               	movlw	0
 10304  003680  6FFB               	movwf	251,b	;volatile
 10305                           
 10306                           ;mcc_generated_files/adcc.c: 100:     ADSTAT = 0x00;
 10307  003682  0E00               	movlw	0
 10308  003684  6FFC               	movwf	252,b	;volatile
 10309                           
 10310                           ;mcc_generated_files/adcc.c: 102:     ADREF = 0x00;
 10311  003686  0E00               	movlw	0
 10312  003688  6FFD               	movwf	253,b	;volatile
 10313                           
 10314                           ;mcc_generated_files/adcc.c: 104:     ADACT = 0x00;
 10315  00368A  0E00               	movlw	0
 10316  00368C  6FFE               	movwf	254,b	;volatile
 10317                           
 10318                           ;mcc_generated_files/adcc.c: 106:     ADCLK = 0x1F;
 10319  00368E  0E1F               	movlw	31
 10320  003690  6FFF               	movwf	255,b	;volatile
 10321                           
 10322                           ;mcc_generated_files/adcc.c: 108:     ADCON0 = 0x84;
 10323  003692  0E84               	movlw	132
 10324  003694  6FF8               	movwf	248,b	;volatile
 10325  003696                     
 10326                           ; BSR set to: 62
 10327  003696  0012               	return		;funcret
 10328  003698                     __end_of_ADCC_Initialize:
 10329                           	callstack 0
 10330                           
 10331 ;; *************** function _UART1_tx_vect_isr *****************
 10332 ;; Defined at:
 10333 ;;		line 235 in file "mcc_generated_files/uart1.c"
 10334 ;; Parameters:    Size  Location     Type
 10335 ;;		None
 10336 ;; Auto vars:     Size  Location     Type
 10337 ;;		None
 10338 ;; Return value:  Size  Location     Type
 10339 ;;                  1    wreg      void 
 10340 ;; Registers used:
 10341 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 10342 ;; Tracked objects:
 10343 ;;		On entry : 0/0
 10344 ;;		On exit  : 0/0
 10345 ;;		Unchanged: 0/0
 10346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10349 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10350 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10351 ;;Total ram usage:        1 bytes
 10352 ;; Hardware stack levels used: 1
 10353 ;; Hardware stack levels required when called: 5
 10354 ;; This function calls:
 10355 ;;		Absolute function
 10356 ;;		_UART1_Transmit_ISR
 10357 ;; This function is called by:
 10358 ;;		Interrupt level 1
 10359 ;; This function uses a non-reentrant model
 10360 ;;
 10361                           
 10362                           	psect	text64
 10363  003918                     __ptext64:
 10364                           	callstack 0
 10365  003918                     _UART1_tx_vect_isr:
 10366                           	callstack 14
 10367                           
 10368                           ; BSR set to: 62
 10369                           ;incstack = 0
 10370  003918  006F FF60  F011    	movff	status,??_UART1_tx_vect_isr
 10371  00391E                     
 10372                           ;mcc_generated_files/uart1.c: 237:     if(UART1_TxInterruptHandler)
 10373  00391E  0100               	movlb	0	; () banked
 10374  003920  51F4               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 10375  003922  11F5               	iorwf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 10376  003924  B4D8               	btfsc	status,2,c
 10377  003926  EF97  F01C         	goto	i1u421_21
 10378  00392A  EF99  F01C         	goto	i1u421_20
 10379  00392E                     i1u421_21:
 10380  00392E  EFA5  F01C         	goto	i1l324
 10381  003932                     i1u421_20:
 10382  003932                     
 10383                           ; BSR set to: 0
 10384                           ;mcc_generated_files/uart1.c: 238:     {;mcc_generated_files/uart1.c: 239:         UART1
      +                          _TxInterruptHandler();
 10385  003932  D802               	call	i1u422_28
 10386  003934  EFA5  F01C         	goto	i1u422_29
 10387  003938                     i1u422_28:
 10388  003938  0005               	push	
 10389  00393A  6EFA               	movwf	pclath,c
 10390  00393C  51F4               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 10391  00393E  6EFD               	movwf	tosl,c
 10392  003940  51F5               	movf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 10393  003942  6EFE               	movwf	tosh,c
 10394  003944  6AFF               	clrf	tosu,c
 10395  003946  50FA               	movf	pclath,w,c
 10396  003948  0012               	return		;indir
 10397  00394A                     i1u422_29:
 10398  00394A                     i1l324:
 10399  00394A  0060  F047  FFD8   	movff	??_UART1_tx_vect_isr,status
 10400  003950  0011               	retfie		f
 10401  003952                     __end_of_UART1_tx_vect_isr:
 10402                           	callstack 0
 10403                           
 10404 ;; *************** function _UART1_Transmit_ISR *****************
 10405 ;; Defined at:
 10406 ;;		line 253 in file "mcc_generated_files/uart1.c"
 10407 ;; Parameters:    Size  Location     Type
 10408 ;;		None
 10409 ;; Auto vars:     Size  Location     Type
 10410 ;;		None
 10411 ;; Return value:  Size  Location     Type
 10412 ;;                  1    wreg      void 
 10413 ;; Registers used:
 10414 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10415 ;; Tracked objects:
 10416 ;;		On entry : 0/0
 10417 ;;		On exit  : 0/0
 10418 ;;		Unchanged: 0/0
 10419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10423 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10424 ;;Total ram usage:        0 bytes
 10425 ;; Hardware stack levels used: 1
 10426 ;; Hardware stack levels required when called: 4
 10427 ;; This function calls:
 10428 ;;		Nothing
 10429 ;; This function is called by:
 10430 ;;		_UART1_Initialize
 10431 ;;		_UART1_tx_vect_isr
 10432 ;; This function uses a non-reentrant model
 10433 ;;
 10434                           
 10435                           	psect	text65
 10436  00385A                     __ptext65:
 10437                           	callstack 0
 10438  00385A                     _UART1_Transmit_ISR:
 10439                           	callstack 14
 10440  00385A                     
 10441                           ;mcc_generated_files/uart1.c: 256:     if(sizeof(uart1TxBuffer) > uart1TxBufferRemaining
      +                          )
 10442  00385A  0E08               	movlw	8
 10443  00385C  604C               	cpfslt	_uart1TxBufferRemaining^0,c	;volatile
 10444  00385E  EF33  F01C         	goto	i1u403_21
 10445  003862  EF35  F01C         	goto	i1u403_20
 10446  003866                     i1u403_21:
 10447  003866  EF4C  F01C         	goto	i1l333
 10448  00386A                     i1u403_20:
 10449  00386A                     
 10450                           ;mcc_generated_files/uart1.c: 257:     {;mcc_generated_files/uart1.c: 258:         U1TXB
      +                           = uart1TxBuffer[uart1TxTail++];
 10451  00386A  0E70               	movlw	low _uart1TxBuffer
 10452  00386C  2446               	addwf	_uart1TxTail^0,w,c	;volatile
 10453  00386E  6ED9               	movwf	fsr2l,c
 10454  003870  6ADA               	clrf	fsr2h,c
 10455  003872  0E00               	movlw	high _uart1TxBuffer
 10456  003874  22DA               	addwfc	fsr2h,f,c
 10457  003876  50DF               	movf	indf2,w,c
 10458  003878  013D               	movlb	61	; () banked
 10459  00387A  6FEA               	movwf	234,b	;volatile
 10460  00387C                     
 10461                           ; BSR set to: 61
 10462  00387C  2A46               	incf	_uart1TxTail^0,f,c	;volatile
 10463  00387E                     
 10464                           ; BSR set to: 61
 10465                           ;mcc_generated_files/uart1.c: 259:        if(sizeof(uart1TxBuffer) <= uart1TxTail)
 10466  00387E  0E07               	movlw	7
 10467  003880  6446               	cpfsgt	_uart1TxTail^0,c	;volatile
 10468  003882  EF45  F01C         	goto	i1u404_21
 10469  003886  EF47  F01C         	goto	i1u404_20
 10470  00388A                     i1u404_21:
 10471  00388A  EF49  F01C         	goto	i1l5292
 10472  00388E                     i1u404_20:
 10473  00388E                     
 10474                           ; BSR set to: 61
 10475                           ;mcc_generated_files/uart1.c: 260:         {;mcc_generated_files/uart1.c: 261:          
      +                             uart1TxTail = 0;
 10476  00388E  0E00               	movlw	0
 10477  003890  6E46               	movwf	_uart1TxTail^0,c	;volatile
 10478  003892                     i1l5292:
 10479                           
 10480                           ; BSR set to: 61
 10481                           ;mcc_generated_files/uart1.c: 263:         uart1TxBufferRemaining++;
 10482  003892  2A4C               	incf	_uart1TxBufferRemaining^0,f,c	;volatile
 10483                           
 10484                           ;mcc_generated_files/uart1.c: 264:     }
 10485  003894  EF4E  F01C         	goto	i1l336
 10486  003898                     i1l333:
 10487                           
 10488                           ;mcc_generated_files/uart1.c: 266:     {;mcc_generated_files/uart1.c: 267:         PIE3b
      +                          its.U1TXIE = 0;
 10489  003898  0139               	movlb	57	; () banked
 10490  00389A  9993               	bcf	147,4,b	;volatile
 10491  00389C                     i1l336:
 10492  00389C  0012               	return		;funcret
 10493  00389E                     __end_of_UART1_Transmit_ISR:
 10494                           	callstack 0
 10495                           
 10496 ;; *************** function _UART1_rx_vect_isr *****************
 10497 ;; Defined at:
 10498 ;;		line 243 in file "mcc_generated_files/uart1.c"
 10499 ;; Parameters:    Size  Location     Type
 10500 ;;		None
 10501 ;; Auto vars:     Size  Location     Type
 10502 ;;		None
 10503 ;; Return value:  Size  Location     Type
 10504 ;;                  1    wreg      void 
 10505 ;; Registers used:
 10506 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 10507 ;; Tracked objects:
 10508 ;;		On entry : 0/0
 10509 ;;		On exit  : 0/0
 10510 ;;		Unchanged: 0/0
 10511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10514 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10515 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10516 ;;Total ram usage:        1 bytes
 10517 ;; Hardware stack levels used: 1
 10518 ;; Hardware stack levels required when called: 7
 10519 ;; This function calls:
 10520 ;;		Absolute function
 10521 ;;		_UART1_Receive_ISR
 10522 ;; This function is called by:
 10523 ;;		Interrupt level 1
 10524 ;; This function uses a non-reentrant model
 10525 ;;
 10526                           
 10527                           	psect	text66
 10528  003954                     __ptext66:
 10529                           	callstack 0
 10530  003954                     _UART1_rx_vect_isr:
 10531                           	callstack 12
 10532                           
 10533                           ;incstack = 0
 10534  003954  006F FF60  F012    	movff	status,??_UART1_rx_vect_isr
 10535  00395A                     
 10536                           ;mcc_generated_files/uart1.c: 245:     if(UART1_RxInterruptHandler)
 10537  00395A  0100               	movlb	0	; () banked
 10538  00395C  51F6               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 10539  00395E  11F7               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 10540  003960  B4D8               	btfsc	status,2,c
 10541  003962  EFB5  F01C         	goto	i1u423_21
 10542  003966  EFB7  F01C         	goto	i1u423_20
 10543  00396A                     i1u423_21:
 10544  00396A  EFC3  F01C         	goto	i1l330
 10545  00396E                     i1u423_20:
 10546  00396E                     
 10547                           ; BSR set to: 0
 10548                           ;mcc_generated_files/uart1.c: 246:     {;mcc_generated_files/uart1.c: 247:         UART1
      +                          _RxInterruptHandler();
 10549  00396E  D802               	call	i1u424_28
 10550  003970  EFC3  F01C         	goto	i1u424_29
 10551  003974                     i1u424_28:
 10552  003974  0005               	push	
 10553  003976  6EFA               	movwf	pclath,c
 10554  003978  51F6               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 10555  00397A  6EFD               	movwf	tosl,c
 10556  00397C  51F7               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 10557  00397E  6EFE               	movwf	tosh,c
 10558  003980  6AFF               	clrf	tosu,c
 10559  003982  50FA               	movf	pclath,w,c
 10560  003984  0012               	return		;indir
 10561  003986                     i1u424_29:
 10562  003986                     i1l330:
 10563  003986  0060  F04B  FFD8   	movff	??_UART1_rx_vect_isr,status
 10564  00398C  0011               	retfie		f
 10565  00398E                     __end_of_UART1_rx_vect_isr:
 10566                           	callstack 0
 10567                           
 10568 ;; *************** function _UART1_Receive_ISR *****************
 10569 ;; Defined at:
 10570 ;;		line 273 in file "mcc_generated_files/uart1.c"
 10571 ;; Parameters:    Size  Location     Type
 10572 ;;		None
 10573 ;; Auto vars:     Size  Location     Type
 10574 ;;		None
 10575 ;; Return value:  Size  Location     Type
 10576 ;;                  1    wreg      void 
 10577 ;; Registers used:
 10578 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 10579 ;; Tracked objects:
 10580 ;;		On entry : 0/0
 10581 ;;		On exit  : 0/0
 10582 ;;		Unchanged: 0/0
 10583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10587 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10588 ;;Total ram usage:        0 bytes
 10589 ;; Hardware stack levels used: 1
 10590 ;; Hardware stack levels required when called: 6
 10591 ;; This function calls:
 10592 ;;		Absolute function
 10593 ;;		_UART1_DefaultErrorHandler
 10594 ;;		_UART1_DefaultFramingErrorHandler
 10595 ;;		_UART1_DefaultOverrunErrorHandler
 10596 ;;		_UART1_RxDataHandler
 10597 ;; This function is called by:
 10598 ;;		_UART1_Initialize
 10599 ;;		_UART1_rx_vect_isr
 10600 ;; This function uses a non-reentrant model
 10601 ;;
 10602                           
 10603                           	psect	text67
 10604  003282                     __ptext67:
 10605                           	callstack 0
 10606  003282                     _UART1_Receive_ISR:
 10607                           	callstack 12
 10608  003282                     
 10609                           ;mcc_generated_files/uart1.c: 276:     uart1RxStatusBuffer[uart1RxHead].status = 0;
 10610  003282  0E60               	movlw	low _uart1RxStatusBuffer
 10611  003284  2445               	addwf	_uart1RxHead^0,w,c	;volatile
 10612  003286  6ED9               	movwf	fsr2l,c
 10613  003288  6ADA               	clrf	fsr2h,c
 10614  00328A  0E00               	movlw	high _uart1RxStatusBuffer
 10615  00328C  22DA               	addwfc	fsr2h,f,c
 10616  00328E  0E00               	movlw	0
 10617  003290  6EDF               	movwf	indf2,c
 10618  003292                     
 10619                           ;mcc_generated_files/uart1.c: 278:     if(U1ERRIRbits.FERIF){
 10620  003292  013D               	movlb	61	; () banked
 10621  003294  A7F9               	btfss	249,3,b	;volatile
 10622  003296  EF4F  F019         	goto	i1u405_21
 10623  00329A  EF51  F019         	goto	i1u405_20
 10624  00329E                     i1u405_21:
 10625  00329E  EF65  F019         	goto	i1l5302
 10626  0032A2                     i1u405_20:
 10627  0032A2                     
 10628                           ; BSR set to: 61
 10629                           ;mcc_generated_files/uart1.c: 279:         uart1RxStatusBuffer[uart1RxHead].ferr = 1;
 10630  0032A2  0E60               	movlw	low _uart1RxStatusBuffer
 10631  0032A4  2445               	addwf	_uart1RxHead^0,w,c	;volatile
 10632  0032A6  6ED9               	movwf	fsr2l,c
 10633  0032A8  6ADA               	clrf	fsr2h,c
 10634  0032AA  0E00               	movlw	high _uart1RxStatusBuffer
 10635  0032AC  22DA               	addwfc	fsr2h,f,c
 10636  0032AE  0100               	movlb	0	; () banked
 10637  0032B0  82DF               	bsf	indf2,1,c
 10638  0032B2                     
 10639                           ; BSR set to: 0
 10640                           ;mcc_generated_files/uart1.c: 280:         UART1_FramingErrorHandler();
 10641  0032B2  D802               	call	i1u406_28
 10642  0032B4  EF65  F019         	goto	i1u406_29
 10643  0032B8                     i1u406_28:
 10644  0032B8  0005               	push	
 10645  0032BA  6EFA               	movwf	pclath,c
 10646  0032BC  51F2               	movf	_UART1_FramingErrorHandler& (0+255),w,b
 10647  0032BE  6EFD               	movwf	tosl,c
 10648  0032C0  51F3               	movf	(_UART1_FramingErrorHandler+1)& (0+255),w,b
 10649  0032C2  6EFE               	movwf	tosh,c
 10650  0032C4  6AFF               	clrf	tosu,c
 10651  0032C6  50FA               	movf	pclath,w,c
 10652  0032C8  0012               	return		;indir
 10653  0032CA                     i1u406_29:
 10654  0032CA                     i1l5302:
 10655                           
 10656                           ;mcc_generated_files/uart1.c: 283:     if(U1ERRIRbits.RXFOIF){
 10657  0032CA  013D               	movlb	61	; () banked
 10658  0032CC  A3F9               	btfss	249,1,b	;volatile
 10659  0032CE  EF6B  F019         	goto	i1u407_21
 10660  0032D2  EF6D  F019         	goto	i1u407_20
 10661  0032D6                     i1u407_21:
 10662  0032D6  EF81  F019         	goto	i1l5308
 10663  0032DA                     i1u407_20:
 10664  0032DA                     
 10665                           ; BSR set to: 61
 10666                           ;mcc_generated_files/uart1.c: 284:         uart1RxStatusBuffer[uart1RxHead].oerr = 1;
 10667  0032DA  0E60               	movlw	low _uart1RxStatusBuffer
 10668  0032DC  2445               	addwf	_uart1RxHead^0,w,c	;volatile
 10669  0032DE  6ED9               	movwf	fsr2l,c
 10670  0032E0  6ADA               	clrf	fsr2h,c
 10671  0032E2  0E00               	movlw	high _uart1RxStatusBuffer
 10672  0032E4  22DA               	addwfc	fsr2h,f,c
 10673  0032E6  0100               	movlb	0	; () banked
 10674  0032E8  84DF               	bsf	indf2,2,c
 10675  0032EA                     
 10676                           ; BSR set to: 0
 10677                           ;mcc_generated_files/uart1.c: 285:         UART1_OverrunErrorHandler();
 10678  0032EA  D802               	call	i1u408_28
 10679  0032EC  EF81  F019         	goto	i1u408_29
 10680  0032F0                     i1u408_28:
 10681  0032F0  0005               	push	
 10682  0032F2  6EFA               	movwf	pclath,c
 10683  0032F4  51F0               	movf	_UART1_OverrunErrorHandler& (0+255),w,b
 10684  0032F6  6EFD               	movwf	tosl,c
 10685  0032F8  51F1               	movf	(_UART1_OverrunErrorHandler+1)& (0+255),w,b
 10686  0032FA  6EFE               	movwf	tosh,c
 10687  0032FC  6AFF               	clrf	tosu,c
 10688  0032FE  50FA               	movf	pclath,w,c
 10689  003300  0012               	return		;indir
 10690  003302                     i1u408_29:
 10691  003302                     i1l5308:
 10692                           
 10693                           ;mcc_generated_files/uart1.c: 288:     if(uart1RxStatusBuffer[uart1RxHead].status){
 10694  003302  0E60               	movlw	low _uart1RxStatusBuffer
 10695  003304  2445               	addwf	_uart1RxHead^0,w,c	;volatile
 10696  003306  6ED9               	movwf	fsr2l,c
 10697  003308  6ADA               	clrf	fsr2h,c
 10698  00330A  0E00               	movlw	high _uart1RxStatusBuffer
 10699  00330C  22DA               	addwfc	fsr2h,f,c
 10700  00330E  50DF               	movf	indf2,w,c
 10701  003310  B4D8               	btfsc	status,2,c
 10702  003312  EF8D  F019         	goto	i1u409_21
 10703  003316  EF8F  F019         	goto	i1u409_20
 10704  00331A                     i1u409_21:
 10705  00331A  EF9E  F019         	goto	i1l5312
 10706  00331E                     i1u409_20:
 10707  00331E                     
 10708                           ;mcc_generated_files/uart1.c: 289:         UART1_ErrorHandler();
 10709  00331E  D802               	call	i1u410_28
 10710  003320  EF9C  F019         	goto	i1u410_29
 10711  003324                     i1u410_28:
 10712  003324  0005               	push	
 10713  003326  6EFA               	movwf	pclath,c
 10714  003328  0100               	movlb	0	; () banked
 10715  00332A  51EE               	movf	_UART1_ErrorHandler& (0+255),w,b
 10716  00332C  6EFD               	movwf	tosl,c
 10717  00332E  51EF               	movf	(_UART1_ErrorHandler+1)& (0+255),w,b
 10718  003330  6EFE               	movwf	tosh,c
 10719  003332  6AFF               	clrf	tosu,c
 10720  003334  50FA               	movf	pclath,w,c
 10721  003336  0012               	return		;indir
 10722  003338                     i1u410_29:
 10723                           
 10724                           ;mcc_generated_files/uart1.c: 290:     } else {
 10725  003338  EFA0  F019         	goto	i1l343
 10726  00333C                     i1l5312:
 10727                           
 10728                           ;mcc_generated_files/uart1.c: 291:         UART1_RxDataHandler();
 10729  00333C  ECA4  F01E         	call	_UART1_RxDataHandler	;wreg free
 10730  003340                     i1l343:
 10731  003340  0012               	return		;funcret
 10732  003342                     __end_of_UART1_Receive_ISR:
 10733                           	callstack 0
 10734                           
 10735 ;; *************** function _UART1_DefaultOverrunErrorHandler *****************
 10736 ;; Defined at:
 10737 ;;		line 309 in file "mcc_generated_files/uart1.c"
 10738 ;; Parameters:    Size  Location     Type
 10739 ;;		None
 10740 ;; Auto vars:     Size  Location     Type
 10741 ;;		None
 10742 ;; Return value:  Size  Location     Type
 10743 ;;                  1    wreg      void 
 10744 ;; Registers used:
 10745 ;;		None
 10746 ;; Tracked objects:
 10747 ;;		On entry : 0/0
 10748 ;;		On exit  : 0/0
 10749 ;;		Unchanged: 0/0
 10750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10754 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10755 ;;Total ram usage:        0 bytes
 10756 ;; Hardware stack levels used: 1
 10757 ;; Hardware stack levels required when called: 4
 10758 ;; This function calls:
 10759 ;;		Nothing
 10760 ;; This function is called by:
 10761 ;;		_UART1_Initialize
 10762 ;;		_UART1_Receive_ISR
 10763 ;; This function uses a non-reentrant model
 10764 ;;
 10765                           
 10766                           	psect	text68
 10767  003FAA                     __ptext68:
 10768                           	callstack 0
 10769  003FAA                     _UART1_DefaultOverrunErrorHandler:
 10770                           	callstack 13
 10771  003FAA  0012               	return		;funcret
 10772  003FAC                     __end_of_UART1_DefaultOverrunErrorHandler:
 10773                           	callstack 0
 10774                           
 10775 ;; *************** function _UART1_DefaultFramingErrorHandler *****************
 10776 ;; Defined at:
 10777 ;;		line 307 in file "mcc_generated_files/uart1.c"
 10778 ;; Parameters:    Size  Location     Type
 10779 ;;		None
 10780 ;; Auto vars:     Size  Location     Type
 10781 ;;		None
 10782 ;; Return value:  Size  Location     Type
 10783 ;;                  1    wreg      void 
 10784 ;; Registers used:
 10785 ;;		None
 10786 ;; Tracked objects:
 10787 ;;		On entry : 0/0
 10788 ;;		On exit  : 0/0
 10789 ;;		Unchanged: 0/0
 10790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10794 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10795 ;;Total ram usage:        0 bytes
 10796 ;; Hardware stack levels used: 1
 10797 ;; Hardware stack levels required when called: 4
 10798 ;; This function calls:
 10799 ;;		Nothing
 10800 ;; This function is called by:
 10801 ;;		_UART1_Initialize
 10802 ;;		_UART1_Receive_ISR
 10803 ;; This function uses a non-reentrant model
 10804 ;;
 10805                           
 10806                           	psect	text69
 10807  003FAC                     __ptext69:
 10808                           	callstack 0
 10809  003FAC                     _UART1_DefaultFramingErrorHandler:
 10810                           	callstack 13
 10811  003FAC  0012               	return		;funcret
 10812  003FAE                     __end_of_UART1_DefaultFramingErrorHandler:
 10813                           	callstack 0
 10814                           
 10815 ;; *************** function _UART1_DefaultErrorHandler *****************
 10816 ;; Defined at:
 10817 ;;		line 311 in file "mcc_generated_files/uart1.c"
 10818 ;; Parameters:    Size  Location     Type
 10819 ;;		None
 10820 ;; Auto vars:     Size  Location     Type
 10821 ;;		None
 10822 ;; Return value:  Size  Location     Type
 10823 ;;                  1    wreg      void 
 10824 ;; Registers used:
 10825 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10826 ;; Tracked objects:
 10827 ;;		On entry : 0/0
 10828 ;;		On exit  : 0/0
 10829 ;;		Unchanged: 0/0
 10830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10834 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10835 ;;Total ram usage:        0 bytes
 10836 ;; Hardware stack levels used: 1
 10837 ;; Hardware stack levels required when called: 5
 10838 ;; This function calls:
 10839 ;;		_UART1_RxDataHandler
 10840 ;; This function is called by:
 10841 ;;		_UART1_Initialize
 10842 ;;		_UART1_Receive_ISR
 10843 ;; This function uses a non-reentrant model
 10844 ;;
 10845                           
 10846                           	psect	text70
 10847  003F9E                     __ptext70:
 10848                           	callstack 0
 10849  003F9E                     _UART1_DefaultErrorHandler:
 10850                           	callstack 12
 10851  003F9E                     
 10852                           ;mcc_generated_files/uart1.c: 312:     UART1_RxDataHandler();
 10853  003F9E  ECA4  F01E         	call	_UART1_RxDataHandler	;wreg free
 10854  003FA2  0012               	return		;funcret
 10855  003FA4                     __end_of_UART1_DefaultErrorHandler:
 10856                           	callstack 0
 10857                           
 10858 ;; *************** function _UART1_RxDataHandler *****************
 10859 ;; Defined at:
 10860 ;;		line 297 in file "mcc_generated_files/uart1.c"
 10861 ;; Parameters:    Size  Location     Type
 10862 ;;		None
 10863 ;; Auto vars:     Size  Location     Type
 10864 ;;		None
 10865 ;; Return value:  Size  Location     Type
 10866 ;;                  1    wreg      void 
 10867 ;; Registers used:
 10868 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10869 ;; Tracked objects:
 10870 ;;		On entry : 0/0
 10871 ;;		On exit  : 0/0
 10872 ;;		Unchanged: 0/0
 10873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10877 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10878 ;;Total ram usage:        0 bytes
 10879 ;; Hardware stack levels used: 1
 10880 ;; Hardware stack levels required when called: 4
 10881 ;; This function calls:
 10882 ;;		Nothing
 10883 ;; This function is called by:
 10884 ;;		_UART1_Receive_ISR
 10885 ;;		_UART1_DefaultErrorHandler
 10886 ;; This function uses a non-reentrant model
 10887 ;;
 10888                           
 10889                           	psect	text71
 10890  003D48                     __ptext71:
 10891                           	callstack 0
 10892  003D48                     _UART1_RxDataHandler:
 10893                           	callstack 13
 10894  003D48                     
 10895                           ;mcc_generated_files/uart1.c: 299:     uart1RxBuffer[uart1RxHead++] = U1RXB;
 10896  003D48  0E68               	movlw	low _uart1RxBuffer
 10897  003D4A  2445               	addwf	_uart1RxHead^0,w,c	;volatile
 10898  003D4C  6ED9               	movwf	fsr2l,c
 10899  003D4E  6ADA               	clrf	fsr2h,c
 10900  003D50  0E00               	movlw	high _uart1RxBuffer
 10901  003D52  22DA               	addwfc	fsr2h,f,c
 10902  003D54  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 10903  003D5A  2A45               	incf	_uart1RxHead^0,f,c	;volatile
 10904  003D5C                     
 10905                           ;mcc_generated_files/uart1.c: 300:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 10906  003D5C  0E07               	movlw	7
 10907  003D5E  6445               	cpfsgt	_uart1RxHead^0,c	;volatile
 10908  003D60  EFB4  F01E         	goto	i1u281_21
 10909  003D64  EFB6  F01E         	goto	i1u281_20
 10910  003D68                     i1u281_21:
 10911  003D68  EFB8  F01E         	goto	i1l4376
 10912  003D6C                     i1u281_20:
 10913  003D6C                     
 10914                           ;mcc_generated_files/uart1.c: 301:     {;mcc_generated_files/uart1.c: 302:         uart1
      +                          RxHead = 0;
 10915  003D6C  0E00               	movlw	0
 10916  003D6E  6E45               	movwf	_uart1RxHead^0,c	;volatile
 10917  003D70                     i1l4376:
 10918                           
 10919                           ;mcc_generated_files/uart1.c: 304:     uart1RxCount++;
 10920  003D70  2A43               	incf	_uart1RxCount^0,f,c	;volatile
 10921  003D72  0012               	return		;funcret
 10922  003D74                     __end_of_UART1_RxDataHandler:
 10923                           	callstack 0
 10924                           
 10925 ;; *************** function _TMR4_ISR *****************
 10926 ;; Defined at:
 10927 ;;		line 166 in file "mcc_generated_files/tmr4.c"
 10928 ;; Parameters:    Size  Location     Type
 10929 ;;		None
 10930 ;; Auto vars:     Size  Location     Type
 10931 ;;		None
 10932 ;; Return value:  Size  Location     Type
 10933 ;;                  1    wreg      void 
 10934 ;; Registers used:
 10935 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 10936 ;; Tracked objects:
 10937 ;;		On entry : 0/0
 10938 ;;		On exit  : 0/0
 10939 ;;		Unchanged: 0/0
 10940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10943 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10944 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10945 ;;Total ram usage:        1 bytes
 10946 ;; Hardware stack levels used: 1
 10947 ;; Hardware stack levels required when called: 6
 10948 ;; This function calls:
 10949 ;;		_TMR4_CallBack
 10950 ;; This function is called by:
 10951 ;;		Interrupt level 1
 10952 ;; This function uses a non-reentrant model
 10953 ;;
 10954                           
 10955                           	psect	text72
 10956  0039C8                     __ptext72:
 10957                           	callstack 0
 10958  0039C8                     _TMR4_ISR:
 10959                           	callstack 13
 10960                           
 10961                           ;incstack = 0
 10962  0039C8  006F FF60  F013    	movff	status,??_TMR4_ISR
 10963  0039CE                     
 10964                           ;mcc_generated_files/tmr4.c: 168:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr4.c: 171:     PIR7bits.TMR4IF = 0;
 10965  0039CE  0139               	movlb	57	; () banked
 10966  0039D0  91A7               	bcf	167,0,b	;volatile
 10967  0039D2                     
 10968                           ; BSR set to: 57
 10969                           ;mcc_generated_files/tmr4.c: 174:     if (++CountCallBack >= 10)
 10970  0039D2  4A3F               	infsnz	TMR4_ISR@CountCallBack^0,f,c	;volatile
 10971  0039D4  2A40               	incf	(TMR4_ISR@CountCallBack+1)^0,f,c	;volatile
 10972  0039D6  5040               	movf	(TMR4_ISR@CountCallBack+1)^0,w,c	;volatile
 10973  0039D8  E109               	bnz	i1u427_20
 10974  0039DA  0E0A               	movlw	10
 10975  0039DC  5C3F               	subwf	TMR4_ISR@CountCallBack^0,w,c	;volatile
 10976  0039DE  A0D8               	btfss	status,0,c
 10977  0039E0  EFF4  F01C         	goto	i1u427_21
 10978  0039E4  EFF6  F01C         	goto	i1u427_20
 10979  0039E8                     i1u427_21:
 10980  0039E8  EFFC  F01C         	goto	i1l610
 10981  0039EC                     i1u427_20:
 10982  0039EC                     
 10983                           ; BSR set to: 57
 10984                           ;mcc_generated_files/tmr4.c: 175:     {;mcc_generated_files/tmr4.c: 177:         TMR4_Ca
      +                          llBack();
 10985  0039EC  EC61  F01E         	call	_TMR4_CallBack	;wreg free
 10986  0039F0                     
 10987                           ;mcc_generated_files/tmr4.c: 180:         CountCallBack = 0;
 10988  0039F0  0E00               	movlw	0
 10989  0039F2  6E40               	movwf	(TMR4_ISR@CountCallBack+1)^0,c	;volatile
 10990  0039F4  0E00               	movlw	0
 10991  0039F6  6E3F               	movwf	TMR4_ISR@CountCallBack^0,c	;volatile
 10992  0039F8                     i1l610:
 10993  0039F8  0060  F04F  FFD8   	movff	??_TMR4_ISR,status
 10994  0039FE  0011               	retfie		f
 10995  003A00                     __end_of_TMR4_ISR:
 10996                           	callstack 0
 10997                           
 10998 ;; *************** function _TMR4_CallBack *****************
 10999 ;; Defined at:
 11000 ;;		line 184 in file "mcc_generated_files/tmr4.c"
 11001 ;; Parameters:    Size  Location     Type
 11002 ;;		None
 11003 ;; Auto vars:     Size  Location     Type
 11004 ;;		None
 11005 ;; Return value:  Size  Location     Type
 11006 ;;                  1    wreg      void 
 11007 ;; Registers used:
 11008 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 11009 ;; Tracked objects:
 11010 ;;		On entry : 0/0
 11011 ;;		On exit  : 0/0
 11012 ;;		Unchanged: 0/0
 11013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11017 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11018 ;;Total ram usage:        0 bytes
 11019 ;; Hardware stack levels used: 1
 11020 ;; Hardware stack levels required when called: 5
 11021 ;; This function calls:
 11022 ;;		Absolute function
 11023 ;;		_TMR4_10msISR
 11024 ;;		_TMR4_DefaultInterruptHandler
 11025 ;; This function is called by:
 11026 ;;		_TMR4_ISR
 11027 ;; This function uses a non-reentrant model
 11028 ;;
 11029                           
 11030                           	psect	text73
 11031  003CC2                     __ptext73:
 11032                           	callstack 0
 11033  003CC2                     _TMR4_CallBack:
 11034                           	callstack 13
 11035  003CC2                     
 11036                           ;mcc_generated_files/tmr4.c: 188:     if(TMR4_InterruptHandler)
 11037  003CC2  0100               	movlb	0	; () banked
 11038  003CC4  51E6               	movf	_TMR4_InterruptHandler& (0+255),w,b
 11039  003CC6  11E7               	iorwf	(_TMR4_InterruptHandler+1)& (0+255),w,b
 11040  003CC8  B4D8               	btfsc	status,2,c
 11041  003CCA  EF69  F01E         	goto	i1u412_21
 11042  003CCE  EF6B  F01E         	goto	i1u412_20
 11043  003CD2                     i1u412_21:
 11044  003CD2  EF77  F01E         	goto	i1l614
 11045  003CD6                     i1u412_20:
 11046  003CD6                     
 11047                           ; BSR set to: 0
 11048                           ;mcc_generated_files/tmr4.c: 189:     {;mcc_generated_files/tmr4.c: 190:         TMR4_In
      +                          terruptHandler();
 11049  003CD6  D802               	call	i1u413_28
 11050  003CD8  EF77  F01E         	goto	i1u413_29
 11051  003CDC                     i1u413_28:
 11052  003CDC  0005               	push	
 11053  003CDE  6EFA               	movwf	pclath,c
 11054  003CE0  51E6               	movf	_TMR4_InterruptHandler& (0+255),w,b
 11055  003CE2  6EFD               	movwf	tosl,c
 11056  003CE4  51E7               	movf	(_TMR4_InterruptHandler+1)& (0+255),w,b
 11057  003CE6  6EFE               	movwf	tosh,c
 11058  003CE8  6AFF               	clrf	tosu,c
 11059  003CEA  50FA               	movf	pclath,w,c
 11060  003CEC  0012               	return		;indir
 11061  003CEE                     i1u413_29:
 11062  003CEE                     i1l614:
 11063  003CEE  0012               	return		;funcret
 11064  003CF0                     __end_of_TMR4_CallBack:
 11065                           	callstack 0
 11066                           
 11067 ;; *************** function _TMR4_10msISR *****************
 11068 ;; Defined at:
 11069 ;;		line 51 in file "main.c"
 11070 ;; Parameters:    Size  Location     Type
 11071 ;;		None
 11072 ;; Auto vars:     Size  Location     Type
 11073 ;;		None
 11074 ;; Return value:  Size  Location     Type
 11075 ;;                  1    wreg      void 
 11076 ;; Registers used:
 11077 ;;		status,2, status,0
 11078 ;; Tracked objects:
 11079 ;;		On entry : 0/0
 11080 ;;		On exit  : 0/0
 11081 ;;		Unchanged: 0/0
 11082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11086 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11087 ;;Total ram usage:        0 bytes
 11088 ;; Hardware stack levels used: 1
 11089 ;; Hardware stack levels required when called: 4
 11090 ;; This function calls:
 11091 ;;		Nothing
 11092 ;; This function is called by:
 11093 ;;		_main
 11094 ;;		_TMR4_CallBack
 11095 ;; This function uses a non-reentrant model
 11096 ;;
 11097                           
 11098                           	psect	text74
 11099  003FA4                     __ptext74:
 11100                           	callstack 0
 11101  003FA4                     _TMR4_10msISR:
 11102                           	callstack 13
 11103  003FA4                     
 11104                           ;main.c: 52:     ++cycle10ms;
 11105  003FA4  0100               	movlb	0	; () banked
 11106  003FA6  2B9D               	incf	_cycle10ms& (0+255),f,b
 11107  003FA8                     
 11108                           ; BSR set to: 0
 11109  003FA8  0012               	return		;funcret
 11110  003FAA                     __end_of_TMR4_10msISR:
 11111                           	callstack 0
 11112                           
 11113 ;; *************** function _TMR4_DefaultInterruptHandler *****************
 11114 ;; Defined at:
 11115 ;;		line 198 in file "mcc_generated_files/tmr4.c"
 11116 ;; Parameters:    Size  Location     Type
 11117 ;;		None
 11118 ;; Auto vars:     Size  Location     Type
 11119 ;;		None
 11120 ;; Return value:  Size  Location     Type
 11121 ;;                  1    wreg      void 
 11122 ;; Registers used:
 11123 ;;		None
 11124 ;; Tracked objects:
 11125 ;;		On entry : 0/0
 11126 ;;		On exit  : 0/0
 11127 ;;		Unchanged: 0/0
 11128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11132 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11133 ;;Total ram usage:        0 bytes
 11134 ;; Hardware stack levels used: 1
 11135 ;; Hardware stack levels required when called: 4
 11136 ;; This function calls:
 11137 ;;		Nothing
 11138 ;; This function is called by:
 11139 ;;		_TMR4_Initialize
 11140 ;;		_TMR4_CallBack
 11141 ;; This function uses a non-reentrant model
 11142 ;;
 11143                           
 11144                           	psect	text75
 11145  003FAE                     __ptext75:
 11146                           	callstack 0
 11147  003FAE                     _TMR4_DefaultInterruptHandler:
 11148                           	callstack 13
 11149  003FAE  0012               	return		;funcret
 11150  003FB0                     __end_of_TMR4_DefaultInterruptHandler:
 11151                           	callstack 0
 11152                           
 11153 ;; *************** function _Default_ISR *****************
 11154 ;; Defined at:
 11155 ;;		line 83 in file "mcc_generated_files/interrupt_manager.c"
 11156 ;; Parameters:    Size  Location     Type
 11157 ;;		None
 11158 ;; Auto vars:     Size  Location     Type
 11159 ;;		None
 11160 ;; Return value:  Size  Location     Type
 11161 ;;                  1    wreg      void 
 11162 ;; Registers used:
 11163 ;;		None
 11164 ;; Tracked objects:
 11165 ;;		On entry : 0/0
 11166 ;;		On exit  : 0/0
 11167 ;;		Unchanged: 0/0
 11168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11172 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11173 ;;Total ram usage:        0 bytes
 11174 ;; Hardware stack levels used: 1
 11175 ;; This function calls:
 11176 ;;		Nothing
 11177 ;; This function is called by:
 11178 ;;		Interrupt level 2
 11179 ;; This function uses a non-reentrant model
 11180 ;;
 11181                           
 11182                           	psect	text76
 11183  003FB0                     __ptext76:
 11184                           	callstack 0
 11185  003FB0                     _Default_ISR:
 11186                           	callstack 15
 11187  003FB0  0011               	retfie		f
 11188  003FB2                     __end_of_Default_ISR:
 11189                           	callstack 0
 11190                           
 11191 ;; *************** function _TMR5_GATE_ISR *****************
 11192 ;; Defined at:
 11193 ;;		line 175 in file "mcc_generated_files/tmr5.c"
 11194 ;; Parameters:    Size  Location     Type
 11195 ;;		None
 11196 ;; Auto vars:     Size  Location     Type
 11197 ;;		None
 11198 ;; Return value:  Size  Location     Type
 11199 ;;                  1    wreg      void 
 11200 ;; Registers used:
 11201 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 11202 ;; Tracked objects:
 11203 ;;		On entry : 0/0
 11204 ;;		On exit  : 0/0
 11205 ;;		Unchanged: 0/0
 11206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11210 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11211 ;;Total ram usage:        0 bytes
 11212 ;; Hardware stack levels used: 1
 11213 ;; Hardware stack levels required when called: 3
 11214 ;; This function calls:
 11215 ;;		Absolute function
 11216 ;;		_TMR5_DefaultGateInterruptHandler
 11217 ;; This function is called by:
 11218 ;;		Interrupt level 2
 11219 ;; This function uses a non-reentrant model
 11220 ;;
 11221                           
 11222                           	psect	text77
 11223  003BA4                     __ptext77:
 11224                           	callstack 0
 11225  003BA4                     _TMR5_GATE_ISR:
 11226                           	callstack 12
 11227  003BA4                     
 11228                           ;mcc_generated_files/tmr5.c: 178:     PIR8bits.TMR5GIF = 0;
 11229  003BA4  0139               	movlb	57	; () banked
 11230  003BA6  9FA8               	bcf	168,7,b	;volatile
 11231  003BA8                     
 11232                           ; BSR set to: 57
 11233                           ;mcc_generated_files/tmr5.c: 180:     if(TMR5_GateInterruptHandler)
 11234  003BA8  0100               	movlb	0	; () banked
 11235  003BAA  51EA               	movf	_TMR5_GateInterruptHandler& (0+255),w,b
 11236  003BAC  11EB               	iorwf	(_TMR5_GateInterruptHandler+1)& (0+255),w,b
 11237  003BAE  B4D8               	btfsc	status,2,c
 11238  003BB0  EFDC  F01D         	goto	i2u425_41
 11239  003BB4  EFDE  F01D         	goto	i2u425_40
 11240  003BB8                     i2u425_41:
 11241  003BB8  EFEA  F01D         	goto	i2l474
 11242  003BBC                     i2u425_40:
 11243  003BBC                     
 11244                           ; BSR set to: 0
 11245                           ;mcc_generated_files/tmr5.c: 181:     {;mcc_generated_files/tmr5.c: 182:         TMR5_Ga
      +                          teInterruptHandler();
 11246  003BBC  D802               	call	i2u426_48
 11247  003BBE  EFEA  F01D         	goto	i2u426_49
 11248  003BC2                     i2u426_48:
 11249  003BC2  0005               	push	
 11250  003BC4  6EFA               	movwf	pclath,c
 11251  003BC6  51EA               	movf	_TMR5_GateInterruptHandler& (0+255),w,b
 11252  003BC8  6EFD               	movwf	tosl,c
 11253  003BCA  51EB               	movf	(_TMR5_GateInterruptHandler+1)& (0+255),w,b
 11254  003BCC  6EFE               	movwf	tosh,c
 11255  003BCE  6AFF               	clrf	tosu,c
 11256  003BD0  50FA               	movf	pclath,w,c
 11257  003BD2  0012               	return		;indir
 11258  003BD4                     i2u426_49:
 11259  003BD4                     i2l474:
 11260  003BD4  0011               	retfie		f
 11261  003BD6                     __end_of_TMR5_GATE_ISR:
 11262                           	callstack 0
 11263                           
 11264 ;; *************** function _TMR5_DefaultGateInterruptHandler *****************
 11265 ;; Defined at:
 11266 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 11267 ;; Parameters:    Size  Location     Type
 11268 ;;		None
 11269 ;; Auto vars:     Size  Location     Type
 11270 ;;		None
 11271 ;; Return value:  Size  Location     Type
 11272 ;;                  1    wreg      void 
 11273 ;; Registers used:
 11274 ;;		wreg, status,2, status,0, cstack
 11275 ;; Tracked objects:
 11276 ;;		On entry : 0/0
 11277 ;;		On exit  : 0/0
 11278 ;;		Unchanged: 0/0
 11279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11283 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11284 ;;Total ram usage:        0 bytes
 11285 ;; Hardware stack levels used: 1
 11286 ;; Hardware stack levels required when called: 2
 11287 ;; This function calls:
 11288 ;;		_TMR5_ReadTimer
 11289 ;;		_TMR5_Reload
 11290 ;; This function is called by:
 11291 ;;		_TMR5_Initialize
 11292 ;;		_TMR5_GATE_ISR
 11293 ;; This function uses a non-reentrant model
 11294 ;;
 11295                           
 11296                           	psect	text78
 11297  003E5E                     __ptext78:
 11298                           	callstack 0
 11299  003E5E                     _TMR5_DefaultGateInterruptHandler:
 11300                           	callstack 12
 11301  003E5E                     
 11302                           ;mcc_generated_files/tmr5.c: 194:     distFront = TMR5_ReadTimer();
 11303  003E5E  EC1D  F01F         	call	_TMR5_ReadTimer	;wreg free
 11304  003E62  C001  F0A0         	movff	?_TMR5_ReadTimer,_distFront	;volatile
 11305  003E66  C002  F0A1         	movff	?_TMR5_ReadTimer+1,_distFront+1	;volatile
 11306  003E6A                     
 11307                           ;mcc_generated_files/tmr5.c: 195:     distFront >>= 1;
 11308  003E6A  0100               	movlb	0	; () banked
 11309  003E6C  90D8               	bcf	status,0,c
 11310  003E6E  33A1               	rrcf	(_distFront+1)& (0+255),f,b	;volatile
 11311  003E70  33A0               	rrcf	_distFront& (0+255),f,b	;volatile
 11312  003E72                     
 11313                           ; BSR set to: 0
 11314                           ;mcc_generated_files/tmr5.c: 196:     TMR5_Reload();
 11315  003E72  EC96  F01F         	call	_TMR5_Reload	;wreg free
 11316  003E76                     
 11317                           ;mcc_generated_files/tmr5.c: 197:     PIR8bits.TMR5GIF = 0;
 11318  003E76  0139               	movlb	57	; () banked
 11319  003E78  9FA8               	bcf	168,7,b	;volatile
 11320  003E7A                     
 11321                           ; BSR set to: 57
 11322  003E7A  0012               	return		;funcret
 11323  003E7C                     __end_of_TMR5_DefaultGateInterruptHandler:
 11324                           	callstack 0
 11325                           
 11326 ;; *************** function _TMR5_Reload *****************
 11327 ;; Defined at:
 11328 ;;		line 155 in file "mcc_generated_files/tmr5.c"
 11329 ;; Parameters:    Size  Location     Type
 11330 ;;		None
 11331 ;; Auto vars:     Size  Location     Type
 11332 ;;		None
 11333 ;; Return value:  Size  Location     Type
 11334 ;;                  1    wreg      void 
 11335 ;; Registers used:
 11336 ;;		wreg, status,2, cstack
 11337 ;; Tracked objects:
 11338 ;;		On entry : 0/0
 11339 ;;		On exit  : 0/0
 11340 ;;		Unchanged: 0/0
 11341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11345 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11346 ;;Total ram usage:        0 bytes
 11347 ;; Hardware stack levels used: 1
 11348 ;; Hardware stack levels required when called: 1
 11349 ;; This function calls:
 11350 ;;		_TMR5_WriteTimer
 11351 ;; This function is called by:
 11352 ;;		_TMR5_DefaultGateInterruptHandler
 11353 ;; This function uses a non-reentrant model
 11354 ;;
 11355                           
 11356                           	psect	text79
 11357  003F2C                     __ptext79:
 11358                           	callstack 0
 11359  003F2C                     _TMR5_Reload:
 11360                           	callstack 12
 11361  003F2C                     
 11362                           ;mcc_generated_files/tmr5.c: 157:     TMR5_WriteTimer(timer5ReloadVal);
 11363  003F2C  C0EC  F001         	movff	_timer5ReloadVal,TMR5_WriteTimer@timerVal	;volatile
 11364  003F30  C0ED  F002         	movff	_timer5ReloadVal+1,TMR5_WriteTimer@timerVal+1	;volatile
 11365  003F34  ECBA  F01E         	call	_TMR5_WriteTimer	;wreg free
 11366  003F38  0012               	return		;funcret
 11367  003F3A                     __end_of_TMR5_Reload:
 11368                           	callstack 0
 11369                           
 11370 ;; *************** function _TMR5_WriteTimer *****************
 11371 ;; Defined at:
 11372 ;;		line 133 in file "mcc_generated_files/tmr5.c"
 11373 ;; Parameters:    Size  Location     Type
 11374 ;;  timerVal        2    0[COMRAM] unsigned short 
 11375 ;; Auto vars:     Size  Location     Type
 11376 ;;		None
 11377 ;; Return value:  Size  Location     Type
 11378 ;;                  1    wreg      void 
 11379 ;; Registers used:
 11380 ;;		wreg, status,2
 11381 ;; Tracked objects:
 11382 ;;		On entry : 0/0
 11383 ;;		On exit  : 0/0
 11384 ;;		Unchanged: 0/0
 11385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11386 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11389 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11390 ;;Total ram usage:        2 bytes
 11391 ;; Hardware stack levels used: 1
 11392 ;; This function calls:
 11393 ;;		Nothing
 11394 ;; This function is called by:
 11395 ;;		_TMR5_Reload
 11396 ;; This function uses a non-reentrant model
 11397 ;;
 11398                           
 11399                           	psect	text80
 11400  003D74                     __ptext80:
 11401                           	callstack 0
 11402  003D74                     _TMR5_WriteTimer:
 11403                           	callstack 12
 11404  003D74                     
 11405                           ;mcc_generated_files/tmr5.c: 133: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 134: {;mcc_generated_files/tmr5.c: 135:     if (T5CONbits.NOT_SYNC == 1)
 11406  003D74  A49A               	btfss	154,2,c	;volatile
 11407  003D76  EFBF  F01E         	goto	i2u282_41
 11408  003D7A  EFC1  F01E         	goto	i2u282_40
 11409  003D7E                     i2u282_41:
 11410  003D7E  EFCA  F01E         	goto	i2l4390
 11411  003D82                     i2u282_40:
 11412  003D82                     
 11413                           ;mcc_generated_files/tmr5.c: 136:     {;mcc_generated_files/tmr5.c: 138:         T5CONbi
      +                          ts.TMR5ON = 0;
 11414  003D82  909A               	bcf	154,0,c	;volatile
 11415  003D84                     
 11416                           ;mcc_generated_files/tmr5.c: 141:         TMR5H = (uint8_t)(timerVal >> 8);
 11417  003D84  5002               	movf	(TMR5_WriteTimer@timerVal+1)^0,w,c
 11418  003D86  6E99               	movwf	153,c	;volatile
 11419  003D88                     
 11420                           ;mcc_generated_files/tmr5.c: 142:         TMR5L = (uint8_t)timerVal;
 11421  003D88  0060  F007  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
 11422  003D8E                     
 11423                           ;mcc_generated_files/tmr5.c: 145:         T5CONbits.TMR5ON =1;
 11424  003D8E  809A               	bsf	154,0,c	;volatile
 11425                           
 11426                           ;mcc_generated_files/tmr5.c: 146:     }
 11427  003D90  EFCF  F01E         	goto	i2l456
 11428  003D94                     i2l4390:
 11429                           
 11430                           ;mcc_generated_files/tmr5.c: 148:     {;mcc_generated_files/tmr5.c: 150:         TMR5H =
      +                           (uint8_t)(timerVal >> 8);
 11431  003D94  5002               	movf	(TMR5_WriteTimer@timerVal+1)^0,w,c
 11432  003D96  6E99               	movwf	153,c	;volatile
 11433  003D98                     
 11434                           ;mcc_generated_files/tmr5.c: 151:         TMR5L = (uint8_t)timerVal;
 11435  003D98  0060  F007  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
 11436  003D9E                     i2l456:
 11437  003D9E  0012               	return		;funcret
 11438  003DA0                     __end_of_TMR5_WriteTimer:
 11439                           	callstack 0
 11440                           
 11441 ;; *************** function _TMR5_ReadTimer *****************
 11442 ;; Defined at:
 11443 ;;		line 117 in file "mcc_generated_files/tmr5.c"
 11444 ;; Parameters:    Size  Location     Type
 11445 ;;		None
 11446 ;; Auto vars:     Size  Location     Type
 11447 ;;  readVal         2    4[COMRAM] unsigned short 
 11448 ;;  readValLow      1    7[COMRAM] unsigned char 
 11449 ;;  readValHigh     1    6[COMRAM] unsigned char 
 11450 ;; Return value:  Size  Location     Type
 11451 ;;                  2    0[COMRAM] unsigned short 
 11452 ;; Registers used:
 11453 ;;		wreg, status,2
 11454 ;; Tracked objects:
 11455 ;;		On entry : 0/0
 11456 ;;		On exit  : 0/0
 11457 ;;		Unchanged: 0/0
 11458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11459 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11460 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11461 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11462 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11463 ;;Total ram usage:        8 bytes
 11464 ;; Hardware stack levels used: 1
 11465 ;; This function calls:
 11466 ;;		Nothing
 11467 ;; This function is called by:
 11468 ;;		_TMR5_DefaultGateInterruptHandler
 11469 ;; This function uses a non-reentrant model
 11470 ;;
 11471                           
 11472                           	psect	text81
 11473  003E3A                     __ptext81:
 11474                           	callstack 0
 11475  003E3A                     _TMR5_ReadTimer:
 11476                           	callstack 13
 11477  003E3A                     
 11478                           ;mcc_generated_files/tmr5.c: 119:     uint16_t readVal;;mcc_generated_files/tmr5.c: 120:
      +                               uint8_t readValHigh;;mcc_generated_files/tmr5.c: 121:     uint8_t readValLow;;mcc_g
      +                          enerated_files/tmr5.c: 123:     T5CONbits.T5RD16 = 1;
 11479  003E3A  829A               	bsf	154,1,c	;volatile
 11480                           
 11481                           ;mcc_generated_files/tmr5.c: 125:     readValLow = TMR5L;
 11482  003E3C  006F FE60  F008    	movff	16280,TMR5_ReadTimer@readValLow	;volatile
 11483                           
 11484                           ;mcc_generated_files/tmr5.c: 126:     readValHigh = TMR5H;
 11485  003E42  006F FE64  F007    	movff	16281,TMR5_ReadTimer@readValHigh	;volatile
 11486  003E48                     
 11487                           ;mcc_generated_files/tmr5.c: 128:     readVal = ((uint16_t)readValHigh << 8) | readValLo
      +                          w;
 11488  003E48  5007               	movf	TMR5_ReadTimer@readValHigh^0,w,c
 11489  003E4A  6E03               	movwf	??_TMR5_ReadTimer^0,c
 11490  003E4C  5008               	movf	TMR5_ReadTimer@readValLow^0,w,c
 11491  003E4E  6E05               	movwf	TMR5_ReadTimer@readVal^0,c
 11492  003E50  C003  F006         	movff	??_TMR5_ReadTimer,TMR5_ReadTimer@readVal+1
 11493  003E54                     
 11494                           ;mcc_generated_files/tmr5.c: 130:     return readVal;
 11495  003E54  C005  F001         	movff	TMR5_ReadTimer@readVal,?_TMR5_ReadTimer
 11496  003E58  C006  F002         	movff	TMR5_ReadTimer@readVal+1,?_TMR5_ReadTimer+1
 11497  003E5C  0012               	return		;funcret
 11498  003E5E                     __end_of_TMR5_ReadTimer:
 11499                           	callstack 0
 11500                           
 11501 ;; *************** function _SMT1_PR_ACQ_ISR *****************
 11502 ;; Defined at:
 11503 ;;		line 192 in file "mcc_generated_files/smt1.c"
 11504 ;; Parameters:    Size  Location     Type
 11505 ;;		None
 11506 ;; Auto vars:     Size  Location     Type
 11507 ;;		None
 11508 ;; Return value:  Size  Location     Type
 11509 ;;                  1    wreg      void 
 11510 ;; Registers used:
 11511 ;;		wreg, status,2, status,0
 11512 ;; Tracked objects:
 11513 ;;		On entry : 0/0
 11514 ;;		On exit  : 0/0
 11515 ;;		Unchanged: 0/0
 11516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11520 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11521 ;;Total ram usage:        0 bytes
 11522 ;; Hardware stack levels used: 1
 11523 ;; This function calls:
 11524 ;;		Nothing
 11525 ;; This function is called by:
 11526 ;;		Interrupt level 2
 11527 ;; This function uses a non-reentrant model
 11528 ;;
 11529                           
 11530                           	psect	text82
 11531  0037CC                     __ptext82:
 11532                           	callstack 0
 11533  0037CC                     _SMT1_PR_ACQ_ISR:
 11534                           	callstack 15
 11535  0037CC                     
 11536                           ;mcc_generated_files/smt1.c: 196:     PIR1bits.SMT1PRAIF = 0;
 11537  0037CC  0139               	movlb	57	; () banked
 11538  0037CE  9DA1               	bcf	161,6,b	;volatile
 11539  0037D0                     
 11540                           ; BSR set to: 57
 11541                           ;mcc_generated_files/smt1.c: 197:     smtPeriod = SMT1CPR;
 11542  0037D0  013F               	movlb	63	; () banked
 11543  0037D2  5115               	movf	21,w,b	;volatile
 11544  0037D4  6E48               	movwf	_smtPeriod^0,c	;volatile
 11545  0037D6  5116               	movf	22,w,b	;volatile
 11546  0037D8  6E49               	movwf	(_smtPeriod+1)^0,c	;volatile
 11547  0037DA  5117               	movf	23,w,b	;volatile
 11548  0037DC  6E4A               	movwf	(_smtPeriod+2)^0,c	;volatile
 11549  0037DE  6A4B               	clrf	(_smtPeriod+3)^0,c	;volatile
 11550  0037E0                     
 11551                           ; BSR set to: 63
 11552                           ;mcc_generated_files/smt1.c: 198:     if(CLC3CONbits.LC3OUT) smtWay++;
 11553  0037E0  013C               	movlb	60	; () banked
 11554  0037E2  AB60               	btfss	96,5,b	;volatile
 11555  0037E4  EFF6  F01B         	goto	i2u428_41
 11556  0037E8  EFF8  F01B         	goto	i2u428_40
 11557  0037EC                     i2u428_41:
 11558  0037EC  EF01  F01C         	goto	i2l5422
 11559  0037F0                     i2u428_40:
 11560  0037F0                     
 11561                           ; BSR set to: 60
 11562  0037F0  0E01               	movlw	1
 11563  0037F2  0100               	movlb	0	; () banked
 11564  0037F4  2778               	addwf	_smtWay& (0+255),f,b	;volatile
 11565  0037F6  0E00               	movlw	0
 11566  0037F8  2379               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 11567  0037FA  237A               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 11568  0037FC  237B               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 11569  0037FE  EF0A  F01C         	goto	i2l778
 11570  003802                     i2l5422:
 11571                           
 11572                           ; BSR set to: 60
 11573  003802  0EFF               	movlw	255
 11574  003804  0100               	movlb	0	; () banked
 11575  003806  2778               	addwf	_smtWay& (0+255),f,b	;volatile
 11576  003808  0EFF               	movlw	255
 11577  00380A  2379               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 11578  00380C  0EFF               	movlw	255
 11579  00380E  237A               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 11580  003810  0EFF               	movlw	255
 11581  003812  237B               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 11582  003814                     i2l778:
 11583                           
 11584                           ; BSR set to: 0
 11585  003814  0011               	retfie		f
 11586  003816                     __end_of_SMT1_PR_ACQ_ISR:
 11587                           	callstack 0
 11588                           
 11589 ;; *************** function _SMT1_PW_ACQ_ISR *****************
 11590 ;; Defined at:
 11591 ;;		line 203 in file "mcc_generated_files/smt1.c"
 11592 ;; Parameters:    Size  Location     Type
 11593 ;;		None
 11594 ;; Auto vars:     Size  Location     Type
 11595 ;;		None
 11596 ;; Return value:  Size  Location     Type
 11597 ;;                  1    wreg      void 
 11598 ;; Registers used:
 11599 ;;		wreg, status,2, status,0
 11600 ;; Tracked objects:
 11601 ;;		On entry : 0/0
 11602 ;;		On exit  : 0/0
 11603 ;;		Unchanged: 0/0
 11604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11608 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11609 ;;Total ram usage:        0 bytes
 11610 ;; Hardware stack levels used: 1
 11611 ;; This function calls:
 11612 ;;		Nothing
 11613 ;; This function is called by:
 11614 ;;		Interrupt level 2
 11615 ;; This function uses a non-reentrant model
 11616 ;;
 11617                           
 11618                           	psect	text83
 11619  003698                     __ptext83:
 11620                           	callstack 0
 11621  003698                     _SMT1_PW_ACQ_ISR:
 11622                           	callstack 15
 11623  003698                     
 11624                           ;mcc_generated_files/smt1.c: 207:     PIR1bits.SMT1PWAIF = 0;
 11625  003698  0139               	movlb	57	; () banked
 11626  00369A  9FA1               	bcf	161,7,b	;volatile
 11627  00369C                     
 11628                           ; BSR set to: 57
 11629                           ;mcc_generated_files/smt1.c: 208:     smtDuty = SMT1CPW;
 11630  00369C  013F               	movlb	63	; () banked
 11631  00369E  5118               	movf	24,w,b	;volatile
 11632  0036A0  0100               	movlb	0	; () banked
 11633  0036A2  6F7C               	movwf	_smtDuty& (0+255),b	;volatile
 11634  0036A4  013F               	movlb	63	; () banked
 11635  0036A6  5119               	movf	25,w,b	;volatile
 11636  0036A8  0100               	movlb	0	; () banked
 11637  0036AA  6F7D               	movwf	(_smtDuty+1)& (0+255),b	;volatile
 11638  0036AC  013F               	movlb	63	; () banked
 11639  0036AE  511A               	movf	26,w,b	;volatile
 11640  0036B0  0100               	movlb	0	; () banked
 11641  0036B2  6F7E               	movwf	(_smtDuty+2)& (0+255),b	;volatile
 11642  0036B4  6B7F               	clrf	(_smtDuty+3)& (0+255),b	;volatile
 11643  0036B6                     
 11644                           ; BSR set to: 0
 11645                           ;mcc_generated_files/smt1.c: 209:     if(CLC3CONbits.LC3OUT) smtWay++;
 11646  0036B6  013C               	movlb	60	; () banked
 11647  0036B8  AB60               	btfss	96,5,b	;volatile
 11648  0036BA  EF61  F01B         	goto	i2u429_41
 11649  0036BE  EF63  F01B         	goto	i2u429_40
 11650  0036C2                     i2u429_41:
 11651  0036C2  EF6C  F01B         	goto	i2l5432
 11652  0036C6                     i2u429_40:
 11653  0036C6                     
 11654                           ; BSR set to: 60
 11655  0036C6  0E01               	movlw	1
 11656  0036C8  0100               	movlb	0	; () banked
 11657  0036CA  2778               	addwf	_smtWay& (0+255),f,b	;volatile
 11658  0036CC  0E00               	movlw	0
 11659  0036CE  2379               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 11660  0036D0  237A               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 11661  0036D2  237B               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 11662  0036D4  EF75  F01B         	goto	i2l785
 11663  0036D8                     i2l5432:
 11664                           
 11665                           ; BSR set to: 60
 11666  0036D8  0EFF               	movlw	255
 11667  0036DA  0100               	movlb	0	; () banked
 11668  0036DC  2778               	addwf	_smtWay& (0+255),f,b	;volatile
 11669  0036DE  0EFF               	movlw	255
 11670  0036E0  2379               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 11671  0036E2  0EFF               	movlw	255
 11672  0036E4  237A               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 11673  0036E6  0EFF               	movlw	255
 11674  0036E8  237B               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 11675  0036EA                     i2l785:
 11676                           
 11677                           ; BSR set to: 0
 11678  0036EA  0011               	retfie		f
 11679  0036EC                     __end_of_SMT1_PW_ACQ_ISR:
 11680                           	callstack 0
 11681                           
 11682 ;; *************** function _SMT1_Overflow_ISR *****************
 11683 ;; Defined at:
 11684 ;;		line 213 in file "mcc_generated_files/smt1.c"
 11685 ;; Parameters:    Size  Location     Type
 11686 ;;		None
 11687 ;; Auto vars:     Size  Location     Type
 11688 ;;		None
 11689 ;; Return value:  Size  Location     Type
 11690 ;;                  1    wreg      void 
 11691 ;; Registers used:
 11692 ;;		wreg, status,2
 11693 ;; Tracked objects:
 11694 ;;		On entry : 0/0
 11695 ;;		On exit  : 0/0
 11696 ;;		Unchanged: 0/0
 11697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11701 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11702 ;;Total ram usage:        0 bytes
 11703 ;; Hardware stack levels used: 1
 11704 ;; This function calls:
 11705 ;;		Nothing
 11706 ;; This function is called by:
 11707 ;;		Interrupt level 2
 11708 ;; This function uses a non-reentrant model
 11709 ;;
 11710                           
 11711                           	psect	text84
 11712  003DC8                     __ptext84:
 11713                           	callstack 0
 11714  003DC8                     _SMT1_Overflow_ISR:
 11715                           	callstack 15
 11716  003DC8                     
 11717                           ;mcc_generated_files/smt1.c: 217:     PIR1bits.SMT1IF = 0;
 11718  003DC8  0139               	movlb	57	; () banked
 11719  003DCA  9BA1               	bcf	161,5,b	;volatile
 11720  003DCC                     
 11721                           ; BSR set to: 57
 11722                           ;mcc_generated_files/smt1.c: 218:     smtPeriod = 0;
 11723  003DCC  0E00               	movlw	0
 11724  003DCE  6E48               	movwf	_smtPeriod^0,c	;volatile
 11725  003DD0  0E00               	movlw	0
 11726  003DD2  6E49               	movwf	(_smtPeriod+1)^0,c	;volatile
 11727  003DD4  0E00               	movlw	0
 11728  003DD6  6E4A               	movwf	(_smtPeriod+2)^0,c	;volatile
 11729  003DD8  0E00               	movlw	0
 11730  003DDA  6E4B               	movwf	(_smtPeriod+3)^0,c	;volatile
 11731                           
 11732                           ;mcc_generated_files/smt1.c: 219:     smtDuty = 0;
 11733  003DDC  0E00               	movlw	0
 11734  003DDE  0100               	movlb	0	; () banked
 11735  003DE0  6F7C               	movwf	_smtDuty& (0+255),b	;volatile
 11736  003DE2  0E00               	movlw	0
 11737  003DE4  6F7D               	movwf	(_smtDuty+1)& (0+255),b	;volatile
 11738  003DE6  0E00               	movlw	0
 11739  003DE8  6F7E               	movwf	(_smtDuty+2)& (0+255),b	;volatile
 11740  003DEA  0E00               	movlw	0
 11741  003DEC  6F7F               	movwf	(_smtDuty+3)& (0+255),b	;volatile
 11742  003DEE                     
 11743                           ; BSR set to: 0
 11744  003DEE  0011               	retfie		f
 11745  003DF0                     __end_of_SMT1_Overflow_ISR:
 11746                           	callstack 0
 11747                           
 11748 ;; *************** function _CCP3_CaptureISR *****************
 11749 ;; Defined at:
 11750 ;;		line 97 in file "mcc_generated_files/ccp3.c"
 11751 ;; Parameters:    Size  Location     Type
 11752 ;;		None
 11753 ;; Auto vars:     Size  Location     Type
 11754 ;;  module          2   10[COMRAM] struct CCPR3Reg_tag
 11755 ;; Return value:  Size  Location     Type
 11756 ;;                  1    wreg      void 
 11757 ;; Registers used:
 11758 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 11759 ;; Tracked objects:
 11760 ;;		On entry : 0/0
 11761 ;;		On exit  : 0/0
 11762 ;;		Unchanged: 0/0
 11763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11765 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11767 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11768 ;;Total ram usage:        2 bytes
 11769 ;; Hardware stack levels used: 1
 11770 ;; Hardware stack levels required when called: 1
 11771 ;; This function calls:
 11772 ;;		Absolute function
 11773 ;;		_CCP3_DefaultCallBack
 11774 ;; This function is called by:
 11775 ;;		Interrupt level 2
 11776 ;; This function uses a non-reentrant model
 11777 ;;
 11778                           
 11779                           	psect	text85
 11780  003B08                     __ptext85:
 11781                           	callstack 0
 11782  003B08                     _CCP3_CaptureISR:
 11783                           	callstack 14
 11784  003B08                     
 11785                           ;mcc_generated_files/ccp3.c: 99:     CCP3_PERIOD_REG_T module;;mcc_generated_files/ccp3.
      +                          c: 102:     PIR9bits.CCP3IF = 0;
 11786  003B08  0139               	movlb	57	; () banked
 11787  003B0A  93A9               	bcf	169,1,b	;volatile
 11788                           
 11789                           ;mcc_generated_files/ccp3.c: 104:     module.ccpr3l = CCPR3L;
 11790  003B0C  006F FDD0  F00B    	movff	16244,CCP3_CaptureISR@module	;volatile
 11791                           
 11792                           ;mcc_generated_files/ccp3.c: 105:     module.ccpr3h = CCPR3H;
 11793  003B12  006F FDD4  F00C    	movff	16245,CCP3_CaptureISR@module+1	;volatile
 11794  003B18                     
 11795                           ; BSR set to: 57
 11796                           ;mcc_generated_files/ccp3.c: 107:     CCP3_CallBack(module.ccpr3_16Bit);
 11797  003B18  C00B  F009         	movff	CCP3_CaptureISR@module,CCP3_DefaultCallBack@capturedValue
 11798  003B1C  C00C  F00A         	movff	CCP3_CaptureISR@module+1,CCP3_DefaultCallBack@capturedValue+1
 11799  003B20  D802               	call	i2u430_48
 11800  003B22  EF9D  F01D         	goto	i2u430_49
 11801  003B26                     i2u430_48:
 11802  003B26  0005               	push	
 11803  003B28  6EFA               	movwf	pclath,c
 11804  003B2A  0100               	movlb	0	; () banked
 11805  003B2C  51E4               	movf	_CCP3_CallBack& (0+255),w,b
 11806  003B2E  6EFD               	movwf	tosl,c
 11807  003B30  51E5               	movf	(_CCP3_CallBack+1)& (0+255),w,b
 11808  003B32  6EFE               	movwf	tosh,c
 11809  003B34  6AFF               	clrf	tosu,c
 11810  003B36  50FA               	movf	pclath,w,c
 11811  003B38  0012               	return		;indir
 11812  003B3A                     i2u430_49:
 11813  003B3A  0011               	retfie		f
 11814  003B3C                     __end_of_CCP3_CaptureISR:
 11815                           	callstack 0
 11816                           
 11817 ;; *************** function _CCP3_DefaultCallBack *****************
 11818 ;; Defined at:
 11819 ;;		line 63 in file "mcc_generated_files/ccp3.c"
 11820 ;; Parameters:    Size  Location     Type
 11821 ;;  capturedValu    2    8[COMRAM] unsigned short 
 11822 ;; Auto vars:     Size  Location     Type
 11823 ;;		None
 11824 ;; Return value:  Size  Location     Type
 11825 ;;                  1    wreg      void 
 11826 ;; Registers used:
 11827 ;;		wreg, status,2, status,0
 11828 ;; Tracked objects:
 11829 ;;		On entry : 0/0
 11830 ;;		On exit  : 0/0
 11831 ;;		Unchanged: 0/0
 11832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11833 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11836 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11837 ;;Total ram usage:        2 bytes
 11838 ;; Hardware stack levels used: 1
 11839 ;; This function calls:
 11840 ;;		Nothing
 11841 ;; This function is called by:
 11842 ;;		_CCP3_Initialize
 11843 ;;		_CCP3_CaptureISR
 11844 ;; This function uses a non-reentrant model
 11845 ;;
 11846                           
 11847                           	psect	text86
 11848  003C06                     __ptext86:
 11849                           	callstack 0
 11850  003C06                     _CCP3_DefaultCallBack:
 11851                           	callstack 14
 11852  003C06                     
 11853                           ;mcc_generated_files/ccp3.c: 63: static void CCP3_DefaultCallBack(uint16_t capturedValue
      +                          );mcc_generated_files/ccp3.c: 64: {;mcc_generated_files/ccp3.c: 66:     if(PORTDbits.RD7
      +                          ) {
 11854  003C06  AECD               	btfss	205,7,c	;volatile
 11855  003C08  EF08  F01E         	goto	i2u414_41
 11856  003C0C  EF0A  F01E         	goto	i2u414_40
 11857  003C10                     i2u414_41:
 11858  003C10  EF10  F01E         	goto	i2l5344
 11859  003C14                     i2u414_40:
 11860  003C14                     
 11861                           ;mcc_generated_files/ccp3.c: 67:         distLeftM = capturedValue;
 11862  003C14  C009  F098         	movff	CCP3_DefaultCallBack@capturedValue,_distLeftM
 11863  003C18  C00A  F099         	movff	CCP3_DefaultCallBack@capturedValue+1,_distLeftM+1
 11864                           
 11865                           ;mcc_generated_files/ccp3.c: 68:     } else {
 11866  003C1C  EF1A  F01E         	goto	i2l1074
 11867  003C20                     i2l5344:
 11868                           
 11869                           ;mcc_generated_files/ccp3.c: 69:         distLeft = capturedValue - distLeftM;
 11870  003C20  0100               	movlb	0	; () banked
 11871  003C22  5198               	movf	_distLeftM& (0+255),w,b
 11872  003C24  5C09               	subwf	CCP3_DefaultCallBack@capturedValue^0,w,c
 11873  003C26  6F9A               	movwf	_distLeft& (0+255),b	;volatile
 11874  003C28  5199               	movf	(_distLeftM+1)& (0+255),w,b
 11875  003C2A  580A               	subwfb	(CCP3_DefaultCallBack@capturedValue+1)^0,w,c
 11876  003C2C  6F9B               	movwf	(_distLeft+1)& (0+255),b	;volatile
 11877  003C2E                     
 11878                           ; BSR set to: 0
 11879                           ;mcc_generated_files/ccp3.c: 70:         distLeft >>= 1;
 11880  003C2E  90D8               	bcf	status,0,c
 11881  003C30  339B               	rrcf	(_distLeft+1)& (0+255),f,b	;volatile
 11882  003C32  339A               	rrcf	_distLeft& (0+255),f,b	;volatile
 11883  003C34                     i2l1074:
 11884  003C34  0012               	return		;funcret
 11885  003C36                     __end_of_CCP3_DefaultCallBack:
 11886                           	callstack 0
 11887                           
 11888 ;; *************** function _CCP4_CaptureISR *****************
 11889 ;; Defined at:
 11890 ;;		line 149 in file "mcc_generated_files/ccp4.c"
 11891 ;; Parameters:    Size  Location     Type
 11892 ;;		None
 11893 ;; Auto vars:     Size  Location     Type
 11894 ;;  module          2   14[COMRAM] struct CCPR4Reg_tag
 11895 ;; Return value:  Size  Location     Type
 11896 ;;                  1    wreg      void 
 11897 ;; Registers used:
 11898 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 11899 ;; Tracked objects:
 11900 ;;		On entry : 0/0
 11901 ;;		On exit  : 0/0
 11902 ;;		Unchanged: 0/0
 11903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11905 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11907 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11908 ;;Total ram usage:        2 bytes
 11909 ;; Hardware stack levels used: 1
 11910 ;; Hardware stack levels required when called: 1
 11911 ;; This function calls:
 11912 ;;		Absolute function
 11913 ;;		_CCP4_DefaultCallBack
 11914 ;; This function is called by:
 11915 ;;		Interrupt level 2
 11916 ;; This function uses a non-reentrant model
 11917 ;;
 11918                           
 11919                           	psect	text87
 11920  003B3C                     __ptext87:
 11921                           	callstack 0
 11922  003B3C                     _CCP4_CaptureISR:
 11923                           	callstack 14
 11924  003B3C                     
 11925                           ;mcc_generated_files/ccp4.c: 151:     CCP4_PERIOD_REG_T module;;mcc_generated_files/ccp4
      +                          .c: 154:     PIR10bits.CCP4IF = 0;
 11926  003B3C  0139               	movlb	57	; () banked
 11927  003B3E  91AA               	bcf	170,0,b	;volatile
 11928                           
 11929                           ;mcc_generated_files/ccp4.c: 156:     module.ccpr4l = CCPR4L;
 11930  003B40  006F FDC0  F00F    	movff	16240,CCP4_CaptureISR@module	;volatile
 11931                           
 11932                           ;mcc_generated_files/ccp4.c: 157:     module.ccpr4h = CCPR4H;
 11933  003B46  006F FDC4  F010    	movff	16241,CCP4_CaptureISR@module+1	;volatile
 11934  003B4C                     
 11935                           ; BSR set to: 57
 11936                           ;mcc_generated_files/ccp4.c: 159:     CCP4_CallBack(module.ccpr4_16Bit);
 11937  003B4C  C00F  F00D         	movff	CCP4_CaptureISR@module,CCP4_DefaultCallBack@capturedValue
 11938  003B50  C010  F00E         	movff	CCP4_CaptureISR@module+1,CCP4_DefaultCallBack@capturedValue+1
 11939  003B54  D802               	call	i2u431_48
 11940  003B56  EFB7  F01D         	goto	i2u431_49
 11941  003B5A                     i2u431_48:
 11942  003B5A  0005               	push	
 11943  003B5C  6EFA               	movwf	pclath,c
 11944  003B5E  0100               	movlb	0	; () banked
 11945  003B60  51E2               	movf	_CCP4_CallBack& (0+255),w,b
 11946  003B62  6EFD               	movwf	tosl,c
 11947  003B64  51E3               	movf	(_CCP4_CallBack+1)& (0+255),w,b
 11948  003B66  6EFE               	movwf	tosh,c
 11949  003B68  6AFF               	clrf	tosu,c
 11950  003B6A  50FA               	movf	pclath,w,c
 11951  003B6C  0012               	return		;indir
 11952  003B6E                     i2u431_49:
 11953  003B6E  0011               	retfie		f
 11954  003B70                     __end_of_CCP4_CaptureISR:
 11955                           	callstack 0
 11956                           
 11957 ;; *************** function _CCP4_DefaultCallBack *****************
 11958 ;; Defined at:
 11959 ;;		line 112 in file "mcc_generated_files/ccp4.c"
 11960 ;; Parameters:    Size  Location     Type
 11961 ;;  capturedValu    2   12[COMRAM] unsigned short 
 11962 ;; Auto vars:     Size  Location     Type
 11963 ;;		None
 11964 ;; Return value:  Size  Location     Type
 11965 ;;                  1    wreg      void 
 11966 ;; Registers used:
 11967 ;;		wreg, status,2, status,0
 11968 ;; Tracked objects:
 11969 ;;		On entry : 0/0
 11970 ;;		On exit  : 0/0
 11971 ;;		Unchanged: 0/0
 11972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11973 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11976 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11977 ;;Total ram usage:        2 bytes
 11978 ;; Hardware stack levels used: 1
 11979 ;; This function calls:
 11980 ;;		Nothing
 11981 ;; This function is called by:
 11982 ;;		_CCP4_Initialize
 11983 ;;		_CCP4_CaptureISR
 11984 ;; This function uses a non-reentrant model
 11985 ;;
 11986                           
 11987                           	psect	text88
 11988  003C36                     __ptext88:
 11989                           	callstack 0
 11990  003C36                     _CCP4_DefaultCallBack:
 11991                           	callstack 14
 11992  003C36                     
 11993                           ;mcc_generated_files/ccp4.c: 112: static void CCP4_DefaultCallBack(uint16_t capturedValu
      +                          e);mcc_generated_files/ccp4.c: 113: {;mcc_generated_files/ccp4.c: 115:     if(PORTDbits.
      +                          RD6) {
 11994  003C36  ACCD               	btfss	205,6,c	;volatile
 11995  003C38  EF20  F01E         	goto	i2u415_41
 11996  003C3C  EF22  F01E         	goto	i2u415_40
 11997  003C40                     i2u415_41:
 11998  003C40  EF28  F01E         	goto	i2l5352
 11999  003C44                     i2u415_40:
 12000  003C44                     
 12001                           ;mcc_generated_files/ccp4.c: 116:         distRightM = capturedValue;
 12002  003C44  C00D  F094         	movff	CCP4_DefaultCallBack@capturedValue,_distRightM
 12003  003C48  C00E  F095         	movff	CCP4_DefaultCallBack@capturedValue+1,_distRightM+1
 12004                           
 12005                           ;mcc_generated_files/ccp4.c: 118:     } else {
 12006  003C4C  EF32  F01E         	goto	i2l1112
 12007  003C50                     i2l5352:
 12008                           
 12009                           ;mcc_generated_files/ccp4.c: 119:         distRight = capturedValue - distRightM;
 12010  003C50  0100               	movlb	0	; () banked
 12011  003C52  5194               	movf	_distRightM& (0+255),w,b
 12012  003C54  5C0D               	subwf	CCP4_DefaultCallBack@capturedValue^0,w,c
 12013  003C56  6F96               	movwf	_distRight& (0+255),b	;volatile
 12014  003C58  5195               	movf	(_distRightM+1)& (0+255),w,b
 12015  003C5A  580E               	subwfb	(CCP4_DefaultCallBack@capturedValue+1)^0,w,c
 12016  003C5C  6F97               	movwf	(_distRight+1)& (0+255),b	;volatile
 12017  003C5E                     
 12018                           ; BSR set to: 0
 12019                           ;mcc_generated_files/ccp4.c: 120:         distRight >>= 1;
 12020  003C5E  90D8               	bcf	status,0,c
 12021  003C60  3397               	rrcf	(_distRight+1)& (0+255),f,b	;volatile
 12022  003C62  3396               	rrcf	_distRight& (0+255),f,b	;volatile
 12023  003C64                     i2l1112:
 12024  003C64  0012               	return		;funcret
 12025  003C66                     __end_of_CCP4_DefaultCallBack:
 12026                           	callstack 0
 12027                           
 12028                           ;
 12029                           ; Interrupt Vector Table @ 0x8
 12030                           ;
 12031                           
 12032                           	psect	ivt0x8
 12033  000008                     __pivt0x8:
 12034                           	callstack 0
 12035  000008                     ivt0x8_base:
 12036                           	callstack 0
 12037                           
 12038                           ; Vector 0 : SWINT
 12039  000008  0FEC               	dw	_Default_ISR shr (0+2)
 12040                           
 12041                           ; Vector 1 : HLVD
 12042  00000A  0FEC               	dw	_Default_ISR shr (0+2)
 12043                           
 12044                           ; Vector 2 : OSF
 12045  00000C  0FEC               	dw	_Default_ISR shr (0+2)
 12046                           
 12047                           ; Vector 3 : CSW
 12048  00000E  0FEC               	dw	_Default_ISR shr (0+2)
 12049                           
 12050                           ; Vector 4 : NVM
 12051  000010  0FEC               	dw	_Default_ISR shr (0+2)
 12052                           
 12053                           ; Vector 5 : SCAN
 12054  000012  0FEC               	dw	_Default_ISR shr (0+2)
 12055                           
 12056                           ; Vector 6 : CRC
 12057  000014  0FEC               	dw	_Default_ISR shr (0+2)
 12058                           
 12059                           ; Vector 7 : IOC
 12060  000016  0FEC               	dw	_Default_ISR shr (0+2)
 12061                           
 12062                           ; Vector 8 : INT0
 12063  000018  0FEC               	dw	_Default_ISR shr (0+2)
 12064                           
 12065                           ; Vector 9 : ZCD
 12066  00001A  0FEC               	dw	_Default_ISR shr (0+2)
 12067                           
 12068                           ; Vector 10 : AD
 12069  00001C  0FEC               	dw	_Default_ISR shr (0+2)
 12070                           
 12071                           ; Vector 11 : ADT
 12072  00001E  0FEC               	dw	_Default_ISR shr (0+2)
 12073                           
 12074                           ; Vector 12 : CMP1
 12075  000020  0FEC               	dw	_Default_ISR shr (0+2)
 12076                           
 12077                           ; Vector 13 : SMT1
 12078  000022  0F72               	dw	_SMT1_Overflow_ISR shr (0+2)
 12079                           
 12080                           ; Vector 14 : SMT1PRA
 12081  000024  0DF3               	dw	_SMT1_PR_ACQ_ISR shr (0+2)
 12082                           
 12083                           ; Vector 15 : SMT1PRW
 12084  000026  0DA6               	dw	_SMT1_PW_ACQ_ISR shr (0+2)
 12085                           
 12086                           ; Vector 16 : DMA1SCNT
 12087  000028  0FEC               	dw	_Default_ISR shr (0+2)
 12088                           
 12089                           ; Vector 17 : DMA1DCNT
 12090  00002A  0FEC               	dw	_Default_ISR shr (0+2)
 12091                           
 12092                           ; Vector 18 : DMA1OR
 12093  00002C  0FEC               	dw	_Default_ISR shr (0+2)
 12094                           
 12095                           ; Vector 19 : DMA1A
 12096  00002E  0FEC               	dw	_Default_ISR shr (0+2)
 12097                           
 12098                           ; Vector 20 : SPI1RX
 12099  000030  0FEC               	dw	_Default_ISR shr (0+2)
 12100                           
 12101                           ; Vector 21 : SPI1TX
 12102  000032  0FEC               	dw	_Default_ISR shr (0+2)
 12103                           
 12104                           ; Vector 22 : SPI1
 12105  000034  0FEC               	dw	_Default_ISR shr (0+2)
 12106                           
 12107                           ; Vector 23 : I2C1RX
 12108  000036  0FEC               	dw	_Default_ISR shr (0+2)
 12109                           
 12110                           ; Vector 24 : I2C1TX
 12111  000038  0FEC               	dw	_Default_ISR shr (0+2)
 12112                           
 12113                           ; Vector 25 : I2C1
 12114  00003A  0FEC               	dw	_Default_ISR shr (0+2)
 12115                           
 12116                           ; Vector 26 : I2C1E
 12117  00003C  0FEC               	dw	_Default_ISR shr (0+2)
 12118                           
 12119                           ; Vector 27 : U1RX
 12120  00003E  0E55               	dw	_UART1_rx_vect_isr shr (0+2)
 12121                           
 12122                           ; Vector 28 : U1TX
 12123  000040  0E46               	dw	_UART1_tx_vect_isr shr (0+2)
 12124                           
 12125                           ; Vector 29 : U1E
 12126  000042  0FEC               	dw	_Default_ISR shr (0+2)
 12127                           
 12128                           ; Vector 30 : U1
 12129  000044  0FEC               	dw	_Default_ISR shr (0+2)
 12130                           
 12131                           ; Vector 31 : TMR0
 12132  000046  0FEC               	dw	_Default_ISR shr (0+2)
 12133                           
 12134                           ; Vector 32 : TMR1
 12135  000048  0FEC               	dw	_Default_ISR shr (0+2)
 12136                           
 12137                           ; Vector 33 : TMR1G
 12138  00004A  0FEC               	dw	_Default_ISR shr (0+2)
 12139                           
 12140                           ; Vector 34 : TMR2
 12141  00004C  0FEC               	dw	_Default_ISR shr (0+2)
 12142                           
 12143                           ; Vector 35 : CCP1
 12144  00004E  0FEC               	dw	_Default_ISR shr (0+2)
 12145                           
 12146                           ; Vector 36 : Undefined
 12147  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 12148                           
 12149                           ; Vector 37 : NCO1
 12150  000052  0FEC               	dw	_Default_ISR shr (0+2)
 12151                           
 12152                           ; Vector 38 : CWG1
 12153  000054  0FEC               	dw	_Default_ISR shr (0+2)
 12154                           
 12155                           ; Vector 39 : CLC1
 12156  000056  0FEC               	dw	_Default_ISR shr (0+2)
 12157                           
 12158                           ; Vector 40 : INT1
 12159  000058  0FEC               	dw	_Default_ISR shr (0+2)
 12160                           
 12161                           ; Vector 41 : CMP2
 12162  00005A  0FEC               	dw	_Default_ISR shr (0+2)
 12163                           
 12164                           ; Vector 42 : DMA2SCNT
 12165  00005C  0FEC               	dw	_Default_ISR shr (0+2)
 12166                           
 12167                           ; Vector 43 : DMA2DCNT
 12168  00005E  0FEC               	dw	_Default_ISR shr (0+2)
 12169                           
 12170                           ; Vector 44 : DMA2OR
 12171  000060  0FEC               	dw	_Default_ISR shr (0+2)
 12172                           
 12173                           ; Vector 45 : DMA2A
 12174  000062  0FEC               	dw	_Default_ISR shr (0+2)
 12175                           
 12176                           ; Vector 46 : I2C2RX
 12177  000064  0FEC               	dw	_Default_ISR shr (0+2)
 12178                           
 12179                           ; Vector 47 : I2C2TX
 12180  000066  0FEC               	dw	_Default_ISR shr (0+2)
 12181                           
 12182                           ; Vector 48 : I2C2
 12183  000068  0FEC               	dw	_Default_ISR shr (0+2)
 12184                           
 12185                           ; Vector 49 : I2C2E
 12186  00006A  0FEC               	dw	_Default_ISR shr (0+2)
 12187                           
 12188                           ; Vector 50 : U2RX
 12189  00006C  0FEC               	dw	_Default_ISR shr (0+2)
 12190                           
 12191                           ; Vector 51 : U2TX
 12192  00006E  0FEC               	dw	_Default_ISR shr (0+2)
 12193                           
 12194                           ; Vector 52 : U2E
 12195  000070  0FEC               	dw	_Default_ISR shr (0+2)
 12196                           
 12197                           ; Vector 53 : U2
 12198  000072  0FEC               	dw	_Default_ISR shr (0+2)
 12199                           
 12200                           ; Vector 54 : TMR3
 12201  000074  0FEC               	dw	_Default_ISR shr (0+2)
 12202                           
 12203                           ; Vector 55 : TMR3G
 12204  000076  0FEC               	dw	_Default_ISR shr (0+2)
 12205                           
 12206                           ; Vector 56 : TMR4
 12207  000078  0E72               	dw	_TMR4_ISR shr (0+2)
 12208                           
 12209                           ; Vector 57 : CCP2
 12210  00007A  0FEC               	dw	_Default_ISR shr (0+2)
 12211                           
 12212                           ; Vector 58 : Undefined
 12213  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 12214                           
 12215                           ; Vector 59 : CWG2
 12216  00007E  0FEC               	dw	_Default_ISR shr (0+2)
 12217                           
 12218                           ; Vector 60 : CLC2
 12219  000080  0FEC               	dw	_Default_ISR shr (0+2)
 12220                           
 12221                           ; Vector 61 : INT2
 12222  000082  0FEC               	dw	_Default_ISR shr (0+2)
 12223                           
 12224                           ; Vector 62 : Undefined
 12225  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 12226                           
 12227                           ; Vector 63 : Undefined
 12228  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 12229                           
 12230                           ; Vector 64 : Undefined
 12231  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 12232                           
 12233                           ; Vector 65 : Undefined
 12234  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 12235                           
 12236                           ; Vector 66 : Undefined
 12237  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 12238                           
 12239                           ; Vector 67 : Undefined
 12240  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 12241                           
 12242                           ; Vector 68 : Undefined
 12243  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 12244                           
 12245                           ; Vector 69 : Undefined
 12246  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 12247                           
 12248                           ; Vector 70 : TMR5
 12249  000094  0FEC               	dw	_Default_ISR shr (0+2)
 12250                           
 12251                           ; Vector 71 : TMR5G
 12252  000096  0EE9               	dw	_TMR5_GATE_ISR shr (0+2)
 12253                           
 12254                           ; Vector 72 : TMR6
 12255  000098  0FEC               	dw	_Default_ISR shr (0+2)
 12256                           
 12257                           ; Vector 73 : CCP3
 12258  00009A  0EC2               	dw	_CCP3_CaptureISR shr (0+2)
 12259                           
 12260                           ; Vector 74 : CWG3
 12261  00009C  0FEC               	dw	_Default_ISR shr (0+2)
 12262                           
 12263                           ; Vector 75 : CLC3
 12264  00009E  0FEC               	dw	_Default_ISR shr (0+2)
 12265                           
 12266                           ; Vector 76 : Undefined
 12267  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 12268                           
 12269                           ; Vector 77 : Undefined
 12270  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 12271                           
 12272                           ; Vector 78 : Undefined
 12273  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 12274                           
 12275                           ; Vector 79 : Undefined
 12276  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 12277                           
 12278                           ; Vector 80 : CCP4
 12279  0000A8  0ECF               	dw	_CCP4_CaptureISR shr (0+2)
 12280                           
 12281                           ; Vector 81 : CLC4
 12282  0000AA  0FEC               	dw	_Default_ISR shr (0+2)
 12283  0000AC                     ivt0x8_undefint:
 12284                           	callstack 0
 12285  0000AC  00FF               	reset	
 12286                           
 12287                           	psect	text89
 12288  000000                     __ptext89:
 12289                           	callstack 0
 12290  000000                     
 12291                           	psect	rparam
 12292  0000                     
 12293                           	psect	idloc
 12294                           
 12295                           ;Config register IDLOC0 @ 0x200000
 12296                           ;	unspecified, using default values
 12297  200000                     	org	2097152
 12298  200000  0FFF               	dw	4095
 12299                           
 12300                           ;Config register IDLOC1 @ 0x200002
 12301                           ;	unspecified, using default values
 12302  200002                     	org	2097154
 12303  200002  0FFF               	dw	4095
 12304                           
 12305                           ;Config register IDLOC2 @ 0x200004
 12306                           ;	unspecified, using default values
 12307  200004                     	org	2097156
 12308  200004  0FFF               	dw	4095
 12309                           
 12310                           ;Config register IDLOC3 @ 0x200006
 12311                           ;	unspecified, using default values
 12312  200006                     	org	2097158
 12313  200006  0FFF               	dw	4095
 12314                           
 12315                           ;Config register IDLOC4 @ 0x200008
 12316                           ;	unspecified, using default values
 12317  200008                     	org	2097160
 12318  200008  0FFF               	dw	4095
 12319                           
 12320                           ;Config register IDLOC5 @ 0x20000A
 12321                           ;	unspecified, using default values
 12322  20000A                     	org	2097162
 12323  20000A  0FFF               	dw	4095
 12324                           
 12325                           ;Config register IDLOC6 @ 0x20000C
 12326                           ;	unspecified, using default values
 12327  20000C                     	org	2097164
 12328  20000C  0FFF               	dw	4095
 12329                           
 12330                           ;Config register IDLOC7 @ 0x20000E
 12331                           ;	unspecified, using default values
 12332  20000E                     	org	2097166
 12333  20000E  0FFF               	dw	4095
 12334                           
 12335                           	psect	config
 12336                           
 12337                           ;Config register CONFIG1L @ 0x300000
 12338                           ;	External Oscillator Selection
 12339                           ;	FEXTOSC = OFF, Oscillator not enabled
 12340                           ;	Reset Oscillator Selection
 12341                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
 12342  300000                     	org	3145728
 12343  300000  8C                 	db	140
 12344                           
 12345                           ;Config register CONFIG1H @ 0x300001
 12346                           ;	Clock out Enable bit
 12347                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 12348                           ;	PRLOCKED One-Way Set Enable bit
 12349                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
 12350                           ;	Clock Switch Enable bit
 12351                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 12352                           ;	Fail-Safe Clock Monitor Enable bit
 12353                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 12354  300001                     	org	3145729
 12355  300001  FF                 	db	255
 12356                           
 12357                           ;Config register CONFIG2L @ 0x300002
 12358                           ;	MCLR Enable bit
 12359                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 12360                           ;	Power-up timer selection bits
 12361                           ;	PWRTS = PWRT_OFF, PWRT is disabled
 12362                           ;	Multi-vector enable bit
 12363                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
 12364                           ;	IVTLOCK bit One-way set enable bit
 12365                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
 12366                           ;	Low Power BOR Enable bit
 12367                           ;	LPBOREN = OFF, ULPBOR disabled
 12368                           ;	Brown-out Reset Enable bits
 12369                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 12370  300002                     	org	3145730
 12371  300002  FF                 	db	255
 12372                           
 12373                           ;Config register CONFIG2H @ 0x300003
 12374                           ;	Brown-out Reset Voltage Selection bits
 12375                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
 12376                           ;	ZCD Disable bit
 12377                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 12378                           ;	PPSLOCK bit One-Way Set Enable bit
 12379                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
 12380                           ;	Stack Full/Underflow Reset Enable bit
 12381                           ;	STVREN = ON, Stack full/underflow will cause Reset
 12382                           ;	Debugger Enable bit
 12383                           ;	DEBUG = OFF, Background debugger disabled
 12384                           ;	Extended Instruction Set Enable bit
 12385                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 12386  300003                     	org	3145731
 12387  300003  FF                 	db	255
 12388                           
 12389                           ;Config register CONFIG3L @ 0x300004
 12390                           ;	WDT Period selection bits
 12391                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 12392                           ;	WDT operating mode
 12393                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
 12394  300004                     	org	3145732
 12395  300004  9F                 	db	159
 12396                           
 12397                           ;Config register CONFIG3H @ 0x300005
 12398                           ;	WDT Window Select bits
 12399                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 12400                           ;	WDT input clock selector
 12401                           ;	WDTCCS = SC, Software Control
 12402  300005                     	org	3145733
 12403  300005  FF                 	db	255
 12404                           
 12405                           ;Config register CONFIG4L @ 0x300006
 12406                           ;	Boot Block Size selection bits
 12407                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
 12408                           ;	Boot Block enable bit
 12409                           ;	BBEN = OFF, Boot block disabled
 12410                           ;	Storage Area Flash enable bit
 12411                           ;	SAFEN = OFF, SAF disabled
 12412                           ;	Application Block write protection bit
 12413                           ;	WRTAPP = OFF, Application Block not write protected
 12414  300006                     	org	3145734
 12415  300006  FF                 	db	255
 12416                           
 12417                           ;Config register CONFIG4H @ 0x300007
 12418                           ;	Configuration Register Write Protection bit
 12419                           ;	WRTB = OFF, Configuration registers (300000-30000Bh) not write-protected
 12420                           ;	Boot Block Write Protection bit
 12421                           ;	WRTC = OFF, Boot Block (000000-0007FFh) not write-protected
 12422                           ;	Data EEPROM Write Protection bit
 12423                           ;	WRTD = OFF, Data EEPROM not write-protected
 12424                           ;	SAF Write protection bit
 12425                           ;	WRTSAF = OFF, SAF not Write Protected
 12426                           ;	Low Voltage Programming Enable bit
 12427                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
 12428  300007                     	org	3145735
 12429  300007  FF                 	db	255
 12430                           
 12431                           ;Config register CONFIG5L @ 0x300008
 12432                           ;	PFM and Data EEPROM Code Protection bit
 12433                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
 12434  300008                     	org	3145736
 12435  300008  FF                 	db	255
 12436                           
 12437                           ;Config register CONFIG5H @ 0x300009
 12438                           ;	unspecified, using default values
 12439  300009                     	org	3145737
 12440  300009  FF                 	db	255
 12441                           tosu	equ	0x3FFF
 12442                           tosh	equ	0x3FFE
 12443                           tosl	equ	0x3FFD
 12444                           stkptr	equ	0x3FFC
 12445                           pclatu	equ	0x3FFB
 12446                           pclath	equ	0x3FFA
 12447                           pcl	equ	0x3FF9
 12448                           tblptru	equ	0x3FF8
 12449                           tblptrh	equ	0x3FF7
 12450                           tblptrl	equ	0x3FF6
 12451                           tablat	equ	0x3FF5
 12452                           prodh	equ	0x3FF4
 12453                           prodl	equ	0x3FF3
 12454                           indf0	equ	0x3FEF
 12455                           postinc0	equ	0x3FEE
 12456                           postdec0	equ	0x3FED
 12457                           preinc0	equ	0x3FEC
 12458                           plusw0	equ	0x3FEB
 12459                           fsr0h	equ	0x3FEA
 12460                           fsr0l	equ	0x3FE9
 12461                           wreg	equ	0x3FE8
 12462                           indf1	equ	0x3FE7
 12463                           postinc1	equ	0x3FE6
 12464                           postdec1	equ	0x3FE5
 12465                           preinc1	equ	0x3FE4
 12466                           plusw1	equ	0x3FE3
 12467                           fsr1h	equ	0x3FE2
 12468                           fsr1l	equ	0x3FE1
 12469                           bsr	equ	0x3FE0
 12470                           indf2	equ	0x3FDF
 12471                           postinc2	equ	0x3FDE
 12472                           postdec2	equ	0x3FDD
 12473                           preinc2	equ	0x3FDC
 12474                           plusw2	equ	0x3FDB
 12475                           fsr2h	equ	0x3FDA
 12476                           fsr2l	equ	0x3FD9
 12477                           status	equ	0x3FD8

Data Sizes:
    Strings     113
    Constant    0
    Data        0
    BSS         115
    Persistent  23
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     58      76
    BANK0           160     64     152
    BANK1           256      0      32
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S3420_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_10(CODE[10]), STR_9(CODE[12]), STR_8(CODE[11]), STR_7(CODE[11]), 
		 -> STR_6(CODE[9]), STR_5(CODE[2]), STR_4(CODE[14]), STR_3(CODE[13]), 
		 -> STR_2(CODE[22]), STR_1(CODE[11]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 22
		 -> STR_10(CODE[10]), STR_9(CODE[12]), STR_8(CODE[11]), STR_7(CODE[11]), 
		 -> STR_6(CODE[9]), STR_5(CODE[2]), STR_4(CODE[14]), STR_3(CODE[13]), 
		 -> STR_2(CODE[22]), STR_1(CODE[11]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_10(CODE[10]), STR_9(CODE[12]), STR_8(CODE[11]), STR_7(CODE[11]), 
		 -> STR_6(CODE[9]), STR_5(CODE[2]), STR_4(CODE[14]), STR_3(CODE[13]), 
		 -> STR_2(CODE[22]), STR_1(CODE[11]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    CCP4_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP4_DefaultCallBack(), 

    CCP4_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP4_DefaultCallBack(), Absolute function(), 

    CCP3_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP3_DefaultCallBack(), 

    CCP3_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP3_DefaultCallBack(), Absolute function(), 

    TMR4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_10msISR(), TMR4_DefaultInterruptHandler(), 

    TMR4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_10msISR(), TMR4_DefaultInterruptHandler(), Absolute function(), 

    TMR5_SetGateInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR5_DefaultGateInterruptHandler(), 

    TMR5_GateInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR5_DefaultGateInterruptHandler(), Absolute function(), 

    UART1_SetTxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    UART1_SetRxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultErrorHandler(), 

    UART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), 

    UART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), 

    UART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultErrorHandler(), 

    UART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultOverrunErrorHandler(), 

    UART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultFramingErrorHandler(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_Receive_ISR(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_Transmit_ISR(), 


Critical Paths under _main in COMRAM

    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_UART1_Write
    _abs->___aomod
    _calcSteering->_setSteering
    _setSteering->___awdiv
    _calcSpeed->___fladd
    ___fladd->___flmul
    _setMotor->_PWM7_LoadDutyValue
    _setMotor->_PWM8_LoadDutyValue
    _actSpeed->___aldiv
    ___xxtofl->_ADCC_GetSingleConversion
    ___fltol->___fladd
    ___flmul->___xxtofl
    ___flge->___xxtofl
    _SYSTEM_Initialize->_TMR5_Initialize
    _UART1_Initialize->_UART1_SetErrorHandler
    _UART1_Initialize->_UART1_SetFramingErrorHandler
    _UART1_Initialize->_UART1_SetOverrunErrorHandler
    _UART1_Initialize->_UART1_SetRxInterruptHandler
    _UART1_Initialize->_UART1_SetTxInterruptHandler
    _TMR5_Initialize->_TMR5_SetGateInterruptHandler
    _TMR4_Initialize->_TMR4_SetInterruptHandler
    _CCP4_Initialize->_CCP4_SetCallBack
    _CCP3_Initialize->_CCP3_SetCallBack

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR4_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _TMR5_GATE_ISR in COMRAM

    _TMR5_DefaultGateInterruptHandler->_TMR5_ReadTimer
    _TMR5_Reload->_TMR5_WriteTimer

Critical Paths under _SMT1_PR_ACQ_ISR in COMRAM

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in COMRAM

    None.

Critical Paths under _SMT1_Overflow_ISR in COMRAM

    None.

Critical Paths under _CCP3_CaptureISR in COMRAM

    _CCP3_CaptureISR->_CCP3_DefaultCallBack

Critical Paths under _CCP4_CaptureISR in COMRAM

    _CCP4_CaptureISR->_CCP4_DefaultCallBack

Critical Paths under _main in BANK0

    _loop->_getCurve
    _getCurve->_printf
    _getBatteryVoltage->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _calcSpeed->___fltol
    ___fladd->___flmul
    _calcMotorPow->___fltol
    ___fltol->___fladd

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR4_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _TMR5_GATE_ISR in BANK0

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK0

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK0

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK0

    None.

Critical Paths under _CCP3_CaptureISR in BANK0

    None.

Critical Paths under _CCP4_CaptureISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR4_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _TMR5_GATE_ISR in BANK1

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK1

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK1

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK1

    None.

Critical Paths under _CCP3_CaptureISR in BANK1

    None.

Critical Paths under _CCP4_CaptureISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR4_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _TMR5_GATE_ISR in BANK2

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK2

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK2

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK2

    None.

Critical Paths under _CCP3_CaptureISR in BANK2

    None.

Critical Paths under _CCP4_CaptureISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR4_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _TMR5_GATE_ISR in BANK3

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK3

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK3

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK3

    None.

Critical Paths under _CCP3_CaptureISR in BANK3

    None.

Critical Paths under _CCP4_CaptureISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR4_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _TMR5_GATE_ISR in BANK4

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK4

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK4

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK4

    None.

Critical Paths under _CCP3_CaptureISR in BANK4

    None.

Critical Paths under _CCP4_CaptureISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR4_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _TMR5_GATE_ISR in BANK5

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK5

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK5

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK5

    None.

Critical Paths under _CCP3_CaptureISR in BANK5

    None.

Critical Paths under _CCP4_CaptureISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR4_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _TMR5_GATE_ISR in BANK6

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK6

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK6

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK6

    None.

Critical Paths under _CCP3_CaptureISR in BANK6

    None.

Critical Paths under _CCP4_CaptureISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR4_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _TMR5_GATE_ISR in BANK7

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK7

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK7

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK7

    None.

Critical Paths under _CCP3_CaptureISR in BANK7

    None.

Critical Paths under _CCP4_CaptureISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR4_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _TMR5_GATE_ISR in BANK8

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK8

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK8

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK8

    None.

Critical Paths under _CCP3_CaptureISR in BANK8

    None.

Critical Paths under _CCP4_CaptureISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR4_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _TMR5_GATE_ISR in BANK9

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK9

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK9

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK9

    None.

Critical Paths under _CCP3_CaptureISR in BANK9

    None.

Critical Paths under _CCP4_CaptureISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR4_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _TMR5_GATE_ISR in BANK10

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK10

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK10

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK10

    None.

Critical Paths under _CCP3_CaptureISR in BANK10

    None.

Critical Paths under _CCP4_CaptureISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR4_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _TMR5_GATE_ISR in BANK11

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK11

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK11

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK11

    None.

Critical Paths under _CCP3_CaptureISR in BANK11

    None.

Critical Paths under _CCP4_CaptureISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR4_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _TMR5_GATE_ISR in BANK12

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK12

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK12

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK12

    None.

Critical Paths under _CCP3_CaptureISR in BANK12

    None.

Critical Paths under _CCP4_CaptureISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR4_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _TMR5_GATE_ISR in BANK13

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK13

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK13

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK13

    None.

Critical Paths under _CCP3_CaptureISR in BANK13

    None.

Critical Paths under _CCP4_CaptureISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR4_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _TMR5_GATE_ISR in BANK14

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK14

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK14

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK14

    None.

Critical Paths under _CCP3_CaptureISR in BANK14

    None.

Critical Paths under _CCP4_CaptureISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR4_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _TMR5_GATE_ISR in BANK15

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK15

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK15

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK15

    None.

Critical Paths under _CCP3_CaptureISR in BANK15

    None.

Critical Paths under _CCP4_CaptureISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   38569
                  _SYSTEM_Initialize
           _TMR4_SetInterruptHandler
                               _loop
 ---------------------------------------------------------------------------------
 (1) _loop                                                 0     0      0   37422
           _ADCC_GetSingleConversion
                             ___flge
                           ___xxtofl
                       _calcMotorPow
                          _calcSpeed
                       _calcSteering
                  _getBatteryVoltage
                           _getCurve
                         _getReverse
                        _setSteering
 ---------------------------------------------------------------------------------
 (2) _getReverse                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _getCurve                                             6     6      0    9042
                                             58 BANK0      6     6      0
                             _printf
 ---------------------------------------------------------------------------------
 (2) _getBatteryVoltage                                    0     0      0    8934
           _ADCC_GetSingleConversion
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                              10     4      6    8912
                                             50 BANK0      8     2      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6    7931
                                             42 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           42    36      6    7458
                                             26 BANK0     16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    5683
                                             48 COMRAM    10     0     10
                                              0 BANK0     26    26      0
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    3417
                                             37 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     220
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1537
                                             30 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4    1037
                                             21 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0      93
                                             20 COMRAM     1     1      0
                        _UART1_Write
 ---------------------------------------------------------------------------------
 (8) _UART1_Write                                          1     1      0      62
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     183
                                             37 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     613
                                             19 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     625
                                             19 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (3) _ADCC_GetSingleConversion                             5     3      2      22
                                             19 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _calcSteering                                         4     4      0    3272
                                             36 COMRAM     4     4      0
                            ___awdiv
                        _setSteering
 ---------------------------------------------------------------------------------
 (2) _setSteering                                          9     6      3    2556
                                             27 COMRAM     9     6      3
                 _PWM5_LoadDutyValue
                 _PWM6_LoadDutyValue
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     604
                                             19 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _PWM6_LoadDutyValue                                   4     2      2     120
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _PWM5_LoadDutyValue                                   4     2      2     120
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _calcSpeed                                            4     4      0    7228
                                             31 BANK0      4     4      0
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             16     8      8    3402
                                             50 COMRAM     8     0      8
                                             13 BANK0      8     8      0
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _calcMotorPow                                         7     7      0    5256
                                             31 BANK0      7     7      0
                            ___flmul
                            ___fltol
                           ___xxtofl
                           _actSpeed
                           _setMotor
 ---------------------------------------------------------------------------------
 (3) _setMotor                                             4     2      2     754
                                             23 COMRAM     4     2      2
                 _PWM7_LoadDutyValue
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (4) _PWM8_LoadDutyValue                                   4     2      2     272
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _PWM7_LoadDutyValue                                   4     2      2     272
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _actSpeed                                             4     2      2     629
                                             33 COMRAM     4     2      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             14     6      8     604
                                             19 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     626
                                             24 COMRAM    14    10      4
           _ADCC_GetSingleConversion (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     381
                                             21 BANK0     10     6      4
                            ___fladd (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    2693
                                             38 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     486
                                             38 COMRAM    12     4      8
           _ADCC_GetSingleConversion (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     973
                    _ADCC_Initialize
                    _CCP3_Initialize
                    _CCP4_Initialize
                    _CLC3_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM5_Initialize
                    _PWM6_Initialize
                    _PWM7_Initialize
                    _PWM8_Initialize
                    _SMT1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR4_Initialize
                    _TMR5_Initialize
                   _UART1_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0     490
              _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetOverrunErrorHandler                         2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetFramingErrorHandler                         2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetErrorHandler                                2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      2     2      0      98
                                             21 COMRAM     2     2      0
       _TMR5_SetGateInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetGateInterruptHandler                         2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0     174
           _TMR4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR4_SetInterruptHandler                             2     0      2     174
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      2     2      0       0
                                             19 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMT1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM7_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      15
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _CLC3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP4_Initialize                                      0     0      0      98
                   _CCP4_SetCallBack
 ---------------------------------------------------------------------------------
 (3) _CCP4_SetCallBack                                     2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CCP3_Initialize                                      0     0      0      98
                   _CCP3_SetCallBack
 ---------------------------------------------------------------------------------
 (3) _CCP3_SetCallBack                                     2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_tx_vect_isr                                   1     1      0       0
                                             16 COMRAM     1     1      0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_rx_vect_isr                                   1     1      0       0
                                             17 COMRAM     1     1      0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Receive_ISR                                   0     0      0       0
                   Absolute function *
          _UART1_DefaultErrorHandler *
   _UART1_DefaultFramingErrorHandler *
   _UART1_DefaultOverrunErrorHandler *
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (14) _UART1_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _UART1_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _UART1_DefaultErrorHandler                           0     0      0       0
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (14) _UART1_RxDataHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TMR4_ISR                                            1     1      0       0
                                             18 COMRAM     1     1      0
                      _TMR4_CallBack
 ---------------------------------------------------------------------------------
 (13) _TMR4_CallBack                                       0     0      0       0
                   Absolute function *
                       _TMR4_10msISR *
       _TMR4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _TMR4_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _TMR4_10msISR                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _TMR5_GATE_ISR                                       0     0      0     233
                   Absolute function *
   _TMR5_DefaultGateInterruptHandler *
 ---------------------------------------------------------------------------------
 (17) _TMR5_DefaultGateInterruptHandler                    0     0      0     233
                     _TMR5_ReadTimer
                        _TMR5_Reload
 ---------------------------------------------------------------------------------
 (18) _TMR5_Reload                                         0     0      0     164
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (19) _TMR5_WriteTimer                                     2     0      2     164
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (18) _TMR5_ReadTimer                                      8     6      2      69
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _SMT1_PR_ACQ_ISR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _SMT1_PW_ACQ_ISR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _SMT1_Overflow_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _CCP3_CaptureISR                                     2     2      0     144
                                             10 COMRAM     2     2      0
                   Absolute function *
               _CCP3_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (17) _CCP3_DefaultCallBack                                2     0      2      97
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _CCP4_CaptureISR                                     2     2      0     144
                                             14 COMRAM     2     2      0
                   Absolute function *
               _CCP4_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (17) _CCP4_DefaultCallBack                                2     0      2      97
                                             12 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
     _CCP3_Initialize
       _CCP3_SetCallBack
     _CCP4_Initialize
       _CCP4_SetCallBack
     _CLC3_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM5_Initialize
     _PWM6_Initialize
     _PWM7_Initialize
     _PWM8_Initialize
     _SMT1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
     _TMR4_Initialize
       _TMR4_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetGateInterruptHandler
     _UART1_Initialize
       _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
   _TMR4_SetInterruptHandler
   _loop
     _ADCC_GetSingleConversion
     ___flge
       _ADCC_GetSingleConversion (ARG)
       ___xxtofl (ARG)
         _ADCC_GetSingleConversion (ARG)
     ___xxtofl
     _calcMotorPow
       ___flmul
         ___xxtofl (ARG)
       ___fltol
         ___fladd (ARG)
           ___flmul (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl
       _actSpeed
         ___aldiv
       _setMotor
         _PWM7_LoadDutyValue
         _PWM8_LoadDutyValue
     _calcSpeed
       ___fladd
       ___flmul
       ___fltol
       ___xxtofl
     _calcSteering
       ___awdiv
       _setSteering
         _PWM5_LoadDutyValue
         _PWM6_LoadDutyValue
         ___awdiv
     _getBatteryVoltage
       _ADCC_GetSingleConversion
       _printf
         _vfprintf
           _vfpfcnvrt
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                 _fputs
                   _fputc
                 _strlen
             _fputc
     _getCurve
       _printf
     _getReverse
     _setSteering

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *
     Absolute function(Fake) *
     _UART1_DefaultErrorHandler *
       _UART1_RxDataHandler
     _UART1_DefaultFramingErrorHandler *
     _UART1_DefaultOverrunErrorHandler *
     _UART1_RxDataHandler *

 _TMR4_ISR (ROOT)
   _TMR4_CallBack
     Absolute function(Fake) *
     _TMR4_10msISR *
     _TMR4_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _TMR5_GATE_ISR (ROOT)
   Absolute function(Fake) *
   _TMR5_DefaultGateInterruptHandler *
     _TMR5_ReadTimer
     _TMR5_Reload
       _TMR5_WriteTimer

 _SMT1_PR_ACQ_ISR (ROOT)

 _SMT1_PW_ACQ_ISR (ROOT)

 _SMT1_Overflow_ISR (ROOT)

 _CCP3_CaptureISR (ROOT)
   Absolute function(Fake) *
   _CCP3_DefaultCallBack *

 _CCP4_CaptureISR (ROOT)
   Absolute function(Fake) *
   _CCP4_DefaultCallBack *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FFF      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK15          100      0       0      30        0.0%
BANK15             100      0       0      31        0.0%
BITBANK14          100      0       0      28        0.0%
BANK14             100      0       0      29        0.0%
BITBANK13          100      0       0      36        0.0%
BANK13             100      0       0      27        0.0%
BITBANK12          100      0       0      35        0.0%
BANK12             100      0       0      26        0.0%
BITBANK11          100      0       0      34        0.0%
BANK11             100      0       0      25        0.0%
BITBANK10          100      0       0      33        0.0%
BANK10             100      0       0      24        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      20       7       12.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     40      98       5       95.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     3A      4C       1       80.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     104      32        0.0%
DATA                 0      0     104       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Jan 21 15:34:28 2024

                             _CCP4_Initialize 3C66                        ??_CCP3_DefaultCallBack 000B  
                                          l72 3F2A                                            l75 3E38  
                                          l69 3780                                  ___awdiv@sign 0019  
                           ??_TMR5_WriteTimer 0003                   __size_of_PWM6_LoadDutyValue 0034  
                                         l312 363A                                           l404 3736  
                                         l308 35F2                                           l309 360C  
                                         l318 3F42                                           l503 39C4  
                                         l442 37CA                                           l362 3F60  
                                         l371 3F4C                                           l188 30FA  
                                         l284 33E4                                           l365 3F74  
                                         l631 3EE2                                           l359 3F6A  
                                         l368 3F56                                           l617 3F88  
                                         l634 3B04                                           l645 3ECA  
                                         l717 3C04                                           l477 3F7E  
                                         l566 3D1A                                           l662 3A9C  
                                         l815 3D46                                           l648 3AD0  
                                         l673 3EFA                                           l659 3F12  
                                         l676 3A68                                           l845 3EB2  
                                         l964 3696                                           l976 3B80  
                                         l979 3BA0                                           _GIE 01FE97  
                                         _PR2 003FAB                                           _PR4 003F9F  
                                         _abs 389E                                           _pad 31C0  
                     __size_of_PMD_Initialize 0024                               _TMR2_Initialize 3E98  
              CCP4_SetCallBack@customCallBack 0014                                           tosl 003FFD  
                                         wreg 003FE8                              _CCP4_SetCallBack 3F8A  
                                ___flmul@aexp 00A3                                  ___flmul@bexp 00A8  
                          _UART1_Transmit_ISR 385A                                  ___flmul@sign 00A2  
                                ___flmul@temp 00AD                                  ___flmul@prod 00A9  
                     __end_of_CCP4_CaptureISR 3B70                                  ___fltol@exp1 00C0  
                                        l2001 2522                                          l1115 3F92  
                                        l1211 2B2A                                          ?_abs 0026  
                                        l1301 225C                                          l1118 3C92  
                                        l1215 2B80                                          l2008 257E  
                                        l1224 2C38                                          l1208 3E94  
                                        l1233 350E                                          l2017 3DC6  
                                        l2122 3916                                          l2108 347A  
                                        l2116 3858                                          l2044 3204  
                                        l1236 3E14                                          l1260 207C  
                                        l1244 206C                                          l1085 3F9C  
                                        l1077 3CC0                                          l1318 2432  
                                        l1327 2A02                                          l2047 3246  
                                        l2055 1A26                                          l3040 36EC  
                                        l3120 3BD6                                          l1336 3030  
                                        l2049 3280                                          l2057 1A2E  
                                        l3050 3718                                          l3042 36EE  
                                        l3130 3BFE                                          l3122 3BF4  
                                        l1418 2D44                                          l1290 20B6  
                                        l2082 1E76                                          l1291 20EA  
                                        l2075 1C6A                               _timer3ReloadVal 00E8  
                                        l3108 363C                                          l3060 372C  
                                        l3052 3722                                          l3044 36F6  
                                        l3140 3EB4                                          l3132 3C00  
                                        l3124 3BF6                                          l1604 2F0A  
                                        l1292 2122                                          l1284 2B28  
                                        l1268 3576                                          l1293 213E  
                                        l1453 276E                                          l2093 38D4  
                                        l3062 372E                                          l3054 3726  
                                        l3046 3700                                          l3070 3E16  
                                        l3142 3EE4                                          l3126 3BF8  
                                        l3134 3E98                                          l3064 3730  
                                        l3056 3728                                          l3048 3716  
                                        l3080 30AA                                          l3072 3032  
                                        l3128 3BFC                                          l3136 3EA4  
                                        l5000 33B8                                          l1288 2092  
                                        l2096 38DC                                          l2088 35D6  
                                        l1609 2F50                                          l2089 35DE  
                                        l3154 3D1C                                          l3066 3732  
                                        l3058 372A                                          l3090 30B8  
                                        l3082 30AC                                          l3074 3052  
                                        l3138 3EAA                                          l5002 33E0  
                                        l1570 31BE                                          l1466 28D2  
                                        l3068 3734                                          l3092 30BA  
                                        l3084 30AE                                          l3076 3054  
                                        l3164 3EFC                                          l3180 3ECC  
                                        l1636 2E4C                                          l4300 2D24  
                                        l5100 2A04                                          l3094 30BC  
                                        l3086 30B0                                          l3078 305C  
                                        l4302 2D34                                          l4310 310E  
                                        l5110 2A70                                          l5102 2A12  
                                        l3096 3F14                                          l3088 30B6  
                                        l6000 150C                                          l4320 3134  
                                        l4312 3116                                          l5120 2ABE  
                                        l5112 2A84                                          l5104 2A32  
                                        l4400 3B7C                                          l4410 3F8A  
                                        l6002 150E                                          l4330 316C  
                                        l4322 313C                                          l4314 311A  
                                        l4306 30FC                                          l5122 2AD0  
                                        l5114 2A98                                          l5106 2A46  
                                        l4402 3B7E                                          l5220 2E8C  
                                        l6100 1826                                          l6020 1564  
                                        l6012 1536                                          l6004 1514  
                                        l4260 3A36                                          l4340 3198  
                                        l4332 3172                                          l4324 314E  
                                        l4316 3128                                          l4308 3100  
                                        l4420 219C                                          l4412 207E  
                                        l5116 2AAA                                          l5108 2A5A  
                                        l4404 3B8E                                          l5230 2EF8  
                                        l5222 2EBA                                          l6102 1834  
                                        l6030 15A0                                          l6022 1574  
                                        l6014 1544                                          l4270 2C60  
                                        l4262 2C3A                                          l4254 3AD2  
                                        l6006 1522                                          l4334 3188  
                                        l4326 3156                                          l4342 319E  
                                        l4318 3130                                          l4430 2204  
                                        l4422 21B8                                          l4414 2102  
                                        l4408 3F94                                          l4360 3F44  
                                        l5240 3748                                          l5232 2F48  
                                        l5224 2ECA                                          l5216 2E4E  
                                        l6112 189E                                          l6120 18E6  
                                        l6104 1838                                          l1960 1816  
                                        l6040 15D6                                          l6032 15A6  
                                        l6024 1584                                          l6016 1552  
                                        l4280 2CA8                                          l4272 2C6E  
                                        l4264 2C3E                                          l4256 3A9E  
                                        l6008 1524                                          l4344 31AE  
                                        l4336 3190                                          l4328 315E  
                                        l4432 2210                                          l4424 21C4  
                                        l5128 2AE4                                          l1953 15FC  
                                        l4362 3F62                                          l5250 3760  
                                        l5242 374C                                          l5234 2F4E  
                                        l5226 2ED8                                          l5218 2E7C  
                                        l6130 195A                                          l1970 1946  
                                        l6122 1900                                          l6114 18AA  
                                        l6106 1846                                          l1962 188E  
                                        l6042 15E6                                          l6034 15B4  
                                        l6026 158A                                          l6018 1554  
                                        l4290 2CF2                                          l4282 2CB0  
                                        l4274 2C7E                                          l4266 2C4C  
                                        l4450 34AA                                          l6210 28D4  
                                        l4258 3A6A                                          l4346 31B6  
                                        l4338 3192                                          l4434 222C  
                                        l4426 21E0                                          l4418 215A  
                                        l5090 3540                                          l1963 187C  
                                        l1867 1264                                          l4364 3F58  
                                        l5252 3768                                          l5244 3754  
                                        l5228 2EEA                                          l6132 1968  
                                        l6124 1914                                          l6116 18B8  
                                        l6108 1874                                          l6060 1670  
                                        l6052 1630                                          l6044 15EC  
                                        l6036 15B6                                          l6028 159A  
                                        l4292 2D02                                          l4284 2CBC  
                                        l4276 2C82                                          l4268 2C5C  
                                        l4452 34DA                                          l4444 347C  
                                        l6220 2972                                          l6212 28EE  
                                        l1884 137E                                          l1876 1534  
                                        l1868 1252                                          l4436 2234  
                                        l4428 21E8                                          l6204 2030  
                                        l5092 3544                                          l5084 3510  
                                        l6300 2BA6                                          l1957 1984  
                                        l1893 144E                                          l1869 1218  
                                        l4366 3F6C                                          l4358 3F4E  
                                        l5254 376C                                          l5246 3758  
                                        l5238 3738                                          l6134 196A  
                                        l6126 192E                                          l6118 18E2  
                                        l6070 16C2                                          l6062 168C  
                                        l6054 1640                                          l6046 160C  
                                        l6038 15C6                                          l4294 2D04  
                                        l4286 2CCA                                          l4278 2C92  
                                        l4454 3506                                          l4446 3484  
                                        l4470 2F92                                          l6230 29BE  
                                        l6222 297A                                          l6214 28EE  
                                        l1894 143C                                          l4438 2248  
                                        l6142 3DF0                                          l6150 1E94  
                                        l5094 3554                                          l5086 3528  
                                        l6310 2C20                                          ?_pad 0026  
                                        l5256 3774                                          l5248 375C  
                                        l6128 194A                                          l6136 1970  
                                        l6080 1720                                          l6072 16D2  
                                        l6064 1698                                          l6056 164A  
                                        l6048 161C                                          l4296 2D0E  
                                        l4288 2CD4                                          l4448 349A  
                                        l4480 2FEC                                          l4472 2F9E  
                                        l4464 2F52                                          l6232 29CA  
                                        l6224 298E                                          l6216 28FA  
                                        l6240 225E                                          l5600 2650  
                                        l6144 3DFE                                          l6160 1F06  
                                        l6152 1EB0                                          l5096 3558  
                                        l5088 352E                                          l6312 2C24  
                                        l6304 2BB8                                          l6320 3E7C  
                                        l4394 3F80                                          l4378 3F76  
                                        l5258 3778                                          l6138 1974  
                                        l6090 17D0                                          l6082 1740  
                                        l6074 16E2                                          l6066 16A4  
                                        l6058 1664                                          l1994 248A  
                                        l4298 2D14                                          l4482 2FF8  
                                        l4466 2F6E                                          l4474 2FAE  
                                        l6234 29E6                                          l6226 2992  
                                        l6218 295E                                          l6250 22B6  
                                        l6242 226C                                          l6410 2AFA  
                                        l5610 26A4                                          l5602 265C  
                                        l6170 1F48                                          l6162 1F12  
                                        l6154 1ECE                                          l6146 1E78  
                                        l5098 356E                                          l6314 2C28  
                                        l6306 2C02                                          l6322 3E80  
                                        l6092 17DE                                          l6084 1750  
                                        l6076 16F2                                          l6068 16B2  
                                        l4820 2D5E                                          l4900 25C6  
                                        l4476 2FC8                                          l4484 3018  
                                        l4468 2F8A                                          l6236 29EE  
                                        l6228 29A2                                          l6260 22F2  
                                        l6252 22BE                                          l6244 2282  
                                        l6412 216E                                          l4396 3B72  
                                        l5620 2718                                          l5612 26B6  
                                        l5604 267A                                          l5540 360E  
                                        l5700 19FE                                          l6180 1F98  
                                        l6172 1F58                                          l6164 1F1E  
                                        l6156 1EDA                                          l6148 1E7C  
                                        l6316 2C2C                                          l6308 2C0C  
                                        l6324 3E82                                          l1997 25E6  
                                        l4910 3CA4                                          l6094 17FC  
                                        l6086 1770                                          l6078 1710  
                                        l4830 2DAE                                          l4902 25D4  
                                        l4478 2FE4                                          l6238 29FA  
                                        l6414 23B2                                          l6262 2308  
                                        l6254 22C8                                          l6246 2286  
                                        l4398 3B78                                          l5614 26E4  
                                        l5606 2682                                          l5622 271E  
                                        l5630 2770                                          l5542 3620  
                                        l5550 3638                                          l5534 35E2  
                                        l5710 1A56                                          l5702 1A00  
                                        l6190 1FF8                                          l6182 1FAA  
                                        l6174 1F5E                                          l6166 1F30  
                                        l6158 1EEA                                          l6318 2C30  
                                        l6326 3E90                                          l4912 3CB0  
                                        l4920 3D04                                          l6096 1806  
                                        l6088 179A                                          l4840 2DD8  
                                        l4832 2DB2                                          l4824 2D72  
                                        l4904 25D6                                          l6280 2406  
                                        l6264 230C                                          l6256 22DE  
                                        l6248 229C                                          l5624 272E  
                                        l5616 2704                                          l5608 2696  
                                        l5640 27B4                                          l5632 2774  
                                        l5544 3622                                          l5536 35E2  
                                        l5552 3F3C                                          l5560 3414  
                                        l5720 1AF6                                          l5712 1A5C  
                                        l5704 1A1A                                          l5800 358E  
                                        l6408 2046                                          l6184 1FBE  
                                        l6176 1F6E                                          l6168 1F40  
                                        l4914 3CBA                                          l4930 3C76  
                                        l4922 3D08                                          l6098 1814  
                                        l4850 2E00                                          l4842 2DE2  
                                        l4834 2DC0                                          l4826 2D9C  
                                        l4818 2D46                                          l5810 1074  
                                        l6282 2422                                          l6266 2386  
                                        l6258 22E6                                          l6274 239E  
                                        l5626 274E                                          l5618 2706  
                                        l5650 281C                                          l5642 27D4  
                                        l5634 2782                                          l5546 3632  
                                        l5538 3602                                          l5562 3432  
                                        l5554 33E6                                          l5570 3822  
                                        l5730 1BA2                                          l5722 1AFE  
                                        l5714 1A64                                          l5706 1A36  
                                        l5802 35B4                                          l6194 2008  
                                        l6186 1FD6                                          l6178 1F80  
                                        l6290 2B2A                                          l4916 3CBE  
                                        l4908 3C94                                          l4932 3C82  
                                        l4940 39A2                                          l4924 3D0A  
                                        l4852 2E0C                                          l4844 2DEC  
                                        l4828 2D9E                                          l5900 1232  
                                        l5820 10B2                                          l5812 1082  
                                        l6284 242A                                          l6268 2392  
                                        l6276 23E0                                          l5660 2892  
                                        l5652 284A                                          l5644 27F2  
                                        l5636 27A2                                          l5548 3636  
                                        l5564 3468                                          l5556 33F8  
                                        l5572 3834                                          l5580 38EE  
                                        l5740 1C04                                          l5732 1BBC  
                                        l5724 1B04                                          l5716 1A6E  
                                        l5708 1A48                                          l5804 3DA0  
                                        l6196 2018                                          l6188 1FEC  
                                        l6292 2B38                                          l4934 3C8C  
                                        l4942 39A6                                          l4926 3D16  
                                        l4918 3CF0                                          l4950 379A  
                                        l4854 2E1C                                          l4870 24B0  
                                        l4862 2436                                          l5910 1272  
                                        l5902 1236                                          l5830 10E2  
                                        l5822 10C2                                          l5814 1090  
                                        l6278 23FE                                          l5590 25FA  
                                        l5662 28B2                                          l5654 286A  
                                        l5646 27FA                                          l5638 27A6  
                                        l5558 340A                                          l5574 3838  
                                        l5582 390A                                          l5670 31E2  
                                        l5742 1C0A                                          l5750 1C42  
                                        l5734 1BD6                                          l5718 1A74  
                                        l5726 1B68                                          l5806 3DAA  
                                        l6198 2020                                          l6294 2B3C  
                                        l4936 3C90                                          l4928 3C66  
                                        l4944 39C0                                          l4952 37B4  
                                        l4960 3342                                          l4856 2E2C  
                                        l4880 250A                                          l4864 2446  
                                        l5920 12B4                                          l5912 1282  
                                        l5904 1244                                          l5840 110C  
                                        l5832 10F4                                          l5824 10C4  
                                        l5816 1092                                          l5592 261A  
                                        l5656 287C                                          l5648 280E  
                                        l5568 3816                                          l5576 38DE  
                                        l5680 3228                                          l5672 31F0  
                                        l5744 1C1C                                          l5728 1B84  
                                        l5736 1BE4                                          l5760 1CBE  
                                        l6296 2B90                                          l4938 398E  
                                        l4954 37B8                                          l4946 3782  
                                        l4970 336C                                          l4962 3346  
                                        l4858 2E3C                                          l4890 256E  
                                        l4882 250C                                          l4874 24C4  
                                        l4866 2454                                          l5930 12E2  
                                        l5922 12C2                                          l5906 1246  
                                        l5842 111C                                          l5850 1146  
                                        l5834 10F6                                          l5818 10A2  
                                        l5826 10CC                                          l5594 261E  
                                        l5586 25E8                                          l5658 2882  
                                        l5690 38B8                                          l5578 38EA  
                                        l5682 3254                                          l5674 31FC  
                                        l5666 31C0                                          l5746 1C28  
                                        l5738 1BF6                                          l5762 1CC2  
                                        l5754 1C6C                                          l6298 2BA2  
                                        l4956 37BA                                          l4948 3796  
                                        l4980 3380                                          l4972 3370  
                                        l4964 3352                                          l4892 258C  
                                        l4884 2518                                          l4876 24CC  
                                        l4868 249A                                          l5940 134E  
                                        l5932 12EC                                          l5924 12CE  
                                        l5916 1296                                          l5908 1250  
                                        l5860 117E                                          l5852 1156  
                                        l5844 112C                                          l5836 10FC  
                                        l5828 10DC                                          l5596 262C  
                                        l5588 25EC                                          l5684 3268  
                                        l5676 3210                                          l5668 31CE  
                                        l5748 1C30                                          l5692 1986  
                                        l5772 1DB2                                          l5764 1CF0  
                                        l5756 1C9A                                          l4958 37C6  
                                        l4990 3394                                          l4982 3384  
                                        l4974 3374                                          l4966 3362  
                                        l4894 258E                                          l4886 2554  
                                        l4878 24D8                                          l5942 135E  
                                        l5926 12D2                                          l5918 12A6  
                                        l5934 12F2                                          l5870 1192  
                                        l5862 1182                                          l5854 1168  
                                        l5846 113C                                          l5838 110A  
                                        l5598 264C                                          l5678 3224  
                                        l5694 19A6                                          l5790 1E60  
                                        l5774 1DE0                                          l5782 1E14  
                                        l5766 1D1E                                          l5758 1CAC  
                                        l4992 3398                                          l4984 3388  
                                        l4976 3378                                          l4968 3368  
                                        l4896 2592                                          l4888 2560  
                                        l5960 13E0                                          l5952 13B8  
                                        l5936 1318                                          l5944 136E  
                                        l5928 12E0                                          l5880 11A6  
                                        l5872 1196                                          l5864 1186  
                                        l5856 1176                                          l5848 113E  
                                        l5688 389E                                          l5696 19D0  
                                        l5784 1E26                                          l5776 1DF2  
                                        l5768 1D7A                                          l4994 339C  
                                        l4986 338C                                          l4978 337C  
                                        l4898 25B6                                          l5962 13E8  
                                        l5954 13C2                                          l5946 1394  
                                        l5938 134C                                          l5970 140C  
                                        l5890 11BA                                          l5882 11AA  
                                        l5874 119A                                          l5866 118A  
                                        l5858 117A                                          l5698 19F0  
                                        l5778 1E06                                          l4996 33A0  
                                        l4988 3390                                          l5980 145E  
                                        l5972 1410                                          l5964 13EC  
                                        l5956 13D0                                          l5948 13A4  
                                        l5892 11E4                                          l5884 11AE  
                                        l5876 119E                                          l5868 118E  
                                        l5788 1E32                                          l5796 3578  
                                        l4998 33AC                                          l5990 14C4  
                                        l5982 146A                                          l5974 141E  
                                        l5966 13FC                                          l5958 13D2  
                                        l5894 1200                                          l5886 11B2  
                                        l5878 11A2                                          l5798 3580  
                                        l5992 14D4                                          l5984 1478  
                                        l5976 1434                                          l5968 13FE  
                                        l5896 1210                                          l5888 11B6  
                                        l5994 14F4                                          l5986 14B2  
                                        l5898 1226                                          l5996 14F8  
                                        l5988 14B4                                          l5998 1506  
                                        STR_1 103E                                          STR_2 1001  
                                        STR_3 1025                                          STR_4 1017  
                                        STR_5 1047                                          STR_6 1069  
                                        STR_7 1049                                          STR_8 1054  
                                        STR_9 1032                                          _LATA 003FBA  
                                        _LATB 003FBB                                          _LATC 003FBC  
                                        u4000 2F48                                          _LATD 003FBD  
                                        u4001 2F44                                          _LATE 003FBE  
                                        u1525 3720                                          u1526 3722  
                                        u5000 135E                                          u5001 135A  
                                        u5010 1394                                          _T2PR 003FAB  
                                        u5011 1390                                          u2700 2CA8  
                                        u5100 145E                                          u5020 13A4  
                                        u2701 2CA4                                          u5101 145A  
                                        u5021 13A0                                          u2710 2CCA  
                                        u5110 1478                                          u5030 13D0  
                                        u2711 2CC6                                          u5111 1474  
                                        u5031 13CC                                          u5200 1574  
                                        u3520 2D5E                                          u3600 2454  
                                        u2720 2CF2                                          u5120 14B2  
                                        u5040 13E0                                          u4320 35F2  
                                        u4400 390A                                          u5201 1570  
                                        u3521 2D5A                                          u3601 2450  
                                        u2721 2CEE                                          u5121 14AE  
                                        u5041 13DC                                          u4321 35EE  
                                        u4401 3906                                          u5210 15B4  
                                        u3530 2D92                                          u3610 24B0  
                                        u2730 2D24                                          u5130 14C4  
                                        u5050 13FC                                          u4410 25FA  
                                        u4330 3602                                          _T4PR 003F9F  
                                        u5211 15B0                                          u3611 24AC  
                                        u2731 2D20                                          u5131 14C0  
                                        u5051 13F8                                          u4411 25F6  
                                        u4331 35FE                                          u5300 1874  
                                        u5220 15C6                                          u3540 2DC0  
                                        u3620 2506                                          u2900 2F6E  
                                        u5140 14D4                                          u5060 140C  
                                        u2740 310E                                          u4420 262C  
                                        u4500 27F2                                          u4340 3632  
                                        u5301 1870                                          u5221 15C2  
                                        u3541 2DBC                                          u3621 2502  
                                        u2645 3AF6                                          u2901 2F6A  
                                        u5141 14D0                                          u5061 1408  
                                        u2741 310A                                          u4421 2628  
                                        u4501 27EE                                          u4341 362E  
                                        u5310 188A                                          u5230 15D6  
                                        u3550 2DD4                                          u3630 2550  
                                        u2910 2F8A                                          u5150 14F4  
                                        u5070 141E                                          u2750 3128  
                                        u2830 3B8E                                          u4510 281C  
                                        u4350 33F8                                          u5311 1886  
                                        u5231 15D2                                          u3551 2DD0  
                                        u3535 2D88                                          u3631 254C  
                                        u2655 3AC2                                          u2911 2F86  
                                        u5151 14F0                                          u5071 141A  
                                        u2751 3124                                          u2831 3B8A  
                                        u4431 2656                                          u4511 2818  
                                        u4351 33F4                                          u5320 189E  
                                        u5240 160C                                          u3560 2DFC  
                                        u3640 256E                                          u2680 2C4C  
                                        u2920 2FC8                                          u5160 1506  
                                        u5080 1434                                          u2760 314E  
                                        u2840 21B8                                          u4440 267A  
                                        u4520 284A                                          u4360 340A  
                                        u4600 19BA                                          u5400 1F6E  
                                        u3800 3554                                          u5321 189A  
                                        u5241 1608                                          u3561 2DF8  
                                        u3641 256A                                          u2681 2C48  
                                        u2921 2FC4                                          u5161 1502  
                                        u5081 1430                                          u2665 3A8E  
                                        u2761 314A                                          u2841 21B4  
                                        u4441 2676                                          u4521 2846  
                                        u4361 3406                                          u5401 1F6A  
                                        u3801 3550                                          u5330 18B8  
                                        u5250 161C                                          u3570 2E1C  
                                        u3650 257E                                          u2690 2C6E  
                                        u2930 2FE4                                          u5170 1522  
                                        u5090 144A                                          u2770 316C  
                                        u2850 21E0                                          u4450 26A4  
                                        u4530 2892                                          u4370 3432  
                                        u4610 19D0                                          u5410 1F80  
                                        u3810 356E                                          u5331 18B4  
                                        u5251 1618                                          u3571 2E18  
                                        u3651 257A                                          u2691 2C6A  
                                        u2931 2FE0                                          u5171 151E  
                                        u5091 1446                                          u2675 3A5A  
                                        u2771 3168                                          u2851 21DC  
                                        u4451 26A0                                          u4531 288E  
                                        u4371 342E                                          u4611 19CC  
                                        u5411 1F7C                                          u3811 356A  
                                        u5340 1900                                          u5260 17BA  
                                        u5180 1552                                          u3580 2E2C  
                                        u3660 258C                                          u5500 2282  
                                        u2780 3188                                          u2860 2204  
                                        u3820 2A70                                          u4460 26E4  
                                        u4380 3468                                          u4540 31CE  
                                        u4700 1BE4                                          u4620 19FE  
                                        u5420 1FAA                                          _PMD0 0039C0  
                                        u5341 18FC                                          u5181 154E  
                                        u3581 2E28                                          u3661 2588  
                                        u5501 227E                                          u2781 3184  
                                        u2861 2200                                          u3821 2A6C  
                                        u4461 26E0                                          u4381 3464  
                                        u4541 31CA                                          u4701 1BE0  
                                        u4621 19FA                                          u5421 1FA6  
                                        _PMD1 0039C1                                          u5350 192E  
                                        u5270 1814                                          u5190 1564  
                                        u3670 25C6                                          u3590 2446  
                                        u5510 229C                                          u2790 31AE  
                                        u2870 222C                                          u3830 2AAA  
                                        u4470 272E                                          u4390 3858  
                                        u4550 31F0                                          u4710 1BF6  
                                        u4630 1A1A                                          u5430 1FD6  
                                        _PMD2 0039C2                                          u5351 192A  
                                        u5271 1810                                          u5191 1560  
                                        u3671 25C2                                          u3591 2442  
                                        u5511 2298                                          u2791 31AA  
                                        u2871 2228                                          u3831 2AA6  
                                        u4471 272A                                          u4391 3854  
                                        u4551 31EC                                          u4711 1BF2  
                                        u4631 1A16                                          u5431 1FD2  
                                        _PMD3 0039C3                                          u5360 1968  
                                        u5280 1834                                          u3680 25D4  
                                        u2880 349A                                          u4800 10A2  
                                        u5520 22B6                                          u3840 2AD0  
                                        u4480 2782                                          u4560 3246  
                                        u4720 1C04                                          u4640 1A48  
                                        u5440 1FEC                                          u5600 2BB4  
                                        _PMD4 0039C4                                          u5361 1964  
                                        u5281 1830                                          u5265 17B0  
                                        u3681 25D0                                          u2881 3496  
                                        u4801 109E                                          u5521 22B2  
                                        u3841 2ACC                                          u4481 277E  
                                        u4561 3242                                          u4721 1C00  
                                        u4641 1A44                                          u5441 1FE8  
                                        u5601 2BB0                                          _PMD5 0039C5  
                                        u5290 1846                                          u2890 34AA  
                                        u4810 10B2                                          u5530 22DE  
                                        u4490 27B4                                          u4570 3254  
                                        u4730 1C1C                                          u4650 1A56  
                                        u5450 2018                                          u5370 1ECE  
                                        u5610 2C02                                          _PMD6 0039C6  
                                        u5291 1842                                          u2891 34A6  
                                        u4811 10AE                                          u5531 22DA  
                                        u4491 27B0                                          u4571 3250  
                                        u4731 1C18                                          u4651 1A52  
                                        u5451 2014                                          u5371 1ECA  
                                        u5611 2BFE                                          _PMD7 0039C7  
                                        u5460 2972                                          u4900 11FE  
                                        u4820 10F4                                          u5540 2308  
                                        u4580 38B8                                          u4660 1B84  
                                        u4740 1C9A                                          u5380 1F06  
                                        u3780 3528                                          u5461 296E  
                                        u4821 10F0                                          u5541 2304  
                                        u4581 38B4                                          u4661 1B80  
                                        u4741 1C96                                          u5381 1F02  
                                        u3781 3524                                          u5470 298E  
                                        u4910 1226                                          u4830 110A  
                                        u5550 23FE                                          u4670 1BA2  
                                        u4590 19B8                                          u4750 1CF0  
                                        u5390 1F40                                          u3790 3540  
                                        u5471 298A                                          u4911 1222  
                                        u4831 1106                                          u5551 23FA  
                                        u4671 1B9E                                          u4591 19B2  
                                        u4751 1CEC                                          u5391 1F3C  
                                        u3791 353C                                          u3960 2E7C  
                                        u5480 29BE                                          u4920 1244  
                                        u4840 111C                                          u5560 2422  
                                        u4680 1BBC                                          u4760 1D1E  
                                        u3961 2E78                                          u5481 29BA  
                                        u4921 1240                                          u4841 1118  
                                        u5561 241E                                          u4681 1BB8  
                                        u4761 1D1A                                          u3970 2EBA  
                                        u5490 29E6                                          u4930 1264  
                                        u4850 112C                                          u4690 1BD6  
                                        u4770 1DE0                                          u5570 2B38  
                                        u3971 2EB6                                          u5491 29E2  
                                        u4931 1260                                          u4851 1128  
                                        u4691 1BD2                                          u4771 1DDC  
                                        u5571 2B34                                          u3980 2ED8  
                                        u4940 1272                                          u4860 1168  
                                        u4780 35D6                                          u5580 2B80  
                                        u3981 2ED4                                          u4941 126E  
                                        u4861 1164                                          u4781 35D2  
                                        u5581 2B7C                                          u3990 2EF8  
                                        u4950 1282                                          u4870 1176  
                                        u4790 1090                                          u5590 2BA2  
                                        u3991 2EF4                                          u4951 127E  
                                        u4871 1172                                          u4791 108C  
                                        u5591 2B9E                                          u4960 12B4  
                                        u4880 11E4                                          u4961 12B0  
                                        u4881 11E0                                          u4970 12C2  
                                        u4890 11FC                                          u4971 12BE  
                                        u4891 11F6                                          u4980 12E0  
                                        u4981 12DC                                          u4990 1318  
                                        u4991 1314                                          _TMR2 003FAA  
                                        _TMR4 003F9E                                          _WPUA 003A41  
                                        _WPUB 003A51                                          _WPUC 003A61  
                                        _WPUD 003A71                                          _WPUE 003A81  
                         ?_UART1_Transmit_ISR 0001                                          abs@a 0026  
                                        _dbuf 0100                                          _main 3E7C  
                                        _dtoa 1986                                          _loop 2B2A  
                                        _prec 003B                                          _nout 0080  
                                        pad@i 002D                                          pad@p 002A  
                                        fsr1h 003FE2                                          fsr2h 003FDA  
                                        indf2 003FDF                                          fsr1l 003FE1  
                                        pad@w 002F                                          fsr2l 003FD9  
                                        prodh 003FF4                                          prodl 003FF3  
                                        start 00AE                               _timer5ReloadVal 00EC  
                             _TMR3_Initialize 398E                               _PWM5_Initialize 3EFC  
                           ??_CLC3_Initialize 0014                 ??_UART1_SetTxInterruptHandler 0016  
                  ??_TMR4_SetInterruptHandler 0016                             _UART1_rx_vect_isr 3954  
                                ___param_bank 000000                    __end_of_PWM5_LoadDutyValue 3A9E  
                          ?_UART1_rx_vect_isr 0001                                         ??_abs 0028  
                                       ??_pad 002C                __size_of_OSCILLATOR_Initialize 0018  
                        ??_UART1_Transmit_ISR 0011                 __end_of_OSCILLATOR_Initialize 3F2C  
                               ___fltol@sign1 00BF                               __end_of___aldiv 2D46  
                             __end_of___aodiv 2770                                         _ADCAP 003EF5  
                                       _ADACT 003EFE                       __end_of_CCP3_Initialize 3CC2  
                             __end_of___fladd 1536                                         ?_main 0001  
                                       ?_dtoa 0031                                         _ADCLK 003EFF  
                             __end_of___aomod 28D4                                         _ADCNT 003EEB  
                                       _ADPCH 003EF1                                         _ADREF 003EFD  
                             __end_of___awdiv 31C0                                         ?_loop 0001  
                                       STR_10 105F                                         _ADRPT 003EEC  
                      ??_CCP4_DefaultCallBack 000F                               __end_of___flmul 1986  
                    TMR5_ReadTimer@readValLow 0008                               __end_of___fltol 2E4E  
                             ___awdiv@divisor 0016                                         _U1P1H 003DED  
                                       _U1P2H 003DEF                                         _U1P1L 003DEC  
                                       _U1P3H 003DF1                                         _T3CLK 003FA9  
                                       _T2CON 003FAC                                         _U1P2L 003DEE  
                                       _U1P3L 003DF0                                         _T3CON 003FA6  
                                       _T5CLK 003F9D                                         _T4CON 003FA0  
                                       _T2HLT 003FAD                                         _T5CON 003F9A  
                                       _T4HLT 003FA1                                         _T2TMR 003FAA  
                                       _U1UIR 003DF8                                         i1l330 3986  
                                       _T2RST 003FAF                                         _U1RXB 003DE8  
                                       i1l324 394A                                         i1l333 3898  
                                       i1l350 3FAC                                         i1l343 3340  
                                       i1l336 389C                                         i1l353 3FAA  
                                       i1l610 39F8                                         _U1TXB 003DEA  
                                       i1l347 3D72                                         i1l620 3FAE  
                                       i1l356 3FA2                                         _T4TMR 003F9E  
                                       i1l614 3CEE                                         _T4RST 003FA3  
                                       i2l409 3FB0                                         i2l451 3E5C  
                                       i2l456 3D9E                                         i2l480 3E7A  
                                       i2l474 3BD4                                         i2l459 3F38  
                         ??_UART1_rx_vect_isr 0012                                         i2l790 3DEE  
                                       i2l785 36EA                                         i2l778 3814  
                             ___awdiv@counter 0018                                         _OSCEN 0039DD  
                                vfpfcnvrt@fmt 00BE                                         _TMR3H 003FA5  
                                       _TMR5H 003F99                                         _TMR3L 003FA4  
                                       _TMR5L 003F98                                         _TRISA 003FC2  
                                       _TRISB 003FC3                                         _TRISC 003FC4  
                                       _TRISD 003FC5                                         _TRISE 003FC6  
                                 _Default_ISR 3FB0                               _TMR4_Initialize 3CF0  
                             _PWM6_Initialize 3EE4                             _UART1_tx_vect_isr 3918  
                            __end_of_TMR4_ISR 3A00                       setSteering@steeringMode 001E  
                                       _delay 009C                                         _flags 003D  
                                       _fputc 33E6                                         _fputs 3816  
                       __size_of_calcMotorPow 0130                            ?_UART1_tx_vect_isr 0001  
                                       pad@fp 0026                                         _width 0082  
                                       _putch 3F3A                                         dtoa@d 0033  
                                       dtoa@i 00BA                                         dtoa@n 00B2  
                                       dtoa@p 00AC                                         dtoa@s 00B0  
                                       dtoa@w 00AE                              ?_SMT1_Initialize 0001  
                                       pclath 003FFA                                         tablat 003FF5  
                                 _BatteryVolt 0084                         __size_of_calcSteering 0126  
                                       status 003FD8           __end_of_UART1_SetRxInterruptHandler 3F58  
                 _UART1_SetRxInterruptHandler 3F4E                       __end_of_CCP4_Initialize 3C94  
         fp__UART1_DefaultFramingErrorHandler 0000      __end_of_UART1_DefaultFramingErrorHandler 3FAE  
   __size_of_UART1_DefaultFramingErrorHandler 0002            ??_UART1_DefaultFramingErrorHandler 0012  
           ?_UART1_DefaultFramingErrorHandler 0001              _UART1_DefaultFramingErrorHandler 3FAC  
                         ??_UART1_tx_vect_isr 0011                     __end_of_UART1_rx_vect_isr 398E  
                             _TMR5_Initialize 3782                               _PWM7_Initialize 3ECC  
                             __initialization 3A00                         TMR5_ReadTimer@readVal 0005  
                            ?_CCP3_CaptureISR 0001                                  __end_of_main 3E98  
                                __end_of_dtoa 1C6C                                  __end_of_loop 2C3A  
                 ??_UART1_DefaultErrorHandler 0012                       __end_of_TMR2_Initialize 3EB4  
                                ?_UART1_Write 0001                                        ??_main 003B  
                                      ??_dtoa 00A2                                        ??_loop 003B  
                               __activetblptr 000003                                  _calcMotorPow 28D4  
        __size_of_UART1_SetTxInterruptHandler 000A                     __end_of_UART1_tx_vect_isr 3952  
                             _PWM8_Initialize 3EB4                              _UART1_Initialize 3342  
                                _calcSteering 2A04                              ?_CCP4_CaptureISR 0001  
                                      _ADACCH 003EE9                                        _ADACCL 003EE8  
                                      _ADACCU 003EEA                                        _ADACQH 003EF4  
                                      _ADACQL 003EF3                                        _ADCON0 003EF8  
                                      _ADCON1 003EF9                                        _ADCON2 003EFA  
                                      _ADCON3 003EFB                                        _ADERRH 003EE3  
                                      _ADERRL 003EE2                                        ?_fputc 0016  
                                      _ADLTHH 003EDF                                        _ADLTHL 003EDE  
                                      ?_fputs 001F                                        _ADRESH 003EF0  
                                      _ADRESL 003EEF                                        _ADPREH 003EF7  
                                      _ADPREL 003EF6                                        _CCPR3H 003F75  
                                      _CCPR4H 003F71                                        _CCPR3L 003F74  
                                      _CCPR4L 003F70                                        _ADSTAT 003EFC  
                                      _ADUTHH 003EE1                              ___awdiv@dividend 0014  
                                      _ADUTHL 003EE0                            _PWM8_LoadDutyValue 3A9E  
                                      _ANSELA 003A40                                        ?_putch 0001  
                                      _ANSELB 003A50                                        _ANSELC 003A60  
                                      _ANSELD 003A70                                        _ANSELE 003A80  
                                      _RB1I2C 003A5A                                        _RB2I2C 003A5B  
                                      _RD0I2C 003A7A                                        _U1CON0 003DF2  
                                      _U1CON1 003DF3                                        _U1CON2 003DF4  
                                      _RC3I2C 003A6A                                        _RD1I2C 003A7B  
                                      _T3GATE 003FA8                                        _RC4I2C 003A6B  
                                      _U1BRGH 003DF6                                        _U1FIFO 003DF7  
                                      _T3GCON 003FA7                                        _U1BRGL 003DF5  
                                      _T5GATE 003F9C                                        _T5GCON 003F9B  
                                      _RA0PPS 003A00                                        _RA1PPS 003A01  
                                      _RA3PPS 003A03                                        _RA4PPS 003A04  
                                      _RB3PPS 003A0B                                        _T5GPPS 003AC9  
                                      i1l1227 3FA8                                        _ODCONA 003A42  
                                      _ODCONB 003A52                                        _ODCONC 003A62  
                                      _ODCOND 003A72                                        _ODCONE 003A82  
                                      i1l5004 3F9E                                        i2l1112 3C64  
                                      i2l1123 3B6E                                        i1l5300 32B2  
                     __end_of_PWM5_Initialize 3F14                       __end_of_TMR3_Initialize 39C6  
                                      i1l5214 3FA4                                        i1l5310 331E  
                                      i1l5302 32CA                                        i1l5312 333C  
                                      i1l5304 32DA                                        i2l1074 3C34  
                                      i2l1082 3B3A                                        i1l5410 39EC  
                                      i1l4370 3D5A                                        i1l5306 32EA  
                                      i1l5412 39F0                                        i1l4372 3D5C  
                                      i1l5308 3302                                        i1l5406 39CE  
                                      i1l4374 3D6C                                        i1l5336 3CC2  
                                      i1l5408 39D2                                        i1l4376 3D70  
                                      i1l4368 3D48                                        i1l5338 3CD6  
                                      i1l5290 388E                                        i1l5282 385A  
                                      i1l5292 3892                                        i1l5284 386A  
                                      i1l5294 3282                                        i1l5286 387C  
                                      i1l5390 391E                                        i1l5296 3292  
                                      i1l5288 387E                                        i1l5392 3932  
                                      i2l5010 3E54                                        i1l5298 32A2  
                                      i1l5394 395A                                        i1l5396 396E  
                                      i2l5006 3E3A                                        i2l5014 3F2C  
                                      i2l5008 3E48                                        i2l5320 3E76  
                                      i2l5400 3BA8                                        i2l5314 3E5E  
                                      i2l5402 3BBC                                        i2l5340 3C06  
                                      i2l5420 37F0                                        i2l4380 3D74  
                                      i2l5316 3E6A                                        i2l5350 3C44  
                                      i2l5342 3C14                                        i2l5430 36C6  
                                      i2l5422 3802                                        i2l5414 37CC  
                                      i2l4382 3D82                                        i2l4390 3D94  
                                      i2l5318 3E72                                        i2l5352 3C50  
                                      i2l5344 3C20                                        i2l5440 3B18  
                                      i2l5432 36D8                                        i2l5424 3698  
                                      i2l5416 37D0                                        i2l4392 3D98  
                                      i2l4384 3D84                                        _INLVLA 003A44  
                                      i2l5354 3C5E                                        i2l5442 3B3C  
                                      i2l5346 3C2E                                        i2l5434 3DC8  
                                      i2l5426 369C                                        i2l5418 37E0  
                                      i2l4386 3D88                                        _INLVLB 003A54  
                                      _INLVLC 003A64                                        i2l5348 3C36  
                                      i2l5444 3B4C                                        i2l5436 3DCC  
                                      i2l5428 36B6                                        i2l4388 3D8E  
                                      _INLVLD 003A74                                        _INLVLE 003A84  
                                      i2l5438 3B08                                        i2l5398 3BA4  
                                ?_setSteering 001C                                        _OSCFRQ 0039DF  
                            __end_of_actSpeed 3510                                        _SMT1PR 003F1B  
                       _UART1_SetErrorHandler 3F6C                              __end_of___xxtofl 25E8  
                         ?_PWM8_LoadDutyValue 0014                              __end_of_getCurve 207E  
                    __end_of_CCP3_SetCallBack 3F9E                                  _CCPTMRS0bits 003F5E  
                                _CCPTMRS1bits 003F5F                                  vfprintf@cfmt 00D2  
                                      ___flge 2E4E                                     ??___aldiv 001C  
                                   ??___aodiv 0024                                     ??___fladd 00AF  
                                   ??___aomod 0024                                     ??___awdiv 0018  
                                   ??___flmul 002F                                     ??___fltol 00BB  
                               _CCP3_CallBack 00E4                                  ?_TMR5_Reload 0001  
                     __end_of_PWM6_Initialize 3EFC                       __end_of_TMR4_Initialize 3D1C  
                                      clear_0 3A06                                        clear_1 3A12  
                                      clear_2 3A1E                              ___awdiv@quotient 001A  
                                      _motPow 008E                       fp__CCP3_DefaultCallBack 0000  
                                      isa$std 000001                                 _CCP4_CallBack 00E2  
                                      _smtWay 0078                                        _printf 3DA0  
                                      pad@buf 0028                                        dtoa@fp 0031  
                            ?_CCP3_Initialize 0001                                        _strlen 38DE  
                        ??_PWM8_LoadDutyValue 0016                              __end_of_setMotor 3032  
                             _ADCC_Initialize 363C          __end_of_TMR4_DefaultInterruptHandler 3FB0  
       __size_of_TMR4_DefaultInterruptHandler 0002                  _TMR4_DefaultInterruptHandler 3FAE  
                                      fputc@c 0016                                _PMD_Initialize 3E16  
                                      fputs@c 0023                                        fputs@i 0024  
                                      fputs@s 001F                                  __mediumconst 0000  
                       __end_of_TMR5_GATE_ISR 3BD6                                        tblptrh 003FF7  
                                      tblptrl 003FF6                                        tblptru 003FF8  
           __size_of_ADCC_GetSingleConversion 0032                              __end_of_vfprintf 35E0  
                   ?_ADCC_GetSingleConversion 0014      TMR4_SetInterruptHandler@InterruptHandler 0014  
TMR5_SetGateInterruptHandler@InterruptHandler 0014   UART1_SetTxInterruptHandler@InterruptHandler 0014  
 UART1_SetRxInterruptHandler@InterruptHandler 0014          __end_of_UART1_SetOverrunErrorHandler 3F62  
       __size_of_UART1_SetOverrunErrorHandler 000A                  _UART1_SetOverrunErrorHandler 3F58  
                   _UART1_DefaultErrorHandler 3F9E                 __size_of_INTERRUPT_Initialize 004C  
                __size_of_UART1_RxDataHandler 002C                             getCurve@deltaLeft 00DE  
                                  ___flge@ff1 0027                                    ___flge@ff2 002B  
                     __end_of_PWM7_Initialize 3EE4                       __end_of_TMR5_Initialize 37CC  
                                ___xxtofl@arg 0023                                  ___xxtofl@exp 0022  
                           _SYSTEM_Initialize 3738                                  ___xxtofl@val 0019  
                                  __accesstop 0060                       __end_of__initialization 3A30  
                            ?_CCP4_Initialize 0001                           setSteering@steering 001C  
                          ?_SYSTEM_Initialize 0001                                 ___rparam_used 000001  
                  __size_of_UART1_rx_vect_isr 003A                                    ___fltol@f1 00B7  
                             _TMR5_WriteTimer 3D74                            __size_of_calcSpeed 01D6  
                   calcMotorPow@setSpeedDelta 00C3                      __end_of_CCP4_SetCallBack 3F94  
                              __pcstackCOMRAM 0001                         __end_of_TMR4_CallBack 3CF0  
                         ??_SYSTEM_Initialize 0018                                     ?_TMR4_ISR 0001  
                              ivt0x8_undefint 00AC                                 __end_of_fputc 347C  
                               __end_of_fputs 385A                               fp__TMR4_10msISR 0000  
                               __end_of_putch 3F44                              ?_TMR2_Initialize 0001  
                     __end_of_PWM8_Initialize 3ECC                        __end_of_PMD_Initialize 3E3A  
                 __size_of_PWM7_LoadDutyValue 0034                         CCP3_CaptureISR@module 000B  
                  __size_of_UART1_tx_vect_isr 003A                CCP3_SetCallBack@customCallBack 0014  
                   _UART1_FramingErrorHandler 00F2               fp__TMR4_DefaultInterruptHandler 0000  
               ?_TMR4_DefaultInterruptHandler 0001                       fp__CCP4_DefaultCallBack 0000  
                    __size_of_SMT1_PR_ACQ_ISR 004A                                       ??_fputc 001A  
                   __end_of_SYSTEM_Initialize 3782                                       ??_fputs 0023  
                             _CLC3_Initialize 3D1C                                       ??_putch 0015  
                 PWM7_LoadDutyValue@dutyValue 0014                                    __pbssBANK0 0060  
                                  __pbssBANK1 0100                 ?_UART1_SetOverrunErrorHandler 0014  
                      ?_UART1_SetErrorHandler 0014                              ?_PWM5_Initialize 0001  
                            ?_TMR3_Initialize 0001                                    __pnvCOMRAM 004C  
                    __size_of_SMT1_PW_ACQ_ISR 0054                         _TMR4_InterruptHandler 00E6  
                                     IVTBASEH 003FD6                                       IVTBASEL 003FD5  
                                     IVTBASEU 003FD7                                       ?___flge 0027  
                                  ??_TMR4_ISR 0013                       __end_of_ADCC_Initialize 3698  
                  __end_of_PWM6_LoadDutyValue 3A6A          __end_of_TMR5_SetGateInterruptHandler 3F80  
       __size_of_TMR5_SetGateInterruptHandler 000A                  _TMR5_SetGateInterruptHandler 3F76  
                                     _CCP3CAP 003F77                                       _CCP4CAP 003F73  
                                     _CCP3CON 003F76                                       _CCP4CON 003F72  
                                     _ADFLTRH 003EE7                                       _ADFLTRL 003EE6  
               __size_of_CCP3_DefaultCallBack 0030                                       _CCP3PPS 003ACF  
                                     _CCP4PPS 003AD0                                       _CLC3CON 003C60  
                                     _CLC3POL 003C61                                       _ADPREVH 003EEE  
                                     _ADPREVL 003EED                              ?_PWM6_Initialize 0001  
                            ?_TMR4_Initialize 0001                                       _ADSTPTH 003EE5  
                                     _ADSTPTL 003EE4                                       ?_printf 00D4  
                             ?_PMD_Initialize 0001                             _UART1_Receive_ISR 3282  
                                  _getReverse 3510                                       ?_strlen 0014  
                                     _U1ERRIE 003DFA                                     ?_actSpeed 0022  
                                     _U1ERRIR 003DF9                                 ?_TMR4_10msISR 0001  
                                ?_Default_ISR 0001                          __size_of_UART1_Write 005C  
                          ?_UART1_Receive_ISR 0001                                       _U1RXPPS 003AE5  
                                   ?___xxtofl 0019                            _PWM5_LoadDutyValue 3A6A  
                                  _distRightM 0094                       __size_of_TMR5_ReadTimer 0024  
                                     _OSCCON1 0039D9                                       _OSCCON3 0039DB  
                           __end_of_calcSpeed 2434                                       _IVTLOCK 003FD4  
                          __size_of_vfpfcnvrt 020C                                       _SMT1CLK 003F21  
                                     _OSCTUNE 0039DE                                       _SMT1CPR 003F15  
                                     _SMT1CPW 003F18                                       _PWM5DCH 003F6D  
                                     _PWM5DCL 003F6C                                       _PWM6DCH 003F69  
                                     _PWM6DCL 003F68                                       _PWM7DCH 003F65  
                                     _PWM7DCL 003F64                                       _SMT1SIG 003F22  
                                     _PWM8DCH 003F61                                       _PWM5CON 003F6E  
                                     _PWM8DCL 003F60                                       _SMT1PRH 003F1C  
                                     _PWM6CON 003F6A                                       _SMT1PRL 003F1B  
                                     _PWM7CON 003F66                                       _SMT1PRU 003F1D  
                                   ?_getCurve 0001                                       _SMT1WIN 003F23  
                                     _SMT1TMR 003F12                                       _PWM8CON 003F62  
                                     _SLRCONA 003A43                                       _SLRCONB 003A53  
                                     _SLRCONC 003A63                                       _SLRCOND 003A73  
                                     _SLRCONE 003A83                           ??_UART1_Receive_ISR 0012  
                     __end_of_TMR5_WriteTimer 3DA0                           ?_PWM5_LoadDutyValue 0014  
                            ?_PWM7_Initialize 0001                              ?_TMR5_Initialize 0001  
                   INTERRUPT_Initialize@state 0014                          __size_of_setSteering 01E0  
                                   _CLCIN0PPS 003AD9                                     _CLCIN2PPS 003ADB  
                                   _CLCIN3PPS 003ADC                                       __Hparam 0000  
                                   ?_setMotor 0018                                       __Lparam 0000  
                    __end_of_UART1_Initialize 33E6                                       ___aldiv 2C3A  
                             __size_of___flge 0104                                       ___aodiv 25E8  
                                     ___fladd 1074                                       ___aomod 2770  
                                     ___awdiv 30FC                                       ___flmul 1536  
                                     ___fltol 2D46                     __end_of_UART1_Receive_ISR 3342  
                                   ?_vfprintf 00CC                          ??_PWM5_LoadDutyValue 0016  
                                __psmallconst 1000                                       __pcinit 3A00  
                   _TMR5_GateInterruptHandler 00EA                              ?_PWM8_Initialize 0001  
                                     __ramtop 1000                   __size_of_UART1_Transmit_ISR 0044  
               ?_TMR5_SetGateInterruptHandler 0014                                       __ptext0 3E7C  
                                     __ptext1 2B2A                                       __ptext2 3510  
                                     __ptext3 1E78                                       __ptext4 3DF0  
                                     __ptext5 3DA0                                       __ptext6 3578  
                                     __ptext7 1C6C                                       __ptext8 1986  
                                     __ptext9 31C0                               __size_of_printf 0028  
                              ??_TMR4_10msISR 0013                          __size_of_TMR5_Reload 000E  
                                  ??_actSpeed 0024                               __size_of_strlen 003A  
                     __end_of_CLC3_Initialize 3D48                         _OSCILLATOR_Initialize 3F14  
                                   _T2CONbits 003FAC                                  __size_of_abs 0040  
                                __size_of_pad 00C2                                    ??___xxtofl 001D  
                                   _T3CONbits 003FA6                 __size_of_CCP4_DefaultCallBack 0030  
                            ___aldiv@dividend 0014                                     _T4CONbits 003FA0  
                    ??_PIN_MANAGER_Initialize 0014             __size_of_TMR4_SetInterruptHandler 000A  
                                   _T2HLTbits 003FAD                                     _T5CONbits 003F9A  
                   ?_TMR4_SetInterruptHandler 0014                                     _IPR10bits 00398A  
                                     _smtDuty 007C                                     _T4HLTbits 003FA1  
                                  ??_getCurve 00DC                                     _PIE10bits 00399A  
                  __size_of_SYSTEM_Initialize 004A                          end_of_initialization 3A30  
                                   _T2RSTbits 003FAF                ??_TMR4_DefaultInterruptHandler 0013  
                                   _T4RSTbits 003FA3                                     _PIR10bits 0039AA  
                                     fputc@fp 0018                             ??_SMT1_PR_ACQ_ISR 0009  
         __end_of_UART1_SetTxInterruptHandler 3F4E                   _UART1_SetTxInterruptHandler 3F44  
                                     fputs@fp 0021                ??_UART1_SetOverrunErrorHandler 0016  
                                  ??_setMotor 001A                      __size_of_SMT1_Initialize 0030  
                           __end_of_vfpfcnvrt 1E78                             ?_CCP3_SetCallBack 0014  
                            ___aldiv@quotient 001E                                       postdec2 003FDD  
                           ??_SMT1_PW_ACQ_ISR 0009                                       postinc0 003FEE  
                                     postinc1 003FE6                                       postinc2 003FDE  
                            ?_ADCC_Initialize 0001                            ??_CCP3_SetCallBack 0016  
                                  ??_vfprintf 003B              __end_of_ADCC_GetSingleConversion 3BA2  
                           UART1_Write@txData 0014                           _UART1_RxDataHandler 3D48  
                                     strlen@a 0016                                       strlen@s 0014  
                                 ?_getReverse 0001                                     _PORTBbits 003FCB  
                                   _PORTDbits 003FCD                      __size_of_CCP3_CaptureISR 0034  
                                 ___fladd@grs 00B6                            getCurve@deltaRight 00E0  
                               ___xxtofl@sign 0021                          ?_UART1_RxDataHandler 0001  
                            ?_TMR5_WriteTimer 0001                          setSteering@steeringB 0023  
                        setSteering@steeringF 0021                       TMR5_WriteTimer@timerVal 0001  
                                 ___flmul@grs 00A4                      __size_of_CCP4_CaptureISR 0034  
           CCP4_DefaultCallBack@capturedValue 000D                             ?_CCP4_SetCallBack 0014  
                __end_of_INTERRUPT_Initialize 3738                                __end_of___flge 2F52  
                  __size_of_UART1_Receive_ISR 00C0                            ??_CCP4_SetCallBack 0016  
                                 _CLC3CONbits 003C60                                   vfpfcnvrt@ap 00C0  
                                 vfpfcnvrt@fp 00BC                                   vfpfcnvrt@ll 00C4  
                           __size_of_TMR4_ISR 0038                        ?_OSCILLATOR_Initialize 0001  
                              __end_of_printf 3DC8                   __size_of_PWM8_LoadDutyValue 0034  
                            ?_CLC3_Initialize 0001                                __end_of_strlen 3918  
                              _TMR5_ReadTimer 3E3A                           start_initialization 3A00  
              ??_TMR5_SetGateInterruptHandler 0016               __size_of_PIN_MANAGER_Initialize 00CA  
                                 __end_of_abs 38DE                                   __end_of_pad 3282  
                        __size_of_Default_ISR 0002                       ??_UART1_SetErrorHandler 0016  
                    __size_of_CCP3_Initialize 002E                         ??_UART1_RxDataHandler 0012  
                                 putch@txData 0015                                    ivt0x8_base 0008  
                               _uart1RxBuffer 0068                                   _actMotorPow 0086  
                               _uart1TxBuffer 0070                           __size_of_getReverse 0068  
                        __end_of_TMR4_10msISR 3FAA                                   vfprintf@fmt 00CE  
                                    ??___flge 002F                              ??_PMD_Initialize 0014  
                      __size_of_TMR5_GATE_ISR 0032                                  _oldDistRight 0090  
                    __size_of_CCP4_Initialize 002E                    __end_of_PWM7_LoadDutyValue 3B06  
                           ??_SMT1_Initialize 0014                                      ??_printf 003B  
                                    ??_strlen 0016                        __end_of_TMR5_ReadTimer 3E5E  
                       CCP4_CaptureISR@module 000F                                     ___fladd@a 0037  
                                   ___fladd@b 0033                           calcMotorPow@addMPow 00C7  
                    _ADCC_GetSingleConversion 3B70                   PWM5_LoadDutyValue@dutyValue 0014  
                       TMR4_ISR@CountCallBack 003F                                     ___flmul@a 002B  
                                   ___flmul@b 0027                                   __pbssCOMRAM 003B  
                          _UART1_ErrorHandler 00EE                                 __pcstackBANK0 00A2  
                           __size_of_actSpeed 0094                              ___aodiv@dividend 0014  
                          _PWM6_LoadDutyValue 3A36                      __size_of_TMR2_Initialize 001C  
                           __size_of___xxtofl 01B4                      _UART1_RxInterruptHandler 00F6  
                           ??_CCP3_CaptureISR 000B                  __end_of_CCP3_DefaultCallBack 3C36  
                      __size_of_TMR4_CallBack 002E                                     _calcSpeed 225E  
                           __size_of_getCurve 0206                           ?_PWM6_LoadDutyValue 0014  
                 PWM8_LoadDutyValue@dutyValue 0014                  fp__UART1_DefaultErrorHandler 0000  
                                _currentSpeed 008A                  ?_UART1_SetRxInterruptHandler 0014  
                                   __pnvBANK0 00E2                            setMotor@motorPower 0018  
                      _PIN_MANAGER_Initialize 3032                                     _dtoa$3484 00AA  
                    __size_of_PWM5_Initialize 0018                      __size_of_TMR3_Initialize 0038  
                           ?_UART1_Initialize 0001          __end_of_UART1_SetFramingErrorHandler 3F6C  
       __size_of_UART1_SetFramingErrorHandler 000A                  _UART1_SetFramingErrorHandler 3F62  
                                    ?___aldiv 0014               ADCC_GetSingleConversion@channel 0018  
                                    ?___aodiv 0014                                      ?___fladd 0033  
                                    ?___aomod 0014                             __size_of_setMotor 00E0  
            __end_of_TMR4_SetInterruptHandler 3F8A                                      ?___awdiv 0014  
                            ___aodiv@quotient 0026             CCP3_DefaultCallBack@capturedValue 0009  
                           ??_CCP4_CaptureISR 000F                                      ?___flmul 0027  
                                    ?___fltol 00B7                            ??_UART1_Initialize 0016  
                                   _distLeftM 0098                                     _distFront 00A0  
                            _uart1RxLastError 0042                                 ??_UART1_Write 0014  
                                   _distRight 0096                          ??_PWM6_LoadDutyValue 0016  
                                   _cycle10ms 009D                             __size_of_vfprintf 0068  
                             ?_TMR5_ReadTimer 0001                                 ?_calcMotorPow 0001  
                                 __smallconst 1000                                      _CLC3GLS0 003C66  
                                    _CLC3GLS1 003C67                                      _CLC3GLS2 003C68  
                                    _CLC3GLS3 003C69                                     _driveMode 009F  
         fp__UART1_DefaultOverrunErrorHandler 0000      __end_of_UART1_DefaultOverrunErrorHandler 3FAC  
   __size_of_UART1_DefaultOverrunErrorHandler 0002            ??_UART1_DefaultOverrunErrorHandler 0012  
           ?_UART1_DefaultOverrunErrorHandler 0001              _UART1_DefaultOverrunErrorHandler 3FAA  
                                    _CLC3SEL0 003C62                                      _CLC3SEL1 003C63  
                                    _CLC3SEL2 003C64                                      _CLC3SEL3 003C65  
                             _SMT1_PR_ACQ_ISR 37CC                                 ?_calcSteering 0001  
                    __size_of_PWM6_Initialize 0018                      __size_of_TMR4_Initialize 002C  
                               _TMR5_GATE_ISR 3BA4                                     _curveMode 009E  
                              __size_of_fputc 0096                                      _T2CLKCON 003FAE  
                              __size_of_fputs 0044                                   _U1ERRIRbits 003DF9  
                                    _T4CLKCON 003FA2                                __size_of_putch 000A  
                                  ?_calcSpeed 0001                          _INTERRUPT_Initialize 36EC  
                               ??_setSteering 001F                               ___aldiv@divisor 0018  
                             _SMT1_PW_ACQ_ISR 3698                               ___aldiv@counter 001C  
       UART1_SetErrorHandler@interruptHandler 0014                                      _IPR1bits 003981  
                __end_of_CCP4_DefaultCallBack 3C66                             ??_CCP3_Initialize 0016  
                                    _IPR3bits 003983                                      _PIE1bits 003991  
                                    _PIE3bits 003993                                      _IPR7bits 003987  
                                    _IPR8bits 003988                                      _IPR9bits 003989  
                                    _PIE7bits 003997                                      _PIE8bits 003998  
                                    _PIE9bits 003999                                      _IVTBASEH 003FD6  
                                    _IVTBASEL 003FD5                                      _IVTBASEU 003FD7  
                                    i1u410_28 3324                                      i1u403_20 386A  
                                    i1u410_29 3338                                      i1u403_21 3866  
                                    i1u412_20 3CD6                                      i1u404_20 388E  
                                    i1u412_21 3CD2                                      i1u404_21 388A  
                                    i1u405_20 32A2                                      i1u421_20 3932  
                                    i1u405_21 329E                                      i1u421_21 392E  
                                    i1u413_28 3CDC                                      i1u413_29 3CEE  
                                    i1u407_20 32DA                                      i1u406_28 32B8  
                                    i1u423_20 396E                                      i1u422_28 3938  
                                    i1u407_21 32D6                                      i1u406_29 32CA  
                                    i1u423_21 396A                                      i1u422_29 394A  
                                    i1u281_20 3D6C                                      i1u409_20 331E  
                                    i1u408_28 32F0                                      i1u424_28 3974  
                                    i1u281_21 3D68                                      i1u409_21 331A  
                                    i1u408_29 3302                                      i1u424_29 3986  
                                    i1u427_20 39EC                                      i1u427_21 39E8  
               ??_UART1_SetRxInterruptHandler 0016                                      i2u414_40 3C14  
                                    i2u414_41 3C10                                      i2u415_40 3C44  
                                    i2u430_48 3B26                                      i2u415_41 3C40  
                                    i2u430_49 3B3A                                      i2u431_48 3B5A  
                                    i2u431_49 3B6E                                      i2u425_40 3BBC  
                                    i2u425_41 3BB8                                      _PIR1bits 0039A1  
                                    i2u282_40 3D82                                      i2u282_41 3D7E  
                                    i2u426_48 3BC2                                      i2u426_49 3BD4  
                                    i2u428_40 37F0                                      i2u428_41 37EC  
                                    i2u429_40 36C6                                      i2u429_41 36C2  
                                    _PIR4bits 0039A4                                      _PIR6bits 0039A6  
                                    _PIR7bits 0039A7                                      _PIR8bits 0039A8  
                                    _PIR9bits 0039A9                                      _SMT1CON0 003F1E  
                                    _SMT1CON1 003F1F                      __size_of_PWM7_Initialize 0018  
                    __size_of_TMR5_Initialize 004A                                      _SMT1STAT 003F20  
                           _SMT1_Overflow_ISR 3DC8                                      _TMR4_ISR 39C8  
                  __end_of_UART1_Transmit_ISR 389E                                 _TMR4_CallBack 3CC2  
                                   _smtPeriod 0048                 ?_UART1_SetFramingErrorHandler 0014  
                               ??_TMR5_Reload 0003                   __size_of_PWM5_LoadDutyValue 0034  
                                   _vfpfcnvrt 1C6C                            ?_SMT1_Overflow_ISR 0001  
                           _getBatteryVoltage 3DF0                                  ??_getReverse 0014  
                              ??_calcMotorPow 00C1                                    _ADCON0bits 003EF8  
                                  _ADCON1bits 003EF9                                    _ADCON2bits 003EFA  
                                  _ADCON3bits 003EFB                            ?_getBatteryVoltage 0001  
                           ??_CCP4_Initialize 0016                                ??_calcSteering 0025  
                         ??_SMT1_Overflow_ISR 0009                     TMR5_ReadTimer@readValHigh 0007  
                   __size_of_CCP3_SetCallBack 000A                                ?_TMR5_GATE_ISR 0001  
                         __end_of_UART1_Write 363C                      __size_of_PWM8_Initialize 0018  
                                _SMT1CON0bits 003F1E                                  _SMT1CON1bits 003F1F  
                         ??_getBatteryVoltage 003B                                   _INTCON0bits 003FD2  
                       ?_INTERRUPT_Initialize 0001                         __size_of_TMR4_10msISR 0006  
                        fp__UART1_Receive_ISR 0000                        _uart1TxBufferRemaining 004C  
                           ??_TMR2_Initialize 0014                                  _uart1RxCount 0043  
                          __end_of_getReverse 3578                                    _ADSTATbits 003EFC  
                                    __Hrparam 0000                     __end_of_SMT1_Overflow_ISR 3DF0  
                         __end_of_setSteering 225E                                    vfprintf@ap 00D0  
                                    __Lrparam 0000                                    vfprintf@fp 00CC  
                                 _oldDistLeft 0092                                ?_TMR4_CallBack 0001  
                              calcSpeed@speed 00C3                     __end_of_getBatteryVoltage 3E16  
                     ??_OSCILLATOR_Initialize 0014                              __size_of___aldiv 010C  
                            __size_of___aodiv 0188                              __size_of___fladd 04C2  
                            __size_of___aomod 0164                              __size_of___awdiv 00C4  
                            __size_of___flmul 0450                              __size_of___fltol 0108  
                                _SMT1STATbits 003F20                          _CCP3_DefaultCallBack 3C06  
                     __end_of_SMT1_PR_ACQ_ISR 3816                                    ?_vfpfcnvrt 00BC  
                             ___aodiv@divisor 001C                             ??_PWM5_Initialize 0014  
                           ??_TMR3_Initialize 0014                               ___aodiv@counter 0024  
                    _TMR4_SetInterruptHandler 3F80                                      _actSpeed 347C  
        __size_of_UART1_SetRxInterruptHandler 000A                                  _TMR4_10msISR 3FA4  
                                    ___xxtofl 2434                      __size_of_ADCC_Initialize 005C  
                         __end_of_TMR5_Reload 3F3A                     __size_of_CCP4_SetCallBack 000A  
                                    __pivt0x8 0008                       __end_of_SMT1_PW_ACQ_ISR 36EC  
                                    _getCurve 1E78                                      __ptext10 38DE  
                                    __ptext11 3816                                      __ptext20 207E  
                                    __ptext12 33E6                                      __ptext21 30FC  
                                    __ptext13 3F3A                                      __ptext30 347C  
                                    __ptext22 3A36                                      __ptext14 35E0  
                                    __ptext31 2C3A                                      __ptext23 3A6A  
                                    __ptext15 389E                                      __ptext40 3F58  
                                    __ptext32 2434                                      __ptext24 225E  
                                    __ptext16 2770                                      __ptext41 3F62  
                                    __ptext33 2D46                                      __ptext25 1074  
                                    __ptext17 25E8                                      __ptext50 3EB4  
                                    __ptext42 3F6C                                      __ptext34 1536  
                                    __ptext26 28D4                                      __ptext18 3B70  
                                    __ptext51 3ECC                                      __ptext43 3782  
                                    __ptext35 2E4E                                      __ptext27 2F52  
                                    __ptext19 2A04                                      __ptext60 3F8A  
                                    __ptext52 3EE4                                      __ptext44 3F76  
                                    __ptext36 3738                                      __ptext28 3A9E  
                                    __ptext61 3C94                                      __ptext53 3EFC  
                                    __ptext45 3CF0                                      __ptext37 3342  
                                    __ptext29 3AD2                                      __ptext70 3F9E  
                                    __ptext62 3F94                                      __ptext54 3E16  
                                    __ptext46 3F80                                      __ptext38 3F44  
                                    __ptext71 3D48                                      __ptext63 363C  
                                    __ptext55 3032                                      __ptext47 398E  
                                    __ptext39 3F4E                                      __ptext80 3D74  
                                    __ptext72 39C8                                      __ptext64 3918  
                                    __ptext56 3F14                                      __ptext48 3E98  
                                    __ptext81 3E3A                                      __ptext73 3CC2  
                                    __ptext65 385A                                      __ptext57 36EC  
                                    __ptext49 3BD6                                      __ptext82 37CC  
                                    __ptext74 3FA4                                      __ptext66 3954  
                                    __ptext58 3D1C                                      __ptext83 3698  
                                    __ptext75 3FAE                                      __ptext67 3282  
                                    __ptext59 3C66                                      __ptext84 3DC8  
                                    __ptext76 3FB0                                      __ptext68 3FAA  
                                    __ptext85 3B08                                      __ptext77 3BA4  
                                    __ptext69 3FAC                                      __ptext86 3C06  
                                    __ptext78 3E5E                                      __ptext87 3B3C  
                                    __ptext79 3F2C                                      __ptext88 3C36  
                                    __ptext89 0000                                      _distLeft 009A  
              __size_of_UART1_SetErrorHandler 000A                                   ??_calcSpeed 00C1  
               __end_of_UART1_SetErrorHandler 3F76                                    _T3GCONbits 003FA7  
                           ??_TMR4_Initialize 0016                             ??_PWM6_Initialize 0014  
                               __size_of_main 001C                                 __size_of_dtoa 02E6  
                                    _oldSpeed 0088                                    _T5GCONbits 003F9B  
                               __size_of_loop 0110                               _SMT1_Initialize 3BD6  
                                 _IVTLOCKbits 003FD4                                      _setMotor 2F52  
                                    _setSpeed 008C                      __size_of_TMR5_WriteTimer 002C  
                   _UART1_OverrunErrorHandler 00F0  UART1_SetOverrunErrorHandler@interruptHandler 0014  
                                    isa$xinst 000000            __size_of_UART1_DefaultErrorHandler 0006  
                  ??_ADCC_GetSingleConversion 0016                    ?_UART1_DefaultErrorHandler 0001  
                       ?_CCP3_DefaultCallBack 0009                                      _vfprintf 3578  
                                   printf@fmt 00D4                    __end_of_PWM8_LoadDutyValue 3AD2  
                             _CCP3_CaptureISR 3B08                                   _UART1_Write 35E0  
                       fp__UART1_Transmit_ISR 0000                             ??_TMR5_Initialize 0016  
                           ??_PWM7_Initialize 0014           fp__TMR5_DefaultGateInterruptHandler 0000  
    __end_of_TMR5_DefaultGateInterruptHandler 3E7C     __size_of_TMR5_DefaultGateInterruptHandler 001E  
          ??_TMR5_DefaultGateInterruptHandler 0009             ?_TMR5_DefaultGateInterruptHandler 0001  
            _TMR5_DefaultGateInterruptHandler 3E5E                              ___aomod@dividend 0014  
                               ??_Default_ISR 0001                ??_UART1_SetFramingErrorHandler 0016  
                                _reverseCount 0041                               ??_TMR5_GATE_ISR 0009  
                 __end_of_UART1_RxDataHandler 3D74                                   _uart1RxHead 0045  
                        _CCP4_DefaultCallBack 3C36                                   _uart1TxHead 0047  
                                 _uart1RxTail 0044                                   _uart1TxTail 0046  
                      ??_INTERRUPT_Initialize 0014                            _PWM7_LoadDutyValue 3AD2  
                                    intlevel1 0000                                      intlevel2 0000  
                    __size_of_CLC3_Initialize 002C                                   _setSteering 207E  
                             _CCP4_CaptureISR 3B3C                       ?_PIN_MANAGER_Initialize 0001  
                           ??_PWM8_Initialize 0014                           ?_PWM7_LoadDutyValue 0014  
                        __end_of_calcMotorPow 2A04                               ??_TMR4_CallBack 0013  
                  __size_of_SMT1_Overflow_ISR 0028                          __end_of_calcSteering 2B2A  
                         _uart1RxStatusBuffer 0060                                      printf@ap 00DA  
                            ??_TMR5_ReadTimer 0003                    __size_of_getBatteryVoltage 0026  
UART1_SetFramingErrorHandler@interruptHandler 0014             __end_of_UART1_DefaultErrorHandler 3FA4  
                             ___aomod@divisor 001C                                   ??_vfpfcnvrt 00C2  
                             ___aomod@counter 0024                              ?_SMT1_PR_ACQ_ISR 0001  
                                 _TMR5_Reload 3F2C                                    _SMT1SIGPPS 003AD2  
                                  _SMT1WINPPS 003AD1                          ??_PWM7_LoadDutyValue 0016  
                               actSpeed@speed 0024                         ?_CCP4_DefaultCallBack 000D  
                   calcMotorPow@oldSpeedDelta 00C5                              _CCP3_SetCallBack 3F94  
                   __size_of_UART1_Initialize 00A4                                  ___aldiv@sign 001D  
                            ?_SMT1_PW_ACQ_ISR 0001                               _CCP3_Initialize 3C94  
                 PWM6_LoadDutyValue@dutyValue 0014                             calcSteering@delta 0027  
                    _UART1_TxInterruptHandler 00F4                                 ___fladd@signs 00B3  
                         __end_of_Default_ISR 3FB2                       __end_of_SMT1_Initialize 3C06  
                                ___aodiv@sign 0025                __end_of_PIN_MANAGER_Initialize 30FC  
                           ??_ADCC_Initialize 0014                                  ___fladd@aexp 00B4  
                                ___fladd@bexp 00B5                  ?_UART1_SetTxInterruptHandler 0014  
                                ___aomod@sign 0025                       __end_of_CCP3_CaptureISR 3B3C  
