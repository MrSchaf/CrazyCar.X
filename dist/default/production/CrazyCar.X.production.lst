

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Jan 31 17:49:09 2024

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F46K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=4,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=4,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1
    75                           	psect	text60,global,reloc=4,class=CODE,delta=1
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1
    79                           	psect	text64,global,reloc=4,class=CODE,delta=1
    80                           	psect	text65,global,reloc=4,class=CODE,delta=1
    81                           	psect	text66,global,reloc=2,class=CODE,delta=1
    82                           	psect	text67,global,reloc=4,class=CODE,delta=1
    83                           	psect	text68,global,reloc=2,class=CODE,delta=1
    84                           	psect	text69,global,reloc=4,class=CODE,delta=1
    85                           	psect	text70,global,reloc=2,class=CODE,delta=1
    86                           	psect	text71,global,reloc=2,class=CODE,delta=1
    87                           	psect	text72,global,reloc=2,class=CODE,delta=1
    88                           	psect	text73,global,reloc=2,class=CODE,delta=1
    89                           	psect	text74,global,reloc=4,class=CODE,delta=1
    90                           	psect	text75,global,reloc=4,class=CODE,delta=1
    91                           	psect	text76,global,reloc=4,class=CODE,delta=1
    92                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
    93                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    94                           	psect	text77,global,reloc=4,class=CODE,delta=1
    95                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    96                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    97                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    98  0000                     
    99                           ; Version 2.20
   100                           ; Generated 05/05/2020 GMT
   101                           ; 
   102                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   103                           ; All rights reserved.
   104                           ; 
   105                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   106                           ; 
   107                           ; Redistribution and use in source and binary forms, with or without modification, are
   108                           ; permitted provided that the following conditions are met:
   109                           ; 
   110                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   111                           ;        conditions and the following disclaimer.
   112                           ; 
   113                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   114                           ;        of conditions and the following disclaimer in the documentation and/or other
   115                           ;        materials provided with the distribution.
   116                           ; 
   117                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   118                           ;        software without specific prior written permission.
   119                           ; 
   120                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   121                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   122                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   123                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   124                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   125                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   126                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   127                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   128                           ; 
   129                           ; 
   130                           ; Code-generator required, PIC18F46K42 Definitions
   131                           ; 
   132                           ; SFR Addresses
   133  0000                     
   134                           	psect	idataCOMRAM
   135  0027DE                     __pidataCOMRAM:
   136                           	callstack 0
   137                           
   138                           ;initializer for _driveMode
   139  0027DE  01                 	db	1
   140                           
   141                           	psect	idataBANK0
   142  0027D4                     __pidataBANK0:
   143                           	callstack 0
   144                           
   145                           ;initializer for _middleOffSet
   146  0027D4  FFF1               	dw	65521
   147                           
   148                           	psect	nvBANK0
   149  0000C7                     __pnvBANK0:
   150                           	callstack 0
   151  0000C7                     _TMR4_InterruptHandler:
   152                           	callstack 0
   153  0000C7                     	ds	2
   154  0000C9                     _timer3ReloadVal:
   155                           	callstack 0
   156  0000C9                     	ds	2
   157  0000CB                     _TMR5_GateInterruptHandler:
   158                           	callstack 0
   159  0000CB                     	ds	2
   160  0000CD                     _timer5ReloadVal:
   161                           	callstack 0
   162  0000CD                     	ds	2
   163  0000CF                     _CCP4_CallBack:
   164                           	callstack 0
   165  0000CF                     	ds	2
   166  0000D1                     _CCP3_CallBack:
   167                           	callstack 0
   168  0000D1                     	ds	2
   169  0000D3                     _UART1_ErrorHandler:
   170                           	callstack 0
   171  0000D3                     	ds	2
   172  0000D5                     _UART1_OverrunErrorHandler:
   173                           	callstack 0
   174  0000D5                     	ds	2
   175  0000D7                     _UART1_FramingErrorHandler:
   176                           	callstack 0
   177  0000D7                     	ds	2
   178  0000D9                     _UART1_TxInterruptHandler:
   179                           	callstack 0
   180  0000D9                     	ds	2
   181  0000DB                     _UART1_RxInterruptHandler:
   182                           	callstack 0
   183  0000DB                     	ds	2
   184  0000DD                     _uart1TxBufferRemaining:
   185                           	callstack 0
   186  0000DD                     	ds	1
   187  0000                     _PIR4bits	set	14756
   188  0000                     _PIR1bits	set	14753
   189  0000                     _PIE1bits	set	14737
   190  0000                     _PIE7bits	set	14743
   191  0000                     _PIR7bits	set	14759
   192  0000                     _PIR6bits	set	14758
   193  0000                     _PIE8bits	set	14744
   194  0000                     _PIR8bits	set	14760
   195  0000                     _PIE10bits	set	14746
   196  0000                     _PIR10bits	set	14762
   197  0000                     _PIE9bits	set	14745
   198  0000                     _PIR9bits	set	14761
   199  0000                     _IPR9bits	set	14729
   200  0000                     _IPR7bits	set	14727
   201  0000                     _IPR8bits	set	14728
   202  0000                     _IPR10bits	set	14730
   203  0000                     _IPR1bits	set	14721
   204  0000                     _IPR3bits	set	14723
   205  0000                     _PIE3bits	set	14739
   206  0000                     _PMD7	set	14791
   207  0000                     _PMD6	set	14790
   208  0000                     _PMD5	set	14789
   209  0000                     _PMD4	set	14788
   210  0000                     _PMD3	set	14787
   211  0000                     _PMD2	set	14786
   212  0000                     _PMD1	set	14785
   213  0000                     _PMD0	set	14784
   214  0000                     _OSCTUNE	set	14814
   215  0000                     _OSCFRQ	set	14815
   216  0000                     _OSCEN	set	14813
   217  0000                     _OSCCON3	set	14811
   218  0000                     _OSCCON1	set	14809
   219  0000                     _CCP4PPS	set	15056
   220  0000                     _SMT1SIGPPS	set	15058
   221  0000                     _CLCIN2PPS	set	15067
   222  0000                     _RB3PPS	set	14859
   223  0000                     _RA3PPS	set	14851
   224  0000                     _SMT1WINPPS	set	15057
   225  0000                     _CLCIN0PPS	set	15065
   226  0000                     _RA4PPS	set	14852
   227  0000                     _T5GPPS	set	15049
   228  0000                     _RA0PPS	set	14848
   229  0000                     _U1RXPPS	set	15077
   230  0000                     _RA1PPS	set	14849
   231  0000                     _CLCIN3PPS	set	15068
   232  0000                     _CCP3PPS	set	15055
   233  0000                     _INLVLE	set	14980
   234  0000                     _INLVLD	set	14964
   235  0000                     _INLVLC	set	14948
   236  0000                     _INLVLB	set	14932
   237  0000                     _INLVLA	set	14916
   238  0000                     _SLRCONE	set	14979
   239  0000                     _SLRCOND	set	14963
   240  0000                     _SLRCONC	set	14947
   241  0000                     _SLRCONB	set	14931
   242  0000                     _SLRCONA	set	14915
   243  0000                     _ODCOND	set	14962
   244  0000                     _ODCONC	set	14946
   245  0000                     _ODCONB	set	14930
   246  0000                     _ODCONA	set	14914
   247  0000                     _ODCONE	set	14978
   248  0000                     _RD1I2C	set	14971
   249  0000                     _RD0I2C	set	14970
   250  0000                     _RC4I2C	set	14955
   251  0000                     _RC3I2C	set	14954
   252  0000                     _RB2I2C	set	14939
   253  0000                     _RB1I2C	set	14938
   254  0000                     _WPUC	set	14945
   255  0000                     _WPUA	set	14913
   256  0000                     _WPUB	set	14929
   257  0000                     _WPUE	set	14977
   258  0000                     _WPUD	set	14961
   259  0000                     _ANSELA	set	14912
   260  0000                     _ANSELE	set	14976
   261  0000                     _ANSELB	set	14928
   262  0000                     _ANSELC	set	14944
   263  0000                     _ANSELD	set	14960
   264  0000                     _CLC3CON	set	15456
   265  0000                     _CLC3GLS3	set	15465
   266  0000                     _CLC3GLS2	set	15464
   267  0000                     _CLC3GLS1	set	15463
   268  0000                     _CLC3GLS0	set	15462
   269  0000                     _CLC3SEL3	set	15461
   270  0000                     _CLC3SEL2	set	15460
   271  0000                     _CLC3SEL1	set	15459
   272  0000                     _CLC3SEL0	set	15458
   273  0000                     _CLC3POL	set	15457
   274  0000                     _CLC3CONbits	set	15456
   275  0000                     _U1RXB	set	15848
   276  0000                     _U1TXB	set	15850
   277  0000                     _U1ERRIRbits	set	15865
   278  0000                     _U1ERRIE	set	15866
   279  0000                     _U1ERRIR	set	15865
   280  0000                     _U1UIR	set	15864
   281  0000                     _U1FIFO	set	15863
   282  0000                     _U1BRGH	set	15862
   283  0000                     _U1BRGL	set	15861
   284  0000                     _U1CON2	set	15860
   285  0000                     _U1CON1	set	15859
   286  0000                     _U1CON0	set	15858
   287  0000                     _U1P3H	set	15857
   288  0000                     _U1P3L	set	15856
   289  0000                     _U1P2H	set	15855
   290  0000                     _U1P2L	set	15854
   291  0000                     _U1P1H	set	15853
   292  0000                     _U1P1L	set	15852
   293  0000                     _ADCON1bits	set	16121
   294  0000                     _ADERRL	set	16098
   295  0000                     _ADERRH	set	16099
   296  0000                     _ADPREVL	set	16109
   297  0000                     _ADPREVH	set	16110
   298  0000                     _ADFLTRL	set	16102
   299  0000                     _ADFLTRH	set	16103
   300  0000                     _ADSTATbits	set	16124
   301  0000                     _ADACCL	set	16104
   302  0000                     _ADACCH	set	16105
   303  0000                     _ADCON2bits	set	16122
   304  0000                     _ADCNT	set	16107
   305  0000                     _ADCON3bits	set	16123
   306  0000                     _ADRESL	set	16111
   307  0000                     _ADRESH	set	16112
   308  0000                     _ADCON0bits	set	16120
   309  0000                     _ADCON0	set	16120
   310  0000                     _ADCLK	set	16127
   311  0000                     _ADACT	set	16126
   312  0000                     _ADREF	set	16125
   313  0000                     _ADSTAT	set	16124
   314  0000                     _ADCON3	set	16123
   315  0000                     _ADCON2	set	16122
   316  0000                     _ADCON1	set	16121
   317  0000                     _ADPREH	set	16119
   318  0000                     _ADPREL	set	16118
   319  0000                     _ADCAP	set	16117
   320  0000                     _ADACQH	set	16116
   321  0000                     _ADACQL	set	16115
   322  0000                     _ADPCH	set	16113
   323  0000                     _ADRPT	set	16108
   324  0000                     _ADACCU	set	16106
   325  0000                     _ADSTPTH	set	16101
   326  0000                     _ADSTPTL	set	16100
   327  0000                     _ADUTHH	set	16097
   328  0000                     _ADUTHL	set	16096
   329  0000                     _ADLTHH	set	16095
   330  0000                     _ADLTHL	set	16094
   331  0000                     _SMT1TMR	set	16146
   332  0000                     _SMT1CPR	set	16149
   333  0000                     _SMT1CPW	set	16152
   334  0000                     _SMT1PR	set	16155
   335  0000                     _SMT1STATbits	set	16160
   336  0000                     _SMT1CON0bits	set	16158
   337  0000                     _SMT1CON1bits	set	16159
   338  0000                     _SMT1PRL	set	16155
   339  0000                     _SMT1PRH	set	16156
   340  0000                     _SMT1PRU	set	16157
   341  0000                     _SMT1SIG	set	16162
   342  0000                     _SMT1WIN	set	16163
   343  0000                     _SMT1CLK	set	16161
   344  0000                     _SMT1STAT	set	16160
   345  0000                     _SMT1CON1	set	16159
   346  0000                     _SMT1CON0	set	16158
   347  0000                     _CCPTMRS1bits	set	16223
   348  0000                     _CCPTMRS0bits	set	16222
   349  0000                     _PORTBbits	set	16331
   350  0000                     _PR2	set	16299
   351  0000                     _TMR2	set	16298
   352  0000                     _T2CONbits	set	16300
   353  0000                     _T2RSTbits	set	16303
   354  0000                     _T2HLTbits	set	16301
   355  0000                     _T2CON	set	16300
   356  0000                     _T2TMR	set	16298
   357  0000                     _T2PR	set	16299
   358  0000                     _T2RST	set	16303
   359  0000                     _T2HLT	set	16301
   360  0000                     _T2CLKCON	set	16302
   361  0000                     _PWM6DCL	set	16232
   362  0000                     _PWM6DCH	set	16233
   363  0000                     _PWM6CON	set	16234
   364  0000                     _PWM5DCL	set	16236
   365  0000                     _PWM5DCH	set	16237
   366  0000                     _PWM5CON	set	16238
   367  0000                     _PWM8DCL	set	16224
   368  0000                     _PWM8DCH	set	16225
   369  0000                     _PWM8CON	set	16226
   370  0000                     _PWM7DCL	set	16228
   371  0000                     _PWM7DCH	set	16229
   372  0000                     _PWM7CON	set	16230
   373  0000                     _PR4	set	16287
   374  0000                     _TMR4	set	16286
   375  0000                     _T4CONbits	set	16288
   376  0000                     _T4RSTbits	set	16291
   377  0000                     _T4HLTbits	set	16289
   378  0000                     _T4CON	set	16288
   379  0000                     _T4TMR	set	16286
   380  0000                     _T4PR	set	16287
   381  0000                     _T4RST	set	16291
   382  0000                     _T4HLT	set	16289
   383  0000                     _T4CLKCON	set	16290
   384  0000                     _T3GCONbits	set	16295
   385  0000                     _T3CONbits	set	16294
   386  0000                     _T3CON	set	16294
   387  0000                     _TMR3L	set	16292
   388  0000                     _TMR3H	set	16293
   389  0000                     _T3CLK	set	16297
   390  0000                     _T3GATE	set	16296
   391  0000                     _T3GCON	set	16295
   392  0000                     _T5GCONbits	set	16283
   393  0000                     _T5CONbits	set	16282
   394  0000                     _T5CON	set	16282
   395  0000                     _TMR5L	set	16280
   396  0000                     _TMR5H	set	16281
   397  0000                     _T5CLK	set	16285
   398  0000                     _T5GATE	set	16284
   399  0000                     _T5GCON	set	16283
   400  0000                     _CCPR4L	set	16240
   401  0000                     _CCPR4H	set	16241
   402  0000                     _CCP4CAP	set	16243
   403  0000                     _CCP4CON	set	16242
   404  0000                     _CCPR3L	set	16244
   405  0000                     _CCPR3H	set	16245
   406  0000                     _CCP3CAP	set	16247
   407  0000                     _CCP3CON	set	16246
   408  0000                     _PORTDbits	set	16333
   409  0000                     _IVTBASEL	set	16341
   410  0000                     _IVTBASEH	set	16342
   411  0000                     _IVTBASEU	set	16343
   412  0000                     _IVTLOCKbits	set	16340
   413  0000                     _IVTLOCK	set	16340
   414  0000                     _INTCON0bits	set	16338
   415  0000                     _TRISD	set	16325
   416  0000                     _TRISC	set	16324
   417  0000                     _TRISB	set	16323
   418  0000                     _TRISA	set	16322
   419  0000                     _TRISE	set	16326
   420  0000                     _LATC	set	16316
   421  0000                     _LATB	set	16315
   422  0000                     _LATA	set	16314
   423  0000                     _LATD	set	16317
   424  0000                     _LATE	set	16318
   425  0000                     _GIE	set	130711
   426                           
   427                           ; #config settings
   428                           
   429                           	psect	cinit
   430  001F30                     __pcinit:
   431                           	callstack 0
   432  001F30                     start_initialization:
   433                           	callstack 0
   434  001F30                     __initialization:
   435                           	callstack 0
   436                           
   437                           ; Initialize objects allocated to BANK0 (2 bytes)
   438                           ; load TBLPTR registers with __pidataBANK0
   439  001F30  0ED4               	movlw	low __pidataBANK0
   440  001F32  6EF6               	movwf	tblptrl,c
   441  001F34  0E27               	movlw	high __pidataBANK0
   442  001F36  6EF7               	movwf	tblptrh,c
   443  001F38  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   444  001F3A  6EF8               	movwf	tblptru,c
   445  001F3C  0009               	tblrd		*+	;fetch initializer
   446  001F3E  006F FFD4  F0DE    	movff	tablat,__pdataBANK0
   447  001F44  0009               	tblrd		*+	;fetch initializer
   448  001F46  006F FFD4  F0DF    	movff	tablat,__pdataBANK0+1
   449                           
   450                           ; Initialize objects allocated to COMRAM (1 bytes)
   451                           ; load TBLPTR registers with __pidataCOMRAM
   452  001F4C  0EDE               	movlw	low __pidataCOMRAM
   453  001F4E  6EF6               	movwf	tblptrl,c
   454  001F50  0E27               	movlw	high __pidataCOMRAM
   455  001F52  6EF7               	movwf	tblptrh,c
   456  001F54  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   457  001F56  6EF8               	movwf	tblptru,c
   458  001F58  0009               	tblrd		*+	;fetch initializer
   459  001F5A  006F FFD4  F04C    	movff	tablat,__pdataCOMRAM
   460                           
   461                           ; Clear objects allocated to BANK0 (61 bytes)
   462  001F60  EE00  F060         	lfsr	0,__pbssBANK0
   463  001F64  0E3D               	movlw	61
   464  001F66                     clear_0:
   465  001F66  6AEE               	clrf	postinc0,c
   466  001F68  06E8               	decf	wreg,f,c
   467  001F6A  E1FD               	bnz	clear_0
   468                           
   469                           ; Clear objects allocated to COMRAM (18 bytes)
   470  001F6C  EE00  F03A         	lfsr	0,__pbssCOMRAM
   471  001F70  0E12               	movlw	18
   472  001F72                     clear_1:
   473  001F72  6AEE               	clrf	postinc0,c
   474  001F74  06E8               	decf	wreg,f,c
   475  001F76  E1FD               	bnz	clear_1
   476                           
   477                           ;
   478                           ; Setup IVTBASE
   479                           ;
   480  001F78  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   481  001F7A  6ED5               	movwf	213,c
   482  001F7C  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   483  001F7E  6ED6               	movwf	214,c
   484  001F80  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   485  001F82  6ED7               	movwf	215,c
   486  001F84                     end_of_initialization:
   487                           	callstack 0
   488  001F84                     __end_of__initialization:
   489                           	callstack 0
   490  001F84  0E00               	movlw	low (__Lmediumconst shr (0+16))
   491  001F86  6EF8               	movwf	tblptru,c
   492  001F88  0100               	movlb	0
   493  001F8A  EF40  F013         	goto	_main	;jump to C main() function
   494                           
   495                           	psect	bssCOMRAM
   496  00003A                     __pbssCOMRAM:
   497                           	callstack 0
   498  00003A                     _oldDistLeft:
   499                           	callstack 0
   500  00003A                     	ds	2
   501  00003C                     TMR4_ISR@CountCallBack:
   502                           	callstack 0
   503  00003C                     	ds	2
   504  00003E                     _delay:
   505                           	callstack 0
   506  00003E                     	ds	1
   507  00003F                     _curveMode:
   508                           	callstack 0
   509  00003F                     	ds	1
   510  000040                     _uart1RxLastError:
   511                           	callstack 0
   512  000040                     	ds	1
   513  000041                     _uart1RxCount:
   514                           	callstack 0
   515  000041                     	ds	1
   516  000042                     _uart1RxTail:
   517                           	callstack 0
   518  000042                     	ds	1
   519  000043                     _uart1RxHead:
   520                           	callstack 0
   521  000043                     	ds	1
   522  000044                     _uart1TxTail:
   523                           	callstack 0
   524  000044                     	ds	1
   525  000045                     _uart1TxHead:
   526                           	callstack 0
   527  000045                     	ds	1
   528  000046                     _smtPeriod:
   529                           	callstack 0
   530  000046                     	ds	4
   531  00004A                     _distFront:
   532                           	callstack 0
   533  00004A                     	ds	2
   534                           
   535                           	psect	dataCOMRAM
   536  00004C                     __pdataCOMRAM:
   537                           	callstack 0
   538  00004C                     _driveMode:
   539                           	callstack 0
   540  00004C                     	ds	1
   541                           
   542                           	psect	bssBANK0
   543  000060                     __pbssBANK0:
   544                           	callstack 0
   545  000060                     _uart1RxStatusBuffer:
   546                           	callstack 0
   547  000060                     	ds	8
   548  000068                     _uart1RxBuffer:
   549                           	callstack 0
   550  000068                     	ds	8
   551  000070                     _uart1TxBuffer:
   552                           	callstack 0
   553  000070                     	ds	8
   554  000078                     _smtWay:
   555                           	callstack 0
   556  000078                     	ds	4
   557  00007C                     _smtDuty:
   558                           	callstack 0
   559  00007C                     	ds	4
   560  000080                     _BatteryVolt:
   561                           	callstack 0
   562  000080                     	ds	2
   563  000082                     _reverseTime:
   564                           	callstack 0
   565  000082                     	ds	2
   566  000084                     _actMotorPow:
   567                           	callstack 0
   568  000084                     	ds	2
   569  000086                     _oldSpeed:
   570                           	callstack 0
   571  000086                     	ds	2
   572  000088                     _currentSpeed:
   573                           	callstack 0
   574  000088                     	ds	2
   575  00008A                     _setSpeed:
   576                           	callstack 0
   577  00008A                     	ds	2
   578  00008C                     _motPow:
   579                           	callstack 0
   580  00008C                     	ds	2
   581  00008E                     _battCheckCount:
   582                           	callstack 0
   583  00008E                     	ds	2
   584  000090                     _oldDistRight:
   585                           	callstack 0
   586  000090                     	ds	2
   587  000092                     _reverseCount:
   588                           	callstack 0
   589  000092                     	ds	2
   590  000094                     _distRightM:
   591                           	callstack 0
   592  000094                     	ds	2
   593  000096                     _distRight:
   594                           	callstack 0
   595  000096                     	ds	2
   596  000098                     _distLeftM:
   597                           	callstack 0
   598  000098                     	ds	2
   599  00009A                     _distLeft:
   600                           	callstack 0
   601  00009A                     	ds	2
   602  00009C                     _cycle10ms:
   603                           	callstack 0
   604  00009C                     	ds	1
   605                           
   606                           	psect	dataBANK0
   607  0000DE                     __pdataBANK0:
   608                           	callstack 0
   609  0000DE                     _middleOffSet:
   610                           	callstack 0
   611  0000DE                     	ds	2
   612                           
   613                           	psect	cstackBANK0
   614  00009D                     __pcstackBANK0:
   615                           	callstack 0
   616  00009D                     ___flmul@sign:
   617                           	callstack 0
   618                           
   619                           ; 1 bytes @ 0x0
   620  00009D                     	ds	1
   621  00009E                     ___flmul@aexp:
   622                           	callstack 0
   623                           
   624                           ; 1 bytes @ 0x1
   625  00009E                     	ds	1
   626  00009F                     ___flmul@grs:
   627                           	callstack 0
   628                           
   629                           ; 4 bytes @ 0x2
   630  00009F                     	ds	4
   631  0000A3                     ___flmul@bexp:
   632                           	callstack 0
   633                           
   634                           ; 1 bytes @ 0x6
   635  0000A3                     	ds	1
   636  0000A4                     ___flmul@prod:
   637                           	callstack 0
   638                           
   639                           ; 4 bytes @ 0x7
   640  0000A4                     	ds	4
   641  0000A8                     ___flmul@temp:
   642                           	callstack 0
   643                           
   644                           ; 2 bytes @ 0xB
   645  0000A8                     	ds	2
   646  0000AA                     ?___fladd:
   647                           	callstack 0
   648  0000AA                     ___fladd@b:
   649                           	callstack 0
   650                           
   651                           ; 4 bytes @ 0xD
   652  0000AA                     	ds	4
   653  0000AE                     ___fladd@a:
   654                           	callstack 0
   655                           
   656                           ; 4 bytes @ 0x11
   657  0000AE                     	ds	4
   658  0000B2                     ___fladd@signs:
   659                           	callstack 0
   660                           
   661                           ; 1 bytes @ 0x15
   662  0000B2                     	ds	1
   663  0000B3                     ___fladd@aexp:
   664                           	callstack 0
   665                           
   666                           ; 1 bytes @ 0x16
   667  0000B3                     	ds	1
   668  0000B4                     ___fladd@bexp:
   669                           	callstack 0
   670                           
   671                           ; 1 bytes @ 0x17
   672  0000B4                     	ds	1
   673  0000B5                     ___fladd@grs:
   674                           	callstack 0
   675                           
   676                           ; 1 bytes @ 0x18
   677  0000B5                     	ds	1
   678  0000B6                     ?___fltol:
   679                           	callstack 0
   680  0000B6                     ___fltol@f1:
   681                           	callstack 0
   682                           
   683                           ; 4 bytes @ 0x19
   684  0000B6                     	ds	4
   685  0000BA                     ??___fltol:
   686                           
   687                           ; 1 bytes @ 0x1D
   688  0000BA                     	ds	4
   689  0000BE                     ___fltol@sign1:
   690                           	callstack 0
   691                           
   692                           ; 1 bytes @ 0x21
   693  0000BE                     	ds	1
   694  0000BF                     ___fltol@exp1:
   695                           	callstack 0
   696                           
   697                           ; 1 bytes @ 0x22
   698  0000BF                     	ds	1
   699  0000C0                     ??_calcSpeed:
   700  0000C0                     ??_calcMotorPow:
   701  0000C0                     startAccell@MPow:
   702                           	callstack 0
   703                           
   704                           ; 4 bytes @ 0x23
   705  0000C0                     	ds	2
   706  0000C2                     calcMotorPow@setSpeedDelta:
   707                           	callstack 0
   708                           
   709                           ; 2 bytes @ 0x25
   710  0000C2                     	ds	2
   711  0000C4                     calcSpeed@speed:
   712                           	callstack 0
   713  0000C4                     calcMotorPow@oldSpeedDelta:
   714                           	callstack 0
   715                           
   716                           ; 2 bytes @ 0x27
   717  0000C4                     	ds	2
   718  0000C6                     calcMotorPow@addMPow:
   719                           	callstack 0
   720                           
   721                           ; 1 bytes @ 0x29
   722  0000C6                     	ds	1
   723                           
   724                           	psect	cstackCOMRAM
   725  000001                     __pcstackCOMRAM:
   726                           	callstack 0
   727  000001                     CCP3_DefaultCallBack@capturedValue:
   728                           	callstack 0
   729                           
   730                           ; 2 bytes @ 0x0
   731  000001                     	ds	2
   732  000003                     CCP3_CaptureISR@module:
   733                           	callstack 0
   734                           
   735                           ; 2 bytes @ 0x2
   736  000003                     	ds	2
   737  000005                     CCP4_DefaultCallBack@capturedValue:
   738                           	callstack 0
   739                           
   740                           ; 2 bytes @ 0x4
   741  000005                     	ds	2
   742  000007                     CCP4_CaptureISR@module:
   743                           	callstack 0
   744                           
   745                           ; 2 bytes @ 0x6
   746  000007                     	ds	2
   747  000009                     ?_TMR5_ReadTimer:
   748                           	callstack 0
   749  000009                     TMR5_WriteTimer@timerVal:
   750                           	callstack 0
   751                           
   752                           ; 2 bytes @ 0x8
   753  000009                     	ds	2
   754  00000B                     ??_TMR5_ReadTimer:
   755  00000B                     
   756                           ; 1 bytes @ 0xA
   757  00000B                     	ds	2
   758  00000D                     TMR5_ReadTimer@readVal:
   759                           	callstack 0
   760                           
   761                           ; 2 bytes @ 0xC
   762  00000D                     	ds	2
   763  00000F                     TMR5_ReadTimer@readValHigh:
   764                           	callstack 0
   765                           
   766                           ; 1 bytes @ 0xE
   767  00000F                     	ds	1
   768  000010                     TMR5_ReadTimer@readValLow:
   769                           	callstack 0
   770                           
   771                           ; 1 bytes @ 0xF
   772  000010                     	ds	1
   773  000011                     ??_UART1_tx_vect_isr:
   774  000011                     
   775                           ; 1 bytes @ 0x10
   776  000011                     	ds	1
   777  000012                     ??_UART1_rx_vect_isr:
   778                           
   779                           ; 1 bytes @ 0x11
   780  000012                     	ds	1
   781  000013                     ??_TMR4_ISR:
   782                           
   783                           ; 1 bytes @ 0x12
   784  000013                     	ds	1
   785  000014                     ??_TMR3_Initialize:
   786  000014                     ??_getCurve:
   787  000014                     ?_ADCC_GetSingleConversion:
   788                           	callstack 0
   789  000014                     ?___awdiv:
   790                           	callstack 0
   791  000014                     ?___aldiv:
   792                           	callstack 0
   793  000014                     INTERRUPT_Initialize@state:
   794                           	callstack 0
   795  000014                     UART1_SetFramingErrorHandler@interruptHandler:
   796                           	callstack 0
   797  000014                     UART1_SetOverrunErrorHandler@interruptHandler:
   798                           	callstack 0
   799  000014                     UART1_SetErrorHandler@interruptHandler:
   800                           	callstack 0
   801  000014                     UART1_SetRxInterruptHandler@InterruptHandler:
   802                           	callstack 0
   803  000014                     UART1_SetTxInterruptHandler@InterruptHandler:
   804                           	callstack 0
   805  000014                     CCP3_SetCallBack@customCallBack:
   806                           	callstack 0
   807  000014                     CCP4_SetCallBack@customCallBack:
   808                           	callstack 0
   809  000014                     TMR5_SetGateInterruptHandler@InterruptHandler:
   810                           	callstack 0
   811  000014                     TMR4_SetInterruptHandler@InterruptHandler:
   812                           	callstack 0
   813  000014                     PWM7_LoadDutyValue@dutyValue:
   814                           	callstack 0
   815  000014                     PWM8_LoadDutyValue@dutyValue:
   816                           	callstack 0
   817  000014                     PWM5_LoadDutyValue@dutyValue:
   818                           	callstack 0
   819  000014                     PWM6_LoadDutyValue@dutyValue:
   820                           	callstack 0
   821  000014                     ___awdiv@dividend:
   822                           	callstack 0
   823  000014                     ___aldiv@dividend:
   824                           	callstack 0
   825                           
   826                           ; 4 bytes @ 0x13
   827  000014                     	ds	2
   828  000016                     ??_TMR5_Initialize:
   829  000016                     ??_PWM7_LoadDutyValue:
   830  000016                     ??_PWM8_LoadDutyValue:
   831  000016                     ??_PWM5_LoadDutyValue:
   832  000016                     ??_PWM6_LoadDutyValue:
   833  000016                     ??_ADCC_GetSingleConversion:
   834  000016                     getCurve@deltaRight:
   835                           	callstack 0
   836  000016                     ___awdiv@divisor:
   837                           	callstack 0
   838                           
   839                           ; 2 bytes @ 0x15
   840  000016                     	ds	2
   841  000018                     ADCC_GetSingleConversion@channel:
   842                           	callstack 0
   843  000018                     ___awdiv@counter:
   844                           	callstack 0
   845  000018                     getCurve@deltaLeft:
   846                           	callstack 0
   847  000018                     setMotor@motorPower:
   848                           	callstack 0
   849  000018                     ___aldiv@divisor:
   850                           	callstack 0
   851                           
   852                           ; 4 bytes @ 0x17
   853  000018                     	ds	1
   854  000019                     ___awdiv@sign:
   855                           	callstack 0
   856                           
   857                           ; 1 bytes @ 0x18
   858  000019                     	ds	1
   859  00001A                     ??_setMotor:
   860  00001A                     ___awdiv@quotient:
   861                           	callstack 0
   862                           
   863                           ; 2 bytes @ 0x19
   864  00001A                     	ds	2
   865  00001C                     ?___xxtofl:
   866                           	callstack 0
   867  00001C                     ___aldiv@counter:
   868                           	callstack 0
   869  00001C                     setSteering@steering:
   870                           	callstack 0
   871  00001C                     ___xxtofl@val:
   872                           	callstack 0
   873                           
   874                           ; 4 bytes @ 0x1B
   875  00001C                     	ds	1
   876  00001D                     ___aldiv@sign:
   877                           	callstack 0
   878                           
   879                           ; 1 bytes @ 0x1C
   880  00001D                     	ds	1
   881  00001E                     setSteering@steeringMode:
   882                           	callstack 0
   883  00001E                     ___aldiv@quotient:
   884                           	callstack 0
   885                           
   886                           ; 4 bytes @ 0x1D
   887  00001E                     	ds	1
   888  00001F                     ??_setSteering:
   889                           
   890                           ; 1 bytes @ 0x1E
   891  00001F                     	ds	1
   892  000020                     ??___xxtofl:
   893                           
   894                           ; 1 bytes @ 0x1F
   895  000020                     	ds	1
   896  000021                     setSteering@steeringF:
   897                           	callstack 0
   898                           
   899                           ; 2 bytes @ 0x20
   900  000021                     	ds	1
   901  000022                     ?_actSpeed:
   902                           	callstack 0
   903                           
   904                           ; 2 bytes @ 0x21
   905  000022                     	ds	1
   906  000023                     setSteering@steeringB:
   907                           	callstack 0
   908                           
   909                           ; 2 bytes @ 0x22
   910  000023                     	ds	1
   911  000024                     ___xxtofl@sign:
   912                           	callstack 0
   913  000024                     actSpeed@speed:
   914                           	callstack 0
   915                           
   916                           ; 2 bytes @ 0x23
   917  000024                     	ds	1
   918  000025                     ??_calcSteering:
   919  000025                     ___xxtofl@exp:
   920                           	callstack 0
   921                           
   922                           ; 1 bytes @ 0x24
   923  000025                     	ds	1
   924  000026                     ___xxtofl@arg:
   925                           	callstack 0
   926                           
   927                           ; 4 bytes @ 0x25
   928  000026                     	ds	1
   929  000027                     _calcSteering$3897:
   930                           	callstack 0
   931                           
   932                           ; 2 bytes @ 0x26
   933  000027                     	ds	2
   934  000029                     calcSteering@delta:
   935                           	callstack 0
   936                           
   937                           ; 2 bytes @ 0x28
   938  000029                     	ds	1
   939  00002A                     ?___flmul:
   940                           	callstack 0
   941  00002A                     ___flge@ff1:
   942                           	callstack 0
   943  00002A                     ___flmul@b:
   944                           	callstack 0
   945                           
   946                           ; 4 bytes @ 0x29
   947  00002A                     	ds	4
   948  00002E                     ___flge@ff2:
   949                           	callstack 0
   950  00002E                     ___flmul@a:
   951                           	callstack 0
   952                           
   953                           ; 4 bytes @ 0x2D
   954  00002E                     	ds	4
   955  000032                     ??___flmul:
   956  000032                     ??___flge:
   957                           
   958                           ; 1 bytes @ 0x31
   959  000032                     	ds	4
   960  000036                     ??___fladd:
   961                           
   962                           ; 1 bytes @ 0x35
   963  000036                     	ds	4
   964  00003A                     
   965                           ; 1 bytes @ 0x39
   966 ;;
   967 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   968 ;;
   969 ;; *************** function _main *****************
   970 ;; Defined at:
   971 ;;		line 8 in file "main.c"
   972 ;; Parameters:    Size  Location     Type
   973 ;;		None
   974 ;; Auto vars:     Size  Location     Type
   975 ;;		None
   976 ;; Return value:  Size  Location     Type
   977 ;;                  1    wreg      void 
   978 ;; Registers used:
   979 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   980 ;; Tracked objects:
   981 ;;		On entry : 0/0
   982 ;;		On exit  : 0/0
   983 ;;		Unchanged: 0/0
   984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   988 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   989 ;;Total ram usage:        0 bytes
   990 ;; Hardware stack levels required when called: 13
   991 ;; This function calls:
   992 ;;		_SYSTEM_Initialize
   993 ;;		_TMR4_SetInterruptHandler
   994 ;;		_loop
   995 ;; This function is called by:
   996 ;;		Startup code after reset
   997 ;; This function uses a non-reentrant model
   998 ;;
   999                           
  1000                           	psect	text0
  1001  002680                     __ptext0:
  1002                           	callstack 0
  1003  002680                     _main:
  1004                           	callstack 18
  1005  002680                     
  1006                           ;main.c: 9:     SYSTEM_Initialize();
  1007  002680  EC46  F010         	call	_SYSTEM_Initialize	;wreg free
  1008  002684                     
  1009                           ;main.c: 10:     (INTCON0bits.GIEH = 1);
  1010  002684  8ED2               	bsf	210,7,c	;volatile
  1011  002686                     
  1012                           ;main.c: 11:     (INTCON0bits.GIEL = 1);
  1013  002686  8CD2               	bsf	210,6,c	;volatile
  1014                           
  1015                           ;main.c: 12:     TMR4_SetInterruptHandler(TMR4_10msISR);
  1016  002688  0ECE               	movlw	low _TMR4_10msISR
  1017  00268A  6E14               	movwf	TMR4_SetInterruptHandler@InterruptHandler^0,c
  1018  00268C  0E27               	movlw	high _TMR4_10msISR
  1019  00268E  6E15               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)^0,c
  1020  002690  ECD5  F013         	call	_TMR4_SetInterruptHandler	;wreg free
  1021  002694                     l5881:
  1022                           
  1023                           ;main.c: 15:         loop();
  1024  002694  ECD0  F00A         	call	_loop	;wreg free
  1025  002698  EF4A  F013         	goto	l5881
  1026  00269C  EF57  F000         	goto	start
  1027  0026A0                     __end_of_main:
  1028                           	callstack 0
  1029                           
  1030 ;; *************** function _loop *****************
  1031 ;; Defined at:
  1032 ;;		line 19 in file "main.c"
  1033 ;; Parameters:    Size  Location     Type
  1034 ;;		None
  1035 ;; Auto vars:     Size  Location     Type
  1036 ;;		None
  1037 ;; Return value:  Size  Location     Type
  1038 ;;                  1    wreg      void 
  1039 ;; Registers used:
  1040 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1041 ;; Tracked objects:
  1042 ;;		On entry : 0/0
  1043 ;;		On exit  : 0/0
  1044 ;;		Unchanged: 0/0
  1045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1049 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1050 ;;Total ram usage:        0 bytes
  1051 ;; Hardware stack levels used: 1
  1052 ;; Hardware stack levels required when called: 12
  1053 ;; This function calls:
  1054 ;;		___flge
  1055 ;;		___xxtofl
  1056 ;;		_calcMotorPow
  1057 ;;		_calcSpeed
  1058 ;;		_calcSteering
  1059 ;;		_getBatteryVoltage
  1060 ;;		_getCurve
  1061 ;;		_getReverse
  1062 ;;		_setMotor
  1063 ;;		_setSteering
  1064 ;;		_startAccell
  1065 ;; This function is called by:
  1066 ;;		_main
  1067 ;; This function uses a non-reentrant model
  1068 ;;
  1069                           
  1070                           	psect	text1
  1071  0015A0                     __ptext1:
  1072                           	callstack 0
  1073  0015A0                     _loop:
  1074                           	callstack 18
  1075  0015A0                     
  1076                           ;main.c: 20:     setMotor(0);
  1077  0015A0  0E00               	movlw	0
  1078  0015A2  6E19               	movwf	(setMotor@motorPower+1)^0,c
  1079  0015A4  0E00               	movlw	0
  1080  0015A6  6E18               	movwf	setMotor@motorPower^0,c
  1081  0015A8  EC60  F00D         	call	_setMotor	;wreg free
  1082                           
  1083                           ;main.c: 21:     setSteering(0, Front);
  1084  0015AC  0E00               	movlw	0
  1085  0015AE  6E1D               	movwf	(setSteering@steering+1)^0,c
  1086  0015B0  0E00               	movlw	0
  1087  0015B2  6E1C               	movwf	setSteering@steering^0,c
  1088  0015B4  0E03               	movlw	3
  1089  0015B6  6E1E               	movwf	setSteering@steeringMode^0,c
  1090  0015B8  ECC3  F008         	call	_setSteering	;wreg free
  1091  0015BC                     l1220:
  1092  0015BC  B8CB               	btfsc	203,4,c	;volatile
  1093  0015BE  EFE3  F00A         	goto	u4631
  1094  0015C2  EFE5  F00A         	goto	u4630
  1095  0015C6                     u4631:
  1096  0015C6  EFDE  F00A         	goto	l1220
  1097  0015CA                     u4630:
  1098  0015CA                     l5839:
  1099  0015CA  0100               	movlb	0	; () banked
  1100  0015CC  519C               	movf	_cycle10ms& (0+255),w,b	;volatile
  1101  0015CE  B4D8               	btfsc	status,2,c
  1102  0015D0  EFEC  F00A         	goto	u4641
  1103  0015D4  EFEE  F00A         	goto	u4640
  1104  0015D8                     u4641:
  1105  0015D8  EFE5  F00A         	goto	l5839
  1106  0015DC                     u4640:
  1107  0015DC                     
  1108                           ; BSR set to: 0
  1109                           ;main.c: 26:         cycle10ms = 0;
  1110  0015DC  0E00               	movlw	0
  1111  0015DE  6F9C               	movwf	_cycle10ms& (0+255),b	;volatile
  1112  0015E0                     
  1113                           ; BSR set to: 0
  1114                           ;main.c: 28:         getBatteryVoltage();
  1115  0015E0  ECA8  F013         	call	_getBatteryVoltage	;wreg free
  1116  0015E4                     
  1117                           ;main.c: 29:     } while (BatteryVolt < ((6.8) * 409.6));
  1118  0015E4  C080  F01C         	movff	_BatteryVolt,___xxtofl@val
  1119  0015E8  C081  F01D         	movff	_BatteryVolt+1,___xxtofl@val+1
  1120  0015EC  6A1E               	clrf	(___xxtofl@val+2)^0,c
  1121  0015EE  6A1F               	clrf	(___xxtofl@val+3)^0,c
  1122  0015F0  0E00               	movlw	0
  1123  0015F2  ECE9  F007         	call	___xxtofl
  1124  0015F6  C01C  F02A         	movff	?___xxtofl,___flge@ff1
  1125  0015FA  C01D  F02B         	movff	?___xxtofl+1,___flge@ff1+1
  1126  0015FE  C01E  F02C         	movff	?___xxtofl+2,___flge@ff1+2
  1127  001602  C01F  F02D         	movff	?___xxtofl+3,___flge@ff1+3
  1128  001606  0E7B               	movlw	123
  1129  001608  6E2E               	movwf	___flge@ff2^0,c
  1130  00160A  0E14               	movlw	20
  1131  00160C  6E2F               	movwf	(___flge@ff2+1)^0,c
  1132  00160E  0E2E               	movlw	46
  1133  001610  6E30               	movwf	(___flge@ff2+2)^0,c
  1134  001612  0E45               	movlw	69
  1135  001614  6E31               	movwf	(___flge@ff2+3)^0,c
  1136  001616  EC60  F00C         	call	___flge	;wreg free
  1137  00161A  A0D8               	btfss	status,0,c
  1138  00161C  EF12  F00B         	goto	u4651
  1139  001620  EF14  F00B         	goto	u4650
  1140  001624                     u4651:
  1141  001624  EFE5  F00A         	goto	l5839
  1142  001628                     u4650:
  1143  001628                     
  1144                           ;main.c: 31:     startAccell();
  1145  001628  EC37  F00A         	call	_startAccell	;wreg free
  1146  00162C                     
  1147                           ;main.c: 32:     driveMode = Straight;
  1148  00162C  0E01               	movlw	1
  1149  00162E  6E4C               	movwf	_driveMode^0,c
  1150  001630                     
  1151                           ;main.c: 33:     curveMode = OutCurve;
  1152  001630  0E00               	movlw	0
  1153  001632  6E3F               	movwf	_curveMode^0,c
  1154  001634                     
  1155                           ;main.c: 34:     oldDistLeft = distLeft;
  1156  001634  C09A  F03A         	movff	_distLeft,_oldDistLeft	;volatile
  1157  001638  C09B  F03B         	movff	_distLeft+1,_oldDistLeft+1	;volatile
  1158  00163C                     
  1159                           ;main.c: 35:     oldDistRight = distRight;
  1160  00163C  C096  F090         	movff	_distRight,_oldDistRight	;volatile
  1161  001640  C097  F091         	movff	_distRight+1,_oldDistRight+1	;volatile
  1162  001644                     
  1163                           ;main.c: 36:     cycle10ms = 0;
  1164  001644  0E00               	movlw	0
  1165  001646  0100               	movlb	0	; () banked
  1166  001648  6F9C               	movwf	_cycle10ms& (0+255),b	;volatile
  1167  00164A                     l5859:
  1168  00164A  0100               	movlb	0	; () banked
  1169  00164C  519C               	movf	_cycle10ms& (0+255),w,b	;volatile
  1170  00164E  B4D8               	btfsc	status,2,c
  1171  001650  EF2C  F00B         	goto	u4661
  1172  001654  EF2E  F00B         	goto	u4660
  1173  001658                     u4661:
  1174  001658  EF25  F00B         	goto	l5859
  1175  00165C                     u4660:
  1176  00165C                     
  1177                           ; BSR set to: 0
  1178                           ;main.c: 39:         cycle10ms = 0;
  1179  00165C  0E00               	movlw	0
  1180  00165E  6F9C               	movwf	_cycle10ms& (0+255),b	;volatile
  1181  001660                     
  1182                           ; BSR set to: 0
  1183                           ;main.c: 41:         if (!PORTBbits.RB5) {
  1184  001660  BACB               	btfsc	203,5,c	;volatile
  1185  001662  EF35  F00B         	goto	u4671
  1186  001666  EF37  F00B         	goto	u4670
  1187  00166A                     u4671:
  1188  00166A  EF49  F00B         	goto	l5869
  1189  00166E                     u4670:
  1190  00166E                     
  1191                           ; BSR set to: 0
  1192                           ;main.c: 42:             setSpeed = 0;
  1193  00166E  0E00               	movlw	0
  1194  001670  6F8B               	movwf	(_setSpeed+1)& (0+255),b
  1195  001672  0E00               	movlw	0
  1196  001674  6F8A               	movwf	_setSpeed& (0+255),b
  1197                           
  1198                           ;main.c: 43:             actMotorPow = 0;
  1199  001676  0E00               	movlw	0
  1200  001678  6F85               	movwf	(_actMotorPow+1)& (0+255),b
  1201  00167A  0E00               	movlw	0
  1202  00167C  6F84               	movwf	_actMotorPow& (0+255),b
  1203  00167E                     
  1204                           ; BSR set to: 0
  1205                           ;main.c: 44:             setSteering(0, Front);
  1206  00167E  0E00               	movlw	0
  1207  001680  6E1D               	movwf	(setSteering@steering+1)^0,c
  1208  001682  0E00               	movlw	0
  1209  001684  6E1C               	movwf	setSteering@steering^0,c
  1210  001686  0E03               	movlw	3
  1211  001688  6E1E               	movwf	setSteering@steeringMode^0,c
  1212  00168A  ECC3  F008         	call	_setSteering	;wreg free
  1213                           
  1214                           ;main.c: 45:             break;
  1215  00168E  EF55  F00B         	goto	l1235
  1216  001692                     l5869:
  1217                           
  1218                           ; BSR set to: 0
  1219                           ;main.c: 53:         getCurve();
  1220  001692  ECE2  F004         	call	_getCurve	;wreg free
  1221                           
  1222                           ;main.c: 54:         getReverse();
  1223  001696  ECE2  F00C         	call	_getReverse	;wreg free
  1224                           
  1225                           ;main.c: 56:         calcSteering();
  1226  00169A  ECFF  F006         	call	_calcSteering	;wreg free
  1227  00169E                     
  1228                           ;main.c: 57:         calcSpeed();
  1229  00169E  ECF6  F005         	call	_calcSpeed	;wreg free
  1230  0016A2                     
  1231                           ;main.c: 58:         calcMotorPow();
  1232  0016A2  EC95  F009         	call	_calcMotorPow	;wreg free
  1233  0016A6  EF25  F00B         	goto	l5859
  1234  0016AA                     l1235:
  1235  0016AA  0012               	return		;funcret
  1236  0016AC                     __end_of_loop:
  1237                           	callstack 0
  1238                           
  1239 ;; *************** function _startAccell *****************
  1240 ;; Defined at:
  1241 ;;		line 98 in file "main.c"
  1242 ;; Parameters:    Size  Location     Type
  1243 ;;		None
  1244 ;; Auto vars:     Size  Location     Type
  1245 ;;  MPow            4   35[BANK0 ] float 
  1246 ;; Return value:  Size  Location     Type
  1247 ;;                  1    wreg      void 
  1248 ;; Registers used:
  1249 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1250 ;; Tracked objects:
  1251 ;;		On entry : 0/0
  1252 ;;		On exit  : 0/0
  1253 ;;		Unchanged: 0/0
  1254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1256 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1258 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1259 ;;Total ram usage:        4 bytes
  1260 ;; Hardware stack levels used: 1
  1261 ;; Hardware stack levels required when called: 11
  1262 ;; This function calls:
  1263 ;;		___flge
  1264 ;;		___flmul
  1265 ;;		___fltol
  1266 ;;		___xxtofl
  1267 ;;		_calcSteering
  1268 ;;		_setMotor
  1269 ;;		_setSteering
  1270 ;; This function is called by:
  1271 ;;		_loop
  1272 ;; This function uses a non-reentrant model
  1273 ;;
  1274                           
  1275                           	psect	text2
  1276  00146E                     __ptext2:
  1277                           	callstack 0
  1278  00146E                     _startAccell:
  1279                           	callstack 18
  1280  00146E                     
  1281                           ;main.c: 99:     setSteering(0, Front);
  1282  00146E  0E00               	movlw	0
  1283  001470  6E1D               	movwf	(setSteering@steering+1)^0,c
  1284  001472  0E00               	movlw	0
  1285  001474  6E1C               	movwf	setSteering@steering^0,c
  1286  001476  0E03               	movlw	3
  1287  001478  6E1E               	movwf	setSteering@steeringMode^0,c
  1288  00147A  ECC3  F008         	call	_setSteering	;wreg free
  1289  00147E                     
  1290                           ;main.c: 100:     driveMode = Accel;
  1291  00147E  0E00               	movlw	0
  1292  001480  6E4C               	movwf	_driveMode^0,c
  1293  001482                     
  1294                           ;main.c: 102:     actMotorPow = (40);
  1295  001482  0E00               	movlw	0
  1296  001484  0100               	movlb	0	; () banked
  1297  001486  6F85               	movwf	(_actMotorPow+1)& (0+255),b
  1298  001488  0E28               	movlw	40
  1299  00148A  6F84               	movwf	_actMotorPow& (0+255),b
  1300                           
  1301                           ;main.c: 103:     float MPow = actMotorPow;
  1302  00148C  C084  F01C         	movff	_actMotorPow,___xxtofl@val
  1303  001490  C085  F01D         	movff	_actMotorPow+1,___xxtofl@val+1
  1304  001494  0E00               	movlw	0
  1305  001496  BE1D               	btfsc	(___xxtofl@val+1)^0,7,c
  1306  001498  0EFF               	movlw	-1
  1307  00149A  6E1E               	movwf	(___xxtofl@val+2)^0,c
  1308  00149C  6E1F               	movwf	(___xxtofl@val+3)^0,c
  1309  00149E  0E01               	movlw	1
  1310  0014A0  ECE9  F007         	call	___xxtofl
  1311  0014A4  C01C  F0C0         	movff	?___xxtofl,startAccell@MPow
  1312  0014A8  C01D  F0C1         	movff	?___xxtofl+1,startAccell@MPow+1
  1313  0014AC  C01E  F0C2         	movff	?___xxtofl+2,startAccell@MPow+2
  1314  0014B0  C01F  F0C3         	movff	?___xxtofl+3,startAccell@MPow+3
  1315                           
  1316                           ;main.c: 105:     while (MPow < (250)) {
  1317  0014B4  EF97  F00A         	goto	l5733
  1318  0014B8                     l5721:
  1319                           
  1320                           ;main.c: 106:         MPow *= (1.1);
  1321  0014B8  C0C0  F02A         	movff	startAccell@MPow,___flmul@b
  1322  0014BC  C0C1  F02B         	movff	startAccell@MPow+1,___flmul@b+1
  1323  0014C0  C0C2  F02C         	movff	startAccell@MPow+2,___flmul@b+2
  1324  0014C4  C0C3  F02D         	movff	startAccell@MPow+3,___flmul@b+3
  1325  0014C8  0ECD               	movlw	205
  1326  0014CA  6E2E               	movwf	___flmul@a^0,c
  1327  0014CC  0ECC               	movlw	204
  1328  0014CE  6E2F               	movwf	(___flmul@a+1)^0,c
  1329  0014D0  0E8C               	movlw	140
  1330  0014D2  6E30               	movwf	(___flmul@a+2)^0,c
  1331  0014D4  0E3F               	movlw	63
  1332  0014D6  6E31               	movwf	(___flmul@a+3)^0,c
  1333  0014D8  ECBA  F002         	call	___flmul	;wreg free
  1334  0014DC  C02A  F0C0         	movff	?___flmul,startAccell@MPow
  1335  0014E0  C02B  F0C1         	movff	?___flmul+1,startAccell@MPow+1
  1336  0014E4  C02C  F0C2         	movff	?___flmul+2,startAccell@MPow+2
  1337  0014E8  C02D  F0C3         	movff	?___flmul+3,startAccell@MPow+3
  1338  0014EC                     
  1339                           ;main.c: 107:         actMotorPow = (int16_t) MPow;
  1340  0014EC  C0C0  F0B6         	movff	startAccell@MPow,___fltol@f1
  1341  0014F0  C0C1  F0B7         	movff	startAccell@MPow+1,___fltol@f1+1
  1342  0014F4  C0C2  F0B8         	movff	startAccell@MPow+2,___fltol@f1+2
  1343  0014F8  C0C3  F0B9         	movff	startAccell@MPow+3,___fltol@f1+3
  1344  0014FC  ECDC  F00B         	call	___fltol	;wreg free
  1345  001500  C0B6  F084         	movff	?___fltol,_actMotorPow
  1346  001504  C0B7  F085         	movff	?___fltol+1,_actMotorPow+1
  1347  001508                     
  1348                           ;main.c: 108:         setMotor(actMotorPow);
  1349  001508  C084  F018         	movff	_actMotorPow,setMotor@motorPower
  1350  00150C  C085  F019         	movff	_actMotorPow+1,setMotor@motorPower+1
  1351  001510  EC60  F00D         	call	_setMotor	;wreg free
  1352  001514                     
  1353                           ;main.c: 110:         calcSteering();
  1354  001514  ECFF  F006         	call	_calcSteering	;wreg free
  1355  001518                     
  1356                           ;main.c: 112:         cycle10ms = 0;
  1357  001518  0E00               	movlw	0
  1358  00151A  0100               	movlb	0	; () banked
  1359  00151C  6F9C               	movwf	_cycle10ms& (0+255),b	;volatile
  1360  00151E                     l5731:
  1361                           
  1362                           ; BSR set to: 0
  1363  00151E  519C               	movf	_cycle10ms& (0+255),w,b	;volatile
  1364  001520  B4D8               	btfsc	status,2,c
  1365  001522  EF95  F00A         	goto	u4491
  1366  001526  EF97  F00A         	goto	u4490
  1367  00152A                     u4491:
  1368  00152A  EF8F  F00A         	goto	l5731
  1369  00152E                     u4490:
  1370  00152E                     l5733:
  1371                           
  1372                           ;main.c: 105:     while (MPow < (250)) {
  1373  00152E  C0C0  F02A         	movff	startAccell@MPow,___flge@ff1
  1374  001532  C0C1  F02B         	movff	startAccell@MPow+1,___flge@ff1+1
  1375  001536  C0C2  F02C         	movff	startAccell@MPow+2,___flge@ff1+2
  1376  00153A  C0C3  F02D         	movff	startAccell@MPow+3,___flge@ff1+3
  1377  00153E  0E00               	movlw	0
  1378  001540  6E2E               	movwf	___flge@ff2^0,c
  1379  001542  0E00               	movlw	0
  1380  001544  6E2F               	movwf	(___flge@ff2+1)^0,c
  1381  001546  0E7A               	movlw	122
  1382  001548  6E30               	movwf	(___flge@ff2+2)^0,c
  1383  00154A  0E43               	movlw	67
  1384  00154C  6E31               	movwf	(___flge@ff2+3)^0,c
  1385  00154E  EC60  F00C         	call	___flge	;wreg free
  1386  001552  A0D8               	btfss	status,0,c
  1387  001554  EFAE  F00A         	goto	u4501
  1388  001558  EFB0  F00A         	goto	u4500
  1389  00155C                     u4501:
  1390  00155C  EF5C  F00A         	goto	l5721
  1391  001560                     u4500:
  1392  001560                     
  1393                           ;main.c: 116:     actMotorPow = (250);
  1394  001560  0E00               	movlw	0
  1395  001562  0100               	movlb	0	; () banked
  1396  001564  6F85               	movwf	(_actMotorPow+1)& (0+255),b
  1397  001566  0EFA               	movlw	250
  1398  001568  6F84               	movwf	_actMotorPow& (0+255),b
  1399  00156A                     
  1400                           ; BSR set to: 0
  1401                           ;main.c: 117:     setMotor(actMotorPow);
  1402  00156A  C084  F018         	movff	_actMotorPow,setMotor@motorPower
  1403  00156E  C085  F019         	movff	_actMotorPow+1,setMotor@motorPower+1
  1404  001572  EC60  F00D         	call	_setMotor	;wreg free
  1405  001576                     
  1406                           ;main.c: 120:     cycle10ms = 0;
  1407  001576  0E00               	movlw	0
  1408  001578  0100               	movlb	0	; () banked
  1409  00157A  6F9C               	movwf	_cycle10ms& (0+255),b	;volatile
  1410                           
  1411                           ;main.c: 121:     while (cycle10ms < ((50) - (20))){
  1412  00157C  EFC2  F00A         	goto	l5743
  1413  001580                     l5741:
  1414                           
  1415                           ; BSR set to: 0
  1416                           ;main.c: 122:         calcSteering();
  1417  001580  ECFF  F006         	call	_calcSteering	;wreg free
  1418  001584                     l5743:
  1419                           
  1420                           ;main.c: 121:     while (cycle10ms < ((50) - (20))){
  1421  001584  0E1D               	movlw	29
  1422  001586  0100               	movlb	0	; () banked
  1423  001588  659C               	cpfsgt	_cycle10ms& (0+255),b	;volatile
  1424  00158A  EFC9  F00A         	goto	u4511
  1425  00158E  EFCB  F00A         	goto	u4510
  1426  001592                     u4511:
  1427  001592  EFC0  F00A         	goto	l5741
  1428  001596                     u4510:
  1429  001596                     
  1430                           ; BSR set to: 0
  1431                           ;main.c: 124:     driveMode = Straight;
  1432  001596  0E01               	movlw	1
  1433  001598  6E4C               	movwf	_driveMode^0,c
  1434  00159A                     
  1435                           ; BSR set to: 0
  1436                           ;main.c: 125:     calcSteering();
  1437  00159A  ECFF  F006         	call	_calcSteering	;wreg free
  1438  00159E  0012               	return		;funcret
  1439  0015A0                     __end_of_startAccell:
  1440                           	callstack 0
  1441                           
  1442 ;; *************** function _calcSteering *****************
  1443 ;; Defined at:
  1444 ;;		line 226 in file "main.c"
  1445 ;; Parameters:    Size  Location     Type
  1446 ;;		None
  1447 ;; Auto vars:     Size  Location     Type
  1448 ;;  delta           2   40[COMRAM] short 
  1449 ;; Return value:  Size  Location     Type
  1450 ;;                  1    wreg      void 
  1451 ;; Registers used:
  1452 ;;		wreg, status,2, status,0, cstack
  1453 ;; Tracked objects:
  1454 ;;		On entry : 0/0
  1455 ;;		On exit  : 0/0
  1456 ;;		Unchanged: 0/0
  1457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1459 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1460 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1461 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1462 ;;Total ram usage:        6 bytes
  1463 ;; Hardware stack levels used: 1
  1464 ;; Hardware stack levels required when called: 10
  1465 ;; This function calls:
  1466 ;;		___awdiv
  1467 ;;		_setSteering
  1468 ;; This function is called by:
  1469 ;;		_loop
  1470 ;;		_startAccell
  1471 ;; This function uses a non-reentrant model
  1472 ;;
  1473                           
  1474                           	psect	text3
  1475  000DFE                     __ptext3:
  1476                           	callstack 0
  1477  000DFE                     _calcSteering:
  1478                           	callstack 18
  1479  000DFE                     
  1480                           ;main.c: 227:     int16_t delta = (int16_t) (distLeft - distRight) - (int16_t) (middleOf
      +                          fSet * 1.4142135);
  1481  000DFE  0100               	movlb	0	; () banked
  1482  000E00  5196               	movf	_distRight& (0+255),w,b	;volatile
  1483  000E02  5D9A               	subwf	_distLeft& (0+255),w,b	;volatile
  1484  000E04  6E25               	movwf	??_calcSteering^0,c
  1485  000E06  5197               	movf	(_distRight+1)& (0+255),w,b	;volatile
  1486  000E08  599B               	subwfb	(_distLeft+1)& (0+255),w,b	;volatile
  1487  000E0A  6E26               	movwf	(??_calcSteering+1)^0,c
  1488  000E0C  0E15               	movlw	21
  1489  000E0E  2425               	addwf	??_calcSteering^0,w,c
  1490  000E10  6E29               	movwf	calcSteering@delta^0,c
  1491  000E12  0E00               	movlw	0
  1492  000E14  2026               	addwfc	(??_calcSteering+1)^0,w,c
  1493  000E16  6E2A               	movwf	(calcSteering@delta+1)^0,c
  1494                           
  1495                           ;main.c: 231:     switch (driveMode) {
  1496  000E18  EF36  F007         	goto	l5295
  1497  000E1C                     l1312:
  1498  000E1C                     l5285:
  1499                           
  1500                           ; BSR set to: 0
  1501                           ;main.c: 237:             if (delta > (25)) {
  1502  000E1C  BE2A               	btfsc	(calcSteering@delta+1)^0,7,c
  1503  000E1E  EF1A  F007         	goto	u3801
  1504  000E22  502A               	movf	(calcSteering@delta+1)^0,w,c
  1505  000E24  E109               	bnz	u3800
  1506  000E26  0E1A               	movlw	26
  1507  000E28  5C29               	subwf	calcSteering@delta^0,w,c
  1508  000E2A  A0D8               	btfss	status,0,c
  1509  000E2C  EF1A  F007         	goto	u3801
  1510  000E30  EF1C  F007         	goto	u3800
  1511  000E34                     u3801:
  1512  000E34  EF22  F007         	goto	l5289
  1513  000E38                     u3800:
  1514  000E38                     
  1515                           ; BSR set to: 0
  1516                           ;main.c: 238:                 delta = (25);
  1517  000E38  0E00               	movlw	0
  1518  000E3A  6E2A               	movwf	(calcSteering@delta+1)^0,c
  1519  000E3C  0E19               	movlw	25
  1520  000E3E  6E29               	movwf	calcSteering@delta^0,c
  1521                           
  1522                           ;main.c: 239:             } else if (delta < -(25)) {
  1523  000E40  EFBF  F007         	goto	l5321
  1524  000E44                     l5289:
  1525                           
  1526                           ; BSR set to: 0
  1527  000E44  AE2A               	btfss	(calcSteering@delta+1)^0,7,c
  1528  000E46  EF2E  F007         	goto	u3811
  1529  000E4A  0EE7               	movlw	231
  1530  000E4C  5C29               	subwf	calcSteering@delta^0,w,c
  1531  000E4E  0EFF               	movlw	255
  1532  000E50  582A               	subwfb	(calcSteering@delta+1)^0,w,c
  1533  000E52  B0D8               	btfsc	status,0,c
  1534  000E54  EF2E  F007         	goto	u3811
  1535  000E58  EF30  F007         	goto	u3810
  1536  000E5C                     u3811:
  1537  000E5C  EF57  F007         	goto	l1317
  1538  000E60                     u3810:
  1539  000E60                     
  1540                           ; BSR set to: 0
  1541                           ;main.c: 240:                 delta = -(25);
  1542  000E60  0EFF               	movlw	255
  1543  000E62  6E2A               	movwf	(calcSteering@delta+1)^0,c
  1544  000E64  0EE7               	movlw	231
  1545  000E66  6E29               	movwf	calcSteering@delta^0,c
  1546  000E68  EFBF  F007         	goto	l5321
  1547  000E6C                     l5295:
  1548                           
  1549                           ; BSR set to: 0
  1550  000E6C  504C               	movf	_driveMode^0,w,c
  1551  000E6E  6E25               	movwf	??_calcSteering^0,c
  1552  000E70  6A26               	clrf	(??_calcSteering+1)^0,c
  1553                           
  1554                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1555                           ; Switch size 1, requested type "simple"
  1556                           ; Number of cases is 1, Range of values is 0 to 0
  1557                           ; switch strategies available:
  1558                           ; Name         Instructions Cycles
  1559                           ; simple_byte            4     3 (average)
  1560                           ;	Chosen strategy is simple_byte
  1561  000E72  5026               	movf	(??_calcSteering+1)^0,w,c
  1562  000E74  0A00               	xorlw	0	; case 0
  1563  000E76  B4D8               	btfsc	status,2,c
  1564  000E78  EF40  F007         	goto	l6053
  1565  000E7C  EFBF  F007         	goto	l5321
  1566  000E80                     l6053:
  1567                           
  1568                           ; BSR set to: 0
  1569                           ; Switch size 1, requested type "simple"
  1570                           ; Number of cases is 5, Range of values is 0 to 6
  1571                           ; switch strategies available:
  1572                           ; Name         Instructions Cycles
  1573                           ; simple_byte           16     9 (average)
  1574                           ;	Chosen strategy is simple_byte
  1575  000E80  5025               	movf	??_calcSteering^0,w,c
  1576  000E82  0A00               	xorlw	0	; case 0
  1577  000E84  B4D8               	btfsc	status,2,c
  1578  000E86  EF0E  F007         	goto	l1312
  1579  000E8A  0A01               	xorlw	1	; case 1
  1580  000E8C  B4D8               	btfsc	status,2,c
  1581  000E8E  EF0E  F007         	goto	l5285
  1582  000E92  0A03               	xorlw	3	; case 2
  1583  000E94  B4D8               	btfsc	status,2,c
  1584  000E96  EF0E  F007         	goto	l5285
  1585  000E9A  0A07               	xorlw	7	; case 5
  1586  000E9C  B4D8               	btfsc	status,2,c
  1587  000E9E  EF0E  F007         	goto	l5285
  1588  000EA2  0A03               	xorlw	3	; case 6
  1589  000EA4  B4D8               	btfsc	status,2,c
  1590  000EA6  EF0E  F007         	goto	l5285
  1591  000EAA  EFBF  F007         	goto	l5321
  1592  000EAE                     l1317:
  1593                           
  1594                           ; BSR set to: 0
  1595                           ;main.c: 247:     switch (driveMode) {
  1596  000EAE  EFBF  F007         	goto	l5321
  1597  000EB2                     l5297:
  1598                           
  1599                           ; BSR set to: 0
  1600                           ;main.c: 249:             setSteering(delta, Ratio);
  1601  000EB2  C029  F01C         	movff	calcSteering@delta,setSteering@steering
  1602  000EB6  C02A  F01D         	movff	calcSteering@delta+1,setSteering@steering+1
  1603  000EBA  0E02               	movlw	2
  1604  000EBC  6E1E               	movwf	setSteering@steeringMode^0,c
  1605  000EBE  ECC3  F008         	call	_setSteering	;wreg free
  1606                           
  1607                           ;main.c: 250:             break;
  1608  000EC2  EFE8  F007         	goto	l1332
  1609  000EC6                     l5299:
  1610                           
  1611                           ; BSR set to: 0
  1612                           ;main.c: 252:             setSteering(delta, Front);
  1613  000EC6  C029  F01C         	movff	calcSteering@delta,setSteering@steering
  1614  000ECA  C02A  F01D         	movff	calcSteering@delta+1,setSteering@steering+1
  1615  000ECE  0E03               	movlw	3
  1616  000ED0  6E1E               	movwf	setSteering@steeringMode^0,c
  1617  000ED2  ECC3  F008         	call	_setSteering	;wreg free
  1618                           
  1619                           ;main.c: 253:             break;
  1620  000ED6  EFE8  F007         	goto	l1332
  1621  000EDA                     l5301:
  1622                           
  1623                           ; BSR set to: 0
  1624                           ;main.c: 255:             setSteering(delta / (2), Front);
  1625  000EDA  C029  F014         	movff	calcSteering@delta,___awdiv@dividend
  1626  000EDE  C02A  F015         	movff	calcSteering@delta+1,___awdiv@dividend+1
  1627  000EE2  0E00               	movlw	0
  1628  000EE4  6E17               	movwf	(___awdiv@divisor+1)^0,c
  1629  000EE6  0E02               	movlw	2
  1630  000EE8  6E16               	movwf	___awdiv@divisor^0,c
  1631  000EEA  EC99  F00E         	call	___awdiv	;wreg free
  1632  000EEE  C014  F027         	movff	?___awdiv,_calcSteering$3897
  1633  000EF2  C015  F028         	movff	?___awdiv+1,_calcSteering$3897+1
  1634                           
  1635                           ;main.c: 255:             setSteering(delta / (2), Front);
  1636  000EF6  C027  F01C         	movff	_calcSteering$3897,setSteering@steering
  1637  000EFA  C028  F01D         	movff	_calcSteering$3897+1,setSteering@steering+1
  1638  000EFE  0E03               	movlw	3
  1639  000F00  6E1E               	movwf	setSteering@steeringMode^0,c
  1640  000F02  ECC3  F008         	call	_setSteering	;wreg free
  1641                           
  1642                           ;main.c: 257:             break;
  1643  000F06  EFE8  F007         	goto	l1332
  1644  000F0A                     l5303:
  1645                           
  1646                           ; BSR set to: 0
  1647                           ;main.c: 259:             setSteering(-(60), Inverted);
  1648  000F0A  0EFF               	movlw	255
  1649  000F0C  6E1D               	movwf	(setSteering@steering+1)^0,c
  1650  000F0E  0EC4               	movlw	196
  1651  000F10  6E1C               	movwf	setSteering@steering^0,c
  1652  000F12  0E00               	movlw	0
  1653  000F14  6E1E               	movwf	setSteering@steeringMode^0,c
  1654  000F16  ECC3  F008         	call	_setSteering	;wreg free
  1655                           
  1656                           ;main.c: 260:             break;
  1657  000F1A  EFE8  F007         	goto	l1332
  1658  000F1E                     l5305:
  1659                           
  1660                           ; BSR set to: 0
  1661                           ;main.c: 262:             setSteering((60), Inverted);
  1662  000F1E  0E00               	movlw	0
  1663  000F20  6E1D               	movwf	(setSteering@steering+1)^0,c
  1664  000F22  0E3C               	movlw	60
  1665  000F24  6E1C               	movwf	setSteering@steering^0,c
  1666  000F26  0E00               	movlw	0
  1667  000F28  6E1E               	movwf	setSteering@steeringMode^0,c
  1668  000F2A  ECC3  F008         	call	_setSteering	;wreg free
  1669                           
  1670                           ;main.c: 263:             break;
  1671  000F2E  EFE8  F007         	goto	l1332
  1672  000F32                     l5307:
  1673                           
  1674                           ; BSR set to: 0
  1675                           ;main.c: 265:             if (curveMode == InCurve) {
  1676  000F32  0E02               	movlw	2
  1677  000F34  183F               	xorwf	_curveMode^0,w,c
  1678  000F36  A4D8               	btfss	status,2,c
  1679  000F38  EFA0  F007         	goto	u3821
  1680  000F3C  EFA2  F007         	goto	u3820
  1681  000F40                     u3821:
  1682  000F40  EF59  F007         	goto	l5297
  1683  000F44                     u3820:
  1684  000F44                     
  1685                           ; BSR set to: 0
  1686                           ;main.c: 266:                 setSteering((60), Ratio);
  1687  000F44  0E00               	movlw	0
  1688  000F46  6E1D               	movwf	(setSteering@steering+1)^0,c
  1689  000F48  0E3C               	movlw	60
  1690  000F4A  6E1C               	movwf	setSteering@steering^0,c
  1691  000F4C  0E02               	movlw	2
  1692  000F4E  6E1E               	movwf	setSteering@steeringMode^0,c
  1693  000F50  ECC3  F008         	call	_setSteering	;wreg free
  1694                           
  1695                           ;main.c: 267:             } else {
  1696  000F54  EFE8  F007         	goto	l1332
  1697  000F58                     l5313:
  1698                           
  1699                           ; BSR set to: 0
  1700                           ;main.c: 272:             if (curveMode == InCurve) {
  1701  000F58  0E02               	movlw	2
  1702  000F5A  183F               	xorwf	_curveMode^0,w,c
  1703  000F5C  A4D8               	btfss	status,2,c
  1704  000F5E  EFB3  F007         	goto	u3831
  1705  000F62  EFB5  F007         	goto	u3830
  1706  000F66                     u3831:
  1707  000F66  EF59  F007         	goto	l5297
  1708  000F6A                     u3830:
  1709  000F6A                     
  1710                           ; BSR set to: 0
  1711                           ;main.c: 273:                 setSteering(-(60), Ratio);
  1712  000F6A  0EFF               	movlw	255
  1713  000F6C  6E1D               	movwf	(setSteering@steering+1)^0,c
  1714  000F6E  0EC4               	movlw	196
  1715  000F70  6E1C               	movwf	setSteering@steering^0,c
  1716  000F72  0E02               	movlw	2
  1717  000F74  6E1E               	movwf	setSteering@steeringMode^0,c
  1718  000F76  ECC3  F008         	call	_setSteering	;wreg free
  1719                           
  1720                           ;main.c: 274:             } else {
  1721  000F7A  EFE8  F007         	goto	l1332
  1722  000F7E                     l5321:
  1723                           
  1724                           ; BSR set to: 0
  1725  000F7E  504C               	movf	_driveMode^0,w,c
  1726  000F80  6E25               	movwf	??_calcSteering^0,c
  1727  000F82  6A26               	clrf	(??_calcSteering+1)^0,c
  1728                           
  1729                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1730                           ; Switch size 1, requested type "simple"
  1731                           ; Number of cases is 1, Range of values is 0 to 0
  1732                           ; switch strategies available:
  1733                           ; Name         Instructions Cycles
  1734                           ; simple_byte            4     3 (average)
  1735                           ;	Chosen strategy is simple_byte
  1736  000F84  5026               	movf	(??_calcSteering+1)^0,w,c
  1737  000F86  0A00               	xorlw	0	; case 0
  1738  000F88  B4D8               	btfsc	status,2,c
  1739  000F8A  EFC9  F007         	goto	l6055
  1740  000F8E  EFE8  F007         	goto	l1332
  1741  000F92                     l6055:
  1742                           
  1743                           ; BSR set to: 0
  1744                           ; Switch size 1, requested type "simple"
  1745                           ; Number of cases is 7, Range of values is 0 to 6
  1746                           ; switch strategies available:
  1747                           ; Name         Instructions Cycles
  1748                           ; simple_byte           22    12 (average)
  1749                           ;	Chosen strategy is simple_byte
  1750  000F92  5025               	movf	??_calcSteering^0,w,c
  1751  000F94  0A00               	xorlw	0	; case 0
  1752  000F96  B4D8               	btfsc	status,2,c
  1753  000F98  EF6D  F007         	goto	l5301
  1754  000F9C  0A01               	xorlw	1	; case 1
  1755  000F9E  B4D8               	btfsc	status,2,c
  1756  000FA0  EF63  F007         	goto	l5299
  1757  000FA4  0A03               	xorlw	3	; case 2
  1758  000FA6  B4D8               	btfsc	status,2,c
  1759  000FA8  EF59  F007         	goto	l5297
  1760  000FAC  0A01               	xorlw	1	; case 3
  1761  000FAE  B4D8               	btfsc	status,2,c
  1762  000FB0  EF85  F007         	goto	l5303
  1763  000FB4  0A07               	xorlw	7	; case 4
  1764  000FB6  B4D8               	btfsc	status,2,c
  1765  000FB8  EF8F  F007         	goto	l5305
  1766  000FBC  0A01               	xorlw	1	; case 5
  1767  000FBE  B4D8               	btfsc	status,2,c
  1768  000FC0  EF99  F007         	goto	l5307
  1769  000FC4  0A03               	xorlw	3	; case 6
  1770  000FC6  B4D8               	btfsc	status,2,c
  1771  000FC8  EFAC  F007         	goto	l5313
  1772  000FCC  EFE8  F007         	goto	l1332
  1773  000FD0                     l1332:
  1774  000FD0  0012               	return		;funcret
  1775  000FD2                     __end_of_calcSteering:
  1776                           	callstack 0
  1777                           
  1778 ;; *************** function _setSteering *****************
  1779 ;; Defined at:
  1780 ;;		line 390 in file "main.c"
  1781 ;; Parameters:    Size  Location     Type
  1782 ;;  steering        2   27[COMRAM] short 
  1783 ;;  steeringMode    1   29[COMRAM] enum E17304
  1784 ;; Auto vars:     Size  Location     Type
  1785 ;;  steeringB       2   34[COMRAM] short 
  1786 ;;  steeringF       2   32[COMRAM] short 
  1787 ;; Return value:  Size  Location     Type
  1788 ;;                  1    wreg      void 
  1789 ;; Registers used:
  1790 ;;		wreg, status,2, status,0, cstack
  1791 ;; Tracked objects:
  1792 ;;		On entry : 0/0
  1793 ;;		On exit  : 0/0
  1794 ;;		Unchanged: 0/0
  1795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1796 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1797 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1798 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1799 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1800 ;;Total ram usage:        9 bytes
  1801 ;; Hardware stack levels used: 1
  1802 ;; Hardware stack levels required when called: 9
  1803 ;; This function calls:
  1804 ;;		_PWM5_LoadDutyValue
  1805 ;;		_PWM6_LoadDutyValue
  1806 ;;		___awdiv
  1807 ;; This function is called by:
  1808 ;;		_loop
  1809 ;;		_startAccell
  1810 ;;		_calcSteering
  1811 ;;		_checkBatt
  1812 ;; This function uses a non-reentrant model
  1813 ;;
  1814                           
  1815                           	psect	text4
  1816  001186                     __ptext4:
  1817                           	callstack 0
  1818  001186                     _setSteering:
  1819                           	callstack 19
  1820  001186  0E00               	movlw	0
  1821  001188  6E24               	movwf	(setSteering@steeringB+1)^0,c
  1822  00118A  0E00               	movlw	0
  1823  00118C  6E23               	movwf	setSteering@steeringB^0,c
  1824                           
  1825                           ;main.c: 392:     switch (steeringMode) {
  1826  00118E  EF17  F009         	goto	l3861
  1827  001192                     l1376:
  1828                           
  1829                           ;main.c: 394:             steeringF = (+steering);
  1830  001192  C01C  F021         	movff	setSteering@steering,setSteering@steeringF
  1831  001196  C01D  F022         	movff	setSteering@steering+1,setSteering@steeringF+1
  1832                           
  1833                           ;main.c: 395:             steeringB = -steering;
  1834  00119A  C01C  F01F         	movff	setSteering@steering,??_setSteering
  1835  00119E  C01D  F020         	movff	setSteering@steering+1,??_setSteering+1
  1836  0011A2  1E1F               	comf	??_setSteering^0,f,c
  1837  0011A4  1E20               	comf	(??_setSteering+1)^0,f,c
  1838  0011A6  4A1F               	infsnz	??_setSteering^0,f,c
  1839  0011A8  2A20               	incf	(??_setSteering+1)^0,f,c
  1840  0011AA  C01F  F023         	movff	??_setSteering,setSteering@steeringB
  1841  0011AE  C020  F024         	movff	??_setSteering+1,setSteering@steeringB+1
  1842                           
  1843                           ;main.c: 396:             break;
  1844  0011B2  EF38  F009         	goto	l3863
  1845  0011B6                     l1378:
  1846                           
  1847                           ;main.c: 398:             steeringF = (+steering);
  1848  0011B6  C01C  F021         	movff	setSteering@steering,setSteering@steeringF
  1849  0011BA  C01D  F022         	movff	setSteering@steering+1,setSteering@steeringF+1
  1850                           
  1851                           ;main.c: 399:             steeringB = (+steering);
  1852  0011BE  C01C  F023         	movff	setSteering@steering,setSteering@steeringB
  1853  0011C2  C01D  F024         	movff	setSteering@steering+1,setSteering@steeringB+1
  1854                           
  1855                           ;main.c: 400:             break;
  1856  0011C6  EF38  F009         	goto	l3863
  1857  0011CA                     l1379:
  1858                           
  1859                           ;main.c: 402:             steeringF = (+steering);
  1860  0011CA  C01C  F021         	movff	setSteering@steering,setSteering@steeringF
  1861  0011CE  C01D  F022         	movff	setSteering@steering+1,setSteering@steeringF+1
  1862  0011D2                     
  1863                           ;main.c: 403:             steeringB = (-steering / (2));
  1864  0011D2  C01C  F014         	movff	setSteering@steering,___awdiv@dividend
  1865  0011D6  C01D  F015         	movff	setSteering@steering+1,___awdiv@dividend+1
  1866  0011DA  0EFF               	movlw	255
  1867  0011DC  6E17               	movwf	(___awdiv@divisor+1)^0,c
  1868  0011DE  0EFE               	movlw	254
  1869  0011E0  6E16               	movwf	___awdiv@divisor^0,c
  1870  0011E2  EC99  F00E         	call	___awdiv	;wreg free
  1871  0011E6  C014  F023         	movff	?___awdiv,setSteering@steeringB
  1872  0011EA  C015  F024         	movff	?___awdiv+1,setSteering@steeringB+1
  1873                           
  1874                           ;main.c: 404:             break;
  1875  0011EE  EF38  F009         	goto	l3863
  1876  0011F2                     l1380:
  1877                           
  1878                           ;main.c: 406:             steeringF = (+steering);
  1879  0011F2  C01C  F021         	movff	setSteering@steering,setSteering@steeringF
  1880  0011F6  C01D  F022         	movff	setSteering@steering+1,setSteering@steeringF+1
  1881  0011FA                     
  1882                           ;main.c: 407:             steeringB = 0;
  1883  0011FA  0E00               	movlw	0
  1884  0011FC  6E24               	movwf	(setSteering@steeringB+1)^0,c
  1885  0011FE  0E00               	movlw	0
  1886  001200  6E23               	movwf	setSteering@steeringB^0,c
  1887                           
  1888                           ;main.c: 408:             break;
  1889  001202  EF38  F009         	goto	l3863
  1890  001206                     l3853:
  1891                           
  1892                           ;main.c: 410:             steeringF = 0;
  1893  001206  0E00               	movlw	0
  1894  001208  6E22               	movwf	(setSteering@steeringF+1)^0,c
  1895  00120A  0E00               	movlw	0
  1896  00120C  6E21               	movwf	setSteering@steeringF^0,c
  1897  00120E                     
  1898                           ;main.c: 411:             steeringB = (+steering);
  1899  00120E  C01C  F023         	movff	setSteering@steering,setSteering@steeringB
  1900  001212  C01D  F024         	movff	setSteering@steering+1,setSteering@steeringB+1
  1901                           
  1902                           ;main.c: 412:             break;
  1903  001216  EF38  F009         	goto	l3863
  1904  00121A                     l3857:
  1905                           
  1906                           ;main.c: 414:             steeringF = 0;
  1907  00121A  0E00               	movlw	0
  1908  00121C  6E22               	movwf	(setSteering@steeringF+1)^0,c
  1909  00121E  0E00               	movlw	0
  1910  001220  6E21               	movwf	setSteering@steeringF^0,c
  1911                           
  1912                           ;main.c: 415:             steeringB = 0;
  1913  001222  0E00               	movlw	0
  1914  001224  6E24               	movwf	(setSteering@steeringB+1)^0,c
  1915  001226  0E00               	movlw	0
  1916  001228  6E23               	movwf	setSteering@steeringB^0,c
  1917                           
  1918                           ;main.c: 416:             break;
  1919  00122A  EF38  F009         	goto	l3863
  1920  00122E                     l3861:
  1921  00122E  501E               	movf	setSteering@steeringMode^0,w,c
  1922  001230  6E1F               	movwf	??_setSteering^0,c
  1923  001232  6A20               	clrf	(??_setSteering+1)^0,c
  1924                           
  1925                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1926                           ; Switch size 1, requested type "simple"
  1927                           ; Number of cases is 1, Range of values is 0 to 0
  1928                           ; switch strategies available:
  1929                           ; Name         Instructions Cycles
  1930                           ; simple_byte            4     3 (average)
  1931                           ;	Chosen strategy is simple_byte
  1932  001234  5020               	movf	(??_setSteering+1)^0,w,c
  1933  001236  0A00               	xorlw	0	; case 0
  1934  001238  B4D8               	btfsc	status,2,c
  1935  00123A  EF21  F009         	goto	l6057
  1936  00123E  EF0D  F009         	goto	l3857
  1937  001242                     l6057:
  1938                           
  1939                           ; Switch size 1, requested type "simple"
  1940                           ; Number of cases is 5, Range of values is 0 to 4
  1941                           ; switch strategies available:
  1942                           ; Name         Instructions Cycles
  1943                           ; simple_byte           16     9 (average)
  1944                           ;	Chosen strategy is simple_byte
  1945  001242  501F               	movf	??_setSteering^0,w,c
  1946  001244  0A00               	xorlw	0	; case 0
  1947  001246  B4D8               	btfsc	status,2,c
  1948  001248  EFC9  F008         	goto	l1376
  1949  00124C  0A01               	xorlw	1	; case 1
  1950  00124E  B4D8               	btfsc	status,2,c
  1951  001250  EFDB  F008         	goto	l1378
  1952  001254  0A03               	xorlw	3	; case 2
  1953  001256  B4D8               	btfsc	status,2,c
  1954  001258  EFE5  F008         	goto	l1379
  1955  00125C  0A01               	xorlw	1	; case 3
  1956  00125E  B4D8               	btfsc	status,2,c
  1957  001260  EFF9  F008         	goto	l1380
  1958  001264  0A07               	xorlw	7	; case 4
  1959  001266  B4D8               	btfsc	status,2,c
  1960  001268  EF03  F009         	goto	l3853
  1961  00126C  EF0D  F009         	goto	l3857
  1962  001270                     l3863:
  1963                           
  1964                           ;main.c: 419:     if (steeringF > ((65))) {
  1965  001270  BE22               	btfsc	(setSteering@steeringF+1)^0,7,c
  1966  001272  EF44  F009         	goto	u2021
  1967  001276  5022               	movf	(setSteering@steeringF+1)^0,w,c
  1968  001278  E109               	bnz	u2020
  1969  00127A  0E42               	movlw	66
  1970  00127C  5C21               	subwf	setSteering@steeringF^0,w,c
  1971  00127E  A0D8               	btfss	status,0,c
  1972  001280  EF44  F009         	goto	u2021
  1973  001284  EF46  F009         	goto	u2020
  1974  001288                     u2021:
  1975  001288  EF4C  F009         	goto	l3867
  1976  00128C                     u2020:
  1977  00128C                     
  1978                           ;main.c: 420:         steeringF = ((65));
  1979  00128C  0E00               	movlw	0
  1980  00128E  6E22               	movwf	(setSteering@steeringF+1)^0,c
  1981  001290  0E41               	movlw	65
  1982  001292  6E21               	movwf	setSteering@steeringF^0,c
  1983                           
  1984                           ;main.c: 421:     } else if (steeringF < (-(65))) {
  1985  001294  EF5E  F009         	goto	l3871
  1986  001298                     l3867:
  1987  001298  AE22               	btfss	(setSteering@steeringF+1)^0,7,c
  1988  00129A  EF58  F009         	goto	u2031
  1989  00129E  0EBF               	movlw	191
  1990  0012A0  5C21               	subwf	setSteering@steeringF^0,w,c
  1991  0012A2  0EFF               	movlw	255
  1992  0012A4  5822               	subwfb	(setSteering@steeringF+1)^0,w,c
  1993  0012A6  B0D8               	btfsc	status,0,c
  1994  0012A8  EF58  F009         	goto	u2031
  1995  0012AC  EF5A  F009         	goto	u2030
  1996  0012B0                     u2031:
  1997  0012B0  EF5E  F009         	goto	l3871
  1998  0012B4                     u2030:
  1999  0012B4                     
  2000                           ;main.c: 422:         steeringF = (-(65));
  2001  0012B4  0EFF               	movlw	255
  2002  0012B6  6E22               	movwf	(setSteering@steeringF+1)^0,c
  2003  0012B8  0EBF               	movlw	191
  2004  0012BA  6E21               	movwf	setSteering@steeringF^0,c
  2005  0012BC                     l3871:
  2006                           
  2007                           ;main.c: 425:     if (steeringB > ((40))) {
  2008  0012BC  BE24               	btfsc	(setSteering@steeringB+1)^0,7,c
  2009  0012BE  EF6A  F009         	goto	u2041
  2010  0012C2  5024               	movf	(setSteering@steeringB+1)^0,w,c
  2011  0012C4  E109               	bnz	u2040
  2012  0012C6  0E29               	movlw	41
  2013  0012C8  5C23               	subwf	setSteering@steeringB^0,w,c
  2014  0012CA  A0D8               	btfss	status,0,c
  2015  0012CC  EF6A  F009         	goto	u2041
  2016  0012D0  EF6C  F009         	goto	u2040
  2017  0012D4                     u2041:
  2018  0012D4  EF72  F009         	goto	l3875
  2019  0012D8                     u2040:
  2020  0012D8                     
  2021                           ;main.c: 426:         steeringB = ((40));
  2022  0012D8  0E00               	movlw	0
  2023  0012DA  6E24               	movwf	(setSteering@steeringB+1)^0,c
  2024  0012DC  0E28               	movlw	40
  2025  0012DE  6E23               	movwf	setSteering@steeringB^0,c
  2026                           
  2027                           ;main.c: 427:     } else if (steeringB < (-(40))) {
  2028  0012E0  EF84  F009         	goto	l3879
  2029  0012E4                     l3875:
  2030  0012E4  AE24               	btfss	(setSteering@steeringB+1)^0,7,c
  2031  0012E6  EF7E  F009         	goto	u2051
  2032  0012EA  0ED8               	movlw	216
  2033  0012EC  5C23               	subwf	setSteering@steeringB^0,w,c
  2034  0012EE  0EFF               	movlw	255
  2035  0012F0  5824               	subwfb	(setSteering@steeringB+1)^0,w,c
  2036  0012F2  B0D8               	btfsc	status,0,c
  2037  0012F4  EF7E  F009         	goto	u2051
  2038  0012F8  EF80  F009         	goto	u2050
  2039  0012FC                     u2051:
  2040  0012FC  EF84  F009         	goto	l3879
  2041  001300                     u2050:
  2042  001300                     
  2043                           ;main.c: 428:         steeringB = (-(40));
  2044  001300  0EFF               	movlw	255
  2045  001302  6E24               	movwf	(setSteering@steeringB+1)^0,c
  2046  001304  0ED8               	movlw	216
  2047  001306  6E23               	movwf	setSteering@steeringB^0,c
  2048  001308                     l3879:
  2049                           
  2050                           ;main.c: 432:     PWM6_LoadDutyValue((uint16_t) ((352) + steeringF));
  2051  001308  0E60               	movlw	96
  2052  00130A  2421               	addwf	setSteering@steeringF^0,w,c
  2053  00130C  6E14               	movwf	PWM6_LoadDutyValue@dutyValue^0,c
  2054  00130E  0E01               	movlw	1
  2055  001310  2022               	addwfc	(setSteering@steeringF+1)^0,w,c
  2056  001312  6E15               	movwf	(PWM6_LoadDutyValue@dutyValue+1)^0,c
  2057  001314  EC85  F011         	call	_PWM6_LoadDutyValue	;wreg free
  2058  001318                     
  2059                           ;main.c: 433:     PWM5_LoadDutyValue((uint16_t) ((357) + steeringB));
  2060  001318  0E65               	movlw	101
  2061  00131A  2423               	addwf	setSteering@steeringB^0,w,c
  2062  00131C  6E14               	movwf	PWM5_LoadDutyValue@dutyValue^0,c
  2063  00131E  0E01               	movlw	1
  2064  001320  2024               	addwfc	(setSteering@steeringB+1)^0,w,c
  2065  001322  6E15               	movwf	(PWM5_LoadDutyValue@dutyValue+1)^0,c
  2066  001324  EC9F  F011         	call	_PWM5_LoadDutyValue	;wreg free
  2067  001328  0012               	return		;funcret
  2068  00132A                     __end_of_setSteering:
  2069                           	callstack 0
  2070                           
  2071 ;; *************** function _PWM6_LoadDutyValue *****************
  2072 ;; Defined at:
  2073 ;;		line 74 in file "mcc_generated_files/pwm6.c"
  2074 ;; Parameters:    Size  Location     Type
  2075 ;;  dutyValue       2   19[COMRAM] unsigned short 
  2076 ;; Auto vars:     Size  Location     Type
  2077 ;;		None
  2078 ;; Return value:  Size  Location     Type
  2079 ;;                  1    wreg      void 
  2080 ;; Registers used:
  2081 ;;		wreg, status,2, status,0
  2082 ;; Tracked objects:
  2083 ;;		On entry : 0/0
  2084 ;;		On exit  : 0/0
  2085 ;;		Unchanged: 0/0
  2086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2087 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2089 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2090 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2091 ;;Total ram usage:        4 bytes
  2092 ;; Hardware stack levels used: 1
  2093 ;; Hardware stack levels required when called: 8
  2094 ;; This function calls:
  2095 ;;		Nothing
  2096 ;; This function is called by:
  2097 ;;		_setSteering
  2098 ;; This function uses a non-reentrant model
  2099 ;;
  2100                           
  2101                           	psect	text5
  2102  00230A                     __ptext5:
  2103                           	callstack 0
  2104  00230A                     _PWM6_LoadDutyValue:
  2105                           	callstack 19
  2106  00230A                     
  2107                           ;mcc_generated_files/pwm6.c: 74:  void PWM6_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm6.c: 75:  {;mcc_generated_files/pwm6.c: 77:      PWM6DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  2108  00230A  C014  F016         	movff	PWM6_LoadDutyValue@dutyValue,??_PWM6_LoadDutyValue
  2109  00230E  C015  F017         	movff	PWM6_LoadDutyValue@dutyValue+1,??_PWM6_LoadDutyValue+1
  2110  002312  90D8               	bcf	status,0,c
  2111  002314  3217               	rrcf	(??_PWM6_LoadDutyValue+1)^0,f,c
  2112  002316  3216               	rrcf	??_PWM6_LoadDutyValue^0,f,c
  2113  002318  90D8               	bcf	status,0,c
  2114  00231A  3217               	rrcf	(??_PWM6_LoadDutyValue+1)^0,f,c
  2115  00231C  3216               	rrcf	??_PWM6_LoadDutyValue^0,f,c
  2116  00231E  5016               	movf	??_PWM6_LoadDutyValue^0,w,c
  2117  002320  6E69               	movwf	105,c	;volatile
  2118                           
  2119                           ;mcc_generated_files/pwm6.c: 80:      PWM6DCL = (dutyValue & 0x0003)<<6;
  2120  002322  C014  F016         	movff	PWM6_LoadDutyValue@dutyValue,??_PWM6_LoadDutyValue
  2121  002326  0E03               	movlw	3
  2122  002328  1616               	andwf	??_PWM6_LoadDutyValue^0,f,c
  2123  00232A  0E06               	movlw	6
  2124  00232C  6E17               	movwf	(??_PWM6_LoadDutyValue+1)^0,c
  2125  00232E                     u1935:
  2126  00232E  90D8               	bcf	status,0,c
  2127  002330  3616               	rlcf	??_PWM6_LoadDutyValue^0,f,c
  2128  002332  2E17               	decfsz	(??_PWM6_LoadDutyValue+1)^0,f,c
  2129  002334  EF97  F011         	goto	u1935
  2130  002338  5016               	movf	??_PWM6_LoadDutyValue^0,w,c
  2131  00233A  6E68               	movwf	104,c	;volatile
  2132  00233C  0012               	return		;funcret
  2133  00233E                     __end_of_PWM6_LoadDutyValue:
  2134                           	callstack 0
  2135                           
  2136 ;; *************** function _PWM5_LoadDutyValue *****************
  2137 ;; Defined at:
  2138 ;;		line 74 in file "mcc_generated_files/pwm5.c"
  2139 ;; Parameters:    Size  Location     Type
  2140 ;;  dutyValue       2   19[COMRAM] unsigned short 
  2141 ;; Auto vars:     Size  Location     Type
  2142 ;;		None
  2143 ;; Return value:  Size  Location     Type
  2144 ;;                  1    wreg      void 
  2145 ;; Registers used:
  2146 ;;		wreg, status,2, status,0
  2147 ;; Tracked objects:
  2148 ;;		On entry : 0/0
  2149 ;;		On exit  : 0/0
  2150 ;;		Unchanged: 0/0
  2151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2152 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2154 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2155 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2156 ;;Total ram usage:        4 bytes
  2157 ;; Hardware stack levels used: 1
  2158 ;; Hardware stack levels required when called: 8
  2159 ;; This function calls:
  2160 ;;		Nothing
  2161 ;; This function is called by:
  2162 ;;		_setSteering
  2163 ;; This function uses a non-reentrant model
  2164 ;;
  2165                           
  2166                           	psect	text6
  2167  00233E                     __ptext6:
  2168                           	callstack 0
  2169  00233E                     _PWM5_LoadDutyValue:
  2170                           	callstack 19
  2171  00233E                     
  2172                           ;mcc_generated_files/pwm5.c: 74:  void PWM5_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm5.c: 75:  {;mcc_generated_files/pwm5.c: 77:      PWM5DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  2173  00233E  C014  F016         	movff	PWM5_LoadDutyValue@dutyValue,??_PWM5_LoadDutyValue
  2174  002342  C015  F017         	movff	PWM5_LoadDutyValue@dutyValue+1,??_PWM5_LoadDutyValue+1
  2175  002346  90D8               	bcf	status,0,c
  2176  002348  3217               	rrcf	(??_PWM5_LoadDutyValue+1)^0,f,c
  2177  00234A  3216               	rrcf	??_PWM5_LoadDutyValue^0,f,c
  2178  00234C  90D8               	bcf	status,0,c
  2179  00234E  3217               	rrcf	(??_PWM5_LoadDutyValue+1)^0,f,c
  2180  002350  3216               	rrcf	??_PWM5_LoadDutyValue^0,f,c
  2181  002352  5016               	movf	??_PWM5_LoadDutyValue^0,w,c
  2182  002354  6E6D               	movwf	109,c	;volatile
  2183                           
  2184                           ;mcc_generated_files/pwm5.c: 80:      PWM5DCL = (dutyValue & 0x0003)<<6;
  2185  002356  C014  F016         	movff	PWM5_LoadDutyValue@dutyValue,??_PWM5_LoadDutyValue
  2186  00235A  0E03               	movlw	3
  2187  00235C  1616               	andwf	??_PWM5_LoadDutyValue^0,f,c
  2188  00235E  0E06               	movlw	6
  2189  002360  6E17               	movwf	(??_PWM5_LoadDutyValue+1)^0,c
  2190  002362                     u1925:
  2191  002362  90D8               	bcf	status,0,c
  2192  002364  3616               	rlcf	??_PWM5_LoadDutyValue^0,f,c
  2193  002366  2E17               	decfsz	(??_PWM5_LoadDutyValue+1)^0,f,c
  2194  002368  EFB1  F011         	goto	u1925
  2195  00236C  5016               	movf	??_PWM5_LoadDutyValue^0,w,c
  2196  00236E  6E6C               	movwf	108,c	;volatile
  2197  002370  0012               	return		;funcret
  2198  002372                     __end_of_PWM5_LoadDutyValue:
  2199                           	callstack 0
  2200                           
  2201 ;; *************** function ___flge *****************
  2202 ;; Defined at:
  2203 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  2204 ;; Parameters:    Size  Location     Type
  2205 ;;  ff1             4   41[COMRAM] void 
  2206 ;;  ff2             4   45[COMRAM] void 
  2207 ;; Auto vars:     Size  Location     Type
  2208 ;;		None
  2209 ;; Return value:  Size  Location     Type
  2210 ;;		None               void
  2211 ;; Registers used:
  2212 ;;		wreg, status,2, status,0
  2213 ;; Tracked objects:
  2214 ;;		On entry : 0/0
  2215 ;;		On exit  : 0/0
  2216 ;;		Unchanged: 0/0
  2217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2218 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2220 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2221 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2222 ;;Total ram usage:       12 bytes
  2223 ;; Hardware stack levels used: 1
  2224 ;; Hardware stack levels required when called: 8
  2225 ;; This function calls:
  2226 ;;		Nothing
  2227 ;; This function is called by:
  2228 ;;		_loop
  2229 ;;		_startAccell
  2230 ;;		_checkBatt
  2231 ;; This function uses a non-reentrant model
  2232 ;;
  2233                           
  2234                           	psect	text7
  2235  0018C0                     __ptext7:
  2236                           	callstack 0
  2237  0018C0                     ___flge:
  2238                           	callstack 20
  2239  0018C0  0E00               	movlw	0
  2240  0018C2  142A               	andwf	___flge@ff1^0,w,c
  2241  0018C4  6E32               	movwf	??___flge^0,c
  2242  0018C6  0E00               	movlw	0
  2243  0018C8  142B               	andwf	(___flge@ff1+1)^0,w,c
  2244  0018CA  6E33               	movwf	(??___flge+1)^0,c
  2245  0018CC  0E80               	movlw	128
  2246  0018CE  142C               	andwf	(___flge@ff1+2)^0,w,c
  2247  0018D0  6E34               	movwf	(??___flge+2)^0,c
  2248  0018D2  0E7F               	movlw	127
  2249  0018D4  142D               	andwf	(___flge@ff1+3)^0,w,c
  2250  0018D6  6E35               	movwf	(??___flge+3)^0,c
  2251  0018D8  5032               	movf	??___flge^0,w,c
  2252  0018DA  1033               	iorwf	(??___flge+1)^0,w,c
  2253  0018DC  1034               	iorwf	(??___flge+2)^0,w,c
  2254  0018DE  1035               	iorwf	(??___flge+3)^0,w,c
  2255  0018E0  A4D8               	btfss	status,2,c
  2256  0018E2  EF75  F00C         	goto	u2831
  2257  0018E6  EF77  F00C         	goto	u2830
  2258  0018EA                     u2831:
  2259  0018EA  EF7F  F00C         	goto	l4413
  2260  0018EE                     u2830:
  2261  0018EE  0E00               	movlw	0
  2262  0018F0  6E2A               	movwf	___flge@ff1^0,c
  2263  0018F2  0E00               	movlw	0
  2264  0018F4  6E2B               	movwf	(___flge@ff1+1)^0,c
  2265  0018F6  0E00               	movlw	0
  2266  0018F8  6E2C               	movwf	(___flge@ff1+2)^0,c
  2267  0018FA  0E00               	movlw	0
  2268  0018FC  6E2D               	movwf	(___flge@ff1+3)^0,c
  2269  0018FE                     l4413:
  2270  0018FE  0E00               	movlw	0
  2271  001900  142E               	andwf	___flge@ff2^0,w,c
  2272  001902  6E32               	movwf	??___flge^0,c
  2273  001904  0E00               	movlw	0
  2274  001906  142F               	andwf	(___flge@ff2+1)^0,w,c
  2275  001908  6E33               	movwf	(??___flge+1)^0,c
  2276  00190A  0E80               	movlw	128
  2277  00190C  1430               	andwf	(___flge@ff2+2)^0,w,c
  2278  00190E  6E34               	movwf	(??___flge+2)^0,c
  2279  001910  0E7F               	movlw	127
  2280  001912  1431               	andwf	(___flge@ff2+3)^0,w,c
  2281  001914  6E35               	movwf	(??___flge+3)^0,c
  2282  001916  5032               	movf	??___flge^0,w,c
  2283  001918  1033               	iorwf	(??___flge+1)^0,w,c
  2284  00191A  1034               	iorwf	(??___flge+2)^0,w,c
  2285  00191C  1035               	iorwf	(??___flge+3)^0,w,c
  2286  00191E  A4D8               	btfss	status,2,c
  2287  001920  EF94  F00C         	goto	u2841
  2288  001924  EF96  F00C         	goto	u2840
  2289  001928                     u2841:
  2290  001928  EF9E  F00C         	goto	l4417
  2291  00192C                     u2840:
  2292  00192C  0E00               	movlw	0
  2293  00192E  6E2E               	movwf	___flge@ff2^0,c
  2294  001930  0E00               	movlw	0
  2295  001932  6E2F               	movwf	(___flge@ff2+1)^0,c
  2296  001934  0E00               	movlw	0
  2297  001936  6E30               	movwf	(___flge@ff2+2)^0,c
  2298  001938  0E00               	movlw	0
  2299  00193A  6E31               	movwf	(___flge@ff2+3)^0,c
  2300  00193C                     l4417:
  2301  00193C  AE2D               	btfss	(___flge@ff1+3)^0,7,c
  2302  00193E  EFA3  F00C         	goto	u2851
  2303  001942  EFA5  F00C         	goto	u2850
  2304  001946                     u2851:
  2305  001946  EFAE  F00C         	goto	l4421
  2306  00194A                     u2850:
  2307  00194A  6C2A               	negf	___flge@ff1^0,c
  2308  00194C  1E2B               	comf	(___flge@ff1+1)^0,f,c
  2309  00194E  B0D8               	btfsc	status,0,c
  2310  001950  2A2B               	incf	(___flge@ff1+1)^0,f,c
  2311  001952  1E2C               	comf	(___flge@ff1+2)^0,f,c
  2312  001954  B0D8               	btfsc	status,0,c
  2313  001956  2A2C               	incf	(___flge@ff1+2)^0,f,c
  2314  001958  0E80               	movlw	128
  2315  00195A  562D               	subfwb	(___flge@ff1+3)^0,f,c
  2316  00195C                     l4421:
  2317  00195C  AE31               	btfss	(___flge@ff2+3)^0,7,c
  2318  00195E  EFB3  F00C         	goto	u2861
  2319  001962  EFB5  F00C         	goto	u2860
  2320  001966                     u2861:
  2321  001966  EFBE  F00C         	goto	l1657
  2322  00196A                     u2860:
  2323  00196A  6C2E               	negf	___flge@ff2^0,c
  2324  00196C  1E2F               	comf	(___flge@ff2+1)^0,f,c
  2325  00196E  B0D8               	btfsc	status,0,c
  2326  001970  2A2F               	incf	(___flge@ff2+1)^0,f,c
  2327  001972  1E30               	comf	(___flge@ff2+2)^0,f,c
  2328  001974  B0D8               	btfsc	status,0,c
  2329  001976  2A30               	incf	(___flge@ff2+2)^0,f,c
  2330  001978  0E80               	movlw	128
  2331  00197A  5631               	subfwb	(___flge@ff2+3)^0,f,c
  2332  00197C                     l1657:
  2333  00197C  0E00               	movlw	0
  2334  00197E  1A2A               	xorwf	___flge@ff1^0,f,c
  2335  001980  0E00               	movlw	0
  2336  001982  1A2B               	xorwf	(___flge@ff1+1)^0,f,c
  2337  001984  0E00               	movlw	0
  2338  001986  1A2C               	xorwf	(___flge@ff1+2)^0,f,c
  2339  001988  0E80               	movlw	128
  2340  00198A  1A2D               	xorwf	(___flge@ff1+3)^0,f,c
  2341  00198C  0E00               	movlw	0
  2342  00198E  1A2E               	xorwf	___flge@ff2^0,f,c
  2343  001990  0E00               	movlw	0
  2344  001992  1A2F               	xorwf	(___flge@ff2+1)^0,f,c
  2345  001994  0E00               	movlw	0
  2346  001996  1A30               	xorwf	(___flge@ff2+2)^0,f,c
  2347  001998  0E80               	movlw	128
  2348  00199A  1A31               	xorwf	(___flge@ff2+3)^0,f,c
  2349  00199C  502E               	movf	___flge@ff2^0,w,c
  2350  00199E  5C2A               	subwf	___flge@ff1^0,w,c
  2351  0019A0  502F               	movf	(___flge@ff2+1)^0,w,c
  2352  0019A2  582B               	subwfb	(___flge@ff1+1)^0,w,c
  2353  0019A4  5030               	movf	(___flge@ff2+2)^0,w,c
  2354  0019A6  582C               	subwfb	(___flge@ff1+2)^0,w,c
  2355  0019A8  5031               	movf	(___flge@ff2+3)^0,w,c
  2356  0019AA  582D               	subwfb	(___flge@ff1+3)^0,w,c
  2357  0019AC  B0D8               	btfsc	status,0,c
  2358  0019AE  EFDB  F00C         	goto	u2871
  2359  0019B2  EFDD  F00C         	goto	u2870
  2360  0019B6                     u2871:
  2361  0019B6  EFE0  F00C         	goto	l4427
  2362  0019BA                     u2870:
  2363  0019BA  90D8               	bcf	status,0,c
  2364  0019BC  EFE1  F00C         	goto	l1662
  2365  0019C0                     l4427:
  2366  0019C0  80D8               	bsf	status,0,c
  2367  0019C2                     l1662:
  2368  0019C2  0012               	return		;funcret
  2369  0019C4                     __end_of___flge:
  2370                           	callstack 0
  2371                           
  2372 ;; *************** function _getReverse *****************
  2373 ;; Defined at:
  2374 ;;		line 192 in file "main.c"
  2375 ;; Parameters:    Size  Location     Type
  2376 ;;		None
  2377 ;; Auto vars:     Size  Location     Type
  2378 ;;		None
  2379 ;; Return value:  Size  Location     Type
  2380 ;;                  1    wreg      void 
  2381 ;; Registers used:
  2382 ;;		wreg, status,2, status,0
  2383 ;; Tracked objects:
  2384 ;;		On entry : 0/0
  2385 ;;		On exit  : 0/0
  2386 ;;		Unchanged: 0/0
  2387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2391 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2392 ;;Total ram usage:        0 bytes
  2393 ;; Hardware stack levels used: 1
  2394 ;; Hardware stack levels required when called: 8
  2395 ;; This function calls:
  2396 ;;		Nothing
  2397 ;; This function is called by:
  2398 ;;		_loop
  2399 ;; This function uses a non-reentrant model
  2400 ;;
  2401                           
  2402                           	psect	text8
  2403  0019C4                     __ptext8:
  2404                           	callstack 0
  2405  0019C4                     _getReverse:
  2406                           	callstack 21
  2407  0019C4                     
  2408                           ;main.c: 193:     if (distFront < (15)) {
  2409  0019C4  504B               	movf	(_distFront+1)^0,w,c	;volatile
  2410  0019C6  E107               	bnz	u3241
  2411  0019C8  0E0F               	movlw	15
  2412  0019CA  5C4A               	subwf	_distFront^0,w,c	;volatile
  2413  0019CC  B0D8               	btfsc	status,0,c
  2414  0019CE  EFEB  F00C         	goto	u3241
  2415  0019D2  EFED  F00C         	goto	u3240
  2416  0019D6                     u3241:
  2417  0019D6  EFF2  F00C         	goto	l4733
  2418  0019DA                     u3240:
  2419  0019DA                     
  2420                           ;main.c: 194:         ++reverseCount;
  2421  0019DA  0100               	movlb	0	; () banked
  2422  0019DC  4B92               	infsnz	_reverseCount& (0+255),f,b
  2423  0019DE  2B93               	incf	(_reverseCount+1)& (0+255),f,b
  2424                           
  2425                           ;main.c: 195:     } else if(driveMode != ReverseRight && driveMode != ReverseLeft) {
  2426  0019E0  EF09  F00D         	goto	l4739
  2427  0019E4                     l4733:
  2428  0019E4  0E03               	movlw	3
  2429  0019E6  184C               	xorwf	_driveMode^0,w,c
  2430  0019E8  B4D8               	btfsc	status,2,c
  2431  0019EA  EFF9  F00C         	goto	u3251
  2432  0019EE  EFFB  F00C         	goto	u3250
  2433  0019F2                     u3251:
  2434  0019F2  EF09  F00D         	goto	l4739
  2435  0019F6                     u3250:
  2436  0019F6  0E04               	movlw	4
  2437  0019F8  184C               	xorwf	_driveMode^0,w,c
  2438  0019FA  B4D8               	btfsc	status,2,c
  2439  0019FC  EF02  F00D         	goto	u3261
  2440  001A00  EF04  F00D         	goto	u3260
  2441  001A04                     u3261:
  2442  001A04  EF09  F00D         	goto	l4739
  2443  001A08                     u3260:
  2444  001A08                     
  2445                           ;main.c: 196:         reverseCount = 0;
  2446  001A08  0E00               	movlw	0
  2447  001A0A  0100               	movlb	0	; () banked
  2448  001A0C  6F93               	movwf	(_reverseCount+1)& (0+255),b
  2449  001A0E  0E00               	movlw	0
  2450  001A10  6F92               	movwf	_reverseCount& (0+255),b
  2451  001A12                     l4739:
  2452                           
  2453                           ;main.c: 199:     if (reverseCount > (50)) {
  2454  001A12  0100               	movlb	0	; () banked
  2455  001A14  5193               	movf	(_reverseCount+1)& (0+255),w,b
  2456  001A16  E109               	bnz	u3270
  2457  001A18  0E33               	movlw	51
  2458  001A1A  5D92               	subwf	_reverseCount& (0+255),w,b
  2459  001A1C  A0D8               	btfss	status,0,c
  2460  001A1E  EF13  F00D         	goto	u3271
  2461  001A22  EF15  F00D         	goto	u3270
  2462  001A26                     u3271:
  2463  001A26  EF5F  F00D         	goto	l1305
  2464  001A2A                     u3270:
  2465  001A2A                     
  2466                           ; BSR set to: 0
  2467                           ;main.c: 200:         ++reverseTime;
  2468  001A2A  4B82               	infsnz	_reverseTime& (0+255),f,b
  2469  001A2C  2B83               	incf	(_reverseTime+1)& (0+255),f,b
  2470  001A2E                     
  2471                           ; BSR set to: 0
  2472                           ;main.c: 202:         if (driveMode != ReverseRight && driveMode != ReverseLeft) {
  2473  001A2E  0E03               	movlw	3
  2474  001A30  184C               	xorwf	_driveMode^0,w,c
  2475  001A32  B4D8               	btfsc	status,2,c
  2476  001A34  EF1E  F00D         	goto	u3281
  2477  001A38  EF20  F00D         	goto	u3280
  2478  001A3C                     u3281:
  2479  001A3C  EF3A  F00D         	goto	l4753
  2480  001A40                     u3280:
  2481  001A40                     
  2482                           ; BSR set to: 0
  2483  001A40  0E04               	movlw	4
  2484  001A42  184C               	xorwf	_driveMode^0,w,c
  2485  001A44  B4D8               	btfsc	status,2,c
  2486  001A46  EF27  F00D         	goto	u3291
  2487  001A4A  EF29  F00D         	goto	u3290
  2488  001A4E                     u3291:
  2489  001A4E  EF3A  F00D         	goto	l4753
  2490  001A52                     u3290:
  2491  001A52                     
  2492                           ; BSR set to: 0
  2493                           ;main.c: 203:             if (distLeft > distRight) {
  2494  001A52  519A               	movf	_distLeft& (0+255),w,b	;volatile
  2495  001A54  5D96               	subwf	_distRight& (0+255),w,b	;volatile
  2496  001A56  519B               	movf	(_distLeft+1)& (0+255),w,b	;volatile
  2497  001A58  5997               	subwfb	(_distRight+1)& (0+255),w,b	;volatile
  2498  001A5A  B0D8               	btfsc	status,0,c
  2499  001A5C  EF32  F00D         	goto	u3301
  2500  001A60  EF34  F00D         	goto	u3300
  2501  001A64                     u3301:
  2502  001A64  EF38  F00D         	goto	l4751
  2503  001A68                     u3300:
  2504  001A68                     
  2505                           ; BSR set to: 0
  2506                           ;main.c: 205:                 driveMode = ReverseRight;
  2507  001A68  0E03               	movlw	3
  2508  001A6A  6E4C               	movwf	_driveMode^0,c
  2509                           
  2510                           ;main.c: 206:             } else {
  2511  001A6C  EF3A  F00D         	goto	l4753
  2512  001A70                     l4751:
  2513                           
  2514                           ; BSR set to: 0
  2515                           ;main.c: 208:                 driveMode = ReverseLeft;
  2516  001A70  0E04               	movlw	4
  2517  001A72  6E4C               	movwf	_driveMode^0,c
  2518  001A74                     l4753:
  2519                           
  2520                           ; BSR set to: 0
  2521                           ;main.c: 212:         if (distFront > (35) || reverseTime > (300)) {
  2522  001A74  504B               	movf	(_distFront+1)^0,w,c	;volatile
  2523  001A76  E107               	bnz	u3311
  2524  001A78  0E24               	movlw	36
  2525  001A7A  5C4A               	subwf	_distFront^0,w,c	;volatile
  2526  001A7C  B0D8               	btfsc	status,0,c
  2527  001A7E  EF43  F00D         	goto	u3311
  2528  001A82  EF45  F00D         	goto	u3310
  2529  001A86                     u3311:
  2530  001A86  EF55  F00D         	goto	l4757
  2531  001A8A                     u3310:
  2532  001A8A                     
  2533                           ; BSR set to: 0
  2534  001A8A  BF83               	btfsc	(_reverseTime+1)& (0+255),7,b
  2535  001A8C  EF51  F00D         	goto	u3321
  2536  001A90  0E2D               	movlw	45
  2537  001A92  5D82               	subwf	_reverseTime& (0+255),w,b
  2538  001A94  0E01               	movlw	1
  2539  001A96  5983               	subwfb	(_reverseTime+1)& (0+255),w,b
  2540  001A98  A0D8               	btfss	status,0,c
  2541  001A9A  EF51  F00D         	goto	u3321
  2542  001A9E  EF53  F00D         	goto	u3320
  2543  001AA2                     u3321:
  2544  001AA2  EF5F  F00D         	goto	l1305
  2545  001AA6                     u3320:
  2546  001AA6  EF55  F00D         	goto	l4759
  2547  001AAA                     l4757:
  2548  001AAA                     l4759:
  2549                           
  2550                           ; BSR set to: 0
  2551                           ;main.c: 215:                 driveMode = Straight;
  2552  001AAA  0E01               	movlw	1
  2553  001AAC  6E4C               	movwf	_driveMode^0,c
  2554  001AAE                     
  2555                           ; BSR set to: 0
  2556                           ;main.c: 220:             reverseCount = 0;
  2557  001AAE  0E00               	movlw	0
  2558  001AB0  6F93               	movwf	(_reverseCount+1)& (0+255),b
  2559  001AB2  0E00               	movlw	0
  2560  001AB4  6F92               	movwf	_reverseCount& (0+255),b
  2561                           
  2562                           ;main.c: 221:             reverseTime = 0;
  2563  001AB6  0E00               	movlw	0
  2564  001AB8  6F83               	movwf	(_reverseTime+1)& (0+255),b
  2565  001ABA  0E00               	movlw	0
  2566  001ABC  6F82               	movwf	_reverseTime& (0+255),b
  2567  001ABE                     l1305:
  2568                           
  2569                           ; BSR set to: 0
  2570  001ABE  0012               	return		;funcret
  2571  001AC0                     __end_of_getReverse:
  2572                           	callstack 0
  2573                           
  2574 ;; *************** function _getCurve *****************
  2575 ;; Defined at:
  2576 ;;		line 128 in file "main.c"
  2577 ;; Parameters:    Size  Location     Type
  2578 ;;		None
  2579 ;; Auto vars:     Size  Location     Type
  2580 ;;  deltaLeft       2   23[COMRAM] short 
  2581 ;;  deltaRight      2   21[COMRAM] short 
  2582 ;; Return value:  Size  Location     Type
  2583 ;;                  1    wreg      void 
  2584 ;; Registers used:
  2585 ;;		wreg, status,2, status,0
  2586 ;; Tracked objects:
  2587 ;;		On entry : 0/0
  2588 ;;		On exit  : 0/0
  2589 ;;		Unchanged: 0/0
  2590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2592 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2593 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2594 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2595 ;;Total ram usage:        6 bytes
  2596 ;; Hardware stack levels used: 1
  2597 ;; Hardware stack levels required when called: 8
  2598 ;; This function calls:
  2599 ;;		Nothing
  2600 ;; This function is called by:
  2601 ;;		_loop
  2602 ;; This function uses a non-reentrant model
  2603 ;;
  2604                           
  2605                           	psect	text9
  2606  0009C4                     __ptext9:
  2607                           	callstack 0
  2608  0009C4                     _getCurve:
  2609                           	callstack 21
  2610  0009C4                     
  2611                           ;main.c: 129:     int16_t deltaLeft = (int16_t) (distLeft - oldDistLeft);
  2612  0009C4  503A               	movf	_oldDistLeft^0,w,c
  2613  0009C6  0100               	movlb	0	; () banked
  2614  0009C8  5D9A               	subwf	_distLeft& (0+255),w,b	;volatile
  2615  0009CA  6E18               	movwf	getCurve@deltaLeft^0,c
  2616  0009CC  503B               	movf	(_oldDistLeft+1)^0,w,c
  2617  0009CE  599B               	subwfb	(_distLeft+1)& (0+255),w,b	;volatile
  2618  0009D0  6E19               	movwf	(getCurve@deltaLeft+1)^0,c
  2619                           
  2620                           ;main.c: 130:     int16_t deltaRight = (int16_t) (distRight - oldDistRight);
  2621  0009D2  5190               	movf	_oldDistRight& (0+255),w,b
  2622  0009D4  5D96               	subwf	_distRight& (0+255),w,b	;volatile
  2623  0009D6  6E16               	movwf	getCurve@deltaRight^0,c
  2624  0009D8  5191               	movf	(_oldDistRight+1)& (0+255),w,b
  2625  0009DA  5997               	subwfb	(_distRight+1)& (0+255),w,b	;volatile
  2626  0009DC  6E17               	movwf	(getCurve@deltaRight+1)^0,c
  2627                           
  2628                           ;main.c: 132:     switch (curveMode) {
  2629  0009DE  EFD0  F005         	goto	l4719
  2630  0009E2                     l4667:
  2631                           
  2632                           ; BSR set to: 0
  2633                           ;main.c: 134:             if (deltaLeft > (30) && deltaLeft < (300) && oldDistLeft < (12
      +                          5)) {
  2634  0009E2  BE19               	btfsc	(getCurve@deltaLeft+1)^0,7,c
  2635  0009E4  EFFD  F004         	goto	u3081
  2636  0009E8  5019               	movf	(getCurve@deltaLeft+1)^0,w,c
  2637  0009EA  E109               	bnz	u3080
  2638  0009EC  0E1F               	movlw	31
  2639  0009EE  5C18               	subwf	getCurve@deltaLeft^0,w,c
  2640  0009F0  A0D8               	btfss	status,0,c
  2641  0009F2  EFFD  F004         	goto	u3081
  2642  0009F6  EFFF  F004         	goto	u3080
  2643  0009FA                     u3081:
  2644  0009FA  EF20  F005         	goto	l4675
  2645  0009FE                     u3080:
  2646  0009FE                     
  2647                           ; BSR set to: 0
  2648  0009FE  BE19               	btfsc	(getCurve@deltaLeft+1)^0,7,c
  2649  000A00  EF0D  F005         	goto	u3090
  2650  000A04  0E2C               	movlw	44
  2651  000A06  5C18               	subwf	getCurve@deltaLeft^0,w,c
  2652  000A08  0E01               	movlw	1
  2653  000A0A  5819               	subwfb	(getCurve@deltaLeft+1)^0,w,c
  2654  000A0C  B0D8               	btfsc	status,0,c
  2655  000A0E  EF0B  F005         	goto	u3091
  2656  000A12  EF0D  F005         	goto	u3090
  2657  000A16                     u3091:
  2658  000A16  EF20  F005         	goto	l4675
  2659  000A1A                     u3090:
  2660  000A1A                     
  2661                           ; BSR set to: 0
  2662  000A1A  503B               	movf	(_oldDistLeft+1)^0,w,c
  2663  000A1C  E107               	bnz	u3101
  2664  000A1E  0E7D               	movlw	125
  2665  000A20  5C3A               	subwf	_oldDistLeft^0,w,c
  2666  000A22  B0D8               	btfsc	status,0,c
  2667  000A24  EF16  F005         	goto	u3101
  2668  000A28  EF18  F005         	goto	u3100
  2669  000A2C                     u3101:
  2670  000A2C  EF20  F005         	goto	l4675
  2671  000A30                     u3100:
  2672  000A30                     
  2673                           ; BSR set to: 0
  2674                           ;main.c: 135:                 delay = 0;
  2675  000A30  0E00               	movlw	0
  2676  000A32  6E3E               	movwf	_delay^0,c
  2677                           
  2678                           ;main.c: 136:                 curveMode = BeforeCurve;
  2679  000A34  0E01               	movlw	1
  2680  000A36  6E3F               	movwf	_curveMode^0,c
  2681                           
  2682                           ;main.c: 137:                 driveMode = CurveLeft;
  2683  000A38  0E05               	movlw	5
  2684  000A3A  6E4C               	movwf	_driveMode^0,c
  2685                           
  2686                           ;main.c: 140:             } else if (deltaRight > (30) && deltaRight < (300) && oldDistR
      +                          ight < (125)) {
  2687  000A3C  EFED  F005         	goto	l1272
  2688  000A40                     l4675:
  2689                           
  2690                           ; BSR set to: 0
  2691  000A40  BE17               	btfsc	(getCurve@deltaRight+1)^0,7,c
  2692  000A42  EF2C  F005         	goto	u3111
  2693  000A46  5017               	movf	(getCurve@deltaRight+1)^0,w,c
  2694  000A48  E109               	bnz	u3110
  2695  000A4A  0E1F               	movlw	31
  2696  000A4C  5C16               	subwf	getCurve@deltaRight^0,w,c
  2697  000A4E  A0D8               	btfss	status,0,c
  2698  000A50  EF2C  F005         	goto	u3111
  2699  000A54  EF2E  F005         	goto	u3110
  2700  000A58                     u3111:
  2701  000A58  EFED  F005         	goto	l1272
  2702  000A5C                     u3110:
  2703  000A5C                     
  2704                           ; BSR set to: 0
  2705  000A5C  BE17               	btfsc	(getCurve@deltaRight+1)^0,7,c
  2706  000A5E  EF3C  F005         	goto	u3120
  2707  000A62  0E2C               	movlw	44
  2708  000A64  5C16               	subwf	getCurve@deltaRight^0,w,c
  2709  000A66  0E01               	movlw	1
  2710  000A68  5817               	subwfb	(getCurve@deltaRight+1)^0,w,c
  2711  000A6A  B0D8               	btfsc	status,0,c
  2712  000A6C  EF3A  F005         	goto	u3121
  2713  000A70  EF3C  F005         	goto	u3120
  2714  000A74                     u3121:
  2715  000A74  EFED  F005         	goto	l1272
  2716  000A78                     u3120:
  2717  000A78                     
  2718                           ; BSR set to: 0
  2719  000A78  5191               	movf	(_oldDistRight+1)& (0+255),w,b
  2720  000A7A  E107               	bnz	u3131
  2721  000A7C  0E7D               	movlw	125
  2722  000A7E  5D90               	subwf	_oldDistRight& (0+255),w,b
  2723  000A80  B0D8               	btfsc	status,0,c
  2724  000A82  EF45  F005         	goto	u3131
  2725  000A86  EF47  F005         	goto	u3130
  2726  000A8A                     u3131:
  2727  000A8A  EFED  F005         	goto	l1272
  2728  000A8E                     u3130:
  2729  000A8E                     
  2730                           ; BSR set to: 0
  2731                           ;main.c: 141:                 delay = 0;
  2732  000A8E  0E00               	movlw	0
  2733  000A90  6E3E               	movwf	_delay^0,c
  2734                           
  2735                           ;main.c: 142:                 curveMode = BeforeCurve;
  2736  000A92  0E01               	movlw	1
  2737  000A94  6E3F               	movwf	_curveMode^0,c
  2738                           
  2739                           ;main.c: 143:                 driveMode = CurveRight;
  2740  000A96  0E06               	movlw	6
  2741  000A98  6E4C               	movwf	_driveMode^0,c
  2742  000A9A  EFED  F005         	goto	l1272
  2743  000A9E                     l4683:
  2744                           
  2745                           ; BSR set to: 0
  2746                           ;main.c: 150:             if (delay >= (18)) {
  2747  000A9E  0E11               	movlw	17
  2748  000AA0  643E               	cpfsgt	_delay^0,c
  2749  000AA2  EF55  F005         	goto	u3141
  2750  000AA6  EF57  F005         	goto	u3140
  2751  000AAA                     u3141:
  2752  000AAA  EF5D  F005         	goto	l4687
  2753  000AAE                     u3140:
  2754  000AAE                     
  2755                           ; BSR set to: 0
  2756                           ;main.c: 151:                 delay = 0;
  2757  000AAE  0E00               	movlw	0
  2758  000AB0  6E3E               	movwf	_delay^0,c
  2759                           
  2760                           ;main.c: 152:                 curveMode = InCurve;
  2761  000AB2  0E02               	movlw	2
  2762  000AB4  6E3F               	movwf	_curveMode^0,c
  2763                           
  2764                           ;main.c: 154:             } else {
  2765  000AB6  EFED  F005         	goto	l1272
  2766  000ABA                     l4687:
  2767                           
  2768                           ; BSR set to: 0
  2769                           ;main.c: 155:                 ++delay;
  2770  000ABA  2A3E               	incf	_delay^0,f,c
  2771  000ABC  EFED  F005         	goto	l1272
  2772  000AC0                     l4689:
  2773                           
  2774                           ; BSR set to: 0
  2775                           ;main.c: 159:             if (delay >= (25)) {
  2776  000AC0  0E18               	movlw	24
  2777  000AC2  643E               	cpfsgt	_delay^0,c
  2778  000AC4  EF66  F005         	goto	u3151
  2779  000AC8  EF68  F005         	goto	u3150
  2780  000ACC                     u3151:
  2781  000ACC  EF5D  F005         	goto	l4687
  2782  000AD0                     u3150:
  2783  000AD0                     
  2784                           ; BSR set to: 0
  2785                           ;main.c: 160:                 if ((driveMode == CurveLeft && distLeft < (45)) || (driveM
      +                          ode == CurveRight && distRight < (45)) || distFront > (150)) {
  2786  000AD0  0E05               	movlw	5
  2787  000AD2  184C               	xorwf	_driveMode^0,w,c
  2788  000AD4  A4D8               	btfss	status,2,c
  2789  000AD6  EF6F  F005         	goto	u3161
  2790  000ADA  EF71  F005         	goto	u3160
  2791  000ADE                     u3161:
  2792  000ADE  EF7C  F005         	goto	l4695
  2793  000AE2                     u3160:
  2794  000AE2                     
  2795                           ; BSR set to: 0
  2796  000AE2  519B               	movf	(_distLeft+1)& (0+255),w,b	;volatile
  2797  000AE4  E109               	bnz	u3170
  2798  000AE6  0E2D               	movlw	45
  2799  000AE8  5D9A               	subwf	_distLeft& (0+255),w,b	;volatile
  2800  000AEA  A0D8               	btfss	status,0,c
  2801  000AEC  EF7A  F005         	goto	u3171
  2802  000AF0  EF7C  F005         	goto	u3170
  2803  000AF4                     u3171:
  2804  000AF4  EF9B  F005         	goto	l4701
  2805  000AF8                     u3170:
  2806  000AF8                     l4695:
  2807                           
  2808                           ; BSR set to: 0
  2809  000AF8  0E06               	movlw	6
  2810  000AFA  184C               	xorwf	_driveMode^0,w,c
  2811  000AFC  A4D8               	btfss	status,2,c
  2812  000AFE  EF83  F005         	goto	u3181
  2813  000B02  EF85  F005         	goto	u3180
  2814  000B06                     u3181:
  2815  000B06  EF90  F005         	goto	l4699
  2816  000B0A                     u3180:
  2817  000B0A                     
  2818                           ; BSR set to: 0
  2819  000B0A  5197               	movf	(_distRight+1)& (0+255),w,b	;volatile
  2820  000B0C  E109               	bnz	u3190
  2821  000B0E  0E2D               	movlw	45
  2822  000B10  5D96               	subwf	_distRight& (0+255),w,b	;volatile
  2823  000B12  A0D8               	btfss	status,0,c
  2824  000B14  EF8E  F005         	goto	u3191
  2825  000B18  EF90  F005         	goto	u3190
  2826  000B1C                     u3191:
  2827  000B1C  EF9B  F005         	goto	l4701
  2828  000B20                     u3190:
  2829  000B20                     l4699:
  2830                           
  2831                           ; BSR set to: 0
  2832  000B20  504B               	movf	(_distFront+1)^0,w,c	;volatile
  2833  000B22  E109               	bnz	u3200
  2834  000B24  0E97               	movlw	151
  2835  000B26  5C4A               	subwf	_distFront^0,w,c	;volatile
  2836  000B28  A0D8               	btfss	status,0,c
  2837  000B2A  EF99  F005         	goto	u3201
  2838  000B2E  EF9B  F005         	goto	u3200
  2839  000B32                     u3201:
  2840  000B32  EFA3  F005         	goto	l4703
  2841  000B36                     u3200:
  2842  000B36                     l4701:
  2843                           
  2844                           ; BSR set to: 0
  2845                           ;main.c: 163:                     delay = 0;
  2846  000B36  0E00               	movlw	0
  2847  000B38  6E3E               	movwf	_delay^0,c
  2848                           
  2849                           ;main.c: 164:                     curveMode = AfterCurve;
  2850  000B3A  0E03               	movlw	3
  2851  000B3C  6E3F               	movwf	_curveMode^0,c
  2852                           
  2853                           ;main.c: 165:                     driveMode = Straight;
  2854  000B3E  0E01               	movlw	1
  2855  000B40  6E4C               	movwf	_driveMode^0,c
  2856                           
  2857                           ;main.c: 168:                 } else if(driveMode == CurveRight && deltaLeft > (30)){
  2858  000B42  EF5D  F005         	goto	l4687
  2859  000B46                     l4703:
  2860                           
  2861                           ; BSR set to: 0
  2862  000B46  0E06               	movlw	6
  2863  000B48  184C               	xorwf	_driveMode^0,w,c
  2864  000B4A  A4D8               	btfss	status,2,c
  2865  000B4C  EFAA  F005         	goto	u3211
  2866  000B50  EFAC  F005         	goto	u3210
  2867  000B54                     u3211:
  2868  000B54  EF5D  F005         	goto	l4687
  2869  000B58                     u3210:
  2870  000B58                     
  2871                           ; BSR set to: 0
  2872  000B58  BE19               	btfsc	(getCurve@deltaLeft+1)^0,7,c
  2873  000B5A  EFB8  F005         	goto	u3221
  2874  000B5E  5019               	movf	(getCurve@deltaLeft+1)^0,w,c
  2875  000B60  E109               	bnz	u3220
  2876  000B62  0E1F               	movlw	31
  2877  000B64  5C18               	subwf	getCurve@deltaLeft^0,w,c
  2878  000B66  A0D8               	btfss	status,0,c
  2879  000B68  EFB8  F005         	goto	u3221
  2880  000B6C  EFBA  F005         	goto	u3220
  2881  000B70                     u3221:
  2882  000B70  EF5D  F005         	goto	l4687
  2883  000B74                     u3220:
  2884  000B74                     
  2885                           ; BSR set to: 0
  2886                           ;main.c: 170:                     delay = 0;
  2887  000B74  0E00               	movlw	0
  2888  000B76  6E3E               	movwf	_delay^0,c
  2889                           
  2890                           ;main.c: 171:                     curveMode = BeforeCurve;
  2891  000B78  0E01               	movlw	1
  2892  000B7A  6E3F               	movwf	_curveMode^0,c
  2893                           
  2894                           ;main.c: 172:                     driveMode = CurveLeft;
  2895  000B7C  0E05               	movlw	5
  2896  000B7E  6E4C               	movwf	_driveMode^0,c
  2897  000B80  EF5D  F005         	goto	l4687
  2898  000B84                     l4711:
  2899                           
  2900                           ; BSR set to: 0
  2901                           ;main.c: 179:             if (delay >= (1)) {
  2902  000B84  503E               	movf	_delay^0,w,c
  2903  000B86  B4D8               	btfsc	status,2,c
  2904  000B88  EFC8  F005         	goto	u3231
  2905  000B8C  EFCA  F005         	goto	u3230
  2906  000B90                     u3231:
  2907  000B90  EF5D  F005         	goto	l4687
  2908  000B94                     u3230:
  2909  000B94                     
  2910                           ; BSR set to: 0
  2911                           ;main.c: 180:                 delay = 0;
  2912  000B94  0E00               	movlw	0
  2913  000B96  6E3E               	movwf	_delay^0,c
  2914                           
  2915                           ;main.c: 181:                 curveMode = OutCurve;
  2916  000B98  0E00               	movlw	0
  2917  000B9A  6E3F               	movwf	_curveMode^0,c
  2918                           
  2919                           ;main.c: 183:             } else {
  2920  000B9C  EFED  F005         	goto	l1272
  2921  000BA0                     l4719:
  2922                           
  2923                           ; BSR set to: 0
  2924  000BA0  503F               	movf	_curveMode^0,w,c
  2925  000BA2  6E14               	movwf	??_getCurve^0,c
  2926  000BA4  6A15               	clrf	(??_getCurve+1)^0,c
  2927                           
  2928                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2929                           ; Switch size 1, requested type "simple"
  2930                           ; Number of cases is 1, Range of values is 0 to 0
  2931                           ; switch strategies available:
  2932                           ; Name         Instructions Cycles
  2933                           ; simple_byte            4     3 (average)
  2934                           ;	Chosen strategy is simple_byte
  2935  000BA6  5015               	movf	(??_getCurve+1)^0,w,c
  2936  000BA8  0A00               	xorlw	0	; case 0
  2937  000BAA  B4D8               	btfsc	status,2,c
  2938  000BAC  EFDA  F005         	goto	l6059
  2939  000BB0  EFED  F005         	goto	l1272
  2940  000BB4                     l6059:
  2941                           
  2942                           ; BSR set to: 0
  2943                           ; Switch size 1, requested type "simple"
  2944                           ; Number of cases is 4, Range of values is 0 to 3
  2945                           ; switch strategies available:
  2946                           ; Name         Instructions Cycles
  2947                           ; simple_byte           13     7 (average)
  2948                           ;	Chosen strategy is simple_byte
  2949  000BB4  5014               	movf	??_getCurve^0,w,c
  2950  000BB6  0A00               	xorlw	0	; case 0
  2951  000BB8  B4D8               	btfsc	status,2,c
  2952  000BBA  EFF1  F004         	goto	l4667
  2953  000BBE  0A01               	xorlw	1	; case 1
  2954  000BC0  B4D8               	btfsc	status,2,c
  2955  000BC2  EF4F  F005         	goto	l4683
  2956  000BC6  0A03               	xorlw	3	; case 2
  2957  000BC8  B4D8               	btfsc	status,2,c
  2958  000BCA  EF60  F005         	goto	l4689
  2959  000BCE  0A01               	xorlw	1	; case 3
  2960  000BD0  B4D8               	btfsc	status,2,c
  2961  000BD2  EFC2  F005         	goto	l4711
  2962  000BD6  EFED  F005         	goto	l1272
  2963  000BDA                     l1272:
  2964                           
  2965                           ; BSR set to: 0
  2966                           ;main.c: 188:     oldDistLeft = distLeft;
  2967  000BDA  C09A  F03A         	movff	_distLeft,_oldDistLeft	;volatile
  2968  000BDE  C09B  F03B         	movff	_distLeft+1,_oldDistLeft+1	;volatile
  2969                           
  2970                           ;main.c: 189:     oldDistRight = distRight;
  2971  000BE2  C096  F090         	movff	_distRight,_oldDistRight	;volatile
  2972  000BE6  C097  F091         	movff	_distRight+1,_oldDistRight+1	;volatile
  2973  000BEA                     
  2974                           ; BSR set to: 0
  2975  000BEA  0012               	return		;funcret
  2976  000BEC                     __end_of_getCurve:
  2977                           	callstack 0
  2978                           
  2979 ;; *************** function _getBatteryVoltage *****************
  2980 ;; Defined at:
  2981 ;;		line 78 in file "main.c"
  2982 ;; Parameters:    Size  Location     Type
  2983 ;;		None
  2984 ;; Auto vars:     Size  Location     Type
  2985 ;;		None
  2986 ;; Return value:  Size  Location     Type
  2987 ;;                  1    wreg      void 
  2988 ;; Registers used:
  2989 ;;		wreg, status,2, status,0, cstack
  2990 ;; Tracked objects:
  2991 ;;		On entry : 0/0
  2992 ;;		On exit  : 0/0
  2993 ;;		Unchanged: 0/0
  2994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2998 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2999 ;;Total ram usage:        0 bytes
  3000 ;; Hardware stack levels used: 1
  3001 ;; Hardware stack levels required when called: 9
  3002 ;; This function calls:
  3003 ;;		_ADCC_GetSingleConversion
  3004 ;; This function is called by:
  3005 ;;		_loop
  3006 ;;		_checkBatt
  3007 ;; This function uses a non-reentrant model
  3008 ;;
  3009                           
  3010                           	psect	text10
  3011  002750                     __ptext10:
  3012                           	callstack 0
  3013  002750                     _getBatteryVoltage:
  3014                           	callstack 20
  3015  002750                     
  3016                           ;main.c: 79:     BatteryVolt = ADCC_GetSingleConversion(aiBatt);
  3017  002750  0E22               	movlw	34
  3018  002752  EC08  F012         	call	_ADCC_GetSingleConversion
  3019  002756  C014  F080         	movff	?_ADCC_GetSingleConversion,_BatteryVolt
  3020  00275A  C015  F081         	movff	?_ADCC_GetSingleConversion+1,_BatteryVolt+1
  3021  00275E  0012               	return		;funcret
  3022  002760                     __end_of_getBatteryVoltage:
  3023                           	callstack 0
  3024                           
  3025 ;; *************** function _ADCC_GetSingleConversion *****************
  3026 ;; Defined at:
  3027 ;;		line 137 in file "mcc_generated_files/adcc.c"
  3028 ;; Parameters:    Size  Location     Type
  3029 ;;  channel         1    wreg     enum E16058
  3030 ;; Auto vars:     Size  Location     Type
  3031 ;;  channel         1   23[COMRAM] enum E16058
  3032 ;; Return value:  Size  Location     Type
  3033 ;;                  2   19[COMRAM] unsigned short 
  3034 ;; Registers used:
  3035 ;;		wreg, status,2, status,0
  3036 ;; Tracked objects:
  3037 ;;		On entry : 0/0
  3038 ;;		On exit  : 0/0
  3039 ;;		Unchanged: 0/0
  3040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3041 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3042 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3043 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3044 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3045 ;;Total ram usage:        5 bytes
  3046 ;; Hardware stack levels used: 1
  3047 ;; Hardware stack levels required when called: 8
  3048 ;; This function calls:
  3049 ;;		Nothing
  3050 ;; This function is called by:
  3051 ;;		_getBatteryVoltage
  3052 ;; This function uses a non-reentrant model
  3053 ;;
  3054                           
  3055                           	psect	text11
  3056  002410                     __ptext11:
  3057                           	callstack 0
  3058  002410                     _ADCC_GetSingleConversion:
  3059                           	callstack 20
  3060                           
  3061                           ;incstack = 0
  3062                           ;ADCC_GetSingleConversion@channel stored from wreg
  3063  002410  6E18               	movwf	ADCC_GetSingleConversion@channel^0,c
  3064  002412                     
  3065                           ;mcc_generated_files/adcc.c: 137: adc_result_t ADCC_GetSingleConversion(adcc_channel_t c
      +                          hannel);mcc_generated_files/adcc.c: 138: {;mcc_generated_files/adcc.c: 140:     ADPCH = 
      +                          channel;
  3066  002412  0060  F063  FEF1   	movff	ADCC_GetSingleConversion@channel,16113	;volatile
  3067  002418                     
  3068                           ;mcc_generated_files/adcc.c: 143:     ADCON0bits.ADON = 1;
  3069  002418  013E               	movlb	62	; () banked
  3070  00241A  8FF8               	bsf	248,7,b	;volatile
  3071  00241C                     
  3072                           ; BSR set to: 62
  3073                           ;mcc_generated_files/adcc.c: 146:     ADCON0bits.ADCONT = 0;
  3074  00241C  9DF8               	bcf	248,6,b	;volatile
  3075  00241E                     
  3076                           ; BSR set to: 62
  3077                           ;mcc_generated_files/adcc.c: 149:     ADCON0bits.ADGO = 1;
  3078  00241E  81F8               	bsf	248,0,b	;volatile
  3079  002420                     l1054:
  3080                           
  3081                           ; BSR set to: 62
  3082                           ;mcc_generated_files/adcc.c: 153:     while (ADCON0bits.ADGO)
  3083  002420  B1F8               	btfsc	248,0,b	;volatile
  3084  002422  EF15  F012         	goto	u2141
  3085  002426  EF17  F012         	goto	u2140
  3086  00242A                     u2141:
  3087  00242A  EF10  F012         	goto	l1054
  3088  00242E                     u2140:
  3089  00242E                     
  3090                           ; BSR set to: 62
  3091                           ;mcc_generated_files/adcc.c: 159:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  3092  00242E  51F0               	movf	240,w,b	;volatile
  3093  002430  6E17               	movwf	(??_ADCC_GetSingleConversion+1)^0,c
  3094  002432  6A16               	clrf	??_ADCC_GetSingleConversion^0,c
  3095  002434  51EF               	movf	239,w,b	;volatile
  3096  002436  2416               	addwf	??_ADCC_GetSingleConversion^0,w,c
  3097  002438  6E14               	movwf	?_ADCC_GetSingleConversion^0,c
  3098  00243A  0E00               	movlw	0
  3099  00243C  2017               	addwfc	(??_ADCC_GetSingleConversion+1)^0,w,c
  3100  00243E  6E15               	movwf	(?_ADCC_GetSingleConversion+1)^0,c
  3101  002440                     
  3102                           ; BSR set to: 62
  3103  002440  0012               	return		;funcret
  3104  002442                     __end_of_ADCC_GetSingleConversion:
  3105                           	callstack 0
  3106                           
  3107 ;; *************** function _calcSpeed *****************
  3108 ;; Defined at:
  3109 ;;		line 281 in file "main.c"
  3110 ;; Parameters:    Size  Location     Type
  3111 ;;		None
  3112 ;; Auto vars:     Size  Location     Type
  3113 ;;  speed           2   39[BANK0 ] short 
  3114 ;; Return value:  Size  Location     Type
  3115 ;;                  1    wreg      void 
  3116 ;; Registers used:
  3117 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3118 ;; Tracked objects:
  3119 ;;		On entry : 0/0
  3120 ;;		On exit  : 0/0
  3121 ;;		Unchanged: 0/0
  3122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3124 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3125 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3126 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3127 ;;Total ram usage:        6 bytes
  3128 ;; Hardware stack levels used: 1
  3129 ;; Hardware stack levels required when called: 9
  3130 ;; This function calls:
  3131 ;;		___fladd
  3132 ;;		___flmul
  3133 ;;		___fltol
  3134 ;;		___xxtofl
  3135 ;; This function is called by:
  3136 ;;		_loop
  3137 ;; This function uses a non-reentrant model
  3138 ;;
  3139                           
  3140                           	psect	text12
  3141  000BEC                     __ptext12:
  3142                           	callstack 0
  3143  000BEC                     _calcSpeed:
  3144                           	callstack 20
  3145  000BEC                     
  3146                           ;main.c: 282:     int16_t speed = 0;
  3147  000BEC  0E00               	movlw	0
  3148  000BEE  0100               	movlb	0	; () banked
  3149  000BF0  6FC5               	movwf	(calcSpeed@speed+1)& (0+255),b
  3150  000BF2  0E00               	movlw	0
  3151  000BF4  6FC4               	movwf	calcSpeed@speed& (0+255),b
  3152                           
  3153                           ;main.c: 284:     switch (driveMode) {
  3154  000BF6  EFAC  F006         	goto	l5787
  3155  000BFA                     l5751:
  3156                           
  3157                           ; BSR set to: 0
  3158                           ;main.c: 286:             if (distFront > (30)) {
  3159  000BFA  504B               	movf	(_distFront+1)^0,w,c	;volatile
  3160  000BFC  E109               	bnz	u4520
  3161  000BFE  0E1F               	movlw	31
  3162  000C00  5C4A               	subwf	_distFront^0,w,c	;volatile
  3163  000C02  A0D8               	btfss	status,0,c
  3164  000C04  EF06  F006         	goto	u4521
  3165  000C08  EF08  F006         	goto	u4520
  3166  000C0C                     u4521:
  3167  000C0C  EF0A  F006         	goto	l5755
  3168  000C10                     u4520:
  3169  000C10                     
  3170                           ; BSR set to: 0
  3171                           ;main.c: 287:                 driveMode = Straight;
  3172  000C10  0E01               	movlw	1
  3173  000C12  6E4C               	movwf	_driveMode^0,c
  3174  000C14                     l5755:
  3175                           
  3176                           ; BSR set to: 0
  3177                           ;main.c: 289:             if (setSpeed > (100)) {
  3178  000C14  BF8B               	btfsc	(_setSpeed+1)& (0+255),7,b
  3179  000C16  EF16  F006         	goto	u4531
  3180  000C1A  518B               	movf	(_setSpeed+1)& (0+255),w,b
  3181  000C1C  E109               	bnz	u4530
  3182  000C1E  0E65               	movlw	101
  3183  000C20  5D8A               	subwf	_setSpeed& (0+255),w,b
  3184  000C22  A0D8               	btfss	status,0,c
  3185  000C24  EF16  F006         	goto	u4531
  3186  000C28  EF18  F006         	goto	u4530
  3187  000C2C                     u4531:
  3188  000C2C  EF33  F006         	goto	l5765
  3189  000C30                     u4530:
  3190  000C30                     
  3191                           ; BSR set to: 0
  3192                           ;main.c: 290:                     speed = setSpeed;
  3193  000C30  C08A  F0C4         	movff	_setSpeed,calcSpeed@speed
  3194  000C34  C08B  F0C5         	movff	_setSpeed+1,calcSpeed@speed+1
  3195  000C38                     
  3196                           ; BSR set to: 0
  3197                           ;main.c: 291:                 if (distFront < (15)) {
  3198  000C38  504B               	movf	(_distFront+1)^0,w,c	;volatile
  3199  000C3A  E107               	bnz	u4541
  3200  000C3C  0E0F               	movlw	15
  3201  000C3E  5C4A               	subwf	_distFront^0,w,c	;volatile
  3202  000C40  B0D8               	btfsc	status,0,c
  3203  000C42  EF25  F006         	goto	u4541
  3204  000C46  EF27  F006         	goto	u4540
  3205  000C4A                     u4541:
  3206  000C4A  EF2D  F006         	goto	l5763
  3207  000C4E                     u4540:
  3208  000C4E                     
  3209                           ; BSR set to: 0
  3210                           ;main.c: 292:                     speed -= 4;
  3211  000C4E  0EFC               	movlw	252
  3212  000C50  27C4               	addwf	calcSpeed@speed& (0+255),f,b
  3213  000C52  0EFF               	movlw	255
  3214  000C54  23C5               	addwfc	(calcSpeed@speed+1)& (0+255),f,b
  3215                           
  3216                           ;main.c: 293:                 } else {
  3217  000C56  EFD5  F006         	goto	l5789
  3218  000C5A                     l5763:
  3219                           
  3220                           ; BSR set to: 0
  3221                           ;main.c: 294:                     speed -= 2;
  3222  000C5A  0EFE               	movlw	254
  3223  000C5C  27C4               	addwf	calcSpeed@speed& (0+255),f,b
  3224  000C5E  0EFF               	movlw	255
  3225  000C60  23C5               	addwfc	(calcSpeed@speed+1)& (0+255),f,b
  3226  000C62  EFD5  F006         	goto	l5789
  3227  000C66                     l5765:
  3228                           
  3229                           ; BSR set to: 0
  3230                           ;main.c: 297:                 speed = (100);
  3231  000C66  0E00               	movlw	0
  3232  000C68  6FC5               	movwf	(calcSpeed@speed+1)& (0+255),b
  3233  000C6A  0E64               	movlw	100
  3234  000C6C  6FC4               	movwf	calcSpeed@speed& (0+255),b
  3235  000C6E  EFD5  F006         	goto	l5789
  3236  000C72                     l5767:
  3237                           
  3238                           ; BSR set to: 0
  3239                           ;main.c: 302:             if (distFront < (30)) {
  3240  000C72  504B               	movf	(_distFront+1)^0,w,c	;volatile
  3241  000C74  E107               	bnz	u4551
  3242  000C76  0E1E               	movlw	30
  3243  000C78  5C4A               	subwf	_distFront^0,w,c	;volatile
  3244  000C7A  B0D8               	btfsc	status,0,c
  3245  000C7C  EF42  F006         	goto	u4551
  3246  000C80  EF44  F006         	goto	u4550
  3247  000C84                     u4551:
  3248  000C84  EF46  F006         	goto	l5771
  3249  000C88                     u4550:
  3250  000C88                     
  3251                           ; BSR set to: 0
  3252                           ;main.c: 303:                 driveMode = Brake;
  3253  000C88  0E02               	movlw	2
  3254  000C8A  6E4C               	movwf	_driveMode^0,c
  3255  000C8C                     l5771:
  3256                           
  3257                           ; BSR set to: 0
  3258                           ;main.c: 306:             if (distFront >= (150)) {
  3259  000C8C  504B               	movf	(_distFront+1)^0,w,c	;volatile
  3260  000C8E  E109               	bnz	u4560
  3261  000C90  0E96               	movlw	150
  3262  000C92  5C4A               	subwf	_distFront^0,w,c	;volatile
  3263  000C94  A0D8               	btfss	status,0,c
  3264  000C96  EF4F  F006         	goto	u4561
  3265  000C9A  EF51  F006         	goto	u4560
  3266  000C9E                     u4561:
  3267  000C9E  EF9A  F006         	goto	l5775
  3268  000CA2                     u4560:
  3269  000CA2                     
  3270                           ; BSR set to: 0
  3271                           ;main.c: 307:                 speed = (int16_t) ((0.7) * (distFront - (150)) + (285));
  3272  000CA2  0E00               	movlw	0
  3273  000CA4  6FAE               	movwf	___fladd@a& (0+255),b
  3274  000CA6  0E80               	movlw	128
  3275  000CA8  6FAF               	movwf	(___fladd@a+1)& (0+255),b
  3276  000CAA  0E8E               	movlw	142
  3277  000CAC  6FB0               	movwf	(___fladd@a+2)& (0+255),b
  3278  000CAE  0E43               	movlw	67
  3279  000CB0  6FB1               	movwf	(___fladd@a+3)& (0+255),b
  3280  000CB2  0E33               	movlw	51
  3281  000CB4  6E2E               	movwf	___flmul@a^0,c
  3282  000CB6  0E33               	movlw	51
  3283  000CB8  6E2F               	movwf	(___flmul@a+1)^0,c
  3284  000CBA  0E33               	movlw	51
  3285  000CBC  6E30               	movwf	(___flmul@a+2)^0,c
  3286  000CBE  0E3F               	movlw	63
  3287  000CC0  6E31               	movwf	(___flmul@a+3)^0,c
  3288  000CC2  0E6A               	movlw	106
  3289  000CC4  6FC0               	movwf	??_calcSpeed& (0+255),b
  3290  000CC6  0EFF               	movlw	255
  3291  000CC8  6FC1               	movwf	(??_calcSpeed+1)& (0+255),b
  3292  000CCA  C04A  F0C2         	movff	_distFront,??_calcSpeed+2	;volatile
  3293  000CCE  C04B  F0C3         	movff	_distFront+1,??_calcSpeed+3	;volatile
  3294  000CD2  51C0               	movf	??_calcSpeed& (0+255),w,b
  3295  000CD4  27C2               	addwf	(??_calcSpeed+2)& (0+255),f,b
  3296  000CD6  51C1               	movf	(??_calcSpeed+1)& (0+255),w,b
  3297  000CD8  23C3               	addwfc	(??_calcSpeed+3)& (0+255),f,b
  3298  000CDA  C0C2  F01C         	movff	??_calcSpeed+2,___xxtofl@val
  3299  000CDE  C0C3  F01D         	movff	??_calcSpeed+3,___xxtofl@val+1
  3300  000CE2  6A1E               	clrf	(___xxtofl@val+2)^0,c
  3301  000CE4  6A1F               	clrf	(___xxtofl@val+3)^0,c
  3302  000CE6  0E00               	movlw	0
  3303  000CE8  ECE9  F007         	call	___xxtofl
  3304  000CEC  C01C  F02A         	movff	?___xxtofl,___flmul@b
  3305  000CF0  C01D  F02B         	movff	?___xxtofl+1,___flmul@b+1
  3306  000CF4  C01E  F02C         	movff	?___xxtofl+2,___flmul@b+2
  3307  000CF8  C01F  F02D         	movff	?___xxtofl+3,___flmul@b+3
  3308  000CFC  ECBA  F002         	call	___flmul	;wreg free
  3309  000D00  C02A  F0AA         	movff	?___flmul,___fladd@b
  3310  000D04  C02B  F0AB         	movff	?___flmul+1,___fladd@b+1
  3311  000D08  C02C  F0AC         	movff	?___flmul+2,___fladd@b+2
  3312  000D0C  C02D  F0AD         	movff	?___flmul+3,___fladd@b+3
  3313  000D10  EC59  F000         	call	___fladd	;wreg free
  3314  000D14  C0AA  F0B6         	movff	?___fladd,___fltol@f1
  3315  000D18  C0AB  F0B7         	movff	?___fladd+1,___fltol@f1+1
  3316  000D1C  C0AC  F0B8         	movff	?___fladd+2,___fltol@f1+2
  3317  000D20  C0AD  F0B9         	movff	?___fladd+3,___fltol@f1+3
  3318  000D24  ECDC  F00B         	call	___fltol	;wreg free
  3319  000D28  C0B6  F0C4         	movff	?___fltol,calcSpeed@speed
  3320  000D2C  C0B7  F0C5         	movff	?___fltol+1,calcSpeed@speed+1
  3321                           
  3322                           ;main.c: 308:             } else {
  3323  000D30  EFD5  F006         	goto	l5789
  3324  000D34                     l5775:
  3325                           
  3326                           ; BSR set to: 0
  3327                           ;main.c: 309:                 speed = (285);
  3328  000D34  0E01               	movlw	1
  3329  000D36  6FC5               	movwf	(calcSpeed@speed+1)& (0+255),b
  3330  000D38  0E1D               	movlw	29
  3331  000D3A  6FC4               	movwf	calcSpeed@speed& (0+255),b
  3332  000D3C  EFD5  F006         	goto	l5789
  3333  000D40                     l5777:
  3334                           
  3335                           ; BSR set to: 0
  3336                           ;main.c: 314:             speed = (-125);
  3337  000D40  0EFF               	movlw	255
  3338  000D42  6FC5               	movwf	(calcSpeed@speed+1)& (0+255),b
  3339  000D44  0E83               	movlw	131
  3340  000D46  6FC4               	movwf	calcSpeed@speed& (0+255),b
  3341                           
  3342                           ;main.c: 315:             break;
  3343  000D48  EFD5  F006         	goto	l5789
  3344  000D4C                     l5781:
  3345                           
  3346                           ; BSR set to: 0
  3347                           ;main.c: 320:             speed = (200);
  3348  000D4C  0E00               	movlw	0
  3349  000D4E  6FC5               	movwf	(calcSpeed@speed+1)& (0+255),b
  3350  000D50  0EC8               	movlw	200
  3351  000D52  6FC4               	movwf	calcSpeed@speed& (0+255),b
  3352                           
  3353                           ;main.c: 321:             break;
  3354  000D54  EFD5  F006         	goto	l5789
  3355  000D58                     l5787:
  3356                           
  3357                           ; BSR set to: 0
  3358  000D58  504C               	movf	_driveMode^0,w,c
  3359  000D5A  6FC0               	movwf	??_calcSpeed& (0+255),b
  3360  000D5C  6BC1               	clrf	(??_calcSpeed+1)& (0+255),b
  3361                           
  3362                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3363                           ; Switch size 1, requested type "simple"
  3364                           ; Number of cases is 1, Range of values is 0 to 0
  3365                           ; switch strategies available:
  3366                           ; Name         Instructions Cycles
  3367                           ; simple_byte            4     3 (average)
  3368                           ;	Chosen strategy is simple_byte
  3369  000D5E  51C1               	movf	(??_calcSpeed+1)& (0+255),w,b
  3370  000D60  0A00               	xorlw	0	; case 0
  3371  000D62  B4D8               	btfsc	status,2,c
  3372  000D64  EFB6  F006         	goto	l6061
  3373  000D68  EFD5  F006         	goto	l5789
  3374  000D6C                     l6061:
  3375                           
  3376                           ; BSR set to: 0
  3377                           ; Switch size 1, requested type "simple"
  3378                           ; Number of cases is 7, Range of values is 0 to 6
  3379                           ; switch strategies available:
  3380                           ; Name         Instructions Cycles
  3381                           ; simple_byte           22    12 (average)
  3382                           ;	Chosen strategy is simple_byte
  3383  000D6C  51C0               	movf	??_calcSpeed& (0+255),w,b
  3384  000D6E  0A00               	xorlw	0	; case 0
  3385  000D70  B4D8               	btfsc	status,2,c
  3386  000D72  EF39  F006         	goto	l5767
  3387  000D76  0A01               	xorlw	1	; case 1
  3388  000D78  B4D8               	btfsc	status,2,c
  3389  000D7A  EF39  F006         	goto	l5767
  3390  000D7E  0A03               	xorlw	3	; case 2
  3391  000D80  B4D8               	btfsc	status,2,c
  3392  000D82  EFFD  F005         	goto	l5751
  3393  000D86  0A01               	xorlw	1	; case 3
  3394  000D88  B4D8               	btfsc	status,2,c
  3395  000D8A  EFA0  F006         	goto	l5777
  3396  000D8E  0A07               	xorlw	7	; case 4
  3397  000D90  B4D8               	btfsc	status,2,c
  3398  000D92  EFA0  F006         	goto	l5777
  3399  000D96  0A01               	xorlw	1	; case 5
  3400  000D98  B4D8               	btfsc	status,2,c
  3401  000D9A  EFA6  F006         	goto	l5781
  3402  000D9E  0A03               	xorlw	3	; case 6
  3403  000DA0  B4D8               	btfsc	status,2,c
  3404  000DA2  EFA6  F006         	goto	l5781
  3405  000DA6  EFD5  F006         	goto	l5789
  3406  000DAA                     l5789:
  3407                           
  3408                           ;main.c: 327:     if (speed > (500)) {
  3409  000DAA  0100               	movlb	0	; () banked
  3410  000DAC  BFC5               	btfsc	(calcSpeed@speed+1)& (0+255),7,b
  3411  000DAE  EFE2  F006         	goto	u4571
  3412  000DB2  0EF5               	movlw	245
  3413  000DB4  5DC4               	subwf	calcSpeed@speed& (0+255),w,b
  3414  000DB6  0E01               	movlw	1
  3415  000DB8  59C5               	subwfb	(calcSpeed@speed+1)& (0+255),w,b
  3416  000DBA  A0D8               	btfss	status,0,c
  3417  000DBC  EFE2  F006         	goto	u4571
  3418  000DC0  EFE4  F006         	goto	u4570
  3419  000DC4                     u4571:
  3420  000DC4  EFE8  F006         	goto	l5793
  3421  000DC8                     u4570:
  3422  000DC8                     
  3423                           ; BSR set to: 0
  3424                           ;main.c: 328:         speed = (500);
  3425  000DC8  0E01               	movlw	1
  3426  000DCA  6FC5               	movwf	(calcSpeed@speed+1)& (0+255),b
  3427  000DCC  0EF4               	movlw	244
  3428  000DCE  6FC4               	movwf	calcSpeed@speed& (0+255),b
  3429  000DD0                     l5793:
  3430                           
  3431                           ; BSR set to: 0
  3432                           ;main.c: 330:     if (speed < (-250)) {
  3433  000DD0  AFC5               	btfss	(calcSpeed@speed+1)& (0+255),7,b
  3434  000DD2  EFF4  F006         	goto	u4581
  3435  000DD6  0E06               	movlw	6
  3436  000DD8  5DC4               	subwf	calcSpeed@speed& (0+255),w,b
  3437  000DDA  0EFF               	movlw	255
  3438  000DDC  59C5               	subwfb	(calcSpeed@speed+1)& (0+255),w,b
  3439  000DDE  B0D8               	btfsc	status,0,c
  3440  000DE0  EFF4  F006         	goto	u4581
  3441  000DE4  EFF6  F006         	goto	u4580
  3442  000DE8                     u4581:
  3443  000DE8  EFFA  F006         	goto	l5797
  3444  000DEC                     u4580:
  3445  000DEC                     
  3446                           ; BSR set to: 0
  3447                           ;main.c: 331:         speed = (-250);
  3448  000DEC  0EFF               	movlw	255
  3449  000DEE  6FC5               	movwf	(calcSpeed@speed+1)& (0+255),b
  3450  000DF0  0E06               	movlw	6
  3451  000DF2  6FC4               	movwf	calcSpeed@speed& (0+255),b
  3452  000DF4                     l5797:
  3453                           
  3454                           ; BSR set to: 0
  3455                           ;main.c: 333:     setSpeed = speed;
  3456  000DF4  C0C4  F08A         	movff	calcSpeed@speed,_setSpeed
  3457  000DF8  C0C5  F08B         	movff	calcSpeed@speed+1,_setSpeed+1
  3458  000DFC                     
  3459                           ; BSR set to: 0
  3460  000DFC  0012               	return		;funcret
  3461  000DFE                     __end_of_calcSpeed:
  3462                           	callstack 0
  3463                           
  3464 ;; *************** function ___fladd *****************
  3465 ;; Defined at:
  3466 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  3467 ;; Parameters:    Size  Location     Type
  3468 ;;  b               4   13[BANK0 ] void 
  3469 ;;  a               4   17[BANK0 ] void 
  3470 ;; Auto vars:     Size  Location     Type
  3471 ;;  grs             1   24[BANK0 ] unsigned char 
  3472 ;;  bexp            1   23[BANK0 ] unsigned char 
  3473 ;;  aexp            1   22[BANK0 ] unsigned char 
  3474 ;;  signs           1   21[BANK0 ] unsigned char 
  3475 ;; Return value:  Size  Location     Type
  3476 ;;                  4   13[BANK0 ] unsigned char 
  3477 ;; Registers used:
  3478 ;;		wreg, status,2, status,0
  3479 ;; Tracked objects:
  3480 ;;		On entry : 0/0
  3481 ;;		On exit  : 0/0
  3482 ;;		Unchanged: 0/0
  3483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3484 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3485 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3486 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3487 ;;      Totals:         4      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3488 ;;Total ram usage:       16 bytes
  3489 ;; Hardware stack levels used: 1
  3490 ;; Hardware stack levels required when called: 8
  3491 ;; This function calls:
  3492 ;;		Nothing
  3493 ;; This function is called by:
  3494 ;;		_calcSpeed
  3495 ;; This function uses a non-reentrant model
  3496 ;;
  3497                           
  3498                           	psect	text13
  3499  0000B2                     __ptext13:
  3500                           	callstack 0
  3501  0000B2                     ___fladd:
  3502                           	callstack 20
  3503  0000B2  0100               	movlb	0	; () banked
  3504  0000B4  51AD               	movf	(___fladd@b+3)& (0+255),w,b
  3505  0000B6  0B80               	andlw	128
  3506  0000B8  6FB2               	movwf	___fladd@signs& (0+255),b
  3507  0000BA  51AD               	movf	(___fladd@b+3)& (0+255),w,b
  3508  0000BC  25AD               	addwf	(___fladd@b+3)& (0+255),w,b
  3509  0000BE  6FB4               	movwf	___fladd@bexp& (0+255),b
  3510  0000C0                     
  3511                           ; BSR set to: 0
  3512  0000C0  AFAC               	btfss	(___fladd@b+2)& (0+255),7,b
  3513  0000C2  EF65  F000         	goto	u3841
  3514  0000C6  EF67  F000         	goto	u3840
  3515  0000CA                     u3841:
  3516  0000CA  EF68  F000         	goto	l5345
  3517  0000CE                     u3840:
  3518  0000CE                     
  3519                           ; BSR set to: 0
  3520  0000CE  81B4               	bsf	___fladd@bexp& (0+255),0,b
  3521  0000D0                     l5345:
  3522                           
  3523                           ; BSR set to: 0
  3524  0000D0  51B4               	movf	___fladd@bexp& (0+255),w,b
  3525  0000D2  B4D8               	btfsc	status,2,c
  3526  0000D4  EF6E  F000         	goto	u3851
  3527  0000D8  EF70  F000         	goto	u3850
  3528  0000DC                     u3851:
  3529  0000DC  EF85  F000         	goto	l5355
  3530  0000E0                     u3850:
  3531  0000E0                     
  3532                           ; BSR set to: 0
  3533  0000E0  29B4               	incf	___fladd@bexp& (0+255),w,b
  3534  0000E2  A4D8               	btfss	status,2,c
  3535  0000E4  EF76  F000         	goto	u3861
  3536  0000E8  EF78  F000         	goto	u3860
  3537  0000EC                     u3861:
  3538  0000EC  EF80  F000         	goto	l5351
  3539  0000F0                     u3860:
  3540  0000F0                     
  3541                           ; BSR set to: 0
  3542  0000F0  0E00               	movlw	0
  3543  0000F2  6FAA               	movwf	___fladd@b& (0+255),b
  3544  0000F4  0E00               	movlw	0
  3545  0000F6  6FAB               	movwf	(___fladd@b+1)& (0+255),b
  3546  0000F8  0E00               	movlw	0
  3547  0000FA  6FAC               	movwf	(___fladd@b+2)& (0+255),b
  3548  0000FC  0E00               	movlw	0
  3549  0000FE  6FAD               	movwf	(___fladd@b+3)& (0+255),b
  3550  000100                     l5351:
  3551                           
  3552                           ; BSR set to: 0
  3553  000100  8FAC               	bsf	(___fladd@b+2)& (0+255),7,b
  3554  000102                     
  3555                           ; BSR set to: 0
  3556  000102  0E00               	movlw	0
  3557  000104  6FAD               	movwf	(___fladd@b+3)& (0+255),b
  3558  000106  EF8D  F000         	goto	l5357
  3559  00010A                     l5355:
  3560                           
  3561                           ; BSR set to: 0
  3562  00010A  0E00               	movlw	0
  3563  00010C  6FAA               	movwf	___fladd@b& (0+255),b
  3564  00010E  0E00               	movlw	0
  3565  000110  6FAB               	movwf	(___fladd@b+1)& (0+255),b
  3566  000112  0E00               	movlw	0
  3567  000114  6FAC               	movwf	(___fladd@b+2)& (0+255),b
  3568  000116  0E00               	movlw	0
  3569  000118  6FAD               	movwf	(___fladd@b+3)& (0+255),b
  3570  00011A                     l5357:
  3571                           
  3572                           ; BSR set to: 0
  3573  00011A  51B1               	movf	(___fladd@a+3)& (0+255),w,b
  3574  00011C  0B80               	andlw	128
  3575  00011E  6FB3               	movwf	___fladd@aexp& (0+255),b
  3576  000120                     
  3577                           ; BSR set to: 0
  3578  000120  51B2               	movf	___fladd@signs& (0+255),w,b
  3579  000122  19B3               	xorwf	___fladd@aexp& (0+255),w,b
  3580  000124  B4D8               	btfsc	status,2,c
  3581  000126  EF97  F000         	goto	u3871
  3582  00012A  EF99  F000         	goto	u3870
  3583  00012E                     u3871:
  3584  00012E  EF9A  F000         	goto	l5363
  3585  000132                     u3870:
  3586  000132                     
  3587                           ; BSR set to: 0
  3588  000132  8DB2               	bsf	___fladd@signs& (0+255),6,b
  3589  000134                     l5363:
  3590                           
  3591                           ; BSR set to: 0
  3592  000134  51B1               	movf	(___fladd@a+3)& (0+255),w,b
  3593  000136  25B1               	addwf	(___fladd@a+3)& (0+255),w,b
  3594  000138  6FB3               	movwf	___fladd@aexp& (0+255),b
  3595  00013A                     
  3596                           ; BSR set to: 0
  3597  00013A  AFB0               	btfss	(___fladd@a+2)& (0+255),7,b
  3598  00013C  EFA2  F000         	goto	u3881
  3599  000140  EFA4  F000         	goto	u3880
  3600  000144                     u3881:
  3601  000144  EFA5  F000         	goto	l5369
  3602  000148                     u3880:
  3603  000148                     
  3604                           ; BSR set to: 0
  3605  000148  81B3               	bsf	___fladd@aexp& (0+255),0,b
  3606  00014A                     l5369:
  3607                           
  3608                           ; BSR set to: 0
  3609  00014A  51B3               	movf	___fladd@aexp& (0+255),w,b
  3610  00014C  B4D8               	btfsc	status,2,c
  3611  00014E  EFAB  F000         	goto	u3891
  3612  000152  EFAD  F000         	goto	u3890
  3613  000156                     u3891:
  3614  000156  EFC2  F000         	goto	l5379
  3615  00015A                     u3890:
  3616  00015A                     
  3617                           ; BSR set to: 0
  3618  00015A  29B3               	incf	___fladd@aexp& (0+255),w,b
  3619  00015C  A4D8               	btfss	status,2,c
  3620  00015E  EFB3  F000         	goto	u3901
  3621  000162  EFB5  F000         	goto	u3900
  3622  000166                     u3901:
  3623  000166  EFBD  F000         	goto	l5375
  3624  00016A                     u3900:
  3625  00016A                     
  3626                           ; BSR set to: 0
  3627  00016A  0E00               	movlw	0
  3628  00016C  6FAE               	movwf	___fladd@a& (0+255),b
  3629  00016E  0E00               	movlw	0
  3630  000170  6FAF               	movwf	(___fladd@a+1)& (0+255),b
  3631  000172  0E00               	movlw	0
  3632  000174  6FB0               	movwf	(___fladd@a+2)& (0+255),b
  3633  000176  0E00               	movlw	0
  3634  000178  6FB1               	movwf	(___fladd@a+3)& (0+255),b
  3635  00017A                     l5375:
  3636                           
  3637                           ; BSR set to: 0
  3638  00017A  8FB0               	bsf	(___fladd@a+2)& (0+255),7,b
  3639  00017C                     
  3640                           ; BSR set to: 0
  3641  00017C  0E00               	movlw	0
  3642  00017E  6FB1               	movwf	(___fladd@a+3)& (0+255),b
  3643  000180  EFCA  F000         	goto	l5381
  3644  000184                     l5379:
  3645                           
  3646                           ; BSR set to: 0
  3647  000184  0E00               	movlw	0
  3648  000186  6FAE               	movwf	___fladd@a& (0+255),b
  3649  000188  0E00               	movlw	0
  3650  00018A  6FAF               	movwf	(___fladd@a+1)& (0+255),b
  3651  00018C  0E00               	movlw	0
  3652  00018E  6FB0               	movwf	(___fladd@a+2)& (0+255),b
  3653  000190  0E00               	movlw	0
  3654  000192  6FB1               	movwf	(___fladd@a+3)& (0+255),b
  3655  000194                     l5381:
  3656                           
  3657                           ; BSR set to: 0
  3658  000194  51B4               	movf	___fladd@bexp& (0+255),w,b
  3659  000196  5DB3               	subwf	___fladd@aexp& (0+255),w,b
  3660  000198  B0D8               	btfsc	status,0,c
  3661  00019A  EFD1  F000         	goto	u3911
  3662  00019E  EFD3  F000         	goto	u3910
  3663  0001A2                     u3911:
  3664  0001A2  EFFA  F000         	goto	l5417
  3665  0001A6                     u3910:
  3666  0001A6                     
  3667                           ; BSR set to: 0
  3668  0001A6  ADB2               	btfss	___fladd@signs& (0+255),6,b
  3669  0001A8  EFD8  F000         	goto	u3921
  3670  0001AC  EFDA  F000         	goto	u3920
  3671  0001B0                     u3921:
  3672  0001B0  EFDC  F000         	goto	l5387
  3673  0001B4                     u3920:
  3674  0001B4                     
  3675                           ; BSR set to: 0
  3676  0001B4  0E80               	movlw	128
  3677  0001B6  1BB2               	xorwf	___fladd@signs& (0+255),f,b
  3678  0001B8                     l5387:
  3679                           
  3680                           ; BSR set to: 0
  3681  0001B8  C0B4  F0B5         	movff	___fladd@bexp,___fladd@grs
  3682  0001BC                     
  3683                           ; BSR set to: 0
  3684  0001BC  C0B3  F0B4         	movff	___fladd@aexp,___fladd@bexp
  3685  0001C0                     
  3686                           ; BSR set to: 0
  3687  0001C0  C0B5  F0B3         	movff	___fladd@grs,___fladd@aexp
  3688  0001C4                     
  3689                           ; BSR set to: 0
  3690  0001C4  C0AA  F0B5         	movff	___fladd@b,___fladd@grs
  3691  0001C8                     
  3692                           ; BSR set to: 0
  3693  0001C8  C0AE  F0AA         	movff	___fladd@a,___fladd@b
  3694  0001CC                     
  3695                           ; BSR set to: 0
  3696  0001CC  C0B5  F0AE         	movff	___fladd@grs,___fladd@a
  3697  0001D0                     
  3698                           ; BSR set to: 0
  3699  0001D0  C0AB  F0B5         	movff	___fladd@b+1,___fladd@grs
  3700  0001D4                     
  3701                           ; BSR set to: 0
  3702  0001D4  C0AF  F0AB         	movff	___fladd@a+1,___fladd@b+1
  3703  0001D8                     
  3704                           ; BSR set to: 0
  3705  0001D8  C0B5  F0AF         	movff	___fladd@grs,___fladd@a+1
  3706  0001DC                     
  3707                           ; BSR set to: 0
  3708  0001DC  C0AC  F0B5         	movff	___fladd@b+2,___fladd@grs
  3709  0001E0                     
  3710                           ; BSR set to: 0
  3711  0001E0  C0B0  F0AC         	movff	___fladd@a+2,___fladd@b+2
  3712  0001E4                     
  3713                           ; BSR set to: 0
  3714  0001E4  C0B5  F0B0         	movff	___fladd@grs,___fladd@a+2
  3715  0001E8                     
  3716                           ; BSR set to: 0
  3717  0001E8  C0AD  F0B5         	movff	___fladd@b+3,___fladd@grs
  3718  0001EC                     
  3719                           ; BSR set to: 0
  3720  0001EC  C0B1  F0AD         	movff	___fladd@a+3,___fladd@b+3
  3721  0001F0                     
  3722                           ; BSR set to: 0
  3723  0001F0  C0B5  F0B1         	movff	___fladd@grs,___fladd@a+3
  3724  0001F4                     l5417:
  3725                           
  3726                           ; BSR set to: 0
  3727  0001F4  0E00               	movlw	0
  3728  0001F6  6FB5               	movwf	___fladd@grs& (0+255),b
  3729  0001F8                     
  3730                           ; BSR set to: 0
  3731  0001F8  51B4               	movf	___fladd@bexp& (0+255),w,b
  3732  0001FA  C0B3  F036         	movff	___fladd@aexp,??___fladd
  3733  0001FE  6A37               	clrf	(??___fladd+1)^0,c
  3734  000200  5E36               	subwf	??___fladd^0,f,c
  3735  000202  0E00               	movlw	0
  3736  000204  5A37               	subwfb	(??___fladd+1)^0,f,c
  3737  000206  BE37               	btfsc	(??___fladd+1)^0,7,c
  3738  000208  EF0F  F001         	goto	u3931
  3739  00020C  5037               	movf	(??___fladd+1)^0,w,c
  3740  00020E  E109               	bnz	u3930
  3741  000210  0E1A               	movlw	26
  3742  000212  5C36               	subwf	??___fladd^0,w,c
  3743  000214  A0D8               	btfss	status,0,c
  3744  000216  EF0F  F001         	goto	u3931
  3745  00021A  EF11  F001         	goto	u3930
  3746  00021E                     u3931:
  3747  00021E  EF48  F001         	goto	l1921
  3748  000222                     u3930:
  3749  000222                     
  3750                           ; BSR set to: 0
  3751  000222  51AA               	movf	___fladd@b& (0+255),w,b
  3752  000224  11AB               	iorwf	(___fladd@b+1)& (0+255),w,b
  3753  000226  11AC               	iorwf	(___fladd@b+2)& (0+255),w,b
  3754  000228  11AD               	iorwf	(___fladd@b+3)& (0+255),w,b
  3755  00022A  A4D8               	btfss	status,2,c
  3756  00022C  EF1A  F001         	goto	u3941
  3757  000230  EF1D  F001         	goto	u3940
  3758  000234                     u3941:
  3759  000234  0E01               	movlw	1
  3760  000236  EF1E  F001         	goto	u3950
  3761  00023A                     u3940:
  3762  00023A  0E00               	movlw	0
  3763  00023C                     u3950:
  3764  00023C  6FB5               	movwf	___fladd@grs& (0+255),b
  3765  00023E                     
  3766                           ; BSR set to: 0
  3767  00023E  0E00               	movlw	0
  3768  000240  6FAA               	movwf	___fladd@b& (0+255),b
  3769  000242  0E00               	movlw	0
  3770  000244  6FAB               	movwf	(___fladd@b+1)& (0+255),b
  3771  000246  0E00               	movlw	0
  3772  000248  6FAC               	movwf	(___fladd@b+2)& (0+255),b
  3773  00024A  0E00               	movlw	0
  3774  00024C  6FAD               	movwf	(___fladd@b+3)& (0+255),b
  3775  00024E                     
  3776                           ; BSR set to: 0
  3777  00024E  C0B3  F0B4         	movff	___fladd@aexp,___fladd@bexp
  3778  000252  EF51  F001         	goto	l1920
  3779  000256                     l1922:
  3780                           
  3781                           ; BSR set to: 0
  3782  000256  A1B5               	btfss	___fladd@grs& (0+255),0,b
  3783  000258  EF30  F001         	goto	u3961
  3784  00025C  EF32  F001         	goto	u3960
  3785  000260                     u3961:
  3786  000260  EF38  F001         	goto	l5429
  3787  000264                     u3960:
  3788  000264                     
  3789                           ; BSR set to: 0
  3790  000264  90D8               	bcf	status,0,c
  3791  000266  31B5               	rrcf	___fladd@grs& (0+255),w,b
  3792  000268  0901               	iorlw	1
  3793  00026A  6FB5               	movwf	___fladd@grs& (0+255),b
  3794  00026C  EF3A  F001         	goto	l5431
  3795  000270                     l5429:
  3796                           
  3797                           ; BSR set to: 0
  3798  000270  90D8               	bcf	status,0,c
  3799  000272  33B5               	rrcf	___fladd@grs& (0+255),f,b
  3800  000274                     l5431:
  3801                           
  3802                           ; BSR set to: 0
  3803  000274  A1AA               	btfss	___fladd@b& (0+255),0,b
  3804  000276  EF3F  F001         	goto	u3971
  3805  00027A  EF41  F001         	goto	u3970
  3806  00027E                     u3971:
  3807  00027E  EF42  F001         	goto	l5435
  3808  000282                     u3970:
  3809  000282                     
  3810                           ; BSR set to: 0
  3811  000282  8FB5               	bsf	___fladd@grs& (0+255),7,b
  3812  000284                     l5435:
  3813                           
  3814                           ; BSR set to: 0
  3815  000284  35AD               	rlcf	(___fladd@b+3)& (0+255),w,b
  3816  000286  33AD               	rrcf	(___fladd@b+3)& (0+255),f,b
  3817  000288  33AC               	rrcf	(___fladd@b+2)& (0+255),f,b
  3818  00028A  33AB               	rrcf	(___fladd@b+1)& (0+255),f,b
  3819  00028C  33AA               	rrcf	___fladd@b& (0+255),f,b
  3820  00028E                     
  3821                           ; BSR set to: 0
  3822  00028E  2BB4               	incf	___fladd@bexp& (0+255),f,b
  3823  000290                     l1921:
  3824                           
  3825                           ; BSR set to: 0
  3826  000290  51B3               	movf	___fladd@aexp& (0+255),w,b
  3827  000292  5DB4               	subwf	___fladd@bexp& (0+255),w,b
  3828  000294  A0D8               	btfss	status,0,c
  3829  000296  EF4F  F001         	goto	u3981
  3830  00029A  EF51  F001         	goto	u3980
  3831  00029E                     u3981:
  3832  00029E  EF2B  F001         	goto	l1922
  3833  0002A2                     u3980:
  3834  0002A2                     l1920:
  3835                           
  3836                           ; BSR set to: 0
  3837  0002A2  BDB2               	btfsc	___fladd@signs& (0+255),6,b
  3838  0002A4  EF56  F001         	goto	u3991
  3839  0002A8  EF58  F001         	goto	u3990
  3840  0002AC                     u3991:
  3841  0002AC  EF98  F001         	goto	l5463
  3842  0002B0                     u3990:
  3843  0002B0                     
  3844                           ; BSR set to: 0
  3845  0002B0  51B4               	movf	___fladd@bexp& (0+255),w,b
  3846  0002B2  A4D8               	btfss	status,2,c
  3847  0002B4  EF5E  F001         	goto	u4001
  3848  0002B8  EF60  F001         	goto	u4000
  3849  0002BC                     u4001:
  3850  0002BC  EF6A  F001         	goto	l5445
  3851  0002C0                     u4000:
  3852  0002C0                     
  3853                           ; BSR set to: 0
  3854  0002C0  0E00               	movlw	0
  3855  0002C2  6FAA               	movwf	?___fladd& (0+255),b
  3856  0002C4  0E00               	movlw	0
  3857  0002C6  6FAB               	movwf	(?___fladd+1)& (0+255),b
  3858  0002C8  0E00               	movlw	0
  3859  0002CA  6FAC               	movwf	(?___fladd+2)& (0+255),b
  3860  0002CC  0E00               	movlw	0
  3861  0002CE  6FAD               	movwf	(?___fladd+3)& (0+255),b
  3862  0002D0  EFB9  F002         	goto	l1929
  3863  0002D4                     l5445:
  3864                           
  3865                           ; BSR set to: 0
  3866  0002D4  51AE               	movf	___fladd@a& (0+255),w,b
  3867  0002D6  27AA               	addwf	___fladd@b& (0+255),f,b
  3868  0002D8  51AF               	movf	(___fladd@a+1)& (0+255),w,b
  3869  0002DA  23AB               	addwfc	(___fladd@b+1)& (0+255),f,b
  3870  0002DC  51B0               	movf	(___fladd@a+2)& (0+255),w,b
  3871  0002DE  23AC               	addwfc	(___fladd@b+2)& (0+255),f,b
  3872  0002E0  51B1               	movf	(___fladd@a+3)& (0+255),w,b
  3873  0002E2  23AD               	addwfc	(___fladd@b+3)& (0+255),f,b
  3874  0002E4                     
  3875                           ; BSR set to: 0
  3876  0002E4  A1AD               	btfss	(___fladd@b+3)& (0+255),0,b
  3877  0002E6  EF77  F001         	goto	u4011
  3878  0002EA  EF79  F001         	goto	u4010
  3879  0002EE                     u4011:
  3880  0002EE  EF25  F002         	goto	l5499
  3881  0002F2                     u4010:
  3882  0002F2                     
  3883                           ; BSR set to: 0
  3884  0002F2  A1B5               	btfss	___fladd@grs& (0+255),0,b
  3885  0002F4  EF7E  F001         	goto	u4021
  3886  0002F8  EF80  F001         	goto	u4020
  3887  0002FC                     u4021:
  3888  0002FC  EF86  F001         	goto	l5453
  3889  000300                     u4020:
  3890  000300                     
  3891                           ; BSR set to: 0
  3892  000300  90D8               	bcf	status,0,c
  3893  000302  31B5               	rrcf	___fladd@grs& (0+255),w,b
  3894  000304  0901               	iorlw	1
  3895  000306  6FB5               	movwf	___fladd@grs& (0+255),b
  3896  000308  EF88  F001         	goto	l5455
  3897  00030C                     l5453:
  3898                           
  3899                           ; BSR set to: 0
  3900  00030C  90D8               	bcf	status,0,c
  3901  00030E  33B5               	rrcf	___fladd@grs& (0+255),f,b
  3902  000310                     l5455:
  3903                           
  3904                           ; BSR set to: 0
  3905  000310  A1AA               	btfss	___fladd@b& (0+255),0,b
  3906  000312  EF8D  F001         	goto	u4031
  3907  000316  EF8F  F001         	goto	u4030
  3908  00031A                     u4031:
  3909  00031A  EF90  F001         	goto	l5459
  3910  00031E                     u4030:
  3911  00031E                     
  3912                           ; BSR set to: 0
  3913  00031E  8FB5               	bsf	___fladd@grs& (0+255),7,b
  3914  000320                     l5459:
  3915                           
  3916                           ; BSR set to: 0
  3917  000320  35AD               	rlcf	(___fladd@b+3)& (0+255),w,b
  3918  000322  33AD               	rrcf	(___fladd@b+3)& (0+255),f,b
  3919  000324  33AC               	rrcf	(___fladd@b+2)& (0+255),f,b
  3920  000326  33AB               	rrcf	(___fladd@b+1)& (0+255),f,b
  3921  000328  33AA               	rrcf	___fladd@b& (0+255),f,b
  3922  00032A                     
  3923                           ; BSR set to: 0
  3924  00032A  2BB4               	incf	___fladd@bexp& (0+255),f,b
  3925  00032C  EF25  F002         	goto	l5499
  3926  000330                     l5463:
  3927                           
  3928                           ; BSR set to: 0
  3929  000330  51AE               	movf	___fladd@a& (0+255),w,b
  3930  000332  5DAA               	subwf	___fladd@b& (0+255),w,b
  3931  000334  51AF               	movf	(___fladd@a+1)& (0+255),w,b
  3932  000336  59AB               	subwfb	(___fladd@b+1)& (0+255),w,b
  3933  000338  51B0               	movf	(___fladd@a+2)& (0+255),w,b
  3934  00033A  59AC               	subwfb	(___fladd@b+2)& (0+255),w,b
  3935  00033C  51AD               	movf	(___fladd@b+3)& (0+255),w,b
  3936  00033E  0A80               	xorlw	128
  3937  000340  6E36               	movwf	??___fladd^0,c
  3938  000342  51B1               	movf	(___fladd@a+3)& (0+255),w,b
  3939  000344  0A80               	xorlw	128
  3940  000346  5836               	subwfb	??___fladd^0,w,c
  3941  000348  B0D8               	btfsc	status,0,c
  3942  00034A  EFA9  F001         	goto	u4041
  3943  00034E  EFAB  F001         	goto	u4040
  3944  000352                     u4041:
  3945  000352  EFD6  F001         	goto	l5473
  3946  000356                     u4040:
  3947  000356                     
  3948                           ; BSR set to: 0
  3949  000356  51AA               	movf	___fladd@b& (0+255),w,b
  3950  000358  5DAE               	subwf	___fladd@a& (0+255),w,b
  3951  00035A  6E36               	movwf	??___fladd^0,c
  3952  00035C  51AB               	movf	(___fladd@b+1)& (0+255),w,b
  3953  00035E  59AF               	subwfb	(___fladd@a+1)& (0+255),w,b
  3954  000360  6E37               	movwf	(??___fladd+1)^0,c
  3955  000362  51AC               	movf	(___fladd@b+2)& (0+255),w,b
  3956  000364  59B0               	subwfb	(___fladd@a+2)& (0+255),w,b
  3957  000366  6E38               	movwf	(??___fladd+2)^0,c
  3958  000368  51AD               	movf	(___fladd@b+3)& (0+255),w,b
  3959  00036A  59B1               	subwfb	(___fladd@a+3)& (0+255),w,b
  3960  00036C  6E39               	movwf	(??___fladd+3)^0,c
  3961  00036E  0EFF               	movlw	255
  3962  000370  2436               	addwf	??___fladd^0,w,c
  3963  000372  6FAA               	movwf	___fladd@b& (0+255),b
  3964  000374  0EFF               	movlw	255
  3965  000376  2037               	addwfc	(??___fladd+1)^0,w,c
  3966  000378  6FAB               	movwf	(___fladd@b+1)& (0+255),b
  3967  00037A  0EFF               	movlw	255
  3968  00037C  2038               	addwfc	(??___fladd+2)^0,w,c
  3969  00037E  6FAC               	movwf	(___fladd@b+2)& (0+255),b
  3970  000380  0EFF               	movlw	255
  3971  000382  2039               	addwfc	(??___fladd+3)^0,w,c
  3972  000384  6FAD               	movwf	(___fladd@b+3)& (0+255),b
  3973  000386  0E80               	movlw	128
  3974  000388  1BB2               	xorwf	___fladd@signs& (0+255),f,b
  3975  00038A                     
  3976                           ; BSR set to: 0
  3977  00038A  6DB5               	negf	___fladd@grs& (0+255),b
  3978  00038C                     
  3979                           ; BSR set to: 0
  3980  00038C  51B5               	movf	___fladd@grs& (0+255),w,b
  3981  00038E  A4D8               	btfss	status,2,c
  3982  000390  EFCC  F001         	goto	u4051
  3983  000394  EFCE  F001         	goto	u4050
  3984  000398                     u4051:
  3985  000398  EFDE  F001         	goto	l1937
  3986  00039C                     u4050:
  3987  00039C                     
  3988                           ; BSR set to: 0
  3989  00039C  0E01               	movlw	1
  3990  00039E  27AA               	addwf	___fladd@b& (0+255),f,b
  3991  0003A0  0E00               	movlw	0
  3992  0003A2  23AB               	addwfc	(___fladd@b+1)& (0+255),f,b
  3993  0003A4  23AC               	addwfc	(___fladd@b+2)& (0+255),f,b
  3994  0003A6  23AD               	addwfc	(___fladd@b+3)& (0+255),f,b
  3995  0003A8  EFDE  F001         	goto	l1937
  3996  0003AC                     l5473:
  3997                           
  3998                           ; BSR set to: 0
  3999  0003AC  51AE               	movf	___fladd@a& (0+255),w,b
  4000  0003AE  5FAA               	subwf	___fladd@b& (0+255),f,b
  4001  0003B0  51AF               	movf	(___fladd@a+1)& (0+255),w,b
  4002  0003B2  5BAB               	subwfb	(___fladd@b+1)& (0+255),f,b
  4003  0003B4  51B0               	movf	(___fladd@a+2)& (0+255),w,b
  4004  0003B6  5BAC               	subwfb	(___fladd@b+2)& (0+255),f,b
  4005  0003B8  51B1               	movf	(___fladd@a+3)& (0+255),w,b
  4006  0003BA  5BAD               	subwfb	(___fladd@b+3)& (0+255),f,b
  4007  0003BC                     l1937:
  4008                           
  4009                           ; BSR set to: 0
  4010  0003BC  51AA               	movf	___fladd@b& (0+255),w,b
  4011  0003BE  11AB               	iorwf	(___fladd@b+1)& (0+255),w,b
  4012  0003C0  11AC               	iorwf	(___fladd@b+2)& (0+255),w,b
  4013  0003C2  11AD               	iorwf	(___fladd@b+3)& (0+255),w,b
  4014  0003C4  A4D8               	btfss	status,2,c
  4015  0003C6  EFE7  F001         	goto	u4061
  4016  0003CA  EFE9  F001         	goto	u4060
  4017  0003CE                     u4061:
  4018  0003CE  EF1E  F002         	goto	l5497
  4019  0003D2                     u4060:
  4020  0003D2                     
  4021                           ; BSR set to: 0
  4022  0003D2  51B5               	movf	___fladd@grs& (0+255),w,b
  4023  0003D4  A4D8               	btfss	status,2,c
  4024  0003D6  EFEF  F001         	goto	u4071
  4025  0003DA  EFF1  F001         	goto	u4070
  4026  0003DE                     u4071:
  4027  0003DE  EF1E  F002         	goto	l5497
  4028  0003E2                     u4070:
  4029  0003E2                     
  4030                           ; BSR set to: 0
  4031  0003E2  0E00               	movlw	0
  4032  0003E4  6FAA               	movwf	?___fladd& (0+255),b
  4033  0003E6  0E00               	movlw	0
  4034  0003E8  6FAB               	movwf	(?___fladd+1)& (0+255),b
  4035  0003EA  0E00               	movlw	0
  4036  0003EC  6FAC               	movwf	(?___fladd+2)& (0+255),b
  4037  0003EE  0E00               	movlw	0
  4038  0003F0  6FAD               	movwf	(?___fladd+3)& (0+255),b
  4039  0003F2  EFB9  F002         	goto	l1929
  4040  0003F6                     l5481:
  4041                           
  4042                           ; BSR set to: 0
  4043  0003F6  90D8               	bcf	status,0,c
  4044  0003F8  37AA               	rlcf	___fladd@b& (0+255),f,b
  4045  0003FA  37AB               	rlcf	(___fladd@b+1)& (0+255),f,b
  4046  0003FC  37AC               	rlcf	(___fladd@b+2)& (0+255),f,b
  4047  0003FE  37AD               	rlcf	(___fladd@b+3)& (0+255),f,b
  4048  000400                     
  4049                           ; BSR set to: 0
  4050  000400  AFB5               	btfss	___fladd@grs& (0+255),7,b
  4051  000402  EF05  F002         	goto	u4081
  4052  000406  EF07  F002         	goto	u4080
  4053  00040A                     u4081:
  4054  00040A  EF08  F002         	goto	l5487
  4055  00040E                     u4080:
  4056  00040E                     
  4057                           ; BSR set to: 0
  4058  00040E  81AA               	bsf	___fladd@b& (0+255),0,b
  4059  000410                     l5487:
  4060                           
  4061                           ; BSR set to: 0
  4062  000410  A1B5               	btfss	___fladd@grs& (0+255),0,b
  4063  000412  EF0D  F002         	goto	u4091
  4064  000416  EF0F  F002         	goto	u4090
  4065  00041A                     u4091:
  4066  00041A  EF13  F002         	goto	l5491
  4067  00041E                     u4090:
  4068  00041E                     
  4069                           ; BSR set to: 0
  4070  00041E  80D8               	bsf	status,0,c
  4071  000420  37B5               	rlcf	___fladd@grs& (0+255),f,b
  4072  000422  EF15  F002         	goto	l5493
  4073  000426                     l5491:
  4074                           
  4075                           ; BSR set to: 0
  4076  000426  90D8               	bcf	status,0,c
  4077  000428  37B5               	rlcf	___fladd@grs& (0+255),f,b
  4078  00042A                     l5493:
  4079                           
  4080                           ; BSR set to: 0
  4081  00042A  51B4               	movf	___fladd@bexp& (0+255),w,b
  4082  00042C  B4D8               	btfsc	status,2,c
  4083  00042E  EF1B  F002         	goto	u4101
  4084  000432  EF1D  F002         	goto	u4100
  4085  000436                     u4101:
  4086  000436  EF1E  F002         	goto	l5497
  4087  00043A                     u4100:
  4088  00043A                     
  4089                           ; BSR set to: 0
  4090  00043A  07B4               	decf	___fladd@bexp& (0+255),f,b
  4091  00043C                     l5497:
  4092                           
  4093                           ; BSR set to: 0
  4094  00043C  AFAC               	btfss	(___fladd@b+2)& (0+255),7,b
  4095  00043E  EF23  F002         	goto	u4111
  4096  000442  EF25  F002         	goto	u4110
  4097  000446                     u4111:
  4098  000446  EFFB  F001         	goto	l5481
  4099  00044A                     u4110:
  4100  00044A                     l5499:
  4101                           
  4102                           ; BSR set to: 0
  4103  00044A  0E00               	movlw	0
  4104  00044C  6FB3               	movwf	___fladd@aexp& (0+255),b
  4105  00044E                     
  4106                           ; BSR set to: 0
  4107  00044E  AFB5               	btfss	___fladd@grs& (0+255),7,b
  4108  000450  EF2C  F002         	goto	u4121
  4109  000454  EF2E  F002         	goto	u4120
  4110  000458                     u4121:
  4111  000458  EF46  F002         	goto	l1946
  4112  00045C                     u4120:
  4113  00045C                     
  4114                           ; BSR set to: 0
  4115  00045C  C0B5  F036         	movff	___fladd@grs,??___fladd
  4116  000460  0E7F               	movlw	127
  4117  000462  1636               	andwf	??___fladd^0,f,c
  4118  000464  B4D8               	btfsc	status,2,c
  4119  000466  EF37  F002         	goto	u4131
  4120  00046A  EF39  F002         	goto	u4130
  4121  00046E                     u4131:
  4122  00046E  EF3D  F002         	goto	l1947
  4123  000472                     u4130:
  4124  000472                     l5505:
  4125                           
  4126                           ; BSR set to: 0
  4127  000472  0E01               	movlw	1
  4128  000474  6FB3               	movwf	___fladd@aexp& (0+255),b
  4129  000476  EF46  F002         	goto	l1946
  4130  00047A                     l1947:
  4131                           
  4132                           ; BSR set to: 0
  4133  00047A  A1AA               	btfss	___fladd@b& (0+255),0,b
  4134  00047C  EF42  F002         	goto	u4141
  4135  000480  EF44  F002         	goto	u4140
  4136  000484                     u4141:
  4137  000484  EF46  F002         	goto	l1946
  4138  000488                     u4140:
  4139  000488  EF39  F002         	goto	l5505
  4140  00048C                     l1946:
  4141                           
  4142                           ; BSR set to: 0
  4143  00048C  51B3               	movf	___fladd@aexp& (0+255),w,b
  4144  00048E  B4D8               	btfsc	status,2,c
  4145  000490  EF4C  F002         	goto	u4151
  4146  000494  EF4E  F002         	goto	u4150
  4147  000498                     u4151:
  4148  000498  EF79  F002         	goto	l5517
  4149  00049C                     u4150:
  4150  00049C                     
  4151                           ; BSR set to: 0
  4152  00049C  0E01               	movlw	1
  4153  00049E  27AA               	addwf	___fladd@b& (0+255),f,b
  4154  0004A0  0E00               	movlw	0
  4155  0004A2  23AB               	addwfc	(___fladd@b+1)& (0+255),f,b
  4156  0004A4  23AC               	addwfc	(___fladd@b+2)& (0+255),f,b
  4157  0004A6  23AD               	addwfc	(___fladd@b+3)& (0+255),f,b
  4158  0004A8                     
  4159                           ; BSR set to: 0
  4160  0004A8  A1AD               	btfss	(___fladd@b+3)& (0+255),0,b
  4161  0004AA  EF59  F002         	goto	u4161
  4162  0004AE  EF5B  F002         	goto	u4160
  4163  0004B2                     u4161:
  4164  0004B2  EF79  F002         	goto	l5517
  4165  0004B6                     u4160:
  4166  0004B6                     
  4167                           ; BSR set to: 0
  4168  0004B6  C0AA  F036         	movff	___fladd@b,??___fladd
  4169  0004BA  C0AB  F037         	movff	___fladd@b+1,??___fladd+1
  4170  0004BE  C0AC  F038         	movff	___fladd@b+2,??___fladd+2
  4171  0004C2  C0AD  F039         	movff	___fladd@b+3,??___fladd+3
  4172  0004C6  3439               	rlcf	(??___fladd+3)^0,w,c
  4173  0004C8  3239               	rrcf	(??___fladd+3)^0,f,c
  4174  0004CA  3238               	rrcf	(??___fladd+2)^0,f,c
  4175  0004CC  3237               	rrcf	(??___fladd+1)^0,f,c
  4176  0004CE  3236               	rrcf	??___fladd^0,f,c
  4177  0004D0  C036  F0AA         	movff	??___fladd,___fladd@b
  4178  0004D4  C037  F0AB         	movff	??___fladd+1,___fladd@b+1
  4179  0004D8  C038  F0AC         	movff	??___fladd+2,___fladd@b+2
  4180  0004DC  C039  F0AD         	movff	??___fladd+3,___fladd@b+3
  4181  0004E0  29B4               	incf	___fladd@bexp& (0+255),w,b
  4182  0004E2  B4D8               	btfsc	status,2,c
  4183  0004E4  EF76  F002         	goto	u4171
  4184  0004E8  EF78  F002         	goto	u4170
  4185  0004EC                     u4171:
  4186  0004EC  EF79  F002         	goto	l5517
  4187  0004F0                     u4170:
  4188  0004F0                     
  4189                           ; BSR set to: 0
  4190  0004F0  2BB4               	incf	___fladd@bexp& (0+255),f,b
  4191  0004F2                     l5517:
  4192                           
  4193                           ; BSR set to: 0
  4194  0004F2  29B4               	incf	___fladd@bexp& (0+255),w,b
  4195  0004F4  B4D8               	btfsc	status,2,c
  4196  0004F6  EF7F  F002         	goto	u4181
  4197  0004FA  EF81  F002         	goto	u4180
  4198  0004FE                     u4181:
  4199  0004FE  EF89  F002         	goto	l5521
  4200  000502                     u4180:
  4201  000502                     
  4202                           ; BSR set to: 0
  4203  000502  51B4               	movf	___fladd@bexp& (0+255),w,b
  4204  000504  A4D8               	btfss	status,2,c
  4205  000506  EF87  F002         	goto	u4191
  4206  00050A  EF89  F002         	goto	u4190
  4207  00050E                     u4191:
  4208  00050E  EF9B  F002         	goto	l5525
  4209  000512                     u4190:
  4210  000512                     l5521:
  4211                           
  4212                           ; BSR set to: 0
  4213  000512  0E00               	movlw	0
  4214  000514  6FAA               	movwf	___fladd@b& (0+255),b
  4215  000516  0E00               	movlw	0
  4216  000518  6FAB               	movwf	(___fladd@b+1)& (0+255),b
  4217  00051A  0E00               	movlw	0
  4218  00051C  6FAC               	movwf	(___fladd@b+2)& (0+255),b
  4219  00051E  0E00               	movlw	0
  4220  000520  6FAD               	movwf	(___fladd@b+3)& (0+255),b
  4221  000522  51B4               	movf	___fladd@bexp& (0+255),w,b
  4222  000524  A4D8               	btfss	status,2,c
  4223  000526  EF97  F002         	goto	u4201
  4224  00052A  EF99  F002         	goto	u4200
  4225  00052E                     u4201:
  4226  00052E  EF9B  F002         	goto	l5525
  4227  000532                     u4200:
  4228  000532                     
  4229                           ; BSR set to: 0
  4230  000532  0E00               	movlw	0
  4231  000534  6FB2               	movwf	___fladd@signs& (0+255),b
  4232  000536                     l5525:
  4233                           
  4234                           ; BSR set to: 0
  4235  000536  A1B4               	btfss	___fladd@bexp& (0+255),0,b
  4236  000538  EFA0  F002         	goto	u4211
  4237  00053C  EFA2  F002         	goto	u4210
  4238  000540                     u4211:
  4239  000540  EFA5  F002         	goto	l5529
  4240  000544                     u4210:
  4241  000544                     
  4242                           ; BSR set to: 0
  4243  000544  8FAC               	bsf	(___fladd@b+2)& (0+255),7,b
  4244  000546  EFA6  F002         	goto	l5531
  4245  00054A                     l5529:
  4246                           
  4247                           ; BSR set to: 0
  4248  00054A  9FAC               	bcf	(___fladd@b+2)& (0+255),7,b
  4249  00054C                     l5531:
  4250                           
  4251                           ; BSR set to: 0
  4252  00054C  90D8               	bcf	status,0,c
  4253  00054E  31B4               	rrcf	___fladd@bexp& (0+255),w,b
  4254  000550  6FAD               	movwf	(___fladd@b+3)& (0+255),b
  4255  000552                     
  4256                           ; BSR set to: 0
  4257  000552  AFB2               	btfss	___fladd@signs& (0+255),7,b
  4258  000554  EFAE  F002         	goto	u4221
  4259  000558  EFB0  F002         	goto	u4220
  4260  00055C                     u4221:
  4261  00055C  EFB1  F002         	goto	l5537
  4262  000560                     u4220:
  4263  000560                     
  4264                           ; BSR set to: 0
  4265  000560  8FAD               	bsf	(___fladd@b+3)& (0+255),7,b
  4266  000562                     l5537:
  4267                           
  4268                           ; BSR set to: 0
  4269  000562  C0AA  F0AA         	movff	___fladd@b,?___fladd
  4270  000566  C0AB  F0AB         	movff	___fladd@b+1,?___fladd+1
  4271  00056A  C0AC  F0AC         	movff	___fladd@b+2,?___fladd+2
  4272  00056E  C0AD  F0AD         	movff	___fladd@b+3,?___fladd+3
  4273  000572                     l1929:
  4274                           
  4275                           ; BSR set to: 0
  4276  000572  0012               	return		;funcret
  4277  000574                     __end_of___fladd:
  4278                           	callstack 0
  4279                           
  4280 ;; *************** function _calcMotorPow *****************
  4281 ;; Defined at:
  4282 ;;		line 336 in file "main.c"
  4283 ;; Parameters:    Size  Location     Type
  4284 ;;		None
  4285 ;; Auto vars:     Size  Location     Type
  4286 ;;  oldSpeedDelt    2   39[BANK0 ] short 
  4287 ;;  setSpeedDelt    2   37[BANK0 ] short 
  4288 ;;  addMPow         1   41[BANK0 ] char 
  4289 ;; Return value:  Size  Location     Type
  4290 ;;                  1    wreg      void 
  4291 ;; Registers used:
  4292 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4293 ;; Tracked objects:
  4294 ;;		On entry : 0/0
  4295 ;;		On exit  : 0/0
  4296 ;;		Unchanged: 0/0
  4297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4299 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4300 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4301 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4302 ;;Total ram usage:        7 bytes
  4303 ;; Hardware stack levels used: 1
  4304 ;; Hardware stack levels required when called: 10
  4305 ;; This function calls:
  4306 ;;		___awdiv
  4307 ;;		___flmul
  4308 ;;		___fltol
  4309 ;;		___xxtofl
  4310 ;;		_actSpeed
  4311 ;;		_setMotor
  4312 ;; This function is called by:
  4313 ;;		_loop
  4314 ;; This function uses a non-reentrant model
  4315 ;;
  4316                           
  4317                           	psect	text14
  4318  00132A                     __ptext14:
  4319                           	callstack 0
  4320  00132A                     _calcMotorPow:
  4321                           	callstack 19
  4322  00132A                     
  4323                           ;main.c: 337:     currentSpeed = actSpeed();
  4324  00132A  EC4E  F00F         	call	_actSpeed	;wreg free
  4325  00132E  C022  F088         	movff	?_actSpeed,_currentSpeed
  4326  001332  C023  F089         	movff	?_actSpeed+1,_currentSpeed+1
  4327  001336                     
  4328                           ;main.c: 339:     int16_t setSpeedDelta = setSpeed - currentSpeed;
  4329  001336  0100               	movlb	0	; () banked
  4330  001338  5188               	movf	_currentSpeed& (0+255),w,b
  4331  00133A  5D8A               	subwf	_setSpeed& (0+255),w,b
  4332  00133C  6FC2               	movwf	calcMotorPow@setSpeedDelta& (0+255),b
  4333  00133E  5189               	movf	(_currentSpeed+1)& (0+255),w,b
  4334  001340  598B               	subwfb	(_setSpeed+1)& (0+255),w,b
  4335  001342  6FC3               	movwf	(calcMotorPow@setSpeedDelta+1)& (0+255),b
  4336  001344                     
  4337                           ; BSR set to: 0
  4338                           ;main.c: 340:     int16_t oldSpeedDelta = currentSpeed - oldSpeed;
  4339  001344  5186               	movf	_oldSpeed& (0+255),w,b
  4340  001346  5D88               	subwf	_currentSpeed& (0+255),w,b
  4341  001348  6FC4               	movwf	calcMotorPow@oldSpeedDelta& (0+255),b
  4342  00134A  5187               	movf	(_oldSpeed+1)& (0+255),w,b
  4343  00134C  5989               	subwfb	(_currentSpeed+1)& (0+255),w,b
  4344  00134E  6FC5               	movwf	(calcMotorPow@oldSpeedDelta+1)& (0+255),b
  4345  001350                     
  4346                           ; BSR set to: 0
  4347                           ;main.c: 346:     addMPow = (int8_t) ((0.020) * (setSpeedDelta - (oldSpeedDelta / (2))))
      +                          ;
  4348  001350  0E0A               	movlw	10
  4349  001352  6E2E               	movwf	___flmul@a^0,c
  4350  001354  0ED7               	movlw	215
  4351  001356  6E2F               	movwf	(___flmul@a+1)^0,c
  4352  001358  0EA3               	movlw	163
  4353  00135A  6E30               	movwf	(___flmul@a+2)^0,c
  4354  00135C  0E3C               	movlw	60
  4355  00135E  6E31               	movwf	(___flmul@a+3)^0,c
  4356  001360  0E00               	movlw	0
  4357  001362  6E17               	movwf	(___awdiv@divisor+1)^0,c
  4358  001364  0E02               	movlw	2
  4359  001366  6E16               	movwf	___awdiv@divisor^0,c
  4360  001368  C0C4  F014         	movff	calcMotorPow@oldSpeedDelta,___awdiv@dividend
  4361  00136C  C0C5  F015         	movff	calcMotorPow@oldSpeedDelta+1,___awdiv@dividend+1
  4362  001370  EC99  F00E         	call	___awdiv	;wreg free
  4363  001374  C0C2  F0C0         	movff	calcMotorPow@setSpeedDelta,??_calcMotorPow
  4364  001378  C0C3  F0C1         	movff	calcMotorPow@setSpeedDelta+1,??_calcMotorPow+1
  4365  00137C  5014               	movf	?___awdiv^0,w,c
  4366  00137E  0100               	movlb	0	; () banked
  4367  001380  5FC0               	subwf	??_calcMotorPow& (0+255),f,b
  4368  001382  5015               	movf	(?___awdiv+1)^0,w,c
  4369  001384  5BC1               	subwfb	(??_calcMotorPow+1)& (0+255),f,b
  4370  001386  C0C0  F01C         	movff	??_calcMotorPow,___xxtofl@val
  4371  00138A  C0C1  F01D         	movff	??_calcMotorPow+1,___xxtofl@val+1
  4372  00138E  0E00               	movlw	0
  4373  001390  BE1D               	btfsc	(___xxtofl@val+1)^0,7,c
  4374  001392  0EFF               	movlw	-1
  4375  001394  6E1E               	movwf	(___xxtofl@val+2)^0,c
  4376  001396  6E1F               	movwf	(___xxtofl@val+3)^0,c
  4377  001398  0E01               	movlw	1
  4378  00139A  ECE9  F007         	call	___xxtofl
  4379  00139E  C01C  F02A         	movff	?___xxtofl,___flmul@b
  4380  0013A2  C01D  F02B         	movff	?___xxtofl+1,___flmul@b+1
  4381  0013A6  C01E  F02C         	movff	?___xxtofl+2,___flmul@b+2
  4382  0013AA  C01F  F02D         	movff	?___xxtofl+3,___flmul@b+3
  4383  0013AE  ECBA  F002         	call	___flmul	;wreg free
  4384  0013B2  C02A  F0B6         	movff	?___flmul,___fltol@f1
  4385  0013B6  C02B  F0B7         	movff	?___flmul+1,___fltol@f1+1
  4386  0013BA  C02C  F0B8         	movff	?___flmul+2,___fltol@f1+2
  4387  0013BE  C02D  F0B9         	movff	?___flmul+3,___fltol@f1+3
  4388  0013C2  ECDC  F00B         	call	___fltol	;wreg free
  4389  0013C6  0100               	movlb	0	; () banked
  4390  0013C8  51B6               	movf	?___fltol& (0+255),w,b
  4391  0013CA  6FC6               	movwf	calcMotorPow@addMPow& (0+255),b
  4392  0013CC                     
  4393                           ; BSR set to: 0
  4394                           ;main.c: 348:     if (addMPow > (5)) {
  4395  0013CC  51C6               	movf	calcMotorPow@addMPow& (0+255),w,b
  4396  0013CE  0A80               	xorlw	128
  4397  0013D0  0F7A               	addlw	-134
  4398  0013D2  A0D8               	btfss	status,0,c
  4399  0013D4  EFEE  F009         	goto	u4591
  4400  0013D8  EFF0  F009         	goto	u4590
  4401  0013DC                     u4591:
  4402  0013DC  EFF4  F009         	goto	l5819
  4403  0013E0                     u4590:
  4404  0013E0                     
  4405                           ; BSR set to: 0
  4406                           ;main.c: 349:         addMPow = (5);
  4407  0013E0  0E05               	movlw	5
  4408  0013E2  6FC6               	movwf	calcMotorPow@addMPow& (0+255),b
  4409                           
  4410                           ;main.c: 350:     } else if (addMPow < -(5)) {
  4411  0013E4  EF00  F00A         	goto	l5823
  4412  0013E8                     l5819:
  4413                           
  4414                           ; BSR set to: 0
  4415  0013E8  51C6               	movf	calcMotorPow@addMPow& (0+255),w,b
  4416  0013EA  0A80               	xorlw	128
  4417  0013EC  0F85               	addlw	133
  4418  0013EE  B0D8               	btfsc	status,0,c
  4419  0013F0  EFFC  F009         	goto	u4601
  4420  0013F4  EFFE  F009         	goto	u4600
  4421  0013F8                     u4601:
  4422  0013F8  EF00  F00A         	goto	l5823
  4423  0013FC                     u4600:
  4424  0013FC                     
  4425                           ; BSR set to: 0
  4426                           ;main.c: 351:         addMPow = -(5);
  4427  0013FC  0EFB               	movlw	251
  4428  0013FE  6FC6               	movwf	calcMotorPow@addMPow& (0+255),b
  4429  001400                     l5823:
  4430                           
  4431                           ; BSR set to: 0
  4432                           ;main.c: 354:     actMotorPow += addMPow;
  4433  001400  51C6               	movf	calcMotorPow@addMPow& (0+255),w,b
  4434  001402  2784               	addwf	_actMotorPow& (0+255),f,b
  4435  001404  0E00               	movlw	0
  4436  001406  BFC6               	btfsc	calcMotorPow@addMPow& (0+255),7,b
  4437  001408  0EFF               	movlw	255
  4438  00140A  2385               	addwfc	(_actMotorPow+1)& (0+255),f,b
  4439  00140C                     
  4440                           ; BSR set to: 0
  4441                           ;main.c: 356:     if (actMotorPow > (800)) {
  4442  00140C  BF85               	btfsc	(_actMotorPow+1)& (0+255),7,b
  4443  00140E  EF12  F00A         	goto	u4611
  4444  001412  0E21               	movlw	33
  4445  001414  5D84               	subwf	_actMotorPow& (0+255),w,b
  4446  001416  0E03               	movlw	3
  4447  001418  5985               	subwfb	(_actMotorPow+1)& (0+255),w,b
  4448  00141A  A0D8               	btfss	status,0,c
  4449  00141C  EF12  F00A         	goto	u4611
  4450  001420  EF14  F00A         	goto	u4610
  4451  001424                     u4611:
  4452  001424  EF1A  F00A         	goto	l5829
  4453  001428                     u4610:
  4454  001428                     
  4455                           ; BSR set to: 0
  4456                           ;main.c: 357:         actMotorPow = (800);
  4457  001428  0E03               	movlw	3
  4458  00142A  6F85               	movwf	(_actMotorPow+1)& (0+255),b
  4459  00142C  0E20               	movlw	32
  4460  00142E  6F84               	movwf	_actMotorPow& (0+255),b
  4461                           
  4462                           ;main.c: 358:     } else if (actMotorPow < (-400)) {
  4463  001430  EF2C  F00A         	goto	l5833
  4464  001434                     l5829:
  4465                           
  4466                           ; BSR set to: 0
  4467  001434  AF85               	btfss	(_actMotorPow+1)& (0+255),7,b
  4468  001436  EF26  F00A         	goto	u4621
  4469  00143A  0E70               	movlw	112
  4470  00143C  5D84               	subwf	_actMotorPow& (0+255),w,b
  4471  00143E  0EFE               	movlw	254
  4472  001440  5985               	subwfb	(_actMotorPow+1)& (0+255),w,b
  4473  001442  B0D8               	btfsc	status,0,c
  4474  001444  EF26  F00A         	goto	u4621
  4475  001448  EF28  F00A         	goto	u4620
  4476  00144C                     u4621:
  4477  00144C  EF2C  F00A         	goto	l5833
  4478  001450                     u4620:
  4479  001450                     
  4480                           ; BSR set to: 0
  4481                           ;main.c: 359:         actMotorPow = (-400);
  4482  001450  0EFE               	movlw	254
  4483  001452  6F85               	movwf	(_actMotorPow+1)& (0+255),b
  4484  001454  0E70               	movlw	112
  4485  001456  6F84               	movwf	_actMotorPow& (0+255),b
  4486  001458                     l5833:
  4487                           
  4488                           ; BSR set to: 0
  4489                           ;main.c: 362:     setMotor(actMotorPow);
  4490  001458  C084  F018         	movff	_actMotorPow,setMotor@motorPower
  4491  00145C  C085  F019         	movff	_actMotorPow+1,setMotor@motorPower+1
  4492  001460  EC60  F00D         	call	_setMotor	;wreg free
  4493  001464                     
  4494                           ;main.c: 364:     oldSpeed = currentSpeed;
  4495  001464  C088  F086         	movff	_currentSpeed,_oldSpeed
  4496  001468  C089  F087         	movff	_currentSpeed+1,_oldSpeed+1
  4497  00146C  0012               	return		;funcret
  4498  00146E                     __end_of_calcMotorPow:
  4499                           	callstack 0
  4500                           
  4501 ;; *************** function _setMotor *****************
  4502 ;; Defined at:
  4503 ;;		line 367 in file "main.c"
  4504 ;; Parameters:    Size  Location     Type
  4505 ;;  motorPower      2   23[COMRAM] short 
  4506 ;; Auto vars:     Size  Location     Type
  4507 ;;		None
  4508 ;; Return value:  Size  Location     Type
  4509 ;;                  1    wreg      void 
  4510 ;; Registers used:
  4511 ;;		wreg, status,2, status,0, cstack
  4512 ;; Tracked objects:
  4513 ;;		On entry : 0/0
  4514 ;;		On exit  : 0/0
  4515 ;;		Unchanged: 0/0
  4516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4517 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4519 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4520 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4521 ;;Total ram usage:        4 bytes
  4522 ;; Hardware stack levels used: 1
  4523 ;; Hardware stack levels required when called: 9
  4524 ;; This function calls:
  4525 ;;		_PWM7_LoadDutyValue
  4526 ;;		_PWM8_LoadDutyValue
  4527 ;; This function is called by:
  4528 ;;		_loop
  4529 ;;		_startAccell
  4530 ;;		_calcMotorPow
  4531 ;; This function uses a non-reentrant model
  4532 ;;
  4533                           
  4534                           	psect	text15
  4535  001AC0                     __ptext15:
  4536                           	callstack 0
  4537  001AC0                     _setMotor:
  4538                           	callstack 19
  4539  001AC0                     
  4540                           ;main.c: 368:     if (motorPower >= (40)) {
  4541  001AC0  BE19               	btfsc	(setMotor@motorPower+1)^0,7,c
  4542  001AC2  EF6C  F00D         	goto	u2151
  4543  001AC6  5019               	movf	(setMotor@motorPower+1)^0,w,c
  4544  001AC8  E109               	bnz	u2150
  4545  001ACA  0E28               	movlw	40
  4546  001ACC  5C18               	subwf	setMotor@motorPower^0,w,c
  4547  001ACE  A0D8               	btfss	status,0,c
  4548  001AD0  EF6C  F00D         	goto	u2151
  4549  001AD4  EF6E  F00D         	goto	u2150
  4550  001AD8                     u2151:
  4551  001AD8  EF8E  F00D         	goto	l3995
  4552  001ADC                     u2150:
  4553  001ADC                     
  4554                           ;main.c: 369:         if (motorPower > (800)) {
  4555  001ADC  BE19               	btfsc	(setMotor@motorPower+1)^0,7,c
  4556  001ADE  EF7A  F00D         	goto	u2161
  4557  001AE2  0E21               	movlw	33
  4558  001AE4  5C18               	subwf	setMotor@motorPower^0,w,c
  4559  001AE6  0E03               	movlw	3
  4560  001AE8  5819               	subwfb	(setMotor@motorPower+1)^0,w,c
  4561  001AEA  A0D8               	btfss	status,0,c
  4562  001AEC  EF7A  F00D         	goto	u2161
  4563  001AF0  EF7C  F00D         	goto	u2160
  4564  001AF4                     u2161:
  4565  001AF4  EF80  F00D         	goto	l3991
  4566  001AF8                     u2160:
  4567  001AF8                     
  4568                           ;main.c: 370:             motorPower = (800);
  4569  001AF8  0E03               	movlw	3
  4570  001AFA  6E19               	movwf	(setMotor@motorPower+1)^0,c
  4571  001AFC  0E20               	movlw	32
  4572  001AFE  6E18               	movwf	setMotor@motorPower^0,c
  4573  001B00                     l3991:
  4574                           
  4575                           ;main.c: 372:         PWM7_LoadDutyValue((uint16_t) (motorPower));
  4576  001B00  C018  F014         	movff	setMotor@motorPower,PWM7_LoadDutyValue@dutyValue
  4577  001B04  C019  F015         	movff	setMotor@motorPower+1,PWM7_LoadDutyValue@dutyValue+1
  4578  001B08  ECD3  F011         	call	_PWM7_LoadDutyValue	;wreg free
  4579  001B0C                     
  4580                           ;main.c: 373:         PWM8_LoadDutyValue(0);
  4581  001B0C  0E00               	movlw	0
  4582  001B0E  6E15               	movwf	(PWM8_LoadDutyValue@dutyValue+1)^0,c
  4583  001B10  0E00               	movlw	0
  4584  001B12  6E14               	movwf	PWM8_LoadDutyValue@dutyValue^0,c
  4585  001B14  ECB9  F011         	call	_PWM8_LoadDutyValue	;wreg free
  4586                           
  4587                           ;main.c: 374:     } else if (motorPower <= -(40)) {
  4588  001B18  EFD0  F00D         	goto	l1372
  4589  001B1C                     l3995:
  4590  001B1C  AE19               	btfss	(setMotor@motorPower+1)^0,7,c
  4591  001B1E  EF9A  F00D         	goto	u2171
  4592  001B22  0ED9               	movlw	217
  4593  001B24  5C18               	subwf	setMotor@motorPower^0,w,c
  4594  001B26  0EFF               	movlw	255
  4595  001B28  5819               	subwfb	(setMotor@motorPower+1)^0,w,c
  4596  001B2A  B0D8               	btfsc	status,0,c
  4597  001B2C  EF9A  F00D         	goto	u2171
  4598  001B30  EF9C  F00D         	goto	u2170
  4599  001B34                     u2171:
  4600  001B34  EFC4  F00D         	goto	l4005
  4601  001B38                     u2170:
  4602  001B38                     
  4603                           ;main.c: 375:         if (motorPower < (-400)) {
  4604  001B38  AE19               	btfss	(setMotor@motorPower+1)^0,7,c
  4605  001B3A  EFA8  F00D         	goto	u2181
  4606  001B3E  0E70               	movlw	112
  4607  001B40  5C18               	subwf	setMotor@motorPower^0,w,c
  4608  001B42  0EFE               	movlw	254
  4609  001B44  5819               	subwfb	(setMotor@motorPower+1)^0,w,c
  4610  001B46  B0D8               	btfsc	status,0,c
  4611  001B48  EFA8  F00D         	goto	u2181
  4612  001B4C  EFAA  F00D         	goto	u2180
  4613  001B50                     u2181:
  4614  001B50  EFAE  F00D         	goto	l4001
  4615  001B54                     u2180:
  4616  001B54                     
  4617                           ;main.c: 376:             motorPower = (-400);
  4618  001B54  0EFE               	movlw	254
  4619  001B56  6E19               	movwf	(setMotor@motorPower+1)^0,c
  4620  001B58  0E70               	movlw	112
  4621  001B5A  6E18               	movwf	setMotor@motorPower^0,c
  4622  001B5C                     l4001:
  4623                           
  4624                           ;main.c: 378:         PWM7_LoadDutyValue(0);
  4625  001B5C  0E00               	movlw	0
  4626  001B5E  6E15               	movwf	(PWM7_LoadDutyValue@dutyValue+1)^0,c
  4627  001B60  0E00               	movlw	0
  4628  001B62  6E14               	movwf	PWM7_LoadDutyValue@dutyValue^0,c
  4629  001B64  ECD3  F011         	call	_PWM7_LoadDutyValue	;wreg free
  4630  001B68                     
  4631                           ;main.c: 379:         PWM8_LoadDutyValue((uint16_t) (-motorPower));
  4632  001B68  C018  F01A         	movff	setMotor@motorPower,??_setMotor
  4633  001B6C  C019  F01B         	movff	setMotor@motorPower+1,??_setMotor+1
  4634  001B70  1E1A               	comf	??_setMotor^0,f,c
  4635  001B72  1E1B               	comf	(??_setMotor+1)^0,f,c
  4636  001B74  4A1A               	infsnz	??_setMotor^0,f,c
  4637  001B76  2A1B               	incf	(??_setMotor+1)^0,f,c
  4638  001B78  C01A  F014         	movff	??_setMotor,PWM8_LoadDutyValue@dutyValue
  4639  001B7C  C01B  F015         	movff	??_setMotor+1,PWM8_LoadDutyValue@dutyValue+1
  4640  001B80  ECB9  F011         	call	_PWM8_LoadDutyValue	;wreg free
  4641                           
  4642                           ;main.c: 380:     } else {
  4643  001B84  EFD0  F00D         	goto	l1372
  4644  001B88                     l4005:
  4645                           
  4646                           ;main.c: 382:         PWM7_LoadDutyValue(0);
  4647  001B88  0E00               	movlw	0
  4648  001B8A  6E15               	movwf	(PWM7_LoadDutyValue@dutyValue+1)^0,c
  4649  001B8C  0E00               	movlw	0
  4650  001B8E  6E14               	movwf	PWM7_LoadDutyValue@dutyValue^0,c
  4651  001B90  ECD3  F011         	call	_PWM7_LoadDutyValue	;wreg free
  4652                           
  4653                           ;main.c: 383:         PWM8_LoadDutyValue(0);
  4654  001B94  0E00               	movlw	0
  4655  001B96  6E15               	movwf	(PWM8_LoadDutyValue@dutyValue+1)^0,c
  4656  001B98  0E00               	movlw	0
  4657  001B9A  6E14               	movwf	PWM8_LoadDutyValue@dutyValue^0,c
  4658  001B9C  ECB9  F011         	call	_PWM8_LoadDutyValue	;wreg free
  4659  001BA0                     l1372:
  4660  001BA0  0012               	return		;funcret
  4661  001BA2                     __end_of_setMotor:
  4662                           	callstack 0
  4663                           
  4664 ;; *************** function _PWM8_LoadDutyValue *****************
  4665 ;; Defined at:
  4666 ;;		line 74 in file "mcc_generated_files/pwm8.c"
  4667 ;; Parameters:    Size  Location     Type
  4668 ;;  dutyValue       2   19[COMRAM] unsigned short 
  4669 ;; Auto vars:     Size  Location     Type
  4670 ;;		None
  4671 ;; Return value:  Size  Location     Type
  4672 ;;                  1    wreg      void 
  4673 ;; Registers used:
  4674 ;;		wreg, status,2, status,0
  4675 ;; Tracked objects:
  4676 ;;		On entry : 0/0
  4677 ;;		On exit  : 0/0
  4678 ;;		Unchanged: 0/0
  4679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4680 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4682 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4683 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4684 ;;Total ram usage:        4 bytes
  4685 ;; Hardware stack levels used: 1
  4686 ;; Hardware stack levels required when called: 8
  4687 ;; This function calls:
  4688 ;;		Nothing
  4689 ;; This function is called by:
  4690 ;;		_setMotor
  4691 ;; This function uses a non-reentrant model
  4692 ;;
  4693                           
  4694                           	psect	text16
  4695  002372                     __ptext16:
  4696                           	callstack 0
  4697  002372                     _PWM8_LoadDutyValue:
  4698                           	callstack 19
  4699  002372                     
  4700                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  4701  002372  C014  F016         	movff	PWM8_LoadDutyValue@dutyValue,??_PWM8_LoadDutyValue
  4702  002376  C015  F017         	movff	PWM8_LoadDutyValue@dutyValue+1,??_PWM8_LoadDutyValue+1
  4703  00237A  90D8               	bcf	status,0,c
  4704  00237C  3217               	rrcf	(??_PWM8_LoadDutyValue+1)^0,f,c
  4705  00237E  3216               	rrcf	??_PWM8_LoadDutyValue^0,f,c
  4706  002380  90D8               	bcf	status,0,c
  4707  002382  3217               	rrcf	(??_PWM8_LoadDutyValue+1)^0,f,c
  4708  002384  3216               	rrcf	??_PWM8_LoadDutyValue^0,f,c
  4709  002386  5016               	movf	??_PWM8_LoadDutyValue^0,w,c
  4710  002388  6E61               	movwf	97,c	;volatile
  4711                           
  4712                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
  4713  00238A  C014  F016         	movff	PWM8_LoadDutyValue@dutyValue,??_PWM8_LoadDutyValue
  4714  00238E  0E03               	movlw	3
  4715  002390  1616               	andwf	??_PWM8_LoadDutyValue^0,f,c
  4716  002392  0E06               	movlw	6
  4717  002394  6E17               	movwf	(??_PWM8_LoadDutyValue+1)^0,c
  4718  002396                     u2015:
  4719  002396  90D8               	bcf	status,0,c
  4720  002398  3616               	rlcf	??_PWM8_LoadDutyValue^0,f,c
  4721  00239A  2E17               	decfsz	(??_PWM8_LoadDutyValue+1)^0,f,c
  4722  00239C  EFCB  F011         	goto	u2015
  4723  0023A0  5016               	movf	??_PWM8_LoadDutyValue^0,w,c
  4724  0023A2  6E60               	movwf	96,c	;volatile
  4725  0023A4  0012               	return		;funcret
  4726  0023A6                     __end_of_PWM8_LoadDutyValue:
  4727                           	callstack 0
  4728                           
  4729 ;; *************** function _PWM7_LoadDutyValue *****************
  4730 ;; Defined at:
  4731 ;;		line 74 in file "mcc_generated_files/pwm7.c"
  4732 ;; Parameters:    Size  Location     Type
  4733 ;;  dutyValue       2   19[COMRAM] unsigned short 
  4734 ;; Auto vars:     Size  Location     Type
  4735 ;;		None
  4736 ;; Return value:  Size  Location     Type
  4737 ;;                  1    wreg      void 
  4738 ;; Registers used:
  4739 ;;		wreg, status,2, status,0
  4740 ;; Tracked objects:
  4741 ;;		On entry : 0/0
  4742 ;;		On exit  : 0/0
  4743 ;;		Unchanged: 0/0
  4744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4745 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4747 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4748 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4749 ;;Total ram usage:        4 bytes
  4750 ;; Hardware stack levels used: 1
  4751 ;; Hardware stack levels required when called: 8
  4752 ;; This function calls:
  4753 ;;		Nothing
  4754 ;; This function is called by:
  4755 ;;		_setMotor
  4756 ;; This function uses a non-reentrant model
  4757 ;;
  4758                           
  4759                           	psect	text17
  4760  0023A6                     __ptext17:
  4761                           	callstack 0
  4762  0023A6                     _PWM7_LoadDutyValue:
  4763                           	callstack 19
  4764  0023A6                     
  4765                           ;mcc_generated_files/pwm7.c: 74:  void PWM7_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm7.c: 75:  {;mcc_generated_files/pwm7.c: 77:      PWM7DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  4766  0023A6  C014  F016         	movff	PWM7_LoadDutyValue@dutyValue,??_PWM7_LoadDutyValue
  4767  0023AA  C015  F017         	movff	PWM7_LoadDutyValue@dutyValue+1,??_PWM7_LoadDutyValue+1
  4768  0023AE  90D8               	bcf	status,0,c
  4769  0023B0  3217               	rrcf	(??_PWM7_LoadDutyValue+1)^0,f,c
  4770  0023B2  3216               	rrcf	??_PWM7_LoadDutyValue^0,f,c
  4771  0023B4  90D8               	bcf	status,0,c
  4772  0023B6  3217               	rrcf	(??_PWM7_LoadDutyValue+1)^0,f,c
  4773  0023B8  3216               	rrcf	??_PWM7_LoadDutyValue^0,f,c
  4774  0023BA  5016               	movf	??_PWM7_LoadDutyValue^0,w,c
  4775  0023BC  6E65               	movwf	101,c	;volatile
  4776                           
  4777                           ;mcc_generated_files/pwm7.c: 80:      PWM7DCL = (dutyValue & 0x0003)<<6;
  4778  0023BE  C014  F016         	movff	PWM7_LoadDutyValue@dutyValue,??_PWM7_LoadDutyValue
  4779  0023C2  0E03               	movlw	3
  4780  0023C4  1616               	andwf	??_PWM7_LoadDutyValue^0,f,c
  4781  0023C6  0E06               	movlw	6
  4782  0023C8  6E17               	movwf	(??_PWM7_LoadDutyValue+1)^0,c
  4783  0023CA                     u2005:
  4784  0023CA  90D8               	bcf	status,0,c
  4785  0023CC  3616               	rlcf	??_PWM7_LoadDutyValue^0,f,c
  4786  0023CE  2E17               	decfsz	(??_PWM7_LoadDutyValue+1)^0,f,c
  4787  0023D0  EFE5  F011         	goto	u2005
  4788  0023D4  5016               	movf	??_PWM7_LoadDutyValue^0,w,c
  4789  0023D6  6E64               	movwf	100,c	;volatile
  4790  0023D8  0012               	return		;funcret
  4791  0023DA                     __end_of_PWM7_LoadDutyValue:
  4792                           	callstack 0
  4793                           
  4794 ;; *************** function _actSpeed *****************
  4795 ;; Defined at:
  4796 ;;		line 66 in file "main.c"
  4797 ;; Parameters:    Size  Location     Type
  4798 ;;		None
  4799 ;; Auto vars:     Size  Location     Type
  4800 ;;  speed           2   35[COMRAM] short 
  4801 ;; Return value:  Size  Location     Type
  4802 ;;                  2   33[COMRAM] short 
  4803 ;; Registers used:
  4804 ;;		wreg, status,2, status,0, cstack
  4805 ;; Tracked objects:
  4806 ;;		On entry : 0/0
  4807 ;;		On exit  : 0/0
  4808 ;;		Unchanged: 0/0
  4809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4810 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4811 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4813 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4814 ;;Total ram usage:        4 bytes
  4815 ;; Hardware stack levels used: 1
  4816 ;; Hardware stack levels required when called: 9
  4817 ;; This function calls:
  4818 ;;		___aldiv
  4819 ;; This function is called by:
  4820 ;;		_calcMotorPow
  4821 ;; This function uses a non-reentrant model
  4822 ;;
  4823                           
  4824                           	psect	text18
  4825  001E9C                     __ptext18:
  4826                           	callstack 0
  4827  001E9C                     _actSpeed:
  4828                           	callstack 19
  4829  001E9C                     
  4830                           ;main.c: 67:     int16_t speed = 0;
  4831  001E9C  0E00               	movlw	0
  4832  001E9E  6E25               	movwf	(actSpeed@speed+1)^0,c
  4833  001EA0  0E00               	movlw	0
  4834  001EA2  6E24               	movwf	actSpeed@speed^0,c
  4835  001EA4                     
  4836                           ;main.c: 68:     if (smtPeriod) {
  4837  001EA4  5046               	movf	_smtPeriod^0,w,c	;volatile
  4838  001EA6  1047               	iorwf	(_smtPeriod+1)^0,w,c	;volatile
  4839  001EA8  1048               	iorwf	(_smtPeriod+2)^0,w,c	;volatile
  4840  001EAA  1049               	iorwf	(_smtPeriod+3)^0,w,c	;volatile
  4841  001EAC  B4D8               	btfsc	status,2,c
  4842  001EAE  EF5B  F00F         	goto	u2231
  4843  001EB2  EF5D  F00F         	goto	u2230
  4844  001EB6                     u2231:
  4845  001EB6  EF93  F00F         	goto	l4073
  4846  001EBA                     u2230:
  4847  001EBA                     
  4848                           ;main.c: 69:         if (CLC3CONbits.LC3OUT) {
  4849  001EBA  013C               	movlb	60	; () banked
  4850  001EBC  AB60               	btfss	96,5,b	;volatile
  4851  001EBE  EF63  F00F         	goto	u2241
  4852  001EC2  EF65  F00F         	goto	u2240
  4853  001EC6                     u2241:
  4854  001EC6  EF7D  F00F         	goto	l4071
  4855  001ECA                     u2240:
  4856  001ECA                     
  4857                           ; BSR set to: 60
  4858                           ;main.c: 70:             speed = (int16_t) ((int32_t) (500000 / (int32_t) smtPeriod));
  4859  001ECA  0E20               	movlw	32
  4860  001ECC  6E14               	movwf	___aldiv@dividend^0,c
  4861  001ECE  0EA1               	movlw	161
  4862  001ED0  6E15               	movwf	(___aldiv@dividend+1)^0,c
  4863  001ED2  0E07               	movlw	7
  4864  001ED4  6E16               	movwf	(___aldiv@dividend+2)^0,c
  4865  001ED6  0E00               	movlw	0
  4866  001ED8  6E17               	movwf	(___aldiv@dividend+3)^0,c
  4867  001EDA  C046  F018         	movff	_smtPeriod,___aldiv@divisor	;volatile
  4868  001EDE  C047  F019         	movff	_smtPeriod+1,___aldiv@divisor+1	;volatile
  4869  001EE2  C048  F01A         	movff	_smtPeriod+2,___aldiv@divisor+2	;volatile
  4870  001EE6  C049  F01B         	movff	_smtPeriod+3,___aldiv@divisor+3	;volatile
  4871  001EEA  EC56  F00B         	call	___aldiv	;wreg free
  4872  001EEE  C014  F024         	movff	?___aldiv,actSpeed@speed
  4873  001EF2  C015  F025         	movff	?___aldiv+1,actSpeed@speed+1
  4874                           
  4875                           ;main.c: 71:         } else {
  4876  001EF6  EF93  F00F         	goto	l4073
  4877  001EFA                     l4071:
  4878                           
  4879                           ; BSR set to: 60
  4880                           ;main.c: 72:             speed = (int16_t) ((int32_t) (-500000 / (int32_t) smtPeriod));
  4881  001EFA  0EE0               	movlw	224
  4882  001EFC  6E14               	movwf	___aldiv@dividend^0,c
  4883  001EFE  0E5E               	movlw	94
  4884  001F00  6E15               	movwf	(___aldiv@dividend+1)^0,c
  4885  001F02  0EF8               	movlw	248
  4886  001F04  6E16               	movwf	(___aldiv@dividend+2)^0,c
  4887  001F06  0EFF               	movlw	255
  4888  001F08  6E17               	movwf	(___aldiv@dividend+3)^0,c
  4889  001F0A  C046  F018         	movff	_smtPeriod,___aldiv@divisor	;volatile
  4890  001F0E  C047  F019         	movff	_smtPeriod+1,___aldiv@divisor+1	;volatile
  4891  001F12  C048  F01A         	movff	_smtPeriod+2,___aldiv@divisor+2	;volatile
  4892  001F16  C049  F01B         	movff	_smtPeriod+3,___aldiv@divisor+3	;volatile
  4893  001F1A  EC56  F00B         	call	___aldiv	;wreg free
  4894  001F1E  C014  F024         	movff	?___aldiv,actSpeed@speed
  4895  001F22  C015  F025         	movff	?___aldiv+1,actSpeed@speed+1
  4896  001F26                     l4073:
  4897                           
  4898                           ;main.c: 75:     return speed;
  4899  001F26  C024  F022         	movff	actSpeed@speed,?_actSpeed
  4900  001F2A  C025  F023         	movff	actSpeed@speed+1,?_actSpeed+1
  4901  001F2E  0012               	return		;funcret
  4902  001F30                     __end_of_actSpeed:
  4903                           	callstack 0
  4904                           
  4905 ;; *************** function ___aldiv *****************
  4906 ;; Defined at:
  4907 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aldiv.c"
  4908 ;; Parameters:    Size  Location     Type
  4909 ;;  dividend        4   19[COMRAM] long 
  4910 ;;  divisor         4   23[COMRAM] long 
  4911 ;; Auto vars:     Size  Location     Type
  4912 ;;  quotient        4   29[COMRAM] long 
  4913 ;;  sign            1   28[COMRAM] unsigned char 
  4914 ;;  counter         1   27[COMRAM] unsigned char 
  4915 ;; Return value:  Size  Location     Type
  4916 ;;                  4   19[COMRAM] long 
  4917 ;; Registers used:
  4918 ;;		wreg, status,2, status,0
  4919 ;; Tracked objects:
  4920 ;;		On entry : 0/0
  4921 ;;		On exit  : 0/0
  4922 ;;		Unchanged: 0/0
  4923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4924 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4925 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4927 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4928 ;;Total ram usage:       14 bytes
  4929 ;; Hardware stack levels used: 1
  4930 ;; Hardware stack levels required when called: 8
  4931 ;; This function calls:
  4932 ;;		Nothing
  4933 ;; This function is called by:
  4934 ;;		_actSpeed
  4935 ;; This function uses a non-reentrant model
  4936 ;;
  4937                           
  4938                           	psect	text19
  4939  0016AC                     __ptext19:
  4940                           	callstack 0
  4941  0016AC                     ___aldiv:
  4942                           	callstack 19
  4943  0016AC  0E00               	movlw	0
  4944  0016AE  6E1D               	movwf	___aldiv@sign^0,c
  4945  0016B0  BE1B               	btfsc	(___aldiv@divisor+3)^0,7,c
  4946  0016B2  EF5F  F00B         	goto	u2060
  4947  0016B6  EF5D  F00B         	goto	u2061
  4948  0016BA                     u2061:
  4949  0016BA  EF69  F00B         	goto	l3895
  4950  0016BE                     u2060:
  4951  0016BE  1E1B               	comf	(___aldiv@divisor+3)^0,f,c
  4952  0016C0  1E1A               	comf	(___aldiv@divisor+2)^0,f,c
  4953  0016C2  1E19               	comf	(___aldiv@divisor+1)^0,f,c
  4954  0016C4  6C18               	negf	___aldiv@divisor^0,c
  4955  0016C6  0E00               	movlw	0
  4956  0016C8  2219               	addwfc	(___aldiv@divisor+1)^0,f,c
  4957  0016CA  221A               	addwfc	(___aldiv@divisor+2)^0,f,c
  4958  0016CC  221B               	addwfc	(___aldiv@divisor+3)^0,f,c
  4959  0016CE  0E01               	movlw	1
  4960  0016D0  6E1D               	movwf	___aldiv@sign^0,c
  4961  0016D2                     l3895:
  4962  0016D2  BE17               	btfsc	(___aldiv@dividend+3)^0,7,c
  4963  0016D4  EF70  F00B         	goto	u2070
  4964  0016D8  EF6E  F00B         	goto	u2071
  4965  0016DC                     u2071:
  4966  0016DC  EF7A  F00B         	goto	l3901
  4967  0016E0                     u2070:
  4968  0016E0  1E17               	comf	(___aldiv@dividend+3)^0,f,c
  4969  0016E2  1E16               	comf	(___aldiv@dividend+2)^0,f,c
  4970  0016E4  1E15               	comf	(___aldiv@dividend+1)^0,f,c
  4971  0016E6  6C14               	negf	___aldiv@dividend^0,c
  4972  0016E8  0E00               	movlw	0
  4973  0016EA  2215               	addwfc	(___aldiv@dividend+1)^0,f,c
  4974  0016EC  2216               	addwfc	(___aldiv@dividend+2)^0,f,c
  4975  0016EE  2217               	addwfc	(___aldiv@dividend+3)^0,f,c
  4976  0016F0  0E01               	movlw	1
  4977  0016F2  1A1D               	xorwf	___aldiv@sign^0,f,c
  4978  0016F4                     l3901:
  4979  0016F4  0E00               	movlw	0
  4980  0016F6  6E1E               	movwf	___aldiv@quotient^0,c
  4981  0016F8  0E00               	movlw	0
  4982  0016FA  6E1F               	movwf	(___aldiv@quotient+1)^0,c
  4983  0016FC  0E00               	movlw	0
  4984  0016FE  6E20               	movwf	(___aldiv@quotient+2)^0,c
  4985  001700  0E00               	movlw	0
  4986  001702  6E21               	movwf	(___aldiv@quotient+3)^0,c
  4987  001704  5018               	movf	___aldiv@divisor^0,w,c
  4988  001706  1019               	iorwf	(___aldiv@divisor+1)^0,w,c
  4989  001708  101A               	iorwf	(___aldiv@divisor+2)^0,w,c
  4990  00170A  101B               	iorwf	(___aldiv@divisor+3)^0,w,c
  4991  00170C  B4D8               	btfsc	status,2,c
  4992  00170E  EF8B  F00B         	goto	u2081
  4993  001712  EF8D  F00B         	goto	u2080
  4994  001716                     u2081:
  4995  001716  EFC3  F00B         	goto	l3923
  4996  00171A                     u2080:
  4997  00171A  0E01               	movlw	1
  4998  00171C  6E1C               	movwf	___aldiv@counter^0,c
  4999  00171E  EF97  F00B         	goto	l3909
  5000  001722                     l3907:
  5001  001722  90D8               	bcf	status,0,c
  5002  001724  3618               	rlcf	___aldiv@divisor^0,f,c
  5003  001726  3619               	rlcf	(___aldiv@divisor+1)^0,f,c
  5004  001728  361A               	rlcf	(___aldiv@divisor+2)^0,f,c
  5005  00172A  361B               	rlcf	(___aldiv@divisor+3)^0,f,c
  5006  00172C  2A1C               	incf	___aldiv@counter^0,f,c
  5007  00172E                     l3909:
  5008  00172E  AE1B               	btfss	(___aldiv@divisor+3)^0,7,c
  5009  001730  EF9C  F00B         	goto	u2091
  5010  001734  EF9E  F00B         	goto	u2090
  5011  001738                     u2091:
  5012  001738  EF91  F00B         	goto	l3907
  5013  00173C                     u2090:
  5014  00173C                     l3911:
  5015  00173C  90D8               	bcf	status,0,c
  5016  00173E  361E               	rlcf	___aldiv@quotient^0,f,c
  5017  001740  361F               	rlcf	(___aldiv@quotient+1)^0,f,c
  5018  001742  3620               	rlcf	(___aldiv@quotient+2)^0,f,c
  5019  001744  3621               	rlcf	(___aldiv@quotient+3)^0,f,c
  5020  001746  5018               	movf	___aldiv@divisor^0,w,c
  5021  001748  5C14               	subwf	___aldiv@dividend^0,w,c
  5022  00174A  5019               	movf	(___aldiv@divisor+1)^0,w,c
  5023  00174C  5815               	subwfb	(___aldiv@dividend+1)^0,w,c
  5024  00174E  501A               	movf	(___aldiv@divisor+2)^0,w,c
  5025  001750  5816               	subwfb	(___aldiv@dividend+2)^0,w,c
  5026  001752  501B               	movf	(___aldiv@divisor+3)^0,w,c
  5027  001754  5817               	subwfb	(___aldiv@dividend+3)^0,w,c
  5028  001756  A0D8               	btfss	status,0,c
  5029  001758  EFB0  F00B         	goto	u2101
  5030  00175C  EFB2  F00B         	goto	u2100
  5031  001760                     u2101:
  5032  001760  EFBB  F00B         	goto	l3919
  5033  001764                     u2100:
  5034  001764  5018               	movf	___aldiv@divisor^0,w,c
  5035  001766  5E14               	subwf	___aldiv@dividend^0,f,c
  5036  001768  5019               	movf	(___aldiv@divisor+1)^0,w,c
  5037  00176A  5A15               	subwfb	(___aldiv@dividend+1)^0,f,c
  5038  00176C  501A               	movf	(___aldiv@divisor+2)^0,w,c
  5039  00176E  5A16               	subwfb	(___aldiv@dividend+2)^0,f,c
  5040  001770  501B               	movf	(___aldiv@divisor+3)^0,w,c
  5041  001772  5A17               	subwfb	(___aldiv@dividend+3)^0,f,c
  5042  001774  801E               	bsf	___aldiv@quotient^0,0,c
  5043  001776                     l3919:
  5044  001776  90D8               	bcf	status,0,c
  5045  001778  321B               	rrcf	(___aldiv@divisor+3)^0,f,c
  5046  00177A  321A               	rrcf	(___aldiv@divisor+2)^0,f,c
  5047  00177C  3219               	rrcf	(___aldiv@divisor+1)^0,f,c
  5048  00177E  3218               	rrcf	___aldiv@divisor^0,f,c
  5049  001780  2E1C               	decfsz	___aldiv@counter^0,f,c
  5050  001782  EF9E  F00B         	goto	l3911
  5051  001786                     l3923:
  5052  001786  501D               	movf	___aldiv@sign^0,w,c
  5053  001788  B4D8               	btfsc	status,2,c
  5054  00178A  EFC9  F00B         	goto	u2111
  5055  00178E  EFCB  F00B         	goto	u2110
  5056  001792                     u2111:
  5057  001792  EFD3  F00B         	goto	l3927
  5058  001796                     u2110:
  5059  001796  1E21               	comf	(___aldiv@quotient+3)^0,f,c
  5060  001798  1E20               	comf	(___aldiv@quotient+2)^0,f,c
  5061  00179A  1E1F               	comf	(___aldiv@quotient+1)^0,f,c
  5062  00179C  6C1E               	negf	___aldiv@quotient^0,c
  5063  00179E  0E00               	movlw	0
  5064  0017A0  221F               	addwfc	(___aldiv@quotient+1)^0,f,c
  5065  0017A2  2220               	addwfc	(___aldiv@quotient+2)^0,f,c
  5066  0017A4  2221               	addwfc	(___aldiv@quotient+3)^0,f,c
  5067  0017A6                     l3927:
  5068  0017A6  C01E  F014         	movff	___aldiv@quotient,?___aldiv
  5069  0017AA  C01F  F015         	movff	___aldiv@quotient+1,?___aldiv+1
  5070  0017AE  C020  F016         	movff	___aldiv@quotient+2,?___aldiv+2
  5071  0017B2  C021  F017         	movff	___aldiv@quotient+3,?___aldiv+3
  5072  0017B6  0012               	return		;funcret
  5073  0017B8                     __end_of___aldiv:
  5074                           	callstack 0
  5075                           
  5076 ;; *************** function ___xxtofl *****************
  5077 ;; Defined at:
  5078 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  5079 ;; Parameters:    Size  Location     Type
  5080 ;;  sign            1    wreg     unsigned char 
  5081 ;;  val             4   27[COMRAM] long 
  5082 ;; Auto vars:     Size  Location     Type
  5083 ;;  sign            1   35[COMRAM] unsigned char 
  5084 ;;  arg             4   37[COMRAM] unsigned long 
  5085 ;;  exp             1   36[COMRAM] unsigned char 
  5086 ;; Return value:  Size  Location     Type
  5087 ;;                  4   27[COMRAM] unsigned char 
  5088 ;; Registers used:
  5089 ;;		wreg, status,2, status,0
  5090 ;; Tracked objects:
  5091 ;;		On entry : 0/0
  5092 ;;		On exit  : 0/0
  5093 ;;		Unchanged: 0/0
  5094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5095 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5096 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5097 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5098 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5099 ;;Total ram usage:       14 bytes
  5100 ;; Hardware stack levels used: 1
  5101 ;; Hardware stack levels required when called: 8
  5102 ;; This function calls:
  5103 ;;		Nothing
  5104 ;; This function is called by:
  5105 ;;		_loop
  5106 ;;		_startAccell
  5107 ;;		_calcSteering
  5108 ;;		_calcSpeed
  5109 ;;		_calcMotorPow
  5110 ;;		_checkBatt
  5111 ;; This function uses a non-reentrant model
  5112 ;;
  5113                           
  5114                           	psect	text20
  5115  000FD2                     __ptext20:
  5116                           	callstack 0
  5117  000FD2                     ___xxtofl:
  5118                           	callstack 20
  5119                           
  5120                           ;incstack = 0
  5121                           ;___xxtofl@sign stored from wreg
  5122  000FD2  6E24               	movwf	___xxtofl@sign^0,c
  5123  000FD4  5024               	movf	___xxtofl@sign^0,w,c
  5124  000FD6  B4D8               	btfsc	status,2,c
  5125  000FD8  EFF0  F007         	goto	u2951
  5126  000FDC  EFF2  F007         	goto	u2950
  5127  000FE0                     u2951:
  5128  000FE0  EF14  F008         	goto	l2047
  5129  000FE4                     u2950:
  5130  000FE4  BE1F               	btfsc	(___xxtofl@val+3)^0,7,c
  5131  000FE6  EFF9  F007         	goto	u2960
  5132  000FEA  EFF7  F007         	goto	u2961
  5133  000FEE                     u2961:
  5134  000FEE  EF14  F008         	goto	l2047
  5135  000FF2                     u2960:
  5136  000FF2  C01C  F020         	movff	___xxtofl@val,??___xxtofl
  5137  000FF6  C01D  F021         	movff	___xxtofl@val+1,??___xxtofl+1
  5138  000FFA  C01E  F022         	movff	___xxtofl@val+2,??___xxtofl+2
  5139  000FFE  C01F  F023         	movff	___xxtofl@val+3,??___xxtofl+3
  5140  001002  1E20               	comf	??___xxtofl^0,f,c
  5141  001004  1E21               	comf	(??___xxtofl+1)^0,f,c
  5142  001006  1E22               	comf	(??___xxtofl+2)^0,f,c
  5143  001008  1E23               	comf	(??___xxtofl+3)^0,f,c
  5144  00100A  2A20               	incf	??___xxtofl^0,f,c
  5145  00100C  0E00               	movlw	0
  5146  00100E  2221               	addwfc	(??___xxtofl+1)^0,f,c
  5147  001010  2222               	addwfc	(??___xxtofl+2)^0,f,c
  5148  001012  2223               	addwfc	(??___xxtofl+3)^0,f,c
  5149  001014  C020  F026         	movff	??___xxtofl,___xxtofl@arg
  5150  001018  C021  F027         	movff	??___xxtofl+1,___xxtofl@arg+1
  5151  00101C  C022  F028         	movff	??___xxtofl+2,___xxtofl@arg+2
  5152  001020  C023  F029         	movff	??___xxtofl+3,___xxtofl@arg+3
  5153  001024  EF1C  F008         	goto	l4481
  5154  001028                     l2047:
  5155  001028  C01C  F026         	movff	___xxtofl@val,___xxtofl@arg
  5156  00102C  C01D  F027         	movff	___xxtofl@val+1,___xxtofl@arg+1
  5157  001030  C01E  F028         	movff	___xxtofl@val+2,___xxtofl@arg+2
  5158  001034  C01F  F029         	movff	___xxtofl@val+3,___xxtofl@arg+3
  5159  001038                     l4481:
  5160  001038  501C               	movf	___xxtofl@val^0,w,c
  5161  00103A  101D               	iorwf	(___xxtofl@val+1)^0,w,c
  5162  00103C  101E               	iorwf	(___xxtofl@val+2)^0,w,c
  5163  00103E  101F               	iorwf	(___xxtofl@val+3)^0,w,c
  5164  001040  A4D8               	btfss	status,2,c
  5165  001042  EF25  F008         	goto	u2971
  5166  001046  EF27  F008         	goto	u2970
  5167  00104A                     u2971:
  5168  00104A  EF31  F008         	goto	l4487
  5169  00104E                     u2970:
  5170  00104E  0E00               	movlw	0
  5171  001050  6E1C               	movwf	?___xxtofl^0,c
  5172  001052  0E00               	movlw	0
  5173  001054  6E1D               	movwf	(?___xxtofl+1)^0,c
  5174  001056  0E00               	movlw	0
  5175  001058  6E1E               	movwf	(?___xxtofl+2)^0,c
  5176  00105A  0E00               	movlw	0
  5177  00105C  6E1F               	movwf	(?___xxtofl+3)^0,c
  5178  00105E  EFC2  F008         	goto	l2050
  5179  001062                     l4487:
  5180  001062  0E96               	movlw	150
  5181  001064  6E25               	movwf	___xxtofl@exp^0,c
  5182  001066  EF3B  F008         	goto	l4491
  5183  00106A                     l4489:
  5184  00106A  2A25               	incf	___xxtofl@exp^0,f,c
  5185  00106C  90D8               	bcf	status,0,c
  5186  00106E  3229               	rrcf	(___xxtofl@arg+3)^0,f,c
  5187  001070  3228               	rrcf	(___xxtofl@arg+2)^0,f,c
  5188  001072  3227               	rrcf	(___xxtofl@arg+1)^0,f,c
  5189  001074  3226               	rrcf	___xxtofl@arg^0,f,c
  5190  001076                     l4491:
  5191  001076  0E00               	movlw	0
  5192  001078  1426               	andwf	___xxtofl@arg^0,w,c
  5193  00107A  6E20               	movwf	??___xxtofl^0,c
  5194  00107C  0E00               	movlw	0
  5195  00107E  1427               	andwf	(___xxtofl@arg+1)^0,w,c
  5196  001080  6E21               	movwf	(??___xxtofl+1)^0,c
  5197  001082  0E00               	movlw	0
  5198  001084  1428               	andwf	(___xxtofl@arg+2)^0,w,c
  5199  001086  6E22               	movwf	(??___xxtofl+2)^0,c
  5200  001088  0EFE               	movlw	254
  5201  00108A  1429               	andwf	(___xxtofl@arg+3)^0,w,c
  5202  00108C  6E23               	movwf	(??___xxtofl+3)^0,c
  5203  00108E  5020               	movf	??___xxtofl^0,w,c
  5204  001090  1021               	iorwf	(??___xxtofl+1)^0,w,c
  5205  001092  1022               	iorwf	(??___xxtofl+2)^0,w,c
  5206  001094  1023               	iorwf	(??___xxtofl+3)^0,w,c
  5207  001096  A4D8               	btfss	status,2,c
  5208  001098  EF50  F008         	goto	u2981
  5209  00109C  EF52  F008         	goto	u2980
  5210  0010A0                     u2981:
  5211  0010A0  EF35  F008         	goto	l4489
  5212  0010A4                     u2980:
  5213  0010A4  EF60  F008         	goto	l2054
  5214  0010A8                     l4493:
  5215  0010A8  2A25               	incf	___xxtofl@exp^0,f,c
  5216  0010AA  0E01               	movlw	1
  5217  0010AC  2626               	addwf	___xxtofl@arg^0,f,c
  5218  0010AE  0E00               	movlw	0
  5219  0010B0  2227               	addwfc	(___xxtofl@arg+1)^0,f,c
  5220  0010B2  2228               	addwfc	(___xxtofl@arg+2)^0,f,c
  5221  0010B4  2229               	addwfc	(___xxtofl@arg+3)^0,f,c
  5222  0010B6  90D8               	bcf	status,0,c
  5223  0010B8  3229               	rrcf	(___xxtofl@arg+3)^0,f,c
  5224  0010BA  3228               	rrcf	(___xxtofl@arg+2)^0,f,c
  5225  0010BC  3227               	rrcf	(___xxtofl@arg+1)^0,f,c
  5226  0010BE  3226               	rrcf	___xxtofl@arg^0,f,c
  5227  0010C0                     l2054:
  5228  0010C0  0E00               	movlw	0
  5229  0010C2  1426               	andwf	___xxtofl@arg^0,w,c
  5230  0010C4  6E20               	movwf	??___xxtofl^0,c
  5231  0010C6  0E00               	movlw	0
  5232  0010C8  1427               	andwf	(___xxtofl@arg+1)^0,w,c
  5233  0010CA  6E21               	movwf	(??___xxtofl+1)^0,c
  5234  0010CC  0E00               	movlw	0
  5235  0010CE  1428               	andwf	(___xxtofl@arg+2)^0,w,c
  5236  0010D0  6E22               	movwf	(??___xxtofl+2)^0,c
  5237  0010D2  0EFF               	movlw	255
  5238  0010D4  1429               	andwf	(___xxtofl@arg+3)^0,w,c
  5239  0010D6  6E23               	movwf	(??___xxtofl+3)^0,c
  5240  0010D8  5020               	movf	??___xxtofl^0,w,c
  5241  0010DA  1021               	iorwf	(??___xxtofl+1)^0,w,c
  5242  0010DC  1022               	iorwf	(??___xxtofl+2)^0,w,c
  5243  0010DE  1023               	iorwf	(??___xxtofl+3)^0,w,c
  5244  0010E0  A4D8               	btfss	status,2,c
  5245  0010E2  EF75  F008         	goto	u2991
  5246  0010E6  EF77  F008         	goto	u2990
  5247  0010EA                     u2991:
  5248  0010EA  EF54  F008         	goto	l4493
  5249  0010EE                     u2990:
  5250  0010EE  EF7F  F008         	goto	l4501
  5251  0010F2                     l4499:
  5252  0010F2  0625               	decf	___xxtofl@exp^0,f,c
  5253  0010F4  90D8               	bcf	status,0,c
  5254  0010F6  3626               	rlcf	___xxtofl@arg^0,f,c
  5255  0010F8  3627               	rlcf	(___xxtofl@arg+1)^0,f,c
  5256  0010FA  3628               	rlcf	(___xxtofl@arg+2)^0,f,c
  5257  0010FC  3629               	rlcf	(___xxtofl@arg+3)^0,f,c
  5258  0010FE                     l4501:
  5259  0010FE  BE28               	btfsc	(___xxtofl@arg+2)^0,7,c
  5260  001100  EF84  F008         	goto	u3001
  5261  001104  EF86  F008         	goto	u3000
  5262  001108                     u3001:
  5263  001108  EF8E  F008         	goto	l2061
  5264  00110C                     u3000:
  5265  00110C  0E02               	movlw	2
  5266  00110E  6025               	cpfslt	___xxtofl@exp^0,c
  5267  001110  EF8C  F008         	goto	u3011
  5268  001114  EF8E  F008         	goto	u3010
  5269  001118                     u3011:
  5270  001118  EF79  F008         	goto	l4499
  5271  00111C                     u3010:
  5272  00111C                     l2061:
  5273  00111C  B025               	btfsc	___xxtofl@exp^0,0,c
  5274  00111E  EF93  F008         	goto	u3021
  5275  001122  EF95  F008         	goto	u3020
  5276  001126                     u3021:
  5277  001126  EF96  F008         	goto	l4507
  5278  00112A                     u3020:
  5279  00112A  9E28               	bcf	(___xxtofl@arg+2)^0,7,c
  5280  00112C                     l4507:
  5281  00112C  90D8               	bcf	status,0,c
  5282  00112E  3225               	rrcf	___xxtofl@exp^0,f,c
  5283  001130  C025  F020         	movff	___xxtofl@exp,??___xxtofl
  5284  001134  6A21               	clrf	(??___xxtofl+1)^0,c
  5285  001136  6A22               	clrf	(??___xxtofl+2)^0,c
  5286  001138  6A23               	clrf	(??___xxtofl+3)^0,c
  5287  00113A  C020  F023         	movff	??___xxtofl,??___xxtofl+3
  5288  00113E  6A22               	clrf	(??___xxtofl+2)^0,c
  5289  001140  6A21               	clrf	(??___xxtofl+1)^0,c
  5290  001142  6A20               	clrf	??___xxtofl^0,c
  5291  001144  5020               	movf	??___xxtofl^0,w,c
  5292  001146  1226               	iorwf	___xxtofl@arg^0,f,c
  5293  001148  5021               	movf	(??___xxtofl+1)^0,w,c
  5294  00114A  1227               	iorwf	(___xxtofl@arg+1)^0,f,c
  5295  00114C  5022               	movf	(??___xxtofl+2)^0,w,c
  5296  00114E  1228               	iorwf	(___xxtofl@arg+2)^0,f,c
  5297  001150  5023               	movf	(??___xxtofl+3)^0,w,c
  5298  001152  1229               	iorwf	(___xxtofl@arg+3)^0,f,c
  5299  001154  5024               	movf	___xxtofl@sign^0,w,c
  5300  001156  B4D8               	btfsc	status,2,c
  5301  001158  EFB0  F008         	goto	u3031
  5302  00115C  EFB2  F008         	goto	u3030
  5303  001160                     u3031:
  5304  001160  EFBA  F008         	goto	l4517
  5305  001164                     u3030:
  5306  001164  BE1F               	btfsc	(___xxtofl@val+3)^0,7,c
  5307  001166  EFB9  F008         	goto	u3040
  5308  00116A  EFB7  F008         	goto	u3041
  5309  00116E                     u3041:
  5310  00116E  EFBA  F008         	goto	l4517
  5311  001172                     u3040:
  5312  001172  8E29               	bsf	(___xxtofl@arg+3)^0,7,c
  5313  001174                     l4517:
  5314  001174  C026  F01C         	movff	___xxtofl@arg,?___xxtofl
  5315  001178  C027  F01D         	movff	___xxtofl@arg+1,?___xxtofl+1
  5316  00117C  C028  F01E         	movff	___xxtofl@arg+2,?___xxtofl+2
  5317  001180  C029  F01F         	movff	___xxtofl@arg+3,?___xxtofl+3
  5318  001184                     l2050:
  5319  001184  0012               	return		;funcret
  5320  001186                     __end_of___xxtofl:
  5321                           	callstack 0
  5322                           
  5323 ;; *************** function ___fltol *****************
  5324 ;; Defined at:
  5325 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  5326 ;; Parameters:    Size  Location     Type
  5327 ;;  f1              4   25[BANK0 ] unsigned char 
  5328 ;; Auto vars:     Size  Location     Type
  5329 ;;  exp1            1   34[BANK0 ] unsigned char 
  5330 ;;  sign1           1   33[BANK0 ] unsigned char 
  5331 ;; Return value:  Size  Location     Type
  5332 ;;                  4   25[BANK0 ] long 
  5333 ;; Registers used:
  5334 ;;		wreg, status,2, status,0
  5335 ;; Tracked objects:
  5336 ;;		On entry : 0/0
  5337 ;;		On exit  : 0/0
  5338 ;;		Unchanged: 0/0
  5339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5340 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5341 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5342 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5343 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5344 ;;Total ram usage:       10 bytes
  5345 ;; Hardware stack levels used: 1
  5346 ;; Hardware stack levels required when called: 8
  5347 ;; This function calls:
  5348 ;;		Nothing
  5349 ;; This function is called by:
  5350 ;;		_startAccell
  5351 ;;		_calcSteering
  5352 ;;		_calcSpeed
  5353 ;;		_calcMotorPow
  5354 ;; This function uses a non-reentrant model
  5355 ;;
  5356                           
  5357                           	psect	text21
  5358  0017B8                     __ptext21:
  5359                           	callstack 0
  5360  0017B8                     ___fltol:
  5361                           	callstack 20
  5362  0017B8  0100               	movlb	0	; () banked
  5363  0017BA  35B8               	rlcf	(___fltol@f1+2)& (0+255),w,b
  5364  0017BC  35B9               	rlcf	(___fltol@f1+3)& (0+255),w,b
  5365  0017BE  6FBF               	movwf	___fltol@exp1& (0+255),b
  5366  0017C0  51BF               	movf	___fltol@exp1& (0+255),w,b
  5367  0017C2  A4D8               	btfss	status,2,c
  5368  0017C4  EFE6  F00B         	goto	u4421
  5369  0017C8  EFE8  F00B         	goto	u4420
  5370  0017CC                     u4421:
  5371  0017CC  EFF2  F00B         	goto	l5677
  5372  0017D0                     u4420:
  5373  0017D0                     l5673:
  5374                           
  5375                           ; BSR set to: 0
  5376  0017D0  0E00               	movlw	0
  5377  0017D2  6FB6               	movwf	?___fltol& (0+255),b
  5378  0017D4  0E00               	movlw	0
  5379  0017D6  6FB7               	movwf	(?___fltol+1)& (0+255),b
  5380  0017D8  0E00               	movlw	0
  5381  0017DA  6FB8               	movwf	(?___fltol+2)& (0+255),b
  5382  0017DC  0E00               	movlw	0
  5383  0017DE  6FB9               	movwf	(?___fltol+3)& (0+255),b
  5384  0017E0  EF5F  F00C         	goto	l1689
  5385  0017E4                     l5677:
  5386                           
  5387                           ; BSR set to: 0
  5388  0017E4  C0B6  F0BA         	movff	___fltol@f1,??___fltol
  5389  0017E8  C0B7  F0BB         	movff	___fltol@f1+1,??___fltol+1
  5390  0017EC  C0B8  F0BC         	movff	___fltol@f1+2,??___fltol+2
  5391  0017F0  C0B9  F0BD         	movff	___fltol@f1+3,??___fltol+3
  5392  0017F4  0E20               	movlw	32
  5393  0017F6  EF02  F00C         	goto	u4430
  5394  0017FA                     u4435:
  5395  0017FA  90D8               	bcf	status,0,c
  5396  0017FC  33BD               	rrcf	(??___fltol+3)& (0+255),f,b
  5397  0017FE  33BC               	rrcf	(??___fltol+2)& (0+255),f,b
  5398  001800  33BB               	rrcf	(??___fltol+1)& (0+255),f,b
  5399  001802  33BA               	rrcf	??___fltol& (0+255),f,b
  5400  001804                     u4430:
  5401  001804  2EE8               	decfsz	wreg,f,c
  5402  001806  EFFD  F00B         	goto	u4435
  5403  00180A  51BA               	movf	??___fltol& (0+255),w,b
  5404  00180C  6FBE               	movwf	___fltol@sign1& (0+255),b
  5405  00180E                     
  5406                           ; BSR set to: 0
  5407  00180E  8FB8               	bsf	(___fltol@f1+2)& (0+255),7,b
  5408  001810                     
  5409                           ; BSR set to: 0
  5410  001810  0EFF               	movlw	255
  5411  001812  17B6               	andwf	___fltol@f1& (0+255),f,b
  5412  001814  0EFF               	movlw	255
  5413  001816  17B7               	andwf	(___fltol@f1+1)& (0+255),f,b
  5414  001818  0EFF               	movlw	255
  5415  00181A  17B8               	andwf	(___fltol@f1+2)& (0+255),f,b
  5416  00181C  0E00               	movlw	0
  5417  00181E  17B9               	andwf	(___fltol@f1+3)& (0+255),f,b
  5418  001820                     
  5419                           ; BSR set to: 0
  5420  001820  0E96               	movlw	150
  5421  001822  5FBF               	subwf	___fltol@exp1& (0+255),f,b
  5422  001824                     
  5423                           ; BSR set to: 0
  5424  001824  BFBF               	btfsc	___fltol@exp1& (0+255),7,b
  5425  001826  EF19  F00C         	goto	u4440
  5426  00182A  EF17  F00C         	goto	u4441
  5427  00182E                     u4441:
  5428  00182E  EF2F  F00C         	goto	l5697
  5429  001832                     u4440:
  5430  001832                     
  5431                           ; BSR set to: 0
  5432  001832  51BF               	movf	___fltol@exp1& (0+255),w,b
  5433  001834  0A80               	xorlw	128
  5434  001836  0F97               	addlw	151
  5435  001838  B0D8               	btfsc	status,0,c
  5436  00183A  EF21  F00C         	goto	u4451
  5437  00183E  EF23  F00C         	goto	u4450
  5438  001842                     u4451:
  5439  001842  EF25  F00C         	goto	l5693
  5440  001846                     u4450:
  5441  001846  EFE8  F00B         	goto	l5673
  5442  00184A                     l5693:
  5443                           
  5444                           ; BSR set to: 0
  5445  00184A  90D8               	bcf	status,0,c
  5446  00184C  33B9               	rrcf	(___fltol@f1+3)& (0+255),f,b
  5447  00184E  33B8               	rrcf	(___fltol@f1+2)& (0+255),f,b
  5448  001850  33B7               	rrcf	(___fltol@f1+1)& (0+255),f,b
  5449  001852  33B6               	rrcf	___fltol@f1& (0+255),f,b
  5450  001854                     
  5451                           ; BSR set to: 0
  5452  001854  3FBF               	incfsz	___fltol@exp1& (0+255),f,b
  5453  001856  EF25  F00C         	goto	l5693
  5454  00185A  EF47  F00C         	goto	l5707
  5455  00185E                     l5697:
  5456                           
  5457                           ; BSR set to: 0
  5458  00185E  0E1F               	movlw	31
  5459  001860  65BF               	cpfsgt	___fltol@exp1& (0+255),b
  5460  001862  EF35  F00C         	goto	u4461
  5461  001866  EF37  F00C         	goto	u4460
  5462  00186A                     u4461:
  5463  00186A  EF3F  F00C         	goto	l5705
  5464  00186E                     u4460:
  5465  00186E  EFE8  F00B         	goto	l5673
  5466  001872                     l5703:
  5467                           
  5468                           ; BSR set to: 0
  5469  001872  90D8               	bcf	status,0,c
  5470  001874  37B6               	rlcf	___fltol@f1& (0+255),f,b
  5471  001876  37B7               	rlcf	(___fltol@f1+1)& (0+255),f,b
  5472  001878  37B8               	rlcf	(___fltol@f1+2)& (0+255),f,b
  5473  00187A  37B9               	rlcf	(___fltol@f1+3)& (0+255),f,b
  5474  00187C  07BF               	decf	___fltol@exp1& (0+255),f,b
  5475  00187E                     l5705:
  5476                           
  5477                           ; BSR set to: 0
  5478  00187E  51BF               	movf	___fltol@exp1& (0+255),w,b
  5479  001880  A4D8               	btfss	status,2,c
  5480  001882  EF45  F00C         	goto	u4471
  5481  001886  EF47  F00C         	goto	u4470
  5482  00188A                     u4471:
  5483  00188A  EF39  F00C         	goto	l5703
  5484  00188E                     u4470:
  5485  00188E                     l5707:
  5486                           
  5487                           ; BSR set to: 0
  5488  00188E  51BE               	movf	___fltol@sign1& (0+255),w,b
  5489  001890  B4D8               	btfsc	status,2,c
  5490  001892  EF4D  F00C         	goto	u4481
  5491  001896  EF4F  F00C         	goto	u4480
  5492  00189A                     u4481:
  5493  00189A  EF57  F00C         	goto	l5711
  5494  00189E                     u4480:
  5495  00189E                     
  5496                           ; BSR set to: 0
  5497  00189E  1FB9               	comf	(___fltol@f1+3)& (0+255),f,b
  5498  0018A0  1FB8               	comf	(___fltol@f1+2)& (0+255),f,b
  5499  0018A2  1FB7               	comf	(___fltol@f1+1)& (0+255),f,b
  5500  0018A4  6DB6               	negf	___fltol@f1& (0+255),b
  5501  0018A6  0E00               	movlw	0
  5502  0018A8  23B7               	addwfc	(___fltol@f1+1)& (0+255),f,b
  5503  0018AA  23B8               	addwfc	(___fltol@f1+2)& (0+255),f,b
  5504  0018AC  23B9               	addwfc	(___fltol@f1+3)& (0+255),f,b
  5505  0018AE                     l5711:
  5506                           
  5507                           ; BSR set to: 0
  5508  0018AE  C0B6  F0B6         	movff	___fltol@f1,?___fltol
  5509  0018B2  C0B7  F0B7         	movff	___fltol@f1+1,?___fltol+1
  5510  0018B6  C0B8  F0B8         	movff	___fltol@f1+2,?___fltol+2
  5511  0018BA  C0B9  F0B9         	movff	___fltol@f1+3,?___fltol+3
  5512  0018BE                     l1689:
  5513                           
  5514                           ; BSR set to: 0
  5515  0018BE  0012               	return		;funcret
  5516  0018C0                     __end_of___fltol:
  5517                           	callstack 0
  5518                           
  5519 ;; *************** function ___flmul *****************
  5520 ;; Defined at:
  5521 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
  5522 ;; Parameters:    Size  Location     Type
  5523 ;;  b               4   41[COMRAM] long 
  5524 ;;  a               4   45[COMRAM] long 
  5525 ;; Auto vars:     Size  Location     Type
  5526 ;;  prod            4    7[BANK0 ] struct .
  5527 ;;  grs             4    2[BANK0 ] unsigned long 
  5528 ;;  temp            2   11[BANK0 ] struct .
  5529 ;;  bexp            1    6[BANK0 ] unsigned char 
  5530 ;;  aexp            1    1[BANK0 ] unsigned char 
  5531 ;;  sign            1    0[BANK0 ] unsigned char 
  5532 ;; Return value:  Size  Location     Type
  5533 ;;                  4   41[COMRAM] unsigned char 
  5534 ;; Registers used:
  5535 ;;		wreg, status,2, status,0, prodl, prodh
  5536 ;; Tracked objects:
  5537 ;;		On entry : 0/0
  5538 ;;		On exit  : 0/0
  5539 ;;		Unchanged: 0/0
  5540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5541 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5542 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5543 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5544 ;;      Totals:        12      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5545 ;;Total ram usage:       25 bytes
  5546 ;; Hardware stack levels used: 1
  5547 ;; Hardware stack levels required when called: 8
  5548 ;; This function calls:
  5549 ;;		Nothing
  5550 ;; This function is called by:
  5551 ;;		_startAccell
  5552 ;;		_calcSteering
  5553 ;;		_calcSpeed
  5554 ;;		_calcMotorPow
  5555 ;; This function uses a non-reentrant model
  5556 ;;
  5557                           
  5558                           	psect	text22
  5559  000574                     __ptext22:
  5560                           	callstack 0
  5561  000574                     ___flmul:
  5562                           	callstack 20
  5563  000574  502D               	movf	(___flmul@b+3)^0,w,c
  5564  000576  0B80               	andlw	128
  5565  000578  0100               	movlb	0	; () banked
  5566  00057A  6F9D               	movwf	___flmul@sign& (0+255),b
  5567  00057C  502D               	movf	(___flmul@b+3)^0,w,c
  5568  00057E  242D               	addwf	(___flmul@b+3)^0,w,c
  5569  000580  6FA3               	movwf	___flmul@bexp& (0+255),b
  5570  000582                     
  5571                           ; BSR set to: 0
  5572  000582  AE2C               	btfss	(___flmul@b+2)^0,7,c
  5573  000584  EFC6  F002         	goto	u4231
  5574  000588  EFC8  F002         	goto	u4230
  5575  00058C                     u4231:
  5576  00058C  EFC9  F002         	goto	l5547
  5577  000590                     u4230:
  5578  000590                     
  5579                           ; BSR set to: 0
  5580  000590  81A3               	bsf	___flmul@bexp& (0+255),0,b
  5581  000592                     l5547:
  5582                           
  5583                           ; BSR set to: 0
  5584  000592  51A3               	movf	___flmul@bexp& (0+255),w,b
  5585  000594  B4D8               	btfsc	status,2,c
  5586  000596  EFCF  F002         	goto	u4241
  5587  00059A  EFD1  F002         	goto	u4240
  5588  00059E                     u4241:
  5589  00059E  EFE4  F002         	goto	l5555
  5590  0005A2                     u4240:
  5591  0005A2                     
  5592                           ; BSR set to: 0
  5593  0005A2  29A3               	incf	___flmul@bexp& (0+255),w,b
  5594  0005A4  A4D8               	btfss	status,2,c
  5595  0005A6  EFD7  F002         	goto	u4251
  5596  0005AA  EFD9  F002         	goto	u4250
  5597  0005AE                     u4251:
  5598  0005AE  EFE1  F002         	goto	l5553
  5599  0005B2                     u4250:
  5600  0005B2                     
  5601                           ; BSR set to: 0
  5602  0005B2  0E00               	movlw	0
  5603  0005B4  6E2A               	movwf	___flmul@b^0,c
  5604  0005B6  0E00               	movlw	0
  5605  0005B8  6E2B               	movwf	(___flmul@b+1)^0,c
  5606  0005BA  0E00               	movlw	0
  5607  0005BC  6E2C               	movwf	(___flmul@b+2)^0,c
  5608  0005BE  0E00               	movlw	0
  5609  0005C0  6E2D               	movwf	(___flmul@b+3)^0,c
  5610  0005C2                     l5553:
  5611                           
  5612                           ; BSR set to: 0
  5613  0005C2  8E2C               	bsf	(___flmul@b+2)^0,7,c
  5614  0005C4  EFEC  F002         	goto	l5557
  5615  0005C8                     l5555:
  5616                           
  5617                           ; BSR set to: 0
  5618  0005C8  0E00               	movlw	0
  5619  0005CA  6E2A               	movwf	___flmul@b^0,c
  5620  0005CC  0E00               	movlw	0
  5621  0005CE  6E2B               	movwf	(___flmul@b+1)^0,c
  5622  0005D0  0E00               	movlw	0
  5623  0005D2  6E2C               	movwf	(___flmul@b+2)^0,c
  5624  0005D4  0E00               	movlw	0
  5625  0005D6  6E2D               	movwf	(___flmul@b+3)^0,c
  5626  0005D8                     l5557:
  5627                           
  5628                           ; BSR set to: 0
  5629  0005D8  5031               	movf	(___flmul@a+3)^0,w,c
  5630  0005DA  0B80               	andlw	128
  5631  0005DC  1B9D               	xorwf	___flmul@sign& (0+255),f,b
  5632  0005DE                     
  5633                           ; BSR set to: 0
  5634  0005DE  5031               	movf	(___flmul@a+3)^0,w,c
  5635  0005E0  2431               	addwf	(___flmul@a+3)^0,w,c
  5636  0005E2  6F9E               	movwf	___flmul@aexp& (0+255),b
  5637  0005E4                     
  5638                           ; BSR set to: 0
  5639  0005E4  AE30               	btfss	(___flmul@a+2)^0,7,c
  5640  0005E6  EFF7  F002         	goto	u4261
  5641  0005EA  EFF9  F002         	goto	u4260
  5642  0005EE                     u4261:
  5643  0005EE  EFFA  F002         	goto	l5565
  5644  0005F2                     u4260:
  5645  0005F2                     
  5646                           ; BSR set to: 0
  5647  0005F2  819E               	bsf	___flmul@aexp& (0+255),0,b
  5648  0005F4                     l5565:
  5649                           
  5650                           ; BSR set to: 0
  5651  0005F4  519E               	movf	___flmul@aexp& (0+255),w,b
  5652  0005F6  B4D8               	btfsc	status,2,c
  5653  0005F8  EF00  F003         	goto	u4271
  5654  0005FC  EF02  F003         	goto	u4270
  5655  000600                     u4271:
  5656  000600  EF15  F003         	goto	l5573
  5657  000604                     u4270:
  5658  000604                     
  5659                           ; BSR set to: 0
  5660  000604  299E               	incf	___flmul@aexp& (0+255),w,b
  5661  000606  A4D8               	btfss	status,2,c
  5662  000608  EF08  F003         	goto	u4281
  5663  00060C  EF0A  F003         	goto	u4280
  5664  000610                     u4281:
  5665  000610  EF12  F003         	goto	l5571
  5666  000614                     u4280:
  5667  000614                     
  5668                           ; BSR set to: 0
  5669  000614  0E00               	movlw	0
  5670  000616  6E2E               	movwf	___flmul@a^0,c
  5671  000618  0E00               	movlw	0
  5672  00061A  6E2F               	movwf	(___flmul@a+1)^0,c
  5673  00061C  0E00               	movlw	0
  5674  00061E  6E30               	movwf	(___flmul@a+2)^0,c
  5675  000620  0E00               	movlw	0
  5676  000622  6E31               	movwf	(___flmul@a+3)^0,c
  5677  000624                     l5571:
  5678                           
  5679                           ; BSR set to: 0
  5680  000624  8E30               	bsf	(___flmul@a+2)^0,7,c
  5681  000626  EF1D  F003         	goto	l2006
  5682  00062A                     l5573:
  5683                           
  5684                           ; BSR set to: 0
  5685  00062A  0E00               	movlw	0
  5686  00062C  6E2E               	movwf	___flmul@a^0,c
  5687  00062E  0E00               	movlw	0
  5688  000630  6E2F               	movwf	(___flmul@a+1)^0,c
  5689  000632  0E00               	movlw	0
  5690  000634  6E30               	movwf	(___flmul@a+2)^0,c
  5691  000636  0E00               	movlw	0
  5692  000638  6E31               	movwf	(___flmul@a+3)^0,c
  5693  00063A                     l2006:
  5694                           
  5695                           ; BSR set to: 0
  5696  00063A  519E               	movf	___flmul@aexp& (0+255),w,b
  5697  00063C  B4D8               	btfsc	status,2,c
  5698  00063E  EF23  F003         	goto	u4291
  5699  000642  EF25  F003         	goto	u4290
  5700  000646                     u4291:
  5701  000646  EF2D  F003         	goto	l5577
  5702  00064A                     u4290:
  5703  00064A                     
  5704                           ; BSR set to: 0
  5705  00064A  51A3               	movf	___flmul@bexp& (0+255),w,b
  5706  00064C  A4D8               	btfss	status,2,c
  5707  00064E  EF2B  F003         	goto	u4301
  5708  000652  EF2D  F003         	goto	u4300
  5709  000656                     u4301:
  5710  000656  EF37  F003         	goto	l5581
  5711  00065A                     u4300:
  5712  00065A                     l5577:
  5713                           
  5714                           ; BSR set to: 0
  5715  00065A  0E00               	movlw	0
  5716  00065C  6E2A               	movwf	?___flmul^0,c
  5717  00065E  0E00               	movlw	0
  5718  000660  6E2B               	movwf	(?___flmul+1)^0,c
  5719  000662  0E00               	movlw	0
  5720  000664  6E2C               	movwf	(?___flmul+2)^0,c
  5721  000666  0E00               	movlw	0
  5722  000668  6E2D               	movwf	(?___flmul+3)^0,c
  5723  00066A  EFE1  F004         	goto	l2010
  5724  00066E                     l5581:
  5725                           
  5726                           ; BSR set to: 0
  5727  00066E  5030               	movf	(___flmul@a+2)^0,w,c
  5728  000670  022A               	mulwf	___flmul@b^0,c
  5729  000672  006F FFCC  F0A8    	movff	prodl,___flmul@temp
  5730  000678  006F FFD0  F0A9    	movff	prodh,___flmul@temp+1
  5731  00067E                     
  5732                           ; BSR set to: 0
  5733  00067E  51A8               	movf	___flmul@temp& (0+255),w,b
  5734  000680  6F9F               	movwf	___flmul@grs& (0+255),b
  5735  000682  6BA0               	clrf	(___flmul@grs+1)& (0+255),b
  5736  000684  6BA1               	clrf	(___flmul@grs+2)& (0+255),b
  5737  000686  6BA2               	clrf	(___flmul@grs+3)& (0+255),b
  5738  000688                     
  5739                           ; BSR set to: 0
  5740  000688  51A9               	movf	(___flmul@temp+1)& (0+255),w,b
  5741  00068A  6FA4               	movwf	___flmul@prod& (0+255),b
  5742  00068C  6BA5               	clrf	(___flmul@prod+1)& (0+255),b
  5743  00068E  6BA6               	clrf	(___flmul@prod+2)& (0+255),b
  5744  000690  6BA7               	clrf	(___flmul@prod+3)& (0+255),b
  5745  000692  502F               	movf	(___flmul@a+1)^0,w,c
  5746  000694  022B               	mulwf	(___flmul@b+1)^0,c
  5747  000696  006F FFCC  F0A8    	movff	prodl,___flmul@temp
  5748  00069C  006F FFD0  F0A9    	movff	prodh,___flmul@temp+1
  5749  0006A2                     
  5750                           ; BSR set to: 0
  5751  0006A2  51A8               	movf	___flmul@temp& (0+255),w,b
  5752  0006A4  279F               	addwf	___flmul@grs& (0+255),f,b
  5753  0006A6  0E00               	movlw	0
  5754  0006A8  23A0               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5755  0006AA  23A1               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5756  0006AC  23A2               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5757  0006AE                     
  5758                           ; BSR set to: 0
  5759  0006AE  51A9               	movf	(___flmul@temp+1)& (0+255),w,b
  5760  0006B0  27A4               	addwf	___flmul@prod& (0+255),f,b
  5761  0006B2  0E00               	movlw	0
  5762  0006B4  23A5               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5763  0006B6  23A6               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5764  0006B8  23A7               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5765  0006BA  502E               	movf	___flmul@a^0,w,c
  5766  0006BC  022C               	mulwf	(___flmul@b+2)^0,c
  5767  0006BE  006F FFCC  F0A8    	movff	prodl,___flmul@temp
  5768  0006C4  006F FFD0  F0A9    	movff	prodh,___flmul@temp+1
  5769  0006CA                     
  5770                           ; BSR set to: 0
  5771  0006CA  51A8               	movf	___flmul@temp& (0+255),w,b
  5772  0006CC  279F               	addwf	___flmul@grs& (0+255),f,b
  5773  0006CE  0E00               	movlw	0
  5774  0006D0  23A0               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5775  0006D2  23A1               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5776  0006D4  23A2               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5777  0006D6                     
  5778                           ; BSR set to: 0
  5779  0006D6  51A9               	movf	(___flmul@temp+1)& (0+255),w,b
  5780  0006D8  27A4               	addwf	___flmul@prod& (0+255),f,b
  5781  0006DA  0E00               	movlw	0
  5782  0006DC  23A5               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5783  0006DE  23A6               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5784  0006E0  23A7               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5785  0006E2                     
  5786                           ; BSR set to: 0
  5787  0006E2  C0A1  F0A2         	movff	___flmul@grs+2,___flmul@grs+3
  5788  0006E6  C0A0  F0A1         	movff	___flmul@grs+1,___flmul@grs+2
  5789  0006EA  C09F  F0A0         	movff	___flmul@grs,___flmul@grs+1
  5790  0006EE  6B9F               	clrf	___flmul@grs& (0+255),b
  5791  0006F0                     
  5792                           ; BSR set to: 0
  5793  0006F0  502E               	movf	___flmul@a^0,w,c
  5794  0006F2  022B               	mulwf	(___flmul@b+1)^0,c
  5795  0006F4  006F FFCC  F0A8    	movff	prodl,___flmul@temp
  5796  0006FA  006F FFD0  F0A9    	movff	prodh,___flmul@temp+1
  5797  000700                     
  5798                           ; BSR set to: 0
  5799  000700  51A8               	movf	___flmul@temp& (0+255),w,b
  5800  000702  279F               	addwf	___flmul@grs& (0+255),f,b
  5801  000704  51A9               	movf	(___flmul@temp+1)& (0+255),w,b
  5802  000706  23A0               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5803  000708  0E00               	movlw	0
  5804  00070A  23A1               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5805  00070C  0E00               	movlw	0
  5806  00070E  23A2               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5807  000710                     
  5808                           ; BSR set to: 0
  5809  000710  502F               	movf	(___flmul@a+1)^0,w,c
  5810  000712  022A               	mulwf	___flmul@b^0,c
  5811  000714  006F FFCC  F0A8    	movff	prodl,___flmul@temp
  5812  00071A  006F FFD0  F0A9    	movff	prodh,___flmul@temp+1
  5813  000720                     
  5814                           ; BSR set to: 0
  5815  000720  51A8               	movf	___flmul@temp& (0+255),w,b
  5816  000722  279F               	addwf	___flmul@grs& (0+255),f,b
  5817  000724  51A9               	movf	(___flmul@temp+1)& (0+255),w,b
  5818  000726  23A0               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5819  000728  0E00               	movlw	0
  5820  00072A  23A1               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5821  00072C  0E00               	movlw	0
  5822  00072E  23A2               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5823  000730                     
  5824                           ; BSR set to: 0
  5825  000730  C0A1  F0A2         	movff	___flmul@grs+2,___flmul@grs+3
  5826  000734  C0A0  F0A1         	movff	___flmul@grs+1,___flmul@grs+2
  5827  000738  C09F  F0A0         	movff	___flmul@grs,___flmul@grs+1
  5828  00073C  6B9F               	clrf	___flmul@grs& (0+255),b
  5829  00073E  502E               	movf	___flmul@a^0,w,c
  5830  000740  022A               	mulwf	___flmul@b^0,c
  5831  000742  006F FFCC  F0A8    	movff	prodl,___flmul@temp
  5832  000748  006F FFD0  F0A9    	movff	prodh,___flmul@temp+1
  5833  00074E                     
  5834                           ; BSR set to: 0
  5835  00074E  51A8               	movf	___flmul@temp& (0+255),w,b
  5836  000750  279F               	addwf	___flmul@grs& (0+255),f,b
  5837  000752  51A9               	movf	(___flmul@temp+1)& (0+255),w,b
  5838  000754  23A0               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5839  000756  0E00               	movlw	0
  5840  000758  23A1               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5841  00075A  0E00               	movlw	0
  5842  00075C  23A2               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5843  00075E                     
  5844                           ; BSR set to: 0
  5845  00075E  5030               	movf	(___flmul@a+2)^0,w,c
  5846  000760  022B               	mulwf	(___flmul@b+1)^0,c
  5847  000762  006F FFCC  F0A8    	movff	prodl,___flmul@temp
  5848  000768  006F FFD0  F0A9    	movff	prodh,___flmul@temp+1
  5849  00076E  51A8               	movf	___flmul@temp& (0+255),w,b
  5850  000770  27A4               	addwf	___flmul@prod& (0+255),f,b
  5851  000772  51A9               	movf	(___flmul@temp+1)& (0+255),w,b
  5852  000774  23A5               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5853  000776  0E00               	movlw	0
  5854  000778  23A6               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5855  00077A  0E00               	movlw	0
  5856  00077C  23A7               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5857  00077E                     
  5858                           ; BSR set to: 0
  5859  00077E  502F               	movf	(___flmul@a+1)^0,w,c
  5860  000780  022C               	mulwf	(___flmul@b+2)^0,c
  5861  000782  006F FFCC  F0A8    	movff	prodl,___flmul@temp
  5862  000788  006F FFD0  F0A9    	movff	prodh,___flmul@temp+1
  5863  00078E                     
  5864                           ; BSR set to: 0
  5865  00078E  51A8               	movf	___flmul@temp& (0+255),w,b
  5866  000790  27A4               	addwf	___flmul@prod& (0+255),f,b
  5867  000792  51A9               	movf	(___flmul@temp+1)& (0+255),w,b
  5868  000794  23A5               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5869  000796  0E00               	movlw	0
  5870  000798  23A6               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5871  00079A  0E00               	movlw	0
  5872  00079C  23A7               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5873  00079E  5030               	movf	(___flmul@a+2)^0,w,c
  5874  0007A0  022C               	mulwf	(___flmul@b+2)^0,c
  5875  0007A2  006F FFCC  F0A8    	movff	prodl,___flmul@temp
  5876  0007A8  006F FFD0  F0A9    	movff	prodh,___flmul@temp+1
  5877  0007AE                     
  5878                           ; BSR set to: 0
  5879  0007AE  51A8               	movf	___flmul@temp& (0+255),w,b
  5880  0007B0  6E32               	movwf	??___flmul^0,c
  5881  0007B2  51A9               	movf	(___flmul@temp+1)& (0+255),w,b
  5882  0007B4  6E33               	movwf	(??___flmul+1)^0,c
  5883  0007B6  6A34               	clrf	(??___flmul+2)^0,c
  5884  0007B8  6A35               	clrf	(??___flmul+3)^0,c
  5885  0007BA  C034  F035         	movff	??___flmul+2,??___flmul+3
  5886  0007BE  C033  F034         	movff	??___flmul+1,??___flmul+2
  5887  0007C2  C032  F033         	movff	??___flmul,??___flmul+1
  5888  0007C6  6A32               	clrf	??___flmul^0,c
  5889  0007C8  5032               	movf	??___flmul^0,w,c
  5890  0007CA  27A4               	addwf	___flmul@prod& (0+255),f,b
  5891  0007CC  5033               	movf	(??___flmul+1)^0,w,c
  5892  0007CE  23A5               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5893  0007D0  5034               	movf	(??___flmul+2)^0,w,c
  5894  0007D2  23A6               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5895  0007D4  5035               	movf	(??___flmul+3)^0,w,c
  5896  0007D6  23A7               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5897  0007D8                     
  5898                           ; BSR set to: 0
  5899  0007D8  C09F  F032         	movff	___flmul@grs,??___flmul
  5900  0007DC  C0A0  F033         	movff	___flmul@grs+1,??___flmul+1
  5901  0007E0  C0A1  F034         	movff	___flmul@grs+2,??___flmul+2
  5902  0007E4  C0A2  F035         	movff	___flmul@grs+3,??___flmul+3
  5903  0007E8  0E19               	movlw	25
  5904  0007EA  EFFC  F003         	goto	u4310
  5905  0007EE                     u4315:
  5906  0007EE  90D8               	bcf	status,0,c
  5907  0007F0  3235               	rrcf	(??___flmul+3)^0,f,c
  5908  0007F2  3234               	rrcf	(??___flmul+2)^0,f,c
  5909  0007F4  3233               	rrcf	(??___flmul+1)^0,f,c
  5910  0007F6  3232               	rrcf	??___flmul^0,f,c
  5911  0007F8                     u4310:
  5912  0007F8  2EE8               	decfsz	wreg,f,c
  5913  0007FA  EFF7  F003         	goto	u4315
  5914  0007FE  5032               	movf	??___flmul^0,w,c
  5915  000800  27A4               	addwf	___flmul@prod& (0+255),f,b
  5916  000802  5033               	movf	(??___flmul+1)^0,w,c
  5917  000804  23A5               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5918  000806  5034               	movf	(??___flmul+2)^0,w,c
  5919  000808  23A6               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5920  00080A  5035               	movf	(??___flmul+3)^0,w,c
  5921  00080C  23A7               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5922  00080E                     
  5923                           ; BSR set to: 0
  5924  00080E  C0A1  F0A2         	movff	___flmul@grs+2,___flmul@grs+3
  5925  000812  C0A0  F0A1         	movff	___flmul@grs+1,___flmul@grs+2
  5926  000816  C09F  F0A0         	movff	___flmul@grs,___flmul@grs+1
  5927  00081A  6B9F               	clrf	___flmul@grs& (0+255),b
  5928  00081C                     
  5929                           ; BSR set to: 0
  5930  00081C  519E               	movf	___flmul@aexp& (0+255),w,b
  5931  00081E  C0A3  F032         	movff	___flmul@bexp,??___flmul
  5932  000822  6A33               	clrf	(??___flmul+1)^0,c
  5933  000824  2632               	addwf	??___flmul^0,f,c
  5934  000826  0E00               	movlw	0
  5935  000828  2233               	addwfc	(??___flmul+1)^0,f,c
  5936  00082A  0E82               	movlw	130
  5937  00082C  2432               	addwf	??___flmul^0,w,c
  5938  00082E  6FA8               	movwf	___flmul@temp& (0+255),b
  5939  000830  0EFF               	movlw	255
  5940  000832  2033               	addwfc	(??___flmul+1)^0,w,c
  5941  000834  6FA9               	movwf	(___flmul@temp+1)& (0+255),b
  5942  000836  EF32  F004         	goto	l5629
  5943  00083A                     l5623:
  5944                           
  5945                           ; BSR set to: 0
  5946  00083A  90D8               	bcf	status,0,c
  5947  00083C  37A4               	rlcf	___flmul@prod& (0+255),f,b
  5948  00083E  37A5               	rlcf	(___flmul@prod+1)& (0+255),f,b
  5949  000840  37A6               	rlcf	(___flmul@prod+2)& (0+255),f,b
  5950  000842  37A7               	rlcf	(___flmul@prod+3)& (0+255),f,b
  5951  000844                     
  5952                           ; BSR set to: 0
  5953  000844  AFA2               	btfss	(___flmul@grs+3)& (0+255),7,b
  5954  000846  EF27  F004         	goto	u4321
  5955  00084A  EF29  F004         	goto	u4320
  5956  00084E                     u4321:
  5957  00084E  EF2A  F004         	goto	l2013
  5958  000852                     u4320:
  5959  000852                     
  5960                           ; BSR set to: 0
  5961  000852  81A4               	bsf	___flmul@prod& (0+255),0,b
  5962  000854                     l2013:
  5963                           
  5964                           ; BSR set to: 0
  5965  000854  90D8               	bcf	status,0,c
  5966  000856  379F               	rlcf	___flmul@grs& (0+255),f,b
  5967  000858  37A0               	rlcf	(___flmul@grs+1)& (0+255),f,b
  5968  00085A  37A1               	rlcf	(___flmul@grs+2)& (0+255),f,b
  5969  00085C  37A2               	rlcf	(___flmul@grs+3)& (0+255),f,b
  5970  00085E  07A8               	decf	___flmul@temp& (0+255),f,b
  5971  000860  A0D8               	btfss	status,0,c
  5972  000862  07A9               	decf	(___flmul@temp+1)& (0+255),f,b
  5973  000864                     l5629:
  5974                           
  5975                           ; BSR set to: 0
  5976  000864  AFA6               	btfss	(___flmul@prod+2)& (0+255),7,b
  5977  000866  EF37  F004         	goto	u4331
  5978  00086A  EF39  F004         	goto	u4330
  5979  00086E                     u4331:
  5980  00086E  EF1D  F004         	goto	l5623
  5981  000872                     u4330:
  5982  000872                     
  5983                           ; BSR set to: 0
  5984  000872  0E00               	movlw	0
  5985  000874  6F9E               	movwf	___flmul@aexp& (0+255),b
  5986  000876                     
  5987                           ; BSR set to: 0
  5988  000876  AFA2               	btfss	(___flmul@grs+3)& (0+255),7,b
  5989  000878  EF40  F004         	goto	u4341
  5990  00087C  EF42  F004         	goto	u4340
  5991  000880                     u4341:
  5992  000880  EF66  F004         	goto	l2015
  5993  000884                     u4340:
  5994  000884                     
  5995                           ; BSR set to: 0
  5996  000884  0EFF               	movlw	255
  5997  000886  159F               	andwf	___flmul@grs& (0+255),w,b
  5998  000888  6E32               	movwf	??___flmul^0,c
  5999  00088A  0EFF               	movlw	255
  6000  00088C  15A0               	andwf	(___flmul@grs+1)& (0+255),w,b
  6001  00088E  6E33               	movwf	(??___flmul+1)^0,c
  6002  000890  0EFF               	movlw	255
  6003  000892  15A1               	andwf	(___flmul@grs+2)& (0+255),w,b
  6004  000894  6E34               	movwf	(??___flmul+2)^0,c
  6005  000896  0E7F               	movlw	127
  6006  000898  15A2               	andwf	(___flmul@grs+3)& (0+255),w,b
  6007  00089A  6E35               	movwf	(??___flmul+3)^0,c
  6008  00089C  5032               	movf	??___flmul^0,w,c
  6009  00089E  1033               	iorwf	(??___flmul+1)^0,w,c
  6010  0008A0  1034               	iorwf	(??___flmul+2)^0,w,c
  6011  0008A2  1035               	iorwf	(??___flmul+3)^0,w,c
  6012  0008A4  B4D8               	btfsc	status,2,c
  6013  0008A6  EF57  F004         	goto	u4351
  6014  0008AA  EF59  F004         	goto	u4350
  6015  0008AE                     u4351:
  6016  0008AE  EF5D  F004         	goto	l2016
  6017  0008B2                     u4350:
  6018  0008B2                     l5637:
  6019                           
  6020                           ; BSR set to: 0
  6021  0008B2  0E01               	movlw	1
  6022  0008B4  6F9E               	movwf	___flmul@aexp& (0+255),b
  6023  0008B6  EF66  F004         	goto	l2015
  6024  0008BA                     l2016:
  6025                           
  6026                           ; BSR set to: 0
  6027  0008BA  A1A4               	btfss	___flmul@prod& (0+255),0,b
  6028  0008BC  EF62  F004         	goto	u4361
  6029  0008C0  EF64  F004         	goto	u4360
  6030  0008C4                     u4361:
  6031  0008C4  EF66  F004         	goto	l2015
  6032  0008C8                     u4360:
  6033  0008C8  EF59  F004         	goto	l5637
  6034  0008CC                     l2015:
  6035                           
  6036                           ; BSR set to: 0
  6037  0008CC  519E               	movf	___flmul@aexp& (0+255),w,b
  6038  0008CE  B4D8               	btfsc	status,2,c
  6039  0008D0  EF6C  F004         	goto	u4371
  6040  0008D4  EF6E  F004         	goto	u4370
  6041  0008D8                     u4371:
  6042  0008D8  EF92  F004         	goto	l5649
  6043  0008DC                     u4370:
  6044  0008DC                     
  6045                           ; BSR set to: 0
  6046  0008DC  0E01               	movlw	1
  6047  0008DE  27A4               	addwf	___flmul@prod& (0+255),f,b
  6048  0008E0  0E00               	movlw	0
  6049  0008E2  23A5               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6050  0008E4  23A6               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6051  0008E6  23A7               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6052  0008E8                     
  6053                           ; BSR set to: 0
  6054  0008E8  A1A7               	btfss	(___flmul@prod+3)& (0+255),0,b
  6055  0008EA  EF79  F004         	goto	u4381
  6056  0008EE  EF7B  F004         	goto	u4380
  6057  0008F2                     u4381:
  6058  0008F2  EF92  F004         	goto	l5649
  6059  0008F6                     u4380:
  6060  0008F6                     
  6061                           ; BSR set to: 0
  6062  0008F6  C0A4  F032         	movff	___flmul@prod,??___flmul
  6063  0008FA  C0A5  F033         	movff	___flmul@prod+1,??___flmul+1
  6064  0008FE  C0A6  F034         	movff	___flmul@prod+2,??___flmul+2
  6065  000902  C0A7  F035         	movff	___flmul@prod+3,??___flmul+3
  6066  000906  3435               	rlcf	(??___flmul+3)^0,w,c
  6067  000908  3235               	rrcf	(??___flmul+3)^0,f,c
  6068  00090A  3234               	rrcf	(??___flmul+2)^0,f,c
  6069  00090C  3233               	rrcf	(??___flmul+1)^0,f,c
  6070  00090E  3232               	rrcf	??___flmul^0,f,c
  6071  000910  C032  F0A4         	movff	??___flmul,___flmul@prod
  6072  000914  C033  F0A5         	movff	??___flmul+1,___flmul@prod+1
  6073  000918  C034  F0A6         	movff	??___flmul+2,___flmul@prod+2
  6074  00091C  C035  F0A7         	movff	??___flmul+3,___flmul@prod+3
  6075  000920                     
  6076                           ; BSR set to: 0
  6077  000920  4BA8               	infsnz	___flmul@temp& (0+255),f,b
  6078  000922  2BA9               	incf	(___flmul@temp+1)& (0+255),f,b
  6079  000924                     l5649:
  6080                           
  6081                           ; BSR set to: 0
  6082  000924  BFA9               	btfsc	(___flmul@temp+1)& (0+255),7,b
  6083  000926  EF9D  F004         	goto	u4391
  6084  00092A  51A9               	movf	(___flmul@temp+1)& (0+255),w,b
  6085  00092C  E108               	bnz	u4390
  6086  00092E  29A8               	incf	___flmul@temp& (0+255),w,b
  6087  000930  A0D8               	btfss	status,0,c
  6088  000932  EF9D  F004         	goto	u4391
  6089  000936  EF9F  F004         	goto	u4390
  6090  00093A                     u4391:
  6091  00093A  EFA9  F004         	goto	l5653
  6092  00093E                     u4390:
  6093  00093E                     
  6094                           ; BSR set to: 0
  6095  00093E  0E00               	movlw	0
  6096  000940  6FA4               	movwf	___flmul@prod& (0+255),b
  6097  000942  0E00               	movlw	0
  6098  000944  6FA5               	movwf	(___flmul@prod+1)& (0+255),b
  6099  000946  0E80               	movlw	128
  6100  000948  6FA6               	movwf	(___flmul@prod+2)& (0+255),b
  6101  00094A  0E7F               	movlw	127
  6102  00094C  6FA7               	movwf	(___flmul@prod+3)& (0+255),b
  6103  00094E  EFD7  F004         	goto	l5665
  6104  000952                     l5653:
  6105                           
  6106                           ; BSR set to: 0
  6107  000952  BFA9               	btfsc	(___flmul@temp+1)& (0+255),7,b
  6108  000954  EFB6  F004         	goto	u4400
  6109  000958  51A9               	movf	(___flmul@temp+1)& (0+255),w,b
  6110  00095A  E106               	bnz	u4401
  6111  00095C  05A8               	decf	___flmul@temp& (0+255),w,b
  6112  00095E  B0D8               	btfsc	status,0,c
  6113  000960  EFB4  F004         	goto	u4401
  6114  000964  EFB6  F004         	goto	u4400
  6115  000968                     u4401:
  6116  000968  EFC2  F004         	goto	l2023
  6117  00096C                     u4400:
  6118  00096C                     
  6119                           ; BSR set to: 0
  6120  00096C  0E00               	movlw	0
  6121  00096E  6FA4               	movwf	___flmul@prod& (0+255),b
  6122  000970  0E00               	movlw	0
  6123  000972  6FA5               	movwf	(___flmul@prod+1)& (0+255),b
  6124  000974  0E00               	movlw	0
  6125  000976  6FA6               	movwf	(___flmul@prod+2)& (0+255),b
  6126  000978  0E00               	movlw	0
  6127  00097A  6FA7               	movwf	(___flmul@prod+3)& (0+255),b
  6128  00097C  0E00               	movlw	0
  6129  00097E  6F9D               	movwf	___flmul@sign& (0+255),b
  6130  000980  EFD7  F004         	goto	l5665
  6131  000984                     l2023:
  6132                           
  6133                           ; BSR set to: 0
  6134  000984  C0A8  F0A3         	movff	___flmul@temp,___flmul@bexp
  6135  000988                     
  6136                           ; BSR set to: 0
  6137  000988  0EFF               	movlw	255
  6138  00098A  17A4               	andwf	___flmul@prod& (0+255),f,b
  6139  00098C  0EFF               	movlw	255
  6140  00098E  17A5               	andwf	(___flmul@prod+1)& (0+255),f,b
  6141  000990  0E7F               	movlw	127
  6142  000992  17A6               	andwf	(___flmul@prod+2)& (0+255),f,b
  6143  000994  0E00               	movlw	0
  6144  000996  17A7               	andwf	(___flmul@prod+3)& (0+255),f,b
  6145  000998                     
  6146                           ; BSR set to: 0
  6147  000998  A1A3               	btfss	___flmul@bexp& (0+255),0,b
  6148  00099A  EFD1  F004         	goto	u4411
  6149  00099E  EFD3  F004         	goto	u4410
  6150  0009A2                     u4411:
  6151  0009A2  EFD4  F004         	goto	l5663
  6152  0009A6                     u4410:
  6153  0009A6                     
  6154                           ; BSR set to: 0
  6155  0009A6  8FA6               	bsf	(___flmul@prod+2)& (0+255),7,b
  6156  0009A8                     l5663:
  6157                           
  6158                           ; BSR set to: 0
  6159  0009A8  90D8               	bcf	status,0,c
  6160  0009AA  31A3               	rrcf	___flmul@bexp& (0+255),w,b
  6161  0009AC  6FA7               	movwf	(___flmul@prod+3)& (0+255),b
  6162  0009AE                     l5665:
  6163                           
  6164                           ; BSR set to: 0
  6165  0009AE  519D               	movf	___flmul@sign& (0+255),w,b
  6166  0009B0  13A7               	iorwf	(___flmul@prod+3)& (0+255),f,b
  6167  0009B2                     
  6168                           ; BSR set to: 0
  6169  0009B2  C0A4  F02A         	movff	___flmul@prod,?___flmul
  6170  0009B6  C0A5  F02B         	movff	___flmul@prod+1,?___flmul+1
  6171  0009BA  C0A6  F02C         	movff	___flmul@prod+2,?___flmul+2
  6172  0009BE  C0A7  F02D         	movff	___flmul@prod+3,?___flmul+3
  6173  0009C2                     l2010:
  6174                           
  6175                           ; BSR set to: 0
  6176  0009C2  0012               	return		;funcret
  6177  0009C4                     __end_of___flmul:
  6178                           	callstack 0
  6179                           
  6180 ;; *************** function ___awdiv *****************
  6181 ;; Defined at:
  6182 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  6183 ;; Parameters:    Size  Location     Type
  6184 ;;  dividend        2   19[COMRAM] int 
  6185 ;;  divisor         2   21[COMRAM] int 
  6186 ;; Auto vars:     Size  Location     Type
  6187 ;;  quotient        2   25[COMRAM] int 
  6188 ;;  sign            1   24[COMRAM] unsigned char 
  6189 ;;  counter         1   23[COMRAM] unsigned char 
  6190 ;; Return value:  Size  Location     Type
  6191 ;;                  2   19[COMRAM] int 
  6192 ;; Registers used:
  6193 ;;		wreg, status,2, status,0
  6194 ;; Tracked objects:
  6195 ;;		On entry : 0/0
  6196 ;;		On exit  : 0/0
  6197 ;;		Unchanged: 0/0
  6198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6199 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6200 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6202 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6203 ;;Total ram usage:        8 bytes
  6204 ;; Hardware stack levels used: 1
  6205 ;; Hardware stack levels required when called: 8
  6206 ;; This function calls:
  6207 ;;		Nothing
  6208 ;; This function is called by:
  6209 ;;		_calcSteering
  6210 ;;		_calcMotorPow
  6211 ;;		_setSteering
  6212 ;; This function uses a non-reentrant model
  6213 ;;
  6214                           
  6215                           	psect	text23
  6216  001D32                     __ptext23:
  6217                           	callstack 0
  6218  001D32                     ___awdiv:
  6219                           	callstack 19
  6220  001D32  0E00               	movlw	0
  6221  001D34  6E19               	movwf	___awdiv@sign^0,c
  6222  001D36  BE17               	btfsc	(___awdiv@divisor+1)^0,7,c
  6223  001D38  EFA2  F00E         	goto	u1940
  6224  001D3C  EFA0  F00E         	goto	u1941
  6225  001D40                     u1941:
  6226  001D40  EFA8  F00E         	goto	l3807
  6227  001D44                     u1940:
  6228  001D44  6C16               	negf	___awdiv@divisor^0,c
  6229  001D46  1E17               	comf	(___awdiv@divisor+1)^0,f,c
  6230  001D48  B0D8               	btfsc	status,0,c
  6231  001D4A  2A17               	incf	(___awdiv@divisor+1)^0,f,c
  6232  001D4C  0E01               	movlw	1
  6233  001D4E  6E19               	movwf	___awdiv@sign^0,c
  6234  001D50                     l3807:
  6235  001D50  BE15               	btfsc	(___awdiv@dividend+1)^0,7,c
  6236  001D52  EFAF  F00E         	goto	u1950
  6237  001D56  EFAD  F00E         	goto	u1951
  6238  001D5A                     u1951:
  6239  001D5A  EFB5  F00E         	goto	l3813
  6240  001D5E                     u1950:
  6241  001D5E  6C14               	negf	___awdiv@dividend^0,c
  6242  001D60  1E15               	comf	(___awdiv@dividend+1)^0,f,c
  6243  001D62  B0D8               	btfsc	status,0,c
  6244  001D64  2A15               	incf	(___awdiv@dividend+1)^0,f,c
  6245  001D66  0E01               	movlw	1
  6246  001D68  1A19               	xorwf	___awdiv@sign^0,f,c
  6247  001D6A                     l3813:
  6248  001D6A  0E00               	movlw	0
  6249  001D6C  6E1B               	movwf	(___awdiv@quotient+1)^0,c
  6250  001D6E  0E00               	movlw	0
  6251  001D70  6E1A               	movwf	___awdiv@quotient^0,c
  6252  001D72  5016               	movf	___awdiv@divisor^0,w,c
  6253  001D74  1017               	iorwf	(___awdiv@divisor+1)^0,w,c
  6254  001D76  B4D8               	btfsc	status,2,c
  6255  001D78  EFC0  F00E         	goto	u1961
  6256  001D7C  EFC2  F00E         	goto	u1960
  6257  001D80                     u1961:
  6258  001D80  EFEA  F00E         	goto	l3835
  6259  001D84                     u1960:
  6260  001D84  0E01               	movlw	1
  6261  001D86  6E18               	movwf	___awdiv@counter^0,c
  6262  001D88  EFCA  F00E         	goto	l3821
  6263  001D8C                     l3819:
  6264  001D8C  90D8               	bcf	status,0,c
  6265  001D8E  3616               	rlcf	___awdiv@divisor^0,f,c
  6266  001D90  3617               	rlcf	(___awdiv@divisor+1)^0,f,c
  6267  001D92  2A18               	incf	___awdiv@counter^0,f,c
  6268  001D94                     l3821:
  6269  001D94  AE17               	btfss	(___awdiv@divisor+1)^0,7,c
  6270  001D96  EFCF  F00E         	goto	u1971
  6271  001D9A  EFD1  F00E         	goto	u1970
  6272  001D9E                     u1971:
  6273  001D9E  EFC6  F00E         	goto	l3819
  6274  001DA2                     u1970:
  6275  001DA2                     l3823:
  6276  001DA2  90D8               	bcf	status,0,c
  6277  001DA4  361A               	rlcf	___awdiv@quotient^0,f,c
  6278  001DA6  361B               	rlcf	(___awdiv@quotient+1)^0,f,c
  6279  001DA8  5016               	movf	___awdiv@divisor^0,w,c
  6280  001DAA  5C14               	subwf	___awdiv@dividend^0,w,c
  6281  001DAC  5017               	movf	(___awdiv@divisor+1)^0,w,c
  6282  001DAE  5815               	subwfb	(___awdiv@dividend+1)^0,w,c
  6283  001DB0  A0D8               	btfss	status,0,c
  6284  001DB2  EFDD  F00E         	goto	u1981
  6285  001DB6  EFDF  F00E         	goto	u1980
  6286  001DBA                     u1981:
  6287  001DBA  EFE4  F00E         	goto	l3831
  6288  001DBE                     u1980:
  6289  001DBE  5016               	movf	___awdiv@divisor^0,w,c
  6290  001DC0  5E14               	subwf	___awdiv@dividend^0,f,c
  6291  001DC2  5017               	movf	(___awdiv@divisor+1)^0,w,c
  6292  001DC4  5A15               	subwfb	(___awdiv@dividend+1)^0,f,c
  6293  001DC6  801A               	bsf	___awdiv@quotient^0,0,c
  6294  001DC8                     l3831:
  6295  001DC8  90D8               	bcf	status,0,c
  6296  001DCA  3217               	rrcf	(___awdiv@divisor+1)^0,f,c
  6297  001DCC  3216               	rrcf	___awdiv@divisor^0,f,c
  6298  001DCE  2E18               	decfsz	___awdiv@counter^0,f,c
  6299  001DD0  EFD1  F00E         	goto	l3823
  6300  001DD4                     l3835:
  6301  001DD4  5019               	movf	___awdiv@sign^0,w,c
  6302  001DD6  B4D8               	btfsc	status,2,c
  6303  001DD8  EFF0  F00E         	goto	u1991
  6304  001DDC  EFF2  F00E         	goto	u1990
  6305  001DE0                     u1991:
  6306  001DE0  EFF6  F00E         	goto	l3839
  6307  001DE4                     u1990:
  6308  001DE4  6C1A               	negf	___awdiv@quotient^0,c
  6309  001DE6  1E1B               	comf	(___awdiv@quotient+1)^0,f,c
  6310  001DE8  B0D8               	btfsc	status,0,c
  6311  001DEA  2A1B               	incf	(___awdiv@quotient+1)^0,f,c
  6312  001DEC                     l3839:
  6313  001DEC  C01A  F014         	movff	___awdiv@quotient,?___awdiv
  6314  001DF0  C01B  F015         	movff	___awdiv@quotient+1,?___awdiv+1
  6315  001DF4  0012               	return		;funcret
  6316  001DF6                     __end_of___awdiv:
  6317                           	callstack 0
  6318                           
  6319 ;; *************** function _SYSTEM_Initialize *****************
  6320 ;; Defined at:
  6321 ;;		line 50 in file "mcc_generated_files/mcc.c"
  6322 ;; Parameters:    Size  Location     Type
  6323 ;;		None
  6324 ;; Auto vars:     Size  Location     Type
  6325 ;;		None
  6326 ;; Return value:  Size  Location     Type
  6327 ;;                  1    wreg      void 
  6328 ;; Registers used:
  6329 ;;		wreg, status,2, status,0, cstack
  6330 ;; Tracked objects:
  6331 ;;		On entry : 0/0
  6332 ;;		On exit  : 0/0
  6333 ;;		Unchanged: 0/0
  6334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6338 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6339 ;;Total ram usage:        0 bytes
  6340 ;; Hardware stack levels used: 1
  6341 ;; Hardware stack levels required when called: 10
  6342 ;; This function calls:
  6343 ;;		_ADCC_Initialize
  6344 ;;		_CCP3_Initialize
  6345 ;;		_CCP4_Initialize
  6346 ;;		_CLC3_Initialize
  6347 ;;		_INTERRUPT_Initialize
  6348 ;;		_OSCILLATOR_Initialize
  6349 ;;		_PIN_MANAGER_Initialize
  6350 ;;		_PMD_Initialize
  6351 ;;		_PWM5_Initialize
  6352 ;;		_PWM6_Initialize
  6353 ;;		_PWM7_Initialize
  6354 ;;		_PWM8_Initialize
  6355 ;;		_SMT1_Initialize
  6356 ;;		_TMR2_Initialize
  6357 ;;		_TMR3_Initialize
  6358 ;;		_TMR4_Initialize
  6359 ;;		_TMR5_Initialize
  6360 ;;		_UART1_Initialize
  6361 ;; This function is called by:
  6362 ;;		_main
  6363 ;; This function uses a non-reentrant model
  6364 ;;
  6365                           
  6366                           	psect	text24
  6367  00208C                     __ptext24:
  6368                           	callstack 0
  6369  00208C                     _SYSTEM_Initialize:
  6370                           	callstack 20
  6371  00208C                     
  6372                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
  6373  00208C  EC20  F010         	call	_INTERRUPT_Initialize	;wreg free
  6374                           
  6375                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  6376  002090  EC1C  F013         	call	_PMD_Initialize	;wreg free
  6377                           
  6378                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  6379  002094  ECD1  F00D         	call	_PIN_MANAGER_Initialize	;wreg free
  6380                           
  6381                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  6382  002098  EC9C  F013         	call	_OSCILLATOR_Initialize	;wreg free
  6383  00209C                     
  6384                           ;mcc_generated_files/mcc.c: 56:     CCP3_Initialize();
  6385  00209C  EC98  F012         	call	_CCP3_Initialize	;wreg free
  6386  0020A0                     
  6387                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
  6388  0020A0  ECC7  F00F         	call	_ADCC_Initialize	;wreg free
  6389                           
  6390                           ;mcc_generated_files/mcc.c: 58:     TMR4_Initialize();
  6391  0020A4  ECAF  F012         	call	_TMR4_Initialize	;wreg free
  6392  0020A8                     
  6393                           ;mcc_generated_files/mcc.c: 59:     SMT1_Initialize();
  6394  0020A8  EC21  F012         	call	_SMT1_Initialize	;wreg free
  6395  0020AC                     
  6396                           ;mcc_generated_files/mcc.c: 60:     TMR2_Initialize();
  6397  0020AC  EC50  F013         	call	_TMR2_Initialize	;wreg free
  6398  0020B0                     
  6399                           ;mcc_generated_files/mcc.c: 61:     PWM8_Initialize();
  6400  0020B0  EC6C  F013         	call	_PWM8_Initialize	;wreg free
  6401  0020B4                     
  6402                           ;mcc_generated_files/mcc.c: 62:     PWM6_Initialize();
  6403  0020B4  EC84  F013         	call	_PWM6_Initialize	;wreg free
  6404                           
  6405                           ;mcc_generated_files/mcc.c: 63:     CCP4_Initialize();
  6406  0020B8  EC81  F012         	call	_CCP4_Initialize	;wreg free
  6407  0020BC                     
  6408                           ;mcc_generated_files/mcc.c: 64:     CLC3_Initialize();
  6409  0020BC  ECC5  F012         	call	_CLC3_Initialize	;wreg free
  6410  0020C0                     
  6411                           ;mcc_generated_files/mcc.c: 65:     TMR3_Initialize();
  6412  0020C0  EC16  F011         	call	_TMR3_Initialize	;wreg free
  6413                           
  6414                           ;mcc_generated_files/mcc.c: 66:     PWM5_Initialize();
  6415  0020C4  EC90  F013         	call	_PWM5_Initialize	;wreg free
  6416  0020C8                     
  6417                           ;mcc_generated_files/mcc.c: 67:     TMR5_Initialize();
  6418  0020C8  EC6B  F010         	call	_TMR5_Initialize	;wreg free
  6419  0020CC                     
  6420                           ;mcc_generated_files/mcc.c: 68:     PWM7_Initialize();
  6421  0020CC  EC78  F013         	call	_PWM7_Initialize	;wreg free
  6422                           
  6423                           ;mcc_generated_files/mcc.c: 69:     UART1_Initialize();
  6424  0020D0  ECFB  F00E         	call	_UART1_Initialize	;wreg free
  6425  0020D4  0012               	return		;funcret
  6426  0020D6                     __end_of_SYSTEM_Initialize:
  6427                           	callstack 0
  6428                           
  6429 ;; *************** function _UART1_Initialize *****************
  6430 ;; Defined at:
  6431 ;;		line 87 in file "mcc_generated_files/uart1.c"
  6432 ;; Parameters:    Size  Location     Type
  6433 ;;		None
  6434 ;; Auto vars:     Size  Location     Type
  6435 ;;		None
  6436 ;; Return value:  Size  Location     Type
  6437 ;;                  1    wreg      void 
  6438 ;; Registers used:
  6439 ;;		wreg, status,2, status,0, cstack
  6440 ;; Tracked objects:
  6441 ;;		On entry : 0/0
  6442 ;;		On exit  : 0/0
  6443 ;;		Unchanged: 0/0
  6444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6448 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6449 ;;Total ram usage:        0 bytes
  6450 ;; Hardware stack levels used: 1
  6451 ;; Hardware stack levels required when called: 9
  6452 ;; This function calls:
  6453 ;;		_UART1_SetErrorHandler
  6454 ;;		_UART1_SetFramingErrorHandler
  6455 ;;		_UART1_SetOverrunErrorHandler
  6456 ;;		_UART1_SetRxInterruptHandler
  6457 ;;		_UART1_SetTxInterruptHandler
  6458 ;; This function is called by:
  6459 ;;		_SYSTEM_Initialize
  6460 ;; This function uses a non-reentrant model
  6461 ;;
  6462                           
  6463                           	psect	text25
  6464  001DF6                     __ptext25:
  6465                           	callstack 0
  6466  001DF6                     _UART1_Initialize:
  6467                           	callstack 20
  6468  001DF6                     
  6469                           ;mcc_generated_files/uart1.c: 90:     PIE3bits.U1RXIE = 0;
  6470  001DF6  0139               	movlb	57	; () banked
  6471  001DF8  9793               	bcf	147,3,b	;volatile
  6472  001DFA                     
  6473                           ; BSR set to: 57
  6474                           ;mcc_generated_files/uart1.c: 91:     UART1_SetRxInterruptHandler(UART1_Receive_ISR);
  6475  001DFA  0E6C               	movlw	low _UART1_Receive_ISR
  6476  001DFC  6E14               	movwf	UART1_SetRxInterruptHandler@InterruptHandler^0,c
  6477  001DFE  0E1C               	movlw	high _UART1_Receive_ISR
  6478  001E00  6E15               	movwf	(UART1_SetRxInterruptHandler@InterruptHandler+1)^0,c
  6479  001E02  ECBC  F013         	call	_UART1_SetRxInterruptHandler	;wreg free
  6480  001E06                     
  6481                           ;mcc_generated_files/uart1.c: 92:     PIE3bits.U1TXIE = 0;
  6482  001E06  0139               	movlb	57	; () banked
  6483  001E08  9993               	bcf	147,4,b	;volatile
  6484                           
  6485                           ;mcc_generated_files/uart1.c: 93:     UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
  6486  001E0A  0E6A               	movlw	low _UART1_Transmit_ISR
  6487  001E0C  6E14               	movwf	UART1_SetTxInterruptHandler@InterruptHandler^0,c
  6488  001E0E  0E21               	movlw	high _UART1_Transmit_ISR
  6489  001E10  6E15               	movwf	(UART1_SetTxInterruptHandler@InterruptHandler+1)^0,c
  6490  001E12  ECB7  F013         	call	_UART1_SetTxInterruptHandler	;wreg free
  6491  001E16                     
  6492                           ;mcc_generated_files/uart1.c: 98:     U1P1L = 0x00;
  6493  001E16  0E00               	movlw	0
  6494  001E18  013D               	movlb	61	; () banked
  6495  001E1A  6FEC               	movwf	236,b	;volatile
  6496  001E1C                     
  6497                           ; BSR set to: 61
  6498                           ;mcc_generated_files/uart1.c: 101:     U1P1H = 0x00;
  6499  001E1C  0E00               	movlw	0
  6500  001E1E  6FED               	movwf	237,b	;volatile
  6501  001E20                     
  6502                           ; BSR set to: 61
  6503                           ;mcc_generated_files/uart1.c: 104:     U1P2L = 0x00;
  6504  001E20  0E00               	movlw	0
  6505  001E22  6FEE               	movwf	238,b	;volatile
  6506  001E24                     
  6507                           ; BSR set to: 61
  6508                           ;mcc_generated_files/uart1.c: 107:     U1P2H = 0x00;
  6509  001E24  0E00               	movlw	0
  6510  001E26  6FEF               	movwf	239,b	;volatile
  6511  001E28                     
  6512                           ; BSR set to: 61
  6513                           ;mcc_generated_files/uart1.c: 110:     U1P3L = 0x00;
  6514  001E28  0E00               	movlw	0
  6515  001E2A  6FF0               	movwf	240,b	;volatile
  6516  001E2C                     
  6517                           ; BSR set to: 61
  6518                           ;mcc_generated_files/uart1.c: 113:     U1P3H = 0x00;
  6519  001E2C  0E00               	movlw	0
  6520  001E2E  6FF1               	movwf	241,b	;volatile
  6521  001E30                     
  6522                           ; BSR set to: 61
  6523                           ;mcc_generated_files/uart1.c: 116:     U1CON0 = 0xB0;
  6524  001E30  0EB0               	movlw	176
  6525  001E32  6FF2               	movwf	242,b	;volatile
  6526  001E34                     
  6527                           ; BSR set to: 61
  6528                           ;mcc_generated_files/uart1.c: 119:     U1CON1 = 0x80;
  6529  001E34  0E80               	movlw	128
  6530  001E36  6FF3               	movwf	243,b	;volatile
  6531  001E38                     
  6532                           ; BSR set to: 61
  6533                           ;mcc_generated_files/uart1.c: 122:     U1CON2 = 0x00;
  6534  001E38  0E00               	movlw	0
  6535  001E3A  6FF4               	movwf	244,b	;volatile
  6536  001E3C                     
  6537                           ; BSR set to: 61
  6538                           ;mcc_generated_files/uart1.c: 125:     U1BRGL = 0x8A;
  6539  001E3C  0E8A               	movlw	138
  6540  001E3E  6FF5               	movwf	245,b	;volatile
  6541  001E40                     
  6542                           ; BSR set to: 61
  6543                           ;mcc_generated_files/uart1.c: 128:     U1BRGH = 0x00;
  6544  001E40  0E00               	movlw	0
  6545  001E42  6FF6               	movwf	246,b	;volatile
  6546  001E44                     
  6547                           ; BSR set to: 61
  6548                           ;mcc_generated_files/uart1.c: 131:     U1FIFO = 0x00;
  6549  001E44  0E00               	movlw	0
  6550  001E46  6FF7               	movwf	247,b	;volatile
  6551  001E48                     
  6552                           ; BSR set to: 61
  6553                           ;mcc_generated_files/uart1.c: 134:     U1UIR = 0x00;
  6554  001E48  0E00               	movlw	0
  6555  001E4A  6FF8               	movwf	248,b	;volatile
  6556  001E4C                     
  6557                           ; BSR set to: 61
  6558                           ;mcc_generated_files/uart1.c: 137:     U1ERRIR = 0x00;
  6559  001E4C  0E00               	movlw	0
  6560  001E4E  6FF9               	movwf	249,b	;volatile
  6561  001E50                     
  6562                           ; BSR set to: 61
  6563                           ;mcc_generated_files/uart1.c: 140:     U1ERRIE = 0x00;
  6564  001E50  0E00               	movlw	0
  6565  001E52  6FFA               	movwf	250,b	;volatile
  6566  001E54                     
  6567                           ; BSR set to: 61
  6568                           ;mcc_generated_files/uart1.c: 143:     UART1_SetFramingErrorHandler(UART1_DefaultFraming
      +                          ErrorHandler);
  6569  001E54  0ED8               	movlw	low _UART1_DefaultFramingErrorHandler
  6570  001E56  6E14               	movwf	UART1_SetFramingErrorHandler@interruptHandler^0,c
  6571  001E58  0E27               	movlw	high _UART1_DefaultFramingErrorHandler
  6572  001E5A  6E15               	movwf	(UART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  6573  001E5C  ECC6  F013         	call	_UART1_SetFramingErrorHandler	;wreg free
  6574  001E60                     
  6575                           ;mcc_generated_files/uart1.c: 144:     UART1_SetOverrunErrorHandler(UART1_DefaultOverrun
      +                          ErrorHandler);
  6576  001E60  0ED6               	movlw	low _UART1_DefaultOverrunErrorHandler
  6577  001E62  6E14               	movwf	UART1_SetOverrunErrorHandler@interruptHandler^0,c
  6578  001E64  0E27               	movlw	high _UART1_DefaultOverrunErrorHandler
  6579  001E66  6E15               	movwf	(UART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  6580  001E68  ECC1  F013         	call	_UART1_SetOverrunErrorHandler	;wreg free
  6581  001E6C                     
  6582                           ;mcc_generated_files/uart1.c: 145:     UART1_SetErrorHandler(UART1_DefaultErrorHandler);
  6583  001E6C  0EC8               	movlw	low _UART1_DefaultErrorHandler
  6584  001E6E  6E14               	movwf	UART1_SetErrorHandler@interruptHandler^0,c
  6585  001E70  0E27               	movlw	high _UART1_DefaultErrorHandler
  6586  001E72  6E15               	movwf	(UART1_SetErrorHandler@interruptHandler+1)^0,c
  6587  001E74  ECCB  F013         	call	_UART1_SetErrorHandler	;wreg free
  6588                           
  6589                           ;mcc_generated_files/uart1.c: 147:     uart1RxLastError.status = 0;
  6590  001E78  0E00               	movlw	0
  6591  001E7A  6E40               	movwf	_uart1RxLastError^0,c	;volatile
  6592                           
  6593                           ;mcc_generated_files/uart1.c: 150:     uart1TxHead = 0;
  6594  001E7C  0E00               	movlw	0
  6595  001E7E  6E45               	movwf	_uart1TxHead^0,c	;volatile
  6596                           
  6597                           ;mcc_generated_files/uart1.c: 151:     uart1TxTail = 0;
  6598  001E80  0E00               	movlw	0
  6599  001E82  6E44               	movwf	_uart1TxTail^0,c	;volatile
  6600                           
  6601                           ;mcc_generated_files/uart1.c: 152:     uart1TxBufferRemaining = sizeof(uart1TxBuffer);
  6602  001E84  0E08               	movlw	8
  6603  001E86  0100               	movlb	0	; () banked
  6604  001E88  6FDD               	movwf	_uart1TxBufferRemaining& (0+255),b	;volatile
  6605                           
  6606                           ;mcc_generated_files/uart1.c: 153:     uart1RxHead = 0;
  6607  001E8A  0E00               	movlw	0
  6608  001E8C  6E43               	movwf	_uart1RxHead^0,c	;volatile
  6609                           
  6610                           ;mcc_generated_files/uart1.c: 154:     uart1RxTail = 0;
  6611  001E8E  0E00               	movlw	0
  6612  001E90  6E42               	movwf	_uart1RxTail^0,c	;volatile
  6613                           
  6614                           ;mcc_generated_files/uart1.c: 155:     uart1RxCount = 0;
  6615  001E92  0E00               	movlw	0
  6616  001E94  6E41               	movwf	_uart1RxCount^0,c	;volatile
  6617  001E96                     
  6618                           ; BSR set to: 0
  6619                           ;mcc_generated_files/uart1.c: 158:     PIE3bits.U1RXIE = 1;
  6620  001E96  0139               	movlb	57	; () banked
  6621  001E98  8793               	bsf	147,3,b	;volatile
  6622  001E9A                     
  6623                           ; BSR set to: 57
  6624  001E9A  0012               	return		;funcret
  6625  001E9C                     __end_of_UART1_Initialize:
  6626                           	callstack 0
  6627                           
  6628 ;; *************** function _UART1_SetTxInterruptHandler *****************
  6629 ;; Defined at:
  6630 ;;		line 333 in file "mcc_generated_files/uart1.c"
  6631 ;; Parameters:    Size  Location     Type
  6632 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
  6633 ;;		 -> UART1_Transmit_ISR(1), 
  6634 ;; Auto vars:     Size  Location     Type
  6635 ;;		None
  6636 ;; Return value:  Size  Location     Type
  6637 ;;                  1    wreg      void 
  6638 ;; Registers used:
  6639 ;;		wreg, status,2, status,0
  6640 ;; Tracked objects:
  6641 ;;		On entry : 0/0
  6642 ;;		On exit  : 0/0
  6643 ;;		Unchanged: 0/0
  6644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6645 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6648 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6649 ;;Total ram usage:        2 bytes
  6650 ;; Hardware stack levels used: 1
  6651 ;; Hardware stack levels required when called: 8
  6652 ;; This function calls:
  6653 ;;		Nothing
  6654 ;; This function is called by:
  6655 ;;		_UART1_Initialize
  6656 ;; This function uses a non-reentrant model
  6657 ;;
  6658                           
  6659                           	psect	text26
  6660  00276E                     __ptext26:
  6661                           	callstack 0
  6662  00276E                     _UART1_SetTxInterruptHandler:
  6663                           	callstack 20
  6664  00276E                     
  6665                           ;mcc_generated_files/uart1.c: 334:     UART1_TxInterruptHandler = InterruptHandler;
  6666  00276E  C014  F0D9         	movff	UART1_SetTxInterruptHandler@InterruptHandler,_UART1_TxInterruptHandler
  6667  002772  C015  F0DA         	movff	UART1_SetTxInterruptHandler@InterruptHandler+1,_UART1_TxInterruptHandler+1
  6668  002776  0012               	return		;funcret
  6669  002778                     __end_of_UART1_SetTxInterruptHandler:
  6670                           	callstack 0
  6671                           
  6672 ;; *************** function _UART1_SetRxInterruptHandler *****************
  6673 ;; Defined at:
  6674 ;;		line 329 in file "mcc_generated_files/uart1.c"
  6675 ;; Parameters:    Size  Location     Type
  6676 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
  6677 ;;		 -> UART1_Receive_ISR(1), 
  6678 ;; Auto vars:     Size  Location     Type
  6679 ;;		None
  6680 ;; Return value:  Size  Location     Type
  6681 ;;                  1    wreg      void 
  6682 ;; Registers used:
  6683 ;;		wreg, status,2, status,0
  6684 ;; Tracked objects:
  6685 ;;		On entry : 0/0
  6686 ;;		On exit  : 0/0
  6687 ;;		Unchanged: 0/0
  6688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6689 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6692 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6693 ;;Total ram usage:        2 bytes
  6694 ;; Hardware stack levels used: 1
  6695 ;; Hardware stack levels required when called: 8
  6696 ;; This function calls:
  6697 ;;		Nothing
  6698 ;; This function is called by:
  6699 ;;		_UART1_Initialize
  6700 ;; This function uses a non-reentrant model
  6701 ;;
  6702                           
  6703                           	psect	text27
  6704  002778                     __ptext27:
  6705                           	callstack 0
  6706  002778                     _UART1_SetRxInterruptHandler:
  6707                           	callstack 20
  6708  002778                     
  6709                           ;mcc_generated_files/uart1.c: 330:     UART1_RxInterruptHandler = InterruptHandler;
  6710  002778  C014  F0DB         	movff	UART1_SetRxInterruptHandler@InterruptHandler,_UART1_RxInterruptHandler
  6711  00277C  C015  F0DC         	movff	UART1_SetRxInterruptHandler@InterruptHandler+1,_UART1_RxInterruptHandler+1
  6712  002780  0012               	return		;funcret
  6713  002782                     __end_of_UART1_SetRxInterruptHandler:
  6714                           	callstack 0
  6715                           
  6716 ;; *************** function _UART1_SetOverrunErrorHandler *****************
  6717 ;; Defined at:
  6718 ;;		line 319 in file "mcc_generated_files/uart1.c"
  6719 ;; Parameters:    Size  Location     Type
  6720 ;;  interruptHan    2   19[COMRAM] PTR FTN()void 
  6721 ;;		 -> UART1_DefaultOverrunErrorHandler(1), 
  6722 ;; Auto vars:     Size  Location     Type
  6723 ;;		None
  6724 ;; Return value:  Size  Location     Type
  6725 ;;                  1    wreg      void 
  6726 ;; Registers used:
  6727 ;;		wreg, status,2, status,0
  6728 ;; Tracked objects:
  6729 ;;		On entry : 0/0
  6730 ;;		On exit  : 0/0
  6731 ;;		Unchanged: 0/0
  6732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6733 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6736 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6737 ;;Total ram usage:        2 bytes
  6738 ;; Hardware stack levels used: 1
  6739 ;; Hardware stack levels required when called: 8
  6740 ;; This function calls:
  6741 ;;		Nothing
  6742 ;; This function is called by:
  6743 ;;		_UART1_Initialize
  6744 ;; This function uses a non-reentrant model
  6745 ;;
  6746                           
  6747                           	psect	text28
  6748  002782                     __ptext28:
  6749                           	callstack 0
  6750  002782                     _UART1_SetOverrunErrorHandler:
  6751                           	callstack 20
  6752  002782                     
  6753                           ;mcc_generated_files/uart1.c: 320:     UART1_OverrunErrorHandler = interruptHandler;
  6754  002782  C014  F0D5         	movff	UART1_SetOverrunErrorHandler@interruptHandler,_UART1_OverrunErrorHandler
  6755  002786  C015  F0D6         	movff	UART1_SetOverrunErrorHandler@interruptHandler+1,_UART1_OverrunErrorHandler+1
  6756  00278A  0012               	return		;funcret
  6757  00278C                     __end_of_UART1_SetOverrunErrorHandler:
  6758                           	callstack 0
  6759                           
  6760 ;; *************** function _UART1_SetFramingErrorHandler *****************
  6761 ;; Defined at:
  6762 ;;		line 315 in file "mcc_generated_files/uart1.c"
  6763 ;; Parameters:    Size  Location     Type
  6764 ;;  interruptHan    2   19[COMRAM] PTR FTN()void 
  6765 ;;		 -> UART1_DefaultFramingErrorHandler(1), 
  6766 ;; Auto vars:     Size  Location     Type
  6767 ;;		None
  6768 ;; Return value:  Size  Location     Type
  6769 ;;                  1    wreg      void 
  6770 ;; Registers used:
  6771 ;;		wreg, status,2, status,0
  6772 ;; Tracked objects:
  6773 ;;		On entry : 0/0
  6774 ;;		On exit  : 0/0
  6775 ;;		Unchanged: 0/0
  6776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6777 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6780 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6781 ;;Total ram usage:        2 bytes
  6782 ;; Hardware stack levels used: 1
  6783 ;; Hardware stack levels required when called: 8
  6784 ;; This function calls:
  6785 ;;		Nothing
  6786 ;; This function is called by:
  6787 ;;		_UART1_Initialize
  6788 ;; This function uses a non-reentrant model
  6789 ;;
  6790                           
  6791                           	psect	text29
  6792  00278C                     __ptext29:
  6793                           	callstack 0
  6794  00278C                     _UART1_SetFramingErrorHandler:
  6795                           	callstack 20
  6796  00278C                     
  6797                           ;mcc_generated_files/uart1.c: 316:     UART1_FramingErrorHandler = interruptHandler;
  6798  00278C  C014  F0D7         	movff	UART1_SetFramingErrorHandler@interruptHandler,_UART1_FramingErrorHandler
  6799  002790  C015  F0D8         	movff	UART1_SetFramingErrorHandler@interruptHandler+1,_UART1_FramingErrorHandler+1
  6800  002794  0012               	return		;funcret
  6801  002796                     __end_of_UART1_SetFramingErrorHandler:
  6802                           	callstack 0
  6803                           
  6804 ;; *************** function _UART1_SetErrorHandler *****************
  6805 ;; Defined at:
  6806 ;;		line 323 in file "mcc_generated_files/uart1.c"
  6807 ;; Parameters:    Size  Location     Type
  6808 ;;  interruptHan    2   19[COMRAM] PTR FTN()void 
  6809 ;;		 -> UART1_DefaultErrorHandler(1), 
  6810 ;; Auto vars:     Size  Location     Type
  6811 ;;		None
  6812 ;; Return value:  Size  Location     Type
  6813 ;;                  1    wreg      void 
  6814 ;; Registers used:
  6815 ;;		wreg, status,2, status,0
  6816 ;; Tracked objects:
  6817 ;;		On entry : 0/0
  6818 ;;		On exit  : 0/0
  6819 ;;		Unchanged: 0/0
  6820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6821 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6824 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6825 ;;Total ram usage:        2 bytes
  6826 ;; Hardware stack levels used: 1
  6827 ;; Hardware stack levels required when called: 8
  6828 ;; This function calls:
  6829 ;;		Nothing
  6830 ;; This function is called by:
  6831 ;;		_UART1_Initialize
  6832 ;; This function uses a non-reentrant model
  6833 ;;
  6834                           
  6835                           	psect	text30
  6836  002796                     __ptext30:
  6837                           	callstack 0
  6838  002796                     _UART1_SetErrorHandler:
  6839                           	callstack 20
  6840  002796                     
  6841                           ;mcc_generated_files/uart1.c: 324:     UART1_ErrorHandler = interruptHandler;
  6842  002796  C014  F0D3         	movff	UART1_SetErrorHandler@interruptHandler,_UART1_ErrorHandler
  6843  00279A  C015  F0D4         	movff	UART1_SetErrorHandler@interruptHandler+1,_UART1_ErrorHandler+1
  6844  00279E  0012               	return		;funcret
  6845  0027A0                     __end_of_UART1_SetErrorHandler:
  6846                           	callstack 0
  6847                           
  6848 ;; *************** function _TMR5_Initialize *****************
  6849 ;; Defined at:
  6850 ;;		line 67 in file "mcc_generated_files/tmr5.c"
  6851 ;; Parameters:    Size  Location     Type
  6852 ;;		None
  6853 ;; Auto vars:     Size  Location     Type
  6854 ;;		None
  6855 ;; Return value:  Size  Location     Type
  6856 ;;                  1    wreg      void 
  6857 ;; Registers used:
  6858 ;;		wreg, status,2, status,0, cstack
  6859 ;; Tracked objects:
  6860 ;;		On entry : 0/0
  6861 ;;		On exit  : 0/0
  6862 ;;		Unchanged: 0/0
  6863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6866 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6867 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6868 ;;Total ram usage:        2 bytes
  6869 ;; Hardware stack levels used: 1
  6870 ;; Hardware stack levels required when called: 9
  6871 ;; This function calls:
  6872 ;;		_TMR5_SetGateInterruptHandler
  6873 ;; This function is called by:
  6874 ;;		_SYSTEM_Initialize
  6875 ;; This function uses a non-reentrant model
  6876 ;;
  6877                           
  6878                           	psect	text31
  6879  0020D6                     __ptext31:
  6880                           	callstack 0
  6881  0020D6                     _TMR5_Initialize:
  6882                           	callstack 20
  6883  0020D6                     
  6884                           ;mcc_generated_files/tmr5.c: 72:     T5GCON = 0xC0;
  6885  0020D6  0EC0               	movlw	192
  6886  0020D8  6E9B               	movwf	155,c	;volatile
  6887                           
  6888                           ;mcc_generated_files/tmr5.c: 75:     T5GATE = 0x00;
  6889  0020DA  0E00               	movlw	0
  6890  0020DC  6E9C               	movwf	156,c	;volatile
  6891                           
  6892                           ;mcc_generated_files/tmr5.c: 78:     T5CLK = 0x05;
  6893  0020DE  0E05               	movlw	5
  6894  0020E0  6E9D               	movwf	157,c	;volatile
  6895                           
  6896                           ;mcc_generated_files/tmr5.c: 81:     TMR5H = 0x00;
  6897  0020E2  0E00               	movlw	0
  6898  0020E4  6E99               	movwf	153,c	;volatile
  6899                           
  6900                           ;mcc_generated_files/tmr5.c: 84:     TMR5L = 0x00;
  6901  0020E6  0E00               	movlw	0
  6902  0020E8  6E98               	movwf	152,c	;volatile
  6903  0020EA                     
  6904                           ;mcc_generated_files/tmr5.c: 87:     PIR8bits.TMR5IF = 0;
  6905  0020EA  0139               	movlb	57	; () banked
  6906  0020EC  9DA8               	bcf	168,6,b	;volatile
  6907  0020EE                     
  6908                           ; BSR set to: 57
  6909                           ;mcc_generated_files/tmr5.c: 90:     timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
  6910  0020EE  5098               	movf	152,w,c	;volatile
  6911  0020F0  006F FE64  F016    	movff	16281,??_TMR5_Initialize	;volatile
  6912  0020F6  6A17               	clrf	(??_TMR5_Initialize+1)^0,c
  6913  0020F8  C016  F017         	movff	??_TMR5_Initialize,??_TMR5_Initialize+1
  6914  0020FC  6A16               	clrf	??_TMR5_Initialize^0,c
  6915  0020FE  1016               	iorwf	??_TMR5_Initialize^0,w,c
  6916  002100  0100               	movlb	0	; () banked
  6917  002102  6FCD               	movwf	_timer5ReloadVal& (0+255),b	;volatile
  6918  002104  5017               	movf	(??_TMR5_Initialize+1)^0,w,c
  6919  002106  6FCE               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
  6920  002108                     
  6921                           ; BSR set to: 0
  6922                           ;mcc_generated_files/tmr5.c: 93:     PIR8bits.TMR5GIF = 0;
  6923  002108  0139               	movlb	57	; () banked
  6924  00210A  9FA8               	bcf	168,7,b	;volatile
  6925  00210C                     
  6926                           ; BSR set to: 57
  6927                           ;mcc_generated_files/tmr5.c: 96:     PIE8bits.TMR5GIE = 1;
  6928  00210C  8F98               	bsf	152,7,b	;volatile
  6929  00210E                     
  6930                           ; BSR set to: 57
  6931                           ;mcc_generated_files/tmr5.c: 99:     TMR5_SetGateInterruptHandler(TMR5_DefaultGateInterr
      +                          uptHandler);
  6932  00210E  0EBC               	movlw	low _TMR5_DefaultGateInterruptHandler
  6933  002110  6E14               	movwf	TMR5_SetGateInterruptHandler@InterruptHandler^0,c
  6934  002112  0E26               	movlw	high _TMR5_DefaultGateInterruptHandler
  6935  002114  6E15               	movwf	(TMR5_SetGateInterruptHandler@InterruptHandler+1)^0,c
  6936  002116  ECD0  F013         	call	_TMR5_SetGateInterruptHandler	;wreg free
  6937  00211A                     
  6938                           ;mcc_generated_files/tmr5.c: 102:     T5CON = 0x03;
  6939  00211A  0E03               	movlw	3
  6940  00211C  6E9A               	movwf	154,c	;volatile
  6941  00211E  0012               	return		;funcret
  6942  002120                     __end_of_TMR5_Initialize:
  6943                           	callstack 0
  6944                           
  6945 ;; *************** function _TMR5_SetGateInterruptHandler *****************
  6946 ;; Defined at:
  6947 ;;		line 186 in file "mcc_generated_files/tmr5.c"
  6948 ;; Parameters:    Size  Location     Type
  6949 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
  6950 ;;		 -> TMR5_DefaultGateInterruptHandler(1), 
  6951 ;; Auto vars:     Size  Location     Type
  6952 ;;		None
  6953 ;; Return value:  Size  Location     Type
  6954 ;;                  1    wreg      void 
  6955 ;; Registers used:
  6956 ;;		wreg, status,2, status,0
  6957 ;; Tracked objects:
  6958 ;;		On entry : 0/0
  6959 ;;		On exit  : 0/0
  6960 ;;		Unchanged: 0/0
  6961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6962 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6965 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6966 ;;Total ram usage:        2 bytes
  6967 ;; Hardware stack levels used: 1
  6968 ;; Hardware stack levels required when called: 8
  6969 ;; This function calls:
  6970 ;;		Nothing
  6971 ;; This function is called by:
  6972 ;;		_TMR5_Initialize
  6973 ;; This function uses a non-reentrant model
  6974 ;;
  6975                           
  6976                           	psect	text32
  6977  0027A0                     __ptext32:
  6978                           	callstack 0
  6979  0027A0                     _TMR5_SetGateInterruptHandler:
  6980                           	callstack 20
  6981  0027A0                     
  6982                           ;mcc_generated_files/tmr5.c: 187:     TMR5_GateInterruptHandler = InterruptHandler;
  6983  0027A0  C014  F0CB         	movff	TMR5_SetGateInterruptHandler@InterruptHandler,_TMR5_GateInterruptHandler
  6984  0027A4  C015  F0CC         	movff	TMR5_SetGateInterruptHandler@InterruptHandler+1,_TMR5_GateInterruptHandler+1
  6985  0027A8  0012               	return		;funcret
  6986  0027AA                     __end_of_TMR5_SetGateInterruptHandler:
  6987                           	callstack 0
  6988                           
  6989 ;; *************** function _TMR4_Initialize *****************
  6990 ;; Defined at:
  6991 ;;		line 65 in file "mcc_generated_files/tmr4.c"
  6992 ;; Parameters:    Size  Location     Type
  6993 ;;		None
  6994 ;; Auto vars:     Size  Location     Type
  6995 ;;		None
  6996 ;; Return value:  Size  Location     Type
  6997 ;;                  1    wreg      void 
  6998 ;; Registers used:
  6999 ;;		wreg, status,2, status,0, cstack
  7000 ;; Tracked objects:
  7001 ;;		On entry : 0/0
  7002 ;;		On exit  : 0/0
  7003 ;;		Unchanged: 0/0
  7004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7008 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7009 ;;Total ram usage:        0 bytes
  7010 ;; Hardware stack levels used: 1
  7011 ;; Hardware stack levels required when called: 9
  7012 ;; This function calls:
  7013 ;;		_TMR4_SetInterruptHandler
  7014 ;; This function is called by:
  7015 ;;		_SYSTEM_Initialize
  7016 ;; This function uses a non-reentrant model
  7017 ;;
  7018                           
  7019                           	psect	text33
  7020  00255E                     __ptext33:
  7021                           	callstack 0
  7022  00255E                     _TMR4_Initialize:
  7023                           	callstack 20
  7024  00255E                     
  7025                           ;mcc_generated_files/tmr4.c: 70:     T4CLKCON = 0x01;
  7026  00255E  0E01               	movlw	1
  7027  002560  6EA2               	movwf	162,c	;volatile
  7028                           
  7029                           ;mcc_generated_files/tmr4.c: 73:     T4HLT = 0x00;
  7030  002562  0E00               	movlw	0
  7031  002564  6EA1               	movwf	161,c	;volatile
  7032                           
  7033                           ;mcc_generated_files/tmr4.c: 76:     T4RST = 0x00;
  7034  002566  0E00               	movlw	0
  7035  002568  6EA3               	movwf	163,c	;volatile
  7036                           
  7037                           ;mcc_generated_files/tmr4.c: 79:     T4PR = 0xF9;
  7038  00256A  0EF9               	movlw	249
  7039  00256C  6E9F               	movwf	159,c	;volatile
  7040                           
  7041                           ;mcc_generated_files/tmr4.c: 82:     T4TMR = 0x00;
  7042  00256E  0E00               	movlw	0
  7043  002570  6E9E               	movwf	158,c	;volatile
  7044  002572                     
  7045                           ;mcc_generated_files/tmr4.c: 85:     PIR7bits.TMR4IF = 0;
  7046  002572  0139               	movlb	57	; () banked
  7047  002574  91A7               	bcf	167,0,b	;volatile
  7048  002576                     
  7049                           ; BSR set to: 57
  7050                           ;mcc_generated_files/tmr4.c: 88:     PIE7bits.TMR4IE = 1;
  7051  002576  8197               	bsf	151,0,b	;volatile
  7052  002578                     
  7053                           ; BSR set to: 57
  7054                           ;mcc_generated_files/tmr4.c: 91:     TMR4_SetInterruptHandler(TMR4_DefaultInterruptHandl
      +                          er);
  7055  002578  0EDA               	movlw	low _TMR4_DefaultInterruptHandler
  7056  00257A  6E14               	movwf	TMR4_SetInterruptHandler@InterruptHandler^0,c
  7057  00257C  0E27               	movlw	high _TMR4_DefaultInterruptHandler
  7058  00257E  6E15               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)^0,c
  7059  002580  ECD5  F013         	call	_TMR4_SetInterruptHandler	;wreg free
  7060  002584                     
  7061                           ;mcc_generated_files/tmr4.c: 94:     T4CON = 0xE0;
  7062  002584  0EE0               	movlw	224
  7063  002586  6EA0               	movwf	160,c	;volatile
  7064  002588  0012               	return		;funcret
  7065  00258A                     __end_of_TMR4_Initialize:
  7066                           	callstack 0
  7067                           
  7068 ;; *************** function _TMR4_SetInterruptHandler *****************
  7069 ;; Defined at:
  7070 ;;		line 194 in file "mcc_generated_files/tmr4.c"
  7071 ;; Parameters:    Size  Location     Type
  7072 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
  7073 ;;		 -> TMR4_10msISR(1), TMR4_DefaultInterruptHandler(1), 
  7074 ;; Auto vars:     Size  Location     Type
  7075 ;;		None
  7076 ;; Return value:  Size  Location     Type
  7077 ;;                  1    wreg      void 
  7078 ;; Registers used:
  7079 ;;		wreg, status,2, status,0
  7080 ;; Tracked objects:
  7081 ;;		On entry : 0/0
  7082 ;;		On exit  : 0/0
  7083 ;;		Unchanged: 0/0
  7084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7085 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7088 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7089 ;;Total ram usage:        2 bytes
  7090 ;; Hardware stack levels used: 1
  7091 ;; Hardware stack levels required when called: 8
  7092 ;; This function calls:
  7093 ;;		Nothing
  7094 ;; This function is called by:
  7095 ;;		_TMR4_Initialize
  7096 ;;		_main
  7097 ;; This function uses a non-reentrant model
  7098 ;;
  7099                           
  7100                           	psect	text34
  7101  0027AA                     __ptext34:
  7102                           	callstack 0
  7103  0027AA                     _TMR4_SetInterruptHandler:
  7104                           	callstack 22
  7105  0027AA                     
  7106                           ;mcc_generated_files/tmr4.c: 195:     TMR4_InterruptHandler = InterruptHandler;
  7107  0027AA  C014  F0C7         	movff	TMR4_SetInterruptHandler@InterruptHandler,_TMR4_InterruptHandler
  7108  0027AE  C015  F0C8         	movff	TMR4_SetInterruptHandler@InterruptHandler+1,_TMR4_InterruptHandler+1
  7109  0027B2  0012               	return		;funcret
  7110  0027B4                     __end_of_TMR4_SetInterruptHandler:
  7111                           	callstack 0
  7112                           
  7113 ;; *************** function _TMR3_Initialize *****************
  7114 ;; Defined at:
  7115 ;;		line 63 in file "mcc_generated_files/tmr3.c"
  7116 ;; Parameters:    Size  Location     Type
  7117 ;;		None
  7118 ;; Auto vars:     Size  Location     Type
  7119 ;;		None
  7120 ;; Return value:  Size  Location     Type
  7121 ;;                  1    wreg      void 
  7122 ;; Registers used:
  7123 ;;		wreg, status,2, status,0
  7124 ;; Tracked objects:
  7125 ;;		On entry : 0/0
  7126 ;;		On exit  : 0/0
  7127 ;;		Unchanged: 0/0
  7128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7131 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7132 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7133 ;;Total ram usage:        2 bytes
  7134 ;; Hardware stack levels used: 1
  7135 ;; Hardware stack levels required when called: 8
  7136 ;; This function calls:
  7137 ;;		Nothing
  7138 ;; This function is called by:
  7139 ;;		_SYSTEM_Initialize
  7140 ;; This function uses a non-reentrant model
  7141 ;;
  7142                           
  7143                           	psect	text35
  7144  00222C                     __ptext35:
  7145                           	callstack 0
  7146  00222C                     _TMR3_Initialize:
  7147                           	callstack 21
  7148  00222C                     
  7149                           ;mcc_generated_files/tmr3.c: 68:     T3GCON = 0x00;
  7150  00222C  0E00               	movlw	0
  7151  00222E  6EA7               	movwf	167,c	;volatile
  7152                           
  7153                           ;mcc_generated_files/tmr3.c: 71:     T3GATE = 0x00;
  7154  002230  0E00               	movlw	0
  7155  002232  6EA8               	movwf	168,c	;volatile
  7156                           
  7157                           ;mcc_generated_files/tmr3.c: 74:     T3CLK = 0x05;
  7158  002234  0E05               	movlw	5
  7159  002236  6EA9               	movwf	169,c	;volatile
  7160                           
  7161                           ;mcc_generated_files/tmr3.c: 77:     TMR3H = 0x00;
  7162  002238  0E00               	movlw	0
  7163  00223A  6EA5               	movwf	165,c	;volatile
  7164                           
  7165                           ;mcc_generated_files/tmr3.c: 80:     TMR3L = 0x00;
  7166  00223C  0E00               	movlw	0
  7167  00223E  6EA4               	movwf	164,c	;volatile
  7168  002240                     
  7169                           ;mcc_generated_files/tmr3.c: 83:     PIR6bits.TMR3IF = 0;
  7170  002240  0139               	movlb	57	; () banked
  7171  002242  9DA6               	bcf	166,6,b	;volatile
  7172  002244                     
  7173                           ; BSR set to: 57
  7174                           ;mcc_generated_files/tmr3.c: 86:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
  7175  002244  50A4               	movf	164,w,c	;volatile
  7176  002246  006F FE94  F014    	movff	16293,??_TMR3_Initialize	;volatile
  7177  00224C  6A15               	clrf	(??_TMR3_Initialize+1)^0,c
  7178  00224E  C014  F015         	movff	??_TMR3_Initialize,??_TMR3_Initialize+1
  7179  002252  6A14               	clrf	??_TMR3_Initialize^0,c
  7180  002254  1014               	iorwf	??_TMR3_Initialize^0,w,c
  7181  002256  0100               	movlb	0	; () banked
  7182  002258  6FC9               	movwf	_timer3ReloadVal& (0+255),b	;volatile
  7183  00225A  5015               	movf	(??_TMR3_Initialize+1)^0,w,c
  7184  00225C  6FCA               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
  7185  00225E                     
  7186                           ; BSR set to: 0
  7187                           ;mcc_generated_files/tmr3.c: 89:     T3CON = 0x01;
  7188  00225E  0E01               	movlw	1
  7189  002260  6EA6               	movwf	166,c	;volatile
  7190  002262                     
  7191                           ; BSR set to: 0
  7192  002262  0012               	return		;funcret
  7193  002264                     __end_of_TMR3_Initialize:
  7194                           	callstack 0
  7195                           
  7196 ;; *************** function _TMR2_Initialize *****************
  7197 ;; Defined at:
  7198 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  7199 ;; Parameters:    Size  Location     Type
  7200 ;;		None
  7201 ;; Auto vars:     Size  Location     Type
  7202 ;;		None
  7203 ;; Return value:  Size  Location     Type
  7204 ;;                  1    wreg      void 
  7205 ;; Registers used:
  7206 ;;		wreg, status,2
  7207 ;; Tracked objects:
  7208 ;;		On entry : 0/0
  7209 ;;		On exit  : 0/0
  7210 ;;		Unchanged: 0/0
  7211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7215 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7216 ;;Total ram usage:        0 bytes
  7217 ;; Hardware stack levels used: 1
  7218 ;; Hardware stack levels required when called: 8
  7219 ;; This function calls:
  7220 ;;		Nothing
  7221 ;; This function is called by:
  7222 ;;		_SYSTEM_Initialize
  7223 ;; This function uses a non-reentrant model
  7224 ;;
  7225                           
  7226                           	psect	text36
  7227  0026A0                     __ptext36:
  7228                           	callstack 0
  7229  0026A0                     _TMR2_Initialize:
  7230                           	callstack 21
  7231  0026A0                     
  7232                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x05;
  7233  0026A0  0E05               	movlw	5
  7234  0026A2  6EAE               	movwf	174,c	;volatile
  7235                           
  7236                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
  7237  0026A4  0E00               	movlw	0
  7238  0026A6  6EAD               	movwf	173,c	;volatile
  7239                           
  7240                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
  7241  0026A8  0E00               	movlw	0
  7242  0026AA  6EAF               	movwf	175,c	;volatile
  7243  0026AC                     
  7244                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0xFF;
  7245  0026AC  68AB               	setf	171,c	;volatile
  7246                           
  7247                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
  7248  0026AE  0E00               	movlw	0
  7249  0026B0  6EAA               	movwf	170,c	;volatile
  7250  0026B2                     
  7251                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
  7252  0026B2  0139               	movlb	57	; () banked
  7253  0026B4  95A4               	bcf	164,2,b	;volatile
  7254                           
  7255                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xB0;
  7256  0026B6  0EB0               	movlw	176
  7257  0026B8  6EAC               	movwf	172,c	;volatile
  7258  0026BA                     
  7259                           ; BSR set to: 57
  7260  0026BA  0012               	return		;funcret
  7261  0026BC                     __end_of_TMR2_Initialize:
  7262                           	callstack 0
  7263                           
  7264 ;; *************** function _SMT1_Initialize *****************
  7265 ;; Defined at:
  7266 ;;		line 60 in file "mcc_generated_files/smt1.c"
  7267 ;; Parameters:    Size  Location     Type
  7268 ;;		None
  7269 ;; Auto vars:     Size  Location     Type
  7270 ;;		None
  7271 ;; Return value:  Size  Location     Type
  7272 ;;                  1    wreg      void 
  7273 ;; Registers used:
  7274 ;;		wreg, status,2
  7275 ;; Tracked objects:
  7276 ;;		On entry : 0/0
  7277 ;;		On exit  : 0/0
  7278 ;;		Unchanged: 0/0
  7279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7283 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7284 ;;Total ram usage:        0 bytes
  7285 ;; Hardware stack levels used: 1
  7286 ;; Hardware stack levels required when called: 8
  7287 ;; This function calls:
  7288 ;;		Nothing
  7289 ;; This function is called by:
  7290 ;;		_SYSTEM_Initialize
  7291 ;; This function uses a non-reentrant model
  7292 ;;
  7293                           
  7294                           	psect	text37
  7295  002442                     __ptext37:
  7296                           	callstack 0
  7297  002442                     _SMT1_Initialize:
  7298                           	callstack 21
  7299  002442                     
  7300                           ;mcc_generated_files/smt1.c: 63:     SMT1CON0 = 0x80;
  7301  002442  0E80               	movlw	128
  7302  002444  013F               	movlb	63	; () banked
  7303  002446  6F1E               	movwf	30,b	;volatile
  7304                           
  7305                           ;mcc_generated_files/smt1.c: 66:     SMT1CON1 = 0x42;
  7306  002448  0E42               	movlw	66
  7307  00244A  6F1F               	movwf	31,b	;volatile
  7308                           
  7309                           ;mcc_generated_files/smt1.c: 69:     SMT1STAT = 0x00;
  7310  00244C  0E00               	movlw	0
  7311  00244E  6F20               	movwf	32,b	;volatile
  7312                           
  7313                           ;mcc_generated_files/smt1.c: 72:     SMT1CLK = 0x04;
  7314  002450  0E04               	movlw	4
  7315  002452  6F21               	movwf	33,b	;volatile
  7316                           
  7317                           ;mcc_generated_files/smt1.c: 75:     SMT1WIN = 0x00;
  7318  002454  0E00               	movlw	0
  7319  002456  6F23               	movwf	35,b	;volatile
  7320                           
  7321                           ;mcc_generated_files/smt1.c: 78:     SMT1SIG = 0x00;
  7322  002458  0E00               	movlw	0
  7323  00245A  6F22               	movwf	34,b	;volatile
  7324                           
  7325                           ;mcc_generated_files/smt1.c: 81:     SMT1PRU = 0x01;
  7326  00245C  0E01               	movlw	1
  7327  00245E  6F1D               	movwf	29,b	;volatile
  7328  002460                     
  7329                           ; BSR set to: 63
  7330                           ;mcc_generated_files/smt1.c: 84:     SMT1PRH = 0xFF;
  7331  002460  691C               	setf	28,b	;volatile
  7332  002462                     
  7333                           ; BSR set to: 63
  7334                           ;mcc_generated_files/smt1.c: 87:     SMT1PRL = 0xFF;
  7335  002462  691B               	setf	27,b	;volatile
  7336  002464                     
  7337                           ; BSR set to: 63
  7338                           ;mcc_generated_files/smt1.c: 90:     PIE1bits.SMT1IE = 1;
  7339  002464  0139               	movlb	57	; () banked
  7340  002466  8B91               	bsf	145,5,b	;volatile
  7341  002468                     
  7342                           ; BSR set to: 57
  7343                           ;mcc_generated_files/smt1.c: 93:     PIE1bits.SMT1PWAIE = 1;
  7344  002468  8F91               	bsf	145,7,b	;volatile
  7345  00246A                     
  7346                           ; BSR set to: 57
  7347                           ;mcc_generated_files/smt1.c: 96:     PIE1bits.SMT1PRAIE = 1;
  7348  00246A  8D91               	bsf	145,6,b	;volatile
  7349  00246C                     
  7350                           ; BSR set to: 57
  7351                           ;mcc_generated_files/smt1.c: 99:     SMT1CON1bits.SMT1GO = 1;
  7352  00246C  013F               	movlb	63	; () banked
  7353  00246E  8F1F               	bsf	31,7,b	;volatile
  7354  002470                     
  7355                           ; BSR set to: 63
  7356  002470  0012               	return		;funcret
  7357  002472                     __end_of_SMT1_Initialize:
  7358                           	callstack 0
  7359                           
  7360 ;; *************** function _PWM8_Initialize *****************
  7361 ;; Defined at:
  7362 ;;		line 58 in file "mcc_generated_files/pwm8.c"
  7363 ;; Parameters:    Size  Location     Type
  7364 ;;		None
  7365 ;; Auto vars:     Size  Location     Type
  7366 ;;		None
  7367 ;; Return value:  Size  Location     Type
  7368 ;;                  1    wreg      void 
  7369 ;; Registers used:
  7370 ;;		wreg, status,2
  7371 ;; Tracked objects:
  7372 ;;		On entry : 0/0
  7373 ;;		On exit  : 0/0
  7374 ;;		Unchanged: 0/0
  7375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7379 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7380 ;;Total ram usage:        0 bytes
  7381 ;; Hardware stack levels used: 1
  7382 ;; Hardware stack levels required when called: 8
  7383 ;; This function calls:
  7384 ;;		Nothing
  7385 ;; This function is called by:
  7386 ;;		_SYSTEM_Initialize
  7387 ;; This function uses a non-reentrant model
  7388 ;;
  7389                           
  7390                           	psect	text38
  7391  0026D8                     __ptext38:
  7392                           	callstack 0
  7393  0026D8                     _PWM8_Initialize:
  7394                           	callstack 21
  7395  0026D8                     
  7396                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
  7397  0026D8  0E80               	movlw	128
  7398  0026DA  6E62               	movwf	98,c	;volatile
  7399                           
  7400                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
  7401  0026DC  0E00               	movlw	0
  7402  0026DE  6E61               	movwf	97,c	;volatile
  7403                           
  7404                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x00;
  7405  0026E0  0E00               	movlw	0
  7406  0026E2  6E60               	movwf	96,c	;volatile
  7407                           
  7408                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 2;
  7409  0026E4  013F               	movlb	63	; () banked
  7410  0026E6  515F               	movf	95,w,b	;volatile
  7411  0026E8  0B3F               	andlw	-193
  7412  0026EA  0980               	iorlw	128
  7413  0026EC  6F5F               	movwf	95,b	;volatile
  7414  0026EE                     
  7415                           ; BSR set to: 63
  7416  0026EE  0012               	return		;funcret
  7417  0026F0                     __end_of_PWM8_Initialize:
  7418                           	callstack 0
  7419                           
  7420 ;; *************** function _PWM7_Initialize *****************
  7421 ;; Defined at:
  7422 ;;		line 58 in file "mcc_generated_files/pwm7.c"
  7423 ;; Parameters:    Size  Location     Type
  7424 ;;		None
  7425 ;; Auto vars:     Size  Location     Type
  7426 ;;		None
  7427 ;; Return value:  Size  Location     Type
  7428 ;;                  1    wreg      void 
  7429 ;; Registers used:
  7430 ;;		wreg, status,2
  7431 ;; Tracked objects:
  7432 ;;		On entry : 0/0
  7433 ;;		On exit  : 0/0
  7434 ;;		Unchanged: 0/0
  7435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7439 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7440 ;;Total ram usage:        0 bytes
  7441 ;; Hardware stack levels used: 1
  7442 ;; Hardware stack levels required when called: 8
  7443 ;; This function calls:
  7444 ;;		Nothing
  7445 ;; This function is called by:
  7446 ;;		_SYSTEM_Initialize
  7447 ;; This function uses a non-reentrant model
  7448 ;;
  7449                           
  7450                           	psect	text39
  7451  0026F0                     __ptext39:
  7452                           	callstack 0
  7453  0026F0                     _PWM7_Initialize:
  7454                           	callstack 21
  7455  0026F0                     
  7456                           ;mcc_generated_files/pwm7.c: 62:     PWM7CON = 0x80;
  7457  0026F0  0E80               	movlw	128
  7458  0026F2  6E66               	movwf	102,c	;volatile
  7459                           
  7460                           ;mcc_generated_files/pwm7.c: 65:     PWM7DCH = 0x00;
  7461  0026F4  0E00               	movlw	0
  7462  0026F6  6E65               	movwf	101,c	;volatile
  7463                           
  7464                           ;mcc_generated_files/pwm7.c: 68:     PWM7DCL = 0x00;
  7465  0026F8  0E00               	movlw	0
  7466  0026FA  6E64               	movwf	100,c	;volatile
  7467                           
  7468                           ;mcc_generated_files/pwm7.c: 71:     CCPTMRS1bits.P7TSEL = 2;
  7469  0026FC  013F               	movlb	63	; () banked
  7470  0026FE  515F               	movf	95,w,b	;volatile
  7471  002700  0BCF               	andlw	-49
  7472  002702  0920               	iorlw	32
  7473  002704  6F5F               	movwf	95,b	;volatile
  7474  002706                     
  7475                           ; BSR set to: 63
  7476  002706  0012               	return		;funcret
  7477  002708                     __end_of_PWM7_Initialize:
  7478                           	callstack 0
  7479                           
  7480 ;; *************** function _PWM6_Initialize *****************
  7481 ;; Defined at:
  7482 ;;		line 58 in file "mcc_generated_files/pwm6.c"
  7483 ;; Parameters:    Size  Location     Type
  7484 ;;		None
  7485 ;; Auto vars:     Size  Location     Type
  7486 ;;		None
  7487 ;; Return value:  Size  Location     Type
  7488 ;;                  1    wreg      void 
  7489 ;; Registers used:
  7490 ;;		wreg, status,2
  7491 ;; Tracked objects:
  7492 ;;		On entry : 0/0
  7493 ;;		On exit  : 0/0
  7494 ;;		Unchanged: 0/0
  7495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7499 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7500 ;;Total ram usage:        0 bytes
  7501 ;; Hardware stack levels used: 1
  7502 ;; Hardware stack levels required when called: 8
  7503 ;; This function calls:
  7504 ;;		Nothing
  7505 ;; This function is called by:
  7506 ;;		_SYSTEM_Initialize
  7507 ;; This function uses a non-reentrant model
  7508 ;;
  7509                           
  7510                           	psect	text40
  7511  002708                     __ptext40:
  7512                           	callstack 0
  7513  002708                     _PWM6_Initialize:
  7514                           	callstack 21
  7515  002708                     
  7516                           ;mcc_generated_files/pwm6.c: 62:     PWM6CON = 0x80;
  7517  002708  0E80               	movlw	128
  7518  00270A  6E6A               	movwf	106,c	;volatile
  7519                           
  7520                           ;mcc_generated_files/pwm6.c: 65:     PWM6DCH = 0x59;
  7521  00270C  0E59               	movlw	89
  7522  00270E  6E69               	movwf	105,c	;volatile
  7523                           
  7524                           ;mcc_generated_files/pwm6.c: 68:     PWM6DCL = 0x40;
  7525  002710  0E40               	movlw	64
  7526  002712  6E68               	movwf	104,c	;volatile
  7527                           
  7528                           ;mcc_generated_files/pwm6.c: 71:     CCPTMRS1bits.P6TSEL = 1;
  7529  002714  013F               	movlb	63	; () banked
  7530  002716  515F               	movf	95,w,b	;volatile
  7531  002718  0BF3               	andlw	-13
  7532  00271A  0904               	iorlw	4
  7533  00271C  6F5F               	movwf	95,b	;volatile
  7534  00271E                     
  7535                           ; BSR set to: 63
  7536  00271E  0012               	return		;funcret
  7537  002720                     __end_of_PWM6_Initialize:
  7538                           	callstack 0
  7539                           
  7540 ;; *************** function _PWM5_Initialize *****************
  7541 ;; Defined at:
  7542 ;;		line 58 in file "mcc_generated_files/pwm5.c"
  7543 ;; Parameters:    Size  Location     Type
  7544 ;;		None
  7545 ;; Auto vars:     Size  Location     Type
  7546 ;;		None
  7547 ;; Return value:  Size  Location     Type
  7548 ;;                  1    wreg      void 
  7549 ;; Registers used:
  7550 ;;		wreg, status,2
  7551 ;; Tracked objects:
  7552 ;;		On entry : 0/0
  7553 ;;		On exit  : 0/0
  7554 ;;		Unchanged: 0/0
  7555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7559 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7560 ;;Total ram usage:        0 bytes
  7561 ;; Hardware stack levels used: 1
  7562 ;; Hardware stack levels required when called: 8
  7563 ;; This function calls:
  7564 ;;		Nothing
  7565 ;; This function is called by:
  7566 ;;		_SYSTEM_Initialize
  7567 ;; This function uses a non-reentrant model
  7568 ;;
  7569                           
  7570                           	psect	text41
  7571  002720                     __ptext41:
  7572                           	callstack 0
  7573  002720                     _PWM5_Initialize:
  7574                           	callstack 21
  7575  002720                     
  7576                           ;mcc_generated_files/pwm5.c: 62:     PWM5CON = 0x80;
  7577  002720  0E80               	movlw	128
  7578  002722  6E6E               	movwf	110,c	;volatile
  7579                           
  7580                           ;mcc_generated_files/pwm5.c: 65:     PWM5DCH = 0x59;
  7581  002724  0E59               	movlw	89
  7582  002726  6E6D               	movwf	109,c	;volatile
  7583                           
  7584                           ;mcc_generated_files/pwm5.c: 68:     PWM5DCL = 0x40;
  7585  002728  0E40               	movlw	64
  7586  00272A  6E6C               	movwf	108,c	;volatile
  7587                           
  7588                           ;mcc_generated_files/pwm5.c: 71:     CCPTMRS1bits.P5TSEL = 1;
  7589  00272C  013F               	movlb	63	; () banked
  7590  00272E  515F               	movf	95,w,b	;volatile
  7591  002730  0BFC               	andlw	-4
  7592  002732  0901               	iorlw	1
  7593  002734  6F5F               	movwf	95,b	;volatile
  7594  002736                     
  7595                           ; BSR set to: 63
  7596  002736  0012               	return		;funcret
  7597  002738                     __end_of_PWM5_Initialize:
  7598                           	callstack 0
  7599                           
  7600 ;; *************** function _PMD_Initialize *****************
  7601 ;; Defined at:
  7602 ;;		line 86 in file "mcc_generated_files/mcc.c"
  7603 ;; Parameters:    Size  Location     Type
  7604 ;;		None
  7605 ;; Auto vars:     Size  Location     Type
  7606 ;;		None
  7607 ;; Return value:  Size  Location     Type
  7608 ;;                  1    wreg      void 
  7609 ;; Registers used:
  7610 ;;		wreg, status,2
  7611 ;; Tracked objects:
  7612 ;;		On entry : 0/0
  7613 ;;		On exit  : 0/0
  7614 ;;		Unchanged: 0/0
  7615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7619 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7620 ;;Total ram usage:        0 bytes
  7621 ;; Hardware stack levels used: 1
  7622 ;; Hardware stack levels required when called: 8
  7623 ;; This function calls:
  7624 ;;		Nothing
  7625 ;; This function is called by:
  7626 ;;		_SYSTEM_Initialize
  7627 ;; This function uses a non-reentrant model
  7628 ;;
  7629                           
  7630                           	psect	text42
  7631  002638                     __ptext42:
  7632                           	callstack 0
  7633  002638                     _PMD_Initialize:
  7634                           	callstack 21
  7635  002638                     
  7636                           ;mcc_generated_files/mcc.c: 89:     PMD0 = 0x00;
  7637  002638  0E00               	movlw	0
  7638  00263A  0139               	movlb	57	; () banked
  7639  00263C  6FC0               	movwf	192,b	;volatile
  7640                           
  7641                           ;mcc_generated_files/mcc.c: 91:     PMD1 = 0x00;
  7642  00263E  0E00               	movlw	0
  7643  002640  6FC1               	movwf	193,b	;volatile
  7644                           
  7645                           ;mcc_generated_files/mcc.c: 93:     PMD2 = 0x00;
  7646  002642  0E00               	movlw	0
  7647  002644  6FC2               	movwf	194,b	;volatile
  7648                           
  7649                           ;mcc_generated_files/mcc.c: 95:     PMD3 = 0x00;
  7650  002646  0E00               	movlw	0
  7651  002648  6FC3               	movwf	195,b	;volatile
  7652                           
  7653                           ;mcc_generated_files/mcc.c: 97:     PMD4 = 0x00;
  7654  00264A  0E00               	movlw	0
  7655  00264C  6FC4               	movwf	196,b	;volatile
  7656                           
  7657                           ;mcc_generated_files/mcc.c: 99:     PMD5 = 0x00;
  7658  00264E  0E00               	movlw	0
  7659  002650  6FC5               	movwf	197,b	;volatile
  7660                           
  7661                           ;mcc_generated_files/mcc.c: 101:     PMD6 = 0x00;
  7662  002652  0E00               	movlw	0
  7663  002654  6FC6               	movwf	198,b	;volatile
  7664                           
  7665                           ;mcc_generated_files/mcc.c: 103:     PMD7 = 0x00;
  7666  002656  0E00               	movlw	0
  7667  002658  6FC7               	movwf	199,b	;volatile
  7668  00265A                     
  7669                           ; BSR set to: 57
  7670  00265A  0012               	return		;funcret
  7671  00265C                     __end_of_PMD_Initialize:
  7672                           	callstack 0
  7673                           
  7674 ;; *************** function _PIN_MANAGER_Initialize *****************
  7675 ;; Defined at:
  7676 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  7677 ;; Parameters:    Size  Location     Type
  7678 ;;		None
  7679 ;; Auto vars:     Size  Location     Type
  7680 ;;		None
  7681 ;; Return value:  Size  Location     Type
  7682 ;;                  1    wreg      void 
  7683 ;; Registers used:
  7684 ;;		wreg, status,2
  7685 ;; Tracked objects:
  7686 ;;		On entry : 0/0
  7687 ;;		On exit  : 0/0
  7688 ;;		Unchanged: 0/0
  7689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7693 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7694 ;;Total ram usage:        0 bytes
  7695 ;; Hardware stack levels used: 1
  7696 ;; Hardware stack levels required when called: 8
  7697 ;; This function calls:
  7698 ;;		Nothing
  7699 ;; This function is called by:
  7700 ;;		_SYSTEM_Initialize
  7701 ;; This function uses a non-reentrant model
  7702 ;;
  7703                           
  7704                           	psect	text43
  7705  001BA2                     __ptext43:
  7706                           	callstack 0
  7707  001BA2                     _PIN_MANAGER_Initialize:
  7708                           	callstack 21
  7709  001BA2                     
  7710                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  7711  001BA2  0E00               	movlw	0
  7712  001BA4  6EBE               	movwf	190,c	;volatile
  7713                           
  7714                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  7715  001BA6  0E00               	movlw	0
  7716  001BA8  6EBD               	movwf	189,c	;volatile
  7717                           
  7718                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x24;
  7719  001BAA  0E24               	movlw	36
  7720  001BAC  6EBA               	movwf	186,c	;volatile
  7721                           
  7722                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  7723  001BAE  0E00               	movlw	0
  7724  001BB0  6EBB               	movwf	187,c	;volatile
  7725                           
  7726                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  7727  001BB2  0E00               	movlw	0
  7728  001BB4  6EBC               	movwf	188,c	;volatile
  7729                           
  7730                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  7731  001BB6  0E07               	movlw	7
  7732  001BB8  6EC6               	movwf	198,c	;volatile
  7733                           
  7734                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xC0;
  7735  001BBA  0EC0               	movlw	192
  7736  001BBC  6EC2               	movwf	194,c	;volatile
  7737                           
  7738                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xF7;
  7739  001BBE  0EF7               	movlw	247
  7740  001BC0  6EC3               	movwf	195,c	;volatile
  7741  001BC2                     
  7742                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xFF;
  7743  001BC2  68C4               	setf	196,c	;volatile
  7744  001BC4                     
  7745                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
  7746  001BC4  68C5               	setf	197,c	;volatile
  7747                           
  7748                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0x1F;
  7749  001BC6  0E1F               	movlw	31
  7750  001BC8  013A               	movlb	58	; () banked
  7751  001BCA  6F70               	movwf	112,b	;volatile
  7752  001BCC                     
  7753                           ; BSR set to: 58
  7754                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0xFF;
  7755  001BCC  6960               	setf	96,b	;volatile
  7756                           
  7757                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0xC0;
  7758  001BCE  0EC0               	movlw	192
  7759  001BD0  6F50               	movwf	80,b	;volatile
  7760                           
  7761                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
  7762  001BD2  0E07               	movlw	7
  7763  001BD4  6F80               	movwf	128,b	;volatile
  7764                           
  7765                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x7F;
  7766  001BD6  0E7F               	movlw	127
  7767  001BD8  6F40               	movwf	64,b	;volatile
  7768                           
  7769                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
  7770  001BDA  0E00               	movlw	0
  7771  001BDC  6F71               	movwf	113,b	;volatile
  7772                           
  7773                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
  7774  001BDE  0E00               	movlw	0
  7775  001BE0  6F81               	movwf	129,b	;volatile
  7776                           
  7777                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
  7778  001BE2  0E00               	movlw	0
  7779  001BE4  6F51               	movwf	81,b	;volatile
  7780                           
  7781                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
  7782  001BE6  0E00               	movlw	0
  7783  001BE8  6F41               	movwf	65,b	;volatile
  7784                           
  7785                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
  7786  001BEA  0E00               	movlw	0
  7787  001BEC  6F61               	movwf	97,b	;volatile
  7788                           
  7789                           ;mcc_generated_files/pin_manager.c: 96:     RB1I2C = 0x00;
  7790  001BEE  0E00               	movlw	0
  7791  001BF0  6F5A               	movwf	90,b	;volatile
  7792                           
  7793                           ;mcc_generated_files/pin_manager.c: 97:     RB2I2C = 0x00;
  7794  001BF2  0E00               	movlw	0
  7795  001BF4  6F5B               	movwf	91,b	;volatile
  7796                           
  7797                           ;mcc_generated_files/pin_manager.c: 98:     RC3I2C = 0x00;
  7798  001BF6  0E00               	movlw	0
  7799  001BF8  6F6A               	movwf	106,b	;volatile
  7800                           
  7801                           ;mcc_generated_files/pin_manager.c: 99:     RC4I2C = 0x00;
  7802  001BFA  0E00               	movlw	0
  7803  001BFC  6F6B               	movwf	107,b	;volatile
  7804                           
  7805                           ;mcc_generated_files/pin_manager.c: 100:     RD0I2C = 0x00;
  7806  001BFE  0E00               	movlw	0
  7807  001C00  6F7A               	movwf	122,b	;volatile
  7808                           
  7809                           ;mcc_generated_files/pin_manager.c: 101:     RD1I2C = 0x00;
  7810  001C02  0E00               	movlw	0
  7811  001C04  6F7B               	movwf	123,b	;volatile
  7812                           
  7813                           ;mcc_generated_files/pin_manager.c: 106:     ODCONE = 0x00;
  7814  001C06  0E00               	movlw	0
  7815  001C08  6F82               	movwf	130,b	;volatile
  7816                           
  7817                           ;mcc_generated_files/pin_manager.c: 107:     ODCONA = 0x00;
  7818  001C0A  0E00               	movlw	0
  7819  001C0C  6F42               	movwf	66,b	;volatile
  7820                           
  7821                           ;mcc_generated_files/pin_manager.c: 108:     ODCONB = 0x00;
  7822  001C0E  0E00               	movlw	0
  7823  001C10  6F52               	movwf	82,b	;volatile
  7824                           
  7825                           ;mcc_generated_files/pin_manager.c: 109:     ODCONC = 0x00;
  7826  001C12  0E00               	movlw	0
  7827  001C14  6F62               	movwf	98,b	;volatile
  7828                           
  7829                           ;mcc_generated_files/pin_manager.c: 110:     ODCOND = 0x00;
  7830  001C16  0E00               	movlw	0
  7831  001C18  6F72               	movwf	114,b	;volatile
  7832  001C1A                     
  7833                           ; BSR set to: 58
  7834                           ;mcc_generated_files/pin_manager.c: 115:     SLRCONA = 0xFF;
  7835  001C1A  6943               	setf	67,b	;volatile
  7836  001C1C                     
  7837                           ; BSR set to: 58
  7838                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONB = 0xFF;
  7839  001C1C  6953               	setf	83,b	;volatile
  7840  001C1E                     
  7841                           ; BSR set to: 58
  7842                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONC = 0xFF;
  7843  001C1E  6963               	setf	99,b	;volatile
  7844  001C20                     
  7845                           ; BSR set to: 58
  7846                           ;mcc_generated_files/pin_manager.c: 118:     SLRCOND = 0xFF;
  7847  001C20  6973               	setf	115,b	;volatile
  7848                           
  7849                           ;mcc_generated_files/pin_manager.c: 119:     SLRCONE = 0x07;
  7850  001C22  0E07               	movlw	7
  7851  001C24  6F83               	movwf	131,b	;volatile
  7852  001C26                     
  7853                           ; BSR set to: 58
  7854                           ;mcc_generated_files/pin_manager.c: 124:     INLVLA = 0xFF;
  7855  001C26  6944               	setf	68,b	;volatile
  7856  001C28                     
  7857                           ; BSR set to: 58
  7858                           ;mcc_generated_files/pin_manager.c: 125:     INLVLB = 0xFF;
  7859  001C28  6954               	setf	84,b	;volatile
  7860  001C2A                     
  7861                           ; BSR set to: 58
  7862                           ;mcc_generated_files/pin_manager.c: 126:     INLVLC = 0xFF;
  7863  001C2A  6964               	setf	100,b	;volatile
  7864  001C2C                     
  7865                           ; BSR set to: 58
  7866                           ;mcc_generated_files/pin_manager.c: 127:     INLVLD = 0xFF;
  7867  001C2C  6974               	setf	116,b	;volatile
  7868                           
  7869                           ;mcc_generated_files/pin_manager.c: 128:     INLVLE = 0x0F;
  7870  001C2E  0E0F               	movlw	15
  7871  001C30  6F84               	movwf	132,b	;volatile
  7872                           
  7873                           ;mcc_generated_files/pin_manager.c: 137:     CCP3PPS = 0x1F;
  7874  001C32  0E1F               	movlw	31
  7875  001C34  6FCF               	movwf	207,b	;volatile
  7876                           
  7877                           ;mcc_generated_files/pin_manager.c: 138:     CLCIN3PPS = 0x09;
  7878  001C36  0E09               	movlw	9
  7879  001C38  6FDC               	movwf	220,b	;volatile
  7880                           
  7881                           ;mcc_generated_files/pin_manager.c: 139:     RA1PPS = 0x0E;
  7882  001C3A  0E0E               	movlw	14
  7883  001C3C  6F01               	movwf	1,b	;volatile
  7884                           
  7885                           ;mcc_generated_files/pin_manager.c: 140:     U1RXPPS = 0x0A;
  7886  001C3E  0E0A               	movlw	10
  7887  001C40  6FE5               	movwf	229,b	;volatile
  7888                           
  7889                           ;mcc_generated_files/pin_manager.c: 141:     RA0PPS = 0x0D;
  7890  001C42  0E0D               	movlw	13
  7891  001C44  6F00               	movwf	0,b	;volatile
  7892                           
  7893                           ;mcc_generated_files/pin_manager.c: 142:     T5GPPS = 0x1D;
  7894  001C46  0E1D               	movlw	29
  7895  001C48  6FC9               	movwf	201,b	;volatile
  7896                           
  7897                           ;mcc_generated_files/pin_manager.c: 143:     RA4PPS = 0x10;
  7898  001C4A  0E10               	movlw	16
  7899  001C4C  6F04               	movwf	4,b	;volatile
  7900                           
  7901                           ;mcc_generated_files/pin_manager.c: 144:     CLCIN0PPS = 0x07;
  7902  001C4E  0E07               	movlw	7
  7903  001C50  6FD9               	movwf	217,b	;volatile
  7904                           
  7905                           ;mcc_generated_files/pin_manager.c: 145:     SMT1WINPPS = 0x09;
  7906  001C52  0E09               	movlw	9
  7907  001C54  6FD1               	movwf	209,b	;volatile
  7908                           
  7909                           ;mcc_generated_files/pin_manager.c: 146:     RA3PPS = 0x0F;
  7910  001C56  0E0F               	movlw	15
  7911  001C58  6F03               	movwf	3,b	;volatile
  7912                           
  7913                           ;mcc_generated_files/pin_manager.c: 147:     RB3PPS = 0x13;
  7914  001C5A  0E13               	movlw	19
  7915  001C5C  6F0B               	movwf	11,b	;volatile
  7916                           
  7917                           ;mcc_generated_files/pin_manager.c: 148:     CLCIN2PPS = 0x08;
  7918  001C5E  0E08               	movlw	8
  7919  001C60  6FDB               	movwf	219,b	;volatile
  7920                           
  7921                           ;mcc_generated_files/pin_manager.c: 149:     SMT1SIGPPS = 0x08;
  7922  001C62  0E08               	movlw	8
  7923  001C64  6FD2               	movwf	210,b	;volatile
  7924                           
  7925                           ;mcc_generated_files/pin_manager.c: 150:     CCP4PPS = 0x1E;
  7926  001C66  0E1E               	movlw	30
  7927  001C68  6FD0               	movwf	208,b	;volatile
  7928  001C6A                     
  7929                           ; BSR set to: 58
  7930  001C6A  0012               	return		;funcret
  7931  001C6C                     __end_of_PIN_MANAGER_Initialize:
  7932                           	callstack 0
  7933                           
  7934 ;; *************** function _OSCILLATOR_Initialize *****************
  7935 ;; Defined at:
  7936 ;;		line 72 in file "mcc_generated_files/mcc.c"
  7937 ;; Parameters:    Size  Location     Type
  7938 ;;		None
  7939 ;; Auto vars:     Size  Location     Type
  7940 ;;		None
  7941 ;; Return value:  Size  Location     Type
  7942 ;;                  1    wreg      void 
  7943 ;; Registers used:
  7944 ;;		wreg, status,2
  7945 ;; Tracked objects:
  7946 ;;		On entry : 0/0
  7947 ;;		On exit  : 0/0
  7948 ;;		Unchanged: 0/0
  7949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7951 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7953 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7954 ;;Total ram usage:        0 bytes
  7955 ;; Hardware stack levels used: 1
  7956 ;; Hardware stack levels required when called: 8
  7957 ;; This function calls:
  7958 ;;		Nothing
  7959 ;; This function is called by:
  7960 ;;		_SYSTEM_Initialize
  7961 ;; This function uses a non-reentrant model
  7962 ;;
  7963                           
  7964                           	psect	text44
  7965  002738                     __ptext44:
  7966                           	callstack 0
  7967  002738                     _OSCILLATOR_Initialize:
  7968                           	callstack 21
  7969  002738                     
  7970                           ;mcc_generated_files/mcc.c: 75:     OSCCON1 = 0x60;
  7971  002738  0E60               	movlw	96
  7972  00273A  0139               	movlb	57	; () banked
  7973  00273C  6FD9               	movwf	217,b	;volatile
  7974                           
  7975                           ;mcc_generated_files/mcc.c: 77:     OSCCON3 = 0x00;
  7976  00273E  0E00               	movlw	0
  7977  002740  6FDB               	movwf	219,b	;volatile
  7978                           
  7979                           ;mcc_generated_files/mcc.c: 79:     OSCEN = 0x00;
  7980  002742  0E00               	movlw	0
  7981  002744  6FDD               	movwf	221,b	;volatile
  7982                           
  7983                           ;mcc_generated_files/mcc.c: 81:     OSCFRQ = 0x08;
  7984  002746  0E08               	movlw	8
  7985  002748  6FDF               	movwf	223,b	;volatile
  7986                           
  7987                           ;mcc_generated_files/mcc.c: 83:     OSCTUNE = 0x00;
  7988  00274A  0E00               	movlw	0
  7989  00274C  6FDE               	movwf	222,b	;volatile
  7990  00274E                     
  7991                           ; BSR set to: 57
  7992  00274E  0012               	return		;funcret
  7993  002750                     __end_of_OSCILLATOR_Initialize:
  7994                           	callstack 0
  7995                           
  7996 ;; *************** function _INTERRUPT_Initialize *****************
  7997 ;; Defined at:
  7998 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  7999 ;; Parameters:    Size  Location     Type
  8000 ;;		None
  8001 ;; Auto vars:     Size  Location     Type
  8002 ;;  state           1   19[COMRAM] _Bool 
  8003 ;; Return value:  Size  Location     Type
  8004 ;;                  1    wreg      void 
  8005 ;; Registers used:
  8006 ;;		wreg, status,2
  8007 ;; Tracked objects:
  8008 ;;		On entry : 0/0
  8009 ;;		On exit  : 0/0
  8010 ;;		Unchanged: 0/0
  8011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8013 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8015 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8016 ;;Total ram usage:        1 bytes
  8017 ;; Hardware stack levels used: 1
  8018 ;; Hardware stack levels required when called: 8
  8019 ;; This function calls:
  8020 ;;		Nothing
  8021 ;; This function is called by:
  8022 ;;		_SYSTEM_Initialize
  8023 ;; This function uses a non-reentrant model
  8024 ;;
  8025                           
  8026                           	psect	text45
  8027  002040                     __ptext45:
  8028                           	callstack 0
  8029  002040                     _INTERRUPT_Initialize:
  8030                           	callstack 21
  8031  002040                     
  8032                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
  8033  002040  8AD2               	bsf	210,5,c	;volatile
  8034  002042                     
  8035                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
  8036  002042  0E00               	movlw	0
  8037  002044  BED2               	btfsc	16338,7,c	;volatile
  8038  002046  0E01               	movlw	1
  8039  002048  6E14               	movwf	INTERRUPT_Initialize@state^0,c
  8040  00204A                     
  8041                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
  8042  00204A  9ED2               	bcf	16338,7,c	;volatile
  8043                           
  8044                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
  8045  00204C  0E55               	movlw	85
  8046  00204E  6ED4               	movwf	212,c	;volatile
  8047                           
  8048                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
  8049  002050  0EAA               	movlw	170
  8050  002052  6ED4               	movwf	212,c	;volatile
  8051  002054                     
  8052                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
  8053  002054  90D4               	bcf	212,0,c	;volatile
  8054                           
  8055                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTBASEU = 0;
  8056  002056  0E00               	movlw	0
  8057  002058  6ED7               	movwf	215,c	;volatile
  8058                           
  8059                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTBASEH = 0;
  8060  00205A  0E00               	movlw	0
  8061  00205C  6ED6               	movwf	214,c	;volatile
  8062                           
  8063                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTBASEL = 8;
  8064  00205E  0E08               	movlw	8
  8065  002060  6ED5               	movwf	213,c	;volatile
  8066                           
  8067                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
  8068  002062  0E55               	movlw	85
  8069  002064  6ED4               	movwf	212,c	;volatile
  8070                           
  8071                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
  8072  002066  0EAA               	movlw	170
  8073  002068  6ED4               	movwf	212,c	;volatile
  8074  00206A                     
  8075                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
  8076  00206A  80D4               	bsf	212,0,c	;volatile
  8077  00206C                     
  8078                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
  8079  00206C  B014               	btfsc	INTERRUPT_Initialize@state^0,0,c
  8080  00206E  D002               	bra	u1145
  8081  002070  9ED2               	bcf	16338,7,c	;volatile
  8082  002072  D001               	bra	u1146
  8083  002074                     u1145:
  8084  002074  8ED2               	bsf	16338,7,c	;volatile
  8085  002076                     u1146:
  8086  002076                     
  8087                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR3bits.U1TXIP = 0;
  8088  002076  0139               	movlb	57	; () banked
  8089  002078  9983               	bcf	131,4,b	;volatile
  8090  00207A                     
  8091                           ; BSR set to: 57
  8092                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR3bits.U1RXIP = 0;
  8093  00207A  9783               	bcf	131,3,b	;volatile
  8094  00207C                     
  8095                           ; BSR set to: 57
  8096                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR1bits.SMT1PWAIP = 1;
  8097  00207C  8F81               	bsf	129,7,b	;volatile
  8098  00207E                     
  8099                           ; BSR set to: 57
  8100                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR1bits.SMT1IP = 1;
  8101  00207E  8B81               	bsf	129,5,b	;volatile
  8102  002080                     
  8103                           ; BSR set to: 57
  8104                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR1bits.SMT1PRAIP = 1;
  8105  002080  8D81               	bsf	129,6,b	;volatile
  8106  002082                     
  8107                           ; BSR set to: 57
  8108                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR10bits.CCP4IP = 1;
  8109  002082  818A               	bsf	138,0,b	;volatile
  8110  002084                     
  8111                           ; BSR set to: 57
  8112                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR8bits.TMR5GIP = 1;
  8113  002084  8F88               	bsf	136,7,b	;volatile
  8114  002086                     
  8115                           ; BSR set to: 57
  8116                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR7bits.TMR4IP = 0;
  8117  002086  9187               	bcf	135,0,b	;volatile
  8118  002088                     
  8119                           ; BSR set to: 57
  8120                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR9bits.CCP3IP = 1;
  8121  002088  8389               	bsf	137,1,b	;volatile
  8122  00208A                     
  8123                           ; BSR set to: 57
  8124  00208A  0012               	return		;funcret
  8125  00208C                     __end_of_INTERRUPT_Initialize:
  8126                           	callstack 0
  8127                           
  8128 ;; *************** function _CLC3_Initialize *****************
  8129 ;; Defined at:
  8130 ;;		line 58 in file "mcc_generated_files/clc3.c"
  8131 ;; Parameters:    Size  Location     Type
  8132 ;;		None
  8133 ;; Auto vars:     Size  Location     Type
  8134 ;;		None
  8135 ;; Return value:  Size  Location     Type
  8136 ;;                  1    wreg      void 
  8137 ;; Registers used:
  8138 ;;		wreg, status,2
  8139 ;; Tracked objects:
  8140 ;;		On entry : 0/0
  8141 ;;		On exit  : 0/0
  8142 ;;		Unchanged: 0/0
  8143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8147 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8148 ;;Total ram usage:        0 bytes
  8149 ;; Hardware stack levels used: 1
  8150 ;; Hardware stack levels required when called: 8
  8151 ;; This function calls:
  8152 ;;		Nothing
  8153 ;; This function is called by:
  8154 ;;		_SYSTEM_Initialize
  8155 ;; This function uses a non-reentrant model
  8156 ;;
  8157                           
  8158                           	psect	text46
  8159  00258A                     __ptext46:
  8160                           	callstack 0
  8161  00258A                     _CLC3_Initialize:
  8162                           	callstack 21
  8163  00258A                     
  8164                           ;mcc_generated_files/clc3.c: 63:     CLC3POL = 0x00;
  8165  00258A  0E00               	movlw	0
  8166  00258C  013C               	movlb	60	; () banked
  8167  00258E  6F61               	movwf	97,b	;volatile
  8168                           
  8169                           ;mcc_generated_files/clc3.c: 65:     CLC3SEL0 = 0x03;
  8170  002590  0E03               	movlw	3
  8171  002592  6F62               	movwf	98,b	;volatile
  8172                           
  8173                           ;mcc_generated_files/clc3.c: 67:     CLC3SEL1 = 0x02;
  8174  002594  0E02               	movlw	2
  8175  002596  6F63               	movwf	99,b	;volatile
  8176                           
  8177                           ;mcc_generated_files/clc3.c: 69:     CLC3SEL2 = 0x00;
  8178  002598  0E00               	movlw	0
  8179  00259A  6F64               	movwf	100,b	;volatile
  8180                           
  8181                           ;mcc_generated_files/clc3.c: 71:     CLC3SEL3 = 0x00;
  8182  00259C  0E00               	movlw	0
  8183  00259E  6F65               	movwf	101,b	;volatile
  8184                           
  8185                           ;mcc_generated_files/clc3.c: 73:     CLC3GLS0 = 0x02;
  8186  0025A0  0E02               	movlw	2
  8187  0025A2  6F66               	movwf	102,b	;volatile
  8188                           
  8189                           ;mcc_generated_files/clc3.c: 75:     CLC3GLS1 = 0x08;
  8190  0025A4  0E08               	movlw	8
  8191  0025A6  6F67               	movwf	103,b	;volatile
  8192                           
  8193                           ;mcc_generated_files/clc3.c: 77:     CLC3GLS2 = 0x00;
  8194  0025A8  0E00               	movlw	0
  8195  0025AA  6F68               	movwf	104,b	;volatile
  8196                           
  8197                           ;mcc_generated_files/clc3.c: 79:     CLC3GLS3 = 0x00;
  8198  0025AC  0E00               	movlw	0
  8199  0025AE  6F69               	movwf	105,b	;volatile
  8200                           
  8201                           ;mcc_generated_files/clc3.c: 81:     CLC3CON = 0x85;
  8202  0025B0  0E85               	movlw	133
  8203  0025B2  6F60               	movwf	96,b	;volatile
  8204  0025B4                     
  8205                           ; BSR set to: 60
  8206  0025B4  0012               	return		;funcret
  8207  0025B6                     __end_of_CLC3_Initialize:
  8208                           	callstack 0
  8209                           
  8210 ;; *************** function _CCP4_Initialize *****************
  8211 ;; Defined at:
  8212 ;;		line 78 in file "mcc_generated_files/ccp4.c"
  8213 ;; Parameters:    Size  Location     Type
  8214 ;;		None
  8215 ;; Auto vars:     Size  Location     Type
  8216 ;;		None
  8217 ;; Return value:  Size  Location     Type
  8218 ;;                  1    wreg      void 
  8219 ;; Registers used:
  8220 ;;		wreg, status,2, status,0, cstack
  8221 ;; Tracked objects:
  8222 ;;		On entry : 0/0
  8223 ;;		On exit  : 0/0
  8224 ;;		Unchanged: 0/0
  8225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8229 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8230 ;;Total ram usage:        0 bytes
  8231 ;; Hardware stack levels used: 1
  8232 ;; Hardware stack levels required when called: 9
  8233 ;; This function calls:
  8234 ;;		_CCP4_SetCallBack
  8235 ;; This function is called by:
  8236 ;;		_SYSTEM_Initialize
  8237 ;; This function uses a non-reentrant model
  8238 ;;
  8239                           
  8240                           	psect	text47
  8241  002502                     __ptext47:
  8242                           	callstack 0
  8243  002502                     _CCP4_Initialize:
  8244                           	callstack 20
  8245  002502                     
  8246                           ;mcc_generated_files/ccp4.c: 83:  CCP4CON = 0x83;
  8247  002502  0E83               	movlw	131
  8248  002504  6E72               	movwf	114,c	;volatile
  8249                           
  8250                           ;mcc_generated_files/ccp4.c: 86:  CCP4CAP = 0x00;
  8251  002506  0E00               	movlw	0
  8252  002508  6E73               	movwf	115,c	;volatile
  8253                           
  8254                           ;mcc_generated_files/ccp4.c: 89:  CCPR4H = 0x00;
  8255  00250A  0E00               	movlw	0
  8256  00250C  6E71               	movwf	113,c	;volatile
  8257                           
  8258                           ;mcc_generated_files/ccp4.c: 92:  CCPR4L = 0x00;
  8259  00250E  0E00               	movlw	0
  8260  002510  6E70               	movwf	112,c	;volatile
  8261  002512                     
  8262                           ;mcc_generated_files/ccp4.c: 95:     CCP4_SetCallBack(CCP4_DefaultCallBack);
  8263  002512  0ED2               	movlw	low _CCP4_DefaultCallBack
  8264  002514  6E14               	movwf	CCP4_SetCallBack@customCallBack^0,c
  8265  002516  0E24               	movlw	high _CCP4_DefaultCallBack
  8266  002518  6E15               	movwf	(CCP4_SetCallBack@customCallBack+1)^0,c
  8267  00251A  ECDA  F013         	call	_CCP4_SetCallBack	;wreg free
  8268  00251E                     
  8269                           ;mcc_generated_files/ccp4.c: 98:  CCPTMRS0bits.C4TSEL = 0x2;
  8270  00251E  013F               	movlb	63	; () banked
  8271  002520  515E               	movf	94,w,b	;volatile
  8272  002522  0B3F               	andlw	-193
  8273  002524  0980               	iorlw	128
  8274  002526  6F5E               	movwf	94,b	;volatile
  8275  002528                     
  8276                           ; BSR set to: 63
  8277                           ;mcc_generated_files/ccp4.c: 101:     PIR10bits.CCP4IF = 0;
  8278  002528  0139               	movlb	57	; () banked
  8279  00252A  91AA               	bcf	170,0,b	;volatile
  8280  00252C                     
  8281                           ; BSR set to: 57
  8282                           ;mcc_generated_files/ccp4.c: 104:     PIE10bits.CCP4IE = 1;
  8283  00252C  819A               	bsf	154,0,b	;volatile
  8284  00252E                     
  8285                           ; BSR set to: 57
  8286  00252E  0012               	return		;funcret
  8287  002530                     __end_of_CCP4_Initialize:
  8288                           	callstack 0
  8289                           
  8290 ;; *************** function _CCP4_SetCallBack *****************
  8291 ;; Defined at:
  8292 ;;		line 75 in file "mcc_generated_files/ccp4.c"
  8293 ;; Parameters:    Size  Location     Type
  8294 ;;  customCallBa    2   19[COMRAM] PTR FTN(unsigned short ,
  8295 ;;		 -> CCP4_DefaultCallBack(1), 
  8296 ;; Auto vars:     Size  Location     Type
  8297 ;;		None
  8298 ;; Return value:  Size  Location     Type
  8299 ;;                  1    wreg      void 
  8300 ;; Registers used:
  8301 ;;		wreg, status,2, status,0
  8302 ;; Tracked objects:
  8303 ;;		On entry : 0/0
  8304 ;;		On exit  : 0/0
  8305 ;;		Unchanged: 0/0
  8306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8307 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8310 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8311 ;;Total ram usage:        2 bytes
  8312 ;; Hardware stack levels used: 1
  8313 ;; Hardware stack levels required when called: 8
  8314 ;; This function calls:
  8315 ;;		Nothing
  8316 ;; This function is called by:
  8317 ;;		_CCP4_Initialize
  8318 ;; This function uses a non-reentrant model
  8319 ;;
  8320                           
  8321                           	psect	text48
  8322  0027B4                     __ptext48:
  8323                           	callstack 0
  8324  0027B4                     _CCP4_SetCallBack:
  8325                           	callstack 20
  8326  0027B4                     
  8327                           ;mcc_generated_files/ccp4.c: 76:     CCP4_CallBack = customCallBack;
  8328  0027B4  C014  F0CF         	movff	CCP4_SetCallBack@customCallBack,_CCP4_CallBack
  8329  0027B8  C015  F0D0         	movff	CCP4_SetCallBack@customCallBack+1,_CCP4_CallBack+1
  8330  0027BC  0012               	return		;funcret
  8331  0027BE                     __end_of_CCP4_SetCallBack:
  8332                           	callstack 0
  8333                           
  8334 ;; *************** function _CCP3_Initialize *****************
  8335 ;; Defined at:
  8336 ;;		line 75 in file "mcc_generated_files/ccp3.c"
  8337 ;; Parameters:    Size  Location     Type
  8338 ;;		None
  8339 ;; Auto vars:     Size  Location     Type
  8340 ;;		None
  8341 ;; Return value:  Size  Location     Type
  8342 ;;                  1    wreg      void 
  8343 ;; Registers used:
  8344 ;;		wreg, status,2, status,0, cstack
  8345 ;; Tracked objects:
  8346 ;;		On entry : 0/0
  8347 ;;		On exit  : 0/0
  8348 ;;		Unchanged: 0/0
  8349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8353 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8354 ;;Total ram usage:        0 bytes
  8355 ;; Hardware stack levels used: 1
  8356 ;; Hardware stack levels required when called: 9
  8357 ;; This function calls:
  8358 ;;		_CCP3_SetCallBack
  8359 ;; This function is called by:
  8360 ;;		_SYSTEM_Initialize
  8361 ;; This function uses a non-reentrant model
  8362 ;;
  8363                           
  8364                           	psect	text49
  8365  002530                     __ptext49:
  8366                           	callstack 0
  8367  002530                     _CCP3_Initialize:
  8368                           	callstack 20
  8369  002530                     
  8370                           ;mcc_generated_files/ccp3.c: 80:  CCP3CON = 0x83;
  8371  002530  0E83               	movlw	131
  8372  002532  6E76               	movwf	118,c	;volatile
  8373                           
  8374                           ;mcc_generated_files/ccp3.c: 83:  CCP3CAP = 0x00;
  8375  002534  0E00               	movlw	0
  8376  002536  6E77               	movwf	119,c	;volatile
  8377                           
  8378                           ;mcc_generated_files/ccp3.c: 86:  CCPR3H = 0x00;
  8379  002538  0E00               	movlw	0
  8380  00253A  6E75               	movwf	117,c	;volatile
  8381                           
  8382                           ;mcc_generated_files/ccp3.c: 89:  CCPR3L = 0x00;
  8383  00253C  0E00               	movlw	0
  8384  00253E  6E74               	movwf	116,c	;volatile
  8385  002540                     
  8386                           ;mcc_generated_files/ccp3.c: 92:     CCP3_SetCallBack(CCP3_DefaultCallBack);
  8387  002540  0EA2               	movlw	low _CCP3_DefaultCallBack
  8388  002542  6E14               	movwf	CCP3_SetCallBack@customCallBack^0,c
  8389  002544  0E24               	movlw	high _CCP3_DefaultCallBack
  8390  002546  6E15               	movwf	(CCP3_SetCallBack@customCallBack+1)^0,c
  8391  002548  ECDF  F013         	call	_CCP3_SetCallBack	;wreg free
  8392  00254C                     
  8393                           ;mcc_generated_files/ccp3.c: 95:  CCPTMRS0bits.C3TSEL = 0x2;
  8394  00254C  013F               	movlb	63	; () banked
  8395  00254E  515E               	movf	94,w,b	;volatile
  8396  002550  0BCF               	andlw	-49
  8397  002552  0920               	iorlw	32
  8398  002554  6F5E               	movwf	94,b	;volatile
  8399  002556                     
  8400                           ; BSR set to: 63
  8401                           ;mcc_generated_files/ccp3.c: 98:     PIR9bits.CCP3IF = 0;
  8402  002556  0139               	movlb	57	; () banked
  8403  002558  93A9               	bcf	169,1,b	;volatile
  8404  00255A                     
  8405                           ; BSR set to: 57
  8406                           ;mcc_generated_files/ccp3.c: 101:     PIE9bits.CCP3IE = 1;
  8407  00255A  8399               	bsf	153,1,b	;volatile
  8408  00255C                     
  8409                           ; BSR set to: 57
  8410  00255C  0012               	return		;funcret
  8411  00255E                     __end_of_CCP3_Initialize:
  8412                           	callstack 0
  8413                           
  8414 ;; *************** function _CCP3_SetCallBack *****************
  8415 ;; Defined at:
  8416 ;;		line 119 in file "mcc_generated_files/ccp3.c"
  8417 ;; Parameters:    Size  Location     Type
  8418 ;;  customCallBa    2   19[COMRAM] PTR FTN(unsigned short ,
  8419 ;;		 -> CCP3_DefaultCallBack(1), 
  8420 ;; Auto vars:     Size  Location     Type
  8421 ;;		None
  8422 ;; Return value:  Size  Location     Type
  8423 ;;                  1    wreg      void 
  8424 ;; Registers used:
  8425 ;;		wreg, status,2, status,0
  8426 ;; Tracked objects:
  8427 ;;		On entry : 0/0
  8428 ;;		On exit  : 0/0
  8429 ;;		Unchanged: 0/0
  8430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8431 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8434 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8435 ;;Total ram usage:        2 bytes
  8436 ;; Hardware stack levels used: 1
  8437 ;; Hardware stack levels required when called: 8
  8438 ;; This function calls:
  8439 ;;		Nothing
  8440 ;; This function is called by:
  8441 ;;		_CCP3_Initialize
  8442 ;; This function uses a non-reentrant model
  8443 ;;
  8444                           
  8445                           	psect	text50
  8446  0027BE                     __ptext50:
  8447                           	callstack 0
  8448  0027BE                     _CCP3_SetCallBack:
  8449                           	callstack 20
  8450  0027BE                     
  8451                           ;mcc_generated_files/ccp3.c: 120:     CCP3_CallBack = customCallBack;
  8452  0027BE  C014  F0D1         	movff	CCP3_SetCallBack@customCallBack,_CCP3_CallBack
  8453  0027C2  C015  F0D2         	movff	CCP3_SetCallBack@customCallBack+1,_CCP3_CallBack+1
  8454  0027C6  0012               	return		;funcret
  8455  0027C8                     __end_of_CCP3_SetCallBack:
  8456                           	callstack 0
  8457                           
  8458 ;; *************** function _ADCC_Initialize *****************
  8459 ;; Defined at:
  8460 ;;		line 62 in file "mcc_generated_files/adcc.c"
  8461 ;; Parameters:    Size  Location     Type
  8462 ;;		None
  8463 ;; Auto vars:     Size  Location     Type
  8464 ;;		None
  8465 ;; Return value:  Size  Location     Type
  8466 ;;                  1    wreg      void 
  8467 ;; Registers used:
  8468 ;;		wreg, status,2
  8469 ;; Tracked objects:
  8470 ;;		On entry : 0/0
  8471 ;;		On exit  : 0/0
  8472 ;;		Unchanged: 0/0
  8473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8477 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8478 ;;Total ram usage:        0 bytes
  8479 ;; Hardware stack levels used: 1
  8480 ;; Hardware stack levels required when called: 8
  8481 ;; This function calls:
  8482 ;;		Nothing
  8483 ;; This function is called by:
  8484 ;;		_SYSTEM_Initialize
  8485 ;; This function uses a non-reentrant model
  8486 ;;
  8487                           
  8488                           	psect	text51
  8489  001F8E                     __ptext51:
  8490                           	callstack 0
  8491  001F8E                     _ADCC_Initialize:
  8492                           	callstack 21
  8493  001F8E                     
  8494                           ;mcc_generated_files/adcc.c: 66:     ADLTHL = 0x00;
  8495  001F8E  0E00               	movlw	0
  8496  001F90  013E               	movlb	62	; () banked
  8497  001F92  6FDE               	movwf	222,b	;volatile
  8498                           
  8499                           ;mcc_generated_files/adcc.c: 68:     ADLTHH = 0x00;
  8500  001F94  0E00               	movlw	0
  8501  001F96  6FDF               	movwf	223,b	;volatile
  8502                           
  8503                           ;mcc_generated_files/adcc.c: 70:     ADUTHL = 0x00;
  8504  001F98  0E00               	movlw	0
  8505  001F9A  6FE0               	movwf	224,b	;volatile
  8506                           
  8507                           ;mcc_generated_files/adcc.c: 72:     ADUTHH = 0x00;
  8508  001F9C  0E00               	movlw	0
  8509  001F9E  6FE1               	movwf	225,b	;volatile
  8510                           
  8511                           ;mcc_generated_files/adcc.c: 74:     ADSTPTL = 0x00;
  8512  001FA0  0E00               	movlw	0
  8513  001FA2  6FE4               	movwf	228,b	;volatile
  8514                           
  8515                           ;mcc_generated_files/adcc.c: 76:     ADSTPTH = 0x00;
  8516  001FA4  0E00               	movlw	0
  8517  001FA6  6FE5               	movwf	229,b	;volatile
  8518                           
  8519                           ;mcc_generated_files/adcc.c: 78:     ADACCU = 0x00;
  8520  001FA8  0E00               	movlw	0
  8521  001FAA  6FEA               	movwf	234,b	;volatile
  8522                           
  8523                           ;mcc_generated_files/adcc.c: 80:     ADRPT = 0x00;
  8524  001FAC  0E00               	movlw	0
  8525  001FAE  6FEC               	movwf	236,b	;volatile
  8526                           
  8527                           ;mcc_generated_files/adcc.c: 82:     ADPCH = 0x00;
  8528  001FB0  0E00               	movlw	0
  8529  001FB2  6FF1               	movwf	241,b	;volatile
  8530                           
  8531                           ;mcc_generated_files/adcc.c: 84:     ADACQL = 0x58;
  8532  001FB4  0E58               	movlw	88
  8533  001FB6  6FF3               	movwf	243,b	;volatile
  8534                           
  8535                           ;mcc_generated_files/adcc.c: 86:     ADACQH = 0x02;
  8536  001FB8  0E02               	movlw	2
  8537  001FBA  6FF4               	movwf	244,b	;volatile
  8538                           
  8539                           ;mcc_generated_files/adcc.c: 88:     ADCAP = 0x00;
  8540  001FBC  0E00               	movlw	0
  8541  001FBE  6FF5               	movwf	245,b	;volatile
  8542                           
  8543                           ;mcc_generated_files/adcc.c: 90:     ADPREL = 0x00;
  8544  001FC0  0E00               	movlw	0
  8545  001FC2  6FF6               	movwf	246,b	;volatile
  8546                           
  8547                           ;mcc_generated_files/adcc.c: 92:     ADPREH = 0x00;
  8548  001FC4  0E00               	movlw	0
  8549  001FC6  6FF7               	movwf	247,b	;volatile
  8550                           
  8551                           ;mcc_generated_files/adcc.c: 94:     ADCON1 = 0x00;
  8552  001FC8  0E00               	movlw	0
  8553  001FCA  6FF9               	movwf	249,b	;volatile
  8554                           
  8555                           ;mcc_generated_files/adcc.c: 96:     ADCON2 = 0x00;
  8556  001FCC  0E00               	movlw	0
  8557  001FCE  6FFA               	movwf	250,b	;volatile
  8558                           
  8559                           ;mcc_generated_files/adcc.c: 98:     ADCON3 = 0x00;
  8560  001FD0  0E00               	movlw	0
  8561  001FD2  6FFB               	movwf	251,b	;volatile
  8562                           
  8563                           ;mcc_generated_files/adcc.c: 100:     ADSTAT = 0x00;
  8564  001FD4  0E00               	movlw	0
  8565  001FD6  6FFC               	movwf	252,b	;volatile
  8566                           
  8567                           ;mcc_generated_files/adcc.c: 102:     ADREF = 0x00;
  8568  001FD8  0E00               	movlw	0
  8569  001FDA  6FFD               	movwf	253,b	;volatile
  8570                           
  8571                           ;mcc_generated_files/adcc.c: 104:     ADACT = 0x00;
  8572  001FDC  0E00               	movlw	0
  8573  001FDE  6FFE               	movwf	254,b	;volatile
  8574                           
  8575                           ;mcc_generated_files/adcc.c: 106:     ADCLK = 0x1F;
  8576  001FE0  0E1F               	movlw	31
  8577  001FE2  6FFF               	movwf	255,b	;volatile
  8578                           
  8579                           ;mcc_generated_files/adcc.c: 108:     ADCON0 = 0x84;
  8580  001FE4  0E84               	movlw	132
  8581  001FE6  6FF8               	movwf	248,b	;volatile
  8582  001FE8                     
  8583                           ; BSR set to: 62
  8584  001FE8  0012               	return		;funcret
  8585  001FEA                     __end_of_ADCC_Initialize:
  8586                           	callstack 0
  8587                           
  8588 ;; *************** function _UART1_tx_vect_isr *****************
  8589 ;; Defined at:
  8590 ;;		line 235 in file "mcc_generated_files/uart1.c"
  8591 ;; Parameters:    Size  Location     Type
  8592 ;;		None
  8593 ;; Auto vars:     Size  Location     Type
  8594 ;;		None
  8595 ;; Return value:  Size  Location     Type
  8596 ;;                  1    wreg      void 
  8597 ;; Registers used:
  8598 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  8599 ;; Tracked objects:
  8600 ;;		On entry : 0/0
  8601 ;;		On exit  : 0/0
  8602 ;;		Unchanged: 0/0
  8603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8606 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8607 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8608 ;;Total ram usage:        1 bytes
  8609 ;; Hardware stack levels used: 1
  8610 ;; Hardware stack levels required when called: 5
  8611 ;; This function calls:
  8612 ;;		Absolute function
  8613 ;;		_UART1_Transmit_ISR
  8614 ;; This function is called by:
  8615 ;;		Interrupt level 1
  8616 ;; This function uses a non-reentrant model
  8617 ;;
  8618                           
  8619                           	psect	text52
  8620  0021B4                     __ptext52:
  8621                           	callstack 0
  8622  0021B4                     _UART1_tx_vect_isr:
  8623                           	callstack 20
  8624                           
  8625                           ; BSR set to: 62
  8626                           ;incstack = 0
  8627  0021B4  006F FF60  F011    	movff	status,??_UART1_tx_vect_isr
  8628  0021BA                     
  8629                           ;mcc_generated_files/uart1.c: 237:     if(UART1_TxInterruptHandler)
  8630  0021BA  0100               	movlb	0	; () banked
  8631  0021BC  51D9               	movf	_UART1_TxInterruptHandler& (0+255),w,b
  8632  0021BE  11DA               	iorwf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
  8633  0021C0  B4D8               	btfsc	status,2,c
  8634  0021C2  EFE5  F010         	goto	i1u367_21
  8635  0021C6  EFE7  F010         	goto	i1u367_20
  8636  0021CA                     i1u367_21:
  8637  0021CA  EFF4  F010         	goto	i1l324
  8638  0021CE                     i1u367_20:
  8639  0021CE                     
  8640                           ; BSR set to: 0
  8641                           ;mcc_generated_files/uart1.c: 238:     {;mcc_generated_files/uart1.c: 239:         UART1
      +                          _TxInterruptHandler();
  8642  0021CE  D802               	call	i1u368_28
  8643  0021D0  EFF4  F010         	goto	i1u368_29
  8644  0021D4                     i1u368_28:
  8645  0021D4  0005               	push	
  8646  0021D6  6EFA               	movwf	pclath,c
  8647  0021D8  51D9               	movf	_UART1_TxInterruptHandler& (0+255),w,b
  8648  0021DA  6EFD               	movwf	tosl,c
  8649  0021DC  51DA               	movf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
  8650  0021DE  6EFE               	movwf	tosh,c
  8651  0021E0  50F8               	movf	tblptru,w,c
  8652  0021E2  6EFF               	movwf	tosu,c
  8653  0021E4  50FA               	movf	pclath,w,c
  8654  0021E6  0012               	return		;indir
  8655  0021E8                     i1u368_29:
  8656  0021E8                     i1l324:
  8657  0021E8  0060  F047  FFD8   	movff	??_UART1_tx_vect_isr,status
  8658  0021EE  0011               	retfie		f
  8659  0021F0                     __end_of_UART1_tx_vect_isr:
  8660                           	callstack 0
  8661                           
  8662 ;; *************** function _UART1_Transmit_ISR *****************
  8663 ;; Defined at:
  8664 ;;		line 253 in file "mcc_generated_files/uart1.c"
  8665 ;; Parameters:    Size  Location     Type
  8666 ;;		None
  8667 ;; Auto vars:     Size  Location     Type
  8668 ;;		None
  8669 ;; Return value:  Size  Location     Type
  8670 ;;                  1    wreg      void 
  8671 ;; Registers used:
  8672 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8673 ;; Tracked objects:
  8674 ;;		On entry : 0/0
  8675 ;;		On exit  : 0/0
  8676 ;;		Unchanged: 0/0
  8677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8681 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8682 ;;Total ram usage:        0 bytes
  8683 ;; Hardware stack levels used: 1
  8684 ;; Hardware stack levels required when called: 4
  8685 ;; This function calls:
  8686 ;;		Nothing
  8687 ;; This function is called by:
  8688 ;;		_UART1_Initialize
  8689 ;;		_UART1_tx_vect_isr
  8690 ;; This function uses a non-reentrant model
  8691 ;;
  8692                           
  8693                           	psect	text53
  8694  00216A                     __ptext53:
  8695                           	callstack 0
  8696  00216A                     _UART1_Transmit_ISR:
  8697                           	callstack 20
  8698  00216A                     
  8699                           ;mcc_generated_files/uart1.c: 256:     if(sizeof(uart1TxBuffer) > uart1TxBufferRemaining
      +                          )
  8700  00216A  0E08               	movlw	8
  8701  00216C  0100               	movlb	0	; () banked
  8702  00216E  61DD               	cpfslt	_uart1TxBufferRemaining& (0+255),b	;volatile
  8703  002170  EFBC  F010         	goto	i1u349_21
  8704  002174  EFBE  F010         	goto	i1u349_20
  8705  002178                     i1u349_21:
  8706  002178  EFD6  F010         	goto	i1l333
  8707  00217C                     i1u349_20:
  8708  00217C                     
  8709                           ; BSR set to: 0
  8710                           ;mcc_generated_files/uart1.c: 257:     {;mcc_generated_files/uart1.c: 258:         U1TXB
      +                           = uart1TxBuffer[uart1TxTail++];
  8711  00217C  0E70               	movlw	low _uart1TxBuffer
  8712  00217E  2444               	addwf	_uart1TxTail^0,w,c	;volatile
  8713  002180  6ED9               	movwf	fsr2l,c
  8714  002182  6ADA               	clrf	fsr2h,c
  8715  002184  0E00               	movlw	high _uart1TxBuffer
  8716  002186  22DA               	addwfc	fsr2h,f,c
  8717  002188  50DF               	movf	indf2,w,c
  8718  00218A  013D               	movlb	61	; () banked
  8719  00218C  6FEA               	movwf	234,b	;volatile
  8720  00218E                     
  8721                           ; BSR set to: 61
  8722  00218E  2A44               	incf	_uart1TxTail^0,f,c	;volatile
  8723  002190                     
  8724                           ; BSR set to: 61
  8725                           ;mcc_generated_files/uart1.c: 259:        if(sizeof(uart1TxBuffer) <= uart1TxTail)
  8726  002190  0E07               	movlw	7
  8727  002192  6444               	cpfsgt	_uart1TxTail^0,c	;volatile
  8728  002194  EFCE  F010         	goto	i1u350_21
  8729  002198  EFD0  F010         	goto	i1u350_20
  8730  00219C                     i1u350_21:
  8731  00219C  EFD2  F010         	goto	i1l4925
  8732  0021A0                     i1u350_20:
  8733  0021A0                     
  8734                           ; BSR set to: 61
  8735                           ;mcc_generated_files/uart1.c: 260:         {;mcc_generated_files/uart1.c: 261:          
      +                             uart1TxTail = 0;
  8736  0021A0  0E00               	movlw	0
  8737  0021A2  6E44               	movwf	_uart1TxTail^0,c	;volatile
  8738  0021A4                     i1l4925:
  8739                           
  8740                           ; BSR set to: 61
  8741                           ;mcc_generated_files/uart1.c: 263:         uart1TxBufferRemaining++;
  8742  0021A4  0100               	movlb	0	; () banked
  8743  0021A6  2BDD               	incf	_uart1TxBufferRemaining& (0+255),f,b	;volatile
  8744                           
  8745                           ;mcc_generated_files/uart1.c: 264:     }
  8746  0021A8  EFD8  F010         	goto	i1l336
  8747  0021AC                     i1l333:
  8748                           
  8749                           ; BSR set to: 0
  8750                           ;mcc_generated_files/uart1.c: 266:     {;mcc_generated_files/uart1.c: 267:         PIE3b
      +                          its.U1TXIE = 0;
  8751  0021AC  0139               	movlb	57	; () banked
  8752  0021AE  9993               	bcf	147,4,b	;volatile
  8753  0021B0                     i1l336:
  8754  0021B0  0012               	return		;funcret
  8755  0021B2                     __end_of_UART1_Transmit_ISR:
  8756                           	callstack 0
  8757                           
  8758 ;; *************** function _UART1_rx_vect_isr *****************
  8759 ;; Defined at:
  8760 ;;		line 243 in file "mcc_generated_files/uart1.c"
  8761 ;; Parameters:    Size  Location     Type
  8762 ;;		None
  8763 ;; Auto vars:     Size  Location     Type
  8764 ;;		None
  8765 ;; Return value:  Size  Location     Type
  8766 ;;                  1    wreg      void 
  8767 ;; Registers used:
  8768 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  8769 ;; Tracked objects:
  8770 ;;		On entry : 0/0
  8771 ;;		On exit  : 0/0
  8772 ;;		Unchanged: 0/0
  8773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8776 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8777 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8778 ;;Total ram usage:        1 bytes
  8779 ;; Hardware stack levels used: 1
  8780 ;; Hardware stack levels required when called: 7
  8781 ;; This function calls:
  8782 ;;		Absolute function
  8783 ;;		_UART1_Receive_ISR
  8784 ;; This function is called by:
  8785 ;;		Interrupt level 1
  8786 ;; This function uses a non-reentrant model
  8787 ;;
  8788                           
  8789                           	psect	text54
  8790  0021F0                     __ptext54:
  8791                           	callstack 0
  8792  0021F0                     _UART1_rx_vect_isr:
  8793                           	callstack 18
  8794                           
  8795                           ;incstack = 0
  8796  0021F0  006F FF60  F012    	movff	status,??_UART1_rx_vect_isr
  8797  0021F6                     
  8798                           ;mcc_generated_files/uart1.c: 245:     if(UART1_RxInterruptHandler)
  8799  0021F6  0100               	movlb	0	; () banked
  8800  0021F8  51DB               	movf	_UART1_RxInterruptHandler& (0+255),w,b
  8801  0021FA  11DC               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
  8802  0021FC  B4D8               	btfsc	status,2,c
  8803  0021FE  EF03  F011         	goto	i1u369_21
  8804  002202  EF05  F011         	goto	i1u369_20
  8805  002206                     i1u369_21:
  8806  002206  EF12  F011         	goto	i1l330
  8807  00220A                     i1u369_20:
  8808  00220A                     
  8809                           ; BSR set to: 0
  8810                           ;mcc_generated_files/uart1.c: 246:     {;mcc_generated_files/uart1.c: 247:         UART1
      +                          _RxInterruptHandler();
  8811  00220A  D802               	call	i1u370_28
  8812  00220C  EF12  F011         	goto	i1u370_29
  8813  002210                     i1u370_28:
  8814  002210  0005               	push	
  8815  002212  6EFA               	movwf	pclath,c
  8816  002214  51DB               	movf	_UART1_RxInterruptHandler& (0+255),w,b
  8817  002216  6EFD               	movwf	tosl,c
  8818  002218  51DC               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
  8819  00221A  6EFE               	movwf	tosh,c
  8820  00221C  50F8               	movf	tblptru,w,c
  8821  00221E  6EFF               	movwf	tosu,c
  8822  002220  50FA               	movf	pclath,w,c
  8823  002222  0012               	return		;indir
  8824  002224                     i1u370_29:
  8825  002224                     i1l330:
  8826  002224  0060  F04B  FFD8   	movff	??_UART1_rx_vect_isr,status
  8827  00222A  0011               	retfie		f
  8828  00222C                     __end_of_UART1_rx_vect_isr:
  8829                           	callstack 0
  8830                           
  8831 ;; *************** function _UART1_Receive_ISR *****************
  8832 ;; Defined at:
  8833 ;;		line 273 in file "mcc_generated_files/uart1.c"
  8834 ;; Parameters:    Size  Location     Type
  8835 ;;		None
  8836 ;; Auto vars:     Size  Location     Type
  8837 ;;		None
  8838 ;; Return value:  Size  Location     Type
  8839 ;;                  1    wreg      void 
  8840 ;; Registers used:
  8841 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  8842 ;; Tracked objects:
  8843 ;;		On entry : 0/0
  8844 ;;		On exit  : 0/0
  8845 ;;		Unchanged: 0/0
  8846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8850 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8851 ;;Total ram usage:        0 bytes
  8852 ;; Hardware stack levels used: 1
  8853 ;; Hardware stack levels required when called: 6
  8854 ;; This function calls:
  8855 ;;		Absolute function
  8856 ;;		_UART1_DefaultErrorHandler
  8857 ;;		_UART1_DefaultFramingErrorHandler
  8858 ;;		_UART1_DefaultOverrunErrorHandler
  8859 ;;		_UART1_RxDataHandler
  8860 ;; This function is called by:
  8861 ;;		_UART1_Initialize
  8862 ;;		_UART1_rx_vect_isr
  8863 ;; This function uses a non-reentrant model
  8864 ;;
  8865                           
  8866                           	psect	text55
  8867  001C6C                     __ptext55:
  8868                           	callstack 0
  8869  001C6C                     _UART1_Receive_ISR:
  8870                           	callstack 18
  8871  001C6C                     
  8872                           ;mcc_generated_files/uart1.c: 276:     uart1RxStatusBuffer[uart1RxHead].status = 0;
  8873  001C6C  0E60               	movlw	low _uart1RxStatusBuffer
  8874  001C6E  2443               	addwf	_uart1RxHead^0,w,c	;volatile
  8875  001C70  6ED9               	movwf	fsr2l,c
  8876  001C72  6ADA               	clrf	fsr2h,c
  8877  001C74  0E00               	movlw	high _uart1RxStatusBuffer
  8878  001C76  22DA               	addwfc	fsr2h,f,c
  8879  001C78  0E00               	movlw	0
  8880  001C7A  6EDF               	movwf	indf2,c
  8881  001C7C                     
  8882                           ;mcc_generated_files/uart1.c: 278:     if(U1ERRIRbits.FERIF){
  8883  001C7C  013D               	movlb	61	; () banked
  8884  001C7E  A7F9               	btfss	249,3,b	;volatile
  8885  001C80  EF44  F00E         	goto	i1u351_21
  8886  001C84  EF46  F00E         	goto	i1u351_20
  8887  001C88                     i1u351_21:
  8888  001C88  EF5B  F00E         	goto	i1l4935
  8889  001C8C                     i1u351_20:
  8890  001C8C                     
  8891                           ; BSR set to: 61
  8892                           ;mcc_generated_files/uart1.c: 279:         uart1RxStatusBuffer[uart1RxHead].ferr = 1;
  8893  001C8C  0E60               	movlw	low _uart1RxStatusBuffer
  8894  001C8E  2443               	addwf	_uart1RxHead^0,w,c	;volatile
  8895  001C90  6ED9               	movwf	fsr2l,c
  8896  001C92  6ADA               	clrf	fsr2h,c
  8897  001C94  0E00               	movlw	high _uart1RxStatusBuffer
  8898  001C96  22DA               	addwfc	fsr2h,f,c
  8899  001C98  0100               	movlb	0	; () banked
  8900  001C9A  82DF               	bsf	indf2,1,c
  8901  001C9C                     
  8902                           ; BSR set to: 0
  8903                           ;mcc_generated_files/uart1.c: 280:         UART1_FramingErrorHandler();
  8904  001C9C  D802               	call	i1u352_28
  8905  001C9E  EF5B  F00E         	goto	i1u352_29
  8906  001CA2                     i1u352_28:
  8907  001CA2  0005               	push	
  8908  001CA4  6EFA               	movwf	pclath,c
  8909  001CA6  51D7               	movf	_UART1_FramingErrorHandler& (0+255),w,b
  8910  001CA8  6EFD               	movwf	tosl,c
  8911  001CAA  51D8               	movf	(_UART1_FramingErrorHandler+1)& (0+255),w,b
  8912  001CAC  6EFE               	movwf	tosh,c
  8913  001CAE  50F8               	movf	tblptru,w,c
  8914  001CB0  6EFF               	movwf	tosu,c
  8915  001CB2  50FA               	movf	pclath,w,c
  8916  001CB4  0012               	return		;indir
  8917  001CB6                     i1u352_29:
  8918  001CB6                     i1l4935:
  8919                           
  8920                           ;mcc_generated_files/uart1.c: 283:     if(U1ERRIRbits.RXFOIF){
  8921  001CB6  013D               	movlb	61	; () banked
  8922  001CB8  A3F9               	btfss	249,1,b	;volatile
  8923  001CBA  EF61  F00E         	goto	i1u353_21
  8924  001CBE  EF63  F00E         	goto	i1u353_20
  8925  001CC2                     i1u353_21:
  8926  001CC2  EF78  F00E         	goto	i1l4941
  8927  001CC6                     i1u353_20:
  8928  001CC6                     
  8929                           ; BSR set to: 61
  8930                           ;mcc_generated_files/uart1.c: 284:         uart1RxStatusBuffer[uart1RxHead].oerr = 1;
  8931  001CC6  0E60               	movlw	low _uart1RxStatusBuffer
  8932  001CC8  2443               	addwf	_uart1RxHead^0,w,c	;volatile
  8933  001CCA  6ED9               	movwf	fsr2l,c
  8934  001CCC  6ADA               	clrf	fsr2h,c
  8935  001CCE  0E00               	movlw	high _uart1RxStatusBuffer
  8936  001CD0  22DA               	addwfc	fsr2h,f,c
  8937  001CD2  0100               	movlb	0	; () banked
  8938  001CD4  84DF               	bsf	indf2,2,c
  8939  001CD6                     
  8940                           ; BSR set to: 0
  8941                           ;mcc_generated_files/uart1.c: 285:         UART1_OverrunErrorHandler();
  8942  001CD6  D802               	call	i1u354_28
  8943  001CD8  EF78  F00E         	goto	i1u354_29
  8944  001CDC                     i1u354_28:
  8945  001CDC  0005               	push	
  8946  001CDE  6EFA               	movwf	pclath,c
  8947  001CE0  51D5               	movf	_UART1_OverrunErrorHandler& (0+255),w,b
  8948  001CE2  6EFD               	movwf	tosl,c
  8949  001CE4  51D6               	movf	(_UART1_OverrunErrorHandler+1)& (0+255),w,b
  8950  001CE6  6EFE               	movwf	tosh,c
  8951  001CE8  50F8               	movf	tblptru,w,c
  8952  001CEA  6EFF               	movwf	tosu,c
  8953  001CEC  50FA               	movf	pclath,w,c
  8954  001CEE  0012               	return		;indir
  8955  001CF0                     i1u354_29:
  8956  001CF0                     i1l4941:
  8957                           
  8958                           ;mcc_generated_files/uart1.c: 288:     if(uart1RxStatusBuffer[uart1RxHead].status){
  8959  001CF0  0E60               	movlw	low _uart1RxStatusBuffer
  8960  001CF2  2443               	addwf	_uart1RxHead^0,w,c	;volatile
  8961  001CF4  6ED9               	movwf	fsr2l,c
  8962  001CF6  6ADA               	clrf	fsr2h,c
  8963  001CF8  0E00               	movlw	high _uart1RxStatusBuffer
  8964  001CFA  22DA               	addwfc	fsr2h,f,c
  8965  001CFC  50DF               	movf	indf2,w,c
  8966  001CFE  B4D8               	btfsc	status,2,c
  8967  001D00  EF84  F00E         	goto	i1u355_21
  8968  001D04  EF86  F00E         	goto	i1u355_20
  8969  001D08                     i1u355_21:
  8970  001D08  EF96  F00E         	goto	i1l4945
  8971  001D0C                     i1u355_20:
  8972  001D0C                     
  8973                           ;mcc_generated_files/uart1.c: 289:         UART1_ErrorHandler();
  8974  001D0C  D802               	call	i1u356_28
  8975  001D0E  EF94  F00E         	goto	i1u356_29
  8976  001D12                     i1u356_28:
  8977  001D12  0005               	push	
  8978  001D14  0100               	movlb	0	; () banked
  8979  001D16  6EFA               	movwf	pclath,c
  8980  001D18  51D3               	movf	_UART1_ErrorHandler& (0+255),w,b
  8981  001D1A  6EFD               	movwf	tosl,c
  8982  001D1C  51D4               	movf	(_UART1_ErrorHandler+1)& (0+255),w,b
  8983  001D1E  6EFE               	movwf	tosh,c
  8984  001D20  50F8               	movf	tblptru,w,c
  8985  001D22  6EFF               	movwf	tosu,c
  8986  001D24  50FA               	movf	pclath,w,c
  8987  001D26  0012               	return		;indir
  8988  001D28                     i1u356_29:
  8989                           
  8990                           ;mcc_generated_files/uart1.c: 290:     } else {
  8991  001D28  EF98  F00E         	goto	i1l343
  8992  001D2C                     i1l4945:
  8993                           
  8994                           ;mcc_generated_files/uart1.c: 291:         UART1_RxDataHandler();
  8995  001D2C  ECDB  F012         	call	_UART1_RxDataHandler	;wreg free
  8996  001D30                     i1l343:
  8997  001D30  0012               	return		;funcret
  8998  001D32                     __end_of_UART1_Receive_ISR:
  8999                           	callstack 0
  9000                           
  9001 ;; *************** function _UART1_DefaultOverrunErrorHandler *****************
  9002 ;; Defined at:
  9003 ;;		line 309 in file "mcc_generated_files/uart1.c"
  9004 ;; Parameters:    Size  Location     Type
  9005 ;;		None
  9006 ;; Auto vars:     Size  Location     Type
  9007 ;;		None
  9008 ;; Return value:  Size  Location     Type
  9009 ;;                  1    wreg      void 
  9010 ;; Registers used:
  9011 ;;		None
  9012 ;; Tracked objects:
  9013 ;;		On entry : 0/0
  9014 ;;		On exit  : 0/0
  9015 ;;		Unchanged: 0/0
  9016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9020 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9021 ;;Total ram usage:        0 bytes
  9022 ;; Hardware stack levels used: 1
  9023 ;; Hardware stack levels required when called: 4
  9024 ;; This function calls:
  9025 ;;		Nothing
  9026 ;; This function is called by:
  9027 ;;		_UART1_Initialize
  9028 ;;		_UART1_Receive_ISR
  9029 ;; This function uses a non-reentrant model
  9030 ;;
  9031                           
  9032                           	psect	text56
  9033  0027D6                     __ptext56:
  9034                           	callstack 0
  9035  0027D6                     _UART1_DefaultOverrunErrorHandler:
  9036                           	callstack 19
  9037  0027D6  0012               	return		;funcret
  9038  0027D8                     __end_of_UART1_DefaultOverrunErrorHandler:
  9039                           	callstack 0
  9040                           
  9041 ;; *************** function _UART1_DefaultFramingErrorHandler *****************
  9042 ;; Defined at:
  9043 ;;		line 307 in file "mcc_generated_files/uart1.c"
  9044 ;; Parameters:    Size  Location     Type
  9045 ;;		None
  9046 ;; Auto vars:     Size  Location     Type
  9047 ;;		None
  9048 ;; Return value:  Size  Location     Type
  9049 ;;                  1    wreg      void 
  9050 ;; Registers used:
  9051 ;;		None
  9052 ;; Tracked objects:
  9053 ;;		On entry : 0/0
  9054 ;;		On exit  : 0/0
  9055 ;;		Unchanged: 0/0
  9056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9060 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9061 ;;Total ram usage:        0 bytes
  9062 ;; Hardware stack levels used: 1
  9063 ;; Hardware stack levels required when called: 4
  9064 ;; This function calls:
  9065 ;;		Nothing
  9066 ;; This function is called by:
  9067 ;;		_UART1_Initialize
  9068 ;;		_UART1_Receive_ISR
  9069 ;; This function uses a non-reentrant model
  9070 ;;
  9071                           
  9072                           	psect	text57
  9073  0027D8                     __ptext57:
  9074                           	callstack 0
  9075  0027D8                     _UART1_DefaultFramingErrorHandler:
  9076                           	callstack 19
  9077  0027D8  0012               	return		;funcret
  9078  0027DA                     __end_of_UART1_DefaultFramingErrorHandler:
  9079                           	callstack 0
  9080                           
  9081 ;; *************** function _UART1_DefaultErrorHandler *****************
  9082 ;; Defined at:
  9083 ;;		line 311 in file "mcc_generated_files/uart1.c"
  9084 ;; Parameters:    Size  Location     Type
  9085 ;;		None
  9086 ;; Auto vars:     Size  Location     Type
  9087 ;;		None
  9088 ;; Return value:  Size  Location     Type
  9089 ;;                  1    wreg      void 
  9090 ;; Registers used:
  9091 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9092 ;; Tracked objects:
  9093 ;;		On entry : 0/0
  9094 ;;		On exit  : 0/0
  9095 ;;		Unchanged: 0/0
  9096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9100 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9101 ;;Total ram usage:        0 bytes
  9102 ;; Hardware stack levels used: 1
  9103 ;; Hardware stack levels required when called: 5
  9104 ;; This function calls:
  9105 ;;		_UART1_RxDataHandler
  9106 ;; This function is called by:
  9107 ;;		_UART1_Initialize
  9108 ;;		_UART1_Receive_ISR
  9109 ;; This function uses a non-reentrant model
  9110 ;;
  9111                           
  9112                           	psect	text58
  9113  0027C8                     __ptext58:
  9114                           	callstack 0
  9115  0027C8                     _UART1_DefaultErrorHandler:
  9116                           	callstack 18
  9117  0027C8                     
  9118                           ;mcc_generated_files/uart1.c: 312:     UART1_RxDataHandler();
  9119  0027C8  ECDB  F012         	call	_UART1_RxDataHandler	;wreg free
  9120  0027CC  0012               	return		;funcret
  9121  0027CE                     __end_of_UART1_DefaultErrorHandler:
  9122                           	callstack 0
  9123                           
  9124 ;; *************** function _UART1_RxDataHandler *****************
  9125 ;; Defined at:
  9126 ;;		line 297 in file "mcc_generated_files/uart1.c"
  9127 ;; Parameters:    Size  Location     Type
  9128 ;;		None
  9129 ;; Auto vars:     Size  Location     Type
  9130 ;;		None
  9131 ;; Return value:  Size  Location     Type
  9132 ;;                  1    wreg      void 
  9133 ;; Registers used:
  9134 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9135 ;; Tracked objects:
  9136 ;;		On entry : 0/0
  9137 ;;		On exit  : 0/0
  9138 ;;		Unchanged: 0/0
  9139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9143 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9144 ;;Total ram usage:        0 bytes
  9145 ;; Hardware stack levels used: 1
  9146 ;; Hardware stack levels required when called: 4
  9147 ;; This function calls:
  9148 ;;		Nothing
  9149 ;; This function is called by:
  9150 ;;		_UART1_Receive_ISR
  9151 ;;		_UART1_DefaultErrorHandler
  9152 ;; This function uses a non-reentrant model
  9153 ;;
  9154                           
  9155                           	psect	text59
  9156  0025B6                     __ptext59:
  9157                           	callstack 0
  9158  0025B6                     _UART1_RxDataHandler:
  9159                           	callstack 19
  9160  0025B6                     
  9161                           ;mcc_generated_files/uart1.c: 299:     uart1RxBuffer[uart1RxHead++] = U1RXB;
  9162  0025B6  0E68               	movlw	low _uart1RxBuffer
  9163  0025B8  2443               	addwf	_uart1RxHead^0,w,c	;volatile
  9164  0025BA  6ED9               	movwf	fsr2l,c
  9165  0025BC  6ADA               	clrf	fsr2h,c
  9166  0025BE  0E00               	movlw	high _uart1RxBuffer
  9167  0025C0  22DA               	addwfc	fsr2h,f,c
  9168  0025C2  006F F7A3 FFDF     	movff	15848,indf2	;volatile
  9169  0025C8  2A43               	incf	_uart1RxHead^0,f,c	;volatile
  9170  0025CA                     
  9171                           ;mcc_generated_files/uart1.c: 300:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
  9172  0025CA  0E07               	movlw	7
  9173  0025CC  6443               	cpfsgt	_uart1RxHead^0,c	;volatile
  9174  0025CE  EFEB  F012         	goto	i1u212_21
  9175  0025D2  EFED  F012         	goto	i1u212_20
  9176  0025D6                     i1u212_21:
  9177  0025D6  EFEF  F012         	goto	i1l3949
  9178  0025DA                     i1u212_20:
  9179  0025DA                     
  9180                           ;mcc_generated_files/uart1.c: 301:     {;mcc_generated_files/uart1.c: 302:         uart1
      +                          RxHead = 0;
  9181  0025DA  0E00               	movlw	0
  9182  0025DC  6E43               	movwf	_uart1RxHead^0,c	;volatile
  9183  0025DE                     i1l3949:
  9184                           
  9185                           ;mcc_generated_files/uart1.c: 304:     uart1RxCount++;
  9186  0025DE  2A41               	incf	_uart1RxCount^0,f,c	;volatile
  9187  0025E0  0012               	return		;funcret
  9188  0025E2                     __end_of_UART1_RxDataHandler:
  9189                           	callstack 0
  9190                           
  9191 ;; *************** function _TMR4_ISR *****************
  9192 ;; Defined at:
  9193 ;;		line 166 in file "mcc_generated_files/tmr4.c"
  9194 ;; Parameters:    Size  Location     Type
  9195 ;;		None
  9196 ;; Auto vars:     Size  Location     Type
  9197 ;;		None
  9198 ;; Return value:  Size  Location     Type
  9199 ;;                  1    wreg      void 
  9200 ;; Registers used:
  9201 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  9202 ;; Tracked objects:
  9203 ;;		On entry : 0/0
  9204 ;;		On exit  : 0/0
  9205 ;;		Unchanged: 0/0
  9206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9209 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9210 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9211 ;;Total ram usage:        1 bytes
  9212 ;; Hardware stack levels used: 1
  9213 ;; Hardware stack levels required when called: 6
  9214 ;; This function calls:
  9215 ;;		_TMR4_CallBack
  9216 ;; This function is called by:
  9217 ;;		Interrupt level 1
  9218 ;; This function uses a non-reentrant model
  9219 ;;
  9220                           
  9221                           	psect	text60
  9222  002264                     __ptext60:
  9223                           	callstack 0
  9224  002264                     _TMR4_ISR:
  9225                           	callstack 19
  9226                           
  9227                           ;incstack = 0
  9228  002264  006F FF60  F013    	movff	status,??_TMR4_ISR
  9229  00226A                     
  9230                           ;mcc_generated_files/tmr4.c: 168:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr4.c: 171:     PIR7bits.TMR4IF = 0;
  9231  00226A  0139               	movlb	57	; () banked
  9232  00226C  91A7               	bcf	167,0,b	;volatile
  9233  00226E                     
  9234                           ; BSR set to: 57
  9235                           ;mcc_generated_files/tmr4.c: 174:     if (++CountCallBack >= 10)
  9236  00226E  4A3C               	infsnz	TMR4_ISR@CountCallBack^0,f,c	;volatile
  9237  002270  2A3D               	incf	(TMR4_ISR@CountCallBack+1)^0,f,c	;volatile
  9238  002272  503D               	movf	(TMR4_ISR@CountCallBack+1)^0,w,c	;volatile
  9239  002274  E109               	bnz	i1u375_20
  9240  002276  0E0A               	movlw	10
  9241  002278  5C3C               	subwf	TMR4_ISR@CountCallBack^0,w,c	;volatile
  9242  00227A  A0D8               	btfss	status,0,c
  9243  00227C  EF42  F011         	goto	i1u375_21
  9244  002280  EF44  F011         	goto	i1u375_20
  9245  002284                     i1u375_21:
  9246  002284  EF4A  F011         	goto	i1l688
  9247  002288                     i1u375_20:
  9248  002288                     
  9249                           ; BSR set to: 57
  9250                           ;mcc_generated_files/tmr4.c: 175:     {;mcc_generated_files/tmr4.c: 177:         TMR4_Ca
      +                          llBack();
  9251  002288  EC39  F012         	call	_TMR4_CallBack	;wreg free
  9252  00228C                     
  9253                           ;mcc_generated_files/tmr4.c: 180:         CountCallBack = 0;
  9254  00228C  0E00               	movlw	0
  9255  00228E  6E3D               	movwf	(TMR4_ISR@CountCallBack+1)^0,c	;volatile
  9256  002290  0E00               	movlw	0
  9257  002292  6E3C               	movwf	TMR4_ISR@CountCallBack^0,c	;volatile
  9258  002294                     i1l688:
  9259  002294  0060  F04F  FFD8   	movff	??_TMR4_ISR,status
  9260  00229A  0011               	retfie		f
  9261  00229C                     __end_of_TMR4_ISR:
  9262                           	callstack 0
  9263                           
  9264 ;; *************** function _TMR4_CallBack *****************
  9265 ;; Defined at:
  9266 ;;		line 184 in file "mcc_generated_files/tmr4.c"
  9267 ;; Parameters:    Size  Location     Type
  9268 ;;		None
  9269 ;; Auto vars:     Size  Location     Type
  9270 ;;		None
  9271 ;; Return value:  Size  Location     Type
  9272 ;;                  1    wreg      void 
  9273 ;; Registers used:
  9274 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  9275 ;; Tracked objects:
  9276 ;;		On entry : 0/0
  9277 ;;		On exit  : 0/0
  9278 ;;		Unchanged: 0/0
  9279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9283 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9284 ;;Total ram usage:        0 bytes
  9285 ;; Hardware stack levels used: 1
  9286 ;; Hardware stack levels required when called: 5
  9287 ;; This function calls:
  9288 ;;		Absolute function
  9289 ;;		_TMR4_10msISR
  9290 ;;		_TMR4_DefaultInterruptHandler
  9291 ;; This function is called by:
  9292 ;;		_TMR4_ISR
  9293 ;; This function uses a non-reentrant model
  9294 ;;
  9295                           
  9296                           	psect	text61
  9297  002472                     __ptext61:
  9298                           	callstack 0
  9299  002472                     _TMR4_CallBack:
  9300                           	callstack 19
  9301  002472                     
  9302                           ;mcc_generated_files/tmr4.c: 188:     if(TMR4_InterruptHandler)
  9303  002472  0100               	movlb	0	; () banked
  9304  002474  51C7               	movf	_TMR4_InterruptHandler& (0+255),w,b
  9305  002476  11C8               	iorwf	(_TMR4_InterruptHandler+1)& (0+255),w,b
  9306  002478  B4D8               	btfsc	status,2,c
  9307  00247A  EF41  F012         	goto	i1u360_21
  9308  00247E  EF43  F012         	goto	i1u360_20
  9309  002482                     i1u360_21:
  9310  002482  EF50  F012         	goto	i1l692
  9311  002486                     i1u360_20:
  9312  002486                     
  9313                           ; BSR set to: 0
  9314                           ;mcc_generated_files/tmr4.c: 189:     {;mcc_generated_files/tmr4.c: 190:         TMR4_In
      +                          terruptHandler();
  9315  002486  D802               	call	i1u361_28
  9316  002488  EF50  F012         	goto	i1u361_29
  9317  00248C                     i1u361_28:
  9318  00248C  0005               	push	
  9319  00248E  6EFA               	movwf	pclath,c
  9320  002490  51C7               	movf	_TMR4_InterruptHandler& (0+255),w,b
  9321  002492  6EFD               	movwf	tosl,c
  9322  002494  51C8               	movf	(_TMR4_InterruptHandler+1)& (0+255),w,b
  9323  002496  6EFE               	movwf	tosh,c
  9324  002498  50F8               	movf	tblptru,w,c
  9325  00249A  6EFF               	movwf	tosu,c
  9326  00249C  50FA               	movf	pclath,w,c
  9327  00249E  0012               	return		;indir
  9328  0024A0                     i1u361_29:
  9329  0024A0                     i1l692:
  9330  0024A0  0012               	return		;funcret
  9331  0024A2                     __end_of_TMR4_CallBack:
  9332                           	callstack 0
  9333                           
  9334 ;; *************** function _TMR4_10msISR *****************
  9335 ;; Defined at:
  9336 ;;		line 62 in file "main.c"
  9337 ;; Parameters:    Size  Location     Type
  9338 ;;		None
  9339 ;; Auto vars:     Size  Location     Type
  9340 ;;		None
  9341 ;; Return value:  Size  Location     Type
  9342 ;;                  1    wreg      void 
  9343 ;; Registers used:
  9344 ;;		status,2, status,0
  9345 ;; Tracked objects:
  9346 ;;		On entry : 0/0
  9347 ;;		On exit  : 0/0
  9348 ;;		Unchanged: 0/0
  9349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9353 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9354 ;;Total ram usage:        0 bytes
  9355 ;; Hardware stack levels used: 1
  9356 ;; Hardware stack levels required when called: 4
  9357 ;; This function calls:
  9358 ;;		Nothing
  9359 ;; This function is called by:
  9360 ;;		_main
  9361 ;;		_TMR4_CallBack
  9362 ;; This function uses a non-reentrant model
  9363 ;;
  9364                           
  9365                           	psect	text62
  9366  0027CE                     __ptext62:
  9367                           	callstack 0
  9368  0027CE                     _TMR4_10msISR:
  9369                           	callstack 19
  9370  0027CE                     
  9371                           ;main.c: 63:     ++cycle10ms;
  9372  0027CE  0100               	movlb	0	; () banked
  9373  0027D0  2B9C               	incf	_cycle10ms& (0+255),f,b	;volatile
  9374  0027D2                     
  9375                           ; BSR set to: 0
  9376  0027D2  0012               	return		;funcret
  9377  0027D4                     __end_of_TMR4_10msISR:
  9378                           	callstack 0
  9379                           
  9380 ;; *************** function _TMR4_DefaultInterruptHandler *****************
  9381 ;; Defined at:
  9382 ;;		line 198 in file "mcc_generated_files/tmr4.c"
  9383 ;; Parameters:    Size  Location     Type
  9384 ;;		None
  9385 ;; Auto vars:     Size  Location     Type
  9386 ;;		None
  9387 ;; Return value:  Size  Location     Type
  9388 ;;                  1    wreg      void 
  9389 ;; Registers used:
  9390 ;;		None
  9391 ;; Tracked objects:
  9392 ;;		On entry : 0/0
  9393 ;;		On exit  : 0/0
  9394 ;;		Unchanged: 0/0
  9395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9399 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9400 ;;Total ram usage:        0 bytes
  9401 ;; Hardware stack levels used: 1
  9402 ;; Hardware stack levels required when called: 4
  9403 ;; This function calls:
  9404 ;;		Nothing
  9405 ;; This function is called by:
  9406 ;;		_TMR4_Initialize
  9407 ;;		_TMR4_CallBack
  9408 ;; This function uses a non-reentrant model
  9409 ;;
  9410                           
  9411                           	psect	text63
  9412  0027DA                     __ptext63:
  9413                           	callstack 0
  9414  0027DA                     _TMR4_DefaultInterruptHandler:
  9415                           	callstack 19
  9416  0027DA  0012               	return		;funcret
  9417  0027DC                     __end_of_TMR4_DefaultInterruptHandler:
  9418                           	callstack 0
  9419                           
  9420 ;; *************** function _Default_ISR *****************
  9421 ;; Defined at:
  9422 ;;		line 83 in file "mcc_generated_files/interrupt_manager.c"
  9423 ;; Parameters:    Size  Location     Type
  9424 ;;		None
  9425 ;; Auto vars:     Size  Location     Type
  9426 ;;		None
  9427 ;; Return value:  Size  Location     Type
  9428 ;;                  1    wreg      void 
  9429 ;; Registers used:
  9430 ;;		None
  9431 ;; Tracked objects:
  9432 ;;		On entry : 0/0
  9433 ;;		On exit  : 0/0
  9434 ;;		Unchanged: 0/0
  9435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9439 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9440 ;;Total ram usage:        0 bytes
  9441 ;; Hardware stack levels used: 1
  9442 ;; This function calls:
  9443 ;;		Nothing
  9444 ;; This function is called by:
  9445 ;;		Interrupt level 2
  9446 ;; This function uses a non-reentrant model
  9447 ;;
  9448                           
  9449                           	psect	text64
  9450  0027DC                     __ptext64:
  9451                           	callstack 0
  9452  0027DC                     _Default_ISR:
  9453                           	callstack 21
  9454  0027DC  0011               	retfie		f
  9455  0027DE                     __end_of_Default_ISR:
  9456                           	callstack 0
  9457                           
  9458 ;; *************** function _CCP3_CaptureISR *****************
  9459 ;; Defined at:
  9460 ;;		line 104 in file "mcc_generated_files/ccp3.c"
  9461 ;; Parameters:    Size  Location     Type
  9462 ;;		None
  9463 ;; Auto vars:     Size  Location     Type
  9464 ;;  module          2    2[COMRAM] struct CCPR3Reg_tag
  9465 ;; Return value:  Size  Location     Type
  9466 ;;                  1    wreg      void 
  9467 ;; Registers used:
  9468 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  9469 ;; Tracked objects:
  9470 ;;		On entry : 0/0
  9471 ;;		On exit  : 0/0
  9472 ;;		Unchanged: 0/0
  9473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9475 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9477 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9478 ;;Total ram usage:        2 bytes
  9479 ;; Hardware stack levels used: 1
  9480 ;; Hardware stack levels required when called: 1
  9481 ;; This function calls:
  9482 ;;		Absolute function
  9483 ;;		_CCP3_DefaultCallBack
  9484 ;; This function is called by:
  9485 ;;		Interrupt level 2
  9486 ;; This function uses a non-reentrant model
  9487 ;;
  9488                           
  9489                           	psect	text65
  9490  00229C                     __ptext65:
  9491                           	callstack 0
  9492  00229C                     _CCP3_CaptureISR:
  9493                           	callstack 20
  9494  00229C                     
  9495                           ;mcc_generated_files/ccp3.c: 106:     CCP3_PERIOD_REG_T module;;mcc_generated_files/ccp3
      +                          .c: 109:     PIR9bits.CCP3IF = 0;
  9496  00229C  0139               	movlb	57	; () banked
  9497  00229E  93A9               	bcf	169,1,b	;volatile
  9498                           
  9499                           ;mcc_generated_files/ccp3.c: 112:     module.ccpr3l = CCPR3L;
  9500  0022A0  006F FDD0  F003    	movff	16244,CCP3_CaptureISR@module	;volatile
  9501                           
  9502                           ;mcc_generated_files/ccp3.c: 113:     module.ccpr3h = CCPR3H;
  9503  0022A6  006F FDD4  F004    	movff	16245,CCP3_CaptureISR@module+1	;volatile
  9504  0022AC                     
  9505                           ; BSR set to: 57
  9506                           ;mcc_generated_files/ccp3.c: 116:     CCP3_CallBack(module.ccpr3_16Bit);
  9507  0022AC  C003  F001         	movff	CCP3_CaptureISR@module,CCP3_DefaultCallBack@capturedValue
  9508  0022B0  C004  F002         	movff	CCP3_CaptureISR@module+1,CCP3_DefaultCallBack@capturedValue+1
  9509  0022B4  D802               	call	i2u371_48
  9510  0022B6  EF68  F011         	goto	i2u371_49
  9511  0022BA                     i2u371_48:
  9512  0022BA  0005               	push	
  9513  0022BC  0100               	movlb	0	; () banked
  9514  0022BE  6EFA               	movwf	pclath,c
  9515  0022C0  51D1               	movf	_CCP3_CallBack& (0+255),w,b
  9516  0022C2  6EFD               	movwf	tosl,c
  9517  0022C4  51D2               	movf	(_CCP3_CallBack+1)& (0+255),w,b
  9518  0022C6  6EFE               	movwf	tosh,c
  9519  0022C8  50F8               	movf	tblptru,w,c
  9520  0022CA  6EFF               	movwf	tosu,c
  9521  0022CC  50FA               	movf	pclath,w,c
  9522  0022CE  0012               	return		;indir
  9523  0022D0                     i2u371_49:
  9524  0022D0  0011               	retfie		f
  9525  0022D2                     __end_of_CCP3_CaptureISR:
  9526                           	callstack 0
  9527                           
  9528 ;; *************** function _CCP3_DefaultCallBack *****************
  9529 ;; Defined at:
  9530 ;;		line 64 in file "mcc_generated_files/ccp3.c"
  9531 ;; Parameters:    Size  Location     Type
  9532 ;;  capturedValu    2    0[COMRAM] unsigned short 
  9533 ;; Auto vars:     Size  Location     Type
  9534 ;;		None
  9535 ;; Return value:  Size  Location     Type
  9536 ;;                  1    wreg      void 
  9537 ;; Registers used:
  9538 ;;		wreg, status,2, status,0
  9539 ;; Tracked objects:
  9540 ;;		On entry : 0/0
  9541 ;;		On exit  : 0/0
  9542 ;;		Unchanged: 0/0
  9543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9544 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9547 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9548 ;;Total ram usage:        2 bytes
  9549 ;; Hardware stack levels used: 1
  9550 ;; This function calls:
  9551 ;;		Nothing
  9552 ;; This function is called by:
  9553 ;;		_CCP3_Initialize
  9554 ;;		_CCP3_CaptureISR
  9555 ;; This function uses a non-reentrant model
  9556 ;;
  9557                           
  9558                           	psect	text66
  9559  0024A2                     __ptext66:
  9560                           	callstack 0
  9561  0024A2                     _CCP3_DefaultCallBack:
  9562                           	callstack 20
  9563  0024A2                     
  9564                           ;mcc_generated_files/ccp3.c: 64: static void CCP3_DefaultCallBack(uint16_t capturedValue
      +                          );mcc_generated_files/ccp3.c: 65: {;mcc_generated_files/ccp3.c: 67:     if(PORTDbits.RD7
      +                          ) {
  9565  0024A2  AECD               	btfss	205,7,c	;volatile
  9566  0024A4  EF56  F012         	goto	i2u357_41
  9567  0024A8  EF58  F012         	goto	i2u357_40
  9568  0024AC                     i2u357_41:
  9569  0024AC  EF5E  F012         	goto	i2l4951
  9570  0024B0                     i2u357_40:
  9571  0024B0                     
  9572                           ;mcc_generated_files/ccp3.c: 68:         distLeftM = capturedValue;
  9573  0024B0  C001  F098         	movff	CCP3_DefaultCallBack@capturedValue,_distLeftM
  9574  0024B4  C002  F099         	movff	CCP3_DefaultCallBack@capturedValue+1,_distLeftM+1
  9575                           
  9576                           ;mcc_generated_files/ccp3.c: 69:     } else {
  9577  0024B8  EF68  F012         	goto	i2l438
  9578  0024BC                     i2l4951:
  9579                           
  9580                           ;mcc_generated_files/ccp3.c: 70:         distLeft = capturedValue - distLeftM;
  9581  0024BC  0100               	movlb	0	; () banked
  9582  0024BE  5198               	movf	_distLeftM& (0+255),w,b
  9583  0024C0  5C01               	subwf	CCP3_DefaultCallBack@capturedValue^0,w,c
  9584  0024C2  6F9A               	movwf	_distLeft& (0+255),b	;volatile
  9585  0024C4  5199               	movf	(_distLeftM+1)& (0+255),w,b
  9586  0024C6  5802               	subwfb	(CCP3_DefaultCallBack@capturedValue+1)^0,w,c
  9587  0024C8  6F9B               	movwf	(_distLeft+1)& (0+255),b	;volatile
  9588  0024CA                     
  9589                           ; BSR set to: 0
  9590                           ;mcc_generated_files/ccp3.c: 71:         distLeft >>= 1;
  9591  0024CA  90D8               	bcf	status,0,c
  9592  0024CC  339B               	rrcf	(_distLeft+1)& (0+255),f,b	;volatile
  9593  0024CE  339A               	rrcf	_distLeft& (0+255),f,b	;volatile
  9594  0024D0                     i2l438:
  9595  0024D0  0012               	return		;funcret
  9596  0024D2                     __end_of_CCP3_DefaultCallBack:
  9597                           	callstack 0
  9598                           
  9599 ;; *************** function _CCP4_CaptureISR *****************
  9600 ;; Defined at:
  9601 ;;		line 107 in file "mcc_generated_files/ccp4.c"
  9602 ;; Parameters:    Size  Location     Type
  9603 ;;		None
  9604 ;; Auto vars:     Size  Location     Type
  9605 ;;  module          2    6[COMRAM] struct CCPR4Reg_tag
  9606 ;; Return value:  Size  Location     Type
  9607 ;;                  1    wreg      void 
  9608 ;; Registers used:
  9609 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  9610 ;; Tracked objects:
  9611 ;;		On entry : 0/0
  9612 ;;		On exit  : 0/0
  9613 ;;		Unchanged: 0/0
  9614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9616 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9618 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9619 ;;Total ram usage:        2 bytes
  9620 ;; Hardware stack levels used: 1
  9621 ;; Hardware stack levels required when called: 1
  9622 ;; This function calls:
  9623 ;;		Absolute function
  9624 ;;		_CCP4_DefaultCallBack
  9625 ;; This function is called by:
  9626 ;;		Interrupt level 2
  9627 ;; This function uses a non-reentrant model
  9628 ;;
  9629                           
  9630                           	psect	text67
  9631  0022D4                     __ptext67:
  9632                           	callstack 0
  9633  0022D4                     _CCP4_CaptureISR:
  9634                           	callstack 20
  9635  0022D4                     
  9636                           ;mcc_generated_files/ccp4.c: 109:     CCP4_PERIOD_REG_T module;;mcc_generated_files/ccp4
      +                          .c: 112:     PIR10bits.CCP4IF = 0;
  9637  0022D4  0139               	movlb	57	; () banked
  9638  0022D6  91AA               	bcf	170,0,b	;volatile
  9639                           
  9640                           ;mcc_generated_files/ccp4.c: 115:     module.ccpr4l = CCPR4L;
  9641  0022D8  006F FDC0  F007    	movff	16240,CCP4_CaptureISR@module	;volatile
  9642                           
  9643                           ;mcc_generated_files/ccp4.c: 116:     module.ccpr4h = CCPR4H;
  9644  0022DE  006F FDC4  F008    	movff	16241,CCP4_CaptureISR@module+1	;volatile
  9645  0022E4                     
  9646                           ; BSR set to: 57
  9647                           ;mcc_generated_files/ccp4.c: 119:     CCP4_CallBack(module.ccpr4_16Bit);
  9648  0022E4  C007  F005         	movff	CCP4_CaptureISR@module,CCP4_DefaultCallBack@capturedValue
  9649  0022E8  C008  F006         	movff	CCP4_CaptureISR@module+1,CCP4_DefaultCallBack@capturedValue+1
  9650  0022EC  D802               	call	i2u372_48
  9651  0022EE  EF84  F011         	goto	i2u372_49
  9652  0022F2                     i2u372_48:
  9653  0022F2  0005               	push	
  9654  0022F4  0100               	movlb	0	; () banked
  9655  0022F6  6EFA               	movwf	pclath,c
  9656  0022F8  51CF               	movf	_CCP4_CallBack& (0+255),w,b
  9657  0022FA  6EFD               	movwf	tosl,c
  9658  0022FC  51D0               	movf	(_CCP4_CallBack+1)& (0+255),w,b
  9659  0022FE  6EFE               	movwf	tosh,c
  9660  002300  50F8               	movf	tblptru,w,c
  9661  002302  6EFF               	movwf	tosu,c
  9662  002304  50FA               	movf	pclath,w,c
  9663  002306  0012               	return		;indir
  9664  002308                     i2u372_49:
  9665  002308  0011               	retfie		f
  9666  00230A                     __end_of_CCP4_CaptureISR:
  9667                           	callstack 0
  9668                           
  9669 ;; *************** function _CCP4_DefaultCallBack *****************
  9670 ;; Defined at:
  9671 ;;		line 64 in file "mcc_generated_files/ccp4.c"
  9672 ;; Parameters:    Size  Location     Type
  9673 ;;  capturedValu    2    4[COMRAM] unsigned short 
  9674 ;; Auto vars:     Size  Location     Type
  9675 ;;		None
  9676 ;; Return value:  Size  Location     Type
  9677 ;;                  1    wreg      void 
  9678 ;; Registers used:
  9679 ;;		wreg, status,2, status,0
  9680 ;; Tracked objects:
  9681 ;;		On entry : 0/0
  9682 ;;		On exit  : 0/0
  9683 ;;		Unchanged: 0/0
  9684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9685 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9688 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9689 ;;Total ram usage:        2 bytes
  9690 ;; Hardware stack levels used: 1
  9691 ;; This function calls:
  9692 ;;		Nothing
  9693 ;; This function is called by:
  9694 ;;		_CCP4_Initialize
  9695 ;;		_CCP4_CaptureISR
  9696 ;; This function uses a non-reentrant model
  9697 ;;
  9698                           
  9699                           	psect	text68
  9700  0024D2                     __ptext68:
  9701                           	callstack 0
  9702  0024D2                     _CCP4_DefaultCallBack:
  9703                           	callstack 20
  9704  0024D2                     
  9705                           ;mcc_generated_files/ccp4.c: 64: static void CCP4_DefaultCallBack(uint16_t capturedValue
      +                          );mcc_generated_files/ccp4.c: 65: {;mcc_generated_files/ccp4.c: 67:     if(PORTDbits.RD6
      +                          ) {
  9706  0024D2  ACCD               	btfss	205,6,c	;volatile
  9707  0024D4  EF6E  F012         	goto	i2u358_41
  9708  0024D8  EF70  F012         	goto	i2u358_40
  9709  0024DC                     i2u358_41:
  9710  0024DC  EF76  F012         	goto	i2l4959
  9711  0024E0                     i2u358_40:
  9712  0024E0                     
  9713                           ;mcc_generated_files/ccp4.c: 68:         distRightM = capturedValue;
  9714  0024E0  C005  F094         	movff	CCP4_DefaultCallBack@capturedValue,_distRightM
  9715  0024E4  C006  F095         	movff	CCP4_DefaultCallBack@capturedValue+1,_distRightM+1
  9716                           
  9717                           ;mcc_generated_files/ccp4.c: 70:     } else {
  9718  0024E8  EF80  F012         	goto	i2l476
  9719  0024EC                     i2l4959:
  9720                           
  9721                           ;mcc_generated_files/ccp4.c: 71:         distRight = capturedValue - distRightM;
  9722  0024EC  0100               	movlb	0	; () banked
  9723  0024EE  5194               	movf	_distRightM& (0+255),w,b
  9724  0024F0  5C05               	subwf	CCP4_DefaultCallBack@capturedValue^0,w,c
  9725  0024F2  6F96               	movwf	_distRight& (0+255),b	;volatile
  9726  0024F4  5195               	movf	(_distRightM+1)& (0+255),w,b
  9727  0024F6  5806               	subwfb	(CCP4_DefaultCallBack@capturedValue+1)^0,w,c
  9728  0024F8  6F97               	movwf	(_distRight+1)& (0+255),b	;volatile
  9729  0024FA                     
  9730                           ; BSR set to: 0
  9731                           ;mcc_generated_files/ccp4.c: 72:         distRight >>= 1;
  9732  0024FA  90D8               	bcf	status,0,c
  9733  0024FC  3397               	rrcf	(_distRight+1)& (0+255),f,b	;volatile
  9734  0024FE  3396               	rrcf	_distRight& (0+255),f,b	;volatile
  9735  002500                     i2l476:
  9736  002500  0012               	return		;funcret
  9737  002502                     __end_of_CCP4_DefaultCallBack:
  9738                           	callstack 0
  9739                           
  9740 ;; *************** function _TMR5_GATE_ISR *****************
  9741 ;; Defined at:
  9742 ;;		line 175 in file "mcc_generated_files/tmr5.c"
  9743 ;; Parameters:    Size  Location     Type
  9744 ;;		None
  9745 ;; Auto vars:     Size  Location     Type
  9746 ;;		None
  9747 ;; Return value:  Size  Location     Type
  9748 ;;                  1    wreg      void 
  9749 ;; Registers used:
  9750 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  9751 ;; Tracked objects:
  9752 ;;		On entry : 0/0
  9753 ;;		On exit  : 0/0
  9754 ;;		Unchanged: 0/0
  9755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9759 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9760 ;;Total ram usage:        0 bytes
  9761 ;; Hardware stack levels used: 1
  9762 ;; Hardware stack levels required when called: 3
  9763 ;; This function calls:
  9764 ;;		Absolute function
  9765 ;;		_TMR5_DefaultGateInterruptHandler
  9766 ;; This function is called by:
  9767 ;;		Interrupt level 2
  9768 ;; This function uses a non-reentrant model
  9769 ;;
  9770                           
  9771                           	psect	text69
  9772  0023DC                     __ptext69:
  9773                           	callstack 0
  9774  0023DC                     _TMR5_GATE_ISR:
  9775                           	callstack 18
  9776  0023DC                     
  9777                           ;mcc_generated_files/tmr5.c: 178:     PIR8bits.TMR5GIF = 0;
  9778  0023DC  0139               	movlb	57	; () banked
  9779  0023DE  9FA8               	bcf	168,7,b	;volatile
  9780  0023E0                     
  9781                           ; BSR set to: 57
  9782                           ;mcc_generated_files/tmr5.c: 180:     if(TMR5_GateInterruptHandler)
  9783  0023E0  0100               	movlb	0	; () banked
  9784  0023E2  51CB               	movf	_TMR5_GateInterruptHandler& (0+255),w,b
  9785  0023E4  11CC               	iorwf	(_TMR5_GateInterruptHandler+1)& (0+255),w,b
  9786  0023E6  B4D8               	btfsc	status,2,c
  9787  0023E8  EFF8  F011         	goto	i2u373_41
  9788  0023EC  EFFA  F011         	goto	i2u373_40
  9789  0023F0                     i2u373_41:
  9790  0023F0  EF07  F012         	goto	i2l552
  9791  0023F4                     i2u373_40:
  9792  0023F4                     
  9793                           ; BSR set to: 0
  9794                           ;mcc_generated_files/tmr5.c: 181:     {;mcc_generated_files/tmr5.c: 182:         TMR5_Ga
      +                          teInterruptHandler();
  9795  0023F4  D802               	call	i2u374_48
  9796  0023F6  EF07  F012         	goto	i2u374_49
  9797  0023FA                     i2u374_48:
  9798  0023FA  0005               	push	
  9799  0023FC  6EFA               	movwf	pclath,c
  9800  0023FE  51CB               	movf	_TMR5_GateInterruptHandler& (0+255),w,b
  9801  002400  6EFD               	movwf	tosl,c
  9802  002402  51CC               	movf	(_TMR5_GateInterruptHandler+1)& (0+255),w,b
  9803  002404  6EFE               	movwf	tosh,c
  9804  002406  50F8               	movf	tblptru,w,c
  9805  002408  6EFF               	movwf	tosu,c
  9806  00240A  50FA               	movf	pclath,w,c
  9807  00240C  0012               	return		;indir
  9808  00240E                     i2u374_49:
  9809  00240E                     i2l552:
  9810  00240E  0011               	retfie		f
  9811  002410                     __end_of_TMR5_GATE_ISR:
  9812                           	callstack 0
  9813                           
  9814 ;; *************** function _TMR5_DefaultGateInterruptHandler *****************
  9815 ;; Defined at:
  9816 ;;		line 190 in file "mcc_generated_files/tmr5.c"
  9817 ;; Parameters:    Size  Location     Type
  9818 ;;		None
  9819 ;; Auto vars:     Size  Location     Type
  9820 ;;		None
  9821 ;; Return value:  Size  Location     Type
  9822 ;;                  1    wreg      void 
  9823 ;; Registers used:
  9824 ;;		wreg, status,2, status,0, cstack
  9825 ;; Tracked objects:
  9826 ;;		On entry : 0/0
  9827 ;;		On exit  : 0/0
  9828 ;;		Unchanged: 0/0
  9829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9833 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9834 ;;Total ram usage:        0 bytes
  9835 ;; Hardware stack levels used: 1
  9836 ;; Hardware stack levels required when called: 2
  9837 ;; This function calls:
  9838 ;;		_TMR5_ReadTimer
  9839 ;;		_TMR5_Reload
  9840 ;; This function is called by:
  9841 ;;		_TMR5_Initialize
  9842 ;;		_TMR5_GATE_ISR
  9843 ;; This function uses a non-reentrant model
  9844 ;;
  9845                           
  9846                           	psect	text70
  9847  0026BC                     __ptext70:
  9848                           	callstack 0
  9849  0026BC                     _TMR5_DefaultGateInterruptHandler:
  9850                           	callstack 18
  9851  0026BC                     
  9852                           ;mcc_generated_files/tmr5.c: 194:     distFront = TMR5_ReadTimer();
  9853  0026BC  EC2E  F013         	call	_TMR5_ReadTimer	;wreg free
  9854  0026C0  C009  F04A         	movff	?_TMR5_ReadTimer,_distFront	;volatile
  9855  0026C4  C00A  F04B         	movff	?_TMR5_ReadTimer+1,_distFront+1	;volatile
  9856  0026C8                     
  9857                           ;mcc_generated_files/tmr5.c: 195:     distFront >>= 1;
  9858  0026C8  90D8               	bcf	status,0,c
  9859  0026CA  324B               	rrcf	(_distFront+1)^0,f,c	;volatile
  9860  0026CC  324A               	rrcf	_distFront^0,f,c	;volatile
  9861  0026CE                     
  9862                           ;mcc_generated_files/tmr5.c: 196:     TMR5_Reload();
  9863  0026CE  ECB0  F013         	call	_TMR5_Reload	;wreg free
  9864  0026D2                     
  9865                           ;mcc_generated_files/tmr5.c: 197:     PIR8bits.TMR5GIF = 0;
  9866  0026D2  0139               	movlb	57	; () banked
  9867  0026D4  9FA8               	bcf	168,7,b	;volatile
  9868  0026D6                     
  9869                           ; BSR set to: 57
  9870  0026D6  0012               	return		;funcret
  9871  0026D8                     __end_of_TMR5_DefaultGateInterruptHandler:
  9872                           	callstack 0
  9873                           
  9874 ;; *************** function _TMR5_Reload *****************
  9875 ;; Defined at:
  9876 ;;		line 155 in file "mcc_generated_files/tmr5.c"
  9877 ;; Parameters:    Size  Location     Type
  9878 ;;		None
  9879 ;; Auto vars:     Size  Location     Type
  9880 ;;		None
  9881 ;; Return value:  Size  Location     Type
  9882 ;;                  1    wreg      void 
  9883 ;; Registers used:
  9884 ;;		wreg, status,2, cstack
  9885 ;; Tracked objects:
  9886 ;;		On entry : 0/0
  9887 ;;		On exit  : 0/0
  9888 ;;		Unchanged: 0/0
  9889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9893 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9894 ;;Total ram usage:        0 bytes
  9895 ;; Hardware stack levels used: 1
  9896 ;; Hardware stack levels required when called: 1
  9897 ;; This function calls:
  9898 ;;		_TMR5_WriteTimer
  9899 ;; This function is called by:
  9900 ;;		_TMR5_DefaultGateInterruptHandler
  9901 ;; This function uses a non-reentrant model
  9902 ;;
  9903                           
  9904                           	psect	text71
  9905  002760                     __ptext71:
  9906                           	callstack 0
  9907  002760                     _TMR5_Reload:
  9908                           	callstack 18
  9909  002760                     
  9910                           ;mcc_generated_files/tmr5.c: 157:     TMR5_WriteTimer(timer5ReloadVal);
  9911  002760  C0CD  F009         	movff	_timer5ReloadVal,TMR5_WriteTimer@timerVal	;volatile
  9912  002764  C0CE  F00A         	movff	_timer5ReloadVal+1,TMR5_WriteTimer@timerVal+1	;volatile
  9913  002768  ECF1  F012         	call	_TMR5_WriteTimer	;wreg free
  9914  00276C  0012               	return		;funcret
  9915  00276E                     __end_of_TMR5_Reload:
  9916                           	callstack 0
  9917                           
  9918 ;; *************** function _TMR5_WriteTimer *****************
  9919 ;; Defined at:
  9920 ;;		line 133 in file "mcc_generated_files/tmr5.c"
  9921 ;; Parameters:    Size  Location     Type
  9922 ;;  timerVal        2    8[COMRAM] unsigned short 
  9923 ;; Auto vars:     Size  Location     Type
  9924 ;;		None
  9925 ;; Return value:  Size  Location     Type
  9926 ;;                  1    wreg      void 
  9927 ;; Registers used:
  9928 ;;		wreg, status,2
  9929 ;; Tracked objects:
  9930 ;;		On entry : 0/0
  9931 ;;		On exit  : 0/0
  9932 ;;		Unchanged: 0/0
  9933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9934 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9937 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9938 ;;Total ram usage:        2 bytes
  9939 ;; Hardware stack levels used: 1
  9940 ;; This function calls:
  9941 ;;		Nothing
  9942 ;; This function is called by:
  9943 ;;		_TMR5_Reload
  9944 ;; This function uses a non-reentrant model
  9945 ;;
  9946                           
  9947                           	psect	text72
  9948  0025E2                     __ptext72:
  9949                           	callstack 0
  9950  0025E2                     _TMR5_WriteTimer:
  9951                           	callstack 18
  9952  0025E2                     
  9953                           ;mcc_generated_files/tmr5.c: 133: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 134: {;mcc_generated_files/tmr5.c: 135:     if (T5CONbits.NOT_SYNC == 1)
  9954  0025E2  A49A               	btfss	154,2,c	;volatile
  9955  0025E4  EFF6  F012         	goto	i2u213_41
  9956  0025E8  EFF8  F012         	goto	i2u213_40
  9957  0025EC                     i2u213_41:
  9958  0025EC  EF01  F013         	goto	i2l3967
  9959  0025F0                     i2u213_40:
  9960  0025F0                     
  9961                           ;mcc_generated_files/tmr5.c: 136:     {;mcc_generated_files/tmr5.c: 138:         T5CONbi
      +                          ts.TMR5ON = 0;
  9962  0025F0  909A               	bcf	154,0,c	;volatile
  9963  0025F2                     
  9964                           ;mcc_generated_files/tmr5.c: 141:         TMR5H = (uint8_t)(timerVal >> 8);
  9965  0025F2  500A               	movf	(TMR5_WriteTimer@timerVal+1)^0,w,c
  9966  0025F4  6E99               	movwf	153,c	;volatile
  9967  0025F6                     
  9968                           ;mcc_generated_files/tmr5.c: 142:         TMR5L = (uint8_t)timerVal;
  9969  0025F6  0060  F027  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
  9970  0025FC                     
  9971                           ;mcc_generated_files/tmr5.c: 145:         T5CONbits.TMR5ON =1;
  9972  0025FC  809A               	bsf	154,0,c	;volatile
  9973                           
  9974                           ;mcc_generated_files/tmr5.c: 146:     }
  9975  0025FE  EF06  F013         	goto	i2l534
  9976  002602                     i2l3967:
  9977                           
  9978                           ;mcc_generated_files/tmr5.c: 148:     {;mcc_generated_files/tmr5.c: 150:         TMR5H =
      +                           (uint8_t)(timerVal >> 8);
  9979  002602  500A               	movf	(TMR5_WriteTimer@timerVal+1)^0,w,c
  9980  002604  6E99               	movwf	153,c	;volatile
  9981  002606                     
  9982                           ;mcc_generated_files/tmr5.c: 151:         TMR5L = (uint8_t)timerVal;
  9983  002606  0060  F027  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
  9984  00260C                     i2l534:
  9985  00260C  0012               	return		;funcret
  9986  00260E                     __end_of_TMR5_WriteTimer:
  9987                           	callstack 0
  9988                           
  9989 ;; *************** function _TMR5_ReadTimer *****************
  9990 ;; Defined at:
  9991 ;;		line 117 in file "mcc_generated_files/tmr5.c"
  9992 ;; Parameters:    Size  Location     Type
  9993 ;;		None
  9994 ;; Auto vars:     Size  Location     Type
  9995 ;;  readVal         2   12[COMRAM] unsigned short 
  9996 ;;  readValLow      1   15[COMRAM] unsigned char 
  9997 ;;  readValHigh     1   14[COMRAM] unsigned char 
  9998 ;; Return value:  Size  Location     Type
  9999 ;;                  2    8[COMRAM] unsigned short 
 10000 ;; Registers used:
 10001 ;;		wreg, status,2
 10002 ;; Tracked objects:
 10003 ;;		On entry : 0/0
 10004 ;;		On exit  : 0/0
 10005 ;;		Unchanged: 0/0
 10006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10007 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10008 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10009 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10010 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10011 ;;Total ram usage:        8 bytes
 10012 ;; Hardware stack levels used: 1
 10013 ;; This function calls:
 10014 ;;		Nothing
 10015 ;; This function is called by:
 10016 ;;		_TMR5_DefaultGateInterruptHandler
 10017 ;; This function uses a non-reentrant model
 10018 ;;
 10019                           
 10020                           	psect	text73
 10021  00265C                     __ptext73:
 10022                           	callstack 0
 10023  00265C                     _TMR5_ReadTimer:
 10024                           	callstack 19
 10025  00265C                     
 10026                           ;mcc_generated_files/tmr5.c: 119:     uint16_t readVal;;mcc_generated_files/tmr5.c: 120:
      +                               uint8_t readValHigh;;mcc_generated_files/tmr5.c: 121:     uint8_t readValLow;;mcc_g
      +                          enerated_files/tmr5.c: 123:     T5CONbits.T5RD16 = 1;
 10027  00265C  829A               	bsf	154,1,c	;volatile
 10028                           
 10029                           ;mcc_generated_files/tmr5.c: 125:     readValLow = TMR5L;
 10030  00265E  006F FE60  F010    	movff	16280,TMR5_ReadTimer@readValLow	;volatile
 10031                           
 10032                           ;mcc_generated_files/tmr5.c: 126:     readValHigh = TMR5H;
 10033  002664  006F FE64  F00F    	movff	16281,TMR5_ReadTimer@readValHigh	;volatile
 10034  00266A                     
 10035                           ;mcc_generated_files/tmr5.c: 128:     readVal = ((uint16_t)readValHigh << 8) | readValLo
      +                          w;
 10036  00266A  500F               	movf	TMR5_ReadTimer@readValHigh^0,w,c
 10037  00266C  6E0B               	movwf	??_TMR5_ReadTimer^0,c
 10038  00266E  5010               	movf	TMR5_ReadTimer@readValLow^0,w,c
 10039  002670  6E0D               	movwf	TMR5_ReadTimer@readVal^0,c
 10040  002672  C00B  F00E         	movff	??_TMR5_ReadTimer,TMR5_ReadTimer@readVal+1
 10041  002676                     
 10042                           ;mcc_generated_files/tmr5.c: 130:     return readVal;
 10043  002676  C00D  F009         	movff	TMR5_ReadTimer@readVal,?_TMR5_ReadTimer
 10044  00267A  C00E  F00A         	movff	TMR5_ReadTimer@readVal+1,?_TMR5_ReadTimer+1
 10045  00267E  0012               	return		;funcret
 10046  002680                     __end_of_TMR5_ReadTimer:
 10047                           	callstack 0
 10048                           
 10049 ;; *************** function _SMT1_PR_ACQ_ISR *****************
 10050 ;; Defined at:
 10051 ;;		line 192 in file "mcc_generated_files/smt1.c"
 10052 ;; Parameters:    Size  Location     Type
 10053 ;;		None
 10054 ;; Auto vars:     Size  Location     Type
 10055 ;;		None
 10056 ;; Return value:  Size  Location     Type
 10057 ;;                  1    wreg      void 
 10058 ;; Registers used:
 10059 ;;		wreg, status,2, status,0
 10060 ;; Tracked objects:
 10061 ;;		On entry : 0/0
 10062 ;;		On exit  : 0/0
 10063 ;;		Unchanged: 0/0
 10064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10068 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10069 ;;Total ram usage:        0 bytes
 10070 ;; Hardware stack levels used: 1
 10071 ;; This function calls:
 10072 ;;		Nothing
 10073 ;; This function is called by:
 10074 ;;		Interrupt level 2
 10075 ;; This function uses a non-reentrant model
 10076 ;;
 10077                           
 10078                           	psect	text74
 10079  002120                     __ptext74:
 10080                           	callstack 0
 10081  002120                     _SMT1_PR_ACQ_ISR:
 10082                           	callstack 21
 10083  002120                     
 10084                           ;mcc_generated_files/smt1.c: 196:     PIR1bits.SMT1PRAIF = 0;
 10085  002120  0139               	movlb	57	; () banked
 10086  002122  9DA1               	bcf	161,6,b	;volatile
 10087  002124                     
 10088                           ; BSR set to: 57
 10089                           ;mcc_generated_files/smt1.c: 197:     smtPeriod = SMT1CPR;
 10090  002124  013F               	movlb	63	; () banked
 10091  002126  5115               	movf	21,w,b	;volatile
 10092  002128  6E46               	movwf	_smtPeriod^0,c	;volatile
 10093  00212A  5116               	movf	22,w,b	;volatile
 10094  00212C  6E47               	movwf	(_smtPeriod+1)^0,c	;volatile
 10095  00212E  5117               	movf	23,w,b	;volatile
 10096  002130  6E48               	movwf	(_smtPeriod+2)^0,c	;volatile
 10097  002132  6A49               	clrf	(_smtPeriod+3)^0,c	;volatile
 10098  002134                     
 10099                           ; BSR set to: 63
 10100                           ;mcc_generated_files/smt1.c: 198:     if(CLC3CONbits.LC3OUT) smtWay++;
 10101  002134  013C               	movlb	60	; () banked
 10102  002136  AB60               	btfss	96,5,b	;volatile
 10103  002138  EFA0  F010         	goto	i2u376_41
 10104  00213C  EFA2  F010         	goto	i2u376_40
 10105  002140                     i2u376_41:
 10106  002140  EFAB  F010         	goto	i2l5073
 10107  002144                     i2u376_40:
 10108  002144                     
 10109                           ; BSR set to: 60
 10110  002144  0E01               	movlw	1
 10111  002146  0100               	movlb	0	; () banked
 10112  002148  2778               	addwf	_smtWay& (0+255),f,b	;volatile
 10113  00214A  0E00               	movlw	0
 10114  00214C  2379               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 10115  00214E  237A               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 10116  002150  237B               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 10117  002152  EFB4  F010         	goto	i2l856
 10118  002156                     i2l5073:
 10119                           
 10120                           ; BSR set to: 60
 10121  002156  0EFF               	movlw	255
 10122  002158  0100               	movlb	0	; () banked
 10123  00215A  2778               	addwf	_smtWay& (0+255),f,b	;volatile
 10124  00215C  0EFF               	movlw	255
 10125  00215E  2379               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 10126  002160  0EFF               	movlw	255
 10127  002162  237A               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 10128  002164  0EFF               	movlw	255
 10129  002166  237B               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 10130  002168                     i2l856:
 10131                           
 10132                           ; BSR set to: 0
 10133  002168  0011               	retfie		f
 10134  00216A                     __end_of_SMT1_PR_ACQ_ISR:
 10135                           	callstack 0
 10136                           
 10137 ;; *************** function _SMT1_PW_ACQ_ISR *****************
 10138 ;; Defined at:
 10139 ;;		line 203 in file "mcc_generated_files/smt1.c"
 10140 ;; Parameters:    Size  Location     Type
 10141 ;;		None
 10142 ;; Auto vars:     Size  Location     Type
 10143 ;;		None
 10144 ;; Return value:  Size  Location     Type
 10145 ;;                  1    wreg      void 
 10146 ;; Registers used:
 10147 ;;		wreg, status,2, status,0
 10148 ;; Tracked objects:
 10149 ;;		On entry : 0/0
 10150 ;;		On exit  : 0/0
 10151 ;;		Unchanged: 0/0
 10152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10156 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10157 ;;Total ram usage:        0 bytes
 10158 ;; Hardware stack levels used: 1
 10159 ;; This function calls:
 10160 ;;		Nothing
 10161 ;; This function is called by:
 10162 ;;		Interrupt level 2
 10163 ;; This function uses a non-reentrant model
 10164 ;;
 10165                           
 10166                           	psect	text75
 10167  001FEC                     __ptext75:
 10168                           	callstack 0
 10169  001FEC                     _SMT1_PW_ACQ_ISR:
 10170                           	callstack 21
 10171  001FEC                     
 10172                           ;mcc_generated_files/smt1.c: 207:     PIR1bits.SMT1PWAIF = 0;
 10173  001FEC  0139               	movlb	57	; () banked
 10174  001FEE  9FA1               	bcf	161,7,b	;volatile
 10175  001FF0                     
 10176                           ; BSR set to: 57
 10177                           ;mcc_generated_files/smt1.c: 208:     smtDuty = SMT1CPW;
 10178  001FF0  013F               	movlb	63	; () banked
 10179  001FF2  5118               	movf	24,w,b	;volatile
 10180  001FF4  0100               	movlb	0	; () banked
 10181  001FF6  6F7C               	movwf	_smtDuty& (0+255),b	;volatile
 10182  001FF8  013F               	movlb	63	; () banked
 10183  001FFA  5119               	movf	25,w,b	;volatile
 10184  001FFC  0100               	movlb	0	; () banked
 10185  001FFE  6F7D               	movwf	(_smtDuty+1)& (0+255),b	;volatile
 10186  002000  013F               	movlb	63	; () banked
 10187  002002  511A               	movf	26,w,b	;volatile
 10188  002004  0100               	movlb	0	; () banked
 10189  002006  6F7E               	movwf	(_smtDuty+2)& (0+255),b	;volatile
 10190  002008  6B7F               	clrf	(_smtDuty+3)& (0+255),b	;volatile
 10191  00200A                     
 10192                           ; BSR set to: 0
 10193                           ;mcc_generated_files/smt1.c: 209:     if(CLC3CONbits.LC3OUT) smtWay++;
 10194  00200A  013C               	movlb	60	; () banked
 10195  00200C  AB60               	btfss	96,5,b	;volatile
 10196  00200E  EF0B  F010         	goto	i2u377_41
 10197  002012  EF0D  F010         	goto	i2u377_40
 10198  002016                     i2u377_41:
 10199  002016  EF16  F010         	goto	i2l5083
 10200  00201A                     i2u377_40:
 10201  00201A                     
 10202                           ; BSR set to: 60
 10203  00201A  0E01               	movlw	1
 10204  00201C  0100               	movlb	0	; () banked
 10205  00201E  2778               	addwf	_smtWay& (0+255),f,b	;volatile
 10206  002020  0E00               	movlw	0
 10207  002022  2379               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 10208  002024  237A               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 10209  002026  237B               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 10210  002028  EF1F  F010         	goto	i2l863
 10211  00202C                     i2l5083:
 10212                           
 10213                           ; BSR set to: 60
 10214  00202C  0EFF               	movlw	255
 10215  00202E  0100               	movlb	0	; () banked
 10216  002030  2778               	addwf	_smtWay& (0+255),f,b	;volatile
 10217  002032  0EFF               	movlw	255
 10218  002034  2379               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 10219  002036  0EFF               	movlw	255
 10220  002038  237A               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 10221  00203A  0EFF               	movlw	255
 10222  00203C  237B               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 10223  00203E                     i2l863:
 10224                           
 10225                           ; BSR set to: 0
 10226  00203E  0011               	retfie		f
 10227  002040                     __end_of_SMT1_PW_ACQ_ISR:
 10228                           	callstack 0
 10229                           
 10230 ;; *************** function _SMT1_Overflow_ISR *****************
 10231 ;; Defined at:
 10232 ;;		line 213 in file "mcc_generated_files/smt1.c"
 10233 ;; Parameters:    Size  Location     Type
 10234 ;;		None
 10235 ;; Auto vars:     Size  Location     Type
 10236 ;;		None
 10237 ;; Return value:  Size  Location     Type
 10238 ;;                  1    wreg      void 
 10239 ;; Registers used:
 10240 ;;		wreg, status,2
 10241 ;; Tracked objects:
 10242 ;;		On entry : 0/0
 10243 ;;		On exit  : 0/0
 10244 ;;		Unchanged: 0/0
 10245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10249 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10250 ;;Total ram usage:        0 bytes
 10251 ;; Hardware stack levels used: 1
 10252 ;; This function calls:
 10253 ;;		Nothing
 10254 ;; This function is called by:
 10255 ;;		Interrupt level 2
 10256 ;; This function uses a non-reentrant model
 10257 ;;
 10258                           
 10259                           	psect	text76
 10260  002610                     __ptext76:
 10261                           	callstack 0
 10262  002610                     _SMT1_Overflow_ISR:
 10263                           	callstack 21
 10264  002610                     
 10265                           ;mcc_generated_files/smt1.c: 217:     PIR1bits.SMT1IF = 0;
 10266  002610  0139               	movlb	57	; () banked
 10267  002612  9BA1               	bcf	161,5,b	;volatile
 10268  002614                     
 10269                           ; BSR set to: 57
 10270                           ;mcc_generated_files/smt1.c: 218:     smtPeriod = 0;
 10271  002614  0E00               	movlw	0
 10272  002616  6E46               	movwf	_smtPeriod^0,c	;volatile
 10273  002618  0E00               	movlw	0
 10274  00261A  6E47               	movwf	(_smtPeriod+1)^0,c	;volatile
 10275  00261C  0E00               	movlw	0
 10276  00261E  6E48               	movwf	(_smtPeriod+2)^0,c	;volatile
 10277  002620  0E00               	movlw	0
 10278  002622  6E49               	movwf	(_smtPeriod+3)^0,c	;volatile
 10279                           
 10280                           ;mcc_generated_files/smt1.c: 219:     smtDuty = 0;
 10281  002624  0E00               	movlw	0
 10282  002626  0100               	movlb	0	; () banked
 10283  002628  6F7C               	movwf	_smtDuty& (0+255),b	;volatile
 10284  00262A  0E00               	movlw	0
 10285  00262C  6F7D               	movwf	(_smtDuty+1)& (0+255),b	;volatile
 10286  00262E  0E00               	movlw	0
 10287  002630  6F7E               	movwf	(_smtDuty+2)& (0+255),b	;volatile
 10288  002632  0E00               	movlw	0
 10289  002634  6F7F               	movwf	(_smtDuty+3)& (0+255),b	;volatile
 10290  002636                     
 10291                           ; BSR set to: 0
 10292  002636  0011               	retfie		f
 10293  002638                     __end_of_SMT1_Overflow_ISR:
 10294                           	callstack 0
 10295                           
 10296                           ;
 10297                           ; Interrupt Vector Table @ 0x8
 10298                           ;
 10299                           
 10300                           	psect	ivt0x8
 10301  000008                     __pivt0x8:
 10302                           	callstack 0
 10303  000008                     ivt0x8_base:
 10304                           	callstack 0
 10305                           
 10306                           ; Vector 0 : SWINT
 10307  000008  09F7               	dw	_Default_ISR shr (0+2)
 10308                           
 10309                           ; Vector 1 : HLVD
 10310  00000A  09F7               	dw	_Default_ISR shr (0+2)
 10311                           
 10312                           ; Vector 2 : OSF
 10313  00000C  09F7               	dw	_Default_ISR shr (0+2)
 10314                           
 10315                           ; Vector 3 : CSW
 10316  00000E  09F7               	dw	_Default_ISR shr (0+2)
 10317                           
 10318                           ; Vector 4 : NVM
 10319  000010  09F7               	dw	_Default_ISR shr (0+2)
 10320                           
 10321                           ; Vector 5 : SCAN
 10322  000012  09F7               	dw	_Default_ISR shr (0+2)
 10323                           
 10324                           ; Vector 6 : CRC
 10325  000014  09F7               	dw	_Default_ISR shr (0+2)
 10326                           
 10327                           ; Vector 7 : IOC
 10328  000016  09F7               	dw	_Default_ISR shr (0+2)
 10329                           
 10330                           ; Vector 8 : INT0
 10331  000018  09F7               	dw	_Default_ISR shr (0+2)
 10332                           
 10333                           ; Vector 9 : ZCD
 10334  00001A  09F7               	dw	_Default_ISR shr (0+2)
 10335                           
 10336                           ; Vector 10 : AD
 10337  00001C  09F7               	dw	_Default_ISR shr (0+2)
 10338                           
 10339                           ; Vector 11 : ADT
 10340  00001E  09F7               	dw	_Default_ISR shr (0+2)
 10341                           
 10342                           ; Vector 12 : CMP1
 10343  000020  09F7               	dw	_Default_ISR shr (0+2)
 10344                           
 10345                           ; Vector 13 : SMT1
 10346  000022  0984               	dw	_SMT1_Overflow_ISR shr (0+2)
 10347                           
 10348                           ; Vector 14 : SMT1PRA
 10349  000024  0848               	dw	_SMT1_PR_ACQ_ISR shr (0+2)
 10350                           
 10351                           ; Vector 15 : SMT1PRW
 10352  000026  07FB               	dw	_SMT1_PW_ACQ_ISR shr (0+2)
 10353                           
 10354                           ; Vector 16 : DMA1SCNT
 10355  000028  09F7               	dw	_Default_ISR shr (0+2)
 10356                           
 10357                           ; Vector 17 : DMA1DCNT
 10358  00002A  09F7               	dw	_Default_ISR shr (0+2)
 10359                           
 10360                           ; Vector 18 : DMA1OR
 10361  00002C  09F7               	dw	_Default_ISR shr (0+2)
 10362                           
 10363                           ; Vector 19 : DMA1A
 10364  00002E  09F7               	dw	_Default_ISR shr (0+2)
 10365                           
 10366                           ; Vector 20 : SPI1RX
 10367  000030  09F7               	dw	_Default_ISR shr (0+2)
 10368                           
 10369                           ; Vector 21 : SPI1TX
 10370  000032  09F7               	dw	_Default_ISR shr (0+2)
 10371                           
 10372                           ; Vector 22 : SPI1
 10373  000034  09F7               	dw	_Default_ISR shr (0+2)
 10374                           
 10375                           ; Vector 23 : I2C1RX
 10376  000036  09F7               	dw	_Default_ISR shr (0+2)
 10377                           
 10378                           ; Vector 24 : I2C1TX
 10379  000038  09F7               	dw	_Default_ISR shr (0+2)
 10380                           
 10381                           ; Vector 25 : I2C1
 10382  00003A  09F7               	dw	_Default_ISR shr (0+2)
 10383                           
 10384                           ; Vector 26 : I2C1E
 10385  00003C  09F7               	dw	_Default_ISR shr (0+2)
 10386                           
 10387                           ; Vector 27 : U1RX
 10388  00003E  087C               	dw	_UART1_rx_vect_isr shr (0+2)
 10389                           
 10390                           ; Vector 28 : U1TX
 10391  000040  086D               	dw	_UART1_tx_vect_isr shr (0+2)
 10392                           
 10393                           ; Vector 29 : U1E
 10394  000042  09F7               	dw	_Default_ISR shr (0+2)
 10395                           
 10396                           ; Vector 30 : U1
 10397  000044  09F7               	dw	_Default_ISR shr (0+2)
 10398                           
 10399                           ; Vector 31 : TMR0
 10400  000046  09F7               	dw	_Default_ISR shr (0+2)
 10401                           
 10402                           ; Vector 32 : TMR1
 10403  000048  09F7               	dw	_Default_ISR shr (0+2)
 10404                           
 10405                           ; Vector 33 : TMR1G
 10406  00004A  09F7               	dw	_Default_ISR shr (0+2)
 10407                           
 10408                           ; Vector 34 : TMR2
 10409  00004C  09F7               	dw	_Default_ISR shr (0+2)
 10410                           
 10411                           ; Vector 35 : CCP1
 10412  00004E  09F7               	dw	_Default_ISR shr (0+2)
 10413                           
 10414                           ; Vector 36 : Undefined
 10415  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 10416                           
 10417                           ; Vector 37 : NCO1
 10418  000052  09F7               	dw	_Default_ISR shr (0+2)
 10419                           
 10420                           ; Vector 38 : CWG1
 10421  000054  09F7               	dw	_Default_ISR shr (0+2)
 10422                           
 10423                           ; Vector 39 : CLC1
 10424  000056  09F7               	dw	_Default_ISR shr (0+2)
 10425                           
 10426                           ; Vector 40 : INT1
 10427  000058  09F7               	dw	_Default_ISR shr (0+2)
 10428                           
 10429                           ; Vector 41 : CMP2
 10430  00005A  09F7               	dw	_Default_ISR shr (0+2)
 10431                           
 10432                           ; Vector 42 : DMA2SCNT
 10433  00005C  09F7               	dw	_Default_ISR shr (0+2)
 10434                           
 10435                           ; Vector 43 : DMA2DCNT
 10436  00005E  09F7               	dw	_Default_ISR shr (0+2)
 10437                           
 10438                           ; Vector 44 : DMA2OR
 10439  000060  09F7               	dw	_Default_ISR shr (0+2)
 10440                           
 10441                           ; Vector 45 : DMA2A
 10442  000062  09F7               	dw	_Default_ISR shr (0+2)
 10443                           
 10444                           ; Vector 46 : I2C2RX
 10445  000064  09F7               	dw	_Default_ISR shr (0+2)
 10446                           
 10447                           ; Vector 47 : I2C2TX
 10448  000066  09F7               	dw	_Default_ISR shr (0+2)
 10449                           
 10450                           ; Vector 48 : I2C2
 10451  000068  09F7               	dw	_Default_ISR shr (0+2)
 10452                           
 10453                           ; Vector 49 : I2C2E
 10454  00006A  09F7               	dw	_Default_ISR shr (0+2)
 10455                           
 10456                           ; Vector 50 : U2RX
 10457  00006C  09F7               	dw	_Default_ISR shr (0+2)
 10458                           
 10459                           ; Vector 51 : U2TX
 10460  00006E  09F7               	dw	_Default_ISR shr (0+2)
 10461                           
 10462                           ; Vector 52 : U2E
 10463  000070  09F7               	dw	_Default_ISR shr (0+2)
 10464                           
 10465                           ; Vector 53 : U2
 10466  000072  09F7               	dw	_Default_ISR shr (0+2)
 10467                           
 10468                           ; Vector 54 : TMR3
 10469  000074  09F7               	dw	_Default_ISR shr (0+2)
 10470                           
 10471                           ; Vector 55 : TMR3G
 10472  000076  09F7               	dw	_Default_ISR shr (0+2)
 10473                           
 10474                           ; Vector 56 : TMR4
 10475  000078  0899               	dw	_TMR4_ISR shr (0+2)
 10476                           
 10477                           ; Vector 57 : CCP2
 10478  00007A  09F7               	dw	_Default_ISR shr (0+2)
 10479                           
 10480                           ; Vector 58 : Undefined
 10481  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 10482                           
 10483                           ; Vector 59 : CWG2
 10484  00007E  09F7               	dw	_Default_ISR shr (0+2)
 10485                           
 10486                           ; Vector 60 : CLC2
 10487  000080  09F7               	dw	_Default_ISR shr (0+2)
 10488                           
 10489                           ; Vector 61 : INT2
 10490  000082  09F7               	dw	_Default_ISR shr (0+2)
 10491                           
 10492                           ; Vector 62 : Undefined
 10493  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 10494                           
 10495                           ; Vector 63 : Undefined
 10496  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 10497                           
 10498                           ; Vector 64 : Undefined
 10499  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 10500                           
 10501                           ; Vector 65 : Undefined
 10502  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 10503                           
 10504                           ; Vector 66 : Undefined
 10505  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 10506                           
 10507                           ; Vector 67 : Undefined
 10508  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 10509                           
 10510                           ; Vector 68 : Undefined
 10511  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 10512                           
 10513                           ; Vector 69 : Undefined
 10514  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 10515                           
 10516                           ; Vector 70 : TMR5
 10517  000094  09F7               	dw	_Default_ISR shr (0+2)
 10518                           
 10519                           ; Vector 71 : TMR5G
 10520  000096  08F7               	dw	_TMR5_GATE_ISR shr (0+2)
 10521                           
 10522                           ; Vector 72 : TMR6
 10523  000098  09F7               	dw	_Default_ISR shr (0+2)
 10524                           
 10525                           ; Vector 73 : CCP3
 10526  00009A  08A7               	dw	_CCP3_CaptureISR shr (0+2)
 10527                           
 10528                           ; Vector 74 : CWG3
 10529  00009C  09F7               	dw	_Default_ISR shr (0+2)
 10530                           
 10531                           ; Vector 75 : CLC3
 10532  00009E  09F7               	dw	_Default_ISR shr (0+2)
 10533                           
 10534                           ; Vector 76 : Undefined
 10535  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 10536                           
 10537                           ; Vector 77 : Undefined
 10538  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 10539                           
 10540                           ; Vector 78 : Undefined
 10541  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 10542                           
 10543                           ; Vector 79 : Undefined
 10544  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 10545                           
 10546                           ; Vector 80 : CCP4
 10547  0000A8  08B5               	dw	_CCP4_CaptureISR shr (0+2)
 10548                           
 10549                           ; Vector 81 : CLC4
 10550  0000AA  09F7               	dw	_Default_ISR shr (0+2)
 10551  0000AC                     ivt0x8_undefint:
 10552                           	callstack 0
 10553  0000AC  00FF               	reset	
 10554  0000                     
 10555                           	psect	text77
 10556  000000                     __ptext77:
 10557                           	callstack 0
 10558  000000                     
 10559                           	psect	rparam
 10560  0000                     
 10561                           	psect	idloc
 10562                           
 10563                           ;Config register IDLOC0 @ 0x200000
 10564                           ;	unspecified, using default values
 10565  200000                     	org	2097152
 10566  200000  0FFF               	dw	4095
 10567                           
 10568                           ;Config register IDLOC1 @ 0x200002
 10569                           ;	unspecified, using default values
 10570  200002                     	org	2097154
 10571  200002  0FFF               	dw	4095
 10572                           
 10573                           ;Config register IDLOC2 @ 0x200004
 10574                           ;	unspecified, using default values
 10575  200004                     	org	2097156
 10576  200004  0FFF               	dw	4095
 10577                           
 10578                           ;Config register IDLOC3 @ 0x200006
 10579                           ;	unspecified, using default values
 10580  200006                     	org	2097158
 10581  200006  0FFF               	dw	4095
 10582                           
 10583                           ;Config register IDLOC4 @ 0x200008
 10584                           ;	unspecified, using default values
 10585  200008                     	org	2097160
 10586  200008  0FFF               	dw	4095
 10587                           
 10588                           ;Config register IDLOC5 @ 0x20000A
 10589                           ;	unspecified, using default values
 10590  20000A                     	org	2097162
 10591  20000A  0FFF               	dw	4095
 10592                           
 10593                           ;Config register IDLOC6 @ 0x20000C
 10594                           ;	unspecified, using default values
 10595  20000C                     	org	2097164
 10596  20000C  0FFF               	dw	4095
 10597                           
 10598                           ;Config register IDLOC7 @ 0x20000E
 10599                           ;	unspecified, using default values
 10600  20000E                     	org	2097166
 10601  20000E  0FFF               	dw	4095
 10602                           
 10603                           	psect	config
 10604                           
 10605                           ;Config register CONFIG1L @ 0x300000
 10606                           ;	External Oscillator Selection
 10607                           ;	FEXTOSC = OFF, Oscillator not enabled
 10608                           ;	Reset Oscillator Selection
 10609                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
 10610  300000                     	org	3145728
 10611  300000  8C                 	db	140
 10612                           
 10613                           ;Config register CONFIG1H @ 0x300001
 10614                           ;	Clock out Enable bit
 10615                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 10616                           ;	PRLOCKED One-Way Set Enable bit
 10617                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
 10618                           ;	Clock Switch Enable bit
 10619                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 10620                           ;	Fail-Safe Clock Monitor Enable bit
 10621                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 10622  300001                     	org	3145729
 10623  300001  FF                 	db	255
 10624                           
 10625                           ;Config register CONFIG2L @ 0x300002
 10626                           ;	MCLR Enable bit
 10627                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 10628                           ;	Power-up timer selection bits
 10629                           ;	PWRTS = PWRT_OFF, PWRT is disabled
 10630                           ;	Multi-vector enable bit
 10631                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
 10632                           ;	IVTLOCK bit One-way set enable bit
 10633                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
 10634                           ;	Low Power BOR Enable bit
 10635                           ;	LPBOREN = OFF, ULPBOR disabled
 10636                           ;	Brown-out Reset Enable bits
 10637                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 10638  300002                     	org	3145730
 10639  300002  FF                 	db	255
 10640                           
 10641                           ;Config register CONFIG2H @ 0x300003
 10642                           ;	Brown-out Reset Voltage Selection bits
 10643                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
 10644                           ;	ZCD Disable bit
 10645                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 10646                           ;	PPSLOCK bit One-Way Set Enable bit
 10647                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
 10648                           ;	Stack Full/Underflow Reset Enable bit
 10649                           ;	STVREN = ON, Stack full/underflow will cause Reset
 10650                           ;	Debugger Enable bit
 10651                           ;	DEBUG = OFF, Background debugger disabled
 10652                           ;	Extended Instruction Set Enable bit
 10653                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 10654  300003                     	org	3145731
 10655  300003  FF                 	db	255
 10656                           
 10657                           ;Config register CONFIG3L @ 0x300004
 10658                           ;	WDT Period selection bits
 10659                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 10660                           ;	WDT operating mode
 10661                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
 10662  300004                     	org	3145732
 10663  300004  9F                 	db	159
 10664                           
 10665                           ;Config register CONFIG3H @ 0x300005
 10666                           ;	WDT Window Select bits
 10667                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 10668                           ;	WDT input clock selector
 10669                           ;	WDTCCS = SC, Software Control
 10670  300005                     	org	3145733
 10671  300005  FF                 	db	255
 10672                           
 10673                           ;Config register CONFIG4L @ 0x300006
 10674                           ;	Boot Block Size selection bits
 10675                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
 10676                           ;	Boot Block enable bit
 10677                           ;	BBEN = OFF, Boot block disabled
 10678                           ;	Storage Area Flash enable bit
 10679                           ;	SAFEN = OFF, SAF disabled
 10680                           ;	Application Block write protection bit
 10681                           ;	WRTAPP = OFF, Application Block not write protected
 10682  300006                     	org	3145734
 10683  300006  FF                 	db	255
 10684                           
 10685                           ;Config register CONFIG4H @ 0x300007
 10686                           ;	Configuration Register Write Protection bit
 10687                           ;	WRTB = OFF, Configuration registers (300000-30000Bh) not write-protected
 10688                           ;	Boot Block Write Protection bit
 10689                           ;	WRTC = OFF, Boot Block (000000-0007FFh) not write-protected
 10690                           ;	Data EEPROM Write Protection bit
 10691                           ;	WRTD = OFF, Data EEPROM not write-protected
 10692                           ;	SAF Write protection bit
 10693                           ;	WRTSAF = OFF, SAF not Write Protected
 10694                           ;	Low Voltage Programming Enable bit
 10695                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
 10696  300007                     	org	3145735
 10697  300007  FF                 	db	255
 10698                           
 10699                           ;Config register CONFIG5L @ 0x300008
 10700                           ;	PFM and Data EEPROM Code Protection bit
 10701                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
 10702  300008                     	org	3145736
 10703  300008  FF                 	db	255
 10704                           
 10705                           ;Config register CONFIG5H @ 0x300009
 10706                           ;	unspecified, using default values
 10707  300009                     	org	3145737
 10708  300009  FF                 	db	255
 10709                           tosu	equ	0x3FFF
 10710                           tosh	equ	0x3FFE
 10711                           tosl	equ	0x3FFD
 10712                           stkptr	equ	0x3FFC
 10713                           pclatu	equ	0x3FFB
 10714                           pclath	equ	0x3FFA
 10715                           pcl	equ	0x3FF9
 10716                           tblptru	equ	0x3FF8
 10717                           tblptrh	equ	0x3FF7
 10718                           tblptrl	equ	0x3FF6
 10719                           tablat	equ	0x3FF5
 10720                           prodh	equ	0x3FF4
 10721                           prodl	equ	0x3FF3
 10722                           indf0	equ	0x3FEF
 10723                           postinc0	equ	0x3FEE
 10724                           postdec0	equ	0x3FED
 10725                           preinc0	equ	0x3FEC
 10726                           plusw0	equ	0x3FEB
 10727                           fsr0h	equ	0x3FEA
 10728                           fsr0l	equ	0x3FE9
 10729                           wreg	equ	0x3FE8
 10730                           indf1	equ	0x3FE7
 10731                           postinc1	equ	0x3FE6
 10732                           postdec1	equ	0x3FE5
 10733                           preinc1	equ	0x3FE4
 10734                           plusw1	equ	0x3FE3
 10735                           fsr1h	equ	0x3FE2
 10736                           fsr1l	equ	0x3FE1
 10737                           bsr	equ	0x3FE0
 10738                           indf2	equ	0x3FDF
 10739                           postinc2	equ	0x3FDE
 10740                           postdec2	equ	0x3FDD
 10741                           preinc2	equ	0x3FDC
 10742                           plusw2	equ	0x3FDB
 10743                           fsr2h	equ	0x3FDA
 10744                           fsr2l	equ	0x3FD9
 10745                           status	equ	0x3FD8

Data Sizes:
    Strings     0
    Constant    0
    Data        3
    BSS         79
    Persistent  23
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     57      76
    BANK0           160     42     128
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0

Pointer List with Targets:

    TMR4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_10msISR(), TMR4_DefaultInterruptHandler(), 

    TMR4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_10msISR(), TMR4_DefaultInterruptHandler(), Absolute function(), 

    TMR5_SetGateInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR5_DefaultGateInterruptHandler(), 

    TMR5_GateInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR5_DefaultGateInterruptHandler(), Absolute function(), 

    CCP4_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP4_DefaultCallBack(), 

    CCP4_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP4_DefaultCallBack(), Absolute function(), 

    CCP3_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP3_DefaultCallBack(), 

    CCP3_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP3_DefaultCallBack(), Absolute function(), 

    UART1_SetTxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    UART1_SetRxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultErrorHandler(), 

    UART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), 

    UART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), 

    UART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultErrorHandler(), 

    UART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultOverrunErrorHandler(), 

    UART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultFramingErrorHandler(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_Receive_ISR(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_Transmit_ISR(), 


Critical Paths under _main in COMRAM

    _calcSteering->_setSteering
    _setSteering->___awdiv
    ___flge->___xxtofl
    _getBatteryVoltage->_ADCC_GetSingleConversion
    _calcSpeed->___fladd
    ___fladd->___flmul
    _setMotor->_PWM7_LoadDutyValue
    _setMotor->_PWM8_LoadDutyValue
    _actSpeed->___aldiv
    ___xxtofl->___awdiv
    ___fltol->___fladd
    ___flmul->___xxtofl
    _SYSTEM_Initialize->_TMR5_Initialize
    _UART1_Initialize->_UART1_SetErrorHandler
    _UART1_Initialize->_UART1_SetFramingErrorHandler
    _UART1_Initialize->_UART1_SetOverrunErrorHandler
    _UART1_Initialize->_UART1_SetRxInterruptHandler
    _UART1_Initialize->_UART1_SetTxInterruptHandler
    _TMR5_Initialize->_TMR5_SetGateInterruptHandler
    _TMR4_Initialize->_TMR4_SetInterruptHandler
    _CCP4_Initialize->_CCP4_SetCallBack
    _CCP3_Initialize->_CCP3_SetCallBack

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR4_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _CCP3_CaptureISR in COMRAM

    _CCP3_CaptureISR->_CCP3_DefaultCallBack

Critical Paths under _CCP4_CaptureISR in COMRAM

    _CCP4_CaptureISR->_CCP4_DefaultCallBack

Critical Paths under _TMR5_GATE_ISR in COMRAM

    _TMR5_DefaultGateInterruptHandler->_TMR5_ReadTimer
    _TMR5_Reload->_TMR5_WriteTimer

Critical Paths under _SMT1_PR_ACQ_ISR in COMRAM

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in COMRAM

    None.

Critical Paths under _SMT1_Overflow_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _loop->_calcMotorPow
    _startAccell->___fltol
    _calcSpeed->___fltol
    ___fladd->___flmul
    _calcMotorPow->___fltol
    ___fltol->___fladd

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR4_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _CCP3_CaptureISR in BANK0

    None.

Critical Paths under _CCP4_CaptureISR in BANK0

    None.

Critical Paths under _TMR5_GATE_ISR in BANK0

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK0

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK0

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR4_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _CCP3_CaptureISR in BANK1

    None.

Critical Paths under _CCP4_CaptureISR in BANK1

    None.

Critical Paths under _TMR5_GATE_ISR in BANK1

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK1

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK1

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR4_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _CCP3_CaptureISR in BANK2

    None.

Critical Paths under _CCP4_CaptureISR in BANK2

    None.

Critical Paths under _TMR5_GATE_ISR in BANK2

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK2

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK2

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR4_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _CCP3_CaptureISR in BANK3

    None.

Critical Paths under _CCP4_CaptureISR in BANK3

    None.

Critical Paths under _TMR5_GATE_ISR in BANK3

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK3

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK3

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR4_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _CCP3_CaptureISR in BANK4

    None.

Critical Paths under _CCP4_CaptureISR in BANK4

    None.

Critical Paths under _TMR5_GATE_ISR in BANK4

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK4

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK4

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR4_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _CCP3_CaptureISR in BANK5

    None.

Critical Paths under _CCP4_CaptureISR in BANK5

    None.

Critical Paths under _TMR5_GATE_ISR in BANK5

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK5

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK5

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR4_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _CCP3_CaptureISR in BANK6

    None.

Critical Paths under _CCP4_CaptureISR in BANK6

    None.

Critical Paths under _TMR5_GATE_ISR in BANK6

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK6

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK6

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR4_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _CCP3_CaptureISR in BANK7

    None.

Critical Paths under _CCP4_CaptureISR in BANK7

    None.

Critical Paths under _TMR5_GATE_ISR in BANK7

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK7

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK7

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR4_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _CCP3_CaptureISR in BANK8

    None.

Critical Paths under _CCP4_CaptureISR in BANK8

    None.

Critical Paths under _TMR5_GATE_ISR in BANK8

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK8

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK8

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR4_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _CCP3_CaptureISR in BANK9

    None.

Critical Paths under _CCP4_CaptureISR in BANK9

    None.

Critical Paths under _TMR5_GATE_ISR in BANK9

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK9

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK9

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR4_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _CCP3_CaptureISR in BANK10

    None.

Critical Paths under _CCP4_CaptureISR in BANK10

    None.

Critical Paths under _TMR5_GATE_ISR in BANK10

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK10

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK10

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR4_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _CCP3_CaptureISR in BANK11

    None.

Critical Paths under _CCP4_CaptureISR in BANK11

    None.

Critical Paths under _TMR5_GATE_ISR in BANK11

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK11

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK11

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR4_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _CCP3_CaptureISR in BANK12

    None.

Critical Paths under _CCP4_CaptureISR in BANK12

    None.

Critical Paths under _TMR5_GATE_ISR in BANK12

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK12

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK12

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR4_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _CCP3_CaptureISR in BANK13

    None.

Critical Paths under _CCP4_CaptureISR in BANK13

    None.

Critical Paths under _TMR5_GATE_ISR in BANK13

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK13

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK13

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR4_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _CCP3_CaptureISR in BANK14

    None.

Critical Paths under _CCP4_CaptureISR in BANK14

    None.

Critical Paths under _TMR5_GATE_ISR in BANK14

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK14

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK14

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR4_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _CCP3_CaptureISR in BANK15

    None.

Critical Paths under _CCP4_CaptureISR in BANK15

    None.

Critical Paths under _TMR5_GATE_ISR in BANK15

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK15

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK15

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   40210
                  _SYSTEM_Initialize
           _TMR4_SetInterruptHandler
                               _loop
 ---------------------------------------------------------------------------------
 (1) _loop                                                 0     0      0   39063
                             ___flge
                           ___xxtofl
                       _calcMotorPow
                          _calcSpeed
                       _calcSteering
                  _getBatteryVoltage
                           _getCurve
                         _getReverse
                           _setMotor
                        _setSteering
                        _startAccell
 ---------------------------------------------------------------------------------
 (2) _startAccell                                          4     4      0   13853
                                             35 BANK0      4     4      0
                             ___flge
                            ___flmul
                            ___fltol
                           ___xxtofl
                       _calcSteering
                           _setMotor
                        _setSteering
 ---------------------------------------------------------------------------------
 (3) _calcSteering                                         6     6      0    4336
                                             36 COMRAM     6     6      0
                            ___awdiv
                        _setSteering
 ---------------------------------------------------------------------------------
 (3) _setSteering                                          9     6      3    3320
                                             27 COMRAM     9     6      3
                 _PWM5_LoadDutyValue
                 _PWM6_LoadDutyValue
                            ___awdiv
 ---------------------------------------------------------------------------------
 (4) _PWM6_LoadDutyValue                                   4     2      2     120
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _PWM5_LoadDutyValue                                   4     2      2     120
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     638
                                             41 COMRAM    12     4      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _getReverse                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _getCurve                                             6     6      0     112
                                             19 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (2) _getBatteryVoltage                                    0     0      0      22
           _ADCC_GetSingleConversion
 ---------------------------------------------------------------------------------
 (3) _ADCC_GetSingleConversion                             5     3      2      22
                                             19 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _calcSpeed                                            6     6      0    8012
                                             35 BANK0      6     6      0
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             16     8      8    3402
                                             53 COMRAM     4     4      0
                                             13 BANK0     12     4      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _calcMotorPow                                         7     7      0    7018
                                             35 BANK0      7     7      0
                            ___awdiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                           _actSpeed
                           _setMotor
 ---------------------------------------------------------------------------------
 (3) _setMotor                                             4     2      2     982
                                             23 COMRAM     4     2      2
                 _PWM7_LoadDutyValue
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (4) _PWM8_LoadDutyValue                                   4     2      2     272
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _PWM7_LoadDutyValue                                   4     2      2     272
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _actSpeed                                             4     2      2     629
                                             33 COMRAM     4     2      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             14     6      8     604
                                             19 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     770
                                             27 COMRAM    14    10      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     683
                                             25 BANK0     10     6      4
                            ___awdiv (ARG)
                            ___fladd (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    3025
                                             41 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                            ___awdiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     756
                                             19 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     973
                    _ADCC_Initialize
                    _CCP3_Initialize
                    _CCP4_Initialize
                    _CLC3_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM5_Initialize
                    _PWM6_Initialize
                    _PWM7_Initialize
                    _PWM8_Initialize
                    _SMT1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR4_Initialize
                    _TMR5_Initialize
                   _UART1_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0     490
              _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetOverrunErrorHandler                         2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetFramingErrorHandler                         2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetErrorHandler                                2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      2     2      0      98
                                             21 COMRAM     2     2      0
       _TMR5_SetGateInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetGateInterruptHandler                         2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0     174
           _TMR4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR4_SetInterruptHandler                             2     0      2     174
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      2     2      0       0
                                             19 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMT1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM7_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      15
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _CLC3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP4_Initialize                                      0     0      0      98
                   _CCP4_SetCallBack
 ---------------------------------------------------------------------------------
 (3) _CCP4_SetCallBack                                     2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CCP3_Initialize                                      0     0      0      98
                   _CCP3_SetCallBack
 ---------------------------------------------------------------------------------
 (3) _CCP3_SetCallBack                                     2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _UART1_tx_vect_isr                                    1     1      0       0
                                             16 COMRAM     1     1      0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (7) _UART1_Transmit_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (11) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _UART1_rx_vect_isr                                    1     1      0       0
                                             17 COMRAM     1     1      0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (7) _UART1_Receive_ISR                                    0     0      0       0
                   Absolute function *
          _UART1_DefaultErrorHandler *
   _UART1_DefaultFramingErrorHandler *
   _UART1_DefaultOverrunErrorHandler *
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (8) _UART1_DefaultOverrunErrorHandler                     0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _UART1_DefaultFramingErrorHandler                     0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _UART1_DefaultErrorHandler                            0     0      0       0
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (8) _UART1_RxDataHandler                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (11) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _TMR4_ISR                                             1     1      0       0
                                             18 COMRAM     1     1      0
                      _TMR4_CallBack
 ---------------------------------------------------------------------------------
 (7) _TMR4_CallBack                                        0     0      0       0
                   Absolute function *
                       _TMR4_10msISR *
       _TMR4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _TMR4_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TMR4_10msISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (11) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _CCP3_CaptureISR                                     2     2      0     144
                                              2 COMRAM     2     2      0
                   Absolute function *
               _CCP3_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (11) _CCP3_DefaultCallBack                                2     0      2      97
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (11) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _CCP4_CaptureISR                                     2     2      0     144
                                              6 COMRAM     2     2      0
                   Absolute function *
               _CCP4_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (11) _CCP4_DefaultCallBack                                2     0      2      97
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (11) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _TMR5_GATE_ISR                                       0     0      0     233
                   Absolute function *
   _TMR5_DefaultGateInterruptHandler *
 ---------------------------------------------------------------------------------
 (11) _TMR5_DefaultGateInterruptHandler                    0     0      0     233
                     _TMR5_ReadTimer
                        _TMR5_Reload
 ---------------------------------------------------------------------------------
 (12) _TMR5_Reload                                         0     0      0     164
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (13) _TMR5_WriteTimer                                     2     0      2     164
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) _TMR5_ReadTimer                                      8     6      2      69
                                              8 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (11) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _SMT1_PR_ACQ_ISR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _SMT1_PW_ACQ_ISR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _SMT1_Overflow_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
     _CCP3_Initialize
       _CCP3_SetCallBack
     _CCP4_Initialize
       _CCP4_SetCallBack
     _CLC3_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM5_Initialize
     _PWM6_Initialize
     _PWM7_Initialize
     _PWM8_Initialize
     _SMT1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
     _TMR4_Initialize
       _TMR4_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetGateInterruptHandler
     _UART1_Initialize
       _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
   _TMR4_SetInterruptHandler
   _loop
     ___flge
       ___xxtofl (ARG)
         ___awdiv (ARG)
     ___xxtofl
     _calcMotorPow
       ___awdiv
       ___flmul
         ___awdiv (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___awdiv (ARG)
         ___fladd (ARG)
           ___flmul (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl
       _actSpeed
         ___aldiv
       _setMotor
         _PWM7_LoadDutyValue
         _PWM8_LoadDutyValue
     _calcSpeed
       ___fladd
       ___flmul
       ___fltol
       ___xxtofl
     _calcSteering
       ___awdiv
       _setSteering
         _PWM5_LoadDutyValue
         _PWM6_LoadDutyValue
         ___awdiv
     _getBatteryVoltage
       _ADCC_GetSingleConversion
     _getCurve
     _getReverse
     _setMotor
     _setSteering
     _startAccell
       ___flge
       ___flmul
       ___fltol
       ___xxtofl
       _calcSteering
       _setMotor
       _setSteering

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *
     Absolute function(Fake) *
     _UART1_DefaultErrorHandler *
       _UART1_RxDataHandler
     _UART1_DefaultFramingErrorHandler *
     _UART1_DefaultOverrunErrorHandler *
     _UART1_RxDataHandler *

 _TMR4_ISR (ROOT)
   _TMR4_CallBack
     Absolute function(Fake) *
     _TMR4_10msISR *
     _TMR4_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _CCP3_CaptureISR (ROOT)
   Absolute function(Fake) *
   _CCP3_DefaultCallBack *

 _CCP4_CaptureISR (ROOT)
   Absolute function(Fake) *
   _CCP4_DefaultCallBack *

 _TMR5_GATE_ISR (ROOT)
   Absolute function(Fake) *
   _TMR5_DefaultGateInterruptHandler *
     _TMR5_ReadTimer
     _TMR5_Reload
       _TMR5_WriteTimer

 _SMT1_PR_ACQ_ISR (ROOT)

 _SMT1_PW_ACQ_ISR (ROOT)

 _SMT1_Overflow_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FFF      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK15          100      0       0      30        0.0%
BANK15             100      0       0      31        0.0%
BITBANK14          100      0       0      28        0.0%
BANK14             100      0       0      29        0.0%
BITBANK13          100      0       0      36        0.0%
BANK13             100      0       0      27        0.0%
BITBANK12          100      0       0      35        0.0%
BANK12             100      0       0      26        0.0%
BITBANK11          100      0       0      34        0.0%
BANK11             100      0       0      25        0.0%
BITBANK10          100      0       0      33        0.0%
BANK10             100      0       0      24        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     2A      80       5       80.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     39      4C       1       80.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      CC      32        0.0%
DATA                 0      0      CC       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Jan 31 17:49:09 2024

                             _CCP4_Initialize 2502                        ??_CCP3_DefaultCallBack 0003  
                                 _startAccell 146E                                            l72 274E  
                                          l75 265A                                            l69 20D4  
                                ___awdiv@sign 0019                             ??_TMR5_WriteTimer 000B  
                 __size_of_PWM6_LoadDutyValue 0034                                           l404 208A  
                                         l520 211E                                           l441 255C  
                                         l362 278A                                           l371 2776  
                                         l188 1C6A                                           l284 1E9A  
                                         l365 279E                                           l359 2794  
                                         l368 2780                                           l712 23D8  
                                         l449 27C6                                           l482 252E  
                                         l723 26EE                                           l555 27A8  
                                         l644 2588                                           l740 2370  
                                         l709 2706                                           l581 2262  
                                         l726 23A4                                           l479 27BC  
                                         l751 271E                                           l737 2736  
                                         l754 233C                                           l923 26BA  
                                         l695 27B2                                           l795 2470  
                                         l893 25B4                                           _GIE 01FE97  
                                         _PR2 003FAB                                           _PR4 003F9F  
                     __size_of_PMD_Initialize 0024                               _TMR2_Initialize 26A0  
              CCP4_SetCallBack@customCallBack 0014                                           tosl 003FFD  
                                         wreg 003FE8                              _CCP4_SetCallBack 27B4  
                                ___flmul@aexp 009E                                  ___flmul@bexp 00A3  
                          _UART1_Transmit_ISR 216A                                  ___flmul@sign 009D  
                                ___flmul@temp 00A8                                  ___flmul@prod 00A4  
                     __end_of_CCP4_CaptureISR 230A                                  ___fltol@exp1 00BF  
                                        l1042 1FE8                                          l2010 09C2  
                                        l1220 15BC                                          l2013 0854  
                                        l2006 063A                                          l1054 2420  
                                        l2023 0984                                          l2015 08CC  
                                        l2016 08BA                                          l1304 1AAE  
                                        l1312 0E1C                                          l1057 2440  
                                        l1305 1ABE                                          l2050 1184  
                                        l1235 16AA                                          l1244 1F2E  
                                        l1332 0FD0                                          l2061 111C  
                                        l1317 0EAE                                          l2054 10C0  
                                        l2047 1028                                          l1247 275E  
                                        l1272 0BDA                                          l1264 159E  
                                        l4001 1B5C                                          l1354 0DFC  
                                        l1290 0BEA                                          l4003 1B68  
                                        l1363 146C                               _timer3ReloadVal 00C9  
                                        l1372 1BA0                                          l1380 11F2  
                                        l4005 1B88                                          l1623 1DF4  
                                        l1471 17B6                                          l1376 1192  
                                        l1378 11B6                                          l1379 11CA  
                                        l1389 1328                                          l1662 19C2  
                                        l4071 1EFA                                          l4063 1E9C  
                                        l1920 02A2                                          l2801 207E  
                                        l4073 1F26                                          l4065 1EA4  
                                        l1921 0290                                          l1657 197C  
                                        l1922 0256                                          l2811 2088  
                                        l2803 2080                                          l4067 1EBA  
                                        l4411 18EE                                          l2805 2082  
                                        l2821 1BCC                                          l2813 2638  
                                        l4501 10FE                                          l4069 1ECA  
                                        l4421 195C                                          l4413 18FE  
                                        l5301 0EDA                                          l2807 2084  
                                        l2831 1C26                                          l2823 1C1A  
                                        l2815 1BA2                                          l4511 1154  
                                        l4503 110C                                          l4423 196A  
                                        l4415 192C                                          l5303 0F0A  
                                        l4521 2530                                          l2809 2086  
                                        l2833 1C28                                          l2825 1C1C  
                                        l2817 1BC2                                          l4601 1E44  
                                        l3801 1D36                                          l1689 18BE  
                                        l4513 1164                                          l4505 112A  
                                        l1937 03BC                                          l1929 0572  
                                        l5401 01D4                                          l4425 19BA  
                                        l4417 193C                                          l4409 18C0  
                                        l5313 0F58                                          l5305 0F1E  
                                        l5321 0F7E                                          l1946 048C  
                                        l2851 1F8E                                          l4523 2540  
                                        l2835 1C2A                                          l2827 1C1E  
                                        l2819 1BC4                                          l2907 2720  
                                        l2923 26F0                                          l4531 255E  
                                        l4611 1E60                                          l4603 1E48  
                                        l3811 1D66                                          l3803 1D44  
                                        l4515 1172                                          l4507 112C  
                                        l1947 047A                                          l5411 01E8  
                                        l5403 01D8                                          l4427 19C0  
                                        l4419 194A                                          l5315 0F6A  
                                        l5307 0F32                                          l4525 254C  
                                        l4541 2502                                          l2837 1C2C  
                                        l2829 1C20                                          l4533 2572  
                                        l4613 1E6C                                          l4605 1E4C  
                                        l3821 1D94                                          l3813 1D6A  
                                        l3805 1D4C                                          l4517 1174  
                                        l4509 1130                                          l3901 16F4  
                                        l5501 044E                                          l5421 0222  
                                        l5413 01EC                                          l5405 01DC  
                                        l5341 00C0                                          l6061 0D6C  
                                        l4701 0B36                                          l5309 0F44  
                                        l6053 0E80                                          l4527 2556  
                                        l4543 2512                                          l2791 206A  
                                        l2783 2040                                          l2839 2738  
                                        l2871 2468                                          l2863 2442  
                                        l4551 222C                                          l4535 2576  
                                        l4615 1E96                                          l4607 1E50  
                                        l3831 1DC8                                          l3823 1DA2  
                                        l3815 1D72                                          l3807 1D50  
                                        l3911 173C                                          l3903 1704  
                                        l5511 04A8                                          l5503 045C  
                                        l5431 0274                                          l5423 023E  
                                        l5415 01F0                                          l5407 01E0  
                                        l5351 0100                                          l5343 00CE  
                                        l4711 0B84                                          l4703 0B46  
                                        l6055 0F92                                          l4529 255A  
                                        l4545 251E                                          l2793 206C  
                                        l2785 2042                                          l2873 246A  
                                        l2865 2460                                          l2881 26B2  
                                        l4553 2240                                          l4537 2578  
                                        l4561 20EA                                          l4609 1E54  
                                        l3833 1DCE                                          l3825 1DA8  
                                        l3817 1D84                                          l3809 1D5E  
                                        l5601 0710                                          l4481 1038  
                                        l3921 1780                                          l3913 1746  
                                        l3905 171A                                          l5521 0512  
                                        l5513 04B6                                          l5505 0472  
                                        l5441 02C0                                          l5433 0282  
                                        l5425 024E                                          l5409 01E4  
                                        l5417 01F4                                          l5361 0132  
                                        l5353 0102                                          l5345 00D0  
                                        l4713 0B94                                          l4705 0B58  
                                        l6057 1242                                          l4547 2528  
                                        l2795 2076                                          l2787 204A  
                                        l2883 26D8                                          l2875 246C  
                                        l2867 2462                                          l4555 2244  
                                        l4539 2584                                          l4571 211A  
                                        l4563 20EE                                          l3931 2778  
                                        l3827 1DBE                                          l3819 1D8C  
                                        l3835 1DD4                                          l5611 077E  
                                        l5603 0720                                          l4491 1076  
                                        l4483 104E                                          l4475 0FD4  
                                        l3915 1764                                          l3907 1722  
                                        l3923 1786                                          l3843 23A6  
                                        l5531 054C                                          l5523 0532  
                                        l5515 04F0                                          l5451 0300  
                                        l5435 0284                                          l5427 0264  
                                        l5419 01F8                                          l5371 015A  
                                        l5363 0134                                          l5347 00E0  
                                        l5355 010A                                          l5339 00B2  
                                        l6059 0BB4                                          l4707 0B74  
                                        l4731 19DA                                          l3851 11FA  
                                        l5291 0E60                                          l5283 0DFE  
                                        l4549 252C                                          l2797 207A  
                                        l2789 2054                                          l2885 2708  
                                        l2869 2464                                          l2877 26A0  
                                        l4557 225E                                          l4565 2108  
                                        l3933 276E                                          l4581 1E1C  
                                        l4573 1DF6                                          l3837 1DE4  
                                        l3829 1DC6                                          l5621 081C  
                                        l5613 078E                                          l5605 0730  
                                        l5541 0574                                          l4493 10A8  
                                        l4477 0FE4                                          l3925 1796  
                                        l3917 1774                                          l3909 172E  
                                        l3845 2372                                          l5533 0552  
                                        l5525 0536                                          l5509 049C  
                                        l5517 04F2                                          l5461 032A  
                                        l5453 030C                                          l5445 02D4  
                                        l5437 028E                                          l5429 0270  
                                        l5381 0194                                          l5373 016A  
                                        l5365 013A                                          l5357 011A  
                                        l5349 00F0                                          l4629 2750  
                                        l4741 1A2A                                          l4733 19E4  
                                        l3853 1206                                          l3861 122E  
                                        l5285 0E1C                                          l3951 27BE  
                                        l2799 207C                                          l2879 26AC  
                                        l4567 210C                                          l4559 20D6  
                                        l3935 278C                                          l4591 1E30  
                                        l4583 1E20                                          l4575 1DFA  
                                        l3839 1DEC                                          l5631 0872  
                                        l5623 083A                                          l5615 07AE  
                                        l5607 074E                                          l5551 05B2  
                                        l5543 0582                                          l5711 18AE  
                                        l5703 1872                                          l4495 10AA  
                                        l4487 1062                                          l4479 0FF2  
                                        l3927 17A6                                          l3919 1776  
                                        l5535 0560                                          l5527 0544  
                                        l5519 0502                                          l5471 039C  
                                        l5455 0310                                          l5447 02E4  
                                        l5439 02B0                                          l5463 0330  
                                        l5391 01C0                                          l5383 01A6  
                                        l5375 017A                                          l5367 0148  
                                        l5359 0120                                          l4671 0A1A  
                                        l4719 0BA0                                          l4751 1A70  
                                        l4743 1A2E                                          l4735 19F6  
                                        l3871 12BC                                          l3855 120E  
                                        l3863 1270                                          l3847 1186  
                                        l5287 0E38                                          l5295 0E6C  
                                        l3953 27B4                                          l2897 258A  
                                        l4569 210E                                          l3937 2782  
                                        l4593 1E34                                          l4585 1E24  
                                        l4577 1E06                                          l5641 08DC  
                                        l5633 0876                                          l5625 0844  
                                        l5617 07D8                                          l5609 075E  
                                        l5561 05E4                                          l5553 05C2  
                                        l5545 0590                                          l5705 187E  
                                        l4497 10B6                                          l4489 106A  
                                        l5537 0562                                          l5529 054A  
                                        l5481 03F6                                          l5465 0356  
                                        l5473 03AC                                          l5457 031E  
                                        l5449 02F2                                          l5393 01C4  
                                        l5385 01B4                                          l5377 017C  
                                        l5369 014A                                          l4681 0A8E  
                                        l4673 0A30                                          l4665 09C4  
                                        l4745 1A40                                          l4753 1A74  
                                        l4737 1A08                                          l4729 19C4  
                                        l3881 1318                                          l3873 12D8  
                                        l3865 128C                                          l3857 121A  
                                        l3849 11D2                                          l5297 0EB2  
                                        l5289 0E44                                          l5721 14B8  
                                        l3971 27AA                                          l3955 27A0  
                                        l3939 2796                                          l4595 1E38  
                                        l4587 1E28                                          l4579 1E16  
                                        l5651 093E                                          l5643 08E8  
                                        l5635 0884                                          l5627 0852  
                                        l5619 080E                                          l5571 0624  
                                        l5563 05F2                                          l5555 05C8  
                                        l5547 0592                                          l5707 188E  
                                        l4499 10F2                                          l3891 16BE  
                                        l5811 1350                                          l5491 0426  
                                        l5483 0400                                          l5475 03D2  
                                        l5467 038A                                          l5459 0320  
                                        l5395 01C8                                          l5387 01B8  
                                        l5379 0184                                          l4691 0AD0  
                                        l4683 0A9E                                          l4675 0A40  
                                        l4667 09E2                                          l4755 1A8A  
                                        l4747 1A52                                          l4739 1A12  
                                        l3795 233E                                          l3875 12E4  
                                        l3867 1298                                          l5299 0EC6  
                                        l5731 151E                                          l5723 14EC  
                                        l5715 146E                                          l4597 1E3C  
                                        l4589 1E2C                                          l4861 20AC  
                                        l4853 208C                                          l5661 09A6  
                                        l5653 0952                                          l5645 08F6  
                                        l5637 08B2                                          l5629 0864  
                                        l5581 066E                                          l5573 062A  
                                        l5565 05F4                                          l5557 05D8  
                                        l5549 05A2                                          l5709 189E  
                                        l3893 16CE                                          l5821 13FC  
                                        l5813 1350                                          l5805 132A  
                                        l5493 042A                                          l5485 040E  
                                        l5477 03E2                                          l5469 038C  
                                        l5397 01CC                                          l5389 01BC  
                                        l3981 242E                                          l3973 2412  
                                        l4693 0AE2                                          l4685 0AAE  
                                        l4677 0A5C                                          l4669 09FE  
                                        l4757 1AAA                                          l4749 1A68  
                                        l3797 230A                                          l3877 1300  
                                        l3869 12B4                                          l5741 1580  
                                        l5725 1508                                          l5733 152E  
                                        l5717 147E                                          l4599 1E40  
                                        l4871 20C8                                          l4863 20B0  
                                        l4855 209C                                          l3799 1D32  
                                        l5663 09A8                                          l5655 096C  
                                        l5647 0920                                          l5591 06CA  
                                        l5583 067E                                          l5575 064A  
                                        l5567 0604                                          l5559 05DE  
                                        l5671 17B8                                          l3895 16D2  
                                        l3887 16AC                                          l3991 1B00  
                                        l5831 1450                                          l5823 1400  
                                        l5815 13CC                                          l5807 1336  
                                        l5495 043A                                          l5487 0410  
                                        l5399 01D0                                          l5751 0BFA  
                                        l3975 2418                                          l4695 0AF8  
                                        l4687 0ABA                                          l4679 0A78  
                                        l4759 1AAA                                          l3879 1308  
                                        l5743 1584                                          l5735 1560  
                                        l5727 1514                                          l5719 1482  
                                        l4873 20CC                                          l4865 20B4  
                                        l4857 20A0                                          l5657 0988  
                                        l5665 09AE                                          l5649 0924  
                                        l5593 06D6                                          l5585 0688  
                                        l5577 065A                                          l5569 0614  
                                        l5681 1810                                          l5673 17D0  
                                        l3897 16E0                                          l3889 16B0  
                                        l3993 1B0C                                          l3985 1AC0  
                                        l5833 1458                                          l5825 140C  
                                        l5817 13E0                                          l5809 1344  
                                        l5489 041E                                          l5497 043C  
                                        l5761 0C4E                                          l5753 0C10  
                                        l3977 241C                                          l4697 0B0A  
                                        l4689 0AC0                                          l5745 1596  
                                        l5737 156A                                          l5729 1518  
                                        l5841 15DC                                          l4867 20BC  
                                        l4859 20A8                                          l5667 09B2  
                                        l5659 0998                                          l5595 06E2  
                                        l5587 06A2                                          l5683 1820  
                                        l3899 16F0                                          l3987 1ADC  
                                        l3995 1B1C                                          l5835 1464  
                                        l5827 1428                                          l5819 13E8  
                                        l5499 044A                                          l5771 0C8C  
                                        l5763 0C5A                                          l5755 0C14  
                                        l3979 241E                                          l4699 0B20  
                                        l5747 159A                                          l5739 1576  
                                        l5851 1630                                          l5843 15E0  
                                        l4869 20C0                                          l5597 06F0  
                                        l5589 06AE                                          l5693 184A  
                                        l5685 1824                                          l5677 17E4  
                                        l3997 1B38                                          l3989 1AF8  
                                        l5829 1434                                          l5781 0D4C  
                                        l5773 0CA2                                          l5757 0C30  
                                        l5765 0C66                                          l5749 0BEC  
                                        l5861 165C                                          l5853 1634  
                                        l5845 15E4                                          l5837 15A0  
                                        l5599 0700                                          l5695 1854  
                                        l5687 1832                                          l5679 180E  
                                        l3999 1B54                                          l5791 0DC8  
                                        l5775 0D34                                          l5767 0C72  
                                        l5759 0C38                                          l5871 169E  
                                        l5863 1660                                          l5855 163C  
                                        l5847 1628                                          l5839 15CA  
                                        l5697 185E                                          l5793 0DD0  
                                        l5777 0D40                                          l5769 0C88  
                                        l5873 16A2                                          l5865 166E  
                                        l5857 1644                                          l5849 162C  
                                        l5881 2694                                          l5795 0DEC  
                                        l5787 0D58                                          l5867 167E  
                                        l5859 164A                                          l5875 2680  
                                        l5797 0DF4                                          l5789 0DAA  
                                        l5869 1692                                          l5877 2684  
                                        l5879 2686                                          u2100 1764  
                                        u2020 128C                                          u2101 1760  
                                        u2005 23CA                                          u2021 1288  
                                        u2110 1796                                          u2030 12B4  
                                        u2111 1792                                          u2015 2396  
                                        u2031 12B0                                          u3000 110C  
                                        u2040 12D8                                          u1145 2074  
                                        u3001 1108                                          u2041 12D4  
                                        u1146 2076                                          u3010 111C  
                                        u2050 1300                                          u3011 1118  
                                        u2051 12FC                                          u3020 112A  
                                        u2060 16BE                                          u2140 242E  
                                        u3100 0A30                                          u3021 1126  
                                        u2061 16BA                                          u2141 242A  
                                        u3101 0A2C                                          _LATA 003FBA  
                                        u3030 1164                                          u2070 16E0  
                                        u2230 1EBA                                          u2150 1ADC  
                                        u3110 0A5C                                          _LATB 003FBB  
                                        u3031 1160                                          u2071 16DC  
                                        u2231 1EB6                                          u2151 1AD8  
                                        u3111 0A58                                          _LATC 003FBC  
                                        u3040 1172                                          u2080 171A  
                                        u2240 1ECA                                          u2160 1AF8  
                                        u4000 02C0                                          u3200 0B36  
                                        u3120 0A78                                          _LATD 003FBD  
                                        u3041 116E                                          u2081 1716  
                                        u2241 1EC6                                          u2161 1AF4  
                                        u4001 02BC                                          u3201 0B32  
                                        u3121 0A74                                          _LATE 003FBE  
                                        u2090 173C                                          u2170 1B38  
                                        u4010 02F2                                          u3210 0B58  
                                        u3130 0A8E                                          u2091 1738  
                                        u2171 1B34                                          u4011 02EE  
                                        u3211 0B54                                          u3131 0A8A  
                                        u2180 1B54                                          u4100 043A  
                                        u4020 0300                                          u3220 0B74  
                                        u3140 0AAE                                          u3300 1A68  
                                        u2181 1B50                                          u4101 0436  
                                        u4021 02FC                                          u3221 0B70  
                                        u3141 0AAA                                          u3301 1A64  
                                        u4110 044A                                          u4030 031E  
                                        u3230 0B94                                          u3150 0AD0  
                                        u3310 1A8A                                          u4111 0446  
                                        u4031 031A                                          u3231 0B90  
                                        u3151 0ACC                                          u3311 1A86  
                                        u4200 0532                                          u4120 045C  
                                        u4040 0356                                          u3160 0AE2  
                                        u3080 09FE                                          u3320 1AA6  
                                        u3240 19DA                                          u4201 052E  
                                        u4121 0458                                          u4041 0352  
                                        u3161 0ADE                                          u3081 09FA  
                                        u3321 1AA2                                          u3241 19D6  
                                        u4210 0544                                          u4130 0472  
                                        u4050 039C                                          u3170 0AF8  
                                        u3090 0A1A                                          u3250 19F6  
                                        _T2PR 003FAB                                          u4211 0540  
                                        u4131 046E                                          u4051 0398  
                                        u3171 0AF4                                          u3091 0A16  
                                        u3251 19F2                                          u4300 065A  
                                        u4220 0560                                          u4140 0488  
                                        u4060 03D2                                          u3180 0B0A  
                                        u3260 1A08                                          u4301 0656  
                                        u4221 055C                                          u4141 0484  
                                        u4061 03CE                                          u3181 0B06  
                                        u3261 1A04                                          u4310 07F8  
                                        u4230 0590                                          u4150 049C  
                                        u4070 03E2                                          u3190 0B20  
                                        u3270 1A2A                                          u4231 058C  
                                        u4151 0498                                          u4071 03DE  
                                        u3191 0B1C                                          u3271 1A26  
                                        u4400 096C                                          u4320 0852  
                                        u4240 05A2                                          u4160 04B6  
                                        u4080 040E                                          u3280 1A40  
                                        u4401 0968                                          u4321 084E  
                                        u4241 059E                                          u4161 04B2  
                                        u4081 040A                                          u3281 1A3C  
                                        u4410 09A6                                          u4330 0872  
                                        u4250 05B2                                          u4170 04F0  
                                        u4090 041E                                          u3290 1A52  
                                        _T4PR 003F9F                                          u4411 09A2  
                                        u4331 086E                                          u4315 07EE  
                                        u4251 05AE                                          u4171 04EC  
                                        u4091 041A                                          u3291 1A4E  
                                        u1940 1D44                                          u4340 0884  
                                        u4260 05F2                                          u4420 17D0  
                                        u4180 0502                                          u4500 1560  
                                        u1941 1D40                                          u4341 0880  
                                        u4261 05EE                                          u4421 17CC  
                                        u4181 04FE                                          u1925 2362  
                                        u4501 155C                                          u1950 1D5E  
                                        u4350 08B2                                          u4270 0604  
                                        u4430 1804                                          u4190 0512  
                                        u2830 18EE                                          u4510 1596  
                                        u1951 1D5A                                          u4351 08AE  
                                        u4271 0600                                          u4191 050E  
                                        u2831 18EA                                          u1935 232E  
                                        u4511 1592                                          u1960 1D84  
                                        u4360 08C8                                          u4280 0614  
                                        u4440 1832                                          u4600 13FC  
                                        u4520 0C10                                          u2840 192C  
                                        u3800 0E38                                          u1961 1D80  
                                        u4361 08C4                                          u4281 0610  
                                        u4441 182E                                          u4601 13F8  
                                        u4521 0C0C                                          u2841 1928  
                                        u3801 0E34                                          u1970 1DA2  
                                        u4370 08DC                                          u4290 064A  
                                        u4450 1846                                          u4610 1428  
                                        u4530 0C30                                          u2850 194A  
                                        u3810 0E60                                          u1971 1D9E  
                                        u4371 08D8                                          u4291 0646  
                                        u4451 1842                                          u4435 17FA  
                                        u4611 1424                                          u4531 0C2C  
                                        u2851 1946                                          u3811 0E5C  
                                        u1980 1DBE                                          u4380 08F6  
                                        u4460 186E                                          u4620 1450  
                                        u3900 016A                                          u4540 0C4E  
                                        u2860 196A                                          u3820 0F44  
                                        _PMD0 0039C0                                          u1981 1DBA  
                                        u4381 08F2                                          u4461 186A  
                                        u4621 144C                                          u3901 0166  
                                        u4541 0C4A                                          u2861 1966  
                                        u3821 0F40                                          _PMD1 0039C1  
                                        u1990 1DE4                                          u4390 093E  
                                        u4470 188E                                          u2950 0FE4  
                                        u3910 01A6                                          u4550 0C88  
                                        u2870 19BA                                          u3830 0F6A  
                                        u4630 15CA                                          _PMD2 0039C2  
                                        u1991 1DE0                                          u4391 093A  
                                        u4471 188A                                          u2951 0FE0  
                                        u3911 01A2                                          u4551 0C84  
                                        u2871 19B6                                          u3831 0F66  
                                        u4631 15C6                                          _PMD3 0039C3  
                                        u4480 189E                                          u2960 0FF2  
                                        u3920 01B4                                          u3840 00CE  
                                        u4560 0CA2                                          u4640 15DC  
                                        _PMD4 0039C4                                          u4481 189A  
                                        u2961 0FEE                                          u3921 01B0  
                                        u3841 00CA                                          u4561 0C9E  
                                        u4641 15D8                                          _PMD5 0039C5  
                                        u2970 104E                                          u3930 0222  
                                        u3850 00E0                                          u4570 0DC8  
                                        u4490 152E                                          u4650 1628  
                                        _PMD6 0039C6                                          u2971 104A  
                                        u3931 021E                                          u3851 00DC  
                                        u4571 0DC4                                          u4491 152A  
                                        u4651 1624                                          _PMD7 0039C7  
                                        u2980 10A4                                          u3940 023A  
                                        u3860 00F0                                          u4580 0DEC  
                                        u4660 165C                                          u2981 10A0  
                                        u3941 0234                                          u3861 00EC  
                                        u4581 0DE8                                          u4661 1658  
                                        u2990 10EE                                          u4590 13E0  
                                        u3950 023C                                          u3870 0132  
                                        u4670 166E                                          u2991 10EA  
                                        u4591 13DC                                          u3871 012E  
                                        u4671 166A                                          u3960 0264  
                                        u3880 0148                                          u3961 0260  
                                        u3881 0144                                          u3970 0282  
                                        u3890 015A                                          u3971 027E  
                                        u3891 0156                                          u3980 02A2  
                                        u3981 029E                                          u3990 02B0  
                                        u3991 02AC                                          _TMR2 003FAA  
                                        _TMR4 003F9E                                          _WPUA 003A41  
                                        _WPUB 003A51                                          _WPUC 003A61  
                                        _WPUD 003A71                                          _WPUE 003A81  
                         ?_UART1_Transmit_ISR 0001                                          _main 2680  
                                        _loop 15A0                                          indf2 003FDF  
                                        fsr2l 003FD9                                          prodh 003FF4  
                                        prodl 003FF3                                          start 00AE  
                             _timer5ReloadVal 00CD                               _TMR3_Initialize 222C  
                             _PWM5_Initialize 2720                             ??_CLC3_Initialize 0014  
               ??_UART1_SetTxInterruptHandler 0016                    ??_TMR4_SetInterruptHandler 0016  
                           _UART1_rx_vect_isr 21F0                                  ___param_bank 000000  
                  __end_of_PWM5_LoadDutyValue 2372                            ?_UART1_rx_vect_isr 0001  
              __size_of_OSCILLATOR_Initialize 0018                          ??_UART1_Transmit_ISR 0011  
               __end_of_OSCILLATOR_Initialize 2750                                 ___fltol@sign1 00BE  
                             __end_of___aldiv 17B8                                         _ADCAP 003EF5  
                                       _ADACT 003EFE                       __end_of_CCP3_Initialize 255E  
                             __end_of___fladd 0574                                         ?_main 0001  
                                       _ADCLK 003EFF                                         _ADCNT 003EEB  
                                       _ADPCH 003EF1                                         _ADREF 003EFD  
                             __end_of___awdiv 1DF6                                         ?_loop 0001  
                                       _ADRPT 003EEC                        ??_CCP4_DefaultCallBack 0007  
                             __end_of___flmul 09C4                      TMR5_ReadTimer@readValLow 0010  
                             __end_of___fltol 18C0                               ___awdiv@divisor 0016  
                                       _U1P1H 003DED                                         _U1P2H 003DEF  
                                       _U1P1L 003DEC                                         _U1P3H 003DF1  
                                       _T3CLK 003FA9                                         _T2CON 003FAC  
                                       _U1P2L 003DEE                                         _U1P3L 003DF0  
                                       _T3CON 003FA6                                         _T5CLK 003F9D  
                                       _T4CON 003FA0                                         _T2HLT 003FAD  
                                       _T5CON 003F9A                                         _T4HLT 003FA1  
                                       _T2TMR 003FAA                                         _U1UIR 003DF8  
                                       i1l330 2224                                         _T2RST 003FAF  
                                       _U1RXB 003DE8                                         i1l324 21E8  
                                       i1l333 21AC                                         i1l350 27D8  
                                       i1l343 1D30                                         i1l336 21B0  
                                       i1l353 27D6                                         _U1TXB 003DEA  
                                       i1l347 25E0                                         i1l356 27CC  
                                       _T4TMR 003F9E                                         _T4RST 003FA3  
                                       i2l409 27DC                                         i1l692 24A0  
                                       i2l534 260C                                         i2l438 24D0  
                                       i2l446 22D0                                         i2l552 240E  
                                       i1l688 2294                                         i2l529 267E  
                                       i2l537 276C                                         i1l698 27DA  
                                       i2l476 2500                                         i2l558 26D6  
                                       i2l487 2308                           ??_UART1_rx_vect_isr 0012  
                                       i2l863 203E                                         i2l856 2168  
                                       i2l868 2636                               ___awdiv@counter 0018  
                                       _OSCEN 0039DD                                         _TMR3H 003FA5  
                                       _TMR5H 003F99                                         _TMR3L 003FA4  
                                       _TMR5L 003F98                                         _TRISA 003FC2  
                                       _TRISB 003FC3                                         _TRISC 003FC4  
                                       _TRISD 003FC5                                         _TRISE 003FC6  
                                 _Default_ISR 27DC                               _TMR4_Initialize 255E  
                             _PWM6_Initialize 2708                             _UART1_tx_vect_isr 21B4  
                            __end_of_TMR4_ISR 229C                       setSteering@steeringMode 001E  
                                       _delay 003E                         __size_of_calcMotorPow 0144  
                          ?_UART1_tx_vect_isr 0001                              ?_SMT1_Initialize 0001  
                                       pclath 003FFA                                         tablat 003FF5  
                                 _BatteryVolt 0080                         __size_of_calcSteering 01D4  
                                       status 003FD8           __end_of_UART1_SetRxInterruptHandler 2782  
                 _UART1_SetRxInterruptHandler 2778                       __end_of_CCP4_Initialize 2530  
         fp__UART1_DefaultFramingErrorHandler 0000      __end_of_UART1_DefaultFramingErrorHandler 27DA  
   __size_of_UART1_DefaultFramingErrorHandler 0002            ??_UART1_DefaultFramingErrorHandler 0012  
           ?_UART1_DefaultFramingErrorHandler 0001              _UART1_DefaultFramingErrorHandler 27D8  
                         ??_UART1_tx_vect_isr 0011                     __end_of_UART1_rx_vect_isr 222C  
                             _TMR5_Initialize 20D6                               _PWM7_Initialize 26F0  
                             __initialization 1F30                         TMR5_ReadTimer@readVal 000D  
                            ?_CCP3_CaptureISR 0001                                  __end_of_main 26A0  
                                __end_of_loop 16AC                   ??_UART1_DefaultErrorHandler 0012  
                     __end_of_TMR2_Initialize 26BC                                        ??_main 003A  
                                      ??_loop 003A                                 __activetblptr 000002  
                                _calcMotorPow 132A          __size_of_UART1_SetTxInterruptHandler 000A  
                   __end_of_UART1_tx_vect_isr 21F0                               _PWM8_Initialize 26D8  
                            _UART1_Initialize 1DF6                                  _calcSteering 0DFE  
                            ?_CCP4_CaptureISR 0001                                        _ADACCH 003EE9  
                                      _ADACCL 003EE8                                        _ADACCU 003EEA  
                                      _ADACQH 003EF4                                        _ADACQL 003EF3  
                                      _ADCON0 003EF8                                        _ADCON1 003EF9  
                                      _ADCON2 003EFA                                        _ADCON3 003EFB  
                                      _ADERRH 003EE3                                        _ADERRL 003EE2  
                                      _ADLTHH 003EDF                                        _ADLTHL 003EDE  
                                      _ADRESH 003EF0                                        _ADRESL 003EEF  
                                      _ADPREH 003EF7                                        _ADPREL 003EF6  
                                      _CCPR3H 003F75                                        _CCPR4H 003F71  
                                      _CCPR3L 003F74                                        _CCPR4L 003F70  
                                      _ADSTAT 003EFC                                        _ADUTHH 003EE1  
                            ___awdiv@dividend 0014                                        _ADUTHL 003EE0  
                          _PWM8_LoadDutyValue 2372                                        _ANSELA 003A40  
                                      _ANSELB 003A50                                        _ANSELC 003A60  
                                      _ANSELD 003A70                                        _ANSELE 003A80  
                                      _RB1I2C 003A5A                                        _RB2I2C 003A5B  
                                      _RD0I2C 003A7A                                        _U1CON0 003DF2  
                                      _U1CON1 003DF3                                        _U1CON2 003DF4  
                                      _RC3I2C 003A6A                                        _RD1I2C 003A7B  
                                      _T3GATE 003FA8                                        _RC4I2C 003A6B  
                                      _U1BRGH 003DF6                                        _U1FIFO 003DF7  
                                      _T3GCON 003FA7                                        _U1BRGL 003DF5  
                                      _T5GATE 003F9C                                        _T5GCON 003F9B  
                                      _RA0PPS 003A00                                        _RA1PPS 003A01  
                                      _RA3PPS 003A03                                        _RA4PPS 003A04  
                                      _RB3PPS 003A0B                                        _T5GPPS 003AC9  
                                      i1l1238 27D2                                        _ODCONA 003A42  
                                      _ODCONB 003A52                                        _ODCONC 003A62  
                                      _ODCOND 003A72                                        _ODCONE 003A82  
                                      i1l5033 21BA                                        i1l5035 21CE  
                     __end_of_PWM5_Initialize 2738                       __end_of_TMR3_Initialize 2264  
                                      i1l5061 2288                                        i1l5037 21F6  
                                      i1l5063 228C                                        i1l5039 220A  
                                      i1l5057 226A                                        i1l5059 226E  
                                      i1l4617 27C8                                        i1l3941 25B6  
                                      i1l3943 25C8                                        i1l3945 25CA  
                                      i1l4921 2190                                        i1l4851 27CE  
                                      i1l3947 25DA                                        i1l4931 1C8C  
                                      i1l4923 21A0                                        i1l4915 216A  
                                      i1l3949 25DE                                        i1l4941 1CF0  
                                      i1l4933 1C9C                                        i1l4925 21A4  
                                      i1l4917 217C                                        i1l4943 1D0C  
                                      i1l4935 1CB6                                        i1l4927 1C6C  
                                      i1l4919 218E                                        i2l5041 229C  
                                      i1l4945 1D2C                                        i1l4937 1CC6  
                                      i1l4929 1C7C                                        i2l5051 23E0  
                                      i2l5043 22AC                                        i1l4939 1CD6  
                                      i2l5053 23F4                                        i2l5045 22D4  
                                      i2l5071 2144                                        i2l5047 22E4  
                                      i2l5081 201A                                        i2l5073 2156  
                                      i2l5065 2120                                        i2l5049 23DC  
                                      i1l4985 2472                                        i2l5083 202C  
                                      i2l5075 1FEC                                        i2l5067 2124  
                                      i1l4987 2486                                        i2l5085 2610  
                                      i2l5077 1FF0                                        i2l5069 2134  
                                      i2l4621 266A                                        i2l5087 2614  
                                      i2l5079 200A                                        i2l4623 2676  
                                      _INLVLA 003A44                                        _INLVLB 003A54  
                                      i2l4619 265C                                        i2l4627 2760  
                                      _INLVLC 003A64                                        _INLVLD 003A74  
                                      _INLVLE 003A84                                        i2l3961 25F2  
                                      i2l3963 25F6                                        i2l3965 25FC  
                                      i2l3957 25E2                                        i2l3959 25F0  
                                      i2l3967 2602                                        i2l4951 24BC  
                                      i2l3969 2606                                        i2l4961 24FA  
                                      i2l4953 24CA                                        i2l4963 26BC  
                                      i2l4955 24D2                                        i2l4947 24A2  
                                      i2l4965 26C8                                        i2l4957 24E0  
                                      i2l4949 24B0                                        i2l4967 26CE  
                                      i2l4959 24EC                                        i2l4969 26D2  
                                ?_setSteering 001C                                        _OSCFRQ 0039DF  
                            __end_of_actSpeed 1F30                                        _SMT1PR 003F1B  
                       _UART1_SetErrorHandler 2796                              __end_of___xxtofl 1186  
                         ?_PWM8_LoadDutyValue 0014                              __end_of_getCurve 0BEC  
                    __end_of_CCP3_SetCallBack 27C8                                  _CCPTMRS0bits 003F5E  
                                _CCPTMRS1bits 003F5F                                        ___flge 18C0  
                                   ??___aldiv 001C                                     ??___fladd 0036  
                                   ??___awdiv 0018                                     ??___flmul 0032  
                                   ??___fltol 00BA                                 _CCP3_CallBack 00D1  
                                ?_TMR5_Reload 0001                       __end_of_PWM6_Initialize 2720  
                     __end_of_TMR4_Initialize 258A                                        clear_0 1F66  
                                      clear_1 1F72                              ___awdiv@quotient 001A  
                                      _motPow 008C                       fp__CCP3_DefaultCallBack 0000  
                                      isa$std 000001                                 _CCP4_CallBack 00CF  
                                      _smtWay 0078                              ?_CCP3_Initialize 0001  
                        ??_PWM8_LoadDutyValue 0016                              __end_of_setMotor 1BA2  
                             _ADCC_Initialize 1F8E          __end_of_TMR4_DefaultInterruptHandler 27DC  
       __size_of_TMR4_DefaultInterruptHandler 0002                  _TMR4_DefaultInterruptHandler 27DA  
                              _PMD_Initialize 2638                                  __pdataCOMRAM 004C  
                       __end_of_TMR5_GATE_ISR 2410                                        tblptrh 003FF7  
                                      tblptrl 003FF6                                        tblptru 003FF8  
           __size_of_ADCC_GetSingleConversion 0032                     ?_ADCC_GetSingleConversion 0014  
    TMR4_SetInterruptHandler@InterruptHandler 0014  TMR5_SetGateInterruptHandler@InterruptHandler 0014  
 UART1_SetTxInterruptHandler@InterruptHandler 0014   UART1_SetRxInterruptHandler@InterruptHandler 0014  
        __end_of_UART1_SetOverrunErrorHandler 278C         __size_of_UART1_SetOverrunErrorHandler 000A  
                _UART1_SetOverrunErrorHandler 2782                     _UART1_DefaultErrorHandler 27C8  
               __size_of_INTERRUPT_Initialize 004C                  __size_of_UART1_RxDataHandler 002C  
                           getCurve@deltaLeft 0018                                    ___flge@ff1 002A  
                                  ___flge@ff2 002E                       __end_of_PWM7_Initialize 2708  
                     __end_of_TMR5_Initialize 2120                                  ___xxtofl@arg 0026  
                                ___xxtofl@exp 0025                             _SYSTEM_Initialize 208C  
                                ___xxtofl@val 001C                                    __accesstop 0060  
                     __end_of__initialization 1F84                              ?_CCP4_Initialize 0001  
                         setSteering@steering 001C                            ?_SYSTEM_Initialize 0001  
                               ___rparam_used 000001                    __size_of_UART1_rx_vect_isr 003C  
                                  ___fltol@f1 00B6                               _TMR5_WriteTimer 25E2  
                          __size_of_calcSpeed 0212                     calcMotorPow@setSpeedDelta 00C2  
                    __end_of_CCP4_SetCallBack 27BE                                __pcstackCOMRAM 0001  
                       __end_of_TMR4_CallBack 24A2                                  __pidataBANK0 27D4  
                                ?_startAccell 0001                           ??_SYSTEM_Initialize 0018  
                                   ?_TMR4_ISR 0001                               startAccell@MPow 00C0  
                              ivt0x8_undefint 00AC                               fp__TMR4_10msISR 0000  
                            ?_TMR2_Initialize 0001                       __end_of_PWM8_Initialize 26F0  
                      __end_of_PMD_Initialize 265C                   __size_of_PWM7_LoadDutyValue 0034  
                       CCP3_CaptureISR@module 0003                    __size_of_UART1_tx_vect_isr 003C  
              CCP3_SetCallBack@customCallBack 0014                     _UART1_FramingErrorHandler 00D7  
             fp__TMR4_DefaultInterruptHandler 0000                 ?_TMR4_DefaultInterruptHandler 0001  
                     fp__CCP4_DefaultCallBack 0000                      __size_of_SMT1_PR_ACQ_ISR 004A  
                           _calcSteering$3897 0027                     __end_of_SYSTEM_Initialize 20D6  
                             _CLC3_Initialize 258A                   PWM7_LoadDutyValue@dutyValue 0014  
                                  __pbssBANK0 0060                 ?_UART1_SetOverrunErrorHandler 0014  
                      ?_UART1_SetErrorHandler 0014                              ?_PWM5_Initialize 0001  
                            ?_TMR3_Initialize 0001                      __size_of_SMT1_PW_ACQ_ISR 0054  
                       _TMR4_InterruptHandler 00C7                                       IVTBASEH 003FD6  
                                     IVTBASEL 003FD5                                       IVTBASEU 003FD7  
                                     ?___flge 002A                                    ??_TMR4_ISR 0013  
                     __end_of_ADCC_Initialize 1FEA                    __end_of_PWM6_LoadDutyValue 233E  
        __end_of_TMR5_SetGateInterruptHandler 27AA         __size_of_TMR5_SetGateInterruptHandler 000A  
                _TMR5_SetGateInterruptHandler 27A0                                       _CCP3CAP 003F77  
                                     _CCP4CAP 003F73                                       _CCP3CON 003F76  
                                     _CCP4CON 003F72                                       _ADFLTRH 003EE7  
                                     _ADFLTRL 003EE6                 __size_of_CCP3_DefaultCallBack 0030  
                                     _CCP3PPS 003ACF                                       _CCP4PPS 003AD0  
                                     _CLC3CON 003C60                                       _CLC3POL 003C61  
                                     _ADPREVH 003EEE                                       _ADPREVL 003EED  
                            ?_PWM6_Initialize 0001                              ?_TMR4_Initialize 0001  
                                     _ADSTPTH 003EE5                                       _ADSTPTL 003EE4  
                             ?_PMD_Initialize 0001                             _UART1_Receive_ISR 1C6C  
                                  _getReverse 19C4                                       _U1ERRIE 003DFA  
                                   ?_actSpeed 0022                                       _U1ERRIR 003DF9  
                               ?_TMR4_10msISR 0001                                  ?_Default_ISR 0001  
                          ?_UART1_Receive_ISR 0001                                       _U1RXPPS 003AE5  
                                   ?___xxtofl 001C                            _PWM5_LoadDutyValue 233E  
                                  _distRightM 0094                       __size_of_TMR5_ReadTimer 0024  
                                     _OSCCON1 0039D9                                       _OSCCON3 0039DB  
                           __end_of_calcSpeed 0DFE                                       _IVTLOCK 003FD4  
                                     _SMT1CLK 003F21                                       _OSCTUNE 0039DE  
                                     _SMT1CPR 003F15                                       _SMT1CPW 003F18  
                                     _PWM5DCH 003F6D                                       _PWM5DCL 003F6C  
                                     _PWM6DCH 003F69                                       _PWM6DCL 003F68  
                                     _PWM7DCH 003F65                                       _PWM7DCL 003F64  
                                     _SMT1SIG 003F22                                       _PWM8DCH 003F61  
                                     _PWM5CON 003F6E                                       _PWM8DCL 003F60  
                                     _SMT1PRH 003F1C                                       _PWM6CON 003F6A  
                                     _SMT1PRL 003F1B                                       _PWM7CON 003F66  
                                     _SMT1PRU 003F1D                                     ?_getCurve 0001  
                                     _SMT1WIN 003F23                                       _SMT1TMR 003F12  
                                     _PWM8CON 003F62                                       _SLRCONA 003A43  
                                     _SLRCONB 003A53                                       _SLRCONC 003A63  
                                     _SLRCOND 003A73                                       _SLRCONE 003A83  
                         ??_UART1_Receive_ISR 0012                       __end_of_TMR5_WriteTimer 260E  
                         ?_PWM5_LoadDutyValue 0014                              ?_PWM7_Initialize 0001  
                            ?_TMR5_Initialize 0001                     INTERRUPT_Initialize@state 0014  
                        __size_of_setSteering 01A4                                     _CLCIN0PPS 003AD9  
                                   _CLCIN2PPS 003ADB                                     _CLCIN3PPS 003ADC  
                                     __Hparam 0000                                     ?_setMotor 0018  
                                     __Lparam 0000                      __end_of_UART1_Initialize 1E9C  
                                     ___aldiv 16AC                               __size_of___flge 0104  
                                     ___fladd 00B2                                       ___awdiv 1D32  
                                     ___flmul 0574                                       ___fltol 17B8  
                   __end_of_UART1_Receive_ISR 1D32                          ??_PWM5_LoadDutyValue 0016  
                                     __pcinit 1F30                     _TMR5_GateInterruptHandler 00CB  
                            ?_PWM8_Initialize 0001                                       __ramtop 1000  
                 __size_of_UART1_Transmit_ISR 0048                 ?_TMR5_SetGateInterruptHandler 0014  
                                     __ptext0 2680                                       __ptext1 15A0  
                                     __ptext2 146E                                       __ptext3 0DFE  
                                     __ptext4 1186                                       __ptext5 230A  
                                     __ptext6 233E                                       __ptext7 18C0  
                                     __ptext8 19C4                                       __ptext9 09C4  
                              ??_TMR4_10msISR 0013                          __size_of_TMR5_Reload 000E  
                                  ??_actSpeed 0024                       __end_of_CLC3_Initialize 25B6  
                       _OSCILLATOR_Initialize 2738                                     _T2CONbits 003FAC  
                                  ??___xxtofl 0020                                     _T3CONbits 003FA6  
               __size_of_CCP4_DefaultCallBack 0030                              ___aldiv@dividend 0014  
                                   _T4CONbits 003FA0                      ??_PIN_MANAGER_Initialize 0014  
           __size_of_TMR4_SetInterruptHandler 000A                                     _T2HLTbits 003FAD  
                                   _T5CONbits 003F9A                     ?_TMR4_SetInterruptHandler 0014  
                                   _IPR10bits 00398A                                       _smtDuty 007C  
                                   _T4HLTbits 003FA1                                    ??_getCurve 0014  
                                   _PIE10bits 00399A                    __size_of_SYSTEM_Initialize 004A  
                        end_of_initialization 1F84                                     _T2RSTbits 003FAF  
              ??_TMR4_DefaultInterruptHandler 0013                                     _T4RSTbits 003FA3  
                                   _PIR10bits 0039AA                             ??_SMT1_PR_ACQ_ISR 0011  
                               __Lmediumconst 0000           __end_of_UART1_SetTxInterruptHandler 2778  
                 _UART1_SetTxInterruptHandler 276E                ??_UART1_SetOverrunErrorHandler 0016  
                                  ??_setMotor 001A                      __size_of_SMT1_Initialize 0030  
                           ?_CCP3_SetCallBack 0014                              ___aldiv@quotient 001E  
                           ??_SMT1_PW_ACQ_ISR 0011                                       postinc0 003FEE  
                            ?_ADCC_Initialize 0001                            ??_CCP3_SetCallBack 0016  
            __end_of_ADCC_GetSingleConversion 2442                           _UART1_RxDataHandler 25B6  
                        __size_of_startAccell 0132                                   ?_getReverse 0001  
                                   _PORTBbits 003FCB                                     _PORTDbits 003FCD  
                    __size_of_CCP3_CaptureISR 0036                                   ___fladd@grs 00B5  
                          getCurve@deltaRight 0016                                 ___xxtofl@sign 0024  
                        ?_UART1_RxDataHandler 0001                              ?_TMR5_WriteTimer 0009  
                        setSteering@steeringB 0023                          setSteering@steeringF 0021  
                     TMR5_WriteTimer@timerVal 0009                                   ___flmul@grs 009F  
                    __size_of_CCP4_CaptureISR 0036             CCP4_DefaultCallBack@capturedValue 0005  
                           ?_CCP4_SetCallBack 0014                  __end_of_INTERRUPT_Initialize 208C  
                              __end_of___flge 19C4                    __size_of_UART1_Receive_ISR 00C6  
                          ??_CCP4_SetCallBack 0016                                   _CLC3CONbits 003C60  
                               __pidataCOMRAM 27DE                             __size_of_TMR4_ISR 0038  
                      ?_OSCILLATOR_Initialize 0001                   __size_of_PWM8_LoadDutyValue 0034  
                            ?_CLC3_Initialize 0001                                _TMR5_ReadTimer 265C  
                         start_initialization 1F30                ??_TMR5_SetGateInterruptHandler 0016  
             __size_of_PIN_MANAGER_Initialize 00CA                          __size_of_Default_ISR 0002  
                     ??_UART1_SetErrorHandler 0016                      __size_of_CCP3_Initialize 002E  
                       ??_UART1_RxDataHandler 0012                                    ivt0x8_base 0008  
                               _uart1RxBuffer 0068                                   _actMotorPow 0084  
                               _uart1TxBuffer 0070                           __size_of_getReverse 00FC  
                        __end_of_TMR4_10msISR 27D4                                  _middleOffSet 00DE  
                                    ??___flge 0032                              ??_PMD_Initialize 0014  
                      __size_of_TMR5_GATE_ISR 0034                                  _oldDistRight 0090  
                    __size_of_CCP4_Initialize 002E                                   __pdataBANK0 00DE  
                  __end_of_PWM7_LoadDutyValue 23DA                             ??_SMT1_Initialize 0014  
                      __end_of_TMR5_ReadTimer 2680                         CCP4_CaptureISR@module 0007  
                                   ___fladd@a 00AE                                     ___fladd@b 00AA  
                         calcMotorPow@addMPow 00C6                      _ADCC_GetSingleConversion 2410  
                 PWM5_LoadDutyValue@dutyValue 0014                         TMR4_ISR@CountCallBack 003C  
                                   ___flmul@a 002E                                     ___flmul@b 002A  
                                 __pbssCOMRAM 003A                            _UART1_ErrorHandler 00D3  
                               __pcstackBANK0 009D                             __size_of_actSpeed 0094  
                          _PWM6_LoadDutyValue 230A                      __size_of_TMR2_Initialize 001C  
                           __size_of___xxtofl 01B4                      _UART1_RxInterruptHandler 00DB  
                           ??_CCP3_CaptureISR 0003                  __end_of_CCP3_DefaultCallBack 24D2  
                      __size_of_TMR4_CallBack 0030                                     _calcSpeed 0BEC  
                           __size_of_getCurve 0228                           ?_PWM6_LoadDutyValue 0014  
                 PWM8_LoadDutyValue@dutyValue 0014                  fp__UART1_DefaultErrorHandler 0000  
                                _currentSpeed 0088                  ?_UART1_SetRxInterruptHandler 0014  
                                   __pnvBANK0 00C7                            setMotor@motorPower 0018  
                      _PIN_MANAGER_Initialize 1BA2                      __size_of_PWM5_Initialize 0018  
                    __size_of_TMR3_Initialize 0038                             ?_UART1_Initialize 0001  
        __end_of_UART1_SetFramingErrorHandler 2796         __size_of_UART1_SetFramingErrorHandler 000A  
                _UART1_SetFramingErrorHandler 278C                                      ?___aldiv 0014  
             ADCC_GetSingleConversion@channel 0018                                      ?___fladd 00AA  
                           __size_of_setMotor 00E2              __end_of_TMR4_SetInterruptHandler 27B4  
                                    ?___awdiv 0014             CCP3_DefaultCallBack@capturedValue 0001  
                           ??_CCP4_CaptureISR 0007                                      ?___flmul 002A  
                                    ?___fltol 00B6                            ??_UART1_Initialize 0016  
                                   _distLeftM 0098                                     _distFront 004A  
                            _uart1RxLastError 0040                                     _distRight 0096  
                        ??_PWM6_LoadDutyValue 0016                                     _cycle10ms 009C  
                             ?_TMR5_ReadTimer 0009                                 ?_calcMotorPow 0001  
                                    _CLC3GLS0 003C66                                      _CLC3GLS1 003C67  
                                    _CLC3GLS2 003C68                                      _CLC3GLS3 003C69  
                                   _driveMode 004C           fp__UART1_DefaultOverrunErrorHandler 0000  
    __end_of_UART1_DefaultOverrunErrorHandler 27D8     __size_of_UART1_DefaultOverrunErrorHandler 0002  
          ??_UART1_DefaultOverrunErrorHandler 0012             ?_UART1_DefaultOverrunErrorHandler 0001  
            _UART1_DefaultOverrunErrorHandler 27D6                                      _CLC3SEL0 003C62  
                                    _CLC3SEL1 003C63                                      _CLC3SEL2 003C64  
                                    _CLC3SEL3 003C65                               _SMT1_PR_ACQ_ISR 2120  
                               ?_calcSteering 0001                      __size_of_PWM6_Initialize 0018  
                    __size_of_TMR4_Initialize 002C                                 _TMR5_GATE_ISR 23DC  
                                   _curveMode 003F                                      _T2CLKCON 003FAE  
                                 _U1ERRIRbits 003DF9                                      _T4CLKCON 003FA2  
                                  ?_calcSpeed 0001                          _INTERRUPT_Initialize 2040  
                               ??_setSteering 001F                               ___aldiv@divisor 0018  
                             _SMT1_PW_ACQ_ISR 1FEC                               ___aldiv@counter 001C  
       UART1_SetErrorHandler@interruptHandler 0014                                      _IPR1bits 003981  
                __end_of_CCP4_DefaultCallBack 2502                             ??_CCP3_Initialize 0016  
                                    _IPR3bits 003983                                      _PIE1bits 003991  
                                    _PIE3bits 003993                                      _IPR7bits 003987  
                                    _IPR8bits 003988                                      _IPR9bits 003989  
                                    _PIE7bits 003997                                      _PIE8bits 003998  
                                    _PIE9bits 003999                                      i1u212_20 25DA  
                                    i1u212_21 25D6                                      _IVTBASEH 003FD6  
                                    _IVTBASEL 003FD5                                      _IVTBASEU 003FD7  
                                    i1u350_20 21A0                                      i1u350_21 219C  
                                    i1u351_20 1C8C                                      i1u351_21 1C88  
                                    i1u360_20 2486                                      i1u360_21 2482  
                                    i1u353_20 1CC6                                      i1u352_28 1CA2  
                                    i1u353_21 1CC2                                      i1u352_29 1CB6  
                                    i1u361_28 248C                                      i1u361_29 24A0  
                                    i1u355_20 1D0C                                      i1u354_28 1CDC  
                                    i1u370_28 2210                                      i1u355_21 1D08  
                                    i1u354_29 1CF0                                      i1u370_29 2224  
               ??_UART1_SetRxInterruptHandler 0016                                      i1u356_28 1D12  
                                    i1u349_20 217C                                      i1u356_29 1D28  
                                    i1u349_21 2178                                      i2u213_40 25F0  
                                    i2u213_41 25EC                                      i1u375_20 2288  
                                    i1u367_20 21CE                                      i1u375_21 2284  
                                    i1u367_21 21CA                                      i1u369_20 220A  
                                    i1u368_28 21D4                                      i1u369_21 2206  
                                    i1u368_29 21E8                                      _PIR1bits 0039A1  
                                    i2u371_48 22BA                                      i2u371_49 22D0  
                                    i2u373_40 23F4                                      i2u372_48 22F2  
                                    i2u357_40 24B0                                      i2u373_41 23F0  
                                    i2u372_49 2308                                      i2u357_41 24AC  
                                    i2u358_40 24E0                                      i2u358_41 24DC  
                                    i2u374_48 23FA                                      i2u374_49 240E  
                                    _PIR4bits 0039A4                                      i2u376_40 2144  
                                    i2u376_41 2140                                      i2u377_40 201A  
                                    i2u377_41 2016                                      _PIR6bits 0039A6  
                                    _PIR7bits 0039A7                                      _PIR8bits 0039A8  
                                    _PIR9bits 0039A9                                      _SMT1CON0 003F1E  
                                    _SMT1CON1 003F1F                      __size_of_PWM7_Initialize 0018  
                    __size_of_TMR5_Initialize 004A                                      _SMT1STAT 003F20  
                           _SMT1_Overflow_ISR 2610                                      _TMR4_ISR 2264  
                  __end_of_UART1_Transmit_ISR 21B2                                 _TMR4_CallBack 2472  
                                   _smtPeriod 0046                 ?_UART1_SetFramingErrorHandler 0014  
                               ??_TMR5_Reload 000B                   __size_of_PWM5_LoadDutyValue 0034  
                          ?_SMT1_Overflow_ISR 0001                             _getBatteryVoltage 2750  
                                ??_getReverse 0014                                ??_calcMotorPow 00C0  
                                  _ADCON0bits 003EF8                                    _ADCON1bits 003EF9  
                                  _ADCON2bits 003EFA                                    _ADCON3bits 003EFB  
                          ?_getBatteryVoltage 0001                             ??_CCP4_Initialize 0016  
                              ??_calcSteering 0025                           ??_SMT1_Overflow_ISR 0011  
                   TMR5_ReadTimer@readValHigh 000F                     __size_of_CCP3_SetCallBack 000A  
                              ?_TMR5_GATE_ISR 0001                      __size_of_PWM8_Initialize 0018  
                                _SMT1CON0bits 003F1E                                  _SMT1CON1bits 003F1F  
                         ??_getBatteryVoltage 0019                                   _INTCON0bits 003FD2  
                       ?_INTERRUPT_Initialize 0001                         __size_of_TMR4_10msISR 0006  
                        fp__UART1_Receive_ISR 0000                        _uart1TxBufferRemaining 00DD  
                           ??_TMR2_Initialize 0014                                  _uart1RxCount 0041  
                          __end_of_getReverse 1AC0                                    _ADSTATbits 003EFC  
                                    __Hrparam 0000                     __end_of_SMT1_Overflow_ISR 2638  
                         __end_of_setSteering 132A                                      __Lrparam 0000  
                                 _oldDistLeft 003A                                 ??_startAccell 003A  
                              ?_TMR4_CallBack 0001                                calcSpeed@speed 00C4  
                   __end_of_getBatteryVoltage 2760                       ??_OSCILLATOR_Initialize 0014  
                            __size_of___aldiv 010C                              __size_of___fladd 04C2  
                            __size_of___awdiv 00C4                              __size_of___flmul 0450  
                            __size_of___fltol 0108                                  _SMT1STATbits 003F20  
                        _CCP3_DefaultCallBack 24A2                       __end_of_SMT1_PR_ACQ_ISR 216A  
                           ??_PWM5_Initialize 0014                             ??_TMR3_Initialize 0014  
                    _TMR4_SetInterruptHandler 27AA                                      _actSpeed 1E9C  
        __size_of_UART1_SetRxInterruptHandler 000A                                  _TMR4_10msISR 27CE  
                                    ___xxtofl 0FD2                      __size_of_ADCC_Initialize 005C  
                         __end_of_TMR5_Reload 276E                     __size_of_CCP4_SetCallBack 000A  
                                    __pivt0x8 0008                       __end_of_SMT1_PW_ACQ_ISR 2040  
                                    _getCurve 09C4                                      __ptext10 2750  
                                    __ptext11 2410                                      __ptext20 0FD2  
                                    __ptext12 0BEC                                      __ptext21 17B8  
                                    __ptext13 00B2                                      __ptext30 2796  
                                    __ptext22 0574                                      __ptext14 132A  
                                    __ptext31 20D6                                      __ptext23 1D32  
                                    __ptext15 1AC0                                      __ptext40 2708  
                                    __ptext32 27A0                                      __ptext24 208C  
                                    __ptext16 2372                                      __ptext41 2720  
                                    __ptext33 255E                                      __ptext25 1DF6  
                                    __ptext17 23A6                                      __ptext50 27BE  
                                    __ptext42 2638                                      __ptext34 27AA  
                                    __ptext26 276E                                      __ptext18 1E9C  
                                    __ptext51 1F8E                                      __ptext43 1BA2  
                                    __ptext35 222C                                      __ptext27 2778  
                                    __ptext19 16AC                                      __ptext60 2264  
                                    __ptext52 21B4                                      __ptext44 2738  
                                    __ptext36 26A0                                      __ptext28 2782  
                                    __ptext61 2472                                      __ptext53 216A  
                                    __ptext45 2040                                      __ptext37 2442  
                                    __ptext29 278C                                      __ptext70 26BC  
                                    __ptext62 27CE                                      __ptext54 21F0  
                                    __ptext46 258A                                      __ptext38 26D8  
                                    __ptext71 2760                                      __ptext63 27DA  
                                    __ptext55 1C6C                                      __ptext47 2502  
                                    __ptext39 26F0                                      __ptext72 25E2  
                                    __ptext64 27DC                                      __ptext56 27D6  
                                    __ptext48 27B4                                      __ptext73 265C  
                                    __ptext65 229C                                      __ptext57 27D8  
                                    __ptext49 2530                                      __ptext74 2120  
                                    __ptext66 24A2                                      __ptext58 27C8  
                                    __ptext75 1FEC                                      __ptext67 22D4  
                                    __ptext59 25B6                                      __ptext76 2610  
                                    __ptext68 24D2                                      __ptext77 0000  
                                    __ptext69 23DC                                      _distLeft 009A  
              __size_of_UART1_SetErrorHandler 000A                                   ??_calcSpeed 00C0  
               __end_of_UART1_SetErrorHandler 27A0                                    _T3GCONbits 003FA7  
                           ??_TMR4_Initialize 0016                             ??_PWM6_Initialize 0014  
                               __size_of_main 0020                                      _oldSpeed 0086  
                                  _T5GCONbits 003F9B                                 __size_of_loop 010C  
                             _SMT1_Initialize 2442                                   _IVTLOCKbits 003FD4  
                                    _setMotor 1AC0                                      _setSpeed 008A  
                    __size_of_TMR5_WriteTimer 002C                     _UART1_OverrunErrorHandler 00D5  
UART1_SetOverrunErrorHandler@interruptHandler 0014                                      isa$xinst 000000  
          __size_of_UART1_DefaultErrorHandler 0006                    ??_ADCC_GetSingleConversion 0016  
                  ?_UART1_DefaultErrorHandler 0001                         ?_CCP3_DefaultCallBack 0001  
                  __end_of_PWM8_LoadDutyValue 23A6                               _CCP3_CaptureISR 229C  
                       fp__UART1_Transmit_ISR 0000                             ??_TMR5_Initialize 0016  
                           ??_PWM7_Initialize 0014           fp__TMR5_DefaultGateInterruptHandler 0000  
    __end_of_TMR5_DefaultGateInterruptHandler 26D8     __size_of_TMR5_DefaultGateInterruptHandler 001C  
          ??_TMR5_DefaultGateInterruptHandler 0011             ?_TMR5_DefaultGateInterruptHandler 0001  
            _TMR5_DefaultGateInterruptHandler 26BC                           __end_of_startAccell 15A0  
                              _battCheckCount 008E                                 ??_Default_ISR 0001  
              ??_UART1_SetFramingErrorHandler 0016                                  _reverseCount 0092  
                             ??_TMR5_GATE_ISR 0011                   __end_of_UART1_RxDataHandler 25E2  
                                 _uart1RxHead 0043                          _CCP4_DefaultCallBack 24D2  
                                 _uart1TxHead 0045                                   _uart1RxTail 0042  
                                 _uart1TxTail 0044                        ??_INTERRUPT_Initialize 0014  
                          _PWM7_LoadDutyValue 23A6                                      intlevel1 0000  
                                    intlevel2 0000                      __size_of_CLC3_Initialize 002C  
                                 _setSteering 1186                               _CCP4_CaptureISR 22D4  
                     ?_PIN_MANAGER_Initialize 0001                             ??_PWM8_Initialize 0014  
                         ?_PWM7_LoadDutyValue 0014                          __end_of_calcMotorPow 146E  
                             ??_TMR4_CallBack 0013                    __size_of_SMT1_Overflow_ISR 0028  
                        __end_of_calcSteering 0FD2                           _uart1RxStatusBuffer 0060  
                            ??_TMR5_ReadTimer 000B                    __size_of_getBatteryVoltage 0010  
UART1_SetFramingErrorHandler@interruptHandler 0014             __end_of_UART1_DefaultErrorHandler 27CE  
                                 _reverseTime 0082                              ?_SMT1_PR_ACQ_ISR 0001  
                                 _TMR5_Reload 2760                                    _SMT1SIGPPS 003AD2  
                                  _SMT1WINPPS 003AD1                          ??_PWM7_LoadDutyValue 0016  
                               actSpeed@speed 0024                         ?_CCP4_DefaultCallBack 0005  
                   calcMotorPow@oldSpeedDelta 00C4                              _CCP3_SetCallBack 27BE  
                   __size_of_UART1_Initialize 00A6                                  ___aldiv@sign 001D  
                            ?_SMT1_PW_ACQ_ISR 0001                               _CCP3_Initialize 2530  
                 PWM6_LoadDutyValue@dutyValue 0014                             calcSteering@delta 0029  
                    _UART1_TxInterruptHandler 00D9                                 ___fladd@signs 00B2  
                         __end_of_Default_ISR 27DE                       __end_of_SMT1_Initialize 2472  
              __end_of_PIN_MANAGER_Initialize 1C6C                             ??_ADCC_Initialize 0014  
                                ___fladd@aexp 00B3                                  ___fladd@bexp 00B4  
                ?_UART1_SetTxInterruptHandler 0014                       __end_of_CCP3_CaptureISR 22D2  
