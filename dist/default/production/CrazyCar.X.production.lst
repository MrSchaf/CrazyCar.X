

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Jan 30 09:21:54 2024

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F46K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1
    79                           	psect	text64,global,reloc=2,class=CODE,delta=1
    80                           	psect	text65,global,reloc=2,class=CODE,delta=1
    81                           	psect	text66,global,reloc=2,class=CODE,delta=1
    82                           	psect	text67,global,reloc=2,class=CODE,delta=1
    83                           	psect	text68,global,reloc=2,class=CODE,delta=1
    84                           	psect	text69,global,reloc=2,class=CODE,delta=1
    85                           	psect	text70,global,reloc=2,class=CODE,delta=1
    86                           	psect	text71,global,reloc=2,class=CODE,delta=1
    87                           	psect	text72,global,reloc=2,class=CODE,delta=1
    88                           	psect	text73,global,reloc=2,class=CODE,delta=1
    89                           	psect	text74,global,reloc=2,class=CODE,delta=1
    90                           	psect	text75,global,reloc=2,class=CODE,delta=1
    91                           	psect	text76,global,reloc=2,class=CODE,delta=1
    92                           	psect	text77,global,reloc=2,class=CODE,delta=1
    93                           	psect	text78,global,reloc=2,class=CODE,delta=1
    94                           	psect	text79,global,reloc=2,class=CODE,delta=1
    95                           	psect	text80,global,reloc=2,class=CODE,delta=1
    96                           	psect	text81,global,reloc=2,class=CODE,delta=1
    97                           	psect	text82,global,reloc=2,class=CODE,delta=1
    98                           	psect	text83,global,reloc=4,class=CODE,delta=1
    99                           	psect	text84,global,reloc=2,class=CODE,delta=1
   100                           	psect	text85,global,reloc=4,class=CODE,delta=1
   101                           	psect	text86,global,reloc=2,class=CODE,delta=1
   102                           	psect	text87,global,reloc=2,class=CODE,delta=1
   103                           	psect	text88,global,reloc=2,class=CODE,delta=1
   104                           	psect	text89,global,reloc=2,class=CODE,delta=1
   105                           	psect	text90,global,reloc=2,class=CODE,delta=1
   106                           	psect	text91,global,reloc=4,class=CODE,delta=1
   107                           	psect	text92,global,reloc=2,class=CODE,delta=1
   108                           	psect	text93,global,reloc=2,class=CODE,delta=1
   109                           	psect	text94,global,reloc=2,class=CODE,delta=1
   110                           	psect	text95,global,reloc=4,class=CODE,delta=1
   111                           	psect	text96,global,reloc=4,class=CODE,delta=1
   112                           	psect	text97,global,reloc=2,class=CODE,delta=1
   113                           	psect	text98,global,reloc=4,class=CODE,delta=1
   114                           	psect	text99,global,reloc=2,class=CODE,delta=1
   115                           	psect	text100,global,reloc=4,class=CODE,delta=1
   116                           	psect	text101,global,reloc=2,class=CODE,delta=1
   117                           	psect	text102,global,reloc=2,class=CODE,delta=1
   118                           	psect	text103,global,reloc=2,class=CODE,delta=1
   119                           	psect	text104,global,reloc=2,class=CODE,delta=1
   120                           	psect	text105,global,reloc=4,class=CODE,delta=1
   121                           	psect	text106,global,reloc=4,class=CODE,delta=1
   122                           	psect	text107,global,reloc=4,class=CODE,delta=1
   123                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   124                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   125                           	psect	text108,global,reloc=4,class=CODE,delta=1
   126                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   127                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   128                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   129  0000                     
   130                           ; Version 2.20
   131                           ; Generated 05/05/2020 GMT
   132                           ; 
   133                           ; Copyright © 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   134                           ; All rights reserved.
   135                           ; 
   136                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   137                           ; 
   138                           ; Redistribution and use in source and binary forms, with or without modification, are
   139                           ; permitted provided that the following conditions are met:
   140                           ; 
   141                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   142                           ;        conditions and the following disclaimer.
   143                           ; 
   144                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   145                           ;        of conditions and the following disclaimer in the documentation and/or other
   146                           ;        materials provided with the distribution.
   147                           ; 
   148                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   149                           ;        software without specific prior written permission.
   150                           ; 
   151                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   152                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   153                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   154                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   155                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   156                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   157                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   158                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   159                           ; 
   160                           ; 
   161                           ; Code-generator required, PIC18F46K42 Definitions
   162                           ; 
   163                           ; SFR Addresses
   164  0000                     
   165                           	psect	nvCOMRAM
   166  00004C                     __pnvCOMRAM:
   167                           	callstack 0
   168  00004C                     _uart1TxBufferRemaining:
   169                           	callstack 0
   170  00004C                     	ds	1
   171                           
   172                           	psect	nvBANK1
   173  00018E                     __pnvBANK1:
   174                           	callstack 0
   175  00018E                     _TMR4_InterruptHandler:
   176                           	callstack 0
   177  00018E                     	ds	2
   178  000190                     _timer3ReloadVal:
   179                           	callstack 0
   180  000190                     	ds	2
   181  000192                     _TMR5_GateInterruptHandler:
   182                           	callstack 0
   183  000192                     	ds	2
   184  000194                     _timer5ReloadVal:
   185                           	callstack 0
   186  000194                     	ds	2
   187  000196                     _CCP4_CallBack:
   188                           	callstack 0
   189  000196                     	ds	2
   190  000198                     _CCP3_CallBack:
   191                           	callstack 0
   192  000198                     	ds	2
   193  00019A                     _UART1_ErrorHandler:
   194                           	callstack 0
   195  00019A                     	ds	2
   196  00019C                     _UART1_OverrunErrorHandler:
   197                           	callstack 0
   198  00019C                     	ds	2
   199  00019E                     _UART1_FramingErrorHandler:
   200                           	callstack 0
   201  00019E                     	ds	2
   202  0001A0                     _UART1_TxInterruptHandler:
   203                           	callstack 0
   204  0001A0                     	ds	2
   205  0001A2                     _UART1_RxInterruptHandler:
   206                           	callstack 0
   207  0001A2                     	ds	2
   208  0000                     _PIR4bits	set	14756
   209  0000                     _PIR1bits	set	14753
   210  0000                     _PIE1bits	set	14737
   211  0000                     _PIE7bits	set	14743
   212  0000                     _PIR7bits	set	14759
   213  0000                     _PIR6bits	set	14758
   214  0000                     _PIE8bits	set	14744
   215  0000                     _PIR8bits	set	14760
   216  0000                     _PIE10bits	set	14746
   217  0000                     _PIR10bits	set	14762
   218  0000                     _PIE9bits	set	14745
   219  0000                     _PIR9bits	set	14761
   220  0000                     _IPR9bits	set	14729
   221  0000                     _IPR7bits	set	14727
   222  0000                     _IPR8bits	set	14728
   223  0000                     _IPR10bits	set	14730
   224  0000                     _IPR1bits	set	14721
   225  0000                     _IPR3bits	set	14723
   226  0000                     _PIE3bits	set	14739
   227  0000                     _PMD7	set	14791
   228  0000                     _PMD6	set	14790
   229  0000                     _PMD5	set	14789
   230  0000                     _PMD4	set	14788
   231  0000                     _PMD3	set	14787
   232  0000                     _PMD2	set	14786
   233  0000                     _PMD1	set	14785
   234  0000                     _PMD0	set	14784
   235  0000                     _OSCTUNE	set	14814
   236  0000                     _OSCFRQ	set	14815
   237  0000                     _OSCEN	set	14813
   238  0000                     _OSCCON3	set	14811
   239  0000                     _OSCCON1	set	14809
   240  0000                     _CCP4PPS	set	15056
   241  0000                     _SMT1SIGPPS	set	15058
   242  0000                     _CLCIN2PPS	set	15067
   243  0000                     _RB3PPS	set	14859
   244  0000                     _RA3PPS	set	14851
   245  0000                     _SMT1WINPPS	set	15057
   246  0000                     _CLCIN0PPS	set	15065
   247  0000                     _RA4PPS	set	14852
   248  0000                     _T5GPPS	set	15049
   249  0000                     _RA0PPS	set	14848
   250  0000                     _U1RXPPS	set	15077
   251  0000                     _RA1PPS	set	14849
   252  0000                     _CLCIN3PPS	set	15068
   253  0000                     _CCP3PPS	set	15055
   254  0000                     _INLVLE	set	14980
   255  0000                     _INLVLD	set	14964
   256  0000                     _INLVLC	set	14948
   257  0000                     _INLVLB	set	14932
   258  0000                     _INLVLA	set	14916
   259  0000                     _SLRCONE	set	14979
   260  0000                     _SLRCOND	set	14963
   261  0000                     _SLRCONC	set	14947
   262  0000                     _SLRCONB	set	14931
   263  0000                     _SLRCONA	set	14915
   264  0000                     _ODCOND	set	14962
   265  0000                     _ODCONC	set	14946
   266  0000                     _ODCONB	set	14930
   267  0000                     _ODCONA	set	14914
   268  0000                     _ODCONE	set	14978
   269  0000                     _RD1I2C	set	14971
   270  0000                     _RD0I2C	set	14970
   271  0000                     _RC4I2C	set	14955
   272  0000                     _RC3I2C	set	14954
   273  0000                     _RB2I2C	set	14939
   274  0000                     _RB1I2C	set	14938
   275  0000                     _WPUC	set	14945
   276  0000                     _WPUA	set	14913
   277  0000                     _WPUB	set	14929
   278  0000                     _WPUE	set	14977
   279  0000                     _WPUD	set	14961
   280  0000                     _ANSELA	set	14912
   281  0000                     _ANSELE	set	14976
   282  0000                     _ANSELB	set	14928
   283  0000                     _ANSELC	set	14944
   284  0000                     _ANSELD	set	14960
   285  0000                     _CLC3CON	set	15456
   286  0000                     _CLC3GLS3	set	15465
   287  0000                     _CLC3GLS2	set	15464
   288  0000                     _CLC3GLS1	set	15463
   289  0000                     _CLC3GLS0	set	15462
   290  0000                     _CLC3SEL3	set	15461
   291  0000                     _CLC3SEL2	set	15460
   292  0000                     _CLC3SEL1	set	15459
   293  0000                     _CLC3SEL0	set	15458
   294  0000                     _CLC3POL	set	15457
   295  0000                     _CLC3CONbits	set	15456
   296  0000                     _U1RXB	set	15848
   297  0000                     _U1TXB	set	15850
   298  0000                     _U1ERRIRbits	set	15865
   299  0000                     _U1ERRIE	set	15866
   300  0000                     _U1ERRIR	set	15865
   301  0000                     _U1UIR	set	15864
   302  0000                     _U1FIFO	set	15863
   303  0000                     _U1BRGH	set	15862
   304  0000                     _U1BRGL	set	15861
   305  0000                     _U1CON2	set	15860
   306  0000                     _U1CON1	set	15859
   307  0000                     _U1CON0	set	15858
   308  0000                     _U1P3H	set	15857
   309  0000                     _U1P3L	set	15856
   310  0000                     _U1P2H	set	15855
   311  0000                     _U1P2L	set	15854
   312  0000                     _U1P1H	set	15853
   313  0000                     _U1P1L	set	15852
   314  0000                     _ADCON1bits	set	16121
   315  0000                     _ADERRL	set	16098
   316  0000                     _ADERRH	set	16099
   317  0000                     _ADPREVL	set	16109
   318  0000                     _ADPREVH	set	16110
   319  0000                     _ADFLTRL	set	16102
   320  0000                     _ADFLTRH	set	16103
   321  0000                     _ADSTATbits	set	16124
   322  0000                     _ADACCL	set	16104
   323  0000                     _ADACCH	set	16105
   324  0000                     _ADCON2bits	set	16122
   325  0000                     _ADCNT	set	16107
   326  0000                     _ADCON3bits	set	16123
   327  0000                     _ADRESL	set	16111
   328  0000                     _ADRESH	set	16112
   329  0000                     _ADCON0bits	set	16120
   330  0000                     _ADCON0	set	16120
   331  0000                     _ADCLK	set	16127
   332  0000                     _ADACT	set	16126
   333  0000                     _ADREF	set	16125
   334  0000                     _ADSTAT	set	16124
   335  0000                     _ADCON3	set	16123
   336  0000                     _ADCON2	set	16122
   337  0000                     _ADCON1	set	16121
   338  0000                     _ADPREH	set	16119
   339  0000                     _ADPREL	set	16118
   340  0000                     _ADCAP	set	16117
   341  0000                     _ADACQH	set	16116
   342  0000                     _ADACQL	set	16115
   343  0000                     _ADPCH	set	16113
   344  0000                     _ADRPT	set	16108
   345  0000                     _ADACCU	set	16106
   346  0000                     _ADSTPTH	set	16101
   347  0000                     _ADSTPTL	set	16100
   348  0000                     _ADUTHH	set	16097
   349  0000                     _ADUTHL	set	16096
   350  0000                     _ADLTHH	set	16095
   351  0000                     _ADLTHL	set	16094
   352  0000                     _SMT1TMR	set	16146
   353  0000                     _SMT1CPR	set	16149
   354  0000                     _SMT1CPW	set	16152
   355  0000                     _SMT1PR	set	16155
   356  0000                     _SMT1STATbits	set	16160
   357  0000                     _SMT1CON0bits	set	16158
   358  0000                     _SMT1CON1bits	set	16159
   359  0000                     _SMT1PRL	set	16155
   360  0000                     _SMT1PRH	set	16156
   361  0000                     _SMT1PRU	set	16157
   362  0000                     _SMT1SIG	set	16162
   363  0000                     _SMT1WIN	set	16163
   364  0000                     _SMT1CLK	set	16161
   365  0000                     _SMT1STAT	set	16160
   366  0000                     _SMT1CON1	set	16159
   367  0000                     _SMT1CON0	set	16158
   368  0000                     _CCPTMRS1bits	set	16223
   369  0000                     _CCPTMRS0bits	set	16222
   370  0000                     _PORTBbits	set	16331
   371  0000                     _PR2	set	16299
   372  0000                     _TMR2	set	16298
   373  0000                     _T2CONbits	set	16300
   374  0000                     _T2RSTbits	set	16303
   375  0000                     _T2HLTbits	set	16301
   376  0000                     _T2CON	set	16300
   377  0000                     _T2TMR	set	16298
   378  0000                     _T2PR	set	16299
   379  0000                     _T2RST	set	16303
   380  0000                     _T2HLT	set	16301
   381  0000                     _T2CLKCON	set	16302
   382  0000                     _PWM6DCL	set	16232
   383  0000                     _PWM6DCH	set	16233
   384  0000                     _PWM6CON	set	16234
   385  0000                     _PWM5DCL	set	16236
   386  0000                     _PWM5DCH	set	16237
   387  0000                     _PWM5CON	set	16238
   388  0000                     _PWM8DCL	set	16224
   389  0000                     _PWM8DCH	set	16225
   390  0000                     _PWM8CON	set	16226
   391  0000                     _PWM7DCL	set	16228
   392  0000                     _PWM7DCH	set	16229
   393  0000                     _PWM7CON	set	16230
   394  0000                     _PR4	set	16287
   395  0000                     _TMR4	set	16286
   396  0000                     _T4CONbits	set	16288
   397  0000                     _T4RSTbits	set	16291
   398  0000                     _T4HLTbits	set	16289
   399  0000                     _T4CON	set	16288
   400  0000                     _T4TMR	set	16286
   401  0000                     _T4PR	set	16287
   402  0000                     _T4RST	set	16291
   403  0000                     _T4HLT	set	16289
   404  0000                     _T4CLKCON	set	16290
   405  0000                     _T3GCONbits	set	16295
   406  0000                     _T3CONbits	set	16294
   407  0000                     _T3CON	set	16294
   408  0000                     _TMR3L	set	16292
   409  0000                     _TMR3H	set	16293
   410  0000                     _T3CLK	set	16297
   411  0000                     _T3GATE	set	16296
   412  0000                     _T3GCON	set	16295
   413  0000                     _T5GCONbits	set	16283
   414  0000                     _T5CONbits	set	16282
   415  0000                     _T5CON	set	16282
   416  0000                     _TMR5L	set	16280
   417  0000                     _TMR5H	set	16281
   418  0000                     _T5CLK	set	16285
   419  0000                     _T5GATE	set	16284
   420  0000                     _T5GCON	set	16283
   421  0000                     _CCPR4L	set	16240
   422  0000                     _CCPR4H	set	16241
   423  0000                     _CCP4CAP	set	16243
   424  0000                     _CCP4CON	set	16242
   425  0000                     _CCPR3L	set	16244
   426  0000                     _CCPR3H	set	16245
   427  0000                     _CCP3CAP	set	16247
   428  0000                     _CCP3CON	set	16246
   429  0000                     _PORTDbits	set	16333
   430  0000                     _IVTBASEL	set	16341
   431  0000                     _IVTBASEH	set	16342
   432  0000                     _IVTBASEU	set	16343
   433  0000                     _IVTLOCKbits	set	16340
   434  0000                     _IVTLOCK	set	16340
   435  0000                     _INTCON0bits	set	16338
   436  0000                     _TRISD	set	16325
   437  0000                     _TRISC	set	16324
   438  0000                     _TRISB	set	16323
   439  0000                     _TRISA	set	16322
   440  0000                     _TRISE	set	16326
   441  0000                     _LATC	set	16316
   442  0000                     _LATB	set	16315
   443  0000                     _LATA	set	16314
   444  0000                     _LATD	set	16317
   445  0000                     _LATE	set	16318
   446  0000                     _GIE	set	130711
   447                           
   448                           	psect	smallconst
   449  001000                     __psmallconst:
   450                           	callstack 0
   451  001000  00                 	db	0
   452  001001                     STR_3:
   453                           
   454                           ; BSR set to: 1
   455  001001  43                 	db	67	;'C'
   456  001002  75                 	db	117	;'u'
   457  001003  72                 	db	114	;'r'
   458  001004  76                 	db	118	;'v'
   459  001005  65                 	db	101	;'e'
   460  001006  4C                 	db	76	;'L'
   461  001007  65                 	db	101	;'e'
   462  001008  66                 	db	102	;'f'
   463  001009  74                 	db	116	;'t'
   464  00100A  43                 	db	67	;'C'
   465  00100B  6F                 	db	111	;'o'
   466  00100C  75                 	db	117	;'u'
   467  00100D  6E                 	db	110	;'n'
   468  00100E  74                 	db	116	;'t'
   469  00100F  3A                 	db	58	;':'
   470  001010  20                 	db	32
   471  001011  25                 	db	37
   472  001012  75                 	db	117	;'u'
   473  001013  20                 	db	32
   474  001014  20                 	db	32
   475  001015  20                 	db	32
   476  001016  7C                 	db	124
   477  001017  20                 	db	32
   478  001018  20                 	db	32
   479  001019  20                 	db	32
   480  00101A  00                 	db	0
   481  00101B                     STR_2:
   482                           
   483                           ; BSR set to: 1
   484  00101B  52                 	db	82	;'R'
   485  00101C  65                 	db	101	;'e'
   486  00101D  73                 	db	115	;'s'
   487  00101E  65                 	db	101	;'e'
   488  00101F  74                 	db	116	;'t'
   489  001020  20                 	db	32
   490  001021  43                 	db	67	;'C'
   491  001022  75                 	db	117	;'u'
   492  001023  72                 	db	114	;'r'
   493  001024  76                 	db	118	;'v'
   494  001025  65                 	db	101	;'e'
   495  001026  43                 	db	67	;'C'
   496  001027  6F                 	db	111	;'o'
   497  001028  75                 	db	117	;'u'
   498  001029  6E                 	db	110	;'n'
   499  00102A  74                 	db	116	;'t'
   500  00102B  21                 	db	33
   501  00102C  20                 	db	32
   502  00102D  20                 	db	32
   503  00102E  7C                 	db	124
   504  00102F  20                 	db	32
   505  001030  20                 	db	32
   506  001031  20                 	db	32
   507  001032  00                 	db	0
   508  001033                     STR_4:
   509                           
   510                           ; BSR set to: 1
   511  001033  43                 	db	67	;'C'
   512  001034  75                 	db	117	;'u'
   513  001035  72                 	db	114	;'r'
   514  001036  76                 	db	118	;'v'
   515  001037  65                 	db	101	;'e'
   516  001038  52                 	db	82	;'R'
   517  001039  69                 	db	105	;'i'
   518  00103A  67                 	db	103	;'g'
   519  00103B  68                 	db	104	;'h'
   520  00103C  74                 	db	116	;'t'
   521  00103D  43                 	db	67	;'C'
   522  00103E  6F                 	db	111	;'o'
   523  00103F  75                 	db	117	;'u'
   524  001040  6E                 	db	110	;'n'
   525  001041  74                 	db	116	;'t'
   526  001042  3A                 	db	58	;':'
   527  001043  20                 	db	32
   528  001044  25                 	db	37
   529  001045  75                 	db	117	;'u'
   530  001046  0A                 	db	10
   531  001047  00                 	db	0
   532  001048                     STR_1:
   533                           
   534                           ; BSR set to: 1
   535  001048  73                 	db	115	;'s'
   536  001049  74                 	db	116	;'t'
   537  00104A  61                 	db	97	;'a'
   538  00104B  72                 	db	114	;'r'
   539  00104C  41                 	db	65	;'A'
   540  00104D  63                 	db	99	;'c'
   541  00104E  63                 	db	99	;'c'
   542  00104F  65                 	db	101	;'e'
   543  001050  6C                 	db	108	;'l'
   544  001051  50                 	db	80	;'P'
   545  001052  6F                 	db	111	;'o'
   546  001053  77                 	db	119	;'w'
   547  001054  65                 	db	101	;'e'
   548  001055  72                 	db	114	;'r'
   549  001056  3A                 	db	58	;':'
   550  001057  20                 	db	32
   551  001058  25                 	db	37
   552  001059  64                 	db	100	;'d'
   553  00105A  0A                 	db	10
   554  00105B  00                 	db	0
   555  00105C                     STR_5:
   556                           
   557                           ; BSR set to: 1
   558  00105C  52                 	db	82	;'R'
   559  00105D  6F                 	db	111	;'o'
   560  00105E  75                 	db	117	;'u'
   561  00105F  6E                 	db	110	;'n'
   562  001060  64                 	db	100	;'d'
   563  001061  54                 	db	84	;'T'
   564  001062  69                 	db	105	;'i'
   565  001063  6D                 	db	109	;'m'
   566  001064  65                 	db	101	;'e'
   567  001065  3A                 	db	58	;':'
   568  001066  20                 	db	32
   569  001067  25                 	db	37
   570  001068  66                 	db	102	;'f'
   571  001069  0A                 	db	10
   572  00106A  0A                 	db	10
   573  00106B  00                 	db	0
   574  00106C                     STR_8:
   575                           
   576                           ; BSR set to: 1
   577  00106C  53                 	db	83	;'S'
   578  00106D  74                 	db	116	;'t'
   579  00106E  6F                 	db	111	;'o'
   580  00106F  70                 	db	112	;'p'
   581  001070  20                 	db	32
   582  001071  52                 	db	82	;'R'
   583  001072  65                 	db	101	;'e'
   584  001073  76                 	db	118	;'v'
   585  001074  65                 	db	101	;'e'
   586  001075  72                 	db	114	;'r'
   587  001076  73                 	db	115	;'s'
   588  001077  65                 	db	101	;'e'
   589  001078  0A                 	db	10
   590  001079  00                 	db	0
   591  00107A                     STR_6:
   592                           
   593                           ; BSR set to: 1
   594  00107A  52                 	db	82	;'R'
   595  00107B  65                 	db	101	;'e'
   596  00107C  76                 	db	118	;'v'
   597  00107D  65                 	db	101	;'e'
   598  00107E  72                 	db	114	;'r'
   599  00107F  73                 	db	115	;'s'
   600  001080  65                 	db	101	;'e'
   601  001081  52                 	db	82	;'R'
   602  001082  69                 	db	105	;'i'
   603  001083  67                 	db	103	;'g'
   604  001084  74                 	db	116	;'t'
   605  001085  68                 	db	104	;'h'
   606  001086  0A                 	db	10
   607  001087  00                 	db	0
   608  001088                     STR_7:
   609                           
   610                           ; BSR set to: 1
   611  001088  52                 	db	82	;'R'
   612  001089  65                 	db	101	;'e'
   613  00108A  76                 	db	118	;'v'
   614  00108B  65                 	db	101	;'e'
   615  00108C  72                 	db	114	;'r'
   616  00108D  73                 	db	115	;'s'
   617  00108E  65                 	db	101	;'e'
   618  00108F  4C                 	db	76	;'L'
   619  001090  65                 	db	101	;'e'
   620  001091  66                 	db	102	;'f'
   621  001092  74                 	db	116	;'t'
   622  001093  0A                 	db	10
   623  001094  00                 	db	0
   624  001095                     STR_9:
   625                           
   626                           ; BSR set to: 1
   627  001095  49                 	db	73	;'I'
   628  001096  4E                 	db	78	;'N'
   629  001097  46                 	db	70	;'F'
   630  001098  00                 	db	0
   631  001099                     STR_13:
   632                           
   633                           ; BSR set to: 1
   634  001099  4E                 	db	78	;'N'
   635  00109A  41                 	db	65	;'A'
   636  00109B  4E                 	db	78	;'N'
   637  00109C  00                 	db	0
   638  00109D                     STR_10:
   639                           
   640                           ; BSR set to: 1
   641  00109D  69                 	db	105	;'i'
   642  00109E  6E                 	db	110	;'n'
   643  00109F  66                 	db	102	;'f'
   644  0010A0  00                 	db	0
   645  0010A1                     STR_14:
   646                           
   647                           ; BSR set to: 1
   648  0010A1  6E                 	db	110	;'n'
   649  0010A2  61                 	db	97	;'a'
   650  0010A3  6E                 	db	110	;'n'
   651  0010A4  00                 	db	0
   652  0010A5                     STR_17:
   653                           
   654                           ; BSR set to: 1
   655  0010A5  6C                 	db	108	;'l'
   656  0010A6  66                 	db	102	;'f'
   657  0010A7  00                 	db	0
   658  0010A8  00                 	db	0	; dummy byte at the end
   659  0000                     
   660                           ; #config settings
   661                           
   662                           	psect	cinit
   663  005D22                     __pcinit:
   664                           	callstack 0
   665  005D22                     start_initialization:
   666                           	callstack 0
   667  005D22                     __initialization:
   668                           	callstack 0
   669                           
   670                           ; Clear objects allocated to BANK1 (142 bytes)
   671  005D22  EE00  F100         	lfsr	0,__pbssBANK1
   672  005D26  0E8E               	movlw	142
   673  005D28                     clear_0:
   674  005D28  6AEE               	clrf	postinc0,c
   675  005D2A  06E8               	decf	wreg,f,c
   676  005D2C  E1FD               	bnz	clear_0
   677                           
   678                           ; Clear objects allocated to BANK0 (20 bytes)
   679  005D2E  EE00  F0EB         	lfsr	0,__pbssBANK0
   680  005D32  0E14               	movlw	20
   681  005D34                     clear_1:
   682  005D34  6AEE               	clrf	postinc0,c
   683  005D36  06E8               	decf	wreg,f,c
   684  005D38  E1FD               	bnz	clear_1
   685                           
   686                           ; Clear objects allocated to COMRAM (18 bytes)
   687  005D3A  EE00  F03A         	lfsr	0,__pbssCOMRAM
   688  005D3E  0E12               	movlw	18
   689  005D40                     clear_2:
   690  005D40  6AEE               	clrf	postinc0,c
   691  005D42  06E8               	decf	wreg,f,c
   692  005D44  E1FD               	bnz	clear_2
   693                           
   694                           ;
   695                           ; Setup IVTBASE
   696                           ;
   697  005D46  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   698  005D48  6ED5               	movwf	213,c
   699  005D4A  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   700  005D4C  6ED6               	movwf	214,c
   701  005D4E  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   702  005D50  6ED7               	movwf	215,c
   703  005D52                     end_of_initialization:
   704                           	callstack 0
   705  005D52                     __end_of__initialization:
   706                           	callstack 0
   707  005D52  0100               	movlb	0
   708  005D54  EFB2  F030         	goto	_main	;jump to C main() function
   709                           
   710                           	psect	bssCOMRAM
   711  00003A                     __pbssCOMRAM:
   712                           	callstack 0
   713  00003A                     _width:
   714                           	callstack 0
   715  00003A                     	ds	2
   716  00003C                     _prec:
   717                           	callstack 0
   718  00003C                     	ds	2
   719  00003E                     _flags:
   720                           	callstack 0
   721  00003E                     	ds	2
   722  000040                     _delay:
   723                           	callstack 0
   724  000040                     	ds	1
   725  000041                     _curveMode:
   726                           	callstack 0
   727  000041                     	ds	1
   728  000042                     _uart1RxLastError:
   729                           	callstack 0
   730  000042                     	ds	1
   731  000043                     _uart1RxCount:
   732                           	callstack 0
   733  000043                     	ds	1
   734  000044                     _uart1RxTail:
   735                           	callstack 0
   736  000044                     	ds	1
   737  000045                     _uart1RxHead:
   738                           	callstack 0
   739  000045                     	ds	1
   740  000046                     _uart1TxTail:
   741                           	callstack 0
   742  000046                     	ds	1
   743  000047                     _uart1TxHead:
   744                           	callstack 0
   745  000047                     	ds	1
   746  000048                     _smtPeriod:
   747                           	callstack 0
   748  000048                     	ds	4
   749                           
   750                           	psect	bssBANK0
   751  0000EB                     __pbssBANK0:
   752                           	callstack 0
   753  0000EB                     _actMotorPow:
   754                           	callstack 0
   755  0000EB                     	ds	2
   756  0000ED                     _currentSpeed:
   757                           	callstack 0
   758  0000ED                     	ds	2
   759  0000EF                     _setSpeed:
   760                           	callstack 0
   761  0000EF                     	ds	2
   762  0000F1                     _roundTimeCount:
   763                           	callstack 0
   764  0000F1                     	ds	2
   765  0000F3                     TMR4_ISR@CountCallBack:
   766                           	callstack 0
   767  0000F3                     	ds	2
   768  0000F5                     _distRight:
   769                           	callstack 0
   770  0000F5                     	ds	2
   771  0000F7                     _distLeft:
   772                           	callstack 0
   773  0000F7                     	ds	2
   774  0000F9                     _curveRightCount:
   775                           	callstack 0
   776  0000F9                     	ds	1
   777  0000FA                     _curveLeftCount:
   778                           	callstack 0
   779  0000FA                     	ds	1
   780  0000FB                     _cycle10ms:
   781                           	callstack 0
   782  0000FB                     	ds	1
   783  0000FC                     _driveMode:
   784                           	callstack 0
   785  0000FC                     	ds	1
   786  0000FD                     _distFront:
   787                           	callstack 0
   788  0000FD                     	ds	2
   789                           
   790                           	psect	bssBANK1
   791  000100                     __pbssBANK1:
   792                           	callstack 0
   793  000100                     _uart1RxStatusBuffer:
   794                           	callstack 0
   795  000100                     	ds	8
   796  000108                     _uart1RxBuffer:
   797                           	callstack 0
   798  000108                     	ds	8
   799  000110                     _uart1TxBuffer:
   800                           	callstack 0
   801  000110                     	ds	8
   802  000118                     floorf@F527:
   803                           	callstack 0
   804  000118                     	ds	4
   805  00011C                     ___fpclassifyf@F465:
   806                           	callstack 0
   807  00011C                     	ds	4
   808  000120                     _smtWay:
   809                           	callstack 0
   810  000120                     	ds	4
   811  000124                     _smtDuty:
   812                           	callstack 0
   813  000124                     	ds	4
   814  000128                     _nout:
   815                           	callstack 0
   816  000128                     	ds	2
   817  00012A                     _BatteryVolt:
   818                           	callstack 0
   819  00012A                     	ds	2
   820  00012C                     _reverseTime:
   821                           	callstack 0
   822  00012C                     	ds	2
   823  00012E                     _oldSpeed:
   824                           	callstack 0
   825  00012E                     	ds	2
   826  000130                     _motPow:
   827                           	callstack 0
   828  000130                     	ds	2
   829  000132                     _battCheckCount:
   830                           	callstack 0
   831  000132                     	ds	2
   832  000134                     _oldDistRight:
   833                           	callstack 0
   834  000134                     	ds	2
   835  000136                     _oldDistLeft:
   836                           	callstack 0
   837  000136                     	ds	2
   838  000138                     _reverseCount:
   839                           	callstack 0
   840  000138                     	ds	2
   841  00013A                     _distRightM:
   842                           	callstack 0
   843  00013A                     	ds	2
   844  00013C                     _distLeftM:
   845                           	callstack 0
   846  00013C                     	ds	2
   847  00013E                     _dbuf:
   848                           	callstack 0
   849  00013E                     	ds	80
   850                           
   851                           	psect	cstackBANK1
   852  0001A4                     __pcstackBANK1:
   853                           	callstack 0
   854  0001A4                     ?_vfprintf:
   855                           	callstack 0
   856  0001A4                     vfprintf@fp:
   857                           	callstack 0
   858                           
   859                           ; 2 bytes @ 0x0
   860  0001A4                     	ds	2
   861  0001A6                     vfprintf@fmt:
   862                           	callstack 0
   863                           
   864                           ; 2 bytes @ 0x2
   865  0001A6                     	ds	2
   866  0001A8                     vfprintf@ap:
   867                           	callstack 0
   868                           
   869                           ; 2 bytes @ 0x4
   870  0001A8                     	ds	2
   871  0001AA                     vfprintf@cfmt:
   872                           	callstack 0
   873                           
   874                           ; 2 bytes @ 0x6
   875  0001AA                     	ds	2
   876  0001AC                     ?_printf:
   877                           	callstack 0
   878  0001AC                     printf@fmt:
   879                           	callstack 0
   880                           
   881                           ; 2 bytes @ 0x8
   882  0001AC                     	ds	6
   883  0001B2                     printf@ap:
   884                           	callstack 0
   885                           
   886                           ; 2 bytes @ 0xE
   887  0001B2                     	ds	2
   888  0001B4                     startAccell@i:
   889                           	callstack 0
   890  0001B4                     checkCurveCount@roundTime:
   891                           	callstack 0
   892                           
   893                           ; 4 bytes @ 0x10
   894  0001B4                     	ds	4
   895                           
   896                           	psect	cstackBANK0
   897  000060                     __pcstackBANK0:
   898                           	callstack 0
   899  000060                     ?_dtoa:
   900                           	callstack 0
   901  000060                     ?_utoa:
   902                           	callstack 0
   903  000060                     ___flmul@sign:
   904                           	callstack 0
   905  000060                     dtoa@fp:
   906                           	callstack 0
   907  000060                     utoa@fp:
   908                           	callstack 0
   909  000060                     ___fldiv@rem:
   910                           	callstack 0
   911                           
   912                           ; 4 bytes @ 0x0
   913  000060                     	ds	1
   914  000061                     ___flmul@aexp:
   915                           	callstack 0
   916                           
   917                           ; 1 bytes @ 0x1
   918  000061                     	ds	1
   919  000062                     ___flmul@grs:
   920                           	callstack 0
   921  000062                     dtoa@d:
   922                           	callstack 0
   923  000062                     utoa@d:
   924                           	callstack 0
   925                           
   926                           ; 8 bytes @ 0x2
   927  000062                     	ds	2
   928  000064                     ___fldiv@sign:
   929                           	callstack 0
   930                           
   931                           ; 1 bytes @ 0x4
   932  000064                     	ds	1
   933  000065                     ___fldiv@new_exp:
   934                           	callstack 0
   935                           
   936                           ; 2 bytes @ 0x5
   937  000065                     	ds	1
   938  000066                     ___flmul@bexp:
   939                           	callstack 0
   940                           
   941                           ; 1 bytes @ 0x6
   942  000066                     	ds	1
   943  000067                     ___fldiv@grs:
   944                           	callstack 0
   945  000067                     ___flmul@prod:
   946                           	callstack 0
   947                           
   948                           ; 4 bytes @ 0x7
   949  000067                     	ds	3
   950  00006A                     _dtoa$3538:
   951                           	callstack 0
   952  00006A                     utoa@p:
   953                           	callstack 0
   954                           
   955                           ; 2 bytes @ 0xA
   956  00006A                     	ds	1
   957  00006B                     ___fldiv@bexp:
   958                           	callstack 0
   959  00006B                     ___flmul@temp:
   960                           	callstack 0
   961                           
   962                           ; 2 bytes @ 0xB
   963  00006B                     	ds	1
   964  00006C                     ___fldiv@aexp:
   965                           	callstack 0
   966  00006C                     dtoa@p:
   967                           	callstack 0
   968  00006C                     utoa@w:
   969                           	callstack 0
   970                           
   971                           ; 2 bytes @ 0xC
   972  00006C                     	ds	1
   973  00006D                     ??_floorf:
   974  00006D                     ?___fladd:
   975                           	callstack 0
   976  00006D                     ___flge@ff1:
   977                           	callstack 0
   978  00006D                     ___fladd@b:
   979                           	callstack 0
   980                           
   981                           ; 4 bytes @ 0xD
   982  00006D                     	ds	1
   983  00006E                     dtoa@w:
   984                           	callstack 0
   985  00006E                     utoa@n:
   986                           	callstack 0
   987                           
   988                           ; 8 bytes @ 0xE
   989  00006E                     	ds	2
   990  000070                     dtoa@s:
   991                           	callstack 0
   992                           
   993                           ; 2 bytes @ 0x10
   994  000070                     	ds	1
   995  000071                     ___flge@ff2:
   996                           	callstack 0
   997  000071                     ___fladd@a:
   998                           	callstack 0
   999                           
  1000                           ; 4 bytes @ 0x11
  1001  000071                     	ds	1
  1002  000072                     dtoa@n:
  1003                           	callstack 0
  1004                           
  1005                           ; 8 bytes @ 0x12
  1006  000072                     	ds	1
  1007  000073                     floorf@m:
  1008                           	callstack 0
  1009                           
  1010                           ; 4 bytes @ 0x13
  1011  000073                     	ds	2
  1012  000075                     ___fladd@signs:
  1013                           	callstack 0
  1014                           
  1015                           ; 1 bytes @ 0x15
  1016  000075                     	ds	1
  1017  000076                     ___fladd@aexp:
  1018                           	callstack 0
  1019  000076                     utoa@i:
  1020                           	callstack 0
  1021                           
  1022                           ; 2 bytes @ 0x16
  1023  000076                     	ds	1
  1024  000077                     ___fladd@bexp:
  1025                           	callstack 0
  1026  000077                     floorf@e:
  1027                           	callstack 0
  1028                           
  1029                           ; 2 bytes @ 0x17
  1030  000077                     	ds	1
  1031  000078                     ___fladd@grs:
  1032                           	callstack 0
  1033                           
  1034                           ; 1 bytes @ 0x18
  1035  000078                     	ds	1
  1036  000079                     ?___flsub:
  1037                           	callstack 0
  1038  000079                     ?___fltol:
  1039                           	callstack 0
  1040  000079                     ___fltol@f1:
  1041                           	callstack 0
  1042  000079                     ___flsub@b:
  1043                           	callstack 0
  1044  000079                     floorf@u:
  1045                           	callstack 0
  1046                           
  1047                           ; 4 bytes @ 0x19
  1048  000079                     	ds	1
  1049  00007A                     dtoa@i:
  1050                           	callstack 0
  1051                           
  1052                           ; 2 bytes @ 0x1A
  1053  00007A                     	ds	3
  1054  00007D                     ??___fltol:
  1055  00007D                     ___flsub@a:
  1056                           	callstack 0
  1057                           
  1058                           ; 4 bytes @ 0x1D
  1059  00007D                     	ds	4
  1060  000081                     ___fltol@sign1:
  1061                           	callstack 0
  1062                           
  1063                           ; 1 bytes @ 0x21
  1064  000081                     	ds	1
  1065  000082                     ___fltol@exp1:
  1066                           	callstack 0
  1067                           
  1068                           ; 1 bytes @ 0x22
  1069  000082                     	ds	1
  1070  000083                     ??_calcSpeed:
  1071  000083                     ??_calcMotorPow:
  1072  000083                     ?_efgtoa:
  1073                           	callstack 0
  1074  000083                     setSteering@steering:
  1075                           	callstack 0
  1076  000083                     efgtoa@fp:
  1077                           	callstack 0
  1078                           
  1079                           ; 2 bytes @ 0x23
  1080  000083                     	ds	2
  1081  000085                     setSteering@steeringMode:
  1082                           	callstack 0
  1083  000085                     calcMotorPow@setSpeedDelta:
  1084                           	callstack 0
  1085  000085                     efgtoa@f:
  1086                           	callstack 0
  1087                           
  1088                           ; 4 bytes @ 0x25
  1089  000085                     	ds	1
  1090  000086                     ??_setSteering:
  1091                           
  1092                           ; 1 bytes @ 0x26
  1093  000086                     	ds	1
  1094  000087                     calcSpeed@speed:
  1095                           	callstack 0
  1096  000087                     calcMotorPow@oldSpeedDelta:
  1097                           	callstack 0
  1098                           
  1099                           ; 2 bytes @ 0x27
  1100  000087                     	ds	1
  1101  000088                     setSteering@steeringF:
  1102                           	callstack 0
  1103                           
  1104                           ; 2 bytes @ 0x28
  1105  000088                     	ds	1
  1106  000089                     calcMotorPow@addMPow:
  1107                           	callstack 0
  1108  000089                     efgtoa@c:
  1109                           	callstack 0
  1110                           
  1111                           ; 1 bytes @ 0x29
  1112  000089                     	ds	1
  1113  00008A                     ??_efgtoa:
  1114  00008A                     setSteering@steeringB:
  1115                           	callstack 0
  1116                           
  1117                           ; 2 bytes @ 0x2A
  1118  00008A                     	ds	2
  1119  00008C                     ??_calcSteering:
  1120                           
  1121                           ; 1 bytes @ 0x2C
  1122  00008C                     	ds	2
  1123  00008E                     calcSteering@delta:
  1124                           	callstack 0
  1125                           
  1126                           ; 2 bytes @ 0x2E
  1127  00008E                     	ds	1
  1128  00008F                     _efgtoa$3562:
  1129                           	callstack 0
  1130                           
  1131                           ; 2 bytes @ 0x2F
  1132  00008F                     	ds	2
  1133  000091                     _efgtoa$3563:
  1134                           	callstack 0
  1135                           
  1136                           ; 2 bytes @ 0x31
  1137  000091                     	ds	2
  1138  000093                     _efgtoa$3567:
  1139                           	callstack 0
  1140                           
  1141                           ; 2 bytes @ 0x33
  1142  000093                     	ds	2
  1143  000095                     _efgtoa$3571:
  1144                           	callstack 0
  1145                           
  1146                           ; 2 bytes @ 0x35
  1147  000095                     	ds	2
  1148  000097                     _efgtoa$3572:
  1149                           	callstack 0
  1150                           
  1151                           ; 2 bytes @ 0x37
  1152  000097                     	ds	2
  1153  000099                     _efgtoa$3573:
  1154                           	callstack 0
  1155                           
  1156                           ; 2 bytes @ 0x39
  1157  000099                     	ds	2
  1158  00009B                     efgtoa@t:
  1159                           	callstack 0
  1160                           
  1161                           ; 2 bytes @ 0x3B
  1162  00009B                     	ds	2
  1163  00009D                     efgtoa@pp:
  1164                           	callstack 0
  1165                           
  1166                           ; 2 bytes @ 0x3D
  1167  00009D                     	ds	2
  1168  00009F                     efgtoa@ne:
  1169                           	callstack 0
  1170                           
  1171                           ; 2 bytes @ 0x3F
  1172  00009F                     	ds	2
  1173  0000A1                     efgtoa@m:
  1174                           	callstack 0
  1175                           
  1176                           ; 2 bytes @ 0x41
  1177  0000A1                     	ds	2
  1178  0000A3                     efgtoa@ou:
  1179                           	callstack 0
  1180                           
  1181                           ; 4 bytes @ 0x43
  1182  0000A3                     	ds	4
  1183  0000A7                     efgtoa@d:
  1184                           	callstack 0
  1185                           
  1186                           ; 2 bytes @ 0x47
  1187  0000A7                     	ds	2
  1188  0000A9                     efgtoa@sign:
  1189                           	callstack 0
  1190                           
  1191                           ; 2 bytes @ 0x49
  1192  0000A9                     	ds	2
  1193  0000AB                     efgtoa@p:
  1194                           	callstack 0
  1195                           
  1196                           ; 2 bytes @ 0x4B
  1197  0000AB                     	ds	2
  1198  0000AD                     efgtoa@w:
  1199                           	callstack 0
  1200                           
  1201                           ; 2 bytes @ 0x4D
  1202  0000AD                     	ds	2
  1203  0000AF                     efgtoa@nmode:
  1204                           	callstack 0
  1205                           
  1206                           ; 1 bytes @ 0x4F
  1207  0000AF                     	ds	1
  1208  0000B0                     efgtoa@mode:
  1209                           	callstack 0
  1210                           
  1211                           ; 1 bytes @ 0x50
  1212  0000B0                     	ds	1
  1213  0000B1                     efgtoa@h:
  1214                           	callstack 0
  1215                           
  1216                           ; 4 bytes @ 0x51
  1217  0000B1                     	ds	4
  1218  0000B5                     efgtoa@l:
  1219                           	callstack 0
  1220                           
  1221                           ; 4 bytes @ 0x55
  1222  0000B5                     	ds	4
  1223  0000B9                     efgtoa@i:
  1224                           	callstack 0
  1225                           
  1226                           ; 2 bytes @ 0x59
  1227  0000B9                     	ds	2
  1228  0000BB                     efgtoa@g:
  1229                           	callstack 0
  1230                           
  1231                           ; 4 bytes @ 0x5B
  1232  0000BB                     	ds	4
  1233  0000BF                     efgtoa@e:
  1234                           	callstack 0
  1235                           
  1236                           ; 2 bytes @ 0x5F
  1237  0000BF                     	ds	2
  1238  0000C1                     efgtoa@n:
  1239                           	callstack 0
  1240                           
  1241                           ; 2 bytes @ 0x61
  1242  0000C1                     	ds	2
  1243  0000C3                     efgtoa@u:
  1244                           	callstack 0
  1245                           
  1246                           ; 4 bytes @ 0x63
  1247  0000C3                     	ds	4
  1248  0000C7                     ?_vfpfcnvrt:
  1249                           	callstack 0
  1250  0000C7                     vfpfcnvrt@fp:
  1251                           	callstack 0
  1252                           
  1253                           ; 2 bytes @ 0x67
  1254  0000C7                     	ds	2
  1255  0000C9                     vfpfcnvrt@fmt:
  1256                           	callstack 0
  1257                           
  1258                           ; 2 bytes @ 0x69
  1259  0000C9                     	ds	2
  1260  0000CB                     vfpfcnvrt@ap:
  1261                           	callstack 0
  1262                           
  1263                           ; 2 bytes @ 0x6B
  1264  0000CB                     	ds	2
  1265  0000CD                     ??_vfpfcnvrt:
  1266                           
  1267                           ; 1 bytes @ 0x6D
  1268  0000CD                     	ds	4
  1269  0000D1                     vfpfcnvrt@ll:
  1270                           	callstack 0
  1271                           
  1272                           ; 8 bytes @ 0x71
  1273  0000D1                     	ds	8
  1274  0000D9                     vfpfcnvrt@llu:
  1275                           	callstack 0
  1276                           
  1277                           ; 8 bytes @ 0x79
  1278  0000D9                     	ds	8
  1279  0000E1                     _vfpfcnvrt$3598:
  1280                           	callstack 0
  1281                           
  1282                           ; 2 bytes @ 0x81
  1283  0000E1                     	ds	2
  1284  0000E3                     vfpfcnvrt@f:
  1285                           	callstack 0
  1286                           
  1287                           ; 4 bytes @ 0x83
  1288  0000E3                     	ds	4
  1289  0000E7                     vfpfcnvrt@ct:
  1290                           	callstack 0
  1291                           
  1292                           ; 3 bytes @ 0x87
  1293  0000E7                     	ds	3
  1294  0000EA                     vfpfcnvrt@c:
  1295                           	callstack 0
  1296                           
  1297                           ; 1 bytes @ 0x8A
  1298  0000EA                     	ds	1
  1299                           
  1300                           	psect	cstackCOMRAM
  1301  000001                     __pcstackCOMRAM:
  1302                           	callstack 0
  1303  000001                     CCP3_DefaultCallBack@capturedValue:
  1304                           	callstack 0
  1305                           
  1306                           ; 2 bytes @ 0x0
  1307  000001                     	ds	2
  1308  000003                     CCP3_CaptureISR@module:
  1309                           	callstack 0
  1310                           
  1311                           ; 2 bytes @ 0x2
  1312  000003                     	ds	2
  1313  000005                     CCP4_DefaultCallBack@capturedValue:
  1314                           	callstack 0
  1315                           
  1316                           ; 2 bytes @ 0x4
  1317  000005                     	ds	2
  1318  000007                     CCP4_CaptureISR@module:
  1319                           	callstack 0
  1320                           
  1321                           ; 2 bytes @ 0x6
  1322  000007                     	ds	2
  1323  000009                     ?_TMR5_ReadTimer:
  1324                           	callstack 0
  1325  000009                     TMR5_WriteTimer@timerVal:
  1326                           	callstack 0
  1327                           
  1328                           ; 2 bytes @ 0x8
  1329  000009                     	ds	2
  1330  00000B                     ??_TMR5_ReadTimer:
  1331  00000B                     
  1332                           ; 1 bytes @ 0xA
  1333  00000B                     	ds	2
  1334  00000D                     TMR5_ReadTimer@readVal:
  1335                           	callstack 0
  1336                           
  1337                           ; 2 bytes @ 0xC
  1338  00000D                     	ds	2
  1339  00000F                     TMR5_ReadTimer@readValHigh:
  1340                           	callstack 0
  1341                           
  1342                           ; 1 bytes @ 0xE
  1343  00000F                     	ds	1
  1344  000010                     TMR5_ReadTimer@readValLow:
  1345                           	callstack 0
  1346                           
  1347                           ; 1 bytes @ 0xF
  1348  000010                     	ds	1
  1349  000011                     ??_UART1_tx_vect_isr:
  1350  000011                     
  1351                           ; 1 bytes @ 0x10
  1352  000011                     	ds	1
  1353  000012                     ??_UART1_rx_vect_isr:
  1354                           
  1355                           ; 1 bytes @ 0x11
  1356  000012                     	ds	1
  1357  000013                     ??_TMR4_ISR:
  1358                           
  1359                           ; 1 bytes @ 0x12
  1360  000013                     	ds	1
  1361  000014                     ??_TMR3_Initialize:
  1362  000014                     ??_getCurve:
  1363  000014                     ?_strlen:
  1364                           	callstack 0
  1365  000014                     ?___fpclassifyf:
  1366                           	callstack 0
  1367  000014                     ?_isupper:
  1368                           	callstack 0
  1369  000014                     ?_strncmp:
  1370                           	callstack 0
  1371  000014                     ?_ADCC_GetSingleConversion:
  1372                           	callstack 0
  1373  000014                     ?___awdiv:
  1374                           	callstack 0
  1375  000014                     ?___awmod:
  1376                           	callstack 0
  1377  000014                     ?___lwdiv:
  1378                           	callstack 0
  1379  000014                     ?___aldiv:
  1380                           	callstack 0
  1381  000014                     ?___flneg:
  1382                           	callstack 0
  1383  000014                     ?___aodiv:
  1384                           	callstack 0
  1385  000014                     ?___aomod:
  1386                           	callstack 0
  1387  000014                     ?___lodiv:
  1388                           	callstack 0
  1389  000014                     ?___lomod:
  1390                           	callstack 0
  1391  000014                     UART1_Write@txData:
  1392                           	callstack 0
  1393  000014                     INTERRUPT_Initialize@state:
  1394                           	callstack 0
  1395  000014                     UART1_SetFramingErrorHandler@interruptHandler:
  1396                           	callstack 0
  1397  000014                     UART1_SetOverrunErrorHandler@interruptHandler:
  1398                           	callstack 0
  1399  000014                     UART1_SetErrorHandler@interruptHandler:
  1400                           	callstack 0
  1401  000014                     UART1_SetRxInterruptHandler@InterruptHandler:
  1402                           	callstack 0
  1403  000014                     UART1_SetTxInterruptHandler@InterruptHandler:
  1404                           	callstack 0
  1405  000014                     CCP3_SetCallBack@customCallBack:
  1406                           	callstack 0
  1407  000014                     CCP4_SetCallBack@customCallBack:
  1408                           	callstack 0
  1409  000014                     TMR5_SetGateInterruptHandler@InterruptHandler:
  1410                           	callstack 0
  1411  000014                     TMR4_SetInterruptHandler@InterruptHandler:
  1412                           	callstack 0
  1413  000014                     PWM7_LoadDutyValue@dutyValue:
  1414                           	callstack 0
  1415  000014                     PWM8_LoadDutyValue@dutyValue:
  1416                           	callstack 0
  1417  000014                     PWM5_LoadDutyValue@dutyValue:
  1418                           	callstack 0
  1419  000014                     PWM6_LoadDutyValue@dutyValue:
  1420                           	callstack 0
  1421  000014                     ___awdiv@dividend:
  1422                           	callstack 0
  1423  000014                     ___awmod@dividend:
  1424                           	callstack 0
  1425  000014                     ___lwdiv@dividend:
  1426                           	callstack 0
  1427  000014                     isupper@c:
  1428                           	callstack 0
  1429  000014                     strcpy@dest:
  1430                           	callstack 0
  1431  000014                     strlen@s:
  1432                           	callstack 0
  1433  000014                     strncmp@_l:
  1434                           	callstack 0
  1435  000014                     ___aldiv@dividend:
  1436                           	callstack 0
  1437  000014                     ___fleq@ff1:
  1438                           	callstack 0
  1439  000014                     ___flneg@f1:
  1440                           	callstack 0
  1441  000014                     ___fpclassifyf@x:
  1442                           	callstack 0
  1443  000014                     ___aodiv@dividend:
  1444                           	callstack 0
  1445  000014                     ___aomod@dividend:
  1446                           	callstack 0
  1447  000014                     ___lodiv@dividend:
  1448                           	callstack 0
  1449  000014                     ___lomod@dividend:
  1450                           	callstack 0
  1451                           
  1452                           ; 8 bytes @ 0x13
  1453  000014                     	ds	1
  1454  000015                     putch@txData:
  1455                           	callstack 0
  1456                           
  1457                           ; 1 bytes @ 0x14
  1458  000015                     	ds	1
  1459  000016                     ??_TMR5_Initialize:
  1460  000016                     ??_isupper:
  1461  000016                     ??_PWM7_LoadDutyValue:
  1462  000016                     ??_PWM8_LoadDutyValue:
  1463  000016                     ??_PWM5_LoadDutyValue:
  1464  000016                     ??_PWM6_LoadDutyValue:
  1465  000016                     ??_ADCC_GetSingleConversion:
  1466  000016                     getCurve@deltaLeft:
  1467                           	callstack 0
  1468  000016                     ___awdiv@divisor:
  1469                           	callstack 0
  1470  000016                     ___awmod@divisor:
  1471                           	callstack 0
  1472  000016                     ___lwdiv@divisor:
  1473                           	callstack 0
  1474  000016                     fputc@c:
  1475                           	callstack 0
  1476  000016                     strcpy@src:
  1477                           	callstack 0
  1478  000016                     strlen@a:
  1479                           	callstack 0
  1480  000016                     strncmp@_r:
  1481                           	callstack 0
  1482                           
  1483                           ; 2 bytes @ 0x15
  1484  000016                     	ds	2
  1485  000018                     ??___fpclassifyf:
  1486  000018                     ??_strcpy:
  1487  000018                     ADCC_GetSingleConversion@channel:
  1488                           	callstack 0
  1489  000018                     ___awdiv@counter:
  1490                           	callstack 0
  1491  000018                     ___awmod@counter:
  1492                           	callstack 0
  1493  000018                     ___lwdiv@counter:
  1494                           	callstack 0
  1495  000018                     getCurve@deltaRight:
  1496                           	callstack 0
  1497  000018                     setMotor@motorPower:
  1498                           	callstack 0
  1499  000018                     fputc@fp:
  1500                           	callstack 0
  1501  000018                     strncmp@n:
  1502                           	callstack 0
  1503  000018                     ___aldiv@divisor:
  1504                           	callstack 0
  1505  000018                     ___fleq@ff2:
  1506                           	callstack 0
  1507                           
  1508                           ; 4 bytes @ 0x17
  1509  000018                     	ds	1
  1510  000019                     ___awdiv@sign:
  1511                           	callstack 0
  1512  000019                     ___awmod@sign:
  1513                           	callstack 0
  1514  000019                     ___lwdiv@quotient:
  1515                           	callstack 0
  1516                           
  1517                           ; 2 bytes @ 0x18
  1518  000019                     	ds	1
  1519  00001A                     ??_setMotor:
  1520  00001A                     ??_fputc:
  1521  00001A                     ??_strncmp:
  1522  00001A                     ?_tolower:
  1523                           	callstack 0
  1524  00001A                     ___awdiv@quotient:
  1525                           	callstack 0
  1526  00001A                     strcpy@s:
  1527                           	callstack 0
  1528  00001A                     tolower@c:
  1529                           	callstack 0
  1530                           
  1531                           ; 2 bytes @ 0x19
  1532  00001A                     	ds	1
  1533  00001B                     strncmp@l:
  1534                           	callstack 0
  1535                           
  1536                           ; 2 bytes @ 0x1A
  1537  00001B                     	ds	1
  1538  00001C                     ??_tolower:
  1539  00001C                     ??___fleq:
  1540  00001C                     ?___xxtofl:
  1541                           	callstack 0
  1542  00001C                     ___aldiv@counter:
  1543                           	callstack 0
  1544  00001C                     ___fpclassifyf@e:
  1545                           	callstack 0
  1546  00001C                     strcpy@d:
  1547                           	callstack 0
  1548  00001C                     ___xxtofl@val:
  1549                           	callstack 0
  1550  00001C                     ___aodiv@divisor:
  1551                           	callstack 0
  1552  00001C                     ___aomod@divisor:
  1553                           	callstack 0
  1554  00001C                     ___lodiv@divisor:
  1555                           	callstack 0
  1556  00001C                     ___lomod@divisor:
  1557                           	callstack 0
  1558                           
  1559                           ; 8 bytes @ 0x1B
  1560  00001C                     	ds	1
  1561  00001D                     ___aldiv@sign:
  1562                           	callstack 0
  1563  00001D                     strncmp@r:
  1564                           	callstack 0
  1565                           
  1566                           ; 2 bytes @ 0x1C
  1567  00001D                     	ds	1
  1568  00001E                     ___aldiv@quotient:
  1569                           	callstack 0
  1570  00001E                     ___fpclassifyf@u:
  1571                           	callstack 0
  1572                           
  1573                           ; 4 bytes @ 0x1D
  1574  00001E                     	ds	1
  1575  00001F                     fputs@s:
  1576                           	callstack 0
  1577                           
  1578                           ; 2 bytes @ 0x1E
  1579  00001F                     	ds	1
  1580  000020                     ??___xxtofl:
  1581  000020                     _tolower$3692:
  1582                           	callstack 0
  1583                           
  1584                           ; 2 bytes @ 0x1F
  1585  000020                     	ds	1
  1586  000021                     fputs@fp:
  1587                           	callstack 0
  1588                           
  1589                           ; 2 bytes @ 0x20
  1590  000021                     	ds	1
  1591  000022                     ?_actSpeed:
  1592                           	callstack 0
  1593                           
  1594                           ; 2 bytes @ 0x21
  1595  000022                     	ds	1
  1596  000023                     fputs@c:
  1597                           	callstack 0
  1598                           
  1599                           ; 1 bytes @ 0x22
  1600  000023                     	ds	1
  1601  000024                     ___aodiv@counter:
  1602                           	callstack 0
  1603  000024                     ___aomod@counter:
  1604                           	callstack 0
  1605  000024                     ___lomod@counter:
  1606                           	callstack 0
  1607  000024                     ___xxtofl@sign:
  1608                           	callstack 0
  1609  000024                     actSpeed@speed:
  1610                           	callstack 0
  1611  000024                     fputs@i:
  1612                           	callstack 0
  1613  000024                     ___lodiv@quotient:
  1614                           	callstack 0
  1615                           
  1616                           ; 8 bytes @ 0x23
  1617  000024                     	ds	1
  1618  000025                     ___aodiv@sign:
  1619                           	callstack 0
  1620  000025                     ___aomod@sign:
  1621                           	callstack 0
  1622  000025                     ___xxtofl@exp:
  1623                           	callstack 0
  1624                           
  1625                           ; 1 bytes @ 0x24
  1626  000025                     	ds	1
  1627  000026                     ?_abs:
  1628                           	callstack 0
  1629  000026                     ?_pad:
  1630                           	callstack 0
  1631  000026                     pad@fp:
  1632                           	callstack 0
  1633  000026                     abs@a:
  1634                           	callstack 0
  1635  000026                     ___xxtofl@arg:
  1636                           	callstack 0
  1637  000026                     ___aodiv@quotient:
  1638                           	callstack 0
  1639                           
  1640                           ; 8 bytes @ 0x25
  1641  000026                     	ds	2
  1642  000028                     ??_abs:
  1643  000028                     pad@buf:
  1644                           	callstack 0
  1645                           
  1646                           ; 2 bytes @ 0x27
  1647  000028                     	ds	2
  1648  00002A                     ?___fldiv:
  1649                           	callstack 0
  1650  00002A                     ?___flmul:
  1651                           	callstack 0
  1652  00002A                     pad@p:
  1653                           	callstack 0
  1654  00002A                     ___fldiv@b:
  1655                           	callstack 0
  1656  00002A                     ___flmul@b:
  1657                           	callstack 0
  1658                           
  1659                           ; 4 bytes @ 0x29
  1660  00002A                     	ds	2
  1661  00002C                     ??_pad:
  1662  00002C                     ___lodiv@counter:
  1663                           	callstack 0
  1664                           
  1665                           ; 1 bytes @ 0x2B
  1666  00002C                     	ds	1
  1667  00002D                     pad@i:
  1668                           	callstack 0
  1669                           
  1670                           ; 2 bytes @ 0x2C
  1671  00002D                     	ds	1
  1672  00002E                     ___fldiv@a:
  1673                           	callstack 0
  1674  00002E                     ___flmul@a:
  1675                           	callstack 0
  1676                           
  1677                           ; 4 bytes @ 0x2D
  1678  00002E                     	ds	1
  1679  00002F                     pad@w:
  1680                           	callstack 0
  1681                           
  1682                           ; 2 bytes @ 0x2E
  1683  00002F                     	ds	2
  1684  000031                     ??_dtoa:
  1685  000031                     ??_utoa:
  1686                           
  1687                           ; 1 bytes @ 0x30
  1688  000031                     	ds	1
  1689  000032                     ??___fldiv:
  1690  000032                     ??___flmul:
  1691                           
  1692                           ; 1 bytes @ 0x31
  1693  000032                     	ds	4
  1694  000036                     ??___fladd:
  1695  000036                     ??___flge:
  1696  000036                     ?_floorf:
  1697                           	callstack 0
  1698  000036                     floorf@x:
  1699                           	callstack 0
  1700                           
  1701                           ; 4 bytes @ 0x35
  1702  000036                     	ds	4
  1703  00003A                     
  1704                           ; 1 bytes @ 0x39
  1705 ;;
  1706 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1707 ;;
  1708 ;; *************** function _main *****************
  1709 ;; Defined at:
  1710 ;;		line 8 in file "main.c"
  1711 ;; Parameters:    Size  Location     Type
  1712 ;;		None
  1713 ;; Auto vars:     Size  Location     Type
  1714 ;;		None
  1715 ;; Return value:  Size  Location     Type
  1716 ;;                  1    wreg      void 
  1717 ;; Registers used:
  1718 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1719 ;; Tracked objects:
  1720 ;;		On entry : 0/0
  1721 ;;		On exit  : 0/0
  1722 ;;		Unchanged: 0/0
  1723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1727 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1728 ;;Total ram usage:        0 bytes
  1729 ;; Hardware stack levels required when called: 19
  1730 ;; This function calls:
  1731 ;;		_SYSTEM_Initialize
  1732 ;;		_TMR4_SetInterruptHandler
  1733 ;;		_loop
  1734 ;; This function is called by:
  1735 ;;		Startup code after reset
  1736 ;; This function uses a non-reentrant model
  1737 ;;
  1738                           
  1739                           	psect	text0
  1740  006164                     __ptext0:
  1741                           	callstack 0
  1742  006164                     _main:
  1743                           	callstack 12
  1744  006164                     
  1745                           ;main.c: 9:     SYSTEM_Initialize();
  1746  006164  ECCE  F02C         	call	_SYSTEM_Initialize	;wreg free
  1747  006168                     
  1748                           ;main.c: 10:     (INTCON0bits.GIEH = 1);
  1749  006168  8ED2               	bsf	210,7,c	;volatile
  1750  00616A                     
  1751                           ;main.c: 11:     (INTCON0bits.GIEL = 1);
  1752  00616A  8CD2               	bsf	210,6,c	;volatile
  1753                           
  1754                           ;main.c: 12:     TMR4_SetInterruptHandler(TMR4_10msISR);
  1755  00616C  0EB8               	movlw	low _TMR4_10msISR
  1756  00616E  6E14               	movwf	TMR4_SetInterruptHandler@InterruptHandler^0,c
  1757  006170  0E62               	movlw	high _TMR4_10msISR
  1758  006172  6E15               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)^0,c
  1759  006174  EC4D  F031         	call	_TMR4_SetInterruptHandler	;wreg free
  1760  006178                     l9447:
  1761                           
  1762                           ;main.c: 15:         loop();
  1763  006178  ECC5  F022         	call	_loop	;wreg free
  1764  00617C  EFBC  F030         	goto	l9447
  1765  006180  EF57  F000         	goto	start
  1766  006184                     __end_of_main:
  1767                           	callstack 0
  1768                           
  1769 ;; *************** function _loop *****************
  1770 ;; Defined at:
  1771 ;;		line 19 in file "main.c"
  1772 ;; Parameters:    Size  Location     Type
  1773 ;;		None
  1774 ;; Auto vars:     Size  Location     Type
  1775 ;;		None
  1776 ;; Return value:  Size  Location     Type
  1777 ;;                  1    wreg      void 
  1778 ;; Registers used:
  1779 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1780 ;; Tracked objects:
  1781 ;;		On entry : 0/0
  1782 ;;		On exit  : 0/0
  1783 ;;		Unchanged: 0/0
  1784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1788 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1789 ;;Total ram usage:        0 bytes
  1790 ;; Hardware stack levels used: 1
  1791 ;; Hardware stack levels required when called: 18
  1792 ;; This function calls:
  1793 ;;		___flge
  1794 ;;		___xxtofl
  1795 ;;		_calcMotorPow
  1796 ;;		_calcSpeed
  1797 ;;		_calcSteering
  1798 ;;		_checkBatt
  1799 ;;		_checkCurveCount
  1800 ;;		_getBatteryVoltage
  1801 ;;		_getCurve
  1802 ;;		_getReverse
  1803 ;;		_setMotor
  1804 ;;		_setSteering
  1805 ;;		_startAccell
  1806 ;; This function is called by:
  1807 ;;		_main
  1808 ;; This function uses a non-reentrant model
  1809 ;;
  1810                           
  1811                           	psect	text1
  1812  00458A                     __ptext1:
  1813                           	callstack 0
  1814  00458A                     _loop:
  1815                           	callstack 12
  1816  00458A                     
  1817                           ;main.c: 20:     setMotor(0);
  1818  00458A  0E00               	movlw	0
  1819  00458C  6E19               	movwf	(setMotor@motorPower+1)^0,c
  1820  00458E  0E00               	movlw	0
  1821  004590  6E18               	movwf	setMotor@motorPower^0,c
  1822  004592  EC56  F026         	call	_setMotor	;wreg free
  1823                           
  1824                           ;main.c: 21:     setSteering(0, Front);
  1825  004596  0E00               	movlw	0
  1826  004598  0100               	movlb	0	; () banked
  1827  00459A  6F84               	movwf	(setSteering@steering+1)& (0+255),b
  1828  00459C  0E00               	movlw	0
  1829  00459E  6F83               	movwf	setSteering@steering& (0+255),b
  1830  0045A0  0E03               	movlw	3
  1831  0045A2  6F85               	movwf	setSteering@steeringMode& (0+255),b
  1832  0045A4  EC78  F01C         	call	_setSteering	;wreg free
  1833  0045A8                     l1230:
  1834  0045A8  B8CB               	btfsc	203,4,c	;volatile
  1835  0045AA  EFD9  F022         	goto	u10681
  1836  0045AE  EFDB  F022         	goto	u10680
  1837  0045B2                     u10681:
  1838  0045B2  EFD4  F022         	goto	l1230
  1839  0045B6                     u10680:
  1840  0045B6                     l9401:
  1841  0045B6  0100               	movlb	0	; () banked
  1842  0045B8  51FB               	movf	_cycle10ms& (0+255),w,b	;volatile
  1843  0045BA  B4D8               	btfsc	status,2,c
  1844  0045BC  EFE2  F022         	goto	u10691
  1845  0045C0  EFE4  F022         	goto	u10690
  1846  0045C4                     u10691:
  1847  0045C4  EFDB  F022         	goto	l9401
  1848  0045C8                     u10690:
  1849  0045C8                     
  1850                           ; BSR set to: 0
  1851                           ;main.c: 26:         cycle10ms = 0;
  1852  0045C8  0E00               	movlw	0
  1853  0045CA  6FFB               	movwf	_cycle10ms& (0+255),b	;volatile
  1854  0045CC                     
  1855                           ; BSR set to: 0
  1856                           ;main.c: 28:         getBatteryVoltage();
  1857  0045CC  EC1B  F031         	call	_getBatteryVoltage	;wreg free
  1858  0045D0                     
  1859                           ;main.c: 29:     } while (BatteryVolt < ((7.4) * 409.6));
  1860  0045D0  C12A  F01C         	movff	_BatteryVolt,___xxtofl@val
  1861  0045D4  C12B  F01D         	movff	_BatteryVolt+1,___xxtofl@val+1
  1862  0045D8  6A1E               	clrf	(___xxtofl@val+2)^0,c
  1863  0045DA  6A1F               	clrf	(___xxtofl@val+3)^0,c
  1864  0045DC  0E00               	movlw	0
  1865  0045DE  EC64  F01E         	call	___xxtofl
  1866  0045E2  C01C  F06D         	movff	?___xxtofl,___flge@ff1
  1867  0045E6  C01D  F06E         	movff	?___xxtofl+1,___flge@ff1+1
  1868  0045EA  C01E  F06F         	movff	?___xxtofl+2,___flge@ff1+2
  1869  0045EE  C01F  F070         	movff	?___xxtofl+3,___flge@ff1+3
  1870  0045F2  0EA4               	movlw	164
  1871  0045F4  0100               	movlb	0	; () banked
  1872  0045F6  6F71               	movwf	___flge@ff2& (0+255),b
  1873  0045F8  0E70               	movlw	112
  1874  0045FA  6F72               	movwf	(___flge@ff2+1)& (0+255),b
  1875  0045FC  0E3D               	movlw	61
  1876  0045FE  6F73               	movwf	(___flge@ff2+2)& (0+255),b
  1877  004600  0E45               	movlw	69
  1878  004602  6F74               	movwf	(___flge@ff2+3)& (0+255),b
  1879  004604  EC62  F024         	call	___flge	;wreg free
  1880  004608  0100               	movlb	0	; () banked
  1881  00460A  A0D8               	btfss	status,0,c
  1882  00460C  EF0A  F023         	goto	u10701
  1883  004610  EF0C  F023         	goto	u10700
  1884  004614                     u10701:
  1885  004614  EFDB  F022         	goto	l9401
  1886  004618                     u10700:
  1887  004618                     
  1888                           ; BSR set to: 0
  1889                           ;main.c: 31:     startAccell();
  1890  004618  EC1C  F02A         	call	_startAccell	;wreg free
  1891  00461C                     
  1892                           ;main.c: 33:     oldDistLeft = distLeft;
  1893  00461C  C0F7  F136         	movff	_distLeft,_oldDistLeft	;volatile
  1894  004620  C0F8  F137         	movff	_distLeft+1,_oldDistLeft+1	;volatile
  1895  004624                     
  1896                           ;main.c: 34:     oldDistRight = distRight;
  1897  004624  C0F5  F134         	movff	_distRight,_oldDistRight	;volatile
  1898  004628  C0F6  F135         	movff	_distRight+1,_oldDistRight+1	;volatile
  1899  00462C                     
  1900                           ;main.c: 35:     cycle10ms = 0;
  1901  00462C  0E00               	movlw	0
  1902  00462E  0100               	movlb	0	; () banked
  1903  004630  6FFB               	movwf	_cycle10ms& (0+255),b	;volatile
  1904  004632                     l9417:
  1905  004632  0100               	movlb	0	; () banked
  1906  004634  51FB               	movf	_cycle10ms& (0+255),w,b	;volatile
  1907  004636  B4D8               	btfsc	status,2,c
  1908  004638  EF20  F023         	goto	u10711
  1909  00463C  EF22  F023         	goto	u10710
  1910  004640                     u10711:
  1911  004640  EF19  F023         	goto	l9417
  1912  004644                     u10710:
  1913  004644                     
  1914                           ; BSR set to: 0
  1915                           ;main.c: 38:         cycle10ms = 0;
  1916  004644  0E00               	movlw	0
  1917  004646  6FFB               	movwf	_cycle10ms& (0+255),b	;volatile
  1918  004648                     
  1919                           ; BSR set to: 0
  1920                           ;main.c: 40:         if (!PORTBbits.RB5) {
  1921  004648  BACB               	btfsc	203,5,c	;volatile
  1922  00464A  EF29  F023         	goto	u10721
  1923  00464E  EF2B  F023         	goto	u10720
  1924  004652                     u10721:
  1925  004652  EF3D  F023         	goto	l9427
  1926  004656                     u10720:
  1927  004656                     
  1928                           ; BSR set to: 0
  1929                           ;main.c: 41:             setSpeed = 0;
  1930  004656  0E00               	movlw	0
  1931  004658  6FF0               	movwf	(_setSpeed+1)& (0+255),b
  1932  00465A  0E00               	movlw	0
  1933  00465C  6FEF               	movwf	_setSpeed& (0+255),b
  1934                           
  1935                           ;main.c: 42:             actMotorPow = 0;
  1936  00465E  0E00               	movlw	0
  1937  004660  6FEC               	movwf	(_actMotorPow+1)& (0+255),b
  1938  004662  0E00               	movlw	0
  1939  004664  6FEB               	movwf	_actMotorPow& (0+255),b
  1940  004666                     
  1941                           ; BSR set to: 0
  1942                           ;main.c: 43:             setSteering(0, Front);
  1943  004666  0E00               	movlw	0
  1944  004668  6F84               	movwf	(setSteering@steering+1)& (0+255),b
  1945  00466A  0E00               	movlw	0
  1946  00466C  6F83               	movwf	setSteering@steering& (0+255),b
  1947  00466E  0E03               	movlw	3
  1948  004670  6F85               	movwf	setSteering@steeringMode& (0+255),b
  1949  004672  EC78  F01C         	call	_setSteering	;wreg free
  1950                           
  1951                           ;main.c: 44:             break;
  1952  004676  EF57  F023         	goto	l1246
  1953  00467A                     l9427:
  1954                           
  1955                           ; BSR set to: 0
  1956                           ;main.c: 53:         if (checkBatt()) {
  1957  00467A  EC01  F02B         	call	_checkBatt	;wreg free
  1958  00467E  0900               	iorlw	0
  1959  004680  B4D8               	btfsc	status,2,c
  1960  004682  EF45  F023         	goto	u10731
  1961  004686  EF47  F023         	goto	u10730
  1962  00468A                     u10731:
  1963  00468A  EF49  F023         	goto	l9431
  1964  00468E                     u10730:
  1965  00468E  EF57  F023         	goto	l1246
  1966  004692                     l9431:
  1967                           
  1968                           ;main.c: 57:         getCurve();
  1969  004692  EC73  F01D         	call	_getCurve	;wreg free
  1970  004696                     
  1971                           ;main.c: 58:         getReverse();
  1972  004696  EC78  F021         	call	_getReverse	;wreg free
  1973  00469A                     
  1974                           ;main.c: 60:         calcSteering();
  1975  00469A  EC02  F020         	call	_calcSteering	;wreg free
  1976  00469E                     
  1977                           ;main.c: 61:         calcSpeed();
  1978  00469E  EC79  F01B         	call	_calcSpeed	;wreg free
  1979  0046A2                     
  1980                           ;main.c: 62:         calcMotorPow();
  1981  0046A2  EC1F  F022         	call	_calcMotorPow	;wreg free
  1982                           
  1983                           ;main.c: 64:         checkCurveCount();
  1984  0046A6  EC2F  F027         	call	_checkCurveCount	;wreg free
  1985  0046AA  EF19  F023         	goto	l9417
  1986  0046AE                     l1246:
  1987  0046AE  0012               	return		;funcret
  1988  0046B0                     __end_of_loop:
  1989                           	callstack 0
  1990                           
  1991 ;; *************** function _startAccell *****************
  1992 ;; Defined at:
  1993 ;;		line 105 in file "main.c"
  1994 ;; Parameters:    Size  Location     Type
  1995 ;;		None
  1996 ;; Auto vars:     Size  Location     Type
  1997 ;;  i               2   16[BANK1 ] short 
  1998 ;; Return value:  Size  Location     Type
  1999 ;;                  1    wreg      void 
  2000 ;; Registers used:
  2001 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2002 ;; Tracked objects:
  2003 ;;		On entry : 0/0
  2004 ;;		On exit  : 0/0
  2005 ;;		Unchanged: 0/0
  2006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2008 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2010 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2011 ;;Total ram usage:        2 bytes
  2012 ;; Hardware stack levels used: 1
  2013 ;; Hardware stack levels required when called: 17
  2014 ;; This function calls:
  2015 ;;		_printf
  2016 ;;		_setMotor
  2017 ;;		_setSteering
  2018 ;; This function is called by:
  2019 ;;		_loop
  2020 ;; This function uses a non-reentrant model
  2021 ;;
  2022                           
  2023                           	psect	text2
  2024  005438                     __ptext2:
  2025                           	callstack 0
  2026  005438                     _startAccell:
  2027                           	callstack 12
  2028  005438                     
  2029                           ;main.c: 106:     setSteering(0, Front);
  2030  005438  0E00               	movlw	0
  2031  00543A  0100               	movlb	0	; () banked
  2032  00543C  6F84               	movwf	(setSteering@steering+1)& (0+255),b
  2033  00543E  0E00               	movlw	0
  2034  005440  6F83               	movwf	setSteering@steering& (0+255),b
  2035  005442  0E03               	movlw	3
  2036  005444  6F85               	movwf	setSteering@steeringMode& (0+255),b
  2037  005446  EC78  F01C         	call	_setSteering	;wreg free
  2038  00544A                     
  2039                           ;main.c: 107:     actMotorPow = (100) - (int16_t)((240) / (20));
  2040  00544A  0E00               	movlw	0
  2041  00544C  0100               	movlb	0	; () banked
  2042  00544E  6FEC               	movwf	(_actMotorPow+1)& (0+255),b
  2043  005450  0E58               	movlw	88
  2044  005452  6FEB               	movwf	_actMotorPow& (0+255),b
  2045  005454                     
  2046                           ; BSR set to: 0
  2047                           ;main.c: 108:     for (int16_t i = 0; i <= (int16_t) ((20) - ((100) / (int16_t)((240) / 
      +                          (20)))); ++i) {
  2048  005454  0E00               	movlw	0
  2049  005456  0101               	movlb	1	; () banked
  2050  005458  6FB5               	movwf	(startAccell@i+1)& (0+255),b
  2051  00545A  0E00               	movlw	0
  2052  00545C  6FB4               	movwf	startAccell@i& (0+255),b
  2053  00545E                     l9165:
  2054                           
  2055                           ; BSR set to: 1
  2056                           ;main.c: 109:         actMotorPow += (int16_t)((240) / (20));
  2057  00545E  0E0C               	movlw	12
  2058  005460  0100               	movlb	0	; () banked
  2059  005462  27EB               	addwf	_actMotorPow& (0+255),f,b
  2060  005464  0E00               	movlw	0
  2061  005466  23EC               	addwfc	(_actMotorPow+1)& (0+255),f,b
  2062  005468                     
  2063                           ; BSR set to: 0
  2064                           ;main.c: 110:         setMotor(actMotorPow);
  2065  005468  C0EB  F018         	movff	_actMotorPow,setMotor@motorPower
  2066  00546C  C0EC  F019         	movff	_actMotorPow+1,setMotor@motorPower+1
  2067  005470  EC56  F026         	call	_setMotor	;wreg free
  2068  005474                     
  2069                           ;main.c: 111:         cycle10ms = 0;
  2070  005474  0E00               	movlw	0
  2071  005476  0100               	movlb	0	; () banked
  2072  005478  6FFB               	movwf	_cycle10ms& (0+255),b	;volatile
  2073  00547A                     l9171:
  2074                           
  2075                           ; BSR set to: 0
  2076  00547A  51FB               	movf	_cycle10ms& (0+255),w,b	;volatile
  2077  00547C  B4D8               	btfsc	status,2,c
  2078  00547E  EF43  F02A         	goto	u10361
  2079  005482  EF45  F02A         	goto	u10360
  2080  005486                     u10361:
  2081  005486  EF3D  F02A         	goto	l9171
  2082  00548A                     u10360:
  2083  00548A                     
  2084                           ; BSR set to: 0
  2085                           ;main.c: 113:     }
  2086  00548A  0101               	movlb	1	; () banked
  2087  00548C  4BB4               	infsnz	startAccell@i& (0+255),f,b
  2088  00548E  2BB5               	incf	(startAccell@i+1)& (0+255),f,b
  2089  005490                     
  2090                           ; BSR set to: 1
  2091  005490  BFB5               	btfsc	(startAccell@i+1)& (0+255),7,b
  2092  005492  EF54  F02A         	goto	u10371
  2093  005496  51B5               	movf	(startAccell@i+1)& (0+255),w,b
  2094  005498  E109               	bnz	u10370
  2095  00549A  0E0D               	movlw	13
  2096  00549C  5DB4               	subwf	startAccell@i& (0+255),w,b
  2097  00549E  A0D8               	btfss	status,0,c
  2098  0054A0  EF54  F02A         	goto	u10371
  2099  0054A4  EF56  F02A         	goto	u10370
  2100  0054A8                     u10371:
  2101  0054A8  EF2F  F02A         	goto	l9165
  2102  0054AC                     u10370:
  2103  0054AC                     
  2104                           ; BSR set to: 1
  2105                           ;main.c: 114:     printf("starAccelPower: %d\n", actMotorPow);
  2106  0054AC  0E48               	movlw	low STR_1
  2107  0054AE  6FAC               	movwf	printf@fmt& (0+255),b
  2108  0054B0  0E10               	movlw	high STR_1
  2109  0054B2  6FAD               	movwf	(printf@fmt+1)& (0+255),b
  2110  0054B4  C0EB  F1AE         	movff	_actMotorPow,?_printf+2
  2111  0054B8  C0EC  F1AF         	movff	_actMotorPow+1,?_printf+3
  2112  0054BC  EC66  F030         	call	_printf	;wreg free
  2113  0054C0                     
  2114                           ;main.c: 116:     cycle10ms = 0;
  2115  0054C0  0E00               	movlw	0
  2116  0054C2  0100               	movlb	0	; () banked
  2117  0054C4  6FFB               	movwf	_cycle10ms& (0+255),b	;volatile
  2118  0054C6                     l9181:
  2119                           
  2120                           ; BSR set to: 0
  2121  0054C6  0E12               	movlw	18
  2122  0054C8  65FB               	cpfsgt	_cycle10ms& (0+255),b	;volatile
  2123  0054CA  EF69  F02A         	goto	u10381
  2124  0054CE  EF6B  F02A         	goto	u10380
  2125  0054D2                     u10381:
  2126  0054D2  EF63  F02A         	goto	l9181
  2127  0054D6                     u10380:
  2128  0054D6                     
  2129                           ; BSR set to: 0
  2130  0054D6  0012               	return		;funcret
  2131  0054D8                     __end_of_startAccell:
  2132                           	callstack 0
  2133                           
  2134 ;; *************** function _getReverse *****************
  2135 ;; Defined at:
  2136 ;;		line 196 in file "main.c"
  2137 ;; Parameters:    Size  Location     Type
  2138 ;;		None
  2139 ;; Auto vars:     Size  Location     Type
  2140 ;;		None
  2141 ;; Return value:  Size  Location     Type
  2142 ;;                  1    wreg      void 
  2143 ;; Registers used:
  2144 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2145 ;; Tracked objects:
  2146 ;;		On entry : 0/0
  2147 ;;		On exit  : 0/0
  2148 ;;		Unchanged: 0/0
  2149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2153 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2154 ;;Total ram usage:        0 bytes
  2155 ;; Hardware stack levels used: 1
  2156 ;; Hardware stack levels required when called: 17
  2157 ;; This function calls:
  2158 ;;		_printf
  2159 ;; This function is called by:
  2160 ;;		_loop
  2161 ;; This function uses a non-reentrant model
  2162 ;;
  2163                           
  2164                           	psect	text3
  2165  0042F0                     __ptext3:
  2166                           	callstack 0
  2167  0042F0                     _getReverse:
  2168                           	callstack 12
  2169  0042F0                     
  2170                           ;main.c: 197:     if (distFront < (15)) {
  2171  0042F0  0100               	movlb	0	; () banked
  2172  0042F2  51FE               	movf	(_distFront+1)& (0+255),w,b	;volatile
  2173  0042F4  E107               	bnz	u10411
  2174  0042F6  0E0F               	movlw	15
  2175  0042F8  5DFD               	subwf	_distFront& (0+255),w,b	;volatile
  2176  0042FA  B0D8               	btfsc	status,0,c
  2177  0042FC  EF82  F021         	goto	u10411
  2178  004300  EF84  F021         	goto	u10410
  2179  004304                     u10411:
  2180  004304  EF89  F021         	goto	l9209
  2181  004308                     u10410:
  2182  004308                     
  2183                           ; BSR set to: 0
  2184                           ;main.c: 198:         ++reverseCount;
  2185  004308  0101               	movlb	1	; () banked
  2186  00430A  4B38               	infsnz	_reverseCount& (0+255),f,b
  2187  00430C  2B39               	incf	(_reverseCount+1)& (0+255),f,b
  2188                           
  2189                           ;main.c: 199:     } else if(driveMode != ReverseRight && driveMode != ReverseLeft) {
  2190  00430E  EFA0  F021         	goto	l9215
  2191  004312                     l9209:
  2192                           
  2193                           ; BSR set to: 0
  2194  004312  0E02               	movlw	2
  2195  004314  19FC               	xorwf	_driveMode& (0+255),w,b
  2196  004316  B4D8               	btfsc	status,2,c
  2197  004318  EF90  F021         	goto	u10421
  2198  00431C  EF92  F021         	goto	u10420
  2199  004320                     u10421:
  2200  004320  EFA0  F021         	goto	l9215
  2201  004324                     u10420:
  2202  004324                     
  2203                           ; BSR set to: 0
  2204  004324  0E03               	movlw	3
  2205  004326  19FC               	xorwf	_driveMode& (0+255),w,b
  2206  004328  B4D8               	btfsc	status,2,c
  2207  00432A  EF99  F021         	goto	u10431
  2208  00432E  EF9B  F021         	goto	u10430
  2209  004332                     u10431:
  2210  004332  EFA0  F021         	goto	l9215
  2211  004336                     u10430:
  2212  004336                     
  2213                           ; BSR set to: 0
  2214                           ;main.c: 200:         reverseCount = 0;
  2215  004336  0E00               	movlw	0
  2216  004338  0101               	movlb	1	; () banked
  2217  00433A  6F39               	movwf	(_reverseCount+1)& (0+255),b
  2218  00433C  0E00               	movlw	0
  2219  00433E  6F38               	movwf	_reverseCount& (0+255),b
  2220  004340                     l9215:
  2221                           
  2222                           ;main.c: 203:     if (reverseCount > (50)) {
  2223  004340  0101               	movlb	1	; () banked
  2224  004342  5139               	movf	(_reverseCount+1)& (0+255),w,b
  2225  004344  E109               	bnz	u10440
  2226  004346  0E33               	movlw	51
  2227  004348  5D38               	subwf	_reverseCount& (0+255),w,b
  2228  00434A  A0D8               	btfss	status,0,c
  2229  00434C  EFAA  F021         	goto	u10441
  2230  004350  EFAC  F021         	goto	u10440
  2231  004354                     u10441:
  2232  004354  EF1E  F022         	goto	l1314
  2233  004358                     u10440:
  2234  004358                     
  2235                           ; BSR set to: 1
  2236                           ;main.c: 204:         ++reverseTime;
  2237  004358  4B2C               	infsnz	_reverseTime& (0+255),f,b
  2238  00435A  2B2D               	incf	(_reverseTime+1)& (0+255),f,b
  2239  00435C                     
  2240                           ; BSR set to: 1
  2241                           ;main.c: 206:         if (driveMode != ReverseRight && driveMode != ReverseLeft) {
  2242  00435C  0E02               	movlw	2
  2243  00435E  0100               	movlb	0	; () banked
  2244  004360  19FC               	xorwf	_driveMode& (0+255),w,b
  2245  004362  B4D8               	btfsc	status,2,c
  2246  004364  EFB6  F021         	goto	u10451
  2247  004368  EFB8  F021         	goto	u10450
  2248  00436C                     u10451:
  2249  00436C  EFE2  F021         	goto	l9233
  2250  004370                     u10450:
  2251  004370                     
  2252                           ; BSR set to: 0
  2253  004370  0E03               	movlw	3
  2254  004372  19FC               	xorwf	_driveMode& (0+255),w,b
  2255  004374  B4D8               	btfsc	status,2,c
  2256  004376  EFBF  F021         	goto	u10461
  2257  00437A  EFC1  F021         	goto	u10460
  2258  00437E                     u10461:
  2259  00437E  EFE2  F021         	goto	l9233
  2260  004382                     u10460:
  2261  004382                     
  2262                           ; BSR set to: 0
  2263                           ;main.c: 207:             if (distLeft > distRight) {
  2264  004382  51F7               	movf	_distLeft& (0+255),w,b	;volatile
  2265  004384  5DF5               	subwf	_distRight& (0+255),w,b	;volatile
  2266  004386  51F8               	movf	(_distLeft+1)& (0+255),w,b	;volatile
  2267  004388  59F6               	subwfb	(_distRight+1)& (0+255),w,b	;volatile
  2268  00438A  B0D8               	btfsc	status,0,c
  2269  00438C  EFCA  F021         	goto	u10471
  2270  004390  EFCC  F021         	goto	u10470
  2271  004394                     u10471:
  2272  004394  EFD8  F021         	goto	l9229
  2273  004398                     u10470:
  2274  004398                     
  2275                           ; BSR set to: 0
  2276                           ;main.c: 208:                 printf("ReverseRigth\n");
  2277  004398  0E7A               	movlw	low STR_6
  2278  00439A  0101               	movlb	1	; () banked
  2279  00439C  6FAC               	movwf	printf@fmt& (0+255),b
  2280  00439E  0E10               	movlw	high STR_6
  2281  0043A0  6FAD               	movwf	(printf@fmt+1)& (0+255),b
  2282  0043A2  EC66  F030         	call	_printf	;wreg free
  2283  0043A6                     
  2284                           ;main.c: 209:                 driveMode = ReverseRight;
  2285  0043A6  0E02               	movlw	2
  2286  0043A8  0100               	movlb	0	; () banked
  2287  0043AA  6FFC               	movwf	_driveMode& (0+255),b
  2288                           
  2289                           ;main.c: 210:             } else {
  2290  0043AC  EFE2  F021         	goto	l9233
  2291  0043B0                     l9229:
  2292                           
  2293                           ; BSR set to: 0
  2294                           ;main.c: 211:                 printf("ReverseLeft\n");
  2295  0043B0  0E88               	movlw	low STR_7
  2296  0043B2  0101               	movlb	1	; () banked
  2297  0043B4  6FAC               	movwf	printf@fmt& (0+255),b
  2298  0043B6  0E10               	movlw	high STR_7
  2299  0043B8  6FAD               	movwf	(printf@fmt+1)& (0+255),b
  2300  0043BA  EC66  F030         	call	_printf	;wreg free
  2301  0043BE                     
  2302                           ;main.c: 212:                 driveMode = ReverseLeft;
  2303  0043BE  0E03               	movlw	3
  2304  0043C0  0100               	movlb	0	; () banked
  2305  0043C2  6FFC               	movwf	_driveMode& (0+255),b
  2306  0043C4                     l9233:
  2307                           
  2308                           ; BSR set to: 0
  2309                           ;main.c: 216:         if (distFront > (35) || reverseTime > (300)) {
  2310  0043C4  51FE               	movf	(_distFront+1)& (0+255),w,b	;volatile
  2311  0043C6  E107               	bnz	u10481
  2312  0043C8  0E24               	movlw	36
  2313  0043CA  5DFD               	subwf	_distFront& (0+255),w,b	;volatile
  2314  0043CC  B0D8               	btfsc	status,0,c
  2315  0043CE  EFEB  F021         	goto	u10481
  2316  0043D2  EFED  F021         	goto	u10480
  2317  0043D6                     u10481:
  2318  0043D6  EFFC  F021         	goto	l9237
  2319  0043DA                     u10480:
  2320  0043DA                     
  2321                           ; BSR set to: 0
  2322  0043DA  0101               	movlb	1	; () banked
  2323  0043DC  BF2D               	btfsc	(_reverseTime+1)& (0+255),7,b
  2324  0043DE  EFFA  F021         	goto	u10491
  2325  0043E2  0E2D               	movlw	45
  2326  0043E4  5D2C               	subwf	_reverseTime& (0+255),w,b
  2327  0043E6  0E01               	movlw	1
  2328  0043E8  592D               	subwfb	(_reverseTime+1)& (0+255),w,b
  2329  0043EA  A0D8               	btfss	status,0,c
  2330  0043EC  EFFA  F021         	goto	u10491
  2331  0043F0  EFFC  F021         	goto	u10490
  2332  0043F4                     u10491:
  2333  0043F4  EF1E  F022         	goto	l1314
  2334  0043F8                     u10490:
  2335  0043F8                     l9237:
  2336                           
  2337                           ;main.c: 217:             printf("Stop Reverse\n");
  2338  0043F8  0E6C               	movlw	low STR_8
  2339  0043FA  0101               	movlb	1	; () banked
  2340  0043FC  6FAC               	movwf	printf@fmt& (0+255),b
  2341  0043FE  0E10               	movlw	high STR_8
  2342  004400  6FAD               	movwf	(printf@fmt+1)& (0+255),b
  2343  004402  EC66  F030         	call	_printf	;wreg free
  2344  004406                     
  2345                           ;main.c: 218:             if (distLeft > distRight) {
  2346  004406  0100               	movlb	0	; () banked
  2347  004408  51F7               	movf	_distLeft& (0+255),w,b	;volatile
  2348  00440A  5DF5               	subwf	_distRight& (0+255),w,b	;volatile
  2349  00440C  51F8               	movf	(_distLeft+1)& (0+255),w,b	;volatile
  2350  00440E  59F6               	subwfb	(_distRight+1)& (0+255),w,b	;volatile
  2351  004410  B0D8               	btfsc	status,0,c
  2352  004412  EF0D  F022         	goto	u10501
  2353  004416  EF0F  F022         	goto	u10500
  2354  00441A                     u10501:
  2355  00441A  EF13  F022         	goto	l9243
  2356  00441E                     u10500:
  2357  00441E                     
  2358                           ; BSR set to: 0
  2359                           ;main.c: 219:                 driveMode = CurveLeft;
  2360  00441E  0E04               	movlw	4
  2361  004420  6FFC               	movwf	_driveMode& (0+255),b
  2362                           
  2363                           ;main.c: 220:             } else {
  2364  004422  EF15  F022         	goto	l1313
  2365  004426                     l9243:
  2366                           
  2367                           ; BSR set to: 0
  2368                           ;main.c: 221:                 driveMode = CurveRight;
  2369  004426  0E05               	movlw	5
  2370  004428  6FFC               	movwf	_driveMode& (0+255),b
  2371  00442A                     l1313:
  2372                           
  2373                           ; BSR set to: 0
  2374                           ;main.c: 224:             reverseCount = 0;
  2375  00442A  0E00               	movlw	0
  2376  00442C  0101               	movlb	1	; () banked
  2377  00442E  6F39               	movwf	(_reverseCount+1)& (0+255),b
  2378  004430  0E00               	movlw	0
  2379  004432  6F38               	movwf	_reverseCount& (0+255),b
  2380                           
  2381                           ;main.c: 225:             reverseTime = 0;
  2382  004434  0E00               	movlw	0
  2383  004436  6F2D               	movwf	(_reverseTime+1)& (0+255),b
  2384  004438  0E00               	movlw	0
  2385  00443A  6F2C               	movwf	_reverseTime& (0+255),b
  2386  00443C                     l1314:
  2387                           
  2388                           ; BSR set to: 1
  2389  00443C  0012               	return		;funcret
  2390  00443E                     __end_of_getReverse:
  2391                           	callstack 0
  2392                           
  2393 ;; *************** function _getCurve *****************
  2394 ;; Defined at:
  2395 ;;		line 133 in file "main.c"
  2396 ;; Parameters:    Size  Location     Type
  2397 ;;		None
  2398 ;; Auto vars:     Size  Location     Type
  2399 ;;  deltaRight      2   23[COMRAM] short 
  2400 ;;  deltaLeft       2   21[COMRAM] short 
  2401 ;; Return value:  Size  Location     Type
  2402 ;;                  1    wreg      void 
  2403 ;; Registers used:
  2404 ;;		wreg, status,2, status,0
  2405 ;; Tracked objects:
  2406 ;;		On entry : 0/0
  2407 ;;		On exit  : 0/0
  2408 ;;		Unchanged: 0/0
  2409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2411 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2412 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2413 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2414 ;;Total ram usage:        6 bytes
  2415 ;; Hardware stack levels used: 1
  2416 ;; Hardware stack levels required when called: 8
  2417 ;; This function calls:
  2418 ;;		Nothing
  2419 ;; This function is called by:
  2420 ;;		_loop
  2421 ;; This function uses a non-reentrant model
  2422 ;;
  2423                           
  2424                           	psect	text4
  2425  003AE6                     __ptext4:
  2426                           	callstack 0
  2427  003AE6                     _getCurve:
  2428                           	callstack 21
  2429  003AE6                     
  2430                           ;main.c: 134:     int16_t deltaLeft;;main.c: 135:     int16_t deltaRight;;main.c: 137:  
      +                             switch (curveMode) {
  2431  003AE6  EF3E  F01E         	goto	l7017
  2432  003AEA                     l6971:
  2433                           
  2434                           ;main.c: 139:             deltaLeft = (int16_t) (distLeft - oldDistLeft);
  2435  003AEA  0101               	movlb	1	; () banked
  2436  003AEC  5136               	movf	_oldDistLeft& (0+255),w,b
  2437  003AEE  0100               	movlb	0	; () banked
  2438  003AF0  5DF7               	subwf	_distLeft& (0+255),w,b	;volatile
  2439  003AF2  6E16               	movwf	getCurve@deltaLeft^0,c
  2440  003AF4  0101               	movlb	1	; () banked
  2441  003AF6  5137               	movf	(_oldDistLeft+1)& (0+255),w,b
  2442  003AF8  0100               	movlb	0	; () banked
  2443  003AFA  59F8               	subwfb	(_distLeft+1)& (0+255),w,b	;volatile
  2444  003AFC  6E17               	movwf	(getCurve@deltaLeft+1)^0,c
  2445                           
  2446                           ;main.c: 140:             deltaRight = (int16_t) (distRight - oldDistRight);
  2447  003AFE  0101               	movlb	1	; () banked
  2448  003B00  5134               	movf	_oldDistRight& (0+255),w,b
  2449  003B02  0100               	movlb	0	; () banked
  2450  003B04  5DF5               	subwf	_distRight& (0+255),w,b	;volatile
  2451  003B06  6E18               	movwf	getCurve@deltaRight^0,c
  2452  003B08  0101               	movlb	1	; () banked
  2453  003B0A  5135               	movf	(_oldDistRight+1)& (0+255),w,b
  2454  003B0C  0100               	movlb	0	; () banked
  2455  003B0E  59F6               	subwfb	(_distRight+1)& (0+255),w,b	;volatile
  2456  003B10  6E19               	movwf	(getCurve@deltaRight+1)^0,c
  2457                           
  2458                           ;main.c: 143:             if (deltaLeft > (30) && deltaLeft < (300) && oldDistLeft < (12
      +                          5)) {
  2459  003B12  BE17               	btfsc	(getCurve@deltaLeft+1)^0,7,c
  2460  003B14  EF95  F01D         	goto	u6791
  2461  003B18  5017               	movf	(getCurve@deltaLeft+1)^0,w,c
  2462  003B1A  E109               	bnz	u6790
  2463  003B1C  0E1F               	movlw	31
  2464  003B1E  5C16               	subwf	getCurve@deltaLeft^0,w,c
  2465  003B20  A0D8               	btfss	status,0,c
  2466  003B22  EF95  F01D         	goto	u6791
  2467  003B26  EF97  F01D         	goto	u6790
  2468  003B2A                     u6791:
  2469  003B2A  EFBB  F01D         	goto	l6981
  2470  003B2E                     u6790:
  2471  003B2E                     
  2472                           ; BSR set to: 0
  2473  003B2E  BE17               	btfsc	(getCurve@deltaLeft+1)^0,7,c
  2474  003B30  EFA5  F01D         	goto	u6800
  2475  003B34  0E2C               	movlw	44
  2476  003B36  5C16               	subwf	getCurve@deltaLeft^0,w,c
  2477  003B38  0E01               	movlw	1
  2478  003B3A  5817               	subwfb	(getCurve@deltaLeft+1)^0,w,c
  2479  003B3C  B0D8               	btfsc	status,0,c
  2480  003B3E  EFA3  F01D         	goto	u6801
  2481  003B42  EFA5  F01D         	goto	u6800
  2482  003B46                     u6801:
  2483  003B46  EFBB  F01D         	goto	l6981
  2484  003B4A                     u6800:
  2485  003B4A                     
  2486                           ; BSR set to: 0
  2487  003B4A  0101               	movlb	1	; () banked
  2488  003B4C  5137               	movf	(_oldDistLeft+1)& (0+255),w,b
  2489  003B4E  E107               	bnz	u6811
  2490  003B50  0E7D               	movlw	125
  2491  003B52  5D36               	subwf	_oldDistLeft& (0+255),w,b
  2492  003B54  B0D8               	btfsc	status,0,c
  2493  003B56  EFAF  F01D         	goto	u6811
  2494  003B5A  EFB1  F01D         	goto	u6810
  2495  003B5E                     u6811:
  2496  003B5E  EFBB  F01D         	goto	l6981
  2497  003B62                     u6810:
  2498  003B62                     
  2499                           ; BSR set to: 1
  2500                           ;main.c: 144:                 delay = 0;
  2501  003B62  0E00               	movlw	0
  2502  003B64  6E40               	movwf	_delay^0,c
  2503                           
  2504                           ;main.c: 145:                 curveMode = BeforeCurve;
  2505  003B66  0E01               	movlw	1
  2506  003B68  6E41               	movwf	_curveMode^0,c
  2507                           
  2508                           ;main.c: 146:                 driveMode = CurveLeft;
  2509  003B6A  0E04               	movlw	4
  2510  003B6C  0100               	movlb	0	; () banked
  2511  003B6E  6FFC               	movwf	_driveMode& (0+255),b
  2512  003B70                     
  2513                           ; BSR set to: 0
  2514                           ;main.c: 147:                 ++curveLeftCount;
  2515  003B70  2BFA               	incf	_curveLeftCount& (0+255),f,b
  2516                           
  2517                           ;main.c: 150:             } else if (deltaRight > (30) && deltaRight < (300) && oldDistR
      +                          ight < (125)) {
  2518  003B72  EF5B  F01E         	goto	l1286
  2519  003B76                     l6981:
  2520  003B76  BE19               	btfsc	(getCurve@deltaRight+1)^0,7,c
  2521  003B78  EFC7  F01D         	goto	u6821
  2522  003B7C  5019               	movf	(getCurve@deltaRight+1)^0,w,c
  2523  003B7E  E109               	bnz	u6820
  2524  003B80  0E1F               	movlw	31
  2525  003B82  5C18               	subwf	getCurve@deltaRight^0,w,c
  2526  003B84  A0D8               	btfss	status,0,c
  2527  003B86  EFC7  F01D         	goto	u6821
  2528  003B8A  EFC9  F01D         	goto	u6820
  2529  003B8E                     u6821:
  2530  003B8E  EF5B  F01E         	goto	l1286
  2531  003B92                     u6820:
  2532  003B92  BE19               	btfsc	(getCurve@deltaRight+1)^0,7,c
  2533  003B94  EFD7  F01D         	goto	u6830
  2534  003B98  0E2C               	movlw	44
  2535  003B9A  5C18               	subwf	getCurve@deltaRight^0,w,c
  2536  003B9C  0E01               	movlw	1
  2537  003B9E  5819               	subwfb	(getCurve@deltaRight+1)^0,w,c
  2538  003BA0  B0D8               	btfsc	status,0,c
  2539  003BA2  EFD5  F01D         	goto	u6831
  2540  003BA6  EFD7  F01D         	goto	u6830
  2541  003BAA                     u6831:
  2542  003BAA  EF5B  F01E         	goto	l1286
  2543  003BAE                     u6830:
  2544  003BAE  0101               	movlb	1	; () banked
  2545  003BB0  5135               	movf	(_oldDistRight+1)& (0+255),w,b
  2546  003BB2  E107               	bnz	u6841
  2547  003BB4  0E7D               	movlw	125
  2548  003BB6  5D34               	subwf	_oldDistRight& (0+255),w,b
  2549  003BB8  B0D8               	btfsc	status,0,c
  2550  003BBA  EFE1  F01D         	goto	u6841
  2551  003BBE  EFE3  F01D         	goto	u6840
  2552  003BC2                     u6841:
  2553  003BC2  EF5B  F01E         	goto	l1286
  2554  003BC6                     u6840:
  2555  003BC6                     
  2556                           ; BSR set to: 1
  2557                           ;main.c: 151:                 delay = 0;
  2558  003BC6  0E00               	movlw	0
  2559  003BC8  6E40               	movwf	_delay^0,c
  2560                           
  2561                           ;main.c: 152:                 curveMode = BeforeCurve;
  2562  003BCA  0E01               	movlw	1
  2563  003BCC  6E41               	movwf	_curveMode^0,c
  2564                           
  2565                           ;main.c: 153:                 driveMode = CurveRight;
  2566  003BCE  0E05               	movlw	5
  2567  003BD0  0100               	movlb	0	; () banked
  2568  003BD2  6FFC               	movwf	_driveMode& (0+255),b
  2569  003BD4                     
  2570                           ; BSR set to: 0
  2571                           ;main.c: 154:                 ++curveRightCount;
  2572  003BD4  2BF9               	incf	_curveRightCount& (0+255),f,b
  2573  003BD6  EF5B  F01E         	goto	l1286
  2574  003BDA                     l6991:
  2575                           
  2576                           ;main.c: 162:             if (delay >= (15)) {
  2577  003BDA  0E0E               	movlw	14
  2578  003BDC  6440               	cpfsgt	_delay^0,c
  2579  003BDE  EFF3  F01D         	goto	u6851
  2580  003BE2  EFF5  F01D         	goto	u6850
  2581  003BE6                     u6851:
  2582  003BE6  EFFB  F01D         	goto	l6995
  2583  003BEA                     u6850:
  2584  003BEA                     
  2585                           ;main.c: 163:                 delay = 0;
  2586  003BEA  0E00               	movlw	0
  2587  003BEC  6E40               	movwf	_delay^0,c
  2588                           
  2589                           ;main.c: 164:                 curveMode = InCurve;
  2590  003BEE  0E02               	movlw	2
  2591  003BF0  6E41               	movwf	_curveMode^0,c
  2592                           
  2593                           ;main.c: 166:             } else {
  2594  003BF2  EF5B  F01E         	goto	l1286
  2595  003BF6                     l6995:
  2596                           
  2597                           ;main.c: 167:                 ++delay;
  2598  003BF6  2A40               	incf	_delay^0,f,c
  2599  003BF8  EF5B  F01E         	goto	l1286
  2600  003BFC                     l6997:
  2601                           
  2602                           ;main.c: 171:             if (delay >= (20)) {
  2603  003BFC  0E13               	movlw	19
  2604  003BFE  6440               	cpfsgt	_delay^0,c
  2605  003C00  EF04  F01E         	goto	u6861
  2606  003C04  EF06  F01E         	goto	u6860
  2607  003C08                     u6861:
  2608  003C08  EFFB  F01D         	goto	l6995
  2609  003C0C                     u6860:
  2610  003C0C                     
  2611                           ;main.c: 172:                 if (distLeft < (45) || distRight < (45) || distFront > (30
      +                          0)) {
  2612  003C0C  0100               	movlb	0	; () banked
  2613  003C0E  51F8               	movf	(_distLeft+1)& (0+255),w,b	;volatile
  2614  003C10  E109               	bnz	u6870
  2615  003C12  0E2D               	movlw	45
  2616  003C14  5DF7               	subwf	_distLeft& (0+255),w,b	;volatile
  2617  003C16  A0D8               	btfss	status,0,c
  2618  003C18  EF10  F01E         	goto	u6871
  2619  003C1C  EF12  F01E         	goto	u6870
  2620  003C20                     u6871:
  2621  003C20  EF28  F01E         	goto	l7005
  2622  003C24                     u6870:
  2623  003C24                     
  2624                           ; BSR set to: 0
  2625  003C24  51F6               	movf	(_distRight+1)& (0+255),w,b	;volatile
  2626  003C26  E109               	bnz	u6880
  2627  003C28  0E2D               	movlw	45
  2628  003C2A  5DF5               	subwf	_distRight& (0+255),w,b	;volatile
  2629  003C2C  A0D8               	btfss	status,0,c
  2630  003C2E  EF1B  F01E         	goto	u6881
  2631  003C32  EF1D  F01E         	goto	u6880
  2632  003C36                     u6881:
  2633  003C36  EF28  F01E         	goto	l7005
  2634  003C3A                     u6880:
  2635  003C3A                     
  2636                           ; BSR set to: 0
  2637  003C3A  0E2D               	movlw	45
  2638  003C3C  5DFD               	subwf	_distFront& (0+255),w,b	;volatile
  2639  003C3E  0E01               	movlw	1
  2640  003C40  59FE               	subwfb	(_distFront+1)& (0+255),w,b	;volatile
  2641  003C42  A0D8               	btfss	status,0,c
  2642  003C44  EF26  F01E         	goto	u6891
  2643  003C48  EF28  F01E         	goto	u6890
  2644  003C4C                     u6891:
  2645  003C4C  EF5B  F01E         	goto	l1286
  2646  003C50                     u6890:
  2647  003C50                     l7005:
  2648                           
  2649                           ; BSR set to: 0
  2650                           ;main.c: 173:                     delay = 0;
  2651  003C50  0E00               	movlw	0
  2652  003C52  6E40               	movwf	_delay^0,c
  2653                           
  2654                           ;main.c: 174:                     curveMode = AfterCurve;
  2655  003C54  0E03               	movlw	3
  2656  003C56  6E41               	movwf	_curveMode^0,c
  2657                           
  2658                           ;main.c: 175:                     driveMode = Straight;
  2659  003C58  0E00               	movlw	0
  2660  003C5A  6FFC               	movwf	_driveMode& (0+255),b
  2661  003C5C  EF5B  F01E         	goto	l1286
  2662  003C60                     l7009:
  2663                           
  2664                           ;main.c: 183:             if (delay >= (1)) {
  2665  003C60  5040               	movf	_delay^0,w,c
  2666  003C62  B4D8               	btfsc	status,2,c
  2667  003C64  EF36  F01E         	goto	u6901
  2668  003C68  EF38  F01E         	goto	u6900
  2669  003C6C                     u6901:
  2670  003C6C  EFFB  F01D         	goto	l6995
  2671  003C70                     u6900:
  2672  003C70                     
  2673                           ;main.c: 184:                 delay = 0;
  2674  003C70  0E00               	movlw	0
  2675  003C72  6E40               	movwf	_delay^0,c
  2676                           
  2677                           ;main.c: 185:                 curveMode = OutCurve;
  2678  003C74  0E00               	movlw	0
  2679  003C76  6E41               	movwf	_curveMode^0,c
  2680                           
  2681                           ;main.c: 187:             } else {
  2682  003C78  EF5B  F01E         	goto	l1286
  2683  003C7C                     l7017:
  2684  003C7C  5041               	movf	_curveMode^0,w,c
  2685  003C7E  6E14               	movwf	??_getCurve^0,c
  2686  003C80  6A15               	clrf	(??_getCurve+1)^0,c
  2687                           
  2688                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2689                           ; Switch size 1, requested type "simple"
  2690                           ; Number of cases is 1, Range of values is 0 to 0
  2691                           ; switch strategies available:
  2692                           ; Name         Instructions Cycles
  2693                           ; simple_byte            4     3 (average)
  2694                           ;	Chosen strategy is simple_byte
  2695  003C82  5015               	movf	(??_getCurve+1)^0,w,c
  2696  003C84  0A00               	xorlw	0	; case 0
  2697  003C86  B4D8               	btfsc	status,2,c
  2698  003C88  EF48  F01E         	goto	l9579
  2699  003C8C  EF5B  F01E         	goto	l1286
  2700  003C90                     l9579:
  2701                           
  2702                           ; Switch size 1, requested type "simple"
  2703                           ; Number of cases is 4, Range of values is 0 to 3
  2704                           ; switch strategies available:
  2705                           ; Name         Instructions Cycles
  2706                           ; simple_byte           13     7 (average)
  2707                           ;	Chosen strategy is simple_byte
  2708  003C90  5014               	movf	??_getCurve^0,w,c
  2709  003C92  0A00               	xorlw	0	; case 0
  2710  003C94  B4D8               	btfsc	status,2,c
  2711  003C96  EF75  F01D         	goto	l6971
  2712  003C9A  0A01               	xorlw	1	; case 1
  2713  003C9C  B4D8               	btfsc	status,2,c
  2714  003C9E  EFED  F01D         	goto	l6991
  2715  003CA2  0A03               	xorlw	3	; case 2
  2716  003CA4  B4D8               	btfsc	status,2,c
  2717  003CA6  EFFE  F01D         	goto	l6997
  2718  003CAA  0A01               	xorlw	1	; case 3
  2719  003CAC  B4D8               	btfsc	status,2,c
  2720  003CAE  EF30  F01E         	goto	l7009
  2721  003CB2  EF5B  F01E         	goto	l1286
  2722  003CB6                     l1286:
  2723                           
  2724                           ;main.c: 192:     oldDistLeft = distLeft;
  2725  003CB6  C0F7  F136         	movff	_distLeft,_oldDistLeft	;volatile
  2726  003CBA  C0F8  F137         	movff	_distLeft+1,_oldDistLeft+1	;volatile
  2727                           
  2728                           ;main.c: 193:     oldDistRight = distRight;
  2729  003CBE  C0F5  F134         	movff	_distRight,_oldDistRight	;volatile
  2730  003CC2  C0F6  F135         	movff	_distRight+1,_oldDistRight+1	;volatile
  2731  003CC6  0012               	return		;funcret
  2732  003CC8                     __end_of_getCurve:
  2733                           	callstack 0
  2734                           
  2735 ;; *************** function _checkCurveCount *****************
  2736 ;; Defined at:
  2737 ;;		line 120 in file "main.c"
  2738 ;; Parameters:    Size  Location     Type
  2739 ;;		None
  2740 ;; Auto vars:     Size  Location     Type
  2741 ;;  roundTime       4   16[BANK1 ] float 
  2742 ;; Return value:  Size  Location     Type
  2743 ;;                  1    wreg      void 
  2744 ;; Registers used:
  2745 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2746 ;; Tracked objects:
  2747 ;;		On entry : 0/0
  2748 ;;		On exit  : 0/0
  2749 ;;		Unchanged: 0/0
  2750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2752 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2754 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2755 ;;Total ram usage:        4 bytes
  2756 ;; Hardware stack levels used: 1
  2757 ;; Hardware stack levels required when called: 17
  2758 ;; This function calls:
  2759 ;;		___lwdiv
  2760 ;;		___xxtofl
  2761 ;;		_printf
  2762 ;; This function is called by:
  2763 ;;		_loop
  2764 ;; This function uses a non-reentrant model
  2765 ;;
  2766                           
  2767                           	psect	text5
  2768  004E5E                     __ptext5:
  2769                           	callstack 0
  2770  004E5E                     _checkCurveCount:
  2771                           	callstack 12
  2772  004E5E                     
  2773                           ;main.c: 121:     if (distFront > 480 && roundTimeCount > 500 ) {
  2774  004E5E  0EE1               	movlw	225
  2775  004E60  0100               	movlb	0	; () banked
  2776  004E62  5DFD               	subwf	_distFront& (0+255),w,b	;volatile
  2777  004E64  0E01               	movlw	1
  2778  004E66  59FE               	subwfb	(_distFront+1)& (0+255),w,b	;volatile
  2779  004E68  A0D8               	btfss	status,0,c
  2780  004E6A  EF39  F027         	goto	u10661
  2781  004E6E  EF3B  F027         	goto	u10660
  2782  004E72                     u10661:
  2783  004E72  EF94  F027         	goto	l1278
  2784  004E76                     u10660:
  2785  004E76                     
  2786                           ; BSR set to: 0
  2787  004E76  0EF5               	movlw	245
  2788  004E78  5DF1               	subwf	_roundTimeCount& (0+255),w,b	;volatile
  2789  004E7A  0E01               	movlw	1
  2790  004E7C  59F2               	subwfb	(_roundTimeCount+1)& (0+255),w,b	;volatile
  2791  004E7E  A0D8               	btfss	status,0,c
  2792  004E80  EF44  F027         	goto	u10671
  2793  004E84  EF46  F027         	goto	u10670
  2794  004E88                     u10671:
  2795  004E88  EF94  F027         	goto	l1278
  2796  004E8C                     u10670:
  2797  004E8C                     
  2798                           ; BSR set to: 0
  2799                           ;main.c: 122:         float roundTime = roundTimeCount / 100;
  2800  004E8C  0E00               	movlw	0
  2801  004E8E  6E17               	movwf	(___lwdiv@divisor+1)^0,c
  2802  004E90  0E64               	movlw	100
  2803  004E92  6E16               	movwf	___lwdiv@divisor^0,c
  2804  004E94  C0F1  F014         	movff	_roundTimeCount,___lwdiv@dividend	;volatile
  2805  004E98  C0F2  F015         	movff	_roundTimeCount+1,___lwdiv@dividend+1	;volatile
  2806  004E9C  EC4A  F02B         	call	___lwdiv	;wreg free
  2807  004EA0  C014  F01C         	movff	?___lwdiv,___xxtofl@val
  2808  004EA4  C015  F01D         	movff	?___lwdiv+1,___xxtofl@val+1
  2809  004EA8  6A1E               	clrf	(___xxtofl@val+2)^0,c
  2810  004EAA  6A1F               	clrf	(___xxtofl@val+3)^0,c
  2811  004EAC  0E00               	movlw	0
  2812  004EAE  EC64  F01E         	call	___xxtofl
  2813  004EB2  C01C  F1B4         	movff	?___xxtofl,checkCurveCount@roundTime
  2814  004EB6  C01D  F1B5         	movff	?___xxtofl+1,checkCurveCount@roundTime+1
  2815  004EBA  C01E  F1B6         	movff	?___xxtofl+2,checkCurveCount@roundTime+2
  2816  004EBE  C01F  F1B7         	movff	?___xxtofl+3,checkCurveCount@roundTime+3
  2817  004EC2                     
  2818                           ;main.c: 123:         printf("Reset CurveCount!  |   ");
  2819  004EC2  0E1B               	movlw	low STR_2
  2820  004EC4  0101               	movlb	1	; () banked
  2821  004EC6  6FAC               	movwf	printf@fmt& (0+255),b
  2822  004EC8  0E10               	movlw	high STR_2
  2823  004ECA  6FAD               	movwf	(printf@fmt+1)& (0+255),b
  2824  004ECC  EC66  F030         	call	_printf	;wreg free
  2825  004ED0                     
  2826                           ;main.c: 124:         printf("CurveLeftCount: %u   |   ", curveLeftCount);
  2827  004ED0  0E01               	movlw	low STR_3
  2828  004ED2  0101               	movlb	1	; () banked
  2829  004ED4  6FAC               	movwf	printf@fmt& (0+255),b
  2830  004ED6  0E10               	movlw	high STR_3
  2831  004ED8  6FAD               	movwf	(printf@fmt+1)& (0+255),b
  2832  004EDA  C0FA  F1AE         	movff	_curveLeftCount,?_printf+2
  2833  004EDE  6BAF               	clrf	(?_printf+3)& (0+255),b
  2834  004EE0  EC66  F030         	call	_printf	;wreg free
  2835  004EE4                     
  2836                           ;main.c: 125:         printf("CurveRightCount: %u\n", curveRightCount);
  2837  004EE4  0E33               	movlw	low STR_4
  2838  004EE6  0101               	movlb	1	; () banked
  2839  004EE8  6FAC               	movwf	printf@fmt& (0+255),b
  2840  004EEA  0E10               	movlw	high STR_4
  2841  004EEC  6FAD               	movwf	(printf@fmt+1)& (0+255),b
  2842  004EEE  C0F9  F1AE         	movff	_curveRightCount,?_printf+2
  2843  004EF2  6BAF               	clrf	(?_printf+3)& (0+255),b
  2844  004EF4  EC66  F030         	call	_printf	;wreg free
  2845  004EF8                     
  2846                           ;main.c: 126:         printf("RoundTime: %f\n\n", roundTime);
  2847  004EF8  0E5C               	movlw	low STR_5
  2848  004EFA  0101               	movlb	1	; () banked
  2849  004EFC  6FAC               	movwf	printf@fmt& (0+255),b
  2850  004EFE  0E10               	movlw	high STR_5
  2851  004F00  6FAD               	movwf	(printf@fmt+1)& (0+255),b
  2852  004F02  C1B4  F1AE         	movff	checkCurveCount@roundTime,?_printf+2
  2853  004F06  C1B5  F1AF         	movff	checkCurveCount@roundTime+1,?_printf+3
  2854  004F0A  C1B6  F1B0         	movff	checkCurveCount@roundTime+2,?_printf+4
  2855  004F0E  C1B7  F1B1         	movff	checkCurveCount@roundTime+3,?_printf+5
  2856  004F12  EC66  F030         	call	_printf	;wreg free
  2857  004F16                     
  2858                           ;main.c: 127:         roundTimeCount = 0;
  2859  004F16  0E00               	movlw	0
  2860  004F18  0100               	movlb	0	; () banked
  2861  004F1A  6FF2               	movwf	(_roundTimeCount+1)& (0+255),b	;volatile
  2862  004F1C  0E00               	movlw	0
  2863  004F1E  6FF1               	movwf	_roundTimeCount& (0+255),b	;volatile
  2864  004F20                     
  2865                           ; BSR set to: 0
  2866                           ;main.c: 128:         curveRightCount = 0;
  2867  004F20  0E00               	movlw	0
  2868  004F22  6FF9               	movwf	_curveRightCount& (0+255),b
  2869  004F24                     
  2870                           ; BSR set to: 0
  2871                           ;main.c: 129:         curveLeftCount = 0;
  2872  004F24  0E00               	movlw	0
  2873  004F26  6FFA               	movwf	_curveLeftCount& (0+255),b
  2874  004F28                     l1278:
  2875                           
  2876                           ; BSR set to: 0
  2877  004F28  0012               	return		;funcret
  2878  004F2A                     __end_of_checkCurveCount:
  2879                           	callstack 0
  2880                           
  2881 ;; *************** function _printf *****************
  2882 ;; Defined at:
  2883 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\printf.c"
  2884 ;; Parameters:    Size  Location     Type
  2885 ;;  fmt             2    8[BANK1 ] PTR const unsigned char 
  2886 ;;		 -> STR_8(14), STR_7(13), STR_6(14), STR_5(16), 
  2887 ;;		 -> STR_4(21), STR_3(26), STR_2(24), STR_1(20), 
  2888 ;; Auto vars:     Size  Location     Type
  2889 ;;  ap              2   14[BANK1 ] PTR void [1]
  2890 ;;		 -> ?_printf(2), 
  2891 ;;  ret             2    0        int 
  2892 ;; Return value:  Size  Location     Type
  2893 ;;                  2    8[BANK1 ] int 
  2894 ;; Registers used:
  2895 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2896 ;; Tracked objects:
  2897 ;;		On entry : 0/0
  2898 ;;		On exit  : 0/0
  2899 ;;		Unchanged: 0/0
  2900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2901 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2902 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2904 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2905 ;;Total ram usage:        8 bytes
  2906 ;; Hardware stack levels used: 1
  2907 ;; Hardware stack levels required when called: 16
  2908 ;; This function calls:
  2909 ;;		_vfprintf
  2910 ;; This function is called by:
  2911 ;;		_startAccell
  2912 ;;		_checkCurveCount
  2913 ;;		_getReverse
  2914 ;; This function uses a non-reentrant model
  2915 ;;
  2916                           
  2917                           	psect	text6
  2918  0060CC                     __ptext6:
  2919                           	callstack 0
  2920  0060CC                     _printf:
  2921                           	callstack 12
  2922  0060CC  0EAE               	movlw	low (?_printf+2)
  2923  0060CE  0101               	movlb	1	; () banked
  2924  0060D0  6FB2               	movwf	printf@ap& (0+255),b
  2925  0060D2  0E01               	movlw	high (?_printf+2)
  2926  0060D4  6FB3               	movwf	(printf@ap+1)& (0+255),b
  2927  0060D6                     
  2928                           ; BSR set to: 1
  2929  0060D6  0E00               	movlw	0
  2930  0060D8  6FA4               	movwf	vfprintf@fp& (0+255),b
  2931  0060DA  0E00               	movlw	0
  2932  0060DC  6FA5               	movwf	(vfprintf@fp+1)& (0+255),b
  2933  0060DE  C1AC  F1A6         	movff	printf@fmt,vfprintf@fmt
  2934  0060E2  C1AD  F1A7         	movff	printf@fmt+1,vfprintf@fmt+1
  2935  0060E6  0EB2               	movlw	low printf@ap
  2936  0060E8  6FA8               	movwf	vfprintf@ap& (0+255),b
  2937  0060EA  0E01               	movlw	high printf@ap
  2938  0060EC  6FA9               	movwf	(vfprintf@ap+1)& (0+255),b
  2939  0060EE  EC84  F02B         	call	_vfprintf	;wreg free
  2940  0060F2  0012               	return		;funcret
  2941  0060F4                     __end_of_printf:
  2942                           	callstack 0
  2943                           
  2944 ;; *************** function _vfprintf *****************
  2945 ;; Defined at:
  2946 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2947 ;; Parameters:    Size  Location     Type
  2948 ;;  fp              2    0[BANK1 ] PTR struct _IO_FILE
  2949 ;;		 -> NULL(0), 
  2950 ;;  fmt             2    2[BANK1 ] PTR const unsigned char 
  2951 ;;		 -> STR_8(14), STR_7(13), STR_6(14), STR_5(16), 
  2952 ;;		 -> STR_4(21), STR_3(26), STR_2(24), STR_1(20), 
  2953 ;;  ap              2    4[BANK1 ] PTR PTR void 
  2954 ;;		 -> printf@ap(2), 
  2955 ;; Auto vars:     Size  Location     Type
  2956 ;;  cfmt            2    6[BANK1 ] PTR unsigned char 
  2957 ;;		 -> STR_8(14), STR_7(13), STR_6(14), STR_5(16), 
  2958 ;;		 -> STR_4(21), STR_3(26), STR_2(24), STR_1(20), 
  2959 ;; Return value:  Size  Location     Type
  2960 ;;                  2    0[BANK1 ] int 
  2961 ;; Registers used:
  2962 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2963 ;; Tracked objects:
  2964 ;;		On entry : 0/0
  2965 ;;		On exit  : 0/0
  2966 ;;		Unchanged: 0/0
  2967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2968 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2969 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2971 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2972 ;;Total ram usage:        8 bytes
  2973 ;; Hardware stack levels used: 1
  2974 ;; Hardware stack levels required when called: 15
  2975 ;; This function calls:
  2976 ;;		_vfpfcnvrt
  2977 ;; This function is called by:
  2978 ;;		_printf
  2979 ;; This function uses a non-reentrant model
  2980 ;;
  2981                           
  2982                           	psect	text7
  2983  005708                     __ptext7:
  2984                           	callstack 0
  2985  005708                     _vfprintf:
  2986                           	callstack 12
  2987  005708                     
  2988                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  2989  005708  C1A6  F1AA         	movff	vfprintf@fmt,vfprintf@cfmt
  2990  00570C  C1A7  F1AB         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2991  005710                     
  2992                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  2993  005710  0E00               	movlw	0
  2994  005712  0101               	movlb	1	; () banked
  2995  005714  6F29               	movwf	(_nout+1)& (0+255),b
  2996  005716  0E00               	movlw	0
  2997  005718  6F28               	movwf	_nout& (0+255),b
  2998                           
  2999                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3000  00571A  EFA6  F02B         	goto	l9061
  3001  00571E                     l9059:
  3002                           
  3003                           ; BSR set to: 1
  3004                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  3005  00571E  C1A4  F0C7         	movff	vfprintf@fp,vfpfcnvrt@fp
  3006  005722  C1A5  F0C8         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3007  005726  0EAA               	movlw	low vfprintf@cfmt
  3008  005728  0100               	movlb	0	; () banked
  3009  00572A  6FC9               	movwf	vfpfcnvrt@fmt& (0+255),b
  3010  00572C  0E01               	movlw	high vfprintf@cfmt
  3011  00572E  6FCA               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  3012  005730  C1A8  F0CB         	movff	vfprintf@ap,vfpfcnvrt@ap
  3013  005734  C1A9  F0CC         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3014  005738  ECAC  F00E         	call	_vfpfcnvrt	;wreg free
  3015  00573C  0100               	movlb	0	; () banked
  3016  00573E  51C7               	movf	?_vfpfcnvrt& (0+255),w,b
  3017  005740  0101               	movlb	1	; () banked
  3018  005742  2728               	addwf	_nout& (0+255),f,b
  3019  005744  0100               	movlb	0	; () banked
  3020  005746  51C8               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  3021  005748  0101               	movlb	1	; () banked
  3022  00574A  2329               	addwfc	(_nout+1)& (0+255),f,b
  3023  00574C                     l9061:
  3024                           
  3025                           ; BSR set to: 1
  3026                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3027  00574C  0060  F6AB  FFF6   	movff	vfprintf@cfmt,tblptrl
  3028  005752  0060  F6AF  FFF7   	movff	vfprintf@cfmt+1,tblptrh
  3029  005758                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3030  005758  6AF8               	clrf	tblptru,c
  3031  00575A                     	endif
  3032  00575A                     	if	0	;tblptru may be non-zero
  3033  00575A                     	endif
  3034  00575A  0008               	tblrd		*
  3035  00575C  50F5               	movf	tablat,w,c
  3036  00575E  0900               	iorlw	0
  3037  005760  A4D8               	btfss	status,2,c
  3038  005762  EFB5  F02B         	goto	u10241
  3039  005766  EFB7  F02B         	goto	u10240
  3040  00576A                     u10241:
  3041  00576A  EF8F  F02B         	goto	l9059
  3042  00576E                     u10240:
  3043  00576E                     
  3044                           ; BSR set to: 1
  3045                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  3046  00576E  C128  F1A4         	movff	_nout,?_vfprintf
  3047  005772  C129  F1A5         	movff	_nout+1,?_vfprintf+1
  3048  005776                     
  3049                           ; BSR set to: 1
  3050  005776  0012               	return		;funcret
  3051  005778                     __end_of_vfprintf:
  3052                           	callstack 0
  3053                           
  3054 ;; *************** function _vfpfcnvrt *****************
  3055 ;; Defined at:
  3056 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3057 ;; Parameters:    Size  Location     Type
  3058 ;;  fp              2  103[BANK0 ] PTR struct _IO_FILE
  3059 ;;		 -> NULL(0), 
  3060 ;;  fmt             2  105[BANK0 ] PTR PTR unsigned char 
  3061 ;;		 -> vfprintf@cfmt(2), 
  3062 ;;  ap              2  107[BANK0 ] PTR PTR void 
  3063 ;;		 -> printf@ap(2), 
  3064 ;; Auto vars:     Size  Location     Type
  3065 ;;  llu             8  121[BANK0 ] unsigned long long 
  3066 ;;  ll              8  113[BANK0 ] long long 
  3067 ;;  f               4  131[BANK0 ] long long 
  3068 ;;  ct              3  135[BANK0 ] unsigned char [3]
  3069 ;;  vp              3    0        PTR void 
  3070 ;;  cp              3    0        PTR unsigned char 
  3071 ;;  i               2    0        int 
  3072 ;;  done            2    0        int 
  3073 ;;  c               1  138[BANK0 ] unsigned char 
  3074 ;; Return value:  Size  Location     Type
  3075 ;;                  2  103[BANK0 ] int 
  3076 ;; Registers used:
  3077 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3078 ;; Tracked objects:
  3079 ;;		On entry : 0/0
  3080 ;;		On exit  : 0/0
  3081 ;;		Unchanged: 0/0
  3082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3083 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3084 ;;      Locals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3085 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3086 ;;      Totals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3087 ;;Total ram usage:       36 bytes
  3088 ;; Hardware stack levels used: 1
  3089 ;; Hardware stack levels required when called: 14
  3090 ;; This function calls:
  3091 ;;		_dtoa
  3092 ;;		_efgtoa
  3093 ;;		_fputc
  3094 ;;		_isupper
  3095 ;;		_strncmp
  3096 ;;		_tolower
  3097 ;;		_utoa
  3098 ;; This function is called by:
  3099 ;;		_vfprintf
  3100 ;; This function uses a non-reentrant model
  3101 ;;
  3102                           
  3103                           	psect	text8
  3104  001D58                     __ptext8:
  3105                           	callstack 0
  3106  001D58                     _vfpfcnvrt:
  3107                           	callstack 12
  3108  001D58                     
  3109                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  3110  001D58  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3111  001D5E  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3112  001D64  006F FF7B FFF6     	movff	postinc2,tblptrl
  3113  001D6A  006F FF77 FFF7     	movff	postdec2,tblptrh
  3114  001D70                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3115  001D70  6AF8               	clrf	tblptru,c
  3116  001D72                     	endif
  3117  001D72                     	if	0	;tblptru may be non-zero
  3118  001D72                     	endif
  3119  001D72  0008               	tblrd		*
  3120  001D74  50F5               	movf	tablat,w,c
  3121  001D76  0A25               	xorlw	37
  3122  001D78  A4D8               	btfss	status,2,c
  3123  001D7A  EFC1  F00E         	goto	u9981
  3124  001D7E  EFC3  F00E         	goto	u9980
  3125  001D82                     u9981:
  3126  001D82  EF7D  F011         	goto	l8993
  3127  001D86                     u9980:
  3128  001D86                     
  3129                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  3130  001D86  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3131  001D8C  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3132  001D92  2ADE               	incf	postinc2,f,c
  3133  001D94  0E00               	movlw	0
  3134  001D96  22DD               	addwfc	postdec2,f,c
  3135  001D98                     
  3136                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  3137  001D98  0E00               	movlw	0
  3138  001D9A  6E3B               	movwf	(_width+1)^0,c
  3139  001D9C  0E00               	movlw	0
  3140  001D9E  6E3A               	movwf	_width^0,c
  3141  001DA0  C03A  F03E         	movff	_width,_flags
  3142  001DA4  C03B  F03F         	movff	_width+1,_flags+1
  3143  001DA8                     
  3144                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  3145  001DA8  683C               	setf	_prec^0,c
  3146  001DAA  683D               	setf	(_prec+1)^0,c
  3147  001DAC                     
  3148                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  3149  001DAC  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3150  001DB2  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3151  001DB8  006F FF7B FFF6     	movff	postinc2,tblptrl
  3152  001DBE  006F FF77 FFF7     	movff	postdec2,tblptrh
  3153  001DC4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3154  001DC4  6AF8               	clrf	tblptru,c
  3155  001DC6                     	endif
  3156  001DC6                     	if	0	;tblptru may be non-zero
  3157  001DC6                     	endif
  3158  001DC6  0008               	tblrd		*
  3159  001DC8  50F5               	movf	tablat,w,c
  3160  001DCA  6E1A               	movwf	tolower@c^0,c
  3161  001DCC  6A1B               	clrf	(tolower@c+1)^0,c
  3162  001DCE  ECF1  F02B         	call	_tolower	;wreg free
  3163  001DD2  501A               	movf	?_tolower^0,w,c
  3164  001DD4  0100               	movlb	0	; () banked
  3165  001DD6  6FE7               	movwf	vfpfcnvrt@ct& (0+255),b
  3166  001DD8                     
  3167                           ; BSR set to: 0
  3168                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  3169  001DD8  51E7               	movf	vfpfcnvrt@ct& (0+255),w,b
  3170  001DDA  B4D8               	btfsc	status,2,c
  3171  001DDC  EFF2  F00E         	goto	u9991
  3172  001DE0  EFF4  F00E         	goto	u9990
  3173  001DE4                     u9991:
  3174  001DE4  EF3C  F00F         	goto	l8931
  3175  001DE8                     u9990:
  3176  001DE8                     
  3177                           ; BSR set to: 0
  3178                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  3179  001DE8  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3180  001DEE  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3181  001DF4  006F FF78  F0CD    	movff	postinc2,??_vfpfcnvrt
  3182  001DFA  006F FF74  F0CE    	movff	postdec2,??_vfpfcnvrt+1
  3183  001E00  0E01               	movlw	1
  3184  001E02  27CD               	addwf	??_vfpfcnvrt& (0+255),f,b
  3185  001E04  0E00               	movlw	0
  3186  001E06  23CE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  3187  001E08  0060  F337  FFF6   	movff	??_vfpfcnvrt,tblptrl
  3188  001E0E  0060  F33B  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  3189  001E14                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3190  001E14  6AF8               	clrf	tblptru,c
  3191  001E16                     	endif
  3192  001E16                     	if	0	;tblptru may be non-zero
  3193  001E16                     	endif
  3194  001E16  0008               	tblrd		*
  3195  001E18  50F5               	movf	tablat,w,c
  3196  001E1A  6E1A               	movwf	tolower@c^0,c
  3197  001E1C  6A1B               	clrf	(tolower@c+1)^0,c
  3198  001E1E  ECF1  F02B         	call	_tolower	;wreg free
  3199  001E22  501A               	movf	?_tolower^0,w,c
  3200  001E24  0100               	movlb	0	; () banked
  3201  001E26  6FE8               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  3202  001E28                     
  3203                           ; BSR set to: 0
  3204                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  3205  001E28  51E8               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  3206  001E2A  B4D8               	btfsc	status,2,c
  3207  001E2C  EF1A  F00F         	goto	u10001
  3208  001E30  EF1C  F00F         	goto	u10000
  3209  001E34                     u10001:
  3210  001E34  EF3C  F00F         	goto	l8931
  3211  001E38                     u10000:
  3212  001E38                     
  3213                           ; BSR set to: 0
  3214                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  3215  001E38  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3216  001E3E  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3217  001E44  006F FF78  F0CD    	movff	postinc2,??_vfpfcnvrt
  3218  001E4A  006F FF74  F0CE    	movff	postdec2,??_vfpfcnvrt+1
  3219  001E50  0E02               	movlw	2
  3220  001E52  27CD               	addwf	??_vfpfcnvrt& (0+255),f,b
  3221  001E54  0E00               	movlw	0
  3222  001E56  23CE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  3223  001E58  0060  F337  FFF6   	movff	??_vfpfcnvrt,tblptrl
  3224  001E5E  0060  F33B  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  3225  001E64                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3226  001E64  6AF8               	clrf	tblptru,c
  3227  001E66                     	endif
  3228  001E66                     	if	0	;tblptru may be non-zero
  3229  001E66                     	endif
  3230  001E66  0008               	tblrd		*
  3231  001E68  50F5               	movf	tablat,w,c
  3232  001E6A  6E1A               	movwf	tolower@c^0,c
  3233  001E6C  6A1B               	clrf	(tolower@c+1)^0,c
  3234  001E6E  ECF1  F02B         	call	_tolower	;wreg free
  3235  001E72  501A               	movf	?_tolower^0,w,c
  3236  001E74  0100               	movlb	0	; () banked
  3237  001E76  6FE9               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  3238  001E78                     l8931:
  3239                           
  3240                           ; BSR set to: 0
  3241                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  3242  001E78  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3243  001E7E  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3244  001E84  006F FF7B FFF6     	movff	postinc2,tblptrl
  3245  001E8A  006F FF77 FFF7     	movff	postdec2,tblptrh
  3246  001E90                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3247  001E90  6AF8               	clrf	tblptru,c
  3248  001E92                     	endif
  3249  001E92                     	if	0	;tblptru may be non-zero
  3250  001E92                     	endif
  3251  001E92  0008               	tblrd		*
  3252  001E94  50F5               	movf	tablat,w,c
  3253  001E96  0A64               	xorlw	100
  3254  001E98  B4D8               	btfsc	status,2,c
  3255  001E9A  EF51  F00F         	goto	u10011
  3256  001E9E  EF53  F00F         	goto	u10010
  3257  001EA2                     u10011:
  3258  001EA2  EF6A  F00F         	goto	l8935
  3259  001EA6                     u10010:
  3260  001EA6                     
  3261                           ; BSR set to: 0
  3262  001EA6  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3263  001EAC  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3264  001EB2  006F FF7B FFF6     	movff	postinc2,tblptrl
  3265  001EB8  006F FF77 FFF7     	movff	postdec2,tblptrh
  3266  001EBE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3267  001EBE  6AF8               	clrf	tblptru,c
  3268  001EC0                     	endif
  3269  001EC0                     	if	0	;tblptru may be non-zero
  3270  001EC0                     	endif
  3271  001EC0  0008               	tblrd		*
  3272  001EC2  50F5               	movf	tablat,w,c
  3273  001EC4  0A69               	xorlw	105
  3274  001EC6  A4D8               	btfss	status,2,c
  3275  001EC8  EF68  F00F         	goto	u10021
  3276  001ECC  EF6A  F00F         	goto	u10020
  3277  001ED0                     u10021:
  3278  001ED0  EFB4  F00F         	goto	l8941
  3279  001ED4                     u10020:
  3280  001ED4                     l8935:
  3281                           
  3282                           ; BSR set to: 0
  3283                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  3284  001ED4  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3285  001EDA  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3286  001EE0  2ADE               	incf	postinc2,f,c
  3287  001EE2  0E00               	movlw	0
  3288  001EE4  22DD               	addwfc	postdec2,f,c
  3289                           
  3290                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  3291  001EE6  0060  F32F  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  3292  001EEC  0060  F333  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  3293  001EF2  006F FF7C  F0CD    	movff	indf2,??_vfpfcnvrt
  3294  001EF8  0E02               	movlw	2
  3295  001EFA  26DE               	addwf	postinc2,f,c
  3296  001EFC  006F FF7C  F0CE    	movff	indf2,??_vfpfcnvrt+1
  3297  001F02  0E00               	movlw	0
  3298  001F04  22DD               	addwfc	postdec2,f,c
  3299  001F06  0060  F337  FFD9   	movff	??_vfpfcnvrt,fsr2l
  3300  001F0C  0060  F33B  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  3301  001F12  006F FF78  F0D1    	movff	postinc2,vfpfcnvrt@ll
  3302  001F18  006F FF74  F0D2    	movff	postdec2,vfpfcnvrt@ll+1
  3303  001F1E  0E00               	movlw	0
  3304  001F20  BFD2               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  3305  001F22  0EFF               	movlw	-1
  3306  001F24  6FD3               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  3307  001F26  6FD4               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  3308  001F28  6FD5               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  3309  001F2A  6FD6               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  3310  001F2C  6FD7               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  3311  001F2E  6FD8               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  3312  001F30                     
  3313                           ; BSR set to: 0
  3314                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  3315  001F30  C0C7  F060         	movff	vfpfcnvrt@fp,dtoa@fp
  3316  001F34  C0C8  F061         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  3317  001F38  C0D1  F062         	movff	vfpfcnvrt@ll,dtoa@d
  3318  001F3C  C0D2  F063         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  3319  001F40  C0D3  F064         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  3320  001F44  C0D4  F065         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  3321  001F48  C0D5  F066         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  3322  001F4C  C0D6  F067         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  3323  001F50  C0D7  F068         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  3324  001F54  C0D8  F069         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  3325  001F58  ECF7  F017         	call	_dtoa	;wreg free
  3326  001F5C  C060  F0C7         	movff	?_dtoa,?_vfpfcnvrt
  3327  001F60  C061  F0C8         	movff	?_dtoa+1,?_vfpfcnvrt+1
  3328  001F64  EF9F  F011         	goto	l2262
  3329  001F68                     l8941:
  3330                           
  3331                           ; BSR set to: 0
  3332                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  3333  001F68  0E66               	movlw	102
  3334  001F6A  19E7               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  3335  001F6C  A4D8               	btfss	status,2,c
  3336  001F6E  EFBB  F00F         	goto	u10031
  3337  001F72  EFBD  F00F         	goto	u10030
  3338  001F76                     u10031:
  3339  001F76  EF0F  F010         	goto	l8953
  3340  001F7A                     u10030:
  3341  001F7A                     
  3342                           ; BSR set to: 0
  3343                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  3344  001F7A  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3345  001F80  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3346  001F86  006F FF7B FFF6     	movff	postinc2,tblptrl
  3347  001F8C  006F FF77 FFF7     	movff	postdec2,tblptrh
  3348  001F92                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3349  001F92  6AF8               	clrf	tblptru,c
  3350  001F94                     	endif
  3351  001F94                     	if	0	;tblptru may be non-zero
  3352  001F94                     	endif
  3353  001F94  0008               	tblrd		*
  3354  001F96  006F FFD4  F0EA    	movff	tablat,vfpfcnvrt@c
  3355  001F9C                     
  3356                           ; BSR set to: 0
  3357                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  3358  001F9C  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3359  001FA2  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3360  001FA8  2ADE               	incf	postinc2,f,c
  3361  001FAA  0E00               	movlw	0
  3362  001FAC  22DD               	addwfc	postdec2,f,c
  3363  001FAE                     
  3364                           ; BSR set to: 0
  3365                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3366  001FAE  0060  F32F  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  3367  001FB4  0060  F333  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  3368  001FBA  006F FF7C  F0CD    	movff	indf2,??_vfpfcnvrt
  3369  001FC0  0E04               	movlw	4
  3370  001FC2  26DE               	addwf	postinc2,f,c
  3371  001FC4  006F FF7C  F0CE    	movff	indf2,??_vfpfcnvrt+1
  3372  001FCA  0E00               	movlw	0
  3373  001FCC  22DD               	addwfc	postdec2,f,c
  3374  001FCE  0060  F337  FFD9   	movff	??_vfpfcnvrt,fsr2l
  3375  001FD4  0060  F33B  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  3376  001FDA  006F FF78  F0E3    	movff	postinc2,vfpfcnvrt@f
  3377  001FE0  006F FF78  F0E4    	movff	postinc2,vfpfcnvrt@f+1
  3378  001FE6  006F FF78  F0E5    	movff	postinc2,vfpfcnvrt@f+2
  3379  001FEC  006F FF78  F0E6    	movff	postinc2,vfpfcnvrt@f+3
  3380  001FF2                     
  3381                           ; BSR set to: 0
  3382                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  3383  001FF2  C0C7  F083         	movff	vfpfcnvrt@fp,efgtoa@fp
  3384  001FF6  C0C8  F084         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  3385  001FFA  C0E3  F085         	movff	vfpfcnvrt@f,efgtoa@f
  3386  001FFE  C0E4  F086         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  3387  002002  C0E5  F087         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  3388  002006  C0E6  F088         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  3389  00200A  C0EA  F089         	movff	vfpfcnvrt@c,efgtoa@c
  3390  00200E  EC55  F008         	call	_efgtoa	;wreg free
  3391  002012  C083  F0C7         	movff	?_efgtoa,?_vfpfcnvrt
  3392  002016  C084  F0C8         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  3393  00201A  EF9F  F011         	goto	l2262
  3394  00201E                     l8953:
  3395                           
  3396                           ; BSR set to: 0
  3397                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  3398  00201E  0EE7               	movlw	low vfpfcnvrt@ct
  3399  002020  6E14               	movwf	strncmp@_l^0,c
  3400  002022  0E00               	movlw	high vfpfcnvrt@ct
  3401  002024  6E15               	movwf	(strncmp@_l+1)^0,c
  3402  002026  0EA5               	movlw	low STR_17
  3403  002028  6E16               	movwf	strncmp@_r^0,c
  3404  00202A  0E10               	movlw	high STR_17
  3405  00202C  6E17               	movwf	(strncmp@_r+1)^0,c
  3406  00202E  0E00               	movlw	0
  3407  002030  6E19               	movwf	(strncmp@n+1)^0,c
  3408  002032  0E02               	movlw	2
  3409  002034  6E18               	movwf	strncmp@n^0,c
  3410  002036  EC64  F025         	call	_strncmp	;wreg free
  3411  00203A  5014               	movf	?_strncmp^0,w,c
  3412  00203C  1015               	iorwf	(?_strncmp+1)^0,w,c
  3413  00203E  A4D8               	btfss	status,2,c
  3414  002040  EF24  F010         	goto	u10041
  3415  002044  EF26  F010         	goto	u10040
  3416  002048                     u10041:
  3417  002048  EFD9  F010         	goto	l8969
  3418  00204C                     u10040:
  3419  00204C                     
  3420                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 953:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  3421  00204C  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3422  002052  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3423  002058  006F FF78  F0CD    	movff	postinc2,??_vfpfcnvrt
  3424  00205E  006F FF74  F0CE    	movff	postdec2,??_vfpfcnvrt+1
  3425  002064  0E01               	movlw	1
  3426  002066  0100               	movlb	0	; () banked
  3427  002068  27CD               	addwf	??_vfpfcnvrt& (0+255),f,b
  3428  00206A  0E00               	movlw	0
  3429  00206C  23CE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  3430  00206E  0060  F337  FFF6   	movff	??_vfpfcnvrt,tblptrl
  3431  002074  0060  F33B  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  3432  00207A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3433  00207A  6AF8               	clrf	tblptru,c
  3434  00207C                     	endif
  3435  00207C                     	if	0	;tblptru may be non-zero
  3436  00207C                     	endif
  3437  00207C  0008               	tblrd		*
  3438  00207E  006F FFD4  F0EA    	movff	tablat,vfpfcnvrt@c
  3439  002084  0EBF               	movlw	191
  3440  002086  6FCD               	movwf	??_vfpfcnvrt& (0+255),b
  3441  002088  0EFF               	movlw	255
  3442  00208A  6FCE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  3443  00208C  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3444  002092  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3445  002098  006F FF7B FFF6     	movff	postinc2,tblptrl
  3446  00209E  006F FF77 FFF7     	movff	postdec2,tblptrh
  3447  0020A4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3448  0020A4  6AF8               	clrf	tblptru,c
  3449  0020A6                     	endif
  3450  0020A6                     	if	0	;tblptru may be non-zero
  3451  0020A6                     	endif
  3452  0020A6  0008               	tblrd		*
  3453  0020A8  50F5               	movf	tablat,w,c
  3454  0020AA  6FCF               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  3455  0020AC  6BD0               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  3456  0020AE  51CD               	movf	??_vfpfcnvrt& (0+255),w,b
  3457  0020B0  27CF               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  3458  0020B2  51CE               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3459  0020B4  23D0               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  3460  0020B6  51D0               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  3461  0020B8  E10A               	bnz	u10050
  3462  0020BA  0E1A               	movlw	26
  3463  0020BC  5DCF               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  3464  0020BE  A0D8               	btfss	status,0,c
  3465  0020C0  EF64  F010         	goto	u10051
  3466  0020C4  EF67  F010         	goto	u10050
  3467  0020C8                     u10051:
  3468  0020C8  0E01               	movlw	1
  3469  0020CA  EF68  F010         	goto	u10060
  3470  0020CE                     u10050:
  3471  0020CE  0E00               	movlw	0
  3472  0020D0                     u10060:
  3473  0020D0  6FE1               	movwf	_vfpfcnvrt$3598& (0+255),b
  3474  0020D2  6BE2               	clrf	(_vfpfcnvrt$3598+1)& (0+255),b
  3475  0020D4                     
  3476                           ; BSR set to: 0
  3477  0020D4  51E1               	movf	_vfpfcnvrt$3598& (0+255),w,b
  3478  0020D6  11E2               	iorwf	(_vfpfcnvrt$3598+1)& (0+255),w,b
  3479  0020D8  B4D8               	btfsc	status,2,c
  3480  0020DA  EF71  F010         	goto	u10071
  3481  0020DE  EF73  F010         	goto	u10070
  3482  0020E2                     u10071:
  3483  0020E2  EF97  F010         	goto	l8963
  3484  0020E6                     u10070:
  3485  0020E6                     
  3486                           ; BSR set to: 0
  3487                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  3488  0020E6  0060  F32F  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  3489  0020EC  0060  F333  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  3490  0020F2  006F FF7C  F0CD    	movff	indf2,??_vfpfcnvrt
  3491  0020F8  0E04               	movlw	4
  3492  0020FA  26DE               	addwf	postinc2,f,c
  3493  0020FC  006F FF7C  F0CE    	movff	indf2,??_vfpfcnvrt+1
  3494  002102  0E00               	movlw	0
  3495  002104  22DD               	addwfc	postdec2,f,c
  3496  002106  0060  F337  FFD9   	movff	??_vfpfcnvrt,fsr2l
  3497  00210C  0060  F33B  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  3498  002112  006F FF78  F0E3    	movff	postinc2,vfpfcnvrt@f
  3499  002118  006F FF78  F0E4    	movff	postinc2,vfpfcnvrt@f+1
  3500  00211E  006F FF78  F0E5    	movff	postinc2,vfpfcnvrt@f+2
  3501  002124  006F FF78  F0E6    	movff	postinc2,vfpfcnvrt@f+3
  3502                           
  3503                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  3504  00212A  EFB9  F010         	goto	l2270
  3505  00212E                     l8963:
  3506                           
  3507                           ; BSR set to: 0
  3508                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3509  00212E  0060  F32F  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  3510  002134  0060  F333  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  3511  00213A  006F FF7C  F0CD    	movff	indf2,??_vfpfcnvrt
  3512  002140  0E04               	movlw	4
  3513  002142  26DE               	addwf	postinc2,f,c
  3514  002144  006F FF7C  F0CE    	movff	indf2,??_vfpfcnvrt+1
  3515  00214A  0E00               	movlw	0
  3516  00214C  22DD               	addwfc	postdec2,f,c
  3517  00214E  0060  F337  FFD9   	movff	??_vfpfcnvrt,fsr2l
  3518  002154  0060  F33B  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  3519  00215A  006F FF78  F0E3    	movff	postinc2,vfpfcnvrt@f
  3520  002160  006F FF78  F0E4    	movff	postinc2,vfpfcnvrt@f+1
  3521  002166  006F FF78  F0E5    	movff	postinc2,vfpfcnvrt@f+2
  3522  00216C  006F FF78  F0E6    	movff	postinc2,vfpfcnvrt@f+3
  3523  002172                     l2270:
  3524                           
  3525                           ; BSR set to: 0
  3526                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  3527  002172  0E02               	movlw	2
  3528  002174  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3529  00217A  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3530  002180  26DE               	addwf	postinc2,f,c
  3531  002182  0E00               	movlw	0
  3532  002184  22DD               	addwfc	postdec2,f,c
  3533  002186                     
  3534                           ; BSR set to: 0
  3535                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 960:             
      +                          return efgtoa(fp, f, c);
  3536  002186  C0C7  F083         	movff	vfpfcnvrt@fp,efgtoa@fp
  3537  00218A  C0C8  F084         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  3538  00218E  C0E3  F085         	movff	vfpfcnvrt@f,efgtoa@f
  3539  002192  C0E4  F086         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  3540  002196  C0E5  F087         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  3541  00219A  C0E6  F088         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  3542  00219E  C0EA  F089         	movff	vfpfcnvrt@c,efgtoa@c
  3543  0021A2  EC55  F008         	call	_efgtoa	;wreg free
  3544  0021A6  C083  F0C7         	movff	?_efgtoa,?_vfpfcnvrt
  3545  0021AA  C084  F0C8         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  3546  0021AE  EF9F  F011         	goto	l2262
  3547  0021B2                     l8969:
  3548                           
  3549                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1204:         if 
      +                          (*fmt[0] == 'u') {
  3550  0021B2  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3551  0021B8  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3552  0021BE  006F FF7B FFF6     	movff	postinc2,tblptrl
  3553  0021C4  006F FF77 FFF7     	movff	postdec2,tblptrh
  3554  0021CA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3555  0021CA  6AF8               	clrf	tblptru,c
  3556  0021CC                     	endif
  3557  0021CC                     	if	0	;tblptru may be non-zero
  3558  0021CC                     	endif
  3559  0021CC  0008               	tblrd		*
  3560  0021CE  50F5               	movf	tablat,w,c
  3561  0021D0  0A75               	xorlw	117
  3562  0021D2  A4D8               	btfss	status,2,c
  3563  0021D4  EFEE  F010         	goto	u10081
  3564  0021D8  EFF0  F010         	goto	u10080
  3565  0021DC                     u10081:
  3566  0021DC  EF3C  F011         	goto	l8977
  3567  0021E0                     u10080:
  3568  0021E0                     
  3569                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1206:            
      +                           ++*fmt;
  3570  0021E0  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3571  0021E6  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3572  0021EC  2ADE               	incf	postinc2,f,c
  3573  0021EE  0E00               	movlw	0
  3574  0021F0  22DD               	addwfc	postdec2,f,c
  3575                           
  3576                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1207:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  3577  0021F2  0060  F32F  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  3578  0021F8  0060  F333  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  3579  0021FE  006F FF7C  F0CD    	movff	indf2,??_vfpfcnvrt
  3580  002204  0E02               	movlw	2
  3581  002206  26DE               	addwf	postinc2,f,c
  3582  002208  006F FF7C  F0CE    	movff	indf2,??_vfpfcnvrt+1
  3583  00220E  0E00               	movlw	0
  3584  002210  22DD               	addwfc	postdec2,f,c
  3585  002212  0060  F337  FFD9   	movff	??_vfpfcnvrt,fsr2l
  3586  002218  0060  F33B  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  3587  00221E  006F FF78  F0CF    	movff	postinc2,??_vfpfcnvrt+2
  3588  002224  006F FF74  F0D0    	movff	postdec2,??_vfpfcnvrt+3
  3589  00222A  C0CF  F0D9         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3590  00222E  C0D0  F0DA         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3591  002232  0100               	movlb	0	; () banked
  3592  002234  6BDB               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  3593  002236  6BDC               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  3594  002238  6BDD               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  3595  00223A  6BDE               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  3596  00223C  6BDF               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  3597  00223E  6BE0               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  3598  002240                     
  3599                           ; BSR set to: 0
  3600                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1209:            
      +                           return utoa(fp, llu);
  3601  002240  C0C7  F060         	movff	vfpfcnvrt@fp,utoa@fp
  3602  002244  C0C8  F061         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  3603  002248  C0D9  F062         	movff	vfpfcnvrt@llu,utoa@d
  3604  00224C  C0DA  F063         	movff	vfpfcnvrt@llu+1,utoa@d+1
  3605  002250  C0DB  F064         	movff	vfpfcnvrt@llu+2,utoa@d+2
  3606  002254  C0DC  F065         	movff	vfpfcnvrt@llu+3,utoa@d+3
  3607  002258  C0DD  F066         	movff	vfpfcnvrt@llu+4,utoa@d+4
  3608  00225C  C0DE  F067         	movff	vfpfcnvrt@llu+5,utoa@d+5
  3609  002260  C0DF  F068         	movff	vfpfcnvrt@llu+6,utoa@d+6
  3610  002264  C0E0  F069         	movff	vfpfcnvrt@llu+7,utoa@d+7
  3611  002268  EC75  F01A         	call	_utoa	;wreg free
  3612  00226C  C060  F0C7         	movff	?_utoa,?_vfpfcnvrt
  3613  002270  C061  F0C8         	movff	?_utoa+1,?_vfpfcnvrt+1
  3614  002274  EF9F  F011         	goto	l2262
  3615  002278                     l8977:
  3616                           
  3617                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  3618  002278  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3619  00227E  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3620  002284  006F FF7B FFF6     	movff	postinc2,tblptrl
  3621  00228A  006F FF77 FFF7     	movff	postdec2,tblptrh
  3622  002290                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3623  002290  6AF8               	clrf	tblptru,c
  3624  002292                     	endif
  3625  002292                     	if	0	;tblptru may be non-zero
  3626  002292                     	endif
  3627  002292  0008               	tblrd		*
  3628  002294  50F5               	movf	tablat,w,c
  3629  002296  0A25               	xorlw	37
  3630  002298  A4D8               	btfss	status,2,c
  3631  00229A  EF51  F011         	goto	u10091
  3632  00229E  EF53  F011         	goto	u10090
  3633  0022A2                     u10091:
  3634  0022A2  EF6D  F011         	goto	l8987
  3635  0022A6                     u10090:
  3636  0022A6                     
  3637                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  3638  0022A6  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3639  0022AC  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3640  0022B2  2ADE               	incf	postinc2,f,c
  3641  0022B4  0E00               	movlw	0
  3642  0022B6  22DD               	addwfc	postdec2,f,c
  3643  0022B8                     
  3644                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  3645  0022B8  0E00               	movlw	0
  3646  0022BA  6E17               	movwf	(fputc@c+1)^0,c
  3647  0022BC  0E25               	movlw	37
  3648  0022BE  6E16               	movwf	fputc@c^0,c
  3649  0022C0  C0C7  F018         	movff	vfpfcnvrt@fp,fputc@fp
  3650  0022C4  C0C8  F019         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3651  0022C8  EC6C  F02A         	call	_fputc	;wreg free
  3652  0022CC                     l8983:
  3653                           
  3654                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  3655  0022CC  0E00               	movlw	0
  3656  0022CE  0100               	movlb	0	; () banked
  3657  0022D0  6FC8               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  3658  0022D2  0E01               	movlw	1
  3659  0022D4  6FC7               	movwf	?_vfpfcnvrt& (0+255),b
  3660  0022D6  EF9F  F011         	goto	l2262
  3661  0022DA                     l8987:
  3662                           
  3663                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  3664  0022DA  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3665  0022E0  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3666  0022E6  2ADE               	incf	postinc2,f,c
  3667  0022E8  0E00               	movlw	0
  3668  0022EA  22DD               	addwfc	postdec2,f,c
  3669  0022EC                     
  3670                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  3671  0022EC  0E00               	movlw	0
  3672  0022EE  0100               	movlb	0	; () banked
  3673  0022F0  6FC8               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  3674  0022F2  0E00               	movlw	0
  3675  0022F4  6FC7               	movwf	?_vfpfcnvrt& (0+255),b
  3676  0022F6  EF9F  F011         	goto	l2262
  3677  0022FA                     l8993:
  3678                           
  3679                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  3680  0022FA  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3681  002300  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3682  002306  006F FF7B FFF6     	movff	postinc2,tblptrl
  3683  00230C  006F FF77 FFF7     	movff	postdec2,tblptrh
  3684  002312                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3685  002312  6AF8               	clrf	tblptru,c
  3686  002314                     	endif
  3687  002314                     	if	0	;tblptru may be non-zero
  3688  002314                     	endif
  3689  002314  0008               	tblrd		*
  3690  002316  50F5               	movf	tablat,w,c
  3691  002318  6E16               	movwf	fputc@c^0,c
  3692  00231A  6A17               	clrf	(fputc@c+1)^0,c
  3693  00231C  C0C7  F018         	movff	vfpfcnvrt@fp,fputc@fp
  3694  002320  C0C8  F019         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3695  002324  EC6C  F02A         	call	_fputc	;wreg free
  3696  002328                     
  3697                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  3698  002328  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3699  00232E  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3700  002334  2ADE               	incf	postinc2,f,c
  3701  002336  0E00               	movlw	0
  3702  002338  22DD               	addwfc	postdec2,f,c
  3703  00233A  EF66  F011         	goto	l8983
  3704  00233E                     l2262:
  3705  00233E  0012               	return		;funcret
  3706  002340                     __end_of_vfpfcnvrt:
  3707                           	callstack 0
  3708                           
  3709 ;; *************** function _utoa *****************
  3710 ;; Defined at:
  3711 ;;		line 615 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3712 ;; Parameters:    Size  Location     Type
  3713 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  3714 ;;		 -> NULL(0), 
  3715 ;;  d               8    2[BANK0 ] unsigned long long 
  3716 ;; Auto vars:     Size  Location     Type
  3717 ;;  n               8   14[BANK0 ] unsigned long long 
  3718 ;;  i               2   22[BANK0 ] int 
  3719 ;;  w               2   12[BANK0 ] int 
  3720 ;;  p               2   10[BANK0 ] int 
  3721 ;; Return value:  Size  Location     Type
  3722 ;;                  2    0[BANK0 ] int 
  3723 ;; Registers used:
  3724 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3725 ;; Tracked objects:
  3726 ;;		On entry : 0/0
  3727 ;;		On exit  : 0/0
  3728 ;;		Unchanged: 0/0
  3729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3730 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3731 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3732 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3733 ;;      Totals:         8      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3734 ;;Total ram usage:       32 bytes
  3735 ;; Hardware stack levels used: 1
  3736 ;; Hardware stack levels required when called: 13
  3737 ;; This function calls:
  3738 ;;		___lodiv
  3739 ;;		___lomod
  3740 ;;		_pad
  3741 ;; This function is called by:
  3742 ;;		_vfpfcnvrt
  3743 ;; This function uses a non-reentrant model
  3744 ;;
  3745                           
  3746                           	psect	text9
  3747  0034EA                     __ptext9:
  3748                           	callstack 0
  3749  0034EA                     _utoa:
  3750                           	callstack 12
  3751  0034EA                     
  3752                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 615: static int u
      +                          toa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99
      +                          \common\doprnt.c: 616: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\dop
      +                          rnt.c: 617:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common
      +                          \doprnt.c: 618:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sourc
      +                          es\c99\common\doprnt.c: 621:     if (!(prec < 0)) {
  3753  0034EA  BE3D               	btfsc	(_prec+1)^0,7,c
  3754  0034EC  EF7A  F01A         	goto	u9861
  3755  0034F0  EF7C  F01A         	goto	u9860
  3756  0034F4                     u9861:
  3757  0034F4  EF7D  F01A         	goto	l8861
  3758  0034F8                     u9860:
  3759  0034F8                     
  3760                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 622:         flag
      +                          s &= ~(1 << 1);
  3761  0034F8  923E               	bcf	_flags^0,1,c
  3762  0034FA                     l8861:
  3763                           
  3764                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 624:     p = (0 <
      +                           prec) ? prec : 1;
  3765  0034FA  BE3D               	btfsc	(_prec+1)^0,7,c
  3766  0034FC  EF8A  F01A         	goto	u9870
  3767  003500  503D               	movf	(_prec+1)^0,w,c
  3768  003502  E106               	bnz	u9871
  3769  003504  043C               	decf	_prec^0,w,c
  3770  003506  B0D8               	btfsc	status,0,c
  3771  003508  EF88  F01A         	goto	u9871
  3772  00350C  EF8A  F01A         	goto	u9870
  3773  003510                     u9871:
  3774  003510  EF91  F01A         	goto	l2243
  3775  003514                     u9870:
  3776  003514  0E00               	movlw	0
  3777  003516  0100               	movlb	0	; () banked
  3778  003518  6F6B               	movwf	(utoa@p+1)& (0+255),b
  3779  00351A  0E01               	movlw	1
  3780  00351C  6F6A               	movwf	utoa@p& (0+255),b
  3781  00351E  EF95  F01A         	goto	l2245
  3782  003522                     l2243:
  3783  003522  C03C  F06A         	movff	_prec,utoa@p
  3784  003526  C03D  F06B         	movff	_prec+1,utoa@p+1
  3785  00352A                     l2245:
  3786                           
  3787                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 625:     w = widt
      +                          h;
  3788  00352A  C03A  F06C         	movff	_width,utoa@w
  3789  00352E  C03B  F06D         	movff	_width+1,utoa@w+1
  3790                           
  3791                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 628:     n = d;
  3792  003532  C062  F06E         	movff	utoa@d,utoa@n
  3793  003536  C063  F06F         	movff	utoa@d+1,utoa@n+1
  3794  00353A  C064  F070         	movff	utoa@d+2,utoa@n+2
  3795  00353E  C065  F071         	movff	utoa@d+3,utoa@n+3
  3796  003542  C066  F072         	movff	utoa@d+4,utoa@n+4
  3797  003546  C067  F073         	movff	utoa@d+5,utoa@n+5
  3798  00354A  C068  F074         	movff	utoa@d+6,utoa@n+6
  3799  00354E  C069  F075         	movff	utoa@d+7,utoa@n+7
  3800  003552                     
  3801                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 629:     i = size
      +                          of(dbuf) - 1;
  3802  003552  0E00               	movlw	0
  3803  003554  0100               	movlb	0	; () banked
  3804  003556  6F77               	movwf	(utoa@i+1)& (0+255),b
  3805  003558  0E4F               	movlw	79
  3806  00355A  6F76               	movwf	utoa@i& (0+255),b
  3807  00355C                     
  3808                           ; BSR set to: 0
  3809                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 630:     dbuf[i] 
      +                          = '\0';
  3810  00355C  0E00               	movlw	0
  3811  00355E  0101               	movlb	1	; () banked
  3812  003560  6F8D               	movwf	(_dbuf+79)& (0+255),b
  3813                           
  3814                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3815  003562  EF2A  F01B         	goto	l8879
  3816  003566                     l8869:
  3817                           
  3818                           ; BSR set to: 0
  3819                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 632:         --i;
  3820  003566  0776               	decf	utoa@i& (0+255),f,b
  3821  003568  A0D8               	btfss	status,0,c
  3822  00356A  0777               	decf	(utoa@i+1)& (0+255),f,b
  3823  00356C                     
  3824                           ; BSR set to: 0
  3825                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 633:         dbuf
      +                          [i] = '0' + (n % 10);
  3826  00356C  0E3E               	movlw	low _dbuf
  3827  00356E  2576               	addwf	utoa@i& (0+255),w,b
  3828  003570  6ED9               	movwf	fsr2l,c
  3829  003572  0E01               	movlw	high _dbuf
  3830  003574  2177               	addwfc	(utoa@i+1)& (0+255),w,b
  3831  003576  6EDA               	movwf	fsr2h,c
  3832  003578  C06E  F014         	movff	utoa@n,___lomod@dividend
  3833  00357C  C06F  F015         	movff	utoa@n+1,___lomod@dividend+1
  3834  003580  C070  F016         	movff	utoa@n+2,___lomod@dividend+2
  3835  003584  C071  F017         	movff	utoa@n+3,___lomod@dividend+3
  3836  003588  C072  F018         	movff	utoa@n+4,___lomod@dividend+4
  3837  00358C  C073  F019         	movff	utoa@n+5,___lomod@dividend+5
  3838  003590  C074  F01A         	movff	utoa@n+6,___lomod@dividend+6
  3839  003594  C075  F01B         	movff	utoa@n+7,___lomod@dividend+7
  3840  003598  0E0A               	movlw	10
  3841  00359A  6E1C               	movwf	___lomod@divisor^0,c
  3842  00359C  0E00               	movlw	0
  3843  00359E  6E1D               	movwf	(___lomod@divisor+1)^0,c
  3844  0035A0  0E00               	movlw	0
  3845  0035A2  6E1E               	movwf	(___lomod@divisor+2)^0,c
  3846  0035A4  0E00               	movlw	0
  3847  0035A6  6E1F               	movwf	(___lomod@divisor+3)^0,c
  3848  0035A8  0E00               	movlw	0
  3849  0035AA  6E20               	movwf	(___lomod@divisor+4)^0,c
  3850  0035AC  0E00               	movlw	0
  3851  0035AE  6E21               	movwf	(___lomod@divisor+5)^0,c
  3852  0035B0  0E00               	movlw	0
  3853  0035B2  6E22               	movwf	(___lomod@divisor+6)^0,c
  3854  0035B4  0E00               	movlw	0
  3855  0035B6  6E23               	movwf	(___lomod@divisor+7)^0,c
  3856  0035B8  ECC7  F026         	call	___lomod	;wreg free
  3857  0035BC  C014  F031         	movff	?___lomod,??_utoa
  3858  0035C0  C015  F032         	movff	?___lomod+1,??_utoa+1
  3859  0035C4  C016  F033         	movff	?___lomod+2,??_utoa+2
  3860  0035C8  C017  F034         	movff	?___lomod+3,??_utoa+3
  3861  0035CC  C018  F035         	movff	?___lomod+4,??_utoa+4
  3862  0035D0  C019  F036         	movff	?___lomod+5,??_utoa+5
  3863  0035D4  C01A  F037         	movff	?___lomod+6,??_utoa+6
  3864  0035D8  C01B  F038         	movff	?___lomod+7,??_utoa+7
  3865  0035DC  5031               	movf	??_utoa^0,w,c
  3866  0035DE  0F30               	addlw	48
  3867  0035E0  6EDF               	movwf	indf2,c
  3868  0035E2                     
  3869                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 634:         --p;
  3870  0035E2  0100               	movlb	0	; () banked
  3871  0035E4  076A               	decf	utoa@p& (0+255),f,b
  3872  0035E6  A0D8               	btfss	status,0,c
  3873  0035E8  076B               	decf	(utoa@p+1)& (0+255),f,b
  3874  0035EA                     
  3875                           ; BSR set to: 0
  3876                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 635:         --w;
  3877  0035EA  076C               	decf	utoa@w& (0+255),f,b
  3878  0035EC  A0D8               	btfss	status,0,c
  3879  0035EE  076D               	decf	(utoa@w+1)& (0+255),f,b
  3880  0035F0                     
  3881                           ; BSR set to: 0
  3882                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 636:         n = 
      +                          n / 10;
  3883  0035F0  C06E  F014         	movff	utoa@n,___lodiv@dividend
  3884  0035F4  C06F  F015         	movff	utoa@n+1,___lodiv@dividend+1
  3885  0035F8  C070  F016         	movff	utoa@n+2,___lodiv@dividend+2
  3886  0035FC  C071  F017         	movff	utoa@n+3,___lodiv@dividend+3
  3887  003600  C072  F018         	movff	utoa@n+4,___lodiv@dividend+4
  3888  003604  C073  F019         	movff	utoa@n+5,___lodiv@dividend+5
  3889  003608  C074  F01A         	movff	utoa@n+6,___lodiv@dividend+6
  3890  00360C  C075  F01B         	movff	utoa@n+7,___lodiv@dividend+7
  3891  003610  0E0A               	movlw	10
  3892  003612  6E1C               	movwf	___lodiv@divisor^0,c
  3893  003614  0E00               	movlw	0
  3894  003616  6E1D               	movwf	(___lodiv@divisor+1)^0,c
  3895  003618  0E00               	movlw	0
  3896  00361A  6E1E               	movwf	(___lodiv@divisor+2)^0,c
  3897  00361C  0E00               	movlw	0
  3898  00361E  6E1F               	movwf	(___lodiv@divisor+3)^0,c
  3899  003620  0E00               	movlw	0
  3900  003622  6E20               	movwf	(___lodiv@divisor+4)^0,c
  3901  003624  0E00               	movlw	0
  3902  003626  6E21               	movwf	(___lodiv@divisor+5)^0,c
  3903  003628  0E00               	movlw	0
  3904  00362A  6E22               	movwf	(___lodiv@divisor+6)^0,c
  3905  00362C  0E00               	movlw	0
  3906  00362E  6E23               	movwf	(___lodiv@divisor+7)^0,c
  3907  003630  ECDE  F025         	call	___lodiv	;wreg free
  3908  003634  C014  F06E         	movff	?___lodiv,utoa@n
  3909  003638  C015  F06F         	movff	?___lodiv+1,utoa@n+1
  3910  00363C  C016  F070         	movff	?___lodiv+2,utoa@n+2
  3911  003640  C017  F071         	movff	?___lodiv+3,utoa@n+3
  3912  003644  C018  F072         	movff	?___lodiv+4,utoa@n+4
  3913  003648  C019  F073         	movff	?___lodiv+5,utoa@n+5
  3914  00364C  C01A  F074         	movff	?___lodiv+6,utoa@n+6
  3915  003650  C01B  F075         	movff	?___lodiv+7,utoa@n+7
  3916  003654                     l8879:
  3917                           
  3918                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3919  003654  0100               	movlb	0	; () banked
  3920  003656  5176               	movf	utoa@i& (0+255),w,b
  3921  003658  1177               	iorwf	(utoa@i+1)& (0+255),w,b
  3922  00365A  B4D8               	btfsc	status,2,c
  3923  00365C  EF32  F01B         	goto	u9881
  3924  003660  EF34  F01B         	goto	u9880
  3925  003664                     u9881:
  3926  003664  EF64  F01B         	goto	l8889
  3927  003668                     u9880:
  3928  003668                     
  3929                           ; BSR set to: 0
  3930  003668  516E               	movf	utoa@n& (0+255),w,b
  3931  00366A  116F               	iorwf	(utoa@n+1)& (0+255),w,b
  3932  00366C  1170               	iorwf	(utoa@n+2)& (0+255),w,b
  3933  00366E  1171               	iorwf	(utoa@n+3)& (0+255),w,b
  3934  003670  1172               	iorwf	(utoa@n+4)& (0+255),w,b
  3935  003672  1173               	iorwf	(utoa@n+5)& (0+255),w,b
  3936  003674  1174               	iorwf	(utoa@n+6)& (0+255),w,b
  3937  003676  1175               	iorwf	(utoa@n+7)& (0+255),w,b
  3938  003678  A4D8               	btfss	status,2,c
  3939  00367A  EF41  F01B         	goto	u9891
  3940  00367E  EF43  F01B         	goto	u9890
  3941  003682                     u9891:
  3942  003682  EFB3  F01A         	goto	l8869
  3943  003686                     u9890:
  3944  003686                     
  3945                           ; BSR set to: 0
  3946  003686  BF6B               	btfsc	(utoa@p+1)& (0+255),7,b
  3947  003688  EF50  F01B         	goto	u9900
  3948  00368C  516B               	movf	(utoa@p+1)& (0+255),w,b
  3949  00368E  E106               	bnz	u9901
  3950  003690  056A               	decf	utoa@p& (0+255),w,b
  3951  003692  B0D8               	btfsc	status,0,c
  3952  003694  EF4E  F01B         	goto	u9901
  3953  003698  EF50  F01B         	goto	u9900
  3954  00369C                     u9901:
  3955  00369C  EFB3  F01A         	goto	l8869
  3956  0036A0                     u9900:
  3957  0036A0                     
  3958                           ; BSR set to: 0
  3959  0036A0  BF6D               	btfsc	(utoa@w+1)& (0+255),7,b
  3960  0036A2  EF5B  F01B         	goto	u9911
  3961  0036A6  516D               	movf	(utoa@w+1)& (0+255),w,b
  3962  0036A8  E108               	bnz	u9910
  3963  0036AA  056C               	decf	utoa@w& (0+255),w,b
  3964  0036AC  A0D8               	btfss	status,0,c
  3965  0036AE  EF5B  F01B         	goto	u9911
  3966  0036B2  EF5D  F01B         	goto	u9910
  3967  0036B6                     u9911:
  3968  0036B6  EF64  F01B         	goto	l8889
  3969  0036BA                     u9910:
  3970  0036BA                     
  3971                           ; BSR set to: 0
  3972  0036BA  B23E               	btfsc	_flags^0,1,c
  3973  0036BC  EF62  F01B         	goto	u9921
  3974  0036C0  EF64  F01B         	goto	u9920
  3975  0036C4                     u9921:
  3976  0036C4  EFB3  F01A         	goto	l8869
  3977  0036C8                     u9920:
  3978  0036C8                     l8889:
  3979                           
  3980                           ; BSR set to: 0
  3981                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 640:     return p
      +                          ad(fp, &dbuf[i], w);
  3982  0036C8  C060  F026         	movff	utoa@fp,pad@fp
  3983  0036CC  C061  F027         	movff	utoa@fp+1,pad@fp+1
  3984  0036D0  0E3E               	movlw	low _dbuf
  3985  0036D2  2576               	addwf	utoa@i& (0+255),w,b
  3986  0036D4  6E28               	movwf	pad@buf^0,c
  3987  0036D6  0E01               	movlw	high _dbuf
  3988  0036D8  2177               	addwfc	(utoa@i+1)& (0+255),w,b
  3989  0036DA  6E29               	movwf	(pad@buf+1)^0,c
  3990  0036DC  C06C  F02A         	movff	utoa@w,pad@p
  3991  0036E0  C06D  F02B         	movff	utoa@w+1,pad@p+1
  3992  0036E4  EC5C  F028         	call	_pad	;wreg free
  3993  0036E8  C026  F060         	movff	?_pad,?_utoa
  3994  0036EC  C027  F061         	movff	?_pad+1,?_utoa+1
  3995  0036F0  0012               	return		;funcret
  3996  0036F2                     __end_of_utoa:
  3997                           	callstack 0
  3998                           
  3999 ;; *************** function ___lomod *****************
  4000 ;; Defined at:
  4001 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lomod.c"
  4002 ;; Parameters:    Size  Location     Type
  4003 ;;  dividend        8   19[COMRAM] unsigned long long 
  4004 ;;  divisor         8   27[COMRAM] unsigned long long 
  4005 ;; Auto vars:     Size  Location     Type
  4006 ;;  counter         1   35[COMRAM] unsigned char 
  4007 ;; Return value:  Size  Location     Type
  4008 ;;                  8   19[COMRAM] unsigned long long 
  4009 ;; Registers used:
  4010 ;;		wreg, status,2, status,0
  4011 ;; Tracked objects:
  4012 ;;		On entry : 0/0
  4013 ;;		On exit  : 0/0
  4014 ;;		Unchanged: 0/0
  4015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4016 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4017 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4019 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4020 ;;Total ram usage:       17 bytes
  4021 ;; Hardware stack levels used: 1
  4022 ;; Hardware stack levels required when called: 8
  4023 ;; This function calls:
  4024 ;;		Nothing
  4025 ;; This function is called by:
  4026 ;;		_utoa
  4027 ;; This function uses a non-reentrant model
  4028 ;;
  4029                           
  4030                           	psect	text10
  4031  004D8E                     __ptext10:
  4032                           	callstack 0
  4033  004D8E                     ___lomod:
  4034                           	callstack 16
  4035  004D8E  501C               	movf	___lomod@divisor^0,w,c
  4036  004D90  101D               	iorwf	(___lomod@divisor+1)^0,w,c
  4037  004D92  101E               	iorwf	(___lomod@divisor+2)^0,w,c
  4038  004D94  101F               	iorwf	(___lomod@divisor+3)^0,w,c
  4039  004D96  1020               	iorwf	(___lomod@divisor+4)^0,w,c
  4040  004D98  1021               	iorwf	(___lomod@divisor+5)^0,w,c
  4041  004D9A  1022               	iorwf	(___lomod@divisor+6)^0,w,c
  4042  004D9C  1023               	iorwf	(___lomod@divisor+7)^0,w,c
  4043  004D9E  B4D8               	btfsc	status,2,c
  4044  004DA0  EFD4  F026         	goto	u8871
  4045  004DA4  EFD6  F026         	goto	u8870
  4046  004DA8                     u8871:
  4047  004DA8  EF1E  F027         	goto	l1845
  4048  004DAC                     u8870:
  4049  004DAC  0E01               	movlw	1
  4050  004DAE  6E24               	movwf	___lomod@counter^0,c
  4051  004DB0  EFE4  F026         	goto	l8387
  4052  004DB4                     l8385:
  4053  004DB4  90D8               	bcf	status,0,c
  4054  004DB6  361C               	rlcf	___lomod@divisor^0,f,c
  4055  004DB8  361D               	rlcf	(___lomod@divisor+1)^0,f,c
  4056  004DBA  361E               	rlcf	(___lomod@divisor+2)^0,f,c
  4057  004DBC  361F               	rlcf	(___lomod@divisor+3)^0,f,c
  4058  004DBE  3620               	rlcf	(___lomod@divisor+4)^0,f,c
  4059  004DC0  3621               	rlcf	(___lomod@divisor+5)^0,f,c
  4060  004DC2  3622               	rlcf	(___lomod@divisor+6)^0,f,c
  4061  004DC4  3623               	rlcf	(___lomod@divisor+7)^0,f,c
  4062  004DC6  2A24               	incf	___lomod@counter^0,f,c
  4063  004DC8                     l8387:
  4064  004DC8  AE23               	btfss	(___lomod@divisor+7)^0,7,c
  4065  004DCA  EFE9  F026         	goto	u8881
  4066  004DCE  EFEB  F026         	goto	u8880
  4067  004DD2                     u8881:
  4068  004DD2  EFDA  F026         	goto	l8385
  4069  004DD6                     u8880:
  4070  004DD6                     l8389:
  4071  004DD6  501C               	movf	___lomod@divisor^0,w,c
  4072  004DD8  5C14               	subwf	___lomod@dividend^0,w,c
  4073  004DDA  501D               	movf	(___lomod@divisor+1)^0,w,c
  4074  004DDC  5815               	subwfb	(___lomod@dividend+1)^0,w,c
  4075  004DDE  501E               	movf	(___lomod@divisor+2)^0,w,c
  4076  004DE0  5816               	subwfb	(___lomod@dividend+2)^0,w,c
  4077  004DE2  501F               	movf	(___lomod@divisor+3)^0,w,c
  4078  004DE4  5817               	subwfb	(___lomod@dividend+3)^0,w,c
  4079  004DE6  5020               	movf	(___lomod@divisor+4)^0,w,c
  4080  004DE8  5818               	subwfb	(___lomod@dividend+4)^0,w,c
  4081  004DEA  5021               	movf	(___lomod@divisor+5)^0,w,c
  4082  004DEC  5819               	subwfb	(___lomod@dividend+5)^0,w,c
  4083  004DEE  5022               	movf	(___lomod@divisor+6)^0,w,c
  4084  004DF0  581A               	subwfb	(___lomod@dividend+6)^0,w,c
  4085  004DF2  5023               	movf	(___lomod@divisor+7)^0,w,c
  4086  004DF4  581B               	subwfb	(___lomod@dividend+7)^0,w,c
  4087  004DF6  A0D8               	btfss	status,0,c
  4088  004DF8  EF00  F027         	goto	u8891
  4089  004DFC  EF02  F027         	goto	u8890
  4090  004E00                     u8891:
  4091  004E00  EF12  F027         	goto	l8393
  4092  004E04                     u8890:
  4093  004E04  501C               	movf	___lomod@divisor^0,w,c
  4094  004E06  5E14               	subwf	___lomod@dividend^0,f,c
  4095  004E08  501D               	movf	(___lomod@divisor+1)^0,w,c
  4096  004E0A  5A15               	subwfb	(___lomod@dividend+1)^0,f,c
  4097  004E0C  501E               	movf	(___lomod@divisor+2)^0,w,c
  4098  004E0E  5A16               	subwfb	(___lomod@dividend+2)^0,f,c
  4099  004E10  501F               	movf	(___lomod@divisor+3)^0,w,c
  4100  004E12  5A17               	subwfb	(___lomod@dividend+3)^0,f,c
  4101  004E14  5020               	movf	(___lomod@divisor+4)^0,w,c
  4102  004E16  5A18               	subwfb	(___lomod@dividend+4)^0,f,c
  4103  004E18  5021               	movf	(___lomod@divisor+5)^0,w,c
  4104  004E1A  5A19               	subwfb	(___lomod@dividend+5)^0,f,c
  4105  004E1C  5022               	movf	(___lomod@divisor+6)^0,w,c
  4106  004E1E  5A1A               	subwfb	(___lomod@dividend+6)^0,f,c
  4107  004E20  5023               	movf	(___lomod@divisor+7)^0,w,c
  4108  004E22  5A1B               	subwfb	(___lomod@dividend+7)^0,f,c
  4109  004E24                     l8393:
  4110  004E24  90D8               	bcf	status,0,c
  4111  004E26  3223               	rrcf	(___lomod@divisor+7)^0,f,c
  4112  004E28  3222               	rrcf	(___lomod@divisor+6)^0,f,c
  4113  004E2A  3221               	rrcf	(___lomod@divisor+5)^0,f,c
  4114  004E2C  3220               	rrcf	(___lomod@divisor+4)^0,f,c
  4115  004E2E  321F               	rrcf	(___lomod@divisor+3)^0,f,c
  4116  004E30  321E               	rrcf	(___lomod@divisor+2)^0,f,c
  4117  004E32  321D               	rrcf	(___lomod@divisor+1)^0,f,c
  4118  004E34  321C               	rrcf	___lomod@divisor^0,f,c
  4119  004E36  2E24               	decfsz	___lomod@counter^0,f,c
  4120  004E38  EFEB  F026         	goto	l8389
  4121  004E3C                     l1845:
  4122  004E3C  C014  F014         	movff	___lomod@dividend,?___lomod
  4123  004E40  C015  F015         	movff	___lomod@dividend+1,?___lomod+1
  4124  004E44  C016  F016         	movff	___lomod@dividend+2,?___lomod+2
  4125  004E48  C017  F017         	movff	___lomod@dividend+3,?___lomod+3
  4126  004E4C  C018  F018         	movff	___lomod@dividend+4,?___lomod+4
  4127  004E50  C019  F019         	movff	___lomod@dividend+5,?___lomod+5
  4128  004E54  C01A  F01A         	movff	___lomod@dividend+6,?___lomod+6
  4129  004E58  C01B  F01B         	movff	___lomod@dividend+7,?___lomod+7
  4130  004E5C  0012               	return		;funcret
  4131  004E5E                     __end_of___lomod:
  4132                           	callstack 0
  4133                           
  4134 ;; *************** function ___lodiv *****************
  4135 ;; Defined at:
  4136 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lodiv.c"
  4137 ;; Parameters:    Size  Location     Type
  4138 ;;  dividend        8   19[COMRAM] unsigned long long 
  4139 ;;  divisor         8   27[COMRAM] unsigned long long 
  4140 ;; Auto vars:     Size  Location     Type
  4141 ;;  quotient        8   35[COMRAM] unsigned long long 
  4142 ;;  counter         1   43[COMRAM] unsigned char 
  4143 ;; Return value:  Size  Location     Type
  4144 ;;                  8   19[COMRAM] unsigned long long 
  4145 ;; Registers used:
  4146 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4147 ;; Tracked objects:
  4148 ;;		On entry : 0/0
  4149 ;;		On exit  : 0/0
  4150 ;;		Unchanged: 0/0
  4151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4152 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4153 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4155 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4156 ;;Total ram usage:       25 bytes
  4157 ;; Hardware stack levels used: 1
  4158 ;; Hardware stack levels required when called: 8
  4159 ;; This function calls:
  4160 ;;		Nothing
  4161 ;; This function is called by:
  4162 ;;		_utoa
  4163 ;; This function uses a non-reentrant model
  4164 ;;
  4165                           
  4166                           	psect	text11
  4167  004BBC                     __ptext11:
  4168                           	callstack 0
  4169  004BBC                     ___lodiv:
  4170                           	callstack 16
  4171  004BBC  EE20  F024         	lfsr	2,___lodiv@quotient
  4172  004BC0  0E07               	movlw	7
  4173  004BC2                     u8831:
  4174  004BC2  6ADE               	clrf	postinc2,c
  4175  004BC4  06E8               	decf	wreg,f,c
  4176  004BC6  E2FD               	bc	u8831
  4177  004BC8  501C               	movf	___lodiv@divisor^0,w,c
  4178  004BCA  101D               	iorwf	(___lodiv@divisor+1)^0,w,c
  4179  004BCC  101E               	iorwf	(___lodiv@divisor+2)^0,w,c
  4180  004BCE  101F               	iorwf	(___lodiv@divisor+3)^0,w,c
  4181  004BD0  1020               	iorwf	(___lodiv@divisor+4)^0,w,c
  4182  004BD2  1021               	iorwf	(___lodiv@divisor+5)^0,w,c
  4183  004BD4  1022               	iorwf	(___lodiv@divisor+6)^0,w,c
  4184  004BD6  1023               	iorwf	(___lodiv@divisor+7)^0,w,c
  4185  004BD8  B4D8               	btfsc	status,2,c
  4186  004BDA  EFF1  F025         	goto	u8841
  4187  004BDE  EFF3  F025         	goto	u8840
  4188  004BE2                     u8841:
  4189  004BE2  EF45  F026         	goto	l1835
  4190  004BE6                     u8840:
  4191  004BE6  0E01               	movlw	1
  4192  004BE8  6E2C               	movwf	___lodiv@counter^0,c
  4193  004BEA  EF01  F026         	goto	l8367
  4194  004BEE                     l8365:
  4195  004BEE  90D8               	bcf	status,0,c
  4196  004BF0  361C               	rlcf	___lodiv@divisor^0,f,c
  4197  004BF2  361D               	rlcf	(___lodiv@divisor+1)^0,f,c
  4198  004BF4  361E               	rlcf	(___lodiv@divisor+2)^0,f,c
  4199  004BF6  361F               	rlcf	(___lodiv@divisor+3)^0,f,c
  4200  004BF8  3620               	rlcf	(___lodiv@divisor+4)^0,f,c
  4201  004BFA  3621               	rlcf	(___lodiv@divisor+5)^0,f,c
  4202  004BFC  3622               	rlcf	(___lodiv@divisor+6)^0,f,c
  4203  004BFE  3623               	rlcf	(___lodiv@divisor+7)^0,f,c
  4204  004C00  2A2C               	incf	___lodiv@counter^0,f,c
  4205  004C02                     l8367:
  4206  004C02  AE23               	btfss	(___lodiv@divisor+7)^0,7,c
  4207  004C04  EF06  F026         	goto	u8851
  4208  004C08  EF08  F026         	goto	u8850
  4209  004C0C                     u8851:
  4210  004C0C  EFF7  F025         	goto	l8365
  4211  004C10                     u8850:
  4212  004C10                     l8369:
  4213  004C10  90D8               	bcf	status,0,c
  4214  004C12  3624               	rlcf	___lodiv@quotient^0,f,c
  4215  004C14  3625               	rlcf	(___lodiv@quotient+1)^0,f,c
  4216  004C16  3626               	rlcf	(___lodiv@quotient+2)^0,f,c
  4217  004C18  3627               	rlcf	(___lodiv@quotient+3)^0,f,c
  4218  004C1A  3628               	rlcf	(___lodiv@quotient+4)^0,f,c
  4219  004C1C  3629               	rlcf	(___lodiv@quotient+5)^0,f,c
  4220  004C1E  362A               	rlcf	(___lodiv@quotient+6)^0,f,c
  4221  004C20  362B               	rlcf	(___lodiv@quotient+7)^0,f,c
  4222  004C22  501C               	movf	___lodiv@divisor^0,w,c
  4223  004C24  5C14               	subwf	___lodiv@dividend^0,w,c
  4224  004C26  501D               	movf	(___lodiv@divisor+1)^0,w,c
  4225  004C28  5815               	subwfb	(___lodiv@dividend+1)^0,w,c
  4226  004C2A  501E               	movf	(___lodiv@divisor+2)^0,w,c
  4227  004C2C  5816               	subwfb	(___lodiv@dividend+2)^0,w,c
  4228  004C2E  501F               	movf	(___lodiv@divisor+3)^0,w,c
  4229  004C30  5817               	subwfb	(___lodiv@dividend+3)^0,w,c
  4230  004C32  5020               	movf	(___lodiv@divisor+4)^0,w,c
  4231  004C34  5818               	subwfb	(___lodiv@dividend+4)^0,w,c
  4232  004C36  5021               	movf	(___lodiv@divisor+5)^0,w,c
  4233  004C38  5819               	subwfb	(___lodiv@dividend+5)^0,w,c
  4234  004C3A  5022               	movf	(___lodiv@divisor+6)^0,w,c
  4235  004C3C  581A               	subwfb	(___lodiv@dividend+6)^0,w,c
  4236  004C3E  5023               	movf	(___lodiv@divisor+7)^0,w,c
  4237  004C40  581B               	subwfb	(___lodiv@dividend+7)^0,w,c
  4238  004C42  A0D8               	btfss	status,0,c
  4239  004C44  EF26  F026         	goto	u8861
  4240  004C48  EF28  F026         	goto	u8860
  4241  004C4C                     u8861:
  4242  004C4C  EF39  F026         	goto	l8377
  4243  004C50                     u8860:
  4244  004C50  501C               	movf	___lodiv@divisor^0,w,c
  4245  004C52  5E14               	subwf	___lodiv@dividend^0,f,c
  4246  004C54  501D               	movf	(___lodiv@divisor+1)^0,w,c
  4247  004C56  5A15               	subwfb	(___lodiv@dividend+1)^0,f,c
  4248  004C58  501E               	movf	(___lodiv@divisor+2)^0,w,c
  4249  004C5A  5A16               	subwfb	(___lodiv@dividend+2)^0,f,c
  4250  004C5C  501F               	movf	(___lodiv@divisor+3)^0,w,c
  4251  004C5E  5A17               	subwfb	(___lodiv@dividend+3)^0,f,c
  4252  004C60  5020               	movf	(___lodiv@divisor+4)^0,w,c
  4253  004C62  5A18               	subwfb	(___lodiv@dividend+4)^0,f,c
  4254  004C64  5021               	movf	(___lodiv@divisor+5)^0,w,c
  4255  004C66  5A19               	subwfb	(___lodiv@dividend+5)^0,f,c
  4256  004C68  5022               	movf	(___lodiv@divisor+6)^0,w,c
  4257  004C6A  5A1A               	subwfb	(___lodiv@dividend+6)^0,f,c
  4258  004C6C  5023               	movf	(___lodiv@divisor+7)^0,w,c
  4259  004C6E  5A1B               	subwfb	(___lodiv@dividend+7)^0,f,c
  4260  004C70  8024               	bsf	___lodiv@quotient^0,0,c
  4261  004C72                     l8377:
  4262  004C72  90D8               	bcf	status,0,c
  4263  004C74  3223               	rrcf	(___lodiv@divisor+7)^0,f,c
  4264  004C76  3222               	rrcf	(___lodiv@divisor+6)^0,f,c
  4265  004C78  3221               	rrcf	(___lodiv@divisor+5)^0,f,c
  4266  004C7A  3220               	rrcf	(___lodiv@divisor+4)^0,f,c
  4267  004C7C  321F               	rrcf	(___lodiv@divisor+3)^0,f,c
  4268  004C7E  321E               	rrcf	(___lodiv@divisor+2)^0,f,c
  4269  004C80  321D               	rrcf	(___lodiv@divisor+1)^0,f,c
  4270  004C82  321C               	rrcf	___lodiv@divisor^0,f,c
  4271  004C84  2E2C               	decfsz	___lodiv@counter^0,f,c
  4272  004C86  EF08  F026         	goto	l8369
  4273  004C8A                     l1835:
  4274  004C8A  C024  F014         	movff	___lodiv@quotient,?___lodiv
  4275  004C8E  C025  F015         	movff	___lodiv@quotient+1,?___lodiv+1
  4276  004C92  C026  F016         	movff	___lodiv@quotient+2,?___lodiv+2
  4277  004C96  C027  F017         	movff	___lodiv@quotient+3,?___lodiv+3
  4278  004C9A  C028  F018         	movff	___lodiv@quotient+4,?___lodiv+4
  4279  004C9E  C029  F019         	movff	___lodiv@quotient+5,?___lodiv+5
  4280  004CA2  C02A  F01A         	movff	___lodiv@quotient+6,?___lodiv+6
  4281  004CA6  C02B  F01B         	movff	___lodiv@quotient+7,?___lodiv+7
  4282  004CAA  0012               	return		;funcret
  4283  004CAC                     __end_of___lodiv:
  4284                           	callstack 0
  4285                           
  4286 ;; *************** function _strncmp *****************
  4287 ;; Defined at:
  4288 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strncmp.c"
  4289 ;; Parameters:    Size  Location     Type
  4290 ;;  _l              2   19[COMRAM] PTR const unsigned char 
  4291 ;;		 -> vfpfcnvrt@ct(3), 
  4292 ;;  _r              2   21[COMRAM] PTR const unsigned char 
  4293 ;;		 -> STR_19(3), 
  4294 ;;  n               2   23[COMRAM] unsigned int 
  4295 ;; Auto vars:     Size  Location     Type
  4296 ;;  r               2   28[COMRAM] PTR const unsigned char 
  4297 ;;		 -> STR_19(3), 
  4298 ;;  l               2   26[COMRAM] PTR const unsigned char 
  4299 ;;		 -> vfpfcnvrt@ct(3), 
  4300 ;; Return value:  Size  Location     Type
  4301 ;;                  2   19[COMRAM] int 
  4302 ;; Registers used:
  4303 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4304 ;; Tracked objects:
  4305 ;;		On entry : 0/0
  4306 ;;		On exit  : 0/0
  4307 ;;		Unchanged: 0/0
  4308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4309 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4310 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4311 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4312 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4313 ;;Total ram usage:       11 bytes
  4314 ;; Hardware stack levels used: 1
  4315 ;; Hardware stack levels required when called: 8
  4316 ;; This function calls:
  4317 ;;		Nothing
  4318 ;; This function is called by:
  4319 ;;		_vfpfcnvrt
  4320 ;; This function uses a non-reentrant model
  4321 ;;
  4322                           
  4323                           	psect	text12
  4324  004AC8                     __ptext12:
  4325                           	callstack 0
  4326  004AC8                     _strncmp:
  4327                           	callstack 17
  4328  004AC8  C014  F01B         	movff	strncmp@_l,strncmp@l
  4329  004ACC  C015  F01C         	movff	strncmp@_l+1,strncmp@l+1
  4330  004AD0  C016  F01D         	movff	strncmp@_r,strncmp@r
  4331  004AD4  C017  F01E         	movff	strncmp@_r+1,strncmp@r+1
  4332  004AD8  0618               	decf	strncmp@n^0,f,c
  4333  004ADA  A0D8               	btfss	status,0,c
  4334  004ADC  0619               	decf	(strncmp@n+1)^0,f,c
  4335  004ADE  2818               	incf	strncmp@n^0,w,c
  4336  004AE0  E106               	bnz	u9931
  4337  004AE2  2819               	incf	(strncmp@n+1)^0,w,c
  4338  004AE4  A4D8               	btfss	status,2,c
  4339  004AE6  EF77  F025         	goto	u9931
  4340  004AEA  EF79  F025         	goto	u9930
  4341  004AEE                     u9931:
  4342  004AEE  EF86  F025         	goto	l8901
  4343  004AF2                     u9930:
  4344  004AF2  0E00               	movlw	0
  4345  004AF4  6E15               	movwf	(?_strncmp+1)^0,c
  4346  004AF6  0E00               	movlw	0
  4347  004AF8  6E14               	movwf	?_strncmp^0,c
  4348  004AFA  EFDD  F025         	goto	l2351
  4349  004AFE                     l8899:
  4350  004AFE  4A1B               	infsnz	strncmp@l^0,f,c
  4351  004B00  2A1C               	incf	(strncmp@l+1)^0,f,c
  4352  004B02  4A1D               	infsnz	strncmp@r^0,f,c
  4353  004B04  2A1E               	incf	(strncmp@r+1)^0,f,c
  4354  004B06  0618               	decf	strncmp@n^0,f,c
  4355  004B08  A0D8               	btfss	status,0,c
  4356  004B0A  0619               	decf	(strncmp@n+1)^0,f,c
  4357  004B0C                     l8901:
  4358  004B0C  0060  F06F  FFD9   	movff	strncmp@l,fsr2l
  4359  004B12  0060  F073  FFDA   	movff	strncmp@l+1,fsr2h
  4360  004B18  50DF               	movf	indf2,w,c
  4361  004B1A  B4D8               	btfsc	status,2,c
  4362  004B1C  EF92  F025         	goto	u9941
  4363  004B20  EF94  F025         	goto	u9940
  4364  004B24                     u9941:
  4365  004B24  EFC7  F025         	goto	l8909
  4366  004B28                     u9940:
  4367  004B28  0060  F077  FFF6   	movff	strncmp@r,tblptrl
  4368  004B2E  0060  F07B  FFF7   	movff	strncmp@r+1,tblptrh
  4369  004B34                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4370  004B34  6AF8               	clrf	tblptru,c
  4371  004B36                     	endif
  4372  004B36                     	if	0	;tblptru may be non-zero
  4373  004B36                     	endif
  4374  004B36  0008               	tblrd		*
  4375  004B38  50F5               	movf	tablat,w,c
  4376  004B3A  0900               	iorlw	0
  4377  004B3C  B4D8               	btfsc	status,2,c
  4378  004B3E  EFA3  F025         	goto	u9951
  4379  004B42  EFA5  F025         	goto	u9950
  4380  004B46                     u9951:
  4381  004B46  EFC7  F025         	goto	l8909
  4382  004B4A                     u9950:
  4383  004B4A  5018               	movf	strncmp@n^0,w,c
  4384  004B4C  1019               	iorwf	(strncmp@n+1)^0,w,c
  4385  004B4E  B4D8               	btfsc	status,2,c
  4386  004B50  EFAC  F025         	goto	u9961
  4387  004B54  EFAE  F025         	goto	u9960
  4388  004B58                     u9961:
  4389  004B58  EFC7  F025         	goto	l8909
  4390  004B5C                     u9960:
  4391  004B5C  0060  F06F  FFD9   	movff	strncmp@l,fsr2l
  4392  004B62  0060  F073  FFDA   	movff	strncmp@l+1,fsr2h
  4393  004B68  50DF               	movf	indf2,w,c
  4394  004B6A  6E1A               	movwf	??_strncmp^0,c
  4395  004B6C  0060  F077  FFF6   	movff	strncmp@r,tblptrl
  4396  004B72  0060  F07B  FFF7   	movff	strncmp@r+1,tblptrh
  4397  004B78                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4398  004B78  6AF8               	clrf	tblptru,c
  4399  004B7A                     	endif
  4400  004B7A                     	if	0	;tblptru may be non-zero
  4401  004B7A                     	endif
  4402  004B7A  0008               	tblrd		*
  4403  004B7C  50F5               	movf	tablat,w,c
  4404  004B7E  181A               	xorwf	??_strncmp^0,w,c
  4405  004B80  B4D8               	btfsc	status,2,c
  4406  004B82  EFC5  F025         	goto	u9971
  4407  004B86  EFC7  F025         	goto	u9970
  4408  004B8A                     u9971:
  4409  004B8A  EF7F  F025         	goto	l8899
  4410  004B8E                     u9970:
  4411  004B8E                     l8909:
  4412  004B8E  0060  F06F  FFD9   	movff	strncmp@l,fsr2l
  4413  004B94  0060  F073  FFDA   	movff	strncmp@l+1,fsr2h
  4414  004B9A  50DF               	movf	indf2,w,c
  4415  004B9C  6E1A               	movwf	??_strncmp^0,c
  4416  004B9E  0060  F077  FFF6   	movff	strncmp@r,tblptrl
  4417  004BA4  0060  F07B  FFF7   	movff	strncmp@r+1,tblptrh
  4418  004BAA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4419  004BAA  6AF8               	clrf	tblptru,c
  4420  004BAC                     	endif
  4421  004BAC                     	if	0	;tblptru may be non-zero
  4422  004BAC                     	endif
  4423  004BAC  0008               	tblrd		*
  4424  004BAE  50F5               	movf	tablat,w,c
  4425  004BB0  5C1A               	subwf	??_strncmp^0,w,c
  4426  004BB2  6E14               	movwf	?_strncmp^0,c
  4427  004BB4  6A15               	clrf	(?_strncmp+1)^0,c
  4428  004BB6  A0D8               	btfss	status,0,c
  4429  004BB8  0615               	decf	(?_strncmp+1)^0,f,c
  4430  004BBA                     l2351:
  4431  004BBA  0012               	return		;funcret
  4432  004BBC                     __end_of_strncmp:
  4433                           	callstack 0
  4434                           
  4435 ;; *************** function _efgtoa *****************
  4436 ;; Defined at:
  4437 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4438 ;; Parameters:    Size  Location     Type
  4439 ;;  fp              2   35[BANK0 ] PTR struct _IO_FILE
  4440 ;;		 -> NULL(0), 
  4441 ;;  f               4   37[BANK0 ] PTR struct _IO_FILE
  4442 ;;  c               1   41[BANK0 ] unsigned char 
  4443 ;; Auto vars:     Size  Location     Type
  4444 ;;  u               4   99[BANK0 ] unsigned char 
  4445 ;;  g               4   91[BANK0 ] unsigned char 
  4446 ;;  l               4   85[BANK0 ] unsigned char 
  4447 ;;  h               4   81[BANK0 ] unsigned char 
  4448 ;;  ou              4   67[BANK0 ] unsigned char 
  4449 ;;  n               2   97[BANK0 ] int 
  4450 ;;  e               2   95[BANK0 ] int 
  4451 ;;  i               2   89[BANK0 ] int 
  4452 ;;  w               2   77[BANK0 ] int 
  4453 ;;  p               2   75[BANK0 ] int 
  4454 ;;  sign            2   73[BANK0 ] int 
  4455 ;;  d               2   71[BANK0 ] int 
  4456 ;;  m               2   65[BANK0 ] int 
  4457 ;;  ne              2   63[BANK0 ] int 
  4458 ;;  pp              2   61[BANK0 ] int 
  4459 ;;  t               2   59[BANK0 ] int 
  4460 ;;  mode            1   80[BANK0 ] unsigned char 
  4461 ;;  nmode           1   79[BANK0 ] unsigned char 
  4462 ;; Return value:  Size  Location     Type
  4463 ;;                  2   35[BANK0 ] int 
  4464 ;; Registers used:
  4465 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4466 ;; Tracked objects:
  4467 ;;		On entry : 0/0
  4468 ;;		On exit  : 0/0
  4469 ;;		Unchanged: 0/0
  4470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4471 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4472 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4473 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4474 ;;      Totals:         0      68       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4475 ;;Total ram usage:       68 bytes
  4476 ;; Hardware stack levels used: 1
  4477 ;; Hardware stack levels required when called: 13
  4478 ;; This function calls:
  4479 ;;		___awdiv
  4480 ;;		___awmod
  4481 ;;		___fladd
  4482 ;;		___fldiv
  4483 ;;		___fleq
  4484 ;;		___flge
  4485 ;;		___flmul
  4486 ;;		___flneg
  4487 ;;		___flsub
  4488 ;;		___fltol
  4489 ;;		___fpclassifyf
  4490 ;;		_floorf
  4491 ;;		_isupper
  4492 ;;		_pad
  4493 ;;		_strcpy
  4494 ;;		_tolower
  4495 ;; This function is called by:
  4496 ;;		_vfpfcnvrt
  4497 ;; This function uses a non-reentrant model
  4498 ;;
  4499                           
  4500                           	psect	text13
  4501  0010AA                     __ptext13:
  4502                           	callstack 0
  4503  0010AA                     _efgtoa:
  4504                           	callstack 12
  4505  0010AA                     
  4506                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.32\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  4507  0010AA  0E00               	movlw	0
  4508  0010AC  0100               	movlb	0	; () banked
  4509  0010AE  6FAA               	movwf	(efgtoa@sign+1)& (0+255),b
  4510  0010B0  0E00               	movlw	0
  4511  0010B2  6FA9               	movwf	efgtoa@sign& (0+255),b
  4512  0010B4                     
  4513                           ; BSR set to: 0
  4514                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 340:     g = f;
  4515  0010B4  C085  F0BB         	movff	efgtoa@f,efgtoa@g
  4516  0010B8  C086  F0BC         	movff	efgtoa@f+1,efgtoa@g+1
  4517  0010BC  C087  F0BD         	movff	efgtoa@f+2,efgtoa@g+2
  4518  0010C0  C088  F0BE         	movff	efgtoa@f+3,efgtoa@g+3
  4519  0010C4                     
  4520                           ; BSR set to: 0
  4521                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  4522  0010C4  BFBE               	btfsc	(efgtoa@g+3)& (0+255),7,b
  4523  0010C6  EF69  F008         	goto	u9320
  4524  0010CA  EF67  F008         	goto	u9321
  4525  0010CE                     u9321:
  4526  0010CE  EF7F  F008         	goto	l8559
  4527  0010D2                     u9320:
  4528  0010D2                     
  4529                           ; BSR set to: 0
  4530                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  4531  0010D2  0E00               	movlw	0
  4532  0010D4  6FAA               	movwf	(efgtoa@sign+1)& (0+255),b
  4533  0010D6  0E01               	movlw	1
  4534  0010D8  6FA9               	movwf	efgtoa@sign& (0+255),b
  4535  0010DA                     
  4536                           ; BSR set to: 0
  4537                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  4538  0010DA  C0BB  F014         	movff	efgtoa@g,___flneg@f1
  4539  0010DE  C0BC  F015         	movff	efgtoa@g+1,___flneg@f1+1
  4540  0010E2  C0BD  F016         	movff	efgtoa@g+2,___flneg@f1+2
  4541  0010E6  C0BE  F017         	movff	efgtoa@g+3,___flneg@f1+3
  4542  0010EA  EC59  F02E         	call	___flneg	;wreg free
  4543  0010EE  C014  F0BB         	movff	?___flneg,efgtoa@g
  4544  0010F2  C015  F0BC         	movff	?___flneg+1,efgtoa@g+1
  4545  0010F6  C016  F0BD         	movff	?___flneg+2,efgtoa@g+2
  4546  0010FA  C017  F0BE         	movff	?___flneg+3,efgtoa@g+3
  4547  0010FE                     l8559:
  4548                           
  4549                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  4550  0010FE  0E00               	movlw	0
  4551  001100  0100               	movlb	0	; () banked
  4552  001102  6FC2               	movwf	(efgtoa@n+1)& (0+255),b
  4553  001104  0E00               	movlw	0
  4554  001106  6FC1               	movwf	efgtoa@n& (0+255),b
  4555  001108                     
  4556                           ; BSR set to: 0
  4557                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  4558  001108  C03A  F0AD         	movff	_width,efgtoa@w
  4559  00110C  C03B  F0AE         	movff	_width+1,efgtoa@w+1
  4560  001110                     
  4561                           ; BSR set to: 0
  4562                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  4563  001110  51A9               	movf	efgtoa@sign& (0+255),w,b
  4564  001112  11AA               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4565  001114  A4D8               	btfss	status,2,c
  4566  001116  EF8F  F008         	goto	u9331
  4567  00111A  EF91  F008         	goto	u9330
  4568  00111E                     u9331:
  4569  00111E  EF98  F008         	goto	l8567
  4570  001122                     u9330:
  4571  001122                     
  4572                           ; BSR set to: 0
  4573  001122  A43E               	btfss	_flags^0,2,c
  4574  001124  EF96  F008         	goto	u9341
  4575  001128  EF98  F008         	goto	u9340
  4576  00112C                     u9341:
  4577  00112C  EFB2  F008         	goto	l8579
  4578  001130                     u9340:
  4579  001130                     l8567:
  4580                           
  4581                           ; BSR set to: 0
  4582                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  4583  001130  51A9               	movf	efgtoa@sign& (0+255),w,b
  4584  001132  11AA               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4585  001134  A4D8               	btfss	status,2,c
  4586  001136  EF9F  F008         	goto	u9351
  4587  00113A  EFA1  F008         	goto	u9350
  4588  00113E                     u9351:
  4589  00113E  EFA7  F008         	goto	l8571
  4590  001142                     u9350:
  4591  001142                     
  4592                           ; BSR set to: 0
  4593  001142  0E00               	movlw	0
  4594  001144  6F90               	movwf	(_efgtoa$3562+1)& (0+255),b
  4595  001146  0E2B               	movlw	43
  4596  001148  6F8F               	movwf	_efgtoa$3562& (0+255),b
  4597  00114A  EFAB  F008         	goto	l8573
  4598  00114E                     l8571:
  4599                           
  4600                           ; BSR set to: 0
  4601  00114E  0E00               	movlw	0
  4602  001150  6F90               	movwf	(_efgtoa$3562+1)& (0+255),b
  4603  001152  0E2D               	movlw	45
  4604  001154  6F8F               	movwf	_efgtoa$3562& (0+255),b
  4605  001156                     l8573:
  4606                           
  4607                           ; BSR set to: 0
  4608  001156  C08F  F13E         	movff	_efgtoa$3562,_dbuf
  4609  00115A                     
  4610                           ; BSR set to: 0
  4611                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 351:         ++n;
  4612  00115A  4BC1               	infsnz	efgtoa@n& (0+255),f,b
  4613  00115C  2BC2               	incf	(efgtoa@n+1)& (0+255),f,b
  4614  00115E                     
  4615                           ; BSR set to: 0
  4616                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 352:         --w;
  4617  00115E  07AD               	decf	efgtoa@w& (0+255),f,b
  4618  001160  A0D8               	btfss	status,0,c
  4619  001162  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  4620  001164                     l8579:
  4621                           
  4622                           ; BSR set to: 0
  4623                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 357:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  4624  001164  C0BB  F014         	movff	efgtoa@g,___fpclassifyf@x
  4625  001168  C0BC  F015         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4626  00116C  C0BD  F016         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4627  001170  C0BE  F017         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4628  001174  ECE5  F024         	call	___fpclassifyf	;wreg free
  4629  001178  0414               	decf	?___fpclassifyf^0,w,c
  4630  00117A  1015               	iorwf	(?___fpclassifyf+1)^0,w,c
  4631  00117C  A4D8               	btfss	status,2,c
  4632  00117E  EFC3  F008         	goto	u9361
  4633  001182  EFC5  F008         	goto	u9360
  4634  001186                     u9361:
  4635  001186  EF1C  F009         	goto	l8597
  4636  00118A                     u9360:
  4637  00118A  0EBF               	movlw	191
  4638  00118C  0100               	movlb	0	; () banked
  4639  00118E  6F8A               	movwf	??_efgtoa& (0+255),b
  4640  001190  0EFF               	movlw	255
  4641  001192  6F8B               	movwf	(??_efgtoa+1)& (0+255),b
  4642  001194  5189               	movf	efgtoa@c& (0+255),w,b
  4643  001196  6F8C               	movwf	(??_efgtoa+2)& (0+255),b
  4644  001198  6B8D               	clrf	(??_efgtoa+3)& (0+255),b
  4645  00119A  518A               	movf	??_efgtoa& (0+255),w,b
  4646  00119C  278C               	addwf	(??_efgtoa+2)& (0+255),f,b
  4647  00119E  518B               	movf	(??_efgtoa+1)& (0+255),w,b
  4648  0011A0  238D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4649  0011A2  518D               	movf	(??_efgtoa+3)& (0+255),w,b
  4650  0011A4  E10A               	bnz	u9370
  4651  0011A6  0E1A               	movlw	26
  4652  0011A8  5D8C               	subwf	(??_efgtoa+2)& (0+255),w,b
  4653  0011AA  A0D8               	btfss	status,0,c
  4654  0011AC  EFDA  F008         	goto	u9371
  4655  0011B0  EFDD  F008         	goto	u9370
  4656  0011B4                     u9371:
  4657  0011B4  0E01               	movlw	1
  4658  0011B6  EFDE  F008         	goto	u9380
  4659  0011BA                     u9370:
  4660  0011BA  0E00               	movlw	0
  4661  0011BC                     u9380:
  4662  0011BC  6F91               	movwf	_efgtoa$3563& (0+255),b
  4663  0011BE  6B92               	clrf	(_efgtoa$3563+1)& (0+255),b
  4664  0011C0                     
  4665                           ; BSR set to: 0
  4666  0011C0  5191               	movf	_efgtoa$3563& (0+255),w,b
  4667  0011C2  1192               	iorwf	(_efgtoa$3563+1)& (0+255),w,b
  4668  0011C4  B4D8               	btfsc	status,2,c
  4669  0011C6  EFE7  F008         	goto	u9391
  4670  0011CA  EFE9  F008         	goto	u9390
  4671  0011CE                     u9391:
  4672  0011CE  EFF7  F008         	goto	l8589
  4673  0011D2                     u9390:
  4674  0011D2                     
  4675                           ; BSR set to: 0
  4676                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  4677  0011D2  0E3E               	movlw	low _dbuf
  4678  0011D4  25C1               	addwf	efgtoa@n& (0+255),w,b
  4679  0011D6  6E14               	movwf	strcpy@dest^0,c
  4680  0011D8  0E01               	movlw	high _dbuf
  4681  0011DA  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4682  0011DC  6E15               	movwf	(strcpy@dest+1)^0,c
  4683  0011DE  0E95               	movlw	low STR_9
  4684  0011E0  6E16               	movwf	strcpy@src^0,c
  4685  0011E2  0E10               	movlw	high STR_9
  4686  0011E4  6E17               	movwf	(strcpy@src+1)^0,c
  4687  0011E6  ECBC  F02B         	call	_strcpy	;wreg free
  4688                           
  4689                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  4690  0011EA  EF03  F009         	goto	l8591
  4691  0011EE                     l8589:
  4692                           
  4693                           ; BSR set to: 0
  4694                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  4695  0011EE  0E3E               	movlw	low _dbuf
  4696  0011F0  25C1               	addwf	efgtoa@n& (0+255),w,b
  4697  0011F2  6E14               	movwf	strcpy@dest^0,c
  4698  0011F4  0E01               	movlw	high _dbuf
  4699  0011F6  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4700  0011F8  6E15               	movwf	(strcpy@dest+1)^0,c
  4701  0011FA  0E9D               	movlw	low STR_10
  4702  0011FC  6E16               	movwf	strcpy@src^0,c
  4703  0011FE  0E10               	movlw	high STR_10
  4704  001200  6E17               	movwf	(strcpy@src+1)^0,c
  4705  001202  ECBC  F02B         	call	_strcpy	;wreg free
  4706  001206                     l8591:
  4707                           
  4708                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  4709  001206  0100               	movlb	0	; () banked
  4710  001208  0EFD               	movlw	253
  4711  00120A  27AD               	addwf	efgtoa@w& (0+255),f,b
  4712  00120C  0EFF               	movlw	255
  4713  00120E  23AE               	addwfc	(efgtoa@w+1)& (0+255),f,b
  4714  001210                     
  4715                           ; BSR set to: 0
  4716                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  4717  001210  C083  F026         	movff	efgtoa@fp,pad@fp
  4718  001214  C084  F027         	movff	efgtoa@fp+1,pad@fp+1
  4719  001218  0E3E               	movlw	low _dbuf
  4720  00121A  6E28               	movwf	pad@buf^0,c
  4721  00121C  0E01               	movlw	high _dbuf
  4722  00121E  6E29               	movwf	(pad@buf+1)^0,c
  4723  001220  C0AD  F02A         	movff	efgtoa@w,pad@p
  4724  001224  C0AE  F02B         	movff	efgtoa@w+1,pad@p+1
  4725  001228  EC5C  F028         	call	_pad	;wreg free
  4726  00122C  C026  F083         	movff	?_pad,?_efgtoa
  4727  001230  C027  F084         	movff	?_pad+1,?_efgtoa+1
  4728  001234  EFAB  F00E         	goto	l2163
  4729  001238                     l8597:
  4730                           
  4731                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 366:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  4732  001238  C0BB  F014         	movff	efgtoa@g,___fpclassifyf@x
  4733  00123C  C0BC  F015         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4734  001240  C0BD  F016         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4735  001244  C0BE  F017         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4736  001248  ECE5  F024         	call	___fpclassifyf	;wreg free
  4737  00124C  5014               	movf	?___fpclassifyf^0,w,c
  4738  00124E  1015               	iorwf	(?___fpclassifyf+1)^0,w,c
  4739  001250  A4D8               	btfss	status,2,c
  4740  001252  EF2D  F009         	goto	u9401
  4741  001256  EF2F  F009         	goto	u9400
  4742  00125A                     u9401:
  4743  00125A  EF86  F009         	goto	l8615
  4744  00125E                     u9400:
  4745  00125E  0EBF               	movlw	191
  4746  001260  0100               	movlb	0	; () banked
  4747  001262  6F8A               	movwf	??_efgtoa& (0+255),b
  4748  001264  0EFF               	movlw	255
  4749  001266  6F8B               	movwf	(??_efgtoa+1)& (0+255),b
  4750  001268  5189               	movf	efgtoa@c& (0+255),w,b
  4751  00126A  6F8C               	movwf	(??_efgtoa+2)& (0+255),b
  4752  00126C  6B8D               	clrf	(??_efgtoa+3)& (0+255),b
  4753  00126E  518A               	movf	??_efgtoa& (0+255),w,b
  4754  001270  278C               	addwf	(??_efgtoa+2)& (0+255),f,b
  4755  001272  518B               	movf	(??_efgtoa+1)& (0+255),w,b
  4756  001274  238D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4757  001276  518D               	movf	(??_efgtoa+3)& (0+255),w,b
  4758  001278  E10A               	bnz	u9410
  4759  00127A  0E1A               	movlw	26
  4760  00127C  5D8C               	subwf	(??_efgtoa+2)& (0+255),w,b
  4761  00127E  A0D8               	btfss	status,0,c
  4762  001280  EF44  F009         	goto	u9411
  4763  001284  EF47  F009         	goto	u9410
  4764  001288                     u9411:
  4765  001288  0E01               	movlw	1
  4766  00128A  EF48  F009         	goto	u9420
  4767  00128E                     u9410:
  4768  00128E  0E00               	movlw	0
  4769  001290                     u9420:
  4770  001290  6F93               	movwf	_efgtoa$3567& (0+255),b
  4771  001292  6B94               	clrf	(_efgtoa$3567+1)& (0+255),b
  4772  001294                     
  4773                           ; BSR set to: 0
  4774  001294  5193               	movf	_efgtoa$3567& (0+255),w,b
  4775  001296  1194               	iorwf	(_efgtoa$3567+1)& (0+255),w,b
  4776  001298  B4D8               	btfsc	status,2,c
  4777  00129A  EF51  F009         	goto	u9431
  4778  00129E  EF53  F009         	goto	u9430
  4779  0012A2                     u9431:
  4780  0012A2  EF61  F009         	goto	l8607
  4781  0012A6                     u9430:
  4782  0012A6                     
  4783                           ; BSR set to: 0
  4784                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  4785  0012A6  0E3E               	movlw	low _dbuf
  4786  0012A8  25C1               	addwf	efgtoa@n& (0+255),w,b
  4787  0012AA  6E14               	movwf	strcpy@dest^0,c
  4788  0012AC  0E01               	movlw	high _dbuf
  4789  0012AE  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4790  0012B0  6E15               	movwf	(strcpy@dest+1)^0,c
  4791  0012B2  0E99               	movlw	low STR_13
  4792  0012B4  6E16               	movwf	strcpy@src^0,c
  4793  0012B6  0E10               	movlw	high STR_13
  4794  0012B8  6E17               	movwf	(strcpy@src+1)^0,c
  4795  0012BA  ECBC  F02B         	call	_strcpy	;wreg free
  4796                           
  4797                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  4798  0012BE  EF6D  F009         	goto	l8609
  4799  0012C2                     l8607:
  4800                           
  4801                           ; BSR set to: 0
  4802                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  4803  0012C2  0E3E               	movlw	low _dbuf
  4804  0012C4  25C1               	addwf	efgtoa@n& (0+255),w,b
  4805  0012C6  6E14               	movwf	strcpy@dest^0,c
  4806  0012C8  0E01               	movlw	high _dbuf
  4807  0012CA  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4808  0012CC  6E15               	movwf	(strcpy@dest+1)^0,c
  4809  0012CE  0EA1               	movlw	low STR_14
  4810  0012D0  6E16               	movwf	strcpy@src^0,c
  4811  0012D2  0E10               	movlw	high STR_14
  4812  0012D4  6E17               	movwf	(strcpy@src+1)^0,c
  4813  0012D6  ECBC  F02B         	call	_strcpy	;wreg free
  4814  0012DA                     l8609:
  4815                           
  4816                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 371:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  4817  0012DA  0100               	movlb	0	; () banked
  4818  0012DC  0EFD               	movlw	253
  4819  0012DE  27AD               	addwf	efgtoa@w& (0+255),f,b
  4820  0012E0  0EFF               	movlw	255
  4821  0012E2  23AE               	addwfc	(efgtoa@w+1)& (0+255),f,b
  4822  0012E4                     
  4823                           ; BSR set to: 0
  4824                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 372:         retu
      +                          rn pad(fp, &dbuf[0], w);
  4825  0012E4  C083  F026         	movff	efgtoa@fp,pad@fp
  4826  0012E8  C084  F027         	movff	efgtoa@fp+1,pad@fp+1
  4827  0012EC  0E3E               	movlw	low _dbuf
  4828  0012EE  6E28               	movwf	pad@buf^0,c
  4829  0012F0  0E01               	movlw	high _dbuf
  4830  0012F2  6E29               	movwf	(pad@buf+1)^0,c
  4831  0012F4  C0AD  F02A         	movff	efgtoa@w,pad@p
  4832  0012F8  C0AE  F02B         	movff	efgtoa@w+1,pad@p+1
  4833  0012FC  EC5C  F028         	call	_pad	;wreg free
  4834  001300  C026  F083         	movff	?_pad,?_efgtoa
  4835  001304  C027  F084         	movff	?_pad+1,?_efgtoa+1
  4836  001308  EFAB  F00E         	goto	l2163
  4837  00130C                     l8615:
  4838                           
  4839                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  4840  00130C  0E00               	movlw	0
  4841  00130E  0100               	movlb	0	; () banked
  4842  001310  6FC3               	movwf	efgtoa@u& (0+255),b
  4843  001312  0E00               	movlw	0
  4844  001314  6FC4               	movwf	(efgtoa@u+1)& (0+255),b
  4845  001316  0E80               	movlw	128
  4846  001318  6FC5               	movwf	(efgtoa@u+2)& (0+255),b
  4847  00131A  0E3F               	movlw	63
  4848  00131C  6FC6               	movwf	(efgtoa@u+3)& (0+255),b
  4849                           
  4850                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  4851  00131E  0E00               	movlw	0
  4852  001320  6FC0               	movwf	(efgtoa@e+1)& (0+255),b
  4853  001322  0E00               	movlw	0
  4854  001324  6FBF               	movwf	efgtoa@e& (0+255),b
  4855  001326                     
  4856                           ; BSR set to: 0
  4857                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  4858  001326  C0BB  F014         	movff	efgtoa@g,___fleq@ff1
  4859  00132A  C0BC  F015         	movff	efgtoa@g+1,___fleq@ff1+1
  4860  00132E  C0BD  F016         	movff	efgtoa@g+2,___fleq@ff1+2
  4861  001332  C0BE  F017         	movff	efgtoa@g+3,___fleq@ff1+3
  4862  001336  0E00               	movlw	0
  4863  001338  6E18               	movwf	___fleq@ff2^0,c
  4864  00133A  0E00               	movlw	0
  4865  00133C  6E19               	movwf	(___fleq@ff2+1)^0,c
  4866  00133E  0E00               	movlw	0
  4867  001340  6E1A               	movwf	(___fleq@ff2+2)^0,c
  4868  001342  0E00               	movlw	0
  4869  001344  6E1B               	movwf	(___fleq@ff2+3)^0,c
  4870  001346  EC75  F029         	call	___fleq	;wreg free
  4871  00134A  B0D8               	btfsc	status,0,c
  4872  00134C  EFAA  F009         	goto	u9441
  4873  001350  EFAC  F009         	goto	u9440
  4874  001354                     u9441:
  4875  001354  EF31  F00A         	goto	l8633
  4876  001358                     u9440:
  4877  001358  EFCB  F009         	goto	l8625
  4878  00135C                     l8621:
  4879                           
  4880                           ; BSR set to: 0
  4881                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  4882  00135C  C0C3  F02A         	movff	efgtoa@u,___flmul@b
  4883  001360  C0C4  F02B         	movff	efgtoa@u+1,___flmul@b+1
  4884  001364  C0C5  F02C         	movff	efgtoa@u+2,___flmul@b+2
  4885  001368  C0C6  F02D         	movff	efgtoa@u+3,___flmul@b+3
  4886  00136C  0E00               	movlw	0
  4887  00136E  6E2E               	movwf	___flmul@a^0,c
  4888  001370  0E00               	movlw	0
  4889  001372  6E2F               	movwf	(___flmul@a+1)^0,c
  4890  001374  0E20               	movlw	32
  4891  001376  6E30               	movwf	(___flmul@a+2)^0,c
  4892  001378  0E41               	movlw	65
  4893  00137A  6E31               	movwf	(___flmul@a+3)^0,c
  4894  00137C  EC01  F014         	call	___flmul	;wreg free
  4895  001380  C02A  F0C3         	movff	?___flmul,efgtoa@u
  4896  001384  C02B  F0C4         	movff	?___flmul+1,efgtoa@u+1
  4897  001388  C02C  F0C5         	movff	?___flmul+2,efgtoa@u+2
  4898  00138C  C02D  F0C6         	movff	?___flmul+3,efgtoa@u+3
  4899  001390                     
  4900                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  4901  001390  0100               	movlb	0	; () banked
  4902  001392  4BBF               	infsnz	efgtoa@e& (0+255),f,b
  4903  001394  2BC0               	incf	(efgtoa@e+1)& (0+255),f,b
  4904  001396                     l8625:
  4905                           
  4906                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  4907  001396  C0BB  F06D         	movff	efgtoa@g,___flge@ff1
  4908  00139A  C0BC  F06E         	movff	efgtoa@g+1,___flge@ff1+1
  4909  00139E  C0BD  F06F         	movff	efgtoa@g+2,___flge@ff1+2
  4910  0013A2  C0BE  F070         	movff	efgtoa@g+3,___flge@ff1+3
  4911  0013A6  0E00               	movlw	0
  4912  0013A8  6E2E               	movwf	___flmul@a^0,c
  4913  0013AA  0E00               	movlw	0
  4914  0013AC  6E2F               	movwf	(___flmul@a+1)^0,c
  4915  0013AE  0E20               	movlw	32
  4916  0013B0  6E30               	movwf	(___flmul@a+2)^0,c
  4917  0013B2  0E41               	movlw	65
  4918  0013B4  6E31               	movwf	(___flmul@a+3)^0,c
  4919  0013B6  C0C3  F02A         	movff	efgtoa@u,___flmul@b
  4920  0013BA  C0C4  F02B         	movff	efgtoa@u+1,___flmul@b+1
  4921  0013BE  C0C5  F02C         	movff	efgtoa@u+2,___flmul@b+2
  4922  0013C2  C0C6  F02D         	movff	efgtoa@u+3,___flmul@b+3
  4923  0013C6  EC01  F014         	call	___flmul	;wreg free
  4924  0013CA  C02A  F071         	movff	?___flmul,___flge@ff2
  4925  0013CE  C02B  F072         	movff	?___flmul+1,___flge@ff2+1
  4926  0013D2  C02C  F073         	movff	?___flmul+2,___flge@ff2+2
  4927  0013D6  C02D  F074         	movff	?___flmul+3,___flge@ff2+3
  4928  0013DA  EC62  F024         	call	___flge	;wreg free
  4929  0013DE  0100               	movlb	0	; () banked
  4930  0013E0  B0D8               	btfsc	status,0,c
  4931  0013E2  EFF5  F009         	goto	u9451
  4932  0013E6  EFF7  F009         	goto	u9450
  4933  0013EA                     u9451:
  4934  0013EA  EFAE  F009         	goto	l8621
  4935  0013EE                     u9450:
  4936  0013EE  EF17  F00A         	goto	l8631
  4937  0013F2                     l8627:
  4938                           
  4939                           ; BSR set to: 0
  4940                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  4941  0013F2  C0C3  F02A         	movff	efgtoa@u,___fldiv@b
  4942  0013F6  C0C4  F02B         	movff	efgtoa@u+1,___fldiv@b+1
  4943  0013FA  C0C5  F02C         	movff	efgtoa@u+2,___fldiv@b+2
  4944  0013FE  C0C6  F02D         	movff	efgtoa@u+3,___fldiv@b+3
  4945  001402  0E00               	movlw	0
  4946  001404  6E2E               	movwf	___fldiv@a^0,c
  4947  001406  0E00               	movlw	0
  4948  001408  6E2F               	movwf	(___fldiv@a+1)^0,c
  4949  00140A  0E20               	movlw	32
  4950  00140C  6E30               	movwf	(___fldiv@a+2)^0,c
  4951  00140E  0E41               	movlw	65
  4952  001410  6E31               	movwf	(___fldiv@a+3)^0,c
  4953  001412  EC29  F016         	call	___fldiv	;wreg free
  4954  001416  C02A  F0C3         	movff	?___fldiv,efgtoa@u
  4955  00141A  C02B  F0C4         	movff	?___fldiv+1,efgtoa@u+1
  4956  00141E  C02C  F0C5         	movff	?___fldiv+2,efgtoa@u+2
  4957  001422  C02D  F0C6         	movff	?___fldiv+3,efgtoa@u+3
  4958  001426                     
  4959                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  4960  001426  0100               	movlb	0	; () banked
  4961  001428  07BF               	decf	efgtoa@e& (0+255),f,b
  4962  00142A  A0D8               	btfss	status,0,c
  4963  00142C  07C0               	decf	(efgtoa@e+1)& (0+255),f,b
  4964  00142E                     l8631:
  4965                           
  4966                           ; BSR set to: 0
  4967                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  4968  00142E  C0BB  F06D         	movff	efgtoa@g,___flge@ff1
  4969  001432  C0BC  F06E         	movff	efgtoa@g+1,___flge@ff1+1
  4970  001436  C0BD  F06F         	movff	efgtoa@g+2,___flge@ff1+2
  4971  00143A  C0BE  F070         	movff	efgtoa@g+3,___flge@ff1+3
  4972  00143E  C0C3  F071         	movff	efgtoa@u,___flge@ff2
  4973  001442  C0C4  F072         	movff	efgtoa@u+1,___flge@ff2+1
  4974  001446  C0C5  F073         	movff	efgtoa@u+2,___flge@ff2+2
  4975  00144A  C0C6  F074         	movff	efgtoa@u+3,___flge@ff2+3
  4976  00144E  EC62  F024         	call	___flge	;wreg free
  4977  001452  0100               	movlb	0	; () banked
  4978  001454  A0D8               	btfss	status,0,c
  4979  001456  EF2F  F00A         	goto	u9461
  4980  00145A  EF31  F00A         	goto	u9460
  4981  00145E                     u9461:
  4982  00145E  EFF9  F009         	goto	l8627
  4983  001462                     u9460:
  4984  001462                     l8633:
  4985                           
  4986                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  4987  001462  C089  F01A         	movff	efgtoa@c,tolower@c
  4988  001466  6A1B               	clrf	(tolower@c+1)^0,c
  4989  001468  ECF1  F02B         	call	_tolower	;wreg free
  4990  00146C  501A               	movf	?_tolower^0,w,c
  4991  00146E  0100               	movlb	0	; () banked
  4992  001470  6FB0               	movwf	efgtoa@mode& (0+255),b
  4993  001472                     
  4994                           ; BSR set to: 0
  4995                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  4996  001472  C0B0  F0AF         	movff	efgtoa@mode,efgtoa@nmode
  4997  001476                     
  4998                           ; BSR set to: 0
  4999                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  5000  001476  0E67               	movlw	103
  5001  001478  19B0               	xorwf	efgtoa@mode& (0+255),w,b
  5002  00147A  A4D8               	btfss	status,2,c
  5003  00147C  EF42  F00A         	goto	u9471
  5004  001480  EF44  F00A         	goto	u9470
  5005  001484                     u9471:
  5006  001484  EF6A  F00A         	goto	l8647
  5007  001488                     u9470:
  5008  001488                     
  5009                           ; BSR set to: 0
  5010                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  5011  001488  503C               	movf	_prec^0,w,c
  5012  00148A  103D               	iorwf	(_prec+1)^0,w,c
  5013  00148C  A4D8               	btfss	status,2,c
  5014  00148E  EF4B  F00A         	goto	u9481
  5015  001492  EF4D  F00A         	goto	u9480
  5016  001496                     u9481:
  5017  001496  EF51  F00A         	goto	l8643
  5018  00149A                     u9480:
  5019  00149A                     
  5020                           ; BSR set to: 0
  5021                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  5022  00149A  0E00               	movlw	0
  5023  00149C  6E3D               	movwf	(_prec+1)^0,c
  5024  00149E  0E01               	movlw	1
  5025  0014A0  6E3C               	movwf	_prec^0,c
  5026  0014A2                     l8643:
  5027                           
  5028                           ; BSR set to: 0
  5029                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  5030  0014A2  BE3D               	btfsc	(_prec+1)^0,7,c
  5031  0014A4  EF5E  F00A         	goto	u9490
  5032  0014A8  503D               	movf	(_prec+1)^0,w,c
  5033  0014AA  E106               	bnz	u9491
  5034  0014AC  043C               	decf	_prec^0,w,c
  5035  0014AE  B0D8               	btfsc	status,0,c
  5036  0014B0  EF5C  F00A         	goto	u9491
  5037  0014B4  EF5E  F00A         	goto	u9490
  5038  0014B8                     u9491:
  5039  0014B8  EF64  F00A         	goto	l2181
  5040  0014BC                     u9490:
  5041  0014BC                     l8645:
  5042                           
  5043                           ; BSR set to: 0
  5044  0014BC  0E00               	movlw	0
  5045  0014BE  6FAC               	movwf	(efgtoa@p+1)& (0+255),b
  5046  0014C0  0E06               	movlw	6
  5047  0014C2  6FAB               	movwf	efgtoa@p& (0+255),b
  5048  0014C4  EF73  F00A         	goto	l8653
  5049  0014C8                     l2181:
  5050                           
  5051                           ; BSR set to: 0
  5052  0014C8  C03C  F0AB         	movff	_prec,efgtoa@p
  5053  0014CC  C03D  F0AC         	movff	_prec+1,efgtoa@p+1
  5054  0014D0  EF73  F00A         	goto	l8653
  5055  0014D4                     l8647:
  5056                           
  5057                           ; BSR set to: 0
  5058                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  5059  0014D4  BE3D               	btfsc	(_prec+1)^0,7,c
  5060  0014D6  EF6F  F00A         	goto	u9501
  5061  0014DA  EF71  F00A         	goto	u9500
  5062  0014DE                     u9501:
  5063  0014DE  EF5E  F00A         	goto	l8645
  5064  0014E2                     u9500:
  5065  0014E2  EF64  F00A         	goto	l2181
  5066  0014E6                     l8653:
  5067                           
  5068                           ; BSR set to: 0
  5069                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  5070  0014E6  0E67               	movlw	103
  5071  0014E8  19B0               	xorwf	efgtoa@mode& (0+255),w,b
  5072  0014EA  A4D8               	btfss	status,2,c
  5073  0014EC  EF7A  F00A         	goto	u9511
  5074  0014F0  EF7C  F00A         	goto	u9510
  5075  0014F4                     u9511:
  5076  0014F4  EFAB  F00A         	goto	l8663
  5077  0014F8                     u9510:
  5078  0014F8                     
  5079                           ; BSR set to: 0
  5080                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  5081  0014F8  AFC0               	btfss	(efgtoa@e+1)& (0+255),7,b
  5082  0014FA  EF8A  F00A         	goto	u9520
  5083  0014FE  0EFC               	movlw	252
  5084  001500  5DBF               	subwf	efgtoa@e& (0+255),w,b
  5085  001502  0EFF               	movlw	255
  5086  001504  59C0               	subwfb	(efgtoa@e+1)& (0+255),w,b
  5087  001506  A0D8               	btfss	status,0,c
  5088  001508  EF88  F00A         	goto	u9521
  5089  00150C  EF8A  F00A         	goto	u9520
  5090  001510                     u9521:
  5091  001510  EFA9  F00A         	goto	l8661
  5092  001514                     u9520:
  5093  001514                     
  5094                           ; BSR set to: 0
  5095  001514  0EFF               	movlw	255
  5096  001516  6F8A               	movwf	??_efgtoa& (0+255),b
  5097  001518  0EFF               	movlw	255
  5098  00151A  6F8B               	movwf	(??_efgtoa+1)& (0+255),b
  5099  00151C  C0AB  F08C         	movff	efgtoa@p,??_efgtoa+2
  5100  001520  C0AC  F08D         	movff	efgtoa@p+1,??_efgtoa+3
  5101  001524  518A               	movf	??_efgtoa& (0+255),w,b
  5102  001526  278C               	addwf	(??_efgtoa+2)& (0+255),f,b
  5103  001528  518B               	movf	(??_efgtoa+1)& (0+255),w,b
  5104  00152A  238D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  5105  00152C  51BF               	movf	efgtoa@e& (0+255),w,b
  5106  00152E  5D8C               	subwf	(??_efgtoa+2)& (0+255),w,b
  5107  001530  518D               	movf	(??_efgtoa+3)& (0+255),w,b
  5108  001532  0A80               	xorlw	128
  5109  001534  6F8E               	movwf	(??_efgtoa+4)& (0+255),b
  5110  001536  51C0               	movf	(efgtoa@e+1)& (0+255),w,b
  5111  001538  0A80               	xorlw	128
  5112  00153A  598E               	subwfb	(??_efgtoa+4)& (0+255),w,b
  5113  00153C  A0D8               	btfss	status,0,c
  5114  00153E  EFA3  F00A         	goto	u9531
  5115  001542  EFA5  F00A         	goto	u9530
  5116  001546                     u9531:
  5117  001546  EFA9  F00A         	goto	l8661
  5118  00154A                     u9530:
  5119  00154A                     
  5120                           ; BSR set to: 0
  5121                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  5122  00154A  0E66               	movlw	102
  5123  00154C  6FAF               	movwf	efgtoa@nmode& (0+255),b
  5124                           
  5125                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  5126  00154E  EFAB  F00A         	goto	l8663
  5127  001552                     l8661:
  5128                           
  5129                           ; BSR set to: 0
  5130                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  5131  001552  0E65               	movlw	101
  5132  001554  6FAF               	movwf	efgtoa@nmode& (0+255),b
  5133  001556                     l8663:
  5134                           
  5135                           ; BSR set to: 0
  5136                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 411:     m = p;
  5137  001556  C0AB  F0A1         	movff	efgtoa@p,efgtoa@m
  5138  00155A  C0AC  F0A2         	movff	efgtoa@p+1,efgtoa@m+1
  5139  00155E                     
  5140                           ; BSR set to: 0
  5141                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  5142  00155E  0E67               	movlw	103
  5143  001560  19B0               	xorwf	efgtoa@mode& (0+255),w,b
  5144  001562  A4D8               	btfss	status,2,c
  5145  001564  EFB6  F00A         	goto	u9541
  5146  001568  EFB8  F00A         	goto	u9540
  5147  00156C                     u9541:
  5148  00156C  EFC8  F00A         	goto	l8671
  5149  001570                     u9540:
  5150  001570                     
  5151                           ; BSR set to: 0
  5152  001570  0E66               	movlw	102
  5153  001572  19AF               	xorwf	efgtoa@nmode& (0+255),w,b
  5154  001574  A4D8               	btfss	status,2,c
  5155  001576  EFBF  F00A         	goto	u9551
  5156  00157A  EFC1  F00A         	goto	u9550
  5157  00157E                     u9551:
  5158  00157E  EFCA  F00A         	goto	l8673
  5159  001582                     u9550:
  5160  001582                     
  5161                           ; BSR set to: 0
  5162  001582  BFC0               	btfsc	(efgtoa@e+1)& (0+255),7,b
  5163  001584  EFC8  F00A         	goto	u9560
  5164  001588  EFC6  F00A         	goto	u9561
  5165  00158C                     u9561:
  5166  00158C  EFCA  F00A         	goto	l8673
  5167  001590                     u9560:
  5168  001590                     l8671:
  5169                           
  5170                           ; BSR set to: 0
  5171                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 413:         ++m;
  5172  001590  4BA1               	infsnz	efgtoa@m& (0+255),f,b
  5173  001592  2BA2               	incf	(efgtoa@m+1)& (0+255),f,b
  5174  001594                     l8673:
  5175                           
  5176                           ; BSR set to: 0
  5177                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  5178  001594  0E66               	movlw	102
  5179  001596  19AF               	xorwf	efgtoa@nmode& (0+255),w,b
  5180  001598  A4D8               	btfss	status,2,c
  5181  00159A  EFD1  F00A         	goto	u9571
  5182  00159E  EFD3  F00A         	goto	u9570
  5183  0015A2                     u9571:
  5184  0015A2  EFF3  F00A         	goto	l8683
  5185  0015A6                     u9570:
  5186  0015A6                     
  5187                           ; BSR set to: 0
  5188                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  5189  0015A6  BFC0               	btfsc	(efgtoa@e+1)& (0+255),7,b
  5190  0015A8  EFDA  F00A         	goto	u9580
  5191  0015AC  EFD8  F00A         	goto	u9581
  5192  0015B0                     u9581:
  5193  0015B0  EFE6  F00A         	goto	l8679
  5194  0015B4                     u9580:
  5195  0015B4                     
  5196                           ; BSR set to: 0
  5197                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  5198  0015B4  0E00               	movlw	0
  5199  0015B6  6FC3               	movwf	efgtoa@u& (0+255),b
  5200  0015B8  0E00               	movlw	0
  5201  0015BA  6FC4               	movwf	(efgtoa@u+1)& (0+255),b
  5202  0015BC  0E80               	movlw	128
  5203  0015BE  6FC5               	movwf	(efgtoa@u+2)& (0+255),b
  5204  0015C0  0E3F               	movlw	63
  5205  0015C2  6FC6               	movwf	(efgtoa@u+3)& (0+255),b
  5206                           
  5207                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  5208  0015C4  0E00               	movlw	0
  5209  0015C6  6FC0               	movwf	(efgtoa@e+1)& (0+255),b
  5210  0015C8  0E00               	movlw	0
  5211  0015CA  6FBF               	movwf	efgtoa@e& (0+255),b
  5212  0015CC                     l8679:
  5213                           
  5214                           ; BSR set to: 0
  5215                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  5216  0015CC  0E67               	movlw	103
  5217  0015CE  19B0               	xorwf	efgtoa@mode& (0+255),w,b
  5218  0015D0  B4D8               	btfsc	status,2,c
  5219  0015D2  EFED  F00A         	goto	u9591
  5220  0015D6  EFEF  F00A         	goto	u9590
  5221  0015DA                     u9591:
  5222  0015DA  EFF3  F00A         	goto	l8683
  5223  0015DE                     u9590:
  5224  0015DE                     
  5225                           ; BSR set to: 0
  5226                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  5227  0015DE  51BF               	movf	efgtoa@e& (0+255),w,b
  5228  0015E0  27A1               	addwf	efgtoa@m& (0+255),f,b
  5229  0015E2  51C0               	movf	(efgtoa@e+1)& (0+255),w,b
  5230  0015E4  23A2               	addwfc	(efgtoa@m+1)& (0+255),f,b
  5231  0015E6                     l8683:
  5232                           
  5233                           ; BSR set to: 0
  5234                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  5235  0015E6  0E00               	movlw	0
  5236  0015E8  6FBA               	movwf	(efgtoa@i+1)& (0+255),b
  5237  0015EA  0E00               	movlw	0
  5238  0015EC  6FB9               	movwf	efgtoa@i& (0+255),b
  5239  0015EE                     
  5240                           ; BSR set to: 0
  5241                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 429:     h = g;
  5242  0015EE  C0BB  F0B1         	movff	efgtoa@g,efgtoa@h
  5243  0015F2  C0BC  F0B2         	movff	efgtoa@g+1,efgtoa@h+1
  5244  0015F6  C0BD  F0B3         	movff	efgtoa@g+2,efgtoa@h+2
  5245  0015FA  C0BE  F0B4         	movff	efgtoa@g+3,efgtoa@h+3
  5246  0015FE                     
  5247                           ; BSR set to: 0
  5248                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  5249  0015FE  C0C3  F0A3         	movff	efgtoa@u,efgtoa@ou
  5250  001602  C0C4  F0A4         	movff	efgtoa@u+1,efgtoa@ou+1
  5251  001606  C0C5  F0A5         	movff	efgtoa@u+2,efgtoa@ou+2
  5252  00160A  C0C6  F0A6         	movff	efgtoa@u+3,efgtoa@ou+3
  5253                           
  5254                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  5255  00160E  EF84  F00B         	goto	l8697
  5256  001612                     l8689:
  5257                           
  5258                           ; BSR set to: 0
  5259                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  5260  001612  C0B1  F02A         	movff	efgtoa@h,___fldiv@b
  5261  001616  C0B2  F02B         	movff	efgtoa@h+1,___fldiv@b+1
  5262  00161A  C0B3  F02C         	movff	efgtoa@h+2,___fldiv@b+2
  5263  00161E  C0B4  F02D         	movff	efgtoa@h+3,___fldiv@b+3
  5264  001622  C0C3  F02E         	movff	efgtoa@u,___fldiv@a
  5265  001626  C0C4  F02F         	movff	efgtoa@u+1,___fldiv@a+1
  5266  00162A  C0C5  F030         	movff	efgtoa@u+2,___fldiv@a+2
  5267  00162E  C0C6  F031         	movff	efgtoa@u+3,___fldiv@a+3
  5268  001632  EC29  F016         	call	___fldiv	;wreg free
  5269  001636  C02A  F036         	movff	?___fldiv,floorf@x
  5270  00163A  C02B  F037         	movff	?___fldiv+1,floorf@x+1
  5271  00163E  C02C  F038         	movff	?___fldiv+2,floorf@x+2
  5272  001642  C02D  F039         	movff	?___fldiv+3,floorf@x+3
  5273  001646  EC6A  F019         	call	_floorf	;wreg free
  5274  00164A  C036  F0B5         	movff	?_floorf,efgtoa@l
  5275  00164E  C037  F0B6         	movff	?_floorf+1,efgtoa@l+1
  5276  001652  C038  F0B7         	movff	?_floorf+2,efgtoa@l+2
  5277  001656  C039  F0B8         	movff	?_floorf+3,efgtoa@l+3
  5278                           
  5279                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  5280  00165A  C0B5  F079         	movff	efgtoa@l,___fltol@f1
  5281  00165E  C0B6  F07A         	movff	efgtoa@l+1,___fltol@f1+1
  5282  001662  C0B7  F07B         	movff	efgtoa@l+2,___fltol@f1+2
  5283  001666  C0B8  F07C         	movff	efgtoa@l+3,___fltol@f1+3
  5284  00166A  ECDE  F023         	call	___fltol	;wreg free
  5285  00166E  C079  F0A7         	movff	?___fltol,efgtoa@d
  5286  001672  C07A  F0A8         	movff	?___fltol+1,efgtoa@d+1
  5287  001676                     
  5288                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  5289  001676  C0B1  F079         	movff	efgtoa@h,___flsub@b
  5290  00167A  C0B2  F07A         	movff	efgtoa@h+1,___flsub@b+1
  5291  00167E  C0B3  F07B         	movff	efgtoa@h+2,___flsub@b+2
  5292  001682  C0B4  F07C         	movff	efgtoa@h+3,___flsub@b+3
  5293  001686  C0C3  F02E         	movff	efgtoa@u,___flmul@a
  5294  00168A  C0C4  F02F         	movff	efgtoa@u+1,___flmul@a+1
  5295  00168E  C0C5  F030         	movff	efgtoa@u+2,___flmul@a+2
  5296  001692  C0C6  F031         	movff	efgtoa@u+3,___flmul@a+3
  5297  001696  C0B5  F02A         	movff	efgtoa@l,___flmul@b
  5298  00169A  C0B6  F02B         	movff	efgtoa@l+1,___flmul@b+1
  5299  00169E  C0B7  F02C         	movff	efgtoa@l+2,___flmul@b+2
  5300  0016A2  C0B8  F02D         	movff	efgtoa@l+3,___flmul@b+3
  5301  0016A6  EC01  F014         	call	___flmul	;wreg free
  5302  0016AA  C02A  F07D         	movff	?___flmul,___flsub@a
  5303  0016AE  C02B  F07E         	movff	?___flmul+1,___flsub@a+1
  5304  0016B2  C02C  F07F         	movff	?___flmul+2,___flsub@a+2
  5305  0016B6  C02D  F080         	movff	?___flmul+3,___flsub@a+3
  5306  0016BA  EC3D  F02D         	call	___flsub	;wreg free
  5307  0016BE  C079  F0B1         	movff	?___flsub,efgtoa@h
  5308  0016C2  C07A  F0B2         	movff	?___flsub+1,efgtoa@h+1
  5309  0016C6  C07B  F0B3         	movff	?___flsub+2,efgtoa@h+2
  5310  0016CA  C07C  F0B4         	movff	?___flsub+3,efgtoa@h+3
  5311  0016CE                     
  5312                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  5313  0016CE  C0C3  F02A         	movff	efgtoa@u,___fldiv@b
  5314  0016D2  C0C4  F02B         	movff	efgtoa@u+1,___fldiv@b+1
  5315  0016D6  C0C5  F02C         	movff	efgtoa@u+2,___fldiv@b+2
  5316  0016DA  C0C6  F02D         	movff	efgtoa@u+3,___fldiv@b+3
  5317  0016DE  0E00               	movlw	0
  5318  0016E0  6E2E               	movwf	___fldiv@a^0,c
  5319  0016E2  0E00               	movlw	0
  5320  0016E4  6E2F               	movwf	(___fldiv@a+1)^0,c
  5321  0016E6  0E20               	movlw	32
  5322  0016E8  6E30               	movwf	(___fldiv@a+2)^0,c
  5323  0016EA  0E41               	movlw	65
  5324  0016EC  6E31               	movwf	(___fldiv@a+3)^0,c
  5325  0016EE  EC29  F016         	call	___fldiv	;wreg free
  5326  0016F2  C02A  F0C3         	movff	?___fldiv,efgtoa@u
  5327  0016F6  C02B  F0C4         	movff	?___fldiv+1,efgtoa@u+1
  5328  0016FA  C02C  F0C5         	movff	?___fldiv+2,efgtoa@u+2
  5329  0016FE  C02D  F0C6         	movff	?___fldiv+3,efgtoa@u+3
  5330  001702                     
  5331                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 436:         ++i;
  5332  001702  0100               	movlb	0	; () banked
  5333  001704  4BB9               	infsnz	efgtoa@i& (0+255),f,b
  5334  001706  2BBA               	incf	(efgtoa@i+1)& (0+255),f,b
  5335  001708                     l8697:
  5336                           
  5337                           ; BSR set to: 0
  5338                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  5339  001708  51A1               	movf	efgtoa@m& (0+255),w,b
  5340  00170A  5DB9               	subwf	efgtoa@i& (0+255),w,b
  5341  00170C  51BA               	movf	(efgtoa@i+1)& (0+255),w,b
  5342  00170E  0A80               	xorlw	128
  5343  001710  6F8A               	movwf	??_efgtoa& (0+255),b
  5344  001712  51A2               	movf	(efgtoa@m+1)& (0+255),w,b
  5345  001714  0A80               	xorlw	128
  5346  001716  598A               	subwfb	??_efgtoa& (0+255),w,b
  5347  001718  A0D8               	btfss	status,0,c
  5348  00171A  EF91  F00B         	goto	u9601
  5349  00171E  EF93  F00B         	goto	u9600
  5350  001722                     u9601:
  5351  001722  EF09  F00B         	goto	l8689
  5352  001726                     u9600:
  5353  001726                     
  5354                           ; BSR set to: 0
  5355                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  5356  001726  C0C3  F02A         	movff	efgtoa@u,___flmul@b
  5357  00172A  C0C4  F02B         	movff	efgtoa@u+1,___flmul@b+1
  5358  00172E  C0C5  F02C         	movff	efgtoa@u+2,___flmul@b+2
  5359  001732  C0C6  F02D         	movff	efgtoa@u+3,___flmul@b+3
  5360  001736  0E00               	movlw	0
  5361  001738  6E2E               	movwf	___flmul@a^0,c
  5362  00173A  0E00               	movlw	0
  5363  00173C  6E2F               	movwf	(___flmul@a+1)^0,c
  5364  00173E  0EA0               	movlw	160
  5365  001740  6E30               	movwf	(___flmul@a+2)^0,c
  5366  001742  0E40               	movlw	64
  5367  001744  6E31               	movwf	(___flmul@a+3)^0,c
  5368  001746  EC01  F014         	call	___flmul	;wreg free
  5369  00174A  C02A  F0B5         	movff	?___flmul,efgtoa@l
  5370  00174E  C02B  F0B6         	movff	?___flmul+1,efgtoa@l+1
  5371  001752  C02C  F0B7         	movff	?___flmul+2,efgtoa@l+2
  5372  001756  C02D  F0B8         	movff	?___flmul+3,efgtoa@l+3
  5373  00175A                     
  5374                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  5375  00175A  C0B1  F06D         	movff	efgtoa@h,___flge@ff1
  5376  00175E  C0B2  F06E         	movff	efgtoa@h+1,___flge@ff1+1
  5377  001762  C0B3  F06F         	movff	efgtoa@h+2,___flge@ff1+2
  5378  001766  C0B4  F070         	movff	efgtoa@h+3,___flge@ff1+3
  5379  00176A  C0B5  F071         	movff	efgtoa@l,___flge@ff2
  5380  00176E  C0B6  F072         	movff	efgtoa@l+1,___flge@ff2+1
  5381  001772  C0B7  F073         	movff	efgtoa@l+2,___flge@ff2+2
  5382  001776  C0B8  F074         	movff	efgtoa@l+3,___flge@ff2+3
  5383  00177A  EC62  F024         	call	___flge	;wreg free
  5384  00177E  0100               	movlb	0	; () banked
  5385  001780  B0D8               	btfsc	status,0,c
  5386  001782  EFC5  F00B         	goto	u9611
  5387  001786  EFC7  F00B         	goto	u9610
  5388  00178A                     u9611:
  5389  00178A  EFD1  F00B         	goto	l8705
  5390  00178E                     u9610:
  5391  00178E                     
  5392                           ; BSR set to: 0
  5393                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  5394  00178E  0E00               	movlw	0
  5395  001790  6FB5               	movwf	efgtoa@l& (0+255),b
  5396  001792  0E00               	movlw	0
  5397  001794  6FB6               	movwf	(efgtoa@l+1)& (0+255),b
  5398  001796  0E00               	movlw	0
  5399  001798  6FB7               	movwf	(efgtoa@l+2)& (0+255),b
  5400  00179A  0E00               	movlw	0
  5401  00179C  6FB8               	movwf	(efgtoa@l+3)& (0+255),b
  5402                           
  5403                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 443:     } else {
  5404  00179E  EFFA  F00B         	goto	l8711
  5405  0017A2                     l8705:
  5406                           
  5407                           ; BSR set to: 0
  5408                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  5409  0017A2  C0B1  F014         	movff	efgtoa@h,___fleq@ff1
  5410  0017A6  C0B2  F015         	movff	efgtoa@h+1,___fleq@ff1+1
  5411  0017AA  C0B3  F016         	movff	efgtoa@h+2,___fleq@ff1+2
  5412  0017AE  C0B4  F017         	movff	efgtoa@h+3,___fleq@ff1+3
  5413  0017B2  C0B5  F018         	movff	efgtoa@l,___fleq@ff2
  5414  0017B6  C0B6  F019         	movff	efgtoa@l+1,___fleq@ff2+1
  5415  0017BA  C0B7  F01A         	movff	efgtoa@l+2,___fleq@ff2+2
  5416  0017BE  C0B8  F01B         	movff	efgtoa@l+3,___fleq@ff2+3
  5417  0017C2  EC75  F029         	call	___fleq	;wreg free
  5418  0017C6  A0D8               	btfss	status,0,c
  5419  0017C8  EFE8  F00B         	goto	u9621
  5420  0017CC  EFEA  F00B         	goto	u9620
  5421  0017D0                     u9621:
  5422  0017D0  EFFA  F00B         	goto	l8711
  5423  0017D4                     u9620:
  5424  0017D4  0100               	movlb	0	; () banked
  5425  0017D6  B1A7               	btfsc	efgtoa@d& (0+255),0,b
  5426  0017D8  EFF0  F00B         	goto	u9631
  5427  0017DC  EFF2  F00B         	goto	u9630
  5428  0017E0                     u9631:
  5429  0017E0  EFFA  F00B         	goto	l8711
  5430  0017E4                     u9630:
  5431  0017E4                     
  5432                           ; BSR set to: 0
  5433                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  5434  0017E4  0E00               	movlw	0
  5435  0017E6  6FB5               	movwf	efgtoa@l& (0+255),b
  5436  0017E8  0E00               	movlw	0
  5437  0017EA  6FB6               	movwf	(efgtoa@l+1)& (0+255),b
  5438  0017EC  0E00               	movlw	0
  5439  0017EE  6FB7               	movwf	(efgtoa@l+2)& (0+255),b
  5440  0017F0  0E00               	movlw	0
  5441  0017F2  6FB8               	movwf	(efgtoa@l+3)& (0+255),b
  5442  0017F4                     l8711:
  5443                           
  5444                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  5445  0017F4  C0BB  F06D         	movff	efgtoa@g,___fladd@b
  5446  0017F8  C0BC  F06E         	movff	efgtoa@g+1,___fladd@b+1
  5447  0017FC  C0BD  F06F         	movff	efgtoa@g+2,___fladd@b+2
  5448  001800  C0BE  F070         	movff	efgtoa@g+3,___fladd@b+3
  5449  001804  C0B5  F071         	movff	efgtoa@l,___fladd@a
  5450  001808  C0B6  F072         	movff	efgtoa@l+1,___fladd@a+1
  5451  00180C  C0B7  F073         	movff	efgtoa@l+2,___fladd@a+2
  5452  001810  C0B8  F074         	movff	efgtoa@l+3,___fladd@a+3
  5453  001814  ECA0  F011         	call	___fladd	;wreg free
  5454  001818  C06D  F0B1         	movff	?___fladd,efgtoa@h
  5455  00181C  C06E  F0B2         	movff	?___fladd+1,efgtoa@h+1
  5456  001820  C06F  F0B3         	movff	?___fladd+2,efgtoa@h+2
  5457  001824  C070  F0B4         	movff	?___fladd+3,efgtoa@h+3
  5458  001828                     
  5459                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  5460  001828  C0B1  F06D         	movff	efgtoa@h,___flge@ff1
  5461  00182C  C0B2  F06E         	movff	efgtoa@h+1,___flge@ff1+1
  5462  001830  C0B3  F06F         	movff	efgtoa@h+2,___flge@ff1+2
  5463  001834  C0B4  F070         	movff	efgtoa@h+3,___flge@ff1+3
  5464  001838  0E00               	movlw	0
  5465  00183A  6E2E               	movwf	___flmul@a^0,c
  5466  00183C  0E00               	movlw	0
  5467  00183E  6E2F               	movwf	(___flmul@a+1)^0,c
  5468  001840  0E20               	movlw	32
  5469  001842  6E30               	movwf	(___flmul@a+2)^0,c
  5470  001844  0E41               	movlw	65
  5471  001846  6E31               	movwf	(___flmul@a+3)^0,c
  5472  001848  C0A3  F02A         	movff	efgtoa@ou,___flmul@b
  5473  00184C  C0A4  F02B         	movff	efgtoa@ou+1,___flmul@b+1
  5474  001850  C0A5  F02C         	movff	efgtoa@ou+2,___flmul@b+2
  5475  001854  C0A6  F02D         	movff	efgtoa@ou+3,___flmul@b+3
  5476  001858  EC01  F014         	call	___flmul	;wreg free
  5477  00185C  C02A  F071         	movff	?___flmul,___flge@ff2
  5478  001860  C02B  F072         	movff	?___flmul+1,___flge@ff2+1
  5479  001864  C02C  F073         	movff	?___flmul+2,___flge@ff2+2
  5480  001868  C02D  F074         	movff	?___flmul+3,___flge@ff2+3
  5481  00186C  EC62  F024         	call	___flge	;wreg free
  5482  001870  0100               	movlb	0	; () banked
  5483  001872  A0D8               	btfss	status,0,c
  5484  001874  EF3E  F00C         	goto	u9641
  5485  001878  EF40  F00C         	goto	u9640
  5486  00187C                     u9641:
  5487  00187C  EF68  F00C         	goto	l8723
  5488  001880                     u9640:
  5489  001880                     
  5490                           ; BSR set to: 0
  5491                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 454:   e++;
  5492  001880  4BBF               	infsnz	efgtoa@e& (0+255),f,b
  5493  001882  2BC0               	incf	(efgtoa@e+1)& (0+255),f,b
  5494  001884                     
  5495                           ; BSR set to: 0
  5496                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  5497  001884  C0A3  F02A         	movff	efgtoa@ou,___flmul@b
  5498  001888  C0A4  F02B         	movff	efgtoa@ou+1,___flmul@b+1
  5499  00188C  C0A5  F02C         	movff	efgtoa@ou+2,___flmul@b+2
  5500  001890  C0A6  F02D         	movff	efgtoa@ou+3,___flmul@b+3
  5501  001894  0E00               	movlw	0
  5502  001896  6E2E               	movwf	___flmul@a^0,c
  5503  001898  0E00               	movlw	0
  5504  00189A  6E2F               	movwf	(___flmul@a+1)^0,c
  5505  00189C  0E20               	movlw	32
  5506  00189E  6E30               	movwf	(___flmul@a+2)^0,c
  5507  0018A0  0E41               	movlw	65
  5508  0018A2  6E31               	movwf	(___flmul@a+3)^0,c
  5509  0018A4  EC01  F014         	call	___flmul	;wreg free
  5510  0018A8  C02A  F0A3         	movff	?___flmul,efgtoa@ou
  5511  0018AC  C02B  F0A4         	movff	?___flmul+1,efgtoa@ou+1
  5512  0018B0  C02C  F0A5         	movff	?___flmul+2,efgtoa@ou+2
  5513  0018B4  C02D  F0A6         	movff	?___flmul+3,efgtoa@ou+3
  5514  0018B8                     
  5515                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  5516  0018B8  0E66               	movlw	102
  5517  0018BA  0100               	movlb	0	; () banked
  5518  0018BC  19AF               	xorwf	efgtoa@nmode& (0+255),w,b
  5519  0018BE  A4D8               	btfss	status,2,c
  5520  0018C0  EF64  F00C         	goto	u9651
  5521  0018C4  EF66  F00C         	goto	u9650
  5522  0018C8                     u9651:
  5523  0018C8  EF68  F00C         	goto	l8723
  5524  0018CC                     u9650:
  5525  0018CC                     
  5526                           ; BSR set to: 0
  5527                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 458:    m++;
  5528  0018CC  4BA1               	infsnz	efgtoa@m& (0+255),f,b
  5529  0018CE  2BA2               	incf	(efgtoa@m+1)& (0+255),f,b
  5530  0018D0                     l8723:
  5531                           
  5532                           ; BSR set to: 0
  5533                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  5534  0018D0  C0A3  F0C3         	movff	efgtoa@ou,efgtoa@u
  5535  0018D4  C0A4  F0C4         	movff	efgtoa@ou+1,efgtoa@u+1
  5536  0018D8  C0A5  F0C5         	movff	efgtoa@ou+2,efgtoa@u+2
  5537  0018DC  C0A6  F0C6         	movff	efgtoa@ou+3,efgtoa@u+3
  5538  0018E0                     
  5539                           ; BSR set to: 0
  5540                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  5541  0018E0  0E65               	movlw	101
  5542  0018E2  19AF               	xorwf	efgtoa@nmode& (0+255),w,b
  5543  0018E4  B4D8               	btfsc	status,2,c
  5544  0018E6  EF77  F00C         	goto	u9661
  5545  0018EA  EF79  F00C         	goto	u9660
  5546  0018EE                     u9661:
  5547  0018EE  EF7F  F00C         	goto	l8729
  5548  0018F2                     u9660:
  5549  0018F2                     
  5550                           ; BSR set to: 0
  5551  0018F2  C0BF  F09F         	movff	efgtoa@e,efgtoa@ne
  5552  0018F6  C0C0  F0A0         	movff	efgtoa@e+1,efgtoa@ne+1
  5553  0018FA  EF83  F00C         	goto	l2209
  5554  0018FE                     l8729:
  5555                           
  5556                           ; BSR set to: 0
  5557  0018FE  0E00               	movlw	0
  5558  001900  6FA0               	movwf	(efgtoa@ne+1)& (0+255),b
  5559  001902  0E00               	movlw	0
  5560  001904  6F9F               	movwf	efgtoa@ne& (0+255),b
  5561  001906                     l2209:
  5562                           
  5563                           ; BSR set to: 0
  5564                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  5565  001906  0E00               	movlw	0
  5566  001908  6F9E               	movwf	(efgtoa@pp+1)& (0+255),b
  5567  00190A  0E00               	movlw	0
  5568  00190C  6F9D               	movwf	efgtoa@pp& (0+255),b
  5569                           
  5570                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  5571  00190E  0E00               	movlw	0
  5572  001910  6F9C               	movwf	(efgtoa@t+1)& (0+255),b
  5573  001912  0E00               	movlw	0
  5574  001914  6F9B               	movwf	efgtoa@t& (0+255),b
  5575                           
  5576                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  5577  001916  0E00               	movlw	0
  5578  001918  6FBA               	movwf	(efgtoa@i+1)& (0+255),b
  5579  00191A  0E00               	movlw	0
  5580  00191C  6FB9               	movwf	efgtoa@i& (0+255),b
  5581                           
  5582                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  5583  00191E  EF7F  F00D         	goto	l8779
  5584  001922                     l8731:
  5585                           
  5586                           ; BSR set to: 0
  5587                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  5588  001922  C0B1  F02A         	movff	efgtoa@h,___fldiv@b
  5589  001926  C0B2  F02B         	movff	efgtoa@h+1,___fldiv@b+1
  5590  00192A  C0B3  F02C         	movff	efgtoa@h+2,___fldiv@b+2
  5591  00192E  C0B4  F02D         	movff	efgtoa@h+3,___fldiv@b+3
  5592  001932  C0C3  F02E         	movff	efgtoa@u,___fldiv@a
  5593  001936  C0C4  F02F         	movff	efgtoa@u+1,___fldiv@a+1
  5594  00193A  C0C5  F030         	movff	efgtoa@u+2,___fldiv@a+2
  5595  00193E  C0C6  F031         	movff	efgtoa@u+3,___fldiv@a+3
  5596  001942  EC29  F016         	call	___fldiv	;wreg free
  5597  001946  C02A  F036         	movff	?___fldiv,floorf@x
  5598  00194A  C02B  F037         	movff	?___fldiv+1,floorf@x+1
  5599  00194E  C02C  F038         	movff	?___fldiv+2,floorf@x+2
  5600  001952  C02D  F039         	movff	?___fldiv+3,floorf@x+3
  5601  001956  EC6A  F019         	call	_floorf	;wreg free
  5602  00195A  C036  F0B5         	movff	?_floorf,efgtoa@l
  5603  00195E  C037  F0B6         	movff	?_floorf+1,efgtoa@l+1
  5604  001962  C038  F0B7         	movff	?_floorf+2,efgtoa@l+2
  5605  001966  C039  F0B8         	movff	?_floorf+3,efgtoa@l+3
  5606                           
  5607                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  5608  00196A  C0B5  F079         	movff	efgtoa@l,___fltol@f1
  5609  00196E  C0B6  F07A         	movff	efgtoa@l+1,___fltol@f1+1
  5610  001972  C0B7  F07B         	movff	efgtoa@l+2,___fltol@f1+2
  5611  001976  C0B8  F07C         	movff	efgtoa@l+3,___fltol@f1+3
  5612  00197A  ECDE  F023         	call	___fltol	;wreg free
  5613  00197E  C079  F0A7         	movff	?___fltol,efgtoa@d
  5614  001982  C07A  F0A8         	movff	?___fltol+1,efgtoa@d+1
  5615  001986                     
  5616                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  5617  001986  B83E               	btfsc	_flags^0,4,c
  5618  001988  EFC8  F00C         	goto	u9671
  5619  00198C  EFCA  F00C         	goto	u9670
  5620  001990                     u9671:
  5621  001990  EFE8  F00C         	goto	l8743
  5622  001994                     u9670:
  5623  001994  0100               	movlb	0	; () banked
  5624  001996  51A7               	movf	efgtoa@d& (0+255),w,b
  5625  001998  11A8               	iorwf	(efgtoa@d+1)& (0+255),w,b
  5626  00199A  A4D8               	btfss	status,2,c
  5627  00199C  EFD2  F00C         	goto	u9681
  5628  0019A0  EFD4  F00C         	goto	u9680
  5629  0019A4                     u9681:
  5630  0019A4  EFE8  F00C         	goto	l8743
  5631  0019A8                     u9680:
  5632  0019A8                     
  5633                           ; BSR set to: 0
  5634  0019A8  0E67               	movlw	103
  5635  0019AA  19B0               	xorwf	efgtoa@mode& (0+255),w,b
  5636  0019AC  A4D8               	btfss	status,2,c
  5637  0019AE  EFDB  F00C         	goto	u9691
  5638  0019B2  EFDD  F00C         	goto	u9690
  5639  0019B6                     u9691:
  5640  0019B6  EFE8  F00C         	goto	l8743
  5641  0019BA                     u9690:
  5642  0019BA                     
  5643                           ; BSR set to: 0
  5644  0019BA  BFA0               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  5645  0019BC  EFE4  F00C         	goto	u9700
  5646  0019C0  EFE2  F00C         	goto	u9701
  5647  0019C4                     u9701:
  5648  0019C4  EFE8  F00C         	goto	l8743
  5649  0019C8                     u9700:
  5650  0019C8                     
  5651                           ; BSR set to: 0
  5652                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  5653  0019C8  4B9B               	infsnz	efgtoa@t& (0+255),f,b
  5654  0019CA  2B9C               	incf	(efgtoa@t+1)& (0+255),f,b
  5655                           
  5656                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  5657  0019CC  EF33  F00D         	goto	l8771
  5658  0019D0                     l8743:
  5659                           
  5660                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  5661  0019D0  0100               	movlb	0	; () banked
  5662  0019D2  519D               	movf	efgtoa@pp& (0+255),w,b
  5663  0019D4  119E               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  5664  0019D6  A4D8               	btfss	status,2,c
  5665  0019D8  EFF0  F00C         	goto	u9711
  5666  0019DC  EFF2  F00C         	goto	u9710
  5667  0019E0                     u9711:
  5668  0019E0  EF1C  F00D         	goto	l8763
  5669  0019E4                     u9710:
  5670  0019E4                     
  5671                           ; BSR set to: 0
  5672  0019E4  BFA0               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  5673  0019E6  EFF9  F00C         	goto	u9720
  5674  0019EA  EFF7  F00C         	goto	u9721
  5675  0019EE                     u9721:
  5676  0019EE  EF1C  F00D         	goto	l8763
  5677  0019F2                     u9720:
  5678  0019F2                     
  5679                           ; BSR set to: 0
  5680                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  5681  0019F2  0E3E               	movlw	low _dbuf
  5682  0019F4  25C1               	addwf	efgtoa@n& (0+255),w,b
  5683  0019F6  6ED9               	movwf	fsr2l,c
  5684  0019F8  0E01               	movlw	high _dbuf
  5685  0019FA  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5686  0019FC  6EDA               	movwf	fsr2h,c
  5687  0019FE  0E2E               	movlw	46
  5688  001A00  6EDF               	movwf	indf2,c
  5689  001A02                     
  5690                           ; BSR set to: 0
  5691  001A02  4BC1               	infsnz	efgtoa@n& (0+255),f,b
  5692  001A04  2BC2               	incf	(efgtoa@n+1)& (0+255),f,b
  5693  001A06                     
  5694                           ; BSR set to: 0
  5695                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  5696  001A06  07AD               	decf	efgtoa@w& (0+255),f,b
  5697  001A08  A0D8               	btfss	status,0,c
  5698  001A0A  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  5699  001A0C                     
  5700                           ; BSR set to: 0
  5701                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  5702  001A0C  0E00               	movlw	0
  5703  001A0E  6F9E               	movwf	(efgtoa@pp+1)& (0+255),b
  5704  001A10  0E01               	movlw	1
  5705  001A12  6F9D               	movwf	efgtoa@pp& (0+255),b
  5706  001A14  EF1C  F00D         	goto	l8763
  5707  001A18                     l8755:
  5708                           
  5709                           ; BSR set to: 0
  5710                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  5711  001A18  0E3E               	movlw	low _dbuf
  5712  001A1A  25C1               	addwf	efgtoa@n& (0+255),w,b
  5713  001A1C  6ED9               	movwf	fsr2l,c
  5714  001A1E  0E01               	movlw	high _dbuf
  5715  001A20  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5716  001A22  6EDA               	movwf	fsr2h,c
  5717  001A24  0E30               	movlw	48
  5718  001A26  6EDF               	movwf	indf2,c
  5719  001A28                     
  5720                           ; BSR set to: 0
  5721  001A28  4BC1               	infsnz	efgtoa@n& (0+255),f,b
  5722  001A2A  2BC2               	incf	(efgtoa@n+1)& (0+255),f,b
  5723  001A2C                     
  5724                           ; BSR set to: 0
  5725                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  5726  001A2C  07AD               	decf	efgtoa@w& (0+255),f,b
  5727  001A2E  A0D8               	btfss	status,0,c
  5728  001A30  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  5729  001A32                     
  5730                           ; BSR set to: 0
  5731                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  5732  001A32  079B               	decf	efgtoa@t& (0+255),f,b
  5733  001A34  A0D8               	btfss	status,0,c
  5734  001A36  079C               	decf	(efgtoa@t+1)& (0+255),f,b
  5735  001A38                     l8763:
  5736                           
  5737                           ; BSR set to: 0
  5738                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  5739  001A38  519B               	movf	efgtoa@t& (0+255),w,b
  5740  001A3A  119C               	iorwf	(efgtoa@t+1)& (0+255),w,b
  5741  001A3C  A4D8               	btfss	status,2,c
  5742  001A3E  EF23  F00D         	goto	u9731
  5743  001A42  EF25  F00D         	goto	u9730
  5744  001A46                     u9731:
  5745  001A46  EF0C  F00D         	goto	l8755
  5746  001A4A                     u9730:
  5747  001A4A                     
  5748                           ; BSR set to: 0
  5749                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  5750  001A4A  0E3E               	movlw	low _dbuf
  5751  001A4C  25C1               	addwf	efgtoa@n& (0+255),w,b
  5752  001A4E  6ED9               	movwf	fsr2l,c
  5753  001A50  0E01               	movlw	high _dbuf
  5754  001A52  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5755  001A54  6EDA               	movwf	fsr2h,c
  5756  001A56  51A7               	movf	efgtoa@d& (0+255),w,b
  5757  001A58  0F30               	addlw	48
  5758  001A5A  6EDF               	movwf	indf2,c
  5759  001A5C                     
  5760                           ; BSR set to: 0
  5761  001A5C  4BC1               	infsnz	efgtoa@n& (0+255),f,b
  5762  001A5E  2BC2               	incf	(efgtoa@n+1)& (0+255),f,b
  5763  001A60                     
  5764                           ; BSR set to: 0
  5765                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  5766  001A60  07AD               	decf	efgtoa@w& (0+255),f,b
  5767  001A62  A0D8               	btfss	status,0,c
  5768  001A64  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  5769  001A66                     l8771:
  5770                           
  5771                           ; BSR set to: 0
  5772                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  5773  001A66  C0B1  F079         	movff	efgtoa@h,___flsub@b
  5774  001A6A  C0B2  F07A         	movff	efgtoa@h+1,___flsub@b+1
  5775  001A6E  C0B3  F07B         	movff	efgtoa@h+2,___flsub@b+2
  5776  001A72  C0B4  F07C         	movff	efgtoa@h+3,___flsub@b+3
  5777  001A76  C0C3  F02E         	movff	efgtoa@u,___flmul@a
  5778  001A7A  C0C4  F02F         	movff	efgtoa@u+1,___flmul@a+1
  5779  001A7E  C0C5  F030         	movff	efgtoa@u+2,___flmul@a+2
  5780  001A82  C0C6  F031         	movff	efgtoa@u+3,___flmul@a+3
  5781  001A86  C0B5  F02A         	movff	efgtoa@l,___flmul@b
  5782  001A8A  C0B6  F02B         	movff	efgtoa@l+1,___flmul@b+1
  5783  001A8E  C0B7  F02C         	movff	efgtoa@l+2,___flmul@b+2
  5784  001A92  C0B8  F02D         	movff	efgtoa@l+3,___flmul@b+3
  5785  001A96  EC01  F014         	call	___flmul	;wreg free
  5786  001A9A  C02A  F07D         	movff	?___flmul,___flsub@a
  5787  001A9E  C02B  F07E         	movff	?___flmul+1,___flsub@a+1
  5788  001AA2  C02C  F07F         	movff	?___flmul+2,___flsub@a+2
  5789  001AA6  C02D  F080         	movff	?___flmul+3,___flsub@a+3
  5790  001AAA  EC3D  F02D         	call	___flsub	;wreg free
  5791  001AAE  C079  F0B1         	movff	?___flsub,efgtoa@h
  5792  001AB2  C07A  F0B2         	movff	?___flsub+1,efgtoa@h+1
  5793  001AB6  C07B  F0B3         	movff	?___flsub+2,efgtoa@h+2
  5794  001ABA  C07C  F0B4         	movff	?___flsub+3,efgtoa@h+3
  5795  001ABE                     
  5796                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  5797  001ABE  C0C3  F02A         	movff	efgtoa@u,___fldiv@b
  5798  001AC2  C0C4  F02B         	movff	efgtoa@u+1,___fldiv@b+1
  5799  001AC6  C0C5  F02C         	movff	efgtoa@u+2,___fldiv@b+2
  5800  001ACA  C0C6  F02D         	movff	efgtoa@u+3,___fldiv@b+3
  5801  001ACE  0E00               	movlw	0
  5802  001AD0  6E2E               	movwf	___fldiv@a^0,c
  5803  001AD2  0E00               	movlw	0
  5804  001AD4  6E2F               	movwf	(___fldiv@a+1)^0,c
  5805  001AD6  0E20               	movlw	32
  5806  001AD8  6E30               	movwf	(___fldiv@a+2)^0,c
  5807  001ADA  0E41               	movlw	65
  5808  001ADC  6E31               	movwf	(___fldiv@a+3)^0,c
  5809  001ADE  EC29  F016         	call	___fldiv	;wreg free
  5810  001AE2  C02A  F0C3         	movff	?___fldiv,efgtoa@u
  5811  001AE6  C02B  F0C4         	movff	?___fldiv+1,efgtoa@u+1
  5812  001AEA  C02C  F0C5         	movff	?___fldiv+2,efgtoa@u+2
  5813  001AEE  C02D  F0C6         	movff	?___fldiv+3,efgtoa@u+3
  5814  001AF2                     
  5815                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  5816  001AF2  0100               	movlb	0	; () banked
  5817  001AF4  079F               	decf	efgtoa@ne& (0+255),f,b
  5818  001AF6  A0D8               	btfss	status,0,c
  5819  001AF8  07A0               	decf	(efgtoa@ne+1)& (0+255),f,b
  5820  001AFA                     
  5821                           ; BSR set to: 0
  5822                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 490:         ++i;
  5823  001AFA  4BB9               	infsnz	efgtoa@i& (0+255),f,b
  5824  001AFC  2BBA               	incf	(efgtoa@i+1)& (0+255),f,b
  5825  001AFE                     l8779:
  5826                           
  5827                           ; BSR set to: 0
  5828                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  5829  001AFE  51A1               	movf	efgtoa@m& (0+255),w,b
  5830  001B00  5DB9               	subwf	efgtoa@i& (0+255),w,b
  5831  001B02  51BA               	movf	(efgtoa@i+1)& (0+255),w,b
  5832  001B04  0A80               	xorlw	128
  5833  001B06  6F8A               	movwf	??_efgtoa& (0+255),b
  5834  001B08  51A2               	movf	(efgtoa@m+1)& (0+255),w,b
  5835  001B0A  0A80               	xorlw	128
  5836  001B0C  598A               	subwfb	??_efgtoa& (0+255),w,b
  5837  001B0E  B0D8               	btfsc	status,0,c
  5838  001B10  EF8C  F00D         	goto	u9741
  5839  001B14  EF8E  F00D         	goto	u9740
  5840  001B18                     u9741:
  5841  001B18  EF9C  F00D         	goto	l8783
  5842  001B1C                     u9740:
  5843  001B1C                     
  5844                           ; BSR set to: 0
  5845  001B1C  BFC2               	btfsc	(efgtoa@n+1)& (0+255),7,b
  5846  001B1E  EF9A  F00D         	goto	u9751
  5847  001B22  51C2               	movf	(efgtoa@n+1)& (0+255),w,b
  5848  001B24  E109               	bnz	u9750
  5849  001B26  0E4B               	movlw	75
  5850  001B28  5DC1               	subwf	efgtoa@n& (0+255),w,b
  5851  001B2A  A0D8               	btfss	status,0,c
  5852  001B2C  EF9A  F00D         	goto	u9751
  5853  001B30  EF9C  F00D         	goto	u9750
  5854  001B34                     u9751:
  5855  001B34  EF91  F00C         	goto	l8731
  5856  001B38                     u9750:
  5857  001B38                     l8783:
  5858                           
  5859                           ; BSR set to: 0
  5860                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  5861  001B38  519D               	movf	efgtoa@pp& (0+255),w,b
  5862  001B3A  119E               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  5863  001B3C  A4D8               	btfss	status,2,c
  5864  001B3E  EFA3  F00D         	goto	u9761
  5865  001B42  EFA5  F00D         	goto	u9760
  5866  001B46                     u9761:
  5867  001B46  EFB6  F00D         	goto	l8791
  5868  001B4A                     u9760:
  5869  001B4A                     
  5870                           ; BSR set to: 0
  5871  001B4A  A83E               	btfss	_flags^0,4,c
  5872  001B4C  EFAA  F00D         	goto	u9771
  5873  001B50  EFAC  F00D         	goto	u9770
  5874  001B54                     u9771:
  5875  001B54  EFB6  F00D         	goto	l8791
  5876  001B58                     u9770:
  5877  001B58                     
  5878                           ; BSR set to: 0
  5879                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  5880  001B58  0E3E               	movlw	low _dbuf
  5881  001B5A  25C1               	addwf	efgtoa@n& (0+255),w,b
  5882  001B5C  6ED9               	movwf	fsr2l,c
  5883  001B5E  0E01               	movlw	high _dbuf
  5884  001B60  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5885  001B62  6EDA               	movwf	fsr2h,c
  5886  001B64  0E2E               	movlw	46
  5887  001B66  6EDF               	movwf	indf2,c
  5888  001B68                     
  5889                           ; BSR set to: 0
  5890  001B68  4BC1               	infsnz	efgtoa@n& (0+255),f,b
  5891  001B6A  2BC2               	incf	(efgtoa@n+1)& (0+255),f,b
  5892  001B6C                     l8791:
  5893                           
  5894                           ; BSR set to: 0
  5895                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  5896  001B6C  0E3E               	movlw	low _dbuf
  5897  001B6E  25C1               	addwf	efgtoa@n& (0+255),w,b
  5898  001B70  6ED9               	movwf	fsr2l,c
  5899  001B72  0E01               	movlw	high _dbuf
  5900  001B74  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5901  001B76  6EDA               	movwf	fsr2h,c
  5902  001B78  0E00               	movlw	0
  5903  001B7A  6EDF               	movwf	indf2,c
  5904  001B7C                     
  5905                           ; BSR set to: 0
  5906                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  5907  001B7C  0E65               	movlw	101
  5908  001B7E  19AF               	xorwf	efgtoa@nmode& (0+255),w,b
  5909  001B80  A4D8               	btfss	status,2,c
  5910  001B82  EFC5  F00D         	goto	u9781
  5911  001B86  EFC7  F00D         	goto	u9780
  5912  001B8A                     u9781:
  5913  001B8A  EF99  F00E         	goto	l8853
  5914  001B8E                     u9780:
  5915  001B8E                     
  5916                           ; BSR set to: 0
  5917                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  5918  001B8E  0E00               	movlw	0
  5919  001B90  6FBA               	movwf	(efgtoa@i+1)& (0+255),b
  5920  001B92  0E4F               	movlw	79
  5921  001B94  6FB9               	movwf	efgtoa@i& (0+255),b
  5922  001B96                     
  5923                           ; BSR set to: 0
  5924                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  5925  001B96  0E3E               	movlw	low _dbuf
  5926  001B98  25B9               	addwf	efgtoa@i& (0+255),w,b
  5927  001B9A  6ED9               	movwf	fsr2l,c
  5928  001B9C  0E01               	movlw	high _dbuf
  5929  001B9E  21BA               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5930  001BA0  6EDA               	movwf	fsr2h,c
  5931  001BA2  0E00               	movlw	0
  5932  001BA4  6EDF               	movwf	indf2,c
  5933  001BA6                     
  5934                           ; BSR set to: 0
  5935                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  5936  001BA6  0E00               	movlw	0
  5937  001BA8  6FAA               	movwf	(efgtoa@sign+1)& (0+255),b
  5938  001BAA  0E00               	movlw	0
  5939  001BAC  6FA9               	movwf	efgtoa@sign& (0+255),b
  5940  001BAE                     
  5941                           ; BSR set to: 0
  5942                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  5943  001BAE  BFC0               	btfsc	(efgtoa@e+1)& (0+255),7,b
  5944  001BB0  EFDE  F00D         	goto	u9790
  5945  001BB4  EFDC  F00D         	goto	u9791
  5946  001BB8                     u9791:
  5947  001BB8  EFE6  F00D         	goto	l8807
  5948  001BBC                     u9790:
  5949  001BBC                     
  5950                           ; BSR set to: 0
  5951                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  5952  001BBC  0E00               	movlw	0
  5953  001BBE  6FAA               	movwf	(efgtoa@sign+1)& (0+255),b
  5954  001BC0  0E01               	movlw	1
  5955  001BC2  6FA9               	movwf	efgtoa@sign& (0+255),b
  5956  001BC4                     
  5957                           ; BSR set to: 0
  5958                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  5959  001BC4  6DBF               	negf	efgtoa@e& (0+255),b
  5960  001BC6  1FC0               	comf	(efgtoa@e+1)& (0+255),f,b
  5961  001BC8  B0D8               	btfsc	status,0,c
  5962  001BCA  2BC0               	incf	(efgtoa@e+1)& (0+255),f,b
  5963  001BCC                     l8807:
  5964                           
  5965                           ; BSR set to: 0
  5966                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  5967  001BCC  0E00               	movlw	0
  5968  001BCE  6FAC               	movwf	(efgtoa@p+1)& (0+255),b
  5969  001BD0  0E02               	movlw	2
  5970  001BD2  6FAB               	movwf	efgtoa@p& (0+255),b
  5971                           
  5972                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  5973  001BD4  EF17  F00E         	goto	l8819
  5974  001BD8                     l8809:
  5975                           
  5976                           ; BSR set to: 0
  5977                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  5978  001BD8  07B9               	decf	efgtoa@i& (0+255),f,b
  5979  001BDA  A0D8               	btfss	status,0,c
  5980  001BDC  07BA               	decf	(efgtoa@i+1)& (0+255),f,b
  5981  001BDE                     
  5982                           ; BSR set to: 0
  5983                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  5984  001BDE  0E3E               	movlw	low _dbuf
  5985  001BE0  25B9               	addwf	efgtoa@i& (0+255),w,b
  5986  001BE2  6ED9               	movwf	fsr2l,c
  5987  001BE4  0E01               	movlw	high _dbuf
  5988  001BE6  21BA               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5989  001BE8  6EDA               	movwf	fsr2h,c
  5990  001BEA  C0BF  F014         	movff	efgtoa@e,___awmod@dividend
  5991  001BEE  C0C0  F015         	movff	efgtoa@e+1,___awmod@dividend+1
  5992  001BF2  0E00               	movlw	0
  5993  001BF4  6E17               	movwf	(___awmod@divisor+1)^0,c
  5994  001BF6  0E0A               	movlw	10
  5995  001BF8  6E16               	movwf	___awmod@divisor^0,c
  5996  001BFA  EC1D  F029         	call	___awmod	;wreg free
  5997  001BFE  5014               	movf	?___awmod^0,w,c
  5998  001C00  0F30               	addlw	48
  5999  001C02  6EDF               	movwf	indf2,c
  6000  001C04                     
  6001                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  6002  001C04  C0BF  F014         	movff	efgtoa@e,___awdiv@dividend
  6003  001C08  C0C0  F015         	movff	efgtoa@e+1,___awdiv@dividend+1
  6004  001C0C  0E00               	movlw	0
  6005  001C0E  6E17               	movwf	(___awdiv@divisor+1)^0,c
  6006  001C10  0E0A               	movlw	10
  6007  001C12  6E16               	movwf	___awdiv@divisor^0,c
  6008  001C14  ECFA  F027         	call	___awdiv	;wreg free
  6009  001C18  C014  F0BF         	movff	?___awdiv,efgtoa@e
  6010  001C1C  C015  F0C0         	movff	?___awdiv+1,efgtoa@e+1
  6011  001C20                     
  6012                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  6013  001C20  0100               	movlb	0	; () banked
  6014  001C22  07AB               	decf	efgtoa@p& (0+255),f,b
  6015  001C24  A0D8               	btfss	status,0,c
  6016  001C26  07AC               	decf	(efgtoa@p+1)& (0+255),f,b
  6017  001C28                     
  6018                           ; BSR set to: 0
  6019                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  6020  001C28  07AD               	decf	efgtoa@w& (0+255),f,b
  6021  001C2A  A0D8               	btfss	status,0,c
  6022  001C2C  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  6023  001C2E                     l8819:
  6024                           
  6025                           ; BSR set to: 0
  6026                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  6027  001C2E  51BF               	movf	efgtoa@e& (0+255),w,b
  6028  001C30  11C0               	iorwf	(efgtoa@e+1)& (0+255),w,b
  6029  001C32  A4D8               	btfss	status,2,c
  6030  001C34  EF1E  F00E         	goto	u9801
  6031  001C38  EF20  F00E         	goto	u9800
  6032  001C3C                     u9801:
  6033  001C3C  EFEC  F00D         	goto	l8809
  6034  001C40                     u9800:
  6035  001C40                     
  6036                           ; BSR set to: 0
  6037  001C40  BFAC               	btfsc	(efgtoa@p+1)& (0+255),7,b
  6038  001C42  EF2D  F00E         	goto	u9810
  6039  001C46  51AC               	movf	(efgtoa@p+1)& (0+255),w,b
  6040  001C48  E106               	bnz	u9811
  6041  001C4A  05AB               	decf	efgtoa@p& (0+255),w,b
  6042  001C4C  B0D8               	btfsc	status,0,c
  6043  001C4E  EF2B  F00E         	goto	u9811
  6044  001C52  EF2D  F00E         	goto	u9810
  6045  001C56                     u9811:
  6046  001C56  EFEC  F00D         	goto	l8809
  6047  001C5A                     u9810:
  6048  001C5A                     
  6049                           ; BSR set to: 0
  6050                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 514:         --i;
  6051  001C5A  07B9               	decf	efgtoa@i& (0+255),f,b
  6052  001C5C  A0D8               	btfss	status,0,c
  6053  001C5E  07BA               	decf	(efgtoa@i+1)& (0+255),f,b
  6054  001C60                     
  6055                           ; BSR set to: 0
  6056                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  6057  001C60  51A9               	movf	efgtoa@sign& (0+255),w,b
  6058  001C62  11AA               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  6059  001C64  A4D8               	btfss	status,2,c
  6060  001C66  EF37  F00E         	goto	u9821
  6061  001C6A  EF39  F00E         	goto	u9820
  6062  001C6E                     u9821:
  6063  001C6E  EF3F  F00E         	goto	l8829
  6064  001C72                     u9820:
  6065  001C72                     
  6066                           ; BSR set to: 0
  6067  001C72  0E00               	movlw	0
  6068  001C74  6F96               	movwf	(_efgtoa$3571+1)& (0+255),b
  6069  001C76  0E2B               	movlw	43
  6070  001C78  6F95               	movwf	_efgtoa$3571& (0+255),b
  6071  001C7A  EF43  F00E         	goto	l8831
  6072  001C7E                     l8829:
  6073                           
  6074                           ; BSR set to: 0
  6075  001C7E  0E00               	movlw	0
  6076  001C80  6F96               	movwf	(_efgtoa$3571+1)& (0+255),b
  6077  001C82  0E2D               	movlw	45
  6078  001C84  6F95               	movwf	_efgtoa$3571& (0+255),b
  6079  001C86                     l8831:
  6080                           
  6081                           ; BSR set to: 0
  6082  001C86  0E3E               	movlw	low _dbuf
  6083  001C88  25B9               	addwf	efgtoa@i& (0+255),w,b
  6084  001C8A  6ED9               	movwf	fsr2l,c
  6085  001C8C  0E01               	movlw	high _dbuf
  6086  001C8E  21BA               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6087  001C90  6EDA               	movwf	fsr2h,c
  6088  001C92  0060  F257  FFDF   	movff	_efgtoa$3571,indf2
  6089  001C98                     
  6090                           ; BSR set to: 0
  6091                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 516:         --w;
  6092  001C98  07AD               	decf	efgtoa@w& (0+255),f,b
  6093  001C9A  A0D8               	btfss	status,0,c
  6094  001C9C  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  6095  001C9E                     
  6096                           ; BSR set to: 0
  6097                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 518:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  6098  001C9E  07B9               	decf	efgtoa@i& (0+255),f,b
  6099  001CA0  A0D8               	btfss	status,0,c
  6100  001CA2  07BA               	decf	(efgtoa@i+1)& (0+255),f,b
  6101  001CA4                     
  6102                           ; BSR set to: 0
  6103  001CA4  0EBF               	movlw	191
  6104  001CA6  6F8A               	movwf	??_efgtoa& (0+255),b
  6105  001CA8  0EFF               	movlw	255
  6106  001CAA  6F8B               	movwf	(??_efgtoa+1)& (0+255),b
  6107  001CAC  5189               	movf	efgtoa@c& (0+255),w,b
  6108  001CAE  6F8C               	movwf	(??_efgtoa+2)& (0+255),b
  6109  001CB0  6B8D               	clrf	(??_efgtoa+3)& (0+255),b
  6110  001CB2  518A               	movf	??_efgtoa& (0+255),w,b
  6111  001CB4  278C               	addwf	(??_efgtoa+2)& (0+255),f,b
  6112  001CB6  518B               	movf	(??_efgtoa+1)& (0+255),w,b
  6113  001CB8  238D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  6114  001CBA  518D               	movf	(??_efgtoa+3)& (0+255),w,b
  6115  001CBC  E10A               	bnz	u9830
  6116  001CBE  0E1A               	movlw	26
  6117  001CC0  5D8C               	subwf	(??_efgtoa+2)& (0+255),w,b
  6118  001CC2  A0D8               	btfss	status,0,c
  6119  001CC4  EF66  F00E         	goto	u9831
  6120  001CC8  EF69  F00E         	goto	u9830
  6121  001CCC                     u9831:
  6122  001CCC  0E01               	movlw	1
  6123  001CCE  EF6A  F00E         	goto	u9840
  6124  001CD2                     u9830:
  6125  001CD2  0E00               	movlw	0
  6126  001CD4                     u9840:
  6127  001CD4  6F99               	movwf	_efgtoa$3573& (0+255),b
  6128  001CD6  6B9A               	clrf	(_efgtoa$3573+1)& (0+255),b
  6129  001CD8                     
  6130                           ; BSR set to: 0
  6131  001CD8  5199               	movf	_efgtoa$3573& (0+255),w,b
  6132  001CDA  119A               	iorwf	(_efgtoa$3573+1)& (0+255),w,b
  6133  001CDC  A4D8               	btfss	status,2,c
  6134  001CDE  EF73  F00E         	goto	u9851
  6135  001CE2  EF75  F00E         	goto	u9850
  6136  001CE6                     u9851:
  6137  001CE6  EF7B  F00E         	goto	l8845
  6138  001CEA                     u9850:
  6139  001CEA                     
  6140                           ; BSR set to: 0
  6141  001CEA  0E00               	movlw	0
  6142  001CEC  6F98               	movwf	(_efgtoa$3572+1)& (0+255),b
  6143  001CEE  0E65               	movlw	101
  6144  001CF0  6F97               	movwf	_efgtoa$3572& (0+255),b
  6145  001CF2  EF7F  F00E         	goto	l8847
  6146  001CF6                     l8845:
  6147                           
  6148                           ; BSR set to: 0
  6149  001CF6  0E00               	movlw	0
  6150  001CF8  6F98               	movwf	(_efgtoa$3572+1)& (0+255),b
  6151  001CFA  0E45               	movlw	69
  6152  001CFC  6F97               	movwf	_efgtoa$3572& (0+255),b
  6153  001CFE                     l8847:
  6154                           
  6155                           ; BSR set to: 0
  6156  001CFE  0E3E               	movlw	low _dbuf
  6157  001D00  25B9               	addwf	efgtoa@i& (0+255),w,b
  6158  001D02  6ED9               	movwf	fsr2l,c
  6159  001D04  0E01               	movlw	high _dbuf
  6160  001D06  21BA               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6161  001D08  6EDA               	movwf	fsr2h,c
  6162  001D0A  0060  F25F  FFDF   	movff	_efgtoa$3572,indf2
  6163  001D10                     
  6164                           ; BSR set to: 0
  6165                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 519:         --w;
  6166  001D10  07AD               	decf	efgtoa@w& (0+255),f,b
  6167  001D12  A0D8               	btfss	status,0,c
  6168  001D14  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  6169  001D16                     
  6170                           ; BSR set to: 0
  6171                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  6172  001D16  0E3E               	movlw	low _dbuf
  6173  001D18  25C1               	addwf	efgtoa@n& (0+255),w,b
  6174  001D1A  6E14               	movwf	strcpy@dest^0,c
  6175  001D1C  0E01               	movlw	high _dbuf
  6176  001D1E  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6177  001D20  6E15               	movwf	(strcpy@dest+1)^0,c
  6178  001D22  0E3E               	movlw	low _dbuf
  6179  001D24  25B9               	addwf	efgtoa@i& (0+255),w,b
  6180  001D26  6E16               	movwf	strcpy@src^0,c
  6181  001D28  0E01               	movlw	high _dbuf
  6182  001D2A  21BA               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6183  001D2C  6E17               	movwf	(strcpy@src+1)^0,c
  6184  001D2E  ECBC  F02B         	call	_strcpy	;wreg free
  6185  001D32                     l8853:
  6186                           
  6187                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 524:     return p
      +                          ad(fp, &dbuf[0], w);
  6188  001D32  C083  F026         	movff	efgtoa@fp,pad@fp
  6189  001D36  C084  F027         	movff	efgtoa@fp+1,pad@fp+1
  6190  001D3A  0E3E               	movlw	low _dbuf
  6191  001D3C  6E28               	movwf	pad@buf^0,c
  6192  001D3E  0E01               	movlw	high _dbuf
  6193  001D40  6E29               	movwf	(pad@buf+1)^0,c
  6194  001D42  C0AD  F02A         	movff	efgtoa@w,pad@p
  6195  001D46  C0AE  F02B         	movff	efgtoa@w+1,pad@p+1
  6196  001D4A  EC5C  F028         	call	_pad	;wreg free
  6197  001D4E  C026  F083         	movff	?_pad,?_efgtoa
  6198  001D52  C027  F084         	movff	?_pad+1,?_efgtoa+1
  6199  001D56                     l2163:
  6200  001D56  0012               	return		;funcret
  6201  001D58                     __end_of_efgtoa:
  6202                           	callstack 0
  6203                           
  6204 ;; *************** function _tolower *****************
  6205 ;; Defined at:
  6206 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\tolower.c"
  6207 ;; Parameters:    Size  Location     Type
  6208 ;;  c               2   25[COMRAM] int 
  6209 ;; Auto vars:     Size  Location     Type
  6210 ;;		None
  6211 ;; Return value:  Size  Location     Type
  6212 ;;                  2   25[COMRAM] int 
  6213 ;; Registers used:
  6214 ;;		wreg, status,2, status,0
  6215 ;; Tracked objects:
  6216 ;;		On entry : 0/0
  6217 ;;		On exit  : 0/0
  6218 ;;		Unchanged: 0/0
  6219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6220 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6221 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6222 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6223 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6224 ;;Total ram usage:        8 bytes
  6225 ;; Hardware stack levels used: 1
  6226 ;; Hardware stack levels required when called: 9
  6227 ;; This function calls:
  6228 ;;		_isupper
  6229 ;; This function is called by:
  6230 ;;		_efgtoa
  6231 ;;		_vfpfcnvrt
  6232 ;; This function uses a non-reentrant model
  6233 ;;
  6234                           
  6235                           	psect	text14
  6236  0057E2                     __ptext14:
  6237                           	callstack 0
  6238  0057E2                     _tolower:
  6239                           	callstack 16
  6240  0057E2  0EBF               	movlw	191
  6241  0057E4  6E1C               	movwf	??_tolower^0,c
  6242  0057E6  0EFF               	movlw	255
  6243  0057E8  6E1D               	movwf	(??_tolower+1)^0,c
  6244  0057EA  C01A  F01E         	movff	tolower@c,??_tolower+2
  6245  0057EE  C01B  F01F         	movff	tolower@c+1,??_tolower+3
  6246  0057F2  501C               	movf	??_tolower^0,w,c
  6247  0057F4  261E               	addwf	(??_tolower+2)^0,f,c
  6248  0057F6  501D               	movf	(??_tolower+1)^0,w,c
  6249  0057F8  221F               	addwfc	(??_tolower+3)^0,f,c
  6250  0057FA  501F               	movf	(??_tolower+3)^0,w,c
  6251  0057FC  E10A               	bnz	u9040
  6252  0057FE  0E1A               	movlw	26
  6253  005800  5C1E               	subwf	(??_tolower+2)^0,w,c
  6254  005802  A0D8               	btfss	status,0,c
  6255  005804  EF06  F02C         	goto	u9041
  6256  005808  EF09  F02C         	goto	u9040
  6257  00580C                     u9041:
  6258  00580C  0E01               	movlw	1
  6259  00580E  EF0A  F02C         	goto	u9050
  6260  005812                     u9040:
  6261  005812  0E00               	movlw	0
  6262  005814                     u9050:
  6263  005814  6E20               	movwf	_tolower$3692^0,c
  6264  005816  6A21               	clrf	(_tolower$3692+1)^0,c
  6265  005818  5020               	movf	_tolower$3692^0,w,c
  6266  00581A  1021               	iorwf	(_tolower$3692+1)^0,w,c
  6267  00581C  B4D8               	btfsc	status,2,c
  6268  00581E  EF13  F02C         	goto	u9061
  6269  005822  EF15  F02C         	goto	u9060
  6270  005826                     u9061:
  6271  005826  EF1C  F02C         	goto	l2361
  6272  00582A                     u9060:
  6273  00582A  0E20               	movlw	32
  6274  00582C  101A               	iorwf	tolower@c^0,w,c
  6275  00582E  6E1A               	movwf	?_tolower^0,c
  6276  005830  501B               	movf	(tolower@c+1)^0,w,c
  6277  005832  6E1B               	movwf	(?_tolower+1)^0,c
  6278  005834  EF20  F02C         	goto	l2366
  6279  005838                     l2361:
  6280  005838  C01A  F01A         	movff	tolower@c,?_tolower
  6281  00583C  C01B  F01B         	movff	tolower@c+1,?_tolower+1
  6282  005840                     l2366:
  6283  005840  0012               	return		;funcret
  6284  005842                     __end_of_tolower:
  6285                           	callstack 0
  6286                           
  6287 ;; *************** function _isupper *****************
  6288 ;; Defined at:
  6289 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isupper.c"
  6290 ;; Parameters:    Size  Location     Type
  6291 ;;  c               2   19[COMRAM] int 
  6292 ;; Auto vars:     Size  Location     Type
  6293 ;;		None
  6294 ;; Return value:  Size  Location     Type
  6295 ;;                  2   19[COMRAM] int 
  6296 ;; Registers used:
  6297 ;;		wreg, status,2, status,0
  6298 ;; Tracked objects:
  6299 ;;		On entry : 0/0
  6300 ;;		On exit  : 0/0
  6301 ;;		Unchanged: 0/0
  6302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6303 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6305 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6306 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6307 ;;Total ram usage:        6 bytes
  6308 ;; Hardware stack levels used: 1
  6309 ;; Hardware stack levels required when called: 8
  6310 ;; This function calls:
  6311 ;;		Nothing
  6312 ;; This function is called by:
  6313 ;;		_efgtoa
  6314 ;;		_vfpfcnvrt
  6315 ;;		_tolower
  6316 ;; This function uses a non-reentrant model
  6317 ;;
  6318                           
  6319                           	psect	text15
  6320  005C7A                     __ptext15:
  6321                           	callstack 0
  6322  005C7A                     _isupper:
  6323                           	callstack 16
  6324  005C7A  0EBF               	movlw	191
  6325  005C7C  6E16               	movwf	??_isupper^0,c
  6326  005C7E  0EFF               	movlw	255
  6327  005C80  6E17               	movwf	(??_isupper+1)^0,c
  6328  005C82  C014  F018         	movff	isupper@c,??_isupper+2
  6329  005C86  C015  F019         	movff	isupper@c+1,??_isupper+3
  6330  005C8A  5016               	movf	??_isupper^0,w,c
  6331  005C8C  2618               	addwf	(??_isupper+2)^0,f,c
  6332  005C8E  5017               	movf	(??_isupper+1)^0,w,c
  6333  005C90  2219               	addwfc	(??_isupper+3)^0,f,c
  6334  005C92  5019               	movf	(??_isupper+3)^0,w,c
  6335  005C94  E10A               	bnz	u7980
  6336  005C96  0E1A               	movlw	26
  6337  005C98  5C18               	subwf	(??_isupper+2)^0,w,c
  6338  005C9A  A0D8               	btfss	status,0,c
  6339  005C9C  EF52  F02E         	goto	u7981
  6340  005CA0  EF55  F02E         	goto	u7980
  6341  005CA4                     u7981:
  6342  005CA4  0E01               	movlw	1
  6343  005CA6  EF56  F02E         	goto	u7990
  6344  005CAA                     u7980:
  6345  005CAA  0E00               	movlw	0
  6346  005CAC                     u7990:
  6347  005CAC  6E14               	movwf	?_isupper^0,c
  6348  005CAE  6A15               	clrf	(?_isupper+1)^0,c
  6349  005CB0  0012               	return		;funcret
  6350  005CB2                     __end_of_isupper:
  6351                           	callstack 0
  6352                           
  6353 ;; *************** function _strcpy *****************
  6354 ;; Defined at:
  6355 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strcpy.c"
  6356 ;; Parameters:    Size  Location     Type
  6357 ;;  dest            2   19[COMRAM] PTR unsigned char 
  6358 ;;		 -> dbuf(80), 
  6359 ;;  src             2   21[COMRAM] PTR const unsigned char 
  6360 ;;		 -> STR_14(4), STR_13(4), STR_10(4), STR_9(4), 
  6361 ;;		 -> dbuf(80), 
  6362 ;; Auto vars:     Size  Location     Type
  6363 ;;  d               2   27[COMRAM] PTR unsigned char 
  6364 ;;		 -> dbuf(80), 
  6365 ;;  s               2   25[COMRAM] PTR const unsigned char 
  6366 ;;		 -> STR_14(4), STR_13(4), STR_10(4), STR_9(4), 
  6367 ;;		 -> dbuf(80), 
  6368 ;; Return value:  Size  Location     Type
  6369 ;;                  2   19[COMRAM] PTR unsigned char 
  6370 ;; Registers used:
  6371 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6372 ;; Tracked objects:
  6373 ;;		On entry : 0/0
  6374 ;;		On exit  : 0/0
  6375 ;;		Unchanged: 0/0
  6376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6377 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6378 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6379 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6380 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6381 ;;Total ram usage:       10 bytes
  6382 ;; Hardware stack levels used: 1
  6383 ;; Hardware stack levels required when called: 8
  6384 ;; This function calls:
  6385 ;;		Nothing
  6386 ;; This function is called by:
  6387 ;;		_efgtoa
  6388 ;; This function uses a non-reentrant model
  6389 ;;
  6390                           
  6391                           	psect	text16
  6392  005778                     __ptext16:
  6393                           	callstack 0
  6394  005778                     _strcpy:
  6395                           	callstack 16
  6396  005778  C016  F01A         	movff	strcpy@src,strcpy@s
  6397  00577C  C017  F01B         	movff	strcpy@src+1,strcpy@s+1
  6398  005780  C014  F01C         	movff	strcpy@dest,strcpy@d
  6399  005784  C015  F01D         	movff	strcpy@dest+1,strcpy@d+1
  6400  005788                     l8447:
  6401  005788  501A               	movf	strcpy@s^0,w,c
  6402  00578A  6E18               	movwf	??_strcpy^0,c
  6403  00578C  501B               	movf	(strcpy@s+1)^0,w,c
  6404  00578E  6E19               	movwf	(??_strcpy+1)^0,c
  6405  005790  4A1A               	infsnz	strcpy@s^0,f,c
  6406  005792  2A1B               	incf	(strcpy@s+1)^0,f,c
  6407  005794  0060  F063  FFF6   	movff	??_strcpy,tblptrl
  6408  00579A  0060  F067  FFF7   	movff	??_strcpy+1,tblptrh
  6409  0057A0  0E00               	movlw	low (__smallconst shr (0+16))
  6410  0057A2  6EF8               	movwf	tblptru,c
  6411  0057A4  0060  F073  FFD9   	movff	strcpy@d,fsr2l
  6412  0057AA  0060  F077  FFDA   	movff	strcpy@d+1,fsr2h
  6413  0057B0  4A1C               	infsnz	strcpy@d^0,f,c
  6414  0057B2  2A1D               	incf	(strcpy@d+1)^0,f,c
  6415  0057B4  0E0F               	movlw	(high __ramtop+-1)
  6416  0057B6  64F7               	cpfsgt	tblptrh,c
  6417  0057B8  D003               	bra	u9027
  6418  0057BA  0008               	tblrd		*
  6419  0057BC  50F5               	movf	tablat,w,c
  6420  0057BE  D007               	bra	u9020
  6421  0057C0                     u9027:
  6422  0057C0  006F FFDB FFE1     	movff	tblptrl,fsr1l
  6423  0057C6  006F FFDF FFE2     	movff	tblptrh,fsr1h
  6424  0057CC  50E7               	movf	indf1,w,c
  6425  0057CE                     u9020:
  6426  0057CE  6EDF               	movwf	indf2,c
  6427  0057D0  50DF               	movf	indf2,w,c
  6428  0057D2  A4D8               	btfss	status,2,c
  6429  0057D4  EFEE  F02B         	goto	u9031
  6430  0057D8  EFF0  F02B         	goto	u9030
  6431  0057DC                     u9031:
  6432  0057DC  EFC4  F02B         	goto	l8447
  6433  0057E0                     u9030:
  6434  0057E0  0012               	return		;funcret
  6435  0057E2                     __end_of_strcpy:
  6436                           	callstack 0
  6437                           
  6438 ;; *************** function _floorf *****************
  6439 ;; Defined at:
  6440 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\floorf.c"
  6441 ;; Parameters:    Size  Location     Type
  6442 ;;  x               4   53[COMRAM] float 
  6443 ;; Auto vars:     Size  Location     Type
  6444 ;;  u               4   25[BANK0 ] struct .
  6445 ;;  m               4   19[BANK0 ] unsigned long 
  6446 ;;  e               2   23[BANK0 ] int 
  6447 ;; Return value:  Size  Location     Type
  6448 ;;                  4   53[COMRAM] float 
  6449 ;; Registers used:
  6450 ;;		wreg, status,2, status,0
  6451 ;; Tracked objects:
  6452 ;;		On entry : 0/0
  6453 ;;		On exit  : 0/0
  6454 ;;		Unchanged: 0/0
  6455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6456 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6457 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6458 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6459 ;;      Totals:         4      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6460 ;;Total ram usage:       20 bytes
  6461 ;; Hardware stack levels used: 1
  6462 ;; Hardware stack levels required when called: 8
  6463 ;; This function calls:
  6464 ;;		Nothing
  6465 ;; This function is called by:
  6466 ;;		_efgtoa
  6467 ;; This function uses a non-reentrant model
  6468 ;;
  6469                           
  6470                           	psect	text17
  6471  0032D4                     __ptext17:
  6472                           	callstack 0
  6473  0032D4                     _floorf:
  6474                           	callstack 16
  6475  0032D4  C118  F079         	movff	floorf@F527,floorf@u
  6476  0032D8  C119  F07A         	movff	floorf@F527+1,floorf@u+1
  6477  0032DC  C11A  F07B         	movff	floorf@F527+2,floorf@u+2
  6478  0032E0  C11B  F07C         	movff	floorf@F527+3,floorf@u+3
  6479  0032E4  C036  F079         	movff	floorf@x,floorf@u
  6480  0032E8  C037  F07A         	movff	floorf@x+1,floorf@u+1
  6481  0032EC  C038  F07B         	movff	floorf@x+2,floorf@u+2
  6482  0032F0  C039  F07C         	movff	floorf@x+3,floorf@u+3
  6483  0032F4  0E81               	movlw	129
  6484  0032F6  0100               	movlb	0	; () banked
  6485  0032F8  6F6D               	movwf	??_floorf& (0+255),b
  6486  0032FA  0EFF               	movlw	255
  6487  0032FC  6F6E               	movwf	(??_floorf+1)& (0+255),b
  6488  0032FE  C079  F06F         	movff	floorf@u,??_floorf+2
  6489  003302  C07A  F070         	movff	floorf@u+1,??_floorf+3
  6490  003306  C07B  F071         	movff	floorf@u+2,??_floorf+4
  6491  00330A  C07C  F072         	movff	floorf@u+3,??_floorf+5
  6492  00330E  0E18               	movlw	24
  6493  003310  EF8F  F019         	goto	u9070
  6494  003314                     u9075:
  6495  003314  90D8               	bcf	status,0,c
  6496  003316  3372               	rrcf	(??_floorf+5)& (0+255),f,b
  6497  003318  3371               	rrcf	(??_floorf+4)& (0+255),f,b
  6498  00331A  3370               	rrcf	(??_floorf+3)& (0+255),f,b
  6499  00331C  336F               	rrcf	(??_floorf+2)& (0+255),f,b
  6500  00331E                     u9070:
  6501  00331E  2EE8               	decfsz	wreg,f,c
  6502  003320  EF8A  F019         	goto	u9075
  6503  003324  516F               	movf	(??_floorf+2)& (0+255),w,b
  6504  003326  256D               	addwf	??_floorf& (0+255),w,b
  6505  003328  6F77               	movwf	floorf@e& (0+255),b
  6506  00332A  0E00               	movlw	0
  6507  00332C  216E               	addwfc	(??_floorf+1)& (0+255),w,b
  6508  00332E  6F78               	movwf	(floorf@e+1)& (0+255),b
  6509  003330  BF78               	btfsc	(floorf@e+1)& (0+255),7,b
  6510  003332  EFA4  F019         	goto	u9081
  6511  003336  5178               	movf	(floorf@e+1)& (0+255),w,b
  6512  003338  E109               	bnz	u9080
  6513  00333A  0E17               	movlw	23
  6514  00333C  5D77               	subwf	floorf@e& (0+255),w,b
  6515  00333E  A0D8               	btfss	status,0,c
  6516  003340  EFA4  F019         	goto	u9081
  6517  003344  EFA6  F019         	goto	u9080
  6518  003348                     u9081:
  6519  003348  EFB0  F019         	goto	l8465
  6520  00334C                     u9080:
  6521  00334C                     l8463:
  6522                           
  6523                           ; BSR set to: 0
  6524  00334C  C036  F036         	movff	floorf@x,?_floorf
  6525  003350  C037  F037         	movff	floorf@x+1,?_floorf+1
  6526  003354  C038  F038         	movff	floorf@x+2,?_floorf+2
  6527  003358  C039  F039         	movff	floorf@x+3,?_floorf+3
  6528  00335C  EF74  F01A         	goto	l2302
  6529  003360                     l8465:
  6530                           
  6531                           ; BSR set to: 0
  6532  003360  BF78               	btfsc	(floorf@e+1)& (0+255),7,b
  6533  003362  EFB5  F019         	goto	u9091
  6534  003366  EFB7  F019         	goto	u9090
  6535  00336A                     u9091:
  6536  00336A  EF28  F01A         	goto	l8475
  6537  00336E                     u9090:
  6538  00336E                     
  6539                           ; BSR set to: 0
  6540  00336E  C077  F06D         	movff	floorf@e,??_floorf
  6541  003372  0EFF               	movlw	255
  6542  003374  6F6E               	movwf	(??_floorf+1)& (0+255),b
  6543  003376  0EFF               	movlw	255
  6544  003378  6F6F               	movwf	(??_floorf+2)& (0+255),b
  6545  00337A  0E7F               	movlw	127
  6546  00337C  6F70               	movwf	(??_floorf+3)& (0+255),b
  6547  00337E  0E00               	movlw	0
  6548  003380  6F71               	movwf	(??_floorf+4)& (0+255),b
  6549  003382                     u9105:
  6550  003382  676D               	tstfsz	??_floorf& (0+255),b
  6551  003384  EFC6  F019         	goto	u9106
  6552  003388  EFCE  F019         	goto	u9107
  6553  00338C                     u9106:
  6554  00338C  3571               	rlcf	(??_floorf+4)& (0+255),w,b
  6555  00338E  3371               	rrcf	(??_floorf+4)& (0+255),f,b
  6556  003390  3370               	rrcf	(??_floorf+3)& (0+255),f,b
  6557  003392  336F               	rrcf	(??_floorf+2)& (0+255),f,b
  6558  003394  336E               	rrcf	(??_floorf+1)& (0+255),f,b
  6559  003396  2F6D               	decfsz	??_floorf& (0+255),f,b
  6560  003398  EFC1  F019         	goto	u9105
  6561  00339C                     u9107:
  6562  00339C  C06E  F073         	movff	??_floorf+1,floorf@m
  6563  0033A0  C06F  F074         	movff	??_floorf+2,floorf@m+1
  6564  0033A4  C070  F075         	movff	??_floorf+3,floorf@m+2
  6565  0033A8  C071  F076         	movff	??_floorf+4,floorf@m+3
  6566  0033AC  0100               	movlb	0	; () banked
  6567  0033AE  5173               	movf	floorf@m& (0+255),w,b
  6568  0033B0  1579               	andwf	floorf@u& (0+255),w,b
  6569  0033B2  6F6D               	movwf	??_floorf& (0+255),b
  6570  0033B4  5174               	movf	(floorf@m+1)& (0+255),w,b
  6571  0033B6  157A               	andwf	(floorf@u+1)& (0+255),w,b
  6572  0033B8  6F6E               	movwf	(??_floorf+1)& (0+255),b
  6573  0033BA  5175               	movf	(floorf@m+2)& (0+255),w,b
  6574  0033BC  157B               	andwf	(floorf@u+2)& (0+255),w,b
  6575  0033BE  6F6F               	movwf	(??_floorf+2)& (0+255),b
  6576  0033C0  5176               	movf	(floorf@m+3)& (0+255),w,b
  6577  0033C2  157C               	andwf	(floorf@u+3)& (0+255),w,b
  6578  0033C4  6F70               	movwf	(??_floorf+3)& (0+255),b
  6579  0033C6  516D               	movf	??_floorf& (0+255),w,b
  6580  0033C8  116E               	iorwf	(??_floorf+1)& (0+255),w,b
  6581  0033CA  116F               	iorwf	(??_floorf+2)& (0+255),w,b
  6582  0033CC  1170               	iorwf	(??_floorf+3)& (0+255),w,b
  6583  0033CE  A4D8               	btfss	status,2,c
  6584  0033D0  EFEC  F019         	goto	u9111
  6585  0033D4  EFEE  F019         	goto	u9110
  6586  0033D8                     u9111:
  6587  0033D8  EFF0  F019         	goto	l8471
  6588  0033DC                     u9110:
  6589  0033DC  EFA6  F019         	goto	l8463
  6590  0033E0                     l8471:
  6591                           
  6592                           ; BSR set to: 0
  6593  0033E0  C079  F06D         	movff	floorf@u,??_floorf
  6594  0033E4  C07A  F06E         	movff	floorf@u+1,??_floorf+1
  6595  0033E8  C07B  F06F         	movff	floorf@u+2,??_floorf+2
  6596  0033EC  C07C  F070         	movff	floorf@u+3,??_floorf+3
  6597  0033F0  0E20               	movlw	32
  6598  0033F2  EF00  F01A         	goto	u9120
  6599  0033F6                     u9125:
  6600  0033F6  90D8               	bcf	status,0,c
  6601  0033F8  3370               	rrcf	(??_floorf+3)& (0+255),f,b
  6602  0033FA  336F               	rrcf	(??_floorf+2)& (0+255),f,b
  6603  0033FC  336E               	rrcf	(??_floorf+1)& (0+255),f,b
  6604  0033FE  336D               	rrcf	??_floorf& (0+255),f,b
  6605  003400                     u9120:
  6606  003400  2EE8               	decfsz	wreg,f,c
  6607  003402  EFFB  F019         	goto	u9125
  6608  003406  516D               	movf	??_floorf& (0+255),w,b
  6609  003408  116E               	iorwf	(??_floorf+1)& (0+255),w,b
  6610  00340A  116F               	iorwf	(??_floorf+2)& (0+255),w,b
  6611  00340C  1170               	iorwf	(??_floorf+3)& (0+255),w,b
  6612  00340E  B4D8               	btfsc	status,2,c
  6613  003410  EF0C  F01A         	goto	u9131
  6614  003414  EF0E  F01A         	goto	u9130
  6615  003418                     u9131:
  6616  003418  EF16  F01A         	goto	l2305
  6617  00341C                     u9130:
  6618  00341C                     
  6619                           ; BSR set to: 0
  6620  00341C  5173               	movf	floorf@m& (0+255),w,b
  6621  00341E  2779               	addwf	floorf@u& (0+255),f,b
  6622  003420  5174               	movf	(floorf@m+1)& (0+255),w,b
  6623  003422  237A               	addwfc	(floorf@u+1)& (0+255),f,b
  6624  003424  5175               	movf	(floorf@m+2)& (0+255),w,b
  6625  003426  237B               	addwfc	(floorf@u+2)& (0+255),f,b
  6626  003428  5176               	movf	(floorf@m+3)& (0+255),w,b
  6627  00342A  237C               	addwfc	(floorf@u+3)& (0+255),f,b
  6628  00342C                     l2305:
  6629                           
  6630                           ; BSR set to: 0
  6631  00342C  1D73               	comf	floorf@m& (0+255),w,b
  6632  00342E  6F6D               	movwf	??_floorf& (0+255),b
  6633  003430  1D74               	comf	(floorf@m+1)& (0+255),w,b
  6634  003432  6F6E               	movwf	(??_floorf+1)& (0+255),b
  6635  003434  1D75               	comf	(floorf@m+2)& (0+255),w,b
  6636  003436  6F6F               	movwf	(??_floorf+2)& (0+255),b
  6637  003438  1D76               	comf	(floorf@m+3)& (0+255),w,b
  6638  00343A  6F70               	movwf	(??_floorf+3)& (0+255),b
  6639  00343C  516D               	movf	??_floorf& (0+255),w,b
  6640  00343E  1779               	andwf	floorf@u& (0+255),f,b
  6641  003440  516E               	movf	(??_floorf+1)& (0+255),w,b
  6642  003442  177A               	andwf	(floorf@u+1)& (0+255),f,b
  6643  003444  516F               	movf	(??_floorf+2)& (0+255),w,b
  6644  003446  177B               	andwf	(floorf@u+2)& (0+255),f,b
  6645  003448  5170               	movf	(??_floorf+3)& (0+255),w,b
  6646  00344A  177C               	andwf	(floorf@u+3)& (0+255),f,b
  6647  00344C  EF6C  F01A         	goto	l8483
  6648  003450                     l8475:
  6649                           
  6650                           ; BSR set to: 0
  6651  003450  C079  F06D         	movff	floorf@u,??_floorf
  6652  003454  C07A  F06E         	movff	floorf@u+1,??_floorf+1
  6653  003458  C07B  F06F         	movff	floorf@u+2,??_floorf+2
  6654  00345C  C07C  F070         	movff	floorf@u+3,??_floorf+3
  6655  003460  0E20               	movlw	32
  6656  003462  EF38  F01A         	goto	u9140
  6657  003466                     u9145:
  6658  003466  90D8               	bcf	status,0,c
  6659  003468  3370               	rrcf	(??_floorf+3)& (0+255),f,b
  6660  00346A  336F               	rrcf	(??_floorf+2)& (0+255),f,b
  6661  00346C  336E               	rrcf	(??_floorf+1)& (0+255),f,b
  6662  00346E  336D               	rrcf	??_floorf& (0+255),f,b
  6663  003470                     u9140:
  6664  003470  2EE8               	decfsz	wreg,f,c
  6665  003472  EF33  F01A         	goto	u9145
  6666  003476  516D               	movf	??_floorf& (0+255),w,b
  6667  003478  116E               	iorwf	(??_floorf+1)& (0+255),w,b
  6668  00347A  116F               	iorwf	(??_floorf+2)& (0+255),w,b
  6669  00347C  1170               	iorwf	(??_floorf+3)& (0+255),w,b
  6670  00347E  A4D8               	btfss	status,2,c
  6671  003480  EF44  F01A         	goto	u9151
  6672  003484  EF46  F01A         	goto	u9150
  6673  003488                     u9151:
  6674  003488  EF50  F01A         	goto	l8479
  6675  00348C                     u9150:
  6676  00348C                     
  6677                           ; BSR set to: 0
  6678  00348C  0E00               	movlw	0
  6679  00348E  6F79               	movwf	floorf@u& (0+255),b
  6680  003490  0E00               	movlw	0
  6681  003492  6F7A               	movwf	(floorf@u+1)& (0+255),b
  6682  003494  0E00               	movlw	0
  6683  003496  6F7B               	movwf	(floorf@u+2)& (0+255),b
  6684  003498  0E00               	movlw	0
  6685  00349A  6F7C               	movwf	(floorf@u+3)& (0+255),b
  6686  00349C  EF6C  F01A         	goto	l8483
  6687  0034A0                     l8479:
  6688                           
  6689                           ; BSR set to: 0
  6690  0034A0  90D8               	bcf	status,0,c
  6691  0034A2  3579               	rlcf	floorf@u& (0+255),w,b
  6692  0034A4  6F6D               	movwf	??_floorf& (0+255),b
  6693  0034A6  357A               	rlcf	(floorf@u+1)& (0+255),w,b
  6694  0034A8  6F6E               	movwf	(??_floorf+1)& (0+255),b
  6695  0034AA  357B               	rlcf	(floorf@u+2)& (0+255),w,b
  6696  0034AC  6F6F               	movwf	(??_floorf+2)& (0+255),b
  6697  0034AE  357C               	rlcf	(floorf@u+3)& (0+255),w,b
  6698  0034B0  6F70               	movwf	(??_floorf+3)& (0+255),b
  6699  0034B2  516D               	movf	??_floorf& (0+255),w,b
  6700  0034B4  116E               	iorwf	(??_floorf+1)& (0+255),w,b
  6701  0034B6  116F               	iorwf	(??_floorf+2)& (0+255),w,b
  6702  0034B8  1170               	iorwf	(??_floorf+3)& (0+255),w,b
  6703  0034BA  B4D8               	btfsc	status,2,c
  6704  0034BC  EF62  F01A         	goto	u9161
  6705  0034C0  EF64  F01A         	goto	u9160
  6706  0034C4                     u9161:
  6707  0034C4  EF6C  F01A         	goto	l8483
  6708  0034C8                     u9160:
  6709  0034C8                     
  6710                           ; BSR set to: 0
  6711  0034C8  0E00               	movlw	0
  6712  0034CA  6F79               	movwf	floorf@u& (0+255),b
  6713  0034CC  0E00               	movlw	0
  6714  0034CE  6F7A               	movwf	(floorf@u+1)& (0+255),b
  6715  0034D0  0E80               	movlw	128
  6716  0034D2  6F7B               	movwf	(floorf@u+2)& (0+255),b
  6717  0034D4  0EBF               	movlw	191
  6718  0034D6  6F7C               	movwf	(floorf@u+3)& (0+255),b
  6719  0034D8                     l8483:
  6720                           
  6721                           ; BSR set to: 0
  6722  0034D8  C079  F036         	movff	floorf@u,?_floorf
  6723  0034DC  C07A  F037         	movff	floorf@u+1,?_floorf+1
  6724  0034E0  C07B  F038         	movff	floorf@u+2,?_floorf+2
  6725  0034E4  C07C  F039         	movff	floorf@u+3,?_floorf+3
  6726  0034E8                     l2302:
  6727                           
  6728                           ; BSR set to: 0
  6729  0034E8  0012               	return		;funcret
  6730  0034EA                     __end_of_floorf:
  6731                           	callstack 0
  6732                           
  6733 ;; *************** function ___fpclassifyf *****************
  6734 ;; Defined at:
  6735 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__fpclassifyf.c"
  6736 ;; Parameters:    Size  Location     Type
  6737 ;;  x               4   19[COMRAM] float 
  6738 ;; Auto vars:     Size  Location     Type
  6739 ;;  u               4   29[COMRAM] struct .
  6740 ;;  e               2   27[COMRAM] int 
  6741 ;; Return value:  Size  Location     Type
  6742 ;;                  2   19[COMRAM] int 
  6743 ;; Registers used:
  6744 ;;		wreg, status,2, status,0
  6745 ;; Tracked objects:
  6746 ;;		On entry : 0/0
  6747 ;;		On exit  : 0/0
  6748 ;;		Unchanged: 0/0
  6749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6750 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6751 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6752 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6753 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6754 ;;Total ram usage:       14 bytes
  6755 ;; Hardware stack levels used: 1
  6756 ;; Hardware stack levels required when called: 8
  6757 ;; This function calls:
  6758 ;;		Nothing
  6759 ;; This function is called by:
  6760 ;;		_efgtoa
  6761 ;; This function uses a non-reentrant model
  6762 ;;
  6763                           
  6764                           	psect	text18
  6765  0049CA                     __ptext18:
  6766                           	callstack 0
  6767  0049CA                     ___fpclassifyf:
  6768                           	callstack 16
  6769  0049CA  C11C  F01E         	movff	___fpclassifyf@F465,___fpclassifyf@u
  6770  0049CE  C11D  F01F         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  6771  0049D2  C11E  F020         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  6772  0049D6  C11F  F021         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  6773  0049DA  C014  F01E         	movff	___fpclassifyf@x,___fpclassifyf@u
  6774  0049DE  C015  F01F         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  6775  0049E2  C016  F020         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  6776  0049E6  C017  F021         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  6777  0049EA  C01E  F018         	movff	___fpclassifyf@u,??___fpclassifyf
  6778  0049EE  C01F  F019         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6779  0049F2  C020  F01A         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6780  0049F6  C021  F01B         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6781  0049FA  0E18               	movlw	24
  6782  0049FC  EF05  F025         	goto	u8950
  6783  004A00                     u8955:
  6784  004A00  90D8               	bcf	status,0,c
  6785  004A02  321B               	rrcf	(??___fpclassifyf+3)^0,f,c
  6786  004A04  321A               	rrcf	(??___fpclassifyf+2)^0,f,c
  6787  004A06  3219               	rrcf	(??___fpclassifyf+1)^0,f,c
  6788  004A08  3218               	rrcf	??___fpclassifyf^0,f,c
  6789  004A0A                     u8950:
  6790  004A0A  2EE8               	decfsz	wreg,f,c
  6791  004A0C  EF00  F025         	goto	u8955
  6792  004A10  5018               	movf	??___fpclassifyf^0,w,c
  6793  004A12  6E1C               	movwf	___fpclassifyf@e^0,c
  6794  004A14  6A1D               	clrf	(___fpclassifyf@e+1)^0,c
  6795  004A16  501C               	movf	___fpclassifyf@e^0,w,c
  6796  004A18  101D               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6797  004A1A  A4D8               	btfss	status,2,c
  6798  004A1C  EF12  F025         	goto	u8961
  6799  004A20  EF14  F025         	goto	u8960
  6800  004A24                     u8961:
  6801  004A24  EF34  F025         	goto	l8435
  6802  004A28                     u8960:
  6803  004A28  90D8               	bcf	status,0,c
  6804  004A2A  341E               	rlcf	___fpclassifyf@u^0,w,c
  6805  004A2C  6E18               	movwf	??___fpclassifyf^0,c
  6806  004A2E  341F               	rlcf	(___fpclassifyf@u+1)^0,w,c
  6807  004A30  6E19               	movwf	(??___fpclassifyf+1)^0,c
  6808  004A32  3420               	rlcf	(___fpclassifyf@u+2)^0,w,c
  6809  004A34  6E1A               	movwf	(??___fpclassifyf+2)^0,c
  6810  004A36  3421               	rlcf	(___fpclassifyf@u+3)^0,w,c
  6811  004A38  6E1B               	movwf	(??___fpclassifyf+3)^0,c
  6812  004A3A  5018               	movf	??___fpclassifyf^0,w,c
  6813  004A3C  1019               	iorwf	(??___fpclassifyf+1)^0,w,c
  6814  004A3E  101A               	iorwf	(??___fpclassifyf+2)^0,w,c
  6815  004A40  101B               	iorwf	(??___fpclassifyf+3)^0,w,c
  6816  004A42  A4D8               	btfss	status,2,c
  6817  004A44  EF26  F025         	goto	u8971
  6818  004A48  EF28  F025         	goto	u8970
  6819  004A4C                     u8971:
  6820  004A4C  EF2E  F025         	goto	l8431
  6821  004A50                     u8970:
  6822  004A50  0E00               	movlw	0
  6823  004A52  6E15               	movwf	(?___fpclassifyf+1)^0,c
  6824  004A54  0E02               	movlw	2
  6825  004A56  6E14               	movwf	?___fpclassifyf^0,c
  6826  004A58  EF63  F025         	goto	l2288
  6827  004A5C                     l8431:
  6828  004A5C  0E00               	movlw	0
  6829  004A5E  6E15               	movwf	(?___fpclassifyf+1)^0,c
  6830  004A60  0E03               	movlw	3
  6831  004A62  6E14               	movwf	?___fpclassifyf^0,c
  6832  004A64  EF63  F025         	goto	l2288
  6833  004A68                     l8435:
  6834  004A68  281C               	incf	___fpclassifyf@e^0,w,c
  6835  004A6A  101D               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6836  004A6C  A4D8               	btfss	status,2,c
  6837  004A6E  EF3B  F025         	goto	u8981
  6838  004A72  EF3D  F025         	goto	u8980
  6839  004A76                     u8981:
  6840  004A76  EF5F  F025         	goto	l8441
  6841  004A7A                     u8980:
  6842  004A7A  C01E  F018         	movff	___fpclassifyf@u,??___fpclassifyf
  6843  004A7E  C01F  F019         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6844  004A82  C020  F01A         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6845  004A86  C021  F01B         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6846  004A8A  0E09               	movlw	9
  6847  004A8C                     u8995:
  6848  004A8C  90D8               	bcf	status,0,c
  6849  004A8E  3618               	rlcf	??___fpclassifyf^0,f,c
  6850  004A90  3619               	rlcf	(??___fpclassifyf+1)^0,f,c
  6851  004A92  361A               	rlcf	(??___fpclassifyf+2)^0,f,c
  6852  004A94  361B               	rlcf	(??___fpclassifyf+3)^0,f,c
  6853  004A96  2EE8               	decfsz	wreg,f,c
  6854  004A98  EF46  F025         	goto	u8995
  6855  004A9C  5018               	movf	??___fpclassifyf^0,w,c
  6856  004A9E  1019               	iorwf	(??___fpclassifyf+1)^0,w,c
  6857  004AA0  101A               	iorwf	(??___fpclassifyf+2)^0,w,c
  6858  004AA2  101B               	iorwf	(??___fpclassifyf+3)^0,w,c
  6859  004AA4  B4D8               	btfsc	status,2,c
  6860  004AA6  EF57  F025         	goto	u9001
  6861  004AAA  EF5A  F025         	goto	u9000
  6862  004AAE                     u9001:
  6863  004AAE  0E01               	movlw	1
  6864  004AB0  EF5B  F025         	goto	u9010
  6865  004AB4                     u9000:
  6866  004AB4  0E00               	movlw	0
  6867  004AB6                     u9010:
  6868  004AB6  6E14               	movwf	?___fpclassifyf^0,c
  6869  004AB8  6A15               	clrf	(?___fpclassifyf+1)^0,c
  6870  004ABA  EF63  F025         	goto	l2288
  6871  004ABE                     l8441:
  6872  004ABE  0E00               	movlw	0
  6873  004AC0  6E15               	movwf	(?___fpclassifyf+1)^0,c
  6874  004AC2  0E04               	movlw	4
  6875  004AC4  6E14               	movwf	?___fpclassifyf^0,c
  6876  004AC6                     l2288:
  6877  004AC6  0012               	return		;funcret
  6878  004AC8                     __end_of___fpclassifyf:
  6879                           	callstack 0
  6880                           
  6881 ;; *************** function ___flsub *****************
  6882 ;; Defined at:
  6883 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  6884 ;; Parameters:    Size  Location     Type
  6885 ;;  b               4   25[BANK0 ] int 
  6886 ;;  a               4   29[BANK0 ] int 
  6887 ;; Auto vars:     Size  Location     Type
  6888 ;;		None
  6889 ;; Return value:  Size  Location     Type
  6890 ;;                  4   25[BANK0 ] int 
  6891 ;; Registers used:
  6892 ;;		wreg, status,2, status,0, cstack
  6893 ;; Tracked objects:
  6894 ;;		On entry : 0/0
  6895 ;;		On exit  : 0/0
  6896 ;;		Unchanged: 0/0
  6897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6898 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6901 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6902 ;;Total ram usage:        8 bytes
  6903 ;; Hardware stack levels used: 1
  6904 ;; Hardware stack levels required when called: 9
  6905 ;; This function calls:
  6906 ;;		___fladd
  6907 ;; This function is called by:
  6908 ;;		_efgtoa
  6909 ;; This function uses a non-reentrant model
  6910 ;;
  6911                           
  6912                           	psect	text19
  6913  005A7A                     __ptext19:
  6914                           	callstack 0
  6915  005A7A                     ___flsub:
  6916                           	callstack 15
  6917  005A7A  0E00               	movlw	0
  6918  005A7C  0100               	movlb	0	; () banked
  6919  005A7E  1B7D               	xorwf	___flsub@a& (0+255),f,b
  6920  005A80  0E00               	movlw	0
  6921  005A82  1B7E               	xorwf	(___flsub@a+1)& (0+255),f,b
  6922  005A84  0E00               	movlw	0
  6923  005A86  1B7F               	xorwf	(___flsub@a+2)& (0+255),f,b
  6924  005A88  0E80               	movlw	128
  6925  005A8A  1B80               	xorwf	(___flsub@a+3)& (0+255),f,b
  6926  005A8C                     
  6927                           ; BSR set to: 0
  6928  005A8C  C079  F06D         	movff	___flsub@b,___fladd@b
  6929  005A90  C07A  F06E         	movff	___flsub@b+1,___fladd@b+1
  6930  005A94  C07B  F06F         	movff	___flsub@b+2,___fladd@b+2
  6931  005A98  C07C  F070         	movff	___flsub@b+3,___fladd@b+3
  6932  005A9C  C07D  F071         	movff	___flsub@a,___fladd@a
  6933  005AA0  C07E  F072         	movff	___flsub@a+1,___fladd@a+1
  6934  005AA4  C07F  F073         	movff	___flsub@a+2,___fladd@a+2
  6935  005AA8  C080  F074         	movff	___flsub@a+3,___fladd@a+3
  6936  005AAC  ECA0  F011         	call	___fladd	;wreg free
  6937  005AB0  C06D  F079         	movff	?___fladd,?___flsub
  6938  005AB4  C06E  F07A         	movff	?___fladd+1,?___flsub+1
  6939  005AB8  C06F  F07B         	movff	?___fladd+2,?___flsub+2
  6940  005ABC  C070  F07C         	movff	?___fladd+3,?___flsub+3
  6941  005AC0  0012               	return		;funcret
  6942  005AC2                     __end_of___flsub:
  6943                           	callstack 0
  6944                           
  6945 ;; *************** function ___flneg *****************
  6946 ;; Defined at:
  6947 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flneg.c"
  6948 ;; Parameters:    Size  Location     Type
  6949 ;;  f1              4   19[COMRAM] int 
  6950 ;; Auto vars:     Size  Location     Type
  6951 ;;		None
  6952 ;; Return value:  Size  Location     Type
  6953 ;;                  4   19[COMRAM] int 
  6954 ;; Registers used:
  6955 ;;		wreg, status,2, status,0
  6956 ;; Tracked objects:
  6957 ;;		On entry : 0/0
  6958 ;;		On exit  : 0/0
  6959 ;;		Unchanged: 0/0
  6960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6961 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6964 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6965 ;;Total ram usage:        4 bytes
  6966 ;; Hardware stack levels used: 1
  6967 ;; Hardware stack levels required when called: 8
  6968 ;; This function calls:
  6969 ;;		Nothing
  6970 ;; This function is called by:
  6971 ;;		_efgtoa
  6972 ;; This function uses a non-reentrant model
  6973 ;;
  6974                           
  6975                           	psect	text20
  6976  005CB2                     __ptext20:
  6977                           	callstack 0
  6978  005CB2                     ___flneg:
  6979                           	callstack 16
  6980  005CB2  5014               	movf	___flneg@f1^0,w,c
  6981  005CB4  1015               	iorwf	(___flneg@f1+1)^0,w,c
  6982  005CB6  1016               	iorwf	(___flneg@f1+2)^0,w,c
  6983  005CB8  1017               	iorwf	(___flneg@f1+3)^0,w,c
  6984  005CBA  B4D8               	btfsc	status,2,c
  6985  005CBC  EF62  F02E         	goto	u8751
  6986  005CC0  EF64  F02E         	goto	u8750
  6987  005CC4                     u8751:
  6988  005CC4  EF6C  F02E         	goto	l8311
  6989  005CC8                     u8750:
  6990  005CC8  0E00               	movlw	0
  6991  005CCA  1A14               	xorwf	___flneg@f1^0,f,c
  6992  005CCC  0E00               	movlw	0
  6993  005CCE  1A15               	xorwf	(___flneg@f1+1)^0,f,c
  6994  005CD0  0E00               	movlw	0
  6995  005CD2  1A16               	xorwf	(___flneg@f1+2)^0,f,c
  6996  005CD4  0E80               	movlw	128
  6997  005CD6  1A17               	xorwf	(___flneg@f1+3)^0,f,c
  6998  005CD8                     l8311:
  6999  005CD8  C014  F014         	movff	___flneg@f1,?___flneg
  7000  005CDC  C015  F015         	movff	___flneg@f1+1,?___flneg+1
  7001  005CE0  C016  F016         	movff	___flneg@f1+2,?___flneg+2
  7002  005CE4  C017  F017         	movff	___flneg@f1+3,?___flneg+3
  7003  005CE8  0012               	return		;funcret
  7004  005CEA                     __end_of___flneg:
  7005                           	callstack 0
  7006                           
  7007 ;; *************** function ___fleq *****************
  7008 ;; Defined at:
  7009 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fleq.c"
  7010 ;; Parameters:    Size  Location     Type
  7011 ;;  ff1             4   19[COMRAM] int 
  7012 ;;  ff2             4   23[COMRAM] int 
  7013 ;; Auto vars:     Size  Location     Type
  7014 ;;		None
  7015 ;; Return value:  Size  Location     Type
  7016 ;;		None               void
  7017 ;; Registers used:
  7018 ;;		wreg, status,2, status,0
  7019 ;; Tracked objects:
  7020 ;;		On entry : 0/0
  7021 ;;		On exit  : 0/0
  7022 ;;		Unchanged: 0/0
  7023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7024 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7026 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7027 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7028 ;;Total ram usage:       12 bytes
  7029 ;; Hardware stack levels used: 1
  7030 ;; Hardware stack levels required when called: 8
  7031 ;; This function calls:
  7032 ;;		Nothing
  7033 ;; This function is called by:
  7034 ;;		_efgtoa
  7035 ;; This function uses a non-reentrant model
  7036 ;;
  7037                           
  7038                           	psect	text21
  7039  0052EA                     __ptext21:
  7040                           	callstack 0
  7041  0052EA                     ___fleq:
  7042                           	callstack 16
  7043  0052EA  0E00               	movlw	0
  7044  0052EC  1414               	andwf	___fleq@ff1^0,w,c
  7045  0052EE  6E1C               	movwf	??___fleq^0,c
  7046  0052F0  0E00               	movlw	0
  7047  0052F2  1415               	andwf	(___fleq@ff1+1)^0,w,c
  7048  0052F4  6E1D               	movwf	(??___fleq+1)^0,c
  7049  0052F6  0E80               	movlw	128
  7050  0052F8  1416               	andwf	(___fleq@ff1+2)^0,w,c
  7051  0052FA  6E1E               	movwf	(??___fleq+2)^0,c
  7052  0052FC  0E7F               	movlw	127
  7053  0052FE  1417               	andwf	(___fleq@ff1+3)^0,w,c
  7054  005300  6E1F               	movwf	(??___fleq+3)^0,c
  7055  005302  501C               	movf	??___fleq^0,w,c
  7056  005304  101D               	iorwf	(??___fleq+1)^0,w,c
  7057  005306  101E               	iorwf	(??___fleq+2)^0,w,c
  7058  005308  101F               	iorwf	(??___fleq+3)^0,w,c
  7059  00530A  A4D8               	btfss	status,2,c
  7060  00530C  EF8A  F029         	goto	u8671
  7061  005310  EF8C  F029         	goto	u8670
  7062  005314                     u8671:
  7063  005314  EF94  F029         	goto	l8273
  7064  005318                     u8670:
  7065  005318  0E00               	movlw	0
  7066  00531A  6E14               	movwf	___fleq@ff1^0,c
  7067  00531C  0E00               	movlw	0
  7068  00531E  6E15               	movwf	(___fleq@ff1+1)^0,c
  7069  005320  0E00               	movlw	0
  7070  005322  6E16               	movwf	(___fleq@ff1+2)^0,c
  7071  005324  0E00               	movlw	0
  7072  005326  6E17               	movwf	(___fleq@ff1+3)^0,c
  7073  005328                     l8273:
  7074  005328  0E00               	movlw	0
  7075  00532A  1418               	andwf	___fleq@ff2^0,w,c
  7076  00532C  6E1C               	movwf	??___fleq^0,c
  7077  00532E  0E00               	movlw	0
  7078  005330  1419               	andwf	(___fleq@ff2+1)^0,w,c
  7079  005332  6E1D               	movwf	(??___fleq+1)^0,c
  7080  005334  0E80               	movlw	128
  7081  005336  141A               	andwf	(___fleq@ff2+2)^0,w,c
  7082  005338  6E1E               	movwf	(??___fleq+2)^0,c
  7083  00533A  0E7F               	movlw	127
  7084  00533C  141B               	andwf	(___fleq@ff2+3)^0,w,c
  7085  00533E  6E1F               	movwf	(??___fleq+3)^0,c
  7086  005340  501C               	movf	??___fleq^0,w,c
  7087  005342  101D               	iorwf	(??___fleq+1)^0,w,c
  7088  005344  101E               	iorwf	(??___fleq+2)^0,w,c
  7089  005346  101F               	iorwf	(??___fleq+3)^0,w,c
  7090  005348  A4D8               	btfss	status,2,c
  7091  00534A  EFA9  F029         	goto	u8681
  7092  00534E  EFAB  F029         	goto	u8680
  7093  005352                     u8681:
  7094  005352  EFB3  F029         	goto	l8277
  7095  005356                     u8680:
  7096  005356  0E00               	movlw	0
  7097  005358  6E18               	movwf	___fleq@ff2^0,c
  7098  00535A  0E00               	movlw	0
  7099  00535C  6E19               	movwf	(___fleq@ff2+1)^0,c
  7100  00535E  0E00               	movlw	0
  7101  005360  6E1A               	movwf	(___fleq@ff2+2)^0,c
  7102  005362  0E00               	movlw	0
  7103  005364  6E1B               	movwf	(___fleq@ff2+3)^0,c
  7104  005366                     l8277:
  7105  005366  5018               	movf	___fleq@ff2^0,w,c
  7106  005368  1814               	xorwf	___fleq@ff1^0,w,c
  7107  00536A  E10F               	bnz	u8690
  7108  00536C  5019               	movf	(___fleq@ff2+1)^0,w,c
  7109  00536E  1815               	xorwf	(___fleq@ff1+1)^0,w,c
  7110  005370  E10C               	bnz	u8690
  7111  005372  501A               	movf	(___fleq@ff2+2)^0,w,c
  7112  005374  1816               	xorwf	(___fleq@ff1+2)^0,w,c
  7113  005376  E109               	bnz	u8690
  7114  005378  501B               	movf	(___fleq@ff2+3)^0,w,c
  7115  00537A  1817               	xorwf	(___fleq@ff1+3)^0,w,c
  7116  00537C  B4D8               	btfsc	status,2,c
  7117  00537E  EFC3  F029         	goto	u8691
  7118  005382  EFC5  F029         	goto	u8690
  7119  005386                     u8691:
  7120  005386  EFC8  F029         	goto	l8281
  7121  00538A                     u8690:
  7122  00538A  90D8               	bcf	status,0,c
  7123  00538C  EFC9  F029         	goto	l1656
  7124  005390                     l8281:
  7125  005390  80D8               	bsf	status,0,c
  7126  005392                     l1656:
  7127  005392  0012               	return		;funcret
  7128  005394                     __end_of___fleq:
  7129                           	callstack 0
  7130                           
  7131 ;; *************** function ___awmod *****************
  7132 ;; Defined at:
  7133 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  7134 ;; Parameters:    Size  Location     Type
  7135 ;;  dividend        2   19[COMRAM] int 
  7136 ;;  divisor         2   21[COMRAM] int 
  7137 ;; Auto vars:     Size  Location     Type
  7138 ;;  sign            1   24[COMRAM] unsigned char 
  7139 ;;  counter         1   23[COMRAM] unsigned char 
  7140 ;; Return value:  Size  Location     Type
  7141 ;;                  2   19[COMRAM] int 
  7142 ;; Registers used:
  7143 ;;		wreg, status,2, status,0
  7144 ;; Tracked objects:
  7145 ;;		On entry : 0/0
  7146 ;;		On exit  : 0/0
  7147 ;;		Unchanged: 0/0
  7148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7149 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7150 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7152 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7153 ;;Total ram usage:        6 bytes
  7154 ;; Hardware stack levels used: 1
  7155 ;; Hardware stack levels required when called: 8
  7156 ;; This function calls:
  7157 ;;		Nothing
  7158 ;; This function is called by:
  7159 ;;		_efgtoa
  7160 ;; This function uses a non-reentrant model
  7161 ;;
  7162                           
  7163                           	psect	text22
  7164  00523A                     __ptext22:
  7165                           	callstack 0
  7166  00523A                     ___awmod:
  7167                           	callstack 16
  7168  00523A  0E00               	movlw	0
  7169  00523C  6E19               	movwf	___awmod@sign^0,c
  7170  00523E  BE15               	btfsc	(___awmod@dividend+1)^0,7,c
  7171  005240  EF26  F029         	goto	u8610
  7172  005244  EF24  F029         	goto	u8611
  7173  005248                     u8611:
  7174  005248  EF2C  F029         	goto	l8241
  7175  00524C                     u8610:
  7176  00524C  6C14               	negf	___awmod@dividend^0,c
  7177  00524E  1E15               	comf	(___awmod@dividend+1)^0,f,c
  7178  005250  B0D8               	btfsc	status,0,c
  7179  005252  2A15               	incf	(___awmod@dividend+1)^0,f,c
  7180  005254  0E01               	movlw	1
  7181  005256  6E19               	movwf	___awmod@sign^0,c
  7182  005258                     l8241:
  7183  005258  BE17               	btfsc	(___awmod@divisor+1)^0,7,c
  7184  00525A  EF33  F029         	goto	u8620
  7185  00525E  EF31  F029         	goto	u8621
  7186  005262                     u8621:
  7187  005262  EF37  F029         	goto	l8245
  7188  005266                     u8620:
  7189  005266  6C16               	negf	___awmod@divisor^0,c
  7190  005268  1E17               	comf	(___awmod@divisor+1)^0,f,c
  7191  00526A  B0D8               	btfsc	status,0,c
  7192  00526C  2A17               	incf	(___awmod@divisor+1)^0,f,c
  7193  00526E                     l8245:
  7194  00526E  5016               	movf	___awmod@divisor^0,w,c
  7195  005270  1017               	iorwf	(___awmod@divisor+1)^0,w,c
  7196  005272  B4D8               	btfsc	status,2,c
  7197  005274  EF3E  F029         	goto	u8631
  7198  005278  EF40  F029         	goto	u8630
  7199  00527C                     u8631:
  7200  00527C  EF64  F029         	goto	l8261
  7201  005280                     u8630:
  7202  005280  0E01               	movlw	1
  7203  005282  6E18               	movwf	___awmod@counter^0,c
  7204  005284  EF48  F029         	goto	l8251
  7205  005288                     l8249:
  7206  005288  90D8               	bcf	status,0,c
  7207  00528A  3616               	rlcf	___awmod@divisor^0,f,c
  7208  00528C  3617               	rlcf	(___awmod@divisor+1)^0,f,c
  7209  00528E  2A18               	incf	___awmod@counter^0,f,c
  7210  005290                     l8251:
  7211  005290  AE17               	btfss	(___awmod@divisor+1)^0,7,c
  7212  005292  EF4D  F029         	goto	u8641
  7213  005296  EF4F  F029         	goto	u8640
  7214  00529A                     u8641:
  7215  00529A  EF44  F029         	goto	l8249
  7216  00529E                     u8640:
  7217  00529E                     l8253:
  7218  00529E  5016               	movf	___awmod@divisor^0,w,c
  7219  0052A0  5C14               	subwf	___awmod@dividend^0,w,c
  7220  0052A2  5017               	movf	(___awmod@divisor+1)^0,w,c
  7221  0052A4  5815               	subwfb	(___awmod@dividend+1)^0,w,c
  7222  0052A6  A0D8               	btfss	status,0,c
  7223  0052A8  EF58  F029         	goto	u8651
  7224  0052AC  EF5A  F029         	goto	u8650
  7225  0052B0                     u8651:
  7226  0052B0  EF5E  F029         	goto	l8257
  7227  0052B4                     u8650:
  7228  0052B4  5016               	movf	___awmod@divisor^0,w,c
  7229  0052B6  5E14               	subwf	___awmod@dividend^0,f,c
  7230  0052B8  5017               	movf	(___awmod@divisor+1)^0,w,c
  7231  0052BA  5A15               	subwfb	(___awmod@dividend+1)^0,f,c
  7232  0052BC                     l8257:
  7233  0052BC  90D8               	bcf	status,0,c
  7234  0052BE  3217               	rrcf	(___awmod@divisor+1)^0,f,c
  7235  0052C0  3216               	rrcf	___awmod@divisor^0,f,c
  7236  0052C2  2E18               	decfsz	___awmod@counter^0,f,c
  7237  0052C4  EF4F  F029         	goto	l8253
  7238  0052C8                     l8261:
  7239  0052C8  5019               	movf	___awmod@sign^0,w,c
  7240  0052CA  B4D8               	btfsc	status,2,c
  7241  0052CC  EF6A  F029         	goto	u8661
  7242  0052D0  EF6C  F029         	goto	u8660
  7243  0052D4                     u8661:
  7244  0052D4  EF70  F029         	goto	l8265
  7245  0052D8                     u8660:
  7246  0052D8  6C14               	negf	___awmod@dividend^0,c
  7247  0052DA  1E15               	comf	(___awmod@dividend+1)^0,f,c
  7248  0052DC  B0D8               	btfsc	status,0,c
  7249  0052DE  2A15               	incf	(___awmod@dividend+1)^0,f,c
  7250  0052E0                     l8265:
  7251  0052E0  C014  F014         	movff	___awmod@dividend,?___awmod
  7252  0052E4  C015  F015         	movff	___awmod@dividend+1,?___awmod+1
  7253  0052E8  0012               	return		;funcret
  7254  0052EA                     __end_of___awmod:
  7255                           	callstack 0
  7256                           
  7257 ;; *************** function _dtoa *****************
  7258 ;; Defined at:
  7259 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  7260 ;; Parameters:    Size  Location     Type
  7261 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  7262 ;;		 -> NULL(0), 
  7263 ;;  d               8    2[BANK0 ] long long 
  7264 ;; Auto vars:     Size  Location     Type
  7265 ;;  n               8   18[BANK0 ] long long 
  7266 ;;  i               2   26[BANK0 ] int 
  7267 ;;  s               2   16[BANK0 ] int 
  7268 ;;  w               2   14[BANK0 ] int 
  7269 ;;  p               2   12[BANK0 ] int 
  7270 ;; Return value:  Size  Location     Type
  7271 ;;                  2    0[BANK0 ] int 
  7272 ;; Registers used:
  7273 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7274 ;; Tracked objects:
  7275 ;;		On entry : 0/0
  7276 ;;		On exit  : 0/0
  7277 ;;		Unchanged: 0/0
  7278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7279 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7280 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7281 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7282 ;;      Totals:         8      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7283 ;;Total ram usage:       36 bytes
  7284 ;; Hardware stack levels used: 1
  7285 ;; Hardware stack levels required when called: 13
  7286 ;; This function calls:
  7287 ;;		___aodiv
  7288 ;;		___aomod
  7289 ;;		_abs
  7290 ;;		_pad
  7291 ;; This function is called by:
  7292 ;;		_vfpfcnvrt
  7293 ;; This function uses a non-reentrant model
  7294 ;;
  7295                           
  7296                           	psect	text23
  7297  002FEE                     __ptext23:
  7298                           	callstack 0
  7299  002FEE                     _dtoa:
  7300                           	callstack 12
  7301  002FEE                     
  7302                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  7303  002FEE  C062  F072         	movff	dtoa@d,dtoa@n
  7304  002FF2  C063  F073         	movff	dtoa@d+1,dtoa@n+1
  7305  002FF6  C064  F074         	movff	dtoa@d+2,dtoa@n+2
  7306  002FFA  C065  F075         	movff	dtoa@d+3,dtoa@n+3
  7307  002FFE  C066  F076         	movff	dtoa@d+4,dtoa@n+4
  7308  003002  C067  F077         	movff	dtoa@d+5,dtoa@n+5
  7309  003006  C068  F078         	movff	dtoa@d+6,dtoa@n+6
  7310  00300A  C069  F079         	movff	dtoa@d+7,dtoa@n+7
  7311  00300E                     
  7312                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  7313  00300E  0100               	movlb	0	; () banked
  7314  003010  BF79               	btfsc	(dtoa@n+7)& (0+255),7,b
  7315  003012  EF0D  F018         	goto	u9171
  7316  003016  EF10  F018         	goto	u9170
  7317  00301A                     u9171:
  7318  00301A  0E01               	movlw	1
  7319  00301C  EF11  F018         	goto	u9180
  7320  003020                     u9170:
  7321  003020  0E00               	movlw	0
  7322  003022                     u9180:
  7323  003022  6F70               	movwf	dtoa@s& (0+255),b
  7324  003024  6B71               	clrf	(dtoa@s+1)& (0+255),b
  7325                           
  7326                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  7327  003026  5170               	movf	dtoa@s& (0+255),w,b
  7328  003028  1171               	iorwf	(dtoa@s+1)& (0+255),w,b
  7329  00302A  B4D8               	btfsc	status,2,c
  7330  00302C  EF1A  F018         	goto	u9191
  7331  003030  EF1C  F018         	goto	u9190
  7332  003034                     u9191:
  7333  003034  EF2C  F018         	goto	l8493
  7334  003038                     u9190:
  7335  003038                     
  7336                           ; BSR set to: 0
  7337                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  7338  003038  1F79               	comf	(dtoa@n+7)& (0+255),f,b
  7339  00303A  1F78               	comf	(dtoa@n+6)& (0+255),f,b
  7340  00303C  1F77               	comf	(dtoa@n+5)& (0+255),f,b
  7341  00303E  1F76               	comf	(dtoa@n+4)& (0+255),f,b
  7342  003040  1F75               	comf	(dtoa@n+3)& (0+255),f,b
  7343  003042  1F74               	comf	(dtoa@n+2)& (0+255),f,b
  7344  003044  1F73               	comf	(dtoa@n+1)& (0+255),f,b
  7345  003046  6D72               	negf	dtoa@n& (0+255),b
  7346  003048  0E00               	movlw	0
  7347  00304A  2373               	addwfc	(dtoa@n+1)& (0+255),f,b
  7348  00304C  2374               	addwfc	(dtoa@n+2)& (0+255),f,b
  7349  00304E  2375               	addwfc	(dtoa@n+3)& (0+255),f,b
  7350  003050  2376               	addwfc	(dtoa@n+4)& (0+255),f,b
  7351  003052  2377               	addwfc	(dtoa@n+5)& (0+255),f,b
  7352  003054  2378               	addwfc	(dtoa@n+6)& (0+255),f,b
  7353  003056  2379               	addwfc	(dtoa@n+7)& (0+255),f,b
  7354  003058                     l8493:
  7355                           
  7356                           ; BSR set to: 0
  7357                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  7358  003058  BE3D               	btfsc	(_prec+1)^0,7,c
  7359  00305A  EF31  F018         	goto	u9201
  7360  00305E  EF33  F018         	goto	u9200
  7361  003062                     u9201:
  7362  003062  EF34  F018         	goto	l8497
  7363  003066                     u9200:
  7364  003066                     
  7365                           ; BSR set to: 0
  7366                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  7367  003066  923E               	bcf	_flags^0,1,c
  7368  003068                     l8497:
  7369                           
  7370                           ; BSR set to: 0
  7371                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  7372  003068  BE3D               	btfsc	(_prec+1)^0,7,c
  7373  00306A  EF41  F018         	goto	u9210
  7374  00306E  503D               	movf	(_prec+1)^0,w,c
  7375  003070  E106               	bnz	u9211
  7376  003072  043C               	decf	_prec^0,w,c
  7377  003074  B0D8               	btfsc	status,0,c
  7378  003076  EF3F  F018         	goto	u9211
  7379  00307A  EF41  F018         	goto	u9210
  7380  00307E                     u9211:
  7381  00307E  EF47  F018         	goto	l2125
  7382  003082                     u9210:
  7383  003082                     
  7384                           ; BSR set to: 0
  7385  003082  0E00               	movlw	0
  7386  003084  6F6D               	movwf	(dtoa@p+1)& (0+255),b
  7387  003086  0E01               	movlw	1
  7388  003088  6F6C               	movwf	dtoa@p& (0+255),b
  7389  00308A  EF4B  F018         	goto	l2127
  7390  00308E                     l2125:
  7391                           
  7392                           ; BSR set to: 0
  7393  00308E  C03C  F06C         	movff	_prec,dtoa@p
  7394  003092  C03D  F06D         	movff	_prec+1,dtoa@p+1
  7395  003096                     l2127:
  7396                           
  7397                           ; BSR set to: 0
  7398                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  7399  003096  C03A  F06E         	movff	_width,dtoa@w
  7400  00309A  C03B  F06F         	movff	_width+1,dtoa@w+1
  7401  00309E                     
  7402                           ; BSR set to: 0
  7403                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  7404  00309E  5170               	movf	dtoa@s& (0+255),w,b
  7405  0030A0  1171               	iorwf	(dtoa@s+1)& (0+255),w,b
  7406  0030A2  A4D8               	btfss	status,2,c
  7407  0030A4  EF56  F018         	goto	u9221
  7408  0030A8  EF58  F018         	goto	u9220
  7409  0030AC                     u9221:
  7410  0030AC  EF5F  F018         	goto	l8505
  7411  0030B0                     u9220:
  7412  0030B0                     
  7413                           ; BSR set to: 0
  7414  0030B0  A43E               	btfss	_flags^0,2,c
  7415  0030B2  EF5D  F018         	goto	u9231
  7416  0030B6  EF5F  F018         	goto	u9230
  7417  0030BA                     u9231:
  7418  0030BA  EF62  F018         	goto	l8507
  7419  0030BE                     u9230:
  7420  0030BE                     l8505:
  7421                           
  7422                           ; BSR set to: 0
  7423                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  7424  0030BE  076E               	decf	dtoa@w& (0+255),f,b
  7425  0030C0  A0D8               	btfss	status,0,c
  7426  0030C2  076F               	decf	(dtoa@w+1)& (0+255),f,b
  7427  0030C4                     l8507:
  7428                           
  7429                           ; BSR set to: 0
  7430                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  7431  0030C4  0E00               	movlw	0
  7432  0030C6  6F7B               	movwf	(dtoa@i+1)& (0+255),b
  7433  0030C8  0E4F               	movlw	79
  7434  0030CA  6F7A               	movwf	dtoa@i& (0+255),b
  7435  0030CC                     
  7436                           ; BSR set to: 0
  7437                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  7438  0030CC  0E00               	movlw	0
  7439  0030CE  0101               	movlb	1	; () banked
  7440  0030D0  6F8D               	movwf	(_dbuf+79)& (0+255),b
  7441                           
  7442                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7443  0030D2  EFE8  F018         	goto	l8521
  7444  0030D6                     l8511:
  7445                           
  7446                           ; BSR set to: 0
  7447                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  7448  0030D6  077A               	decf	dtoa@i& (0+255),f,b
  7449  0030D8  A0D8               	btfss	status,0,c
  7450  0030DA  077B               	decf	(dtoa@i+1)& (0+255),f,b
  7451  0030DC                     
  7452                           ; BSR set to: 0
  7453                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  7454  0030DC  0E3E               	movlw	low _dbuf
  7455  0030DE  257A               	addwf	dtoa@i& (0+255),w,b
  7456  0030E0  6ED9               	movwf	fsr2l,c
  7457  0030E2  0E01               	movlw	high _dbuf
  7458  0030E4  217B               	addwfc	(dtoa@i+1)& (0+255),w,b
  7459  0030E6  6EDA               	movwf	fsr2h,c
  7460  0030E8  C072  F014         	movff	dtoa@n,___aomod@dividend
  7461  0030EC  C073  F015         	movff	dtoa@n+1,___aomod@dividend+1
  7462  0030F0  C074  F016         	movff	dtoa@n+2,___aomod@dividend+2
  7463  0030F4  C075  F017         	movff	dtoa@n+3,___aomod@dividend+3
  7464  0030F8  C076  F018         	movff	dtoa@n+4,___aomod@dividend+4
  7465  0030FC  C077  F019         	movff	dtoa@n+5,___aomod@dividend+5
  7466  003100  C078  F01A         	movff	dtoa@n+6,___aomod@dividend+6
  7467  003104  C079  F01B         	movff	dtoa@n+7,___aomod@dividend+7
  7468  003108  0E0A               	movlw	10
  7469  00310A  6E1C               	movwf	___aomod@divisor^0,c
  7470  00310C  0E00               	movlw	0
  7471  00310E  6E1D               	movwf	(___aomod@divisor+1)^0,c
  7472  003110  0E00               	movlw	0
  7473  003112  6E1E               	movwf	(___aomod@divisor+2)^0,c
  7474  003114  0E00               	movlw	0
  7475  003116  6E1F               	movwf	(___aomod@divisor+3)^0,c
  7476  003118  0E00               	movlw	0
  7477  00311A  6E20               	movwf	(___aomod@divisor+4)^0,c
  7478  00311C  0E00               	movlw	0
  7479  00311E  6E21               	movwf	(___aomod@divisor+5)^0,c
  7480  003120  0E00               	movlw	0
  7481  003122  6E22               	movwf	(___aomod@divisor+6)^0,c
  7482  003124  0E00               	movlw	0
  7483  003126  6E23               	movwf	(___aomod@divisor+7)^0,c
  7484  003128  ECC6  F020         	call	___aomod	;wreg free
  7485  00312C  C014  F031         	movff	?___aomod,??_dtoa
  7486  003130  C015  F032         	movff	?___aomod+1,??_dtoa+1
  7487  003134  C016  F033         	movff	?___aomod+2,??_dtoa+2
  7488  003138  C017  F034         	movff	?___aomod+3,??_dtoa+3
  7489  00313C  C018  F035         	movff	?___aomod+4,??_dtoa+4
  7490  003140  C019  F036         	movff	?___aomod+5,??_dtoa+5
  7491  003144  C01A  F037         	movff	?___aomod+6,??_dtoa+6
  7492  003148  C01B  F038         	movff	?___aomod+7,??_dtoa+7
  7493  00314C  C031  F026         	movff	??_dtoa,abs@a
  7494  003150  C033  F027         	movff	??_dtoa+2,abs@a+1
  7495  003154  ECA5  F02D         	call	_abs	;wreg free
  7496  003158  5026               	movf	?_abs^0,w,c
  7497  00315A  0F30               	addlw	48
  7498  00315C  6EDF               	movwf	indf2,c
  7499  00315E                     
  7500                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  7501  00315E  0100               	movlb	0	; () banked
  7502  003160  076C               	decf	dtoa@p& (0+255),f,b
  7503  003162  A0D8               	btfss	status,0,c
  7504  003164  076D               	decf	(dtoa@p+1)& (0+255),f,b
  7505  003166                     
  7506                           ; BSR set to: 0
  7507                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  7508  003166  076E               	decf	dtoa@w& (0+255),f,b
  7509  003168  A0D8               	btfss	status,0,c
  7510  00316A  076F               	decf	(dtoa@w+1)& (0+255),f,b
  7511  00316C                     
  7512                           ; BSR set to: 0
  7513                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  7514  00316C  C072  F014         	movff	dtoa@n,___aodiv@dividend
  7515  003170  C073  F015         	movff	dtoa@n+1,___aodiv@dividend+1
  7516  003174  C074  F016         	movff	dtoa@n+2,___aodiv@dividend+2
  7517  003178  C075  F017         	movff	dtoa@n+3,___aodiv@dividend+3
  7518  00317C  C076  F018         	movff	dtoa@n+4,___aodiv@dividend+4
  7519  003180  C077  F019         	movff	dtoa@n+5,___aodiv@dividend+5
  7520  003184  C078  F01A         	movff	dtoa@n+6,___aodiv@dividend+6
  7521  003188  C079  F01B         	movff	dtoa@n+7,___aodiv@dividend+7
  7522  00318C  0E0A               	movlw	10
  7523  00318E  6E1C               	movwf	___aodiv@divisor^0,c
  7524  003190  0E00               	movlw	0
  7525  003192  6E1D               	movwf	(___aodiv@divisor+1)^0,c
  7526  003194  0E00               	movlw	0
  7527  003196  6E1E               	movwf	(___aodiv@divisor+2)^0,c
  7528  003198  0E00               	movlw	0
  7529  00319A  6E1F               	movwf	(___aodiv@divisor+3)^0,c
  7530  00319C  0E00               	movlw	0
  7531  00319E  6E20               	movwf	(___aodiv@divisor+4)^0,c
  7532  0031A0  0E00               	movlw	0
  7533  0031A2  6E21               	movwf	(___aodiv@divisor+5)^0,c
  7534  0031A4  0E00               	movlw	0
  7535  0031A6  6E22               	movwf	(___aodiv@divisor+6)^0,c
  7536  0031A8  0E00               	movlw	0
  7537  0031AA  6E23               	movwf	(___aodiv@divisor+7)^0,c
  7538  0031AC  EC3E  F01F         	call	___aodiv	;wreg free
  7539  0031B0  C014  F072         	movff	?___aodiv,dtoa@n
  7540  0031B4  C015  F073         	movff	?___aodiv+1,dtoa@n+1
  7541  0031B8  C016  F074         	movff	?___aodiv+2,dtoa@n+2
  7542  0031BC  C017  F075         	movff	?___aodiv+3,dtoa@n+3
  7543  0031C0  C018  F076         	movff	?___aodiv+4,dtoa@n+4
  7544  0031C4  C019  F077         	movff	?___aodiv+5,dtoa@n+5
  7545  0031C8  C01A  F078         	movff	?___aodiv+6,dtoa@n+6
  7546  0031CC  C01B  F079         	movff	?___aodiv+7,dtoa@n+7
  7547  0031D0                     l8521:
  7548                           
  7549                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7550  0031D0  0100               	movlb	0	; () banked
  7551  0031D2  BF7B               	btfsc	(dtoa@i+1)& (0+255),7,b
  7552  0031D4  EFF4  F018         	goto	u9241
  7553  0031D8  517B               	movf	(dtoa@i+1)& (0+255),w,b
  7554  0031DA  E108               	bnz	u9240
  7555  0031DC  057A               	decf	dtoa@i& (0+255),w,b
  7556  0031DE  A0D8               	btfss	status,0,c
  7557  0031E0  EFF4  F018         	goto	u9241
  7558  0031E4  EFF6  F018         	goto	u9240
  7559  0031E8                     u9241:
  7560  0031E8  EF26  F019         	goto	l8531
  7561  0031EC                     u9240:
  7562  0031EC                     
  7563                           ; BSR set to: 0
  7564  0031EC  5172               	movf	dtoa@n& (0+255),w,b
  7565  0031EE  1173               	iorwf	(dtoa@n+1)& (0+255),w,b
  7566  0031F0  1174               	iorwf	(dtoa@n+2)& (0+255),w,b
  7567  0031F2  1175               	iorwf	(dtoa@n+3)& (0+255),w,b
  7568  0031F4  1176               	iorwf	(dtoa@n+4)& (0+255),w,b
  7569  0031F6  1177               	iorwf	(dtoa@n+5)& (0+255),w,b
  7570  0031F8  1178               	iorwf	(dtoa@n+6)& (0+255),w,b
  7571  0031FA  1179               	iorwf	(dtoa@n+7)& (0+255),w,b
  7572  0031FC  A4D8               	btfss	status,2,c
  7573  0031FE  EF03  F019         	goto	u9251
  7574  003202  EF05  F019         	goto	u9250
  7575  003206                     u9251:
  7576  003206  EF6B  F018         	goto	l8511
  7577  00320A                     u9250:
  7578  00320A                     
  7579                           ; BSR set to: 0
  7580  00320A  BF6D               	btfsc	(dtoa@p+1)& (0+255),7,b
  7581  00320C  EF12  F019         	goto	u9260
  7582  003210  516D               	movf	(dtoa@p+1)& (0+255),w,b
  7583  003212  E106               	bnz	u9261
  7584  003214  056C               	decf	dtoa@p& (0+255),w,b
  7585  003216  B0D8               	btfsc	status,0,c
  7586  003218  EF10  F019         	goto	u9261
  7587  00321C  EF12  F019         	goto	u9260
  7588  003220                     u9261:
  7589  003220  EF6B  F018         	goto	l8511
  7590  003224                     u9260:
  7591  003224                     
  7592                           ; BSR set to: 0
  7593  003224  BF6F               	btfsc	(dtoa@w+1)& (0+255),7,b
  7594  003226  EF1D  F019         	goto	u9271
  7595  00322A  516F               	movf	(dtoa@w+1)& (0+255),w,b
  7596  00322C  E108               	bnz	u9270
  7597  00322E  056E               	decf	dtoa@w& (0+255),w,b
  7598  003230  A0D8               	btfss	status,0,c
  7599  003232  EF1D  F019         	goto	u9271
  7600  003236  EF1F  F019         	goto	u9270
  7601  00323A                     u9271:
  7602  00323A  EF26  F019         	goto	l8531
  7603  00323E                     u9270:
  7604  00323E                     
  7605                           ; BSR set to: 0
  7606  00323E  B23E               	btfsc	_flags^0,1,c
  7607  003240  EF24  F019         	goto	u9281
  7608  003244  EF26  F019         	goto	u9280
  7609  003248                     u9281:
  7610  003248  EF6B  F018         	goto	l8511
  7611  00324C                     u9280:
  7612  00324C                     l8531:
  7613                           
  7614                           ; BSR set to: 0
  7615                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  7616  00324C  5170               	movf	dtoa@s& (0+255),w,b
  7617  00324E  1171               	iorwf	(dtoa@s+1)& (0+255),w,b
  7618  003250  A4D8               	btfss	status,2,c
  7619  003252  EF2D  F019         	goto	u9291
  7620  003256  EF2F  F019         	goto	u9290
  7621  00325A                     u9291:
  7622  00325A  EF36  F019         	goto	l8535
  7623  00325E                     u9290:
  7624  00325E                     
  7625                           ; BSR set to: 0
  7626  00325E  A43E               	btfss	_flags^0,2,c
  7627  003260  EF34  F019         	goto	u9301
  7628  003264  EF36  F019         	goto	u9300
  7629  003268                     u9301:
  7630  003268  EF55  F019         	goto	l8545
  7631  00326C                     u9300:
  7632  00326C                     l8535:
  7633                           
  7634                           ; BSR set to: 0
  7635                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  7636  00326C  077A               	decf	dtoa@i& (0+255),f,b
  7637  00326E  A0D8               	btfss	status,0,c
  7638  003270  077B               	decf	(dtoa@i+1)& (0+255),f,b
  7639  003272                     
  7640                           ; BSR set to: 0
  7641                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  7642  003272  5170               	movf	dtoa@s& (0+255),w,b
  7643  003274  1171               	iorwf	(dtoa@s+1)& (0+255),w,b
  7644  003276  A4D8               	btfss	status,2,c
  7645  003278  EF40  F019         	goto	u9311
  7646  00327C  EF42  F019         	goto	u9310
  7647  003280                     u9311:
  7648  003280  EF48  F019         	goto	l8541
  7649  003284                     u9310:
  7650  003284                     
  7651                           ; BSR set to: 0
  7652  003284  0E00               	movlw	0
  7653  003286  6F6B               	movwf	(_dtoa$3538+1)& (0+255),b
  7654  003288  0E2B               	movlw	43
  7655  00328A  6F6A               	movwf	_dtoa$3538& (0+255),b
  7656  00328C  EF4C  F019         	goto	l8543
  7657  003290                     l8541:
  7658                           
  7659                           ; BSR set to: 0
  7660  003290  0E00               	movlw	0
  7661  003292  6F6B               	movwf	(_dtoa$3538+1)& (0+255),b
  7662  003294  0E2D               	movlw	45
  7663  003296  6F6A               	movwf	_dtoa$3538& (0+255),b
  7664  003298                     l8543:
  7665                           
  7666                           ; BSR set to: 0
  7667  003298  0E3E               	movlw	low _dbuf
  7668  00329A  257A               	addwf	dtoa@i& (0+255),w,b
  7669  00329C  6ED9               	movwf	fsr2l,c
  7670  00329E  0E01               	movlw	high _dbuf
  7671  0032A0  217B               	addwfc	(dtoa@i+1)& (0+255),w,b
  7672  0032A2  6EDA               	movwf	fsr2h,c
  7673  0032A4  0060  F1AB  FFDF   	movff	_dtoa$3538,indf2
  7674  0032AA                     l8545:
  7675                           
  7676                           ; BSR set to: 0
  7677                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  7678  0032AA  C060  F026         	movff	dtoa@fp,pad@fp
  7679  0032AE  C061  F027         	movff	dtoa@fp+1,pad@fp+1
  7680  0032B2  0E3E               	movlw	low _dbuf
  7681  0032B4  257A               	addwf	dtoa@i& (0+255),w,b
  7682  0032B6  6E28               	movwf	pad@buf^0,c
  7683  0032B8  0E01               	movlw	high _dbuf
  7684  0032BA  217B               	addwfc	(dtoa@i+1)& (0+255),w,b
  7685  0032BC  6E29               	movwf	(pad@buf+1)^0,c
  7686  0032BE  C06E  F02A         	movff	dtoa@w,pad@p
  7687  0032C2  C06F  F02B         	movff	dtoa@w+1,pad@p+1
  7688  0032C6  EC5C  F028         	call	_pad	;wreg free
  7689  0032CA  C026  F060         	movff	?_pad,?_dtoa
  7690  0032CE  C027  F061         	movff	?_pad+1,?_dtoa+1
  7691  0032D2  0012               	return		;funcret
  7692  0032D4                     __end_of_dtoa:
  7693                           	callstack 0
  7694                           
  7695 ;; *************** function _pad *****************
  7696 ;; Defined at:
  7697 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  7698 ;; Parameters:    Size  Location     Type
  7699 ;;  fp              2   37[COMRAM] PTR struct _IO_FILE
  7700 ;;		 -> NULL(0), 
  7701 ;;  buf             2   39[COMRAM] PTR unsigned char 
  7702 ;;		 -> dbuf(80), 
  7703 ;;  p               2   41[COMRAM] int 
  7704 ;; Auto vars:     Size  Location     Type
  7705 ;;  w               2   46[COMRAM] int 
  7706 ;;  i               2   44[COMRAM] int 
  7707 ;; Return value:  Size  Location     Type
  7708 ;;                  2   37[COMRAM] int 
  7709 ;; Registers used:
  7710 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7711 ;; Tracked objects:
  7712 ;;		On entry : 0/0
  7713 ;;		On exit  : 0/0
  7714 ;;		Unchanged: 0/0
  7715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7716 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7717 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7718 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7719 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7720 ;;Total ram usage:       11 bytes
  7721 ;; Hardware stack levels used: 1
  7722 ;; Hardware stack levels required when called: 12
  7723 ;; This function calls:
  7724 ;;		_fputc
  7725 ;;		_fputs
  7726 ;;		_strlen
  7727 ;; This function is called by:
  7728 ;;		_dtoa
  7729 ;;		_efgtoa
  7730 ;;		_utoa
  7731 ;; This function uses a non-reentrant model
  7732 ;;
  7733                           
  7734                           	psect	text24
  7735  0050B8                     __ptext24:
  7736                           	callstack 0
  7737  0050B8                     _pad:
  7738                           	callstack 12
  7739  0050B8                     
  7740                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  7741  0050B8  A03E               	btfss	_flags^0,0,c
  7742  0050BA  EF61  F028         	goto	u8901
  7743  0050BE  EF63  F028         	goto	u8900
  7744  0050C2                     u8901:
  7745  0050C2  EF6D  F028         	goto	l8401
  7746  0050C6                     u8900:
  7747  0050C6                     
  7748                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  7749  0050C6  C028  F01F         	movff	pad@buf,fputs@s
  7750  0050CA  C029  F020         	movff	pad@buf+1,fputs@s+1
  7751  0050CE  C026  F021         	movff	pad@fp,fputs@fp
  7752  0050D2  C027  F022         	movff	pad@fp+1,fputs@fp+1
  7753  0050D6  EC61  F02D         	call	_fputs	;wreg free
  7754  0050DA                     l8401:
  7755                           
  7756                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  7757  0050DA  BE2B               	btfsc	(pad@p+1)^0,7,c
  7758  0050DC  EF72  F028         	goto	u8911
  7759  0050E0  EF74  F028         	goto	u8910
  7760  0050E4                     u8911:
  7761  0050E4  EF7A  F028         	goto	l8405
  7762  0050E8                     u8910:
  7763  0050E8  C02A  F02F         	movff	pad@p,pad@w
  7764  0050EC  C02B  F030         	movff	pad@p+1,pad@w+1
  7765  0050F0  EF7E  F028         	goto	l2114
  7766  0050F4                     l8405:
  7767  0050F4  0E00               	movlw	0
  7768  0050F6  6E30               	movwf	(pad@w+1)^0,c
  7769  0050F8  0E00               	movlw	0
  7770  0050FA  6E2F               	movwf	pad@w^0,c
  7771  0050FC                     l2114:
  7772                           
  7773                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  7774  0050FC  0E00               	movlw	0
  7775  0050FE  6E2E               	movwf	(pad@i+1)^0,c
  7776  005100  0E00               	movlw	0
  7777  005102  6E2D               	movwf	pad@i^0,c
  7778                           
  7779                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  7780  005104  EF90  F028         	goto	l8411
  7781  005108                     l8407:
  7782                           
  7783                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  7784  005108  0E00               	movlw	0
  7785  00510A  6E17               	movwf	(fputc@c+1)^0,c
  7786  00510C  0E20               	movlw	32
  7787  00510E  6E16               	movwf	fputc@c^0,c
  7788  005110  C026  F018         	movff	pad@fp,fputc@fp
  7789  005114  C027  F019         	movff	pad@fp+1,fputc@fp+1
  7790  005118  EC6C  F02A         	call	_fputc	;wreg free
  7791  00511C                     
  7792                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  7793  00511C  4A2D               	infsnz	pad@i^0,f,c
  7794  00511E  2A2E               	incf	(pad@i+1)^0,f,c
  7795  005120                     l8411:
  7796                           
  7797                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  7798  005120  502F               	movf	pad@w^0,w,c
  7799  005122  5C2D               	subwf	pad@i^0,w,c
  7800  005124  502E               	movf	(pad@i+1)^0,w,c
  7801  005126  0A80               	xorlw	128
  7802  005128  6E2C               	movwf	??_pad^0,c
  7803  00512A  5030               	movf	(pad@w+1)^0,w,c
  7804  00512C  0A80               	xorlw	128
  7805  00512E  582C               	subwfb	??_pad^0,w,c
  7806  005130  A0D8               	btfss	status,0,c
  7807  005132  EF9D  F028         	goto	u8921
  7808  005136  EF9F  F028         	goto	u8920
  7809  00513A                     u8921:
  7810  00513A  EF84  F028         	goto	l8407
  7811  00513E                     u8920:
  7812  00513E                     
  7813                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  7814  00513E  B03E               	btfsc	_flags^0,0,c
  7815  005140  EFA4  F028         	goto	u8931
  7816  005144  EFA6  F028         	goto	u8930
  7817  005148                     u8931:
  7818  005148  EFB0  F028         	goto	l8415
  7819  00514C                     u8930:
  7820  00514C                     
  7821                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  7822  00514C  C028  F01F         	movff	pad@buf,fputs@s
  7823  005150  C029  F020         	movff	pad@buf+1,fputs@s+1
  7824  005154  C026  F021         	movff	pad@fp,fputs@fp
  7825  005158  C027  F022         	movff	pad@fp+1,fputs@fp+1
  7826  00515C  EC61  F02D         	call	_fputs	;wreg free
  7827  005160                     l8415:
  7828                           
  7829                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  7830  005160  C028  F014         	movff	pad@buf,strlen@s
  7831  005164  C029  F015         	movff	pad@buf+1,strlen@s+1
  7832  005168  ECE4  F02D         	call	_strlen	;wreg free
  7833  00516C  502F               	movf	pad@w^0,w,c
  7834  00516E  2414               	addwf	?_strlen^0,w,c
  7835  005170  6E26               	movwf	?_pad^0,c
  7836  005172  5030               	movf	(pad@w+1)^0,w,c
  7837  005174  2015               	addwfc	(?_strlen+1)^0,w,c
  7838  005176  6E27               	movwf	(?_pad+1)^0,c
  7839  005178  0012               	return		;funcret
  7840  00517A                     __end_of_pad:
  7841                           	callstack 0
  7842                           
  7843 ;; *************** function _strlen *****************
  7844 ;; Defined at:
  7845 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  7846 ;; Parameters:    Size  Location     Type
  7847 ;;  s               2   19[COMRAM] PTR const unsigned char 
  7848 ;;		 -> dbuf(80), 
  7849 ;; Auto vars:     Size  Location     Type
  7850 ;;  a               2   21[COMRAM] PTR const unsigned char 
  7851 ;;		 -> dbuf(80), 
  7852 ;; Return value:  Size  Location     Type
  7853 ;;                  2   19[COMRAM] unsigned int 
  7854 ;; Registers used:
  7855 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7856 ;; Tracked objects:
  7857 ;;		On entry : 0/0
  7858 ;;		On exit  : 0/0
  7859 ;;		Unchanged: 0/0
  7860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7861 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7862 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7864 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7865 ;;Total ram usage:        4 bytes
  7866 ;; Hardware stack levels used: 1
  7867 ;; Hardware stack levels required when called: 8
  7868 ;; This function calls:
  7869 ;;		Nothing
  7870 ;; This function is called by:
  7871 ;;		_pad
  7872 ;; This function uses a non-reentrant model
  7873 ;;
  7874                           
  7875                           	psect	text25
  7876  005BC8                     __ptext25:
  7877                           	callstack 0
  7878  005BC8                     _strlen:
  7879                           	callstack 15
  7880  005BC8  C014  F016         	movff	strlen@s,strlen@a
  7881  005BCC  C015  F017         	movff	strlen@s+1,strlen@a+1
  7882  005BD0  EFEC  F02D         	goto	l7825
  7883  005BD4                     l7823:
  7884  005BD4  4A14               	infsnz	strlen@s^0,f,c
  7885  005BD6  2A15               	incf	(strlen@s+1)^0,f,c
  7886  005BD8                     l7825:
  7887  005BD8  0060  F053  FFD9   	movff	strlen@s,fsr2l
  7888  005BDE  0060  F057  FFDA   	movff	strlen@s+1,fsr2h
  7889  005BE4  50DF               	movf	indf2,w,c
  7890  005BE6  A4D8               	btfss	status,2,c
  7891  005BE8  EFF8  F02D         	goto	u7971
  7892  005BEC  EFFA  F02D         	goto	u7970
  7893  005BF0                     u7971:
  7894  005BF0  EFEA  F02D         	goto	l7823
  7895  005BF4                     u7970:
  7896  005BF4  5016               	movf	strlen@a^0,w,c
  7897  005BF6  5C14               	subwf	strlen@s^0,w,c
  7898  005BF8  6E14               	movwf	?_strlen^0,c
  7899  005BFA  5017               	movf	(strlen@a+1)^0,w,c
  7900  005BFC  5815               	subwfb	(strlen@s+1)^0,w,c
  7901  005BFE  6E15               	movwf	(?_strlen+1)^0,c
  7902  005C00  0012               	return		;funcret
  7903  005C02                     __end_of_strlen:
  7904                           	callstack 0
  7905                           
  7906 ;; *************** function _fputs *****************
  7907 ;; Defined at:
  7908 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  7909 ;; Parameters:    Size  Location     Type
  7910 ;;  s               2   30[COMRAM] PTR const unsigned char 
  7911 ;;		 -> dbuf(80), 
  7912 ;;  fp              2   32[COMRAM] PTR struct _IO_FILE
  7913 ;;		 -> NULL(0), 
  7914 ;; Auto vars:     Size  Location     Type
  7915 ;;  i               2   35[COMRAM] int 
  7916 ;;  c               1   34[COMRAM] unsigned char 
  7917 ;; Return value:  Size  Location     Type
  7918 ;;                  2   30[COMRAM] int 
  7919 ;; Registers used:
  7920 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7921 ;; Tracked objects:
  7922 ;;		On entry : 0/0
  7923 ;;		On exit  : 0/0
  7924 ;;		Unchanged: 0/0
  7925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7926 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7927 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7929 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7930 ;;Total ram usage:        7 bytes
  7931 ;; Hardware stack levels used: 1
  7932 ;; Hardware stack levels required when called: 11
  7933 ;; This function calls:
  7934 ;;		_fputc
  7935 ;; This function is called by:
  7936 ;;		_pad
  7937 ;; This function uses a non-reentrant model
  7938 ;;
  7939                           
  7940                           	psect	text26
  7941  005AC2                     __ptext26:
  7942                           	callstack 0
  7943  005AC2                     _fputs:
  7944                           	callstack 12
  7945  005AC2  0E00               	movlw	0
  7946  005AC4  6E25               	movwf	(fputs@i+1)^0,c
  7947  005AC6  0E00               	movlw	0
  7948  005AC8  6E24               	movwf	fputs@i^0,c
  7949  005ACA  EF72  F02D         	goto	l7819
  7950  005ACE                     l7815:
  7951  005ACE  C023  F016         	movff	fputs@c,fputc@c
  7952  005AD2  6A17               	clrf	(fputc@c+1)^0,c
  7953  005AD4  C021  F018         	movff	fputs@fp,fputc@fp
  7954  005AD8  C022  F019         	movff	fputs@fp+1,fputc@fp+1
  7955  005ADC  EC6C  F02A         	call	_fputc	;wreg free
  7956  005AE0  4A24               	infsnz	fputs@i^0,f,c
  7957  005AE2  2A25               	incf	(fputs@i+1)^0,f,c
  7958  005AE4                     l7819:
  7959  005AE4  5024               	movf	fputs@i^0,w,c
  7960  005AE6  241F               	addwf	fputs@s^0,w,c
  7961  005AE8  6ED9               	movwf	fsr2l,c
  7962  005AEA  5025               	movf	(fputs@i+1)^0,w,c
  7963  005AEC  2020               	addwfc	(fputs@s+1)^0,w,c
  7964  005AEE  6EDA               	movwf	fsr2h,c
  7965  005AF0  50DF               	movf	indf2,w,c
  7966  005AF2  6E23               	movwf	fputs@c^0,c
  7967  005AF4  5023               	movf	fputs@c^0,w,c
  7968  005AF6  A4D8               	btfss	status,2,c
  7969  005AF8  EF80  F02D         	goto	u7961
  7970  005AFC  EF82  F02D         	goto	u7960
  7971  005B00                     u7961:
  7972  005B00  EF67  F02D         	goto	l7815
  7973  005B04                     u7960:
  7974  005B04  0012               	return		;funcret
  7975  005B06                     __end_of_fputs:
  7976                           	callstack 0
  7977                           
  7978 ;; *************** function _fputc *****************
  7979 ;; Defined at:
  7980 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  7981 ;; Parameters:    Size  Location     Type
  7982 ;;  c               2   21[COMRAM] int 
  7983 ;;  fp              2   23[COMRAM] PTR struct _IO_FILE
  7984 ;;		 -> NULL(0), 
  7985 ;; Auto vars:     Size  Location     Type
  7986 ;;		None
  7987 ;; Return value:  Size  Location     Type
  7988 ;;                  2   21[COMRAM] int 
  7989 ;; Registers used:
  7990 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7991 ;; Tracked objects:
  7992 ;;		On entry : 0/0
  7993 ;;		On exit  : 0/0
  7994 ;;		Unchanged: 0/0
  7995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7996 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7998 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7999 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8000 ;;Total ram usage:        9 bytes
  8001 ;; Hardware stack levels used: 1
  8002 ;; Hardware stack levels required when called: 10
  8003 ;; This function calls:
  8004 ;;		_putch
  8005 ;; This function is called by:
  8006 ;;		_pad
  8007 ;;		_vfpfcnvrt
  8008 ;;		_fputs
  8009 ;; This function uses a non-reentrant model
  8010 ;;
  8011                           
  8012                           	psect	text27
  8013  0054D8                     __ptext27:
  8014                           	callstack 0
  8015  0054D8                     _fputc:
  8016                           	callstack 12
  8017  0054D8  5018               	movf	fputc@fp^0,w,c
  8018  0054DA  1019               	iorwf	(fputc@fp+1)^0,w,c
  8019  0054DC  B4D8               	btfsc	status,2,c
  8020  0054DE  EF73  F02A         	goto	u7531
  8021  0054E2  EF75  F02A         	goto	u7530
  8022  0054E6                     u7531:
  8023  0054E6  EF7E  F02A         	goto	l7601
  8024  0054EA                     u7530:
  8025  0054EA  5018               	movf	fputc@fp^0,w,c
  8026  0054EC  1019               	iorwf	(fputc@fp+1)^0,w,c
  8027  0054EE  A4D8               	btfss	status,2,c
  8028  0054F0  EF7C  F02A         	goto	u7541
  8029  0054F4  EF7E  F02A         	goto	u7540
  8030  0054F8                     u7541:
  8031  0054F8  EF83  F02A         	goto	l7603
  8032  0054FC                     u7540:
  8033  0054FC                     l7601:
  8034  0054FC  5016               	movf	fputc@c^0,w,c
  8035  0054FE  EC2A  F031         	call	_putch
  8036  005502  EFB6  F02A         	goto	l2327
  8037  005506                     l7603:
  8038  005506  EE20 F004          	lfsr	2,4
  8039  00550A  5018               	movf	fputc@fp^0,w,c
  8040  00550C  26D9               	addwf	fsr2l,f,c
  8041  00550E  5019               	movf	(fputc@fp+1)^0,w,c
  8042  005510  22DA               	addwfc	fsr2h,f,c
  8043  005512  50DE               	movf	postinc2,w,c
  8044  005514  10DE               	iorwf	postinc2,w,c
  8045  005516  B4D8               	btfsc	status,2,c
  8046  005518  EF90  F02A         	goto	u7551
  8047  00551C  EF92  F02A         	goto	u7550
  8048  005520                     u7551:
  8049  005520  EFAD  F02A         	goto	l7607
  8050  005524                     u7550:
  8051  005524  EE20 F004          	lfsr	2,4
  8052  005528  5018               	movf	fputc@fp^0,w,c
  8053  00552A  26D9               	addwf	fsr2l,f,c
  8054  00552C  5019               	movf	(fputc@fp+1)^0,w,c
  8055  00552E  22DA               	addwfc	fsr2h,f,c
  8056  005530  EE10 F002          	lfsr	1,2
  8057  005534  5018               	movf	fputc@fp^0,w,c
  8058  005536  26E1               	addwf	fsr1l,f,c
  8059  005538  5019               	movf	(fputc@fp+1)^0,w,c
  8060  00553A  22E2               	addwfc	fsr1h,f,c
  8061  00553C  50DE               	movf	postinc2,w,c
  8062  00553E  5CE6               	subwf	postinc1,w,c
  8063  005540  50E6               	movf	postinc1,w,c
  8064  005542  0A80               	xorlw	128
  8065  005544  6E1E               	movwf	(??_fputc+4)^0,c
  8066  005546  50DE               	movf	postinc2,w,c
  8067  005548  0A80               	xorlw	128
  8068  00554A  581E               	subwfb	(??_fputc+4)^0,w,c
  8069  00554C  B0D8               	btfsc	status,0,c
  8070  00554E  EFAB  F02A         	goto	u7561
  8071  005552  EFAD  F02A         	goto	u7560
  8072  005556                     u7561:
  8073  005556  EFB6  F02A         	goto	l2327
  8074  00555A                     u7560:
  8075  00555A                     l7607:
  8076  00555A  EE20 F002          	lfsr	2,2
  8077  00555E  5018               	movf	fputc@fp^0,w,c
  8078  005560  26D9               	addwf	fsr2l,f,c
  8079  005562  5019               	movf	(fputc@fp+1)^0,w,c
  8080  005564  22DA               	addwfc	fsr2h,f,c
  8081  005566  2ADE               	incf	postinc2,f,c
  8082  005568  0E00               	movlw	0
  8083  00556A  22DD               	addwfc	postdec2,f,c
  8084  00556C                     l2327:
  8085  00556C  0012               	return		;funcret
  8086  00556E                     __end_of_fputc:
  8087                           	callstack 0
  8088                           
  8089 ;; *************** function _putch *****************
  8090 ;; Defined at:
  8091 ;;		line 230 in file "mcc_generated_files/uart1.c"
  8092 ;; Parameters:    Size  Location     Type
  8093 ;;  txData          1    wreg     unsigned char 
  8094 ;; Auto vars:     Size  Location     Type
  8095 ;;  txData          1   20[COMRAM] unsigned char 
  8096 ;; Return value:  Size  Location     Type
  8097 ;;                  1    wreg      void 
  8098 ;; Registers used:
  8099 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8100 ;; Tracked objects:
  8101 ;;		On entry : 0/0
  8102 ;;		On exit  : 0/0
  8103 ;;		Unchanged: 0/0
  8104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8106 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8108 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8109 ;;Total ram usage:        1 bytes
  8110 ;; Hardware stack levels used: 1
  8111 ;; Hardware stack levels required when called: 9
  8112 ;; This function calls:
  8113 ;;		_UART1_Write
  8114 ;; This function is called by:
  8115 ;;		_fputc
  8116 ;; This function uses a non-reentrant model
  8117 ;;
  8118                           
  8119                           	psect	text28
  8120  006254                     __ptext28:
  8121                           	callstack 0
  8122  006254                     _putch:
  8123                           	callstack 12
  8124                           
  8125                           ;incstack = 0
  8126                           ;putch@txData stored from wreg
  8127  006254  6E15               	movwf	putch@txData^0,c
  8128  006256                     
  8129                           ;mcc_generated_files/uart1.c: 230: void putch(char txData);mcc_generated_files/uart1.c: 
      +                          231: {;mcc_generated_files/uart1.c: 232:     UART1_Write(txData);
  8130  006256  5015               	movf	putch@txData^0,w,c
  8131  006258  EC21  F02C         	call	_UART1_Write
  8132  00625C  0012               	return		;funcret
  8133  00625E                     __end_of_putch:
  8134                           	callstack 0
  8135                           
  8136 ;; *************** function _UART1_Write *****************
  8137 ;; Defined at:
  8138 ;;		line 202 in file "mcc_generated_files/uart1.c"
  8139 ;; Parameters:    Size  Location     Type
  8140 ;;  txData          1    wreg     unsigned char 
  8141 ;; Auto vars:     Size  Location     Type
  8142 ;;  txData          1   19[COMRAM] unsigned char 
  8143 ;; Return value:  Size  Location     Type
  8144 ;;                  1    wreg      void 
  8145 ;; Registers used:
  8146 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8147 ;; Tracked objects:
  8148 ;;		On entry : 0/0
  8149 ;;		On exit  : 0/0
  8150 ;;		Unchanged: 0/0
  8151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8153 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8155 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8156 ;;Total ram usage:        1 bytes
  8157 ;; Hardware stack levels used: 1
  8158 ;; Hardware stack levels required when called: 8
  8159 ;; This function calls:
  8160 ;;		Nothing
  8161 ;; This function is called by:
  8162 ;;		_putch
  8163 ;; This function uses a non-reentrant model
  8164 ;;
  8165                           
  8166                           	psect	text29
  8167  005842                     __ptext29:
  8168                           	callstack 0
  8169  005842                     _UART1_Write:
  8170                           	callstack 12
  8171                           
  8172                           ;incstack = 0
  8173                           ;UART1_Write@txData stored from wreg
  8174  005842  6E14               	movwf	UART1_Write@txData^0,c
  8175  005844                     l7579:
  8176                           
  8177                           ;mcc_generated_files/uart1.c: 204:     while(0 == uart1TxBufferRemaining)
  8178  005844  504C               	movf	_uart1TxBufferRemaining^0,w,c	;volatile
  8179  005846  B4D8               	btfsc	status,2,c
  8180  005848  EF28  F02C         	goto	u7501
  8181  00584C  EF2A  F02C         	goto	u7500
  8182  005850                     u7501:
  8183  005850  EF22  F02C         	goto	l7579
  8184  005854                     u7500:
  8185  005854                     
  8186                           ;mcc_generated_files/uart1.c: 208:     if(0 == PIE3bits.U1TXIE)
  8187  005854  0139               	movlb	57	; () banked
  8188  005856  B993               	btfsc	147,4,b	;volatile
  8189  005858  EF30  F02C         	goto	u7511
  8190  00585C  EF32  F02C         	goto	u7510
  8191  005860                     u7511:
  8192  005860  EF37  F02C         	goto	l309
  8193  005864                     u7510:
  8194  005864                     
  8195                           ; BSR set to: 57
  8196                           ;mcc_generated_files/uart1.c: 209:     {;mcc_generated_files/uart1.c: 210:         U1TXB
      +                           = txData;
  8197  005864  0060  F053  FDEA   	movff	UART1_Write@txData,15850	;volatile
  8198                           
  8199                           ;mcc_generated_files/uart1.c: 211:     }
  8200  00586A  EF4D  F02C         	goto	l7593
  8201  00586E                     l309:
  8202                           
  8203                           ; BSR set to: 57
  8204                           ;mcc_generated_files/uart1.c: 213:     {;mcc_generated_files/uart1.c: 214:         PIE3b
      +                          its.U1TXIE = 0;
  8205  00586E  9993               	bcf	147,4,b	;volatile
  8206  005870                     
  8207                           ; BSR set to: 57
  8208                           ;mcc_generated_files/uart1.c: 215:         uart1TxBuffer[uart1TxHead++] = txData;
  8209  005870  0E10               	movlw	low _uart1TxBuffer
  8210  005872  2447               	addwf	_uart1TxHead^0,w,c	;volatile
  8211  005874  6ED9               	movwf	fsr2l,c
  8212  005876  6ADA               	clrf	fsr2h,c
  8213  005878  0E01               	movlw	high _uart1TxBuffer
  8214  00587A  22DA               	addwfc	fsr2h,f,c
  8215  00587C  0060  F053  FFDF   	movff	UART1_Write@txData,indf2
  8216  005882                     
  8217                           ; BSR set to: 57
  8218  005882  2A47               	incf	_uart1TxHead^0,f,c	;volatile
  8219  005884                     
  8220                           ; BSR set to: 57
  8221                           ;mcc_generated_files/uart1.c: 216:         if(sizeof(uart1TxBuffer) <= uart1TxHead)
  8222  005884  0E07               	movlw	7
  8223  005886  6447               	cpfsgt	_uart1TxHead^0,c	;volatile
  8224  005888  EF48  F02C         	goto	u7521
  8225  00588C  EF4A  F02C         	goto	u7520
  8226  005890                     u7521:
  8227  005890  EF4C  F02C         	goto	l7591
  8228  005894                     u7520:
  8229  005894                     
  8230                           ; BSR set to: 57
  8231                           ;mcc_generated_files/uart1.c: 217:         {;mcc_generated_files/uart1.c: 218:          
      +                             uart1TxHead = 0;
  8232  005894  0E00               	movlw	0
  8233  005896  6E47               	movwf	_uart1TxHead^0,c	;volatile
  8234  005898                     l7591:
  8235                           
  8236                           ; BSR set to: 57
  8237                           ;mcc_generated_files/uart1.c: 220:         uart1TxBufferRemaining--;
  8238  005898  064C               	decf	_uart1TxBufferRemaining^0,f,c	;volatile
  8239  00589A                     l7593:
  8240                           
  8241                           ; BSR set to: 57
  8242                           ;mcc_generated_files/uart1.c: 222:     PIE3bits.U1TXIE = 1;
  8243  00589A  8993               	bsf	147,4,b	;volatile
  8244  00589C                     
  8245                           ; BSR set to: 57
  8246  00589C  0012               	return		;funcret
  8247  00589E                     __end_of_UART1_Write:
  8248                           	callstack 0
  8249                           
  8250 ;; *************** function _abs *****************
  8251 ;; Defined at:
  8252 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  8253 ;; Parameters:    Size  Location     Type
  8254 ;;  a               2   37[COMRAM] int 
  8255 ;; Auto vars:     Size  Location     Type
  8256 ;;		None
  8257 ;; Return value:  Size  Location     Type
  8258 ;;                  2   37[COMRAM] int 
  8259 ;; Registers used:
  8260 ;;		wreg, status,2, status,0
  8261 ;; Tracked objects:
  8262 ;;		On entry : 0/0
  8263 ;;		On exit  : 0/0
  8264 ;;		Unchanged: 0/0
  8265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8266 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8268 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8269 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8270 ;;Total ram usage:        4 bytes
  8271 ;; Hardware stack levels used: 1
  8272 ;; Hardware stack levels required when called: 8
  8273 ;; This function calls:
  8274 ;;		Nothing
  8275 ;; This function is called by:
  8276 ;;		_dtoa
  8277 ;; This function uses a non-reentrant model
  8278 ;;
  8279                           
  8280                           	psect	text30
  8281  005B4A                     __ptext30:
  8282                           	callstack 0
  8283  005B4A                     _abs:
  8284                           	callstack 16
  8285  005B4A  BE27               	btfsc	(abs@a+1)^0,7,c
  8286  005B4C  EFB2  F02D         	goto	u8940
  8287  005B50  5027               	movf	(abs@a+1)^0,w,c
  8288  005B52  E106               	bnz	u8941
  8289  005B54  0426               	decf	abs@a^0,w,c
  8290  005B56  B0D8               	btfsc	status,0,c
  8291  005B58  EFB0  F02D         	goto	u8941
  8292  005B5C  EFB2  F02D         	goto	u8940
  8293  005B60                     u8941:
  8294  005B60  EFC0  F02D         	goto	l2293
  8295  005B64                     u8940:
  8296  005B64  C026  F028         	movff	abs@a,??_abs
  8297  005B68  C027  F029         	movff	abs@a+1,??_abs+1
  8298  005B6C  1E28               	comf	??_abs^0,f,c
  8299  005B6E  1E29               	comf	(??_abs+1)^0,f,c
  8300  005B70  4A28               	infsnz	??_abs^0,f,c
  8301  005B72  2A29               	incf	(??_abs+1)^0,f,c
  8302  005B74  C028  F026         	movff	??_abs,?_abs
  8303  005B78  C029  F027         	movff	??_abs+1,?_abs+1
  8304  005B7C  EFC4  F02D         	goto	l2296
  8305  005B80                     l2293:
  8306  005B80  C026  F026         	movff	abs@a,?_abs
  8307  005B84  C027  F027         	movff	abs@a+1,?_abs+1
  8308  005B88                     l2296:
  8309  005B88  0012               	return		;funcret
  8310  005B8A                     __end_of_abs:
  8311                           	callstack 0
  8312                           
  8313 ;; *************** function ___aomod *****************
  8314 ;; Defined at:
  8315 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  8316 ;; Parameters:    Size  Location     Type
  8317 ;;  dividend        8   19[COMRAM] long long 
  8318 ;;  divisor         8   27[COMRAM] long long 
  8319 ;; Auto vars:     Size  Location     Type
  8320 ;;  sign            1   36[COMRAM] unsigned char 
  8321 ;;  counter         1   35[COMRAM] unsigned char 
  8322 ;; Return value:  Size  Location     Type
  8323 ;;                  8   19[COMRAM] long long 
  8324 ;; Registers used:
  8325 ;;		wreg, status,2, status,0
  8326 ;; Tracked objects:
  8327 ;;		On entry : 0/0
  8328 ;;		On exit  : 0/0
  8329 ;;		Unchanged: 0/0
  8330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8331 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8332 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8334 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8335 ;;Total ram usage:       18 bytes
  8336 ;; Hardware stack levels used: 1
  8337 ;; Hardware stack levels required when called: 8
  8338 ;; This function calls:
  8339 ;;		Nothing
  8340 ;; This function is called by:
  8341 ;;		_dtoa
  8342 ;; This function uses a non-reentrant model
  8343 ;;
  8344                           
  8345                           	psect	text31
  8346  00418C                     __ptext31:
  8347                           	callstack 0
  8348  00418C                     ___aomod:
  8349                           	callstack 16
  8350  00418C  0E00               	movlw	0
  8351  00418E  6E25               	movwf	___aomod@sign^0,c
  8352  004190  BE1B               	btfsc	(___aomod@dividend+7)^0,7,c
  8353  004192  EFCF  F020         	goto	u8070
  8354  004196  EFCD  F020         	goto	u8071
  8355  00419A                     u8071:
  8356  00419A  EFE1  F020         	goto	l7887
  8357  00419E                     u8070:
  8358  00419E  1E1B               	comf	(___aomod@dividend+7)^0,f,c
  8359  0041A0  1E1A               	comf	(___aomod@dividend+6)^0,f,c
  8360  0041A2  1E19               	comf	(___aomod@dividend+5)^0,f,c
  8361  0041A4  1E18               	comf	(___aomod@dividend+4)^0,f,c
  8362  0041A6  1E17               	comf	(___aomod@dividend+3)^0,f,c
  8363  0041A8  1E16               	comf	(___aomod@dividend+2)^0,f,c
  8364  0041AA  1E15               	comf	(___aomod@dividend+1)^0,f,c
  8365  0041AC  6C14               	negf	___aomod@dividend^0,c
  8366  0041AE  0E00               	movlw	0
  8367  0041B0  2215               	addwfc	(___aomod@dividend+1)^0,f,c
  8368  0041B2  2216               	addwfc	(___aomod@dividend+2)^0,f,c
  8369  0041B4  2217               	addwfc	(___aomod@dividend+3)^0,f,c
  8370  0041B6  2218               	addwfc	(___aomod@dividend+4)^0,f,c
  8371  0041B8  2219               	addwfc	(___aomod@dividend+5)^0,f,c
  8372  0041BA  221A               	addwfc	(___aomod@dividend+6)^0,f,c
  8373  0041BC  221B               	addwfc	(___aomod@dividend+7)^0,f,c
  8374  0041BE  0E01               	movlw	1
  8375  0041C0  6E25               	movwf	___aomod@sign^0,c
  8376  0041C2                     l7887:
  8377  0041C2  BE23               	btfsc	(___aomod@divisor+7)^0,7,c
  8378  0041C4  EFE8  F020         	goto	u8080
  8379  0041C8  EFE6  F020         	goto	u8081
  8380  0041CC                     u8081:
  8381  0041CC  EFF8  F020         	goto	l7891
  8382  0041D0                     u8080:
  8383  0041D0  1E23               	comf	(___aomod@divisor+7)^0,f,c
  8384  0041D2  1E22               	comf	(___aomod@divisor+6)^0,f,c
  8385  0041D4  1E21               	comf	(___aomod@divisor+5)^0,f,c
  8386  0041D6  1E20               	comf	(___aomod@divisor+4)^0,f,c
  8387  0041D8  1E1F               	comf	(___aomod@divisor+3)^0,f,c
  8388  0041DA  1E1E               	comf	(___aomod@divisor+2)^0,f,c
  8389  0041DC  1E1D               	comf	(___aomod@divisor+1)^0,f,c
  8390  0041DE  6C1C               	negf	___aomod@divisor^0,c
  8391  0041E0  0E00               	movlw	0
  8392  0041E2  221D               	addwfc	(___aomod@divisor+1)^0,f,c
  8393  0041E4  221E               	addwfc	(___aomod@divisor+2)^0,f,c
  8394  0041E6  221F               	addwfc	(___aomod@divisor+3)^0,f,c
  8395  0041E8  2220               	addwfc	(___aomod@divisor+4)^0,f,c
  8396  0041EA  2221               	addwfc	(___aomod@divisor+5)^0,f,c
  8397  0041EC  2222               	addwfc	(___aomod@divisor+6)^0,f,c
  8398  0041EE  2223               	addwfc	(___aomod@divisor+7)^0,f,c
  8399  0041F0                     l7891:
  8400  0041F0  501C               	movf	___aomod@divisor^0,w,c
  8401  0041F2  101D               	iorwf	(___aomod@divisor+1)^0,w,c
  8402  0041F4  101E               	iorwf	(___aomod@divisor+2)^0,w,c
  8403  0041F6  101F               	iorwf	(___aomod@divisor+3)^0,w,c
  8404  0041F8  1020               	iorwf	(___aomod@divisor+4)^0,w,c
  8405  0041FA  1021               	iorwf	(___aomod@divisor+5)^0,w,c
  8406  0041FC  1022               	iorwf	(___aomod@divisor+6)^0,w,c
  8407  0041FE  1023               	iorwf	(___aomod@divisor+7)^0,w,c
  8408  004200  B4D8               	btfsc	status,2,c
  8409  004202  EF05  F021         	goto	u8091
  8410  004206  EF07  F021         	goto	u8090
  8411  00420A                     u8091:
  8412  00420A  EF4F  F021         	goto	l7907
  8413  00420E                     u8090:
  8414  00420E  0E01               	movlw	1
  8415  004210  6E24               	movwf	___aomod@counter^0,c
  8416  004212  EF15  F021         	goto	l7897
  8417  004216                     l7895:
  8418  004216  90D8               	bcf	status,0,c
  8419  004218  361C               	rlcf	___aomod@divisor^0,f,c
  8420  00421A  361D               	rlcf	(___aomod@divisor+1)^0,f,c
  8421  00421C  361E               	rlcf	(___aomod@divisor+2)^0,f,c
  8422  00421E  361F               	rlcf	(___aomod@divisor+3)^0,f,c
  8423  004220  3620               	rlcf	(___aomod@divisor+4)^0,f,c
  8424  004222  3621               	rlcf	(___aomod@divisor+5)^0,f,c
  8425  004224  3622               	rlcf	(___aomod@divisor+6)^0,f,c
  8426  004226  3623               	rlcf	(___aomod@divisor+7)^0,f,c
  8427  004228  2A24               	incf	___aomod@counter^0,f,c
  8428  00422A                     l7897:
  8429  00422A  AE23               	btfss	(___aomod@divisor+7)^0,7,c
  8430  00422C  EF1A  F021         	goto	u8101
  8431  004230  EF1C  F021         	goto	u8100
  8432  004234                     u8101:
  8433  004234  EF0B  F021         	goto	l7895
  8434  004238                     u8100:
  8435  004238                     l7899:
  8436  004238  501C               	movf	___aomod@divisor^0,w,c
  8437  00423A  5C14               	subwf	___aomod@dividend^0,w,c
  8438  00423C  501D               	movf	(___aomod@divisor+1)^0,w,c
  8439  00423E  5815               	subwfb	(___aomod@dividend+1)^0,w,c
  8440  004240  501E               	movf	(___aomod@divisor+2)^0,w,c
  8441  004242  5816               	subwfb	(___aomod@dividend+2)^0,w,c
  8442  004244  501F               	movf	(___aomod@divisor+3)^0,w,c
  8443  004246  5817               	subwfb	(___aomod@dividend+3)^0,w,c
  8444  004248  5020               	movf	(___aomod@divisor+4)^0,w,c
  8445  00424A  5818               	subwfb	(___aomod@dividend+4)^0,w,c
  8446  00424C  5021               	movf	(___aomod@divisor+5)^0,w,c
  8447  00424E  5819               	subwfb	(___aomod@dividend+5)^0,w,c
  8448  004250  5022               	movf	(___aomod@divisor+6)^0,w,c
  8449  004252  581A               	subwfb	(___aomod@dividend+6)^0,w,c
  8450  004254  5023               	movf	(___aomod@divisor+7)^0,w,c
  8451  004256  581B               	subwfb	(___aomod@dividend+7)^0,w,c
  8452  004258  A0D8               	btfss	status,0,c
  8453  00425A  EF31  F021         	goto	u8111
  8454  00425E  EF33  F021         	goto	u8110
  8455  004262                     u8111:
  8456  004262  EF43  F021         	goto	l7903
  8457  004266                     u8110:
  8458  004266  501C               	movf	___aomod@divisor^0,w,c
  8459  004268  5E14               	subwf	___aomod@dividend^0,f,c
  8460  00426A  501D               	movf	(___aomod@divisor+1)^0,w,c
  8461  00426C  5A15               	subwfb	(___aomod@dividend+1)^0,f,c
  8462  00426E  501E               	movf	(___aomod@divisor+2)^0,w,c
  8463  004270  5A16               	subwfb	(___aomod@dividend+2)^0,f,c
  8464  004272  501F               	movf	(___aomod@divisor+3)^0,w,c
  8465  004274  5A17               	subwfb	(___aomod@dividend+3)^0,f,c
  8466  004276  5020               	movf	(___aomod@divisor+4)^0,w,c
  8467  004278  5A18               	subwfb	(___aomod@dividend+4)^0,f,c
  8468  00427A  5021               	movf	(___aomod@divisor+5)^0,w,c
  8469  00427C  5A19               	subwfb	(___aomod@dividend+5)^0,f,c
  8470  00427E  5022               	movf	(___aomod@divisor+6)^0,w,c
  8471  004280  5A1A               	subwfb	(___aomod@dividend+6)^0,f,c
  8472  004282  5023               	movf	(___aomod@divisor+7)^0,w,c
  8473  004284  5A1B               	subwfb	(___aomod@dividend+7)^0,f,c
  8474  004286                     l7903:
  8475  004286  90D8               	bcf	status,0,c
  8476  004288  3223               	rrcf	(___aomod@divisor+7)^0,f,c
  8477  00428A  3222               	rrcf	(___aomod@divisor+6)^0,f,c
  8478  00428C  3221               	rrcf	(___aomod@divisor+5)^0,f,c
  8479  00428E  3220               	rrcf	(___aomod@divisor+4)^0,f,c
  8480  004290  321F               	rrcf	(___aomod@divisor+3)^0,f,c
  8481  004292  321E               	rrcf	(___aomod@divisor+2)^0,f,c
  8482  004294  321D               	rrcf	(___aomod@divisor+1)^0,f,c
  8483  004296  321C               	rrcf	___aomod@divisor^0,f,c
  8484  004298  2E24               	decfsz	___aomod@counter^0,f,c
  8485  00429A  EF1C  F021         	goto	l7899
  8486  00429E                     l7907:
  8487  00429E  5025               	movf	___aomod@sign^0,w,c
  8488  0042A0  B4D8               	btfsc	status,2,c
  8489  0042A2  EF55  F021         	goto	u8121
  8490  0042A6  EF57  F021         	goto	u8120
  8491  0042AA                     u8121:
  8492  0042AA  EF67  F021         	goto	l7911
  8493  0042AE                     u8120:
  8494  0042AE  1E1B               	comf	(___aomod@dividend+7)^0,f,c
  8495  0042B0  1E1A               	comf	(___aomod@dividend+6)^0,f,c
  8496  0042B2  1E19               	comf	(___aomod@dividend+5)^0,f,c
  8497  0042B4  1E18               	comf	(___aomod@dividend+4)^0,f,c
  8498  0042B6  1E17               	comf	(___aomod@dividend+3)^0,f,c
  8499  0042B8  1E16               	comf	(___aomod@dividend+2)^0,f,c
  8500  0042BA  1E15               	comf	(___aomod@dividend+1)^0,f,c
  8501  0042BC  6C14               	negf	___aomod@dividend^0,c
  8502  0042BE  0E00               	movlw	0
  8503  0042C0  2215               	addwfc	(___aomod@dividend+1)^0,f,c
  8504  0042C2  2216               	addwfc	(___aomod@dividend+2)^0,f,c
  8505  0042C4  2217               	addwfc	(___aomod@dividend+3)^0,f,c
  8506  0042C6  2218               	addwfc	(___aomod@dividend+4)^0,f,c
  8507  0042C8  2219               	addwfc	(___aomod@dividend+5)^0,f,c
  8508  0042CA  221A               	addwfc	(___aomod@dividend+6)^0,f,c
  8509  0042CC  221B               	addwfc	(___aomod@dividend+7)^0,f,c
  8510  0042CE                     l7911:
  8511  0042CE  C014  F014         	movff	___aomod@dividend,?___aomod
  8512  0042D2  C015  F015         	movff	___aomod@dividend+1,?___aomod+1
  8513  0042D6  C016  F016         	movff	___aomod@dividend+2,?___aomod+2
  8514  0042DA  C017  F017         	movff	___aomod@dividend+3,?___aomod+3
  8515  0042DE  C018  F018         	movff	___aomod@dividend+4,?___aomod+4
  8516  0042E2  C019  F019         	movff	___aomod@dividend+5,?___aomod+5
  8517  0042E6  C01A  F01A         	movff	___aomod@dividend+6,?___aomod+6
  8518  0042EA  C01B  F01B         	movff	___aomod@dividend+7,?___aomod+7
  8519  0042EE  0012               	return		;funcret
  8520  0042F0                     __end_of___aomod:
  8521                           	callstack 0
  8522                           
  8523 ;; *************** function ___aodiv *****************
  8524 ;; Defined at:
  8525 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  8526 ;; Parameters:    Size  Location     Type
  8527 ;;  dividend        8   19[COMRAM] long long 
  8528 ;;  divisor         8   27[COMRAM] long long 
  8529 ;; Auto vars:     Size  Location     Type
  8530 ;;  quotient        8   37[COMRAM] long long 
  8531 ;;  sign            1   36[COMRAM] unsigned char 
  8532 ;;  counter         1   35[COMRAM] unsigned char 
  8533 ;; Return value:  Size  Location     Type
  8534 ;;                  8   19[COMRAM] long long 
  8535 ;; Registers used:
  8536 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8537 ;; Tracked objects:
  8538 ;;		On entry : 0/0
  8539 ;;		On exit  : 0/0
  8540 ;;		Unchanged: 0/0
  8541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8542 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8543 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8545 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8546 ;;Total ram usage:       26 bytes
  8547 ;; Hardware stack levels used: 1
  8548 ;; Hardware stack levels required when called: 8
  8549 ;; This function calls:
  8550 ;;		Nothing
  8551 ;; This function is called by:
  8552 ;;		_dtoa
  8553 ;; This function uses a non-reentrant model
  8554 ;;
  8555                           
  8556                           	psect	text32
  8557  003E7C                     __ptext32:
  8558                           	callstack 0
  8559  003E7C                     ___aodiv:
  8560                           	callstack 16
  8561  003E7C  0E00               	movlw	0
  8562  003E7E  6E25               	movwf	___aodiv@sign^0,c
  8563  003E80  BE23               	btfsc	(___aodiv@divisor+7)^0,7,c
  8564  003E82  EF47  F01F         	goto	u8000
  8565  003E86  EF45  F01F         	goto	u8001
  8566  003E8A                     u8001:
  8567  003E8A  EF59  F01F         	goto	l7843
  8568  003E8E                     u8000:
  8569  003E8E  1E23               	comf	(___aodiv@divisor+7)^0,f,c
  8570  003E90  1E22               	comf	(___aodiv@divisor+6)^0,f,c
  8571  003E92  1E21               	comf	(___aodiv@divisor+5)^0,f,c
  8572  003E94  1E20               	comf	(___aodiv@divisor+4)^0,f,c
  8573  003E96  1E1F               	comf	(___aodiv@divisor+3)^0,f,c
  8574  003E98  1E1E               	comf	(___aodiv@divisor+2)^0,f,c
  8575  003E9A  1E1D               	comf	(___aodiv@divisor+1)^0,f,c
  8576  003E9C  6C1C               	negf	___aodiv@divisor^0,c
  8577  003E9E  0E00               	movlw	0
  8578  003EA0  221D               	addwfc	(___aodiv@divisor+1)^0,f,c
  8579  003EA2  221E               	addwfc	(___aodiv@divisor+2)^0,f,c
  8580  003EA4  221F               	addwfc	(___aodiv@divisor+3)^0,f,c
  8581  003EA6  2220               	addwfc	(___aodiv@divisor+4)^0,f,c
  8582  003EA8  2221               	addwfc	(___aodiv@divisor+5)^0,f,c
  8583  003EAA  2222               	addwfc	(___aodiv@divisor+6)^0,f,c
  8584  003EAC  2223               	addwfc	(___aodiv@divisor+7)^0,f,c
  8585  003EAE  0E01               	movlw	1
  8586  003EB0  6E25               	movwf	___aodiv@sign^0,c
  8587  003EB2                     l7843:
  8588  003EB2  BE1B               	btfsc	(___aodiv@dividend+7)^0,7,c
  8589  003EB4  EF60  F01F         	goto	u8010
  8590  003EB8  EF5E  F01F         	goto	u8011
  8591  003EBC                     u8011:
  8592  003EBC  EF72  F01F         	goto	l7849
  8593  003EC0                     u8010:
  8594  003EC0  1E1B               	comf	(___aodiv@dividend+7)^0,f,c
  8595  003EC2  1E1A               	comf	(___aodiv@dividend+6)^0,f,c
  8596  003EC4  1E19               	comf	(___aodiv@dividend+5)^0,f,c
  8597  003EC6  1E18               	comf	(___aodiv@dividend+4)^0,f,c
  8598  003EC8  1E17               	comf	(___aodiv@dividend+3)^0,f,c
  8599  003ECA  1E16               	comf	(___aodiv@dividend+2)^0,f,c
  8600  003ECC  1E15               	comf	(___aodiv@dividend+1)^0,f,c
  8601  003ECE  6C14               	negf	___aodiv@dividend^0,c
  8602  003ED0  0E00               	movlw	0
  8603  003ED2  2215               	addwfc	(___aodiv@dividend+1)^0,f,c
  8604  003ED4  2216               	addwfc	(___aodiv@dividend+2)^0,f,c
  8605  003ED6  2217               	addwfc	(___aodiv@dividend+3)^0,f,c
  8606  003ED8  2218               	addwfc	(___aodiv@dividend+4)^0,f,c
  8607  003EDA  2219               	addwfc	(___aodiv@dividend+5)^0,f,c
  8608  003EDC  221A               	addwfc	(___aodiv@dividend+6)^0,f,c
  8609  003EDE  221B               	addwfc	(___aodiv@dividend+7)^0,f,c
  8610  003EE0  0E01               	movlw	1
  8611  003EE2  1A25               	xorwf	___aodiv@sign^0,f,c
  8612  003EE4                     l7849:
  8613  003EE4  EE20  F026         	lfsr	2,___aodiv@quotient
  8614  003EE8  0E07               	movlw	7
  8615  003EEA                     u8021:
  8616  003EEA  6ADE               	clrf	postinc2,c
  8617  003EEC  06E8               	decf	wreg,f,c
  8618  003EEE  E2FD               	bc	u8021
  8619  003EF0  501C               	movf	___aodiv@divisor^0,w,c
  8620  003EF2  101D               	iorwf	(___aodiv@divisor+1)^0,w,c
  8621  003EF4  101E               	iorwf	(___aodiv@divisor+2)^0,w,c
  8622  003EF6  101F               	iorwf	(___aodiv@divisor+3)^0,w,c
  8623  003EF8  1020               	iorwf	(___aodiv@divisor+4)^0,w,c
  8624  003EFA  1021               	iorwf	(___aodiv@divisor+5)^0,w,c
  8625  003EFC  1022               	iorwf	(___aodiv@divisor+6)^0,w,c
  8626  003EFE  1023               	iorwf	(___aodiv@divisor+7)^0,w,c
  8627  003F00  B4D8               	btfsc	status,2,c
  8628  003F02  EF85  F01F         	goto	u8031
  8629  003F06  EF87  F01F         	goto	u8030
  8630  003F0A                     u8031:
  8631  003F0A  EFD9  F01F         	goto	l7871
  8632  003F0E                     u8030:
  8633  003F0E  0E01               	movlw	1
  8634  003F10  6E24               	movwf	___aodiv@counter^0,c
  8635  003F12  EF95  F01F         	goto	l7857
  8636  003F16                     l7855:
  8637  003F16  90D8               	bcf	status,0,c
  8638  003F18  361C               	rlcf	___aodiv@divisor^0,f,c
  8639  003F1A  361D               	rlcf	(___aodiv@divisor+1)^0,f,c
  8640  003F1C  361E               	rlcf	(___aodiv@divisor+2)^0,f,c
  8641  003F1E  361F               	rlcf	(___aodiv@divisor+3)^0,f,c
  8642  003F20  3620               	rlcf	(___aodiv@divisor+4)^0,f,c
  8643  003F22  3621               	rlcf	(___aodiv@divisor+5)^0,f,c
  8644  003F24  3622               	rlcf	(___aodiv@divisor+6)^0,f,c
  8645  003F26  3623               	rlcf	(___aodiv@divisor+7)^0,f,c
  8646  003F28  2A24               	incf	___aodiv@counter^0,f,c
  8647  003F2A                     l7857:
  8648  003F2A  AE23               	btfss	(___aodiv@divisor+7)^0,7,c
  8649  003F2C  EF9A  F01F         	goto	u8041
  8650  003F30  EF9C  F01F         	goto	u8040
  8651  003F34                     u8041:
  8652  003F34  EF8B  F01F         	goto	l7855
  8653  003F38                     u8040:
  8654  003F38                     l7859:
  8655  003F38  90D8               	bcf	status,0,c
  8656  003F3A  3626               	rlcf	___aodiv@quotient^0,f,c
  8657  003F3C  3627               	rlcf	(___aodiv@quotient+1)^0,f,c
  8658  003F3E  3628               	rlcf	(___aodiv@quotient+2)^0,f,c
  8659  003F40  3629               	rlcf	(___aodiv@quotient+3)^0,f,c
  8660  003F42  362A               	rlcf	(___aodiv@quotient+4)^0,f,c
  8661  003F44  362B               	rlcf	(___aodiv@quotient+5)^0,f,c
  8662  003F46  362C               	rlcf	(___aodiv@quotient+6)^0,f,c
  8663  003F48  362D               	rlcf	(___aodiv@quotient+7)^0,f,c
  8664  003F4A  501C               	movf	___aodiv@divisor^0,w,c
  8665  003F4C  5C14               	subwf	___aodiv@dividend^0,w,c
  8666  003F4E  501D               	movf	(___aodiv@divisor+1)^0,w,c
  8667  003F50  5815               	subwfb	(___aodiv@dividend+1)^0,w,c
  8668  003F52  501E               	movf	(___aodiv@divisor+2)^0,w,c
  8669  003F54  5816               	subwfb	(___aodiv@dividend+2)^0,w,c
  8670  003F56  501F               	movf	(___aodiv@divisor+3)^0,w,c
  8671  003F58  5817               	subwfb	(___aodiv@dividend+3)^0,w,c
  8672  003F5A  5020               	movf	(___aodiv@divisor+4)^0,w,c
  8673  003F5C  5818               	subwfb	(___aodiv@dividend+4)^0,w,c
  8674  003F5E  5021               	movf	(___aodiv@divisor+5)^0,w,c
  8675  003F60  5819               	subwfb	(___aodiv@dividend+5)^0,w,c
  8676  003F62  5022               	movf	(___aodiv@divisor+6)^0,w,c
  8677  003F64  581A               	subwfb	(___aodiv@dividend+6)^0,w,c
  8678  003F66  5023               	movf	(___aodiv@divisor+7)^0,w,c
  8679  003F68  581B               	subwfb	(___aodiv@dividend+7)^0,w,c
  8680  003F6A  A0D8               	btfss	status,0,c
  8681  003F6C  EFBA  F01F         	goto	u8051
  8682  003F70  EFBC  F01F         	goto	u8050
  8683  003F74                     u8051:
  8684  003F74  EFCD  F01F         	goto	l7867
  8685  003F78                     u8050:
  8686  003F78  501C               	movf	___aodiv@divisor^0,w,c
  8687  003F7A  5E14               	subwf	___aodiv@dividend^0,f,c
  8688  003F7C  501D               	movf	(___aodiv@divisor+1)^0,w,c
  8689  003F7E  5A15               	subwfb	(___aodiv@dividend+1)^0,f,c
  8690  003F80  501E               	movf	(___aodiv@divisor+2)^0,w,c
  8691  003F82  5A16               	subwfb	(___aodiv@dividend+2)^0,f,c
  8692  003F84  501F               	movf	(___aodiv@divisor+3)^0,w,c
  8693  003F86  5A17               	subwfb	(___aodiv@dividend+3)^0,f,c
  8694  003F88  5020               	movf	(___aodiv@divisor+4)^0,w,c
  8695  003F8A  5A18               	subwfb	(___aodiv@dividend+4)^0,f,c
  8696  003F8C  5021               	movf	(___aodiv@divisor+5)^0,w,c
  8697  003F8E  5A19               	subwfb	(___aodiv@dividend+5)^0,f,c
  8698  003F90  5022               	movf	(___aodiv@divisor+6)^0,w,c
  8699  003F92  5A1A               	subwfb	(___aodiv@dividend+6)^0,f,c
  8700  003F94  5023               	movf	(___aodiv@divisor+7)^0,w,c
  8701  003F96  5A1B               	subwfb	(___aodiv@dividend+7)^0,f,c
  8702  003F98  8026               	bsf	___aodiv@quotient^0,0,c
  8703  003F9A                     l7867:
  8704  003F9A  90D8               	bcf	status,0,c
  8705  003F9C  3223               	rrcf	(___aodiv@divisor+7)^0,f,c
  8706  003F9E  3222               	rrcf	(___aodiv@divisor+6)^0,f,c
  8707  003FA0  3221               	rrcf	(___aodiv@divisor+5)^0,f,c
  8708  003FA2  3220               	rrcf	(___aodiv@divisor+4)^0,f,c
  8709  003FA4  321F               	rrcf	(___aodiv@divisor+3)^0,f,c
  8710  003FA6  321E               	rrcf	(___aodiv@divisor+2)^0,f,c
  8711  003FA8  321D               	rrcf	(___aodiv@divisor+1)^0,f,c
  8712  003FAA  321C               	rrcf	___aodiv@divisor^0,f,c
  8713  003FAC  2E24               	decfsz	___aodiv@counter^0,f,c
  8714  003FAE  EF9C  F01F         	goto	l7859
  8715  003FB2                     l7871:
  8716  003FB2  5025               	movf	___aodiv@sign^0,w,c
  8717  003FB4  B4D8               	btfsc	status,2,c
  8718  003FB6  EFDF  F01F         	goto	u8061
  8719  003FBA  EFE1  F01F         	goto	u8060
  8720  003FBE                     u8061:
  8721  003FBE  EFF1  F01F         	goto	l7875
  8722  003FC2                     u8060:
  8723  003FC2  1E2D               	comf	(___aodiv@quotient+7)^0,f,c
  8724  003FC4  1E2C               	comf	(___aodiv@quotient+6)^0,f,c
  8725  003FC6  1E2B               	comf	(___aodiv@quotient+5)^0,f,c
  8726  003FC8  1E2A               	comf	(___aodiv@quotient+4)^0,f,c
  8727  003FCA  1E29               	comf	(___aodiv@quotient+3)^0,f,c
  8728  003FCC  1E28               	comf	(___aodiv@quotient+2)^0,f,c
  8729  003FCE  1E27               	comf	(___aodiv@quotient+1)^0,f,c
  8730  003FD0  6C26               	negf	___aodiv@quotient^0,c
  8731  003FD2  0E00               	movlw	0
  8732  003FD4  2227               	addwfc	(___aodiv@quotient+1)^0,f,c
  8733  003FD6  2228               	addwfc	(___aodiv@quotient+2)^0,f,c
  8734  003FD8  2229               	addwfc	(___aodiv@quotient+3)^0,f,c
  8735  003FDA  222A               	addwfc	(___aodiv@quotient+4)^0,f,c
  8736  003FDC  222B               	addwfc	(___aodiv@quotient+5)^0,f,c
  8737  003FDE  222C               	addwfc	(___aodiv@quotient+6)^0,f,c
  8738  003FE0  222D               	addwfc	(___aodiv@quotient+7)^0,f,c
  8739  003FE2                     l7875:
  8740  003FE2  C026  F014         	movff	___aodiv@quotient,?___aodiv
  8741  003FE6  C027  F015         	movff	___aodiv@quotient+1,?___aodiv+1
  8742  003FEA  C028  F016         	movff	___aodiv@quotient+2,?___aodiv+2
  8743  003FEE  C029  F017         	movff	___aodiv@quotient+3,?___aodiv+3
  8744  003FF2  C02A  F018         	movff	___aodiv@quotient+4,?___aodiv+4
  8745  003FF6  C02B  F019         	movff	___aodiv@quotient+5,?___aodiv+5
  8746  003FFA  C02C  F01A         	movff	___aodiv@quotient+6,?___aodiv+6
  8747  003FFE  C02D  F01B         	movff	___aodiv@quotient+7,?___aodiv+7
  8748  004002  0012               	return		;funcret
  8749  004004                     __end_of___aodiv:
  8750                           	callstack 0
  8751                           
  8752 ;; *************** function ___lwdiv *****************
  8753 ;; Defined at:
  8754 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lwdiv.c"
  8755 ;; Parameters:    Size  Location     Type
  8756 ;;  dividend        2   19[COMRAM] unsigned int 
  8757 ;;  divisor         2   21[COMRAM] unsigned int 
  8758 ;; Auto vars:     Size  Location     Type
  8759 ;;  quotient        2   24[COMRAM] unsigned int 
  8760 ;;  counter         1   23[COMRAM] unsigned char 
  8761 ;; Return value:  Size  Location     Type
  8762 ;;                  2   19[COMRAM] unsigned int 
  8763 ;; Registers used:
  8764 ;;		wreg, status,2, status,0
  8765 ;; Tracked objects:
  8766 ;;		On entry : 0/0
  8767 ;;		On exit  : 0/0
  8768 ;;		Unchanged: 0/0
  8769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8770 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8771 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8773 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8774 ;;Total ram usage:        7 bytes
  8775 ;; Hardware stack levels used: 1
  8776 ;; Hardware stack levels required when called: 8
  8777 ;; This function calls:
  8778 ;;		Nothing
  8779 ;; This function is called by:
  8780 ;;		_checkCurveCount
  8781 ;; This function uses a non-reentrant model
  8782 ;;
  8783                           
  8784                           	psect	text33
  8785  005694                     __ptext33:
  8786                           	callstack 0
  8787  005694                     ___lwdiv:
  8788                           	callstack 20
  8789  005694  0E00               	movlw	0
  8790  005696  6E1A               	movwf	(___lwdiv@quotient+1)^0,c
  8791  005698  0E00               	movlw	0
  8792  00569A  6E19               	movwf	___lwdiv@quotient^0,c
  8793  00569C  5016               	movf	___lwdiv@divisor^0,w,c
  8794  00569E  1017               	iorwf	(___lwdiv@divisor+1)^0,w,c
  8795  0056A0  B4D8               	btfsc	status,2,c
  8796  0056A2  EF55  F02B         	goto	u10331
  8797  0056A6  EF57  F02B         	goto	u10330
  8798  0056AA                     u10331:
  8799  0056AA  EF7F  F02B         	goto	l1888
  8800  0056AE                     u10330:
  8801  0056AE  0E01               	movlw	1
  8802  0056B0  6E18               	movwf	___lwdiv@counter^0,c
  8803  0056B2  EF5F  F02B         	goto	l9141
  8804  0056B6                     l9139:
  8805  0056B6  90D8               	bcf	status,0,c
  8806  0056B8  3616               	rlcf	___lwdiv@divisor^0,f,c
  8807  0056BA  3617               	rlcf	(___lwdiv@divisor+1)^0,f,c
  8808  0056BC  2A18               	incf	___lwdiv@counter^0,f,c
  8809  0056BE                     l9141:
  8810  0056BE  AE17               	btfss	(___lwdiv@divisor+1)^0,7,c
  8811  0056C0  EF64  F02B         	goto	u10341
  8812  0056C4  EF66  F02B         	goto	u10340
  8813  0056C8                     u10341:
  8814  0056C8  EF5B  F02B         	goto	l9139
  8815  0056CC                     u10340:
  8816  0056CC                     l9143:
  8817  0056CC  90D8               	bcf	status,0,c
  8818  0056CE  3619               	rlcf	___lwdiv@quotient^0,f,c
  8819  0056D0  361A               	rlcf	(___lwdiv@quotient+1)^0,f,c
  8820  0056D2  5016               	movf	___lwdiv@divisor^0,w,c
  8821  0056D4  5C14               	subwf	___lwdiv@dividend^0,w,c
  8822  0056D6  5017               	movf	(___lwdiv@divisor+1)^0,w,c
  8823  0056D8  5815               	subwfb	(___lwdiv@dividend+1)^0,w,c
  8824  0056DA  A0D8               	btfss	status,0,c
  8825  0056DC  EF72  F02B         	goto	u10351
  8826  0056E0  EF74  F02B         	goto	u10350
  8827  0056E4                     u10351:
  8828  0056E4  EF79  F02B         	goto	l9151
  8829  0056E8                     u10350:
  8830  0056E8  5016               	movf	___lwdiv@divisor^0,w,c
  8831  0056EA  5E14               	subwf	___lwdiv@dividend^0,f,c
  8832  0056EC  5017               	movf	(___lwdiv@divisor+1)^0,w,c
  8833  0056EE  5A15               	subwfb	(___lwdiv@dividend+1)^0,f,c
  8834  0056F0  8019               	bsf	___lwdiv@quotient^0,0,c
  8835  0056F2                     l9151:
  8836  0056F2  90D8               	bcf	status,0,c
  8837  0056F4  3217               	rrcf	(___lwdiv@divisor+1)^0,f,c
  8838  0056F6  3216               	rrcf	___lwdiv@divisor^0,f,c
  8839  0056F8  2E18               	decfsz	___lwdiv@counter^0,f,c
  8840  0056FA  EF66  F02B         	goto	l9143
  8841  0056FE                     l1888:
  8842  0056FE  C019  F014         	movff	___lwdiv@quotient,?___lwdiv
  8843  005702  C01A  F015         	movff	___lwdiv@quotient+1,?___lwdiv+1
  8844  005706  0012               	return		;funcret
  8845  005708                     __end_of___lwdiv:
  8846                           	callstack 0
  8847                           
  8848 ;; *************** function _checkBatt *****************
  8849 ;; Defined at:
  8850 ;;		line 90 in file "main.c"
  8851 ;; Parameters:    Size  Location     Type
  8852 ;;		None
  8853 ;; Auto vars:     Size  Location     Type
  8854 ;;		None
  8855 ;; Return value:  Size  Location     Type
  8856 ;;                  1    wreg      _Bool 
  8857 ;; Registers used:
  8858 ;;		wreg, status,2, status,0, cstack
  8859 ;; Tracked objects:
  8860 ;;		On entry : 0/0
  8861 ;;		On exit  : 0/0
  8862 ;;		Unchanged: 0/0
  8863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8867 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8868 ;;Total ram usage:        0 bytes
  8869 ;; Hardware stack levels used: 1
  8870 ;; Hardware stack levels required when called: 10
  8871 ;; This function calls:
  8872 ;;		___flge
  8873 ;;		___xxtofl
  8874 ;;		_getBatteryVoltage
  8875 ;;		_setSteering
  8876 ;; This function is called by:
  8877 ;;		_loop
  8878 ;; This function uses a non-reentrant model
  8879 ;;
  8880                           
  8881                           	psect	text34
  8882  005602                     __ptext34:
  8883                           	callstack 0
  8884  005602                     _checkBatt:
  8885                           	callstack 19
  8886  005602                     
  8887                           ;main.c: 91:     ++battCheckCount;
  8888  005602  0101               	movlb	1	; () banked
  8889  005604  4B32               	infsnz	_battCheckCount& (0+255),f,b
  8890  005606  2B33               	incf	(_battCheckCount+1)& (0+255),f,b
  8891  005608                     
  8892                           ; BSR set to: 1
  8893                           ;main.c: 92:     if (battCheckCount > (500)) {
  8894  005608  0EF5               	movlw	245
  8895  00560A  5D32               	subwf	_battCheckCount& (0+255),w,b
  8896  00560C  0E01               	movlw	1
  8897  00560E  5933               	subwfb	(_battCheckCount+1)& (0+255),w,b
  8898  005610  A0D8               	btfss	status,0,c
  8899  005612  EF0D  F02B         	goto	u10391
  8900  005616  EF0F  F02B         	goto	u10390
  8901  00561A                     u10391:
  8902  00561A  EF48  F02B         	goto	l9201
  8903  00561E                     u10390:
  8904  00561E                     
  8905                           ; BSR set to: 1
  8906                           ;main.c: 93:         battCheckCount = 0;
  8907  00561E  0E00               	movlw	0
  8908  005620  6F33               	movwf	(_battCheckCount+1)& (0+255),b
  8909  005622  0E00               	movlw	0
  8910  005624  6F32               	movwf	_battCheckCount& (0+255),b
  8911  005626                     
  8912                           ; BSR set to: 1
  8913                           ;main.c: 94:         getBatteryVoltage();
  8914  005626  EC1B  F031         	call	_getBatteryVoltage	;wreg free
  8915  00562A                     
  8916                           ;main.c: 96:         if (BatteryVolt < (7.4) * 409.6) {
  8917  00562A  C12A  F01C         	movff	_BatteryVolt,___xxtofl@val
  8918  00562E  C12B  F01D         	movff	_BatteryVolt+1,___xxtofl@val+1
  8919  005632  6A1E               	clrf	(___xxtofl@val+2)^0,c
  8920  005634  6A1F               	clrf	(___xxtofl@val+3)^0,c
  8921  005636  0E00               	movlw	0
  8922  005638  EC64  F01E         	call	___xxtofl
  8923  00563C  C01C  F06D         	movff	?___xxtofl,___flge@ff1
  8924  005640  C01D  F06E         	movff	?___xxtofl+1,___flge@ff1+1
  8925  005644  C01E  F06F         	movff	?___xxtofl+2,___flge@ff1+2
  8926  005648  C01F  F070         	movff	?___xxtofl+3,___flge@ff1+3
  8927  00564C  0EA4               	movlw	164
  8928  00564E  0100               	movlb	0	; () banked
  8929  005650  6F71               	movwf	___flge@ff2& (0+255),b
  8930  005652  0E70               	movlw	112
  8931  005654  6F72               	movwf	(___flge@ff2+1)& (0+255),b
  8932  005656  0E3D               	movlw	61
  8933  005658  6F73               	movwf	(___flge@ff2+2)& (0+255),b
  8934  00565A  0E45               	movlw	69
  8935  00565C  6F74               	movwf	(___flge@ff2+3)& (0+255),b
  8936  00565E  EC62  F024         	call	___flge	;wreg free
  8937  005662  0100               	movlb	0	; () banked
  8938  005664  B0D8               	btfsc	status,0,c
  8939  005666  EF37  F02B         	goto	u10401
  8940  00566A  EF39  F02B         	goto	u10400
  8941  00566E                     u10401:
  8942  00566E  EF48  F02B         	goto	l9201
  8943  005672                     u10400:
  8944  005672                     
  8945                           ; BSR set to: 0
  8946                           ;main.c: 97:             setSpeed = 0;
  8947  005672  0E00               	movlw	0
  8948  005674  6FF0               	movwf	(_setSpeed+1)& (0+255),b
  8949  005676  0E00               	movlw	0
  8950  005678  6FEF               	movwf	_setSpeed& (0+255),b
  8951  00567A                     
  8952                           ; BSR set to: 0
  8953                           ;main.c: 98:             setSteering(0, Front);
  8954  00567A  0E00               	movlw	0
  8955  00567C  6F84               	movwf	(setSteering@steering+1)& (0+255),b
  8956  00567E  0E00               	movlw	0
  8957  005680  6F83               	movwf	setSteering@steering& (0+255),b
  8958  005682  0E03               	movlw	3
  8959  005684  6F85               	movwf	setSteering@steeringMode& (0+255),b
  8960  005686  EC78  F01C         	call	_setSteering	;wreg free
  8961  00568A                     
  8962                           ;main.c: 99:             return 1;
  8963  00568A  0E01               	movlw	1
  8964  00568C  EF49  F02B         	goto	l1263
  8965  005690                     l9201:
  8966                           
  8967                           ;main.c: 102:     return 0;
  8968  005690  0E00               	movlw	0
  8969  005692                     l1263:
  8970  005692  0012               	return		;funcret
  8971  005694                     __end_of_checkBatt:
  8972                           	callstack 0
  8973                           
  8974 ;; *************** function _getBatteryVoltage *****************
  8975 ;; Defined at:
  8976 ;;		line 85 in file "main.c"
  8977 ;; Parameters:    Size  Location     Type
  8978 ;;		None
  8979 ;; Auto vars:     Size  Location     Type
  8980 ;;		None
  8981 ;; Return value:  Size  Location     Type
  8982 ;;                  1    wreg      void 
  8983 ;; Registers used:
  8984 ;;		wreg, status,2, status,0, cstack
  8985 ;; Tracked objects:
  8986 ;;		On entry : 0/0
  8987 ;;		On exit  : 0/0
  8988 ;;		Unchanged: 0/0
  8989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8993 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8994 ;;Total ram usage:        0 bytes
  8995 ;; Hardware stack levels used: 1
  8996 ;; Hardware stack levels required when called: 9
  8997 ;; This function calls:
  8998 ;;		_ADCC_GetSingleConversion
  8999 ;; This function is called by:
  9000 ;;		_loop
  9001 ;;		_checkBatt
  9002 ;; This function uses a non-reentrant model
  9003 ;;
  9004                           
  9005                           	psect	text35
  9006  006236                     __ptext35:
  9007                           	callstack 0
  9008  006236                     _getBatteryVoltage:
  9009                           	callstack 20
  9010  006236                     
  9011                           ;main.c: 86:     BatteryVolt = ADCC_GetSingleConversion(aiBatt);
  9012  006236  0E22               	movlw	34
  9013  006238  EC7E  F02F         	call	_ADCC_GetSingleConversion
  9014  00623C  C014  F12A         	movff	?_ADCC_GetSingleConversion,_BatteryVolt
  9015  006240  C015  F12B         	movff	?_ADCC_GetSingleConversion+1,_BatteryVolt+1
  9016  006244  0012               	return		;funcret
  9017  006246                     __end_of_getBatteryVoltage:
  9018                           	callstack 0
  9019                           
  9020 ;; *************** function _ADCC_GetSingleConversion *****************
  9021 ;; Defined at:
  9022 ;;		line 137 in file "mcc_generated_files/adcc.c"
  9023 ;; Parameters:    Size  Location     Type
  9024 ;;  channel         1    wreg     enum E16058
  9025 ;; Auto vars:     Size  Location     Type
  9026 ;;  channel         1   23[COMRAM] enum E16058
  9027 ;; Return value:  Size  Location     Type
  9028 ;;                  2   19[COMRAM] unsigned short 
  9029 ;; Registers used:
  9030 ;;		wreg, status,2, status,0
  9031 ;; Tracked objects:
  9032 ;;		On entry : 0/0
  9033 ;;		On exit  : 0/0
  9034 ;;		Unchanged: 0/0
  9035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9036 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9037 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9038 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9039 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9040 ;;Total ram usage:        5 bytes
  9041 ;; Hardware stack levels used: 1
  9042 ;; Hardware stack levels required when called: 8
  9043 ;; This function calls:
  9044 ;;		Nothing
  9045 ;; This function is called by:
  9046 ;;		_getBatteryVoltage
  9047 ;; This function uses a non-reentrant model
  9048 ;;
  9049                           
  9050                           	psect	text36
  9051  005EFC                     __ptext36:
  9052                           	callstack 0
  9053  005EFC                     _ADCC_GetSingleConversion:
  9054                           	callstack 20
  9055                           
  9056                           ;incstack = 0
  9057                           ;ADCC_GetSingleConversion@channel stored from wreg
  9058  005EFC  6E18               	movwf	ADCC_GetSingleConversion@channel^0,c
  9059  005EFE                     
  9060                           ;mcc_generated_files/adcc.c: 137: adc_result_t ADCC_GetSingleConversion(adcc_channel_t c
      +                          hannel);mcc_generated_files/adcc.c: 138: {;mcc_generated_files/adcc.c: 140:     ADPCH = 
      +                          channel;
  9061  005EFE  0060  F063  FEF1   	movff	ADCC_GetSingleConversion@channel,16113	;volatile
  9062  005F04                     
  9063                           ;mcc_generated_files/adcc.c: 143:     ADCON0bits.ADON = 1;
  9064  005F04  013E               	movlb	62	; () banked
  9065  005F06  8FF8               	bsf	248,7,b	;volatile
  9066  005F08                     
  9067                           ; BSR set to: 62
  9068                           ;mcc_generated_files/adcc.c: 146:     ADCON0bits.ADCONT = 0;
  9069  005F08  9DF8               	bcf	248,6,b	;volatile
  9070  005F0A                     
  9071                           ; BSR set to: 62
  9072                           ;mcc_generated_files/adcc.c: 149:     ADCON0bits.ADGO = 1;
  9073  005F0A  81F8               	bsf	248,0,b	;volatile
  9074  005F0C                     l1054:
  9075                           
  9076                           ; BSR set to: 62
  9077                           ;mcc_generated_files/adcc.c: 153:     while (ADCON0bits.ADGO)
  9078  005F0C  B1F8               	btfsc	248,0,b	;volatile
  9079  005F0E  EF8B  F02F         	goto	u6411
  9080  005F12  EF8D  F02F         	goto	u6410
  9081  005F16                     u6411:
  9082  005F16  EF86  F02F         	goto	l1054
  9083  005F1A                     u6410:
  9084  005F1A                     
  9085                           ; BSR set to: 62
  9086                           ;mcc_generated_files/adcc.c: 159:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  9087  005F1A  51F0               	movf	240,w,b	;volatile
  9088  005F1C  6E17               	movwf	(??_ADCC_GetSingleConversion+1)^0,c
  9089  005F1E  6A16               	clrf	??_ADCC_GetSingleConversion^0,c
  9090  005F20  51EF               	movf	239,w,b	;volatile
  9091  005F22  2416               	addwf	??_ADCC_GetSingleConversion^0,w,c
  9092  005F24  6E14               	movwf	?_ADCC_GetSingleConversion^0,c
  9093  005F26  0E00               	movlw	0
  9094  005F28  2017               	addwfc	(??_ADCC_GetSingleConversion+1)^0,w,c
  9095  005F2A  6E15               	movwf	(?_ADCC_GetSingleConversion+1)^0,c
  9096  005F2C                     
  9097                           ; BSR set to: 62
  9098  005F2C  0012               	return		;funcret
  9099  005F2E                     __end_of_ADCC_GetSingleConversion:
  9100                           	callstack 0
  9101                           
  9102 ;; *************** function ___flge *****************
  9103 ;; Defined at:
  9104 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  9105 ;; Parameters:    Size  Location     Type
  9106 ;;  ff1             4   13[BANK0 ] unsigned short 
  9107 ;;  ff2             4   17[BANK0 ] unsigned short 
  9108 ;; Auto vars:     Size  Location     Type
  9109 ;;		None
  9110 ;; Return value:  Size  Location     Type
  9111 ;;		None               void
  9112 ;; Registers used:
  9113 ;;		wreg, status,2, status,0
  9114 ;; Tracked objects:
  9115 ;;		On entry : 0/0
  9116 ;;		On exit  : 0/0
  9117 ;;		Unchanged: 0/0
  9118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9119 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9121 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9122 ;;      Totals:         4       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9123 ;;Total ram usage:       12 bytes
  9124 ;; Hardware stack levels used: 1
  9125 ;; Hardware stack levels required when called: 8
  9126 ;; This function calls:
  9127 ;;		Nothing
  9128 ;; This function is called by:
  9129 ;;		_loop
  9130 ;;		_checkBatt
  9131 ;;		_efgtoa
  9132 ;; This function uses a non-reentrant model
  9133 ;;
  9134                           
  9135                           	psect	text37
  9136  0048C4                     __ptext37:
  9137                           	callstack 0
  9138  0048C4                     ___flge:
  9139                           	callstack 16
  9140  0048C4  0E00               	movlw	0
  9141  0048C6  0100               	movlb	0	; () banked
  9142  0048C8  156D               	andwf	___flge@ff1& (0+255),w,b
  9143  0048CA  6E36               	movwf	??___flge^0,c
  9144  0048CC  0E00               	movlw	0
  9145  0048CE  156E               	andwf	(___flge@ff1+1)& (0+255),w,b
  9146  0048D0  6E37               	movwf	(??___flge+1)^0,c
  9147  0048D2  0E80               	movlw	128
  9148  0048D4  156F               	andwf	(___flge@ff1+2)& (0+255),w,b
  9149  0048D6  6E38               	movwf	(??___flge+2)^0,c
  9150  0048D8  0E7F               	movlw	127
  9151  0048DA  1570               	andwf	(___flge@ff1+3)& (0+255),w,b
  9152  0048DC  6E39               	movwf	(??___flge+3)^0,c
  9153  0048DE  5036               	movf	??___flge^0,w,c
  9154  0048E0  1037               	iorwf	(??___flge+1)^0,w,c
  9155  0048E2  1038               	iorwf	(??___flge+2)^0,w,c
  9156  0048E4  1039               	iorwf	(??___flge+3)^0,w,c
  9157  0048E6  A4D8               	btfss	status,2,c
  9158  0048E8  EF78  F024         	goto	u8701
  9159  0048EC  EF7A  F024         	goto	u8700
  9160  0048F0                     u8701:
  9161  0048F0  EF82  F024         	goto	l8289
  9162  0048F4                     u8700:
  9163  0048F4                     
  9164                           ; BSR set to: 0
  9165  0048F4  0E00               	movlw	0
  9166  0048F6  6F6D               	movwf	___flge@ff1& (0+255),b
  9167  0048F8  0E00               	movlw	0
  9168  0048FA  6F6E               	movwf	(___flge@ff1+1)& (0+255),b
  9169  0048FC  0E00               	movlw	0
  9170  0048FE  6F6F               	movwf	(___flge@ff1+2)& (0+255),b
  9171  004900  0E00               	movlw	0
  9172  004902  6F70               	movwf	(___flge@ff1+3)& (0+255),b
  9173  004904                     l8289:
  9174                           
  9175                           ; BSR set to: 0
  9176  004904  0E00               	movlw	0
  9177  004906  1571               	andwf	___flge@ff2& (0+255),w,b
  9178  004908  6E36               	movwf	??___flge^0,c
  9179  00490A  0E00               	movlw	0
  9180  00490C  1572               	andwf	(___flge@ff2+1)& (0+255),w,b
  9181  00490E  6E37               	movwf	(??___flge+1)^0,c
  9182  004910  0E80               	movlw	128
  9183  004912  1573               	andwf	(___flge@ff2+2)& (0+255),w,b
  9184  004914  6E38               	movwf	(??___flge+2)^0,c
  9185  004916  0E7F               	movlw	127
  9186  004918  1574               	andwf	(___flge@ff2+3)& (0+255),w,b
  9187  00491A  6E39               	movwf	(??___flge+3)^0,c
  9188  00491C  5036               	movf	??___flge^0,w,c
  9189  00491E  1037               	iorwf	(??___flge+1)^0,w,c
  9190  004920  1038               	iorwf	(??___flge+2)^0,w,c
  9191  004922  1039               	iorwf	(??___flge+3)^0,w,c
  9192  004924  A4D8               	btfss	status,2,c
  9193  004926  EF97  F024         	goto	u8711
  9194  00492A  EF99  F024         	goto	u8710
  9195  00492E                     u8711:
  9196  00492E  EFA1  F024         	goto	l8293
  9197  004932                     u8710:
  9198  004932                     
  9199                           ; BSR set to: 0
  9200  004932  0E00               	movlw	0
  9201  004934  6F71               	movwf	___flge@ff2& (0+255),b
  9202  004936  0E00               	movlw	0
  9203  004938  6F72               	movwf	(___flge@ff2+1)& (0+255),b
  9204  00493A  0E00               	movlw	0
  9205  00493C  6F73               	movwf	(___flge@ff2+2)& (0+255),b
  9206  00493E  0E00               	movlw	0
  9207  004940  6F74               	movwf	(___flge@ff2+3)& (0+255),b
  9208  004942                     l8293:
  9209                           
  9210                           ; BSR set to: 0
  9211  004942  AF70               	btfss	(___flge@ff1+3)& (0+255),7,b
  9212  004944  EFA6  F024         	goto	u8721
  9213  004948  EFA8  F024         	goto	u8720
  9214  00494C                     u8721:
  9215  00494C  EFB1  F024         	goto	l8297
  9216  004950                     u8720:
  9217  004950                     
  9218                           ; BSR set to: 0
  9219  004950  6D6D               	negf	___flge@ff1& (0+255),b
  9220  004952  1F6E               	comf	(___flge@ff1+1)& (0+255),f,b
  9221  004954  B0D8               	btfsc	status,0,c
  9222  004956  2B6E               	incf	(___flge@ff1+1)& (0+255),f,b
  9223  004958  1F6F               	comf	(___flge@ff1+2)& (0+255),f,b
  9224  00495A  B0D8               	btfsc	status,0,c
  9225  00495C  2B6F               	incf	(___flge@ff1+2)& (0+255),f,b
  9226  00495E  0E80               	movlw	128
  9227  004960  5770               	subfwb	(___flge@ff1+3)& (0+255),f,b
  9228  004962                     l8297:
  9229                           
  9230                           ; BSR set to: 0
  9231  004962  AF74               	btfss	(___flge@ff2+3)& (0+255),7,b
  9232  004964  EFB6  F024         	goto	u8731
  9233  004968  EFB8  F024         	goto	u8730
  9234  00496C                     u8731:
  9235  00496C  EFC1  F024         	goto	l1662
  9236  004970                     u8730:
  9237  004970                     
  9238                           ; BSR set to: 0
  9239  004970  6D71               	negf	___flge@ff2& (0+255),b
  9240  004972  1F72               	comf	(___flge@ff2+1)& (0+255),f,b
  9241  004974  B0D8               	btfsc	status,0,c
  9242  004976  2B72               	incf	(___flge@ff2+1)& (0+255),f,b
  9243  004978  1F73               	comf	(___flge@ff2+2)& (0+255),f,b
  9244  00497A  B0D8               	btfsc	status,0,c
  9245  00497C  2B73               	incf	(___flge@ff2+2)& (0+255),f,b
  9246  00497E  0E80               	movlw	128
  9247  004980  5774               	subfwb	(___flge@ff2+3)& (0+255),f,b
  9248  004982                     l1662:
  9249                           
  9250                           ; BSR set to: 0
  9251  004982  0E00               	movlw	0
  9252  004984  1B6D               	xorwf	___flge@ff1& (0+255),f,b
  9253  004986  0E00               	movlw	0
  9254  004988  1B6E               	xorwf	(___flge@ff1+1)& (0+255),f,b
  9255  00498A  0E00               	movlw	0
  9256  00498C  1B6F               	xorwf	(___flge@ff1+2)& (0+255),f,b
  9257  00498E  0E80               	movlw	128
  9258  004990  1B70               	xorwf	(___flge@ff1+3)& (0+255),f,b
  9259  004992  0E00               	movlw	0
  9260  004994  1B71               	xorwf	___flge@ff2& (0+255),f,b
  9261  004996  0E00               	movlw	0
  9262  004998  1B72               	xorwf	(___flge@ff2+1)& (0+255),f,b
  9263  00499A  0E00               	movlw	0
  9264  00499C  1B73               	xorwf	(___flge@ff2+2)& (0+255),f,b
  9265  00499E  0E80               	movlw	128
  9266  0049A0  1B74               	xorwf	(___flge@ff2+3)& (0+255),f,b
  9267  0049A2  5171               	movf	___flge@ff2& (0+255),w,b
  9268  0049A4  5D6D               	subwf	___flge@ff1& (0+255),w,b
  9269  0049A6  5172               	movf	(___flge@ff2+1)& (0+255),w,b
  9270  0049A8  596E               	subwfb	(___flge@ff1+1)& (0+255),w,b
  9271  0049AA  5173               	movf	(___flge@ff2+2)& (0+255),w,b
  9272  0049AC  596F               	subwfb	(___flge@ff1+2)& (0+255),w,b
  9273  0049AE  5174               	movf	(___flge@ff2+3)& (0+255),w,b
  9274  0049B0  5970               	subwfb	(___flge@ff1+3)& (0+255),w,b
  9275  0049B2  B0D8               	btfsc	status,0,c
  9276  0049B4  EFDE  F024         	goto	u8741
  9277  0049B8  EFE0  F024         	goto	u8740
  9278  0049BC                     u8741:
  9279  0049BC  EFE3  F024         	goto	l8303
  9280  0049C0                     u8740:
  9281  0049C0                     
  9282                           ; BSR set to: 0
  9283  0049C0  90D8               	bcf	status,0,c
  9284  0049C2  EFE4  F024         	goto	l1667
  9285  0049C6                     l8303:
  9286                           
  9287                           ; BSR set to: 0
  9288  0049C6  80D8               	bsf	status,0,c
  9289  0049C8                     l1667:
  9290                           
  9291                           ; BSR set to: 0
  9292  0049C8  0012               	return		;funcret
  9293  0049CA                     __end_of___flge:
  9294                           	callstack 0
  9295                           
  9296 ;; *************** function _calcSteering *****************
  9297 ;; Defined at:
  9298 ;;		line 230 in file "main.c"
  9299 ;; Parameters:    Size  Location     Type
  9300 ;;		None
  9301 ;; Auto vars:     Size  Location     Type
  9302 ;;  delta           2   46[BANK0 ] short 
  9303 ;; Return value:  Size  Location     Type
  9304 ;;                  1    wreg      void 
  9305 ;; Registers used:
  9306 ;;		wreg, status,2, status,0, cstack
  9307 ;; Tracked objects:
  9308 ;;		On entry : 0/0
  9309 ;;		On exit  : 0/0
  9310 ;;		Unchanged: 0/0
  9311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9313 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9314 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9315 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9316 ;;Total ram usage:        4 bytes
  9317 ;; Hardware stack levels used: 1
  9318 ;; Hardware stack levels required when called: 10
  9319 ;; This function calls:
  9320 ;;		_setSteering
  9321 ;; This function is called by:
  9322 ;;		_loop
  9323 ;; This function uses a non-reentrant model
  9324 ;;
  9325                           
  9326                           	psect	text38
  9327  004004                     __ptext38:
  9328                           	callstack 0
  9329  004004                     _calcSteering:
  9330                           	callstack 19
  9331  004004                     
  9332                           ;main.c: 231:     int16_t delta = (int16_t) (distLeft - distRight) - (int16_t) ((0) * 1.
      +                          4142135);
  9333  004004  0100               	movlb	0	; () banked
  9334  004006  51F5               	movf	_distRight& (0+255),w,b	;volatile
  9335  004008  5DF7               	subwf	_distLeft& (0+255),w,b	;volatile
  9336  00400A  6F8E               	movwf	calcSteering@delta& (0+255),b
  9337  00400C  51F6               	movf	(_distRight+1)& (0+255),w,b	;volatile
  9338  00400E  59F8               	subwfb	(_distLeft+1)& (0+255),w,b	;volatile
  9339  004010  6F8F               	movwf	(calcSteering@delta+1)& (0+255),b
  9340                           
  9341                           ;main.c: 235:     switch (driveMode) {
  9342  004012  EF33  F020         	goto	l9257
  9343  004016                     l1320:
  9344  004016                     l9247:
  9345                           
  9346                           ; BSR set to: 0
  9347                           ;main.c: 240:             if (delta > (40)) {
  9348  004016  BF8F               	btfsc	(calcSteering@delta+1)& (0+255),7,b
  9349  004018  EF17  F020         	goto	u10511
  9350  00401C  518F               	movf	(calcSteering@delta+1)& (0+255),w,b
  9351  00401E  E109               	bnz	u10510
  9352  004020  0E29               	movlw	41
  9353  004022  5D8E               	subwf	calcSteering@delta& (0+255),w,b
  9354  004024  A0D8               	btfss	status,0,c
  9355  004026  EF17  F020         	goto	u10511
  9356  00402A  EF19  F020         	goto	u10510
  9357  00402E                     u10511:
  9358  00402E  EF1F  F020         	goto	l9251
  9359  004032                     u10510:
  9360  004032                     
  9361                           ; BSR set to: 0
  9362                           ;main.c: 241:                 delta = (40);
  9363  004032  0E00               	movlw	0
  9364  004034  6F8F               	movwf	(calcSteering@delta+1)& (0+255),b
  9365  004036  0E28               	movlw	40
  9366  004038  6F8E               	movwf	calcSteering@delta& (0+255),b
  9367                           
  9368                           ;main.c: 242:             } else if (delta < -(40)) {
  9369  00403A  EFA0  F020         	goto	l9281
  9370  00403E                     l9251:
  9371                           
  9372                           ; BSR set to: 0
  9373  00403E  AF8F               	btfss	(calcSteering@delta+1)& (0+255),7,b
  9374  004040  EF2B  F020         	goto	u10521
  9375  004044  0ED8               	movlw	216
  9376  004046  5D8E               	subwf	calcSteering@delta& (0+255),w,b
  9377  004048  0EFF               	movlw	255
  9378  00404A  598F               	subwfb	(calcSteering@delta+1)& (0+255),w,b
  9379  00404C  B0D8               	btfsc	status,0,c
  9380  00404E  EF2B  F020         	goto	u10521
  9381  004052  EF2D  F020         	goto	u10520
  9382  004056                     u10521:
  9383  004056  EF50  F020         	goto	l1325
  9384  00405A                     u10520:
  9385  00405A                     
  9386                           ; BSR set to: 0
  9387                           ;main.c: 243:                 delta = -(40);
  9388  00405A  0EFF               	movlw	255
  9389  00405C  6F8F               	movwf	(calcSteering@delta+1)& (0+255),b
  9390  00405E  0ED8               	movlw	216
  9391  004060  6F8E               	movwf	calcSteering@delta& (0+255),b
  9392  004062  EFA0  F020         	goto	l9281
  9393  004066                     l9257:
  9394                           
  9395                           ; BSR set to: 0
  9396  004066  51FC               	movf	_driveMode& (0+255),w,b
  9397  004068  6F8C               	movwf	??_calcSteering& (0+255),b
  9398  00406A  6B8D               	clrf	(??_calcSteering+1)& (0+255),b
  9399                           
  9400                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9401                           ; Switch size 1, requested type "simple"
  9402                           ; Number of cases is 1, Range of values is 0 to 0
  9403                           ; switch strategies available:
  9404                           ; Name         Instructions Cycles
  9405                           ; simple_byte            4     3 (average)
  9406                           ;	Chosen strategy is simple_byte
  9407  00406C  518D               	movf	(??_calcSteering+1)& (0+255),w,b
  9408  00406E  0A00               	xorlw	0	; case 0
  9409  004070  B4D8               	btfsc	status,2,c
  9410  004072  EF3D  F020         	goto	l9581
  9411  004076  EFA0  F020         	goto	l9281
  9412  00407A                     l9581:
  9413                           
  9414                           ; BSR set to: 0
  9415                           ; Switch size 1, requested type "simple"
  9416                           ; Number of cases is 4, Range of values is 0 to 5
  9417                           ; switch strategies available:
  9418                           ; Name         Instructions Cycles
  9419                           ; simple_byte           13     7 (average)
  9420                           ;	Chosen strategy is simple_byte
  9421  00407A  518C               	movf	??_calcSteering& (0+255),w,b
  9422  00407C  0A00               	xorlw	0	; case 0
  9423  00407E  B4D8               	btfsc	status,2,c
  9424  004080  EF0B  F020         	goto	l9247
  9425  004084  0A01               	xorlw	1	; case 1
  9426  004086  B4D8               	btfsc	status,2,c
  9427  004088  EF0B  F020         	goto	l1320
  9428  00408C  0A05               	xorlw	5	; case 4
  9429  00408E  B4D8               	btfsc	status,2,c
  9430  004090  EF0B  F020         	goto	l9247
  9431  004094  0A01               	xorlw	1	; case 5
  9432  004096  B4D8               	btfsc	status,2,c
  9433  004098  EF0B  F020         	goto	l9247
  9434  00409C  EFA0  F020         	goto	l9281
  9435  0040A0                     l1325:
  9436                           
  9437                           ; BSR set to: 0
  9438                           ;main.c: 250:     switch (driveMode) {
  9439  0040A0  EFA0  F020         	goto	l9281
  9440  0040A4                     l9259:
  9441                           
  9442                           ; BSR set to: 0
  9443                           ;main.c: 252:             setSteering(delta, Ratio);
  9444  0040A4  C08E  F083         	movff	calcSteering@delta,setSteering@steering
  9445  0040A8  C08F  F084         	movff	calcSteering@delta+1,setSteering@steering+1
  9446  0040AC  0E02               	movlw	2
  9447  0040AE  6F85               	movwf	setSteering@steeringMode& (0+255),b
  9448  0040B0  EC78  F01C         	call	_setSteering	;wreg free
  9449                           
  9450                           ;main.c: 253:             break;
  9451  0040B4  EFC5  F020         	goto	l1339
  9452  0040B8                     l9261:
  9453                           
  9454                           ; BSR set to: 0
  9455                           ;main.c: 255:             setSteering(delta, Front);
  9456  0040B8  C08E  F083         	movff	calcSteering@delta,setSteering@steering
  9457  0040BC  C08F  F084         	movff	calcSteering@delta+1,setSteering@steering+1
  9458  0040C0  0E03               	movlw	3
  9459  0040C2  6F85               	movwf	setSteering@steeringMode& (0+255),b
  9460  0040C4  EC78  F01C         	call	_setSteering	;wreg free
  9461                           
  9462                           ;main.c: 256:             break;
  9463  0040C8  EFC5  F020         	goto	l1339
  9464  0040CC                     l9263:
  9465                           
  9466                           ; BSR set to: 0
  9467                           ;main.c: 258:             setSteering(-(50), Inverted);
  9468  0040CC  0EFF               	movlw	255
  9469  0040CE  6F84               	movwf	(setSteering@steering+1)& (0+255),b
  9470  0040D0  0ECE               	movlw	206
  9471  0040D2  6F83               	movwf	setSteering@steering& (0+255),b
  9472  0040D4  0E00               	movlw	0
  9473  0040D6  6F85               	movwf	setSteering@steeringMode& (0+255),b
  9474  0040D8  EC78  F01C         	call	_setSteering	;wreg free
  9475                           
  9476                           ;main.c: 259:             break;
  9477  0040DC  EFC5  F020         	goto	l1339
  9478  0040E0                     l9265:
  9479                           
  9480                           ; BSR set to: 0
  9481                           ;main.c: 261:             setSteering((50), Inverted);
  9482  0040E0  0E00               	movlw	0
  9483  0040E2  6F84               	movwf	(setSteering@steering+1)& (0+255),b
  9484  0040E4  0E32               	movlw	50
  9485  0040E6  6F83               	movwf	setSteering@steering& (0+255),b
  9486  0040E8  0E00               	movlw	0
  9487  0040EA  6F85               	movwf	setSteering@steeringMode& (0+255),b
  9488  0040EC  EC78  F01C         	call	_setSteering	;wreg free
  9489                           
  9490                           ;main.c: 262:             break;
  9491  0040F0  EFC5  F020         	goto	l1339
  9492  0040F4                     l9267:
  9493                           
  9494                           ; BSR set to: 0
  9495                           ;main.c: 264:             if (curveMode == InCurve) {
  9496  0040F4  0E02               	movlw	2
  9497  0040F6  1841               	xorwf	_curveMode^0,w,c
  9498  0040F8  A4D8               	btfss	status,2,c
  9499  0040FA  EF81  F020         	goto	u10531
  9500  0040FE  EF83  F020         	goto	u10530
  9501  004102                     u10531:
  9502  004102  EF5C  F020         	goto	l9261
  9503  004106                     u10530:
  9504  004106                     
  9505                           ; BSR set to: 0
  9506                           ;main.c: 265:                 setSteering((50), Ratio);
  9507  004106  0E00               	movlw	0
  9508  004108  6F84               	movwf	(setSteering@steering+1)& (0+255),b
  9509  00410A  0E32               	movlw	50
  9510  00410C  6F83               	movwf	setSteering@steering& (0+255),b
  9511  00410E  0E02               	movlw	2
  9512  004110  6F85               	movwf	setSteering@steeringMode& (0+255),b
  9513  004112  EC78  F01C         	call	_setSteering	;wreg free
  9514                           
  9515                           ;main.c: 266:             } else {
  9516  004116  EFC5  F020         	goto	l1339
  9517  00411A                     l9273:
  9518                           
  9519                           ; BSR set to: 0
  9520                           ;main.c: 271:             if (curveMode == InCurve) {
  9521  00411A  0E02               	movlw	2
  9522  00411C  1841               	xorwf	_curveMode^0,w,c
  9523  00411E  A4D8               	btfss	status,2,c
  9524  004120  EF94  F020         	goto	u10541
  9525  004124  EF96  F020         	goto	u10540
  9526  004128                     u10541:
  9527  004128  EF5C  F020         	goto	l9261
  9528  00412C                     u10540:
  9529  00412C                     
  9530                           ; BSR set to: 0
  9531                           ;main.c: 272:                 setSteering(-(50), Ratio);
  9532  00412C  0EFF               	movlw	255
  9533  00412E  6F84               	movwf	(setSteering@steering+1)& (0+255),b
  9534  004130  0ECE               	movlw	206
  9535  004132  6F83               	movwf	setSteering@steering& (0+255),b
  9536  004134  0E02               	movlw	2
  9537  004136  6F85               	movwf	setSteering@steeringMode& (0+255),b
  9538  004138  EC78  F01C         	call	_setSteering	;wreg free
  9539                           
  9540                           ;main.c: 273:             } else {
  9541  00413C  EFC5  F020         	goto	l1339
  9542  004140                     l9281:
  9543                           
  9544                           ; BSR set to: 0
  9545  004140  51FC               	movf	_driveMode& (0+255),w,b
  9546  004142  6F8C               	movwf	??_calcSteering& (0+255),b
  9547  004144  6B8D               	clrf	(??_calcSteering+1)& (0+255),b
  9548                           
  9549                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9550                           ; Switch size 1, requested type "simple"
  9551                           ; Number of cases is 1, Range of values is 0 to 0
  9552                           ; switch strategies available:
  9553                           ; Name         Instructions Cycles
  9554                           ; simple_byte            4     3 (average)
  9555                           ;	Chosen strategy is simple_byte
  9556  004146  518D               	movf	(??_calcSteering+1)& (0+255),w,b
  9557  004148  0A00               	xorlw	0	; case 0
  9558  00414A  B4D8               	btfsc	status,2,c
  9559  00414C  EFAA  F020         	goto	l9583
  9560  004150  EFC5  F020         	goto	l1339
  9561  004154                     l9583:
  9562                           
  9563                           ; BSR set to: 0
  9564                           ; Switch size 1, requested type "simple"
  9565                           ; Number of cases is 6, Range of values is 0 to 5
  9566                           ; switch strategies available:
  9567                           ; Name         Instructions Cycles
  9568                           ; simple_byte           19    10 (average)
  9569                           ;	Chosen strategy is simple_byte
  9570  004154  518C               	movf	??_calcSteering& (0+255),w,b
  9571  004156  0A00               	xorlw	0	; case 0
  9572  004158  B4D8               	btfsc	status,2,c
  9573  00415A  EF5C  F020         	goto	l9261
  9574  00415E  0A01               	xorlw	1	; case 1
  9575  004160  B4D8               	btfsc	status,2,c
  9576  004162  EF52  F020         	goto	l9259
  9577  004166  0A03               	xorlw	3	; case 2
  9578  004168  B4D8               	btfsc	status,2,c
  9579  00416A  EF66  F020         	goto	l9263
  9580  00416E  0A01               	xorlw	1	; case 3
  9581  004170  B4D8               	btfsc	status,2,c
  9582  004172  EF70  F020         	goto	l9265
  9583  004176  0A07               	xorlw	7	; case 4
  9584  004178  B4D8               	btfsc	status,2,c
  9585  00417A  EF7A  F020         	goto	l9267
  9586  00417E  0A01               	xorlw	1	; case 5
  9587  004180  B4D8               	btfsc	status,2,c
  9588  004182  EF8D  F020         	goto	l9273
  9589  004186  EFC5  F020         	goto	l1339
  9590  00418A                     l1339:
  9591  00418A  0012               	return		;funcret
  9592  00418C                     __end_of_calcSteering:
  9593                           	callstack 0
  9594                           
  9595 ;; *************** function _setSteering *****************
  9596 ;; Defined at:
  9597 ;;		line 385 in file "main.c"
  9598 ;; Parameters:    Size  Location     Type
  9599 ;;  steering        2   35[BANK0 ] short 
  9600 ;;  steeringMode    1   37[BANK0 ] enum E17303
  9601 ;; Auto vars:     Size  Location     Type
  9602 ;;  steeringB       2   42[BANK0 ] short 
  9603 ;;  steeringF       2   40[BANK0 ] short 
  9604 ;; Return value:  Size  Location     Type
  9605 ;;                  1    wreg      void 
  9606 ;; Registers used:
  9607 ;;		wreg, status,2, status,0, cstack
  9608 ;; Tracked objects:
  9609 ;;		On entry : 0/0
  9610 ;;		On exit  : 0/0
  9611 ;;		Unchanged: 0/0
  9612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9613 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9614 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9615 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9616 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9617 ;;Total ram usage:        9 bytes
  9618 ;; Hardware stack levels used: 1
  9619 ;; Hardware stack levels required when called: 9
  9620 ;; This function calls:
  9621 ;;		_PWM5_LoadDutyValue
  9622 ;;		_PWM6_LoadDutyValue
  9623 ;;		___fldiv
  9624 ;;		___fltol
  9625 ;;		___xxtofl
  9626 ;; This function is called by:
  9627 ;;		_loop
  9628 ;;		_checkBatt
  9629 ;;		_startAccell
  9630 ;;		_calcSteering
  9631 ;; This function uses a non-reentrant model
  9632 ;;
  9633                           
  9634                           	psect	text39
  9635  0038F0                     __ptext39:
  9636                           	callstack 0
  9637  0038F0                     _setSteering:
  9638                           	callstack 19
  9639  0038F0  0E00               	movlw	0
  9640  0038F2  0100               	movlb	0	; () banked
  9641  0038F4  6F8B               	movwf	(setSteering@steeringB+1)& (0+255),b
  9642  0038F6  0E00               	movlw	0
  9643  0038F8  6F8A               	movwf	setSteering@steeringB& (0+255),b
  9644                           
  9645                           ;main.c: 387:     switch (steeringMode) {
  9646  0038FA  EFF3  F01C         	goto	l9099
  9647  0038FE                     l1381:
  9648                           
  9649                           ; BSR set to: 0
  9650                           ;main.c: 389:             steeringF = (+steering);
  9651  0038FE  C083  F088         	movff	setSteering@steering,setSteering@steeringF
  9652  003902  C084  F089         	movff	setSteering@steering+1,setSteering@steeringF+1
  9653                           
  9654                           ;main.c: 390:             steeringB = -steering;
  9655  003906  C083  F086         	movff	setSteering@steering,??_setSteering
  9656  00390A  C084  F087         	movff	setSteering@steering+1,??_setSteering+1
  9657  00390E  1F86               	comf	??_setSteering& (0+255),f,b
  9658  003910  1F87               	comf	(??_setSteering+1)& (0+255),f,b
  9659  003912  4B86               	infsnz	??_setSteering& (0+255),f,b
  9660  003914  2B87               	incf	(??_setSteering+1)& (0+255),f,b
  9661  003916  C086  F08A         	movff	??_setSteering,setSteering@steeringB
  9662  00391A  C087  F08B         	movff	??_setSteering+1,setSteering@steeringB+1
  9663                           
  9664                           ;main.c: 391:             break;
  9665  00391E  EF14  F01D         	goto	l9101
  9666  003922                     l1383:
  9667                           
  9668                           ; BSR set to: 0
  9669                           ;main.c: 393:             steeringF = (+steering);
  9670  003922  C083  F088         	movff	setSteering@steering,setSteering@steeringF
  9671  003926  C084  F089         	movff	setSteering@steering+1,setSteering@steeringF+1
  9672                           
  9673                           ;main.c: 394:             steeringB = (+steering);
  9674  00392A  C083  F08A         	movff	setSteering@steering,setSteering@steeringB
  9675  00392E  C084  F08B         	movff	setSteering@steering+1,setSteering@steeringB+1
  9676                           
  9677                           ;main.c: 395:             break;
  9678  003932  EF14  F01D         	goto	l9101
  9679  003936                     l1384:
  9680                           
  9681                           ; BSR set to: 0
  9682                           ;main.c: 397:             steeringF = (+steering);
  9683  003936  C083  F088         	movff	setSteering@steering,setSteering@steeringF
  9684  00393A  C084  F089         	movff	setSteering@steering+1,setSteering@steeringF+1
  9685  00393E                     
  9686                           ; BSR set to: 0
  9687                           ;main.c: 398:             steeringB = (-steering / (1.25));
  9688  00393E  0E00               	movlw	0
  9689  003940  6E2E               	movwf	___fldiv@a^0,c
  9690  003942  0E00               	movlw	0
  9691  003944  6E2F               	movwf	(___fldiv@a+1)^0,c
  9692  003946  0EA0               	movlw	160
  9693  003948  6E30               	movwf	(___fldiv@a+2)^0,c
  9694  00394A  0E3F               	movlw	63
  9695  00394C  6E31               	movwf	(___fldiv@a+3)^0,c
  9696  00394E  C083  F086         	movff	setSteering@steering,??_setSteering
  9697  003952  C084  F087         	movff	setSteering@steering+1,??_setSteering+1
  9698  003956  1F86               	comf	??_setSteering& (0+255),f,b
  9699  003958  1F87               	comf	(??_setSteering+1)& (0+255),f,b
  9700  00395A  4B86               	infsnz	??_setSteering& (0+255),f,b
  9701  00395C  2B87               	incf	(??_setSteering+1)& (0+255),f,b
  9702  00395E  C086  F01C         	movff	??_setSteering,___xxtofl@val
  9703  003962  C087  F01D         	movff	??_setSteering+1,___xxtofl@val+1
  9704  003966  0E00               	movlw	0
  9705  003968  BE1D               	btfsc	(___xxtofl@val+1)^0,7,c
  9706  00396A  0EFF               	movlw	-1
  9707  00396C  6E1E               	movwf	(___xxtofl@val+2)^0,c
  9708  00396E  6E1F               	movwf	(___xxtofl@val+3)^0,c
  9709  003970  0E01               	movlw	1
  9710  003972  EC64  F01E         	call	___xxtofl
  9711  003976  C01C  F02A         	movff	?___xxtofl,___fldiv@b
  9712  00397A  C01D  F02B         	movff	?___xxtofl+1,___fldiv@b+1
  9713  00397E  C01E  F02C         	movff	?___xxtofl+2,___fldiv@b+2
  9714  003982  C01F  F02D         	movff	?___xxtofl+3,___fldiv@b+3
  9715  003986  EC29  F016         	call	___fldiv	;wreg free
  9716  00398A  C02A  F079         	movff	?___fldiv,___fltol@f1
  9717  00398E  C02B  F07A         	movff	?___fldiv+1,___fltol@f1+1
  9718  003992  C02C  F07B         	movff	?___fldiv+2,___fltol@f1+2
  9719  003996  C02D  F07C         	movff	?___fldiv+3,___fltol@f1+3
  9720  00399A  ECDE  F023         	call	___fltol	;wreg free
  9721  00399E  C079  F08A         	movff	?___fltol,setSteering@steeringB
  9722  0039A2  C07A  F08B         	movff	?___fltol+1,setSteering@steeringB+1
  9723                           
  9724                           ;main.c: 399:             break;
  9725  0039A6  EF14  F01D         	goto	l9101
  9726  0039AA                     l1385:
  9727                           
  9728                           ; BSR set to: 0
  9729                           ;main.c: 401:             steeringF = (+steering);
  9730  0039AA  C083  F088         	movff	setSteering@steering,setSteering@steeringF
  9731  0039AE  C084  F089         	movff	setSteering@steering+1,setSteering@steeringF+1
  9732  0039B2                     
  9733                           ; BSR set to: 0
  9734                           ;main.c: 402:             steeringB = 0;
  9735  0039B2  0E00               	movlw	0
  9736  0039B4  6F8B               	movwf	(setSteering@steeringB+1)& (0+255),b
  9737  0039B6  0E00               	movlw	0
  9738  0039B8  6F8A               	movwf	setSteering@steeringB& (0+255),b
  9739                           
  9740                           ;main.c: 403:             break;
  9741  0039BA  EF14  F01D         	goto	l9101
  9742  0039BE                     l9091:
  9743                           
  9744                           ; BSR set to: 0
  9745                           ;main.c: 405:             steeringF = 0;
  9746  0039BE  0E00               	movlw	0
  9747  0039C0  6F89               	movwf	(setSteering@steeringF+1)& (0+255),b
  9748  0039C2  0E00               	movlw	0
  9749  0039C4  6F88               	movwf	setSteering@steeringF& (0+255),b
  9750  0039C6                     
  9751                           ; BSR set to: 0
  9752                           ;main.c: 406:             steeringB = (+steering);
  9753  0039C6  C083  F08A         	movff	setSteering@steering,setSteering@steeringB
  9754  0039CA  C084  F08B         	movff	setSteering@steering+1,setSteering@steeringB+1
  9755                           
  9756                           ;main.c: 407:             break;
  9757  0039CE  EF14  F01D         	goto	l9101
  9758  0039D2                     l9095:
  9759                           
  9760                           ; BSR set to: 0
  9761                           ;main.c: 409:             steeringF = 0;
  9762  0039D2  0E00               	movlw	0
  9763  0039D4  6F89               	movwf	(setSteering@steeringF+1)& (0+255),b
  9764  0039D6  0E00               	movlw	0
  9765  0039D8  6F88               	movwf	setSteering@steeringF& (0+255),b
  9766                           
  9767                           ;main.c: 410:             steeringB = 0;
  9768  0039DA  0E00               	movlw	0
  9769  0039DC  6F8B               	movwf	(setSteering@steeringB+1)& (0+255),b
  9770  0039DE  0E00               	movlw	0
  9771  0039E0  6F8A               	movwf	setSteering@steeringB& (0+255),b
  9772                           
  9773                           ;main.c: 411:             break;
  9774  0039E2  EF14  F01D         	goto	l9101
  9775  0039E6                     l9099:
  9776                           
  9777                           ; BSR set to: 0
  9778  0039E6  5185               	movf	setSteering@steeringMode& (0+255),w,b
  9779  0039E8  6F86               	movwf	??_setSteering& (0+255),b
  9780  0039EA  6B87               	clrf	(??_setSteering+1)& (0+255),b
  9781                           
  9782                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9783                           ; Switch size 1, requested type "simple"
  9784                           ; Number of cases is 1, Range of values is 0 to 0
  9785                           ; switch strategies available:
  9786                           ; Name         Instructions Cycles
  9787                           ; simple_byte            4     3 (average)
  9788                           ;	Chosen strategy is simple_byte
  9789  0039EC  5187               	movf	(??_setSteering+1)& (0+255),w,b
  9790  0039EE  0A00               	xorlw	0	; case 0
  9791  0039F0  B4D8               	btfsc	status,2,c
  9792  0039F2  EFFD  F01C         	goto	l9585
  9793  0039F6  EFE9  F01C         	goto	l9095
  9794  0039FA                     l9585:
  9795                           
  9796                           ; BSR set to: 0
  9797                           ; Switch size 1, requested type "simple"
  9798                           ; Number of cases is 5, Range of values is 0 to 4
  9799                           ; switch strategies available:
  9800                           ; Name         Instructions Cycles
  9801                           ; simple_byte           16     9 (average)
  9802                           ;	Chosen strategy is simple_byte
  9803  0039FA  5186               	movf	??_setSteering& (0+255),w,b
  9804  0039FC  0A00               	xorlw	0	; case 0
  9805  0039FE  B4D8               	btfsc	status,2,c
  9806  003A00  EF7F  F01C         	goto	l1381
  9807  003A04  0A01               	xorlw	1	; case 1
  9808  003A06  B4D8               	btfsc	status,2,c
  9809  003A08  EF91  F01C         	goto	l1383
  9810  003A0C  0A03               	xorlw	3	; case 2
  9811  003A0E  B4D8               	btfsc	status,2,c
  9812  003A10  EF9B  F01C         	goto	l1384
  9813  003A14  0A01               	xorlw	1	; case 3
  9814  003A16  B4D8               	btfsc	status,2,c
  9815  003A18  EFD5  F01C         	goto	l1385
  9816  003A1C  0A07               	xorlw	7	; case 4
  9817  003A1E  B4D8               	btfsc	status,2,c
  9818  003A20  EFDF  F01C         	goto	l9091
  9819  003A24  EFE9  F01C         	goto	l9095
  9820  003A28                     l9101:
  9821                           
  9822                           ;main.c: 414:     if (steeringF > ((65))) {
  9823  003A28  0100               	movlb	0	; () banked
  9824  003A2A  BF89               	btfsc	(setSteering@steeringF+1)& (0+255),7,b
  9825  003A2C  EF21  F01D         	goto	u10291
  9826  003A30  5189               	movf	(setSteering@steeringF+1)& (0+255),w,b
  9827  003A32  E109               	bnz	u10290
  9828  003A34  0E42               	movlw	66
  9829  003A36  5D88               	subwf	setSteering@steeringF& (0+255),w,b
  9830  003A38  A0D8               	btfss	status,0,c
  9831  003A3A  EF21  F01D         	goto	u10291
  9832  003A3E  EF23  F01D         	goto	u10290
  9833  003A42                     u10291:
  9834  003A42  EF29  F01D         	goto	l9105
  9835  003A46                     u10290:
  9836  003A46                     
  9837                           ; BSR set to: 0
  9838                           ;main.c: 415:         steeringF = ((65));
  9839  003A46  0E00               	movlw	0
  9840  003A48  6F89               	movwf	(setSteering@steeringF+1)& (0+255),b
  9841  003A4A  0E41               	movlw	65
  9842  003A4C  6F88               	movwf	setSteering@steeringF& (0+255),b
  9843                           
  9844                           ;main.c: 416:     } else if (steeringF < (-(65))) {
  9845  003A4E  EF3B  F01D         	goto	l9109
  9846  003A52                     l9105:
  9847                           
  9848                           ; BSR set to: 0
  9849  003A52  AF89               	btfss	(setSteering@steeringF+1)& (0+255),7,b
  9850  003A54  EF35  F01D         	goto	u10301
  9851  003A58  0EBF               	movlw	191
  9852  003A5A  5D88               	subwf	setSteering@steeringF& (0+255),w,b
  9853  003A5C  0EFF               	movlw	255
  9854  003A5E  5989               	subwfb	(setSteering@steeringF+1)& (0+255),w,b
  9855  003A60  B0D8               	btfsc	status,0,c
  9856  003A62  EF35  F01D         	goto	u10301
  9857  003A66  EF37  F01D         	goto	u10300
  9858  003A6A                     u10301:
  9859  003A6A  EF3B  F01D         	goto	l9109
  9860  003A6E                     u10300:
  9861  003A6E                     
  9862                           ; BSR set to: 0
  9863                           ;main.c: 417:         steeringF = (-(65));
  9864  003A6E  0EFF               	movlw	255
  9865  003A70  6F89               	movwf	(setSteering@steeringF+1)& (0+255),b
  9866  003A72  0EBF               	movlw	191
  9867  003A74  6F88               	movwf	setSteering@steeringF& (0+255),b
  9868  003A76                     l9109:
  9869                           
  9870                           ; BSR set to: 0
  9871                           ;main.c: 420:     if (steeringB > ((40))) {
  9872  003A76  BF8B               	btfsc	(setSteering@steeringB+1)& (0+255),7,b
  9873  003A78  EF47  F01D         	goto	u10311
  9874  003A7C  518B               	movf	(setSteering@steeringB+1)& (0+255),w,b
  9875  003A7E  E109               	bnz	u10310
  9876  003A80  0E29               	movlw	41
  9877  003A82  5D8A               	subwf	setSteering@steeringB& (0+255),w,b
  9878  003A84  A0D8               	btfss	status,0,c
  9879  003A86  EF47  F01D         	goto	u10311
  9880  003A8A  EF49  F01D         	goto	u10310
  9881  003A8E                     u10311:
  9882  003A8E  EF4F  F01D         	goto	l9113
  9883  003A92                     u10310:
  9884  003A92                     
  9885                           ; BSR set to: 0
  9886                           ;main.c: 421:         steeringB = ((40));
  9887  003A92  0E00               	movlw	0
  9888  003A94  6F8B               	movwf	(setSteering@steeringB+1)& (0+255),b
  9889  003A96  0E28               	movlw	40
  9890  003A98  6F8A               	movwf	setSteering@steeringB& (0+255),b
  9891                           
  9892                           ;main.c: 422:     } else if (steeringB < (-(40))) {
  9893  003A9A  EF61  F01D         	goto	l9117
  9894  003A9E                     l9113:
  9895                           
  9896                           ; BSR set to: 0
  9897  003A9E  AF8B               	btfss	(setSteering@steeringB+1)& (0+255),7,b
  9898  003AA0  EF5B  F01D         	goto	u10321
  9899  003AA4  0ED8               	movlw	216
  9900  003AA6  5D8A               	subwf	setSteering@steeringB& (0+255),w,b
  9901  003AA8  0EFF               	movlw	255
  9902  003AAA  598B               	subwfb	(setSteering@steeringB+1)& (0+255),w,b
  9903  003AAC  B0D8               	btfsc	status,0,c
  9904  003AAE  EF5B  F01D         	goto	u10321
  9905  003AB2  EF5D  F01D         	goto	u10320
  9906  003AB6                     u10321:
  9907  003AB6  EF61  F01D         	goto	l9117
  9908  003ABA                     u10320:
  9909  003ABA                     
  9910                           ; BSR set to: 0
  9911                           ;main.c: 423:         steeringB = (-(40));
  9912  003ABA  0EFF               	movlw	255
  9913  003ABC  6F8B               	movwf	(setSteering@steeringB+1)& (0+255),b
  9914  003ABE  0ED8               	movlw	216
  9915  003AC0  6F8A               	movwf	setSteering@steeringB& (0+255),b
  9916  003AC2                     l9117:
  9917                           
  9918                           ; BSR set to: 0
  9919                           ;main.c: 427:     PWM6_LoadDutyValue((uint16_t) ((352) + steeringF));
  9920  003AC2  0E60               	movlw	96
  9921  003AC4  2588               	addwf	setSteering@steeringF& (0+255),w,b
  9922  003AC6  6E14               	movwf	PWM6_LoadDutyValue@dutyValue^0,c
  9923  003AC8  0E01               	movlw	1
  9924  003ACA  2189               	addwfc	(setSteering@steeringF+1)& (0+255),w,b
  9925  003ACC  6E15               	movwf	(PWM6_LoadDutyValue@dutyValue+1)^0,c
  9926  003ACE  ECE2  F02E         	call	_PWM6_LoadDutyValue	;wreg free
  9927  003AD2                     
  9928                           ;main.c: 428:     PWM5_LoadDutyValue((uint16_t) ((357) + steeringB));
  9929  003AD2  0E65               	movlw	101
  9930  003AD4  0100               	movlb	0	; () banked
  9931  003AD6  258A               	addwf	setSteering@steeringB& (0+255),w,b
  9932  003AD8  6E14               	movwf	PWM5_LoadDutyValue@dutyValue^0,c
  9933  003ADA  0E01               	movlw	1
  9934  003ADC  218B               	addwfc	(setSteering@steeringB+1)& (0+255),w,b
  9935  003ADE  6E15               	movwf	(PWM5_LoadDutyValue@dutyValue+1)^0,c
  9936  003AE0  ECFC  F02E         	call	_PWM5_LoadDutyValue	;wreg free
  9937  003AE4  0012               	return		;funcret
  9938  003AE6                     __end_of_setSteering:
  9939                           	callstack 0
  9940                           
  9941 ;; *************** function ___fldiv *****************
  9942 ;; Defined at:
  9943 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
  9944 ;; Parameters:    Size  Location     Type
  9945 ;;  b               4   41[COMRAM] void 
  9946 ;;  a               4   45[COMRAM] void 
  9947 ;; Auto vars:     Size  Location     Type
  9948 ;;  grs             4    7[BANK0 ] unsigned long 
  9949 ;;  rem             4    0[BANK0 ] unsigned long 
  9950 ;;  new_exp         2    5[BANK0 ] short 
  9951 ;;  aexp            1   12[BANK0 ] unsigned char 
  9952 ;;  bexp            1   11[BANK0 ] unsigned char 
  9953 ;;  sign            1    4[BANK0 ] unsigned char 
  9954 ;; Return value:  Size  Location     Type
  9955 ;;                  4   41[COMRAM] unsigned char 
  9956 ;; Registers used:
  9957 ;;		wreg, status,2, status,0
  9958 ;; Tracked objects:
  9959 ;;		On entry : 0/0
  9960 ;;		On exit  : 0/0
  9961 ;;		Unchanged: 0/0
  9962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9963 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9964 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9965 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9966 ;;      Totals:        12      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9967 ;;Total ram usage:       25 bytes
  9968 ;; Hardware stack levels used: 1
  9969 ;; Hardware stack levels required when called: 8
  9970 ;; This function calls:
  9971 ;;		Nothing
  9972 ;; This function is called by:
  9973 ;;		_setSteering
  9974 ;;		_efgtoa
  9975 ;; This function uses a non-reentrant model
  9976 ;;
  9977                           
  9978                           	psect	text40
  9979  002C52                     __ptext40:
  9980                           	callstack 0
  9981  002C52                     ___fldiv:
  9982                           	callstack 19
  9983  002C52  502D               	movf	(___fldiv@b+3)^0,w,c
  9984  002C54  0B80               	andlw	128
  9985  002C56  0100               	movlb	0	; () banked
  9986  002C58  6F64               	movwf	___fldiv@sign& (0+255),b
  9987  002C5A  502D               	movf	(___fldiv@b+3)^0,w,c
  9988  002C5C  242D               	addwf	(___fldiv@b+3)^0,w,c
  9989  002C5E  6F6B               	movwf	___fldiv@bexp& (0+255),b
  9990  002C60                     
  9991                           ; BSR set to: 0
  9992  002C60  AE2C               	btfss	(___fldiv@b+2)^0,7,c
  9993  002C62  EF35  F016         	goto	u8131
  9994  002C66  EF37  F016         	goto	u8130
  9995  002C6A                     u8131:
  9996  002C6A  EF38  F016         	goto	l7921
  9997  002C6E                     u8130:
  9998  002C6E                     
  9999                           ; BSR set to: 0
 10000  002C6E  816B               	bsf	___fldiv@bexp& (0+255),0,b
 10001  002C70                     l7921:
 10002                           
 10003                           ; BSR set to: 0
 10004  002C70  516B               	movf	___fldiv@bexp& (0+255),w,b
 10005  002C72  B4D8               	btfsc	status,2,c
 10006  002C74  EF3E  F016         	goto	u8141
 10007  002C78  EF40  F016         	goto	u8140
 10008  002C7C                     u8141:
 10009  002C7C  EF55  F016         	goto	l7931
 10010  002C80                     u8140:
 10011  002C80                     
 10012                           ; BSR set to: 0
 10013  002C80  296B               	incf	___fldiv@bexp& (0+255),w,b
 10014  002C82  A4D8               	btfss	status,2,c
 10015  002C84  EF46  F016         	goto	u8151
 10016  002C88  EF48  F016         	goto	u8150
 10017  002C8C                     u8151:
 10018  002C8C  EF50  F016         	goto	l7927
 10019  002C90                     u8150:
 10020  002C90                     
 10021                           ; BSR set to: 0
 10022  002C90  0E00               	movlw	0
 10023  002C92  6E2A               	movwf	___fldiv@b^0,c
 10024  002C94  0E00               	movlw	0
 10025  002C96  6E2B               	movwf	(___fldiv@b+1)^0,c
 10026  002C98  0E00               	movlw	0
 10027  002C9A  6E2C               	movwf	(___fldiv@b+2)^0,c
 10028  002C9C  0E00               	movlw	0
 10029  002C9E  6E2D               	movwf	(___fldiv@b+3)^0,c
 10030  002CA0                     l7927:
 10031                           
 10032                           ; BSR set to: 0
 10033  002CA0  8E2C               	bsf	(___fldiv@b+2)^0,7,c
 10034  002CA2                     
 10035                           ; BSR set to: 0
 10036  002CA2  0E00               	movlw	0
 10037  002CA4  6E2D               	movwf	(___fldiv@b+3)^0,c
 10038  002CA6  EF5D  F016         	goto	l7933
 10039  002CAA                     l7931:
 10040                           
 10041                           ; BSR set to: 0
 10042  002CAA  0E00               	movlw	0
 10043  002CAC  6E2A               	movwf	___fldiv@b^0,c
 10044  002CAE  0E00               	movlw	0
 10045  002CB0  6E2B               	movwf	(___fldiv@b+1)^0,c
 10046  002CB2  0E00               	movlw	0
 10047  002CB4  6E2C               	movwf	(___fldiv@b+2)^0,c
 10048  002CB6  0E00               	movlw	0
 10049  002CB8  6E2D               	movwf	(___fldiv@b+3)^0,c
 10050  002CBA                     l7933:
 10051                           
 10052                           ; BSR set to: 0
 10053  002CBA  5031               	movf	(___fldiv@a+3)^0,w,c
 10054  002CBC  0B80               	andlw	128
 10055  002CBE  1B64               	xorwf	___fldiv@sign& (0+255),f,b
 10056  002CC0                     
 10057                           ; BSR set to: 0
 10058  002CC0  5031               	movf	(___fldiv@a+3)^0,w,c
 10059  002CC2  2431               	addwf	(___fldiv@a+3)^0,w,c
 10060  002CC4  6F6C               	movwf	___fldiv@aexp& (0+255),b
 10061  002CC6                     
 10062                           ; BSR set to: 0
 10063  002CC6  AE30               	btfss	(___fldiv@a+2)^0,7,c
 10064  002CC8  EF68  F016         	goto	u8161
 10065  002CCC  EF6A  F016         	goto	u8160
 10066  002CD0                     u8161:
 10067  002CD0  EF6B  F016         	goto	l7941
 10068  002CD4                     u8160:
 10069  002CD4                     
 10070                           ; BSR set to: 0
 10071  002CD4  816C               	bsf	___fldiv@aexp& (0+255),0,b
 10072  002CD6                     l7941:
 10073                           
 10074                           ; BSR set to: 0
 10075  002CD6  516C               	movf	___fldiv@aexp& (0+255),w,b
 10076  002CD8  B4D8               	btfsc	status,2,c
 10077  002CDA  EF71  F016         	goto	u8171
 10078  002CDE  EF73  F016         	goto	u8170
 10079  002CE2                     u8171:
 10080  002CE2  EF88  F016         	goto	l7951
 10081  002CE6                     u8170:
 10082  002CE6                     
 10083                           ; BSR set to: 0
 10084  002CE6  296C               	incf	___fldiv@aexp& (0+255),w,b
 10085  002CE8  A4D8               	btfss	status,2,c
 10086  002CEA  EF79  F016         	goto	u8181
 10087  002CEE  EF7B  F016         	goto	u8180
 10088  002CF2                     u8181:
 10089  002CF2  EF83  F016         	goto	l7947
 10090  002CF6                     u8180:
 10091  002CF6                     
 10092                           ; BSR set to: 0
 10093  002CF6  0E00               	movlw	0
 10094  002CF8  6E2E               	movwf	___fldiv@a^0,c
 10095  002CFA  0E00               	movlw	0
 10096  002CFC  6E2F               	movwf	(___fldiv@a+1)^0,c
 10097  002CFE  0E00               	movlw	0
 10098  002D00  6E30               	movwf	(___fldiv@a+2)^0,c
 10099  002D02  0E00               	movlw	0
 10100  002D04  6E31               	movwf	(___fldiv@a+3)^0,c
 10101  002D06                     l7947:
 10102                           
 10103                           ; BSR set to: 0
 10104  002D06  8E30               	bsf	(___fldiv@a+2)^0,7,c
 10105  002D08                     
 10106                           ; BSR set to: 0
 10107  002D08  0E00               	movlw	0
 10108  002D0A  6E31               	movwf	(___fldiv@a+3)^0,c
 10109  002D0C  EF90  F016         	goto	l7953
 10110  002D10                     l7951:
 10111                           
 10112                           ; BSR set to: 0
 10113  002D10  0E00               	movlw	0
 10114  002D12  6E2E               	movwf	___fldiv@a^0,c
 10115  002D14  0E00               	movlw	0
 10116  002D16  6E2F               	movwf	(___fldiv@a+1)^0,c
 10117  002D18  0E00               	movlw	0
 10118  002D1A  6E30               	movwf	(___fldiv@a+2)^0,c
 10119  002D1C  0E00               	movlw	0
 10120  002D1E  6E31               	movwf	(___fldiv@a+3)^0,c
 10121  002D20                     l7953:
 10122                           
 10123                           ; BSR set to: 0
 10124  002D20  502E               	movf	___fldiv@a^0,w,c
 10125  002D22  102F               	iorwf	(___fldiv@a+1)^0,w,c
 10126  002D24  1030               	iorwf	(___fldiv@a+2)^0,w,c
 10127  002D26  1031               	iorwf	(___fldiv@a+3)^0,w,c
 10128  002D28  A4D8               	btfss	status,2,c
 10129  002D2A  EF99  F016         	goto	u8191
 10130  002D2E  EF9B  F016         	goto	u8190
 10131  002D32                     u8191:
 10132  002D32  EFB3  F016         	goto	l7965
 10133  002D36                     u8190:
 10134  002D36                     
 10135                           ; BSR set to: 0
 10136  002D36  0E00               	movlw	0
 10137  002D38  6E2A               	movwf	___fldiv@b^0,c
 10138  002D3A  0E00               	movlw	0
 10139  002D3C  6E2B               	movwf	(___fldiv@b+1)^0,c
 10140  002D3E  0E00               	movlw	0
 10141  002D40  6E2C               	movwf	(___fldiv@b+2)^0,c
 10142  002D42  0E00               	movlw	0
 10143  002D44  6E2D               	movwf	(___fldiv@b+3)^0,c
 10144  002D46                     
 10145                           ; BSR set to: 0
 10146  002D46  0E80               	movlw	128
 10147  002D48  122C               	iorwf	(___fldiv@b+2)^0,f,c
 10148  002D4A  0E7F               	movlw	127
 10149  002D4C  122D               	iorwf	(___fldiv@b+3)^0,f,c
 10150  002D4E                     l7959:
 10151                           
 10152                           ; BSR set to: 0
 10153  002D4E  5164               	movf	___fldiv@sign& (0+255),w,b
 10154  002D50  122D               	iorwf	(___fldiv@b+3)^0,f,c
 10155  002D52                     
 10156                           ; BSR set to: 0
 10157  002D52  C02A  F02A         	movff	___fldiv@b,?___fldiv
 10158  002D56  C02B  F02B         	movff	___fldiv@b+1,?___fldiv+1
 10159  002D5A  C02C  F02C         	movff	___fldiv@b+2,?___fldiv+2
 10160  002D5E  C02D  F02D         	movff	___fldiv@b+3,?___fldiv+3
 10161  002D62  EFF6  F017         	goto	l1979
 10162  002D66                     l7965:
 10163                           
 10164                           ; BSR set to: 0
 10165  002D66  516B               	movf	___fldiv@bexp& (0+255),w,b
 10166  002D68  A4D8               	btfss	status,2,c
 10167  002D6A  EFB9  F016         	goto	u8201
 10168  002D6E  EFBB  F016         	goto	u8200
 10169  002D72                     u8201:
 10170  002D72  EFC5  F016         	goto	l7973
 10171  002D76                     u8200:
 10172  002D76                     
 10173                           ; BSR set to: 0
 10174  002D76  0E00               	movlw	0
 10175  002D78  6E2A               	movwf	?___fldiv^0,c
 10176  002D7A  0E00               	movlw	0
 10177  002D7C  6E2B               	movwf	(?___fldiv+1)^0,c
 10178  002D7E  0E00               	movlw	0
 10179  002D80  6E2C               	movwf	(?___fldiv+2)^0,c
 10180  002D82  0E00               	movlw	0
 10181  002D84  6E2D               	movwf	(?___fldiv+3)^0,c
 10182  002D86  EFF6  F017         	goto	l1979
 10183  002D8A                     l7973:
 10184                           
 10185                           ; BSR set to: 0
 10186  002D8A  516C               	movf	___fldiv@aexp& (0+255),w,b
 10187  002D8C  C06B  F032         	movff	___fldiv@bexp,??___fldiv
 10188  002D90  6A33               	clrf	(??___fldiv+1)^0,c
 10189  002D92  5E32               	subwf	??___fldiv^0,f,c
 10190  002D94  0E00               	movlw	0
 10191  002D96  5A33               	subwfb	(??___fldiv+1)^0,f,c
 10192  002D98  0E7F               	movlw	127
 10193  002D9A  2432               	addwf	??___fldiv^0,w,c
 10194  002D9C  6F65               	movwf	___fldiv@new_exp& (0+255),b
 10195  002D9E  0E00               	movlw	0
 10196  002DA0  2033               	addwfc	(??___fldiv+1)^0,w,c
 10197  002DA2  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
 10198  002DA4                     
 10199                           ; BSR set to: 0
 10200  002DA4  C02A  F060         	movff	___fldiv@b,___fldiv@rem
 10201  002DA8  C02B  F061         	movff	___fldiv@b+1,___fldiv@rem+1
 10202  002DAC  C02C  F062         	movff	___fldiv@b+2,___fldiv@rem+2
 10203  002DB0  C02D  F063         	movff	___fldiv@b+3,___fldiv@rem+3
 10204  002DB4                     
 10205                           ; BSR set to: 0
 10206  002DB4  0E00               	movlw	0
 10207  002DB6  6E2A               	movwf	___fldiv@b^0,c
 10208  002DB8  0E00               	movlw	0
 10209  002DBA  6E2B               	movwf	(___fldiv@b+1)^0,c
 10210  002DBC  0E00               	movlw	0
 10211  002DBE  6E2C               	movwf	(___fldiv@b+2)^0,c
 10212  002DC0  0E00               	movlw	0
 10213  002DC2  6E2D               	movwf	(___fldiv@b+3)^0,c
 10214  002DC4                     
 10215                           ; BSR set to: 0
 10216  002DC4  0E00               	movlw	0
 10217  002DC6  6F67               	movwf	___fldiv@grs& (0+255),b
 10218  002DC8  0E00               	movlw	0
 10219  002DCA  6F68               	movwf	(___fldiv@grs+1)& (0+255),b
 10220  002DCC  0E00               	movlw	0
 10221  002DCE  6F69               	movwf	(___fldiv@grs+2)& (0+255),b
 10222  002DD0  0E00               	movlw	0
 10223  002DD2  6F6A               	movwf	(___fldiv@grs+3)& (0+255),b
 10224  002DD4                     
 10225                           ; BSR set to: 0
 10226  002DD4  0E00               	movlw	0
 10227  002DD6  6F6C               	movwf	___fldiv@aexp& (0+255),b
 10228  002DD8  EF26  F017         	goto	l1981
 10229  002DDC                     l7983:
 10230                           
 10231                           ; BSR set to: 0
 10232  002DDC  516C               	movf	___fldiv@aexp& (0+255),w,b
 10233  002DDE  B4D8               	btfsc	status,2,c
 10234  002DE0  EFF4  F016         	goto	u8211
 10235  002DE4  EFF6  F016         	goto	u8210
 10236  002DE8                     u8211:
 10237  002DE8  EF0D  F017         	goto	l7991
 10238  002DEC                     u8210:
 10239  002DEC                     
 10240                           ; BSR set to: 0
 10241  002DEC  90D8               	bcf	status,0,c
 10242  002DEE  3760               	rlcf	___fldiv@rem& (0+255),f,b
 10243  002DF0  3761               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 10244  002DF2  3762               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 10245  002DF4  3763               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 10246  002DF6  90D8               	bcf	status,0,c
 10247  002DF8  362A               	rlcf	___fldiv@b^0,f,c
 10248  002DFA  362B               	rlcf	(___fldiv@b+1)^0,f,c
 10249  002DFC  362C               	rlcf	(___fldiv@b+2)^0,f,c
 10250  002DFE  362D               	rlcf	(___fldiv@b+3)^0,f,c
 10251  002E00                     
 10252                           ; BSR set to: 0
 10253  002E00  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
 10254  002E02  EF05  F017         	goto	u8221
 10255  002E06  EF07  F017         	goto	u8220
 10256  002E0A                     u8221:
 10257  002E0A  EF08  F017         	goto	l1984
 10258  002E0E                     u8220:
 10259  002E0E                     
 10260                           ; BSR set to: 0
 10261  002E0E  802A               	bsf	___fldiv@b^0,0,c
 10262  002E10                     l1984:
 10263                           
 10264                           ; BSR set to: 0
 10265  002E10  90D8               	bcf	status,0,c
 10266  002E12  3767               	rlcf	___fldiv@grs& (0+255),f,b
 10267  002E14  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 10268  002E16  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 10269  002E18  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 10270  002E1A                     l7991:
 10271                           
 10272                           ; BSR set to: 0
 10273  002E1A  502E               	movf	___fldiv@a^0,w,c
 10274  002E1C  5D60               	subwf	___fldiv@rem& (0+255),w,b
 10275  002E1E  502F               	movf	(___fldiv@a+1)^0,w,c
 10276  002E20  5961               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 10277  002E22  5030               	movf	(___fldiv@a+2)^0,w,c
 10278  002E24  5962               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 10279  002E26  5031               	movf	(___fldiv@a+3)^0,w,c
 10280  002E28  5963               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 10281  002E2A  A0D8               	btfss	status,0,c
 10282  002E2C  EF1A  F017         	goto	u8231
 10283  002E30  EF1C  F017         	goto	u8230
 10284  002E34                     u8231:
 10285  002E34  EF25  F017         	goto	l7997
 10286  002E38                     u8230:
 10287  002E38                     
 10288                           ; BSR set to: 0
 10289  002E38  8D6A               	bsf	(___fldiv@grs+3)& (0+255),6,b
 10290  002E3A                     
 10291                           ; BSR set to: 0
 10292  002E3A  502E               	movf	___fldiv@a^0,w,c
 10293  002E3C  5F60               	subwf	___fldiv@rem& (0+255),f,b
 10294  002E3E  502F               	movf	(___fldiv@a+1)^0,w,c
 10295  002E40  5B61               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 10296  002E42  5030               	movf	(___fldiv@a+2)^0,w,c
 10297  002E44  5B62               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 10298  002E46  5031               	movf	(___fldiv@a+3)^0,w,c
 10299  002E48  5B63               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 10300  002E4A                     l7997:
 10301                           
 10302                           ; BSR set to: 0
 10303  002E4A  2B6C               	incf	___fldiv@aexp& (0+255),f,b
 10304  002E4C                     l1981:
 10305                           
 10306                           ; BSR set to: 0
 10307  002E4C  0E19               	movlw	25
 10308  002E4E  656C               	cpfsgt	___fldiv@aexp& (0+255),b
 10309  002E50  EF2C  F017         	goto	u8241
 10310  002E54  EF2E  F017         	goto	u8240
 10311  002E58                     u8241:
 10312  002E58  EFEE  F016         	goto	l7983
 10313  002E5C                     u8240:
 10314  002E5C                     
 10315                           ; BSR set to: 0
 10316  002E5C  5160               	movf	___fldiv@rem& (0+255),w,b
 10317  002E5E  1161               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 10318  002E60  1162               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 10319  002E62  1163               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 10320  002E64  B4D8               	btfsc	status,2,c
 10321  002E66  EF37  F017         	goto	u8251
 10322  002E6A  EF39  F017         	goto	u8250
 10323  002E6E                     u8251:
 10324  002E6E  EF51  F017         	goto	l8009
 10325  002E72                     u8250:
 10326  002E72                     
 10327                           ; BSR set to: 0
 10328  002E72  8167               	bsf	___fldiv@grs& (0+255),0,b
 10329  002E74  EF51  F017         	goto	l8009
 10330  002E78                     l8003:
 10331                           
 10332                           ; BSR set to: 0
 10333  002E78  90D8               	bcf	status,0,c
 10334  002E7A  362A               	rlcf	___fldiv@b^0,f,c
 10335  002E7C  362B               	rlcf	(___fldiv@b+1)^0,f,c
 10336  002E7E  362C               	rlcf	(___fldiv@b+2)^0,f,c
 10337  002E80  362D               	rlcf	(___fldiv@b+3)^0,f,c
 10338  002E82                     
 10339                           ; BSR set to: 0
 10340  002E82  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
 10341  002E84  EF46  F017         	goto	u8261
 10342  002E88  EF48  F017         	goto	u8260
 10343  002E8C                     u8261:
 10344  002E8C  EF49  F017         	goto	l1990
 10345  002E90                     u8260:
 10346  002E90                     
 10347                           ; BSR set to: 0
 10348  002E90  802A               	bsf	___fldiv@b^0,0,c
 10349  002E92                     l1990:
 10350                           
 10351                           ; BSR set to: 0
 10352  002E92  90D8               	bcf	status,0,c
 10353  002E94  3767               	rlcf	___fldiv@grs& (0+255),f,b
 10354  002E96  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 10355  002E98  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 10356  002E9A  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 10357  002E9C  0765               	decf	___fldiv@new_exp& (0+255),f,b
 10358  002E9E  A0D8               	btfss	status,0,c
 10359  002EA0  0766               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 10360  002EA2                     l8009:
 10361                           
 10362                           ; BSR set to: 0
 10363  002EA2  AE2C               	btfss	(___fldiv@b+2)^0,7,c
 10364  002EA4  EF56  F017         	goto	u8271
 10365  002EA8  EF58  F017         	goto	u8270
 10366  002EAC                     u8271:
 10367  002EAC  EF3C  F017         	goto	l8003
 10368  002EB0                     u8270:
 10369  002EB0                     
 10370                           ; BSR set to: 0
 10371  002EB0  0E00               	movlw	0
 10372  002EB2  6F6C               	movwf	___fldiv@aexp& (0+255),b
 10373  002EB4                     
 10374                           ; BSR set to: 0
 10375  002EB4  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
 10376  002EB6  EF5F  F017         	goto	u8281
 10377  002EBA  EF61  F017         	goto	u8280
 10378  002EBE                     u8281:
 10379  002EBE  EF85  F017         	goto	l1992
 10380  002EC2                     u8280:
 10381  002EC2                     
 10382                           ; BSR set to: 0
 10383  002EC2  0EFF               	movlw	255
 10384  002EC4  1567               	andwf	___fldiv@grs& (0+255),w,b
 10385  002EC6  6E32               	movwf	??___fldiv^0,c
 10386  002EC8  0EFF               	movlw	255
 10387  002ECA  1568               	andwf	(___fldiv@grs+1)& (0+255),w,b
 10388  002ECC  6E33               	movwf	(??___fldiv+1)^0,c
 10389  002ECE  0EFF               	movlw	255
 10390  002ED0  1569               	andwf	(___fldiv@grs+2)& (0+255),w,b
 10391  002ED2  6E34               	movwf	(??___fldiv+2)^0,c
 10392  002ED4  0E7F               	movlw	127
 10393  002ED6  156A               	andwf	(___fldiv@grs+3)& (0+255),w,b
 10394  002ED8  6E35               	movwf	(??___fldiv+3)^0,c
 10395  002EDA  5032               	movf	??___fldiv^0,w,c
 10396  002EDC  1033               	iorwf	(??___fldiv+1)^0,w,c
 10397  002EDE  1034               	iorwf	(??___fldiv+2)^0,w,c
 10398  002EE0  1035               	iorwf	(??___fldiv+3)^0,w,c
 10399  002EE2  B4D8               	btfsc	status,2,c
 10400  002EE4  EF76  F017         	goto	u8291
 10401  002EE8  EF78  F017         	goto	u8290
 10402  002EEC                     u8291:
 10403  002EEC  EF7C  F017         	goto	l1993
 10404  002EF0                     u8290:
 10405  002EF0                     l8017:
 10406                           
 10407                           ; BSR set to: 0
 10408  002EF0  0E01               	movlw	1
 10409  002EF2  6F6C               	movwf	___fldiv@aexp& (0+255),b
 10410  002EF4  EF85  F017         	goto	l1992
 10411  002EF8                     l1993:
 10412                           
 10413                           ; BSR set to: 0
 10414  002EF8  A02A               	btfss	___fldiv@b^0,0,c
 10415  002EFA  EF81  F017         	goto	u8301
 10416  002EFE  EF83  F017         	goto	u8300
 10417  002F02                     u8301:
 10418  002F02  EF85  F017         	goto	l1992
 10419  002F06                     u8300:
 10420  002F06  EF78  F017         	goto	l8017
 10421  002F0A                     l1992:
 10422                           
 10423                           ; BSR set to: 0
 10424  002F0A  516C               	movf	___fldiv@aexp& (0+255),w,b
 10425  002F0C  B4D8               	btfsc	status,2,c
 10426  002F0E  EF8B  F017         	goto	u8311
 10427  002F12  EF8D  F017         	goto	u8310
 10428  002F16                     u8311:
 10429  002F16  EFB1  F017         	goto	l8029
 10430  002F1A                     u8310:
 10431  002F1A                     
 10432                           ; BSR set to: 0
 10433  002F1A  0E01               	movlw	1
 10434  002F1C  262A               	addwf	___fldiv@b^0,f,c
 10435  002F1E  0E00               	movlw	0
 10436  002F20  222B               	addwfc	(___fldiv@b+1)^0,f,c
 10437  002F22  222C               	addwfc	(___fldiv@b+2)^0,f,c
 10438  002F24  222D               	addwfc	(___fldiv@b+3)^0,f,c
 10439  002F26                     
 10440                           ; BSR set to: 0
 10441  002F26  A02D               	btfss	(___fldiv@b+3)^0,0,c
 10442  002F28  EF98  F017         	goto	u8321
 10443  002F2C  EF9A  F017         	goto	u8320
 10444  002F30                     u8321:
 10445  002F30  EFB1  F017         	goto	l8029
 10446  002F34                     u8320:
 10447  002F34                     
 10448                           ; BSR set to: 0
 10449  002F34  C02A  F032         	movff	___fldiv@b,??___fldiv
 10450  002F38  C02B  F033         	movff	___fldiv@b+1,??___fldiv+1
 10451  002F3C  C02C  F034         	movff	___fldiv@b+2,??___fldiv+2
 10452  002F40  C02D  F035         	movff	___fldiv@b+3,??___fldiv+3
 10453  002F44  3435               	rlcf	(??___fldiv+3)^0,w,c
 10454  002F46  3235               	rrcf	(??___fldiv+3)^0,f,c
 10455  002F48  3234               	rrcf	(??___fldiv+2)^0,f,c
 10456  002F4A  3233               	rrcf	(??___fldiv+1)^0,f,c
 10457  002F4C  3232               	rrcf	??___fldiv^0,f,c
 10458  002F4E  C032  F02A         	movff	??___fldiv,___fldiv@b
 10459  002F52  C033  F02B         	movff	??___fldiv+1,___fldiv@b+1
 10460  002F56  C034  F02C         	movff	??___fldiv+2,___fldiv@b+2
 10461  002F5A  C035  F02D         	movff	??___fldiv+3,___fldiv@b+3
 10462  002F5E                     
 10463                           ; BSR set to: 0
 10464  002F5E  4B65               	infsnz	___fldiv@new_exp& (0+255),f,b
 10465  002F60  2B66               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 10466  002F62                     l8029:
 10467                           
 10468                           ; BSR set to: 0
 10469  002F62  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 10470  002F64  EFBC  F017         	goto	u8331
 10471  002F68  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 10472  002F6A  E108               	bnz	u8330
 10473  002F6C  2965               	incf	___fldiv@new_exp& (0+255),w,b
 10474  002F6E  A0D8               	btfss	status,0,c
 10475  002F70  EFBC  F017         	goto	u8331
 10476  002F74  EFBE  F017         	goto	u8330
 10477  002F78                     u8331:
 10478  002F78  EFC9  F017         	goto	l8033
 10479  002F7C                     u8330:
 10480  002F7C                     
 10481                           ; BSR set to: 0
 10482  002F7C  0E00               	movlw	0
 10483  002F7E  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
 10484  002F80  6965               	setf	___fldiv@new_exp& (0+255),b
 10485  002F82  0E00               	movlw	0
 10486  002F84  6E2A               	movwf	___fldiv@b^0,c
 10487  002F86  0E00               	movlw	0
 10488  002F88  6E2B               	movwf	(___fldiv@b+1)^0,c
 10489  002F8A  0E00               	movlw	0
 10490  002F8C  6E2C               	movwf	(___fldiv@b+2)^0,c
 10491  002F8E  0E00               	movlw	0
 10492  002F90  6E2D               	movwf	(___fldiv@b+3)^0,c
 10493  002F92                     l8033:
 10494                           
 10495                           ; BSR set to: 0
 10496  002F92  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 10497  002F94  EFD6  F017         	goto	u8340
 10498  002F98  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 10499  002F9A  E106               	bnz	u8341
 10500  002F9C  0565               	decf	___fldiv@new_exp& (0+255),w,b
 10501  002F9E  B0D8               	btfsc	status,0,c
 10502  002FA0  EFD4  F017         	goto	u8341
 10503  002FA4  EFD6  F017         	goto	u8340
 10504  002FA8                     u8341:
 10505  002FA8  EFE4  F017         	goto	l8037
 10506  002FAC                     u8340:
 10507  002FAC                     
 10508                           ; BSR set to: 0
 10509  002FAC  0E00               	movlw	0
 10510  002FAE  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
 10511  002FB0  0E00               	movlw	0
 10512  002FB2  6F65               	movwf	___fldiv@new_exp& (0+255),b
 10513  002FB4  0E00               	movlw	0
 10514  002FB6  6E2A               	movwf	___fldiv@b^0,c
 10515  002FB8  0E00               	movlw	0
 10516  002FBA  6E2B               	movwf	(___fldiv@b+1)^0,c
 10517  002FBC  0E00               	movlw	0
 10518  002FBE  6E2C               	movwf	(___fldiv@b+2)^0,c
 10519  002FC0  0E00               	movlw	0
 10520  002FC2  6E2D               	movwf	(___fldiv@b+3)^0,c
 10521  002FC4  0E00               	movlw	0
 10522  002FC6  6F64               	movwf	___fldiv@sign& (0+255),b
 10523  002FC8                     l8037:
 10524                           
 10525                           ; BSR set to: 0
 10526  002FC8  C065  F06B         	movff	___fldiv@new_exp,___fldiv@bexp
 10527  002FCC                     
 10528                           ; BSR set to: 0
 10529  002FCC  A16B               	btfss	___fldiv@bexp& (0+255),0,b
 10530  002FCE  EFEB  F017         	goto	u8351
 10531  002FD2  EFED  F017         	goto	u8350
 10532  002FD6                     u8351:
 10533  002FD6  EFF0  F017         	goto	l8043
 10534  002FDA                     u8350:
 10535  002FDA                     
 10536                           ; BSR set to: 0
 10537  002FDA  8E2C               	bsf	(___fldiv@b+2)^0,7,c
 10538  002FDC  EFF1  F017         	goto	l8045
 10539  002FE0                     l8043:
 10540                           
 10541                           ; BSR set to: 0
 10542  002FE0  9E2C               	bcf	(___fldiv@b+2)^0,7,c
 10543  002FE2                     l8045:
 10544                           
 10545                           ; BSR set to: 0
 10546  002FE2  90D8               	bcf	status,0,c
 10547  002FE4  316B               	rrcf	___fldiv@bexp& (0+255),w,b
 10548  002FE6  6E2D               	movwf	(___fldiv@b+3)^0,c
 10549  002FE8  EFA7  F016         	goto	l7959
 10550  002FEC                     l1979:
 10551                           
 10552                           ; BSR set to: 0
 10553  002FEC  0012               	return		;funcret
 10554  002FEE                     __end_of___fldiv:
 10555                           	callstack 0
 10556                           
 10557 ;; *************** function _PWM6_LoadDutyValue *****************
 10558 ;; Defined at:
 10559 ;;		line 74 in file "mcc_generated_files/pwm6.c"
 10560 ;; Parameters:    Size  Location     Type
 10561 ;;  dutyValue       2   19[COMRAM] unsigned short 
 10562 ;; Auto vars:     Size  Location     Type
 10563 ;;		None
 10564 ;; Return value:  Size  Location     Type
 10565 ;;                  1    wreg      void 
 10566 ;; Registers used:
 10567 ;;		wreg, status,2, status,0
 10568 ;; Tracked objects:
 10569 ;;		On entry : 0/0
 10570 ;;		On exit  : 0/0
 10571 ;;		Unchanged: 0/0
 10572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10573 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10575 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10576 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10577 ;;Total ram usage:        4 bytes
 10578 ;; Hardware stack levels used: 1
 10579 ;; Hardware stack levels required when called: 8
 10580 ;; This function calls:
 10581 ;;		Nothing
 10582 ;; This function is called by:
 10583 ;;		_setSteering
 10584 ;; This function uses a non-reentrant model
 10585 ;;
 10586                           
 10587                           	psect	text41
 10588  005DC4                     __ptext41:
 10589                           	callstack 0
 10590  005DC4                     _PWM6_LoadDutyValue:
 10591                           	callstack 19
 10592  005DC4                     
 10593                           ;mcc_generated_files/pwm6.c: 74:  void PWM6_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm6.c: 75:  {;mcc_generated_files/pwm6.c: 77:      PWM6DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 10594  005DC4  C014  F016         	movff	PWM6_LoadDutyValue@dutyValue,??_PWM6_LoadDutyValue
 10595  005DC8  C015  F017         	movff	PWM6_LoadDutyValue@dutyValue+1,??_PWM6_LoadDutyValue+1
 10596  005DCC  90D8               	bcf	status,0,c
 10597  005DCE  3217               	rrcf	(??_PWM6_LoadDutyValue+1)^0,f,c
 10598  005DD0  3216               	rrcf	??_PWM6_LoadDutyValue^0,f,c
 10599  005DD2  90D8               	bcf	status,0,c
 10600  005DD4  3217               	rrcf	(??_PWM6_LoadDutyValue+1)^0,f,c
 10601  005DD6  3216               	rrcf	??_PWM6_LoadDutyValue^0,f,c
 10602  005DD8  5016               	movf	??_PWM6_LoadDutyValue^0,w,c
 10603  005DDA  6E69               	movwf	105,c	;volatile
 10604                           
 10605                           ;mcc_generated_files/pwm6.c: 80:      PWM6DCL = (dutyValue & 0x0003)<<6;
 10606  005DDC  C014  F016         	movff	PWM6_LoadDutyValue@dutyValue,??_PWM6_LoadDutyValue
 10607  005DE0  0E03               	movlw	3
 10608  005DE2  1616               	andwf	??_PWM6_LoadDutyValue^0,f,c
 10609  005DE4  0E06               	movlw	6
 10610  005DE6  6E17               	movwf	(??_PWM6_LoadDutyValue+1)^0,c
 10611  005DE8                     u10135:
 10612  005DE8  90D8               	bcf	status,0,c
 10613  005DEA  3616               	rlcf	??_PWM6_LoadDutyValue^0,f,c
 10614  005DEC  2E17               	decfsz	(??_PWM6_LoadDutyValue+1)^0,f,c
 10615  005DEE  EFF4  F02E         	goto	u10135
 10616  005DF2  5016               	movf	??_PWM6_LoadDutyValue^0,w,c
 10617  005DF4  6E68               	movwf	104,c	;volatile
 10618  005DF6  0012               	return		;funcret
 10619  005DF8                     __end_of_PWM6_LoadDutyValue:
 10620                           	callstack 0
 10621                           
 10622 ;; *************** function _PWM5_LoadDutyValue *****************
 10623 ;; Defined at:
 10624 ;;		line 74 in file "mcc_generated_files/pwm5.c"
 10625 ;; Parameters:    Size  Location     Type
 10626 ;;  dutyValue       2   19[COMRAM] unsigned short 
 10627 ;; Auto vars:     Size  Location     Type
 10628 ;;		None
 10629 ;; Return value:  Size  Location     Type
 10630 ;;                  1    wreg      void 
 10631 ;; Registers used:
 10632 ;;		wreg, status,2, status,0
 10633 ;; Tracked objects:
 10634 ;;		On entry : 0/0
 10635 ;;		On exit  : 0/0
 10636 ;;		Unchanged: 0/0
 10637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10638 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10640 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10641 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10642 ;;Total ram usage:        4 bytes
 10643 ;; Hardware stack levels used: 1
 10644 ;; Hardware stack levels required when called: 8
 10645 ;; This function calls:
 10646 ;;		Nothing
 10647 ;; This function is called by:
 10648 ;;		_setSteering
 10649 ;; This function uses a non-reentrant model
 10650 ;;
 10651                           
 10652                           	psect	text42
 10653  005DF8                     __ptext42:
 10654                           	callstack 0
 10655  005DF8                     _PWM5_LoadDutyValue:
 10656                           	callstack 19
 10657  005DF8                     
 10658                           ;mcc_generated_files/pwm5.c: 74:  void PWM5_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm5.c: 75:  {;mcc_generated_files/pwm5.c: 77:      PWM5DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 10659  005DF8  C014  F016         	movff	PWM5_LoadDutyValue@dutyValue,??_PWM5_LoadDutyValue
 10660  005DFC  C015  F017         	movff	PWM5_LoadDutyValue@dutyValue+1,??_PWM5_LoadDutyValue+1
 10661  005E00  90D8               	bcf	status,0,c
 10662  005E02  3217               	rrcf	(??_PWM5_LoadDutyValue+1)^0,f,c
 10663  005E04  3216               	rrcf	??_PWM5_LoadDutyValue^0,f,c
 10664  005E06  90D8               	bcf	status,0,c
 10665  005E08  3217               	rrcf	(??_PWM5_LoadDutyValue+1)^0,f,c
 10666  005E0A  3216               	rrcf	??_PWM5_LoadDutyValue^0,f,c
 10667  005E0C  5016               	movf	??_PWM5_LoadDutyValue^0,w,c
 10668  005E0E  6E6D               	movwf	109,c	;volatile
 10669                           
 10670                           ;mcc_generated_files/pwm5.c: 80:      PWM5DCL = (dutyValue & 0x0003)<<6;
 10671  005E10  C014  F016         	movff	PWM5_LoadDutyValue@dutyValue,??_PWM5_LoadDutyValue
 10672  005E14  0E03               	movlw	3
 10673  005E16  1616               	andwf	??_PWM5_LoadDutyValue^0,f,c
 10674  005E18  0E06               	movlw	6
 10675  005E1A  6E17               	movwf	(??_PWM5_LoadDutyValue+1)^0,c
 10676  005E1C                     u10125:
 10677  005E1C  90D8               	bcf	status,0,c
 10678  005E1E  3616               	rlcf	??_PWM5_LoadDutyValue^0,f,c
 10679  005E20  2E17               	decfsz	(??_PWM5_LoadDutyValue+1)^0,f,c
 10680  005E22  EF0E  F02F         	goto	u10125
 10681  005E26  5016               	movf	??_PWM5_LoadDutyValue^0,w,c
 10682  005E28  6E6C               	movwf	108,c	;volatile
 10683  005E2A  0012               	return		;funcret
 10684  005E2C                     __end_of_PWM5_LoadDutyValue:
 10685                           	callstack 0
 10686                           
 10687 ;; *************** function _calcSpeed *****************
 10688 ;; Defined at:
 10689 ;;		line 280 in file "main.c"
 10690 ;; Parameters:    Size  Location     Type
 10691 ;;		None
 10692 ;; Auto vars:     Size  Location     Type
 10693 ;;  speed           2   39[BANK0 ] short 
 10694 ;; Return value:  Size  Location     Type
 10695 ;;                  1    wreg      void 
 10696 ;; Registers used:
 10697 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10698 ;; Tracked objects:
 10699 ;;		On entry : 0/0
 10700 ;;		On exit  : 0/0
 10701 ;;		Unchanged: 0/0
 10702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10704 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10705 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10706 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10707 ;;Total ram usage:        6 bytes
 10708 ;; Hardware stack levels used: 1
 10709 ;; Hardware stack levels required when called: 9
 10710 ;; This function calls:
 10711 ;;		___fladd
 10712 ;;		___flmul
 10713 ;;		___fltol
 10714 ;;		___xxtofl
 10715 ;; This function is called by:
 10716 ;;		_loop
 10717 ;; This function uses a non-reentrant model
 10718 ;;
 10719                           
 10720                           	psect	text43
 10721  0036F2                     __ptext43:
 10722                           	callstack 0
 10723  0036F2                     _calcSpeed:
 10724                           	callstack 20
 10725  0036F2                     
 10726                           ;main.c: 281:     int16_t speed = 0;
 10727  0036F2  0E00               	movlw	0
 10728  0036F4  0100               	movlb	0	; () banked
 10729  0036F6  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
 10730  0036F8  0E00               	movlw	0
 10731  0036FA  6F87               	movwf	calcSpeed@speed& (0+255),b
 10732                           
 10733                           ;main.c: 283:     switch (driveMode) {
 10734  0036FC  EF29  F01C         	goto	l9331
 10735  003700                     l9297:
 10736                           
 10737                           ; BSR set to: 0
 10738                           ;main.c: 285:             if (distFront > (30)) {
 10739  003700  51FE               	movf	(_distFront+1)& (0+255),w,b	;volatile
 10740  003702  E109               	bnz	u10550
 10741  003704  0E1F               	movlw	31
 10742  003706  5DFD               	subwf	_distFront& (0+255),w,b	;volatile
 10743  003708  A0D8               	btfss	status,0,c
 10744  00370A  EF89  F01B         	goto	u10551
 10745  00370E  EF8B  F01B         	goto	u10550
 10746  003712                     u10551:
 10747  003712  EF8D  F01B         	goto	l9301
 10748  003716                     u10550:
 10749  003716                     
 10750                           ; BSR set to: 0
 10751                           ;main.c: 286:                 driveMode = Straight;
 10752  003716  0E00               	movlw	0
 10753  003718  6FFC               	movwf	_driveMode& (0+255),b
 10754  00371A                     l9301:
 10755                           
 10756                           ; BSR set to: 0
 10757                           ;main.c: 288:             if (setSpeed > (115)) {
 10758  00371A  BFF0               	btfsc	(_setSpeed+1)& (0+255),7,b
 10759  00371C  EF99  F01B         	goto	u10561
 10760  003720  51F0               	movf	(_setSpeed+1)& (0+255),w,b
 10761  003722  E109               	bnz	u10560
 10762  003724  0E74               	movlw	116
 10763  003726  5DEF               	subwf	_setSpeed& (0+255),w,b
 10764  003728  A0D8               	btfss	status,0,c
 10765  00372A  EF99  F01B         	goto	u10561
 10766  00372E  EF9B  F01B         	goto	u10560
 10767  003732                     u10561:
 10768  003732  EF4E  F01C         	goto	l9333
 10769  003736                     u10560:
 10770  003736                     
 10771                           ; BSR set to: 0
 10772                           ;main.c: 289:                     speed = setSpeed;
 10773  003736  C0EF  F087         	movff	_setSpeed,calcSpeed@speed
 10774  00373A  C0F0  F088         	movff	_setSpeed+1,calcSpeed@speed+1
 10775  00373E                     
 10776                           ; BSR set to: 0
 10777                           ;main.c: 290:                 if (distFront < (15)) {
 10778  00373E  51FE               	movf	(_distFront+1)& (0+255),w,b	;volatile
 10779  003740  E107               	bnz	u10571
 10780  003742  0E0F               	movlw	15
 10781  003744  5DFD               	subwf	_distFront& (0+255),w,b	;volatile
 10782  003746  B0D8               	btfsc	status,0,c
 10783  003748  EFA8  F01B         	goto	u10571
 10784  00374C  EFAA  F01B         	goto	u10570
 10785  003750                     u10571:
 10786  003750  EFB0  F01B         	goto	l9309
 10787  003754                     u10570:
 10788  003754                     
 10789                           ; BSR set to: 0
 10790                           ;main.c: 291:                     speed -= 4;
 10791  003754  0EFC               	movlw	252
 10792  003756  2787               	addwf	calcSpeed@speed& (0+255),f,b
 10793  003758  0EFF               	movlw	255
 10794  00375A  2388               	addwfc	(calcSpeed@speed+1)& (0+255),f,b
 10795                           
 10796                           ;main.c: 292:                 } else {
 10797  00375C  EF4E  F01C         	goto	l9333
 10798  003760                     l9309:
 10799                           
 10800                           ; BSR set to: 0
 10801                           ;main.c: 293:                     speed -= 2;
 10802  003760  0EFE               	movlw	254
 10803  003762  2787               	addwf	calcSpeed@speed& (0+255),f,b
 10804  003764  0EFF               	movlw	255
 10805  003766  2388               	addwfc	(calcSpeed@speed+1)& (0+255),f,b
 10806  003768  EF4E  F01C         	goto	l9333
 10807  00376C                     l9311:
 10808                           
 10809                           ; BSR set to: 0
 10810                           ;main.c: 298:             if (distFront < (30)) {
 10811  00376C  51FE               	movf	(_distFront+1)& (0+255),w,b	;volatile
 10812  00376E  E107               	bnz	u10581
 10813  003770  0E1E               	movlw	30
 10814  003772  5DFD               	subwf	_distFront& (0+255),w,b	;volatile
 10815  003774  B0D8               	btfsc	status,0,c
 10816  003776  EFBF  F01B         	goto	u10581
 10817  00377A  EFC1  F01B         	goto	u10580
 10818  00377E                     u10581:
 10819  00377E  EFC3  F01B         	goto	l9315
 10820  003782                     u10580:
 10821  003782                     
 10822                           ; BSR set to: 0
 10823                           ;main.c: 299:                 driveMode = Brake;
 10824  003782  0E01               	movlw	1
 10825  003784  6FFC               	movwf	_driveMode& (0+255),b
 10826  003786                     l9315:
 10827                           
 10828                           ; BSR set to: 0
 10829                           ;main.c: 302:             if (distFront >= (150)) {
 10830  003786  51FE               	movf	(_distFront+1)& (0+255),w,b	;volatile
 10831  003788  E109               	bnz	u10590
 10832  00378A  0E96               	movlw	150
 10833  00378C  5DFD               	subwf	_distFront& (0+255),w,b	;volatile
 10834  00378E  A0D8               	btfss	status,0,c
 10835  003790  EFCC  F01B         	goto	u10591
 10836  003794  EFCE  F01B         	goto	u10590
 10837  003798                     u10591:
 10838  003798  EF17  F01C         	goto	l9319
 10839  00379C                     u10590:
 10840  00379C                     
 10841                           ; BSR set to: 0
 10842                           ;main.c: 303:                 speed = (int16_t) ((0.85) * (distFront - (150)) + (275));
 10843  00379C  0E00               	movlw	0
 10844  00379E  6F71               	movwf	___fladd@a& (0+255),b
 10845  0037A0  0E80               	movlw	128
 10846  0037A2  6F72               	movwf	(___fladd@a+1)& (0+255),b
 10847  0037A4  0E89               	movlw	137
 10848  0037A6  6F73               	movwf	(___fladd@a+2)& (0+255),b
 10849  0037A8  0E43               	movlw	67
 10850  0037AA  6F74               	movwf	(___fladd@a+3)& (0+255),b
 10851  0037AC  0E9A               	movlw	154
 10852  0037AE  6E2E               	movwf	___flmul@a^0,c
 10853  0037B0  0E99               	movlw	153
 10854  0037B2  6E2F               	movwf	(___flmul@a+1)^0,c
 10855  0037B4  0E59               	movlw	89
 10856  0037B6  6E30               	movwf	(___flmul@a+2)^0,c
 10857  0037B8  0E3F               	movlw	63
 10858  0037BA  6E31               	movwf	(___flmul@a+3)^0,c
 10859  0037BC  0E6A               	movlw	106
 10860  0037BE  6F83               	movwf	??_calcSpeed& (0+255),b
 10861  0037C0  0EFF               	movlw	255
 10862  0037C2  6F84               	movwf	(??_calcSpeed+1)& (0+255),b
 10863  0037C4  C0FD  F085         	movff	_distFront,??_calcSpeed+2	;volatile
 10864  0037C8  C0FE  F086         	movff	_distFront+1,??_calcSpeed+3	;volatile
 10865  0037CC  5183               	movf	??_calcSpeed& (0+255),w,b
 10866  0037CE  2785               	addwf	(??_calcSpeed+2)& (0+255),f,b
 10867  0037D0  5184               	movf	(??_calcSpeed+1)& (0+255),w,b
 10868  0037D2  2386               	addwfc	(??_calcSpeed+3)& (0+255),f,b
 10869  0037D4  C085  F01C         	movff	??_calcSpeed+2,___xxtofl@val
 10870  0037D8  C086  F01D         	movff	??_calcSpeed+3,___xxtofl@val+1
 10871  0037DC  6A1E               	clrf	(___xxtofl@val+2)^0,c
 10872  0037DE  6A1F               	clrf	(___xxtofl@val+3)^0,c
 10873  0037E0  0E00               	movlw	0
 10874  0037E2  EC64  F01E         	call	___xxtofl
 10875  0037E6  C01C  F02A         	movff	?___xxtofl,___flmul@b
 10876  0037EA  C01D  F02B         	movff	?___xxtofl+1,___flmul@b+1
 10877  0037EE  C01E  F02C         	movff	?___xxtofl+2,___flmul@b+2
 10878  0037F2  C01F  F02D         	movff	?___xxtofl+3,___flmul@b+3
 10879  0037F6  EC01  F014         	call	___flmul	;wreg free
 10880  0037FA  C02A  F06D         	movff	?___flmul,___fladd@b
 10881  0037FE  C02B  F06E         	movff	?___flmul+1,___fladd@b+1
 10882  003802  C02C  F06F         	movff	?___flmul+2,___fladd@b+2
 10883  003806  C02D  F070         	movff	?___flmul+3,___fladd@b+3
 10884  00380A  ECA0  F011         	call	___fladd	;wreg free
 10885  00380E  C06D  F079         	movff	?___fladd,___fltol@f1
 10886  003812  C06E  F07A         	movff	?___fladd+1,___fltol@f1+1
 10887  003816  C06F  F07B         	movff	?___fladd+2,___fltol@f1+2
 10888  00381A  C070  F07C         	movff	?___fladd+3,___fltol@f1+3
 10889  00381E  ECDE  F023         	call	___fltol	;wreg free
 10890  003822  C079  F087         	movff	?___fltol,calcSpeed@speed
 10891  003826  C07A  F088         	movff	?___fltol+1,calcSpeed@speed+1
 10892                           
 10893                           ;main.c: 304:             } else {
 10894  00382A  EF4E  F01C         	goto	l9333
 10895  00382E                     l9319:
 10896                           
 10897                           ; BSR set to: 0
 10898                           ;main.c: 305:                 speed = (275);
 10899  00382E  0E01               	movlw	1
 10900  003830  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
 10901  003832  0E13               	movlw	19
 10902  003834  6F87               	movwf	calcSpeed@speed& (0+255),b
 10903  003836  EF4E  F01C         	goto	l9333
 10904  00383A                     l9321:
 10905                           
 10906                           ; BSR set to: 0
 10907                           ;main.c: 310:             speed = (-125);
 10908  00383A  0EFF               	movlw	255
 10909  00383C  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
 10910  00383E  0E83               	movlw	131
 10911  003840  6F87               	movwf	calcSpeed@speed& (0+255),b
 10912                           
 10913                           ;main.c: 311:             break;
 10914  003842  EF4E  F01C         	goto	l9333
 10915  003846                     l9325:
 10916                           
 10917                           ; BSR set to: 0
 10918                           ;main.c: 316:             speed = (200);
 10919  003846  0E00               	movlw	0
 10920  003848  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
 10921  00384A  0EC8               	movlw	200
 10922  00384C  6F87               	movwf	calcSpeed@speed& (0+255),b
 10923                           
 10924                           ;main.c: 317:             break;
 10925  00384E  EF4E  F01C         	goto	l9333
 10926  003852                     l9331:
 10927                           
 10928                           ; BSR set to: 0
 10929  003852  51FC               	movf	_driveMode& (0+255),w,b
 10930  003854  6F83               	movwf	??_calcSpeed& (0+255),b
 10931  003856  6B84               	clrf	(??_calcSpeed+1)& (0+255),b
 10932                           
 10933                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10934                           ; Switch size 1, requested type "simple"
 10935                           ; Number of cases is 1, Range of values is 0 to 0
 10936                           ; switch strategies available:
 10937                           ; Name         Instructions Cycles
 10938                           ; simple_byte            4     3 (average)
 10939                           ;	Chosen strategy is simple_byte
 10940  003858  5184               	movf	(??_calcSpeed+1)& (0+255),w,b
 10941  00385A  0A00               	xorlw	0	; case 0
 10942  00385C  B4D8               	btfsc	status,2,c
 10943  00385E  EF33  F01C         	goto	l9587
 10944  003862  EF4E  F01C         	goto	l9333
 10945  003866                     l9587:
 10946                           
 10947                           ; BSR set to: 0
 10948                           ; Switch size 1, requested type "simple"
 10949                           ; Number of cases is 6, Range of values is 0 to 5
 10950                           ; switch strategies available:
 10951                           ; Name         Instructions Cycles
 10952                           ; simple_byte           19    10 (average)
 10953                           ;	Chosen strategy is simple_byte
 10954  003866  5183               	movf	??_calcSpeed& (0+255),w,b
 10955  003868  0A00               	xorlw	0	; case 0
 10956  00386A  B4D8               	btfsc	status,2,c
 10957  00386C  EFB6  F01B         	goto	l9311
 10958  003870  0A01               	xorlw	1	; case 1
 10959  003872  B4D8               	btfsc	status,2,c
 10960  003874  EF80  F01B         	goto	l9297
 10961  003878  0A03               	xorlw	3	; case 2
 10962  00387A  B4D8               	btfsc	status,2,c
 10963  00387C  EF1D  F01C         	goto	l9321
 10964  003880  0A01               	xorlw	1	; case 3
 10965  003882  B4D8               	btfsc	status,2,c
 10966  003884  EF1D  F01C         	goto	l9321
 10967  003888  0A07               	xorlw	7	; case 4
 10968  00388A  B4D8               	btfsc	status,2,c
 10969  00388C  EF23  F01C         	goto	l9325
 10970  003890  0A01               	xorlw	1	; case 5
 10971  003892  B4D8               	btfsc	status,2,c
 10972  003894  EF23  F01C         	goto	l9325
 10973  003898  EF4E  F01C         	goto	l9333
 10974  00389C                     l9333:
 10975                           
 10976                           ;main.c: 323:     if (speed > (400)) {
 10977  00389C  0100               	movlb	0	; () banked
 10978  00389E  BF88               	btfsc	(calcSpeed@speed+1)& (0+255),7,b
 10979  0038A0  EF5B  F01C         	goto	u10601
 10980  0038A4  0E91               	movlw	145
 10981  0038A6  5D87               	subwf	calcSpeed@speed& (0+255),w,b
 10982  0038A8  0E01               	movlw	1
 10983  0038AA  5988               	subwfb	(calcSpeed@speed+1)& (0+255),w,b
 10984  0038AC  A0D8               	btfss	status,0,c
 10985  0038AE  EF5B  F01C         	goto	u10601
 10986  0038B2  EF5D  F01C         	goto	u10600
 10987  0038B6                     u10601:
 10988  0038B6  EF61  F01C         	goto	l9337
 10989  0038BA                     u10600:
 10990  0038BA                     
 10991                           ; BSR set to: 0
 10992                           ;main.c: 324:         speed = (400);
 10993  0038BA  0E01               	movlw	1
 10994  0038BC  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
 10995  0038BE  0E90               	movlw	144
 10996  0038C0  6F87               	movwf	calcSpeed@speed& (0+255),b
 10997  0038C2                     l9337:
 10998                           
 10999                           ; BSR set to: 0
 11000                           ;main.c: 326:     if (speed < (-250)) {
 11001  0038C2  AF88               	btfss	(calcSpeed@speed+1)& (0+255),7,b
 11002  0038C4  EF6D  F01C         	goto	u10611
 11003  0038C8  0E06               	movlw	6
 11004  0038CA  5D87               	subwf	calcSpeed@speed& (0+255),w,b
 11005  0038CC  0EFF               	movlw	255
 11006  0038CE  5988               	subwfb	(calcSpeed@speed+1)& (0+255),w,b
 11007  0038D0  B0D8               	btfsc	status,0,c
 11008  0038D2  EF6D  F01C         	goto	u10611
 11009  0038D6  EF6F  F01C         	goto	u10610
 11010  0038DA                     u10611:
 11011  0038DA  EF73  F01C         	goto	l9341
 11012  0038DE                     u10610:
 11013  0038DE                     
 11014                           ; BSR set to: 0
 11015                           ;main.c: 327:         speed = (-250);
 11016  0038DE  0EFF               	movlw	255
 11017  0038E0  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
 11018  0038E2  0E06               	movlw	6
 11019  0038E4  6F87               	movwf	calcSpeed@speed& (0+255),b
 11020  0038E6                     l9341:
 11021                           
 11022                           ; BSR set to: 0
 11023                           ;main.c: 329:     setSpeed = speed;
 11024  0038E6  C087  F0EF         	movff	calcSpeed@speed,_setSpeed
 11025  0038EA  C088  F0F0         	movff	calcSpeed@speed+1,_setSpeed+1
 11026  0038EE                     
 11027                           ; BSR set to: 0
 11028  0038EE  0012               	return		;funcret
 11029  0038F0                     __end_of_calcSpeed:
 11030                           	callstack 0
 11031                           
 11032 ;; *************** function ___fladd *****************
 11033 ;; Defined at:
 11034 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
 11035 ;; Parameters:    Size  Location     Type
 11036 ;;  b               4   13[BANK0 ] void 
 11037 ;;  a               4   17[BANK0 ] void 
 11038 ;; Auto vars:     Size  Location     Type
 11039 ;;  grs             1   24[BANK0 ] unsigned char 
 11040 ;;  bexp            1   23[BANK0 ] unsigned char 
 11041 ;;  aexp            1   22[BANK0 ] unsigned char 
 11042 ;;  signs           1   21[BANK0 ] unsigned char 
 11043 ;; Return value:  Size  Location     Type
 11044 ;;                  4   13[BANK0 ] unsigned char 
 11045 ;; Registers used:
 11046 ;;		wreg, status,2, status,0
 11047 ;; Tracked objects:
 11048 ;;		On entry : 0/0
 11049 ;;		On exit  : 0/0
 11050 ;;		Unchanged: 0/0
 11051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11052 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11053 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11054 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11055 ;;      Totals:         4      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11056 ;;Total ram usage:       16 bytes
 11057 ;; Hardware stack levels used: 1
 11058 ;; Hardware stack levels required when called: 8
 11059 ;; This function calls:
 11060 ;;		Nothing
 11061 ;; This function is called by:
 11062 ;;		_calcSpeed
 11063 ;;		___flsub
 11064 ;;		_efgtoa
 11065 ;; This function uses a non-reentrant model
 11066 ;;
 11067                           
 11068                           	psect	text44
 11069  002340                     __ptext44:
 11070                           	callstack 0
 11071  002340                     ___fladd:
 11072                           	callstack 15
 11073  002340  0100               	movlb	0	; () banked
 11074  002342  5170               	movf	(___fladd@b+3)& (0+255),w,b
 11075  002344  0B80               	andlw	128
 11076  002346  6F75               	movwf	___fladd@signs& (0+255),b
 11077  002348  5170               	movf	(___fladd@b+3)& (0+255),w,b
 11078  00234A  2570               	addwf	(___fladd@b+3)& (0+255),w,b
 11079  00234C  6F77               	movwf	___fladd@bexp& (0+255),b
 11080  00234E                     
 11081                           ; BSR set to: 0
 11082  00234E  AF6F               	btfss	(___fladd@b+2)& (0+255),7,b
 11083  002350  EFAC  F011         	goto	u7571
 11084  002354  EFAE  F011         	goto	u7570
 11085  002358                     u7571:
 11086  002358  EFAF  F011         	goto	l7617
 11087  00235C                     u7570:
 11088  00235C                     
 11089                           ; BSR set to: 0
 11090  00235C  8177               	bsf	___fladd@bexp& (0+255),0,b
 11091  00235E                     l7617:
 11092                           
 11093                           ; BSR set to: 0
 11094  00235E  5177               	movf	___fladd@bexp& (0+255),w,b
 11095  002360  B4D8               	btfsc	status,2,c
 11096  002362  EFB5  F011         	goto	u7581
 11097  002366  EFB7  F011         	goto	u7580
 11098  00236A                     u7581:
 11099  00236A  EFCC  F011         	goto	l7627
 11100  00236E                     u7580:
 11101  00236E                     
 11102                           ; BSR set to: 0
 11103  00236E  2977               	incf	___fladd@bexp& (0+255),w,b
 11104  002370  A4D8               	btfss	status,2,c
 11105  002372  EFBD  F011         	goto	u7591
 11106  002376  EFBF  F011         	goto	u7590
 11107  00237A                     u7591:
 11108  00237A  EFC7  F011         	goto	l7623
 11109  00237E                     u7590:
 11110  00237E                     
 11111                           ; BSR set to: 0
 11112  00237E  0E00               	movlw	0
 11113  002380  6F6D               	movwf	___fladd@b& (0+255),b
 11114  002382  0E00               	movlw	0
 11115  002384  6F6E               	movwf	(___fladd@b+1)& (0+255),b
 11116  002386  0E00               	movlw	0
 11117  002388  6F6F               	movwf	(___fladd@b+2)& (0+255),b
 11118  00238A  0E00               	movlw	0
 11119  00238C  6F70               	movwf	(___fladd@b+3)& (0+255),b
 11120  00238E                     l7623:
 11121                           
 11122                           ; BSR set to: 0
 11123  00238E  8F6F               	bsf	(___fladd@b+2)& (0+255),7,b
 11124  002390                     
 11125                           ; BSR set to: 0
 11126  002390  0E00               	movlw	0
 11127  002392  6F70               	movwf	(___fladd@b+3)& (0+255),b
 11128  002394  EFD4  F011         	goto	l7629
 11129  002398                     l7627:
 11130                           
 11131                           ; BSR set to: 0
 11132  002398  0E00               	movlw	0
 11133  00239A  6F6D               	movwf	___fladd@b& (0+255),b
 11134  00239C  0E00               	movlw	0
 11135  00239E  6F6E               	movwf	(___fladd@b+1)& (0+255),b
 11136  0023A0  0E00               	movlw	0
 11137  0023A2  6F6F               	movwf	(___fladd@b+2)& (0+255),b
 11138  0023A4  0E00               	movlw	0
 11139  0023A6  6F70               	movwf	(___fladd@b+3)& (0+255),b
 11140  0023A8                     l7629:
 11141                           
 11142                           ; BSR set to: 0
 11143  0023A8  5174               	movf	(___fladd@a+3)& (0+255),w,b
 11144  0023AA  0B80               	andlw	128
 11145  0023AC  6F76               	movwf	___fladd@aexp& (0+255),b
 11146  0023AE                     
 11147                           ; BSR set to: 0
 11148  0023AE  5175               	movf	___fladd@signs& (0+255),w,b
 11149  0023B0  1976               	xorwf	___fladd@aexp& (0+255),w,b
 11150  0023B2  B4D8               	btfsc	status,2,c
 11151  0023B4  EFDE  F011         	goto	u7601
 11152  0023B8  EFE0  F011         	goto	u7600
 11153  0023BC                     u7601:
 11154  0023BC  EFE1  F011         	goto	l7635
 11155  0023C0                     u7600:
 11156  0023C0                     
 11157                           ; BSR set to: 0
 11158  0023C0  8D75               	bsf	___fladd@signs& (0+255),6,b
 11159  0023C2                     l7635:
 11160                           
 11161                           ; BSR set to: 0
 11162  0023C2  5174               	movf	(___fladd@a+3)& (0+255),w,b
 11163  0023C4  2574               	addwf	(___fladd@a+3)& (0+255),w,b
 11164  0023C6  6F76               	movwf	___fladd@aexp& (0+255),b
 11165  0023C8                     
 11166                           ; BSR set to: 0
 11167  0023C8  AF73               	btfss	(___fladd@a+2)& (0+255),7,b
 11168  0023CA  EFE9  F011         	goto	u7611
 11169  0023CE  EFEB  F011         	goto	u7610
 11170  0023D2                     u7611:
 11171  0023D2  EFEC  F011         	goto	l7641
 11172  0023D6                     u7610:
 11173  0023D6                     
 11174                           ; BSR set to: 0
 11175  0023D6  8176               	bsf	___fladd@aexp& (0+255),0,b
 11176  0023D8                     l7641:
 11177                           
 11178                           ; BSR set to: 0
 11179  0023D8  5176               	movf	___fladd@aexp& (0+255),w,b
 11180  0023DA  B4D8               	btfsc	status,2,c
 11181  0023DC  EFF2  F011         	goto	u7621
 11182  0023E0  EFF4  F011         	goto	u7620
 11183  0023E4                     u7621:
 11184  0023E4  EF09  F012         	goto	l7651
 11185  0023E8                     u7620:
 11186  0023E8                     
 11187                           ; BSR set to: 0
 11188  0023E8  2976               	incf	___fladd@aexp& (0+255),w,b
 11189  0023EA  A4D8               	btfss	status,2,c
 11190  0023EC  EFFA  F011         	goto	u7631
 11191  0023F0  EFFC  F011         	goto	u7630
 11192  0023F4                     u7631:
 11193  0023F4  EF04  F012         	goto	l7647
 11194  0023F8                     u7630:
 11195  0023F8                     
 11196                           ; BSR set to: 0
 11197  0023F8  0E00               	movlw	0
 11198  0023FA  6F71               	movwf	___fladd@a& (0+255),b
 11199  0023FC  0E00               	movlw	0
 11200  0023FE  6F72               	movwf	(___fladd@a+1)& (0+255),b
 11201  002400  0E00               	movlw	0
 11202  002402  6F73               	movwf	(___fladd@a+2)& (0+255),b
 11203  002404  0E00               	movlw	0
 11204  002406  6F74               	movwf	(___fladd@a+3)& (0+255),b
 11205  002408                     l7647:
 11206                           
 11207                           ; BSR set to: 0
 11208  002408  8F73               	bsf	(___fladd@a+2)& (0+255),7,b
 11209  00240A                     
 11210                           ; BSR set to: 0
 11211  00240A  0E00               	movlw	0
 11212  00240C  6F74               	movwf	(___fladd@a+3)& (0+255),b
 11213  00240E  EF11  F012         	goto	l7653
 11214  002412                     l7651:
 11215                           
 11216                           ; BSR set to: 0
 11217  002412  0E00               	movlw	0
 11218  002414  6F71               	movwf	___fladd@a& (0+255),b
 11219  002416  0E00               	movlw	0
 11220  002418  6F72               	movwf	(___fladd@a+1)& (0+255),b
 11221  00241A  0E00               	movlw	0
 11222  00241C  6F73               	movwf	(___fladd@a+2)& (0+255),b
 11223  00241E  0E00               	movlw	0
 11224  002420  6F74               	movwf	(___fladd@a+3)& (0+255),b
 11225  002422                     l7653:
 11226                           
 11227                           ; BSR set to: 0
 11228  002422  5177               	movf	___fladd@bexp& (0+255),w,b
 11229  002424  5D76               	subwf	___fladd@aexp& (0+255),w,b
 11230  002426  B0D8               	btfsc	status,0,c
 11231  002428  EF18  F012         	goto	u7641
 11232  00242C  EF1A  F012         	goto	u7640
 11233  002430                     u7641:
 11234  002430  EF41  F012         	goto	l7689
 11235  002434                     u7640:
 11236  002434                     
 11237                           ; BSR set to: 0
 11238  002434  AD75               	btfss	___fladd@signs& (0+255),6,b
 11239  002436  EF1F  F012         	goto	u7651
 11240  00243A  EF21  F012         	goto	u7650
 11241  00243E                     u7651:
 11242  00243E  EF23  F012         	goto	l7659
 11243  002442                     u7650:
 11244  002442                     
 11245                           ; BSR set to: 0
 11246  002442  0E80               	movlw	128
 11247  002444  1B75               	xorwf	___fladd@signs& (0+255),f,b
 11248  002446                     l7659:
 11249                           
 11250                           ; BSR set to: 0
 11251  002446  C077  F078         	movff	___fladd@bexp,___fladd@grs
 11252  00244A                     
 11253                           ; BSR set to: 0
 11254  00244A  C076  F077         	movff	___fladd@aexp,___fladd@bexp
 11255  00244E                     
 11256                           ; BSR set to: 0
 11257  00244E  C078  F076         	movff	___fladd@grs,___fladd@aexp
 11258  002452                     
 11259                           ; BSR set to: 0
 11260  002452  C06D  F078         	movff	___fladd@b,___fladd@grs
 11261  002456                     
 11262                           ; BSR set to: 0
 11263  002456  C071  F06D         	movff	___fladd@a,___fladd@b
 11264  00245A                     
 11265                           ; BSR set to: 0
 11266  00245A  C078  F071         	movff	___fladd@grs,___fladd@a
 11267  00245E                     
 11268                           ; BSR set to: 0
 11269  00245E  C06E  F078         	movff	___fladd@b+1,___fladd@grs
 11270  002462                     
 11271                           ; BSR set to: 0
 11272  002462  C072  F06E         	movff	___fladd@a+1,___fladd@b+1
 11273  002466                     
 11274                           ; BSR set to: 0
 11275  002466  C078  F072         	movff	___fladd@grs,___fladd@a+1
 11276  00246A                     
 11277                           ; BSR set to: 0
 11278  00246A  C06F  F078         	movff	___fladd@b+2,___fladd@grs
 11279  00246E                     
 11280                           ; BSR set to: 0
 11281  00246E  C073  F06F         	movff	___fladd@a+2,___fladd@b+2
 11282  002472                     
 11283                           ; BSR set to: 0
 11284  002472  C078  F073         	movff	___fladd@grs,___fladd@a+2
 11285  002476                     
 11286                           ; BSR set to: 0
 11287  002476  C070  F078         	movff	___fladd@b+3,___fladd@grs
 11288  00247A                     
 11289                           ; BSR set to: 0
 11290  00247A  C074  F070         	movff	___fladd@a+3,___fladd@b+3
 11291  00247E                     
 11292                           ; BSR set to: 0
 11293  00247E  C078  F074         	movff	___fladd@grs,___fladd@a+3
 11294  002482                     l7689:
 11295                           
 11296                           ; BSR set to: 0
 11297  002482  0E00               	movlw	0
 11298  002484  6F78               	movwf	___fladd@grs& (0+255),b
 11299  002486                     
 11300                           ; BSR set to: 0
 11301  002486  5177               	movf	___fladd@bexp& (0+255),w,b
 11302  002488  C076  F036         	movff	___fladd@aexp,??___fladd
 11303  00248C  6A37               	clrf	(??___fladd+1)^0,c
 11304  00248E  5E36               	subwf	??___fladd^0,f,c
 11305  002490  0E00               	movlw	0
 11306  002492  5A37               	subwfb	(??___fladd+1)^0,f,c
 11307  002494  BE37               	btfsc	(??___fladd+1)^0,7,c
 11308  002496  EF56  F012         	goto	u7661
 11309  00249A  5037               	movf	(??___fladd+1)^0,w,c
 11310  00249C  E109               	bnz	u7660
 11311  00249E  0E1A               	movlw	26
 11312  0024A0  5C36               	subwf	??___fladd^0,w,c
 11313  0024A2  A0D8               	btfss	status,0,c
 11314  0024A4  EF56  F012         	goto	u7661
 11315  0024A8  EF58  F012         	goto	u7660
 11316  0024AC                     u7661:
 11317  0024AC  EF8F  F012         	goto	l1926
 11318  0024B0                     u7660:
 11319  0024B0                     
 11320                           ; BSR set to: 0
 11321  0024B0  516D               	movf	___fladd@b& (0+255),w,b
 11322  0024B2  116E               	iorwf	(___fladd@b+1)& (0+255),w,b
 11323  0024B4  116F               	iorwf	(___fladd@b+2)& (0+255),w,b
 11324  0024B6  1170               	iorwf	(___fladd@b+3)& (0+255),w,b
 11325  0024B8  A4D8               	btfss	status,2,c
 11326  0024BA  EF61  F012         	goto	u7671
 11327  0024BE  EF64  F012         	goto	u7670
 11328  0024C2                     u7671:
 11329  0024C2  0E01               	movlw	1
 11330  0024C4  EF65  F012         	goto	u7680
 11331  0024C8                     u7670:
 11332  0024C8  0E00               	movlw	0
 11333  0024CA                     u7680:
 11334  0024CA  6F78               	movwf	___fladd@grs& (0+255),b
 11335  0024CC                     
 11336                           ; BSR set to: 0
 11337  0024CC  0E00               	movlw	0
 11338  0024CE  6F6D               	movwf	___fladd@b& (0+255),b
 11339  0024D0  0E00               	movlw	0
 11340  0024D2  6F6E               	movwf	(___fladd@b+1)& (0+255),b
 11341  0024D4  0E00               	movlw	0
 11342  0024D6  6F6F               	movwf	(___fladd@b+2)& (0+255),b
 11343  0024D8  0E00               	movlw	0
 11344  0024DA  6F70               	movwf	(___fladd@b+3)& (0+255),b
 11345  0024DC                     
 11346                           ; BSR set to: 0
 11347  0024DC  C076  F077         	movff	___fladd@aexp,___fladd@bexp
 11348  0024E0  EF98  F012         	goto	l1925
 11349  0024E4                     l1927:
 11350                           
 11351                           ; BSR set to: 0
 11352  0024E4  A178               	btfss	___fladd@grs& (0+255),0,b
 11353  0024E6  EF77  F012         	goto	u7691
 11354  0024EA  EF79  F012         	goto	u7690
 11355  0024EE                     u7691:
 11356  0024EE  EF7F  F012         	goto	l7701
 11357  0024F2                     u7690:
 11358  0024F2                     
 11359                           ; BSR set to: 0
 11360  0024F2  90D8               	bcf	status,0,c
 11361  0024F4  3178               	rrcf	___fladd@grs& (0+255),w,b
 11362  0024F6  0901               	iorlw	1
 11363  0024F8  6F78               	movwf	___fladd@grs& (0+255),b
 11364  0024FA  EF81  F012         	goto	l7703
 11365  0024FE                     l7701:
 11366                           
 11367                           ; BSR set to: 0
 11368  0024FE  90D8               	bcf	status,0,c
 11369  002500  3378               	rrcf	___fladd@grs& (0+255),f,b
 11370  002502                     l7703:
 11371                           
 11372                           ; BSR set to: 0
 11373  002502  A16D               	btfss	___fladd@b& (0+255),0,b
 11374  002504  EF86  F012         	goto	u7701
 11375  002508  EF88  F012         	goto	u7700
 11376  00250C                     u7701:
 11377  00250C  EF89  F012         	goto	l7707
 11378  002510                     u7700:
 11379  002510                     
 11380                           ; BSR set to: 0
 11381  002510  8F78               	bsf	___fladd@grs& (0+255),7,b
 11382  002512                     l7707:
 11383                           
 11384                           ; BSR set to: 0
 11385  002512  3570               	rlcf	(___fladd@b+3)& (0+255),w,b
 11386  002514  3370               	rrcf	(___fladd@b+3)& (0+255),f,b
 11387  002516  336F               	rrcf	(___fladd@b+2)& (0+255),f,b
 11388  002518  336E               	rrcf	(___fladd@b+1)& (0+255),f,b
 11389  00251A  336D               	rrcf	___fladd@b& (0+255),f,b
 11390  00251C                     
 11391                           ; BSR set to: 0
 11392  00251C  2B77               	incf	___fladd@bexp& (0+255),f,b
 11393  00251E                     l1926:
 11394                           
 11395                           ; BSR set to: 0
 11396  00251E  5176               	movf	___fladd@aexp& (0+255),w,b
 11397  002520  5D77               	subwf	___fladd@bexp& (0+255),w,b
 11398  002522  A0D8               	btfss	status,0,c
 11399  002524  EF96  F012         	goto	u7711
 11400  002528  EF98  F012         	goto	u7710
 11401  00252C                     u7711:
 11402  00252C  EF72  F012         	goto	l1927
 11403  002530                     u7710:
 11404  002530                     l1925:
 11405                           
 11406                           ; BSR set to: 0
 11407  002530  BD75               	btfsc	___fladd@signs& (0+255),6,b
 11408  002532  EF9D  F012         	goto	u7721
 11409  002536  EF9F  F012         	goto	u7720
 11410  00253A                     u7721:
 11411  00253A  EFDF  F012         	goto	l7735
 11412  00253E                     u7720:
 11413  00253E                     
 11414                           ; BSR set to: 0
 11415  00253E  5177               	movf	___fladd@bexp& (0+255),w,b
 11416  002540  A4D8               	btfss	status,2,c
 11417  002542  EFA5  F012         	goto	u7731
 11418  002546  EFA7  F012         	goto	u7730
 11419  00254A                     u7731:
 11420  00254A  EFB1  F012         	goto	l7717
 11421  00254E                     u7730:
 11422  00254E                     
 11423                           ; BSR set to: 0
 11424  00254E  0E00               	movlw	0
 11425  002550  6F6D               	movwf	?___fladd& (0+255),b
 11426  002552  0E00               	movlw	0
 11427  002554  6F6E               	movwf	(?___fladd+1)& (0+255),b
 11428  002556  0E00               	movlw	0
 11429  002558  6F6F               	movwf	(?___fladd+2)& (0+255),b
 11430  00255A  0E00               	movlw	0
 11431  00255C  6F70               	movwf	(?___fladd+3)& (0+255),b
 11432  00255E  EF00  F014         	goto	l1934
 11433  002562                     l7717:
 11434                           
 11435                           ; BSR set to: 0
 11436  002562  5171               	movf	___fladd@a& (0+255),w,b
 11437  002564  276D               	addwf	___fladd@b& (0+255),f,b
 11438  002566  5172               	movf	(___fladd@a+1)& (0+255),w,b
 11439  002568  236E               	addwfc	(___fladd@b+1)& (0+255),f,b
 11440  00256A  5173               	movf	(___fladd@a+2)& (0+255),w,b
 11441  00256C  236F               	addwfc	(___fladd@b+2)& (0+255),f,b
 11442  00256E  5174               	movf	(___fladd@a+3)& (0+255),w,b
 11443  002570  2370               	addwfc	(___fladd@b+3)& (0+255),f,b
 11444  002572                     
 11445                           ; BSR set to: 0
 11446  002572  A170               	btfss	(___fladd@b+3)& (0+255),0,b
 11447  002574  EFBE  F012         	goto	u7741
 11448  002578  EFC0  F012         	goto	u7740
 11449  00257C                     u7741:
 11450  00257C  EF6C  F013         	goto	l7771
 11451  002580                     u7740:
 11452  002580                     
 11453                           ; BSR set to: 0
 11454  002580  A178               	btfss	___fladd@grs& (0+255),0,b
 11455  002582  EFC5  F012         	goto	u7751
 11456  002586  EFC7  F012         	goto	u7750
 11457  00258A                     u7751:
 11458  00258A  EFCD  F012         	goto	l7725
 11459  00258E                     u7750:
 11460  00258E                     
 11461                           ; BSR set to: 0
 11462  00258E  90D8               	bcf	status,0,c
 11463  002590  3178               	rrcf	___fladd@grs& (0+255),w,b
 11464  002592  0901               	iorlw	1
 11465  002594  6F78               	movwf	___fladd@grs& (0+255),b
 11466  002596  EFCF  F012         	goto	l7727
 11467  00259A                     l7725:
 11468                           
 11469                           ; BSR set to: 0
 11470  00259A  90D8               	bcf	status,0,c
 11471  00259C  3378               	rrcf	___fladd@grs& (0+255),f,b
 11472  00259E                     l7727:
 11473                           
 11474                           ; BSR set to: 0
 11475  00259E  A16D               	btfss	___fladd@b& (0+255),0,b
 11476  0025A0  EFD4  F012         	goto	u7761
 11477  0025A4  EFD6  F012         	goto	u7760
 11478  0025A8                     u7761:
 11479  0025A8  EFD7  F012         	goto	l7731
 11480  0025AC                     u7760:
 11481  0025AC                     
 11482                           ; BSR set to: 0
 11483  0025AC  8F78               	bsf	___fladd@grs& (0+255),7,b
 11484  0025AE                     l7731:
 11485                           
 11486                           ; BSR set to: 0
 11487  0025AE  3570               	rlcf	(___fladd@b+3)& (0+255),w,b
 11488  0025B0  3370               	rrcf	(___fladd@b+3)& (0+255),f,b
 11489  0025B2  336F               	rrcf	(___fladd@b+2)& (0+255),f,b
 11490  0025B4  336E               	rrcf	(___fladd@b+1)& (0+255),f,b
 11491  0025B6  336D               	rrcf	___fladd@b& (0+255),f,b
 11492  0025B8                     
 11493                           ; BSR set to: 0
 11494  0025B8  2B77               	incf	___fladd@bexp& (0+255),f,b
 11495  0025BA  EF6C  F013         	goto	l7771
 11496  0025BE                     l7735:
 11497                           
 11498                           ; BSR set to: 0
 11499  0025BE  5171               	movf	___fladd@a& (0+255),w,b
 11500  0025C0  5D6D               	subwf	___fladd@b& (0+255),w,b
 11501  0025C2  5172               	movf	(___fladd@a+1)& (0+255),w,b
 11502  0025C4  596E               	subwfb	(___fladd@b+1)& (0+255),w,b
 11503  0025C6  5173               	movf	(___fladd@a+2)& (0+255),w,b
 11504  0025C8  596F               	subwfb	(___fladd@b+2)& (0+255),w,b
 11505  0025CA  5170               	movf	(___fladd@b+3)& (0+255),w,b
 11506  0025CC  0A80               	xorlw	128
 11507  0025CE  6E36               	movwf	??___fladd^0,c
 11508  0025D0  5174               	movf	(___fladd@a+3)& (0+255),w,b
 11509  0025D2  0A80               	xorlw	128
 11510  0025D4  5836               	subwfb	??___fladd^0,w,c
 11511  0025D6  B0D8               	btfsc	status,0,c
 11512  0025D8  EFF0  F012         	goto	u7771
 11513  0025DC  EFF2  F012         	goto	u7770
 11514  0025E0                     u7771:
 11515  0025E0  EF1D  F013         	goto	l7745
 11516  0025E4                     u7770:
 11517  0025E4                     
 11518                           ; BSR set to: 0
 11519  0025E4  516D               	movf	___fladd@b& (0+255),w,b
 11520  0025E6  5D71               	subwf	___fladd@a& (0+255),w,b
 11521  0025E8  6E36               	movwf	??___fladd^0,c
 11522  0025EA  516E               	movf	(___fladd@b+1)& (0+255),w,b
 11523  0025EC  5972               	subwfb	(___fladd@a+1)& (0+255),w,b
 11524  0025EE  6E37               	movwf	(??___fladd+1)^0,c
 11525  0025F0  516F               	movf	(___fladd@b+2)& (0+255),w,b
 11526  0025F2  5973               	subwfb	(___fladd@a+2)& (0+255),w,b
 11527  0025F4  6E38               	movwf	(??___fladd+2)^0,c
 11528  0025F6  5170               	movf	(___fladd@b+3)& (0+255),w,b
 11529  0025F8  5974               	subwfb	(___fladd@a+3)& (0+255),w,b
 11530  0025FA  6E39               	movwf	(??___fladd+3)^0,c
 11531  0025FC  0EFF               	movlw	255
 11532  0025FE  2436               	addwf	??___fladd^0,w,c
 11533  002600  6F6D               	movwf	___fladd@b& (0+255),b
 11534  002602  0EFF               	movlw	255
 11535  002604  2037               	addwfc	(??___fladd+1)^0,w,c
 11536  002606  6F6E               	movwf	(___fladd@b+1)& (0+255),b
 11537  002608  0EFF               	movlw	255
 11538  00260A  2038               	addwfc	(??___fladd+2)^0,w,c
 11539  00260C  6F6F               	movwf	(___fladd@b+2)& (0+255),b
 11540  00260E  0EFF               	movlw	255
 11541  002610  2039               	addwfc	(??___fladd+3)^0,w,c
 11542  002612  6F70               	movwf	(___fladd@b+3)& (0+255),b
 11543  002614  0E80               	movlw	128
 11544  002616  1B75               	xorwf	___fladd@signs& (0+255),f,b
 11545  002618                     
 11546                           ; BSR set to: 0
 11547  002618  6D78               	negf	___fladd@grs& (0+255),b
 11548  00261A                     
 11549                           ; BSR set to: 0
 11550  00261A  5178               	movf	___fladd@grs& (0+255),w,b
 11551  00261C  A4D8               	btfss	status,2,c
 11552  00261E  EF13  F013         	goto	u7781
 11553  002622  EF15  F013         	goto	u7780
 11554  002626                     u7781:
 11555  002626  EF25  F013         	goto	l1942
 11556  00262A                     u7780:
 11557  00262A                     
 11558                           ; BSR set to: 0
 11559  00262A  0E01               	movlw	1
 11560  00262C  276D               	addwf	___fladd@b& (0+255),f,b
 11561  00262E  0E00               	movlw	0
 11562  002630  236E               	addwfc	(___fladd@b+1)& (0+255),f,b
 11563  002632  236F               	addwfc	(___fladd@b+2)& (0+255),f,b
 11564  002634  2370               	addwfc	(___fladd@b+3)& (0+255),f,b
 11565  002636  EF25  F013         	goto	l1942
 11566  00263A                     l7745:
 11567                           
 11568                           ; BSR set to: 0
 11569  00263A  5171               	movf	___fladd@a& (0+255),w,b
 11570  00263C  5F6D               	subwf	___fladd@b& (0+255),f,b
 11571  00263E  5172               	movf	(___fladd@a+1)& (0+255),w,b
 11572  002640  5B6E               	subwfb	(___fladd@b+1)& (0+255),f,b
 11573  002642  5173               	movf	(___fladd@a+2)& (0+255),w,b
 11574  002644  5B6F               	subwfb	(___fladd@b+2)& (0+255),f,b
 11575  002646  5174               	movf	(___fladd@a+3)& (0+255),w,b
 11576  002648  5B70               	subwfb	(___fladd@b+3)& (0+255),f,b
 11577  00264A                     l1942:
 11578                           
 11579                           ; BSR set to: 0
 11580  00264A  516D               	movf	___fladd@b& (0+255),w,b
 11581  00264C  116E               	iorwf	(___fladd@b+1)& (0+255),w,b
 11582  00264E  116F               	iorwf	(___fladd@b+2)& (0+255),w,b
 11583  002650  1170               	iorwf	(___fladd@b+3)& (0+255),w,b
 11584  002652  A4D8               	btfss	status,2,c
 11585  002654  EF2E  F013         	goto	u7791
 11586  002658  EF30  F013         	goto	u7790
 11587  00265C                     u7791:
 11588  00265C  EF65  F013         	goto	l7769
 11589  002660                     u7790:
 11590  002660                     
 11591                           ; BSR set to: 0
 11592  002660  5178               	movf	___fladd@grs& (0+255),w,b
 11593  002662  A4D8               	btfss	status,2,c
 11594  002664  EF36  F013         	goto	u7801
 11595  002668  EF38  F013         	goto	u7800
 11596  00266C                     u7801:
 11597  00266C  EF65  F013         	goto	l7769
 11598  002670                     u7800:
 11599  002670                     
 11600                           ; BSR set to: 0
 11601  002670  0E00               	movlw	0
 11602  002672  6F6D               	movwf	?___fladd& (0+255),b
 11603  002674  0E00               	movlw	0
 11604  002676  6F6E               	movwf	(?___fladd+1)& (0+255),b
 11605  002678  0E00               	movlw	0
 11606  00267A  6F6F               	movwf	(?___fladd+2)& (0+255),b
 11607  00267C  0E00               	movlw	0
 11608  00267E  6F70               	movwf	(?___fladd+3)& (0+255),b
 11609  002680  EF00  F014         	goto	l1934
 11610  002684                     l7753:
 11611                           
 11612                           ; BSR set to: 0
 11613  002684  90D8               	bcf	status,0,c
 11614  002686  376D               	rlcf	___fladd@b& (0+255),f,b
 11615  002688  376E               	rlcf	(___fladd@b+1)& (0+255),f,b
 11616  00268A  376F               	rlcf	(___fladd@b+2)& (0+255),f,b
 11617  00268C  3770               	rlcf	(___fladd@b+3)& (0+255),f,b
 11618  00268E                     
 11619                           ; BSR set to: 0
 11620  00268E  AF78               	btfss	___fladd@grs& (0+255),7,b
 11621  002690  EF4C  F013         	goto	u7811
 11622  002694  EF4E  F013         	goto	u7810
 11623  002698                     u7811:
 11624  002698  EF4F  F013         	goto	l7759
 11625  00269C                     u7810:
 11626  00269C                     
 11627                           ; BSR set to: 0
 11628  00269C  816D               	bsf	___fladd@b& (0+255),0,b
 11629  00269E                     l7759:
 11630                           
 11631                           ; BSR set to: 0
 11632  00269E  A178               	btfss	___fladd@grs& (0+255),0,b
 11633  0026A0  EF54  F013         	goto	u7821
 11634  0026A4  EF56  F013         	goto	u7820
 11635  0026A8                     u7821:
 11636  0026A8  EF5A  F013         	goto	l7763
 11637  0026AC                     u7820:
 11638  0026AC                     
 11639                           ; BSR set to: 0
 11640  0026AC  80D8               	bsf	status,0,c
 11641  0026AE  3778               	rlcf	___fladd@grs& (0+255),f,b
 11642  0026B0  EF5C  F013         	goto	l7765
 11643  0026B4                     l7763:
 11644                           
 11645                           ; BSR set to: 0
 11646  0026B4  90D8               	bcf	status,0,c
 11647  0026B6  3778               	rlcf	___fladd@grs& (0+255),f,b
 11648  0026B8                     l7765:
 11649                           
 11650                           ; BSR set to: 0
 11651  0026B8  5177               	movf	___fladd@bexp& (0+255),w,b
 11652  0026BA  B4D8               	btfsc	status,2,c
 11653  0026BC  EF62  F013         	goto	u7831
 11654  0026C0  EF64  F013         	goto	u7830
 11655  0026C4                     u7831:
 11656  0026C4  EF65  F013         	goto	l7769
 11657  0026C8                     u7830:
 11658  0026C8                     
 11659                           ; BSR set to: 0
 11660  0026C8  0777               	decf	___fladd@bexp& (0+255),f,b
 11661  0026CA                     l7769:
 11662                           
 11663                           ; BSR set to: 0
 11664  0026CA  AF6F               	btfss	(___fladd@b+2)& (0+255),7,b
 11665  0026CC  EF6A  F013         	goto	u7841
 11666  0026D0  EF6C  F013         	goto	u7840
 11667  0026D4                     u7841:
 11668  0026D4  EF42  F013         	goto	l7753
 11669  0026D8                     u7840:
 11670  0026D8                     l7771:
 11671                           
 11672                           ; BSR set to: 0
 11673  0026D8  0E00               	movlw	0
 11674  0026DA  6F76               	movwf	___fladd@aexp& (0+255),b
 11675  0026DC                     
 11676                           ; BSR set to: 0
 11677  0026DC  AF78               	btfss	___fladd@grs& (0+255),7,b
 11678  0026DE  EF73  F013         	goto	u7851
 11679  0026E2  EF75  F013         	goto	u7850
 11680  0026E6                     u7851:
 11681  0026E6  EF8D  F013         	goto	l1951
 11682  0026EA                     u7850:
 11683  0026EA                     
 11684                           ; BSR set to: 0
 11685  0026EA  C078  F036         	movff	___fladd@grs,??___fladd
 11686  0026EE  0E7F               	movlw	127
 11687  0026F0  1636               	andwf	??___fladd^0,f,c
 11688  0026F2  B4D8               	btfsc	status,2,c
 11689  0026F4  EF7E  F013         	goto	u7861
 11690  0026F8  EF80  F013         	goto	u7860
 11691  0026FC                     u7861:
 11692  0026FC  EF84  F013         	goto	l1952
 11693  002700                     u7860:
 11694  002700                     l7777:
 11695                           
 11696                           ; BSR set to: 0
 11697  002700  0E01               	movlw	1
 11698  002702  6F76               	movwf	___fladd@aexp& (0+255),b
 11699  002704  EF8D  F013         	goto	l1951
 11700  002708                     l1952:
 11701                           
 11702                           ; BSR set to: 0
 11703  002708  A16D               	btfss	___fladd@b& (0+255),0,b
 11704  00270A  EF89  F013         	goto	u7871
 11705  00270E  EF8B  F013         	goto	u7870
 11706  002712                     u7871:
 11707  002712  EF8D  F013         	goto	l1951
 11708  002716                     u7870:
 11709  002716  EF80  F013         	goto	l7777
 11710  00271A                     l1951:
 11711                           
 11712                           ; BSR set to: 0
 11713  00271A  5176               	movf	___fladd@aexp& (0+255),w,b
 11714  00271C  B4D8               	btfsc	status,2,c
 11715  00271E  EF93  F013         	goto	u7881
 11716  002722  EF95  F013         	goto	u7880
 11717  002726                     u7881:
 11718  002726  EFC0  F013         	goto	l7789
 11719  00272A                     u7880:
 11720  00272A                     
 11721                           ; BSR set to: 0
 11722  00272A  0E01               	movlw	1
 11723  00272C  276D               	addwf	___fladd@b& (0+255),f,b
 11724  00272E  0E00               	movlw	0
 11725  002730  236E               	addwfc	(___fladd@b+1)& (0+255),f,b
 11726  002732  236F               	addwfc	(___fladd@b+2)& (0+255),f,b
 11727  002734  2370               	addwfc	(___fladd@b+3)& (0+255),f,b
 11728  002736                     
 11729                           ; BSR set to: 0
 11730  002736  A170               	btfss	(___fladd@b+3)& (0+255),0,b
 11731  002738  EFA0  F013         	goto	u7891
 11732  00273C  EFA2  F013         	goto	u7890
 11733  002740                     u7891:
 11734  002740  EFC0  F013         	goto	l7789
 11735  002744                     u7890:
 11736  002744                     
 11737                           ; BSR set to: 0
 11738  002744  C06D  F036         	movff	___fladd@b,??___fladd
 11739  002748  C06E  F037         	movff	___fladd@b+1,??___fladd+1
 11740  00274C  C06F  F038         	movff	___fladd@b+2,??___fladd+2
 11741  002750  C070  F039         	movff	___fladd@b+3,??___fladd+3
 11742  002754  3439               	rlcf	(??___fladd+3)^0,w,c
 11743  002756  3239               	rrcf	(??___fladd+3)^0,f,c
 11744  002758  3238               	rrcf	(??___fladd+2)^0,f,c
 11745  00275A  3237               	rrcf	(??___fladd+1)^0,f,c
 11746  00275C  3236               	rrcf	??___fladd^0,f,c
 11747  00275E  C036  F06D         	movff	??___fladd,___fladd@b
 11748  002762  C037  F06E         	movff	??___fladd+1,___fladd@b+1
 11749  002766  C038  F06F         	movff	??___fladd+2,___fladd@b+2
 11750  00276A  C039  F070         	movff	??___fladd+3,___fladd@b+3
 11751  00276E  2977               	incf	___fladd@bexp& (0+255),w,b
 11752  002770  B4D8               	btfsc	status,2,c
 11753  002772  EFBD  F013         	goto	u7901
 11754  002776  EFBF  F013         	goto	u7900
 11755  00277A                     u7901:
 11756  00277A  EFC0  F013         	goto	l7789
 11757  00277E                     u7900:
 11758  00277E                     
 11759                           ; BSR set to: 0
 11760  00277E  2B77               	incf	___fladd@bexp& (0+255),f,b
 11761  002780                     l7789:
 11762                           
 11763                           ; BSR set to: 0
 11764  002780  2977               	incf	___fladd@bexp& (0+255),w,b
 11765  002782  B4D8               	btfsc	status,2,c
 11766  002784  EFC6  F013         	goto	u7911
 11767  002788  EFC8  F013         	goto	u7910
 11768  00278C                     u7911:
 11769  00278C  EFD0  F013         	goto	l7793
 11770  002790                     u7910:
 11771  002790                     
 11772                           ; BSR set to: 0
 11773  002790  5177               	movf	___fladd@bexp& (0+255),w,b
 11774  002792  A4D8               	btfss	status,2,c
 11775  002794  EFCE  F013         	goto	u7921
 11776  002798  EFD0  F013         	goto	u7920
 11777  00279C                     u7921:
 11778  00279C  EFE2  F013         	goto	l7797
 11779  0027A0                     u7920:
 11780  0027A0                     l7793:
 11781                           
 11782                           ; BSR set to: 0
 11783  0027A0  0E00               	movlw	0
 11784  0027A2  6F6D               	movwf	___fladd@b& (0+255),b
 11785  0027A4  0E00               	movlw	0
 11786  0027A6  6F6E               	movwf	(___fladd@b+1)& (0+255),b
 11787  0027A8  0E00               	movlw	0
 11788  0027AA  6F6F               	movwf	(___fladd@b+2)& (0+255),b
 11789  0027AC  0E00               	movlw	0
 11790  0027AE  6F70               	movwf	(___fladd@b+3)& (0+255),b
 11791  0027B0  5177               	movf	___fladd@bexp& (0+255),w,b
 11792  0027B2  A4D8               	btfss	status,2,c
 11793  0027B4  EFDE  F013         	goto	u7931
 11794  0027B8  EFE0  F013         	goto	u7930
 11795  0027BC                     u7931:
 11796  0027BC  EFE2  F013         	goto	l7797
 11797  0027C0                     u7930:
 11798  0027C0                     
 11799                           ; BSR set to: 0
 11800  0027C0  0E00               	movlw	0
 11801  0027C2  6F75               	movwf	___fladd@signs& (0+255),b
 11802  0027C4                     l7797:
 11803                           
 11804                           ; BSR set to: 0
 11805  0027C4  A177               	btfss	___fladd@bexp& (0+255),0,b
 11806  0027C6  EFE7  F013         	goto	u7941
 11807  0027CA  EFE9  F013         	goto	u7940
 11808  0027CE                     u7941:
 11809  0027CE  EFEC  F013         	goto	l7801
 11810  0027D2                     u7940:
 11811  0027D2                     
 11812                           ; BSR set to: 0
 11813  0027D2  8F6F               	bsf	(___fladd@b+2)& (0+255),7,b
 11814  0027D4  EFED  F013         	goto	l7803
 11815  0027D8                     l7801:
 11816                           
 11817                           ; BSR set to: 0
 11818  0027D8  9F6F               	bcf	(___fladd@b+2)& (0+255),7,b
 11819  0027DA                     l7803:
 11820                           
 11821                           ; BSR set to: 0
 11822  0027DA  90D8               	bcf	status,0,c
 11823  0027DC  3177               	rrcf	___fladd@bexp& (0+255),w,b
 11824  0027DE  6F70               	movwf	(___fladd@b+3)& (0+255),b
 11825  0027E0                     
 11826                           ; BSR set to: 0
 11827  0027E0  AF75               	btfss	___fladd@signs& (0+255),7,b
 11828  0027E2  EFF5  F013         	goto	u7951
 11829  0027E6  EFF7  F013         	goto	u7950
 11830  0027EA                     u7951:
 11831  0027EA  EFF8  F013         	goto	l7809
 11832  0027EE                     u7950:
 11833  0027EE                     
 11834                           ; BSR set to: 0
 11835  0027EE  8F70               	bsf	(___fladd@b+3)& (0+255),7,b
 11836  0027F0                     l7809:
 11837                           
 11838                           ; BSR set to: 0
 11839  0027F0  C06D  F06D         	movff	___fladd@b,?___fladd
 11840  0027F4  C06E  F06E         	movff	___fladd@b+1,?___fladd+1
 11841  0027F8  C06F  F06F         	movff	___fladd@b+2,?___fladd+2
 11842  0027FC  C070  F070         	movff	___fladd@b+3,?___fladd+3
 11843  002800                     l1934:
 11844                           
 11845                           ; BSR set to: 0
 11846  002800  0012               	return		;funcret
 11847  002802                     __end_of___fladd:
 11848                           	callstack 0
 11849                           
 11850 ;; *************** function _calcMotorPow *****************
 11851 ;; Defined at:
 11852 ;;		line 332 in file "main.c"
 11853 ;; Parameters:    Size  Location     Type
 11854 ;;		None
 11855 ;; Auto vars:     Size  Location     Type
 11856 ;;  oldSpeedDelt    2   39[BANK0 ] short 
 11857 ;;  setSpeedDelt    2   37[BANK0 ] short 
 11858 ;;  addMPow         1   41[BANK0 ] char 
 11859 ;; Return value:  Size  Location     Type
 11860 ;;                  1    wreg      void 
 11861 ;; Registers used:
 11862 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11863 ;; Tracked objects:
 11864 ;;		On entry : 0/0
 11865 ;;		On exit  : 0/0
 11866 ;;		Unchanged: 0/0
 11867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11869 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11870 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11871 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11872 ;;Total ram usage:        7 bytes
 11873 ;; Hardware stack levels used: 1
 11874 ;; Hardware stack levels required when called: 10
 11875 ;; This function calls:
 11876 ;;		___awdiv
 11877 ;;		___flmul
 11878 ;;		___fltol
 11879 ;;		___xxtofl
 11880 ;;		_actSpeed
 11881 ;;		_setMotor
 11882 ;; This function is called by:
 11883 ;;		_loop
 11884 ;; This function uses a non-reentrant model
 11885 ;;
 11886                           
 11887                           	psect	text45
 11888  00443E                     __ptext45:
 11889                           	callstack 0
 11890  00443E                     _calcMotorPow:
 11891                           	callstack 19
 11892  00443E                     
 11893                           ;main.c: 333:     currentSpeed = actSpeed();
 11894  00443E  ECB7  F02A         	call	_actSpeed	;wreg free
 11895  004442  C022  F0ED         	movff	?_actSpeed,_currentSpeed
 11896  004446  C023  F0EE         	movff	?_actSpeed+1,_currentSpeed+1
 11897  00444A                     
 11898                           ;main.c: 335:     int16_t setSpeedDelta = setSpeed - currentSpeed;
 11899  00444A  0100               	movlb	0	; () banked
 11900  00444C  51ED               	movf	_currentSpeed& (0+255),w,b
 11901  00444E  5DEF               	subwf	_setSpeed& (0+255),w,b
 11902  004450  6F85               	movwf	calcMotorPow@setSpeedDelta& (0+255),b
 11903  004452  51EE               	movf	(_currentSpeed+1)& (0+255),w,b
 11904  004454  59F0               	subwfb	(_setSpeed+1)& (0+255),w,b
 11905  004456  6F86               	movwf	(calcMotorPow@setSpeedDelta+1)& (0+255),b
 11906  004458                     
 11907                           ; BSR set to: 0
 11908                           ;main.c: 336:     int16_t oldSpeedDelta = currentSpeed - oldSpeed;
 11909  004458  0101               	movlb	1	; () banked
 11910  00445A  512E               	movf	_oldSpeed& (0+255),w,b
 11911  00445C  0100               	movlb	0	; () banked
 11912  00445E  5DED               	subwf	_currentSpeed& (0+255),w,b
 11913  004460  6F87               	movwf	calcMotorPow@oldSpeedDelta& (0+255),b
 11914  004462  0101               	movlb	1	; () banked
 11915  004464  512F               	movf	(_oldSpeed+1)& (0+255),w,b
 11916  004466  0100               	movlb	0	; () banked
 11917  004468  59EE               	subwfb	(_currentSpeed+1)& (0+255),w,b
 11918  00446A  6F88               	movwf	(calcMotorPow@oldSpeedDelta+1)& (0+255),b
 11919  00446C                     
 11920                           ; BSR set to: 0
 11921                           ;main.c: 342:     addMPow = (int8_t) ((0.020) * (setSpeedDelta - (oldSpeedDelta / (2))))
      +                          ;
 11922  00446C  0E0A               	movlw	10
 11923  00446E  6E2E               	movwf	___flmul@a^0,c
 11924  004470  0ED7               	movlw	215
 11925  004472  6E2F               	movwf	(___flmul@a+1)^0,c
 11926  004474  0EA3               	movlw	163
 11927  004476  6E30               	movwf	(___flmul@a+2)^0,c
 11928  004478  0E3C               	movlw	60
 11929  00447A  6E31               	movwf	(___flmul@a+3)^0,c
 11930  00447C  0E00               	movlw	0
 11931  00447E  6E17               	movwf	(___awdiv@divisor+1)^0,c
 11932  004480  0E02               	movlw	2
 11933  004482  6E16               	movwf	___awdiv@divisor^0,c
 11934  004484  C087  F014         	movff	calcMotorPow@oldSpeedDelta,___awdiv@dividend
 11935  004488  C088  F015         	movff	calcMotorPow@oldSpeedDelta+1,___awdiv@dividend+1
 11936  00448C  ECFA  F027         	call	___awdiv	;wreg free
 11937  004490  C085  F083         	movff	calcMotorPow@setSpeedDelta,??_calcMotorPow
 11938  004494  C086  F084         	movff	calcMotorPow@setSpeedDelta+1,??_calcMotorPow+1
 11939  004498  5014               	movf	?___awdiv^0,w,c
 11940  00449A  0100               	movlb	0	; () banked
 11941  00449C  5F83               	subwf	??_calcMotorPow& (0+255),f,b
 11942  00449E  5015               	movf	(?___awdiv+1)^0,w,c
 11943  0044A0  5B84               	subwfb	(??_calcMotorPow+1)& (0+255),f,b
 11944  0044A2  C083  F01C         	movff	??_calcMotorPow,___xxtofl@val
 11945  0044A6  C084  F01D         	movff	??_calcMotorPow+1,___xxtofl@val+1
 11946  0044AA  0E00               	movlw	0
 11947  0044AC  BE1D               	btfsc	(___xxtofl@val+1)^0,7,c
 11948  0044AE  0EFF               	movlw	-1
 11949  0044B0  6E1E               	movwf	(___xxtofl@val+2)^0,c
 11950  0044B2  6E1F               	movwf	(___xxtofl@val+3)^0,c
 11951  0044B4  0E01               	movlw	1
 11952  0044B6  EC64  F01E         	call	___xxtofl
 11953  0044BA  C01C  F02A         	movff	?___xxtofl,___flmul@b
 11954  0044BE  C01D  F02B         	movff	?___xxtofl+1,___flmul@b+1
 11955  0044C2  C01E  F02C         	movff	?___xxtofl+2,___flmul@b+2
 11956  0044C6  C01F  F02D         	movff	?___xxtofl+3,___flmul@b+3
 11957  0044CA  EC01  F014         	call	___flmul	;wreg free
 11958  0044CE  C02A  F079         	movff	?___flmul,___fltol@f1
 11959  0044D2  C02B  F07A         	movff	?___flmul+1,___fltol@f1+1
 11960  0044D6  C02C  F07B         	movff	?___flmul+2,___fltol@f1+2
 11961  0044DA  C02D  F07C         	movff	?___flmul+3,___fltol@f1+3
 11962  0044DE  ECDE  F023         	call	___fltol	;wreg free
 11963  0044E2  0100               	movlb	0	; () banked
 11964  0044E4  5179               	movf	?___fltol& (0+255),w,b
 11965  0044E6  6F89               	movwf	calcMotorPow@addMPow& (0+255),b
 11966  0044E8                     
 11967                           ; BSR set to: 0
 11968                           ;main.c: 344:     if (addMPow > (3)) {
 11969  0044E8  5189               	movf	calcMotorPow@addMPow& (0+255),w,b
 11970  0044EA  0A80               	xorlw	128
 11971  0044EC  0F7C               	addlw	-132
 11972  0044EE  A0D8               	btfss	status,0,c
 11973  0044F0  EF7C  F022         	goto	u10621
 11974  0044F4  EF7E  F022         	goto	u10620
 11975  0044F8                     u10621:
 11976  0044F8  EF82  F022         	goto	l9361
 11977  0044FC                     u10620:
 11978  0044FC                     
 11979                           ; BSR set to: 0
 11980                           ;main.c: 345:         addMPow = (3);
 11981  0044FC  0E03               	movlw	3
 11982  0044FE  6F89               	movwf	calcMotorPow@addMPow& (0+255),b
 11983                           
 11984                           ;main.c: 346:     } else if (addMPow < -(3)) {
 11985  004500  EF8E  F022         	goto	l9365
 11986  004504                     l9361:
 11987                           
 11988                           ; BSR set to: 0
 11989  004504  5189               	movf	calcMotorPow@addMPow& (0+255),w,b
 11990  004506  0A80               	xorlw	128
 11991  004508  0F83               	addlw	131
 11992  00450A  B0D8               	btfsc	status,0,c
 11993  00450C  EF8A  F022         	goto	u10631
 11994  004510  EF8C  F022         	goto	u10630
 11995  004514                     u10631:
 11996  004514  EF8E  F022         	goto	l9365
 11997  004518                     u10630:
 11998  004518                     
 11999                           ; BSR set to: 0
 12000                           ;main.c: 347:         addMPow = -(3);
 12001  004518  0EFD               	movlw	253
 12002  00451A  6F89               	movwf	calcMotorPow@addMPow& (0+255),b
 12003  00451C                     l9365:
 12004                           
 12005                           ; BSR set to: 0
 12006                           ;main.c: 350:     actMotorPow += addMPow;
 12007  00451C  5189               	movf	calcMotorPow@addMPow& (0+255),w,b
 12008  00451E  27EB               	addwf	_actMotorPow& (0+255),f,b
 12009  004520  0E00               	movlw	0
 12010  004522  BF89               	btfsc	calcMotorPow@addMPow& (0+255),7,b
 12011  004524  0EFF               	movlw	255
 12012  004526  23EC               	addwfc	(_actMotorPow+1)& (0+255),f,b
 12013  004528                     
 12014                           ; BSR set to: 0
 12015                           ;main.c: 352:     if (actMotorPow > (700)) {
 12016  004528  BFEC               	btfsc	(_actMotorPow+1)& (0+255),7,b
 12017  00452A  EFA0  F022         	goto	u10641
 12018  00452E  0EBD               	movlw	189
 12019  004530  5DEB               	subwf	_actMotorPow& (0+255),w,b
 12020  004532  0E02               	movlw	2
 12021  004534  59EC               	subwfb	(_actMotorPow+1)& (0+255),w,b
 12022  004536  A0D8               	btfss	status,0,c
 12023  004538  EFA0  F022         	goto	u10641
 12024  00453C  EFA2  F022         	goto	u10640
 12025  004540                     u10641:
 12026  004540  EFA8  F022         	goto	l9371
 12027  004544                     u10640:
 12028  004544                     
 12029                           ; BSR set to: 0
 12030                           ;main.c: 353:         actMotorPow = (700);
 12031  004544  0E02               	movlw	2
 12032  004546  6FEC               	movwf	(_actMotorPow+1)& (0+255),b
 12033  004548  0EBC               	movlw	188
 12034  00454A  6FEB               	movwf	_actMotorPow& (0+255),b
 12035                           
 12036                           ;main.c: 354:     } else if (actMotorPow < (-400)) {
 12037  00454C  EFBA  F022         	goto	l9375
 12038  004550                     l9371:
 12039                           
 12040                           ; BSR set to: 0
 12041  004550  AFEC               	btfss	(_actMotorPow+1)& (0+255),7,b
 12042  004552  EFB4  F022         	goto	u10651
 12043  004556  0E70               	movlw	112
 12044  004558  5DEB               	subwf	_actMotorPow& (0+255),w,b
 12045  00455A  0EFE               	movlw	254
 12046  00455C  59EC               	subwfb	(_actMotorPow+1)& (0+255),w,b
 12047  00455E  B0D8               	btfsc	status,0,c
 12048  004560  EFB4  F022         	goto	u10651
 12049  004564  EFB6  F022         	goto	u10650
 12050  004568                     u10651:
 12051  004568  EFBA  F022         	goto	l9375
 12052  00456C                     u10650:
 12053  00456C                     
 12054                           ; BSR set to: 0
 12055                           ;main.c: 355:         actMotorPow = (-400);
 12056  00456C  0EFE               	movlw	254
 12057  00456E  6FEC               	movwf	(_actMotorPow+1)& (0+255),b
 12058  004570  0E70               	movlw	112
 12059  004572  6FEB               	movwf	_actMotorPow& (0+255),b
 12060  004574                     l9375:
 12061                           
 12062                           ; BSR set to: 0
 12063                           ;main.c: 358:     setMotor(actMotorPow);
 12064  004574  C0EB  F018         	movff	_actMotorPow,setMotor@motorPower
 12065  004578  C0EC  F019         	movff	_actMotorPow+1,setMotor@motorPower+1
 12066  00457C  EC56  F026         	call	_setMotor	;wreg free
 12067  004580                     
 12068                           ;main.c: 360:     oldSpeed = currentSpeed;
 12069  004580  C0ED  F12E         	movff	_currentSpeed,_oldSpeed
 12070  004584  C0EE  F12F         	movff	_currentSpeed+1,_oldSpeed+1
 12071  004588  0012               	return		;funcret
 12072  00458A                     __end_of_calcMotorPow:
 12073                           	callstack 0
 12074                           
 12075 ;; *************** function _setMotor *****************
 12076 ;; Defined at:
 12077 ;;		line 363 in file "main.c"
 12078 ;; Parameters:    Size  Location     Type
 12079 ;;  motorPower      2   23[COMRAM] short 
 12080 ;; Auto vars:     Size  Location     Type
 12081 ;;		None
 12082 ;; Return value:  Size  Location     Type
 12083 ;;                  1    wreg      void 
 12084 ;; Registers used:
 12085 ;;		wreg, status,2, status,0, cstack
 12086 ;; Tracked objects:
 12087 ;;		On entry : 0/0
 12088 ;;		On exit  : 0/0
 12089 ;;		Unchanged: 0/0
 12090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12091 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12093 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12094 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12095 ;;Total ram usage:        4 bytes
 12096 ;; Hardware stack levels used: 1
 12097 ;; Hardware stack levels required when called: 9
 12098 ;; This function calls:
 12099 ;;		_PWM7_LoadDutyValue
 12100 ;;		_PWM8_LoadDutyValue
 12101 ;; This function is called by:
 12102 ;;		_loop
 12103 ;;		_startAccell
 12104 ;;		_calcMotorPow
 12105 ;; This function uses a non-reentrant model
 12106 ;;
 12107                           
 12108                           	psect	text46
 12109  004CAC                     __ptext46:
 12110                           	callstack 0
 12111  004CAC                     _setMotor:
 12112                           	callstack 19
 12113  004CAC                     
 12114                           ;main.c: 364:     if (motorPower >= (100)) {
 12115  004CAC  BE19               	btfsc	(setMotor@motorPower+1)^0,7,c
 12116  004CAE  EF62  F026         	goto	u10251
 12117  004CB2  5019               	movf	(setMotor@motorPower+1)^0,w,c
 12118  004CB4  E109               	bnz	u10250
 12119  004CB6  0E64               	movlw	100
 12120  004CB8  5C18               	subwf	setMotor@motorPower^0,w,c
 12121  004CBA  A0D8               	btfss	status,0,c
 12122  004CBC  EF62  F026         	goto	u10251
 12123  004CC0  EF64  F026         	goto	u10250
 12124  004CC4                     u10251:
 12125  004CC4  EF84  F026         	goto	l9073
 12126  004CC8                     u10250:
 12127  004CC8                     
 12128                           ;main.c: 365:         if (motorPower > (700)) {
 12129  004CC8  BE19               	btfsc	(setMotor@motorPower+1)^0,7,c
 12130  004CCA  EF70  F026         	goto	u10261
 12131  004CCE  0EBD               	movlw	189
 12132  004CD0  5C18               	subwf	setMotor@motorPower^0,w,c
 12133  004CD2  0E02               	movlw	2
 12134  004CD4  5819               	subwfb	(setMotor@motorPower+1)^0,w,c
 12135  004CD6  A0D8               	btfss	status,0,c
 12136  004CD8  EF70  F026         	goto	u10261
 12137  004CDC  EF72  F026         	goto	u10260
 12138  004CE0                     u10261:
 12139  004CE0  EF76  F026         	goto	l9069
 12140  004CE4                     u10260:
 12141  004CE4                     
 12142                           ;main.c: 366:             motorPower = (700);
 12143  004CE4  0E02               	movlw	2
 12144  004CE6  6E19               	movwf	(setMotor@motorPower+1)^0,c
 12145  004CE8  0EBC               	movlw	188
 12146  004CEA  6E18               	movwf	setMotor@motorPower^0,c
 12147  004CEC                     l9069:
 12148                           
 12149                           ;main.c: 368:         PWM7_LoadDutyValue((uint16_t) (motorPower));
 12150  004CEC  C018  F014         	movff	setMotor@motorPower,PWM7_LoadDutyValue@dutyValue
 12151  004CF0  C019  F015         	movff	setMotor@motorPower+1,PWM7_LoadDutyValue@dutyValue+1
 12152  004CF4  EC30  F02F         	call	_PWM7_LoadDutyValue	;wreg free
 12153  004CF8                     
 12154                           ;main.c: 369:         PWM8_LoadDutyValue(0);
 12155  004CF8  0E00               	movlw	0
 12156  004CFA  6E15               	movwf	(PWM8_LoadDutyValue@dutyValue+1)^0,c
 12157  004CFC  0E00               	movlw	0
 12158  004CFE  6E14               	movwf	PWM8_LoadDutyValue@dutyValue^0,c
 12159  004D00  EC16  F02F         	call	_PWM8_LoadDutyValue	;wreg free
 12160                           
 12161                           ;main.c: 370:     } else if (motorPower <= -(100)) {
 12162  004D04  EFC6  F026         	goto	l1377
 12163  004D08                     l9073:
 12164  004D08  AE19               	btfss	(setMotor@motorPower+1)^0,7,c
 12165  004D0A  EF90  F026         	goto	u10271
 12166  004D0E  0E9D               	movlw	157
 12167  004D10  5C18               	subwf	setMotor@motorPower^0,w,c
 12168  004D12  0EFF               	movlw	255
 12169  004D14  5819               	subwfb	(setMotor@motorPower+1)^0,w,c
 12170  004D16  B0D8               	btfsc	status,0,c
 12171  004D18  EF90  F026         	goto	u10271
 12172  004D1C  EF92  F026         	goto	u10270
 12173  004D20                     u10271:
 12174  004D20  EFBA  F026         	goto	l9083
 12175  004D24                     u10270:
 12176  004D24                     
 12177                           ;main.c: 371:         if (motorPower < (-400)) {
 12178  004D24  AE19               	btfss	(setMotor@motorPower+1)^0,7,c
 12179  004D26  EF9E  F026         	goto	u10281
 12180  004D2A  0E70               	movlw	112
 12181  004D2C  5C18               	subwf	setMotor@motorPower^0,w,c
 12182  004D2E  0EFE               	movlw	254
 12183  004D30  5819               	subwfb	(setMotor@motorPower+1)^0,w,c
 12184  004D32  B0D8               	btfsc	status,0,c
 12185  004D34  EF9E  F026         	goto	u10281
 12186  004D38  EFA0  F026         	goto	u10280
 12187  004D3C                     u10281:
 12188  004D3C  EFA4  F026         	goto	l9079
 12189  004D40                     u10280:
 12190  004D40                     
 12191                           ;main.c: 372:             motorPower = (-400);
 12192  004D40  0EFE               	movlw	254
 12193  004D42  6E19               	movwf	(setMotor@motorPower+1)^0,c
 12194  004D44  0E70               	movlw	112
 12195  004D46  6E18               	movwf	setMotor@motorPower^0,c
 12196  004D48                     l9079:
 12197                           
 12198                           ;main.c: 374:         PWM7_LoadDutyValue(0);
 12199  004D48  0E00               	movlw	0
 12200  004D4A  6E15               	movwf	(PWM7_LoadDutyValue@dutyValue+1)^0,c
 12201  004D4C  0E00               	movlw	0
 12202  004D4E  6E14               	movwf	PWM7_LoadDutyValue@dutyValue^0,c
 12203  004D50  EC30  F02F         	call	_PWM7_LoadDutyValue	;wreg free
 12204  004D54                     
 12205                           ;main.c: 375:         PWM8_LoadDutyValue((uint16_t) (-motorPower));
 12206  004D54  C018  F01A         	movff	setMotor@motorPower,??_setMotor
 12207  004D58  C019  F01B         	movff	setMotor@motorPower+1,??_setMotor+1
 12208  004D5C  1E1A               	comf	??_setMotor^0,f,c
 12209  004D5E  1E1B               	comf	(??_setMotor+1)^0,f,c
 12210  004D60  4A1A               	infsnz	??_setMotor^0,f,c
 12211  004D62  2A1B               	incf	(??_setMotor+1)^0,f,c
 12212  004D64  C01A  F014         	movff	??_setMotor,PWM8_LoadDutyValue@dutyValue
 12213  004D68  C01B  F015         	movff	??_setMotor+1,PWM8_LoadDutyValue@dutyValue+1
 12214  004D6C  EC16  F02F         	call	_PWM8_LoadDutyValue	;wreg free
 12215                           
 12216                           ;main.c: 376:     } else {
 12217  004D70  EFC6  F026         	goto	l1377
 12218  004D74                     l9083:
 12219                           
 12220                           ;main.c: 377:         PWM7_LoadDutyValue(0);
 12221  004D74  0E00               	movlw	0
 12222  004D76  6E15               	movwf	(PWM7_LoadDutyValue@dutyValue+1)^0,c
 12223  004D78  0E00               	movlw	0
 12224  004D7A  6E14               	movwf	PWM7_LoadDutyValue@dutyValue^0,c
 12225  004D7C  EC30  F02F         	call	_PWM7_LoadDutyValue	;wreg free
 12226                           
 12227                           ;main.c: 378:         PWM8_LoadDutyValue(0);
 12228  004D80  0E00               	movlw	0
 12229  004D82  6E15               	movwf	(PWM8_LoadDutyValue@dutyValue+1)^0,c
 12230  004D84  0E00               	movlw	0
 12231  004D86  6E14               	movwf	PWM8_LoadDutyValue@dutyValue^0,c
 12232  004D88  EC16  F02F         	call	_PWM8_LoadDutyValue	;wreg free
 12233  004D8C                     l1377:
 12234  004D8C  0012               	return		;funcret
 12235  004D8E                     __end_of_setMotor:
 12236                           	callstack 0
 12237                           
 12238 ;; *************** function _PWM8_LoadDutyValue *****************
 12239 ;; Defined at:
 12240 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 12241 ;; Parameters:    Size  Location     Type
 12242 ;;  dutyValue       2   19[COMRAM] unsigned short 
 12243 ;; Auto vars:     Size  Location     Type
 12244 ;;		None
 12245 ;; Return value:  Size  Location     Type
 12246 ;;                  1    wreg      void 
 12247 ;; Registers used:
 12248 ;;		wreg, status,2, status,0
 12249 ;; Tracked objects:
 12250 ;;		On entry : 0/0
 12251 ;;		On exit  : 0/0
 12252 ;;		Unchanged: 0/0
 12253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12254 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12256 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12257 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12258 ;;Total ram usage:        4 bytes
 12259 ;; Hardware stack levels used: 1
 12260 ;; Hardware stack levels required when called: 8
 12261 ;; This function calls:
 12262 ;;		Nothing
 12263 ;; This function is called by:
 12264 ;;		_setMotor
 12265 ;; This function uses a non-reentrant model
 12266 ;;
 12267                           
 12268                           	psect	text47
 12269  005E2C                     __ptext47:
 12270                           	callstack 0
 12271  005E2C                     _PWM8_LoadDutyValue:
 12272                           	callstack 19
 12273  005E2C                     
 12274                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 12275  005E2C  C014  F016         	movff	PWM8_LoadDutyValue@dutyValue,??_PWM8_LoadDutyValue
 12276  005E30  C015  F017         	movff	PWM8_LoadDutyValue@dutyValue+1,??_PWM8_LoadDutyValue+1
 12277  005E34  90D8               	bcf	status,0,c
 12278  005E36  3217               	rrcf	(??_PWM8_LoadDutyValue+1)^0,f,c
 12279  005E38  3216               	rrcf	??_PWM8_LoadDutyValue^0,f,c
 12280  005E3A  90D8               	bcf	status,0,c
 12281  005E3C  3217               	rrcf	(??_PWM8_LoadDutyValue+1)^0,f,c
 12282  005E3E  3216               	rrcf	??_PWM8_LoadDutyValue^0,f,c
 12283  005E40  5016               	movf	??_PWM8_LoadDutyValue^0,w,c
 12284  005E42  6E61               	movwf	97,c	;volatile
 12285                           
 12286                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 12287  005E44  C014  F016         	movff	PWM8_LoadDutyValue@dutyValue,??_PWM8_LoadDutyValue
 12288  005E48  0E03               	movlw	3
 12289  005E4A  1616               	andwf	??_PWM8_LoadDutyValue^0,f,c
 12290  005E4C  0E06               	movlw	6
 12291  005E4E  6E17               	movwf	(??_PWM8_LoadDutyValue+1)^0,c
 12292  005E50                     u10115:
 12293  005E50  90D8               	bcf	status,0,c
 12294  005E52  3616               	rlcf	??_PWM8_LoadDutyValue^0,f,c
 12295  005E54  2E17               	decfsz	(??_PWM8_LoadDutyValue+1)^0,f,c
 12296  005E56  EF28  F02F         	goto	u10115
 12297  005E5A  5016               	movf	??_PWM8_LoadDutyValue^0,w,c
 12298  005E5C  6E60               	movwf	96,c	;volatile
 12299  005E5E  0012               	return		;funcret
 12300  005E60                     __end_of_PWM8_LoadDutyValue:
 12301                           	callstack 0
 12302                           
 12303 ;; *************** function _PWM7_LoadDutyValue *****************
 12304 ;; Defined at:
 12305 ;;		line 74 in file "mcc_generated_files/pwm7.c"
 12306 ;; Parameters:    Size  Location     Type
 12307 ;;  dutyValue       2   19[COMRAM] unsigned short 
 12308 ;; Auto vars:     Size  Location     Type
 12309 ;;		None
 12310 ;; Return value:  Size  Location     Type
 12311 ;;                  1    wreg      void 
 12312 ;; Registers used:
 12313 ;;		wreg, status,2, status,0
 12314 ;; Tracked objects:
 12315 ;;		On entry : 0/0
 12316 ;;		On exit  : 0/0
 12317 ;;		Unchanged: 0/0
 12318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12319 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12321 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12322 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12323 ;;Total ram usage:        4 bytes
 12324 ;; Hardware stack levels used: 1
 12325 ;; Hardware stack levels required when called: 8
 12326 ;; This function calls:
 12327 ;;		Nothing
 12328 ;; This function is called by:
 12329 ;;		_setMotor
 12330 ;; This function uses a non-reentrant model
 12331 ;;
 12332                           
 12333                           	psect	text48
 12334  005E60                     __ptext48:
 12335                           	callstack 0
 12336  005E60                     _PWM7_LoadDutyValue:
 12337                           	callstack 19
 12338  005E60                     
 12339                           ;mcc_generated_files/pwm7.c: 74:  void PWM7_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm7.c: 75:  {;mcc_generated_files/pwm7.c: 77:      PWM7DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 12340  005E60  C014  F016         	movff	PWM7_LoadDutyValue@dutyValue,??_PWM7_LoadDutyValue
 12341  005E64  C015  F017         	movff	PWM7_LoadDutyValue@dutyValue+1,??_PWM7_LoadDutyValue+1
 12342  005E68  90D8               	bcf	status,0,c
 12343  005E6A  3217               	rrcf	(??_PWM7_LoadDutyValue+1)^0,f,c
 12344  005E6C  3216               	rrcf	??_PWM7_LoadDutyValue^0,f,c
 12345  005E6E  90D8               	bcf	status,0,c
 12346  005E70  3217               	rrcf	(??_PWM7_LoadDutyValue+1)^0,f,c
 12347  005E72  3216               	rrcf	??_PWM7_LoadDutyValue^0,f,c
 12348  005E74  5016               	movf	??_PWM7_LoadDutyValue^0,w,c
 12349  005E76  6E65               	movwf	101,c	;volatile
 12350                           
 12351                           ;mcc_generated_files/pwm7.c: 80:      PWM7DCL = (dutyValue & 0x0003)<<6;
 12352  005E78  C014  F016         	movff	PWM7_LoadDutyValue@dutyValue,??_PWM7_LoadDutyValue
 12353  005E7C  0E03               	movlw	3
 12354  005E7E  1616               	andwf	??_PWM7_LoadDutyValue^0,f,c
 12355  005E80  0E06               	movlw	6
 12356  005E82  6E17               	movwf	(??_PWM7_LoadDutyValue+1)^0,c
 12357  005E84                     u10105:
 12358  005E84  90D8               	bcf	status,0,c
 12359  005E86  3616               	rlcf	??_PWM7_LoadDutyValue^0,f,c
 12360  005E88  2E17               	decfsz	(??_PWM7_LoadDutyValue+1)^0,f,c
 12361  005E8A  EF42  F02F         	goto	u10105
 12362  005E8E  5016               	movf	??_PWM7_LoadDutyValue^0,w,c
 12363  005E90  6E64               	movwf	100,c	;volatile
 12364  005E92  0012               	return		;funcret
 12365  005E94                     __end_of_PWM7_LoadDutyValue:
 12366                           	callstack 0
 12367                           
 12368 ;; *************** function _actSpeed *****************
 12369 ;; Defined at:
 12370 ;;		line 73 in file "main.c"
 12371 ;; Parameters:    Size  Location     Type
 12372 ;;		None
 12373 ;; Auto vars:     Size  Location     Type
 12374 ;;  speed           2   35[COMRAM] short 
 12375 ;; Return value:  Size  Location     Type
 12376 ;;                  2   33[COMRAM] short 
 12377 ;; Registers used:
 12378 ;;		wreg, status,2, status,0, cstack
 12379 ;; Tracked objects:
 12380 ;;		On entry : 0/0
 12381 ;;		On exit  : 0/0
 12382 ;;		Unchanged: 0/0
 12383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12384 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12385 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12387 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12388 ;;Total ram usage:        4 bytes
 12389 ;; Hardware stack levels used: 1
 12390 ;; Hardware stack levels required when called: 9
 12391 ;; This function calls:
 12392 ;;		___aldiv
 12393 ;; This function is called by:
 12394 ;;		_calcMotorPow
 12395 ;; This function uses a non-reentrant model
 12396 ;;
 12397                           
 12398                           	psect	text49
 12399  00556E                     __ptext49:
 12400                           	callstack 0
 12401  00556E                     _actSpeed:
 12402                           	callstack 19
 12403  00556E                     
 12404                           ;main.c: 74:     int16_t speed = 0;
 12405  00556E  0E00               	movlw	0
 12406  005570  6E25               	movwf	(actSpeed@speed+1)^0,c
 12407  005572  0E00               	movlw	0
 12408  005574  6E24               	movwf	actSpeed@speed^0,c
 12409  005576                     
 12410                           ;main.c: 75:     if (smtPeriod) {
 12411  005576  5048               	movf	_smtPeriod^0,w,c	;volatile
 12412  005578  1049               	iorwf	(_smtPeriod+1)^0,w,c	;volatile
 12413  00557A  104A               	iorwf	(_smtPeriod+2)^0,w,c	;volatile
 12414  00557C  104B               	iorwf	(_smtPeriod+3)^0,w,c	;volatile
 12415  00557E  B4D8               	btfsc	status,2,c
 12416  005580  EFC4  F02A         	goto	u6691
 12417  005584  EFC6  F02A         	goto	u6690
 12418  005588                     u6691:
 12419  005588  EFFC  F02A         	goto	l6779
 12420  00558C                     u6690:
 12421  00558C                     
 12422                           ;main.c: 76:         if (CLC3CONbits.LC3OUT) {
 12423  00558C  013C               	movlb	60	; () banked
 12424  00558E  AB60               	btfss	96,5,b	;volatile
 12425  005590  EFCC  F02A         	goto	u6701
 12426  005594  EFCE  F02A         	goto	u6700
 12427  005598                     u6701:
 12428  005598  EFE6  F02A         	goto	l6777
 12429  00559C                     u6700:
 12430  00559C                     
 12431                           ; BSR set to: 60
 12432                           ;main.c: 77:             speed = (int16_t) ((int32_t) (500000 / (int32_t) smtPeriod));
 12433  00559C  0E20               	movlw	32
 12434  00559E  6E14               	movwf	___aldiv@dividend^0,c
 12435  0055A0  0EA1               	movlw	161
 12436  0055A2  6E15               	movwf	(___aldiv@dividend+1)^0,c
 12437  0055A4  0E07               	movlw	7
 12438  0055A6  6E16               	movwf	(___aldiv@dividend+2)^0,c
 12439  0055A8  0E00               	movlw	0
 12440  0055AA  6E17               	movwf	(___aldiv@dividend+3)^0,c
 12441  0055AC  C048  F018         	movff	_smtPeriod,___aldiv@divisor	;volatile
 12442  0055B0  C049  F019         	movff	_smtPeriod+1,___aldiv@divisor+1	;volatile
 12443  0055B4  C04A  F01A         	movff	_smtPeriod+2,___aldiv@divisor+2	;volatile
 12444  0055B8  C04B  F01B         	movff	_smtPeriod+3,___aldiv@divisor+3	;volatile
 12445  0055BC  EC58  F023         	call	___aldiv	;wreg free
 12446  0055C0  C014  F024         	movff	?___aldiv,actSpeed@speed
 12447  0055C4  C015  F025         	movff	?___aldiv+1,actSpeed@speed+1
 12448                           
 12449                           ;main.c: 78:         } else {
 12450  0055C8  EFFC  F02A         	goto	l6779
 12451  0055CC                     l6777:
 12452                           
 12453                           ; BSR set to: 60
 12454                           ;main.c: 79:             speed = (int16_t) ((int32_t) (-500000 / (int32_t) smtPeriod));
 12455  0055CC  0EE0               	movlw	224
 12456  0055CE  6E14               	movwf	___aldiv@dividend^0,c
 12457  0055D0  0E5E               	movlw	94
 12458  0055D2  6E15               	movwf	(___aldiv@dividend+1)^0,c
 12459  0055D4  0EF8               	movlw	248
 12460  0055D6  6E16               	movwf	(___aldiv@dividend+2)^0,c
 12461  0055D8  0EFF               	movlw	255
 12462  0055DA  6E17               	movwf	(___aldiv@dividend+3)^0,c
 12463  0055DC  C048  F018         	movff	_smtPeriod,___aldiv@divisor	;volatile
 12464  0055E0  C049  F019         	movff	_smtPeriod+1,___aldiv@divisor+1	;volatile
 12465  0055E4  C04A  F01A         	movff	_smtPeriod+2,___aldiv@divisor+2	;volatile
 12466  0055E8  C04B  F01B         	movff	_smtPeriod+3,___aldiv@divisor+3	;volatile
 12467  0055EC  EC58  F023         	call	___aldiv	;wreg free
 12468  0055F0  C014  F024         	movff	?___aldiv,actSpeed@speed
 12469  0055F4  C015  F025         	movff	?___aldiv+1,actSpeed@speed+1
 12470  0055F8                     l6779:
 12471                           
 12472                           ;main.c: 82:     return speed;
 12473  0055F8  C024  F022         	movff	actSpeed@speed,?_actSpeed
 12474  0055FC  C025  F023         	movff	actSpeed@speed+1,?_actSpeed+1
 12475  005600  0012               	return		;funcret
 12476  005602                     __end_of_actSpeed:
 12477                           	callstack 0
 12478                           
 12479 ;; *************** function ___aldiv *****************
 12480 ;; Defined at:
 12481 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aldiv.c"
 12482 ;; Parameters:    Size  Location     Type
 12483 ;;  dividend        4   19[COMRAM] long 
 12484 ;;  divisor         4   23[COMRAM] long 
 12485 ;; Auto vars:     Size  Location     Type
 12486 ;;  quotient        4   29[COMRAM] long 
 12487 ;;  sign            1   28[COMRAM] unsigned char 
 12488 ;;  counter         1   27[COMRAM] unsigned char 
 12489 ;; Return value:  Size  Location     Type
 12490 ;;                  4   19[COMRAM] long 
 12491 ;; Registers used:
 12492 ;;		wreg, status,2, status,0
 12493 ;; Tracked objects:
 12494 ;;		On entry : 0/0
 12495 ;;		On exit  : 0/0
 12496 ;;		Unchanged: 0/0
 12497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12498 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12499 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12501 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12502 ;;Total ram usage:       14 bytes
 12503 ;; Hardware stack levels used: 1
 12504 ;; Hardware stack levels required when called: 8
 12505 ;; This function calls:
 12506 ;;		Nothing
 12507 ;; This function is called by:
 12508 ;;		_actSpeed
 12509 ;; This function uses a non-reentrant model
 12510 ;;
 12511                           
 12512                           	psect	text50
 12513  0046B0                     __ptext50:
 12514                           	callstack 0
 12515  0046B0                     ___aldiv:
 12516                           	callstack 19
 12517  0046B0  0E00               	movlw	0
 12518  0046B2  6E1D               	movwf	___aldiv@sign^0,c
 12519  0046B4  BE1B               	btfsc	(___aldiv@divisor+3)^0,7,c
 12520  0046B6  EF61  F023         	goto	u6420
 12521  0046BA  EF5F  F023         	goto	u6421
 12522  0046BE                     u6421:
 12523  0046BE  EF6B  F023         	goto	l6571
 12524  0046C2                     u6420:
 12525  0046C2  1E1B               	comf	(___aldiv@divisor+3)^0,f,c
 12526  0046C4  1E1A               	comf	(___aldiv@divisor+2)^0,f,c
 12527  0046C6  1E19               	comf	(___aldiv@divisor+1)^0,f,c
 12528  0046C8  6C18               	negf	___aldiv@divisor^0,c
 12529  0046CA  0E00               	movlw	0
 12530  0046CC  2219               	addwfc	(___aldiv@divisor+1)^0,f,c
 12531  0046CE  221A               	addwfc	(___aldiv@divisor+2)^0,f,c
 12532  0046D0  221B               	addwfc	(___aldiv@divisor+3)^0,f,c
 12533  0046D2  0E01               	movlw	1
 12534  0046D4  6E1D               	movwf	___aldiv@sign^0,c
 12535  0046D6                     l6571:
 12536  0046D6  BE17               	btfsc	(___aldiv@dividend+3)^0,7,c
 12537  0046D8  EF72  F023         	goto	u6430
 12538  0046DC  EF70  F023         	goto	u6431
 12539  0046E0                     u6431:
 12540  0046E0  EF7C  F023         	goto	l6577
 12541  0046E4                     u6430:
 12542  0046E4  1E17               	comf	(___aldiv@dividend+3)^0,f,c
 12543  0046E6  1E16               	comf	(___aldiv@dividend+2)^0,f,c
 12544  0046E8  1E15               	comf	(___aldiv@dividend+1)^0,f,c
 12545  0046EA  6C14               	negf	___aldiv@dividend^0,c
 12546  0046EC  0E00               	movlw	0
 12547  0046EE  2215               	addwfc	(___aldiv@dividend+1)^0,f,c
 12548  0046F0  2216               	addwfc	(___aldiv@dividend+2)^0,f,c
 12549  0046F2  2217               	addwfc	(___aldiv@dividend+3)^0,f,c
 12550  0046F4  0E01               	movlw	1
 12551  0046F6  1A1D               	xorwf	___aldiv@sign^0,f,c
 12552  0046F8                     l6577:
 12553  0046F8  0E00               	movlw	0
 12554  0046FA  6E1E               	movwf	___aldiv@quotient^0,c
 12555  0046FC  0E00               	movlw	0
 12556  0046FE  6E1F               	movwf	(___aldiv@quotient+1)^0,c
 12557  004700  0E00               	movlw	0
 12558  004702  6E20               	movwf	(___aldiv@quotient+2)^0,c
 12559  004704  0E00               	movlw	0
 12560  004706  6E21               	movwf	(___aldiv@quotient+3)^0,c
 12561  004708  5018               	movf	___aldiv@divisor^0,w,c
 12562  00470A  1019               	iorwf	(___aldiv@divisor+1)^0,w,c
 12563  00470C  101A               	iorwf	(___aldiv@divisor+2)^0,w,c
 12564  00470E  101B               	iorwf	(___aldiv@divisor+3)^0,w,c
 12565  004710  B4D8               	btfsc	status,2,c
 12566  004712  EF8D  F023         	goto	u6441
 12567  004716  EF8F  F023         	goto	u6440
 12568  00471A                     u6441:
 12569  00471A  EFC5  F023         	goto	l6599
 12570  00471E                     u6440:
 12571  00471E  0E01               	movlw	1
 12572  004720  6E1C               	movwf	___aldiv@counter^0,c
 12573  004722  EF99  F023         	goto	l6585
 12574  004726                     l6583:
 12575  004726  90D8               	bcf	status,0,c
 12576  004728  3618               	rlcf	___aldiv@divisor^0,f,c
 12577  00472A  3619               	rlcf	(___aldiv@divisor+1)^0,f,c
 12578  00472C  361A               	rlcf	(___aldiv@divisor+2)^0,f,c
 12579  00472E  361B               	rlcf	(___aldiv@divisor+3)^0,f,c
 12580  004730  2A1C               	incf	___aldiv@counter^0,f,c
 12581  004732                     l6585:
 12582  004732  AE1B               	btfss	(___aldiv@divisor+3)^0,7,c
 12583  004734  EF9E  F023         	goto	u6451
 12584  004738  EFA0  F023         	goto	u6450
 12585  00473C                     u6451:
 12586  00473C  EF93  F023         	goto	l6583
 12587  004740                     u6450:
 12588  004740                     l6587:
 12589  004740  90D8               	bcf	status,0,c
 12590  004742  361E               	rlcf	___aldiv@quotient^0,f,c
 12591  004744  361F               	rlcf	(___aldiv@quotient+1)^0,f,c
 12592  004746  3620               	rlcf	(___aldiv@quotient+2)^0,f,c
 12593  004748  3621               	rlcf	(___aldiv@quotient+3)^0,f,c
 12594  00474A  5018               	movf	___aldiv@divisor^0,w,c
 12595  00474C  5C14               	subwf	___aldiv@dividend^0,w,c
 12596  00474E  5019               	movf	(___aldiv@divisor+1)^0,w,c
 12597  004750  5815               	subwfb	(___aldiv@dividend+1)^0,w,c
 12598  004752  501A               	movf	(___aldiv@divisor+2)^0,w,c
 12599  004754  5816               	subwfb	(___aldiv@dividend+2)^0,w,c
 12600  004756  501B               	movf	(___aldiv@divisor+3)^0,w,c
 12601  004758  5817               	subwfb	(___aldiv@dividend+3)^0,w,c
 12602  00475A  A0D8               	btfss	status,0,c
 12603  00475C  EFB2  F023         	goto	u6461
 12604  004760  EFB4  F023         	goto	u6460
 12605  004764                     u6461:
 12606  004764  EFBD  F023         	goto	l6595
 12607  004768                     u6460:
 12608  004768  5018               	movf	___aldiv@divisor^0,w,c
 12609  00476A  5E14               	subwf	___aldiv@dividend^0,f,c
 12610  00476C  5019               	movf	(___aldiv@divisor+1)^0,w,c
 12611  00476E  5A15               	subwfb	(___aldiv@dividend+1)^0,f,c
 12612  004770  501A               	movf	(___aldiv@divisor+2)^0,w,c
 12613  004772  5A16               	subwfb	(___aldiv@dividend+2)^0,f,c
 12614  004774  501B               	movf	(___aldiv@divisor+3)^0,w,c
 12615  004776  5A17               	subwfb	(___aldiv@dividend+3)^0,f,c
 12616  004778  801E               	bsf	___aldiv@quotient^0,0,c
 12617  00477A                     l6595:
 12618  00477A  90D8               	bcf	status,0,c
 12619  00477C  321B               	rrcf	(___aldiv@divisor+3)^0,f,c
 12620  00477E  321A               	rrcf	(___aldiv@divisor+2)^0,f,c
 12621  004780  3219               	rrcf	(___aldiv@divisor+1)^0,f,c
 12622  004782  3218               	rrcf	___aldiv@divisor^0,f,c
 12623  004784  2E1C               	decfsz	___aldiv@counter^0,f,c
 12624  004786  EFA0  F023         	goto	l6587
 12625  00478A                     l6599:
 12626  00478A  501D               	movf	___aldiv@sign^0,w,c
 12627  00478C  B4D8               	btfsc	status,2,c
 12628  00478E  EFCB  F023         	goto	u6471
 12629  004792  EFCD  F023         	goto	u6470
 12630  004796                     u6471:
 12631  004796  EFD5  F023         	goto	l6603
 12632  00479A                     u6470:
 12633  00479A  1E21               	comf	(___aldiv@quotient+3)^0,f,c
 12634  00479C  1E20               	comf	(___aldiv@quotient+2)^0,f,c
 12635  00479E  1E1F               	comf	(___aldiv@quotient+1)^0,f,c
 12636  0047A0  6C1E               	negf	___aldiv@quotient^0,c
 12637  0047A2  0E00               	movlw	0
 12638  0047A4  221F               	addwfc	(___aldiv@quotient+1)^0,f,c
 12639  0047A6  2220               	addwfc	(___aldiv@quotient+2)^0,f,c
 12640  0047A8  2221               	addwfc	(___aldiv@quotient+3)^0,f,c
 12641  0047AA                     l6603:
 12642  0047AA  C01E  F014         	movff	___aldiv@quotient,?___aldiv
 12643  0047AE  C01F  F015         	movff	___aldiv@quotient+1,?___aldiv+1
 12644  0047B2  C020  F016         	movff	___aldiv@quotient+2,?___aldiv+2
 12645  0047B6  C021  F017         	movff	___aldiv@quotient+3,?___aldiv+3
 12646  0047BA  0012               	return		;funcret
 12647  0047BC                     __end_of___aldiv:
 12648                           	callstack 0
 12649                           
 12650 ;; *************** function ___xxtofl *****************
 12651 ;; Defined at:
 12652 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
 12653 ;; Parameters:    Size  Location     Type
 12654 ;;  sign            1    wreg     unsigned char 
 12655 ;;  val             4   27[COMRAM] long 
 12656 ;; Auto vars:     Size  Location     Type
 12657 ;;  sign            1   35[COMRAM] unsigned char 
 12658 ;;  arg             4   37[COMRAM] unsigned long 
 12659 ;;  exp             1   36[COMRAM] unsigned char 
 12660 ;; Return value:  Size  Location     Type
 12661 ;;                  4   27[COMRAM] unsigned char 
 12662 ;; Registers used:
 12663 ;;		wreg, status,2, status,0
 12664 ;; Tracked objects:
 12665 ;;		On entry : 0/0
 12666 ;;		On exit  : 0/0
 12667 ;;		Unchanged: 0/0
 12668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12669 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12670 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12671 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12672 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12673 ;;Total ram usage:       14 bytes
 12674 ;; Hardware stack levels used: 1
 12675 ;; Hardware stack levels required when called: 8
 12676 ;; This function calls:
 12677 ;;		Nothing
 12678 ;; This function is called by:
 12679 ;;		_loop
 12680 ;;		_checkBatt
 12681 ;;		_checkCurveCount
 12682 ;;		_calcSpeed
 12683 ;;		_calcMotorPow
 12684 ;;		_setSteering
 12685 ;; This function uses a non-reentrant model
 12686 ;;
 12687                           
 12688                           	psect	text51
 12689  003CC8                     __ptext51:
 12690                           	callstack 0
 12691  003CC8                     ___xxtofl:
 12692                           	callstack 19
 12693                           
 12694                           ;incstack = 0
 12695                           ;___xxtofl@sign stored from wreg
 12696  003CC8  6E24               	movwf	___xxtofl@sign^0,c
 12697  003CCA  5024               	movf	___xxtofl@sign^0,w,c
 12698  003CCC  B4D8               	btfsc	status,2,c
 12699  003CCE  EF6B  F01E         	goto	u10141
 12700  003CD2  EF6D  F01E         	goto	u10140
 12701  003CD6                     u10141:
 12702  003CD6  EF8F  F01E         	goto	l2052
 12703  003CDA                     u10140:
 12704  003CDA  BE1F               	btfsc	(___xxtofl@val+3)^0,7,c
 12705  003CDC  EF74  F01E         	goto	u10150
 12706  003CE0  EF72  F01E         	goto	u10151
 12707  003CE4                     u10151:
 12708  003CE4  EF8F  F01E         	goto	l2052
 12709  003CE8                     u10150:
 12710  003CE8  C01C  F020         	movff	___xxtofl@val,??___xxtofl
 12711  003CEC  C01D  F021         	movff	___xxtofl@val+1,??___xxtofl+1
 12712  003CF0  C01E  F022         	movff	___xxtofl@val+2,??___xxtofl+2
 12713  003CF4  C01F  F023         	movff	___xxtofl@val+3,??___xxtofl+3
 12714  003CF8  1E20               	comf	??___xxtofl^0,f,c
 12715  003CFA  1E21               	comf	(??___xxtofl+1)^0,f,c
 12716  003CFC  1E22               	comf	(??___xxtofl+2)^0,f,c
 12717  003CFE  1E23               	comf	(??___xxtofl+3)^0,f,c
 12718  003D00  2A20               	incf	??___xxtofl^0,f,c
 12719  003D02  0E00               	movlw	0
 12720  003D04  2221               	addwfc	(??___xxtofl+1)^0,f,c
 12721  003D06  2222               	addwfc	(??___xxtofl+2)^0,f,c
 12722  003D08  2223               	addwfc	(??___xxtofl+3)^0,f,c
 12723  003D0A  C020  F026         	movff	??___xxtofl,___xxtofl@arg
 12724  003D0E  C021  F027         	movff	??___xxtofl+1,___xxtofl@arg+1
 12725  003D12  C022  F028         	movff	??___xxtofl+2,___xxtofl@arg+2
 12726  003D16  C023  F029         	movff	??___xxtofl+3,___xxtofl@arg+3
 12727  003D1A  EF97  F01E         	goto	l9015
 12728  003D1E                     l2052:
 12729  003D1E  C01C  F026         	movff	___xxtofl@val,___xxtofl@arg
 12730  003D22  C01D  F027         	movff	___xxtofl@val+1,___xxtofl@arg+1
 12731  003D26  C01E  F028         	movff	___xxtofl@val+2,___xxtofl@arg+2
 12732  003D2A  C01F  F029         	movff	___xxtofl@val+3,___xxtofl@arg+3
 12733  003D2E                     l9015:
 12734  003D2E  501C               	movf	___xxtofl@val^0,w,c
 12735  003D30  101D               	iorwf	(___xxtofl@val+1)^0,w,c
 12736  003D32  101E               	iorwf	(___xxtofl@val+2)^0,w,c
 12737  003D34  101F               	iorwf	(___xxtofl@val+3)^0,w,c
 12738  003D36  A4D8               	btfss	status,2,c
 12739  003D38  EFA0  F01E         	goto	u10161
 12740  003D3C  EFA2  F01E         	goto	u10160
 12741  003D40                     u10161:
 12742  003D40  EFAC  F01E         	goto	l9021
 12743  003D44                     u10160:
 12744  003D44  0E00               	movlw	0
 12745  003D46  6E1C               	movwf	?___xxtofl^0,c
 12746  003D48  0E00               	movlw	0
 12747  003D4A  6E1D               	movwf	(?___xxtofl+1)^0,c
 12748  003D4C  0E00               	movlw	0
 12749  003D4E  6E1E               	movwf	(?___xxtofl+2)^0,c
 12750  003D50  0E00               	movlw	0
 12751  003D52  6E1F               	movwf	(?___xxtofl+3)^0,c
 12752  003D54  EF3D  F01F         	goto	l2055
 12753  003D58                     l9021:
 12754  003D58  0E96               	movlw	150
 12755  003D5A  6E25               	movwf	___xxtofl@exp^0,c
 12756  003D5C  EFB6  F01E         	goto	l9025
 12757  003D60                     l9023:
 12758  003D60  2A25               	incf	___xxtofl@exp^0,f,c
 12759  003D62  90D8               	bcf	status,0,c
 12760  003D64  3229               	rrcf	(___xxtofl@arg+3)^0,f,c
 12761  003D66  3228               	rrcf	(___xxtofl@arg+2)^0,f,c
 12762  003D68  3227               	rrcf	(___xxtofl@arg+1)^0,f,c
 12763  003D6A  3226               	rrcf	___xxtofl@arg^0,f,c
 12764  003D6C                     l9025:
 12765  003D6C  0E00               	movlw	0
 12766  003D6E  1426               	andwf	___xxtofl@arg^0,w,c
 12767  003D70  6E20               	movwf	??___xxtofl^0,c
 12768  003D72  0E00               	movlw	0
 12769  003D74  1427               	andwf	(___xxtofl@arg+1)^0,w,c
 12770  003D76  6E21               	movwf	(??___xxtofl+1)^0,c
 12771  003D78  0E00               	movlw	0
 12772  003D7A  1428               	andwf	(___xxtofl@arg+2)^0,w,c
 12773  003D7C  6E22               	movwf	(??___xxtofl+2)^0,c
 12774  003D7E  0EFE               	movlw	254
 12775  003D80  1429               	andwf	(___xxtofl@arg+3)^0,w,c
 12776  003D82  6E23               	movwf	(??___xxtofl+3)^0,c
 12777  003D84  5020               	movf	??___xxtofl^0,w,c
 12778  003D86  1021               	iorwf	(??___xxtofl+1)^0,w,c
 12779  003D88  1022               	iorwf	(??___xxtofl+2)^0,w,c
 12780  003D8A  1023               	iorwf	(??___xxtofl+3)^0,w,c
 12781  003D8C  A4D8               	btfss	status,2,c
 12782  003D8E  EFCB  F01E         	goto	u10171
 12783  003D92  EFCD  F01E         	goto	u10170
 12784  003D96                     u10171:
 12785  003D96  EFB0  F01E         	goto	l9023
 12786  003D9A                     u10170:
 12787  003D9A  EFDB  F01E         	goto	l2059
 12788  003D9E                     l9027:
 12789  003D9E  2A25               	incf	___xxtofl@exp^0,f,c
 12790  003DA0  0E01               	movlw	1
 12791  003DA2  2626               	addwf	___xxtofl@arg^0,f,c
 12792  003DA4  0E00               	movlw	0
 12793  003DA6  2227               	addwfc	(___xxtofl@arg+1)^0,f,c
 12794  003DA8  2228               	addwfc	(___xxtofl@arg+2)^0,f,c
 12795  003DAA  2229               	addwfc	(___xxtofl@arg+3)^0,f,c
 12796  003DAC  90D8               	bcf	status,0,c
 12797  003DAE  3229               	rrcf	(___xxtofl@arg+3)^0,f,c
 12798  003DB0  3228               	rrcf	(___xxtofl@arg+2)^0,f,c
 12799  003DB2  3227               	rrcf	(___xxtofl@arg+1)^0,f,c
 12800  003DB4  3226               	rrcf	___xxtofl@arg^0,f,c
 12801  003DB6                     l2059:
 12802  003DB6  0E00               	movlw	0
 12803  003DB8  1426               	andwf	___xxtofl@arg^0,w,c
 12804  003DBA  6E20               	movwf	??___xxtofl^0,c
 12805  003DBC  0E00               	movlw	0
 12806  003DBE  1427               	andwf	(___xxtofl@arg+1)^0,w,c
 12807  003DC0  6E21               	movwf	(??___xxtofl+1)^0,c
 12808  003DC2  0E00               	movlw	0
 12809  003DC4  1428               	andwf	(___xxtofl@arg+2)^0,w,c
 12810  003DC6  6E22               	movwf	(??___xxtofl+2)^0,c
 12811  003DC8  0EFF               	movlw	255
 12812  003DCA  1429               	andwf	(___xxtofl@arg+3)^0,w,c
 12813  003DCC  6E23               	movwf	(??___xxtofl+3)^0,c
 12814  003DCE  5020               	movf	??___xxtofl^0,w,c
 12815  003DD0  1021               	iorwf	(??___xxtofl+1)^0,w,c
 12816  003DD2  1022               	iorwf	(??___xxtofl+2)^0,w,c
 12817  003DD4  1023               	iorwf	(??___xxtofl+3)^0,w,c
 12818  003DD6  A4D8               	btfss	status,2,c
 12819  003DD8  EFF0  F01E         	goto	u10181
 12820  003DDC  EFF2  F01E         	goto	u10180
 12821  003DE0                     u10181:
 12822  003DE0  EFCF  F01E         	goto	l9027
 12823  003DE4                     u10180:
 12824  003DE4  EFFA  F01E         	goto	l9035
 12825  003DE8                     l9033:
 12826  003DE8  0625               	decf	___xxtofl@exp^0,f,c
 12827  003DEA  90D8               	bcf	status,0,c
 12828  003DEC  3626               	rlcf	___xxtofl@arg^0,f,c
 12829  003DEE  3627               	rlcf	(___xxtofl@arg+1)^0,f,c
 12830  003DF0  3628               	rlcf	(___xxtofl@arg+2)^0,f,c
 12831  003DF2  3629               	rlcf	(___xxtofl@arg+3)^0,f,c
 12832  003DF4                     l9035:
 12833  003DF4  BE28               	btfsc	(___xxtofl@arg+2)^0,7,c
 12834  003DF6  EFFF  F01E         	goto	u10191
 12835  003DFA  EF01  F01F         	goto	u10190
 12836  003DFE                     u10191:
 12837  003DFE  EF09  F01F         	goto	l2066
 12838  003E02                     u10190:
 12839  003E02  0E02               	movlw	2
 12840  003E04  6025               	cpfslt	___xxtofl@exp^0,c
 12841  003E06  EF07  F01F         	goto	u10201
 12842  003E0A  EF09  F01F         	goto	u10200
 12843  003E0E                     u10201:
 12844  003E0E  EFF4  F01E         	goto	l9033
 12845  003E12                     u10200:
 12846  003E12                     l2066:
 12847  003E12  B025               	btfsc	___xxtofl@exp^0,0,c
 12848  003E14  EF0E  F01F         	goto	u10211
 12849  003E18  EF10  F01F         	goto	u10210
 12850  003E1C                     u10211:
 12851  003E1C  EF11  F01F         	goto	l9041
 12852  003E20                     u10210:
 12853  003E20  9E28               	bcf	(___xxtofl@arg+2)^0,7,c
 12854  003E22                     l9041:
 12855  003E22  90D8               	bcf	status,0,c
 12856  003E24  3225               	rrcf	___xxtofl@exp^0,f,c
 12857  003E26  C025  F020         	movff	___xxtofl@exp,??___xxtofl
 12858  003E2A  6A21               	clrf	(??___xxtofl+1)^0,c
 12859  003E2C  6A22               	clrf	(??___xxtofl+2)^0,c
 12860  003E2E  6A23               	clrf	(??___xxtofl+3)^0,c
 12861  003E30  C020  F023         	movff	??___xxtofl,??___xxtofl+3
 12862  003E34  6A22               	clrf	(??___xxtofl+2)^0,c
 12863  003E36  6A21               	clrf	(??___xxtofl+1)^0,c
 12864  003E38  6A20               	clrf	??___xxtofl^0,c
 12865  003E3A  5020               	movf	??___xxtofl^0,w,c
 12866  003E3C  1226               	iorwf	___xxtofl@arg^0,f,c
 12867  003E3E  5021               	movf	(??___xxtofl+1)^0,w,c
 12868  003E40  1227               	iorwf	(___xxtofl@arg+1)^0,f,c
 12869  003E42  5022               	movf	(??___xxtofl+2)^0,w,c
 12870  003E44  1228               	iorwf	(___xxtofl@arg+2)^0,f,c
 12871  003E46  5023               	movf	(??___xxtofl+3)^0,w,c
 12872  003E48  1229               	iorwf	(___xxtofl@arg+3)^0,f,c
 12873  003E4A  5024               	movf	___xxtofl@sign^0,w,c
 12874  003E4C  B4D8               	btfsc	status,2,c
 12875  003E4E  EF2B  F01F         	goto	u10221
 12876  003E52  EF2D  F01F         	goto	u10220
 12877  003E56                     u10221:
 12878  003E56  EF35  F01F         	goto	l9051
 12879  003E5A                     u10220:
 12880  003E5A  BE1F               	btfsc	(___xxtofl@val+3)^0,7,c
 12881  003E5C  EF34  F01F         	goto	u10230
 12882  003E60  EF32  F01F         	goto	u10231
 12883  003E64                     u10231:
 12884  003E64  EF35  F01F         	goto	l9051
 12885  003E68                     u10230:
 12886  003E68  8E29               	bsf	(___xxtofl@arg+3)^0,7,c
 12887  003E6A                     l9051:
 12888  003E6A  C026  F01C         	movff	___xxtofl@arg,?___xxtofl
 12889  003E6E  C027  F01D         	movff	___xxtofl@arg+1,?___xxtofl+1
 12890  003E72  C028  F01E         	movff	___xxtofl@arg+2,?___xxtofl+2
 12891  003E76  C029  F01F         	movff	___xxtofl@arg+3,?___xxtofl+3
 12892  003E7A                     l2055:
 12893  003E7A  0012               	return		;funcret
 12894  003E7C                     __end_of___xxtofl:
 12895                           	callstack 0
 12896                           
 12897 ;; *************** function ___fltol *****************
 12898 ;; Defined at:
 12899 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
 12900 ;; Parameters:    Size  Location     Type
 12901 ;;  f1              4   25[BANK0 ] unsigned char 
 12902 ;; Auto vars:     Size  Location     Type
 12903 ;;  exp1            1   34[BANK0 ] unsigned char 
 12904 ;;  sign1           1   33[BANK0 ] unsigned char 
 12905 ;; Return value:  Size  Location     Type
 12906 ;;                  4   25[BANK0 ] long 
 12907 ;; Registers used:
 12908 ;;		wreg, status,2, status,0
 12909 ;; Tracked objects:
 12910 ;;		On entry : 0/0
 12911 ;;		On exit  : 0/0
 12912 ;;		Unchanged: 0/0
 12913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12914 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12915 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12916 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12917 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12918 ;;Total ram usage:       10 bytes
 12919 ;; Hardware stack levels used: 1
 12920 ;; Hardware stack levels required when called: 8
 12921 ;; This function calls:
 12922 ;;		Nothing
 12923 ;; This function is called by:
 12924 ;;		_calcSpeed
 12925 ;;		_calcMotorPow
 12926 ;;		_setSteering
 12927 ;;		_efgtoa
 12928 ;; This function uses a non-reentrant model
 12929 ;;
 12930                           
 12931                           	psect	text52
 12932  0047BC                     __ptext52:
 12933                           	callstack 0
 12934  0047BC                     ___fltol:
 12935                           	callstack 19
 12936  0047BC  0100               	movlb	0	; () banked
 12937  0047BE  357B               	rlcf	(___fltol@f1+2)& (0+255),w,b
 12938  0047C0  357C               	rlcf	(___fltol@f1+3)& (0+255),w,b
 12939  0047C2  6F82               	movwf	___fltol@exp1& (0+255),b
 12940  0047C4  5182               	movf	___fltol@exp1& (0+255),w,b
 12941  0047C6  A4D8               	btfss	status,2,c
 12942  0047C8  EFE8  F023         	goto	u8761
 12943  0047CC  EFEA  F023         	goto	u8760
 12944  0047D0                     u8761:
 12945  0047D0  EFF4  F023         	goto	l8321
 12946  0047D4                     u8760:
 12947  0047D4                     l8317:
 12948                           
 12949                           ; BSR set to: 0
 12950  0047D4  0E00               	movlw	0
 12951  0047D6  6F79               	movwf	?___fltol& (0+255),b
 12952  0047D8  0E00               	movlw	0
 12953  0047DA  6F7A               	movwf	(?___fltol+1)& (0+255),b
 12954  0047DC  0E00               	movlw	0
 12955  0047DE  6F7B               	movwf	(?___fltol+2)& (0+255),b
 12956  0047E0  0E00               	movlw	0
 12957  0047E2  6F7C               	movwf	(?___fltol+3)& (0+255),b
 12958  0047E4  EF61  F024         	goto	l1694
 12959  0047E8                     l8321:
 12960                           
 12961                           ; BSR set to: 0
 12962  0047E8  C079  F07D         	movff	___fltol@f1,??___fltol
 12963  0047EC  C07A  F07E         	movff	___fltol@f1+1,??___fltol+1
 12964  0047F0  C07B  F07F         	movff	___fltol@f1+2,??___fltol+2
 12965  0047F4  C07C  F080         	movff	___fltol@f1+3,??___fltol+3
 12966  0047F8  0E20               	movlw	32
 12967  0047FA  EF04  F024         	goto	u8770
 12968  0047FE                     u8775:
 12969  0047FE  90D8               	bcf	status,0,c
 12970  004800  3380               	rrcf	(??___fltol+3)& (0+255),f,b
 12971  004802  337F               	rrcf	(??___fltol+2)& (0+255),f,b
 12972  004804  337E               	rrcf	(??___fltol+1)& (0+255),f,b
 12973  004806  337D               	rrcf	??___fltol& (0+255),f,b
 12974  004808                     u8770:
 12975  004808  2EE8               	decfsz	wreg,f,c
 12976  00480A  EFFF  F023         	goto	u8775
 12977  00480E  517D               	movf	??___fltol& (0+255),w,b
 12978  004810  6F81               	movwf	___fltol@sign1& (0+255),b
 12979  004812                     
 12980                           ; BSR set to: 0
 12981  004812  8F7B               	bsf	(___fltol@f1+2)& (0+255),7,b
 12982  004814                     
 12983                           ; BSR set to: 0
 12984  004814  0EFF               	movlw	255
 12985  004816  1779               	andwf	___fltol@f1& (0+255),f,b
 12986  004818  0EFF               	movlw	255
 12987  00481A  177A               	andwf	(___fltol@f1+1)& (0+255),f,b
 12988  00481C  0EFF               	movlw	255
 12989  00481E  177B               	andwf	(___fltol@f1+2)& (0+255),f,b
 12990  004820  0E00               	movlw	0
 12991  004822  177C               	andwf	(___fltol@f1+3)& (0+255),f,b
 12992  004824                     
 12993                           ; BSR set to: 0
 12994  004824  0E96               	movlw	150
 12995  004826  5F82               	subwf	___fltol@exp1& (0+255),f,b
 12996  004828                     
 12997                           ; BSR set to: 0
 12998  004828  BF82               	btfsc	___fltol@exp1& (0+255),7,b
 12999  00482A  EF1B  F024         	goto	u8780
 13000  00482E  EF19  F024         	goto	u8781
 13001  004832                     u8781:
 13002  004832  EF31  F024         	goto	l8341
 13003  004836                     u8780:
 13004  004836                     
 13005                           ; BSR set to: 0
 13006  004836  5182               	movf	___fltol@exp1& (0+255),w,b
 13007  004838  0A80               	xorlw	128
 13008  00483A  0F97               	addlw	151
 13009  00483C  B0D8               	btfsc	status,0,c
 13010  00483E  EF23  F024         	goto	u8791
 13011  004842  EF25  F024         	goto	u8790
 13012  004846                     u8791:
 13013  004846  EF27  F024         	goto	l8337
 13014  00484A                     u8790:
 13015  00484A  EFEA  F023         	goto	l8317
 13016  00484E                     l8337:
 13017                           
 13018                           ; BSR set to: 0
 13019  00484E  90D8               	bcf	status,0,c
 13020  004850  337C               	rrcf	(___fltol@f1+3)& (0+255),f,b
 13021  004852  337B               	rrcf	(___fltol@f1+2)& (0+255),f,b
 13022  004854  337A               	rrcf	(___fltol@f1+1)& (0+255),f,b
 13023  004856  3379               	rrcf	___fltol@f1& (0+255),f,b
 13024  004858                     
 13025                           ; BSR set to: 0
 13026  004858  3F82               	incfsz	___fltol@exp1& (0+255),f,b
 13027  00485A  EF27  F024         	goto	l8337
 13028  00485E  EF49  F024         	goto	l8351
 13029  004862                     l8341:
 13030                           
 13031                           ; BSR set to: 0
 13032  004862  0E1F               	movlw	31
 13033  004864  6582               	cpfsgt	___fltol@exp1& (0+255),b
 13034  004866  EF37  F024         	goto	u8801
 13035  00486A  EF39  F024         	goto	u8800
 13036  00486E                     u8801:
 13037  00486E  EF41  F024         	goto	l8349
 13038  004872                     u8800:
 13039  004872  EFEA  F023         	goto	l8317
 13040  004876                     l8347:
 13041                           
 13042                           ; BSR set to: 0
 13043  004876  90D8               	bcf	status,0,c
 13044  004878  3779               	rlcf	___fltol@f1& (0+255),f,b
 13045  00487A  377A               	rlcf	(___fltol@f1+1)& (0+255),f,b
 13046  00487C  377B               	rlcf	(___fltol@f1+2)& (0+255),f,b
 13047  00487E  377C               	rlcf	(___fltol@f1+3)& (0+255),f,b
 13048  004880  0782               	decf	___fltol@exp1& (0+255),f,b
 13049  004882                     l8349:
 13050                           
 13051                           ; BSR set to: 0
 13052  004882  5182               	movf	___fltol@exp1& (0+255),w,b
 13053  004884  A4D8               	btfss	status,2,c
 13054  004886  EF47  F024         	goto	u8811
 13055  00488A  EF49  F024         	goto	u8810
 13056  00488E                     u8811:
 13057  00488E  EF3B  F024         	goto	l8347
 13058  004892                     u8810:
 13059  004892                     l8351:
 13060                           
 13061                           ; BSR set to: 0
 13062  004892  5181               	movf	___fltol@sign1& (0+255),w,b
 13063  004894  B4D8               	btfsc	status,2,c
 13064  004896  EF4F  F024         	goto	u8821
 13065  00489A  EF51  F024         	goto	u8820
 13066  00489E                     u8821:
 13067  00489E  EF59  F024         	goto	l8355
 13068  0048A2                     u8820:
 13069  0048A2                     
 13070                           ; BSR set to: 0
 13071  0048A2  1F7C               	comf	(___fltol@f1+3)& (0+255),f,b
 13072  0048A4  1F7B               	comf	(___fltol@f1+2)& (0+255),f,b
 13073  0048A6  1F7A               	comf	(___fltol@f1+1)& (0+255),f,b
 13074  0048A8  6D79               	negf	___fltol@f1& (0+255),b
 13075  0048AA  0E00               	movlw	0
 13076  0048AC  237A               	addwfc	(___fltol@f1+1)& (0+255),f,b
 13077  0048AE  237B               	addwfc	(___fltol@f1+2)& (0+255),f,b
 13078  0048B0  237C               	addwfc	(___fltol@f1+3)& (0+255),f,b
 13079  0048B2                     l8355:
 13080                           
 13081                           ; BSR set to: 0
 13082  0048B2  C079  F079         	movff	___fltol@f1,?___fltol
 13083  0048B6  C07A  F07A         	movff	___fltol@f1+1,?___fltol+1
 13084  0048BA  C07B  F07B         	movff	___fltol@f1+2,?___fltol+2
 13085  0048BE  C07C  F07C         	movff	___fltol@f1+3,?___fltol+3
 13086  0048C2                     l1694:
 13087                           
 13088                           ; BSR set to: 0
 13089  0048C2  0012               	return		;funcret
 13090  0048C4                     __end_of___fltol:
 13091                           	callstack 0
 13092                           
 13093 ;; *************** function ___flmul *****************
 13094 ;; Defined at:
 13095 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
 13096 ;; Parameters:    Size  Location     Type
 13097 ;;  b               4   41[COMRAM] long 
 13098 ;;  a               4   45[COMRAM] long 
 13099 ;; Auto vars:     Size  Location     Type
 13100 ;;  prod            4    7[BANK0 ] struct .
 13101 ;;  grs             4    2[BANK0 ] unsigned long 
 13102 ;;  temp            2   11[BANK0 ] struct .
 13103 ;;  bexp            1    6[BANK0 ] unsigned char 
 13104 ;;  aexp            1    1[BANK0 ] unsigned char 
 13105 ;;  sign            1    0[BANK0 ] unsigned char 
 13106 ;; Return value:  Size  Location     Type
 13107 ;;                  4   41[COMRAM] unsigned char 
 13108 ;; Registers used:
 13109 ;;		wreg, status,2, status,0, prodl, prodh
 13110 ;; Tracked objects:
 13111 ;;		On entry : 0/0
 13112 ;;		On exit  : 0/0
 13113 ;;		Unchanged: 0/0
 13114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13115 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13116 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13117 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13118 ;;      Totals:        12      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13119 ;;Total ram usage:       25 bytes
 13120 ;; Hardware stack levels used: 1
 13121 ;; Hardware stack levels required when called: 8
 13122 ;; This function calls:
 13123 ;;		Nothing
 13124 ;; This function is called by:
 13125 ;;		_calcSpeed
 13126 ;;		_calcMotorPow
 13127 ;;		_efgtoa
 13128 ;; This function uses a non-reentrant model
 13129 ;;
 13130                           
 13131                           	psect	text53
 13132  002802                     __ptext53:
 13133                           	callstack 0
 13134  002802                     ___flmul:
 13135                           	callstack 16
 13136  002802  502D               	movf	(___flmul@b+3)^0,w,c
 13137  002804  0B80               	andlw	128
 13138  002806  0100               	movlb	0	; () banked
 13139  002808  6F60               	movwf	___flmul@sign& (0+255),b
 13140  00280A  502D               	movf	(___flmul@b+3)^0,w,c
 13141  00280C  242D               	addwf	(___flmul@b+3)^0,w,c
 13142  00280E  6F66               	movwf	___flmul@bexp& (0+255),b
 13143  002810                     
 13144                           ; BSR set to: 0
 13145  002810  AE2C               	btfss	(___flmul@b+2)^0,7,c
 13146  002812  EF0D  F014         	goto	u8361
 13147  002816  EF0F  F014         	goto	u8360
 13148  00281A                     u8361:
 13149  00281A  EF10  F014         	goto	l8059
 13150  00281E                     u8360:
 13151  00281E                     
 13152                           ; BSR set to: 0
 13153  00281E  8166               	bsf	___flmul@bexp& (0+255),0,b
 13154  002820                     l8059:
 13155                           
 13156                           ; BSR set to: 0
 13157  002820  5166               	movf	___flmul@bexp& (0+255),w,b
 13158  002822  B4D8               	btfsc	status,2,c
 13159  002824  EF16  F014         	goto	u8371
 13160  002828  EF18  F014         	goto	u8370
 13161  00282C                     u8371:
 13162  00282C  EF2B  F014         	goto	l8067
 13163  002830                     u8370:
 13164  002830                     
 13165                           ; BSR set to: 0
 13166  002830  2966               	incf	___flmul@bexp& (0+255),w,b
 13167  002832  A4D8               	btfss	status,2,c
 13168  002834  EF1E  F014         	goto	u8381
 13169  002838  EF20  F014         	goto	u8380
 13170  00283C                     u8381:
 13171  00283C  EF28  F014         	goto	l8065
 13172  002840                     u8380:
 13173  002840                     
 13174                           ; BSR set to: 0
 13175  002840  0E00               	movlw	0
 13176  002842  6E2A               	movwf	___flmul@b^0,c
 13177  002844  0E00               	movlw	0
 13178  002846  6E2B               	movwf	(___flmul@b+1)^0,c
 13179  002848  0E00               	movlw	0
 13180  00284A  6E2C               	movwf	(___flmul@b+2)^0,c
 13181  00284C  0E00               	movlw	0
 13182  00284E  6E2D               	movwf	(___flmul@b+3)^0,c
 13183  002850                     l8065:
 13184                           
 13185                           ; BSR set to: 0
 13186  002850  8E2C               	bsf	(___flmul@b+2)^0,7,c
 13187  002852  EF33  F014         	goto	l8069
 13188  002856                     l8067:
 13189                           
 13190                           ; BSR set to: 0
 13191  002856  0E00               	movlw	0
 13192  002858  6E2A               	movwf	___flmul@b^0,c
 13193  00285A  0E00               	movlw	0
 13194  00285C  6E2B               	movwf	(___flmul@b+1)^0,c
 13195  00285E  0E00               	movlw	0
 13196  002860  6E2C               	movwf	(___flmul@b+2)^0,c
 13197  002862  0E00               	movlw	0
 13198  002864  6E2D               	movwf	(___flmul@b+3)^0,c
 13199  002866                     l8069:
 13200                           
 13201                           ; BSR set to: 0
 13202  002866  5031               	movf	(___flmul@a+3)^0,w,c
 13203  002868  0B80               	andlw	128
 13204  00286A  1B60               	xorwf	___flmul@sign& (0+255),f,b
 13205  00286C                     
 13206                           ; BSR set to: 0
 13207  00286C  5031               	movf	(___flmul@a+3)^0,w,c
 13208  00286E  2431               	addwf	(___flmul@a+3)^0,w,c
 13209  002870  6F61               	movwf	___flmul@aexp& (0+255),b
 13210  002872                     
 13211                           ; BSR set to: 0
 13212  002872  AE30               	btfss	(___flmul@a+2)^0,7,c
 13213  002874  EF3E  F014         	goto	u8391
 13214  002878  EF40  F014         	goto	u8390
 13215  00287C                     u8391:
 13216  00287C  EF41  F014         	goto	l8077
 13217  002880                     u8390:
 13218  002880                     
 13219                           ; BSR set to: 0
 13220  002880  8161               	bsf	___flmul@aexp& (0+255),0,b
 13221  002882                     l8077:
 13222                           
 13223                           ; BSR set to: 0
 13224  002882  5161               	movf	___flmul@aexp& (0+255),w,b
 13225  002884  B4D8               	btfsc	status,2,c
 13226  002886  EF47  F014         	goto	u8401
 13227  00288A  EF49  F014         	goto	u8400
 13228  00288E                     u8401:
 13229  00288E  EF5C  F014         	goto	l8085
 13230  002892                     u8400:
 13231  002892                     
 13232                           ; BSR set to: 0
 13233  002892  2961               	incf	___flmul@aexp& (0+255),w,b
 13234  002894  A4D8               	btfss	status,2,c
 13235  002896  EF4F  F014         	goto	u8411
 13236  00289A  EF51  F014         	goto	u8410
 13237  00289E                     u8411:
 13238  00289E  EF59  F014         	goto	l8083
 13239  0028A2                     u8410:
 13240  0028A2                     
 13241                           ; BSR set to: 0
 13242  0028A2  0E00               	movlw	0
 13243  0028A4  6E2E               	movwf	___flmul@a^0,c
 13244  0028A6  0E00               	movlw	0
 13245  0028A8  6E2F               	movwf	(___flmul@a+1)^0,c
 13246  0028AA  0E00               	movlw	0
 13247  0028AC  6E30               	movwf	(___flmul@a+2)^0,c
 13248  0028AE  0E00               	movlw	0
 13249  0028B0  6E31               	movwf	(___flmul@a+3)^0,c
 13250  0028B2                     l8083:
 13251                           
 13252                           ; BSR set to: 0
 13253  0028B2  8E30               	bsf	(___flmul@a+2)^0,7,c
 13254  0028B4  EF64  F014         	goto	l2011
 13255  0028B8                     l8085:
 13256                           
 13257                           ; BSR set to: 0
 13258  0028B8  0E00               	movlw	0
 13259  0028BA  6E2E               	movwf	___flmul@a^0,c
 13260  0028BC  0E00               	movlw	0
 13261  0028BE  6E2F               	movwf	(___flmul@a+1)^0,c
 13262  0028C0  0E00               	movlw	0
 13263  0028C2  6E30               	movwf	(___flmul@a+2)^0,c
 13264  0028C4  0E00               	movlw	0
 13265  0028C6  6E31               	movwf	(___flmul@a+3)^0,c
 13266  0028C8                     l2011:
 13267                           
 13268                           ; BSR set to: 0
 13269  0028C8  5161               	movf	___flmul@aexp& (0+255),w,b
 13270  0028CA  B4D8               	btfsc	status,2,c
 13271  0028CC  EF6A  F014         	goto	u8421
 13272  0028D0  EF6C  F014         	goto	u8420
 13273  0028D4                     u8421:
 13274  0028D4  EF74  F014         	goto	l8089
 13275  0028D8                     u8420:
 13276  0028D8                     
 13277                           ; BSR set to: 0
 13278  0028D8  5166               	movf	___flmul@bexp& (0+255),w,b
 13279  0028DA  A4D8               	btfss	status,2,c
 13280  0028DC  EF72  F014         	goto	u8431
 13281  0028E0  EF74  F014         	goto	u8430
 13282  0028E4                     u8431:
 13283  0028E4  EF7E  F014         	goto	l8093
 13284  0028E8                     u8430:
 13285  0028E8                     l8089:
 13286                           
 13287                           ; BSR set to: 0
 13288  0028E8  0E00               	movlw	0
 13289  0028EA  6E2A               	movwf	?___flmul^0,c
 13290  0028EC  0E00               	movlw	0
 13291  0028EE  6E2B               	movwf	(?___flmul+1)^0,c
 13292  0028F0  0E00               	movlw	0
 13293  0028F2  6E2C               	movwf	(?___flmul+2)^0,c
 13294  0028F4  0E00               	movlw	0
 13295  0028F6  6E2D               	movwf	(?___flmul+3)^0,c
 13296  0028F8  EF28  F016         	goto	l2015
 13297  0028FC                     l8093:
 13298                           
 13299                           ; BSR set to: 0
 13300  0028FC  5030               	movf	(___flmul@a+2)^0,w,c
 13301  0028FE  022A               	mulwf	___flmul@b^0,c
 13302  002900  006F FFCC  F06B    	movff	prodl,___flmul@temp
 13303  002906  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 13304  00290C                     
 13305                           ; BSR set to: 0
 13306  00290C  516B               	movf	___flmul@temp& (0+255),w,b
 13307  00290E  6F62               	movwf	___flmul@grs& (0+255),b
 13308  002910  6B63               	clrf	(___flmul@grs+1)& (0+255),b
 13309  002912  6B64               	clrf	(___flmul@grs+2)& (0+255),b
 13310  002914  6B65               	clrf	(___flmul@grs+3)& (0+255),b
 13311  002916                     
 13312                           ; BSR set to: 0
 13313  002916  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 13314  002918  6F67               	movwf	___flmul@prod& (0+255),b
 13315  00291A  6B68               	clrf	(___flmul@prod+1)& (0+255),b
 13316  00291C  6B69               	clrf	(___flmul@prod+2)& (0+255),b
 13317  00291E  6B6A               	clrf	(___flmul@prod+3)& (0+255),b
 13318  002920  502F               	movf	(___flmul@a+1)^0,w,c
 13319  002922  022B               	mulwf	(___flmul@b+1)^0,c
 13320  002924  006F FFCC  F06B    	movff	prodl,___flmul@temp
 13321  00292A  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 13322  002930                     
 13323                           ; BSR set to: 0
 13324  002930  516B               	movf	___flmul@temp& (0+255),w,b
 13325  002932  2762               	addwf	___flmul@grs& (0+255),f,b
 13326  002934  0E00               	movlw	0
 13327  002936  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 13328  002938  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 13329  00293A  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 13330  00293C                     
 13331                           ; BSR set to: 0
 13332  00293C  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 13333  00293E  2767               	addwf	___flmul@prod& (0+255),f,b
 13334  002940  0E00               	movlw	0
 13335  002942  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 13336  002944  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 13337  002946  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 13338  002948  502E               	movf	___flmul@a^0,w,c
 13339  00294A  022C               	mulwf	(___flmul@b+2)^0,c
 13340  00294C  006F FFCC  F06B    	movff	prodl,___flmul@temp
 13341  002952  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 13342  002958                     
 13343                           ; BSR set to: 0
 13344  002958  516B               	movf	___flmul@temp& (0+255),w,b
 13345  00295A  2762               	addwf	___flmul@grs& (0+255),f,b
 13346  00295C  0E00               	movlw	0
 13347  00295E  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 13348  002960  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 13349  002962  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 13350  002964                     
 13351                           ; BSR set to: 0
 13352  002964  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 13353  002966  2767               	addwf	___flmul@prod& (0+255),f,b
 13354  002968  0E00               	movlw	0
 13355  00296A  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 13356  00296C  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 13357  00296E  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 13358  002970                     
 13359                           ; BSR set to: 0
 13360  002970  C064  F065         	movff	___flmul@grs+2,___flmul@grs+3
 13361  002974  C063  F064         	movff	___flmul@grs+1,___flmul@grs+2
 13362  002978  C062  F063         	movff	___flmul@grs,___flmul@grs+1
 13363  00297C  6B62               	clrf	___flmul@grs& (0+255),b
 13364  00297E                     
 13365                           ; BSR set to: 0
 13366  00297E  502E               	movf	___flmul@a^0,w,c
 13367  002980  022B               	mulwf	(___flmul@b+1)^0,c
 13368  002982  006F FFCC  F06B    	movff	prodl,___flmul@temp
 13369  002988  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 13370  00298E                     
 13371                           ; BSR set to: 0
 13372  00298E  516B               	movf	___flmul@temp& (0+255),w,b
 13373  002990  2762               	addwf	___flmul@grs& (0+255),f,b
 13374  002992  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 13375  002994  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 13376  002996  0E00               	movlw	0
 13377  002998  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 13378  00299A  0E00               	movlw	0
 13379  00299C  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 13380  00299E                     
 13381                           ; BSR set to: 0
 13382  00299E  502F               	movf	(___flmul@a+1)^0,w,c
 13383  0029A0  022A               	mulwf	___flmul@b^0,c
 13384  0029A2  006F FFCC  F06B    	movff	prodl,___flmul@temp
 13385  0029A8  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 13386  0029AE                     
 13387                           ; BSR set to: 0
 13388  0029AE  516B               	movf	___flmul@temp& (0+255),w,b
 13389  0029B0  2762               	addwf	___flmul@grs& (0+255),f,b
 13390  0029B2  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 13391  0029B4  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 13392  0029B6  0E00               	movlw	0
 13393  0029B8  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 13394  0029BA  0E00               	movlw	0
 13395  0029BC  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 13396  0029BE                     
 13397                           ; BSR set to: 0
 13398  0029BE  C064  F065         	movff	___flmul@grs+2,___flmul@grs+3
 13399  0029C2  C063  F064         	movff	___flmul@grs+1,___flmul@grs+2
 13400  0029C6  C062  F063         	movff	___flmul@grs,___flmul@grs+1
 13401  0029CA  6B62               	clrf	___flmul@grs& (0+255),b
 13402  0029CC  502E               	movf	___flmul@a^0,w,c
 13403  0029CE  022A               	mulwf	___flmul@b^0,c
 13404  0029D0  006F FFCC  F06B    	movff	prodl,___flmul@temp
 13405  0029D6  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 13406  0029DC                     
 13407                           ; BSR set to: 0
 13408  0029DC  516B               	movf	___flmul@temp& (0+255),w,b
 13409  0029DE  2762               	addwf	___flmul@grs& (0+255),f,b
 13410  0029E0  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 13411  0029E2  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 13412  0029E4  0E00               	movlw	0
 13413  0029E6  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 13414  0029E8  0E00               	movlw	0
 13415  0029EA  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 13416  0029EC                     
 13417                           ; BSR set to: 0
 13418  0029EC  5030               	movf	(___flmul@a+2)^0,w,c
 13419  0029EE  022B               	mulwf	(___flmul@b+1)^0,c
 13420  0029F0  006F FFCC  F06B    	movff	prodl,___flmul@temp
 13421  0029F6  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 13422  0029FC  516B               	movf	___flmul@temp& (0+255),w,b
 13423  0029FE  2767               	addwf	___flmul@prod& (0+255),f,b
 13424  002A00  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 13425  002A02  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 13426  002A04  0E00               	movlw	0
 13427  002A06  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 13428  002A08  0E00               	movlw	0
 13429  002A0A  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 13430  002A0C                     
 13431                           ; BSR set to: 0
 13432  002A0C  502F               	movf	(___flmul@a+1)^0,w,c
 13433  002A0E  022C               	mulwf	(___flmul@b+2)^0,c
 13434  002A10  006F FFCC  F06B    	movff	prodl,___flmul@temp
 13435  002A16  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 13436  002A1C                     
 13437                           ; BSR set to: 0
 13438  002A1C  516B               	movf	___flmul@temp& (0+255),w,b
 13439  002A1E  2767               	addwf	___flmul@prod& (0+255),f,b
 13440  002A20  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 13441  002A22  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 13442  002A24  0E00               	movlw	0
 13443  002A26  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 13444  002A28  0E00               	movlw	0
 13445  002A2A  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 13446  002A2C  5030               	movf	(___flmul@a+2)^0,w,c
 13447  002A2E  022C               	mulwf	(___flmul@b+2)^0,c
 13448  002A30  006F FFCC  F06B    	movff	prodl,___flmul@temp
 13449  002A36  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 13450  002A3C                     
 13451                           ; BSR set to: 0
 13452  002A3C  516B               	movf	___flmul@temp& (0+255),w,b
 13453  002A3E  6E32               	movwf	??___flmul^0,c
 13454  002A40  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 13455  002A42  6E33               	movwf	(??___flmul+1)^0,c
 13456  002A44  6A34               	clrf	(??___flmul+2)^0,c
 13457  002A46  6A35               	clrf	(??___flmul+3)^0,c
 13458  002A48  C034  F035         	movff	??___flmul+2,??___flmul+3
 13459  002A4C  C033  F034         	movff	??___flmul+1,??___flmul+2
 13460  002A50  C032  F033         	movff	??___flmul,??___flmul+1
 13461  002A54  6A32               	clrf	??___flmul^0,c
 13462  002A56  5032               	movf	??___flmul^0,w,c
 13463  002A58  2767               	addwf	___flmul@prod& (0+255),f,b
 13464  002A5A  5033               	movf	(??___flmul+1)^0,w,c
 13465  002A5C  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 13466  002A5E  5034               	movf	(??___flmul+2)^0,w,c
 13467  002A60  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 13468  002A62  5035               	movf	(??___flmul+3)^0,w,c
 13469  002A64  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 13470  002A66                     
 13471                           ; BSR set to: 0
 13472  002A66  C062  F032         	movff	___flmul@grs,??___flmul
 13473  002A6A  C063  F033         	movff	___flmul@grs+1,??___flmul+1
 13474  002A6E  C064  F034         	movff	___flmul@grs+2,??___flmul+2
 13475  002A72  C065  F035         	movff	___flmul@grs+3,??___flmul+3
 13476  002A76  0E19               	movlw	25
 13477  002A78  EF43  F015         	goto	u8440
 13478  002A7C                     u8445:
 13479  002A7C  90D8               	bcf	status,0,c
 13480  002A7E  3235               	rrcf	(??___flmul+3)^0,f,c
 13481  002A80  3234               	rrcf	(??___flmul+2)^0,f,c
 13482  002A82  3233               	rrcf	(??___flmul+1)^0,f,c
 13483  002A84  3232               	rrcf	??___flmul^0,f,c
 13484  002A86                     u8440:
 13485  002A86  2EE8               	decfsz	wreg,f,c
 13486  002A88  EF3E  F015         	goto	u8445
 13487  002A8C  5032               	movf	??___flmul^0,w,c
 13488  002A8E  2767               	addwf	___flmul@prod& (0+255),f,b
 13489  002A90  5033               	movf	(??___flmul+1)^0,w,c
 13490  002A92  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 13491  002A94  5034               	movf	(??___flmul+2)^0,w,c
 13492  002A96  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 13493  002A98  5035               	movf	(??___flmul+3)^0,w,c
 13494  002A9A  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 13495  002A9C                     
 13496                           ; BSR set to: 0
 13497  002A9C  C064  F065         	movff	___flmul@grs+2,___flmul@grs+3
 13498  002AA0  C063  F064         	movff	___flmul@grs+1,___flmul@grs+2
 13499  002AA4  C062  F063         	movff	___flmul@grs,___flmul@grs+1
 13500  002AA8  6B62               	clrf	___flmul@grs& (0+255),b
 13501  002AAA                     
 13502                           ; BSR set to: 0
 13503  002AAA  5161               	movf	___flmul@aexp& (0+255),w,b
 13504  002AAC  C066  F032         	movff	___flmul@bexp,??___flmul
 13505  002AB0  6A33               	clrf	(??___flmul+1)^0,c
 13506  002AB2  2632               	addwf	??___flmul^0,f,c
 13507  002AB4  0E00               	movlw	0
 13508  002AB6  2233               	addwfc	(??___flmul+1)^0,f,c
 13509  002AB8  0E82               	movlw	130
 13510  002ABA  2432               	addwf	??___flmul^0,w,c
 13511  002ABC  6F6B               	movwf	___flmul@temp& (0+255),b
 13512  002ABE  0EFF               	movlw	255
 13513  002AC0  2033               	addwfc	(??___flmul+1)^0,w,c
 13514  002AC2  6F6C               	movwf	(___flmul@temp+1)& (0+255),b
 13515  002AC4  EF79  F015         	goto	l8141
 13516  002AC8                     l8135:
 13517                           
 13518                           ; BSR set to: 0
 13519  002AC8  90D8               	bcf	status,0,c
 13520  002ACA  3767               	rlcf	___flmul@prod& (0+255),f,b
 13521  002ACC  3768               	rlcf	(___flmul@prod+1)& (0+255),f,b
 13522  002ACE  3769               	rlcf	(___flmul@prod+2)& (0+255),f,b
 13523  002AD0  376A               	rlcf	(___flmul@prod+3)& (0+255),f,b
 13524  002AD2                     
 13525                           ; BSR set to: 0
 13526  002AD2  AF65               	btfss	(___flmul@grs+3)& (0+255),7,b
 13527  002AD4  EF6E  F015         	goto	u8451
 13528  002AD8  EF70  F015         	goto	u8450
 13529  002ADC                     u8451:
 13530  002ADC  EF71  F015         	goto	l2018
 13531  002AE0                     u8450:
 13532  002AE0                     
 13533                           ; BSR set to: 0
 13534  002AE0  8167               	bsf	___flmul@prod& (0+255),0,b
 13535  002AE2                     l2018:
 13536                           
 13537                           ; BSR set to: 0
 13538  002AE2  90D8               	bcf	status,0,c
 13539  002AE4  3762               	rlcf	___flmul@grs& (0+255),f,b
 13540  002AE6  3763               	rlcf	(___flmul@grs+1)& (0+255),f,b
 13541  002AE8  3764               	rlcf	(___flmul@grs+2)& (0+255),f,b
 13542  002AEA  3765               	rlcf	(___flmul@grs+3)& (0+255),f,b
 13543  002AEC  076B               	decf	___flmul@temp& (0+255),f,b
 13544  002AEE  A0D8               	btfss	status,0,c
 13545  002AF0  076C               	decf	(___flmul@temp+1)& (0+255),f,b
 13546  002AF2                     l8141:
 13547                           
 13548                           ; BSR set to: 0
 13549  002AF2  AF69               	btfss	(___flmul@prod+2)& (0+255),7,b
 13550  002AF4  EF7E  F015         	goto	u8461
 13551  002AF8  EF80  F015         	goto	u8460
 13552  002AFC                     u8461:
 13553  002AFC  EF64  F015         	goto	l8135
 13554  002B00                     u8460:
 13555  002B00                     
 13556                           ; BSR set to: 0
 13557  002B00  0E00               	movlw	0
 13558  002B02  6F61               	movwf	___flmul@aexp& (0+255),b
 13559  002B04                     
 13560                           ; BSR set to: 0
 13561  002B04  AF65               	btfss	(___flmul@grs+3)& (0+255),7,b
 13562  002B06  EF87  F015         	goto	u8471
 13563  002B0A  EF89  F015         	goto	u8470
 13564  002B0E                     u8471:
 13565  002B0E  EFAD  F015         	goto	l2020
 13566  002B12                     u8470:
 13567  002B12                     
 13568                           ; BSR set to: 0
 13569  002B12  0EFF               	movlw	255
 13570  002B14  1562               	andwf	___flmul@grs& (0+255),w,b
 13571  002B16  6E32               	movwf	??___flmul^0,c
 13572  002B18  0EFF               	movlw	255
 13573  002B1A  1563               	andwf	(___flmul@grs+1)& (0+255),w,b
 13574  002B1C  6E33               	movwf	(??___flmul+1)^0,c
 13575  002B1E  0EFF               	movlw	255
 13576  002B20  1564               	andwf	(___flmul@grs+2)& (0+255),w,b
 13577  002B22  6E34               	movwf	(??___flmul+2)^0,c
 13578  002B24  0E7F               	movlw	127
 13579  002B26  1565               	andwf	(___flmul@grs+3)& (0+255),w,b
 13580  002B28  6E35               	movwf	(??___flmul+3)^0,c
 13581  002B2A  5032               	movf	??___flmul^0,w,c
 13582  002B2C  1033               	iorwf	(??___flmul+1)^0,w,c
 13583  002B2E  1034               	iorwf	(??___flmul+2)^0,w,c
 13584  002B30  1035               	iorwf	(??___flmul+3)^0,w,c
 13585  002B32  B4D8               	btfsc	status,2,c
 13586  002B34  EF9E  F015         	goto	u8481
 13587  002B38  EFA0  F015         	goto	u8480
 13588  002B3C                     u8481:
 13589  002B3C  EFA4  F015         	goto	l2021
 13590  002B40                     u8480:
 13591  002B40                     l8149:
 13592                           
 13593                           ; BSR set to: 0
 13594  002B40  0E01               	movlw	1
 13595  002B42  6F61               	movwf	___flmul@aexp& (0+255),b
 13596  002B44  EFAD  F015         	goto	l2020
 13597  002B48                     l2021:
 13598                           
 13599                           ; BSR set to: 0
 13600  002B48  A167               	btfss	___flmul@prod& (0+255),0,b
 13601  002B4A  EFA9  F015         	goto	u8491
 13602  002B4E  EFAB  F015         	goto	u8490
 13603  002B52                     u8491:
 13604  002B52  EFAD  F015         	goto	l2020
 13605  002B56                     u8490:
 13606  002B56  EFA0  F015         	goto	l8149
 13607  002B5A                     l2020:
 13608                           
 13609                           ; BSR set to: 0
 13610  002B5A  5161               	movf	___flmul@aexp& (0+255),w,b
 13611  002B5C  B4D8               	btfsc	status,2,c
 13612  002B5E  EFB3  F015         	goto	u8501
 13613  002B62  EFB5  F015         	goto	u8500
 13614  002B66                     u8501:
 13615  002B66  EFD9  F015         	goto	l8161
 13616  002B6A                     u8500:
 13617  002B6A                     
 13618                           ; BSR set to: 0
 13619  002B6A  0E01               	movlw	1
 13620  002B6C  2767               	addwf	___flmul@prod& (0+255),f,b
 13621  002B6E  0E00               	movlw	0
 13622  002B70  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 13623  002B72  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 13624  002B74  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 13625  002B76                     
 13626                           ; BSR set to: 0
 13627  002B76  A16A               	btfss	(___flmul@prod+3)& (0+255),0,b
 13628  002B78  EFC0  F015         	goto	u8511
 13629  002B7C  EFC2  F015         	goto	u8510
 13630  002B80                     u8511:
 13631  002B80  EFD9  F015         	goto	l8161
 13632  002B84                     u8510:
 13633  002B84                     
 13634                           ; BSR set to: 0
 13635  002B84  C067  F032         	movff	___flmul@prod,??___flmul
 13636  002B88  C068  F033         	movff	___flmul@prod+1,??___flmul+1
 13637  002B8C  C069  F034         	movff	___flmul@prod+2,??___flmul+2
 13638  002B90  C06A  F035         	movff	___flmul@prod+3,??___flmul+3
 13639  002B94  3435               	rlcf	(??___flmul+3)^0,w,c
 13640  002B96  3235               	rrcf	(??___flmul+3)^0,f,c
 13641  002B98  3234               	rrcf	(??___flmul+2)^0,f,c
 13642  002B9A  3233               	rrcf	(??___flmul+1)^0,f,c
 13643  002B9C  3232               	rrcf	??___flmul^0,f,c
 13644  002B9E  C032  F067         	movff	??___flmul,___flmul@prod
 13645  002BA2  C033  F068         	movff	??___flmul+1,___flmul@prod+1
 13646  002BA6  C034  F069         	movff	??___flmul+2,___flmul@prod+2
 13647  002BAA  C035  F06A         	movff	??___flmul+3,___flmul@prod+3
 13648  002BAE                     
 13649                           ; BSR set to: 0
 13650  002BAE  4B6B               	infsnz	___flmul@temp& (0+255),f,b
 13651  002BB0  2B6C               	incf	(___flmul@temp+1)& (0+255),f,b
 13652  002BB2                     l8161:
 13653                           
 13654                           ; BSR set to: 0
 13655  002BB2  BF6C               	btfsc	(___flmul@temp+1)& (0+255),7,b
 13656  002BB4  EFE4  F015         	goto	u8521
 13657  002BB8  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 13658  002BBA  E108               	bnz	u8520
 13659  002BBC  296B               	incf	___flmul@temp& (0+255),w,b
 13660  002BBE  A0D8               	btfss	status,0,c
 13661  002BC0  EFE4  F015         	goto	u8521
 13662  002BC4  EFE6  F015         	goto	u8520
 13663  002BC8                     u8521:
 13664  002BC8  EFF0  F015         	goto	l8165
 13665  002BCC                     u8520:
 13666  002BCC                     
 13667                           ; BSR set to: 0
 13668  002BCC  0E00               	movlw	0
 13669  002BCE  6F67               	movwf	___flmul@prod& (0+255),b
 13670  002BD0  0E00               	movlw	0
 13671  002BD2  6F68               	movwf	(___flmul@prod+1)& (0+255),b
 13672  002BD4  0E80               	movlw	128
 13673  002BD6  6F69               	movwf	(___flmul@prod+2)& (0+255),b
 13674  002BD8  0E7F               	movlw	127
 13675  002BDA  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
 13676  002BDC  EF1E  F016         	goto	l8177
 13677  002BE0                     l8165:
 13678                           
 13679                           ; BSR set to: 0
 13680  002BE0  BF6C               	btfsc	(___flmul@temp+1)& (0+255),7,b
 13681  002BE2  EFFD  F015         	goto	u8530
 13682  002BE6  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 13683  002BE8  E106               	bnz	u8531
 13684  002BEA  056B               	decf	___flmul@temp& (0+255),w,b
 13685  002BEC  B0D8               	btfsc	status,0,c
 13686  002BEE  EFFB  F015         	goto	u8531
 13687  002BF2  EFFD  F015         	goto	u8530
 13688  002BF6                     u8531:
 13689  002BF6  EF09  F016         	goto	l2028
 13690  002BFA                     u8530:
 13691  002BFA                     
 13692                           ; BSR set to: 0
 13693  002BFA  0E00               	movlw	0
 13694  002BFC  6F67               	movwf	___flmul@prod& (0+255),b
 13695  002BFE  0E00               	movlw	0
 13696  002C00  6F68               	movwf	(___flmul@prod+1)& (0+255),b
 13697  002C02  0E00               	movlw	0
 13698  002C04  6F69               	movwf	(___flmul@prod+2)& (0+255),b
 13699  002C06  0E00               	movlw	0
 13700  002C08  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
 13701  002C0A  0E00               	movlw	0
 13702  002C0C  6F60               	movwf	___flmul@sign& (0+255),b
 13703  002C0E  EF1E  F016         	goto	l8177
 13704  002C12                     l2028:
 13705                           
 13706                           ; BSR set to: 0
 13707  002C12  C06B  F066         	movff	___flmul@temp,___flmul@bexp
 13708  002C16                     
 13709                           ; BSR set to: 0
 13710  002C16  0EFF               	movlw	255
 13711  002C18  1767               	andwf	___flmul@prod& (0+255),f,b
 13712  002C1A  0EFF               	movlw	255
 13713  002C1C  1768               	andwf	(___flmul@prod+1)& (0+255),f,b
 13714  002C1E  0E7F               	movlw	127
 13715  002C20  1769               	andwf	(___flmul@prod+2)& (0+255),f,b
 13716  002C22  0E00               	movlw	0
 13717  002C24  176A               	andwf	(___flmul@prod+3)& (0+255),f,b
 13718  002C26                     
 13719                           ; BSR set to: 0
 13720  002C26  A166               	btfss	___flmul@bexp& (0+255),0,b
 13721  002C28  EF18  F016         	goto	u8541
 13722  002C2C  EF1A  F016         	goto	u8540
 13723  002C30                     u8541:
 13724  002C30  EF1B  F016         	goto	l8175
 13725  002C34                     u8540:
 13726  002C34                     
 13727                           ; BSR set to: 0
 13728  002C34  8F69               	bsf	(___flmul@prod+2)& (0+255),7,b
 13729  002C36                     l8175:
 13730                           
 13731                           ; BSR set to: 0
 13732  002C36  90D8               	bcf	status,0,c
 13733  002C38  3166               	rrcf	___flmul@bexp& (0+255),w,b
 13734  002C3A  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
 13735  002C3C                     l8177:
 13736                           
 13737                           ; BSR set to: 0
 13738  002C3C  5160               	movf	___flmul@sign& (0+255),w,b
 13739  002C3E  136A               	iorwf	(___flmul@prod+3)& (0+255),f,b
 13740  002C40                     
 13741                           ; BSR set to: 0
 13742  002C40  C067  F02A         	movff	___flmul@prod,?___flmul
 13743  002C44  C068  F02B         	movff	___flmul@prod+1,?___flmul+1
 13744  002C48  C069  F02C         	movff	___flmul@prod+2,?___flmul+2
 13745  002C4C  C06A  F02D         	movff	___flmul@prod+3,?___flmul+3
 13746  002C50                     l2015:
 13747                           
 13748                           ; BSR set to: 0
 13749  002C50  0012               	return		;funcret
 13750  002C52                     __end_of___flmul:
 13751                           	callstack 0
 13752                           
 13753 ;; *************** function ___awdiv *****************
 13754 ;; Defined at:
 13755 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
 13756 ;; Parameters:    Size  Location     Type
 13757 ;;  dividend        2   19[COMRAM] int 
 13758 ;;  divisor         2   21[COMRAM] int 
 13759 ;; Auto vars:     Size  Location     Type
 13760 ;;  quotient        2   25[COMRAM] int 
 13761 ;;  sign            1   24[COMRAM] unsigned char 
 13762 ;;  counter         1   23[COMRAM] unsigned char 
 13763 ;; Return value:  Size  Location     Type
 13764 ;;                  2   19[COMRAM] int 
 13765 ;; Registers used:
 13766 ;;		wreg, status,2, status,0
 13767 ;; Tracked objects:
 13768 ;;		On entry : 0/0
 13769 ;;		On exit  : 0/0
 13770 ;;		Unchanged: 0/0
 13771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13772 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13773 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13775 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13776 ;;Total ram usage:        8 bytes
 13777 ;; Hardware stack levels used: 1
 13778 ;; Hardware stack levels required when called: 8
 13779 ;; This function calls:
 13780 ;;		Nothing
 13781 ;; This function is called by:
 13782 ;;		_calcMotorPow
 13783 ;;		_efgtoa
 13784 ;; This function uses a non-reentrant model
 13785 ;;
 13786                           
 13787                           	psect	text54
 13788  004FF4                     __ptext54:
 13789                           	callstack 0
 13790  004FF4                     ___awdiv:
 13791                           	callstack 16
 13792  004FF4  0E00               	movlw	0
 13793  004FF6  6E19               	movwf	___awdiv@sign^0,c
 13794  004FF8  BE17               	btfsc	(___awdiv@divisor+1)^0,7,c
 13795  004FFA  EF03  F028         	goto	u8550
 13796  004FFE  EF01  F028         	goto	u8551
 13797  005002                     u8551:
 13798  005002  EF09  F028         	goto	l8197
 13799  005006                     u8550:
 13800  005006  6C16               	negf	___awdiv@divisor^0,c
 13801  005008  1E17               	comf	(___awdiv@divisor+1)^0,f,c
 13802  00500A  B0D8               	btfsc	status,0,c
 13803  00500C  2A17               	incf	(___awdiv@divisor+1)^0,f,c
 13804  00500E  0E01               	movlw	1
 13805  005010  6E19               	movwf	___awdiv@sign^0,c
 13806  005012                     l8197:
 13807  005012  BE15               	btfsc	(___awdiv@dividend+1)^0,7,c
 13808  005014  EF10  F028         	goto	u8560
 13809  005018  EF0E  F028         	goto	u8561
 13810  00501C                     u8561:
 13811  00501C  EF16  F028         	goto	l8203
 13812  005020                     u8560:
 13813  005020  6C14               	negf	___awdiv@dividend^0,c
 13814  005022  1E15               	comf	(___awdiv@dividend+1)^0,f,c
 13815  005024  B0D8               	btfsc	status,0,c
 13816  005026  2A15               	incf	(___awdiv@dividend+1)^0,f,c
 13817  005028  0E01               	movlw	1
 13818  00502A  1A19               	xorwf	___awdiv@sign^0,f,c
 13819  00502C                     l8203:
 13820  00502C  0E00               	movlw	0
 13821  00502E  6E1B               	movwf	(___awdiv@quotient+1)^0,c
 13822  005030  0E00               	movlw	0
 13823  005032  6E1A               	movwf	___awdiv@quotient^0,c
 13824  005034  5016               	movf	___awdiv@divisor^0,w,c
 13825  005036  1017               	iorwf	(___awdiv@divisor+1)^0,w,c
 13826  005038  B4D8               	btfsc	status,2,c
 13827  00503A  EF21  F028         	goto	u8571
 13828  00503E  EF23  F028         	goto	u8570
 13829  005042                     u8571:
 13830  005042  EF4B  F028         	goto	l8225
 13831  005046                     u8570:
 13832  005046  0E01               	movlw	1
 13833  005048  6E18               	movwf	___awdiv@counter^0,c
 13834  00504A  EF2B  F028         	goto	l8211
 13835  00504E                     l8209:
 13836  00504E  90D8               	bcf	status,0,c
 13837  005050  3616               	rlcf	___awdiv@divisor^0,f,c
 13838  005052  3617               	rlcf	(___awdiv@divisor+1)^0,f,c
 13839  005054  2A18               	incf	___awdiv@counter^0,f,c
 13840  005056                     l8211:
 13841  005056  AE17               	btfss	(___awdiv@divisor+1)^0,7,c
 13842  005058  EF30  F028         	goto	u8581
 13843  00505C  EF32  F028         	goto	u8580
 13844  005060                     u8581:
 13845  005060  EF27  F028         	goto	l8209
 13846  005064                     u8580:
 13847  005064                     l8213:
 13848  005064  90D8               	bcf	status,0,c
 13849  005066  361A               	rlcf	___awdiv@quotient^0,f,c
 13850  005068  361B               	rlcf	(___awdiv@quotient+1)^0,f,c
 13851  00506A  5016               	movf	___awdiv@divisor^0,w,c
 13852  00506C  5C14               	subwf	___awdiv@dividend^0,w,c
 13853  00506E  5017               	movf	(___awdiv@divisor+1)^0,w,c
 13854  005070  5815               	subwfb	(___awdiv@dividend+1)^0,w,c
 13855  005072  A0D8               	btfss	status,0,c
 13856  005074  EF3E  F028         	goto	u8591
 13857  005078  EF40  F028         	goto	u8590
 13858  00507C                     u8591:
 13859  00507C  EF45  F028         	goto	l8221
 13860  005080                     u8590:
 13861  005080  5016               	movf	___awdiv@divisor^0,w,c
 13862  005082  5E14               	subwf	___awdiv@dividend^0,f,c
 13863  005084  5017               	movf	(___awdiv@divisor+1)^0,w,c
 13864  005086  5A15               	subwfb	(___awdiv@dividend+1)^0,f,c
 13865  005088  801A               	bsf	___awdiv@quotient^0,0,c
 13866  00508A                     l8221:
 13867  00508A  90D8               	bcf	status,0,c
 13868  00508C  3217               	rrcf	(___awdiv@divisor+1)^0,f,c
 13869  00508E  3216               	rrcf	___awdiv@divisor^0,f,c
 13870  005090  2E18               	decfsz	___awdiv@counter^0,f,c
 13871  005092  EF32  F028         	goto	l8213
 13872  005096                     l8225:
 13873  005096  5019               	movf	___awdiv@sign^0,w,c
 13874  005098  B4D8               	btfsc	status,2,c
 13875  00509A  EF51  F028         	goto	u8601
 13876  00509E  EF53  F028         	goto	u8600
 13877  0050A2                     u8601:
 13878  0050A2  EF57  F028         	goto	l8229
 13879  0050A6                     u8600:
 13880  0050A6  6C1A               	negf	___awdiv@quotient^0,c
 13881  0050A8  1E1B               	comf	(___awdiv@quotient+1)^0,f,c
 13882  0050AA  B0D8               	btfsc	status,0,c
 13883  0050AC  2A1B               	incf	(___awdiv@quotient+1)^0,f,c
 13884  0050AE                     l8229:
 13885  0050AE  C01A  F014         	movff	___awdiv@quotient,?___awdiv
 13886  0050B2  C01B  F015         	movff	___awdiv@quotient+1,?___awdiv+1
 13887  0050B6  0012               	return		;funcret
 13888  0050B8                     __end_of___awdiv:
 13889                           	callstack 0
 13890                           
 13891 ;; *************** function _SYSTEM_Initialize *****************
 13892 ;; Defined at:
 13893 ;;		line 50 in file "mcc_generated_files/mcc.c"
 13894 ;; Parameters:    Size  Location     Type
 13895 ;;		None
 13896 ;; Auto vars:     Size  Location     Type
 13897 ;;		None
 13898 ;; Return value:  Size  Location     Type
 13899 ;;                  1    wreg      void 
 13900 ;; Registers used:
 13901 ;;		wreg, status,2, status,0, cstack
 13902 ;; Tracked objects:
 13903 ;;		On entry : 0/0
 13904 ;;		On exit  : 0/0
 13905 ;;		Unchanged: 0/0
 13906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13910 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13911 ;;Total ram usage:        0 bytes
 13912 ;; Hardware stack levels used: 1
 13913 ;; Hardware stack levels required when called: 10
 13914 ;; This function calls:
 13915 ;;		_ADCC_Initialize
 13916 ;;		_CCP3_Initialize
 13917 ;;		_CCP4_Initialize
 13918 ;;		_CLC3_Initialize
 13919 ;;		_INTERRUPT_Initialize
 13920 ;;		_OSCILLATOR_Initialize
 13921 ;;		_PIN_MANAGER_Initialize
 13922 ;;		_PMD_Initialize
 13923 ;;		_PWM5_Initialize
 13924 ;;		_PWM6_Initialize
 13925 ;;		_PWM7_Initialize
 13926 ;;		_PWM8_Initialize
 13927 ;;		_SMT1_Initialize
 13928 ;;		_TMR2_Initialize
 13929 ;;		_TMR3_Initialize
 13930 ;;		_TMR4_Initialize
 13931 ;;		_TMR5_Initialize
 13932 ;;		_UART1_Initialize
 13933 ;; This function is called by:
 13934 ;;		_main
 13935 ;; This function uses a non-reentrant model
 13936 ;;
 13937                           
 13938                           	psect	text55
 13939  00599C                     __ptext55:
 13940                           	callstack 0
 13941  00599C                     _SYSTEM_Initialize:
 13942                           	callstack 20
 13943  00599C                     
 13944                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 13945  00599C  ECA8  F02C         	call	_INTERRUPT_Initialize	;wreg free
 13946                           
 13947                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 13948  0059A0  EC8E  F030         	call	_PMD_Initialize	;wreg free
 13949                           
 13950                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 13951  0059A4  EC95  F027         	call	_PIN_MANAGER_Initialize	;wreg free
 13952                           
 13953                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 13954  0059A8  EC0F  F031         	call	_OSCILLATOR_Initialize	;wreg free
 13955  0059AC                     
 13956                           ;mcc_generated_files/mcc.c: 56:     CCP3_Initialize();
 13957  0059AC  ECE0  F02F         	call	_CCP3_Initialize	;wreg free
 13958  0059B0                     
 13959                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 13960  0059B0  EC4F  F02C         	call	_ADCC_Initialize	;wreg free
 13961                           
 13962                           ;mcc_generated_files/mcc.c: 58:     TMR4_Initialize();
 13963  0059B4  EC0E  F030         	call	_TMR4_Initialize	;wreg free
 13964  0059B8                     
 13965                           ;mcc_generated_files/mcc.c: 59:     SMT1_Initialize();
 13966  0059B8  ECB1  F02F         	call	_SMT1_Initialize	;wreg free
 13967  0059BC                     
 13968                           ;mcc_generated_files/mcc.c: 60:     PWM8_Initialize();
 13969  0059BC  ECDF  F030         	call	_PWM8_Initialize	;wreg free
 13970  0059C0                     
 13971                           ;mcc_generated_files/mcc.c: 61:     TMR2_Initialize();
 13972  0059C0  ECD1  F030         	call	_TMR2_Initialize	;wreg free
 13973  0059C4                     
 13974                           ;mcc_generated_files/mcc.c: 62:     PWM6_Initialize();
 13975  0059C4  ECF7  F030         	call	_PWM6_Initialize	;wreg free
 13976                           
 13977                           ;mcc_generated_files/mcc.c: 63:     CCP4_Initialize();
 13978  0059C8  ECC9  F02F         	call	_CCP4_Initialize	;wreg free
 13979  0059CC                     
 13980                           ;mcc_generated_files/mcc.c: 64:     CLC3_Initialize();
 13981  0059CC  EC24  F030         	call	_CLC3_Initialize	;wreg free
 13982  0059D0                     
 13983                           ;mcc_generated_files/mcc.c: 65:     TMR3_Initialize();
 13984  0059D0  EC75  F02E         	call	_TMR3_Initialize	;wreg free
 13985                           
 13986                           ;mcc_generated_files/mcc.c: 66:     PWM5_Initialize();
 13987  0059D4  EC03  F031         	call	_PWM5_Initialize	;wreg free
 13988  0059D8                     
 13989                           ;mcc_generated_files/mcc.c: 67:     TMR5_Initialize();
 13990  0059D8  ECF3  F02C         	call	_TMR5_Initialize	;wreg free
 13991  0059DC                     
 13992                           ;mcc_generated_files/mcc.c: 68:     PWM7_Initialize();
 13993  0059DC  ECEB  F030         	call	_PWM7_Initialize	;wreg free
 13994                           
 13995                           ;mcc_generated_files/mcc.c: 69:     UART1_Initialize();
 13996  0059E0  ECCA  F029         	call	_UART1_Initialize	;wreg free
 13997  0059E4  0012               	return		;funcret
 13998  0059E6                     __end_of_SYSTEM_Initialize:
 13999                           	callstack 0
 14000                           
 14001 ;; *************** function _UART1_Initialize *****************
 14002 ;; Defined at:
 14003 ;;		line 87 in file "mcc_generated_files/uart1.c"
 14004 ;; Parameters:    Size  Location     Type
 14005 ;;		None
 14006 ;; Auto vars:     Size  Location     Type
 14007 ;;		None
 14008 ;; Return value:  Size  Location     Type
 14009 ;;                  1    wreg      void 
 14010 ;; Registers used:
 14011 ;;		wreg, status,2, status,0, cstack
 14012 ;; Tracked objects:
 14013 ;;		On entry : 0/0
 14014 ;;		On exit  : 0/0
 14015 ;;		Unchanged: 0/0
 14016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14020 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14021 ;;Total ram usage:        0 bytes
 14022 ;; Hardware stack levels used: 1
 14023 ;; Hardware stack levels required when called: 9
 14024 ;; This function calls:
 14025 ;;		_UART1_SetErrorHandler
 14026 ;;		_UART1_SetFramingErrorHandler
 14027 ;;		_UART1_SetOverrunErrorHandler
 14028 ;;		_UART1_SetRxInterruptHandler
 14029 ;;		_UART1_SetTxInterruptHandler
 14030 ;; This function is called by:
 14031 ;;		_SYSTEM_Initialize
 14032 ;; This function uses a non-reentrant model
 14033 ;;
 14034                           
 14035                           	psect	text56
 14036  005394                     __ptext56:
 14037                           	callstack 0
 14038  005394                     _UART1_Initialize:
 14039                           	callstack 20
 14040  005394                     
 14041                           ;mcc_generated_files/uart1.c: 90:     PIE3bits.U1RXIE = 0;
 14042  005394  0139               	movlb	57	; () banked
 14043  005396  9793               	bcf	147,3,b	;volatile
 14044  005398                     
 14045                           ; BSR set to: 57
 14046                           ;mcc_generated_files/uart1.c: 91:     UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 14047  005398  0E7A               	movlw	low _UART1_Receive_ISR
 14048  00539A  6E14               	movwf	UART1_SetRxInterruptHandler@InterruptHandler^0,c
 14049  00539C  0E51               	movlw	high _UART1_Receive_ISR
 14050  00539E  6E15               	movwf	(UART1_SetRxInterruptHandler@InterruptHandler+1)^0,c
 14051  0053A0  EC34  F031         	call	_UART1_SetRxInterruptHandler	;wreg free
 14052  0053A4                     
 14053                           ;mcc_generated_files/uart1.c: 92:     PIE3bits.U1TXIE = 0;
 14054  0053A4  0139               	movlb	57	; () banked
 14055  0053A6  9993               	bcf	147,4,b	;volatile
 14056                           
 14057                           ;mcc_generated_files/uart1.c: 93:     UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 14058  0053A8  0E06               	movlw	low _UART1_Transmit_ISR
 14059  0053AA  6E14               	movwf	UART1_SetTxInterruptHandler@InterruptHandler^0,c
 14060  0053AC  0E5B               	movlw	high _UART1_Transmit_ISR
 14061  0053AE  6E15               	movwf	(UART1_SetTxInterruptHandler@InterruptHandler+1)^0,c
 14062  0053B0  EC2F  F031         	call	_UART1_SetTxInterruptHandler	;wreg free
 14063  0053B4                     
 14064                           ;mcc_generated_files/uart1.c: 98:     U1P1L = 0x00;
 14065  0053B4  0E00               	movlw	0
 14066  0053B6  013D               	movlb	61	; () banked
 14067  0053B8  6FEC               	movwf	236,b	;volatile
 14068  0053BA                     
 14069                           ; BSR set to: 61
 14070                           ;mcc_generated_files/uart1.c: 101:     U1P1H = 0x00;
 14071  0053BA  0E00               	movlw	0
 14072  0053BC  6FED               	movwf	237,b	;volatile
 14073  0053BE                     
 14074                           ; BSR set to: 61
 14075                           ;mcc_generated_files/uart1.c: 104:     U1P2L = 0x00;
 14076  0053BE  0E00               	movlw	0
 14077  0053C0  6FEE               	movwf	238,b	;volatile
 14078  0053C2                     
 14079                           ; BSR set to: 61
 14080                           ;mcc_generated_files/uart1.c: 107:     U1P2H = 0x00;
 14081  0053C2  0E00               	movlw	0
 14082  0053C4  6FEF               	movwf	239,b	;volatile
 14083  0053C6                     
 14084                           ; BSR set to: 61
 14085                           ;mcc_generated_files/uart1.c: 110:     U1P3L = 0x00;
 14086  0053C6  0E00               	movlw	0
 14087  0053C8  6FF0               	movwf	240,b	;volatile
 14088  0053CA                     
 14089                           ; BSR set to: 61
 14090                           ;mcc_generated_files/uart1.c: 113:     U1P3H = 0x00;
 14091  0053CA  0E00               	movlw	0
 14092  0053CC  6FF1               	movwf	241,b	;volatile
 14093  0053CE                     
 14094                           ; BSR set to: 61
 14095                           ;mcc_generated_files/uart1.c: 116:     U1CON0 = 0xB0;
 14096  0053CE  0EB0               	movlw	176
 14097  0053D0  6FF2               	movwf	242,b	;volatile
 14098  0053D2                     
 14099                           ; BSR set to: 61
 14100                           ;mcc_generated_files/uart1.c: 119:     U1CON1 = 0x80;
 14101  0053D2  0E80               	movlw	128
 14102  0053D4  6FF3               	movwf	243,b	;volatile
 14103  0053D6                     
 14104                           ; BSR set to: 61
 14105                           ;mcc_generated_files/uart1.c: 122:     U1CON2 = 0x00;
 14106  0053D6  0E00               	movlw	0
 14107  0053D8  6FF4               	movwf	244,b	;volatile
 14108  0053DA                     
 14109                           ; BSR set to: 61
 14110                           ;mcc_generated_files/uart1.c: 125:     U1BRGL = 0x8A;
 14111  0053DA  0E8A               	movlw	138
 14112  0053DC  6FF5               	movwf	245,b	;volatile
 14113  0053DE                     
 14114                           ; BSR set to: 61
 14115                           ;mcc_generated_files/uart1.c: 128:     U1BRGH = 0x00;
 14116  0053DE  0E00               	movlw	0
 14117  0053E0  6FF6               	movwf	246,b	;volatile
 14118  0053E2                     
 14119                           ; BSR set to: 61
 14120                           ;mcc_generated_files/uart1.c: 131:     U1FIFO = 0x00;
 14121  0053E2  0E00               	movlw	0
 14122  0053E4  6FF7               	movwf	247,b	;volatile
 14123  0053E6                     
 14124                           ; BSR set to: 61
 14125                           ;mcc_generated_files/uart1.c: 134:     U1UIR = 0x00;
 14126  0053E6  0E00               	movlw	0
 14127  0053E8  6FF8               	movwf	248,b	;volatile
 14128  0053EA                     
 14129                           ; BSR set to: 61
 14130                           ;mcc_generated_files/uart1.c: 137:     U1ERRIR = 0x00;
 14131  0053EA  0E00               	movlw	0
 14132  0053EC  6FF9               	movwf	249,b	;volatile
 14133  0053EE                     
 14134                           ; BSR set to: 61
 14135                           ;mcc_generated_files/uart1.c: 140:     U1ERRIE = 0x00;
 14136  0053EE  0E00               	movlw	0
 14137  0053F0  6FFA               	movwf	250,b	;volatile
 14138  0053F2                     
 14139                           ; BSR set to: 61
 14140                           ;mcc_generated_files/uart1.c: 143:     UART1_SetFramingErrorHandler(UART1_DefaultFraming
      +                          ErrorHandler);
 14141  0053F2  0ECA               	movlw	low _UART1_DefaultFramingErrorHandler
 14142  0053F4  6E14               	movwf	UART1_SetFramingErrorHandler@interruptHandler^0,c
 14143  0053F6  0E62               	movlw	high _UART1_DefaultFramingErrorHandler
 14144  0053F8  6E15               	movwf	(UART1_SetFramingErrorHandler@interruptHandler+1)^0,c
 14145  0053FA  EC3E  F031         	call	_UART1_SetFramingErrorHandler	;wreg free
 14146  0053FE                     
 14147                           ;mcc_generated_files/uart1.c: 144:     UART1_SetOverrunErrorHandler(UART1_DefaultOverrun
      +                          ErrorHandler);
 14148  0053FE  0EC8               	movlw	low _UART1_DefaultOverrunErrorHandler
 14149  005400  6E14               	movwf	UART1_SetOverrunErrorHandler@interruptHandler^0,c
 14150  005402  0E62               	movlw	high _UART1_DefaultOverrunErrorHandler
 14151  005404  6E15               	movwf	(UART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
 14152  005406  EC39  F031         	call	_UART1_SetOverrunErrorHandler	;wreg free
 14153  00540A                     
 14154                           ;mcc_generated_files/uart1.c: 145:     UART1_SetErrorHandler(UART1_DefaultErrorHandler);
 14155  00540A  0EC2               	movlw	low _UART1_DefaultErrorHandler
 14156  00540C  6E14               	movwf	UART1_SetErrorHandler@interruptHandler^0,c
 14157  00540E  0E62               	movlw	high _UART1_DefaultErrorHandler
 14158  005410  6E15               	movwf	(UART1_SetErrorHandler@interruptHandler+1)^0,c
 14159  005412  EC43  F031         	call	_UART1_SetErrorHandler	;wreg free
 14160                           
 14161                           ;mcc_generated_files/uart1.c: 147:     uart1RxLastError.status = 0;
 14162  005416  0E00               	movlw	0
 14163  005418  6E42               	movwf	_uart1RxLastError^0,c	;volatile
 14164                           
 14165                           ;mcc_generated_files/uart1.c: 150:     uart1TxHead = 0;
 14166  00541A  0E00               	movlw	0
 14167  00541C  6E47               	movwf	_uart1TxHead^0,c	;volatile
 14168                           
 14169                           ;mcc_generated_files/uart1.c: 151:     uart1TxTail = 0;
 14170  00541E  0E00               	movlw	0
 14171  005420  6E46               	movwf	_uart1TxTail^0,c	;volatile
 14172                           
 14173                           ;mcc_generated_files/uart1.c: 152:     uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 14174  005422  0E08               	movlw	8
 14175  005424  6E4C               	movwf	_uart1TxBufferRemaining^0,c	;volatile
 14176                           
 14177                           ;mcc_generated_files/uart1.c: 153:     uart1RxHead = 0;
 14178  005426  0E00               	movlw	0
 14179  005428  6E45               	movwf	_uart1RxHead^0,c	;volatile
 14180                           
 14181                           ;mcc_generated_files/uart1.c: 154:     uart1RxTail = 0;
 14182  00542A  0E00               	movlw	0
 14183  00542C  6E44               	movwf	_uart1RxTail^0,c	;volatile
 14184                           
 14185                           ;mcc_generated_files/uart1.c: 155:     uart1RxCount = 0;
 14186  00542E  0E00               	movlw	0
 14187  005430  6E43               	movwf	_uart1RxCount^0,c	;volatile
 14188  005432                     
 14189                           ;mcc_generated_files/uart1.c: 158:     PIE3bits.U1RXIE = 1;
 14190  005432  0139               	movlb	57	; () banked
 14191  005434  8793               	bsf	147,3,b	;volatile
 14192  005436                     
 14193                           ; BSR set to: 57
 14194  005436  0012               	return		;funcret
 14195  005438                     __end_of_UART1_Initialize:
 14196                           	callstack 0
 14197                           
 14198 ;; *************** function _UART1_SetTxInterruptHandler *****************
 14199 ;; Defined at:
 14200 ;;		line 333 in file "mcc_generated_files/uart1.c"
 14201 ;; Parameters:    Size  Location     Type
 14202 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
 14203 ;;		 -> UART1_Transmit_ISR(1), 
 14204 ;; Auto vars:     Size  Location     Type
 14205 ;;		None
 14206 ;; Return value:  Size  Location     Type
 14207 ;;                  1    wreg      void 
 14208 ;; Registers used:
 14209 ;;		wreg, status,2, status,0
 14210 ;; Tracked objects:
 14211 ;;		On entry : 0/0
 14212 ;;		On exit  : 0/0
 14213 ;;		Unchanged: 0/0
 14214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14215 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14218 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14219 ;;Total ram usage:        2 bytes
 14220 ;; Hardware stack levels used: 1
 14221 ;; Hardware stack levels required when called: 8
 14222 ;; This function calls:
 14223 ;;		Nothing
 14224 ;; This function is called by:
 14225 ;;		_UART1_Initialize
 14226 ;; This function uses a non-reentrant model
 14227 ;;
 14228                           
 14229                           	psect	text57
 14230  00625E                     __ptext57:
 14231                           	callstack 0
 14232  00625E                     _UART1_SetTxInterruptHandler:
 14233                           	callstack 20
 14234  00625E                     
 14235                           ;mcc_generated_files/uart1.c: 334:     UART1_TxInterruptHandler = InterruptHandler;
 14236  00625E  C014  F1A0         	movff	UART1_SetTxInterruptHandler@InterruptHandler,_UART1_TxInterruptHandler
 14237  006262  C015  F1A1         	movff	UART1_SetTxInterruptHandler@InterruptHandler+1,_UART1_TxInterruptHandler+1
 14238  006266  0012               	return		;funcret
 14239  006268                     __end_of_UART1_SetTxInterruptHandler:
 14240                           	callstack 0
 14241                           
 14242 ;; *************** function _UART1_SetRxInterruptHandler *****************
 14243 ;; Defined at:
 14244 ;;		line 329 in file "mcc_generated_files/uart1.c"
 14245 ;; Parameters:    Size  Location     Type
 14246 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
 14247 ;;		 -> UART1_Receive_ISR(1), 
 14248 ;; Auto vars:     Size  Location     Type
 14249 ;;		None
 14250 ;; Return value:  Size  Location     Type
 14251 ;;                  1    wreg      void 
 14252 ;; Registers used:
 14253 ;;		wreg, status,2, status,0
 14254 ;; Tracked objects:
 14255 ;;		On entry : 0/0
 14256 ;;		On exit  : 0/0
 14257 ;;		Unchanged: 0/0
 14258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14259 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14262 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14263 ;;Total ram usage:        2 bytes
 14264 ;; Hardware stack levels used: 1
 14265 ;; Hardware stack levels required when called: 8
 14266 ;; This function calls:
 14267 ;;		Nothing
 14268 ;; This function is called by:
 14269 ;;		_UART1_Initialize
 14270 ;; This function uses a non-reentrant model
 14271 ;;
 14272                           
 14273                           	psect	text58
 14274  006268                     __ptext58:
 14275                           	callstack 0
 14276  006268                     _UART1_SetRxInterruptHandler:
 14277                           	callstack 20
 14278  006268                     
 14279                           ;mcc_generated_files/uart1.c: 330:     UART1_RxInterruptHandler = InterruptHandler;
 14280  006268  C014  F1A2         	movff	UART1_SetRxInterruptHandler@InterruptHandler,_UART1_RxInterruptHandler
 14281  00626C  C015  F1A3         	movff	UART1_SetRxInterruptHandler@InterruptHandler+1,_UART1_RxInterruptHandler+1
 14282  006270  0012               	return		;funcret
 14283  006272                     __end_of_UART1_SetRxInterruptHandler:
 14284                           	callstack 0
 14285                           
 14286 ;; *************** function _UART1_SetOverrunErrorHandler *****************
 14287 ;; Defined at:
 14288 ;;		line 319 in file "mcc_generated_files/uart1.c"
 14289 ;; Parameters:    Size  Location     Type
 14290 ;;  interruptHan    2   19[COMRAM] PTR FTN()void 
 14291 ;;		 -> UART1_DefaultOverrunErrorHandler(1), 
 14292 ;; Auto vars:     Size  Location     Type
 14293 ;;		None
 14294 ;; Return value:  Size  Location     Type
 14295 ;;                  1    wreg      void 
 14296 ;; Registers used:
 14297 ;;		wreg, status,2, status,0
 14298 ;; Tracked objects:
 14299 ;;		On entry : 0/0
 14300 ;;		On exit  : 0/0
 14301 ;;		Unchanged: 0/0
 14302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14303 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14306 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14307 ;;Total ram usage:        2 bytes
 14308 ;; Hardware stack levels used: 1
 14309 ;; Hardware stack levels required when called: 8
 14310 ;; This function calls:
 14311 ;;		Nothing
 14312 ;; This function is called by:
 14313 ;;		_UART1_Initialize
 14314 ;; This function uses a non-reentrant model
 14315 ;;
 14316                           
 14317                           	psect	text59
 14318  006272                     __ptext59:
 14319                           	callstack 0
 14320  006272                     _UART1_SetOverrunErrorHandler:
 14321                           	callstack 20
 14322  006272                     
 14323                           ;mcc_generated_files/uart1.c: 320:     UART1_OverrunErrorHandler = interruptHandler;
 14324  006272  C014  F19C         	movff	UART1_SetOverrunErrorHandler@interruptHandler,_UART1_OverrunErrorHandler
 14325  006276  C015  F19D         	movff	UART1_SetOverrunErrorHandler@interruptHandler+1,_UART1_OverrunErrorHandler+1
 14326  00627A  0012               	return		;funcret
 14327  00627C                     __end_of_UART1_SetOverrunErrorHandler:
 14328                           	callstack 0
 14329                           
 14330 ;; *************** function _UART1_SetFramingErrorHandler *****************
 14331 ;; Defined at:
 14332 ;;		line 315 in file "mcc_generated_files/uart1.c"
 14333 ;; Parameters:    Size  Location     Type
 14334 ;;  interruptHan    2   19[COMRAM] PTR FTN()void 
 14335 ;;		 -> UART1_DefaultFramingErrorHandler(1), 
 14336 ;; Auto vars:     Size  Location     Type
 14337 ;;		None
 14338 ;; Return value:  Size  Location     Type
 14339 ;;                  1    wreg      void 
 14340 ;; Registers used:
 14341 ;;		wreg, status,2, status,0
 14342 ;; Tracked objects:
 14343 ;;		On entry : 0/0
 14344 ;;		On exit  : 0/0
 14345 ;;		Unchanged: 0/0
 14346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14347 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14350 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14351 ;;Total ram usage:        2 bytes
 14352 ;; Hardware stack levels used: 1
 14353 ;; Hardware stack levels required when called: 8
 14354 ;; This function calls:
 14355 ;;		Nothing
 14356 ;; This function is called by:
 14357 ;;		_UART1_Initialize
 14358 ;; This function uses a non-reentrant model
 14359 ;;
 14360                           
 14361                           	psect	text60
 14362  00627C                     __ptext60:
 14363                           	callstack 0
 14364  00627C                     _UART1_SetFramingErrorHandler:
 14365                           	callstack 20
 14366  00627C                     
 14367                           ;mcc_generated_files/uart1.c: 316:     UART1_FramingErrorHandler = interruptHandler;
 14368  00627C  C014  F19E         	movff	UART1_SetFramingErrorHandler@interruptHandler,_UART1_FramingErrorHandler
 14369  006280  C015  F19F         	movff	UART1_SetFramingErrorHandler@interruptHandler+1,_UART1_FramingErrorHandler+1
 14370  006284  0012               	return		;funcret
 14371  006286                     __end_of_UART1_SetFramingErrorHandler:
 14372                           	callstack 0
 14373                           
 14374 ;; *************** function _UART1_SetErrorHandler *****************
 14375 ;; Defined at:
 14376 ;;		line 323 in file "mcc_generated_files/uart1.c"
 14377 ;; Parameters:    Size  Location     Type
 14378 ;;  interruptHan    2   19[COMRAM] PTR FTN()void 
 14379 ;;		 -> UART1_DefaultErrorHandler(1), 
 14380 ;; Auto vars:     Size  Location     Type
 14381 ;;		None
 14382 ;; Return value:  Size  Location     Type
 14383 ;;                  1    wreg      void 
 14384 ;; Registers used:
 14385 ;;		wreg, status,2, status,0
 14386 ;; Tracked objects:
 14387 ;;		On entry : 0/0
 14388 ;;		On exit  : 0/0
 14389 ;;		Unchanged: 0/0
 14390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14391 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14394 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14395 ;;Total ram usage:        2 bytes
 14396 ;; Hardware stack levels used: 1
 14397 ;; Hardware stack levels required when called: 8
 14398 ;; This function calls:
 14399 ;;		Nothing
 14400 ;; This function is called by:
 14401 ;;		_UART1_Initialize
 14402 ;; This function uses a non-reentrant model
 14403 ;;
 14404                           
 14405                           	psect	text61
 14406  006286                     __ptext61:
 14407                           	callstack 0
 14408  006286                     _UART1_SetErrorHandler:
 14409                           	callstack 20
 14410  006286                     
 14411                           ;mcc_generated_files/uart1.c: 324:     UART1_ErrorHandler = interruptHandler;
 14412  006286  C014  F19A         	movff	UART1_SetErrorHandler@interruptHandler,_UART1_ErrorHandler
 14413  00628A  C015  F19B         	movff	UART1_SetErrorHandler@interruptHandler+1,_UART1_ErrorHandler+1
 14414  00628E  0012               	return		;funcret
 14415  006290                     __end_of_UART1_SetErrorHandler:
 14416                           	callstack 0
 14417                           
 14418 ;; *************** function _TMR5_Initialize *****************
 14419 ;; Defined at:
 14420 ;;		line 67 in file "mcc_generated_files/tmr5.c"
 14421 ;; Parameters:    Size  Location     Type
 14422 ;;		None
 14423 ;; Auto vars:     Size  Location     Type
 14424 ;;		None
 14425 ;; Return value:  Size  Location     Type
 14426 ;;                  1    wreg      void 
 14427 ;; Registers used:
 14428 ;;		wreg, status,2, status,0, cstack
 14429 ;; Tracked objects:
 14430 ;;		On entry : 0/0
 14431 ;;		On exit  : 0/0
 14432 ;;		Unchanged: 0/0
 14433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14436 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14437 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14438 ;;Total ram usage:        2 bytes
 14439 ;; Hardware stack levels used: 1
 14440 ;; Hardware stack levels required when called: 9
 14441 ;; This function calls:
 14442 ;;		_TMR5_SetGateInterruptHandler
 14443 ;; This function is called by:
 14444 ;;		_SYSTEM_Initialize
 14445 ;; This function uses a non-reentrant model
 14446 ;;
 14447                           
 14448                           	psect	text62
 14449  0059E6                     __ptext62:
 14450                           	callstack 0
 14451  0059E6                     _TMR5_Initialize:
 14452                           	callstack 20
 14453  0059E6                     
 14454                           ;mcc_generated_files/tmr5.c: 72:     T5GCON = 0xC0;
 14455  0059E6  0EC0               	movlw	192
 14456  0059E8  6E9B               	movwf	155,c	;volatile
 14457                           
 14458                           ;mcc_generated_files/tmr5.c: 75:     T5GATE = 0x00;
 14459  0059EA  0E00               	movlw	0
 14460  0059EC  6E9C               	movwf	156,c	;volatile
 14461                           
 14462                           ;mcc_generated_files/tmr5.c: 78:     T5CLK = 0x05;
 14463  0059EE  0E05               	movlw	5
 14464  0059F0  6E9D               	movwf	157,c	;volatile
 14465                           
 14466                           ;mcc_generated_files/tmr5.c: 81:     TMR5H = 0x00;
 14467  0059F2  0E00               	movlw	0
 14468  0059F4  6E99               	movwf	153,c	;volatile
 14469                           
 14470                           ;mcc_generated_files/tmr5.c: 84:     TMR5L = 0x00;
 14471  0059F6  0E00               	movlw	0
 14472  0059F8  6E98               	movwf	152,c	;volatile
 14473  0059FA                     
 14474                           ;mcc_generated_files/tmr5.c: 87:     PIR8bits.TMR5IF = 0;
 14475  0059FA  0139               	movlb	57	; () banked
 14476  0059FC  9DA8               	bcf	168,6,b	;volatile
 14477  0059FE                     
 14478                           ; BSR set to: 57
 14479                           ;mcc_generated_files/tmr5.c: 90:     timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
 14480  0059FE  5098               	movf	152,w,c	;volatile
 14481  005A00  006F FE64  F016    	movff	16281,??_TMR5_Initialize	;volatile
 14482  005A06  6A17               	clrf	(??_TMR5_Initialize+1)^0,c
 14483  005A08  C016  F017         	movff	??_TMR5_Initialize,??_TMR5_Initialize+1
 14484  005A0C  6A16               	clrf	??_TMR5_Initialize^0,c
 14485  005A0E  1016               	iorwf	??_TMR5_Initialize^0,w,c
 14486  005A10  0101               	movlb	1	; () banked
 14487  005A12  6F94               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 14488  005A14  5017               	movf	(??_TMR5_Initialize+1)^0,w,c
 14489  005A16  6F95               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 14490  005A18                     
 14491                           ; BSR set to: 1
 14492                           ;mcc_generated_files/tmr5.c: 93:     PIR8bits.TMR5GIF = 0;
 14493  005A18  0139               	movlb	57	; () banked
 14494  005A1A  9FA8               	bcf	168,7,b	;volatile
 14495  005A1C                     
 14496                           ; BSR set to: 57
 14497                           ;mcc_generated_files/tmr5.c: 96:     PIE8bits.TMR5GIE = 1;
 14498  005A1C  8F98               	bsf	152,7,b	;volatile
 14499  005A1E                     
 14500                           ; BSR set to: 57
 14501                           ;mcc_generated_files/tmr5.c: 99:     TMR5_SetGateInterruptHandler(TMR5_DefaultGateInterr
      +                          uptHandler);
 14502  005A1E  0E84               	movlw	low _TMR5_DefaultGateInterruptHandler
 14503  005A20  6E14               	movwf	TMR5_SetGateInterruptHandler@InterruptHandler^0,c
 14504  005A22  0E61               	movlw	high _TMR5_DefaultGateInterruptHandler
 14505  005A24  6E15               	movwf	(TMR5_SetGateInterruptHandler@InterruptHandler+1)^0,c
 14506  005A26  EC48  F031         	call	_TMR5_SetGateInterruptHandler	;wreg free
 14507  005A2A                     
 14508                           ;mcc_generated_files/tmr5.c: 102:     T5CON = 0x03;
 14509  005A2A  0E03               	movlw	3
 14510  005A2C  6E9A               	movwf	154,c	;volatile
 14511  005A2E  0012               	return		;funcret
 14512  005A30                     __end_of_TMR5_Initialize:
 14513                           	callstack 0
 14514                           
 14515 ;; *************** function _TMR5_SetGateInterruptHandler *****************
 14516 ;; Defined at:
 14517 ;;		line 186 in file "mcc_generated_files/tmr5.c"
 14518 ;; Parameters:    Size  Location     Type
 14519 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
 14520 ;;		 -> TMR5_DefaultGateInterruptHandler(1), 
 14521 ;; Auto vars:     Size  Location     Type
 14522 ;;		None
 14523 ;; Return value:  Size  Location     Type
 14524 ;;                  1    wreg      void 
 14525 ;; Registers used:
 14526 ;;		wreg, status,2, status,0
 14527 ;; Tracked objects:
 14528 ;;		On entry : 0/0
 14529 ;;		On exit  : 0/0
 14530 ;;		Unchanged: 0/0
 14531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14532 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14535 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14536 ;;Total ram usage:        2 bytes
 14537 ;; Hardware stack levels used: 1
 14538 ;; Hardware stack levels required when called: 8
 14539 ;; This function calls:
 14540 ;;		Nothing
 14541 ;; This function is called by:
 14542 ;;		_TMR5_Initialize
 14543 ;; This function uses a non-reentrant model
 14544 ;;
 14545                           
 14546                           	psect	text63
 14547  006290                     __ptext63:
 14548                           	callstack 0
 14549  006290                     _TMR5_SetGateInterruptHandler:
 14550                           	callstack 20
 14551  006290                     
 14552                           ;mcc_generated_files/tmr5.c: 187:     TMR5_GateInterruptHandler = InterruptHandler;
 14553  006290  C014  F192         	movff	TMR5_SetGateInterruptHandler@InterruptHandler,_TMR5_GateInterruptHandler
 14554  006294  C015  F193         	movff	TMR5_SetGateInterruptHandler@InterruptHandler+1,_TMR5_GateInterruptHandler+1
 14555  006298  0012               	return		;funcret
 14556  00629A                     __end_of_TMR5_SetGateInterruptHandler:
 14557                           	callstack 0
 14558                           
 14559 ;; *************** function _TMR4_Initialize *****************
 14560 ;; Defined at:
 14561 ;;		line 65 in file "mcc_generated_files/tmr4.c"
 14562 ;; Parameters:    Size  Location     Type
 14563 ;;		None
 14564 ;; Auto vars:     Size  Location     Type
 14565 ;;		None
 14566 ;; Return value:  Size  Location     Type
 14567 ;;                  1    wreg      void 
 14568 ;; Registers used:
 14569 ;;		wreg, status,2, status,0, cstack
 14570 ;; Tracked objects:
 14571 ;;		On entry : 0/0
 14572 ;;		On exit  : 0/0
 14573 ;;		Unchanged: 0/0
 14574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14578 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14579 ;;Total ram usage:        0 bytes
 14580 ;; Hardware stack levels used: 1
 14581 ;; Hardware stack levels required when called: 9
 14582 ;; This function calls:
 14583 ;;		_TMR4_SetInterruptHandler
 14584 ;; This function is called by:
 14585 ;;		_SYSTEM_Initialize
 14586 ;; This function uses a non-reentrant model
 14587 ;;
 14588                           
 14589                           	psect	text64
 14590  00601C                     __ptext64:
 14591                           	callstack 0
 14592  00601C                     _TMR4_Initialize:
 14593                           	callstack 20
 14594  00601C                     
 14595                           ;mcc_generated_files/tmr4.c: 70:     T4CLKCON = 0x01;
 14596  00601C  0E01               	movlw	1
 14597  00601E  6EA2               	movwf	162,c	;volatile
 14598                           
 14599                           ;mcc_generated_files/tmr4.c: 73:     T4HLT = 0x00;
 14600  006020  0E00               	movlw	0
 14601  006022  6EA1               	movwf	161,c	;volatile
 14602                           
 14603                           ;mcc_generated_files/tmr4.c: 76:     T4RST = 0x00;
 14604  006024  0E00               	movlw	0
 14605  006026  6EA3               	movwf	163,c	;volatile
 14606                           
 14607                           ;mcc_generated_files/tmr4.c: 79:     T4PR = 0xF9;
 14608  006028  0EF9               	movlw	249
 14609  00602A  6E9F               	movwf	159,c	;volatile
 14610                           
 14611                           ;mcc_generated_files/tmr4.c: 82:     T4TMR = 0x00;
 14612  00602C  0E00               	movlw	0
 14613  00602E  6E9E               	movwf	158,c	;volatile
 14614  006030                     
 14615                           ;mcc_generated_files/tmr4.c: 85:     PIR7bits.TMR4IF = 0;
 14616  006030  0139               	movlb	57	; () banked
 14617  006032  91A7               	bcf	167,0,b	;volatile
 14618  006034                     
 14619                           ; BSR set to: 57
 14620                           ;mcc_generated_files/tmr4.c: 88:     PIE7bits.TMR4IE = 1;
 14621  006034  8197               	bsf	151,0,b	;volatile
 14622  006036                     
 14623                           ; BSR set to: 57
 14624                           ;mcc_generated_files/tmr4.c: 91:     TMR4_SetInterruptHandler(TMR4_DefaultInterruptHandl
      +                          er);
 14625  006036  0ECC               	movlw	low _TMR4_DefaultInterruptHandler
 14626  006038  6E14               	movwf	TMR4_SetInterruptHandler@InterruptHandler^0,c
 14627  00603A  0E62               	movlw	high _TMR4_DefaultInterruptHandler
 14628  00603C  6E15               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)^0,c
 14629  00603E  EC4D  F031         	call	_TMR4_SetInterruptHandler	;wreg free
 14630  006042                     
 14631                           ;mcc_generated_files/tmr4.c: 94:     T4CON = 0xE0;
 14632  006042  0EE0               	movlw	224
 14633  006044  6EA0               	movwf	160,c	;volatile
 14634  006046  0012               	return		;funcret
 14635  006048                     __end_of_TMR4_Initialize:
 14636                           	callstack 0
 14637                           
 14638 ;; *************** function _TMR4_SetInterruptHandler *****************
 14639 ;; Defined at:
 14640 ;;		line 194 in file "mcc_generated_files/tmr4.c"
 14641 ;; Parameters:    Size  Location     Type
 14642 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
 14643 ;;		 -> TMR4_10msISR(1), TMR4_DefaultInterruptHandler(1), 
 14644 ;; Auto vars:     Size  Location     Type
 14645 ;;		None
 14646 ;; Return value:  Size  Location     Type
 14647 ;;                  1    wreg      void 
 14648 ;; Registers used:
 14649 ;;		wreg, status,2, status,0
 14650 ;; Tracked objects:
 14651 ;;		On entry : 0/0
 14652 ;;		On exit  : 0/0
 14653 ;;		Unchanged: 0/0
 14654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14655 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14658 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14659 ;;Total ram usage:        2 bytes
 14660 ;; Hardware stack levels used: 1
 14661 ;; Hardware stack levels required when called: 8
 14662 ;; This function calls:
 14663 ;;		Nothing
 14664 ;; This function is called by:
 14665 ;;		_TMR4_Initialize
 14666 ;;		_main
 14667 ;; This function uses a non-reentrant model
 14668 ;;
 14669                           
 14670                           	psect	text65
 14671  00629A                     __ptext65:
 14672                           	callstack 0
 14673  00629A                     _TMR4_SetInterruptHandler:
 14674                           	callstack 22
 14675  00629A                     
 14676                           ;mcc_generated_files/tmr4.c: 195:     TMR4_InterruptHandler = InterruptHandler;
 14677  00629A  C014  F18E         	movff	TMR4_SetInterruptHandler@InterruptHandler,_TMR4_InterruptHandler
 14678  00629E  C015  F18F         	movff	TMR4_SetInterruptHandler@InterruptHandler+1,_TMR4_InterruptHandler+1
 14679  0062A2  0012               	return		;funcret
 14680  0062A4                     __end_of_TMR4_SetInterruptHandler:
 14681                           	callstack 0
 14682                           
 14683 ;; *************** function _TMR3_Initialize *****************
 14684 ;; Defined at:
 14685 ;;		line 63 in file "mcc_generated_files/tmr3.c"
 14686 ;; Parameters:    Size  Location     Type
 14687 ;;		None
 14688 ;; Auto vars:     Size  Location     Type
 14689 ;;		None
 14690 ;; Return value:  Size  Location     Type
 14691 ;;                  1    wreg      void 
 14692 ;; Registers used:
 14693 ;;		wreg, status,2, status,0
 14694 ;; Tracked objects:
 14695 ;;		On entry : 0/0
 14696 ;;		On exit  : 0/0
 14697 ;;		Unchanged: 0/0
 14698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14701 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14702 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14703 ;;Total ram usage:        2 bytes
 14704 ;; Hardware stack levels used: 1
 14705 ;; Hardware stack levels required when called: 8
 14706 ;; This function calls:
 14707 ;;		Nothing
 14708 ;; This function is called by:
 14709 ;;		_SYSTEM_Initialize
 14710 ;; This function uses a non-reentrant model
 14711 ;;
 14712                           
 14713                           	psect	text66
 14714  005CEA                     __ptext66:
 14715                           	callstack 0
 14716  005CEA                     _TMR3_Initialize:
 14717                           	callstack 21
 14718  005CEA                     
 14719                           ;mcc_generated_files/tmr3.c: 68:     T3GCON = 0x00;
 14720  005CEA  0E00               	movlw	0
 14721  005CEC  6EA7               	movwf	167,c	;volatile
 14722                           
 14723                           ;mcc_generated_files/tmr3.c: 71:     T3GATE = 0x00;
 14724  005CEE  0E00               	movlw	0
 14725  005CF0  6EA8               	movwf	168,c	;volatile
 14726                           
 14727                           ;mcc_generated_files/tmr3.c: 74:     T3CLK = 0x05;
 14728  005CF2  0E05               	movlw	5
 14729  005CF4  6EA9               	movwf	169,c	;volatile
 14730                           
 14731                           ;mcc_generated_files/tmr3.c: 77:     TMR3H = 0x00;
 14732  005CF6  0E00               	movlw	0
 14733  005CF8  6EA5               	movwf	165,c	;volatile
 14734                           
 14735                           ;mcc_generated_files/tmr3.c: 80:     TMR3L = 0x00;
 14736  005CFA  0E00               	movlw	0
 14737  005CFC  6EA4               	movwf	164,c	;volatile
 14738  005CFE                     
 14739                           ;mcc_generated_files/tmr3.c: 83:     PIR6bits.TMR3IF = 0;
 14740  005CFE  0139               	movlb	57	; () banked
 14741  005D00  9DA6               	bcf	166,6,b	;volatile
 14742  005D02                     
 14743                           ; BSR set to: 57
 14744                           ;mcc_generated_files/tmr3.c: 86:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 14745  005D02  50A4               	movf	164,w,c	;volatile
 14746  005D04  006F FE94  F014    	movff	16293,??_TMR3_Initialize	;volatile
 14747  005D0A  6A15               	clrf	(??_TMR3_Initialize+1)^0,c
 14748  005D0C  C014  F015         	movff	??_TMR3_Initialize,??_TMR3_Initialize+1
 14749  005D10  6A14               	clrf	??_TMR3_Initialize^0,c
 14750  005D12  1014               	iorwf	??_TMR3_Initialize^0,w,c
 14751  005D14  0101               	movlb	1	; () banked
 14752  005D16  6F90               	movwf	_timer3ReloadVal& (0+255),b	;volatile
 14753  005D18  5015               	movf	(??_TMR3_Initialize+1)^0,w,c
 14754  005D1A  6F91               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
 14755  005D1C                     
 14756                           ; BSR set to: 1
 14757                           ;mcc_generated_files/tmr3.c: 89:     T3CON = 0x01;
 14758  005D1C  0E01               	movlw	1
 14759  005D1E  6EA6               	movwf	166,c	;volatile
 14760  005D20                     
 14761                           ; BSR set to: 1
 14762  005D20  0012               	return		;funcret
 14763  005D22                     __end_of_TMR3_Initialize:
 14764                           	callstack 0
 14765                           
 14766 ;; *************** function _TMR2_Initialize *****************
 14767 ;; Defined at:
 14768 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 14769 ;; Parameters:    Size  Location     Type
 14770 ;;		None
 14771 ;; Auto vars:     Size  Location     Type
 14772 ;;		None
 14773 ;; Return value:  Size  Location     Type
 14774 ;;                  1    wreg      void 
 14775 ;; Registers used:
 14776 ;;		wreg, status,2
 14777 ;; Tracked objects:
 14778 ;;		On entry : 0/0
 14779 ;;		On exit  : 0/0
 14780 ;;		Unchanged: 0/0
 14781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14785 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14786 ;;Total ram usage:        0 bytes
 14787 ;; Hardware stack levels used: 1
 14788 ;; Hardware stack levels required when called: 8
 14789 ;; This function calls:
 14790 ;;		Nothing
 14791 ;; This function is called by:
 14792 ;;		_SYSTEM_Initialize
 14793 ;; This function uses a non-reentrant model
 14794 ;;
 14795                           
 14796                           	psect	text67
 14797  0061A2                     __ptext67:
 14798                           	callstack 0
 14799  0061A2                     _TMR2_Initialize:
 14800                           	callstack 21
 14801  0061A2                     
 14802                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x05;
 14803  0061A2  0E05               	movlw	5
 14804  0061A4  6EAE               	movwf	174,c	;volatile
 14805                           
 14806                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 14807  0061A6  0E00               	movlw	0
 14808  0061A8  6EAD               	movwf	173,c	;volatile
 14809                           
 14810                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 14811  0061AA  0E00               	movlw	0
 14812  0061AC  6EAF               	movwf	175,c	;volatile
 14813  0061AE                     
 14814                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0xFF;
 14815  0061AE  68AB               	setf	171,c	;volatile
 14816                           
 14817                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 14818  0061B0  0E00               	movlw	0
 14819  0061B2  6EAA               	movwf	170,c	;volatile
 14820  0061B4                     
 14821                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 14822  0061B4  0139               	movlb	57	; () banked
 14823  0061B6  95A4               	bcf	164,2,b	;volatile
 14824                           
 14825                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xB0;
 14826  0061B8  0EB0               	movlw	176
 14827  0061BA  6EAC               	movwf	172,c	;volatile
 14828  0061BC                     
 14829                           ; BSR set to: 57
 14830  0061BC  0012               	return		;funcret
 14831  0061BE                     __end_of_TMR2_Initialize:
 14832                           	callstack 0
 14833                           
 14834 ;; *************** function _SMT1_Initialize *****************
 14835 ;; Defined at:
 14836 ;;		line 60 in file "mcc_generated_files/smt1.c"
 14837 ;; Parameters:    Size  Location     Type
 14838 ;;		None
 14839 ;; Auto vars:     Size  Location     Type
 14840 ;;		None
 14841 ;; Return value:  Size  Location     Type
 14842 ;;                  1    wreg      void 
 14843 ;; Registers used:
 14844 ;;		wreg, status,2
 14845 ;; Tracked objects:
 14846 ;;		On entry : 0/0
 14847 ;;		On exit  : 0/0
 14848 ;;		Unchanged: 0/0
 14849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14853 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14854 ;;Total ram usage:        0 bytes
 14855 ;; Hardware stack levels used: 1
 14856 ;; Hardware stack levels required when called: 8
 14857 ;; This function calls:
 14858 ;;		Nothing
 14859 ;; This function is called by:
 14860 ;;		_SYSTEM_Initialize
 14861 ;; This function uses a non-reentrant model
 14862 ;;
 14863                           
 14864                           	psect	text68
 14865  005F62                     __ptext68:
 14866                           	callstack 0
 14867  005F62                     _SMT1_Initialize:
 14868                           	callstack 21
 14869  005F62                     
 14870                           ;mcc_generated_files/smt1.c: 63:     SMT1CON0 = 0x80;
 14871  005F62  0E80               	movlw	128
 14872  005F64  013F               	movlb	63	; () banked
 14873  005F66  6F1E               	movwf	30,b	;volatile
 14874                           
 14875                           ;mcc_generated_files/smt1.c: 66:     SMT1CON1 = 0x42;
 14876  005F68  0E42               	movlw	66
 14877  005F6A  6F1F               	movwf	31,b	;volatile
 14878                           
 14879                           ;mcc_generated_files/smt1.c: 69:     SMT1STAT = 0x00;
 14880  005F6C  0E00               	movlw	0
 14881  005F6E  6F20               	movwf	32,b	;volatile
 14882                           
 14883                           ;mcc_generated_files/smt1.c: 72:     SMT1CLK = 0x04;
 14884  005F70  0E04               	movlw	4
 14885  005F72  6F21               	movwf	33,b	;volatile
 14886                           
 14887                           ;mcc_generated_files/smt1.c: 75:     SMT1WIN = 0x00;
 14888  005F74  0E00               	movlw	0
 14889  005F76  6F23               	movwf	35,b	;volatile
 14890                           
 14891                           ;mcc_generated_files/smt1.c: 78:     SMT1SIG = 0x00;
 14892  005F78  0E00               	movlw	0
 14893  005F7A  6F22               	movwf	34,b	;volatile
 14894                           
 14895                           ;mcc_generated_files/smt1.c: 81:     SMT1PRU = 0x01;
 14896  005F7C  0E01               	movlw	1
 14897  005F7E  6F1D               	movwf	29,b	;volatile
 14898  005F80                     
 14899                           ; BSR set to: 63
 14900                           ;mcc_generated_files/smt1.c: 84:     SMT1PRH = 0xFF;
 14901  005F80  691C               	setf	28,b	;volatile
 14902  005F82                     
 14903                           ; BSR set to: 63
 14904                           ;mcc_generated_files/smt1.c: 87:     SMT1PRL = 0xFF;
 14905  005F82  691B               	setf	27,b	;volatile
 14906  005F84                     
 14907                           ; BSR set to: 63
 14908                           ;mcc_generated_files/smt1.c: 90:     PIE1bits.SMT1IE = 1;
 14909  005F84  0139               	movlb	57	; () banked
 14910  005F86  8B91               	bsf	145,5,b	;volatile
 14911  005F88                     
 14912                           ; BSR set to: 57
 14913                           ;mcc_generated_files/smt1.c: 93:     PIE1bits.SMT1PWAIE = 1;
 14914  005F88  8F91               	bsf	145,7,b	;volatile
 14915  005F8A                     
 14916                           ; BSR set to: 57
 14917                           ;mcc_generated_files/smt1.c: 96:     PIE1bits.SMT1PRAIE = 1;
 14918  005F8A  8D91               	bsf	145,6,b	;volatile
 14919  005F8C                     
 14920                           ; BSR set to: 57
 14921                           ;mcc_generated_files/smt1.c: 99:     SMT1CON1bits.SMT1GO = 1;
 14922  005F8C  013F               	movlb	63	; () banked
 14923  005F8E  8F1F               	bsf	31,7,b	;volatile
 14924  005F90                     
 14925                           ; BSR set to: 63
 14926  005F90  0012               	return		;funcret
 14927  005F92                     __end_of_SMT1_Initialize:
 14928                           	callstack 0
 14929                           
 14930 ;; *************** function _PWM8_Initialize *****************
 14931 ;; Defined at:
 14932 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 14933 ;; Parameters:    Size  Location     Type
 14934 ;;		None
 14935 ;; Auto vars:     Size  Location     Type
 14936 ;;		None
 14937 ;; Return value:  Size  Location     Type
 14938 ;;                  1    wreg      void 
 14939 ;; Registers used:
 14940 ;;		wreg, status,2
 14941 ;; Tracked objects:
 14942 ;;		On entry : 0/0
 14943 ;;		On exit  : 0/0
 14944 ;;		Unchanged: 0/0
 14945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14949 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14950 ;;Total ram usage:        0 bytes
 14951 ;; Hardware stack levels used: 1
 14952 ;; Hardware stack levels required when called: 8
 14953 ;; This function calls:
 14954 ;;		Nothing
 14955 ;; This function is called by:
 14956 ;;		_SYSTEM_Initialize
 14957 ;; This function uses a non-reentrant model
 14958 ;;
 14959                           
 14960                           	psect	text69
 14961  0061BE                     __ptext69:
 14962                           	callstack 0
 14963  0061BE                     _PWM8_Initialize:
 14964                           	callstack 21
 14965  0061BE                     
 14966                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 14967  0061BE  0E80               	movlw	128
 14968  0061C0  6E62               	movwf	98,c	;volatile
 14969                           
 14970                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 14971  0061C2  0E00               	movlw	0
 14972  0061C4  6E61               	movwf	97,c	;volatile
 14973                           
 14974                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x00;
 14975  0061C6  0E00               	movlw	0
 14976  0061C8  6E60               	movwf	96,c	;volatile
 14977                           
 14978                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 2;
 14979  0061CA  013F               	movlb	63	; () banked
 14980  0061CC  515F               	movf	95,w,b	;volatile
 14981  0061CE  0B3F               	andlw	-193
 14982  0061D0  0980               	iorlw	128
 14983  0061D2  6F5F               	movwf	95,b	;volatile
 14984  0061D4                     
 14985                           ; BSR set to: 63
 14986  0061D4  0012               	return		;funcret
 14987  0061D6                     __end_of_PWM8_Initialize:
 14988                           	callstack 0
 14989                           
 14990 ;; *************** function _PWM7_Initialize *****************
 14991 ;; Defined at:
 14992 ;;		line 58 in file "mcc_generated_files/pwm7.c"
 14993 ;; Parameters:    Size  Location     Type
 14994 ;;		None
 14995 ;; Auto vars:     Size  Location     Type
 14996 ;;		None
 14997 ;; Return value:  Size  Location     Type
 14998 ;;                  1    wreg      void 
 14999 ;; Registers used:
 15000 ;;		wreg, status,2
 15001 ;; Tracked objects:
 15002 ;;		On entry : 0/0
 15003 ;;		On exit  : 0/0
 15004 ;;		Unchanged: 0/0
 15005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15009 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15010 ;;Total ram usage:        0 bytes
 15011 ;; Hardware stack levels used: 1
 15012 ;; Hardware stack levels required when called: 8
 15013 ;; This function calls:
 15014 ;;		Nothing
 15015 ;; This function is called by:
 15016 ;;		_SYSTEM_Initialize
 15017 ;; This function uses a non-reentrant model
 15018 ;;
 15019                           
 15020                           	psect	text70
 15021  0061D6                     __ptext70:
 15022                           	callstack 0
 15023  0061D6                     _PWM7_Initialize:
 15024                           	callstack 21
 15025  0061D6                     
 15026                           ;mcc_generated_files/pwm7.c: 62:     PWM7CON = 0x80;
 15027  0061D6  0E80               	movlw	128
 15028  0061D8  6E66               	movwf	102,c	;volatile
 15029                           
 15030                           ;mcc_generated_files/pwm7.c: 65:     PWM7DCH = 0x00;
 15031  0061DA  0E00               	movlw	0
 15032  0061DC  6E65               	movwf	101,c	;volatile
 15033                           
 15034                           ;mcc_generated_files/pwm7.c: 68:     PWM7DCL = 0x00;
 15035  0061DE  0E00               	movlw	0
 15036  0061E0  6E64               	movwf	100,c	;volatile
 15037                           
 15038                           ;mcc_generated_files/pwm7.c: 71:     CCPTMRS1bits.P7TSEL = 2;
 15039  0061E2  013F               	movlb	63	; () banked
 15040  0061E4  515F               	movf	95,w,b	;volatile
 15041  0061E6  0BCF               	andlw	-49
 15042  0061E8  0920               	iorlw	32
 15043  0061EA  6F5F               	movwf	95,b	;volatile
 15044  0061EC                     
 15045                           ; BSR set to: 63
 15046  0061EC  0012               	return		;funcret
 15047  0061EE                     __end_of_PWM7_Initialize:
 15048                           	callstack 0
 15049                           
 15050 ;; *************** function _PWM6_Initialize *****************
 15051 ;; Defined at:
 15052 ;;		line 58 in file "mcc_generated_files/pwm6.c"
 15053 ;; Parameters:    Size  Location     Type
 15054 ;;		None
 15055 ;; Auto vars:     Size  Location     Type
 15056 ;;		None
 15057 ;; Return value:  Size  Location     Type
 15058 ;;                  1    wreg      void 
 15059 ;; Registers used:
 15060 ;;		wreg, status,2
 15061 ;; Tracked objects:
 15062 ;;		On entry : 0/0
 15063 ;;		On exit  : 0/0
 15064 ;;		Unchanged: 0/0
 15065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15069 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15070 ;;Total ram usage:        0 bytes
 15071 ;; Hardware stack levels used: 1
 15072 ;; Hardware stack levels required when called: 8
 15073 ;; This function calls:
 15074 ;;		Nothing
 15075 ;; This function is called by:
 15076 ;;		_SYSTEM_Initialize
 15077 ;; This function uses a non-reentrant model
 15078 ;;
 15079                           
 15080                           	psect	text71
 15081  0061EE                     __ptext71:
 15082                           	callstack 0
 15083  0061EE                     _PWM6_Initialize:
 15084                           	callstack 21
 15085  0061EE                     
 15086                           ;mcc_generated_files/pwm6.c: 62:     PWM6CON = 0x80;
 15087  0061EE  0E80               	movlw	128
 15088  0061F0  6E6A               	movwf	106,c	;volatile
 15089                           
 15090                           ;mcc_generated_files/pwm6.c: 65:     PWM6DCH = 0x59;
 15091  0061F2  0E59               	movlw	89
 15092  0061F4  6E69               	movwf	105,c	;volatile
 15093                           
 15094                           ;mcc_generated_files/pwm6.c: 68:     PWM6DCL = 0x40;
 15095  0061F6  0E40               	movlw	64
 15096  0061F8  6E68               	movwf	104,c	;volatile
 15097                           
 15098                           ;mcc_generated_files/pwm6.c: 71:     CCPTMRS1bits.P6TSEL = 1;
 15099  0061FA  013F               	movlb	63	; () banked
 15100  0061FC  515F               	movf	95,w,b	;volatile
 15101  0061FE  0BF3               	andlw	-13
 15102  006200  0904               	iorlw	4
 15103  006202  6F5F               	movwf	95,b	;volatile
 15104  006204                     
 15105                           ; BSR set to: 63
 15106  006204  0012               	return		;funcret
 15107  006206                     __end_of_PWM6_Initialize:
 15108                           	callstack 0
 15109                           
 15110 ;; *************** function _PWM5_Initialize *****************
 15111 ;; Defined at:
 15112 ;;		line 58 in file "mcc_generated_files/pwm5.c"
 15113 ;; Parameters:    Size  Location     Type
 15114 ;;		None
 15115 ;; Auto vars:     Size  Location     Type
 15116 ;;		None
 15117 ;; Return value:  Size  Location     Type
 15118 ;;                  1    wreg      void 
 15119 ;; Registers used:
 15120 ;;		wreg, status,2
 15121 ;; Tracked objects:
 15122 ;;		On entry : 0/0
 15123 ;;		On exit  : 0/0
 15124 ;;		Unchanged: 0/0
 15125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15129 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15130 ;;Total ram usage:        0 bytes
 15131 ;; Hardware stack levels used: 1
 15132 ;; Hardware stack levels required when called: 8
 15133 ;; This function calls:
 15134 ;;		Nothing
 15135 ;; This function is called by:
 15136 ;;		_SYSTEM_Initialize
 15137 ;; This function uses a non-reentrant model
 15138 ;;
 15139                           
 15140                           	psect	text72
 15141  006206                     __ptext72:
 15142                           	callstack 0
 15143  006206                     _PWM5_Initialize:
 15144                           	callstack 21
 15145  006206                     
 15146                           ;mcc_generated_files/pwm5.c: 62:     PWM5CON = 0x80;
 15147  006206  0E80               	movlw	128
 15148  006208  6E6E               	movwf	110,c	;volatile
 15149                           
 15150                           ;mcc_generated_files/pwm5.c: 65:     PWM5DCH = 0x59;
 15151  00620A  0E59               	movlw	89
 15152  00620C  6E6D               	movwf	109,c	;volatile
 15153                           
 15154                           ;mcc_generated_files/pwm5.c: 68:     PWM5DCL = 0x40;
 15155  00620E  0E40               	movlw	64
 15156  006210  6E6C               	movwf	108,c	;volatile
 15157                           
 15158                           ;mcc_generated_files/pwm5.c: 71:     CCPTMRS1bits.P5TSEL = 1;
 15159  006212  013F               	movlb	63	; () banked
 15160  006214  515F               	movf	95,w,b	;volatile
 15161  006216  0BFC               	andlw	-4
 15162  006218  0901               	iorlw	1
 15163  00621A  6F5F               	movwf	95,b	;volatile
 15164  00621C                     
 15165                           ; BSR set to: 63
 15166  00621C  0012               	return		;funcret
 15167  00621E                     __end_of_PWM5_Initialize:
 15168                           	callstack 0
 15169                           
 15170 ;; *************** function _PMD_Initialize *****************
 15171 ;; Defined at:
 15172 ;;		line 86 in file "mcc_generated_files/mcc.c"
 15173 ;; Parameters:    Size  Location     Type
 15174 ;;		None
 15175 ;; Auto vars:     Size  Location     Type
 15176 ;;		None
 15177 ;; Return value:  Size  Location     Type
 15178 ;;                  1    wreg      void 
 15179 ;; Registers used:
 15180 ;;		wreg, status,2
 15181 ;; Tracked objects:
 15182 ;;		On entry : 0/0
 15183 ;;		On exit  : 0/0
 15184 ;;		Unchanged: 0/0
 15185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15189 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15190 ;;Total ram usage:        0 bytes
 15191 ;; Hardware stack levels used: 1
 15192 ;; Hardware stack levels required when called: 8
 15193 ;; This function calls:
 15194 ;;		Nothing
 15195 ;; This function is called by:
 15196 ;;		_SYSTEM_Initialize
 15197 ;; This function uses a non-reentrant model
 15198 ;;
 15199                           
 15200                           	psect	text73
 15201  00611C                     __ptext73:
 15202                           	callstack 0
 15203  00611C                     _PMD_Initialize:
 15204                           	callstack 21
 15205  00611C                     
 15206                           ;mcc_generated_files/mcc.c: 89:     PMD0 = 0x00;
 15207  00611C  0E00               	movlw	0
 15208  00611E  0139               	movlb	57	; () banked
 15209  006120  6FC0               	movwf	192,b	;volatile
 15210                           
 15211                           ;mcc_generated_files/mcc.c: 91:     PMD1 = 0x00;
 15212  006122  0E00               	movlw	0
 15213  006124  6FC1               	movwf	193,b	;volatile
 15214                           
 15215                           ;mcc_generated_files/mcc.c: 93:     PMD2 = 0x00;
 15216  006126  0E00               	movlw	0
 15217  006128  6FC2               	movwf	194,b	;volatile
 15218                           
 15219                           ;mcc_generated_files/mcc.c: 95:     PMD3 = 0x00;
 15220  00612A  0E00               	movlw	0
 15221  00612C  6FC3               	movwf	195,b	;volatile
 15222                           
 15223                           ;mcc_generated_files/mcc.c: 97:     PMD4 = 0x00;
 15224  00612E  0E00               	movlw	0
 15225  006130  6FC4               	movwf	196,b	;volatile
 15226                           
 15227                           ;mcc_generated_files/mcc.c: 99:     PMD5 = 0x00;
 15228  006132  0E00               	movlw	0
 15229  006134  6FC5               	movwf	197,b	;volatile
 15230                           
 15231                           ;mcc_generated_files/mcc.c: 101:     PMD6 = 0x00;
 15232  006136  0E00               	movlw	0
 15233  006138  6FC6               	movwf	198,b	;volatile
 15234                           
 15235                           ;mcc_generated_files/mcc.c: 103:     PMD7 = 0x00;
 15236  00613A  0E00               	movlw	0
 15237  00613C  6FC7               	movwf	199,b	;volatile
 15238  00613E                     
 15239                           ; BSR set to: 57
 15240  00613E  0012               	return		;funcret
 15241  006140                     __end_of_PMD_Initialize:
 15242                           	callstack 0
 15243                           
 15244 ;; *************** function _PIN_MANAGER_Initialize *****************
 15245 ;; Defined at:
 15246 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 15247 ;; Parameters:    Size  Location     Type
 15248 ;;		None
 15249 ;; Auto vars:     Size  Location     Type
 15250 ;;		None
 15251 ;; Return value:  Size  Location     Type
 15252 ;;                  1    wreg      void 
 15253 ;; Registers used:
 15254 ;;		wreg, status,2
 15255 ;; Tracked objects:
 15256 ;;		On entry : 0/0
 15257 ;;		On exit  : 0/0
 15258 ;;		Unchanged: 0/0
 15259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15263 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15264 ;;Total ram usage:        0 bytes
 15265 ;; Hardware stack levels used: 1
 15266 ;; Hardware stack levels required when called: 8
 15267 ;; This function calls:
 15268 ;;		Nothing
 15269 ;; This function is called by:
 15270 ;;		_SYSTEM_Initialize
 15271 ;; This function uses a non-reentrant model
 15272 ;;
 15273                           
 15274                           	psect	text74
 15275  004F2A                     __ptext74:
 15276                           	callstack 0
 15277  004F2A                     _PIN_MANAGER_Initialize:
 15278                           	callstack 21
 15279  004F2A                     
 15280                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
 15281  004F2A  0E00               	movlw	0
 15282  004F2C  6EBE               	movwf	190,c	;volatile
 15283                           
 15284                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
 15285  004F2E  0E00               	movlw	0
 15286  004F30  6EBD               	movwf	189,c	;volatile
 15287                           
 15288                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x24;
 15289  004F32  0E24               	movlw	36
 15290  004F34  6EBA               	movwf	186,c	;volatile
 15291                           
 15292                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
 15293  004F36  0E00               	movlw	0
 15294  004F38  6EBB               	movwf	187,c	;volatile
 15295                           
 15296                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
 15297  004F3A  0E00               	movlw	0
 15298  004F3C  6EBC               	movwf	188,c	;volatile
 15299                           
 15300                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
 15301  004F3E  0E07               	movlw	7
 15302  004F40  6EC6               	movwf	198,c	;volatile
 15303                           
 15304                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xC0;
 15305  004F42  0EC0               	movlw	192
 15306  004F44  6EC2               	movwf	194,c	;volatile
 15307                           
 15308                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xF7;
 15309  004F46  0EF7               	movlw	247
 15310  004F48  6EC3               	movwf	195,c	;volatile
 15311  004F4A                     
 15312                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xFF;
 15313  004F4A  68C4               	setf	196,c	;volatile
 15314  004F4C                     
 15315                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
 15316  004F4C  68C5               	setf	197,c	;volatile
 15317                           
 15318                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0x1F;
 15319  004F4E  0E1F               	movlw	31
 15320  004F50  013A               	movlb	58	; () banked
 15321  004F52  6F70               	movwf	112,b	;volatile
 15322  004F54                     
 15323                           ; BSR set to: 58
 15324                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0xFF;
 15325  004F54  6960               	setf	96,b	;volatile
 15326                           
 15327                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0xC0;
 15328  004F56  0EC0               	movlw	192
 15329  004F58  6F50               	movwf	80,b	;volatile
 15330                           
 15331                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
 15332  004F5A  0E07               	movlw	7
 15333  004F5C  6F80               	movwf	128,b	;volatile
 15334                           
 15335                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x7F;
 15336  004F5E  0E7F               	movlw	127
 15337  004F60  6F40               	movwf	64,b	;volatile
 15338                           
 15339                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
 15340  004F62  0E00               	movlw	0
 15341  004F64  6F71               	movwf	113,b	;volatile
 15342                           
 15343                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
 15344  004F66  0E00               	movlw	0
 15345  004F68  6F81               	movwf	129,b	;volatile
 15346                           
 15347                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
 15348  004F6A  0E00               	movlw	0
 15349  004F6C  6F51               	movwf	81,b	;volatile
 15350                           
 15351                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
 15352  004F6E  0E00               	movlw	0
 15353  004F70  6F41               	movwf	65,b	;volatile
 15354                           
 15355                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
 15356  004F72  0E00               	movlw	0
 15357  004F74  6F61               	movwf	97,b	;volatile
 15358                           
 15359                           ;mcc_generated_files/pin_manager.c: 96:     RB1I2C = 0x00;
 15360  004F76  0E00               	movlw	0
 15361  004F78  6F5A               	movwf	90,b	;volatile
 15362                           
 15363                           ;mcc_generated_files/pin_manager.c: 97:     RB2I2C = 0x00;
 15364  004F7A  0E00               	movlw	0
 15365  004F7C  6F5B               	movwf	91,b	;volatile
 15366                           
 15367                           ;mcc_generated_files/pin_manager.c: 98:     RC3I2C = 0x00;
 15368  004F7E  0E00               	movlw	0
 15369  004F80  6F6A               	movwf	106,b	;volatile
 15370                           
 15371                           ;mcc_generated_files/pin_manager.c: 99:     RC4I2C = 0x00;
 15372  004F82  0E00               	movlw	0
 15373  004F84  6F6B               	movwf	107,b	;volatile
 15374                           
 15375                           ;mcc_generated_files/pin_manager.c: 100:     RD0I2C = 0x00;
 15376  004F86  0E00               	movlw	0
 15377  004F88  6F7A               	movwf	122,b	;volatile
 15378                           
 15379                           ;mcc_generated_files/pin_manager.c: 101:     RD1I2C = 0x00;
 15380  004F8A  0E00               	movlw	0
 15381  004F8C  6F7B               	movwf	123,b	;volatile
 15382                           
 15383                           ;mcc_generated_files/pin_manager.c: 106:     ODCONE = 0x00;
 15384  004F8E  0E00               	movlw	0
 15385  004F90  6F82               	movwf	130,b	;volatile
 15386                           
 15387                           ;mcc_generated_files/pin_manager.c: 107:     ODCONA = 0x00;
 15388  004F92  0E00               	movlw	0
 15389  004F94  6F42               	movwf	66,b	;volatile
 15390                           
 15391                           ;mcc_generated_files/pin_manager.c: 108:     ODCONB = 0x00;
 15392  004F96  0E00               	movlw	0
 15393  004F98  6F52               	movwf	82,b	;volatile
 15394                           
 15395                           ;mcc_generated_files/pin_manager.c: 109:     ODCONC = 0x00;
 15396  004F9A  0E00               	movlw	0
 15397  004F9C  6F62               	movwf	98,b	;volatile
 15398                           
 15399                           ;mcc_generated_files/pin_manager.c: 110:     ODCOND = 0x00;
 15400  004F9E  0E00               	movlw	0
 15401  004FA0  6F72               	movwf	114,b	;volatile
 15402  004FA2                     
 15403                           ; BSR set to: 58
 15404                           ;mcc_generated_files/pin_manager.c: 115:     SLRCONA = 0xFF;
 15405  004FA2  6943               	setf	67,b	;volatile
 15406  004FA4                     
 15407                           ; BSR set to: 58
 15408                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONB = 0xFF;
 15409  004FA4  6953               	setf	83,b	;volatile
 15410  004FA6                     
 15411                           ; BSR set to: 58
 15412                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONC = 0xFF;
 15413  004FA6  6963               	setf	99,b	;volatile
 15414  004FA8                     
 15415                           ; BSR set to: 58
 15416                           ;mcc_generated_files/pin_manager.c: 118:     SLRCOND = 0xFF;
 15417  004FA8  6973               	setf	115,b	;volatile
 15418                           
 15419                           ;mcc_generated_files/pin_manager.c: 119:     SLRCONE = 0x07;
 15420  004FAA  0E07               	movlw	7
 15421  004FAC  6F83               	movwf	131,b	;volatile
 15422  004FAE                     
 15423                           ; BSR set to: 58
 15424                           ;mcc_generated_files/pin_manager.c: 124:     INLVLA = 0xFF;
 15425  004FAE  6944               	setf	68,b	;volatile
 15426  004FB0                     
 15427                           ; BSR set to: 58
 15428                           ;mcc_generated_files/pin_manager.c: 125:     INLVLB = 0xFF;
 15429  004FB0  6954               	setf	84,b	;volatile
 15430  004FB2                     
 15431                           ; BSR set to: 58
 15432                           ;mcc_generated_files/pin_manager.c: 126:     INLVLC = 0xFF;
 15433  004FB2  6964               	setf	100,b	;volatile
 15434  004FB4                     
 15435                           ; BSR set to: 58
 15436                           ;mcc_generated_files/pin_manager.c: 127:     INLVLD = 0xFF;
 15437  004FB4  6974               	setf	116,b	;volatile
 15438                           
 15439                           ;mcc_generated_files/pin_manager.c: 128:     INLVLE = 0x0F;
 15440  004FB6  0E0F               	movlw	15
 15441  004FB8  6F84               	movwf	132,b	;volatile
 15442                           
 15443                           ;mcc_generated_files/pin_manager.c: 137:     CCP3PPS = 0x1F;
 15444  004FBA  0E1F               	movlw	31
 15445  004FBC  6FCF               	movwf	207,b	;volatile
 15446                           
 15447                           ;mcc_generated_files/pin_manager.c: 138:     CLCIN3PPS = 0x09;
 15448  004FBE  0E09               	movlw	9
 15449  004FC0  6FDC               	movwf	220,b	;volatile
 15450                           
 15451                           ;mcc_generated_files/pin_manager.c: 139:     RA1PPS = 0x0E;
 15452  004FC2  0E0E               	movlw	14
 15453  004FC4  6F01               	movwf	1,b	;volatile
 15454                           
 15455                           ;mcc_generated_files/pin_manager.c: 140:     U1RXPPS = 0x0A;
 15456  004FC6  0E0A               	movlw	10
 15457  004FC8  6FE5               	movwf	229,b	;volatile
 15458                           
 15459                           ;mcc_generated_files/pin_manager.c: 141:     RA0PPS = 0x0D;
 15460  004FCA  0E0D               	movlw	13
 15461  004FCC  6F00               	movwf	0,b	;volatile
 15462                           
 15463                           ;mcc_generated_files/pin_manager.c: 142:     T5GPPS = 0x1D;
 15464  004FCE  0E1D               	movlw	29
 15465  004FD0  6FC9               	movwf	201,b	;volatile
 15466                           
 15467                           ;mcc_generated_files/pin_manager.c: 143:     RA4PPS = 0x10;
 15468  004FD2  0E10               	movlw	16
 15469  004FD4  6F04               	movwf	4,b	;volatile
 15470                           
 15471                           ;mcc_generated_files/pin_manager.c: 144:     CLCIN0PPS = 0x07;
 15472  004FD6  0E07               	movlw	7
 15473  004FD8  6FD9               	movwf	217,b	;volatile
 15474                           
 15475                           ;mcc_generated_files/pin_manager.c: 145:     SMT1WINPPS = 0x09;
 15476  004FDA  0E09               	movlw	9
 15477  004FDC  6FD1               	movwf	209,b	;volatile
 15478                           
 15479                           ;mcc_generated_files/pin_manager.c: 146:     RA3PPS = 0x0F;
 15480  004FDE  0E0F               	movlw	15
 15481  004FE0  6F03               	movwf	3,b	;volatile
 15482                           
 15483                           ;mcc_generated_files/pin_manager.c: 147:     RB3PPS = 0x13;
 15484  004FE2  0E13               	movlw	19
 15485  004FE4  6F0B               	movwf	11,b	;volatile
 15486                           
 15487                           ;mcc_generated_files/pin_manager.c: 148:     CLCIN2PPS = 0x08;
 15488  004FE6  0E08               	movlw	8
 15489  004FE8  6FDB               	movwf	219,b	;volatile
 15490                           
 15491                           ;mcc_generated_files/pin_manager.c: 149:     SMT1SIGPPS = 0x08;
 15492  004FEA  0E08               	movlw	8
 15493  004FEC  6FD2               	movwf	210,b	;volatile
 15494                           
 15495                           ;mcc_generated_files/pin_manager.c: 150:     CCP4PPS = 0x1E;
 15496  004FEE  0E1E               	movlw	30
 15497  004FF0  6FD0               	movwf	208,b	;volatile
 15498  004FF2                     
 15499                           ; BSR set to: 58
 15500  004FF2  0012               	return		;funcret
 15501  004FF4                     __end_of_PIN_MANAGER_Initialize:
 15502                           	callstack 0
 15503                           
 15504 ;; *************** function _OSCILLATOR_Initialize *****************
 15505 ;; Defined at:
 15506 ;;		line 72 in file "mcc_generated_files/mcc.c"
 15507 ;; Parameters:    Size  Location     Type
 15508 ;;		None
 15509 ;; Auto vars:     Size  Location     Type
 15510 ;;		None
 15511 ;; Return value:  Size  Location     Type
 15512 ;;                  1    wreg      void 
 15513 ;; Registers used:
 15514 ;;		wreg, status,2
 15515 ;; Tracked objects:
 15516 ;;		On entry : 0/0
 15517 ;;		On exit  : 0/0
 15518 ;;		Unchanged: 0/0
 15519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15523 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15524 ;;Total ram usage:        0 bytes
 15525 ;; Hardware stack levels used: 1
 15526 ;; Hardware stack levels required when called: 8
 15527 ;; This function calls:
 15528 ;;		Nothing
 15529 ;; This function is called by:
 15530 ;;		_SYSTEM_Initialize
 15531 ;; This function uses a non-reentrant model
 15532 ;;
 15533                           
 15534                           	psect	text75
 15535  00621E                     __ptext75:
 15536                           	callstack 0
 15537  00621E                     _OSCILLATOR_Initialize:
 15538                           	callstack 21
 15539  00621E                     
 15540                           ;mcc_generated_files/mcc.c: 75:     OSCCON1 = 0x60;
 15541  00621E  0E60               	movlw	96
 15542  006220  0139               	movlb	57	; () banked
 15543  006222  6FD9               	movwf	217,b	;volatile
 15544                           
 15545                           ;mcc_generated_files/mcc.c: 77:     OSCCON3 = 0x00;
 15546  006224  0E00               	movlw	0
 15547  006226  6FDB               	movwf	219,b	;volatile
 15548                           
 15549                           ;mcc_generated_files/mcc.c: 79:     OSCEN = 0x00;
 15550  006228  0E00               	movlw	0
 15551  00622A  6FDD               	movwf	221,b	;volatile
 15552                           
 15553                           ;mcc_generated_files/mcc.c: 81:     OSCFRQ = 0x08;
 15554  00622C  0E08               	movlw	8
 15555  00622E  6FDF               	movwf	223,b	;volatile
 15556                           
 15557                           ;mcc_generated_files/mcc.c: 83:     OSCTUNE = 0x00;
 15558  006230  0E00               	movlw	0
 15559  006232  6FDE               	movwf	222,b	;volatile
 15560  006234                     
 15561                           ; BSR set to: 57
 15562  006234  0012               	return		;funcret
 15563  006236                     __end_of_OSCILLATOR_Initialize:
 15564                           	callstack 0
 15565                           
 15566 ;; *************** function _INTERRUPT_Initialize *****************
 15567 ;; Defined at:
 15568 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 15569 ;; Parameters:    Size  Location     Type
 15570 ;;		None
 15571 ;; Auto vars:     Size  Location     Type
 15572 ;;  state           1   19[COMRAM] _Bool 
 15573 ;; Return value:  Size  Location     Type
 15574 ;;                  1    wreg      void 
 15575 ;; Registers used:
 15576 ;;		wreg, status,2
 15577 ;; Tracked objects:
 15578 ;;		On entry : 0/0
 15579 ;;		On exit  : 0/0
 15580 ;;		Unchanged: 0/0
 15581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15583 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15585 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15586 ;;Total ram usage:        1 bytes
 15587 ;; Hardware stack levels used: 1
 15588 ;; Hardware stack levels required when called: 8
 15589 ;; This function calls:
 15590 ;;		Nothing
 15591 ;; This function is called by:
 15592 ;;		_SYSTEM_Initialize
 15593 ;; This function uses a non-reentrant model
 15594 ;;
 15595                           
 15596                           	psect	text76
 15597  005950                     __ptext76:
 15598                           	callstack 0
 15599  005950                     _INTERRUPT_Initialize:
 15600                           	callstack 21
 15601  005950                     
 15602                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 15603  005950  8AD2               	bsf	210,5,c	;volatile
 15604  005952                     
 15605                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 15606  005952  0E00               	movlw	0
 15607  005954  BED2               	btfsc	16338,7,c	;volatile
 15608  005956  0E01               	movlw	1
 15609  005958  6E14               	movwf	INTERRUPT_Initialize@state^0,c
 15610  00595A                     
 15611                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 15612  00595A  9ED2               	bcf	16338,7,c	;volatile
 15613                           
 15614                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 15615  00595C  0E55               	movlw	85
 15616  00595E  6ED4               	movwf	212,c	;volatile
 15617                           
 15618                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 15619  005960  0EAA               	movlw	170
 15620  005962  6ED4               	movwf	212,c	;volatile
 15621  005964                     
 15622                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 15623  005964  90D4               	bcf	212,0,c	;volatile
 15624                           
 15625                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTBASEU = 0;
 15626  005966  0E00               	movlw	0
 15627  005968  6ED7               	movwf	215,c	;volatile
 15628                           
 15629                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTBASEH = 0;
 15630  00596A  0E00               	movlw	0
 15631  00596C  6ED6               	movwf	214,c	;volatile
 15632                           
 15633                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTBASEL = 8;
 15634  00596E  0E08               	movlw	8
 15635  005970  6ED5               	movwf	213,c	;volatile
 15636                           
 15637                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 15638  005972  0E55               	movlw	85
 15639  005974  6ED4               	movwf	212,c	;volatile
 15640                           
 15641                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 15642  005976  0EAA               	movlw	170
 15643  005978  6ED4               	movwf	212,c	;volatile
 15644  00597A                     
 15645                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 15646  00597A  80D4               	bsf	212,0,c	;volatile
 15647  00597C                     
 15648                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 15649  00597C  B014               	btfsc	INTERRUPT_Initialize@state^0,0,c
 15650  00597E  D002               	bra	u2985
 15651  005980  9ED2               	bcf	16338,7,c	;volatile
 15652  005982  D001               	bra	u2986
 15653  005984                     u2985:
 15654  005984  8ED2               	bsf	16338,7,c	;volatile
 15655  005986                     u2986:
 15656  005986                     
 15657                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR3bits.U1TXIP = 0;
 15658  005986  0139               	movlb	57	; () banked
 15659  005988  9983               	bcf	131,4,b	;volatile
 15660  00598A                     
 15661                           ; BSR set to: 57
 15662                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR3bits.U1RXIP = 0;
 15663  00598A  9783               	bcf	131,3,b	;volatile
 15664  00598C                     
 15665                           ; BSR set to: 57
 15666                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR1bits.SMT1PWAIP = 1;
 15667  00598C  8F81               	bsf	129,7,b	;volatile
 15668  00598E                     
 15669                           ; BSR set to: 57
 15670                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR1bits.SMT1IP = 1;
 15671  00598E  8B81               	bsf	129,5,b	;volatile
 15672  005990                     
 15673                           ; BSR set to: 57
 15674                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR1bits.SMT1PRAIP = 1;
 15675  005990  8D81               	bsf	129,6,b	;volatile
 15676  005992                     
 15677                           ; BSR set to: 57
 15678                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR10bits.CCP4IP = 1;
 15679  005992  818A               	bsf	138,0,b	;volatile
 15680  005994                     
 15681                           ; BSR set to: 57
 15682                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR8bits.TMR5GIP = 1;
 15683  005994  8F88               	bsf	136,7,b	;volatile
 15684  005996                     
 15685                           ; BSR set to: 57
 15686                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR7bits.TMR4IP = 0;
 15687  005996  9187               	bcf	135,0,b	;volatile
 15688  005998                     
 15689                           ; BSR set to: 57
 15690                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR9bits.CCP3IP = 1;
 15691  005998  8389               	bsf	137,1,b	;volatile
 15692  00599A                     
 15693                           ; BSR set to: 57
 15694  00599A  0012               	return		;funcret
 15695  00599C                     __end_of_INTERRUPT_Initialize:
 15696                           	callstack 0
 15697                           
 15698 ;; *************** function _CLC3_Initialize *****************
 15699 ;; Defined at:
 15700 ;;		line 58 in file "mcc_generated_files/clc3.c"
 15701 ;; Parameters:    Size  Location     Type
 15702 ;;		None
 15703 ;; Auto vars:     Size  Location     Type
 15704 ;;		None
 15705 ;; Return value:  Size  Location     Type
 15706 ;;                  1    wreg      void 
 15707 ;; Registers used:
 15708 ;;		wreg, status,2
 15709 ;; Tracked objects:
 15710 ;;		On entry : 0/0
 15711 ;;		On exit  : 0/0
 15712 ;;		Unchanged: 0/0
 15713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15718 ;;Total ram usage:        0 bytes
 15719 ;; Hardware stack levels used: 1
 15720 ;; Hardware stack levels required when called: 8
 15721 ;; This function calls:
 15722 ;;		Nothing
 15723 ;; This function is called by:
 15724 ;;		_SYSTEM_Initialize
 15725 ;; This function uses a non-reentrant model
 15726 ;;
 15727                           
 15728                           	psect	text77
 15729  006048                     __ptext77:
 15730                           	callstack 0
 15731  006048                     _CLC3_Initialize:
 15732                           	callstack 21
 15733  006048                     
 15734                           ;mcc_generated_files/clc3.c: 63:     CLC3POL = 0x00;
 15735  006048  0E00               	movlw	0
 15736  00604A  013C               	movlb	60	; () banked
 15737  00604C  6F61               	movwf	97,b	;volatile
 15738                           
 15739                           ;mcc_generated_files/clc3.c: 65:     CLC3SEL0 = 0x03;
 15740  00604E  0E03               	movlw	3
 15741  006050  6F62               	movwf	98,b	;volatile
 15742                           
 15743                           ;mcc_generated_files/clc3.c: 67:     CLC3SEL1 = 0x02;
 15744  006052  0E02               	movlw	2
 15745  006054  6F63               	movwf	99,b	;volatile
 15746                           
 15747                           ;mcc_generated_files/clc3.c: 69:     CLC3SEL2 = 0x00;
 15748  006056  0E00               	movlw	0
 15749  006058  6F64               	movwf	100,b	;volatile
 15750                           
 15751                           ;mcc_generated_files/clc3.c: 71:     CLC3SEL3 = 0x00;
 15752  00605A  0E00               	movlw	0
 15753  00605C  6F65               	movwf	101,b	;volatile
 15754                           
 15755                           ;mcc_generated_files/clc3.c: 73:     CLC3GLS0 = 0x02;
 15756  00605E  0E02               	movlw	2
 15757  006060  6F66               	movwf	102,b	;volatile
 15758                           
 15759                           ;mcc_generated_files/clc3.c: 75:     CLC3GLS1 = 0x08;
 15760  006062  0E08               	movlw	8
 15761  006064  6F67               	movwf	103,b	;volatile
 15762                           
 15763                           ;mcc_generated_files/clc3.c: 77:     CLC3GLS2 = 0x00;
 15764  006066  0E00               	movlw	0
 15765  006068  6F68               	movwf	104,b	;volatile
 15766                           
 15767                           ;mcc_generated_files/clc3.c: 79:     CLC3GLS3 = 0x00;
 15768  00606A  0E00               	movlw	0
 15769  00606C  6F69               	movwf	105,b	;volatile
 15770                           
 15771                           ;mcc_generated_files/clc3.c: 81:     CLC3CON = 0x85;
 15772  00606E  0E85               	movlw	133
 15773  006070  6F60               	movwf	96,b	;volatile
 15774  006072                     
 15775                           ; BSR set to: 60
 15776  006072  0012               	return		;funcret
 15777  006074                     __end_of_CLC3_Initialize:
 15778                           	callstack 0
 15779                           
 15780 ;; *************** function _CCP4_Initialize *****************
 15781 ;; Defined at:
 15782 ;;		line 78 in file "mcc_generated_files/ccp4.c"
 15783 ;; Parameters:    Size  Location     Type
 15784 ;;		None
 15785 ;; Auto vars:     Size  Location     Type
 15786 ;;		None
 15787 ;; Return value:  Size  Location     Type
 15788 ;;                  1    wreg      void 
 15789 ;; Registers used:
 15790 ;;		wreg, status,2, status,0, cstack
 15791 ;; Tracked objects:
 15792 ;;		On entry : 0/0
 15793 ;;		On exit  : 0/0
 15794 ;;		Unchanged: 0/0
 15795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15799 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15800 ;;Total ram usage:        0 bytes
 15801 ;; Hardware stack levels used: 1
 15802 ;; Hardware stack levels required when called: 9
 15803 ;; This function calls:
 15804 ;;		_CCP4_SetCallBack
 15805 ;; This function is called by:
 15806 ;;		_SYSTEM_Initialize
 15807 ;; This function uses a non-reentrant model
 15808 ;;
 15809                           
 15810                           	psect	text78
 15811  005F92                     __ptext78:
 15812                           	callstack 0
 15813  005F92                     _CCP4_Initialize:
 15814                           	callstack 20
 15815  005F92                     
 15816                           ;mcc_generated_files/ccp4.c: 83:  CCP4CON = 0x83;
 15817  005F92  0E83               	movlw	131
 15818  005F94  6E72               	movwf	114,c	;volatile
 15819                           
 15820                           ;mcc_generated_files/ccp4.c: 86:  CCP4CAP = 0x00;
 15821  005F96  0E00               	movlw	0
 15822  005F98  6E73               	movwf	115,c	;volatile
 15823                           
 15824                           ;mcc_generated_files/ccp4.c: 89:  CCPR4H = 0x00;
 15825  005F9A  0E00               	movlw	0
 15826  005F9C  6E71               	movwf	113,c	;volatile
 15827                           
 15828                           ;mcc_generated_files/ccp4.c: 92:  CCPR4L = 0x00;
 15829  005F9E  0E00               	movlw	0
 15830  005FA0  6E70               	movwf	112,c	;volatile
 15831  005FA2                     
 15832                           ;mcc_generated_files/ccp4.c: 95:     CCP4_SetCallBack(CCP4_DefaultCallBack);
 15833  005FA2  0E8E               	movlw	low _CCP4_DefaultCallBack
 15834  005FA4  6E14               	movwf	CCP4_SetCallBack@customCallBack^0,c
 15835  005FA6  0E5D               	movlw	high _CCP4_DefaultCallBack
 15836  005FA8  6E15               	movwf	(CCP4_SetCallBack@customCallBack+1)^0,c
 15837  005FAA  EC52  F031         	call	_CCP4_SetCallBack	;wreg free
 15838  005FAE                     
 15839                           ;mcc_generated_files/ccp4.c: 98:  CCPTMRS0bits.C4TSEL = 0x2;
 15840  005FAE  013F               	movlb	63	; () banked
 15841  005FB0  515E               	movf	94,w,b	;volatile
 15842  005FB2  0B3F               	andlw	-193
 15843  005FB4  0980               	iorlw	128
 15844  005FB6  6F5E               	movwf	94,b	;volatile
 15845  005FB8                     
 15846                           ; BSR set to: 63
 15847                           ;mcc_generated_files/ccp4.c: 101:     PIR10bits.CCP4IF = 0;
 15848  005FB8  0139               	movlb	57	; () banked
 15849  005FBA  91AA               	bcf	170,0,b	;volatile
 15850  005FBC                     
 15851                           ; BSR set to: 57
 15852                           ;mcc_generated_files/ccp4.c: 104:     PIE10bits.CCP4IE = 1;
 15853  005FBC  819A               	bsf	154,0,b	;volatile
 15854  005FBE                     
 15855                           ; BSR set to: 57
 15856  005FBE  0012               	return		;funcret
 15857  005FC0                     __end_of_CCP4_Initialize:
 15858                           	callstack 0
 15859                           
 15860 ;; *************** function _CCP4_SetCallBack *****************
 15861 ;; Defined at:
 15862 ;;		line 75 in file "mcc_generated_files/ccp4.c"
 15863 ;; Parameters:    Size  Location     Type
 15864 ;;  customCallBa    2   19[COMRAM] PTR FTN(unsigned short ,
 15865 ;;		 -> CCP4_DefaultCallBack(1), 
 15866 ;; Auto vars:     Size  Location     Type
 15867 ;;		None
 15868 ;; Return value:  Size  Location     Type
 15869 ;;                  1    wreg      void 
 15870 ;; Registers used:
 15871 ;;		wreg, status,2, status,0
 15872 ;; Tracked objects:
 15873 ;;		On entry : 0/0
 15874 ;;		On exit  : 0/0
 15875 ;;		Unchanged: 0/0
 15876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15877 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15880 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15881 ;;Total ram usage:        2 bytes
 15882 ;; Hardware stack levels used: 1
 15883 ;; Hardware stack levels required when called: 8
 15884 ;; This function calls:
 15885 ;;		Nothing
 15886 ;; This function is called by:
 15887 ;;		_CCP4_Initialize
 15888 ;; This function uses a non-reentrant model
 15889 ;;
 15890                           
 15891                           	psect	text79
 15892  0062A4                     __ptext79:
 15893                           	callstack 0
 15894  0062A4                     _CCP4_SetCallBack:
 15895                           	callstack 20
 15896  0062A4                     
 15897                           ;mcc_generated_files/ccp4.c: 76:     CCP4_CallBack = customCallBack;
 15898  0062A4  C014  F196         	movff	CCP4_SetCallBack@customCallBack,_CCP4_CallBack
 15899  0062A8  C015  F197         	movff	CCP4_SetCallBack@customCallBack+1,_CCP4_CallBack+1
 15900  0062AC  0012               	return		;funcret
 15901  0062AE                     __end_of_CCP4_SetCallBack:
 15902                           	callstack 0
 15903                           
 15904 ;; *************** function _CCP3_Initialize *****************
 15905 ;; Defined at:
 15906 ;;		line 75 in file "mcc_generated_files/ccp3.c"
 15907 ;; Parameters:    Size  Location     Type
 15908 ;;		None
 15909 ;; Auto vars:     Size  Location     Type
 15910 ;;		None
 15911 ;; Return value:  Size  Location     Type
 15912 ;;                  1    wreg      void 
 15913 ;; Registers used:
 15914 ;;		wreg, status,2, status,0, cstack
 15915 ;; Tracked objects:
 15916 ;;		On entry : 0/0
 15917 ;;		On exit  : 0/0
 15918 ;;		Unchanged: 0/0
 15919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15923 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15924 ;;Total ram usage:        0 bytes
 15925 ;; Hardware stack levels used: 1
 15926 ;; Hardware stack levels required when called: 9
 15927 ;; This function calls:
 15928 ;;		_CCP3_SetCallBack
 15929 ;; This function is called by:
 15930 ;;		_SYSTEM_Initialize
 15931 ;; This function uses a non-reentrant model
 15932 ;;
 15933                           
 15934                           	psect	text80
 15935  005FC0                     __ptext80:
 15936                           	callstack 0
 15937  005FC0                     _CCP3_Initialize:
 15938                           	callstack 20
 15939  005FC0                     
 15940                           ;mcc_generated_files/ccp3.c: 80:  CCP3CON = 0x83;
 15941  005FC0  0E83               	movlw	131
 15942  005FC2  6E76               	movwf	118,c	;volatile
 15943                           
 15944                           ;mcc_generated_files/ccp3.c: 83:  CCP3CAP = 0x00;
 15945  005FC4  0E00               	movlw	0
 15946  005FC6  6E77               	movwf	119,c	;volatile
 15947                           
 15948                           ;mcc_generated_files/ccp3.c: 86:  CCPR3H = 0x00;
 15949  005FC8  0E00               	movlw	0
 15950  005FCA  6E75               	movwf	117,c	;volatile
 15951                           
 15952                           ;mcc_generated_files/ccp3.c: 89:  CCPR3L = 0x00;
 15953  005FCC  0E00               	movlw	0
 15954  005FCE  6E74               	movwf	116,c	;volatile
 15955  005FD0                     
 15956                           ;mcc_generated_files/ccp3.c: 92:     CCP3_SetCallBack(CCP3_DefaultCallBack);
 15957  005FD0  0E58               	movlw	low _CCP3_DefaultCallBack
 15958  005FD2  6E14               	movwf	CCP3_SetCallBack@customCallBack^0,c
 15959  005FD4  0E5D               	movlw	high _CCP3_DefaultCallBack
 15960  005FD6  6E15               	movwf	(CCP3_SetCallBack@customCallBack+1)^0,c
 15961  005FD8  EC57  F031         	call	_CCP3_SetCallBack	;wreg free
 15962  005FDC                     
 15963                           ;mcc_generated_files/ccp3.c: 95:  CCPTMRS0bits.C3TSEL = 0x2;
 15964  005FDC  013F               	movlb	63	; () banked
 15965  005FDE  515E               	movf	94,w,b	;volatile
 15966  005FE0  0BCF               	andlw	-49
 15967  005FE2  0920               	iorlw	32
 15968  005FE4  6F5E               	movwf	94,b	;volatile
 15969  005FE6                     
 15970                           ; BSR set to: 63
 15971                           ;mcc_generated_files/ccp3.c: 98:     PIR9bits.CCP3IF = 0;
 15972  005FE6  0139               	movlb	57	; () banked
 15973  005FE8  93A9               	bcf	169,1,b	;volatile
 15974  005FEA                     
 15975                           ; BSR set to: 57
 15976                           ;mcc_generated_files/ccp3.c: 101:     PIE9bits.CCP3IE = 1;
 15977  005FEA  8399               	bsf	153,1,b	;volatile
 15978  005FEC                     
 15979                           ; BSR set to: 57
 15980  005FEC  0012               	return		;funcret
 15981  005FEE                     __end_of_CCP3_Initialize:
 15982                           	callstack 0
 15983                           
 15984 ;; *************** function _CCP3_SetCallBack *****************
 15985 ;; Defined at:
 15986 ;;		line 119 in file "mcc_generated_files/ccp3.c"
 15987 ;; Parameters:    Size  Location     Type
 15988 ;;  customCallBa    2   19[COMRAM] PTR FTN(unsigned short ,
 15989 ;;		 -> CCP3_DefaultCallBack(1), 
 15990 ;; Auto vars:     Size  Location     Type
 15991 ;;		None
 15992 ;; Return value:  Size  Location     Type
 15993 ;;                  1    wreg      void 
 15994 ;; Registers used:
 15995 ;;		wreg, status,2, status,0
 15996 ;; Tracked objects:
 15997 ;;		On entry : 0/0
 15998 ;;		On exit  : 0/0
 15999 ;;		Unchanged: 0/0
 16000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16001 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16004 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16005 ;;Total ram usage:        2 bytes
 16006 ;; Hardware stack levels used: 1
 16007 ;; Hardware stack levels required when called: 8
 16008 ;; This function calls:
 16009 ;;		Nothing
 16010 ;; This function is called by:
 16011 ;;		_CCP3_Initialize
 16012 ;; This function uses a non-reentrant model
 16013 ;;
 16014                           
 16015                           	psect	text81
 16016  0062AE                     __ptext81:
 16017                           	callstack 0
 16018  0062AE                     _CCP3_SetCallBack:
 16019                           	callstack 20
 16020  0062AE                     
 16021                           ;mcc_generated_files/ccp3.c: 120:     CCP3_CallBack = customCallBack;
 16022  0062AE  C014  F198         	movff	CCP3_SetCallBack@customCallBack,_CCP3_CallBack
 16023  0062B2  C015  F199         	movff	CCP3_SetCallBack@customCallBack+1,_CCP3_CallBack+1
 16024  0062B6  0012               	return		;funcret
 16025  0062B8                     __end_of_CCP3_SetCallBack:
 16026                           	callstack 0
 16027                           
 16028 ;; *************** function _ADCC_Initialize *****************
 16029 ;; Defined at:
 16030 ;;		line 62 in file "mcc_generated_files/adcc.c"
 16031 ;; Parameters:    Size  Location     Type
 16032 ;;		None
 16033 ;; Auto vars:     Size  Location     Type
 16034 ;;		None
 16035 ;; Return value:  Size  Location     Type
 16036 ;;                  1    wreg      void 
 16037 ;; Registers used:
 16038 ;;		wreg, status,2
 16039 ;; Tracked objects:
 16040 ;;		On entry : 0/0
 16041 ;;		On exit  : 0/0
 16042 ;;		Unchanged: 0/0
 16043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16047 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16048 ;;Total ram usage:        0 bytes
 16049 ;; Hardware stack levels used: 1
 16050 ;; Hardware stack levels required when called: 8
 16051 ;; This function calls:
 16052 ;;		Nothing
 16053 ;; This function is called by:
 16054 ;;		_SYSTEM_Initialize
 16055 ;; This function uses a non-reentrant model
 16056 ;;
 16057                           
 16058                           	psect	text82
 16059  00589E                     __ptext82:
 16060                           	callstack 0
 16061  00589E                     _ADCC_Initialize:
 16062                           	callstack 21
 16063  00589E                     
 16064                           ;mcc_generated_files/adcc.c: 66:     ADLTHL = 0x00;
 16065  00589E  0E00               	movlw	0
 16066  0058A0  013E               	movlb	62	; () banked
 16067  0058A2  6FDE               	movwf	222,b	;volatile
 16068                           
 16069                           ;mcc_generated_files/adcc.c: 68:     ADLTHH = 0x00;
 16070  0058A4  0E00               	movlw	0
 16071  0058A6  6FDF               	movwf	223,b	;volatile
 16072                           
 16073                           ;mcc_generated_files/adcc.c: 70:     ADUTHL = 0x00;
 16074  0058A8  0E00               	movlw	0
 16075  0058AA  6FE0               	movwf	224,b	;volatile
 16076                           
 16077                           ;mcc_generated_files/adcc.c: 72:     ADUTHH = 0x00;
 16078  0058AC  0E00               	movlw	0
 16079  0058AE  6FE1               	movwf	225,b	;volatile
 16080                           
 16081                           ;mcc_generated_files/adcc.c: 74:     ADSTPTL = 0x00;
 16082  0058B0  0E00               	movlw	0
 16083  0058B2  6FE4               	movwf	228,b	;volatile
 16084                           
 16085                           ;mcc_generated_files/adcc.c: 76:     ADSTPTH = 0x00;
 16086  0058B4  0E00               	movlw	0
 16087  0058B6  6FE5               	movwf	229,b	;volatile
 16088                           
 16089                           ;mcc_generated_files/adcc.c: 78:     ADACCU = 0x00;
 16090  0058B8  0E00               	movlw	0
 16091  0058BA  6FEA               	movwf	234,b	;volatile
 16092                           
 16093                           ;mcc_generated_files/adcc.c: 80:     ADRPT = 0x00;
 16094  0058BC  0E00               	movlw	0
 16095  0058BE  6FEC               	movwf	236,b	;volatile
 16096                           
 16097                           ;mcc_generated_files/adcc.c: 82:     ADPCH = 0x00;
 16098  0058C0  0E00               	movlw	0
 16099  0058C2  6FF1               	movwf	241,b	;volatile
 16100                           
 16101                           ;mcc_generated_files/adcc.c: 84:     ADACQL = 0x58;
 16102  0058C4  0E58               	movlw	88
 16103  0058C6  6FF3               	movwf	243,b	;volatile
 16104                           
 16105                           ;mcc_generated_files/adcc.c: 86:     ADACQH = 0x02;
 16106  0058C8  0E02               	movlw	2
 16107  0058CA  6FF4               	movwf	244,b	;volatile
 16108                           
 16109                           ;mcc_generated_files/adcc.c: 88:     ADCAP = 0x00;
 16110  0058CC  0E00               	movlw	0
 16111  0058CE  6FF5               	movwf	245,b	;volatile
 16112                           
 16113                           ;mcc_generated_files/adcc.c: 90:     ADPREL = 0x00;
 16114  0058D0  0E00               	movlw	0
 16115  0058D2  6FF6               	movwf	246,b	;volatile
 16116                           
 16117                           ;mcc_generated_files/adcc.c: 92:     ADPREH = 0x00;
 16118  0058D4  0E00               	movlw	0
 16119  0058D6  6FF7               	movwf	247,b	;volatile
 16120                           
 16121                           ;mcc_generated_files/adcc.c: 94:     ADCON1 = 0x00;
 16122  0058D8  0E00               	movlw	0
 16123  0058DA  6FF9               	movwf	249,b	;volatile
 16124                           
 16125                           ;mcc_generated_files/adcc.c: 96:     ADCON2 = 0x00;
 16126  0058DC  0E00               	movlw	0
 16127  0058DE  6FFA               	movwf	250,b	;volatile
 16128                           
 16129                           ;mcc_generated_files/adcc.c: 98:     ADCON3 = 0x00;
 16130  0058E0  0E00               	movlw	0
 16131  0058E2  6FFB               	movwf	251,b	;volatile
 16132                           
 16133                           ;mcc_generated_files/adcc.c: 100:     ADSTAT = 0x00;
 16134  0058E4  0E00               	movlw	0
 16135  0058E6  6FFC               	movwf	252,b	;volatile
 16136                           
 16137                           ;mcc_generated_files/adcc.c: 102:     ADREF = 0x00;
 16138  0058E8  0E00               	movlw	0
 16139  0058EA  6FFD               	movwf	253,b	;volatile
 16140                           
 16141                           ;mcc_generated_files/adcc.c: 104:     ADACT = 0x00;
 16142  0058EC  0E00               	movlw	0
 16143  0058EE  6FFE               	movwf	254,b	;volatile
 16144                           
 16145                           ;mcc_generated_files/adcc.c: 106:     ADCLK = 0x1F;
 16146  0058F0  0E1F               	movlw	31
 16147  0058F2  6FFF               	movwf	255,b	;volatile
 16148                           
 16149                           ;mcc_generated_files/adcc.c: 108:     ADCON0 = 0x84;
 16150  0058F4  0E84               	movlw	132
 16151  0058F6  6FF8               	movwf	248,b	;volatile
 16152  0058F8                     
 16153                           ; BSR set to: 62
 16154  0058F8  0012               	return		;funcret
 16155  0058FA                     __end_of_ADCC_Initialize:
 16156                           	callstack 0
 16157                           
 16158 ;; *************** function _UART1_tx_vect_isr *****************
 16159 ;; Defined at:
 16160 ;;		line 235 in file "mcc_generated_files/uart1.c"
 16161 ;; Parameters:    Size  Location     Type
 16162 ;;		None
 16163 ;; Auto vars:     Size  Location     Type
 16164 ;;		None
 16165 ;; Return value:  Size  Location     Type
 16166 ;;                  1    wreg      void 
 16167 ;; Registers used:
 16168 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 16169 ;; Tracked objects:
 16170 ;;		On entry : 0/0
 16171 ;;		On exit  : 0/0
 16172 ;;		Unchanged: 0/0
 16173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16176 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16177 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16178 ;;Total ram usage:        1 bytes
 16179 ;; Hardware stack levels used: 1
 16180 ;; Hardware stack levels required when called: 5
 16181 ;; This function calls:
 16182 ;;		Absolute function
 16183 ;;		_UART1_Transmit_ISR
 16184 ;; This function is called by:
 16185 ;;		Interrupt level 1
 16186 ;; This function uses a non-reentrant model
 16187 ;;
 16188                           
 16189                           	psect	text83
 16190  005C04                     __ptext83:
 16191                           	callstack 0
 16192  005C04                     _UART1_tx_vect_isr:
 16193                           	callstack 14
 16194                           
 16195                           ; BSR set to: 62
 16196                           ;incstack = 0
 16197  005C04  006F FF60  F011    	movff	status,??_UART1_tx_vect_isr
 16198  005C0A                     
 16199                           ;mcc_generated_files/uart1.c: 237:     if(UART1_TxInterruptHandler)
 16200  005C0A  0101               	movlb	1	; () banked
 16201  005C0C  51A0               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 16202  005C0E  11A1               	iorwf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 16203  005C10  B4D8               	btfsc	status,2,c
 16204  005C12  EF0D  F02E         	goto	i1u739_21
 16205  005C16  EF0F  F02E         	goto	i1u739_20
 16206  005C1A                     i1u739_21:
 16207  005C1A  EF1B  F02E         	goto	i1l324
 16208  005C1E                     i1u739_20:
 16209  005C1E                     
 16210                           ; BSR set to: 1
 16211                           ;mcc_generated_files/uart1.c: 238:     {;mcc_generated_files/uart1.c: 239:         UART1
      +                          _TxInterruptHandler();
 16212  005C1E  D802               	call	i1u740_28
 16213  005C20  EF1B  F02E         	goto	i1u740_29
 16214  005C24                     i1u740_28:
 16215  005C24  0005               	push	
 16216  005C26  6EFA               	movwf	pclath,c
 16217  005C28  51A0               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 16218  005C2A  6EFD               	movwf	tosl,c
 16219  005C2C  51A1               	movf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 16220  005C2E  6EFE               	movwf	tosh,c
 16221  005C30  6AFF               	clrf	tosu,c
 16222  005C32  50FA               	movf	pclath,w,c
 16223  005C34  0012               	return		;indir
 16224  005C36                     i1u740_29:
 16225  005C36                     i1l324:
 16226  005C36  0060  F047  FFD8   	movff	??_UART1_tx_vect_isr,status
 16227  005C3C  0011               	retfie		f
 16228  005C3E                     __end_of_UART1_tx_vect_isr:
 16229                           	callstack 0
 16230                           
 16231 ;; *************** function _UART1_Transmit_ISR *****************
 16232 ;; Defined at:
 16233 ;;		line 253 in file "mcc_generated_files/uart1.c"
 16234 ;; Parameters:    Size  Location     Type
 16235 ;;		None
 16236 ;; Auto vars:     Size  Location     Type
 16237 ;;		None
 16238 ;; Return value:  Size  Location     Type
 16239 ;;                  1    wreg      void 
 16240 ;; Registers used:
 16241 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16242 ;; Tracked objects:
 16243 ;;		On entry : 0/0
 16244 ;;		On exit  : 0/0
 16245 ;;		Unchanged: 0/0
 16246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16250 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16251 ;;Total ram usage:        0 bytes
 16252 ;; Hardware stack levels used: 1
 16253 ;; Hardware stack levels required when called: 4
 16254 ;; This function calls:
 16255 ;;		Nothing
 16256 ;; This function is called by:
 16257 ;;		_UART1_Initialize
 16258 ;;		_UART1_tx_vect_isr
 16259 ;; This function uses a non-reentrant model
 16260 ;;
 16261                           
 16262                           	psect	text84
 16263  005B06                     __ptext84:
 16264                           	callstack 0
 16265  005B06                     _UART1_Transmit_ISR:
 16266                           	callstack 14
 16267  005B06                     
 16268                           ;mcc_generated_files/uart1.c: 256:     if(sizeof(uart1TxBuffer) > uart1TxBufferRemaining
      +                          )
 16269  005B06  0E08               	movlw	8
 16270  005B08  604C               	cpfslt	_uart1TxBufferRemaining^0,c	;volatile
 16271  005B0A  EF89  F02D         	goto	i1u720_21
 16272  005B0E  EF8B  F02D         	goto	i1u720_20
 16273  005B12                     i1u720_21:
 16274  005B12  EFA2  F02D         	goto	i1l333
 16275  005B16                     i1u720_20:
 16276  005B16                     
 16277                           ;mcc_generated_files/uart1.c: 257:     {;mcc_generated_files/uart1.c: 258:         U1TXB
      +                           = uart1TxBuffer[uart1TxTail++];
 16278  005B16  0E10               	movlw	low _uart1TxBuffer
 16279  005B18  2446               	addwf	_uart1TxTail^0,w,c	;volatile
 16280  005B1A  6ED9               	movwf	fsr2l,c
 16281  005B1C  6ADA               	clrf	fsr2h,c
 16282  005B1E  0E01               	movlw	high _uart1TxBuffer
 16283  005B20  22DA               	addwfc	fsr2h,f,c
 16284  005B22  50DF               	movf	indf2,w,c
 16285  005B24  013D               	movlb	61	; () banked
 16286  005B26  6FEA               	movwf	234,b	;volatile
 16287  005B28                     
 16288                           ; BSR set to: 61
 16289  005B28  2A46               	incf	_uart1TxTail^0,f,c	;volatile
 16290  005B2A                     
 16291                           ; BSR set to: 61
 16292                           ;mcc_generated_files/uart1.c: 259:        if(sizeof(uart1TxBuffer) <= uart1TxTail)
 16293  005B2A  0E07               	movlw	7
 16294  005B2C  6446               	cpfsgt	_uart1TxTail^0,c	;volatile
 16295  005B2E  EF9B  F02D         	goto	i1u721_21
 16296  005B32  EF9D  F02D         	goto	i1u721_20
 16297  005B36                     i1u721_21:
 16298  005B36  EF9F  F02D         	goto	i1l7273
 16299  005B3A                     i1u721_20:
 16300  005B3A                     
 16301                           ; BSR set to: 61
 16302                           ;mcc_generated_files/uart1.c: 260:         {;mcc_generated_files/uart1.c: 261:          
      +                             uart1TxTail = 0;
 16303  005B3A  0E00               	movlw	0
 16304  005B3C  6E46               	movwf	_uart1TxTail^0,c	;volatile
 16305  005B3E                     i1l7273:
 16306                           
 16307                           ; BSR set to: 61
 16308                           ;mcc_generated_files/uart1.c: 263:         uart1TxBufferRemaining++;
 16309  005B3E  2A4C               	incf	_uart1TxBufferRemaining^0,f,c	;volatile
 16310                           
 16311                           ;mcc_generated_files/uart1.c: 264:     }
 16312  005B40  EFA4  F02D         	goto	i1l336
 16313  005B44                     i1l333:
 16314                           
 16315                           ;mcc_generated_files/uart1.c: 266:     {;mcc_generated_files/uart1.c: 267:         PIE3b
      +                          its.U1TXIE = 0;
 16316  005B44  0139               	movlb	57	; () banked
 16317  005B46  9993               	bcf	147,4,b	;volatile
 16318  005B48                     i1l336:
 16319  005B48  0012               	return		;funcret
 16320  005B4A                     __end_of_UART1_Transmit_ISR:
 16321                           	callstack 0
 16322                           
 16323 ;; *************** function _UART1_rx_vect_isr *****************
 16324 ;; Defined at:
 16325 ;;		line 243 in file "mcc_generated_files/uart1.c"
 16326 ;; Parameters:    Size  Location     Type
 16327 ;;		None
 16328 ;; Auto vars:     Size  Location     Type
 16329 ;;		None
 16330 ;; Return value:  Size  Location     Type
 16331 ;;                  1    wreg      void 
 16332 ;; Registers used:
 16333 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 16334 ;; Tracked objects:
 16335 ;;		On entry : 0/0
 16336 ;;		On exit  : 0/0
 16337 ;;		Unchanged: 0/0
 16338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16341 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16342 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16343 ;;Total ram usage:        1 bytes
 16344 ;; Hardware stack levels used: 1
 16345 ;; Hardware stack levels required when called: 7
 16346 ;; This function calls:
 16347 ;;		Absolute function
 16348 ;;		_UART1_Receive_ISR
 16349 ;; This function is called by:
 16350 ;;		Interrupt level 1
 16351 ;; This function uses a non-reentrant model
 16352 ;;
 16353                           
 16354                           	psect	text85
 16355  005C40                     __ptext85:
 16356                           	callstack 0
 16357  005C40                     _UART1_rx_vect_isr:
 16358                           	callstack 12
 16359                           
 16360                           ;incstack = 0
 16361  005C40  006F FF60  F012    	movff	status,??_UART1_rx_vect_isr
 16362  005C46                     
 16363                           ;mcc_generated_files/uart1.c: 245:     if(UART1_RxInterruptHandler)
 16364  005C46  0101               	movlb	1	; () banked
 16365  005C48  51A2               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 16366  005C4A  11A3               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 16367  005C4C  B4D8               	btfsc	status,2,c
 16368  005C4E  EF2B  F02E         	goto	i1u741_21
 16369  005C52  EF2D  F02E         	goto	i1u741_20
 16370  005C56                     i1u741_21:
 16371  005C56  EF39  F02E         	goto	i1l330
 16372  005C5A                     i1u741_20:
 16373  005C5A                     
 16374                           ; BSR set to: 1
 16375                           ;mcc_generated_files/uart1.c: 246:     {;mcc_generated_files/uart1.c: 247:         UART1
      +                          _RxInterruptHandler();
 16376  005C5A  D802               	call	i1u742_28
 16377  005C5C  EF39  F02E         	goto	i1u742_29
 16378  005C60                     i1u742_28:
 16379  005C60  0005               	push	
 16380  005C62  6EFA               	movwf	pclath,c
 16381  005C64  51A2               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 16382  005C66  6EFD               	movwf	tosl,c
 16383  005C68  51A3               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 16384  005C6A  6EFE               	movwf	tosh,c
 16385  005C6C  6AFF               	clrf	tosu,c
 16386  005C6E  50FA               	movf	pclath,w,c
 16387  005C70  0012               	return		;indir
 16388  005C72                     i1u742_29:
 16389  005C72                     i1l330:
 16390  005C72  0060  F04B  FFD8   	movff	??_UART1_rx_vect_isr,status
 16391  005C78  0011               	retfie		f
 16392  005C7A                     __end_of_UART1_rx_vect_isr:
 16393                           	callstack 0
 16394                           
 16395 ;; *************** function _UART1_Receive_ISR *****************
 16396 ;; Defined at:
 16397 ;;		line 273 in file "mcc_generated_files/uart1.c"
 16398 ;; Parameters:    Size  Location     Type
 16399 ;;		None
 16400 ;; Auto vars:     Size  Location     Type
 16401 ;;		None
 16402 ;; Return value:  Size  Location     Type
 16403 ;;                  1    wreg      void 
 16404 ;; Registers used:
 16405 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 16406 ;; Tracked objects:
 16407 ;;		On entry : 0/0
 16408 ;;		On exit  : 0/0
 16409 ;;		Unchanged: 0/0
 16410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16414 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16415 ;;Total ram usage:        0 bytes
 16416 ;; Hardware stack levels used: 1
 16417 ;; Hardware stack levels required when called: 6
 16418 ;; This function calls:
 16419 ;;		Absolute function
 16420 ;;		_UART1_DefaultErrorHandler
 16421 ;;		_UART1_DefaultFramingErrorHandler
 16422 ;;		_UART1_DefaultOverrunErrorHandler
 16423 ;;		_UART1_RxDataHandler
 16424 ;; This function is called by:
 16425 ;;		_UART1_Initialize
 16426 ;;		_UART1_rx_vect_isr
 16427 ;; This function uses a non-reentrant model
 16428 ;;
 16429                           
 16430                           	psect	text86
 16431  00517A                     __ptext86:
 16432                           	callstack 0
 16433  00517A                     _UART1_Receive_ISR:
 16434                           	callstack 12
 16435  00517A                     
 16436                           ;mcc_generated_files/uart1.c: 276:     uart1RxStatusBuffer[uart1RxHead].status = 0;
 16437  00517A  0E00               	movlw	low _uart1RxStatusBuffer
 16438  00517C  2445               	addwf	_uart1RxHead^0,w,c	;volatile
 16439  00517E  6ED9               	movwf	fsr2l,c
 16440  005180  6ADA               	clrf	fsr2h,c
 16441  005182  0E01               	movlw	high _uart1RxStatusBuffer
 16442  005184  22DA               	addwfc	fsr2h,f,c
 16443  005186  0E00               	movlw	0
 16444  005188  6EDF               	movwf	indf2,c
 16445  00518A                     
 16446                           ;mcc_generated_files/uart1.c: 278:     if(U1ERRIRbits.FERIF){
 16447  00518A  013D               	movlb	61	; () banked
 16448  00518C  A7F9               	btfss	249,3,b	;volatile
 16449  00518E  EFCB  F028         	goto	i1u722_21
 16450  005192  EFCD  F028         	goto	i1u722_20
 16451  005196                     i1u722_21:
 16452  005196  EFE1  F028         	goto	i1l7283
 16453  00519A                     i1u722_20:
 16454  00519A                     
 16455                           ; BSR set to: 61
 16456                           ;mcc_generated_files/uart1.c: 279:         uart1RxStatusBuffer[uart1RxHead].ferr = 1;
 16457  00519A  0E00               	movlw	low _uart1RxStatusBuffer
 16458  00519C  2445               	addwf	_uart1RxHead^0,w,c	;volatile
 16459  00519E  6ED9               	movwf	fsr2l,c
 16460  0051A0  6ADA               	clrf	fsr2h,c
 16461  0051A2  0E01               	movlw	high _uart1RxStatusBuffer
 16462  0051A4  22DA               	addwfc	fsr2h,f,c
 16463  0051A6  0101               	movlb	1	; () banked
 16464  0051A8  82DF               	bsf	indf2,1,c
 16465  0051AA                     
 16466                           ; BSR set to: 1
 16467                           ;mcc_generated_files/uart1.c: 280:         UART1_FramingErrorHandler();
 16468  0051AA  D802               	call	i1u723_28
 16469  0051AC  EFE1  F028         	goto	i1u723_29
 16470  0051B0                     i1u723_28:
 16471  0051B0  0005               	push	
 16472  0051B2  6EFA               	movwf	pclath,c
 16473  0051B4  519E               	movf	_UART1_FramingErrorHandler& (0+255),w,b
 16474  0051B6  6EFD               	movwf	tosl,c
 16475  0051B8  519F               	movf	(_UART1_FramingErrorHandler+1)& (0+255),w,b
 16476  0051BA  6EFE               	movwf	tosh,c
 16477  0051BC  6AFF               	clrf	tosu,c
 16478  0051BE  50FA               	movf	pclath,w,c
 16479  0051C0  0012               	return		;indir
 16480  0051C2                     i1u723_29:
 16481  0051C2                     i1l7283:
 16482                           
 16483                           ;mcc_generated_files/uart1.c: 283:     if(U1ERRIRbits.RXFOIF){
 16484  0051C2  013D               	movlb	61	; () banked
 16485  0051C4  A3F9               	btfss	249,1,b	;volatile
 16486  0051C6  EFE7  F028         	goto	i1u724_21
 16487  0051CA  EFE9  F028         	goto	i1u724_20
 16488  0051CE                     i1u724_21:
 16489  0051CE  EFFD  F028         	goto	i1l7289
 16490  0051D2                     i1u724_20:
 16491  0051D2                     
 16492                           ; BSR set to: 61
 16493                           ;mcc_generated_files/uart1.c: 284:         uart1RxStatusBuffer[uart1RxHead].oerr = 1;
 16494  0051D2  0E00               	movlw	low _uart1RxStatusBuffer
 16495  0051D4  2445               	addwf	_uart1RxHead^0,w,c	;volatile
 16496  0051D6  6ED9               	movwf	fsr2l,c
 16497  0051D8  6ADA               	clrf	fsr2h,c
 16498  0051DA  0E01               	movlw	high _uart1RxStatusBuffer
 16499  0051DC  22DA               	addwfc	fsr2h,f,c
 16500  0051DE  0101               	movlb	1	; () banked
 16501  0051E0  84DF               	bsf	indf2,2,c
 16502  0051E2                     
 16503                           ; BSR set to: 1
 16504                           ;mcc_generated_files/uart1.c: 285:         UART1_OverrunErrorHandler();
 16505  0051E2  D802               	call	i1u725_28
 16506  0051E4  EFFD  F028         	goto	i1u725_29
 16507  0051E8                     i1u725_28:
 16508  0051E8  0005               	push	
 16509  0051EA  6EFA               	movwf	pclath,c
 16510  0051EC  519C               	movf	_UART1_OverrunErrorHandler& (0+255),w,b
 16511  0051EE  6EFD               	movwf	tosl,c
 16512  0051F0  519D               	movf	(_UART1_OverrunErrorHandler+1)& (0+255),w,b
 16513  0051F2  6EFE               	movwf	tosh,c
 16514  0051F4  6AFF               	clrf	tosu,c
 16515  0051F6  50FA               	movf	pclath,w,c
 16516  0051F8  0012               	return		;indir
 16517  0051FA                     i1u725_29:
 16518  0051FA                     i1l7289:
 16519                           
 16520                           ;mcc_generated_files/uart1.c: 288:     if(uart1RxStatusBuffer[uart1RxHead].status){
 16521  0051FA  0E00               	movlw	low _uart1RxStatusBuffer
 16522  0051FC  2445               	addwf	_uart1RxHead^0,w,c	;volatile
 16523  0051FE  6ED9               	movwf	fsr2l,c
 16524  005200  6ADA               	clrf	fsr2h,c
 16525  005202  0E01               	movlw	high _uart1RxStatusBuffer
 16526  005204  22DA               	addwfc	fsr2h,f,c
 16527  005206  50DF               	movf	indf2,w,c
 16528  005208  B4D8               	btfsc	status,2,c
 16529  00520A  EF09  F029         	goto	i1u726_21
 16530  00520E  EF0B  F029         	goto	i1u726_20
 16531  005212                     i1u726_21:
 16532  005212  EF1A  F029         	goto	i1l7293
 16533  005216                     i1u726_20:
 16534  005216                     
 16535                           ;mcc_generated_files/uart1.c: 289:         UART1_ErrorHandler();
 16536  005216  D802               	call	i1u727_28
 16537  005218  EF18  F029         	goto	i1u727_29
 16538  00521C                     i1u727_28:
 16539  00521C  0005               	push	
 16540  00521E  6EFA               	movwf	pclath,c
 16541  005220  0101               	movlb	1	; () banked
 16542  005222  519A               	movf	_UART1_ErrorHandler& (0+255),w,b
 16543  005224  6EFD               	movwf	tosl,c
 16544  005226  519B               	movf	(_UART1_ErrorHandler+1)& (0+255),w,b
 16545  005228  6EFE               	movwf	tosh,c
 16546  00522A  6AFF               	clrf	tosu,c
 16547  00522C  50FA               	movf	pclath,w,c
 16548  00522E  0012               	return		;indir
 16549  005230                     i1u727_29:
 16550                           
 16551                           ;mcc_generated_files/uart1.c: 290:     } else {
 16552  005230  EF1C  F029         	goto	i1l343
 16553  005234                     i1l7293:
 16554                           
 16555                           ;mcc_generated_files/uart1.c: 291:         UART1_RxDataHandler();
 16556  005234  EC3A  F030         	call	_UART1_RxDataHandler	;wreg free
 16557  005238                     i1l343:
 16558  005238  0012               	return		;funcret
 16559  00523A                     __end_of_UART1_Receive_ISR:
 16560                           	callstack 0
 16561                           
 16562 ;; *************** function _UART1_DefaultOverrunErrorHandler *****************
 16563 ;; Defined at:
 16564 ;;		line 309 in file "mcc_generated_files/uart1.c"
 16565 ;; Parameters:    Size  Location     Type
 16566 ;;		None
 16567 ;; Auto vars:     Size  Location     Type
 16568 ;;		None
 16569 ;; Return value:  Size  Location     Type
 16570 ;;                  1    wreg      void 
 16571 ;; Registers used:
 16572 ;;		None
 16573 ;; Tracked objects:
 16574 ;;		On entry : 0/0
 16575 ;;		On exit  : 0/0
 16576 ;;		Unchanged: 0/0
 16577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16581 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16582 ;;Total ram usage:        0 bytes
 16583 ;; Hardware stack levels used: 1
 16584 ;; Hardware stack levels required when called: 4
 16585 ;; This function calls:
 16586 ;;		Nothing
 16587 ;; This function is called by:
 16588 ;;		_UART1_Initialize
 16589 ;;		_UART1_Receive_ISR
 16590 ;; This function uses a non-reentrant model
 16591 ;;
 16592                           
 16593                           	psect	text87
 16594  0062C8                     __ptext87:
 16595                           	callstack 0
 16596  0062C8                     _UART1_DefaultOverrunErrorHandler:
 16597                           	callstack 13
 16598  0062C8  0012               	return		;funcret
 16599  0062CA                     __end_of_UART1_DefaultOverrunErrorHandler:
 16600                           	callstack 0
 16601                           
 16602 ;; *************** function _UART1_DefaultFramingErrorHandler *****************
 16603 ;; Defined at:
 16604 ;;		line 307 in file "mcc_generated_files/uart1.c"
 16605 ;; Parameters:    Size  Location     Type
 16606 ;;		None
 16607 ;; Auto vars:     Size  Location     Type
 16608 ;;		None
 16609 ;; Return value:  Size  Location     Type
 16610 ;;                  1    wreg      void 
 16611 ;; Registers used:
 16612 ;;		None
 16613 ;; Tracked objects:
 16614 ;;		On entry : 0/0
 16615 ;;		On exit  : 0/0
 16616 ;;		Unchanged: 0/0
 16617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16621 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16622 ;;Total ram usage:        0 bytes
 16623 ;; Hardware stack levels used: 1
 16624 ;; Hardware stack levels required when called: 4
 16625 ;; This function calls:
 16626 ;;		Nothing
 16627 ;; This function is called by:
 16628 ;;		_UART1_Initialize
 16629 ;;		_UART1_Receive_ISR
 16630 ;; This function uses a non-reentrant model
 16631 ;;
 16632                           
 16633                           	psect	text88
 16634  0062CA                     __ptext88:
 16635                           	callstack 0
 16636  0062CA                     _UART1_DefaultFramingErrorHandler:
 16637                           	callstack 13
 16638  0062CA  0012               	return		;funcret
 16639  0062CC                     __end_of_UART1_DefaultFramingErrorHandler:
 16640                           	callstack 0
 16641                           
 16642 ;; *************** function _UART1_DefaultErrorHandler *****************
 16643 ;; Defined at:
 16644 ;;		line 311 in file "mcc_generated_files/uart1.c"
 16645 ;; Parameters:    Size  Location     Type
 16646 ;;		None
 16647 ;; Auto vars:     Size  Location     Type
 16648 ;;		None
 16649 ;; Return value:  Size  Location     Type
 16650 ;;                  1    wreg      void 
 16651 ;; Registers used:
 16652 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16653 ;; Tracked objects:
 16654 ;;		On entry : 0/0
 16655 ;;		On exit  : 0/0
 16656 ;;		Unchanged: 0/0
 16657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16661 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16662 ;;Total ram usage:        0 bytes
 16663 ;; Hardware stack levels used: 1
 16664 ;; Hardware stack levels required when called: 5
 16665 ;; This function calls:
 16666 ;;		_UART1_RxDataHandler
 16667 ;; This function is called by:
 16668 ;;		_UART1_Initialize
 16669 ;;		_UART1_Receive_ISR
 16670 ;; This function uses a non-reentrant model
 16671 ;;
 16672                           
 16673                           	psect	text89
 16674  0062C2                     __ptext89:
 16675                           	callstack 0
 16676  0062C2                     _UART1_DefaultErrorHandler:
 16677                           	callstack 12
 16678  0062C2                     
 16679                           ;mcc_generated_files/uart1.c: 312:     UART1_RxDataHandler();
 16680  0062C2  EC3A  F030         	call	_UART1_RxDataHandler	;wreg free
 16681  0062C6  0012               	return		;funcret
 16682  0062C8                     __end_of_UART1_DefaultErrorHandler:
 16683                           	callstack 0
 16684                           
 16685 ;; *************** function _UART1_RxDataHandler *****************
 16686 ;; Defined at:
 16687 ;;		line 297 in file "mcc_generated_files/uart1.c"
 16688 ;; Parameters:    Size  Location     Type
 16689 ;;		None
 16690 ;; Auto vars:     Size  Location     Type
 16691 ;;		None
 16692 ;; Return value:  Size  Location     Type
 16693 ;;                  1    wreg      void 
 16694 ;; Registers used:
 16695 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16696 ;; Tracked objects:
 16697 ;;		On entry : 0/0
 16698 ;;		On exit  : 0/0
 16699 ;;		Unchanged: 0/0
 16700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16704 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16705 ;;Total ram usage:        0 bytes
 16706 ;; Hardware stack levels used: 1
 16707 ;; Hardware stack levels required when called: 4
 16708 ;; This function calls:
 16709 ;;		Nothing
 16710 ;; This function is called by:
 16711 ;;		_UART1_Receive_ISR
 16712 ;;		_UART1_DefaultErrorHandler
 16713 ;; This function uses a non-reentrant model
 16714 ;;
 16715                           
 16716                           	psect	text90
 16717  006074                     __ptext90:
 16718                           	callstack 0
 16719  006074                     _UART1_RxDataHandler:
 16720                           	callstack 13
 16721  006074                     
 16722                           ;mcc_generated_files/uart1.c: 299:     uart1RxBuffer[uart1RxHead++] = U1RXB;
 16723  006074  0E08               	movlw	low _uart1RxBuffer
 16724  006076  2445               	addwf	_uart1RxHead^0,w,c	;volatile
 16725  006078  6ED9               	movwf	fsr2l,c
 16726  00607A  6ADA               	clrf	fsr2h,c
 16727  00607C  0E01               	movlw	high _uart1RxBuffer
 16728  00607E  22DA               	addwfc	fsr2h,f,c
 16729  006080  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 16730  006086  2A45               	incf	_uart1RxHead^0,f,c	;volatile
 16731  006088                     
 16732                           ;mcc_generated_files/uart1.c: 300:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 16733  006088  0E07               	movlw	7
 16734  00608A  6445               	cpfsgt	_uart1RxHead^0,c	;volatile
 16735  00608C  EF4A  F030         	goto	i1u659_21
 16736  006090  EF4C  F030         	goto	i1u659_20
 16737  006094                     i1u659_21:
 16738  006094  EF4E  F030         	goto	i1l6679
 16739  006098                     i1u659_20:
 16740  006098                     
 16741                           ;mcc_generated_files/uart1.c: 301:     {;mcc_generated_files/uart1.c: 302:         uart1
      +                          RxHead = 0;
 16742  006098  0E00               	movlw	0
 16743  00609A  6E45               	movwf	_uart1RxHead^0,c	;volatile
 16744  00609C                     i1l6679:
 16745                           
 16746                           ;mcc_generated_files/uart1.c: 304:     uart1RxCount++;
 16747  00609C  2A43               	incf	_uart1RxCount^0,f,c	;volatile
 16748  00609E  0012               	return		;funcret
 16749  0060A0                     __end_of_UART1_RxDataHandler:
 16750                           	callstack 0
 16751                           
 16752 ;; *************** function _TMR4_ISR *****************
 16753 ;; Defined at:
 16754 ;;		line 166 in file "mcc_generated_files/tmr4.c"
 16755 ;; Parameters:    Size  Location     Type
 16756 ;;		None
 16757 ;; Auto vars:     Size  Location     Type
 16758 ;;		None
 16759 ;; Return value:  Size  Location     Type
 16760 ;;                  1    wreg      void 
 16761 ;; Registers used:
 16762 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 16763 ;; Tracked objects:
 16764 ;;		On entry : 0/0
 16765 ;;		On exit  : 0/0
 16766 ;;		Unchanged: 0/0
 16767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16769 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16770 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16771 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16772 ;;Total ram usage:        1 bytes
 16773 ;; Hardware stack levels used: 1
 16774 ;; Hardware stack levels required when called: 6
 16775 ;; This function calls:
 16776 ;;		_TMR4_CallBack
 16777 ;; This function is called by:
 16778 ;;		Interrupt level 1
 16779 ;; This function uses a non-reentrant model
 16780 ;;
 16781                           
 16782                           	psect	text91
 16783  005B8C                     __ptext91:
 16784                           	callstack 0
 16785  005B8C                     _TMR4_ISR:
 16786                           	callstack 13
 16787                           
 16788                           ;incstack = 0
 16789  005B8C  006F FF60  F013    	movff	status,??_TMR4_ISR
 16790  005B92                     
 16791                           ;mcc_generated_files/tmr4.c: 168:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr4.c: 171:     PIR7bits.TMR4IF = 0;
 16792  005B92  0139               	movlb	57	; () banked
 16793  005B94  91A7               	bcf	167,0,b	;volatile
 16794  005B96                     
 16795                           ; BSR set to: 57
 16796                           ;mcc_generated_files/tmr4.c: 174:     if (++CountCallBack >= 10)
 16797  005B96  0100               	movlb	0	; () banked
 16798  005B98  4BF3               	infsnz	TMR4_ISR@CountCallBack& (0+255),f,b	;volatile
 16799  005B9A  2BF4               	incf	(TMR4_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 16800  005B9C  51F4               	movf	(TMR4_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 16801  005B9E  E109               	bnz	i1u747_20
 16802  005BA0  0E0A               	movlw	10
 16803  005BA2  5DF3               	subwf	TMR4_ISR@CountCallBack& (0+255),w,b	;volatile
 16804  005BA4  A0D8               	btfss	status,0,c
 16805  005BA6  EFD7  F02D         	goto	i1u747_21
 16806  005BAA  EFD9  F02D         	goto	i1u747_20
 16807  005BAE                     i1u747_21:
 16808  005BAE  EFE0  F02D         	goto	i1l688
 16809  005BB2                     i1u747_20:
 16810  005BB2                     
 16811                           ; BSR set to: 0
 16812                           ;mcc_generated_files/tmr4.c: 175:     {;mcc_generated_files/tmr4.c: 177:         TMR4_Ca
      +                          llBack();
 16813  005BB2  ECF7  F02F         	call	_TMR4_CallBack	;wreg free
 16814  005BB6                     
 16815                           ;mcc_generated_files/tmr4.c: 180:         CountCallBack = 0;
 16816  005BB6  0E00               	movlw	0
 16817  005BB8  0100               	movlb	0	; () banked
 16818  005BBA  6FF4               	movwf	(TMR4_ISR@CountCallBack+1)& (0+255),b	;volatile
 16819  005BBC  0E00               	movlw	0
 16820  005BBE  6FF3               	movwf	TMR4_ISR@CountCallBack& (0+255),b	;volatile
 16821  005BC0                     i1l688:
 16822                           
 16823                           ; BSR set to: 0
 16824  005BC0  0060  F04F  FFD8   	movff	??_TMR4_ISR,status
 16825  005BC6  0011               	retfie		f
 16826  005BC8                     __end_of_TMR4_ISR:
 16827                           	callstack 0
 16828                           
 16829 ;; *************** function _TMR4_CallBack *****************
 16830 ;; Defined at:
 16831 ;;		line 184 in file "mcc_generated_files/tmr4.c"
 16832 ;; Parameters:    Size  Location     Type
 16833 ;;		None
 16834 ;; Auto vars:     Size  Location     Type
 16835 ;;		None
 16836 ;; Return value:  Size  Location     Type
 16837 ;;                  1    wreg      void 
 16838 ;; Registers used:
 16839 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 16840 ;; Tracked objects:
 16841 ;;		On entry : 0/0
 16842 ;;		On exit  : 0/0
 16843 ;;		Unchanged: 0/0
 16844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16848 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16849 ;;Total ram usage:        0 bytes
 16850 ;; Hardware stack levels used: 1
 16851 ;; Hardware stack levels required when called: 5
 16852 ;; This function calls:
 16853 ;;		Absolute function
 16854 ;;		_TMR4_10msISR
 16855 ;;		_TMR4_DefaultInterruptHandler
 16856 ;; This function is called by:
 16857 ;;		_TMR4_ISR
 16858 ;; This function uses a non-reentrant model
 16859 ;;
 16860                           
 16861                           	psect	text92
 16862  005FEE                     __ptext92:
 16863                           	callstack 0
 16864  005FEE                     _TMR4_CallBack:
 16865                           	callstack 13
 16866  005FEE                     
 16867                           ;mcc_generated_files/tmr4.c: 188:     if(TMR4_InterruptHandler)
 16868  005FEE  0101               	movlb	1	; () banked
 16869  005FF0  518E               	movf	_TMR4_InterruptHandler& (0+255),w,b
 16870  005FF2  118F               	iorwf	(_TMR4_InterruptHandler+1)& (0+255),w,b
 16871  005FF4  B4D8               	btfsc	status,2,c
 16872  005FF6  EFFF  F02F         	goto	i1u731_21
 16873  005FFA  EF01  F030         	goto	i1u731_20
 16874  005FFE                     i1u731_21:
 16875  005FFE  EF0D  F030         	goto	i1l692
 16876  006002                     i1u731_20:
 16877  006002                     
 16878                           ; BSR set to: 1
 16879                           ;mcc_generated_files/tmr4.c: 189:     {;mcc_generated_files/tmr4.c: 190:         TMR4_In
      +                          terruptHandler();
 16880  006002  D802               	call	i1u732_28
 16881  006004  EF0D  F030         	goto	i1u732_29
 16882  006008                     i1u732_28:
 16883  006008  0005               	push	
 16884  00600A  6EFA               	movwf	pclath,c
 16885  00600C  518E               	movf	_TMR4_InterruptHandler& (0+255),w,b
 16886  00600E  6EFD               	movwf	tosl,c
 16887  006010  518F               	movf	(_TMR4_InterruptHandler+1)& (0+255),w,b
 16888  006012  6EFE               	movwf	tosh,c
 16889  006014  6AFF               	clrf	tosu,c
 16890  006016  50FA               	movf	pclath,w,c
 16891  006018  0012               	return		;indir
 16892  00601A                     i1u732_29:
 16893  00601A                     i1l692:
 16894  00601A  0012               	return		;funcret
 16895  00601C                     __end_of_TMR4_CallBack:
 16896                           	callstack 0
 16897                           
 16898 ;; *************** function _TMR4_10msISR *****************
 16899 ;; Defined at:
 16900 ;;		line 68 in file "main.c"
 16901 ;; Parameters:    Size  Location     Type
 16902 ;;		None
 16903 ;; Auto vars:     Size  Location     Type
 16904 ;;		None
 16905 ;; Return value:  Size  Location     Type
 16906 ;;                  1    wreg      void 
 16907 ;; Registers used:
 16908 ;;		status,2, status,0
 16909 ;; Tracked objects:
 16910 ;;		On entry : 0/0
 16911 ;;		On exit  : 0/0
 16912 ;;		Unchanged: 0/0
 16913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16917 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16918 ;;Total ram usage:        0 bytes
 16919 ;; Hardware stack levels used: 1
 16920 ;; Hardware stack levels required when called: 4
 16921 ;; This function calls:
 16922 ;;		Nothing
 16923 ;; This function is called by:
 16924 ;;		_main
 16925 ;;		_TMR4_CallBack
 16926 ;; This function uses a non-reentrant model
 16927 ;;
 16928                           
 16929                           	psect	text93
 16930  0062B8                     __ptext93:
 16931                           	callstack 0
 16932  0062B8                     _TMR4_10msISR:
 16933                           	callstack 13
 16934  0062B8                     
 16935                           ;main.c: 69:     ++cycle10ms;
 16936  0062B8  0100               	movlb	0	; () banked
 16937  0062BA  2BFB               	incf	_cycle10ms& (0+255),f,b	;volatile
 16938                           
 16939                           ;main.c: 70:     ++roundTimeCount;
 16940  0062BC  4BF1               	infsnz	_roundTimeCount& (0+255),f,b	;volatile
 16941  0062BE  2BF2               	incf	(_roundTimeCount+1)& (0+255),f,b	;volatile
 16942  0062C0                     
 16943                           ; BSR set to: 0
 16944  0062C0  0012               	return		;funcret
 16945  0062C2                     __end_of_TMR4_10msISR:
 16946                           	callstack 0
 16947                           
 16948 ;; *************** function _TMR4_DefaultInterruptHandler *****************
 16949 ;; Defined at:
 16950 ;;		line 198 in file "mcc_generated_files/tmr4.c"
 16951 ;; Parameters:    Size  Location     Type
 16952 ;;		None
 16953 ;; Auto vars:     Size  Location     Type
 16954 ;;		None
 16955 ;; Return value:  Size  Location     Type
 16956 ;;                  1    wreg      void 
 16957 ;; Registers used:
 16958 ;;		None
 16959 ;; Tracked objects:
 16960 ;;		On entry : 0/0
 16961 ;;		On exit  : 0/0
 16962 ;;		Unchanged: 0/0
 16963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16967 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16968 ;;Total ram usage:        0 bytes
 16969 ;; Hardware stack levels used: 1
 16970 ;; Hardware stack levels required when called: 4
 16971 ;; This function calls:
 16972 ;;		Nothing
 16973 ;; This function is called by:
 16974 ;;		_TMR4_Initialize
 16975 ;;		_TMR4_CallBack
 16976 ;; This function uses a non-reentrant model
 16977 ;;
 16978                           
 16979                           	psect	text94
 16980  0062CC                     __ptext94:
 16981                           	callstack 0
 16982  0062CC                     _TMR4_DefaultInterruptHandler:
 16983                           	callstack 13
 16984  0062CC  0012               	return		;funcret
 16985  0062CE                     __end_of_TMR4_DefaultInterruptHandler:
 16986                           	callstack 0
 16987                           
 16988 ;; *************** function _Default_ISR *****************
 16989 ;; Defined at:
 16990 ;;		line 83 in file "mcc_generated_files/interrupt_manager.c"
 16991 ;; Parameters:    Size  Location     Type
 16992 ;;		None
 16993 ;; Auto vars:     Size  Location     Type
 16994 ;;		None
 16995 ;; Return value:  Size  Location     Type
 16996 ;;                  1    wreg      void 
 16997 ;; Registers used:
 16998 ;;		None
 16999 ;; Tracked objects:
 17000 ;;		On entry : 0/0
 17001 ;;		On exit  : 0/0
 17002 ;;		Unchanged: 0/0
 17003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17007 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17008 ;;Total ram usage:        0 bytes
 17009 ;; Hardware stack levels used: 1
 17010 ;; This function calls:
 17011 ;;		Nothing
 17012 ;; This function is called by:
 17013 ;;		Interrupt level 2
 17014 ;; This function uses a non-reentrant model
 17015 ;;
 17016                           
 17017                           	psect	text95
 17018  0062D0                     __ptext95:
 17019                           	callstack 0
 17020  0062D0                     _Default_ISR:
 17021                           	callstack 15
 17022  0062D0  0011               	retfie		f
 17023  0062D2                     __end_of_Default_ISR:
 17024                           	callstack 0
 17025                           
 17026 ;; *************** function _CCP3_CaptureISR *****************
 17027 ;; Defined at:
 17028 ;;		line 104 in file "mcc_generated_files/ccp3.c"
 17029 ;; Parameters:    Size  Location     Type
 17030 ;;		None
 17031 ;; Auto vars:     Size  Location     Type
 17032 ;;  module          2    2[COMRAM] struct CCPR3Reg_tag
 17033 ;; Return value:  Size  Location     Type
 17034 ;;                  1    wreg      void 
 17035 ;; Registers used:
 17036 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 17037 ;; Tracked objects:
 17038 ;;		On entry : 0/0
 17039 ;;		On exit  : 0/0
 17040 ;;		Unchanged: 0/0
 17041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17043 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17045 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17046 ;;Total ram usage:        2 bytes
 17047 ;; Hardware stack levels used: 1
 17048 ;; Hardware stack levels required when called: 1
 17049 ;; This function calls:
 17050 ;;		Absolute function
 17051 ;;		_CCP3_DefaultCallBack
 17052 ;; This function is called by:
 17053 ;;		Interrupt level 2
 17054 ;; This function uses a non-reentrant model
 17055 ;;
 17056                           
 17057                           	psect	text96
 17058  005E94                     __ptext96:
 17059                           	callstack 0
 17060  005E94                     _CCP3_CaptureISR:
 17061                           	callstack 14
 17062  005E94                     
 17063                           ;mcc_generated_files/ccp3.c: 106:     CCP3_PERIOD_REG_T module;;mcc_generated_files/ccp3
      +                          .c: 109:     PIR9bits.CCP3IF = 0;
 17064  005E94  0139               	movlb	57	; () banked
 17065  005E96  93A9               	bcf	169,1,b	;volatile
 17066                           
 17067                           ;mcc_generated_files/ccp3.c: 112:     module.ccpr3l = CCPR3L;
 17068  005E98  006F FDD0  F003    	movff	16244,CCP3_CaptureISR@module	;volatile
 17069                           
 17070                           ;mcc_generated_files/ccp3.c: 113:     module.ccpr3h = CCPR3H;
 17071  005E9E  006F FDD4  F004    	movff	16245,CCP3_CaptureISR@module+1	;volatile
 17072  005EA4                     
 17073                           ; BSR set to: 57
 17074                           ;mcc_generated_files/ccp3.c: 116:     CCP3_CallBack(module.ccpr3_16Bit);
 17075  005EA4  C003  F001         	movff	CCP3_CaptureISR@module,CCP3_DefaultCallBack@capturedValue
 17076  005EA8  C004  F002         	movff	CCP3_CaptureISR@module+1,CCP3_DefaultCallBack@capturedValue+1
 17077  005EAC  D802               	call	i2u743_48
 17078  005EAE  EF63  F02F         	goto	i2u743_49
 17079  005EB2                     i2u743_48:
 17080  005EB2  0005               	push	
 17081  005EB4  6EFA               	movwf	pclath,c
 17082  005EB6  0101               	movlb	1	; () banked
 17083  005EB8  5198               	movf	_CCP3_CallBack& (0+255),w,b
 17084  005EBA  6EFD               	movwf	tosl,c
 17085  005EBC  5199               	movf	(_CCP3_CallBack+1)& (0+255),w,b
 17086  005EBE  6EFE               	movwf	tosh,c
 17087  005EC0  6AFF               	clrf	tosu,c
 17088  005EC2  50FA               	movf	pclath,w,c
 17089  005EC4  0012               	return		;indir
 17090  005EC6                     i2u743_49:
 17091  005EC6  0011               	retfie		f
 17092  005EC8                     __end_of_CCP3_CaptureISR:
 17093                           	callstack 0
 17094                           
 17095 ;; *************** function _CCP3_DefaultCallBack *****************
 17096 ;; Defined at:
 17097 ;;		line 64 in file "mcc_generated_files/ccp3.c"
 17098 ;; Parameters:    Size  Location     Type
 17099 ;;  capturedValu    2    0[COMRAM] unsigned short 
 17100 ;; Auto vars:     Size  Location     Type
 17101 ;;		None
 17102 ;; Return value:  Size  Location     Type
 17103 ;;                  1    wreg      void 
 17104 ;; Registers used:
 17105 ;;		wreg, status,2, status,0
 17106 ;; Tracked objects:
 17107 ;;		On entry : 0/0
 17108 ;;		On exit  : 0/0
 17109 ;;		Unchanged: 0/0
 17110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17111 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17114 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17115 ;;Total ram usage:        2 bytes
 17116 ;; Hardware stack levels used: 1
 17117 ;; This function calls:
 17118 ;;		Nothing
 17119 ;; This function is called by:
 17120 ;;		_CCP3_Initialize
 17121 ;;		_CCP3_CaptureISR
 17122 ;; This function uses a non-reentrant model
 17123 ;;
 17124                           
 17125                           	psect	text97
 17126  005D58                     __ptext97:
 17127                           	callstack 0
 17128  005D58                     _CCP3_DefaultCallBack:
 17129                           	callstack 14
 17130  005D58                     
 17131                           ;mcc_generated_files/ccp3.c: 64: static void CCP3_DefaultCallBack(uint16_t capturedValue
      +                          );mcc_generated_files/ccp3.c: 65: {;mcc_generated_files/ccp3.c: 67:     if(PORTDbits.RD7
      +                          ) {
 17132  005D58  AECD               	btfss	205,7,c	;volatile
 17133  005D5A  EFB1  F02E         	goto	i2u728_41
 17134  005D5E  EFB3  F02E         	goto	i2u728_40
 17135  005D62                     i2u728_41:
 17136  005D62  EFB9  F02E         	goto	i2l7299
 17137  005D66                     i2u728_40:
 17138  005D66                     
 17139                           ;mcc_generated_files/ccp3.c: 68:         distLeftM = capturedValue;
 17140  005D66  C001  F13C         	movff	CCP3_DefaultCallBack@capturedValue,_distLeftM
 17141  005D6A  C002  F13D         	movff	CCP3_DefaultCallBack@capturedValue+1,_distLeftM+1
 17142                           
 17143                           ;mcc_generated_files/ccp3.c: 69:     } else {
 17144  005D6E  EFC6  F02E         	goto	i2l438
 17145  005D72                     i2l7299:
 17146                           
 17147                           ;mcc_generated_files/ccp3.c: 70:         distLeft = capturedValue - distLeftM;
 17148  005D72  0101               	movlb	1	; () banked
 17149  005D74  513C               	movf	_distLeftM& (0+255),w,b
 17150  005D76  5C01               	subwf	CCP3_DefaultCallBack@capturedValue^0,w,c
 17151  005D78  0100               	movlb	0	; () banked
 17152  005D7A  6FF7               	movwf	_distLeft& (0+255),b	;volatile
 17153  005D7C  0101               	movlb	1	; () banked
 17154  005D7E  513D               	movf	(_distLeftM+1)& (0+255),w,b
 17155  005D80  5802               	subwfb	(CCP3_DefaultCallBack@capturedValue+1)^0,w,c
 17156  005D82  0100               	movlb	0	; () banked
 17157  005D84  6FF8               	movwf	(_distLeft+1)& (0+255),b	;volatile
 17158  005D86                     
 17159                           ; BSR set to: 0
 17160                           ;mcc_generated_files/ccp3.c: 71:         distLeft >>= 1;
 17161  005D86  90D8               	bcf	status,0,c
 17162  005D88  33F8               	rrcf	(_distLeft+1)& (0+255),f,b	;volatile
 17163  005D8A  33F7               	rrcf	_distLeft& (0+255),f,b	;volatile
 17164  005D8C                     i2l438:
 17165  005D8C  0012               	return		;funcret
 17166  005D8E                     __end_of_CCP3_DefaultCallBack:
 17167                           	callstack 0
 17168                           
 17169 ;; *************** function _CCP4_CaptureISR *****************
 17170 ;; Defined at:
 17171 ;;		line 107 in file "mcc_generated_files/ccp4.c"
 17172 ;; Parameters:    Size  Location     Type
 17173 ;;		None
 17174 ;; Auto vars:     Size  Location     Type
 17175 ;;  module          2    6[COMRAM] struct CCPR4Reg_tag
 17176 ;; Return value:  Size  Location     Type
 17177 ;;                  1    wreg      void 
 17178 ;; Registers used:
 17179 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 17180 ;; Tracked objects:
 17181 ;;		On entry : 0/0
 17182 ;;		On exit  : 0/0
 17183 ;;		Unchanged: 0/0
 17184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17186 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17188 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17189 ;;Total ram usage:        2 bytes
 17190 ;; Hardware stack levels used: 1
 17191 ;; Hardware stack levels required when called: 1
 17192 ;; This function calls:
 17193 ;;		Absolute function
 17194 ;;		_CCP4_DefaultCallBack
 17195 ;; This function is called by:
 17196 ;;		Interrupt level 2
 17197 ;; This function uses a non-reentrant model
 17198 ;;
 17199                           
 17200                           	psect	text98
 17201  005EC8                     __ptext98:
 17202                           	callstack 0
 17203  005EC8                     _CCP4_CaptureISR:
 17204                           	callstack 14
 17205  005EC8                     
 17206                           ;mcc_generated_files/ccp4.c: 109:     CCP4_PERIOD_REG_T module;;mcc_generated_files/ccp4
      +                          .c: 112:     PIR10bits.CCP4IF = 0;
 17207  005EC8  0139               	movlb	57	; () banked
 17208  005ECA  91AA               	bcf	170,0,b	;volatile
 17209                           
 17210                           ;mcc_generated_files/ccp4.c: 115:     module.ccpr4l = CCPR4L;
 17211  005ECC  006F FDC0  F007    	movff	16240,CCP4_CaptureISR@module	;volatile
 17212                           
 17213                           ;mcc_generated_files/ccp4.c: 116:     module.ccpr4h = CCPR4H;
 17214  005ED2  006F FDC4  F008    	movff	16241,CCP4_CaptureISR@module+1	;volatile
 17215  005ED8                     
 17216                           ; BSR set to: 57
 17217                           ;mcc_generated_files/ccp4.c: 119:     CCP4_CallBack(module.ccpr4_16Bit);
 17218  005ED8  C007  F005         	movff	CCP4_CaptureISR@module,CCP4_DefaultCallBack@capturedValue
 17219  005EDC  C008  F006         	movff	CCP4_CaptureISR@module+1,CCP4_DefaultCallBack@capturedValue+1
 17220  005EE0  D802               	call	i2u744_48
 17221  005EE2  EF7D  F02F         	goto	i2u744_49
 17222  005EE6                     i2u744_48:
 17223  005EE6  0005               	push	
 17224  005EE8  6EFA               	movwf	pclath,c
 17225  005EEA  0101               	movlb	1	; () banked
 17226  005EEC  5196               	movf	_CCP4_CallBack& (0+255),w,b
 17227  005EEE  6EFD               	movwf	tosl,c
 17228  005EF0  5197               	movf	(_CCP4_CallBack+1)& (0+255),w,b
 17229  005EF2  6EFE               	movwf	tosh,c
 17230  005EF4  6AFF               	clrf	tosu,c
 17231  005EF6  50FA               	movf	pclath,w,c
 17232  005EF8  0012               	return		;indir
 17233  005EFA                     i2u744_49:
 17234  005EFA  0011               	retfie		f
 17235  005EFC                     __end_of_CCP4_CaptureISR:
 17236                           	callstack 0
 17237                           
 17238 ;; *************** function _CCP4_DefaultCallBack *****************
 17239 ;; Defined at:
 17240 ;;		line 64 in file "mcc_generated_files/ccp4.c"
 17241 ;; Parameters:    Size  Location     Type
 17242 ;;  capturedValu    2    4[COMRAM] unsigned short 
 17243 ;; Auto vars:     Size  Location     Type
 17244 ;;		None
 17245 ;; Return value:  Size  Location     Type
 17246 ;;                  1    wreg      void 
 17247 ;; Registers used:
 17248 ;;		wreg, status,2, status,0
 17249 ;; Tracked objects:
 17250 ;;		On entry : 0/0
 17251 ;;		On exit  : 0/0
 17252 ;;		Unchanged: 0/0
 17253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17254 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17257 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17258 ;;Total ram usage:        2 bytes
 17259 ;; Hardware stack levels used: 1
 17260 ;; This function calls:
 17261 ;;		Nothing
 17262 ;; This function is called by:
 17263 ;;		_CCP4_Initialize
 17264 ;;		_CCP4_CaptureISR
 17265 ;; This function uses a non-reentrant model
 17266 ;;
 17267                           
 17268                           	psect	text99
 17269  005D8E                     __ptext99:
 17270                           	callstack 0
 17271  005D8E                     _CCP4_DefaultCallBack:
 17272                           	callstack 14
 17273  005D8E                     
 17274                           ;mcc_generated_files/ccp4.c: 64: static void CCP4_DefaultCallBack(uint16_t capturedValue
      +                          );mcc_generated_files/ccp4.c: 65: {;mcc_generated_files/ccp4.c: 67:     if(PORTDbits.RD6
      +                          ) {
 17275  005D8E  ACCD               	btfss	205,6,c	;volatile
 17276  005D90  EFCC  F02E         	goto	i2u729_41
 17277  005D94  EFCE  F02E         	goto	i2u729_40
 17278  005D98                     i2u729_41:
 17279  005D98  EFD4  F02E         	goto	i2l7307
 17280  005D9C                     i2u729_40:
 17281  005D9C                     
 17282                           ;mcc_generated_files/ccp4.c: 68:         distRightM = capturedValue;
 17283  005D9C  C005  F13A         	movff	CCP4_DefaultCallBack@capturedValue,_distRightM
 17284  005DA0  C006  F13B         	movff	CCP4_DefaultCallBack@capturedValue+1,_distRightM+1
 17285                           
 17286                           ;mcc_generated_files/ccp4.c: 70:     } else {
 17287  005DA4  EFE1  F02E         	goto	i2l476
 17288  005DA8                     i2l7307:
 17289                           
 17290                           ;mcc_generated_files/ccp4.c: 71:         distRight = capturedValue - distRightM;
 17291  005DA8  0101               	movlb	1	; () banked
 17292  005DAA  513A               	movf	_distRightM& (0+255),w,b
 17293  005DAC  5C05               	subwf	CCP4_DefaultCallBack@capturedValue^0,w,c
 17294  005DAE  0100               	movlb	0	; () banked
 17295  005DB0  6FF5               	movwf	_distRight& (0+255),b	;volatile
 17296  005DB2  0101               	movlb	1	; () banked
 17297  005DB4  513B               	movf	(_distRightM+1)& (0+255),w,b
 17298  005DB6  5806               	subwfb	(CCP4_DefaultCallBack@capturedValue+1)^0,w,c
 17299  005DB8  0100               	movlb	0	; () banked
 17300  005DBA  6FF6               	movwf	(_distRight+1)& (0+255),b	;volatile
 17301  005DBC                     
 17302                           ; BSR set to: 0
 17303                           ;mcc_generated_files/ccp4.c: 72:         distRight >>= 1;
 17304  005DBC  90D8               	bcf	status,0,c
 17305  005DBE  33F6               	rrcf	(_distRight+1)& (0+255),f,b	;volatile
 17306  005DC0  33F5               	rrcf	_distRight& (0+255),f,b	;volatile
 17307  005DC2                     i2l476:
 17308  005DC2  0012               	return		;funcret
 17309  005DC4                     __end_of_CCP4_DefaultCallBack:
 17310                           	callstack 0
 17311                           
 17312 ;; *************** function _TMR5_GATE_ISR *****************
 17313 ;; Defined at:
 17314 ;;		line 175 in file "mcc_generated_files/tmr5.c"
 17315 ;; Parameters:    Size  Location     Type
 17316 ;;		None
 17317 ;; Auto vars:     Size  Location     Type
 17318 ;;		None
 17319 ;; Return value:  Size  Location     Type
 17320 ;;                  1    wreg      void 
 17321 ;; Registers used:
 17322 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 17323 ;; Tracked objects:
 17324 ;;		On entry : 0/0
 17325 ;;		On exit  : 0/0
 17326 ;;		Unchanged: 0/0
 17327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17331 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17332 ;;Total ram usage:        0 bytes
 17333 ;; Hardware stack levels used: 1
 17334 ;; Hardware stack levels required when called: 3
 17335 ;; This function calls:
 17336 ;;		Absolute function
 17337 ;;		_TMR5_DefaultGateInterruptHandler
 17338 ;; This function is called by:
 17339 ;;		Interrupt level 2
 17340 ;; This function uses a non-reentrant model
 17341 ;;
 17342                           
 17343                           	psect	text100
 17344  005F30                     __ptext100:
 17345                           	callstack 0
 17346  005F30                     _TMR5_GATE_ISR:
 17347                           	callstack 12
 17348  005F30                     
 17349                           ;mcc_generated_files/tmr5.c: 178:     PIR8bits.TMR5GIF = 0;
 17350  005F30  0139               	movlb	57	; () banked
 17351  005F32  9FA8               	bcf	168,7,b	;volatile
 17352  005F34                     
 17353                           ; BSR set to: 57
 17354                           ;mcc_generated_files/tmr5.c: 180:     if(TMR5_GateInterruptHandler)
 17355  005F34  0101               	movlb	1	; () banked
 17356  005F36  5192               	movf	_TMR5_GateInterruptHandler& (0+255),w,b
 17357  005F38  1193               	iorwf	(_TMR5_GateInterruptHandler+1)& (0+255),w,b
 17358  005F3A  B4D8               	btfsc	status,2,c
 17359  005F3C  EFA2  F02F         	goto	i2u745_41
 17360  005F40  EFA4  F02F         	goto	i2u745_40
 17361  005F44                     i2u745_41:
 17362  005F44  EFB0  F02F         	goto	i2l552
 17363  005F48                     i2u745_40:
 17364  005F48                     
 17365                           ; BSR set to: 1
 17366                           ;mcc_generated_files/tmr5.c: 181:     {;mcc_generated_files/tmr5.c: 182:         TMR5_Ga
      +                          teInterruptHandler();
 17367  005F48  D802               	call	i2u746_48
 17368  005F4A  EFB0  F02F         	goto	i2u746_49
 17369  005F4E                     i2u746_48:
 17370  005F4E  0005               	push	
 17371  005F50  6EFA               	movwf	pclath,c
 17372  005F52  5192               	movf	_TMR5_GateInterruptHandler& (0+255),w,b
 17373  005F54  6EFD               	movwf	tosl,c
 17374  005F56  5193               	movf	(_TMR5_GateInterruptHandler+1)& (0+255),w,b
 17375  005F58  6EFE               	movwf	tosh,c
 17376  005F5A  6AFF               	clrf	tosu,c
 17377  005F5C  50FA               	movf	pclath,w,c
 17378  005F5E  0012               	return		;indir
 17379  005F60                     i2u746_49:
 17380  005F60                     i2l552:
 17381  005F60  0011               	retfie		f
 17382  005F62                     __end_of_TMR5_GATE_ISR:
 17383                           	callstack 0
 17384                           
 17385 ;; *************** function _TMR5_DefaultGateInterruptHandler *****************
 17386 ;; Defined at:
 17387 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 17388 ;; Parameters:    Size  Location     Type
 17389 ;;		None
 17390 ;; Auto vars:     Size  Location     Type
 17391 ;;		None
 17392 ;; Return value:  Size  Location     Type
 17393 ;;                  1    wreg      void 
 17394 ;; Registers used:
 17395 ;;		wreg, status,2, status,0, cstack
 17396 ;; Tracked objects:
 17397 ;;		On entry : 0/0
 17398 ;;		On exit  : 0/0
 17399 ;;		Unchanged: 0/0
 17400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17404 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17405 ;;Total ram usage:        0 bytes
 17406 ;; Hardware stack levels used: 1
 17407 ;; Hardware stack levels required when called: 2
 17408 ;; This function calls:
 17409 ;;		_TMR5_ReadTimer
 17410 ;;		_TMR5_Reload
 17411 ;; This function is called by:
 17412 ;;		_TMR5_Initialize
 17413 ;;		_TMR5_GATE_ISR
 17414 ;; This function uses a non-reentrant model
 17415 ;;
 17416                           
 17417                           	psect	text101
 17418  006184                     __ptext101:
 17419                           	callstack 0
 17420  006184                     _TMR5_DefaultGateInterruptHandler:
 17421                           	callstack 12
 17422  006184                     
 17423                           ;mcc_generated_files/tmr5.c: 194:     distFront = TMR5_ReadTimer();
 17424  006184  ECA0  F030         	call	_TMR5_ReadTimer	;wreg free
 17425  006188  C009  F0FD         	movff	?_TMR5_ReadTimer,_distFront	;volatile
 17426  00618C  C00A  F0FE         	movff	?_TMR5_ReadTimer+1,_distFront+1	;volatile
 17427  006190                     
 17428                           ;mcc_generated_files/tmr5.c: 195:     distFront >>= 1;
 17429  006190  0100               	movlb	0	; () banked
 17430  006192  90D8               	bcf	status,0,c
 17431  006194  33FE               	rrcf	(_distFront+1)& (0+255),f,b	;volatile
 17432  006196  33FD               	rrcf	_distFront& (0+255),f,b	;volatile
 17433  006198                     
 17434                           ; BSR set to: 0
 17435                           ;mcc_generated_files/tmr5.c: 196:     TMR5_Reload();
 17436  006198  EC23  F031         	call	_TMR5_Reload	;wreg free
 17437  00619C                     
 17438                           ;mcc_generated_files/tmr5.c: 197:     PIR8bits.TMR5GIF = 0;
 17439  00619C  0139               	movlb	57	; () banked
 17440  00619E  9FA8               	bcf	168,7,b	;volatile
 17441  0061A0                     
 17442                           ; BSR set to: 57
 17443  0061A0  0012               	return		;funcret
 17444  0061A2                     __end_of_TMR5_DefaultGateInterruptHandler:
 17445                           	callstack 0
 17446                           
 17447 ;; *************** function _TMR5_Reload *****************
 17448 ;; Defined at:
 17449 ;;		line 155 in file "mcc_generated_files/tmr5.c"
 17450 ;; Parameters:    Size  Location     Type
 17451 ;;		None
 17452 ;; Auto vars:     Size  Location     Type
 17453 ;;		None
 17454 ;; Return value:  Size  Location     Type
 17455 ;;                  1    wreg      void 
 17456 ;; Registers used:
 17457 ;;		wreg, status,2, cstack
 17458 ;; Tracked objects:
 17459 ;;		On entry : 0/0
 17460 ;;		On exit  : 0/0
 17461 ;;		Unchanged: 0/0
 17462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17466 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17467 ;;Total ram usage:        0 bytes
 17468 ;; Hardware stack levels used: 1
 17469 ;; Hardware stack levels required when called: 1
 17470 ;; This function calls:
 17471 ;;		_TMR5_WriteTimer
 17472 ;; This function is called by:
 17473 ;;		_TMR5_DefaultGateInterruptHandler
 17474 ;; This function uses a non-reentrant model
 17475 ;;
 17476                           
 17477                           	psect	text102
 17478  006246                     __ptext102:
 17479                           	callstack 0
 17480  006246                     _TMR5_Reload:
 17481                           	callstack 12
 17482  006246                     
 17483                           ;mcc_generated_files/tmr5.c: 157:     TMR5_WriteTimer(timer5ReloadVal);
 17484  006246  C194  F009         	movff	_timer5ReloadVal,TMR5_WriteTimer@timerVal	;volatile
 17485  00624A  C195  F00A         	movff	_timer5ReloadVal+1,TMR5_WriteTimer@timerVal+1	;volatile
 17486  00624E  EC50  F030         	call	_TMR5_WriteTimer	;wreg free
 17487  006252  0012               	return		;funcret
 17488  006254                     __end_of_TMR5_Reload:
 17489                           	callstack 0
 17490                           
 17491 ;; *************** function _TMR5_WriteTimer *****************
 17492 ;; Defined at:
 17493 ;;		line 133 in file "mcc_generated_files/tmr5.c"
 17494 ;; Parameters:    Size  Location     Type
 17495 ;;  timerVal        2    8[COMRAM] unsigned short 
 17496 ;; Auto vars:     Size  Location     Type
 17497 ;;		None
 17498 ;; Return value:  Size  Location     Type
 17499 ;;                  1    wreg      void 
 17500 ;; Registers used:
 17501 ;;		wreg, status,2
 17502 ;; Tracked objects:
 17503 ;;		On entry : 0/0
 17504 ;;		On exit  : 0/0
 17505 ;;		Unchanged: 0/0
 17506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17507 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17510 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17511 ;;Total ram usage:        2 bytes
 17512 ;; Hardware stack levels used: 1
 17513 ;; This function calls:
 17514 ;;		Nothing
 17515 ;; This function is called by:
 17516 ;;		_TMR5_Reload
 17517 ;; This function uses a non-reentrant model
 17518 ;;
 17519                           
 17520                           	psect	text103
 17521  0060A0                     __ptext103:
 17522                           	callstack 0
 17523  0060A0                     _TMR5_WriteTimer:
 17524                           	callstack 12
 17525  0060A0                     
 17526                           ;mcc_generated_files/tmr5.c: 133: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 134: {;mcc_generated_files/tmr5.c: 135:     if (T5CONbits.NOT_SYNC == 1)
 17527  0060A0  A49A               	btfss	154,2,c	;volatile
 17528  0060A2  EF55  F030         	goto	i2u660_41
 17529  0060A6  EF57  F030         	goto	i2u660_40
 17530  0060AA                     i2u660_41:
 17531  0060AA  EF60  F030         	goto	i2l6697
 17532  0060AE                     i2u660_40:
 17533  0060AE                     
 17534                           ;mcc_generated_files/tmr5.c: 136:     {;mcc_generated_files/tmr5.c: 138:         T5CONbi
      +                          ts.TMR5ON = 0;
 17535  0060AE  909A               	bcf	154,0,c	;volatile
 17536  0060B0                     
 17537                           ;mcc_generated_files/tmr5.c: 141:         TMR5H = (uint8_t)(timerVal >> 8);
 17538  0060B0  500A               	movf	(TMR5_WriteTimer@timerVal+1)^0,w,c
 17539  0060B2  6E99               	movwf	153,c	;volatile
 17540  0060B4                     
 17541                           ;mcc_generated_files/tmr5.c: 142:         TMR5L = (uint8_t)timerVal;
 17542  0060B4  0060  F027  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
 17543  0060BA                     
 17544                           ;mcc_generated_files/tmr5.c: 145:         T5CONbits.TMR5ON =1;
 17545  0060BA  809A               	bsf	154,0,c	;volatile
 17546                           
 17547                           ;mcc_generated_files/tmr5.c: 146:     }
 17548  0060BC  EF65  F030         	goto	i2l534
 17549  0060C0                     i2l6697:
 17550                           
 17551                           ;mcc_generated_files/tmr5.c: 148:     {;mcc_generated_files/tmr5.c: 150:         TMR5H =
      +                           (uint8_t)(timerVal >> 8);
 17552  0060C0  500A               	movf	(TMR5_WriteTimer@timerVal+1)^0,w,c
 17553  0060C2  6E99               	movwf	153,c	;volatile
 17554  0060C4                     
 17555                           ;mcc_generated_files/tmr5.c: 151:         TMR5L = (uint8_t)timerVal;
 17556  0060C4  0060  F027  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
 17557  0060CA                     i2l534:
 17558  0060CA  0012               	return		;funcret
 17559  0060CC                     __end_of_TMR5_WriteTimer:
 17560                           	callstack 0
 17561                           
 17562 ;; *************** function _TMR5_ReadTimer *****************
 17563 ;; Defined at:
 17564 ;;		line 117 in file "mcc_generated_files/tmr5.c"
 17565 ;; Parameters:    Size  Location     Type
 17566 ;;		None
 17567 ;; Auto vars:     Size  Location     Type
 17568 ;;  readVal         2   12[COMRAM] unsigned short 
 17569 ;;  readValLow      1   15[COMRAM] unsigned char 
 17570 ;;  readValHigh     1   14[COMRAM] unsigned char 
 17571 ;; Return value:  Size  Location     Type
 17572 ;;                  2    8[COMRAM] unsigned short 
 17573 ;; Registers used:
 17574 ;;		wreg, status,2
 17575 ;; Tracked objects:
 17576 ;;		On entry : 0/0
 17577 ;;		On exit  : 0/0
 17578 ;;		Unchanged: 0/0
 17579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17580 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17581 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17582 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17583 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17584 ;;Total ram usage:        8 bytes
 17585 ;; Hardware stack levels used: 1
 17586 ;; This function calls:
 17587 ;;		Nothing
 17588 ;; This function is called by:
 17589 ;;		_TMR5_DefaultGateInterruptHandler
 17590 ;; This function uses a non-reentrant model
 17591 ;;
 17592                           
 17593                           	psect	text104
 17594  006140                     __ptext104:
 17595                           	callstack 0
 17596  006140                     _TMR5_ReadTimer:
 17597                           	callstack 13
 17598  006140                     
 17599                           ;mcc_generated_files/tmr5.c: 119:     uint16_t readVal;;mcc_generated_files/tmr5.c: 120:
      +                               uint8_t readValHigh;;mcc_generated_files/tmr5.c: 121:     uint8_t readValLow;;mcc_g
      +                          enerated_files/tmr5.c: 123:     T5CONbits.T5RD16 = 1;
 17600  006140  829A               	bsf	154,1,c	;volatile
 17601                           
 17602                           ;mcc_generated_files/tmr5.c: 125:     readValLow = TMR5L;
 17603  006142  006F FE60  F010    	movff	16280,TMR5_ReadTimer@readValLow	;volatile
 17604                           
 17605                           ;mcc_generated_files/tmr5.c: 126:     readValHigh = TMR5H;
 17606  006148  006F FE64  F00F    	movff	16281,TMR5_ReadTimer@readValHigh	;volatile
 17607  00614E                     
 17608                           ;mcc_generated_files/tmr5.c: 128:     readVal = ((uint16_t)readValHigh << 8) | readValLo
      +                          w;
 17609  00614E  500F               	movf	TMR5_ReadTimer@readValHigh^0,w,c
 17610  006150  6E0B               	movwf	??_TMR5_ReadTimer^0,c
 17611  006152  5010               	movf	TMR5_ReadTimer@readValLow^0,w,c
 17612  006154  6E0D               	movwf	TMR5_ReadTimer@readVal^0,c
 17613  006156  C00B  F00E         	movff	??_TMR5_ReadTimer,TMR5_ReadTimer@readVal+1
 17614  00615A                     
 17615                           ;mcc_generated_files/tmr5.c: 130:     return readVal;
 17616  00615A  C00D  F009         	movff	TMR5_ReadTimer@readVal,?_TMR5_ReadTimer
 17617  00615E  C00E  F00A         	movff	TMR5_ReadTimer@readVal+1,?_TMR5_ReadTimer+1
 17618  006162  0012               	return		;funcret
 17619  006164                     __end_of_TMR5_ReadTimer:
 17620                           	callstack 0
 17621                           
 17622 ;; *************** function _SMT1_PR_ACQ_ISR *****************
 17623 ;; Defined at:
 17624 ;;		line 192 in file "mcc_generated_files/smt1.c"
 17625 ;; Parameters:    Size  Location     Type
 17626 ;;		None
 17627 ;; Auto vars:     Size  Location     Type
 17628 ;;		None
 17629 ;; Return value:  Size  Location     Type
 17630 ;;                  1    wreg      void 
 17631 ;; Registers used:
 17632 ;;		wreg, status,2, status,0
 17633 ;; Tracked objects:
 17634 ;;		On entry : 0/0
 17635 ;;		On exit  : 0/0
 17636 ;;		Unchanged: 0/0
 17637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17641 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17642 ;;Total ram usage:        0 bytes
 17643 ;; Hardware stack levels used: 1
 17644 ;; This function calls:
 17645 ;;		Nothing
 17646 ;; This function is called by:
 17647 ;;		Interrupt level 2
 17648 ;; This function uses a non-reentrant model
 17649 ;;
 17650                           
 17651                           	psect	text105
 17652  005A30                     __ptext105:
 17653                           	callstack 0
 17654  005A30                     _SMT1_PR_ACQ_ISR:
 17655                           	callstack 15
 17656  005A30                     
 17657                           ;mcc_generated_files/smt1.c: 196:     PIR1bits.SMT1PRAIF = 0;
 17658  005A30  0139               	movlb	57	; () banked
 17659  005A32  9DA1               	bcf	161,6,b	;volatile
 17660  005A34                     
 17661                           ; BSR set to: 57
 17662                           ;mcc_generated_files/smt1.c: 197:     smtPeriod = SMT1CPR;
 17663  005A34  013F               	movlb	63	; () banked
 17664  005A36  5115               	movf	21,w,b	;volatile
 17665  005A38  6E48               	movwf	_smtPeriod^0,c	;volatile
 17666  005A3A  5116               	movf	22,w,b	;volatile
 17667  005A3C  6E49               	movwf	(_smtPeriod+1)^0,c	;volatile
 17668  005A3E  5117               	movf	23,w,b	;volatile
 17669  005A40  6E4A               	movwf	(_smtPeriod+2)^0,c	;volatile
 17670  005A42  6A4B               	clrf	(_smtPeriod+3)^0,c	;volatile
 17671  005A44                     
 17672                           ; BSR set to: 63
 17673                           ;mcc_generated_files/smt1.c: 198:     if(CLC3CONbits.LC3OUT) smtWay++;
 17674  005A44  013C               	movlb	60	; () banked
 17675  005A46  AB60               	btfss	96,5,b	;volatile
 17676  005A48  EF28  F02D         	goto	i2u748_41
 17677  005A4C  EF2A  F02D         	goto	i2u748_40
 17678  005A50                     i2u748_41:
 17679  005A50  EF33  F02D         	goto	i2l7423
 17680  005A54                     i2u748_40:
 17681  005A54                     
 17682                           ; BSR set to: 60
 17683  005A54  0E01               	movlw	1
 17684  005A56  0101               	movlb	1	; () banked
 17685  005A58  2720               	addwf	_smtWay& (0+255),f,b	;volatile
 17686  005A5A  0E00               	movlw	0
 17687  005A5C  2321               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 17688  005A5E  2322               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 17689  005A60  2323               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 17690  005A62  EF3C  F02D         	goto	i2l856
 17691  005A66                     i2l7423:
 17692                           
 17693                           ; BSR set to: 60
 17694  005A66  0EFF               	movlw	255
 17695  005A68  0101               	movlb	1	; () banked
 17696  005A6A  2720               	addwf	_smtWay& (0+255),f,b	;volatile
 17697  005A6C  0EFF               	movlw	255
 17698  005A6E  2321               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 17699  005A70  0EFF               	movlw	255
 17700  005A72  2322               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 17701  005A74  0EFF               	movlw	255
 17702  005A76  2323               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 17703  005A78                     i2l856:
 17704                           
 17705                           ; BSR set to: 1
 17706  005A78  0011               	retfie		f
 17707  005A7A                     __end_of_SMT1_PR_ACQ_ISR:
 17708                           	callstack 0
 17709                           
 17710 ;; *************** function _SMT1_PW_ACQ_ISR *****************
 17711 ;; Defined at:
 17712 ;;		line 203 in file "mcc_generated_files/smt1.c"
 17713 ;; Parameters:    Size  Location     Type
 17714 ;;		None
 17715 ;; Auto vars:     Size  Location     Type
 17716 ;;		None
 17717 ;; Return value:  Size  Location     Type
 17718 ;;                  1    wreg      void 
 17719 ;; Registers used:
 17720 ;;		wreg, status,2, status,0
 17721 ;; Tracked objects:
 17722 ;;		On entry : 0/0
 17723 ;;		On exit  : 0/0
 17724 ;;		Unchanged: 0/0
 17725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17729 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17730 ;;Total ram usage:        0 bytes
 17731 ;; Hardware stack levels used: 1
 17732 ;; This function calls:
 17733 ;;		Nothing
 17734 ;; This function is called by:
 17735 ;;		Interrupt level 2
 17736 ;; This function uses a non-reentrant model
 17737 ;;
 17738                           
 17739                           	psect	text106
 17740  0058FC                     __ptext106:
 17741                           	callstack 0
 17742  0058FC                     _SMT1_PW_ACQ_ISR:
 17743                           	callstack 15
 17744  0058FC                     
 17745                           ;mcc_generated_files/smt1.c: 207:     PIR1bits.SMT1PWAIF = 0;
 17746  0058FC  0139               	movlb	57	; () banked
 17747  0058FE  9FA1               	bcf	161,7,b	;volatile
 17748  005900                     
 17749                           ; BSR set to: 57
 17750                           ;mcc_generated_files/smt1.c: 208:     smtDuty = SMT1CPW;
 17751  005900  013F               	movlb	63	; () banked
 17752  005902  5118               	movf	24,w,b	;volatile
 17753  005904  0101               	movlb	1	; () banked
 17754  005906  6F24               	movwf	_smtDuty& (0+255),b	;volatile
 17755  005908  013F               	movlb	63	; () banked
 17756  00590A  5119               	movf	25,w,b	;volatile
 17757  00590C  0101               	movlb	1	; () banked
 17758  00590E  6F25               	movwf	(_smtDuty+1)& (0+255),b	;volatile
 17759  005910  013F               	movlb	63	; () banked
 17760  005912  511A               	movf	26,w,b	;volatile
 17761  005914  0101               	movlb	1	; () banked
 17762  005916  6F26               	movwf	(_smtDuty+2)& (0+255),b	;volatile
 17763  005918  6B27               	clrf	(_smtDuty+3)& (0+255),b	;volatile
 17764  00591A                     
 17765                           ; BSR set to: 1
 17766                           ;mcc_generated_files/smt1.c: 209:     if(CLC3CONbits.LC3OUT) smtWay++;
 17767  00591A  013C               	movlb	60	; () banked
 17768  00591C  AB60               	btfss	96,5,b	;volatile
 17769  00591E  EF93  F02C         	goto	i2u749_41
 17770  005922  EF95  F02C         	goto	i2u749_40
 17771  005926                     i2u749_41:
 17772  005926  EF9E  F02C         	goto	i2l7433
 17773  00592A                     i2u749_40:
 17774  00592A                     
 17775                           ; BSR set to: 60
 17776  00592A  0E01               	movlw	1
 17777  00592C  0101               	movlb	1	; () banked
 17778  00592E  2720               	addwf	_smtWay& (0+255),f,b	;volatile
 17779  005930  0E00               	movlw	0
 17780  005932  2321               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 17781  005934  2322               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 17782  005936  2323               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 17783  005938  EFA7  F02C         	goto	i2l863
 17784  00593C                     i2l7433:
 17785                           
 17786                           ; BSR set to: 60
 17787  00593C  0EFF               	movlw	255
 17788  00593E  0101               	movlb	1	; () banked
 17789  005940  2720               	addwf	_smtWay& (0+255),f,b	;volatile
 17790  005942  0EFF               	movlw	255
 17791  005944  2321               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 17792  005946  0EFF               	movlw	255
 17793  005948  2322               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 17794  00594A  0EFF               	movlw	255
 17795  00594C  2323               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 17796  00594E                     i2l863:
 17797                           
 17798                           ; BSR set to: 1
 17799  00594E  0011               	retfie		f
 17800  005950                     __end_of_SMT1_PW_ACQ_ISR:
 17801                           	callstack 0
 17802                           
 17803 ;; *************** function _SMT1_Overflow_ISR *****************
 17804 ;; Defined at:
 17805 ;;		line 213 in file "mcc_generated_files/smt1.c"
 17806 ;; Parameters:    Size  Location     Type
 17807 ;;		None
 17808 ;; Auto vars:     Size  Location     Type
 17809 ;;		None
 17810 ;; Return value:  Size  Location     Type
 17811 ;;                  1    wreg      void 
 17812 ;; Registers used:
 17813 ;;		wreg, status,2
 17814 ;; Tracked objects:
 17815 ;;		On entry : 0/0
 17816 ;;		On exit  : 0/0
 17817 ;;		Unchanged: 0/0
 17818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17822 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17823 ;;Total ram usage:        0 bytes
 17824 ;; Hardware stack levels used: 1
 17825 ;; This function calls:
 17826 ;;		Nothing
 17827 ;; This function is called by:
 17828 ;;		Interrupt level 2
 17829 ;; This function uses a non-reentrant model
 17830 ;;
 17831                           
 17832                           	psect	text107
 17833  0060F4                     __ptext107:
 17834                           	callstack 0
 17835  0060F4                     _SMT1_Overflow_ISR:
 17836                           	callstack 15
 17837  0060F4                     
 17838                           ;mcc_generated_files/smt1.c: 217:     PIR1bits.SMT1IF = 0;
 17839  0060F4  0139               	movlb	57	; () banked
 17840  0060F6  9BA1               	bcf	161,5,b	;volatile
 17841  0060F8                     
 17842                           ; BSR set to: 57
 17843                           ;mcc_generated_files/smt1.c: 218:     smtPeriod = 0;
 17844  0060F8  0E00               	movlw	0
 17845  0060FA  6E48               	movwf	_smtPeriod^0,c	;volatile
 17846  0060FC  0E00               	movlw	0
 17847  0060FE  6E49               	movwf	(_smtPeriod+1)^0,c	;volatile
 17848  006100  0E00               	movlw	0
 17849  006102  6E4A               	movwf	(_smtPeriod+2)^0,c	;volatile
 17850  006104  0E00               	movlw	0
 17851  006106  6E4B               	movwf	(_smtPeriod+3)^0,c	;volatile
 17852                           
 17853                           ;mcc_generated_files/smt1.c: 219:     smtDuty = 0;
 17854  006108  0E00               	movlw	0
 17855  00610A  0101               	movlb	1	; () banked
 17856  00610C  6F24               	movwf	_smtDuty& (0+255),b	;volatile
 17857  00610E  0E00               	movlw	0
 17858  006110  6F25               	movwf	(_smtDuty+1)& (0+255),b	;volatile
 17859  006112  0E00               	movlw	0
 17860  006114  6F26               	movwf	(_smtDuty+2)& (0+255),b	;volatile
 17861  006116  0E00               	movlw	0
 17862  006118  6F27               	movwf	(_smtDuty+3)& (0+255),b	;volatile
 17863  00611A                     
 17864                           ; BSR set to: 1
 17865  00611A  0011               	retfie		f
 17866  00611C                     __end_of_SMT1_Overflow_ISR:
 17867                           	callstack 0
 17868                           
 17869                           ;
 17870                           ; Interrupt Vector Table @ 0x8
 17871                           ;
 17872                           
 17873                           	psect	ivt0x8
 17874  000008                     __pivt0x8:
 17875                           	callstack 0
 17876  000008                     ivt0x8_base:
 17877                           	callstack 0
 17878                           
 17879                           ; Vector 0 : SWINT
 17880  000008  18B4               	dw	_Default_ISR shr (0+2)
 17881                           
 17882                           ; Vector 1 : HLVD
 17883  00000A  18B4               	dw	_Default_ISR shr (0+2)
 17884                           
 17885                           ; Vector 2 : OSF
 17886  00000C  18B4               	dw	_Default_ISR shr (0+2)
 17887                           
 17888                           ; Vector 3 : CSW
 17889  00000E  18B4               	dw	_Default_ISR shr (0+2)
 17890                           
 17891                           ; Vector 4 : NVM
 17892  000010  18B4               	dw	_Default_ISR shr (0+2)
 17893                           
 17894                           ; Vector 5 : SCAN
 17895  000012  18B4               	dw	_Default_ISR shr (0+2)
 17896                           
 17897                           ; Vector 6 : CRC
 17898  000014  18B4               	dw	_Default_ISR shr (0+2)
 17899                           
 17900                           ; Vector 7 : IOC
 17901  000016  18B4               	dw	_Default_ISR shr (0+2)
 17902                           
 17903                           ; Vector 8 : INT0
 17904  000018  18B4               	dw	_Default_ISR shr (0+2)
 17905                           
 17906                           ; Vector 9 : ZCD
 17907  00001A  18B4               	dw	_Default_ISR shr (0+2)
 17908                           
 17909                           ; Vector 10 : AD
 17910  00001C  18B4               	dw	_Default_ISR shr (0+2)
 17911                           
 17912                           ; Vector 11 : ADT
 17913  00001E  18B4               	dw	_Default_ISR shr (0+2)
 17914                           
 17915                           ; Vector 12 : CMP1
 17916  000020  18B4               	dw	_Default_ISR shr (0+2)
 17917                           
 17918                           ; Vector 13 : SMT1
 17919  000022  183D               	dw	_SMT1_Overflow_ISR shr (0+2)
 17920                           
 17921                           ; Vector 14 : SMT1PRA
 17922  000024  168C               	dw	_SMT1_PR_ACQ_ISR shr (0+2)
 17923                           
 17924                           ; Vector 15 : SMT1PRW
 17925  000026  163F               	dw	_SMT1_PW_ACQ_ISR shr (0+2)
 17926                           
 17927                           ; Vector 16 : DMA1SCNT
 17928  000028  18B4               	dw	_Default_ISR shr (0+2)
 17929                           
 17930                           ; Vector 17 : DMA1DCNT
 17931  00002A  18B4               	dw	_Default_ISR shr (0+2)
 17932                           
 17933                           ; Vector 18 : DMA1OR
 17934  00002C  18B4               	dw	_Default_ISR shr (0+2)
 17935                           
 17936                           ; Vector 19 : DMA1A
 17937  00002E  18B4               	dw	_Default_ISR shr (0+2)
 17938                           
 17939                           ; Vector 20 : SPI1RX
 17940  000030  18B4               	dw	_Default_ISR shr (0+2)
 17941                           
 17942                           ; Vector 21 : SPI1TX
 17943  000032  18B4               	dw	_Default_ISR shr (0+2)
 17944                           
 17945                           ; Vector 22 : SPI1
 17946  000034  18B4               	dw	_Default_ISR shr (0+2)
 17947                           
 17948                           ; Vector 23 : I2C1RX
 17949  000036  18B4               	dw	_Default_ISR shr (0+2)
 17950                           
 17951                           ; Vector 24 : I2C1TX
 17952  000038  18B4               	dw	_Default_ISR shr (0+2)
 17953                           
 17954                           ; Vector 25 : I2C1
 17955  00003A  18B4               	dw	_Default_ISR shr (0+2)
 17956                           
 17957                           ; Vector 26 : I2C1E
 17958  00003C  18B4               	dw	_Default_ISR shr (0+2)
 17959                           
 17960                           ; Vector 27 : U1RX
 17961  00003E  1710               	dw	_UART1_rx_vect_isr shr (0+2)
 17962                           
 17963                           ; Vector 28 : U1TX
 17964  000040  1701               	dw	_UART1_tx_vect_isr shr (0+2)
 17965                           
 17966                           ; Vector 29 : U1E
 17967  000042  18B4               	dw	_Default_ISR shr (0+2)
 17968                           
 17969                           ; Vector 30 : U1
 17970  000044  18B4               	dw	_Default_ISR shr (0+2)
 17971                           
 17972                           ; Vector 31 : TMR0
 17973  000046  18B4               	dw	_Default_ISR shr (0+2)
 17974                           
 17975                           ; Vector 32 : TMR1
 17976  000048  18B4               	dw	_Default_ISR shr (0+2)
 17977                           
 17978                           ; Vector 33 : TMR1G
 17979  00004A  18B4               	dw	_Default_ISR shr (0+2)
 17980                           
 17981                           ; Vector 34 : TMR2
 17982  00004C  18B4               	dw	_Default_ISR shr (0+2)
 17983                           
 17984                           ; Vector 35 : CCP1
 17985  00004E  18B4               	dw	_Default_ISR shr (0+2)
 17986                           
 17987                           ; Vector 36 : Undefined
 17988  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 17989                           
 17990                           ; Vector 37 : NCO1
 17991  000052  18B4               	dw	_Default_ISR shr (0+2)
 17992                           
 17993                           ; Vector 38 : CWG1
 17994  000054  18B4               	dw	_Default_ISR shr (0+2)
 17995                           
 17996                           ; Vector 39 : CLC1
 17997  000056  18B4               	dw	_Default_ISR shr (0+2)
 17998                           
 17999                           ; Vector 40 : INT1
 18000  000058  18B4               	dw	_Default_ISR shr (0+2)
 18001                           
 18002                           ; Vector 41 : CMP2
 18003  00005A  18B4               	dw	_Default_ISR shr (0+2)
 18004                           
 18005                           ; Vector 42 : DMA2SCNT
 18006  00005C  18B4               	dw	_Default_ISR shr (0+2)
 18007                           
 18008                           ; Vector 43 : DMA2DCNT
 18009  00005E  18B4               	dw	_Default_ISR shr (0+2)
 18010                           
 18011                           ; Vector 44 : DMA2OR
 18012  000060  18B4               	dw	_Default_ISR shr (0+2)
 18013                           
 18014                           ; Vector 45 : DMA2A
 18015  000062  18B4               	dw	_Default_ISR shr (0+2)
 18016                           
 18017                           ; Vector 46 : I2C2RX
 18018  000064  18B4               	dw	_Default_ISR shr (0+2)
 18019                           
 18020                           ; Vector 47 : I2C2TX
 18021  000066  18B4               	dw	_Default_ISR shr (0+2)
 18022                           
 18023                           ; Vector 48 : I2C2
 18024  000068  18B4               	dw	_Default_ISR shr (0+2)
 18025                           
 18026                           ; Vector 49 : I2C2E
 18027  00006A  18B4               	dw	_Default_ISR shr (0+2)
 18028                           
 18029                           ; Vector 50 : U2RX
 18030  00006C  18B4               	dw	_Default_ISR shr (0+2)
 18031                           
 18032                           ; Vector 51 : U2TX
 18033  00006E  18B4               	dw	_Default_ISR shr (0+2)
 18034                           
 18035                           ; Vector 52 : U2E
 18036  000070  18B4               	dw	_Default_ISR shr (0+2)
 18037                           
 18038                           ; Vector 53 : U2
 18039  000072  18B4               	dw	_Default_ISR shr (0+2)
 18040                           
 18041                           ; Vector 54 : TMR3
 18042  000074  18B4               	dw	_Default_ISR shr (0+2)
 18043                           
 18044                           ; Vector 55 : TMR3G
 18045  000076  18B4               	dw	_Default_ISR shr (0+2)
 18046                           
 18047                           ; Vector 56 : TMR4
 18048  000078  16E3               	dw	_TMR4_ISR shr (0+2)
 18049                           
 18050                           ; Vector 57 : CCP2
 18051  00007A  18B4               	dw	_Default_ISR shr (0+2)
 18052                           
 18053                           ; Vector 58 : Undefined
 18054  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 18055                           
 18056                           ; Vector 59 : CWG2
 18057  00007E  18B4               	dw	_Default_ISR shr (0+2)
 18058                           
 18059                           ; Vector 60 : CLC2
 18060  000080  18B4               	dw	_Default_ISR shr (0+2)
 18061                           
 18062                           ; Vector 61 : INT2
 18063  000082  18B4               	dw	_Default_ISR shr (0+2)
 18064                           
 18065                           ; Vector 62 : Undefined
 18066  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 18067                           
 18068                           ; Vector 63 : Undefined
 18069  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 18070                           
 18071                           ; Vector 64 : Undefined
 18072  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 18073                           
 18074                           ; Vector 65 : Undefined
 18075  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 18076                           
 18077                           ; Vector 66 : Undefined
 18078  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 18079                           
 18080                           ; Vector 67 : Undefined
 18081  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 18082                           
 18083                           ; Vector 68 : Undefined
 18084  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 18085                           
 18086                           ; Vector 69 : Undefined
 18087  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 18088                           
 18089                           ; Vector 70 : TMR5
 18090  000094  18B4               	dw	_Default_ISR shr (0+2)
 18091                           
 18092                           ; Vector 71 : TMR5G
 18093  000096  17CC               	dw	_TMR5_GATE_ISR shr (0+2)
 18094                           
 18095                           ; Vector 72 : TMR6
 18096  000098  18B4               	dw	_Default_ISR shr (0+2)
 18097                           
 18098                           ; Vector 73 : CCP3
 18099  00009A  17A5               	dw	_CCP3_CaptureISR shr (0+2)
 18100                           
 18101                           ; Vector 74 : CWG3
 18102  00009C  18B4               	dw	_Default_ISR shr (0+2)
 18103                           
 18104                           ; Vector 75 : CLC3
 18105  00009E  18B4               	dw	_Default_ISR shr (0+2)
 18106                           
 18107                           ; Vector 76 : Undefined
 18108  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 18109                           
 18110                           ; Vector 77 : Undefined
 18111  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 18112                           
 18113                           ; Vector 78 : Undefined
 18114  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 18115                           
 18116                           ; Vector 79 : Undefined
 18117  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 18118                           
 18119                           ; Vector 80 : CCP4
 18120  0000A8  17B2               	dw	_CCP4_CaptureISR shr (0+2)
 18121                           
 18122                           ; Vector 81 : CLC4
 18123  0000AA  18B4               	dw	_Default_ISR shr (0+2)
 18124  0000AC                     ivt0x8_undefint:
 18125                           	callstack 0
 18126  0000AC  00FF               	reset	
 18127                           
 18128                           	psect	text108
 18129  000000                     __ptext108:
 18130                           	callstack 0
 18131  000000                     
 18132                           	psect	rparam
 18133  0000                     
 18134                           	psect	idloc
 18135                           
 18136                           ;Config register IDLOC0 @ 0x200000
 18137                           ;	unspecified, using default values
 18138  200000                     	org	2097152
 18139  200000  0FFF               	dw	4095
 18140                           
 18141                           ;Config register IDLOC1 @ 0x200002
 18142                           ;	unspecified, using default values
 18143  200002                     	org	2097154
 18144  200002  0FFF               	dw	4095
 18145                           
 18146                           ;Config register IDLOC2 @ 0x200004
 18147                           ;	unspecified, using default values
 18148  200004                     	org	2097156
 18149  200004  0FFF               	dw	4095
 18150                           
 18151                           ;Config register IDLOC3 @ 0x200006
 18152                           ;	unspecified, using default values
 18153  200006                     	org	2097158
 18154  200006  0FFF               	dw	4095
 18155                           
 18156                           ;Config register IDLOC4 @ 0x200008
 18157                           ;	unspecified, using default values
 18158  200008                     	org	2097160
 18159  200008  0FFF               	dw	4095
 18160                           
 18161                           ;Config register IDLOC5 @ 0x20000A
 18162                           ;	unspecified, using default values
 18163  20000A                     	org	2097162
 18164  20000A  0FFF               	dw	4095
 18165                           
 18166                           ;Config register IDLOC6 @ 0x20000C
 18167                           ;	unspecified, using default values
 18168  20000C                     	org	2097164
 18169  20000C  0FFF               	dw	4095
 18170                           
 18171                           ;Config register IDLOC7 @ 0x20000E
 18172                           ;	unspecified, using default values
 18173  20000E                     	org	2097166
 18174  20000E  0FFF               	dw	4095
 18175                           
 18176                           	psect	config
 18177                           
 18178                           ;Config register CONFIG1L @ 0x300000
 18179                           ;	External Oscillator Selection
 18180                           ;	FEXTOSC = OFF, Oscillator not enabled
 18181                           ;	Reset Oscillator Selection
 18182                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
 18183  300000                     	org	3145728
 18184  300000  8C                 	db	140
 18185                           
 18186                           ;Config register CONFIG1H @ 0x300001
 18187                           ;	Clock out Enable bit
 18188                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 18189                           ;	PRLOCKED One-Way Set Enable bit
 18190                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
 18191                           ;	Clock Switch Enable bit
 18192                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 18193                           ;	Fail-Safe Clock Monitor Enable bit
 18194                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 18195  300001                     	org	3145729
 18196  300001  FF                 	db	255
 18197                           
 18198                           ;Config register CONFIG2L @ 0x300002
 18199                           ;	MCLR Enable bit
 18200                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 18201                           ;	Power-up timer selection bits
 18202                           ;	PWRTS = PWRT_OFF, PWRT is disabled
 18203                           ;	Multi-vector enable bit
 18204                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
 18205                           ;	IVTLOCK bit One-way set enable bit
 18206                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
 18207                           ;	Low Power BOR Enable bit
 18208                           ;	LPBOREN = OFF, ULPBOR disabled
 18209                           ;	Brown-out Reset Enable bits
 18210                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 18211  300002                     	org	3145730
 18212  300002  FF                 	db	255
 18213                           
 18214                           ;Config register CONFIG2H @ 0x300003
 18215                           ;	Brown-out Reset Voltage Selection bits
 18216                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
 18217                           ;	ZCD Disable bit
 18218                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 18219                           ;	PPSLOCK bit One-Way Set Enable bit
 18220                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
 18221                           ;	Stack Full/Underflow Reset Enable bit
 18222                           ;	STVREN = ON, Stack full/underflow will cause Reset
 18223                           ;	Debugger Enable bit
 18224                           ;	DEBUG = OFF, Background debugger disabled
 18225                           ;	Extended Instruction Set Enable bit
 18226                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 18227  300003                     	org	3145731
 18228  300003  FF                 	db	255
 18229                           
 18230                           ;Config register CONFIG3L @ 0x300004
 18231                           ;	WDT Period selection bits
 18232                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 18233                           ;	WDT operating mode
 18234                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
 18235  300004                     	org	3145732
 18236  300004  9F                 	db	159
 18237                           
 18238                           ;Config register CONFIG3H @ 0x300005
 18239                           ;	WDT Window Select bits
 18240                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 18241                           ;	WDT input clock selector
 18242                           ;	WDTCCS = SC, Software Control
 18243  300005                     	org	3145733
 18244  300005  FF                 	db	255
 18245                           
 18246                           ;Config register CONFIG4L @ 0x300006
 18247                           ;	Boot Block Size selection bits
 18248                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
 18249                           ;	Boot Block enable bit
 18250                           ;	BBEN = OFF, Boot block disabled
 18251                           ;	Storage Area Flash enable bit
 18252                           ;	SAFEN = OFF, SAF disabled
 18253                           ;	Application Block write protection bit
 18254                           ;	WRTAPP = OFF, Application Block not write protected
 18255  300006                     	org	3145734
 18256  300006  FF                 	db	255
 18257                           
 18258                           ;Config register CONFIG4H @ 0x300007
 18259                           ;	Configuration Register Write Protection bit
 18260                           ;	WRTB = OFF, Configuration registers (300000-30000Bh) not write-protected
 18261                           ;	Boot Block Write Protection bit
 18262                           ;	WRTC = OFF, Boot Block (000000-0007FFh) not write-protected
 18263                           ;	Data EEPROM Write Protection bit
 18264                           ;	WRTD = OFF, Data EEPROM not write-protected
 18265                           ;	SAF Write protection bit
 18266                           ;	WRTSAF = OFF, SAF not Write Protected
 18267                           ;	Low Voltage Programming Enable bit
 18268                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
 18269  300007                     	org	3145735
 18270  300007  FF                 	db	255
 18271                           
 18272                           ;Config register CONFIG5L @ 0x300008
 18273                           ;	PFM and Data EEPROM Code Protection bit
 18274                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
 18275  300008                     	org	3145736
 18276  300008  FF                 	db	255
 18277                           
 18278                           ;Config register CONFIG5H @ 0x300009
 18279                           ;	unspecified, using default values
 18280  300009                     	org	3145737
 18281  300009  FF                 	db	255
 18282                           tosu	equ	0x3FFF
 18283                           tosh	equ	0x3FFE
 18284                           tosl	equ	0x3FFD
 18285                           stkptr	equ	0x3FFC
 18286                           pclatu	equ	0x3FFB
 18287                           pclath	equ	0x3FFA
 18288                           pcl	equ	0x3FF9
 18289                           tblptru	equ	0x3FF8
 18290                           tblptrh	equ	0x3FF7
 18291                           tblptrl	equ	0x3FF6
 18292                           tablat	equ	0x3FF5
 18293                           prodh	equ	0x3FF4
 18294                           prodl	equ	0x3FF3
 18295                           indf0	equ	0x3FEF
 18296                           postinc0	equ	0x3FEE
 18297                           postdec0	equ	0x3FED
 18298                           preinc0	equ	0x3FEC
 18299                           plusw0	equ	0x3FEB
 18300                           fsr0h	equ	0x3FEA
 18301                           fsr0l	equ	0x3FE9
 18302                           wreg	equ	0x3FE8
 18303                           indf1	equ	0x3FE7
 18304                           postinc1	equ	0x3FE6
 18305                           postdec1	equ	0x3FE5
 18306                           preinc1	equ	0x3FE4
 18307                           plusw1	equ	0x3FE3
 18308                           fsr1h	equ	0x3FE2
 18309                           fsr1l	equ	0x3FE1
 18310                           bsr	equ	0x3FE0
 18311                           indf2	equ	0x3FDF
 18312                           postinc2	equ	0x3FDE
 18313                           postdec2	equ	0x3FDD
 18314                           preinc2	equ	0x3FDC
 18315                           plusw2	equ	0x3FDB
 18316                           fsr2h	equ	0x3FDA
 18317                           fsr2l	equ	0x3FD9
 18318                           status	equ	0x3FD8

Data Sizes:
    Strings     167
    Constant    0
    Data        0
    BSS         180
    Persistent  23
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     57      76
    BANK0           160    139     159
    BANK1           256     20     184
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_19(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_19(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_14(CODE[4]), STR_13(CODE[4]), STR_10(CODE[4]), STR_9(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_14(CODE[4]), STR_13(CODE[4]), STR_10(CODE[4]), STR_9(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S3441_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_8(CODE[14]), STR_7(CODE[13]), STR_6(CODE[14]), STR_5(CODE[16]), 
		 -> STR_4(CODE[21]), STR_3(CODE[26]), STR_2(CODE[24]), STR_1(CODE[20]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 26
		 -> STR_8(CODE[14]), STR_7(CODE[13]), STR_6(CODE[14]), STR_5(CODE[16]), 
		 -> STR_4(CODE[21]), STR_3(CODE[26]), STR_2(CODE[24]), STR_1(CODE[20]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_8(CODE[14]), STR_7(CODE[13]), STR_6(CODE[14]), STR_5(CODE[16]), 
		 -> STR_4(CODE[21]), STR_3(CODE[26]), STR_2(CODE[24]), STR_1(CODE[20]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK1[2]), 

    TMR4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_10msISR(), TMR4_DefaultInterruptHandler(), 

    TMR4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_10msISR(), TMR4_DefaultInterruptHandler(), Absolute function(), 

    TMR5_SetGateInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR5_DefaultGateInterruptHandler(), 

    TMR5_GateInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR5_DefaultGateInterruptHandler(), Absolute function(), 

    CCP4_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP4_DefaultCallBack(), 

    CCP4_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP4_DefaultCallBack(), Absolute function(), 

    CCP3_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP3_DefaultCallBack(), 

    CCP3_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP3_DefaultCallBack(), Absolute function(), 

    UART1_SetTxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    UART1_SetRxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultErrorHandler(), 

    UART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), 

    UART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), 

    UART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultErrorHandler(), 

    UART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultOverrunErrorHandler(), 

    UART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultFramingErrorHandler(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_Receive_ISR(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_Transmit_ISR(), 


Critical Paths under _main in COMRAM

    _loop->___flge
    _utoa->_pad
    _efgtoa->___fladd
    _efgtoa->___flge
    _efgtoa->_floorf
    _tolower->_isupper
    _floorf->___fldiv
    ___flsub->___fladd
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_UART1_Write
    _abs->___aomod
    _checkBatt->___flge
    _getBatteryVoltage->_ADCC_GetSingleConversion
    ___flge->___flmul
    ___fldiv->___xxtofl
    _calcSpeed->___fladd
    ___fladd->___flmul
    _setMotor->_PWM7_LoadDutyValue
    _setMotor->_PWM8_LoadDutyValue
    _actSpeed->___aldiv
    ___xxtofl->___awdiv
    ___fltol->___fladd
    ___flmul->___xxtofl
    _SYSTEM_Initialize->_TMR5_Initialize
    _UART1_Initialize->_UART1_SetErrorHandler
    _UART1_Initialize->_UART1_SetFramingErrorHandler
    _UART1_Initialize->_UART1_SetOverrunErrorHandler
    _UART1_Initialize->_UART1_SetRxInterruptHandler
    _UART1_Initialize->_UART1_SetTxInterruptHandler
    _TMR5_Initialize->_TMR5_SetGateInterruptHandler
    _TMR4_Initialize->_TMR4_SetInterruptHandler
    _CCP4_Initialize->_CCP4_SetCallBack
    _CCP3_Initialize->_CCP3_SetCallBack

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR4_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _CCP3_CaptureISR in COMRAM

    _CCP3_CaptureISR->_CCP3_DefaultCallBack

Critical Paths under _CCP4_CaptureISR in COMRAM

    _CCP4_CaptureISR->_CCP4_DefaultCallBack

Critical Paths under _TMR5_GATE_ISR in COMRAM

    _TMR5_DefaultGateInterruptHandler->_TMR5_ReadTimer
    _TMR5_Reload->_TMR5_WriteTimer

Critical Paths under _SMT1_PR_ACQ_ISR in COMRAM

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in COMRAM

    None.

Critical Paths under _SMT1_Overflow_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___fltol
    _floorf->___fldiv
    ___flsub->___fladd
    _checkBatt->_setSteering
    ___flge->___flmul
    _calcSteering->_setSteering
    _setSteering->___fltol
    _calcSpeed->___fltol
    ___fladd->___flmul
    _calcMotorPow->___fltol
    ___fltol->___fladd

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR4_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _CCP3_CaptureISR in BANK0

    None.

Critical Paths under _CCP4_CaptureISR in BANK0

    None.

Critical Paths under _TMR5_GATE_ISR in BANK0

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK0

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK0

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _loop->_checkCurveCount
    _startAccell->_printf
    _getReverse->_printf
    _checkCurveCount->_printf
    _printf->_vfprintf

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR4_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _CCP3_CaptureISR in BANK1

    None.

Critical Paths under _CCP4_CaptureISR in BANK1

    None.

Critical Paths under _TMR5_GATE_ISR in BANK1

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK1

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK1

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR4_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _CCP3_CaptureISR in BANK2

    None.

Critical Paths under _CCP4_CaptureISR in BANK2

    None.

Critical Paths under _TMR5_GATE_ISR in BANK2

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK2

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK2

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR4_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _CCP3_CaptureISR in BANK3

    None.

Critical Paths under _CCP4_CaptureISR in BANK3

    None.

Critical Paths under _TMR5_GATE_ISR in BANK3

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK3

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK3

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR4_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _CCP3_CaptureISR in BANK4

    None.

Critical Paths under _CCP4_CaptureISR in BANK4

    None.

Critical Paths under _TMR5_GATE_ISR in BANK4

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK4

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK4

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR4_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _CCP3_CaptureISR in BANK5

    None.

Critical Paths under _CCP4_CaptureISR in BANK5

    None.

Critical Paths under _TMR5_GATE_ISR in BANK5

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK5

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK5

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR4_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _CCP3_CaptureISR in BANK6

    None.

Critical Paths under _CCP4_CaptureISR in BANK6

    None.

Critical Paths under _TMR5_GATE_ISR in BANK6

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK6

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK6

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR4_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _CCP3_CaptureISR in BANK7

    None.

Critical Paths under _CCP4_CaptureISR in BANK7

    None.

Critical Paths under _TMR5_GATE_ISR in BANK7

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK7

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK7

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR4_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _CCP3_CaptureISR in BANK8

    None.

Critical Paths under _CCP4_CaptureISR in BANK8

    None.

Critical Paths under _TMR5_GATE_ISR in BANK8

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK8

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK8

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR4_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _CCP3_CaptureISR in BANK9

    None.

Critical Paths under _CCP4_CaptureISR in BANK9

    None.

Critical Paths under _TMR5_GATE_ISR in BANK9

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK9

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK9

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR4_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _CCP3_CaptureISR in BANK10

    None.

Critical Paths under _CCP4_CaptureISR in BANK10

    None.

Critical Paths under _TMR5_GATE_ISR in BANK10

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK10

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK10

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR4_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _CCP3_CaptureISR in BANK11

    None.

Critical Paths under _CCP4_CaptureISR in BANK11

    None.

Critical Paths under _TMR5_GATE_ISR in BANK11

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK11

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK11

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR4_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _CCP3_CaptureISR in BANK12

    None.

Critical Paths under _CCP4_CaptureISR in BANK12

    None.

Critical Paths under _TMR5_GATE_ISR in BANK12

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK12

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK12

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR4_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _CCP3_CaptureISR in BANK13

    None.

Critical Paths under _CCP4_CaptureISR in BANK13

    None.

Critical Paths under _TMR5_GATE_ISR in BANK13

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK13

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK13

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR4_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _CCP3_CaptureISR in BANK14

    None.

Critical Paths under _CCP4_CaptureISR in BANK14

    None.

Critical Paths under _TMR5_GATE_ISR in BANK14

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK14

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK14

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR4_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _CCP3_CaptureISR in BANK15

    None.

Critical Paths under _CCP4_CaptureISR in BANK15

    None.

Critical Paths under _TMR5_GATE_ISR in BANK15

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK15

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK15

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  211281
                  _SYSTEM_Initialize
           _TMR4_SetInterruptHandler
                               _loop
 ---------------------------------------------------------------------------------
 (1) _loop                                                 0     0      0  210134
                             ___flge
                           ___xxtofl
                       _calcMotorPow
                          _calcSpeed
                       _calcSteering
                          _checkBatt
                    _checkCurveCount
                  _getBatteryVoltage
                           _getCurve
                         _getReverse
                           _setMotor
                        _setSteering
                        _startAccell
 ---------------------------------------------------------------------------------
 (2) _startAccell                                          2     2      0   59729
                                             16 BANK1      2     2      0
                             _printf
                           _setMotor
                        _setSteering
 ---------------------------------------------------------------------------------
 (2) _getReverse                                           0     0      0   50846
                             _printf
 ---------------------------------------------------------------------------------
 (2) _getCurve                                             6     6      0      90
                                             19 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (2) _checkCurveCount                                      4     4      0   52317
                                             16 BANK1      4     4      0
                            ___lwdiv
                           ___xxtofl
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                              10     4      6   50846
                                              8 BANK1      8     2      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6   50021
                                              0 BANK1      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           46    40      6   49506
                                            103 BANK0     36    30      6
                               _dtoa
                             _efgtoa
                              _fputc
                            _isupper
                            _strncmp
                            _tolower
                               _utoa
 ---------------------------------------------------------------------------------
 (6) _utoa                                                32    22     10    5909
                                             48 COMRAM     8     8      0
                                              0 BANK0     24    14     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (7) ___lomod                                             17     1     16     412
                                             19 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (7) ___lodiv                                             25     9     16     421
                                             19 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (6) _strncmp                                             11     5      6     595
                                             19 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _efgtoa                                              68    61      7   31790
                                             35 BANK0     68    61      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (6) _tolower                                              8     6      2    1142
                                             25 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (7) _isupper                                              6     4      2     551
                                             19 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _strcpy                                              10     6      4    1037
                                             19 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (7) _floorf                                              20    16      4     669
                                             53 COMRAM     4     0      4
                                             13 BANK0     16    16      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fpclassifyf                                       14    10      4     375
                                             19 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (7) ___flsub                                              8     0      8    4187
                                             25 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flneg                                              4     0      4     155
                                             19 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (7) ___fleq                                              12     4      8     770
                                             19 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4     613
                                             19 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    6763
                                             48 COMRAM     8     8      0
                                              0 BANK0     28    18     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    4497
                                             37 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     220
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1537
                                             30 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (9) _fputc                                                9     5      4    1037
                                             21 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (10) _putch                                               1     1      0      93
                                             20 COMRAM     1     1      0
                        _UART1_Write
 ---------------------------------------------------------------------------------
 (11) _UART1_Write                                         1     1      0      62
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     183
                                             37 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     613
                                             19 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     625
                                             19 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     421
                                             19 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _checkBatt                                            0     0      0   10073
                             ___flge
                           ___xxtofl
                  _getBatteryVoltage
                        _setSteering
 ---------------------------------------------------------------------------------
 (2) _getBatteryVoltage                                    0     0      0      22
           _ADCC_GetSingleConversion
 ---------------------------------------------------------------------------------
 (3) _ADCC_GetSingleConversion                             5     3      2      22
                                             19 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (7) ___flge                                              12     4      8    1346
                                             53 COMRAM     4     4      0
                                             13 BANK0      8     0      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _calcSteering                                         4     4      0    7884
                                             44 BANK0      4     4      0
                        _setSteering
 ---------------------------------------------------------------------------------
 (3) _setSteering                                          9     6      3    7689
                                             35 BANK0      9     6      3
                 _PWM5_LoadDutyValue
                 _PWM6_LoadDutyValue
                            ___fldiv
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             25    17      8    2903
                                             41 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) _PWM6_LoadDutyValue                                   4     2      2     152
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _PWM5_LoadDutyValue                                   4     2      2     152
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _calcSpeed                                            6     6      0    9507
                                             35 BANK0      6     6      0
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (8) ___fladd                                             16     8      8    3622
                                             53 COMRAM     4     4      0
                                             13 BANK0     12     4      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _calcMotorPow                                         7     7      0    8489
                                             35 BANK0      7     7      0
                            ___awdiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                           _actSpeed
                           _setMotor
 ---------------------------------------------------------------------------------
 (3) _setMotor                                             4     2      2    1126
                                             23 COMRAM     4     2      2
                 _PWM7_LoadDutyValue
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (4) _PWM8_LoadDutyValue                                   4     2      2     332
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _PWM7_LoadDutyValue                                   4     2      2     332
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _actSpeed                                             4     2      2     629
                                             33 COMRAM     4     2      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             14     6      8     604
                                             19 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    1016
                                             27 COMRAM    14    10      4
                            ___awdiv (ARG)
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     787
                                             25 BANK0     10     6      4
                            ___awdiv (ARG)
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flmul                                             25    17      8    3953
                                             41 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                            ___awdiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     805
                                             19 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     973
                    _ADCC_Initialize
                    _CCP3_Initialize
                    _CCP4_Initialize
                    _CLC3_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM5_Initialize
                    _PWM6_Initialize
                    _PWM7_Initialize
                    _PWM8_Initialize
                    _SMT1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR4_Initialize
                    _TMR5_Initialize
                   _UART1_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0     490
              _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetOverrunErrorHandler                         2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetFramingErrorHandler                         2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetErrorHandler                                2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      2     2      0      98
                                             21 COMRAM     2     2      0
       _TMR5_SetGateInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetGateInterruptHandler                         2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0     174
           _TMR4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR4_SetInterruptHandler                             2     0      2     174
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      2     2      0       0
                                             19 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMT1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM7_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      15
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _CLC3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP4_Initialize                                      0     0      0      98
                   _CCP4_SetCallBack
 ---------------------------------------------------------------------------------
 (3) _CCP4_SetCallBack                                     2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CCP3_Initialize                                      0     0      0      98
                   _CCP3_SetCallBack
 ---------------------------------------------------------------------------------
 (3) _CCP3_SetCallBack                                     2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_tx_vect_isr                                   1     1      0       0
                                             16 COMRAM     1     1      0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_rx_vect_isr                                   1     1      0       0
                                             17 COMRAM     1     1      0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Receive_ISR                                   0     0      0       0
                   Absolute function *
          _UART1_DefaultErrorHandler *
   _UART1_DefaultFramingErrorHandler *
   _UART1_DefaultOverrunErrorHandler *
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (14) _UART1_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _UART1_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _UART1_DefaultErrorHandler                           0     0      0       0
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (14) _UART1_RxDataHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TMR4_ISR                                            1     1      0       0
                                             18 COMRAM     1     1      0
                      _TMR4_CallBack
 ---------------------------------------------------------------------------------
 (13) _TMR4_CallBack                                       0     0      0       0
                   Absolute function *
                       _TMR4_10msISR *
       _TMR4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _TMR4_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _TMR4_10msISR                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _CCP3_CaptureISR                                     2     2      0     144
                                              2 COMRAM     2     2      0
                   Absolute function *
               _CCP3_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (17) _CCP3_DefaultCallBack                                2     0      2      97
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _CCP4_CaptureISR                                     2     2      0     144
                                              6 COMRAM     2     2      0
                   Absolute function *
               _CCP4_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (17) _CCP4_DefaultCallBack                                2     0      2      97
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _TMR5_GATE_ISR                                       0     0      0     233
                   Absolute function *
   _TMR5_DefaultGateInterruptHandler *
 ---------------------------------------------------------------------------------
 (17) _TMR5_DefaultGateInterruptHandler                    0     0      0     233
                     _TMR5_ReadTimer
                        _TMR5_Reload
 ---------------------------------------------------------------------------------
 (18) _TMR5_Reload                                         0     0      0     164
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (19) _TMR5_WriteTimer                                     2     0      2     164
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (18) _TMR5_ReadTimer                                      8     6      2      69
                                              8 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _SMT1_PR_ACQ_ISR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _SMT1_PW_ACQ_ISR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _SMT1_Overflow_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
     _CCP3_Initialize
       _CCP3_SetCallBack
     _CCP4_Initialize
       _CCP4_SetCallBack
     _CLC3_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM5_Initialize
     _PWM6_Initialize
     _PWM7_Initialize
     _PWM8_Initialize
     _SMT1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
     _TMR4_Initialize
       _TMR4_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetGateInterruptHandler
     _UART1_Initialize
       _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
   _TMR4_SetInterruptHandler
   _loop
     ___flge
       ___flmul (ARG)
         ___awdiv (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
           ___lwdiv (ARG)
       ___xxtofl (ARG)
     ___xxtofl
     _calcMotorPow
       ___awdiv
       ___flmul
       ___fltol
         ___awdiv (ARG)
         ___fladd (ARG)
           ___flmul (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl
       _actSpeed
         ___aldiv
       _setMotor
         _PWM7_LoadDutyValue
         _PWM8_LoadDutyValue
     _calcSpeed
       ___fladd
       ___flmul
       ___fltol
       ___xxtofl
     _calcSteering
       _setSteering
         _PWM5_LoadDutyValue
         _PWM6_LoadDutyValue
         ___fldiv
         ___fltol
         ___xxtofl
     _checkBatt
       ___flge
       ___xxtofl
       _getBatteryVoltage
         _ADCC_GetSingleConversion
       _setSteering
     _checkCurveCount
       ___lwdiv
       ___xxtofl
       _printf
         _vfprintf
           _vfpfcnvrt
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                 _fputs
                   _fputc
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
                 ___flmul (ARG)
               ___fltol
               ___fpclassifyf
               _floorf
                 ___fldiv (ARG)
               _isupper
               _pad
               _strcpy
               _tolower
                 _isupper
             _fputc
             _isupper
             _strncmp
             _tolower
             _utoa
               ___lodiv
               ___lomod
               _pad
     _getBatteryVoltage
     _getCurve
     _getReverse
       _printf
     _setMotor
     _setSteering
     _startAccell
       _printf
       _setMotor
       _setSteering

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *
     Absolute function(Fake) *
     _UART1_DefaultErrorHandler *
       _UART1_RxDataHandler
     _UART1_DefaultFramingErrorHandler *
     _UART1_DefaultOverrunErrorHandler *
     _UART1_RxDataHandler *

 _TMR4_ISR (ROOT)
   _TMR4_CallBack
     Absolute function(Fake) *
     _TMR4_10msISR *
     _TMR4_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _CCP3_CaptureISR (ROOT)
   Absolute function(Fake) *
   _CCP3_DefaultCallBack *

 _CCP4_CaptureISR (ROOT)
   Absolute function(Fake) *
   _CCP4_DefaultCallBack *

 _TMR5_GATE_ISR (ROOT)
   Absolute function(Fake) *
   _TMR5_DefaultGateInterruptHandler *
     _TMR5_ReadTimer
     _TMR5_Reload
       _TMR5_WriteTimer

 _SMT1_PR_ACQ_ISR (ROOT)

 _SMT1_PW_ACQ_ISR (ROOT)

 _SMT1_Overflow_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FFF      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK15          100      0       0      30        0.0%
BANK15             100      0       0      31        0.0%
BITBANK14          100      0       0      28        0.0%
BANK14             100      0       0      29        0.0%
BITBANK13          100      0       0      36        0.0%
BANK13             100      0       0      27        0.0%
BITBANK12          100      0       0      35        0.0%
BANK12             100      0       0      26        0.0%
BITBANK11          100      0       0      34        0.0%
BANK11             100      0       0      25        0.0%
BITBANK10          100      0       0      33        0.0%
BANK10             100      0       0      24        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     14      B8       7       71.9%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     8B      9F       5       99.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     39      4C       1       80.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1A3      32        0.0%
DATA                 0      0     1A3       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Jan 30 09:21:54 2024

                             _CCP4_Initialize 5F92                        ??_CCP3_DefaultCallBack 0003  
                     __end_of_checkCurveCount 4F2A                                  ___fldiv@aexp 006C  
                                ___fldiv@bexp 006B                                   _startAccell 5438  
                                ___fldiv@sign 0064                                            l72 6234  
                                          l75 613E                                            l69 59E4  
                                ___awdiv@sign 0019                             ??_TMR5_WriteTimer 000B  
                 __size_of_PWM6_LoadDutyValue 0034                                           l312 589C  
                                         l404 599A                                           l308 5854  
                                         l309 586E                                           l318 625C  
                                         l520 5A2E                                           l441 5FEC  
                                         l362 627A                                           l371 6266  
                                         l188 4FF2                                           l284 5436  
                                         l365 628E                                           l359 6284  
                                         l368 6270                                           l712 5E92  
                                         l449 62B6                                           l482 5FBE  
                                         l723 61D4                                           l555 6298  
                                         l644 6046                                           l740 5E2A  
                                         l709 61EC                                           l581 5D20  
                                         l726 5E5E                                           l479 62AC  
                                         l751 6204                                           l737 621C  
                                         l754 5DF6                                           l923 61BC  
                                         l695 62A2                                           l795 5F90  
                                         l893 6072                                           _GIE 01FE97  
                                         _PR2 003FAB                                           _PR4 003F9F  
                                         _abs 5B4A                                           _pad 50B8  
                     __size_of_PMD_Initialize 0024                                  ___awmod@sign 0019  
                             _TMR2_Initialize 61A2                CCP4_SetCallBack@customCallBack 0014  
                                         tosl 003FFD                                           wreg 003FE8  
                            _CCP4_SetCallBack 62A4                                  ___flmul@aexp 0061  
                                ___flmul@bexp 0066                            _UART1_Transmit_ISR 5B06  
                                ___flmul@sign 0060                                  ___flmul@temp 006B  
                                ___flmul@prod 0067                       __end_of_CCP4_CaptureISR 5EFC  
                                ___fltol@exp1 0082                                          l1042 58F8  
                                        l2011 28C8                                          ?_abs 0026  
                                        l2020 2B5A                                          l2021 2B48  
                                        l1054 5F0C                                          l1230 45A8  
                                        l2015 2C50                                          l1320 4016  
                                        l1057 5F2C                                          l1313 442A  
                                        l2018 2AE2                                          l2114 50FC  
                                        l1314 443C                                          l2028 2C12  
                                        l2052 3D1E                                          l1325 40A0  
                                        l2117 513E                                          l2125 308E  
                                        l2302 34E8                                          l1246 46AE  
                                        l2055 3E7A                                          l1255 5600  
                                        l1263 5692                                          l1511 4002  
                                        l2119 5178                                          l2127 3096  
                                        l2312 5CB0                                          l2145 32D2  
                                        l2305 342C                                          l2209 1906  
                                        l2066 3E12                                          l1258 6244  
                                        l1274 54D6                                          l2059 3DB6  
                                        l1339 418A                                          l2163 1D56  
                                        l2243 3522                                          l2075 60F2  
                             _timer3ReloadVal 0190                                          l1524 42EE  
                                        l4101 4FA2                                          l1381 38FE  
                                        l2341 57E0                                          l2181 14C8  
                                        l2253 36F0                                          l2245 352A  
                                        l2270 2172                                          l2262 233E  
                                        l1278 4F28                                          l1286 3CB6  
                                        l4111 4FB0                                          l4103 4FA4  
                                        l1359 38EE                                          l1383 3922  
                                        l2327 556C                                          l2335 5B04  
                                        l2351 4BBA                                          l1368 4588  
                                        l1384 3936                                          l4113 4FB2  
                                        l4105 4FA6                                          l4201 61D6  
                                        l1377 4D8C                                          l1385 39AA  
                                        l1641 52E8                                          l2361 5838  
                                        l1394 3AE4                                          l4115 4FB4  
                                        l4107 4FA8                                          l2347 5C00  
                                        l1299 3CC6                                          l1628 50B6  
                                        l1476 47BA                                          l4061 5950  
                                        l4117 621E                                          l4109 4FAE  
                                        l4141 5F62                                          l2293 5B80  
                                        l2277 576E                                          l1662 4982  
                                        l2366 5840                                          l2278 5776  
                                        l4071 597C                                          l4063 5952  
                                        l4151 5F8A                                          l4143 5F80  
                                        l1671 5CE8                                          l2296 5B88  
                                        l1656 5392                                          l2288 4AC6  
                                        l4129 589E                                          l4081 5990  
                                        l4073 5986                                          l4065 595A  
                                        l4153 5F8C                                          l4145 5F82  
                                        l4161 61B4                                          l1842 4CAA  
                                        l4083 5992                                          l4075 598A  
                                        l4067 5964                                          l4091 611C  
                                        l4163 61EE                                          l4155 61BE  
                                        l4147 5F84                                          l1667 49C8  
                                        l1835 4C8A                                          l1852 4E5C  
                                        l4085 5994                                          l4077 598C  
                                        l4069 597A                                          l4093 4F2A  
                                        l4149 5F88                                          l4157 61A2  
                                        l1925 2530                                          l1845 4E3C  
                                        l1694 48C2                                          l1942 264A  
                                        l1934 2800                                          l1926 251E  
                                        l4175 6048                                          l4087 5996  
                                        l4079 598E                                          l4095 4F4A  
                                        l4159 61AE                                          l1951 271A  
                                        l1927 24E4                                          l1952 2708  
                                        l4089 5998                                          l4097 4F4C  
                                        l4185 6206                                          l7001 3C24  
                                        l4099 4F54                                          l7011 3C70  
                                        l7003 3C3A                                          l1981 2E4C  
                                        l7005 3C50                                          l1990 2E92  
                                        ?_pad 0026                                          l1895 5706  
                                        l1967 5AC0                                          l1992 2F0A  
                                        l1984 2E10                                          l1888 56FE  
                                        l1993 2EF8                                          l8001 2E72  
                                        l7009 3C60                                          l7017 3C7C  
                                        l8011 2EB0                                          l8003 2E78  
                                        l1979 2FEC                                          l7221 59AC  
                                        l8101 293C                                          l8021 2F1A  
                                        l8013 2EB4                                          l8005 2E82  
                                        l7231 59C4                                          l7223 59B0  
                                        l8111 298E                                          l8103 2958  
                                        l8031 2F7C                                          l8023 2F26  
                                        l8015 2EC2                                          l8007 2E90  
                                        l7233 59CC                                          l7225 59B8  
                                        l8201 5028                                          l8121 29EC  
                                        l8113 299E                                          l8105 2964  
                                        l6601 479A                                          l9001 5E60  
                                        l8041 2FDA                                          l8033 2F92  
                                        l8025 2F34                                          l8017 2EF0  
                                        l8009 2EA2                                          l7235 59D0  
                                        l7227 59BC                                          l7219 599C  
                                        l8211 5056                                          l8203 502C  
                                        l8131 2A9C                                          l8123 2A0C  
                                        l8115 29AE                                          l8107 2970  
                                        l9011 3CDA                                          l6603 47AA  
                                        l9003 5E2C                                          l8043 2FE0  
                                        l8035 2FAC                                          l8027 2F5E  
                                        l6701 629A                                          l7237 59D8  
                                        l7229 59C0                                          l8221 508A  
                                        l8213 5064                                          l8205 5034  
                                        l8141 2AF2                                          l8133 2AAA  
                                        l8125 2A1C                                          l8117 29BE  
                                        l8109 297E                                          l8061 2830  
                                        l8053 2802                                          l9021 3D58  
                                        l9013 3CE8                                          l9005 5DF8  
                                        l8045 2FE2                                          l8037 2FC8  
                                        l8029 2F62                                          l9101 3A28  
                                        l8301 49C0                                          l7239 59DC  
                                        l8223 5090                                          l8215 506A  
                                        l8207 5046                                          l8143 2B00  
                                        l8135 2AC8                                          l8127 2A3C  
                                        l8119 29DC                                          l8071 286C  
                                        l8063 2840                                          l8055 2810  
                                        l9031 3DAC                                          l9023 3D60  
                                        l9015 3D2E                                          l9007 5DC4  
                                        l8039 2FCC                                          l9111 3A92  
                                        l9103 3A46                                          l8303 49C6  
                                        l6551 5EFE                                          l8311 5CD8  
                                        l8217 5080                                          l8209 504E  
                                        l8225 5096                                          l8153 2B6A  
                                        l8161 2BB2                                          l8145 2B04  
                                        l8137 2AD2                                          l8129 2A66  
                                        l8081 28A2                                          l8073 2872  
                                        l8065 2850                                          l8057 281E  
                                        l8321 47E8                                          l9041 3E22  
                                        l9033 3DE8                                          l9025 3D6C  
                                        l9017 3D44                                          l9009 3CCA  
                                        l9113 3A9E                                          l9105 3A52  
                                        l6553 5F04                                          l9201 5690  
                                        l7601 54FC                                          l8401 50DA  
                                        l8241 5258                                          l8233 523A  
                                        l6811 5FC0                                          l8227 50A6  
                                        l8219 5088                                          l8171 2C26  
                                        l8163 2BCC                                          l8155 2B76  
                                        l8147 2B12                                          l8139 2AE0  
                                        l8083 28B2                                          l8075 2880  
                                        l8067 2856                                          l8059 2820  
                                        l8331 4836                                          l8323 4812  
                                        l8315 47BC                                          l9051 3E6A  
                                        l9043 3E26                                          l9035 3DF4  
                                        l9027 3D9E                                          l6571 46D6  
                                        l6563 46B0                                          l7611 2340  
                                        l9115 3ABA                                          l9107 3A6E  
                                        l6555 5F08                                          l7603 5506  
                                        l8411 5120                                          l8403 50E8  
                                        l8251 5290                                          l8243 5266  
                                        l8235 523E                                          l8307 5CB2  
                                        l9211 4324                                          l6813 5FD0  
                                        l6821 601C                                          l6661 6268  
                                        l6901 53FE                                          l8229 50AE  
                                        l8173 2C34                                          l8165 2BE0  
                                        l8157 2B84                                          l8149 2B40  
                                        l8093 28FC                                          l8085 28B8  
                                        l8077 2882                                          l8069 2866  
                                        l8341 4862                                          l8325 4814  
                                        l8317 47D4                                          l9045 3E4A  
                                        l9037 3E02                                          l9029 3DA0  
                                        l6581 471E                                          l6573 46E4  
                                        l6565 46B4                                          l7701 24FE  
                                        l7621 237E                                          l7613 234E  
                                        l9301 371A                                          l9117 3AC2  
                                        l9109 3A76                                          l6557 5F0A  
                                        l9141 56BE                                          l9133 5694  
                                        l8421 5B64                                          l7605 5524  
                                        l8413 514C                                          l8405 50F4  
                                        l8501 309E                                          l8253 529E  
                                        l8261 52C8                                          l8245 526E  
                                        l8237 524C                                          l8309 5CC8  
                                        l9061 574C                                          l9221 4370  
                                        l9213 4336                                          l9205 42F0  
                                        l6815 5FDC                                          l6831 5F92  
                                        l6823 6030                                          l6663 625E  
                                        l6903 540A                                          l8191 4FF8  
                                        l8175 2C36                                          l8167 2BFA  
                                        l8159 2BAE                                          l8095 290C  
                                        l8087 28D8                                          l8079 2892  
                                        l8351 4892                                          l8327 4824  
                                        l9047 3E5A                                          l9039 3E20  
                                        l6591 4768                                          l6583 4726  
                                        l6575 46F4                                          l6567 46C2  
                                        l9071 4CF8                                          l9063 4CAC  
                                        l7711 253E                                          l7703 2502  
                                        l7631 23AE                                          l7623 238E  
                                        l7615 235C                                          l9311 376C  
                                        l9303 3736                                          l9119 3AD2  
                                        l6559 5F1A                                          l9151 56F2  
                                        l9143 56CC                                          l9135 569C  
                                        l7607 555A                                          l8415 5160  
                                        l8407 5108                                          l8511 30D6  
                                        l8503 30B0                                          l8263 52D8  
                                        l8255 52B4                                          l8247 5280  
                                        l8239 5254                                          l8271 5318  
                                        l8183 5A7A                                          l8431 4A5C  
                                        l8423 49CA                                          l9055 5708  
                                        l9127 60CC                                          l9231 43BE  
                                        l9223 4382                                          l9215 4340  
                                        l9207 4308                                          l6681 62AE  
                                        l6817 5FE6                                          l6833 5FA2  
                                        l6841 5CEA                                          l6825 6034  
                                        l6665 627C                                          l6905 5432  
                                        l8193 5006                                          l8169 2C16  
                                        l8177 2C3C                                          l8097 2916  
                                        l8089 28E8                                          l8353 48A2  
                                        l8337 484E                                          l8329 4828  
                                        l9049 3E68                                          l6593 4778  
                                        l6585 4732                                          l6577 46F8  
                                        l6569 46D2                                          l9081 4D54  
                                        l9065 4CC8                                          l9073 4D08  
                                        l7801 27D8                                          l7721 2580  
                                        l7713 254E                                          l7705 2510  
                                        l7641 23D8                                          l7633 23C0  
                                        l7625 2390                                          l7617 235E  
                                        l9321 383A                                          l9313 3782  
                                        l9305 373E                                          l9153 56F8  
                                        l9145 56D2                                          l9137 56AE  
                                        l8409 511C                                          l8513 30DC  
                                        l8521 31D0                                          l8505 30BE  
                                        l8265 52E0                                          l8257 52BC  
                                        l8249 5288                                          l8281 5390  
                                        l8273 5328                                          l8185 5A8C  
                                        l8441 4ABE                                          l8425 49EA  
                                        l8361 4BC8                                          l9057 5710  
                                        l9129 60D6                                          l9241 441E  
                                        l9225 4398                                          l9233 43C4  
                                        l9217 4358                                          l9209 4312  
                                        l9401 45B6                                          l6819 5FEA  
                                        l6683 62A4                                          l6835 5FAE  
                                        l6843 5CFE                                          l6827 6036  
                                        l6851 59FA                                          l6667 6272  
                                        l8195 500E                                          l8179 2C40  
                                        l8099 2930                                          l8355 48B2  
                                        l8347 4876                                          l8339 4858  
                                        l6595 477A                                          l6587 4740  
                                        l6579 4708                                          l6771 5576  
                                        l9075 4D24                                          l9083 4D74  
                                        l9067 4CE4                                          l7803 27DA  
                                        l7731 25AE                                          l7723 258E  
                                        l7707 2512                                          l7643 23E8  
                                        l7651 2412                                          l7635 23C2  
                                        l7619 236E                                          l7627 2398  
                                        l9315 3786                                          l9307 3754  
                                        l9331 3852                                          l9091 39BE  
                                        l9251 403E                                          l8291 4932  
                                        l9147 56E8                                          l9139 56B6  
                                        l8419 5B4A                                          l8523 31EC  
                                        l8531 324C                                          l8515 315E  
                                        l8507 30C4                                          l8259 52C2  
                                        l8275 5356                                          l8427 4A28  
                                        l8435 4A68                                          l8611 12E4  
                                        l8603 1294                                          l8371 4C22  
                                        l8363 4BE6                                          l9059 571E  
                                        l9243 4426                                          l9235 43DA  
                                        l9227 43A6                                          l9219 435C  
                                        l9171 547A                                          l9155 5438  
                                        l9411 461C                                          l9403 45C8  
                                        l6837 5FB8                                          l6845 5D02  
                                        l6829 6042                                          l6685 6290  
                                        l6861 5A2A                                          l6853 59FE  
                                        l6669 6286                                          l8197 5012  
                                        l8189 4FF4                                          l8349 4882  
                                        l6597 4784                                          l6589 474A  
                                        l6773 558C                                          l9077 4D40  
                                        l9069 4CEC                                          l7805 27E0  
                                        l7741 261A                                          l7733 25B8  
                                        l7725 259A                                          l7717 2562  
                                        l7709 251C                                          l7661 244A  
                                        l7653 2422                                          l7645 23F8  
                                        l7637 23C8                                          l7629 23A8  
                                        l9341 38E6                                          l9325 3846  
                                        l9317 379C                                          l9309 3760  
                                        l9333 389C                                          l9093 39C6  
                                        l9085 38F0                                          l9261 40B8  
                                        l9253 405A                                          l9245 4004  
                                        l8293 4942                                          l8285 48C4  
                                        l9149 56F0                                          l7901 4266  
                                        l7581 5864                                          l7813 5AC2  
                                        l7821 5BC8                                          l8541 3290  
                                        l8533 325E                                          l8525 320A  
                                        l8517 3166                                          l8509 30CC  
                                        l8277 5366                                          l8269 52EA  
                                        l8437 4A7A                                          l8429 4A50  
                                        l8461 32F4                                          l8445 5778  
                                        l8453 5818                                          l8701 175A  
                                        l8621 135C                                          l8605 12A6  
                                        l8373 4C50                                          l8365 4BEE  
                                        l8381 4D8E                                          l9237 43F8  
                                        l9229 43B0                                          l9181 54C6  
                                        l9173 548A                                          l9165 545E  
                                        l9157 544A                                          l9421 4648  
                                        l9413 4624                                          l9405 45CC  
                                        l6839 5FBC                                          l6847 5D1C  
                                        l6855 5A18                                          l6871 53BA  
                                        l6863 5394                                          l8199 5020  
                                        l6599 478A                                          l6775 559C  
                                        l9079 4D48                                          l9351 4458  
                                        l7807 27EE                                          l7743 262A  
                                        l7727 259E                                          l7719 2572  
                                        l7735 25BE                                          l7671 245E  
                                        l7663 244E                                          l7655 2434  
                                        l7647 2408                                          l7639 23D6  
                                        l9335 38BA                                          l9319 382E  
                                        l9095 39D2                                          l9087 393E  
                                        l9263 40CC                                          l9247 4016  
                                        l8295 4950                                          l8287 48F4  
                                        l6767 6236                                          l9191 562A  
                                        l9183 5602                                          l7911 42CE  
                                        l7903 4286                                          l7591 5898  
                                        l7583 5870                                          l7815 5ACE  
                                        l7823 5BD4                                          l8543 3298  
                                        l8535 326C                                          l8527 3224  
                                        l8519 316C                                          l8279 538A  
                                        l8471 33E0                                          l8463 334C  
                                        l8447 5788                                          l7831 5C7A  
                                        l8455 582A                                          l8711 17F4  
                                        l8703 178E                                          l8631 142E  
                                        l8623 1390                                          l8607 12C2  
                                        l8615 130C                                          l8551 10B4  
                                        l8375 4C70                                          l8367 4C02  
                                        l8359 4BBC                                          l8391 4E04  
                                        l8383 4DAC                                          l9239 4406  
                                        l9175 5490                                          l9167 5468  
                                        l9159 5454                                          l9431 4692  
                                        l9423 4656                                          l9415 462C  
                                        l9407 45D0                                          l6857 5A1C  
                                        l6849 59E6                                          l6881 53CE  
                                        l6873 53BE                                          l6865 5398  
                                        l6777 55CC                                          l6769 556E  
                                        l9361 4504                                          l9353 446C  
                                        l7809 27F0                                          l7761 26AC  
                                        l7753 2684                                          l7737 25E4  
                                        l7745 263A                                          l7729 25AC  
                                        l7681 2472                                          l7673 2462  
                                        l7665 2452                                          l7657 2442  
                                        l7649 240A                                          l9337 38C2  
                                        l7921 2C70                                          l9089 39B2  
                                        l9273 411A                                          l9265 40E0  
                                        l9281 4140                                          l9249 4032  
                                        l9257 4066                                          l8297 4962  
                                        l8289 4904                                          l9193 5672  
                                        l9185 5608                                          l7841 3EAE  
                                        l7905 4298                                          l7585 5882  
                                        l7593 589A                                          l7577 5844  
                                        l7817 5AE0                                          l7825 5BD8  
                                        l8537 3272                                          l8545 32AA  
                                        l8529 323E                                          l8481 34C8  
                                        l8473 341C                                          l8465 3360  
                                        l8449 57E2                                          l8801 1BAE  
                                        l8721 18CC                                          l8713 1828  
                                        l8705 17A2                                          l8641 149A  
                                        l8625 1396                                          l8633 1462  
                                        l8617 1326                                          l8609 12DA  
                                        l8561 1108                                          l8553 10C4  
                                        l8377 4C72                                          l8369 4C10  
                                        l8393 4E24                                          l8385 4DB4  
                                        l9177 54AC                                          l9169 5474  
                                        l9433 4696                                          l9425 4666  
                                        l9417 4632                                          l9409 4618  
                                        l9441 6164                                          l6859 5A1E  
                                        l6891 53E2                                          l6883 53D2  
                                        l6875 53C2                                          l6867 53A4  
                                        l6779 55F8                                          l9371 4550  
                                        l9363 4518                                          l9355 446C  
                                        l9347 443E                                          l7763 26B4  
                                        l7755 268E                                          l7747 2660  
                                        l7739 2618                                          l7771 26D8  
                                        l7691 2486                                          l7683 2476  
                                        l7675 2466                                          l7667 2456  
                                        l7659 2446                                          l9339 38DE  
                                        l7923 2C80                                          l7931 2CAA  
                                        l7915 2C52                                          l9099 39E6  
                                        l9275 412C                                          l9267 40F4  
                                        l9259 40A4                                          l8299 4970  
                                        l9195 567A                                          l9187 561E  
                                        l7851 3EF0                                          l7843 3EB2  
                                        l7835 3E7C                                          l7907 429E  
                                        l7587 5884                                          l7579 5844  
                                        l7595 6256                                          l7819 5AE4  
                                        l7827 5BF4                                          l8539 3284  
                                        l8491 3038                                          l8483 34D8  
                                        l8467 336E                                          l8475 3450  
                                        l8459 32D4                                          l8811 1BDE  
                                        l8803 1BBC                                          l8731 1922  
                                        l8715 1880                                          l8723 18D0  
                                        l8707 17D4                                          l8643 14A2  
                                        l8635 1472                                          l8627 13F2  
                                        l8571 114E                                          l8563 1110  
                                        l8555 10D2                                          l8379 4C84  
                                        l8395 4E36                                          l8387 4DC8  
                                        l6971 3AEA                                          l9179 54C0  
                                        l9435 469A                                          l9427 467A  
                                        l9419 4644                                          l9443 6168  
                                        l6893 53E6                                          l6885 53D6  
                                        l6877 53C6                                          l6869 53B4  
                                        l9373 456C                                          l9365 451C  
                                        l9357 44E8                                          l9349 444A  
                                        l7781 272A                                          l7773 26DC  
                                        l7765 26B8                                          l7757 269C  
                                        l7749 2670                                          l7693 24B0  
                                        l7685 247A                                          l7677 246A  
                                        l7669 245A                                          l7941 2CD6  
                                        l7933 2CBA                                          l7925 2C90  
                                        l7917 2C60                                          l9269 4106  
                                        l9197 568A                                          l9189 5626  
                                        l7861 3F4A                                          l7853 3F0E  
                                        l7845 3EC0                                          l7837 3E80  
                                        l7909 42AE                                          l7589 5894  
                                        l7597 54D8                                          l8397 50B8  
                                        l8493 3058                                          l8477 348C  
                                        l8821 1C40                                          l8813 1C04  
                                        l8805 1BC4                                          l8741 19C8  
                                        l8733 1986                                          l8725 18E0  
                                        l8717 1884                                          l8709 17E4  
                                        l8661 1552                                          l8653 14E6  
                                        l8645 14BC                                          l8637 1476  
                                        l8629 1426                                          l8581 118A  
                                        l8573 1156                                          l8565 1122  
                                        l8557 10DA                                          l8549 10AA  
                                        l8901 4B0C                                          l8389 4DD6  
                                        l9381 4E76                                          l6973 3B2E  
                                        l6981 3B76                                          l9437 469E  
                                        l9445 616A                                          l6895 53EA  
                                        l6887 53DA                                          l6879 53CA  
                                        l9375 4574                                          l9367 4528  
                                        l9359 44FC                                          l7791 2790  
                                        l7783 2736                                          l7775 26EA  
                                        l7767 26C8                                          l7759 269E  
                                        l7695 24CC                                          l7687 247E  
                                        l7679 246E                                          l9295 36F2  
                                        l7943 2CE6                                          l7951 2D10  
                                        l7935 2CC0                                          l7927 2CA0  
                                        l7919 2C6E                                          l7863 3F78  
                                        l7855 3F16                                          l7871 3FB2  
                                        l7847 3EE0                                          l7839 3E8E  
                                        l7599 54EA                                          l8399 50C6  
                                        l8495 3066                                          l8487 2FEE  
                                        l8479 34A0                                          l8831 1C86  
                                        l8823 1C5A                                          l8815 1C20  
                                        l8807 1BCC                                          l8751 1A06  
                                        l8735 1994                                          l8743 19D0  
                                        l8727 18F2                                          l8719 18B8  
                                        l8671 1590                                          l8655 14F8  
                                        l8663 1556                                          l8639 1488  
                                        l8647 14D4                                          l8591 1206  
                                        l8575 115A                                          l8567 1130  
                                        l8559 10FE                                          l8903 4B28  
                                        l9391 4EF8                                          l9383 4E8C  
                                        l6991 3BDA                                          l6983 3B92  
                                        l6975 3B4A                                          l9439 46A2  
                                        l9447 6178                                          l6897 53EE  
                                        l6889 53DE                                          l9377 4580  
                                        l9369 4544                                          l7793 27A0  
                                        l7785 2744                                          l7777 2700  
                                        l7769 26CA                                          l7697 24DC  
                                        l7689 2482                                          l9297 3700  
                                        l7961 2D52                                          l7953 2D20  
                                        l7945 2CF6                                          l7937 2CC6  
                                        l7929 2CA2                                          l7873 3FC2  
                                        l7865 3F98                                          l7857 3F2A  
                                        l7849 3EE4                                          l7881 4190  
                                        l8497 3068                                          l8489 300E  
                                        l8841 1CD8                                          l8833 1C98  
                                        l8825 1C60                                          l8817 1C28  
                                        l8809 1BD8                                          l8761 1A32  
                                        l8753 1A0C                                          l8745 19E4  
                                        l8737 19A8                                          l8729 18FE  
                                        l8681 15DE                                          l8673 1594  
                                        l8665 155E                                          l8657 1514  
                                        l8593 1210                                          l8585 11C0  
                                        l8577 115E                                          l8569 1142  
                                        l8905 4B4A                                          l8921 1DAC  
                                        l8913 1D58                                          l9393 4F16  
                                        l9385 4EC2                                          l6993 3BEA  
                                        l6985 3BAE                                          l6977 3B62  
                                        l6969 3AE6                                          l6899 53F2  
                                        l7795 27C0                                          l7787 277E  
                                        l7699 24F2                                          l9299 3716  
                                        l7955 2D36                                          l7947 2D06  
                                        l7939 2CD4                                          l7875 3FE2  
                                        l7867 3F9A                                          l7859 3F38  
                                        l7891 41F0                                          l7883 419E  
                                        l8499 3082                                          l8851 1D16  
                                        l8843 1CEA                                          l8835 1C9E  
                                        l8827 1C72                                          l8819 1C2E  
                                        l8755 1A18                                          l8747 19F2  
                                        l8763 1A38                                          l8771 1A66  
                                        l8739 19BA                                          l8691 1676  
                                        l8675 15A6                                          l8683 15E6  
                                        l8667 1570                                          l8659 154A  
                                        l8587 11D2                                          l8579 1164  
                                        l8907 4B5C                                          l8931 1E78  
                                        l8923 1DD8                                          l8915 1D86  
                                        l9395 4F20                                          l9387 4ED0  
                                        l9379 4E5E                                          l6995 3BF6  
                                        l6987 3BC6                                          l6979 3B70  
                                        l7797 27C4                                          l7789 2780  
                                        l7981 2DD4                                          l7973 2D8A  
                                        l7957 2D46                                          l7965 2D66  
                                        l7949 2D08                                          l9581 407A  
                                        l7869 3FAC                                          l7893 420E  
                                        l7885 41BE                                          l8845 1CF6  
                                        l8837 1CA4                                          l8829 1C7E  
                                        l8853 1D32                                          l8781 1B1C  
                                        l8773 1ABE                                          l8765 1A4A  
                                        l8757 1A28                                          l8749 1A02  
                                        l8693 16CE                                          l8685 15EE  
                                        l8677 15B4                                          l8669 1582  
                                        l8589 11EE                                          l8597 1238  
                                        l8909 4B8E                                          l8861 34FA  
                                        l8941 1F68                                          l8933 1EA6  
                                        l8925 1DE8                                          l8917 1D98  
                                        l9397 4F24                                          l9389 4EE4  
                                        l6997 3BFC                                          l6989 3BD4  
                                        l7799 27D2                                          l7991 2E1A  
                                        l7983 2DDC                                          l7975 2DA4  
                                        l7967 2D76                                          l7959 2D4E  
                                        l9583 4154                                          l7895 4216  
                                        l7887 41C2                                          l7879 418C  
                                        l8847 1CFE                                          l8791 1B6C  
                                        l8783 1B38                                          l8775 1AF2  
                                        l8767 1A5C                                          l8759 1A2C  
                                        l8695 1702                                          l8687 15FE  
                                        l8679 15CC                                          l8599 125E  
                                        l8871 356C                                          l8863 3514  
                                        l8943 1F7A                                          l8935 1ED4  
                                        l8927 1E28                                          l8919 1DA8  
                                        l6999 3C0C                                          l9399 458A  
                                        l7993 2E38                                          l7985 2DEC  
                                        l7977 2DB4                                          l7969 2D76  
                                        l9585 39FA                                          l7897 422A  
                                        l7889 41D0                                          l8849 1D10  
                                        l8793 1B7C                                          l8785 1B4A  
                                        l8777 1AFA                                          l8769 1A60  
                                        l8689 1612                                          l8697 1708  
                                        l8881 3668                                          l8873 35E2  
                                        l8865 3552                                          l8857 34EA  
                                        l8961 20E6                                          l8945 1F9C  
                                        l8953 201E                                          l8937 1F30  
                                        l8929 1E38                                          l9587 3866  
                                        l7995 2E3A                                          l7987 2E00  
                                        l7979 2DC4                                          l7899 4238  
                                        l8795 1B8E                                          l8787 1B58  
                                        l8779 1AFE                                          l8699 1726  
                                        l8883 3686                                          l8875 35EA  
                                        l8867 355C                                          l8859 34F8  
                                        l8971 21E0                                          l8963 212E  
                                        l8955 204C                                          l8947 1FAE  
                                        l9579 3C90                                          l7997 2E4A  
                                        l7989 2E0E                                          l8797 1B96  
                                        l8789 1B68                                          l8893 4AC8  
                                        l8885 36A0                                          l8877 35F0  
                                        l8869 3566                                          l8981 22B8  
                                        l8973 2240                                          l8965 2186  
                                        l8949 1FF2                                          l7999 2E5C  
                                        l8799 1BA6                                          l8895 4AF2  
                                        l8887 36BA                                          l8879 3654  
                                        l8983 22CC                                          l8959 20D4  
                                        STR_1 1048                                          STR_2 101B  
                                        l8889 36C8                                          l8977 2278  
                                        l8969 21B2                                          l8993 22FA  
                                        STR_3 1001                                          STR_4 1033  
                                        l8899 4AFE                                          l8995 2328  
                                        l8979 22A6                                          l8987 22DA  
                                        STR_5 105C                                          STR_6 107A  
                                        l8989 22EC                                          STR_7 1088  
                                        STR_8 106C                                          STR_9 1095  
                                        _LATA 003FBA                                          _LATB 003FBB  
                                        _LATC 003FBC                                          _LATD 003FBD  
                                        _LATE 003FBE                                          _T2PR 003FAB  
                                        _T4PR 003F9F                                          _PMD0 0039C0  
                                        _PMD1 0039C1                                          _PMD2 0039C2  
                                        _PMD3 0039C3                                          u8000 3E8E  
                                        _PMD4 0039C4                                          u8001 3E8A  
                                        _PMD5 0039C5                                          u6410 5F1A  
                                        u8010 3EC0                                          _PMD6 0039C6  
                                        u6411 5F16                                          u8011 3EBC  
                                        _PMD7 0039C7                                          u6420 46C2  
                                        u8100 4238                                          u6421 46BE  
                                        u8021 3EEA                                          u8101 4234  
                                        u6430 46E4                                          u8030 3F0E  
                                        u8110 4266                                          u6431 46E0  
                                        u8031 3F0A                                          u8111 4262  
                                        u6440 471E                                          u8200 2D76  
                                        u8040 3F38                                          u8120 42AE  
                                        u9000 4AB4                                          u2985 5984  
                                        u6441 471A                                          u8201 2D72  
                                        u8041 3F34                                          u8121 42AA  
                                        u9001 4AAE                                          u2986 5986  
                                        u6450 4740                                          u8210 2DEC  
                                        u8130 2C6E                                          u8050 3F78  
                                        u9010 4AB6                                          u6451 473C  
                                        u8211 2DE8                                          u8131 2C6A  
                                        u8051 3F74                                          u6460 4768  
                                        u6700 559C                                          u8300 2F06  
                                        u8220 2E0E                                          u8140 2C80  
                                        u8060 3FC2                                          u7500 5854  
                                        u9020 57CE                                          u6461 4764  
                                        u6701 5598                                          u8301 2F02  
                                        u8221 2E0A                                          u8141 2C7C  
                                        u8061 3FBE                                          u7501 5850  
                                        u6470 479A                                          u8310 2F1A  
                                        u8230 2E38                                          u8150 2C90  
                                        u8070 419E                                          u7510 5864  
                                        u9110 33DC                                          u9030 57E0  
                                        u6471 4796                                          u8311 2F16  
                                        u8231 2E34                                          u8151 2C8C  
                                        u8071 419A                                          u7511 5860  
                                        u9111 33D8                                          u9031 57DC  
                                        u8400 2892                                          u7600 23C0  
                                        u8320 2F34                                          u8240 2E5C  
                                        u8160 2CD4                                          u8080 41D0  
                                        u7520 5894                                          u9200 3066  
                                        u9120 3400                                          u9040 5812  
                                        u6800 3B4A                                          u8401 288E  
                                        u7601 23BC                                          u8321 2F30  
                                        u8241 2E58                                          u8161 2CD0  
                                        u8081 41CC                                          u7521 5890  
                                        u9201 3062                                          u9105 3382  
                                        u9041 580C                                          u6801 3B46  
                                        u8410 28A2                                          u7610 23D6  
                                        u8330 2F7C                                          u8250 2E72  
                                        u8170 2CE6                                          u8090 420E  
                                        u7530 54EA                                          u9210 3082  
                                        u9130 341C                                          u9106 338C  
                                        u9050 5814                                          u6810 3B62  
                                        u8411 289E                                          u7611 23D2  
                                        u8331 2F78                                          u8251 2E6E  
                                        u8171 2CE2                                          u8091 420A  
                                        u7531 54E6                                          u9211 307E  
                                        u9131 3418                                          u9107 339C  
                                        u9027 57C0                                          u6811 3B5E  
                                        u8500 2B6A                                          u8420 28D8  
                                        u7700 2510                                          u7620 23E8  
                                        u8340 2FAC                                          u8260 2E90  
                                        u8180 2CF6                                          u7540 54FC  
                                        u9300 326C                                          u9220 30B0  
                                        u9140 3470                                          u9060 582A  
                                        u6900 3C70                                          u6820 3B92  
                                        u8501 2B66                                          u8421 28D4  
                                        u7701 250C                                          u7621 23E4  
                                        u8341 2FA8                                          u8261 2E8C  
                                        u8181 2CF2                                          u7541 54F8  
                                        u9301 3268                                          u9221 30AC  
                                        u9125 33F6                                          u9061 5826  
                                        u6901 3C6C                                          u6821 3B8E  
                                        u8510 2B84                                          u8430 28E8  
                                        u7710 2530                                          u7630 23F8  
                                        u8350 2FDA                                          u8270 2EB0  
                                        u8190 2D36                                          u7550 5524  
                                        u9310 3284                                          u9230 30BE  
                                        u9150 348C                                          u9070 331E  
                                        u6830 3BAE                                          u8511 2B80  
                                        u8431 28E4                                          u7711 252C  
                                        u7631 23F4                                          u8351 2FD6  
                                        u8271 2EAC                                          u8191 2D32  
                                        u7551 5520                                          u9311 3280  
                                        u9231 30BA                                          u9151 3488  
                                        u6831 3BAA                                          u8600 50A6  
                                        u8520 2BCC                                          u8440 2A86  
                                        u8360 281E                                          u7800 2670  
                                        u7720 253E                                          u7640 2434  
                                        u8280 2EC2                                          u7560 555A  
                                        u9240 31EC                                          u9160 34C8  
                                        u9080 334C                                          u9400 125E  
                                        u9320 10D2                                          u6840 3BC6  
                                        u8601 50A2                                          u8521 2BC8  
                                        u8361 281A                                          u7801 266C  
                                        u7721 253A                                          u7641 2430  
                                        u8281 2EBE                                          u7561 5556  
                                        u9241 31E8                                          u9161 34C4  
                                        u9145 3466                                          u9081 3348  
                                        u9401 125A                                          u9321 10CE  
                                        u6841 3BC2                                          u8530 2BFA  
                                        u8450 2AE0                                          u8370 2830  
                                        u6690 558C                                          u7810 269C  
                                        u7730 254E                                          u7650 2442  
                                        u7570 235C                                          u8290 2EF0  
                                        u9250 320A                                          u9170 3020  
                                        u8610 524C                                          u9090 336E  
                                        u9410 128E                                          u9330 1122  
                                        u6850 3BEA                                          u8531 2BF6  
                                        u8451 2ADC                                          u8371 282C  
                                        u6691 5588                                          u7811 2698  
                                        u7731 254A                                          u7651 243E  
                                        u7571 2358                                          u8291 2EEC  
                                        u9251 3206                                          u9171 301A  
                                        u8611 5248                                          u9091 336A  
                                        u9075 3314                                          u9411 1288  
                                        u9331 111E                                          u6851 3BE6  
                                        u8540 2C34                                          u8460 2B00  
                                        u8380 2840                                          u7900 277E  
                                        u7820 26AC                                          u7740 2580  
                                        u7660 24B0                                          u7580 236E  
                                        u8700 48F4                                          u9260 3224  
                                        u9180 3022                                          u8620 5266  
                                        u9500 14E2                                          u9420 1290  
                                        u9340 1130                                          u6860 3C0C  
                                        u8541 2C30                                          u8461 2AFC  
                                        u8445 2A7C                                          u8381 283C  
                                        u7901 277A                                          u7821 26A8  
                                        u7741 257C                                          u7661 24AC  
                                        u7581 236A                                          u8701 48F0  
                                        u9261 3220                                          u8621 5262  
                                        u9501 14DE                                          u9341 112C  
                                        u6861 3C08                                          u8550 5006  
                                        u8470 2B12                                          u8390 2880  
                                        u7910 2790                                          u7830 26C8  
                                        u7750 258E                                          u7670 24C8  
                                        u7590 237E                                          u8710 4932  
                                        u9270 323E                                          u9190 3038  
                                        u8630 5280                                          u9510 14F8  
                                        u9430 12A6                                          u9350 1142  
                                        u6870 3C24                                          u6790 3B2E  
                                        u8551 5002                                          u8471 2B0E  
                                        u8391 287C                                          u7911 278C  
                                        u7831 26C4                                          u7751 258A  
                                        u7671 24C2                                          u7591 237A  
                                        u8711 492E                                          u9271 323A  
                                        u9191 3034                                          u8631 527C  
                                        u9511 14F4                                          u9431 12A2  
                                        u9351 113E                                          u6871 3C20  
                                        u6791 3B2A                                          u8560 5020  
                                        u8480 2B40                                          u8800 4872  
                                        u7920 27A0                                          u7840 26D8  
                                        u7760 25AC                                          u7680 24CA  
                                        u8720 4950                                          u9280 324C  
                                        u8640 529E                                          u9600 1726  
                                        u9520 1514                                          u9440 1358  
                                        u9360 118A                                          u6880 3C3A  
                                        u8561 501C                                          u8481 2B3C  
                                        u8801 486E                                          u7921 279C  
                                        u7841 26D4                                          u7761 25A8  
                                        u8721 494C                                          u9281 3248  
                                        u8641 529A                                          u9601 1722  
                                        u9521 1510                                          u9441 1354  
                                        u9361 1186                                          u6881 3C36  
                                        u8570 5046                                          u8490 2B56  
                                        u8810 4892                                          u7930 27C0  
                                        u7850 26EA                                          u7770 25E4  
                                        u7690 24F2                                          u8730 4970  
                                        u9290 325E                                          u8650 52B4  
                                        u9610 178E                                          u9530 154A  
                                        u9450 13EE                                          u9370 11BA  
                                        u6890 3C50                                          u8571 5042  
                                        u8491 2B52                                          u8811 488E  
                                        u7931 27BC                                          u7851 26E6  
                                        u7771 25E0                                          u7691 24EE  
                                        u8731 496C                                          u9291 325A  
                                        u8651 52B0                                          u9611 178A  
                                        u9531 1546                                          u9451 13EA  
                                        u9371 11B4                                          u6891 3C4C  
                                        u8580 5064                                          u8820 48A2  
                                        u7940 27D2                                          u7860 2700  
                                        u7780 262A                                          u8740 49C0  
                                        u8900 50C6                                          u8660 52D8  
                                        u9700 19C8                                          u9620 17D4  
                                        u9540 1570                                          u9460 1462  
                                        u9380 11BC                                          u8581 5060  
                                        u8821 489E                                          u7941 27CE  
                                        u7861 26FC                                          u7781 2626  
                                        u8741 49BC                                          u8901 50C2  
                                        u8661 52D4                                          u9701 19C4  
                                        u9621 17D0                                          u9541 156C  
                                        u9461 145E                                          u8590 5080  
                                        u7950 27EE                                          u7870 2716  
                                        u7790 2660                                          u8910 50E8  
                                        u8670 5318                                          u8750 5CC8  
                                        u9710 19E4                                          u9630 17E4  
                                        u9550 1582                                          u9470 1488  
                                        u9390 11D2                                          u8591 507C  
                                        u7951 27EA                                          u7871 2712  
                                        u7791 265C                                          u8911 50E4  
                                        u8671 5314                                          u8751 5CC4  
                                        u9711 19E0                                          u9631 17E0  
                                        u9551 157E                                          u9471 1484  
                                        u9391 11CE                                          u8831 4BC2  
                                        u8760 47D4                                          u7880 272A  
                                        u7960 5B04                                          u8920 513E  
                                        u8680 5356                                          u9800 1C40  
                                        u9720 19F2                                          u9640 1880  
                                        u9560 1590                                          u9480 149A  
                                        u8840 4BE6                                          u8761 47D0  
                                        u7881 2726                                          u7961 5B00  
                                        u8921 513A                                          u8681 5352  
                                        u9801 1C3C                                          u9721 19EE  
                                        u9641 187C                                          u9561 158C  
                                        u9481 1496                                          u8841 4BE2  
                                        u8770 4808                                          u7890 2744  
                                        u7970 5BF4                                          u8930 514C  
                                        u8690 538A                                          u9810 1C5A  
                                        u9730 1A4A                                          u9650 18CC  
                                        u9570 15A6                                          u9490 14BC  
                                        u8850 4C10                                          u7891 2740  
                                        u7971 5BF0                                          u8931 5148  
                                        u8691 5386                                          u9811 1C56  
                                        u9731 1A46                                          u9651 18C8  
                                        u9571 15A2                                          u9491 14B8  
                                        u8851 4C0C                                          u8780 4836  
                                        u8940 5B64                                          u7980 5CAA  
                                        u9820 1C72                                          u9740 1B1C  
                                        u9660 18F2                                          u9580 15B4  
                                        u8860 4C50                                          u9900 36A0  
                                        u8781 4832                                          u8941 5B60  
                                        u7981 5CA4                                          u9821 1C6E  
                                        u9741 1B18                                          u9661 18EE  
                                        u9581 15B0                                          u8861 4C4C  
                                        u9901 369C                                          u8790 484A  
                                        u8950 4A0A                                          u7990 5CAC  
                                        u9830 1CD2                                          u9750 1B38  
                                        u9670 1994                                          u9590 15DE  
                                        u8870 4DAC                                          u9910 36BA  
                                        u8791 4846                                          u8775 47FE  
                                        u9831 1CCC                                          u9751 1B34  
                                        u9671 1990                                          u9591 15DA  
                                        u8871 4DA8                                          u9911 36B6  
                                        u8960 4A28                                          u9840 1CD4  
                                        u9760 1B4A                                          u9680 19A8  
                                        u8880 4DD6                                          u9920 36C8  
                                        u8961 4A24                                          u9761 1B46  
                                        u9681 19A4                                          u8881 4DD2  
                                        u9921 36C4                                          u8970 4A50  
                                        u9850 1CEA                                          u9770 1B58  
                                        u9690 19BA                                          u9930 4AF2  
                                        u8890 4E04                                          u8971 4A4C  
                                        u8955 4A00                                          u9851 1CE6  
                                        u9771 1B54                                          u9691 19B6  
                                        u9931 4AEE                                          u8891 4E00  
                                        u8980 4A7A                                          u9780 1B8E  
                                        u9940 4B28                                          u9860 34F8  
                                        u8981 4A76                                          u9781 1B8A  
                                        u9941 4B24                                          u9861 34F4  
                                        u9790 1BBC                                          u9950 4B4A  
                                        u9870 3514                                          u9791 1BB8  
                                        u9951 4B46                                          u9871 3510  
                                        u9960 4B5C                                          u9880 3668  
                                        u9961 4B58                                          u9881 3664  
                                        u9970 4B8E                                          u9890 3686  
                                        _TMR2 003FAA                                          u8995 4A8C  
                                        u9971 4B8A                                          u9891 3682  
                                        u9980 1D86                                          _TMR4 003F9E  
                                        u9981 1D82                                          u9990 1DE8  
                                        u9991 1DE4                                          _WPUA 003A41  
                                        _WPUB 003A51                                          _WPUC 003A61  
                                        _WPUD 003A71                                          _WPUE 003A81  
                         ?_UART1_Transmit_ISR 0001                                          abs@a 0026  
                                        _dbuf 013E                                          _main 6164  
                                        _dtoa 2FEE                                          _loop 458A  
                                        _prec 003C                                          _nout 0128  
                                        pad@i 002D                                          pad@p 002A  
                                        fsr1h 003FE2                                          fsr2h 003FDA  
                                        indf1 003FE7                                          indf2 003FDF  
                                        fsr1l 003FE1                                          pad@w 002F  
                                        fsr2l 003FD9                                          _utoa 34EA  
                               ___fpclassifyf 49CA                                          prodh 003FF4  
                                        prodl 003FF3                                          start 00AE  
                             _timer5ReloadVal 0194                               ___fldiv@new_exp 0065  
                             _TMR3_Initialize 5CEA                               _PWM5_Initialize 6206  
                           ??_CLC3_Initialize 0014                 ??_UART1_SetTxInterruptHandler 0016  
                                _tolower$3692 0020                    ??_TMR4_SetInterruptHandler 0016  
                           _UART1_rx_vect_isr 5C40                                  ___param_bank 000000  
                  __end_of_PWM5_LoadDutyValue 5E2C                            ?_UART1_rx_vect_isr 0001  
                                       ??_abs 0028                                         ??_pad 002C  
              __size_of_OSCILLATOR_Initialize 0018                          ??_UART1_Transmit_ISR 0011  
               __end_of_OSCILLATOR_Initialize 6236                                 ___fltol@sign1 0081  
                             __end_of___aldiv 47BC                               __end_of___aodiv 4004  
                                       _ADCAP 003EF5                                         _ADACT 003EFE  
                     __end_of_CCP3_Initialize 5FEE                               __end_of___fladd 2802  
                                       ?_main 0001                                         ?_dtoa 0060  
                                       _ADCLK 003EFF                               __end_of___aomod 42F0  
                                       _ADCNT 003EEB                                         _ADPCH 003EF1  
                             __end_of___fldiv 2FEE                                         _ADREF 003EFD  
                             __end_of___awdiv 50B8                               __end_of___flneg 5CEA  
                                       ?_loop 0001                                         STR_10 109D  
                                       STR_13 1099                                         STR_14 10A1  
                                       STR_17 10A5                                         STR_19 10A5  
                             __end_of___awmod 52EA                                         _ADRPT 003EEC  
                      ??_CCP4_DefaultCallBack 0007                               __end_of___flmul 2C52  
                    TMR5_ReadTimer@readValLow 0010                               __end_of___flsub 5AC2  
                             __end_of___fltol 48C4                                         u10000 1E38  
                                       u10001 1E34                                         u10010 1EA6  
                                       u10011 1EA2                                         u10020 1ED4  
                                       u10021 1ED0                                         u10030 1F7A  
                                       u10031 1F76                                         ?_utoa 0060  
                                       u10200 3E12                                         u10040 204C  
                                       u10201 3E0E                                         u10105 5E84  
                                       u10041 2048                                         u10210 3E20  
                                       u10050 20CE                                         u10211 3E1C  
                                       u10115 5E50                                         u10051 20C8  
                                       u10220 3E5A                                         u10140 3CDA  
                                       u10300 3A6E                                         u10060 20D0  
                                       u10221 3E56                                         u10141 3CD6  
                                       u10125 5E1C                                         u10301 3A6A  
                                       u10230 3E68                                         u10150 3CE8  
                                       u10310 3A92                                         u10070 20E6  
                                       u10231 3E64                                         u10151 3CE4  
                                       u10135 5DE8                                         u10311 3A8E  
                                       u10071 20E2                                         u10160 3D44  
                                       u10320 3ABA                                         u10400 5672  
                                       u10080 21E0                                         u10240 576E  
                                       u10161 3D40                                         u10321 3AB6  
                                       u10401 566E                                         u10081 21DC  
                                       u10241 576A                                         u10170 3D9A  
                                       u10250 4CC8                                         u10330 56AE  
                                       u10090 22A6                                         u10410 4308  
                                       u10171 3D96                                         u10251 4CC4  
                                       u10331 56AA                                         u10091 22A2  
                                       u10411 4304                                         u10180 3DE4  
                                       u10260 4CE4                                         u10340 56CC  
                                       u10500 441E                                         u10420 4324  
                                       u10181 3DE0                                         u10261 4CE0  
                                       u10341 56C8                                         u10501 441A  
                                       u10421 4320                                         u10190 3E02  
                                       u10270 4D24                                         u10510 4032  
                                       u10350 56E8                                         u10430 4336  
                                       u10191 3DFE                                         u10271 4D20  
                                       u10511 402E                                         u10351 56E4  
                                       u10431 4332                                         u10280 4D40  
                                       u10600 38BA                                         u10520 405A  
                                       u10440 4358                                         u10360 548A  
                                       u10281 4D3C                                         u10601 38B6  
                                       u10521 4056                                         u10441 4354  
                                       u10361 5486                                         u10610 38DE  
                                       u10290 3A46                                         u10530 4106  
                                       u10450 4370                                         u10370 54AC  
                                       u10611 38DA                                         u10291 3A42  
                                       u10531 4102                               __end_of___lodiv 4CAC  
                                       u10451 436C                                         u10371 54A8  
                                       u10620 44FC                                         u10540 412C  
                                       u10460 4382                                         u10380 54D6  
                                       u10700 4618                               ___awdiv@divisor 0016  
                                       u10621 44F8                                         u10541 4128  
                                       u10461 437E                                         u10381 54D2  
                                       u10701 4614                                         u10630 4518  
                                       u10550 3716                                         u10390 561E  
                                       u10470 4398                                         u10710 4644  
                                       u10631 4514                                         u10551 3712  
                                       u10391 561A                                         u10471 4394  
                                       u10711 4640                                         u10640 4544  
                                       u10560 3736                                         u10480 43DA  
                                       u10720 4656                                         u10641 4540  
                                       u10561 3732                                         u10481 43D6  
                                       u10721 4652                                         u10650 456C  
                                       u10570 3754                                         u10490 43F8  
                                       u10730 468E                                         _U1P1H 003DED  
                                       u10651 4568                                         u10571 3750  
                                       u10491 43F4                                         u10731 468A  
                                       u10580 3782                                         u10660 4E76  
                                       _U1P2H 003DEF                                         u10581 377E  
                                       u10661 4E72                                         u10590 379C  
                                       u10670 4E8C                                         _U1P1L 003DEC  
                                       _U1P3H 003DF1                                         u10591 3798  
                                       u10671 4E88                                         _T3CLK 003FA9  
                                       u10680 45B6                                         _T2CON 003FAC  
                                       _U1P2L 003DEE                                         u10681 45B2  
                                       u10690 45C8                                         _U1P3L 003DF0  
                                       u10691 45C4                                         _T3CON 003FA6  
                                       _T5CLK 003F9D                                         _T4CON 003FA0  
                             __end_of___lomod 4E5E                                         _T2HLT 003FAD  
                                       _T5CON 003F9A                                         _T4HLT 003FA1  
                             __end_of___lwdiv 5708                                         _T2TMR 003FAA  
                                       _U1UIR 003DF8                                         i1l330 5C72  
                                       _T2RST 003FAF                                         _U1RXB 003DE8  
                                       i1l324 5C36                                         i1l333 5B44  
                                       i1l350 62CA                                         i1l343 5238  
                                       i1l336 5B48                                         i1l353 62C8  
                                       _U1TXB 003DEA                                         i1l347 609E  
                                       i1l356 62C6                                         _T4TMR 003F9E  
                                       _T4RST 003FA3                                         i2l409 62D0  
                                       i1l692 601A                                         i2l534 60CA  
                                       i2l438 5D8C                                         i2l446 5EC6  
                                       i2l552 5F60                                         i1l688 5BC0  
                                       i2l529 6162                                         i2l537 6252  
                                       i1l698 62CC                                         i2l476 5DC2  
                                       i2l558 61A0                                         i2l487 5EFA  
                         ??_UART1_rx_vect_isr 0012                                         i2l863 594E  
                                       i2l856 5A78                                         i2l868 611A  
                             ___awdiv@counter 0018                                         _OSCEN 0039DD  
                                vfpfcnvrt@fmt 00C9                                  vfpfcnvrt@llu 00D9  
                                       _TMR3H 003FA5                                         _TMR5H 003F99  
                                       _TMR3L 003FA4                                         _TMR5L 003F98  
                                       _TRISA 003FC2                                         _TRISB 003FC3  
                                       _TRISC 003FC4                                         _TRISD 003FC5  
                                       _TRISE 003FC6                                   _Default_ISR 62D0  
                             _TMR4_Initialize 601C                               _PWM6_Initialize 61EE  
                           _UART1_tx_vect_isr 5C04                              __end_of_TMR4_ISR 5BC8  
                     setSteering@steeringMode 0085                                         _delay 0040  
                                       _flags 003E                                         _fputc 54D8  
                                       _fputs 5AC2                         __size_of_calcMotorPow 014C  
                          ?_UART1_tx_vect_isr 0001                                         pad@fp 0026  
                                       _width 003A                                         _putch 6254  
                                       dtoa@d 0062                                         dtoa@i 007A  
                                       dtoa@n 0072                                         dtoa@p 006C  
                                       dtoa@s 0070                                         dtoa@w 006E  
                            ?_SMT1_Initialize 0001                               __end_of_isupper 5CB2  
                                       pclath 003FFA                                         tablat 003FF5  
                                 _BatteryVolt 012A                               _curveRightCount 00F9  
                       __size_of_calcSteering 0188                                         utoa@d 0062  
                                       utoa@i 0076                                         utoa@n 006E  
                                       utoa@p 006A                                         utoa@w 006C  
                                       status 003FD8           __end_of_UART1_SetRxInterruptHandler 6272  
                 _UART1_SetRxInterruptHandler 6268                       __end_of_CCP4_Initialize 5FC0  
                              ?___fpclassifyf 0014                               __end_of_tolower 5842  
                             __end_of_strncmp 4BBC                              ___lodiv@dividend 0014  
         fp__UART1_DefaultFramingErrorHandler 0000      __end_of_UART1_DefaultFramingErrorHandler 62CC  
   __size_of_UART1_DefaultFramingErrorHandler 0002            ??_UART1_DefaultFramingErrorHandler 0012  
           ?_UART1_DefaultFramingErrorHandler 0001              _UART1_DefaultFramingErrorHandler 62CA  
                         ??_UART1_tx_vect_isr 0011                     __end_of_UART1_rx_vect_isr 5C7A  
                             _TMR5_Initialize 59E6                               _PWM7_Initialize 61D6  
                             __initialization 5D22                         TMR5_ReadTimer@readVal 000D  
                            ?_CCP3_CaptureISR 0001                                  __end_of_main 6184  
                                __end_of_dtoa 32D4                                  __end_of_loop 46B0  
                            ?_checkCurveCount 0001                                  __end_of_utoa 36F2  
                 ??_UART1_DefaultErrorHandler 0012                       __end_of_TMR2_Initialize 61BE  
                              _roundTimeCount 00F1                                  ?_UART1_Write 0001  
                                      ??_main 003A                                        ??_dtoa 0031  
                                      ??_loop 003A                                        ??_utoa 0031  
                               __activetblptr 000003                                  _calcMotorPow 443E  
        __size_of_UART1_SetTxInterruptHandler 000A                     __end_of_UART1_tx_vect_isr 5C3E  
                                startAccell@i 01B4                              ___lodiv@quotient 0024  
                             _PWM8_Initialize 61BE                              _UART1_Initialize 5394  
                                _calcSteering 4004                              ?_CCP4_CaptureISR 0001  
                                      _ADACCH 003EE9                                        _ADACCL 003EE8  
                                      _ADACCU 003EEA                                        _ADACQH 003EF4  
                                      _ADACQL 003EF3                                        _ADCON0 003EF8  
                                      _ADCON1 003EF9                                        _ADCON2 003EFA  
                                      _ADCON3 003EFB                                        _ADERRH 003EE3  
                                      _ADERRL 003EE2                                        ?_fputc 0016  
                                      _ADLTHH 003EDF                                        _ADLTHL 003EDE  
                                      ?_fputs 001F                                        _ADRESH 003EF0  
                                      _ADRESL 003EEF                                        _ADPREH 003EF7  
                                      _ADPREL 003EF6                                        _CCPR3H 003F75  
                                      _CCPR4H 003F71                                        _CCPR3L 003F74  
                                      _CCPR4L 003F70                                        _ADSTAT 003EFC  
                                      _ADUTHH 003EE1                              ___awdiv@dividend 0014  
                                      _ADUTHL 003EE0                            _PWM8_LoadDutyValue 5E2C  
                                      _ANSELA 003A40                                        ?_putch 0001  
                                      _ANSELB 003A50                                        _ANSELC 003A60  
                                      _ANSELD 003A70                                        _ANSELE 003A80  
                                      _RB1I2C 003A5A                                        _RB2I2C 003A5B  
                                      _RD0I2C 003A7A                                        _U1CON0 003DF2  
                                      _U1CON1 003DF3                                        _U1CON2 003DF4  
                                      _RC3I2C 003A6A                                        _RD1I2C 003A7B  
                                      _T3GATE 003FA8                                        _RC4I2C 003A6B  
                                      _U1BRGH 003DF6                                        _U1FIFO 003DF7  
                                      _T3GCON 003FA7                                        _U1BRGL 003DF5  
                                      _T5GATE 003F9C                                        _T5GCON 003F9B  
                                      _RA0PPS 003A00                                        _RA1PPS 003A01  
                                      _RA3PPS 003A03                                        _RA4PPS 003A04  
                                      _RB3PPS 003A0B                                        _T5GPPS 003AC9  
                                      i1l1249 62C0                                        _ODCONA 003A42  
                                      _ODCONB 003A52                                        _ODCONC 003A62  
                                      _ODCOND 003A72                                        _ODCONE 003A82  
                     __end_of_PWM5_Initialize 621E                       __end_of_TMR3_Initialize 5D22  
                                      i1l7217 62B8                                        i1l7411 5BB2  
                                      i1l7333 5FEE                                        i1l7413 5BB6  
                                      i1l7335 6002                                        i1l7407 5B92  
                                      i1l7271 5B3A                                        i1l7263 5B06  
                                      i1l7409 5B96                                        i1l7281 51AA  
                                      i1l7273 5B3E                                        i1l7265 5B16  
                                      i1l7291 5216                                        i1l7283 51C2  
                                      i1l7275 517A                                        i1l7267 5B28  
                                      i1l7293 5234                                        i1l7285 51D2  
                                      i1l7277 518A                                        i1l7269 5B2A  
                                      i1l6671 6074                                        i1l7287 51E2  
                                      i1l7279 519A                                        i1l7383 5C0A  
                                      i1l6673 6086                                        i1l7289 51FA  
                                      i1l7385 5C1E                                        i1l6675 6088  
                                      i1l6907 62C2                                        i1l7387 5C46  
                                      i1l6677 6098                                        i1l7389 5C5A  
                                      i1l6679 609C                                        _INLVLA 003A44  
                                      _INLVLB 003A54                                        _INLVLC 003A64  
                                      _INLVLD 003A74                                        i2l7301 5D86  
                                      _INLVLE 003A84                                        i2l7311 6184  
                                      i2l7303 5D8E                                        i2l7313 6190  
                                      i2l7401 5F34                                        i2l7305 5D9C  
                                      i2l7315 6198                                        i2l7403 5F48  
                                      i2l7307 5DA8                                        i2l7421 5A54  
                                      i2l7317 619C                                        i2l7309 5DBC  
                                      i2l7431 592A                                        i2l7423 5A66  
                                      i2l7415 5A30                                        i2l7433 593C  
                                      i2l7425 58FC                                        i2l7417 5A34  
                                      i2l7435 60F4                                        i2l7427 5900  
                                      i2l7419 5A44                                        i2l7437 60F8  
                                      i2l7429 591A                                        i2l6911 614E  
                                      i2l7295 5D58                                        i2l7391 5E94  
                                      i2l6913 615A                                        i2l7297 5D66  
                                      i2l7393 5EA4                                        i2l6691 60B0  
                                      i2l7395 5EC8                                        i2l7299 5D72  
                                      i2l6909 6140                                        i2l6693 60B4  
                                      i2l6917 6246                                        i2l7397 5ED8  
                                      i2l6695 60BA                                        i2l6687 60A0  
                                      i2l7399 5F30                                        i2l6689 60AE  
                                      i2l6697 60C0                                        i2l6699 60C4  
                                ?_setSteering 0083                                        _OSCFRQ 0039DF  
                            __end_of_actSpeed 5602                                        _SMT1PR 003F1B  
                       _UART1_SetErrorHandler 6286                              __end_of___xxtofl 3E7C  
                         ?_PWM8_LoadDutyValue 0014                              __end_of_getCurve 3CC8  
                    __end_of_CCP3_SetCallBack 62B8                                  _CCPTMRS0bits 003F5E  
                                _CCPTMRS1bits 003F5F                                  vfprintf@cfmt 01AA  
                                      ___flge 48C4                                        ___fleq 52EA  
                                   ??___aldiv 001C                                     ??___aodiv 0024  
                                   ??___fladd 0036                                     ??___aomod 0024  
                                   ??___fldiv 0032                                     ??___awdiv 0018  
                                   ??___flneg 0018                                     ??___awmod 0018  
                                   ??___flmul 0032                                     ??___flsub 003A  
                                   ??___fltol 007D                                     ??___lodiv 0024  
                                   ??___lomod 0024                                        _efgtoa 10AA  
                                   ??___lwdiv 0018                                 _CCP3_CallBack 0198  
                                      _floorf 32D4                                  ?_TMR5_Reload 0001  
                     __end_of_PWM6_Initialize 6206                       __end_of_TMR4_Initialize 6048  
                                      clear_0 5D28                                        clear_1 5D34  
                                      clear_2 5D40                              ___awdiv@quotient 001A  
                                      _motPow 0130                               ___awmod@divisor 0016  
                     fp__CCP3_DefaultCallBack 0000                                        isa$std 000001  
                             ___awmod@counter 0018                                 _CCP4_CallBack 0196  
                                      _smtWay 0120                                        _printf 60CC  
                                      pad@buf 0028                                        dtoa@fp 0060  
                            ?_CCP3_Initialize 0001                                        _strcpy 5778  
                                      _strlen 5BC8                          ??_PWM8_LoadDutyValue 0016  
                            __end_of_setMotor 4D8E                               _ADCC_Initialize 589E  
        __end_of_TMR4_DefaultInterruptHandler 62CE         __size_of_TMR4_DefaultInterruptHandler 0002  
                _TMR4_DefaultInterruptHandler 62CC                                        fputc@c 0016  
                              _PMD_Initialize 611C                                        fputs@c 0023  
                                      fputs@i 0024                                        fputs@s 001F  
                             ___fpclassifyf@e 001C                               ___fpclassifyf@u 001E  
                             ___fpclassifyf@x 0014                                  __mediumconst 0000  
                       __end_of_TMR5_GATE_ISR 5F62                                        tblptrh 003FF7  
                                   ??_isupper 0016                                        tblptrl 003FF6  
                                      tblptru 003FF8             __size_of_ADCC_GetSingleConversion 0032  
                            __end_of_vfprintf 5778                     ?_ADCC_GetSingleConversion 0014  
                                      utoa@fp 0060      TMR4_SetInterruptHandler@InterruptHandler 0014  
TMR5_SetGateInterruptHandler@InterruptHandler 0014   UART1_SetTxInterruptHandler@InterruptHandler 0014  
 UART1_SetRxInterruptHandler@InterruptHandler 0014          __end_of_UART1_SetOverrunErrorHandler 627C  
       __size_of_UART1_SetOverrunErrorHandler 000A                  _UART1_SetOverrunErrorHandler 6272  
                   _UART1_DefaultErrorHandler 62C2                                     ??_tolower 001C  
                                   ??_strncmp 001A                 __size_of_INTERRUPT_Initialize 004C  
                __size_of_UART1_RxDataHandler 002C                             getCurve@deltaLeft 0016  
                                  ___flge@ff1 006D                               ??___fpclassifyf 0018  
                                  ___flge@ff2 0071                       __end_of_PWM7_Initialize 61EE  
                     __end_of_TMR5_Initialize 5A30                                  ___xxtofl@arg 0026  
                                ___xxtofl@exp 0025                             _SYSTEM_Initialize 599C  
                                ___xxtofl@val 001C                                    ___fleq@ff1 0014  
                                  ___fleq@ff2 0018                                    __accesstop 0060  
                     __end_of__initialization 5D52                                    ___flneg@f1 0014  
                            ?_CCP4_Initialize 0001                           setSteering@steering 0083  
                          ?_SYSTEM_Initialize 0001                                 ___rparam_used 000001  
                  __size_of_UART1_rx_vect_isr 003A                                    ___fltol@f1 0079  
                             _TMR5_WriteTimer 60A0                            __size_of_calcSpeed 01FE  
                   calcMotorPow@setSpeedDelta 0085                      __end_of_CCP4_SetCallBack 62AE  
                              __pcstackCOMRAM 0001                         __end_of_TMR4_CallBack 601C  
                          __size_of_checkBatt 0092                                  ?_startAccell 0001  
                         ??_SYSTEM_Initialize 0018                                     ?_TMR4_ISR 0001  
                              ivt0x8_undefint 00AC                                 __end_of_fputc 556E  
                               __end_of_fputs 5B06                               fp__TMR4_10msISR 0000  
                               __end_of_putch 625E                              ?_TMR2_Initialize 0001  
                     __end_of_PWM8_Initialize 61D6                        __end_of_PMD_Initialize 6140  
                 __size_of_PWM7_LoadDutyValue 0034                         CCP3_CaptureISR@module 0003  
                  __size_of_UART1_tx_vect_isr 003A                CCP3_SetCallBack@customCallBack 0014  
                   _UART1_FramingErrorHandler 019E               fp__TMR4_DefaultInterruptHandler 0000  
               ?_TMR4_DefaultInterruptHandler 0001                       fp__CCP4_DefaultCallBack 0000  
                    __size_of_SMT1_PR_ACQ_ISR 004A                                       ??_fputc 001A  
                   __end_of_SYSTEM_Initialize 59E6                                       ??_fputs 0023  
                             _CLC3_Initialize 6048                                       ??_putch 0015  
                 PWM7_LoadDutyValue@dutyValue 0014                                    __pbssBANK0 00EB  
                                  __pbssBANK1 0100                 ?_UART1_SetOverrunErrorHandler 0014  
                      ?_UART1_SetErrorHandler 0014                              ?_PWM5_Initialize 0001  
                            ?_TMR3_Initialize 0001                                    __pnvCOMRAM 004C  
                    __size_of_SMT1_PW_ACQ_ISR 0054                         _TMR4_InterruptHandler 018E  
                                     IVTBASEH 003FD6                                       IVTBASEL 003FD5  
                                     IVTBASEU 003FD7                                       ?___flge 006D  
                                     ?___fleq 0014                                    ??_TMR4_ISR 0013  
                     __end_of_ADCC_Initialize 58FA                    __end_of_PWM6_LoadDutyValue 5DF8  
                                     ?_efgtoa 0083          __end_of_TMR5_SetGateInterruptHandler 629A  
       __size_of_TMR5_SetGateInterruptHandler 000A                  _TMR5_SetGateInterruptHandler 6290  
                                     _CCP3CAP 003F77                                       _CCP4CAP 003F73  
                                     _CCP3CON 003F76                                       _CCP4CON 003F72  
                                     _ADFLTRH 003EE7                                       ?_floorf 0036  
                                     _ADFLTRL 003EE6                 __size_of_CCP3_DefaultCallBack 0036  
                                     _CCP3PPS 003ACF                                       _CCP4PPS 003AD0  
                                     _CLC3CON 003C60                                       _CLC3POL 003C61  
                                     _ADPREVH 003EEE                                       _ADPREVL 003EED  
                            ?_PWM6_Initialize 0001                              ?_TMR4_Initialize 0001  
                                     _ADSTPTH 003EE5                                       _ADSTPTL 003EE4  
                                     ?_printf 01AC                               ?_PMD_Initialize 0001  
                           _UART1_Receive_ISR 517A                                    _getReverse 42F0  
                                     ?_strcpy 0014                                       ?_strlen 0014  
                                     _U1ERRIE 003DFA                                     ?_actSpeed 0022  
                                     _U1ERRIR 003DF9                                 ?_TMR4_10msISR 0001  
                                ?_Default_ISR 0001                          __size_of_UART1_Write 005C  
                          ?_UART1_Receive_ISR 0001                                       _U1RXPPS 003AE5  
                                   ?___xxtofl 001C                            _PWM5_LoadDutyValue 5DF8  
                                  _distRightM 013A                       __size_of_TMR5_ReadTimer 0024  
                                     _OSCCON1 0039D9                                       _OSCCON3 0039DB  
                           __end_of_calcSpeed 38F0                                       _IVTLOCK 003FD4  
                          __size_of_vfpfcnvrt 05E8                                       _SMT1CLK 003F21  
                                     _OSCTUNE 0039DE                                       _SMT1CPR 003F15  
                                     _SMT1CPW 003F18                                       _PWM5DCH 003F6D  
                                     _PWM5DCL 003F6C                                       _PWM6DCH 003F69  
                                     _PWM6DCL 003F68                                       _PWM7DCH 003F65  
                                     _PWM7DCL 003F64                                       _SMT1SIG 003F22  
                                     _PWM8DCH 003F61                                       _PWM5CON 003F6E  
                                     _PWM8DCL 003F60                                       _SMT1PRH 003F1C  
                                     _PWM6CON 003F6A                                       _SMT1PRL 003F1B  
                                     _PWM7CON 003F66                                       _SMT1PRU 003F1D  
                                   ?_getCurve 0001                                       _SMT1WIN 003F23  
                                     _SMT1TMR 003F12                                       _PWM8CON 003F62  
                                     _SLRCONA 003A43                                       _SLRCONB 003A53  
                                     _SLRCONC 003A63                                       _SLRCOND 003A73  
                                     _SLRCONE 003A83                             __end_of_checkBatt 5694  
                         ??_UART1_Receive_ISR 0012                              ___lomod@dividend 0014  
                     __end_of_TMR5_WriteTimer 60CC                           ?_PWM5_LoadDutyValue 0014  
                            ?_PWM7_Initialize 0001                              ?_TMR5_Initialize 0001  
                   INTERRUPT_Initialize@state 0014                          __size_of_setSteering 01F6  
                                   _CLCIN0PPS 003AD9                                     _CLCIN2PPS 003ADB  
                                   _CLCIN3PPS 003ADC                                       __Hparam 0000  
                                   ?_setMotor 0018                                       __Lparam 0000  
                    __end_of_UART1_Initialize 5438                                       ___aldiv 46B0  
                             __size_of___flge 0106                               __size_of___fleq 00AA  
                                     ___aodiv 3E7C                                       ___fladd 2340  
                                     ___aomod 418C                                       ___fldiv 2C52  
                                     ___awdiv 4FF4                                       ___flneg 5CB2  
                                     ___awmod 523A                                       ___flmul 2802  
                                     ___flsub 5A7A                                       ___fltol 47BC  
                                     ___lodiv 4BBC                                       ___lomod 4D8E  
                                     ___lwdiv 5694                     __end_of_UART1_Receive_ISR 523A  
                                   ?_vfprintf 01A4                          ??_PWM5_LoadDutyValue 0016  
                                __psmallconst 1000                               __size_of_efgtoa 0CAE  
                             __size_of_floorf 0216                                       __pcinit 5D22  
                   _TMR5_GateInterruptHandler 0192                              ?_PWM8_Initialize 0001  
                                     __ramtop 1000                   __size_of_UART1_Transmit_ISR 0044  
               ?_TMR5_SetGateInterruptHandler 0014                                       __ptext0 6164  
                                     __ptext1 458A                                       __ptext2 5438  
                                     __ptext3 42F0                                       __ptext4 3AE6  
                                     __ptext5 4E5E                                       __ptext6 60CC  
                                     __ptext7 5708                                       __ptext8 1D58  
                                     __ptext9 34EA                               __size_of_printf 0028  
                              ??_TMR4_10msISR 0013                          __size_of_TMR5_Reload 000E  
                                  ??_actSpeed 0024                               __size_of_strcpy 006A  
                             __size_of_strlen 003A                       __end_of_CLC3_Initialize 6074  
                       _OSCILLATOR_Initialize 621E                                     _T2CONbits 003FAC  
                                __size_of_abs 0040                                  __size_of_pad 00C2  
                                  ??___xxtofl 0020                                     _T3CONbits 003FA6  
                            ___awmod@dividend 0014                 __size_of_CCP4_DefaultCallBack 0036  
                            ___aldiv@dividend 0014                                     _T4CONbits 003FA0  
                    ??_PIN_MANAGER_Initialize 0014             __size_of_TMR4_SetInterruptHandler 000A  
                                   _T2HLTbits 003FAD                                     _T5CONbits 003F9A  
                   ?_TMR4_SetInterruptHandler 0014                                       _isupper 5C7A  
                                     efgtoa@c 0089                                       efgtoa@d 00A7  
                                     efgtoa@e 00BF                                       efgtoa@f 0085  
                                     efgtoa@g 00BB                                       efgtoa@h 00B1  
                                     efgtoa@i 00B9                                       efgtoa@l 00B5  
                                     efgtoa@m 00A1                                       efgtoa@n 00C1  
                                     efgtoa@p 00AB                                       efgtoa@t 009B  
                                     efgtoa@u 00C3                                       efgtoa@w 00AD  
                                   _IPR10bits 00398A                                       _smtDuty 0124  
                                   _T4HLTbits 003FA1                                    ??_getCurve 0014  
                                   _PIE10bits 00399A                    __size_of_SYSTEM_Initialize 004A  
                                     _tolower 57E2                                       _strncmp 4AC8  
                        end_of_initialization 5D52                                       floorf@e 0077  
                                   _T2RSTbits 003FAF                                       floorf@m 0073  
                                     floorf@u 0079                                       floorf@x 0036  
              ??_TMR4_DefaultInterruptHandler 0013                                     _T4RSTbits 003FA3  
                                   _PIR10bits 0039AA                                       fputc@fp 0018  
                           ??_SMT1_PR_ACQ_ISR 0011           __end_of_UART1_SetTxInterruptHandler 6268  
                 _UART1_SetTxInterruptHandler 625E                                       fputs@fp 0021  
              ??_UART1_SetOverrunErrorHandler 0016                                    ??_setMotor 001A  
                    __size_of_SMT1_Initialize 0030                             __end_of_vfpfcnvrt 2340  
                                  efgtoa@mode 00B0                             ?_CCP3_SetCallBack 0014  
                                  efgtoa@sign 00A9                              ___aldiv@quotient 001E  
                                     postdec2 003FDD                             ??_SMT1_PW_ACQ_ISR 0011  
                                     postinc0 003FEE                                       postinc1 003FE6  
                                     postinc2 003FDE                              ?_ADCC_Initialize 0001  
                          ??_CCP3_SetCallBack 0016                                    ??_vfprintf 003A  
            __end_of_ADCC_GetSingleConversion 5F2E                             UART1_Write@txData 0014  
                         _UART1_RxDataHandler 6074                                       strcpy@d 001C  
                                     strlen@a 0016                                       strcpy@s 001A  
                                     strlen@s 0014                          __size_of_startAccell 00A0  
                                 ?_getReverse 0001                                     _PORTBbits 003FCB  
                                   _PORTDbits 003FCD                      __size_of_CCP3_CaptureISR 0034  
                    __size_of_checkCurveCount 00CC                                   ___fladd@grs 0078  
                          getCurve@deltaRight 0018                                 ___xxtofl@sign 0024  
                                 ___fldiv@grs 0067                                   ___fldiv@rem 0060  
                        ?_UART1_RxDataHandler 0001                              ?_TMR5_WriteTimer 0009  
                        setSteering@steeringB 008A                          setSteering@steeringF 0088  
                     TMR5_WriteTimer@timerVal 0009                                   ___flmul@grs 0062  
                              _curveLeftCount 00FA                      __size_of_CCP4_CaptureISR 0034  
           CCP4_DefaultCallBack@capturedValue 0005                             ?_CCP4_SetCallBack 0014  
                __end_of_INTERRUPT_Initialize 599C                                __end_of___flge 49CA  
                              __end_of___fleq 5394                    __size_of_UART1_Receive_ISR 00C0  
                          ??_CCP4_SetCallBack 0016                                   _CLC3CONbits 003C60  
                                 vfpfcnvrt@ap 00CB                                   vfpfcnvrt@ct 00E7  
                                 vfpfcnvrt@fp 00C7                                   vfpfcnvrt@ll 00D1  
                              __end_of_efgtoa 1D58                             __size_of_TMR4_ISR 003C  
                              __end_of_floorf 34EA                        ?_OSCILLATOR_Initialize 0001  
                                  floorf@F527 0118                                __end_of_printf 60F4  
                 __size_of_PWM8_LoadDutyValue 0034                              ?_CLC3_Initialize 0001  
                              __end_of_strcpy 57E2                                __end_of_strlen 5C02  
                              _TMR5_ReadTimer 6140                           start_initialization 5D22  
                             ___lodiv@divisor 001C                               ___lodiv@counter 002C  
              ??_TMR5_SetGateInterruptHandler 0016               __size_of_PIN_MANAGER_Initialize 00CA  
                                 __end_of_abs 5B8A                                   __end_of_pad 517A  
                        __size_of_Default_ISR 0002                       ??_UART1_SetErrorHandler 0016  
                    __size_of_CCP3_Initialize 002E                         ??_UART1_RxDataHandler 0012  
                                 putch@txData 0015                                    ivt0x8_base 0008  
                               _uart1RxBuffer 0108                                   _actMotorPow 00EB  
                       __end_of___fpclassifyf 4AC8                                 _uart1TxBuffer 0110  
                         __size_of_getReverse 014E                          __end_of_TMR4_10msISR 62C2  
                                 vfprintf@fmt 01A6                                      ??___flge 0036  
                                    ??___fleq 001C                              ??_PMD_Initialize 0014  
                      __size_of_TMR5_GATE_ISR 0032                                  _oldDistRight 0134  
                    __size_of_CCP4_Initialize 002E                                      ??_efgtoa 008A  
                                    ??_floorf 006D                    __end_of_PWM7_LoadDutyValue 5E94  
                           ??_SMT1_Initialize 0014                                      ??_printf 003A  
                                    ??_strcpy 0018                                      ??_strlen 0016  
                      __end_of_TMR5_ReadTimer 6164                         CCP4_CaptureISR@module 0007  
                                   ___fladd@a 0071                                     ___fladd@b 006D  
                         calcMotorPow@addMPow 0089                      _ADCC_GetSingleConversion 5EFC  
                                   ___fldiv@a 002E                                     ___fldiv@b 002A  
                 PWM5_LoadDutyValue@dutyValue 0014                         TMR4_ISR@CountCallBack 00F3  
                                   ___flmul@a 002E                                     ___flmul@b 002A  
                                 __pbssCOMRAM 003A                                     ___flsub@a 007D  
                                   ___flsub@b 0079                            _UART1_ErrorHandler 019A  
                               __pcstackBANK0 0060                                 __pcstackBANK1 01A4  
                           __size_of_actSpeed 0094                              ___aodiv@dividend 0014  
                          _PWM6_LoadDutyValue 5DC4                      __size_of_TMR2_Initialize 001C  
                           __size_of___xxtofl 01B4                      _UART1_RxInterruptHandler 01A2  
                           ??_CCP3_CaptureISR 0003                  __end_of_CCP3_DefaultCallBack 5D8E  
                      __size_of_TMR4_CallBack 002E                             ??_checkCurveCount 003A  
                                   _calcSpeed 36F2                             __size_of_getCurve 01E2  
                         ?_PWM6_LoadDutyValue 0014                   PWM8_LoadDutyValue@dutyValue 0014  
                fp__UART1_DefaultErrorHandler 0000                                     _checkBatt 5602  
                                _currentSpeed 00ED                  ?_UART1_SetRxInterruptHandler 0014  
                                   __pnvBANK1 018E                                   _efgtoa$3562 008F  
                                 _efgtoa$3571 0095                                   _efgtoa$3563 0091  
                                 _efgtoa$3572 0097                                   _efgtoa$3573 0099  
                                 _efgtoa$3567 0093                            setMotor@motorPower 0018  
                            ___lwdiv@dividend 0014                        _PIN_MANAGER_Initialize 4F2A  
                                   _dtoa$3538 006A                      __size_of_PWM5_Initialize 0018  
                    __size_of_TMR3_Initialize 0038                             ?_UART1_Initialize 0001  
        __end_of_UART1_SetFramingErrorHandler 6286         __size_of_UART1_SetFramingErrorHandler 000A  
                _UART1_SetFramingErrorHandler 627C                                      ?___aldiv 0014  
             ADCC_GetSingleConversion@channel 0018                                      ?___aodiv 0014  
                                    ?___fladd 006D                                      ?___aomod 0014  
                           __size_of_setMotor 00E2              __end_of_TMR4_SetInterruptHandler 62A4  
                                    ?___fldiv 002A                                      ?___awdiv 0014  
                                   __ptext100 5F30                                     __ptext101 6184  
                                   __ptext102 6246                              ___aodiv@quotient 0026  
                                    ?___flneg 0014                                     __ptext103 60A0  
                                   __ptext104 6140                                     __ptext105 5A30  
                                   __ptext106 58FC                                     __ptext107 60F4  
                                   __ptext108 0000             CCP3_DefaultCallBack@capturedValue 0001  
                                    ?___awmod 0014                             ??_CCP4_CaptureISR 0007  
                                    ?___flmul 002A                                      ?___flsub 0079  
                                    ?___fltol 0079                                      ?___lodiv 0014  
                                    ?___lomod 0014                                      ?___lwdiv 0014  
                          ??_UART1_Initialize 0016                                     _distLeftM 013C  
                                   _distFront 00FD                              _uart1RxLastError 0042  
                               ??_UART1_Write 0014                                     _distRight 00F5  
                        ??_PWM6_LoadDutyValue 0016                                     _cycle10ms 00FB  
                           __size_of_vfprintf 0070                               ?_TMR5_ReadTimer 0009  
                               ?_calcMotorPow 0001                               ___lomod@divisor 001C  
                                 __smallconst 1000                               ___lomod@counter 0024  
                                    _CLC3GLS0 003C66                                      _CLC3GLS1 003C67  
                                    _CLC3GLS2 003C68                                      _CLC3GLS3 003C69  
                                   _driveMode 00FC           fp__UART1_DefaultOverrunErrorHandler 0000  
    __end_of_UART1_DefaultOverrunErrorHandler 62CA     __size_of_UART1_DefaultOverrunErrorHandler 0002  
          ??_UART1_DefaultOverrunErrorHandler 0012             ?_UART1_DefaultOverrunErrorHandler 0001  
            _UART1_DefaultOverrunErrorHandler 62C8                                      _CLC3SEL0 003C62  
                                    _CLC3SEL1 003C63                                      _CLC3SEL2 003C64  
                                    _CLC3SEL3 003C65                               _SMT1_PR_ACQ_ISR 5A30  
                               ?_calcSteering 0001                                      ?_isupper 0014  
                    __size_of_PWM6_Initialize 0018                      __size_of_TMR4_Initialize 002C  
                               _TMR5_GATE_ISR 5F30                                     _curveMode 0041  
                            ___lwdiv@quotient 0019                                      ?_tolower 001A  
                              __size_of_fputc 0096                                      _T2CLKCON 003FAE  
                              __size_of_fputs 0044                                      ?_strncmp 0014  
                                 _U1ERRIRbits 003DF9                                      _T4CLKCON 003FA2  
                              __size_of_putch 000A                                    ?_calcSpeed 0001  
                        _INTERRUPT_Initialize 5950                                 ??_setSteering 0086  
                             ___aldiv@divisor 0018                               _SMT1_PW_ACQ_ISR 58FC  
                             ___aldiv@counter 001C                                    ?_checkBatt 0001  
       UART1_SetErrorHandler@interruptHandler 0014                                      _IPR1bits 003981  
                __end_of_CCP4_DefaultCallBack 5DC4                             ??_CCP3_Initialize 0016  
                                    _IPR3bits 003983                                      _PIE1bits 003991  
                                    _PIE3bits 003993                                      _IPR7bits 003987  
                                    _IPR8bits 003988                                      _IPR9bits 003989  
                                    _PIE7bits 003997                                      _PIE8bits 003998  
                                    _PIE9bits 003999                                      _IVTBASEH 003FD6  
                                    _IVTBASEL 003FD5                                      _IVTBASEU 003FD7  
               ??_UART1_SetRxInterruptHandler 0016                                      i1u720_20 5B16  
                                    i1u720_21 5B12                                      i1u721_20 5B3A  
                                    i1u721_21 5B36                                      i1u722_20 519A  
                                    i1u722_21 5196                                      i1u731_20 6002  
                                    i1u731_21 5FFE                                      i1u724_20 51D2  
                                    i1u723_28 51B0                                      i1u724_21 51CE  
                                    i1u723_29 51C2                                      i1u732_28 6008  
                                    i1u741_20 5C5A                                      i1u740_28 5C24  
                                    i1u732_29 601A                                      i1u741_21 5C56  
                                    i1u740_29 5C36                                      i1u726_20 5216  
                                    i1u725_28 51E8                                      i1u726_21 5212  
                                    i1u725_29 51FA                                      i1u742_28 5C60  
                                    i1u742_29 5C72                                      i1u727_28 521C  
                                    i1u727_29 5230                                      _PIR1bits 0039A1  
                                    i1u747_20 5BB2                                      i1u659_20 6098  
                                    i1u739_20 5C1E                                      i1u747_21 5BAE  
                                    i1u659_21 6094                                      i1u739_21 5C1A  
                                    _PIR4bits 0039A4                                      _PIR6bits 0039A6  
                                    i2u660_40 60AE                                      i2u660_41 60AA  
                                    _PIR7bits 0039A7                                      _PIR8bits 0039A8  
                                    i2u728_40 5D66                                      i2u743_48 5EB2  
                                    i2u728_41 5D62                                      i2u743_49 5EC6  
                                    i2u745_40 5F48                                      i2u729_40 5D9C  
                                    i2u744_48 5EE6                                      i2u745_41 5F44  
                                    i2u729_41 5D98                                      i2u744_49 5EFA  
                                    _PIR9bits 0039A9                                      i2u746_48 5F4E  
                                    i2u746_49 5F60                                      i2u748_40 5A54  
                                    i2u748_41 5A50                                      i2u749_40 592A  
                                    i2u749_41 5926                                      _SMT1CON0 003F1E  
                                    _SMT1CON1 003F1F                      __size_of_PWM7_Initialize 0018  
                    __size_of_TMR5_Initialize 004A                                      _SMT1STAT 003F20  
                           _SMT1_Overflow_ISR 60F4                                      _TMR4_ISR 5B8C  
                  __end_of_UART1_Transmit_ISR 5B4A                                 _TMR4_CallBack 5FEE  
                                   _smtPeriod 0048                 ?_UART1_SetFramingErrorHandler 0014  
                               ??_TMR5_Reload 000B                   __size_of_PWM5_LoadDutyValue 0034  
                                   _vfpfcnvrt 1D58                            ?_SMT1_Overflow_ISR 0001  
                           _getBatteryVoltage 6236                                  ??_getReverse 003A  
                              ??_calcMotorPow 0083                                    _ADCON0bits 003EF8  
                                  _ADCON1bits 003EF9                                    _ADCON2bits 003EFA  
                                  _ADCON3bits 003EFB                            ?_getBatteryVoltage 0001  
                           ??_CCP4_Initialize 0016                                ??_calcSteering 008C  
                         ??_SMT1_Overflow_ISR 0011                     TMR5_ReadTimer@readValHigh 000F  
                   __size_of_CCP3_SetCallBack 000A                                ?_TMR5_GATE_ISR 0001  
                         __end_of_UART1_Write 589E                      __size_of_PWM8_Initialize 0018  
                                _SMT1CON0bits 003F1E                                  _SMT1CON1bits 003F1F  
                                  vfpfcnvrt@c 00EA                                    vfpfcnvrt@f 00E3  
                         ??_getBatteryVoltage 0019                                   _INTCON0bits 003FD2  
                       ?_INTERRUPT_Initialize 0001                         __size_of_TMR4_10msISR 000A  
                        fp__UART1_Receive_ISR 0000                        _uart1TxBufferRemaining 004C  
                    checkCurveCount@roundTime 01B4                             ??_TMR2_Initialize 0014  
                                _uart1RxCount 0043                            __end_of_getReverse 443E  
                                  _ADSTATbits 003EFC                                      __Hrparam 0000  
                   __end_of_SMT1_Overflow_ISR 611C                           __end_of_setSteering 3AE6  
                                  vfprintf@ap 01A8                                      __Lrparam 0000  
                                  vfprintf@fp 01A4                                   _oldDistLeft 0136  
                               ??_startAccell 003A                                ?_TMR4_CallBack 0001  
                              calcSpeed@speed 0087                     __end_of_getBatteryVoltage 6246  
                     ??_OSCILLATOR_Initialize 0014                              __size_of___aldiv 010C  
                            __size_of___aodiv 0188                              __size_of___fladd 04C2  
                            __size_of___aomod 0164                              __size_of___fldiv 039C  
                            __size_of___awdiv 00C4                              __size_of___flneg 0038  
                            __size_of___awmod 00B0                              __size_of___flmul 0450  
                            __size_of___flsub 0048                              __size_of___fltol 0108  
                                _SMT1STATbits 003F20                          _CCP3_DefaultCallBack 5D58  
                     __end_of_SMT1_PR_ACQ_ISR 5A7A                              __size_of___lodiv 00F0  
                            __size_of___lomod 00D0                                    ?_vfpfcnvrt 00C7  
                            __size_of___lwdiv 0074                               ___aodiv@divisor 001C  
                           ??_PWM5_Initialize 0014                             ??_TMR3_Initialize 0014  
                             ___aodiv@counter 0024                      _TMR4_SetInterruptHandler 629A  
                          ___fpclassifyf@F465 011C                                      _actSpeed 556E  
        __size_of_UART1_SetRxInterruptHandler 000A                                  _TMR4_10msISR 62B8  
                                    ___xxtofl 3CC8                      __size_of_ADCC_Initialize 005C  
                         __end_of_TMR5_Reload 6254                     __size_of_CCP4_SetCallBack 000A  
                                    __pivt0x8 0008                               ___lwdiv@divisor 0016  
                     __end_of_SMT1_PW_ACQ_ISR 5950                               ___lwdiv@counter 0018  
                                    _getCurve 3AE6                                      __ptext10 4D8E  
                                    __ptext11 4BBC                                      __ptext20 5CB2  
                                    __ptext12 4AC8                                      __ptext21 52EA  
                                    __ptext13 10AA                                      __ptext30 5B4A  
                                    __ptext22 523A                                      __ptext14 57E2  
                                    __ptext31 418C                                      __ptext23 2FEE  
                                    __ptext15 5C7A                                      __ptext40 2C52  
                                    __ptext32 3E7C                                      __ptext24 50B8  
                                    __ptext16 5778                                      __ptext41 5DC4  
                                    __ptext33 5694                                      __ptext25 5BC8  
                                    __ptext17 32D4                                      __ptext50 46B0  
                                    __ptext42 5DF8                                      __ptext34 5602  
                                    __ptext26 5AC2                                      __ptext18 49CA  
                                    __ptext51 3CC8                                      __ptext43 36F2  
                                    __ptext35 6236                                      __ptext27 54D8  
                                    __ptext19 5A7A                                      __ptext60 627C  
                                    __ptext52 47BC                                      __ptext44 2340  
                                    __ptext36 5EFC                                      __ptext28 6254  
                                    __ptext61 6286                                      __ptext53 2802  
                                    __ptext45 443E                                      __ptext37 48C4  
                                    __ptext29 5842                                      __ptext70 61D6  
                                    __ptext62 59E6                                      __ptext54 4FF4  
                                    __ptext46 4CAC                                      __ptext38 4004  
                                    __ptext71 61EE                                      __ptext63 6290  
                                    __ptext55 599C                                      __ptext47 5E2C  
                                    __ptext39 38F0                                      __ptext80 5FC0  
                                    __ptext72 6206                                      __ptext64 601C  
                                    __ptext56 5394                                      __ptext48 5E60  
                                    __ptext81 62AE                                      __ptext73 611C  
                                    __ptext65 629A                                      __ptext57 625E  
                                    __ptext49 556E                                      __ptext90 6074  
                                    __ptext82 589E                                      __ptext74 4F2A  
                                    __ptext66 5CEA                                      __ptext58 6268  
                                    __ptext91 5B8C                                      __ptext83 5C04  
                                    __ptext75 621E                                      __ptext67 61A2  
                                    __ptext59 6272                                      __ptext92 5FEE  
                                    __ptext84 5B06                                      __ptext76 5950  
                                    __ptext68 5F62                                      __ptext93 62B8  
                                    __ptext85 5C40                                      __ptext77 6048  
                                    __ptext69 61BE                                      __ptext94 62CC  
                                    __ptext86 517A                                      __ptext78 5F92  
                                    __ptext95 62D0                                      __ptext87 62C8  
                                    __ptext79 62A4                                      __ptext96 5E94  
                                    __ptext88 62CA                                      __ptext97 5D58  
                                    __ptext89 62C2                                      __ptext98 5EC8  
                                    __ptext99 5D8E                              __size_of_isupper 0038  
                                    _distLeft 00F7                __size_of_UART1_SetErrorHandler 000A  
                                 ??_calcSpeed 0083                 __end_of_UART1_SetErrorHandler 6290  
                            __size_of_tolower 0060                                    _T3GCONbits 003FA7  
                                  strcpy@dest 0014                              __size_of_strncmp 00F4  
                                 ??_checkBatt 003A                             ??_TMR4_Initialize 0016  
                           ??_PWM6_Initialize 0014                                 __size_of_main 0020  
                               __size_of_dtoa 02E6                                      _oldSpeed 012E  
                                  _T5GCONbits 003F9B                                 __size_of_loop 0126  
                               __size_of_utoa 0208                               _SMT1_Initialize 5F62  
                                 _IVTLOCKbits 003FD4                                      _setMotor 4CAC  
                                    _setSpeed 00EF                      __size_of_TMR5_WriteTimer 002C  
                                    efgtoa@fp 0083                                      efgtoa@ne 009F  
                                    efgtoa@pp 009D                                      efgtoa@ou 00A3  
                   _UART1_OverrunErrorHandler 019C  UART1_SetOverrunErrorHandler@interruptHandler 0014  
                                    isa$xinst 000000            __size_of_UART1_DefaultErrorHandler 0006  
                  ??_ADCC_GetSingleConversion 0016                    ?_UART1_DefaultErrorHandler 0001  
                       ?_CCP3_DefaultCallBack 0001                                      _vfprintf 5708  
                                   printf@fmt 01AC                    __end_of_PWM8_LoadDutyValue 5E60  
                             _CCP3_CaptureISR 5E94                                   _UART1_Write 5842  
                       fp__UART1_Transmit_ISR 0000                             ??_TMR5_Initialize 0016  
                           ??_PWM7_Initialize 0014           fp__TMR5_DefaultGateInterruptHandler 0000  
    __end_of_TMR5_DefaultGateInterruptHandler 61A2     __size_of_TMR5_DefaultGateInterruptHandler 001E  
          ??_TMR5_DefaultGateInterruptHandler 0011             ?_TMR5_DefaultGateInterruptHandler 0001  
            _TMR5_DefaultGateInterruptHandler 6184                              ___aomod@dividend 0014  
                             _checkCurveCount 4E5E                           __end_of_startAccell 54D8  
                              _battCheckCount 0132                                 ??_Default_ISR 0001  
              ??_UART1_SetFramingErrorHandler 0016                                  _reverseCount 0138  
                             ??_TMR5_GATE_ISR 0011                                _vfpfcnvrt$3598 00E1  
                 __end_of_UART1_RxDataHandler 60A0                                   _uart1RxHead 0045  
                        _CCP4_DefaultCallBack 5D8E                                   _uart1TxHead 0047  
                                 _uart1RxTail 0044                                   _uart1TxTail 0046  
                      ??_INTERRUPT_Initialize 0014                            _PWM7_LoadDutyValue 5E60  
                                    intlevel1 0000                                      intlevel2 0000  
                    __size_of_CLC3_Initialize 002C                                   _setSteering 38F0  
                             _CCP4_CaptureISR 5EC8                       ?_PIN_MANAGER_Initialize 0001  
                           ??_PWM8_Initialize 0014                           ?_PWM7_LoadDutyValue 0014  
                        __end_of_calcMotorPow 458A                                     strcpy@src 0016  
                                    isupper@c 0014                                     strncmp@_l 0014  
                                   strncmp@_r 0016                               ??_TMR4_CallBack 0013  
                  __size_of_SMT1_Overflow_ISR 0028                          __end_of_calcSteering 418C  
                         _uart1RxStatusBuffer 0100                                   efgtoa@nmode 00AF  
                                    printf@ap 01B2                              ??_TMR5_ReadTimer 000B  
                  __size_of_getBatteryVoltage 0010  UART1_SetFramingErrorHandler@interruptHandler 0014  
           __end_of_UART1_DefaultErrorHandler 62C8                               ___aomod@divisor 001C  
                                 ??_vfpfcnvrt 00CD                                   _reverseTime 012C  
                             ___aomod@counter 0024                              ?_SMT1_PR_ACQ_ISR 0001  
                                 _TMR5_Reload 6246                                    _SMT1SIGPPS 003AD2  
                                  _SMT1WINPPS 003AD1                          ??_PWM7_LoadDutyValue 0016  
                                    tolower@c 001A                                 actSpeed@speed 0024  
                      __size_of___fpclassifyf 00FE                         ?_CCP4_DefaultCallBack 0005  
                   calcMotorPow@oldSpeedDelta 0087                                      strncmp@l 001B  
                                    strncmp@n 0018                              _CCP3_SetCallBack 62AE  
                                    strncmp@r 001D                     __size_of_UART1_Initialize 00A4  
                                ___aldiv@sign 001D                              ?_SMT1_PW_ACQ_ISR 0001  
                             _CCP3_Initialize 5FC0                   PWM6_LoadDutyValue@dutyValue 0014  
                           calcSteering@delta 008E                      _UART1_TxInterruptHandler 01A0  
                               ___fladd@signs 0075                           __end_of_Default_ISR 62D2  
                     __end_of_SMT1_Initialize 5F92                                  ___aodiv@sign 0025  
              __end_of_PIN_MANAGER_Initialize 4FF4                             ??_ADCC_Initialize 0014  
                                ___fladd@aexp 0076                                  ___fladd@bexp 0077  
                ?_UART1_SetTxInterruptHandler 0014                                  ___aomod@sign 0025  
                     __end_of_CCP3_CaptureISR 5EC8  
