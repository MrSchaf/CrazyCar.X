

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Thu Jan 25 12:53:24 2024

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F46K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1
    79                           	psect	text64,global,reloc=2,class=CODE,delta=1
    80                           	psect	text65,global,reloc=2,class=CODE,delta=1
    81                           	psect	text66,global,reloc=2,class=CODE,delta=1
    82                           	psect	text67,global,reloc=4,class=CODE,delta=1
    83                           	psect	text68,global,reloc=2,class=CODE,delta=1
    84                           	psect	text69,global,reloc=4,class=CODE,delta=1
    85                           	psect	text70,global,reloc=2,class=CODE,delta=1
    86                           	psect	text71,global,reloc=2,class=CODE,delta=1
    87                           	psect	text72,global,reloc=2,class=CODE,delta=1
    88                           	psect	text73,global,reloc=2,class=CODE,delta=1
    89                           	psect	text74,global,reloc=2,class=CODE,delta=1
    90                           	psect	text75,global,reloc=4,class=CODE,delta=1
    91                           	psect	text76,global,reloc=2,class=CODE,delta=1
    92                           	psect	text77,global,reloc=2,class=CODE,delta=1
    93                           	psect	text78,global,reloc=2,class=CODE,delta=1
    94                           	psect	text79,global,reloc=4,class=CODE,delta=1
    95                           	psect	text80,global,reloc=4,class=CODE,delta=1
    96                           	psect	text81,global,reloc=2,class=CODE,delta=1
    97                           	psect	text82,global,reloc=4,class=CODE,delta=1
    98                           	psect	text83,global,reloc=2,class=CODE,delta=1
    99                           	psect	text84,global,reloc=4,class=CODE,delta=1
   100                           	psect	text85,global,reloc=2,class=CODE,delta=1
   101                           	psect	text86,global,reloc=2,class=CODE,delta=1
   102                           	psect	text87,global,reloc=2,class=CODE,delta=1
   103                           	psect	text88,global,reloc=2,class=CODE,delta=1
   104                           	psect	text89,global,reloc=4,class=CODE,delta=1
   105                           	psect	text90,global,reloc=4,class=CODE,delta=1
   106                           	psect	text91,global,reloc=4,class=CODE,delta=1
   107                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   108                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   109                           	psect	text92,global,reloc=4,class=CODE,delta=1
   110                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   111                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   112  0000                     
   113                           ; Version 2.20
   114                           ; Generated 05/05/2020 GMT
   115                           ; 
   116                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   117                           ; All rights reserved.
   118                           ; 
   119                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   120                           ; 
   121                           ; Redistribution and use in source and binary forms, with or without modification, are
   122                           ; permitted provided that the following conditions are met:
   123                           ; 
   124                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   125                           ;        conditions and the following disclaimer.
   126                           ; 
   127                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   128                           ;        of conditions and the following disclaimer in the documentation and/or other
   129                           ;        materials provided with the distribution.
   130                           ; 
   131                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   132                           ;        software without specific prior written permission.
   133                           ; 
   134                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   135                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   136                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   137                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   138                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   139                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   140                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   141                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   142                           ; 
   143                           ; 
   144                           ; Code-generator required, PIC18F46K42 Definitions
   145                           ; 
   146                           ; SFR Addresses
   147  0000                     _ADERRL	set	16098
   148  0000                     _ADERRH	set	16099
   149  0000                     _ADPREVL	set	16109
   150  0000                     _ADPREVH	set	16110
   151  0000                     _ADFLTRL	set	16102
   152  0000                     _ADFLTRH	set	16103
   153  0000                     _ADACCL	set	16104
   154  0000                     _ADACCH	set	16105
   155  0000                     _ADCNT	set	16107
   156  0000                     _ADRESL	set	16111
   157  0000                     _ADRESH	set	16112
   158  0000                     _ADCON0	set	16120
   159  0000                     _ADCON1	set	16121
   160  0000                     _ADPREH	set	16119
   161  0000                     _ADPREL	set	16118
   162  0000                     _ADCAP	set	16117
   163  0000                     _ADACQH	set	16116
   164  0000                     _ADPCH	set	16113
   165  0000                     _ADRPT	set	16108
   166  0000                     _ADACCU	set	16106
   167  0000                     _ADSTPTH	set	16101
   168  0000                     _ADSTPTL	set	16100
   169  0000                     _ADUTHH	set	16097
   170  0000                     _ADUTHL	set	16096
   171  0000                     _ADLTHH	set	16095
   172  0000                     _T2CON	set	16300
   173  0000                     _T2TMR	set	16298
   174  0000                     _T2PR	set	16299
   175  0000                     _T2HLT	set	16301
   176  0000                     _T2CLKCON	set	16302
   177  0000                     _SMT1SIG	set	16162
   178  0000                     _SMT1WIN	set	16163
   179  0000                     _SMT1CLK	set	16161
   180  0000                     _SMT1STAT	set	16160
   181  0000                     _SMT1CON1	set	16159
   182  0000                     _PWM8DCL	set	16224
   183  0000                     _PWM8DCH	set	16225
   184  0000                     _PWM8CON	set	16226
   185  0000                     _CCPTMRS1bits	set	16223
   186  0000                     _PWM7DCL	set	16228
   187  0000                     _PWM7DCH	set	16229
   188  0000                     _PWM7CON	set	16230
   189  0000                     _T4CON	set	16288
   190  0000                     _PIR7bits	set	14759
   191  0000                     _T4TMR	set	16286
   192  0000                     _T4PR	set	16287
   193  0000                     _T4RST	set	16291
   194  0000                     _T4HLT	set	16289
   195  0000                     _T4CLKCON	set	16290
   196  0000                     _T3CON	set	16294
   197  0000                     _TMR3L	set	16292
   198  0000                     _TMR3H	set	16293
   199  0000                     _T3CLK	set	16297
   200  0000                     _T3GATE	set	16296
   201  0000                     _T3GCON	set	16295
   202  0000                     _T5CON	set	16282
   203  0000                     _T5CLK	set	16285
   204  0000                     _T5GATE	set	16284
   205  0000                     _CCPR4L	set	16240
   206  0000                     _CCPR4H	set	16241
   207  0000                     _CCP4CAP	set	16243
   208  0000                     _CCP4CON	set	16242
   209  0000                     _IPR9bits	set	14729
   210  0000                     _IVTBASEL	set	16341
   211  0000                     _IVTBASEH	set	16342
   212  0000                     _IVTBASEU	set	16343
   213  0000                     _CCP4PPS	set	15056
   214  0000                     _SMT1WINPPS	set	15057
   215  0000                     _CLCIN0PPS	set	15065
   216  0000                     _CLCIN3PPS	set	15068
   217  0000                     _TRISD	set	16325
   218  0000                     _TRISC	set	16324
   219  0000                     _TRISB	set	16323
   220  0000                     _LATC	set	16316
   221  0000                     _LATB	set	16315
   222  0000                     _OSCTUNE	set	14814
   223  0000                     _OSCFRQ	set	14815
   224                           
   225                           	psect	nvCOMRAM
   226  000038                     __pnvCOMRAM:
   227                           	callstack 0
   228  000038                     _TMR5_GateInterruptHandler:
   229                           	callstack 0
   230  000038                     	ds	2
   231  00003A                     _timer5ReloadVal:
   232                           	callstack 0
   233  00003A                     	ds	2
   234  00003C                     _UART1_TxInterruptHandler:
   235                           	callstack 0
   236  00003C                     	ds	2
   237  00003E                     _UART1_RxInterruptHandler:
   238                           	callstack 0
   239  00003E                     	ds	2
   240  000040                     _uart1TxBufferRemaining:
   241                           	callstack 0
   242  000040                     	ds	1
   243                           
   244                           	psect	nvBANK0
   245  0000EF                     __pnvBANK0:
   246                           	callstack 0
   247  0000EF                     _BatteryVolt:
   248                           	callstack 0
   249  0000EF                     	ds	2
   250  0000F1                     _TMR4_InterruptHandler:
   251                           	callstack 0
   252  0000F1                     	ds	2
   253  0000F3                     _timer3ReloadVal:
   254                           	callstack 0
   255  0000F3                     	ds	2
   256  0000F5                     _CCP4_CallBack:
   257                           	callstack 0
   258  0000F5                     	ds	2
   259  0000F7                     _CCP3_CallBack:
   260                           	callstack 0
   261  0000F7                     	ds	2
   262  0000F9                     _UART1_ErrorHandler:
   263                           	callstack 0
   264  0000F9                     	ds	2
   265  0000FB                     _UART1_OverrunErrorHandler:
   266                           	callstack 0
   267  0000FB                     	ds	2
   268  0000FD                     _UART1_FramingErrorHandler:
   269                           	callstack 0
   270  0000FD                     	ds	2
   271  0000                     _CLC3CON	set	15456
   272  0000                     _U1ERRIRbits	set	15865
   273  0000                     _ADCON1bits	set	16121
   274  0000                     _ADSTATbits	set	16124
   275  0000                     _ADCON2bits	set	16122
   276  0000                     _ADCON3bits	set	16123
   277  0000                     _ADCON0bits	set	16120
   278  0000                     _SMT1PR	set	16155
   279  0000                     _SMT1STATbits	set	16160
   280  0000                     _SMT1CON0bits	set	16158
   281  0000                     _SMT1CON1bits	set	16159
   282  0000                     _PR2	set	16299
   283  0000                     _TMR2	set	16298
   284  0000                     _T2CONbits	set	16300
   285  0000                     _T2RSTbits	set	16303
   286  0000                     _T2HLTbits	set	16301
   287  0000                     _PR4	set	16287
   288  0000                     _TMR4	set	16286
   289  0000                     _T4CONbits	set	16288
   290  0000                     _T4RSTbits	set	16291
   291  0000                     _T4HLTbits	set	16289
   292  0000                     _T3GCONbits	set	16295
   293  0000                     _T3CONbits	set	16294
   294  0000                     _T5GCONbits	set	16283
   295  0000                     _T5CONbits	set	16282
   296  0000                     _IVTLOCKbits	set	16340
   297  0000                     _GIE	set	130711
   298  0000                     _IPR1bits	set	14721
   299  0000                     _IPR3bits	set	14723
   300  0000                     _PIE3bits	set	14739
   301  0000                     _PMD0	set	14784
   302  0000                     _OSCCON1	set	14809
   303  0000                     _OSCCON3	set	14811
   304  0000                     _OSCEN	set	14813
   305  0000                     _RA0PPS	set	14848
   306  0000                     _RA1PPS	set	14849
   307  0000                     _ANSELA	set	14912
   308  0000                     _ANSELB	set	14928
   309  0000                     _ANSELC	set	14944
   310  0000                     _ANSELD	set	14960
   311  0000                     _LATA	set	16314
   312  0000                     _LATD	set	16317
   313  0000                     _LATE	set	16318
   314  0000                     _PMD7	set	14791
   315  0000                     _PMD6	set	14790
   316  0000                     _PMD5	set	14789
   317  0000                     _PMD4	set	14788
   318  0000                     _PMD3	set	14787
   319  0000                     _PMD2	set	14786
   320  0000                     _PMD1	set	14785
   321  0000                     _TRISA	set	16322
   322  0000                     _TRISE	set	16326
   323  0000                     _PORTDbits	set	16333
   324  0000                     _INTCON0bits	set	16338
   325  0000                     _INLVLD	set	14964
   326  0000                     _SLRCOND	set	14963
   327  0000                     _ODCOND	set	14962
   328  0000                     _RD0I2C	set	14970
   329  0000                     _WPUD	set	14961
   330  0000                     _ANSELE	set	14976
   331  0000                     _INLVLC	set	14948
   332  0000                     _SLRCONC	set	14947
   333  0000                     _ODCONC	set	14946
   334  0000                     _RC3I2C	set	14954
   335  0000                     _WPUC	set	14945
   336  0000                     _INLVLB	set	14932
   337  0000                     _SLRCONB	set	14931
   338  0000                     _ODCONB	set	14930
   339  0000                     _RB1I2C	set	14938
   340  0000                     _WPUB	set	14929
   341  0000                     _T5GPPS	set	15049
   342  0000                     _CCP3PPS	set	15055
   343  0000                     _INLVLE	set	14980
   344  0000                     _SLRCONE	set	14979
   345  0000                     _ODCONE	set	14978
   346  0000                     _WPUE	set	14977
   347  0000                     _INLVLA	set	14916
   348  0000                     _SLRCONA	set	14915
   349  0000                     _ODCONA	set	14914
   350  0000                     _WPUA	set	14913
   351  0000                     _RB2I2C	set	14939
   352  0000                     _RC4I2C	set	14955
   353  0000                     _RD1I2C	set	14971
   354  0000                     _U1RXPPS	set	15077
   355  0000                     _RA3PPS	set	14851
   356  0000                     _RA4PPS	set	14852
   357  0000                     _CLC3CONbits	set	15456
   358  0000                     _U1RXB	set	15848
   359  0000                     _U1TXB	set	15850
   360  0000                     _U1P1L	set	15852
   361  0000                     _RB3PPS	set	14859
   362  0000                     _CLCIN2PPS	set	15067
   363  0000                     _SMT1SIGPPS	set	15058
   364  0000                     _PIE7bits	set	14743
   365  0000                     _PIE8bits	set	14744
   366  0000                     _PIE9bits	set	14745
   367  0000                     _PIR9bits	set	14761
   368  0000                     _SMT1TMR	set	16146
   369  0000                     _SMT1CPR	set	16149
   370  0000                     _SMT1CPW	set	16152
   371  0000                     _ADLTHL	set	16094
   372  0000                     _SMT1PRL	set	16155
   373  0000                     _SMT1PRH	set	16156
   374  0000                     _SMT1PRU	set	16157
   375  0000                     _SMT1CON0	set	16158
   376  0000                     _CCPTMRS0bits	set	16222
   377  0000                     _CCPR3L	set	16244
   378  0000                     _CCPR3H	set	16245
   379  0000                     _CCP3CON	set	16246
   380  0000                     _U1ERRIE	set	15866
   381  0000                     _U1ERRIR	set	15865
   382  0000                     _U1UIR	set	15864
   383  0000                     _U1FIFO	set	15863
   384  0000                     _U1BRGH	set	15862
   385  0000                     _U1BRGL	set	15861
   386  0000                     _U1CON2	set	15860
   387  0000                     _U1CON1	set	15859
   388  0000                     _U1CON0	set	15858
   389  0000                     _U1P3H	set	15857
   390  0000                     _U1P3L	set	15856
   391  0000                     _U1P2H	set	15855
   392  0000                     _U1P2L	set	15854
   393  0000                     _U1P1H	set	15853
   394  0000                     _IVTLOCK	set	16340
   395  0000                     _IPR7bits	set	14727
   396  0000                     _IPR8bits	set	14728
   397  0000                     _IPR10bits	set	14730
   398  0000                     _PIE1bits	set	14737
   399  0000                     _TMR5L	set	16280
   400  0000                     _TMR5H	set	16281
   401  0000                     _T5GCON	set	16283
   402  0000                     _CCP3CAP	set	16247
   403  0000                     _PIR10bits	set	14762
   404  0000                     _PIR1bits	set	14753
   405  0000                     _PIR6bits	set	14758
   406  0000                     _PIR8bits	set	14760
   407  0000                     _PIE10bits	set	14746
   408  0000                     _PWM6DCL	set	16232
   409  0000                     _PWM6DCH	set	16233
   410  0000                     _PWM6CON	set	16234
   411  0000                     _PWM5DCL	set	16236
   412  0000                     _PWM5DCH	set	16237
   413  0000                     _PWM5CON	set	16238
   414  0000                     _PIR4bits	set	14756
   415  0000                     _CLC3GLS3	set	15465
   416  0000                     _CLC3GLS2	set	15464
   417  0000                     _CLC3GLS1	set	15463
   418  0000                     _CLC3GLS0	set	15462
   419  0000                     _CLC3SEL3	set	15461
   420  0000                     _CLC3SEL2	set	15460
   421  0000                     _CLC3SEL1	set	15459
   422  0000                     _CLC3SEL0	set	15458
   423  0000                     _CLC3POL	set	15457
   424  0000                     _T2RST	set	16303
   425  0000                     _ADACQL	set	16115
   426  0000                     _ADCLK	set	16127
   427  0000                     _ADACT	set	16126
   428  0000                     _ADREF	set	16125
   429  0000                     _ADSTAT	set	16124
   430  0000                     _ADCON3	set	16123
   431  0000                     _ADCON2	set	16122
   432                           
   433                           	psect	smallconst
   434  001000                     __psmallconst:
   435                           	callstack 0
   436  001000  00                 	db	0
   437  001001                     STR_2:
   438                           
   439                           ; BSR set to: 0
   440  001001  4F                 	db	79	;'O'
   441  001002  75                 	db	117	;'u'
   442  001003  74                 	db	116	;'t'
   443  001004  20                 	db	32
   444  001005  7C                 	db	124
   445  001006  20                 	db	32
   446  001007  64                 	db	100	;'d'
   447  001008  4C                 	db	76	;'L'
   448  001009  3D                 	db	61	;'='
   449  00100A  20                 	db	32
   450  00100B  25                 	db	37
   451  00100C  64                 	db	100	;'d'
   452  00100D  20                 	db	32
   453  00100E  7C                 	db	124
   454  00100F  20                 	db	32
   455  001010  64                 	db	100	;'d'
   456  001011  52                 	db	82	;'R'
   457  001012  3D                 	db	61	;'='
   458  001013  20                 	db	32
   459  001014  25                 	db	37
   460  001015  64                 	db	100	;'d'
   461  001016  00                 	db	0
   462  001017                     STR_5:
   463                           
   464                           ; BSR set to: 0
   465  001017  20                 	db	32
   466  001018  20                 	db	32
   467  001019  20                 	db	32
   468  00101A  43                 	db	67	;'C'
   469  00101B  75                 	db	117	;'u'
   470  00101C  72                 	db	114	;'r'
   471  00101D  76                 	db	118	;'v'
   472  00101E  65                 	db	101	;'e'
   473  00101F  52                 	db	82	;'R'
   474  001020  69                 	db	105	;'i'
   475  001021  67                 	db	103	;'g'
   476  001022  68                 	db	104	;'h'
   477  001023  74                 	db	116	;'t'
   478  001024  00                 	db	0
   479  001025                     STR_3:
   480                           
   481                           ; BSR set to: 0
   482  001025  20                 	db	32
   483  001026  20                 	db	32
   484  001027  20                 	db	32
   485  001028  43                 	db	67	;'C'
   486  001029  75                 	db	117	;'u'
   487  00102A  72                 	db	114	;'r'
   488  00102B  76                 	db	118	;'v'
   489  00102C  65                 	db	101	;'e'
   490  00102D  4C                 	db	76	;'L'
   491  00102E  65                 	db	101	;'e'
   492  00102F  66                 	db	102	;'f'
   493  001030  74                 	db	116	;'t'
   494  001031  00                 	db	0
   495  001032                     STR_1:
   496                           
   497                           ; BSR set to: 0
   498  001032  42                 	db	66	;'B'
   499  001033  56                 	db	86	;'V'
   500  001034  6F                 	db	111	;'o'
   501  001035  6C                 	db	108	;'l'
   502  001036  74                 	db	116	;'t'
   503  001037  3A                 	db	58	;':'
   504  001038  20                 	db	32
   505  001039  25                 	db	37
   506  00103A  75                 	db	117	;'u'
   507  00103B  0A                 	db	10
   508  00103C  00                 	db	0
   509  00103D                     STR_6:
   510                           
   511                           ; BSR set to: 0
   512  00103D  49                 	db	73	;'I'
   513  00103E  6E                 	db	110	;'n'
   514  00103F  43                 	db	67	;'C'
   515  001040  75                 	db	117	;'u'
   516  001041  72                 	db	114	;'r'
   517  001042  76                 	db	118	;'v'
   518  001043  65                 	db	101	;'e'
   519  001044  0A                 	db	10
   520  001045  00                 	db	0
   521  001046  00                 	db	0	; dummy byte at the end
   522  0000                     
   523                           ; #config settings
   524                           
   525                           	psect	cinit
   526  0040CE                     __pcinit:
   527                           	callstack 0
   528  0040CE                     start_initialization:
   529                           	callstack 0
   530  0040CE                     __initialization:
   531                           	callstack 0
   532                           
   533                           ; Clear objects allocated to BANK1 (32 bytes)
   534  0040CE  EE00  F100         	lfsr	0,__pbssBANK1
   535  0040D2  0E20               	movlw	32
   536  0040D4                     clear_0:
   537  0040D4  6AEE               	clrf	postinc0,c
   538  0040D6  06E8               	decf	wreg,f,c
   539  0040D8  E1FD               	bnz	clear_0
   540                           
   541                           ; Clear objects allocated to BANK0 (61 bytes)
   542  0040DA  EE00  F0B2         	lfsr	0,__pbssBANK0
   543  0040DE  0E3D               	movlw	61
   544  0040E0                     clear_1:
   545  0040E0  6AEE               	clrf	postinc0,c
   546  0040E2  06E8               	decf	wreg,f,c
   547  0040E4  E1FD               	bnz	clear_1
   548                           
   549                           ; Clear objects allocated to COMRAM (21 bytes)
   550  0040E6  EE00  F023         	lfsr	0,__pbssCOMRAM
   551  0040EA  0E15               	movlw	21
   552  0040EC                     clear_2:
   553  0040EC  6AEE               	clrf	postinc0,c
   554  0040EE  06E8               	decf	wreg,f,c
   555  0040F0  E1FD               	bnz	clear_2
   556                           
   557                           ;
   558                           ; Setup IVTBASE
   559                           ;
   560  0040F2  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   561  0040F4  6ED5               	movwf	213,c
   562  0040F6  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   563  0040F8  6ED6               	movwf	214,c
   564  0040FA  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   565  0040FC  6ED7               	movwf	215,c
   566  0040FE                     end_of_initialization:
   567                           	callstack 0
   568  0040FE                     __end_of__initialization:
   569                           	callstack 0
   570  0040FE  0100               	movlb	0
   571  004100  EF20  F022         	goto	_main	;jump to C main() function
   572                           
   573                           	psect	bssCOMRAM
   574  000023                     __pbssCOMRAM:
   575                           	callstack 0
   576  000023                     _flags:
   577                           	callstack 0
   578  000023                     	ds	2
   579  000025                     _motPow:
   580                           	callstack 0
   581  000025                     	ds	2
   582  000027                     TMR4_ISR@CountCallBack:
   583                           	callstack 0
   584  000027                     	ds	2
   585  000029                     _distRightM:
   586                           	callstack 0
   587  000029                     	ds	2
   588  00002B                     _distLeftM:
   589                           	callstack 0
   590  00002B                     	ds	2
   591  00002D                     _reverseCount:
   592                           	callstack 0
   593  00002D                     	ds	1
   594  00002E                     _uart1RxLastError:
   595                           	callstack 0
   596  00002E                     	ds	1
   597  00002F                     _uart1RxCount:
   598                           	callstack 0
   599  00002F                     	ds	1
   600  000030                     _uart1RxTail:
   601                           	callstack 0
   602  000030                     	ds	1
   603  000031                     _uart1RxHead:
   604                           	callstack 0
   605  000031                     	ds	1
   606  000032                     _uart1TxTail:
   607                           	callstack 0
   608  000032                     	ds	1
   609  000033                     _uart1TxHead:
   610                           	callstack 0
   611  000033                     	ds	1
   612  000034                     _smtPeriod:
   613                           	callstack 0
   614  000034                     	ds	4
   615                           
   616                           	psect	bssBANK0
   617  0000B2                     __pbssBANK0:
   618                           	callstack 0
   619  0000B2                     _uart1RxStatusBuffer:
   620                           	callstack 0
   621  0000B2                     	ds	8
   622  0000BA                     _uart1RxBuffer:
   623                           	callstack 0
   624  0000BA                     	ds	8
   625  0000C2                     _uart1TxBuffer:
   626                           	callstack 0
   627  0000C2                     	ds	8
   628  0000CA                     _smtWay:
   629                           	callstack 0
   630  0000CA                     	ds	4
   631  0000CE                     _smtDuty:
   632                           	callstack 0
   633  0000CE                     	ds	4
   634  0000D2                     _nout:
   635                           	callstack 0
   636  0000D2                     	ds	2
   637  0000D4                     _width:
   638                           	callstack 0
   639  0000D4                     	ds	2
   640  0000D6                     _prec:
   641                           	callstack 0
   642  0000D6                     	ds	2
   643  0000D8                     _actMotorPow:
   644                           	callstack 0
   645  0000D8                     	ds	2
   646  0000DA                     _oldSpeed:
   647                           	callstack 0
   648  0000DA                     	ds	2
   649  0000DC                     _currentSpeed:
   650                           	callstack 0
   651  0000DC                     	ds	2
   652  0000DE                     _setSpeed:
   653                           	callstack 0
   654  0000DE                     	ds	2
   655  0000E0                     _oldDistRight:
   656                           	callstack 0
   657  0000E0                     	ds	2
   658  0000E2                     _oldDistLeft:
   659                           	callstack 0
   660  0000E2                     	ds	2
   661  0000E4                     _distRight:
   662                           	callstack 0
   663  0000E4                     	ds	2
   664  0000E6                     _distLeft:
   665                           	callstack 0
   666  0000E6                     	ds	2
   667  0000E8                     _battCheckCount:
   668                           	callstack 0
   669  0000E8                     	ds	1
   670  0000E9                     _delay:
   671                           	callstack 0
   672  0000E9                     	ds	1
   673  0000EA                     _cycle10ms:
   674                           	callstack 0
   675  0000EA                     	ds	1
   676  0000EB                     _curveMode:
   677                           	callstack 0
   678  0000EB                     	ds	1
   679  0000EC                     _driveMode:
   680                           	callstack 0
   681  0000EC                     	ds	1
   682  0000ED                     _distFront:
   683                           	callstack 0
   684  0000ED                     	ds	2
   685                           
   686                           	psect	bssBANK1
   687  000100                     __pbssBANK1:
   688                           	callstack 0
   689  000100                     _dbuf:
   690                           	callstack 0
   691  000100                     	ds	32
   692                           
   693                           	psect	cstackBANK1
   694  000120                     __pcstackBANK1:
   695                           	callstack 0
   696  000120                     vfpfcnvrt@ll:
   697                           	callstack 0
   698                           
   699                           ; 8 bytes @ 0x0
   700  000120                     	ds	8
   701  000128                     vfpfcnvrt@llu:
   702                           	callstack 0
   703                           
   704                           ; 8 bytes @ 0x8
   705  000128                     	ds	8
   706  000130                     ?_printf:
   707                           	callstack 0
   708  000130                     printf@fmt:
   709                           	callstack 0
   710                           
   711                           ; 2 bytes @ 0x10
   712  000130                     	ds	6
   713  000136                     ??_getCurve:
   714                           
   715                           ; 1 bytes @ 0x16
   716  000136                     	ds	2
   717  000138                     getCurve@deltaLeft:
   718                           	callstack 0
   719                           
   720                           ; 2 bytes @ 0x18
   721  000138                     	ds	2
   722  00013A                     getCurve@deltaRight:
   723                           	callstack 0
   724                           
   725                           ; 2 bytes @ 0x1A
   726  00013A                     	ds	2
   727                           
   728                           	psect	cstackBANK0
   729  000060                     __pcstackBANK0:
   730                           	callstack 0
   731  000060                     ??_TMR5_Initialize:
   732  000060                     ??_PWM7_LoadDutyValue:
   733  000060                     ??_PWM8_LoadDutyValue:
   734  000060                     ??_PWM5_LoadDutyValue:
   735  000060                     ??_PWM6_LoadDutyValue:
   736  000060                     ??_ADCC_GetSingleConversion:
   737  000060                     ?___awdiv:
   738                           	callstack 0
   739  000060                     ?___aldiv:
   740                           	callstack 0
   741  000060                     ?___aodiv:
   742                           	callstack 0
   743  000060                     ?___aomod:
   744                           	callstack 0
   745  000060                     ?___lodiv:
   746                           	callstack 0
   747  000060                     ?___lomod:
   748                           	callstack 0
   749  000060                     ___awdiv@dividend:
   750                           	callstack 0
   751  000060                     fputc@c:
   752                           	callstack 0
   753  000060                     strlen@a:
   754                           	callstack 0
   755  000060                     ___aldiv@dividend:
   756                           	callstack 0
   757  000060                     ___aodiv@dividend:
   758                           	callstack 0
   759  000060                     ___aomod@dividend:
   760                           	callstack 0
   761  000060                     ___lodiv@dividend:
   762                           	callstack 0
   763  000060                     ___lomod@dividend:
   764                           	callstack 0
   765                           
   766                           ; 8 bytes @ 0x0
   767  000060                     	ds	2
   768  000062                     setMotor@motorPower:
   769                           	callstack 0
   770  000062                     ___awdiv@divisor:
   771                           	callstack 0
   772  000062                     fputc@fp:
   773                           	callstack 0
   774                           
   775                           ; 2 bytes @ 0x2
   776  000062                     	ds	2
   777  000064                     ??_setMotor:
   778  000064                     ??_fputc:
   779  000064                     ___awdiv@counter:
   780                           	callstack 0
   781  000064                     ___aldiv@divisor:
   782                           	callstack 0
   783                           
   784                           ; 4 bytes @ 0x4
   785  000064                     	ds	1
   786  000065                     ___awdiv@sign:
   787                           	callstack 0
   788                           
   789                           ; 1 bytes @ 0x5
   790  000065                     	ds	1
   791  000066                     ___awdiv@quotient:
   792                           	callstack 0
   793                           
   794                           ; 2 bytes @ 0x6
   795  000066                     	ds	2
   796  000068                     ?___xxtofl:
   797                           	callstack 0
   798  000068                     ___aldiv@counter:
   799                           	callstack 0
   800  000068                     setSteering@steering:
   801                           	callstack 0
   802  000068                     ___xxtofl@val:
   803                           	callstack 0
   804  000068                     ___aodiv@divisor:
   805                           	callstack 0
   806  000068                     ___aomod@divisor:
   807                           	callstack 0
   808  000068                     ___lodiv@divisor:
   809                           	callstack 0
   810  000068                     ___lomod@divisor:
   811                           	callstack 0
   812                           
   813                           ; 8 bytes @ 0x8
   814  000068                     	ds	1
   815  000069                     ___aldiv@sign:
   816                           	callstack 0
   817  000069                     fputs@s:
   818                           	callstack 0
   819                           
   820                           ; 2 bytes @ 0x9
   821  000069                     	ds	1
   822  00006A                     setSteering@steeringMode:
   823                           	callstack 0
   824  00006A                     ___aldiv@quotient:
   825                           	callstack 0
   826                           
   827                           ; 4 bytes @ 0xA
   828  00006A                     	ds	1
   829  00006B                     ??_setSteering:
   830  00006B                     fputs@fp:
   831                           	callstack 0
   832                           
   833                           ; 2 bytes @ 0xB
   834  00006B                     	ds	1
   835  00006C                     ??___xxtofl:
   836                           
   837                           ; 1 bytes @ 0xC
   838  00006C                     	ds	1
   839  00006D                     fputs@c:
   840                           	callstack 0
   841  00006D                     setSteering@steeringF:
   842                           	callstack 0
   843                           
   844                           ; 2 bytes @ 0xD
   845  00006D                     	ds	1
   846  00006E                     actSpeed@speed:
   847                           	callstack 0
   848  00006E                     fputs@i:
   849                           	callstack 0
   850                           
   851                           ; 2 bytes @ 0xE
   852  00006E                     	ds	1
   853  00006F                     setSteering@steeringB:
   854                           	callstack 0
   855                           
   856                           ; 2 bytes @ 0xF
   857  00006F                     	ds	1
   858  000070                     ?_abs:
   859                           	callstack 0
   860  000070                     ?_pad:
   861                           	callstack 0
   862  000070                     ___aodiv@counter:
   863                           	callstack 0
   864  000070                     ___xxtofl@sign:
   865                           	callstack 0
   866  000070                     pad@fp:
   867                           	callstack 0
   868  000070                     abs@a:
   869                           	callstack 0
   870  000070                     ___lodiv@quotient:
   871                           	callstack 0
   872                           
   873                           ; 8 bytes @ 0x10
   874  000070                     	ds	1
   875  000071                     ??_calcSteering:
   876  000071                     ___aodiv@sign:
   877                           	callstack 0
   878  000071                     ___xxtofl@exp:
   879                           	callstack 0
   880                           
   881                           ; 1 bytes @ 0x11
   882  000071                     	ds	1
   883  000072                     ??_abs:
   884  000072                     pad@buf:
   885                           	callstack 0
   886  000072                     ___xxtofl@arg:
   887                           	callstack 0
   888  000072                     ___aodiv@quotient:
   889                           	callstack 0
   890                           
   891                           ; 8 bytes @ 0x12
   892  000072                     	ds	1
   893  000073                     calcSteering@delta:
   894                           	callstack 0
   895                           
   896                           ; 2 bytes @ 0x13
   897  000073                     	ds	1
   898  000074                     pad@p:
   899                           	callstack 0
   900                           
   901                           ; 2 bytes @ 0x14
   902  000074                     	ds	2
   903  000076                     ?___flmul:
   904                           	callstack 0
   905  000076                     pad@i:
   906                           	callstack 0
   907  000076                     ___flge@ff1:
   908                           	callstack 0
   909  000076                     ___flmul@b:
   910                           	callstack 0
   911                           
   912                           ; 4 bytes @ 0x16
   913  000076                     	ds	2
   914  000078                     ___lodiv@counter:
   915                           	callstack 0
   916  000078                     pad@w:
   917                           	callstack 0
   918                           
   919                           ; 2 bytes @ 0x18
   920  000078                     	ds	2
   921  00007A                     ?_dtoa:
   922                           	callstack 0
   923  00007A                     ?_utoa:
   924                           	callstack 0
   925  00007A                     dtoa@fp:
   926                           	callstack 0
   927  00007A                     utoa@fp:
   928                           	callstack 0
   929  00007A                     ___flge@ff2:
   930                           	callstack 0
   931  00007A                     ___flmul@a:
   932                           	callstack 0
   933                           
   934                           ; 4 bytes @ 0x1A
   935  00007A                     	ds	2
   936  00007C                     dtoa@d:
   937                           	callstack 0
   938  00007C                     utoa@d:
   939                           	callstack 0
   940                           
   941                           ; 8 bytes @ 0x1C
   942  00007C                     	ds	2
   943  00007E                     ??___flmul:
   944  00007E                     ??___flge:
   945                           
   946                           ; 1 bytes @ 0x1E
   947  00007E                     	ds	4
   948  000082                     ___flmul@sign:
   949                           	callstack 0
   950                           
   951                           ; 1 bytes @ 0x22
   952  000082                     	ds	1
   953  000083                     ___flmul@aexp:
   954                           	callstack 0
   955                           
   956                           ; 1 bytes @ 0x23
   957  000083                     	ds	1
   958  000084                     ??_dtoa:
   959  000084                     ??_utoa:
   960  000084                     ___flmul@grs:
   961                           	callstack 0
   962                           
   963                           ; 4 bytes @ 0x24
   964  000084                     	ds	4
   965  000088                     ___flmul@bexp:
   966                           	callstack 0
   967                           
   968                           ; 1 bytes @ 0x28
   969  000088                     	ds	1
   970  000089                     ___flmul@prod:
   971                           	callstack 0
   972                           
   973                           ; 4 bytes @ 0x29
   974  000089                     	ds	3
   975  00008C                     _dtoa$3451:
   976                           	callstack 0
   977  00008C                     utoa@p:
   978                           	callstack 0
   979                           
   980                           ; 2 bytes @ 0x2C
   981  00008C                     	ds	1
   982  00008D                     ___flmul@temp:
   983                           	callstack 0
   984                           
   985                           ; 2 bytes @ 0x2D
   986  00008D                     	ds	1
   987  00008E                     dtoa@p:
   988                           	callstack 0
   989  00008E                     utoa@w:
   990                           	callstack 0
   991                           
   992                           ; 2 bytes @ 0x2E
   993  00008E                     	ds	1
   994  00008F                     ?___fladd:
   995                           	callstack 0
   996  00008F                     ___fladd@b:
   997                           	callstack 0
   998                           
   999                           ; 4 bytes @ 0x2F
  1000  00008F                     	ds	1
  1001  000090                     dtoa@w:
  1002                           	callstack 0
  1003  000090                     utoa@n:
  1004                           	callstack 0
  1005                           
  1006                           ; 8 bytes @ 0x30
  1007  000090                     	ds	2
  1008  000092                     dtoa@s:
  1009                           	callstack 0
  1010                           
  1011                           ; 2 bytes @ 0x32
  1012  000092                     	ds	1
  1013  000093                     ___fladd@a:
  1014                           	callstack 0
  1015                           
  1016                           ; 4 bytes @ 0x33
  1017  000093                     	ds	1
  1018  000094                     dtoa@n:
  1019                           	callstack 0
  1020                           
  1021                           ; 8 bytes @ 0x34
  1022  000094                     	ds	3
  1023  000097                     ??___fladd:
  1024                           
  1025                           ; 1 bytes @ 0x37
  1026  000097                     	ds	1
  1027  000098                     utoa@i:
  1028                           	callstack 0
  1029                           
  1030                           ; 2 bytes @ 0x38
  1031  000098                     	ds	3
  1032  00009B                     ___fladd@signs:
  1033                           	callstack 0
  1034                           
  1035                           ; 1 bytes @ 0x3B
  1036  00009B                     	ds	1
  1037  00009C                     ___fladd@aexp:
  1038                           	callstack 0
  1039  00009C                     dtoa@i:
  1040                           	callstack 0
  1041                           
  1042                           ; 2 bytes @ 0x3C
  1043  00009C                     	ds	1
  1044  00009D                     ___fladd@bexp:
  1045                           	callstack 0
  1046                           
  1047                           ; 1 bytes @ 0x3D
  1048  00009D                     	ds	1
  1049  00009E                     ?_vfpfcnvrt:
  1050                           	callstack 0
  1051  00009E                     ___fladd@grs:
  1052                           	callstack 0
  1053  00009E                     vfpfcnvrt@fp:
  1054                           	callstack 0
  1055                           
  1056                           ; 2 bytes @ 0x3E
  1057  00009E                     	ds	1
  1058  00009F                     ?___fltol:
  1059                           	callstack 0
  1060  00009F                     ___fltol@f1:
  1061                           	callstack 0
  1062                           
  1063                           ; 4 bytes @ 0x3F
  1064  00009F                     	ds	1
  1065  0000A0                     vfpfcnvrt@fmt:
  1066                           	callstack 0
  1067                           
  1068                           ; 2 bytes @ 0x40
  1069  0000A0                     	ds	2
  1070  0000A2                     vfpfcnvrt@ap:
  1071                           	callstack 0
  1072                           
  1073                           ; 2 bytes @ 0x42
  1074  0000A2                     	ds	1
  1075  0000A3                     ??___fltol:
  1076                           
  1077                           ; 1 bytes @ 0x43
  1078  0000A3                     	ds	1
  1079  0000A4                     ??_vfpfcnvrt:
  1080                           
  1081                           ; 1 bytes @ 0x44
  1082  0000A4                     	ds	3
  1083  0000A7                     ??_calcSpeed:
  1084  0000A7                     ??_calcMotorPow:
  1085                           
  1086                           ; 1 bytes @ 0x47
  1087  0000A7                     	ds	1
  1088  0000A8                     ?_vfprintf:
  1089                           	callstack 0
  1090  0000A8                     vfprintf@fp:
  1091                           	callstack 0
  1092                           
  1093                           ; 2 bytes @ 0x48
  1094  0000A8                     	ds	1
  1095  0000A9                     calcMotorPow@setSpeedDelta:
  1096                           	callstack 0
  1097                           
  1098                           ; 2 bytes @ 0x49
  1099  0000A9                     	ds	1
  1100  0000AA                     vfprintf@fmt:
  1101                           	callstack 0
  1102                           
  1103                           ; 2 bytes @ 0x4A
  1104  0000AA                     	ds	1
  1105  0000AB                     calcSpeed@speed:
  1106                           	callstack 0
  1107  0000AB                     calcMotorPow@oldSpeedDelta:
  1108                           	callstack 0
  1109                           
  1110                           ; 2 bytes @ 0x4B
  1111  0000AB                     	ds	1
  1112  0000AC                     vfprintf@ap:
  1113                           	callstack 0
  1114                           
  1115                           ; 2 bytes @ 0x4C
  1116  0000AC                     	ds	1
  1117  0000AD                     calcMotorPow@addMPow:
  1118                           	callstack 0
  1119                           
  1120                           ; 1 bytes @ 0x4D
  1121  0000AD                     	ds	1
  1122  0000AE                     vfprintf@cfmt:
  1123                           	callstack 0
  1124                           
  1125                           ; 2 bytes @ 0x4E
  1126  0000AE                     	ds	2
  1127  0000B0                     printf@ap:
  1128                           	callstack 0
  1129                           
  1130                           ; 2 bytes @ 0x50
  1131  0000B0                     	ds	2
  1132                           
  1133                           	psect	cstackCOMRAM
  1134  000001                     __pcstackCOMRAM:
  1135                           	callstack 0
  1136  000001                     CCP3_DefaultCallBack@capturedValue:
  1137                           	callstack 0
  1138                           
  1139                           ; 2 bytes @ 0x0
  1140  000001                     	ds	2
  1141  000003                     ??_CCP3_CaptureISR:
  1142                           
  1143                           ; 1 bytes @ 0x2
  1144  000003                     	ds	2
  1145  000005                     CCP3_CaptureISR@module:
  1146                           	callstack 0
  1147                           
  1148                           ; 2 bytes @ 0x4
  1149  000005                     	ds	2
  1150  000007                     CCP4_DefaultCallBack@capturedValue:
  1151                           	callstack 0
  1152                           
  1153                           ; 2 bytes @ 0x6
  1154  000007                     	ds	2
  1155  000009                     ??_CCP4_CaptureISR:
  1156                           
  1157                           ; 1 bytes @ 0x8
  1158  000009                     	ds	2
  1159  00000B                     CCP4_CaptureISR@module:
  1160                           	callstack 0
  1161                           
  1162                           ; 2 bytes @ 0xA
  1163  00000B                     	ds	2
  1164  00000D                     ?_TMR5_ReadTimer:
  1165                           	callstack 0
  1166  00000D                     TMR5_WriteTimer@timerVal:
  1167                           	callstack 0
  1168                           
  1169                           ; 2 bytes @ 0xC
  1170  00000D                     	ds	2
  1171  00000F                     ??_TMR5_ReadTimer:
  1172  00000F                     
  1173                           ; 1 bytes @ 0xE
  1174  00000F                     	ds	2
  1175  000011                     TMR5_ReadTimer@readVal:
  1176                           	callstack 0
  1177                           
  1178                           ; 2 bytes @ 0x10
  1179  000011                     	ds	2
  1180  000013                     TMR5_ReadTimer@readValHigh:
  1181                           	callstack 0
  1182                           
  1183                           ; 1 bytes @ 0x12
  1184  000013                     	ds	1
  1185  000014                     TMR5_ReadTimer@readValLow:
  1186                           	callstack 0
  1187                           
  1188                           ; 1 bytes @ 0x13
  1189  000014                     	ds	1
  1190  000015                     ??_TMR5_GATE_ISR:
  1191                           
  1192                           ; 1 bytes @ 0x14
  1193  000015                     	ds	2
  1194  000017                     ??_UART1_tx_vect_isr:
  1195  000017                     
  1196                           ; 1 bytes @ 0x16
  1197  000017                     	ds	3
  1198  00001A                     ??_UART1_rx_vect_isr:
  1199                           
  1200                           ; 1 bytes @ 0x19
  1201  00001A                     	ds	3
  1202  00001D                     ??_TMR4_ISR:
  1203                           
  1204                           ; 1 bytes @ 0x1C
  1205  00001D                     	ds	3
  1206  000020                     ??_TMR3_Initialize:
  1207  000020                     ?_strlen:
  1208                           	callstack 0
  1209  000020                     ?_ADCC_GetSingleConversion:
  1210                           	callstack 0
  1211  000020                     ?_actSpeed:
  1212                           	callstack 0
  1213  000020                     UART1_Write@txData:
  1214                           	callstack 0
  1215  000020                     INTERRUPT_Initialize@state:
  1216                           	callstack 0
  1217  000020                     ___aomod@counter:
  1218                           	callstack 0
  1219  000020                     ___fltol@sign1:
  1220                           	callstack 0
  1221  000020                     ___lomod@counter:
  1222                           	callstack 0
  1223  000020                     UART1_SetFramingErrorHandler@interruptHandler:
  1224                           	callstack 0
  1225  000020                     UART1_SetOverrunErrorHandler@interruptHandler:
  1226                           	callstack 0
  1227  000020                     UART1_SetErrorHandler@interruptHandler:
  1228                           	callstack 0
  1229  000020                     UART1_SetRxInterruptHandler@InterruptHandler:
  1230                           	callstack 0
  1231  000020                     UART1_SetTxInterruptHandler@InterruptHandler:
  1232                           	callstack 0
  1233  000020                     CCP3_SetCallBack@customCallBack:
  1234                           	callstack 0
  1235  000020                     CCP4_SetCallBack@customCallBack:
  1236                           	callstack 0
  1237  000020                     TMR5_SetGateInterruptHandler@InterruptHandler:
  1238                           	callstack 0
  1239  000020                     TMR4_SetInterruptHandler@InterruptHandler:
  1240                           	callstack 0
  1241  000020                     PWM7_LoadDutyValue@dutyValue:
  1242                           	callstack 0
  1243  000020                     PWM8_LoadDutyValue@dutyValue:
  1244                           	callstack 0
  1245  000020                     PWM5_LoadDutyValue@dutyValue:
  1246                           	callstack 0
  1247  000020                     PWM6_LoadDutyValue@dutyValue:
  1248                           	callstack 0
  1249  000020                     strlen@s:
  1250                           	callstack 0
  1251                           
  1252                           ; 2 bytes @ 0x1F
  1253  000020                     	ds	1
  1254  000021                     putch@txData:
  1255                           	callstack 0
  1256  000021                     ___aomod@sign:
  1257                           	callstack 0
  1258  000021                     ___fltol@exp1:
  1259                           	callstack 0
  1260                           
  1261                           ; 1 bytes @ 0x20
  1262  000021                     	ds	1
  1263  000022                     ??_pad:
  1264  000022                     ADCC_GetSingleConversion@channel:
  1265                           	callstack 0
  1266                           
  1267                           ; 1 bytes @ 0x21
  1268  000022                     	ds	1
  1269  000023                     
  1270                           ; 1 bytes @ 0x22
  1271 ;;
  1272 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1273 ;;
  1274 ;; *************** function _main *****************
  1275 ;; Defined at:
  1276 ;;		line 9 in file "main.c"
  1277 ;; Parameters:    Size  Location     Type
  1278 ;;		None
  1279 ;; Auto vars:     Size  Location     Type
  1280 ;;		None
  1281 ;; Return value:  Size  Location     Type
  1282 ;;                  1    wreg      void 
  1283 ;; Registers used:
  1284 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1285 ;; Tracked objects:
  1286 ;;		On entry : 0/0
  1287 ;;		On exit  : 0/0
  1288 ;;		Unchanged: 0/0
  1289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1293 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1294 ;;Total ram usage:        0 bytes
  1295 ;; Hardware stack levels required when called: 19
  1296 ;; This function calls:
  1297 ;;		_SYSTEM_Initialize
  1298 ;;		_TMR4_SetInterruptHandler
  1299 ;;		_loop
  1300 ;; This function is called by:
  1301 ;;		Startup code after reset
  1302 ;; This function uses a non-reentrant model
  1303 ;;
  1304                           
  1305                           	psect	text0
  1306  004440                     __ptext0:
  1307                           	callstack 0
  1308  004440                     _main:
  1309                           	callstack 12
  1310  004440                     
  1311                           ;main.c: 10:     SYSTEM_Initialize();
  1312  004440  EC14  F01F         	call	_SYSTEM_Initialize	;wreg free
  1313  004444                     
  1314                           ;main.c: 11:     (INTCON0bits.GIEH = 1);
  1315  004444  8ED2               	bsf	210,7,c	;volatile
  1316  004446                     
  1317                           ;main.c: 12:     (INTCON0bits.GIEL = 1);
  1318  004446  8CD2               	bsf	210,6,c	;volatile
  1319                           
  1320                           ;main.c: 13:     TMR4_SetInterruptHandler(TMR4_10msISR);
  1321  004448  0E9A               	movlw	low _TMR4_10msISR
  1322  00444A  6E20               	movwf	TMR4_SetInterruptHandler@InterruptHandler^0,c
  1323  00444C  0E45               	movlw	high _TMR4_10msISR
  1324  00444E  6E21               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)^0,c
  1325  004450  ECBB  F022         	call	_TMR4_SetInterruptHandler	;wreg free
  1326  004454                     l6883:
  1327                           
  1328                           ;main.c: 16:         loop();
  1329  004454  EC3F  F017         	call	_loop	;wreg free
  1330  004458  EF2A  F022         	goto	l6883
  1331  00445C  EF57  F000         	goto	start
  1332  004460                     __end_of_main:
  1333                           	callstack 0
  1334                           
  1335 ;; *************** function _loop *****************
  1336 ;; Defined at:
  1337 ;;		line 20 in file "main.c"
  1338 ;; Parameters:    Size  Location     Type
  1339 ;;		None
  1340 ;; Auto vars:     Size  Location     Type
  1341 ;;		None
  1342 ;; Return value:  Size  Location     Type
  1343 ;;                  1    wreg      void 
  1344 ;; Registers used:
  1345 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1346 ;; Tracked objects:
  1347 ;;		On entry : 0/0
  1348 ;;		On exit  : 0/0
  1349 ;;		Unchanged: 0/0
  1350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1354 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1355 ;;Total ram usage:        0 bytes
  1356 ;; Hardware stack levels used: 1
  1357 ;; Hardware stack levels required when called: 18
  1358 ;; This function calls:
  1359 ;;		___flge
  1360 ;;		___xxtofl
  1361 ;;		_calcMotorPow
  1362 ;;		_calcSpeed
  1363 ;;		_calcSteering
  1364 ;;		_getBatteryVoltage
  1365 ;;		_getCurve
  1366 ;;		_getReverse
  1367 ;;		_printf
  1368 ;;		_setSteering
  1369 ;; This function is called by:
  1370 ;;		_main
  1371 ;; This function uses a non-reentrant model
  1372 ;;
  1373                           
  1374                           	psect	text1
  1375  002E7E                     __ptext1:
  1376                           	callstack 0
  1377  002E7E                     _loop:
  1378                           	callstack 12
  1379  002E7E                     l1214:
  1380  002E7E                     
  1381                           ;main.c: 26:         getBatteryVoltage();
  1382  002E7E  EC89  F022         	call	_getBatteryVoltage	;wreg free
  1383  002E82                     
  1384                           ;main.c: 27:         printf("BVolt: %u\n", (uint16_t)BatteryVolt);
  1385  002E82  0E32               	movlw	low STR_1
  1386  002E84  0101               	movlb	1	; () banked
  1387  002E86  6F30               	movwf	printf@fmt& (0+255),b
  1388  002E88  0E10               	movlw	high STR_1
  1389  002E8A  6F31               	movwf	(printf@fmt+1)& (0+255),b
  1390  002E8C  C0EF  F132         	movff	_BatteryVolt,?_printf+2
  1391  002E90  C0F0  F133         	movff	_BatteryVolt+1,?_printf+3
  1392  002E94  ECD3  F021         	call	_printf	;wreg free
  1393  002E98                     
  1394                           ;main.c: 28:     }while(BatteryVolt < ((7.5) * 409.6));
  1395  002E98  C0EF  F068         	movff	_BatteryVolt,___xxtofl@val
  1396  002E9C  C0F0  F069         	movff	_BatteryVolt+1,___xxtofl@val+1
  1397  002EA0  0100               	movlb	0	; () banked
  1398  002EA2  6B6A               	clrf	(___xxtofl@val+2)& (0+255),b
  1399  002EA4  6B6B               	clrf	(___xxtofl@val+3)& (0+255),b
  1400  002EA6  0E00               	movlw	0
  1401  002EA8  ECB7  F012         	call	___xxtofl
  1402  002EAC  C068  F076         	movff	?___xxtofl,___flge@ff1
  1403  002EB0  C069  F077         	movff	?___xxtofl+1,___flge@ff1+1
  1404  002EB4  C06A  F078         	movff	?___xxtofl+2,___flge@ff1+2
  1405  002EB8  C06B  F079         	movff	?___xxtofl+3,___flge@ff1+3
  1406  002EBC  0E00               	movlw	0
  1407  002EBE  0100               	movlb	0	; () banked
  1408  002EC0  6F7A               	movwf	___flge@ff2& (0+255),b
  1409  002EC2  0E00               	movlw	0
  1410  002EC4  6F7B               	movwf	(___flge@ff2+1)& (0+255),b
  1411  002EC6  0E40               	movlw	64
  1412  002EC8  6F7C               	movwf	(___flge@ff2+2)& (0+255),b
  1413  002ECA  0E45               	movlw	69
  1414  002ECC  6F7D               	movwf	(___flge@ff2+3)& (0+255),b
  1415  002ECE  ECDE  F018         	call	___flge	;wreg free
  1416  002ED2  0100               	movlb	0	; () banked
  1417  002ED4  A0D8               	btfss	status,0,c
  1418  002ED6  EF6F  F017         	goto	u6201
  1419  002EDA  EF71  F017         	goto	u6200
  1420  002EDE                     u6201:
  1421  002EDE  EF3F  F017         	goto	l1214
  1422  002EE2                     u6200:
  1423  002EE2                     
  1424                           ; BSR set to: 0
  1425                           ;main.c: 30:     oldDistLeft = distLeft;
  1426  002EE2  C0E6  F0E2         	movff	_distLeft,_oldDistLeft	;volatile
  1427  002EE6  C0E7  F0E3         	movff	_distLeft+1,_oldDistLeft+1	;volatile
  1428                           
  1429                           ;main.c: 31:     oldDistRight = distRight;
  1430  002EEA  C0E4  F0E0         	movff	_distRight,_oldDistRight	;volatile
  1431  002EEE  C0E5  F0E1         	movff	_distRight+1,_oldDistRight+1	;volatile
  1432  002EF2                     
  1433                           ; BSR set to: 0
  1434                           ;main.c: 32:     cycle10ms = 0;
  1435  002EF2  0E00               	movlw	0
  1436  002EF4  6FEA               	movwf	_cycle10ms& (0+255),b
  1437  002EF6                     l6849:
  1438  002EF6  0100               	movlb	0	; () banked
  1439  002EF8  51EA               	movf	_cycle10ms& (0+255),w,b
  1440  002EFA  B4D8               	btfsc	status,2,c
  1441  002EFC  EF82  F017         	goto	u6211
  1442  002F00  EF84  F017         	goto	u6210
  1443  002F04                     u6211:
  1444  002F04  EF7B  F017         	goto	l6849
  1445  002F08                     u6210:
  1446  002F08                     
  1447                           ; BSR set to: 0
  1448                           ;main.c: 35:         cycle10ms = 0;
  1449  002F08  0E00               	movlw	0
  1450  002F0A  6FEA               	movwf	_cycle10ms& (0+255),b
  1451  002F0C                     
  1452                           ; BSR set to: 0
  1453                           ;main.c: 44:         if(battCheckCount > 100){
  1454  002F0C  0E64               	movlw	100
  1455  002F0E  65E8               	cpfsgt	_battCheckCount& (0+255),b
  1456  002F10  EF8C  F017         	goto	u6221
  1457  002F14  EF8E  F017         	goto	u6220
  1458  002F18                     u6221:
  1459  002F18  EFC5  F017         	goto	l6865
  1460  002F1C                     u6220:
  1461  002F1C                     
  1462                           ; BSR set to: 0
  1463                           ;main.c: 45:             battCheckCount = 0;
  1464  002F1C  0E00               	movlw	0
  1465  002F1E  6FE8               	movwf	_battCheckCount& (0+255),b
  1466  002F20                     
  1467                           ; BSR set to: 0
  1468                           ;main.c: 46:             getBatteryVoltage();
  1469  002F20  EC89  F022         	call	_getBatteryVoltage	;wreg free
  1470  002F24                     
  1471                           ;main.c: 47:             if(BatteryVolt < (7.5) * 409.6){
  1472  002F24  C0EF  F068         	movff	_BatteryVolt,___xxtofl@val
  1473  002F28  C0F0  F069         	movff	_BatteryVolt+1,___xxtofl@val+1
  1474  002F2C  0100               	movlb	0	; () banked
  1475  002F2E  6B6A               	clrf	(___xxtofl@val+2)& (0+255),b
  1476  002F30  6B6B               	clrf	(___xxtofl@val+3)& (0+255),b
  1477  002F32  0E00               	movlw	0
  1478  002F34  ECB7  F012         	call	___xxtofl
  1479  002F38  C068  F076         	movff	?___xxtofl,___flge@ff1
  1480  002F3C  C069  F077         	movff	?___xxtofl+1,___flge@ff1+1
  1481  002F40  C06A  F078         	movff	?___xxtofl+2,___flge@ff1+2
  1482  002F44  C06B  F079         	movff	?___xxtofl+3,___flge@ff1+3
  1483  002F48  0E00               	movlw	0
  1484  002F4A  0100               	movlb	0	; () banked
  1485  002F4C  6F7A               	movwf	___flge@ff2& (0+255),b
  1486  002F4E  0E00               	movlw	0
  1487  002F50  6F7B               	movwf	(___flge@ff2+1)& (0+255),b
  1488  002F52  0E40               	movlw	64
  1489  002F54  6F7C               	movwf	(___flge@ff2+2)& (0+255),b
  1490  002F56  0E45               	movlw	69
  1491  002F58  6F7D               	movwf	(___flge@ff2+3)& (0+255),b
  1492  002F5A  ECDE  F018         	call	___flge	;wreg free
  1493  002F5E  0100               	movlb	0	; () banked
  1494  002F60  B0D8               	btfsc	status,0,c
  1495  002F62  EFB5  F017         	goto	u6231
  1496  002F66  EFB7  F017         	goto	u6230
  1497  002F6A                     u6231:
  1498  002F6A  EFC6  F017         	goto	l6867
  1499  002F6E                     u6230:
  1500  002F6E                     
  1501                           ; BSR set to: 0
  1502                           ;main.c: 48:                 setSpeed = 0;
  1503  002F6E  0E00               	movlw	0
  1504  002F70  6FDF               	movwf	(_setSpeed+1)& (0+255),b
  1505  002F72  0E00               	movlw	0
  1506  002F74  6FDE               	movwf	_setSpeed& (0+255),b
  1507  002F76                     
  1508                           ; BSR set to: 0
  1509                           ;main.c: 49:                 setSteering(0,Front);
  1510  002F76  0E00               	movlw	0
  1511  002F78  6F69               	movwf	(setSteering@steering+1)& (0+255),b
  1512  002F7A  0E00               	movlw	0
  1513  002F7C  6F68               	movwf	setSteering@steering& (0+255),b
  1514  002F7E  0E03               	movlw	3
  1515  002F80  6F6A               	movwf	setSteering@steeringMode& (0+255),b
  1516  002F82  EC93  F013         	call	_setSteering	;wreg free
  1517                           
  1518                           ;main.c: 50:                 break;
  1519  002F86  EFD2  F017         	goto	l1225
  1520  002F8A                     l6865:
  1521                           
  1522                           ; BSR set to: 0
  1523                           ;main.c: 53:             ++battCheckCount;
  1524  002F8A  2BE8               	incf	_battCheckCount& (0+255),f,b
  1525  002F8C                     l6867:
  1526                           
  1527                           ; BSR set to: 0
  1528                           ;main.c: 56:         getCurve();
  1529  002F8C  EC8B  F00F         	call	_getCurve	;wreg free
  1530  002F90                     
  1531                           ;main.c: 57:         getReverse();
  1532  002F90  EC2D  F01D         	call	_getReverse	;wreg free
  1533  002F94                     
  1534                           ;main.c: 59:         calcSteering();
  1535  002F94  EC2D  F015         	call	_calcSteering	;wreg free
  1536  002F98                     
  1537                           ;main.c: 60:         calcSpeed();
  1538  002F98  ECA5  F010         	call	_calcSpeed	;wreg free
  1539  002F9C                     
  1540                           ;main.c: 61:         calcMotorPow();
  1541  002F9C  EC9A  F016         	call	_calcMotorPow	;wreg free
  1542  002FA0  EF7B  F017         	goto	l6849
  1543  002FA4                     l1225:
  1544  002FA4  0012               	return		;funcret
  1545  002FA6                     __end_of_loop:
  1546                           	callstack 0
  1547                           
  1548 ;; *************** function _getReverse *****************
  1549 ;; Defined at:
  1550 ;;		line 153 in file "main.c"
  1551 ;; Parameters:    Size  Location     Type
  1552 ;;		None
  1553 ;; Auto vars:     Size  Location     Type
  1554 ;;		None
  1555 ;; Return value:  Size  Location     Type
  1556 ;;                  1    wreg      void 
  1557 ;; Registers used:
  1558 ;;		wreg, status,2, status,0
  1559 ;; Tracked objects:
  1560 ;;		On entry : 0/0
  1561 ;;		On exit  : 0/0
  1562 ;;		Unchanged: 0/0
  1563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1567 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1568 ;;Total ram usage:        0 bytes
  1569 ;; Hardware stack levels used: 1
  1570 ;; Hardware stack levels required when called: 8
  1571 ;; This function calls:
  1572 ;;		Nothing
  1573 ;; This function is called by:
  1574 ;;		_loop
  1575 ;; This function uses a non-reentrant model
  1576 ;;
  1577                           
  1578                           	psect	text2
  1579  003A5A                     __ptext2:
  1580                           	callstack 0
  1581  003A5A                     _getReverse:
  1582                           	callstack 21
  1583  003A5A                     
  1584                           ;main.c: 154:     if(distFront < (10)){
  1585  003A5A  0100               	movlb	0	; () banked
  1586  003A5C  51EE               	movf	(_distFront+1)& (0+255),w,b	;volatile
  1587  003A5E  E107               	bnz	u4141
  1588  003A60  0E0A               	movlw	10
  1589  003A62  5DED               	subwf	_distFront& (0+255),w,b	;volatile
  1590  003A64  B0D8               	btfsc	status,0,c
  1591  003A66  EF37  F01D         	goto	u4141
  1592  003A6A  EF39  F01D         	goto	u4140
  1593  003A6E                     u4141:
  1594  003A6E  EF3C  F01D         	goto	l5343
  1595  003A72                     u4140:
  1596  003A72                     
  1597                           ; BSR set to: 0
  1598                           ;main.c: 155:         ++reverseCount;
  1599  003A72  2A2D               	incf	_reverseCount^0,f,c
  1600                           
  1601                           ;main.c: 156:     }else if(driveMode != ReverseRight){
  1602  003A74  EF47  F01D         	goto	l5347
  1603  003A78                     l5343:
  1604                           
  1605                           ; BSR set to: 0
  1606  003A78  0E02               	movlw	2
  1607  003A7A  19EC               	xorwf	_driveMode& (0+255),w,b
  1608  003A7C  B4D8               	btfsc	status,2,c
  1609  003A7E  EF43  F01D         	goto	u4151
  1610  003A82  EF45  F01D         	goto	u4150
  1611  003A86                     u4151:
  1612  003A86  EF47  F01D         	goto	l5347
  1613  003A8A                     u4150:
  1614  003A8A                     
  1615                           ; BSR set to: 0
  1616                           ;main.c: 157:         reverseCount = 0;
  1617  003A8A  0E00               	movlw	0
  1618  003A8C  6E2D               	movwf	_reverseCount^0,c
  1619  003A8E                     l5347:
  1620                           
  1621                           ; BSR set to: 0
  1622                           ;main.c: 160:     if(reverseCount > (50)){
  1623  003A8E  0E32               	movlw	50
  1624  003A90  642D               	cpfsgt	_reverseCount^0,c
  1625  003A92  EF4D  F01D         	goto	u4161
  1626  003A96  EF4F  F01D         	goto	u4160
  1627  003A9A                     u4161:
  1628  003A9A  EF6F  F01D         	goto	l1271
  1629  003A9E                     u4160:
  1630  003A9E                     
  1631                           ; BSR set to: 0
  1632                           ;main.c: 161:         if(distLeft > distRight){
  1633  003A9E  51E6               	movf	_distLeft& (0+255),w,b	;volatile
  1634  003AA0  5DE4               	subwf	_distRight& (0+255),w,b	;volatile
  1635  003AA2  51E7               	movf	(_distLeft+1)& (0+255),w,b	;volatile
  1636  003AA4  59E5               	subwfb	(_distRight+1)& (0+255),w,b	;volatile
  1637  003AA6  B0D8               	btfsc	status,0,c
  1638  003AA8  EF58  F01D         	goto	u4171
  1639  003AAC  EF5A  F01D         	goto	u4170
  1640  003AB0                     u4171:
  1641  003AB0  EF5E  F01D         	goto	l5353
  1642  003AB4                     u4170:
  1643  003AB4                     
  1644                           ; BSR set to: 0
  1645                           ;main.c: 162:             driveMode = ReverseRight;
  1646  003AB4  0E02               	movlw	2
  1647  003AB6  6FEC               	movwf	_driveMode& (0+255),b
  1648                           
  1649                           ;main.c: 163:         }else{
  1650  003AB8  EF60  F01D         	goto	l5355
  1651  003ABC                     l5353:
  1652                           
  1653                           ; BSR set to: 0
  1654                           ;main.c: 164:             driveMode = ReverseLeft;
  1655  003ABC  0E03               	movlw	3
  1656  003ABE  6FEC               	movwf	_driveMode& (0+255),b
  1657  003AC0                     l5355:
  1658                           
  1659                           ; BSR set to: 0
  1660                           ;main.c: 167:         if(distFront > (30)){
  1661  003AC0  51EE               	movf	(_distFront+1)& (0+255),w,b	;volatile
  1662  003AC2  E109               	bnz	u4180
  1663  003AC4  0E1F               	movlw	31
  1664  003AC6  5DED               	subwf	_distFront& (0+255),w,b	;volatile
  1665  003AC8  A0D8               	btfss	status,0,c
  1666  003ACA  EF69  F01D         	goto	u4181
  1667  003ACE  EF6B  F01D         	goto	u4180
  1668  003AD2                     u4181:
  1669  003AD2  EF6F  F01D         	goto	l1271
  1670  003AD6                     u4180:
  1671  003AD6                     
  1672                           ; BSR set to: 0
  1673                           ;main.c: 168:              driveMode = Straight;
  1674  003AD6  0E00               	movlw	0
  1675  003AD8  6FEC               	movwf	_driveMode& (0+255),b
  1676                           
  1677                           ;main.c: 169:              reverseCount = 0;
  1678  003ADA  0E00               	movlw	0
  1679  003ADC  6E2D               	movwf	_reverseCount^0,c
  1680  003ADE                     l1271:
  1681                           
  1682                           ; BSR set to: 0
  1683  003ADE  0012               	return		;funcret
  1684  003AE0                     __end_of_getReverse:
  1685                           	callstack 0
  1686                           
  1687 ;; *************** function _getCurve *****************
  1688 ;; Defined at:
  1689 ;;		line 86 in file "main.c"
  1690 ;; Parameters:    Size  Location     Type
  1691 ;;		None
  1692 ;; Auto vars:     Size  Location     Type
  1693 ;;  deltaRight      2   26[BANK1 ] short 
  1694 ;;  deltaLeft       2   24[BANK1 ] short 
  1695 ;; Return value:  Size  Location     Type
  1696 ;;                  1    wreg      void 
  1697 ;; Registers used:
  1698 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1699 ;; Tracked objects:
  1700 ;;		On entry : 0/0
  1701 ;;		On exit  : 0/0
  1702 ;;		Unchanged: 0/0
  1703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1705 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1706 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1707 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1708 ;;Total ram usage:        6 bytes
  1709 ;; Hardware stack levels used: 1
  1710 ;; Hardware stack levels required when called: 17
  1711 ;; This function calls:
  1712 ;;		_printf
  1713 ;; This function is called by:
  1714 ;;		_loop
  1715 ;; This function uses a non-reentrant model
  1716 ;;
  1717                           
  1718                           	psect	text3
  1719  001F16                     __ptext3:
  1720                           	callstack 0
  1721  001F16                     _getCurve:
  1722                           	callstack 12
  1723  001F16                     
  1724                           ;main.c: 87:     int16_t deltaLeft;;main.c: 88:     int16_t deltaRight;;main.c: 90:     
      +                          switch (curveMode){
  1725  001F16  EF7D  F010         	goto	l6655
  1726  001F1A                     l6599:
  1727                           
  1728                           ; BSR set to: 1
  1729                           ;main.c: 92:             deltaLeft = (int16_t)(distLeft - oldDistLeft);
  1730  001F1A  0100               	movlb	0	; () banked
  1731  001F1C  51E2               	movf	_oldDistLeft& (0+255),w,b
  1732  001F1E  5DE6               	subwf	_distLeft& (0+255),w,b	;volatile
  1733  001F20  0101               	movlb	1	; () banked
  1734  001F22  6F38               	movwf	getCurve@deltaLeft& (0+255),b
  1735  001F24  0100               	movlb	0	; () banked
  1736  001F26  51E3               	movf	(_oldDistLeft+1)& (0+255),w,b
  1737  001F28  59E7               	subwfb	(_distLeft+1)& (0+255),w,b	;volatile
  1738  001F2A  0101               	movlb	1	; () banked
  1739  001F2C  6F39               	movwf	(getCurve@deltaLeft+1)& (0+255),b
  1740                           
  1741                           ;main.c: 93:             deltaRight = (int16_t)(distRight - oldDistRight);
  1742  001F2E  0100               	movlb	0	; () banked
  1743  001F30  51E0               	movf	_oldDistRight& (0+255),w,b
  1744  001F32  5DE4               	subwf	_distRight& (0+255),w,b	;volatile
  1745  001F34  0101               	movlb	1	; () banked
  1746  001F36  6F3A               	movwf	getCurve@deltaRight& (0+255),b
  1747  001F38  0100               	movlb	0	; () banked
  1748  001F3A  51E1               	movf	(_oldDistRight+1)& (0+255),w,b
  1749  001F3C  59E5               	subwfb	(_distRight+1)& (0+255),w,b	;volatile
  1750  001F3E  0101               	movlb	1	; () banked
  1751  001F40  6F3B               	movwf	(getCurve@deltaRight+1)& (0+255),b
  1752                           
  1753                           ;main.c: 96:             if(deltaLeft > (40) && deltaLeft < (300) && oldDistLeft < (150)
      +                          ){
  1754  001F42  BF39               	btfsc	(getCurve@deltaLeft+1)& (0+255),7,b
  1755  001F44  EFAD  F00F         	goto	u5881
  1756  001F48  5139               	movf	(getCurve@deltaLeft+1)& (0+255),w,b
  1757  001F4A  E109               	bnz	u5880
  1758  001F4C  0E29               	movlw	41
  1759  001F4E  5D38               	subwf	getCurve@deltaLeft& (0+255),w,b
  1760  001F50  A0D8               	btfss	status,0,c
  1761  001F52  EFAD  F00F         	goto	u5881
  1762  001F56  EFAF  F00F         	goto	u5880
  1763  001F5A                     u5881:
  1764  001F5A  EFE7  F00F         	goto	l6611
  1765  001F5E                     u5880:
  1766  001F5E                     
  1767                           ; BSR set to: 1
  1768  001F5E  BF39               	btfsc	(getCurve@deltaLeft+1)& (0+255),7,b
  1769  001F60  EFBD  F00F         	goto	u5890
  1770  001F64  0E2C               	movlw	44
  1771  001F66  5D38               	subwf	getCurve@deltaLeft& (0+255),w,b
  1772  001F68  0E01               	movlw	1
  1773  001F6A  5939               	subwfb	(getCurve@deltaLeft+1)& (0+255),w,b
  1774  001F6C  B0D8               	btfsc	status,0,c
  1775  001F6E  EFBB  F00F         	goto	u5891
  1776  001F72  EFBD  F00F         	goto	u5890
  1777  001F76                     u5891:
  1778  001F76  EFE7  F00F         	goto	l6611
  1779  001F7A                     u5890:
  1780  001F7A                     
  1781                           ; BSR set to: 1
  1782  001F7A  0100               	movlb	0	; () banked
  1783  001F7C  51E3               	movf	(_oldDistLeft+1)& (0+255),w,b
  1784  001F7E  E107               	bnz	u5901
  1785  001F80  0E96               	movlw	150
  1786  001F82  5DE2               	subwf	_oldDistLeft& (0+255),w,b
  1787  001F84  B0D8               	btfsc	status,0,c
  1788  001F86  EFC7  F00F         	goto	u5901
  1789  001F8A  EFC9  F00F         	goto	u5900
  1790  001F8E                     u5901:
  1791  001F8E  EFE7  F00F         	goto	l6611
  1792  001F92                     u5900:
  1793  001F92                     
  1794                           ; BSR set to: 0
  1795                           ;main.c: 97:                 delay = 0;
  1796  001F92  0E00               	movlw	0
  1797  001F94  6FE9               	movwf	_delay& (0+255),b
  1798                           
  1799                           ;main.c: 98:                 curveMode = BeforeCurve;
  1800  001F96  0E01               	movlw	1
  1801  001F98  6FEB               	movwf	_curveMode& (0+255),b
  1802                           
  1803                           ;main.c: 99:                 driveMode = CurveLeft;
  1804  001F9A  0E04               	movlw	4
  1805  001F9C  6FEC               	movwf	_driveMode& (0+255),b
  1806  001F9E                     
  1807                           ; BSR set to: 0
  1808                           ;main.c: 100:                 printf("Out | dL= %d | dR= %d", deltaLeft, deltaRight);
  1809  001F9E  0E01               	movlw	low STR_2
  1810  001FA0  0101               	movlb	1	; () banked
  1811  001FA2  6F30               	movwf	printf@fmt& (0+255),b
  1812  001FA4  0E10               	movlw	high STR_2
  1813  001FA6  6F31               	movwf	(printf@fmt+1)& (0+255),b
  1814  001FA8  C138  F132         	movff	getCurve@deltaLeft,?_printf+2
  1815  001FAC  C139  F133         	movff	getCurve@deltaLeft+1,?_printf+3
  1816  001FB0  C13A  F134         	movff	getCurve@deltaRight,?_printf+4
  1817  001FB4  C13B  F135         	movff	getCurve@deltaRight+1,?_printf+5
  1818  001FB8  ECD3  F021         	call	_printf	;wreg free
  1819  001FBC                     
  1820                           ;main.c: 101:                 printf("   CurveLeft");
  1821  001FBC  0E25               	movlw	low STR_3
  1822  001FBE  0101               	movlb	1	; () banked
  1823  001FC0  6F30               	movwf	printf@fmt& (0+255),b
  1824  001FC2  0E10               	movlw	high STR_3
  1825  001FC4  6F31               	movwf	(printf@fmt+1)& (0+255),b
  1826  001FC6  ECD3  F021         	call	_printf	;wreg free
  1827                           
  1828                           ;main.c: 102:             } else if(deltaRight > (40) && deltaRight < (300) && oldDistRi
      +                          ght < (150)){
  1829  001FCA  EF9C  F010         	goto	l1245
  1830  001FCE                     l6611:
  1831  001FCE  0101               	movlb	1	; () banked
  1832  001FD0  BF3B               	btfsc	(getCurve@deltaRight+1)& (0+255),7,b
  1833  001FD2  EFF4  F00F         	goto	u5911
  1834  001FD6  513B               	movf	(getCurve@deltaRight+1)& (0+255),w,b
  1835  001FD8  E109               	bnz	u5910
  1836  001FDA  0E29               	movlw	41
  1837  001FDC  5D3A               	subwf	getCurve@deltaRight& (0+255),w,b
  1838  001FDE  A0D8               	btfss	status,0,c
  1839  001FE0  EFF4  F00F         	goto	u5911
  1840  001FE4  EFF6  F00F         	goto	u5910
  1841  001FE8                     u5911:
  1842  001FE8  EF9C  F010         	goto	l1245
  1843  001FEC                     u5910:
  1844  001FEC                     
  1845                           ; BSR set to: 1
  1846  001FEC  BF3B               	btfsc	(getCurve@deltaRight+1)& (0+255),7,b
  1847  001FEE  EF04  F010         	goto	u5920
  1848  001FF2  0E2C               	movlw	44
  1849  001FF4  5D3A               	subwf	getCurve@deltaRight& (0+255),w,b
  1850  001FF6  0E01               	movlw	1
  1851  001FF8  593B               	subwfb	(getCurve@deltaRight+1)& (0+255),w,b
  1852  001FFA  B0D8               	btfsc	status,0,c
  1853  001FFC  EF02  F010         	goto	u5921
  1854  002000  EF04  F010         	goto	u5920
  1855  002004                     u5921:
  1856  002004  EF9C  F010         	goto	l1245
  1857  002008                     u5920:
  1858  002008                     
  1859                           ; BSR set to: 1
  1860  002008  0100               	movlb	0	; () banked
  1861  00200A  51E1               	movf	(_oldDistRight+1)& (0+255),w,b
  1862  00200C  E107               	bnz	u5931
  1863  00200E  0E96               	movlw	150
  1864  002010  5DE0               	subwf	_oldDistRight& (0+255),w,b
  1865  002012  B0D8               	btfsc	status,0,c
  1866  002014  EF0E  F010         	goto	u5931
  1867  002018  EF10  F010         	goto	u5930
  1868  00201C                     u5931:
  1869  00201C  EF9C  F010         	goto	l1245
  1870  002020                     u5930:
  1871  002020                     
  1872                           ; BSR set to: 0
  1873                           ;main.c: 103:                 delay = 0;
  1874  002020  0E00               	movlw	0
  1875  002022  6FE9               	movwf	_delay& (0+255),b
  1876                           
  1877                           ;main.c: 104:                 curveMode = BeforeCurve;
  1878  002024  0E01               	movlw	1
  1879  002026  6FEB               	movwf	_curveMode& (0+255),b
  1880                           
  1881                           ;main.c: 105:                 driveMode = CurveRight;
  1882  002028  0E05               	movlw	5
  1883  00202A  6FEC               	movwf	_driveMode& (0+255),b
  1884  00202C                     
  1885                           ; BSR set to: 0
  1886                           ;main.c: 106:                 printf("Out | dL= %d | dR= %d", deltaLeft, deltaRight);
  1887  00202C  0E01               	movlw	low STR_2
  1888  00202E  0101               	movlb	1	; () banked
  1889  002030  6F30               	movwf	printf@fmt& (0+255),b
  1890  002032  0E10               	movlw	high STR_2
  1891  002034  6F31               	movwf	(printf@fmt+1)& (0+255),b
  1892  002036  C138  F132         	movff	getCurve@deltaLeft,?_printf+2
  1893  00203A  C139  F133         	movff	getCurve@deltaLeft+1,?_printf+3
  1894  00203E  C13A  F134         	movff	getCurve@deltaRight,?_printf+4
  1895  002042  C13B  F135         	movff	getCurve@deltaRight+1,?_printf+5
  1896  002046  ECD3  F021         	call	_printf	;wreg free
  1897  00204A                     
  1898                           ;main.c: 107:                 printf("   CurveRight");
  1899  00204A  0E17               	movlw	low STR_5
  1900  00204C  0101               	movlb	1	; () banked
  1901  00204E  6F30               	movwf	printf@fmt& (0+255),b
  1902  002050  0E10               	movlw	high STR_5
  1903  002052  6F31               	movwf	(printf@fmt+1)& (0+255),b
  1904  002054  ECD3  F021         	call	_printf	;wreg free
  1905  002058  EF9C  F010         	goto	l1245
  1906  00205C                     l6623:
  1907                           
  1908                           ; BSR set to: 1
  1909                           ;main.c: 113:             if(delay > (15)){
  1910  00205C  0E0F               	movlw	15
  1911  00205E  0100               	movlb	0	; () banked
  1912  002060  65E9               	cpfsgt	_delay& (0+255),b
  1913  002062  EF35  F010         	goto	u5941
  1914  002066  EF37  F010         	goto	u5940
  1915  00206A                     u5941:
  1916  00206A  EF44  F010         	goto	l6629
  1917  00206E                     u5940:
  1918  00206E                     
  1919                           ; BSR set to: 0
  1920                           ;main.c: 114:                 delay = 0;
  1921  00206E  0E00               	movlw	0
  1922  002070  6FE9               	movwf	_delay& (0+255),b
  1923                           
  1924                           ;main.c: 115:                 curveMode = InCurve;
  1925  002072  0E02               	movlw	2
  1926  002074  6FEB               	movwf	_curveMode& (0+255),b
  1927  002076                     
  1928                           ; BSR set to: 0
  1929                           ;main.c: 116:                 printf("InCurve\n");
  1930  002076  0E3D               	movlw	low STR_6
  1931  002078  0101               	movlb	1	; () banked
  1932  00207A  6F30               	movwf	printf@fmt& (0+255),b
  1933  00207C  0E10               	movlw	high STR_6
  1934  00207E  6F31               	movwf	(printf@fmt+1)& (0+255),b
  1935  002080  ECD3  F021         	call	_printf	;wreg free
  1936                           
  1937                           ;main.c: 117:             } else {
  1938  002084  EF9C  F010         	goto	l1245
  1939  002088                     l6629:
  1940                           
  1941                           ; BSR set to: 0
  1942                           ;main.c: 118:                 delay++;
  1943  002088  2BE9               	incf	_delay& (0+255),f,b
  1944  00208A  EF9C  F010         	goto	l1245
  1945  00208E                     l6631:
  1946                           
  1947                           ; BSR set to: 1
  1948                           ;main.c: 122:             if(delay > (30)){
  1949  00208E  0E1E               	movlw	30
  1950  002090  0100               	movlb	0	; () banked
  1951  002092  65E9               	cpfsgt	_delay& (0+255),b
  1952  002094  EF4E  F010         	goto	u5951
  1953  002098  EF50  F010         	goto	u5950
  1954  00209C                     u5951:
  1955  00209C  EF44  F010         	goto	l6629
  1956  0020A0                     u5950:
  1957  0020A0                     
  1958                           ; BSR set to: 0
  1959                           ;main.c: 129:                 if(distLeft < (40) || distRight < (40)){
  1960  0020A0  51E7               	movf	(_distLeft+1)& (0+255),w,b	;volatile
  1961  0020A2  E109               	bnz	u5960
  1962  0020A4  0E28               	movlw	40
  1963  0020A6  5DE6               	subwf	_distLeft& (0+255),w,b	;volatile
  1964  0020A8  A0D8               	btfss	status,0,c
  1965  0020AA  EF59  F010         	goto	u5961
  1966  0020AE  EF5B  F010         	goto	u5960
  1967  0020B2                     u5961:
  1968  0020B2  EF66  F010         	goto	l6643
  1969  0020B6                     u5960:
  1970  0020B6                     
  1971                           ; BSR set to: 0
  1972  0020B6  51E5               	movf	(_distRight+1)& (0+255),w,b	;volatile
  1973  0020B8  E107               	bnz	u5971
  1974  0020BA  0E28               	movlw	40
  1975  0020BC  5DE4               	subwf	_distRight& (0+255),w,b	;volatile
  1976  0020BE  B0D8               	btfsc	status,0,c
  1977  0020C0  EF64  F010         	goto	u5971
  1978  0020C4  EF66  F010         	goto	u5970
  1979  0020C8                     u5971:
  1980  0020C8  EF9C  F010         	goto	l1245
  1981  0020CC                     u5970:
  1982  0020CC                     l6643:
  1983                           
  1984                           ; BSR set to: 0
  1985                           ;main.c: 130:                     delay = 0;
  1986  0020CC  0E00               	movlw	0
  1987  0020CE  6FE9               	movwf	_delay& (0+255),b
  1988                           
  1989                           ;main.c: 131:                     curveMode = AfterCurve;
  1990  0020D0  0E03               	movlw	3
  1991  0020D2  6FEB               	movwf	_curveMode& (0+255),b
  1992                           
  1993                           ;main.c: 132:                     driveMode = Straight;
  1994  0020D4  0E00               	movlw	0
  1995  0020D6  6FEC               	movwf	_driveMode& (0+255),b
  1996  0020D8  EF9C  F010         	goto	l1245
  1997  0020DC                     l6647:
  1998                           
  1999                           ; BSR set to: 1
  2000                           ;main.c: 140:             if(delay > (50)){
  2001  0020DC  0E32               	movlw	50
  2002  0020DE  0100               	movlb	0	; () banked
  2003  0020E0  65E9               	cpfsgt	_delay& (0+255),b
  2004  0020E2  EF75  F010         	goto	u5981
  2005  0020E6  EF77  F010         	goto	u5980
  2006  0020EA                     u5981:
  2007  0020EA  EF44  F010         	goto	l6629
  2008  0020EE                     u5980:
  2009  0020EE                     
  2010                           ; BSR set to: 0
  2011                           ;main.c: 141:                 delay = 0;
  2012  0020EE  0E00               	movlw	0
  2013  0020F0  6FE9               	movwf	_delay& (0+255),b
  2014                           
  2015                           ;main.c: 142:                 curveMode = OutCurve;
  2016  0020F2  0E00               	movlw	0
  2017  0020F4  6FEB               	movwf	_curveMode& (0+255),b
  2018                           
  2019                           ;main.c: 144:             } else {
  2020  0020F6  EF9C  F010         	goto	l1245
  2021  0020FA                     l6655:
  2022  0020FA  0100               	movlb	0	; () banked
  2023  0020FC  51EB               	movf	_curveMode& (0+255),w,b
  2024  0020FE  0101               	movlb	1	; () banked
  2025  002100  6F36               	movwf	??_getCurve& (0+255),b
  2026  002102  6B37               	clrf	(??_getCurve+1)& (0+255),b
  2027                           
  2028                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2029                           ; Switch size 1, requested type "simple"
  2030                           ; Number of cases is 1, Range of values is 0 to 0
  2031                           ; switch strategies available:
  2032                           ; Name         Instructions Cycles
  2033                           ; simple_byte            4     3 (average)
  2034                           ;	Chosen strategy is simple_byte
  2035  002104  5137               	movf	(??_getCurve+1)& (0+255),w,b
  2036  002106  0A00               	xorlw	0	; case 0
  2037  002108  B4D8               	btfsc	status,2,c
  2038  00210A  EF89  F010         	goto	l7015
  2039  00210E  EF9C  F010         	goto	l1245
  2040  002112                     l7015:
  2041                           
  2042                           ; BSR set to: 1
  2043                           ; Switch size 1, requested type "simple"
  2044                           ; Number of cases is 4, Range of values is 0 to 3
  2045                           ; switch strategies available:
  2046                           ; Name         Instructions Cycles
  2047                           ; simple_byte           13     7 (average)
  2048                           ;	Chosen strategy is simple_byte
  2049  002112  5136               	movf	??_getCurve& (0+255),w,b
  2050  002114  0A00               	xorlw	0	; case 0
  2051  002116  B4D8               	btfsc	status,2,c
  2052  002118  EF8D  F00F         	goto	l6599
  2053  00211C  0A01               	xorlw	1	; case 1
  2054  00211E  B4D8               	btfsc	status,2,c
  2055  002120  EF2E  F010         	goto	l6623
  2056  002124  0A03               	xorlw	3	; case 2
  2057  002126  B4D8               	btfsc	status,2,c
  2058  002128  EF47  F010         	goto	l6631
  2059  00212C  0A01               	xorlw	1	; case 3
  2060  00212E  B4D8               	btfsc	status,2,c
  2061  002130  EF6E  F010         	goto	l6647
  2062  002134  EF9C  F010         	goto	l1245
  2063  002138                     l1245:
  2064                           
  2065                           ;main.c: 149:     oldDistLeft = distLeft;
  2066  002138  C0E6  F0E2         	movff	_distLeft,_oldDistLeft	;volatile
  2067  00213C  C0E7  F0E3         	movff	_distLeft+1,_oldDistLeft+1	;volatile
  2068                           
  2069                           ;main.c: 150:     oldDistRight = distRight;
  2070  002140  C0E4  F0E0         	movff	_distRight,_oldDistRight	;volatile
  2071  002144  C0E5  F0E1         	movff	_distRight+1,_oldDistRight+1	;volatile
  2072  002148  0012               	return		;funcret
  2073  00214A                     __end_of_getCurve:
  2074                           	callstack 0
  2075                           
  2076 ;; *************** function _printf *****************
  2077 ;; Defined at:
  2078 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\printf.c"
  2079 ;; Parameters:    Size  Location     Type
  2080 ;;  fmt             2   16[BANK1 ] PTR const unsigned char 
  2081 ;;		 -> STR_6(9), STR_5(14), STR_4(22), STR_3(13), 
  2082 ;;		 -> STR_2(22), STR_1(11), 
  2083 ;; Auto vars:     Size  Location     Type
  2084 ;;  ap              2   80[BANK0 ] PTR void [1]
  2085 ;;		 -> ?_printf(2), 
  2086 ;;  ret             2    0        int 
  2087 ;; Return value:  Size  Location     Type
  2088 ;;                  2   16[BANK1 ] int 
  2089 ;; Registers used:
  2090 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2091 ;; Tracked objects:
  2092 ;;		On entry : 0/0
  2093 ;;		On exit  : 0/0
  2094 ;;		Unchanged: 0/0
  2095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2096 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2097 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2099 ;;      Totals:         0       2       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2100 ;;Total ram usage:        8 bytes
  2101 ;; Hardware stack levels used: 1
  2102 ;; Hardware stack levels required when called: 16
  2103 ;; This function calls:
  2104 ;;		_vfprintf
  2105 ;; This function is called by:
  2106 ;;		_loop
  2107 ;;		_getCurve
  2108 ;; This function uses a non-reentrant model
  2109 ;;
  2110                           
  2111                           	psect	text4
  2112  0043A6                     __ptext4:
  2113                           	callstack 0
  2114  0043A6                     _printf:
  2115                           	callstack 13
  2116  0043A6  0E32               	movlw	low (?_printf+2)
  2117  0043A8  0100               	movlb	0	; () banked
  2118  0043AA  6FB0               	movwf	printf@ap& (0+255),b
  2119  0043AC  0E01               	movlw	high (?_printf+2)
  2120  0043AE  6FB1               	movwf	(printf@ap+1)& (0+255),b
  2121  0043B0                     
  2122                           ; BSR set to: 0
  2123  0043B0  0E00               	movlw	0
  2124  0043B2  6FA8               	movwf	vfprintf@fp& (0+255),b
  2125  0043B4  0E00               	movlw	0
  2126  0043B6  6FA9               	movwf	(vfprintf@fp+1)& (0+255),b
  2127  0043B8  C130  F0AA         	movff	printf@fmt,vfprintf@fmt
  2128  0043BC  C131  F0AB         	movff	printf@fmt+1,vfprintf@fmt+1
  2129  0043C0  0EB0               	movlw	low printf@ap
  2130  0043C2  6FAC               	movwf	vfprintf@ap& (0+255),b
  2131  0043C4  0E00               	movlw	high printf@ap
  2132  0043C6  6FAD               	movwf	(vfprintf@ap+1)& (0+255),b
  2133  0043C8  EC70  F01D         	call	_vfprintf	;wreg free
  2134  0043CC  0012               	return		;funcret
  2135  0043CE                     __end_of_printf:
  2136                           	callstack 0
  2137                           
  2138 ;; *************** function _vfprintf *****************
  2139 ;; Defined at:
  2140 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  2141 ;; Parameters:    Size  Location     Type
  2142 ;;  fp              2   72[BANK0 ] PTR struct _IO_FILE
  2143 ;;		 -> NULL(0), 
  2144 ;;  fmt             2   74[BANK0 ] PTR const unsigned char 
  2145 ;;		 -> STR_6(9), STR_5(14), STR_4(22), STR_3(13), 
  2146 ;;		 -> STR_2(22), STR_1(11), 
  2147 ;;  ap              2   76[BANK0 ] PTR PTR void 
  2148 ;;		 -> printf@ap(2), 
  2149 ;; Auto vars:     Size  Location     Type
  2150 ;;  cfmt            2   78[BANK0 ] PTR unsigned char 
  2151 ;;		 -> STR_6(9), STR_5(14), STR_4(22), STR_3(13), 
  2152 ;;		 -> STR_2(22), STR_1(11), 
  2153 ;; Return value:  Size  Location     Type
  2154 ;;                  2   72[BANK0 ] int 
  2155 ;; Registers used:
  2156 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2157 ;; Tracked objects:
  2158 ;;		On entry : 0/0
  2159 ;;		On exit  : 0/0
  2160 ;;		Unchanged: 0/0
  2161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2162 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2163 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2165 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2166 ;;Total ram usage:        8 bytes
  2167 ;; Hardware stack levels used: 1
  2168 ;; Hardware stack levels required when called: 15
  2169 ;; This function calls:
  2170 ;;		_vfpfcnvrt
  2171 ;; This function is called by:
  2172 ;;		_printf
  2173 ;; This function uses a non-reentrant model
  2174 ;;
  2175                           
  2176                           	psect	text5
  2177  003AE0                     __ptext5:
  2178                           	callstack 0
  2179  003AE0                     _vfprintf:
  2180                           	callstack 13
  2181  003AE0                     
  2182                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  2183  003AE0  C0AA  F0AE         	movff	vfprintf@fmt,vfprintf@cfmt
  2184  003AE4  C0AB  F0AF         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2185  003AE8                     
  2186                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  2187  003AE8  0E00               	movlw	0
  2188  003AEA  0100               	movlb	0	; () banked
  2189  003AEC  6FD3               	movwf	(_nout+1)& (0+255),b
  2190  003AEE  0E00               	movlw	0
  2191  003AF0  6FD2               	movwf	_nout& (0+255),b
  2192                           
  2193                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2194  003AF2  EF8E  F01D         	goto	l6307
  2195  003AF6                     l6305:
  2196                           
  2197                           ; BSR set to: 0
  2198                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  2199  003AF6  C0A8  F09E         	movff	vfprintf@fp,vfpfcnvrt@fp
  2200  003AFA  C0A9  F09F         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2201  003AFE  0EAE               	movlw	low vfprintf@cfmt
  2202  003B00  6FA0               	movwf	vfpfcnvrt@fmt& (0+255),b
  2203  003B02  0E00               	movlw	high vfprintf@cfmt
  2204  003B04  6FA1               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2205  003B06  C0AC  F0A2         	movff	vfprintf@ap,vfpfcnvrt@ap
  2206  003B0A  C0AD  F0A3         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2207  003B0E  EC20  F00E         	call	_vfpfcnvrt	;wreg free
  2208  003B12  0100               	movlb	0	; () banked
  2209  003B14  519E               	movf	?_vfpfcnvrt& (0+255),w,b
  2210  003B16  27D2               	addwf	_nout& (0+255),f,b
  2211  003B18  519F               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  2212  003B1A  23D3               	addwfc	(_nout+1)& (0+255),f,b
  2213  003B1C                     l6307:
  2214                           
  2215                           ; BSR set to: 0
  2216                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2217  003B1C  0060  F2BB  FFF6   	movff	vfprintf@cfmt,tblptrl
  2218  003B22  0060  F2BF  FFF7   	movff	vfprintf@cfmt+1,tblptrh
  2219  003B28                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2220  003B28  6AF8               	clrf	tblptru,c
  2221  003B2A                     	endif
  2222  003B2A                     	if	0	;tblptru may be non-zero
  2223  003B2A                     	endif
  2224  003B2A  0008               	tblrd		*
  2225  003B2C  50F5               	movf	tablat,w,c
  2226  003B2E  0900               	iorlw	0
  2227  003B30  A4D8               	btfss	status,2,c
  2228  003B32  EF9D  F01D         	goto	u5471
  2229  003B36  EF9F  F01D         	goto	u5470
  2230  003B3A                     u5471:
  2231  003B3A  EF7B  F01D         	goto	l6305
  2232  003B3E                     u5470:
  2233  003B3E                     
  2234                           ; BSR set to: 0
  2235                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  2236  003B3E  C0D2  F0A8         	movff	_nout,?_vfprintf
  2237  003B42  C0D3  F0A9         	movff	_nout+1,?_vfprintf+1
  2238  003B46                     
  2239                           ; BSR set to: 0
  2240  003B46  0012               	return		;funcret
  2241  003B48                     __end_of_vfprintf:
  2242                           	callstack 0
  2243                           
  2244 ;; *************** function _vfpfcnvrt *****************
  2245 ;; Defined at:
  2246 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  2247 ;; Parameters:    Size  Location     Type
  2248 ;;  fp              2   62[BANK0 ] PTR struct _IO_FILE
  2249 ;;		 -> NULL(0), 
  2250 ;;  fmt             2   64[BANK0 ] PTR PTR unsigned char 
  2251 ;;		 -> vfprintf@cfmt(2), 
  2252 ;;  ap              2   66[BANK0 ] PTR PTR void 
  2253 ;;		 -> printf@ap(2), 
  2254 ;; Auto vars:     Size  Location     Type
  2255 ;;  llu             8    8[BANK1 ] unsigned long long 
  2256 ;;  ll              8    0[BANK1 ] long long 
  2257 ;;  f               4    0        long long 
  2258 ;;  vp              3    0        PTR void 
  2259 ;;  ct              3    0        unsigned char [3]
  2260 ;;  cp              3    0        PTR unsigned char 
  2261 ;;  i               2    0        int 
  2262 ;;  done            2    0        int 
  2263 ;;  c               1    0        unsigned char 
  2264 ;; Return value:  Size  Location     Type
  2265 ;;                  2   62[BANK0 ] int 
  2266 ;; Registers used:
  2267 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2268 ;; Tracked objects:
  2269 ;;		On entry : 0/0
  2270 ;;		On exit  : 0/0
  2271 ;;		Unchanged: 0/0
  2272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2273 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2274 ;;      Locals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2275 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2276 ;;      Totals:         0      10      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2277 ;;Total ram usage:       26 bytes
  2278 ;; Hardware stack levels used: 1
  2279 ;; Hardware stack levels required when called: 14
  2280 ;; This function calls:
  2281 ;;		_dtoa
  2282 ;;		_fputc
  2283 ;;		_utoa
  2284 ;; This function is called by:
  2285 ;;		_vfprintf
  2286 ;; This function uses a non-reentrant model
  2287 ;;
  2288                           
  2289                           	psect	text6
  2290  001C40                     __ptext6:
  2291                           	callstack 0
  2292  001C40                     _vfpfcnvrt:
  2293                           	callstack 13
  2294  001C40                     
  2295                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.36\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          6\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  2296  001C40  0060  F283  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2297  001C46  0060  F287  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2298  001C4C  006F FF7B FFF6     	movff	postinc2,tblptrl
  2299  001C52  006F FF77 FFF7     	movff	postdec2,tblptrh
  2300  001C58                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2301  001C58  6AF8               	clrf	tblptru,c
  2302  001C5A                     	endif
  2303  001C5A                     	if	0	;tblptru may be non-zero
  2304  001C5A                     	endif
  2305  001C5A  0008               	tblrd		*
  2306  001C5C  50F5               	movf	tablat,w,c
  2307  001C5E  0A25               	xorlw	37
  2308  001C60  A4D8               	btfss	status,2,c
  2309  001C62  EF35  F00E         	goto	u5261
  2310  001C66  EF37  F00E         	goto	u5260
  2311  001C6A                     u5261:
  2312  001C6A  EF67  F00F         	goto	l6197
  2313  001C6E                     u5260:
  2314  001C6E                     
  2315                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  2316  001C6E  0060  F283  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2317  001C74  0060  F287  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2318  001C7A  2ADE               	incf	postinc2,f,c
  2319  001C7C  0E00               	movlw	0
  2320  001C7E  22DD               	addwfc	postdec2,f,c
  2321  001C80                     
  2322                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  2323  001C80  0E00               	movlw	0
  2324  001C82  0100               	movlb	0	; () banked
  2325  001C84  6FD5               	movwf	(_width+1)& (0+255),b
  2326  001C86  0E00               	movlw	0
  2327  001C88  6FD4               	movwf	_width& (0+255),b
  2328  001C8A  C0D4  F023         	movff	_width,_flags
  2329  001C8E  C0D5  F024         	movff	_width+1,_flags+1
  2330  001C92                     
  2331                           ; BSR set to: 0
  2332                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  2333  001C92  69D6               	setf	_prec& (0+255),b
  2334  001C94  69D7               	setf	(_prec+1)& (0+255),b
  2335  001C96                     
  2336                           ; BSR set to: 0
  2337                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2338  001C96  0060  F283  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2339  001C9C  0060  F287  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2340  001CA2  006F FF7B FFF6     	movff	postinc2,tblptrl
  2341  001CA8  006F FF77 FFF7     	movff	postdec2,tblptrh
  2342  001CAE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2343  001CAE  6AF8               	clrf	tblptru,c
  2344  001CB0                     	endif
  2345  001CB0                     	if	0	;tblptru may be non-zero
  2346  001CB0                     	endif
  2347  001CB0  0008               	tblrd		*
  2348  001CB2  50F5               	movf	tablat,w,c
  2349  001CB4  0A64               	xorlw	100
  2350  001CB6  B4D8               	btfsc	status,2,c
  2351  001CB8  EF60  F00E         	goto	u5271
  2352  001CBC  EF62  F00E         	goto	u5270
  2353  001CC0                     u5271:
  2354  001CC0  EF79  F00E         	goto	l6167
  2355  001CC4                     u5270:
  2356  001CC4                     
  2357                           ; BSR set to: 0
  2358  001CC4  0060  F283  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2359  001CCA  0060  F287  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2360  001CD0  006F FF7B FFF6     	movff	postinc2,tblptrl
  2361  001CD6  006F FF77 FFF7     	movff	postdec2,tblptrh
  2362  001CDC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2363  001CDC  6AF8               	clrf	tblptru,c
  2364  001CDE                     	endif
  2365  001CDE                     	if	0	;tblptru may be non-zero
  2366  001CDE                     	endif
  2367  001CDE  0008               	tblrd		*
  2368  001CE0  50F5               	movf	tablat,w,c
  2369  001CE2  0A69               	xorlw	105
  2370  001CE4  A4D8               	btfss	status,2,c
  2371  001CE6  EF77  F00E         	goto	u5281
  2372  001CEA  EF79  F00E         	goto	u5280
  2373  001CEE                     u5281:
  2374  001CEE  EFC4  F00E         	goto	l6173
  2375  001CF2                     u5280:
  2376  001CF2                     l6167:
  2377                           
  2378                           ; BSR set to: 0
  2379                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  2380  001CF2  0060  F283  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2381  001CF8  0060  F287  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2382  001CFE  2ADE               	incf	postinc2,f,c
  2383  001D00  0E00               	movlw	0
  2384  001D02  22DD               	addwfc	postdec2,f,c
  2385                           
  2386                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2387  001D04  0060  F28B  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  2388  001D0A  0060  F28F  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  2389  001D10  006F FF7C  F0A4    	movff	indf2,??_vfpfcnvrt
  2390  001D16  0E02               	movlw	2
  2391  001D18  26DE               	addwf	postinc2,f,c
  2392  001D1A  006F FF7C  F0A5    	movff	indf2,??_vfpfcnvrt+1
  2393  001D20  0E00               	movlw	0
  2394  001D22  22DD               	addwfc	postdec2,f,c
  2395  001D24  0060  F293  FFD9   	movff	??_vfpfcnvrt,fsr2l
  2396  001D2A  0060  F297  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  2397  001D30  006F FF78  F120    	movff	postinc2,vfpfcnvrt@ll
  2398  001D36  006F FF74  F121    	movff	postdec2,vfpfcnvrt@ll+1
  2399  001D3C  0101               	movlb	1	; () banked
  2400  001D3E  0E00               	movlw	0
  2401  001D40  BF21               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  2402  001D42  0EFF               	movlw	-1
  2403  001D44  6F22               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  2404  001D46  6F23               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  2405  001D48  6F24               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  2406  001D4A  6F25               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  2407  001D4C  6F26               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  2408  001D4E  6F27               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  2409  001D50                     
  2410                           ; BSR set to: 1
  2411                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  2412  001D50  C09E  F07A         	movff	vfpfcnvrt@fp,dtoa@fp
  2413  001D54  C09F  F07B         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2414  001D58  C120  F07C         	movff	vfpfcnvrt@ll,dtoa@d
  2415  001D5C  C121  F07D         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2416  001D60  C122  F07E         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2417  001D64  C123  F07F         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2418  001D68  C124  F080         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2419  001D6C  C125  F081         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2420  001D70  C126  F082         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2421  001D74  C127  F083         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2422  001D78  ECAD  F00C         	call	_dtoa	;wreg free
  2423  001D7C  C07A  F09E         	movff	?_dtoa,?_vfpfcnvrt
  2424  001D80  C07B  F09F         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2425  001D84  EF8A  F00F         	goto	l2112
  2426  001D88                     l6173:
  2427                           
  2428                           ; BSR set to: 0
  2429                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1204:         if 
      +                          (*fmt[0] == 'u') {
  2430  001D88  0060  F283  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2431  001D8E  0060  F287  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2432  001D94  006F FF7B FFF6     	movff	postinc2,tblptrl
  2433  001D9A  006F FF77 FFF7     	movff	postdec2,tblptrh
  2434  001DA0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2435  001DA0  6AF8               	clrf	tblptru,c
  2436  001DA2                     	endif
  2437  001DA2                     	if	0	;tblptru may be non-zero
  2438  001DA2                     	endif
  2439  001DA2  0008               	tblrd		*
  2440  001DA4  50F5               	movf	tablat,w,c
  2441  001DA6  0A75               	xorlw	117
  2442  001DA8  A4D8               	btfss	status,2,c
  2443  001DAA  EFD9  F00E         	goto	u5291
  2444  001DAE  EFDB  F00E         	goto	u5290
  2445  001DB2                     u5291:
  2446  001DB2  EF27  F00F         	goto	l6181
  2447  001DB6                     u5290:
  2448  001DB6                     
  2449                           ; BSR set to: 0
  2450                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1206:            
      +                           ++*fmt;
  2451  001DB6  0060  F283  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2452  001DBC  0060  F287  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2453  001DC2  2ADE               	incf	postinc2,f,c
  2454  001DC4  0E00               	movlw	0
  2455  001DC6  22DD               	addwfc	postdec2,f,c
  2456                           
  2457                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1207:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  2458  001DC8  0060  F28B  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  2459  001DCE  0060  F28F  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  2460  001DD4  006F FF7C  F0A4    	movff	indf2,??_vfpfcnvrt
  2461  001DDA  0E02               	movlw	2
  2462  001DDC  26DE               	addwf	postinc2,f,c
  2463  001DDE  006F FF7C  F0A5    	movff	indf2,??_vfpfcnvrt+1
  2464  001DE4  0E00               	movlw	0
  2465  001DE6  22DD               	addwfc	postdec2,f,c
  2466  001DE8  0060  F293  FFD9   	movff	??_vfpfcnvrt,fsr2l
  2467  001DEE  0060  F297  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  2468  001DF4  006F FF78  F0A6    	movff	postinc2,??_vfpfcnvrt+2
  2469  001DFA  006F FF74  F0A7    	movff	postdec2,??_vfpfcnvrt+3
  2470  001E00  C0A6  F128         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  2471  001E04  C0A7  F129         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  2472  001E08  0101               	movlb	1	; () banked
  2473  001E0A  6B2A               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  2474  001E0C  6B2B               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  2475  001E0E  6B2C               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  2476  001E10  6B2D               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  2477  001E12  6B2E               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  2478  001E14  6B2F               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  2479  001E16                     
  2480                           ; BSR set to: 1
  2481                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1209:            
      +                           return utoa(fp, llu);
  2482  001E16  C09E  F07A         	movff	vfpfcnvrt@fp,utoa@fp
  2483  001E1A  C09F  F07B         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  2484  001E1E  C128  F07C         	movff	vfpfcnvrt@llu,utoa@d
  2485  001E22  C129  F07D         	movff	vfpfcnvrt@llu+1,utoa@d+1
  2486  001E26  C12A  F07E         	movff	vfpfcnvrt@llu+2,utoa@d+2
  2487  001E2A  C12B  F07F         	movff	vfpfcnvrt@llu+3,utoa@d+3
  2488  001E2E  C12C  F080         	movff	vfpfcnvrt@llu+4,utoa@d+4
  2489  001E32  C12D  F081         	movff	vfpfcnvrt@llu+5,utoa@d+5
  2490  001E36  C12E  F082         	movff	vfpfcnvrt@llu+6,utoa@d+6
  2491  001E3A  C12F  F083         	movff	vfpfcnvrt@llu+7,utoa@d+7
  2492  001E3E  ECB4  F011         	call	_utoa	;wreg free
  2493  001E42  C07A  F09E         	movff	?_utoa,?_vfpfcnvrt
  2494  001E46  C07B  F09F         	movff	?_utoa+1,?_vfpfcnvrt+1
  2495  001E4A  EF8A  F00F         	goto	l2112
  2496  001E4E                     l6181:
  2497                           
  2498                           ; BSR set to: 0
  2499                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2500  001E4E  0060  F283  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2501  001E54  0060  F287  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2502  001E5A  006F FF7B FFF6     	movff	postinc2,tblptrl
  2503  001E60  006F FF77 FFF7     	movff	postdec2,tblptrh
  2504  001E66                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2505  001E66  6AF8               	clrf	tblptru,c
  2506  001E68                     	endif
  2507  001E68                     	if	0	;tblptru may be non-zero
  2508  001E68                     	endif
  2509  001E68  0008               	tblrd		*
  2510  001E6A  50F5               	movf	tablat,w,c
  2511  001E6C  0A25               	xorlw	37
  2512  001E6E  A4D8               	btfss	status,2,c
  2513  001E70  EF3C  F00F         	goto	u5301
  2514  001E74  EF3E  F00F         	goto	u5300
  2515  001E78                     u5301:
  2516  001E78  EF58  F00F         	goto	l6191
  2517  001E7C                     u5300:
  2518  001E7C                     
  2519                           ; BSR set to: 0
  2520                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2521  001E7C  0060  F283  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2522  001E82  0060  F287  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2523  001E88  2ADE               	incf	postinc2,f,c
  2524  001E8A  0E00               	movlw	0
  2525  001E8C  22DD               	addwfc	postdec2,f,c
  2526  001E8E                     
  2527                           ; BSR set to: 0
  2528                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2529  001E8E  0E00               	movlw	0
  2530  001E90  6F61               	movwf	(fputc@c+1)& (0+255),b
  2531  001E92  0E25               	movlw	37
  2532  001E94  6F60               	movwf	fputc@c& (0+255),b
  2533  001E96  C09E  F062         	movff	vfpfcnvrt@fp,fputc@fp
  2534  001E9A  C09F  F063         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2535  001E9E  ECE1  F01C         	call	_fputc	;wreg free
  2536  001EA2                     l6187:
  2537                           
  2538                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2539  001EA2  0E00               	movlw	0
  2540  001EA4  0100               	movlb	0	; () banked
  2541  001EA6  6F9F               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2542  001EA8  0E01               	movlw	1
  2543  001EAA  6F9E               	movwf	?_vfpfcnvrt& (0+255),b
  2544  001EAC  EF8A  F00F         	goto	l2112
  2545  001EB0                     l6191:
  2546                           
  2547                           ; BSR set to: 0
  2548                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2549  001EB0  0060  F283  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2550  001EB6  0060  F287  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2551  001EBC  2ADE               	incf	postinc2,f,c
  2552  001EBE  0E00               	movlw	0
  2553  001EC0  22DD               	addwfc	postdec2,f,c
  2554  001EC2                     
  2555                           ; BSR set to: 0
  2556                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2557  001EC2  0E00               	movlw	0
  2558  001EC4  6F9F               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2559  001EC6  0E00               	movlw	0
  2560  001EC8  6F9E               	movwf	?_vfpfcnvrt& (0+255),b
  2561  001ECA  EF8A  F00F         	goto	l2112
  2562  001ECE                     l6197:
  2563                           
  2564                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2565  001ECE  0060  F283  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2566  001ED4  0060  F287  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2567  001EDA  006F FF7B FFF6     	movff	postinc2,tblptrl
  2568  001EE0  006F FF77 FFF7     	movff	postdec2,tblptrh
  2569  001EE6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2570  001EE6  6AF8               	clrf	tblptru,c
  2571  001EE8                     	endif
  2572  001EE8                     	if	0	;tblptru may be non-zero
  2573  001EE8                     	endif
  2574  001EE8  0008               	tblrd		*
  2575  001EEA  50F5               	movf	tablat,w,c
  2576  001EEC  0100               	movlb	0	; () banked
  2577  001EEE  6F60               	movwf	fputc@c& (0+255),b
  2578  001EF0  6B61               	clrf	(fputc@c+1)& (0+255),b
  2579  001EF2  C09E  F062         	movff	vfpfcnvrt@fp,fputc@fp
  2580  001EF6  C09F  F063         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2581  001EFA  ECE1  F01C         	call	_fputc	;wreg free
  2582  001EFE                     
  2583                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2584  001EFE  0060  F283  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2585  001F04  0060  F287  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2586  001F0A  2ADE               	incf	postinc2,f,c
  2587  001F0C  0E00               	movlw	0
  2588  001F0E  22DD               	addwfc	postdec2,f,c
  2589  001F10  EF51  F00F         	goto	l6187
  2590  001F14                     l2112:
  2591  001F14  0012               	return		;funcret
  2592  001F16                     __end_of_vfpfcnvrt:
  2593                           	callstack 0
  2594                           
  2595 ;; *************** function _utoa *****************
  2596 ;; Defined at:
  2597 ;;		line 615 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  2598 ;; Parameters:    Size  Location     Type
  2599 ;;  fp              2   26[BANK0 ] PTR struct _IO_FILE
  2600 ;;		 -> NULL(0), 
  2601 ;;  d               8   28[BANK0 ] unsigned long long 
  2602 ;; Auto vars:     Size  Location     Type
  2603 ;;  n               8   48[BANK0 ] unsigned long long 
  2604 ;;  i               2   56[BANK0 ] int 
  2605 ;;  w               2   46[BANK0 ] int 
  2606 ;;  p               2   44[BANK0 ] int 
  2607 ;; Return value:  Size  Location     Type
  2608 ;;                  2   26[BANK0 ] int 
  2609 ;; Registers used:
  2610 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2611 ;; Tracked objects:
  2612 ;;		On entry : 0/0
  2613 ;;		On exit  : 0/0
  2614 ;;		Unchanged: 0/0
  2615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2616 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2617 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2618 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2619 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2620 ;;Total ram usage:       32 bytes
  2621 ;; Hardware stack levels used: 1
  2622 ;; Hardware stack levels required when called: 13
  2623 ;; This function calls:
  2624 ;;		___lodiv
  2625 ;;		___lomod
  2626 ;;		_pad
  2627 ;; This function is called by:
  2628 ;;		_vfpfcnvrt
  2629 ;; This function uses a non-reentrant model
  2630 ;;
  2631                           
  2632                           	psect	text7
  2633  002368                     __ptext7:
  2634                           	callstack 0
  2635  002368                     _utoa:
  2636                           	callstack 13
  2637  002368                     
  2638                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 615: static int u
      +                          toa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99
      +                          \common\doprnt.c: 616: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\dop
      +                          rnt.c: 617:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common
      +                          \doprnt.c: 618:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.36\pic\sourc
      +                          es\c99\common\doprnt.c: 621:     if (!(prec < 0)) {
  2639  002368  0100               	movlb	0	; () banked
  2640  00236A  BFD7               	btfsc	(_prec+1)& (0+255),7,b
  2641  00236C  EFBA  F011         	goto	u5191
  2642  002370  EFBC  F011         	goto	u5190
  2643  002374                     u5191:
  2644  002374  EFBD  F011         	goto	l6123
  2645  002378                     u5190:
  2646  002378                     
  2647                           ; BSR set to: 0
  2648                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 622:         flag
      +                          s &= ~(1 << 1);
  2649  002378  9223               	bcf	_flags^0,1,c
  2650  00237A                     l6123:
  2651                           
  2652                           ; BSR set to: 0
  2653                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 624:     p = (0 <
      +                           prec) ? prec : 1;
  2654  00237A  BFD7               	btfsc	(_prec+1)& (0+255),7,b
  2655  00237C  EFCA  F011         	goto	u5200
  2656  002380  51D7               	movf	(_prec+1)& (0+255),w,b
  2657  002382  E106               	bnz	u5201
  2658  002384  05D6               	decf	_prec& (0+255),w,b
  2659  002386  B0D8               	btfsc	status,0,c
  2660  002388  EFC8  F011         	goto	u5201
  2661  00238C  EFCA  F011         	goto	u5200
  2662  002390                     u5201:
  2663  002390  EFD0  F011         	goto	l2095
  2664  002394                     u5200:
  2665  002394                     
  2666                           ; BSR set to: 0
  2667  002394  0E00               	movlw	0
  2668  002396  6F8D               	movwf	(utoa@p+1)& (0+255),b
  2669  002398  0E01               	movlw	1
  2670  00239A  6F8C               	movwf	utoa@p& (0+255),b
  2671  00239C  EFD4  F011         	goto	l2097
  2672  0023A0                     l2095:
  2673                           
  2674                           ; BSR set to: 0
  2675  0023A0  C0D6  F08C         	movff	_prec,utoa@p
  2676  0023A4  C0D7  F08D         	movff	_prec+1,utoa@p+1
  2677  0023A8                     l2097:
  2678                           
  2679                           ; BSR set to: 0
  2680                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 625:     w = widt
      +                          h;
  2681  0023A8  C0D4  F08E         	movff	_width,utoa@w
  2682  0023AC  C0D5  F08F         	movff	_width+1,utoa@w+1
  2683                           
  2684                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 628:     n = d;
  2685  0023B0  C07C  F090         	movff	utoa@d,utoa@n
  2686  0023B4  C07D  F091         	movff	utoa@d+1,utoa@n+1
  2687  0023B8  C07E  F092         	movff	utoa@d+2,utoa@n+2
  2688  0023BC  C07F  F093         	movff	utoa@d+3,utoa@n+3
  2689  0023C0  C080  F094         	movff	utoa@d+4,utoa@n+4
  2690  0023C4  C081  F095         	movff	utoa@d+5,utoa@n+5
  2691  0023C8  C082  F096         	movff	utoa@d+6,utoa@n+6
  2692  0023CC  C083  F097         	movff	utoa@d+7,utoa@n+7
  2693  0023D0                     
  2694                           ; BSR set to: 0
  2695                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 629:     i = size
      +                          of(dbuf) - 1;
  2696  0023D0  0E00               	movlw	0
  2697  0023D2  6F99               	movwf	(utoa@i+1)& (0+255),b
  2698  0023D4  0E1F               	movlw	31
  2699  0023D6  6F98               	movwf	utoa@i& (0+255),b
  2700  0023D8                     
  2701                           ; BSR set to: 0
  2702                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 630:     dbuf[i] 
      +                          = '\0';
  2703  0023D8  0E00               	movlw	0
  2704  0023DA  0101               	movlb	1	; () banked
  2705  0023DC  6F1F               	movwf	(_dbuf+31)& (0+255),b
  2706                           
  2707                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2708  0023DE  EF68  F012         	goto	l6141
  2709  0023E2                     l6131:
  2710                           
  2711                           ; BSR set to: 0
  2712                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 632:         --i;
  2713  0023E2  0798               	decf	utoa@i& (0+255),f,b
  2714  0023E4  A0D8               	btfss	status,0,c
  2715  0023E6  0799               	decf	(utoa@i+1)& (0+255),f,b
  2716  0023E8                     
  2717                           ; BSR set to: 0
  2718                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 633:         dbuf
      +                          [i] = '0' + (n % 10);
  2719  0023E8  0E00               	movlw	low _dbuf
  2720  0023EA  2598               	addwf	utoa@i& (0+255),w,b
  2721  0023EC  6ED9               	movwf	fsr2l,c
  2722  0023EE  0E01               	movlw	high _dbuf
  2723  0023F0  2199               	addwfc	(utoa@i+1)& (0+255),w,b
  2724  0023F2  6EDA               	movwf	fsr2h,c
  2725  0023F4  C090  F060         	movff	utoa@n,___lomod@dividend
  2726  0023F8  C091  F061         	movff	utoa@n+1,___lomod@dividend+1
  2727  0023FC  C092  F062         	movff	utoa@n+2,___lomod@dividend+2
  2728  002400  C093  F063         	movff	utoa@n+3,___lomod@dividend+3
  2729  002404  C094  F064         	movff	utoa@n+4,___lomod@dividend+4
  2730  002408  C095  F065         	movff	utoa@n+5,___lomod@dividend+5
  2731  00240C  C096  F066         	movff	utoa@n+6,___lomod@dividend+6
  2732  002410  C097  F067         	movff	utoa@n+7,___lomod@dividend+7
  2733  002414  0E0A               	movlw	10
  2734  002416  6F68               	movwf	___lomod@divisor& (0+255),b
  2735  002418  0E00               	movlw	0
  2736  00241A  6F69               	movwf	(___lomod@divisor+1)& (0+255),b
  2737  00241C  0E00               	movlw	0
  2738  00241E  6F6A               	movwf	(___lomod@divisor+2)& (0+255),b
  2739  002420  0E00               	movlw	0
  2740  002422  6F6B               	movwf	(___lomod@divisor+3)& (0+255),b
  2741  002424  0E00               	movlw	0
  2742  002426  6F6C               	movwf	(___lomod@divisor+4)& (0+255),b
  2743  002428  0E00               	movlw	0
  2744  00242A  6F6D               	movwf	(___lomod@divisor+5)& (0+255),b
  2745  00242C  0E00               	movlw	0
  2746  00242E  6F6E               	movwf	(___lomod@divisor+6)& (0+255),b
  2747  002430  0E00               	movlw	0
  2748  002432  6F6F               	movwf	(___lomod@divisor+7)& (0+255),b
  2749  002434  EC4D  F01A         	call	___lomod	;wreg free
  2750  002438  C060  F084         	movff	?___lomod,??_utoa
  2751  00243C  C061  F085         	movff	?___lomod+1,??_utoa+1
  2752  002440  C062  F086         	movff	?___lomod+2,??_utoa+2
  2753  002444  C063  F087         	movff	?___lomod+3,??_utoa+3
  2754  002448  C064  F088         	movff	?___lomod+4,??_utoa+4
  2755  00244C  C065  F089         	movff	?___lomod+5,??_utoa+5
  2756  002450  C066  F08A         	movff	?___lomod+6,??_utoa+6
  2757  002454  C067  F08B         	movff	?___lomod+7,??_utoa+7
  2758  002458  0100               	movlb	0	; () banked
  2759  00245A  5184               	movf	??_utoa& (0+255),w,b
  2760  00245C  0F30               	addlw	48
  2761  00245E  6EDF               	movwf	indf2,c
  2762  002460                     
  2763                           ; BSR set to: 0
  2764                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 634:         --p;
  2765  002460  078C               	decf	utoa@p& (0+255),f,b
  2766  002462  A0D8               	btfss	status,0,c
  2767  002464  078D               	decf	(utoa@p+1)& (0+255),f,b
  2768  002466                     
  2769                           ; BSR set to: 0
  2770                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 635:         --w;
  2771  002466  078E               	decf	utoa@w& (0+255),f,b
  2772  002468  A0D8               	btfss	status,0,c
  2773  00246A  078F               	decf	(utoa@w+1)& (0+255),f,b
  2774  00246C                     
  2775                           ; BSR set to: 0
  2776                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 636:         n = 
      +                          n / 10;
  2777  00246C  C090  F060         	movff	utoa@n,___lodiv@dividend
  2778  002470  C091  F061         	movff	utoa@n+1,___lodiv@dividend+1
  2779  002474  C092  F062         	movff	utoa@n+2,___lodiv@dividend+2
  2780  002478  C093  F063         	movff	utoa@n+3,___lodiv@dividend+3
  2781  00247C  C094  F064         	movff	utoa@n+4,___lodiv@dividend+4
  2782  002480  C095  F065         	movff	utoa@n+5,___lodiv@dividend+5
  2783  002484  C096  F066         	movff	utoa@n+6,___lodiv@dividend+6
  2784  002488  C097  F067         	movff	utoa@n+7,___lodiv@dividend+7
  2785  00248C  0E0A               	movlw	10
  2786  00248E  6F68               	movwf	___lodiv@divisor& (0+255),b
  2787  002490  0E00               	movlw	0
  2788  002492  6F69               	movwf	(___lodiv@divisor+1)& (0+255),b
  2789  002494  0E00               	movlw	0
  2790  002496  6F6A               	movwf	(___lodiv@divisor+2)& (0+255),b
  2791  002498  0E00               	movlw	0
  2792  00249A  6F6B               	movwf	(___lodiv@divisor+3)& (0+255),b
  2793  00249C  0E00               	movlw	0
  2794  00249E  6F6C               	movwf	(___lodiv@divisor+4)& (0+255),b
  2795  0024A0  0E00               	movlw	0
  2796  0024A2  6F6D               	movwf	(___lodiv@divisor+5)& (0+255),b
  2797  0024A4  0E00               	movlw	0
  2798  0024A6  6F6E               	movwf	(___lodiv@divisor+6)& (0+255),b
  2799  0024A8  0E00               	movlw	0
  2800  0024AA  6F6F               	movwf	(___lodiv@divisor+7)& (0+255),b
  2801  0024AC  EC61  F019         	call	___lodiv	;wreg free
  2802  0024B0  C060  F090         	movff	?___lodiv,utoa@n
  2803  0024B4  C061  F091         	movff	?___lodiv+1,utoa@n+1
  2804  0024B8  C062  F092         	movff	?___lodiv+2,utoa@n+2
  2805  0024BC  C063  F093         	movff	?___lodiv+3,utoa@n+3
  2806  0024C0  C064  F094         	movff	?___lodiv+4,utoa@n+4
  2807  0024C4  C065  F095         	movff	?___lodiv+5,utoa@n+5
  2808  0024C8  C066  F096         	movff	?___lodiv+6,utoa@n+6
  2809  0024CC  C067  F097         	movff	?___lodiv+7,utoa@n+7
  2810  0024D0                     l6141:
  2811                           
  2812                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2813  0024D0  0100               	movlb	0	; () banked
  2814  0024D2  5198               	movf	utoa@i& (0+255),w,b
  2815  0024D4  1199               	iorwf	(utoa@i+1)& (0+255),w,b
  2816  0024D6  B4D8               	btfsc	status,2,c
  2817  0024D8  EF70  F012         	goto	u5211
  2818  0024DC  EF72  F012         	goto	u5210
  2819  0024E0                     u5211:
  2820  0024E0  EFA2  F012         	goto	l6151
  2821  0024E4                     u5210:
  2822  0024E4                     
  2823                           ; BSR set to: 0
  2824  0024E4  5190               	movf	utoa@n& (0+255),w,b
  2825  0024E6  1191               	iorwf	(utoa@n+1)& (0+255),w,b
  2826  0024E8  1192               	iorwf	(utoa@n+2)& (0+255),w,b
  2827  0024EA  1193               	iorwf	(utoa@n+3)& (0+255),w,b
  2828  0024EC  1194               	iorwf	(utoa@n+4)& (0+255),w,b
  2829  0024EE  1195               	iorwf	(utoa@n+5)& (0+255),w,b
  2830  0024F0  1196               	iorwf	(utoa@n+6)& (0+255),w,b
  2831  0024F2  1197               	iorwf	(utoa@n+7)& (0+255),w,b
  2832  0024F4  A4D8               	btfss	status,2,c
  2833  0024F6  EF7F  F012         	goto	u5221
  2834  0024FA  EF81  F012         	goto	u5220
  2835  0024FE                     u5221:
  2836  0024FE  EFF1  F011         	goto	l6131
  2837  002502                     u5220:
  2838  002502                     
  2839                           ; BSR set to: 0
  2840  002502  BF8D               	btfsc	(utoa@p+1)& (0+255),7,b
  2841  002504  EF8E  F012         	goto	u5230
  2842  002508  518D               	movf	(utoa@p+1)& (0+255),w,b
  2843  00250A  E106               	bnz	u5231
  2844  00250C  058C               	decf	utoa@p& (0+255),w,b
  2845  00250E  B0D8               	btfsc	status,0,c
  2846  002510  EF8C  F012         	goto	u5231
  2847  002514  EF8E  F012         	goto	u5230
  2848  002518                     u5231:
  2849  002518  EFF1  F011         	goto	l6131
  2850  00251C                     u5230:
  2851  00251C                     
  2852                           ; BSR set to: 0
  2853  00251C  BF8F               	btfsc	(utoa@w+1)& (0+255),7,b
  2854  00251E  EF99  F012         	goto	u5241
  2855  002522  518F               	movf	(utoa@w+1)& (0+255),w,b
  2856  002524  E108               	bnz	u5240
  2857  002526  058E               	decf	utoa@w& (0+255),w,b
  2858  002528  A0D8               	btfss	status,0,c
  2859  00252A  EF99  F012         	goto	u5241
  2860  00252E  EF9B  F012         	goto	u5240
  2861  002532                     u5241:
  2862  002532  EFA2  F012         	goto	l6151
  2863  002536                     u5240:
  2864  002536                     
  2865                           ; BSR set to: 0
  2866  002536  B223               	btfsc	_flags^0,1,c
  2867  002538  EFA0  F012         	goto	u5251
  2868  00253C  EFA2  F012         	goto	u5250
  2869  002540                     u5251:
  2870  002540  EFF1  F011         	goto	l6131
  2871  002544                     u5250:
  2872  002544                     l6151:
  2873                           
  2874                           ; BSR set to: 0
  2875                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 640:     return p
      +                          ad(fp, &dbuf[i], w);
  2876  002544  C07A  F070         	movff	utoa@fp,pad@fp
  2877  002548  C07B  F071         	movff	utoa@fp+1,pad@fp+1
  2878  00254C  0E00               	movlw	low _dbuf
  2879  00254E  2598               	addwf	utoa@i& (0+255),w,b
  2880  002550  6F72               	movwf	pad@buf& (0+255),b
  2881  002552  0E01               	movlw	high _dbuf
  2882  002554  2199               	addwfc	(utoa@i+1)& (0+255),w,b
  2883  002556  6F73               	movwf	(pad@buf+1)& (0+255),b
  2884  002558  C08E  F074         	movff	utoa@w,pad@p
  2885  00255C  C08F  F075         	movff	utoa@w+1,pad@p+1
  2886  002560  EC1B  F01B         	call	_pad	;wreg free
  2887  002564  C070  F07A         	movff	?_pad,?_utoa
  2888  002568  C071  F07B         	movff	?_pad+1,?_utoa+1
  2889  00256C  0012               	return		;funcret
  2890  00256E                     __end_of_utoa:
  2891                           	callstack 0
  2892                           
  2893 ;; *************** function ___lomod *****************
  2894 ;; Defined at:
  2895 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lomod.c"
  2896 ;; Parameters:    Size  Location     Type
  2897 ;;  dividend        8    0[BANK0 ] unsigned long long 
  2898 ;;  divisor         8    8[BANK0 ] unsigned long long 
  2899 ;; Auto vars:     Size  Location     Type
  2900 ;;  counter         1   31[COMRAM] unsigned char 
  2901 ;; Return value:  Size  Location     Type
  2902 ;;                  8    0[BANK0 ] unsigned long long 
  2903 ;; Registers used:
  2904 ;;		wreg, status,2, status,0
  2905 ;; Tracked objects:
  2906 ;;		On entry : 0/0
  2907 ;;		On exit  : 0/0
  2908 ;;		Unchanged: 0/0
  2909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2910 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2911 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2913 ;;      Totals:         1      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2914 ;;Total ram usage:       17 bytes
  2915 ;; Hardware stack levels used: 1
  2916 ;; Hardware stack levels required when called: 8
  2917 ;; This function calls:
  2918 ;;		Nothing
  2919 ;; This function is called by:
  2920 ;;		_utoa
  2921 ;; This function uses a non-reentrant model
  2922 ;;
  2923                           
  2924                           	psect	text8
  2925  00349A                     __ptext8:
  2926                           	callstack 0
  2927  00349A                     ___lomod:
  2928                           	callstack 17
  2929  00349A  0100               	movlb	0	; () banked
  2930  00349C  5168               	movf	___lomod@divisor& (0+255),w,b
  2931  00349E  1169               	iorwf	(___lomod@divisor+1)& (0+255),w,b
  2932  0034A0  116A               	iorwf	(___lomod@divisor+2)& (0+255),w,b
  2933  0034A2  116B               	iorwf	(___lomod@divisor+3)& (0+255),w,b
  2934  0034A4  116C               	iorwf	(___lomod@divisor+4)& (0+255),w,b
  2935  0034A6  116D               	iorwf	(___lomod@divisor+5)& (0+255),w,b
  2936  0034A8  116E               	iorwf	(___lomod@divisor+6)& (0+255),w,b
  2937  0034AA  116F               	iorwf	(___lomod@divisor+7)& (0+255),w,b
  2938  0034AC  B4D8               	btfsc	status,2,c
  2939  0034AE  EF5B  F01A         	goto	u4961
  2940  0034B2  EF5D  F01A         	goto	u4960
  2941  0034B6                     u4961:
  2942  0034B6  EFA5  F01A         	goto	l1802
  2943  0034BA                     u4960:
  2944  0034BA                     
  2945                           ; BSR set to: 0
  2946  0034BA  0E01               	movlw	1
  2947  0034BC  6E20               	movwf	___lomod@counter^0,c
  2948  0034BE  EF6B  F01A         	goto	l6021
  2949  0034C2                     l6019:
  2950                           
  2951                           ; BSR set to: 0
  2952  0034C2  90D8               	bcf	status,0,c
  2953  0034C4  3768               	rlcf	___lomod@divisor& (0+255),f,b
  2954  0034C6  3769               	rlcf	(___lomod@divisor+1)& (0+255),f,b
  2955  0034C8  376A               	rlcf	(___lomod@divisor+2)& (0+255),f,b
  2956  0034CA  376B               	rlcf	(___lomod@divisor+3)& (0+255),f,b
  2957  0034CC  376C               	rlcf	(___lomod@divisor+4)& (0+255),f,b
  2958  0034CE  376D               	rlcf	(___lomod@divisor+5)& (0+255),f,b
  2959  0034D0  376E               	rlcf	(___lomod@divisor+6)& (0+255),f,b
  2960  0034D2  376F               	rlcf	(___lomod@divisor+7)& (0+255),f,b
  2961  0034D4  2A20               	incf	___lomod@counter^0,f,c
  2962  0034D6                     l6021:
  2963                           
  2964                           ; BSR set to: 0
  2965  0034D6  AF6F               	btfss	(___lomod@divisor+7)& (0+255),7,b
  2966  0034D8  EF70  F01A         	goto	u4971
  2967  0034DC  EF72  F01A         	goto	u4970
  2968  0034E0                     u4971:
  2969  0034E0  EF61  F01A         	goto	l6019
  2970  0034E4                     u4970:
  2971  0034E4                     l6023:
  2972                           
  2973                           ; BSR set to: 0
  2974  0034E4  5168               	movf	___lomod@divisor& (0+255),w,b
  2975  0034E6  5D60               	subwf	___lomod@dividend& (0+255),w,b
  2976  0034E8  5169               	movf	(___lomod@divisor+1)& (0+255),w,b
  2977  0034EA  5961               	subwfb	(___lomod@dividend+1)& (0+255),w,b
  2978  0034EC  516A               	movf	(___lomod@divisor+2)& (0+255),w,b
  2979  0034EE  5962               	subwfb	(___lomod@dividend+2)& (0+255),w,b
  2980  0034F0  516B               	movf	(___lomod@divisor+3)& (0+255),w,b
  2981  0034F2  5963               	subwfb	(___lomod@dividend+3)& (0+255),w,b
  2982  0034F4  516C               	movf	(___lomod@divisor+4)& (0+255),w,b
  2983  0034F6  5964               	subwfb	(___lomod@dividend+4)& (0+255),w,b
  2984  0034F8  516D               	movf	(___lomod@divisor+5)& (0+255),w,b
  2985  0034FA  5965               	subwfb	(___lomod@dividend+5)& (0+255),w,b
  2986  0034FC  516E               	movf	(___lomod@divisor+6)& (0+255),w,b
  2987  0034FE  5966               	subwfb	(___lomod@dividend+6)& (0+255),w,b
  2988  003500  516F               	movf	(___lomod@divisor+7)& (0+255),w,b
  2989  003502  5967               	subwfb	(___lomod@dividend+7)& (0+255),w,b
  2990  003504  A0D8               	btfss	status,0,c
  2991  003506  EF87  F01A         	goto	u4981
  2992  00350A  EF89  F01A         	goto	u4980
  2993  00350E                     u4981:
  2994  00350E  EF99  F01A         	goto	l6027
  2995  003512                     u4980:
  2996  003512                     
  2997                           ; BSR set to: 0
  2998  003512  5168               	movf	___lomod@divisor& (0+255),w,b
  2999  003514  5F60               	subwf	___lomod@dividend& (0+255),f,b
  3000  003516  5169               	movf	(___lomod@divisor+1)& (0+255),w,b
  3001  003518  5B61               	subwfb	(___lomod@dividend+1)& (0+255),f,b
  3002  00351A  516A               	movf	(___lomod@divisor+2)& (0+255),w,b
  3003  00351C  5B62               	subwfb	(___lomod@dividend+2)& (0+255),f,b
  3004  00351E  516B               	movf	(___lomod@divisor+3)& (0+255),w,b
  3005  003520  5B63               	subwfb	(___lomod@dividend+3)& (0+255),f,b
  3006  003522  516C               	movf	(___lomod@divisor+4)& (0+255),w,b
  3007  003524  5B64               	subwfb	(___lomod@dividend+4)& (0+255),f,b
  3008  003526  516D               	movf	(___lomod@divisor+5)& (0+255),w,b
  3009  003528  5B65               	subwfb	(___lomod@dividend+5)& (0+255),f,b
  3010  00352A  516E               	movf	(___lomod@divisor+6)& (0+255),w,b
  3011  00352C  5B66               	subwfb	(___lomod@dividend+6)& (0+255),f,b
  3012  00352E  516F               	movf	(___lomod@divisor+7)& (0+255),w,b
  3013  003530  5B67               	subwfb	(___lomod@dividend+7)& (0+255),f,b
  3014  003532                     l6027:
  3015                           
  3016                           ; BSR set to: 0
  3017  003532  90D8               	bcf	status,0,c
  3018  003534  336F               	rrcf	(___lomod@divisor+7)& (0+255),f,b
  3019  003536  336E               	rrcf	(___lomod@divisor+6)& (0+255),f,b
  3020  003538  336D               	rrcf	(___lomod@divisor+5)& (0+255),f,b
  3021  00353A  336C               	rrcf	(___lomod@divisor+4)& (0+255),f,b
  3022  00353C  336B               	rrcf	(___lomod@divisor+3)& (0+255),f,b
  3023  00353E  336A               	rrcf	(___lomod@divisor+2)& (0+255),f,b
  3024  003540  3369               	rrcf	(___lomod@divisor+1)& (0+255),f,b
  3025  003542  3368               	rrcf	___lomod@divisor& (0+255),f,b
  3026  003544                     
  3027                           ; BSR set to: 0
  3028  003544  2E20               	decfsz	___lomod@counter^0,f,c
  3029  003546  EF72  F01A         	goto	l6023
  3030  00354A                     l1802:
  3031                           
  3032                           ; BSR set to: 0
  3033  00354A  C060  F060         	movff	___lomod@dividend,?___lomod
  3034  00354E  C061  F061         	movff	___lomod@dividend+1,?___lomod+1
  3035  003552  C062  F062         	movff	___lomod@dividend+2,?___lomod+2
  3036  003556  C063  F063         	movff	___lomod@dividend+3,?___lomod+3
  3037  00355A  C064  F064         	movff	___lomod@dividend+4,?___lomod+4
  3038  00355E  C065  F065         	movff	___lomod@dividend+5,?___lomod+5
  3039  003562  C066  F066         	movff	___lomod@dividend+6,?___lomod+6
  3040  003566  C067  F067         	movff	___lomod@dividend+7,?___lomod+7
  3041  00356A                     
  3042                           ; BSR set to: 0
  3043  00356A  0012               	return		;funcret
  3044  00356C                     __end_of___lomod:
  3045                           	callstack 0
  3046                           
  3047 ;; *************** function ___lodiv *****************
  3048 ;; Defined at:
  3049 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lodiv.c"
  3050 ;; Parameters:    Size  Location     Type
  3051 ;;  dividend        8    0[BANK0 ] unsigned long long 
  3052 ;;  divisor         8    8[BANK0 ] unsigned long long 
  3053 ;; Auto vars:     Size  Location     Type
  3054 ;;  quotient        8   16[BANK0 ] unsigned long long 
  3055 ;;  counter         1   24[BANK0 ] unsigned char 
  3056 ;; Return value:  Size  Location     Type
  3057 ;;                  8    0[BANK0 ] unsigned long long 
  3058 ;; Registers used:
  3059 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3060 ;; Tracked objects:
  3061 ;;		On entry : 0/0
  3062 ;;		On exit  : 0/0
  3063 ;;		Unchanged: 0/0
  3064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3065 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3066 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3068 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3069 ;;Total ram usage:       25 bytes
  3070 ;; Hardware stack levels used: 1
  3071 ;; Hardware stack levels required when called: 8
  3072 ;; This function calls:
  3073 ;;		Nothing
  3074 ;; This function is called by:
  3075 ;;		_utoa
  3076 ;; This function uses a non-reentrant model
  3077 ;;
  3078                           
  3079                           	psect	text9
  3080  0032C2                     __ptext9:
  3081                           	callstack 0
  3082  0032C2                     ___lodiv:
  3083                           	callstack 17
  3084  0032C2  EE20  F070         	lfsr	2,___lodiv@quotient
  3085  0032C6  0E07               	movlw	7
  3086  0032C8                     u4921:
  3087  0032C8  6ADE               	clrf	postinc2,c
  3088  0032CA  06E8               	decf	wreg,f,c
  3089  0032CC  E2FD               	bc	u4921
  3090  0032CE  0100               	movlb	0	; () banked
  3091  0032D0  5168               	movf	___lodiv@divisor& (0+255),w,b
  3092  0032D2  1169               	iorwf	(___lodiv@divisor+1)& (0+255),w,b
  3093  0032D4  116A               	iorwf	(___lodiv@divisor+2)& (0+255),w,b
  3094  0032D6  116B               	iorwf	(___lodiv@divisor+3)& (0+255),w,b
  3095  0032D8  116C               	iorwf	(___lodiv@divisor+4)& (0+255),w,b
  3096  0032DA  116D               	iorwf	(___lodiv@divisor+5)& (0+255),w,b
  3097  0032DC  116E               	iorwf	(___lodiv@divisor+6)& (0+255),w,b
  3098  0032DE  116F               	iorwf	(___lodiv@divisor+7)& (0+255),w,b
  3099  0032E0  B4D8               	btfsc	status,2,c
  3100  0032E2  EF75  F019         	goto	u4931
  3101  0032E6  EF77  F019         	goto	u4930
  3102  0032EA                     u4931:
  3103  0032EA  EFC9  F019         	goto	l1792
  3104  0032EE                     u4930:
  3105  0032EE                     
  3106                           ; BSR set to: 0
  3107  0032EE  0E01               	movlw	1
  3108  0032F0  6F78               	movwf	___lodiv@counter& (0+255),b
  3109  0032F2  EF85  F019         	goto	l6001
  3110  0032F6                     l5999:
  3111                           
  3112                           ; BSR set to: 0
  3113  0032F6  90D8               	bcf	status,0,c
  3114  0032F8  3768               	rlcf	___lodiv@divisor& (0+255),f,b
  3115  0032FA  3769               	rlcf	(___lodiv@divisor+1)& (0+255),f,b
  3116  0032FC  376A               	rlcf	(___lodiv@divisor+2)& (0+255),f,b
  3117  0032FE  376B               	rlcf	(___lodiv@divisor+3)& (0+255),f,b
  3118  003300  376C               	rlcf	(___lodiv@divisor+4)& (0+255),f,b
  3119  003302  376D               	rlcf	(___lodiv@divisor+5)& (0+255),f,b
  3120  003304  376E               	rlcf	(___lodiv@divisor+6)& (0+255),f,b
  3121  003306  376F               	rlcf	(___lodiv@divisor+7)& (0+255),f,b
  3122  003308  2B78               	incf	___lodiv@counter& (0+255),f,b
  3123  00330A                     l6001:
  3124                           
  3125                           ; BSR set to: 0
  3126  00330A  AF6F               	btfss	(___lodiv@divisor+7)& (0+255),7,b
  3127  00330C  EF8A  F019         	goto	u4941
  3128  003310  EF8C  F019         	goto	u4940
  3129  003314                     u4941:
  3130  003314  EF7B  F019         	goto	l5999
  3131  003318                     u4940:
  3132  003318                     l6003:
  3133                           
  3134                           ; BSR set to: 0
  3135  003318  90D8               	bcf	status,0,c
  3136  00331A  3770               	rlcf	___lodiv@quotient& (0+255),f,b
  3137  00331C  3771               	rlcf	(___lodiv@quotient+1)& (0+255),f,b
  3138  00331E  3772               	rlcf	(___lodiv@quotient+2)& (0+255),f,b
  3139  003320  3773               	rlcf	(___lodiv@quotient+3)& (0+255),f,b
  3140  003322  3774               	rlcf	(___lodiv@quotient+4)& (0+255),f,b
  3141  003324  3775               	rlcf	(___lodiv@quotient+5)& (0+255),f,b
  3142  003326  3776               	rlcf	(___lodiv@quotient+6)& (0+255),f,b
  3143  003328  3777               	rlcf	(___lodiv@quotient+7)& (0+255),f,b
  3144  00332A                     
  3145                           ; BSR set to: 0
  3146  00332A  5168               	movf	___lodiv@divisor& (0+255),w,b
  3147  00332C  5D60               	subwf	___lodiv@dividend& (0+255),w,b
  3148  00332E  5169               	movf	(___lodiv@divisor+1)& (0+255),w,b
  3149  003330  5961               	subwfb	(___lodiv@dividend+1)& (0+255),w,b
  3150  003332  516A               	movf	(___lodiv@divisor+2)& (0+255),w,b
  3151  003334  5962               	subwfb	(___lodiv@dividend+2)& (0+255),w,b
  3152  003336  516B               	movf	(___lodiv@divisor+3)& (0+255),w,b
  3153  003338  5963               	subwfb	(___lodiv@dividend+3)& (0+255),w,b
  3154  00333A  516C               	movf	(___lodiv@divisor+4)& (0+255),w,b
  3155  00333C  5964               	subwfb	(___lodiv@dividend+4)& (0+255),w,b
  3156  00333E  516D               	movf	(___lodiv@divisor+5)& (0+255),w,b
  3157  003340  5965               	subwfb	(___lodiv@dividend+5)& (0+255),w,b
  3158  003342  516E               	movf	(___lodiv@divisor+6)& (0+255),w,b
  3159  003344  5966               	subwfb	(___lodiv@dividend+6)& (0+255),w,b
  3160  003346  516F               	movf	(___lodiv@divisor+7)& (0+255),w,b
  3161  003348  5967               	subwfb	(___lodiv@dividend+7)& (0+255),w,b
  3162  00334A  A0D8               	btfss	status,0,c
  3163  00334C  EFAA  F019         	goto	u4951
  3164  003350  EFAC  F019         	goto	u4950
  3165  003354                     u4951:
  3166  003354  EFBD  F019         	goto	l6011
  3167  003358                     u4950:
  3168  003358                     
  3169                           ; BSR set to: 0
  3170  003358  5168               	movf	___lodiv@divisor& (0+255),w,b
  3171  00335A  5F60               	subwf	___lodiv@dividend& (0+255),f,b
  3172  00335C  5169               	movf	(___lodiv@divisor+1)& (0+255),w,b
  3173  00335E  5B61               	subwfb	(___lodiv@dividend+1)& (0+255),f,b
  3174  003360  516A               	movf	(___lodiv@divisor+2)& (0+255),w,b
  3175  003362  5B62               	subwfb	(___lodiv@dividend+2)& (0+255),f,b
  3176  003364  516B               	movf	(___lodiv@divisor+3)& (0+255),w,b
  3177  003366  5B63               	subwfb	(___lodiv@dividend+3)& (0+255),f,b
  3178  003368  516C               	movf	(___lodiv@divisor+4)& (0+255),w,b
  3179  00336A  5B64               	subwfb	(___lodiv@dividend+4)& (0+255),f,b
  3180  00336C  516D               	movf	(___lodiv@divisor+5)& (0+255),w,b
  3181  00336E  5B65               	subwfb	(___lodiv@dividend+5)& (0+255),f,b
  3182  003370  516E               	movf	(___lodiv@divisor+6)& (0+255),w,b
  3183  003372  5B66               	subwfb	(___lodiv@dividend+6)& (0+255),f,b
  3184  003374  516F               	movf	(___lodiv@divisor+7)& (0+255),w,b
  3185  003376  5B67               	subwfb	(___lodiv@dividend+7)& (0+255),f,b
  3186  003378                     
  3187                           ; BSR set to: 0
  3188  003378  8170               	bsf	___lodiv@quotient& (0+255),0,b
  3189  00337A                     l6011:
  3190                           
  3191                           ; BSR set to: 0
  3192  00337A  90D8               	bcf	status,0,c
  3193  00337C  336F               	rrcf	(___lodiv@divisor+7)& (0+255),f,b
  3194  00337E  336E               	rrcf	(___lodiv@divisor+6)& (0+255),f,b
  3195  003380  336D               	rrcf	(___lodiv@divisor+5)& (0+255),f,b
  3196  003382  336C               	rrcf	(___lodiv@divisor+4)& (0+255),f,b
  3197  003384  336B               	rrcf	(___lodiv@divisor+3)& (0+255),f,b
  3198  003386  336A               	rrcf	(___lodiv@divisor+2)& (0+255),f,b
  3199  003388  3369               	rrcf	(___lodiv@divisor+1)& (0+255),f,b
  3200  00338A  3368               	rrcf	___lodiv@divisor& (0+255),f,b
  3201  00338C                     
  3202                           ; BSR set to: 0
  3203  00338C  2F78               	decfsz	___lodiv@counter& (0+255),f,b
  3204  00338E  EF8C  F019         	goto	l6003
  3205  003392                     l1792:
  3206                           
  3207                           ; BSR set to: 0
  3208  003392  C070  F060         	movff	___lodiv@quotient,?___lodiv
  3209  003396  C071  F061         	movff	___lodiv@quotient+1,?___lodiv+1
  3210  00339A  C072  F062         	movff	___lodiv@quotient+2,?___lodiv+2
  3211  00339E  C073  F063         	movff	___lodiv@quotient+3,?___lodiv+3
  3212  0033A2  C074  F064         	movff	___lodiv@quotient+4,?___lodiv+4
  3213  0033A6  C075  F065         	movff	___lodiv@quotient+5,?___lodiv+5
  3214  0033AA  C076  F066         	movff	___lodiv@quotient+6,?___lodiv+6
  3215  0033AE  C077  F067         	movff	___lodiv@quotient+7,?___lodiv+7
  3216  0033B2                     
  3217                           ; BSR set to: 0
  3218  0033B2  0012               	return		;funcret
  3219  0033B4                     __end_of___lodiv:
  3220                           	callstack 0
  3221                           
  3222 ;; *************** function _dtoa *****************
  3223 ;; Defined at:
  3224 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  3225 ;; Parameters:    Size  Location     Type
  3226 ;;  fp              2   26[BANK0 ] PTR struct _IO_FILE
  3227 ;;		 -> NULL(0), 
  3228 ;;  d               8   28[BANK0 ] long long 
  3229 ;; Auto vars:     Size  Location     Type
  3230 ;;  n               8   52[BANK0 ] long long 
  3231 ;;  i               2   60[BANK0 ] int 
  3232 ;;  s               2   50[BANK0 ] int 
  3233 ;;  w               2   48[BANK0 ] int 
  3234 ;;  p               2   46[BANK0 ] int 
  3235 ;; Return value:  Size  Location     Type
  3236 ;;                  2   26[BANK0 ] int 
  3237 ;; Registers used:
  3238 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3239 ;; Tracked objects:
  3240 ;;		On entry : 0/0
  3241 ;;		On exit  : 0/0
  3242 ;;		Unchanged: 0/0
  3243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3244 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3245 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3246 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3247 ;;      Totals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3248 ;;Total ram usage:       36 bytes
  3249 ;; Hardware stack levels used: 1
  3250 ;; Hardware stack levels required when called: 13
  3251 ;; This function calls:
  3252 ;;		___aodiv
  3253 ;;		___aomod
  3254 ;;		_abs
  3255 ;;		_pad
  3256 ;; This function is called by:
  3257 ;;		_vfpfcnvrt
  3258 ;; This function uses a non-reentrant model
  3259 ;;
  3260                           
  3261                           	psect	text10
  3262  00195A                     __ptext10:
  3263                           	callstack 0
  3264  00195A                     _dtoa:
  3265                           	callstack 13
  3266  00195A                     
  3267                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  3268  00195A  C07C  F094         	movff	dtoa@d,dtoa@n
  3269  00195E  C07D  F095         	movff	dtoa@d+1,dtoa@n+1
  3270  001962  C07E  F096         	movff	dtoa@d+2,dtoa@n+2
  3271  001966  C07F  F097         	movff	dtoa@d+3,dtoa@n+3
  3272  00196A  C080  F098         	movff	dtoa@d+4,dtoa@n+4
  3273  00196E  C081  F099         	movff	dtoa@d+5,dtoa@n+5
  3274  001972  C082  F09A         	movff	dtoa@d+6,dtoa@n+6
  3275  001976  C083  F09B         	movff	dtoa@d+7,dtoa@n+7
  3276  00197A                     
  3277                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  3278  00197A  0100               	movlb	0	; () banked
  3279  00197C  BF9B               	btfsc	(dtoa@n+7)& (0+255),7,b
  3280  00197E  EFC3  F00C         	goto	u5041
  3281  001982  EFC6  F00C         	goto	u5040
  3282  001986                     u5041:
  3283  001986  0E01               	movlw	1
  3284  001988  EFC7  F00C         	goto	u5050
  3285  00198C                     u5040:
  3286  00198C  0E00               	movlw	0
  3287  00198E                     u5050:
  3288  00198E  6F92               	movwf	dtoa@s& (0+255),b
  3289  001990  6B93               	clrf	(dtoa@s+1)& (0+255),b
  3290                           
  3291                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  3292  001992  5192               	movf	dtoa@s& (0+255),w,b
  3293  001994  1193               	iorwf	(dtoa@s+1)& (0+255),w,b
  3294  001996  B4D8               	btfsc	status,2,c
  3295  001998  EFD0  F00C         	goto	u5061
  3296  00199C  EFD2  F00C         	goto	u5060
  3297  0019A0                     u5061:
  3298  0019A0  EFE2  F00C         	goto	l6063
  3299  0019A4                     u5060:
  3300  0019A4                     
  3301                           ; BSR set to: 0
  3302                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  3303  0019A4  1F9B               	comf	(dtoa@n+7)& (0+255),f,b
  3304  0019A6  1F9A               	comf	(dtoa@n+6)& (0+255),f,b
  3305  0019A8  1F99               	comf	(dtoa@n+5)& (0+255),f,b
  3306  0019AA  1F98               	comf	(dtoa@n+4)& (0+255),f,b
  3307  0019AC  1F97               	comf	(dtoa@n+3)& (0+255),f,b
  3308  0019AE  1F96               	comf	(dtoa@n+2)& (0+255),f,b
  3309  0019B0  1F95               	comf	(dtoa@n+1)& (0+255),f,b
  3310  0019B2  6D94               	negf	dtoa@n& (0+255),b
  3311  0019B4  0E00               	movlw	0
  3312  0019B6  2395               	addwfc	(dtoa@n+1)& (0+255),f,b
  3313  0019B8  2396               	addwfc	(dtoa@n+2)& (0+255),f,b
  3314  0019BA  2397               	addwfc	(dtoa@n+3)& (0+255),f,b
  3315  0019BC  2398               	addwfc	(dtoa@n+4)& (0+255),f,b
  3316  0019BE  2399               	addwfc	(dtoa@n+5)& (0+255),f,b
  3317  0019C0  239A               	addwfc	(dtoa@n+6)& (0+255),f,b
  3318  0019C2  239B               	addwfc	(dtoa@n+7)& (0+255),f,b
  3319  0019C4                     l6063:
  3320                           
  3321                           ; BSR set to: 0
  3322                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  3323  0019C4  BFD7               	btfsc	(_prec+1)& (0+255),7,b
  3324  0019C6  EFE7  F00C         	goto	u5071
  3325  0019CA  EFE9  F00C         	goto	u5070
  3326  0019CE                     u5071:
  3327  0019CE  EFEA  F00C         	goto	l6067
  3328  0019D2                     u5070:
  3329  0019D2                     
  3330                           ; BSR set to: 0
  3331                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  3332  0019D2  9223               	bcf	_flags^0,1,c
  3333  0019D4                     l6067:
  3334                           
  3335                           ; BSR set to: 0
  3336                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  3337  0019D4  BFD7               	btfsc	(_prec+1)& (0+255),7,b
  3338  0019D6  EFF7  F00C         	goto	u5080
  3339  0019DA  51D7               	movf	(_prec+1)& (0+255),w,b
  3340  0019DC  E106               	bnz	u5081
  3341  0019DE  05D6               	decf	_prec& (0+255),w,b
  3342  0019E0  B0D8               	btfsc	status,0,c
  3343  0019E2  EFF5  F00C         	goto	u5081
  3344  0019E6  EFF7  F00C         	goto	u5080
  3345  0019EA                     u5081:
  3346  0019EA  EFFD  F00C         	goto	l2070
  3347  0019EE                     u5080:
  3348  0019EE                     
  3349                           ; BSR set to: 0
  3350  0019EE  0E00               	movlw	0
  3351  0019F0  6F8F               	movwf	(dtoa@p+1)& (0+255),b
  3352  0019F2  0E01               	movlw	1
  3353  0019F4  6F8E               	movwf	dtoa@p& (0+255),b
  3354  0019F6  EF01  F00D         	goto	l2072
  3355  0019FA                     l2070:
  3356                           
  3357                           ; BSR set to: 0
  3358  0019FA  C0D6  F08E         	movff	_prec,dtoa@p
  3359  0019FE  C0D7  F08F         	movff	_prec+1,dtoa@p+1
  3360  001A02                     l2072:
  3361                           
  3362                           ; BSR set to: 0
  3363                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  3364  001A02  C0D4  F090         	movff	_width,dtoa@w
  3365  001A06  C0D5  F091         	movff	_width+1,dtoa@w+1
  3366  001A0A                     
  3367                           ; BSR set to: 0
  3368                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  3369  001A0A  5192               	movf	dtoa@s& (0+255),w,b
  3370  001A0C  1193               	iorwf	(dtoa@s+1)& (0+255),w,b
  3371  001A0E  A4D8               	btfss	status,2,c
  3372  001A10  EF0C  F00D         	goto	u5091
  3373  001A14  EF0E  F00D         	goto	u5090
  3374  001A18                     u5091:
  3375  001A18  EF15  F00D         	goto	l6075
  3376  001A1C                     u5090:
  3377  001A1C                     
  3378                           ; BSR set to: 0
  3379  001A1C  A423               	btfss	_flags^0,2,c
  3380  001A1E  EF13  F00D         	goto	u5101
  3381  001A22  EF15  F00D         	goto	u5100
  3382  001A26                     u5101:
  3383  001A26  EF18  F00D         	goto	l6077
  3384  001A2A                     u5100:
  3385  001A2A                     l6075:
  3386                           
  3387                           ; BSR set to: 0
  3388                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 306:         --w;
  3389  001A2A  0790               	decf	dtoa@w& (0+255),f,b
  3390  001A2C  A0D8               	btfss	status,0,c
  3391  001A2E  0791               	decf	(dtoa@w+1)& (0+255),f,b
  3392  001A30                     l6077:
  3393                           
  3394                           ; BSR set to: 0
  3395                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  3396  001A30  0E00               	movlw	0
  3397  001A32  6F9D               	movwf	(dtoa@i+1)& (0+255),b
  3398  001A34  0E1F               	movlw	31
  3399  001A36  6F9C               	movwf	dtoa@i& (0+255),b
  3400  001A38                     
  3401                           ; BSR set to: 0
  3402                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  3403  001A38  0E00               	movlw	0
  3404  001A3A  0101               	movlb	1	; () banked
  3405  001A3C  6F1F               	movwf	(_dbuf+31)& (0+255),b
  3406                           
  3407                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3408  001A3E  EF9E  F00D         	goto	l6091
  3409  001A42                     l6081:
  3410                           
  3411                           ; BSR set to: 0
  3412                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 313:         --i;
  3413  001A42  079C               	decf	dtoa@i& (0+255),f,b
  3414  001A44  A0D8               	btfss	status,0,c
  3415  001A46  079D               	decf	(dtoa@i+1)& (0+255),f,b
  3416  001A48                     
  3417                           ; BSR set to: 0
  3418                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  3419  001A48  0E00               	movlw	low _dbuf
  3420  001A4A  259C               	addwf	dtoa@i& (0+255),w,b
  3421  001A4C  6ED9               	movwf	fsr2l,c
  3422  001A4E  0E01               	movlw	high _dbuf
  3423  001A50  219D               	addwfc	(dtoa@i+1)& (0+255),w,b
  3424  001A52  6EDA               	movwf	fsr2h,c
  3425  001A54  C094  F060         	movff	dtoa@n,___aomod@dividend
  3426  001A58  C095  F061         	movff	dtoa@n+1,___aomod@dividend+1
  3427  001A5C  C096  F062         	movff	dtoa@n+2,___aomod@dividend+2
  3428  001A60  C097  F063         	movff	dtoa@n+3,___aomod@dividend+3
  3429  001A64  C098  F064         	movff	dtoa@n+4,___aomod@dividend+4
  3430  001A68  C099  F065         	movff	dtoa@n+5,___aomod@dividend+5
  3431  001A6C  C09A  F066         	movff	dtoa@n+6,___aomod@dividend+6
  3432  001A70  C09B  F067         	movff	dtoa@n+7,___aomod@dividend+7
  3433  001A74  0E0A               	movlw	10
  3434  001A76  6F68               	movwf	___aomod@divisor& (0+255),b
  3435  001A78  0E00               	movlw	0
  3436  001A7A  6F69               	movwf	(___aomod@divisor+1)& (0+255),b
  3437  001A7C  0E00               	movlw	0
  3438  001A7E  6F6A               	movwf	(___aomod@divisor+2)& (0+255),b
  3439  001A80  0E00               	movlw	0
  3440  001A82  6F6B               	movwf	(___aomod@divisor+3)& (0+255),b
  3441  001A84  0E00               	movlw	0
  3442  001A86  6F6C               	movwf	(___aomod@divisor+4)& (0+255),b
  3443  001A88  0E00               	movlw	0
  3444  001A8A  6F6D               	movwf	(___aomod@divisor+5)& (0+255),b
  3445  001A8C  0E00               	movlw	0
  3446  001A8E  6F6E               	movwf	(___aomod@divisor+6)& (0+255),b
  3447  001A90  0E00               	movlw	0
  3448  001A92  6F6F               	movwf	(___aomod@divisor+7)& (0+255),b
  3449  001A94  ECE7  F015         	call	___aomod	;wreg free
  3450  001A98  C060  F084         	movff	?___aomod,??_dtoa
  3451  001A9C  C061  F085         	movff	?___aomod+1,??_dtoa+1
  3452  001AA0  C062  F086         	movff	?___aomod+2,??_dtoa+2
  3453  001AA4  C063  F087         	movff	?___aomod+3,??_dtoa+3
  3454  001AA8  C064  F088         	movff	?___aomod+4,??_dtoa+4
  3455  001AAC  C065  F089         	movff	?___aomod+5,??_dtoa+5
  3456  001AB0  C066  F08A         	movff	?___aomod+6,??_dtoa+6
  3457  001AB4  C067  F08B         	movff	?___aomod+7,??_dtoa+7
  3458  001AB8  C084  F070         	movff	??_dtoa,abs@a
  3459  001ABC  C086  F071         	movff	??_dtoa+2,abs@a+1
  3460  001AC0  ECEE  F01F         	call	_abs	;wreg free
  3461  001AC4  0100               	movlb	0	; () banked
  3462  001AC6  5170               	movf	?_abs& (0+255),w,b
  3463  001AC8  0F30               	addlw	48
  3464  001ACA  6EDF               	movwf	indf2,c
  3465  001ACC                     
  3466                           ; BSR set to: 0
  3467                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 315:         --p;
  3468  001ACC  078E               	decf	dtoa@p& (0+255),f,b
  3469  001ACE  A0D8               	btfss	status,0,c
  3470  001AD0  078F               	decf	(dtoa@p+1)& (0+255),f,b
  3471  001AD2                     
  3472                           ; BSR set to: 0
  3473                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 316:         --w;
  3474  001AD2  0790               	decf	dtoa@w& (0+255),f,b
  3475  001AD4  A0D8               	btfss	status,0,c
  3476  001AD6  0791               	decf	(dtoa@w+1)& (0+255),f,b
  3477  001AD8                     
  3478                           ; BSR set to: 0
  3479                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  3480  001AD8  C094  F060         	movff	dtoa@n,___aodiv@dividend
  3481  001ADC  C095  F061         	movff	dtoa@n+1,___aodiv@dividend+1
  3482  001AE0  C096  F062         	movff	dtoa@n+2,___aodiv@dividend+2
  3483  001AE4  C097  F063         	movff	dtoa@n+3,___aodiv@dividend+3
  3484  001AE8  C098  F064         	movff	dtoa@n+4,___aodiv@dividend+4
  3485  001AEC  C099  F065         	movff	dtoa@n+5,___aodiv@dividend+5
  3486  001AF0  C09A  F066         	movff	dtoa@n+6,___aodiv@dividend+6
  3487  001AF4  C09B  F067         	movff	dtoa@n+7,___aodiv@dividend+7
  3488  001AF8  0E0A               	movlw	10
  3489  001AFA  6F68               	movwf	___aodiv@divisor& (0+255),b
  3490  001AFC  0E00               	movlw	0
  3491  001AFE  6F69               	movwf	(___aodiv@divisor+1)& (0+255),b
  3492  001B00  0E00               	movlw	0
  3493  001B02  6F6A               	movwf	(___aodiv@divisor+2)& (0+255),b
  3494  001B04  0E00               	movlw	0
  3495  001B06  6F6B               	movwf	(___aodiv@divisor+3)& (0+255),b
  3496  001B08  0E00               	movlw	0
  3497  001B0A  6F6C               	movwf	(___aodiv@divisor+4)& (0+255),b
  3498  001B0C  0E00               	movlw	0
  3499  001B0E  6F6D               	movwf	(___aodiv@divisor+5)& (0+255),b
  3500  001B10  0E00               	movlw	0
  3501  001B12  6F6E               	movwf	(___aodiv@divisor+6)& (0+255),b
  3502  001B14  0E00               	movlw	0
  3503  001B16  6F6F               	movwf	(___aodiv@divisor+7)& (0+255),b
  3504  001B18  EC68  F014         	call	___aodiv	;wreg free
  3505  001B1C  C060  F094         	movff	?___aodiv,dtoa@n
  3506  001B20  C061  F095         	movff	?___aodiv+1,dtoa@n+1
  3507  001B24  C062  F096         	movff	?___aodiv+2,dtoa@n+2
  3508  001B28  C063  F097         	movff	?___aodiv+3,dtoa@n+3
  3509  001B2C  C064  F098         	movff	?___aodiv+4,dtoa@n+4
  3510  001B30  C065  F099         	movff	?___aodiv+5,dtoa@n+5
  3511  001B34  C066  F09A         	movff	?___aodiv+6,dtoa@n+6
  3512  001B38  C067  F09B         	movff	?___aodiv+7,dtoa@n+7
  3513  001B3C                     l6091:
  3514                           
  3515                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3516  001B3C  0100               	movlb	0	; () banked
  3517  001B3E  BF9D               	btfsc	(dtoa@i+1)& (0+255),7,b
  3518  001B40  EFAA  F00D         	goto	u5111
  3519  001B44  519D               	movf	(dtoa@i+1)& (0+255),w,b
  3520  001B46  E108               	bnz	u5110
  3521  001B48  059C               	decf	dtoa@i& (0+255),w,b
  3522  001B4A  A0D8               	btfss	status,0,c
  3523  001B4C  EFAA  F00D         	goto	u5111
  3524  001B50  EFAC  F00D         	goto	u5110
  3525  001B54                     u5111:
  3526  001B54  EFDC  F00D         	goto	l6101
  3527  001B58                     u5110:
  3528  001B58                     
  3529                           ; BSR set to: 0
  3530  001B58  5194               	movf	dtoa@n& (0+255),w,b
  3531  001B5A  1195               	iorwf	(dtoa@n+1)& (0+255),w,b
  3532  001B5C  1196               	iorwf	(dtoa@n+2)& (0+255),w,b
  3533  001B5E  1197               	iorwf	(dtoa@n+3)& (0+255),w,b
  3534  001B60  1198               	iorwf	(dtoa@n+4)& (0+255),w,b
  3535  001B62  1199               	iorwf	(dtoa@n+5)& (0+255),w,b
  3536  001B64  119A               	iorwf	(dtoa@n+6)& (0+255),w,b
  3537  001B66  119B               	iorwf	(dtoa@n+7)& (0+255),w,b
  3538  001B68  A4D8               	btfss	status,2,c
  3539  001B6A  EFB9  F00D         	goto	u5121
  3540  001B6E  EFBB  F00D         	goto	u5120
  3541  001B72                     u5121:
  3542  001B72  EF21  F00D         	goto	l6081
  3543  001B76                     u5120:
  3544  001B76                     
  3545                           ; BSR set to: 0
  3546  001B76  BF8F               	btfsc	(dtoa@p+1)& (0+255),7,b
  3547  001B78  EFC8  F00D         	goto	u5130
  3548  001B7C  518F               	movf	(dtoa@p+1)& (0+255),w,b
  3549  001B7E  E106               	bnz	u5131
  3550  001B80  058E               	decf	dtoa@p& (0+255),w,b
  3551  001B82  B0D8               	btfsc	status,0,c
  3552  001B84  EFC6  F00D         	goto	u5131
  3553  001B88  EFC8  F00D         	goto	u5130
  3554  001B8C                     u5131:
  3555  001B8C  EF21  F00D         	goto	l6081
  3556  001B90                     u5130:
  3557  001B90                     
  3558                           ; BSR set to: 0
  3559  001B90  BF91               	btfsc	(dtoa@w+1)& (0+255),7,b
  3560  001B92  EFD3  F00D         	goto	u5141
  3561  001B96  5191               	movf	(dtoa@w+1)& (0+255),w,b
  3562  001B98  E108               	bnz	u5140
  3563  001B9A  0590               	decf	dtoa@w& (0+255),w,b
  3564  001B9C  A0D8               	btfss	status,0,c
  3565  001B9E  EFD3  F00D         	goto	u5141
  3566  001BA2  EFD5  F00D         	goto	u5140
  3567  001BA6                     u5141:
  3568  001BA6  EFDC  F00D         	goto	l6101
  3569  001BAA                     u5140:
  3570  001BAA                     
  3571                           ; BSR set to: 0
  3572  001BAA  B223               	btfsc	_flags^0,1,c
  3573  001BAC  EFDA  F00D         	goto	u5151
  3574  001BB0  EFDC  F00D         	goto	u5150
  3575  001BB4                     u5151:
  3576  001BB4  EF21  F00D         	goto	l6081
  3577  001BB8                     u5150:
  3578  001BB8                     l6101:
  3579                           
  3580                           ; BSR set to: 0
  3581                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  3582  001BB8  5192               	movf	dtoa@s& (0+255),w,b
  3583  001BBA  1193               	iorwf	(dtoa@s+1)& (0+255),w,b
  3584  001BBC  A4D8               	btfss	status,2,c
  3585  001BBE  EFE3  F00D         	goto	u5161
  3586  001BC2  EFE5  F00D         	goto	u5160
  3587  001BC6                     u5161:
  3588  001BC6  EFEC  F00D         	goto	l6105
  3589  001BCA                     u5160:
  3590  001BCA                     
  3591                           ; BSR set to: 0
  3592  001BCA  A423               	btfss	_flags^0,2,c
  3593  001BCC  EFEA  F00D         	goto	u5171
  3594  001BD0  EFEC  F00D         	goto	u5170
  3595  001BD4                     u5171:
  3596  001BD4  EF0B  F00E         	goto	l6115
  3597  001BD8                     u5170:
  3598  001BD8                     l6105:
  3599                           
  3600                           ; BSR set to: 0
  3601                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 322:         --i;
  3602  001BD8  079C               	decf	dtoa@i& (0+255),f,b
  3603  001BDA  A0D8               	btfss	status,0,c
  3604  001BDC  079D               	decf	(dtoa@i+1)& (0+255),f,b
  3605  001BDE                     
  3606                           ; BSR set to: 0
  3607                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  3608  001BDE  5192               	movf	dtoa@s& (0+255),w,b
  3609  001BE0  1193               	iorwf	(dtoa@s+1)& (0+255),w,b
  3610  001BE2  A4D8               	btfss	status,2,c
  3611  001BE4  EFF6  F00D         	goto	u5181
  3612  001BE8  EFF8  F00D         	goto	u5180
  3613  001BEC                     u5181:
  3614  001BEC  EFFE  F00D         	goto	l6111
  3615  001BF0                     u5180:
  3616  001BF0                     
  3617                           ; BSR set to: 0
  3618  001BF0  0E00               	movlw	0
  3619  001BF2  6F8D               	movwf	(_dtoa$3451+1)& (0+255),b
  3620  001BF4  0E2B               	movlw	43
  3621  001BF6  6F8C               	movwf	_dtoa$3451& (0+255),b
  3622  001BF8  EF02  F00E         	goto	l6113
  3623  001BFC                     l6111:
  3624                           
  3625                           ; BSR set to: 0
  3626  001BFC  0E00               	movlw	0
  3627  001BFE  6F8D               	movwf	(_dtoa$3451+1)& (0+255),b
  3628  001C00  0E2D               	movlw	45
  3629  001C02  6F8C               	movwf	_dtoa$3451& (0+255),b
  3630  001C04                     l6113:
  3631                           
  3632                           ; BSR set to: 0
  3633  001C04  0E00               	movlw	low _dbuf
  3634  001C06  259C               	addwf	dtoa@i& (0+255),w,b
  3635  001C08  6ED9               	movwf	fsr2l,c
  3636  001C0A  0E01               	movlw	high _dbuf
  3637  001C0C  219D               	addwfc	(dtoa@i+1)& (0+255),w,b
  3638  001C0E  6EDA               	movwf	fsr2h,c
  3639  001C10  0060  F233  FFDF   	movff	_dtoa$3451,indf2
  3640  001C16                     l6115:
  3641                           
  3642                           ; BSR set to: 0
  3643                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  3644  001C16  C07A  F070         	movff	dtoa@fp,pad@fp
  3645  001C1A  C07B  F071         	movff	dtoa@fp+1,pad@fp+1
  3646  001C1E  0E00               	movlw	low _dbuf
  3647  001C20  259C               	addwf	dtoa@i& (0+255),w,b
  3648  001C22  6F72               	movwf	pad@buf& (0+255),b
  3649  001C24  0E01               	movlw	high _dbuf
  3650  001C26  219D               	addwfc	(dtoa@i+1)& (0+255),w,b
  3651  001C28  6F73               	movwf	(pad@buf+1)& (0+255),b
  3652  001C2A  C090  F074         	movff	dtoa@w,pad@p
  3653  001C2E  C091  F075         	movff	dtoa@w+1,pad@p+1
  3654  001C32  EC1B  F01B         	call	_pad	;wreg free
  3655  001C36  C070  F07A         	movff	?_pad,?_dtoa
  3656  001C3A  C071  F07B         	movff	?_pad+1,?_dtoa+1
  3657  001C3E  0012               	return		;funcret
  3658  001C40                     __end_of_dtoa:
  3659                           	callstack 0
  3660                           
  3661 ;; *************** function _pad *****************
  3662 ;; Defined at:
  3663 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  3664 ;; Parameters:    Size  Location     Type
  3665 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  3666 ;;		 -> NULL(0), 
  3667 ;;  buf             2   18[BANK0 ] PTR unsigned char 
  3668 ;;		 -> dbuf(32), 
  3669 ;;  p               2   20[BANK0 ] int 
  3670 ;; Auto vars:     Size  Location     Type
  3671 ;;  w               2   24[BANK0 ] int 
  3672 ;;  i               2   22[BANK0 ] int 
  3673 ;; Return value:  Size  Location     Type
  3674 ;;                  2   16[BANK0 ] int 
  3675 ;; Registers used:
  3676 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3677 ;; Tracked objects:
  3678 ;;		On entry : 0/0
  3679 ;;		On exit  : 0/0
  3680 ;;		Unchanged: 0/0
  3681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3682 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3683 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3684 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3685 ;;      Totals:         1      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3686 ;;Total ram usage:       11 bytes
  3687 ;; Hardware stack levels used: 1
  3688 ;; Hardware stack levels required when called: 12
  3689 ;; This function calls:
  3690 ;;		_fputc
  3691 ;;		_fputs
  3692 ;;		_strlen
  3693 ;; This function is called by:
  3694 ;;		_dtoa
  3695 ;;		_utoa
  3696 ;; This function uses a non-reentrant model
  3697 ;;
  3698                           
  3699                           	psect	text11
  3700  003636                     __ptext11:
  3701                           	callstack 0
  3702  003636                     _pad:
  3703                           	callstack 13
  3704  003636                     
  3705                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  3706  003636  A023               	btfss	_flags^0,0,c
  3707  003638  EF20  F01B         	goto	u4991
  3708  00363C  EF22  F01B         	goto	u4990
  3709  003640                     u4991:
  3710  003640  EF2C  F01B         	goto	l6035
  3711  003644                     u4990:
  3712  003644                     
  3713                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  3714  003644  C072  F069         	movff	pad@buf,fputs@s
  3715  003648  C073  F06A         	movff	pad@buf+1,fputs@s+1
  3716  00364C  C070  F06B         	movff	pad@fp,fputs@fp
  3717  003650  C071  F06C         	movff	pad@fp+1,fputs@fp+1
  3718  003654  EC83  F01F         	call	_fputs	;wreg free
  3719  003658                     l6035:
  3720                           
  3721                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  3722  003658  0100               	movlb	0	; () banked
  3723  00365A  BF75               	btfsc	(pad@p+1)& (0+255),7,b
  3724  00365C  EF32  F01B         	goto	u5001
  3725  003660  EF34  F01B         	goto	u5000
  3726  003664                     u5001:
  3727  003664  EF3A  F01B         	goto	l6039
  3728  003668                     u5000:
  3729  003668                     
  3730                           ; BSR set to: 0
  3731  003668  C074  F078         	movff	pad@p,pad@w
  3732  00366C  C075  F079         	movff	pad@p+1,pad@w+1
  3733  003670  EF3E  F01B         	goto	l2059
  3734  003674                     l6039:
  3735                           
  3736                           ; BSR set to: 0
  3737  003674  0E00               	movlw	0
  3738  003676  6F79               	movwf	(pad@w+1)& (0+255),b
  3739  003678  0E00               	movlw	0
  3740  00367A  6F78               	movwf	pad@w& (0+255),b
  3741  00367C                     l2059:
  3742                           
  3743                           ; BSR set to: 0
  3744                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  3745  00367C  0E00               	movlw	0
  3746  00367E  6F77               	movwf	(pad@i+1)& (0+255),b
  3747  003680  0E00               	movlw	0
  3748  003682  6F76               	movwf	pad@i& (0+255),b
  3749                           
  3750                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3751  003684  EF51  F01B         	goto	l6045
  3752  003688                     l6041:
  3753                           
  3754                           ; BSR set to: 0
  3755                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  3756  003688  0E00               	movlw	0
  3757  00368A  6F61               	movwf	(fputc@c+1)& (0+255),b
  3758  00368C  0E20               	movlw	32
  3759  00368E  6F60               	movwf	fputc@c& (0+255),b
  3760  003690  C070  F062         	movff	pad@fp,fputc@fp
  3761  003694  C071  F063         	movff	pad@fp+1,fputc@fp+1
  3762  003698  ECE1  F01C         	call	_fputc	;wreg free
  3763  00369C                     
  3764                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 86:         ++i;
  3765  00369C  0100               	movlb	0	; () banked
  3766  00369E  4B76               	infsnz	pad@i& (0+255),f,b
  3767  0036A0  2B77               	incf	(pad@i+1)& (0+255),f,b
  3768  0036A2                     l6045:
  3769                           
  3770                           ; BSR set to: 0
  3771                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3772  0036A2  5178               	movf	pad@w& (0+255),w,b
  3773  0036A4  5D76               	subwf	pad@i& (0+255),w,b
  3774  0036A6  5177               	movf	(pad@i+1)& (0+255),w,b
  3775  0036A8  0A80               	xorlw	128
  3776  0036AA  6E22               	movwf	??_pad^0,c
  3777  0036AC  5179               	movf	(pad@w+1)& (0+255),w,b
  3778  0036AE  0A80               	xorlw	128
  3779  0036B0  5822               	subwfb	??_pad^0,w,c
  3780  0036B2  A0D8               	btfss	status,0,c
  3781  0036B4  EF5E  F01B         	goto	u5011
  3782  0036B8  EF60  F01B         	goto	u5010
  3783  0036BC                     u5011:
  3784  0036BC  EF44  F01B         	goto	l6041
  3785  0036C0                     u5010:
  3786  0036C0                     
  3787                           ; BSR set to: 0
  3788                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  3789  0036C0  B023               	btfsc	_flags^0,0,c
  3790  0036C2  EF65  F01B         	goto	u5021
  3791  0036C6  EF67  F01B         	goto	u5020
  3792  0036CA                     u5021:
  3793  0036CA  EF71  F01B         	goto	l6049
  3794  0036CE                     u5020:
  3795  0036CE                     
  3796                           ; BSR set to: 0
  3797                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  3798  0036CE  C072  F069         	movff	pad@buf,fputs@s
  3799  0036D2  C073  F06A         	movff	pad@buf+1,fputs@s+1
  3800  0036D6  C070  F06B         	movff	pad@fp,fputs@fp
  3801  0036DA  C071  F06C         	movff	pad@fp+1,fputs@fp+1
  3802  0036DE  EC83  F01F         	call	_fputs	;wreg free
  3803  0036E2                     l6049:
  3804                           
  3805                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  3806  0036E2  C072  F020         	movff	pad@buf,strlen@s
  3807  0036E6  C073  F021         	movff	pad@buf+1,strlen@s+1
  3808  0036EA  EC0F  F020         	call	_strlen	;wreg free
  3809  0036EE  0100               	movlb	0	; () banked
  3810  0036F0  5178               	movf	pad@w& (0+255),w,b
  3811  0036F2  2420               	addwf	?_strlen^0,w,c
  3812  0036F4  6F70               	movwf	?_pad& (0+255),b
  3813  0036F6  5179               	movf	(pad@w+1)& (0+255),w,b
  3814  0036F8  2021               	addwfc	(?_strlen+1)^0,w,c
  3815  0036FA  6F71               	movwf	(?_pad+1)& (0+255),b
  3816  0036FC                     
  3817                           ; BSR set to: 0
  3818  0036FC  0012               	return		;funcret
  3819  0036FE                     __end_of_pad:
  3820                           	callstack 0
  3821                           
  3822 ;; *************** function _strlen *****************
  3823 ;; Defined at:
  3824 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strlen.c"
  3825 ;; Parameters:    Size  Location     Type
  3826 ;;  s               2   31[COMRAM] PTR const unsigned char 
  3827 ;;		 -> dbuf(32), 
  3828 ;; Auto vars:     Size  Location     Type
  3829 ;;  a               2    0[BANK0 ] PTR const unsigned char 
  3830 ;;		 -> dbuf(32), 
  3831 ;; Return value:  Size  Location     Type
  3832 ;;                  2   31[COMRAM] unsigned int 
  3833 ;; Registers used:
  3834 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3835 ;; Tracked objects:
  3836 ;;		On entry : 0/0
  3837 ;;		On exit  : 0/0
  3838 ;;		Unchanged: 0/0
  3839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3840 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3841 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3843 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3844 ;;Total ram usage:        4 bytes
  3845 ;; Hardware stack levels used: 1
  3846 ;; Hardware stack levels required when called: 8
  3847 ;; This function calls:
  3848 ;;		Nothing
  3849 ;; This function is called by:
  3850 ;;		_pad
  3851 ;; This function uses a non-reentrant model
  3852 ;;
  3853                           
  3854                           	psect	text12
  3855  00401E                     __ptext12:
  3856                           	callstack 0
  3857  00401E                     _strlen:
  3858                           	callstack 16
  3859  00401E  C020  F060         	movff	strlen@s,strlen@a
  3860  004022  C021  F061         	movff	strlen@s+1,strlen@a+1
  3861  004026  EF17  F020         	goto	l5907
  3862  00402A                     l5905:
  3863  00402A  4A20               	infsnz	strlen@s^0,f,c
  3864  00402C  2A21               	incf	(strlen@s+1)^0,f,c
  3865  00402E                     l5907:
  3866  00402E  0060  F083  FFD9   	movff	strlen@s,fsr2l
  3867  004034  0060  F087  FFDA   	movff	strlen@s+1,fsr2h
  3868  00403A  50DF               	movf	indf2,w,c
  3869  00403C  A4D8               	btfss	status,2,c
  3870  00403E  EF23  F020         	goto	u4781
  3871  004042  EF25  F020         	goto	u4780
  3872  004046                     u4781:
  3873  004046  EF15  F020         	goto	l5905
  3874  00404A                     u4780:
  3875  00404A  0100               	movlb	0	; () banked
  3876  00404C  5160               	movf	strlen@a& (0+255),w,b
  3877  00404E  5C20               	subwf	strlen@s^0,w,c
  3878  004050  6E20               	movwf	?_strlen^0,c
  3879  004052  5161               	movf	(strlen@a+1)& (0+255),w,b
  3880  004054  5821               	subwfb	(strlen@s+1)^0,w,c
  3881  004056  6E21               	movwf	(?_strlen+1)^0,c
  3882  004058                     
  3883                           ; BSR set to: 0
  3884  004058  0012               	return		;funcret
  3885  00405A                     __end_of_strlen:
  3886                           	callstack 0
  3887                           
  3888 ;; *************** function _fputs *****************
  3889 ;; Defined at:
  3890 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputs.c"
  3891 ;; Parameters:    Size  Location     Type
  3892 ;;  s               2    9[BANK0 ] PTR const unsigned char 
  3893 ;;		 -> dbuf(32), 
  3894 ;;  fp              2   11[BANK0 ] PTR struct _IO_FILE
  3895 ;;		 -> NULL(0), 
  3896 ;; Auto vars:     Size  Location     Type
  3897 ;;  i               2   14[BANK0 ] int 
  3898 ;;  c               1   13[BANK0 ] unsigned char 
  3899 ;; Return value:  Size  Location     Type
  3900 ;;                  2    9[BANK0 ] int 
  3901 ;; Registers used:
  3902 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3903 ;; Tracked objects:
  3904 ;;		On entry : 0/0
  3905 ;;		On exit  : 0/0
  3906 ;;		Unchanged: 0/0
  3907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3908 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3909 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3911 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3912 ;;Total ram usage:        7 bytes
  3913 ;; Hardware stack levels used: 1
  3914 ;; Hardware stack levels required when called: 11
  3915 ;; This function calls:
  3916 ;;		_fputc
  3917 ;; This function is called by:
  3918 ;;		_pad
  3919 ;; This function uses a non-reentrant model
  3920 ;;
  3921                           
  3922                           	psect	text13
  3923  003F06                     __ptext13:
  3924                           	callstack 0
  3925  003F06                     _fputs:
  3926                           	callstack 13
  3927  003F06  0E00               	movlw	0
  3928  003F08  0100               	movlb	0	; () banked
  3929  003F0A  6F6F               	movwf	(fputs@i+1)& (0+255),b
  3930  003F0C  0E00               	movlw	0
  3931  003F0E  6F6E               	movwf	fputs@i& (0+255),b
  3932  003F10  EF96  F01F         	goto	l5901
  3933  003F14                     l5897:
  3934                           
  3935                           ; BSR set to: 0
  3936  003F14  C06D  F060         	movff	fputs@c,fputc@c
  3937  003F18  6B61               	clrf	(fputc@c+1)& (0+255),b
  3938  003F1A  C06B  F062         	movff	fputs@fp,fputc@fp
  3939  003F1E  C06C  F063         	movff	fputs@fp+1,fputc@fp+1
  3940  003F22  ECE1  F01C         	call	_fputc	;wreg free
  3941  003F26  0100               	movlb	0	; () banked
  3942  003F28  4B6E               	infsnz	fputs@i& (0+255),f,b
  3943  003F2A  2B6F               	incf	(fputs@i+1)& (0+255),f,b
  3944  003F2C                     l5901:
  3945                           
  3946                           ; BSR set to: 0
  3947  003F2C  516E               	movf	fputs@i& (0+255),w,b
  3948  003F2E  2569               	addwf	fputs@s& (0+255),w,b
  3949  003F30  6ED9               	movwf	fsr2l,c
  3950  003F32  516F               	movf	(fputs@i+1)& (0+255),w,b
  3951  003F34  216A               	addwfc	(fputs@s+1)& (0+255),w,b
  3952  003F36  6EDA               	movwf	fsr2h,c
  3953  003F38  50DF               	movf	indf2,w,c
  3954  003F3A  6F6D               	movwf	fputs@c& (0+255),b
  3955  003F3C  516D               	movf	fputs@c& (0+255),w,b
  3956  003F3E  A4D8               	btfss	status,2,c
  3957  003F40  EFA4  F01F         	goto	u4771
  3958  003F44  EFA6  F01F         	goto	u4770
  3959  003F48                     u4771:
  3960  003F48  EF8A  F01F         	goto	l5897
  3961  003F4C                     u4770:
  3962  003F4C                     
  3963                           ; BSR set to: 0
  3964  003F4C  0012               	return		;funcret
  3965  003F4E                     __end_of_fputs:
  3966                           	callstack 0
  3967                           
  3968 ;; *************** function _fputc *****************
  3969 ;; Defined at:
  3970 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputc.c"
  3971 ;; Parameters:    Size  Location     Type
  3972 ;;  c               2    0[BANK0 ] int 
  3973 ;;  fp              2    2[BANK0 ] PTR struct _IO_FILE
  3974 ;;		 -> NULL(0), 
  3975 ;; Auto vars:     Size  Location     Type
  3976 ;;		None
  3977 ;; Return value:  Size  Location     Type
  3978 ;;                  2    0[BANK0 ] int 
  3979 ;; Registers used:
  3980 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3981 ;; Tracked objects:
  3982 ;;		On entry : 0/0
  3983 ;;		On exit  : 0/0
  3984 ;;		Unchanged: 0/0
  3985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3986 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3988 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3989 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3990 ;;Total ram usage:        9 bytes
  3991 ;; Hardware stack levels used: 1
  3992 ;; Hardware stack levels required when called: 10
  3993 ;; This function calls:
  3994 ;;		_putch
  3995 ;; This function is called by:
  3996 ;;		_pad
  3997 ;;		_vfpfcnvrt
  3998 ;;		_fputs
  3999 ;; This function uses a non-reentrant model
  4000 ;;
  4001                           
  4002                           	psect	text14
  4003  0039C2                     __ptext14:
  4004                           	callstack 0
  4005  0039C2                     _fputc:
  4006                           	callstack 13
  4007  0039C2  0100               	movlb	0	; () banked
  4008  0039C4  5162               	movf	fputc@fp& (0+255),w,b
  4009  0039C6  1163               	iorwf	(fputc@fp+1)& (0+255),w,b
  4010  0039C8  B4D8               	btfsc	status,2,c
  4011  0039CA  EFE9  F01C         	goto	u4731
  4012  0039CE  EFEB  F01C         	goto	u4730
  4013  0039D2                     u4731:
  4014  0039D2  EFF4  F01C         	goto	l5885
  4015  0039D6                     u4730:
  4016  0039D6                     
  4017                           ; BSR set to: 0
  4018  0039D6  5162               	movf	fputc@fp& (0+255),w,b
  4019  0039D8  1163               	iorwf	(fputc@fp+1)& (0+255),w,b
  4020  0039DA  A4D8               	btfss	status,2,c
  4021  0039DC  EFF2  F01C         	goto	u4741
  4022  0039E0  EFF4  F01C         	goto	u4740
  4023  0039E4                     u4741:
  4024  0039E4  EFF9  F01C         	goto	l5887
  4025  0039E8                     u4740:
  4026  0039E8                     l5885:
  4027                           
  4028                           ; BSR set to: 0
  4029  0039E8  5160               	movf	fputc@c& (0+255),w,b
  4030  0039EA  EC98  F022         	call	_putch
  4031  0039EE  EF2C  F01D         	goto	l2139
  4032  0039F2                     l5887:
  4033                           
  4034                           ; BSR set to: 0
  4035  0039F2  EE20 F009          	lfsr	2,9
  4036  0039F6  5162               	movf	fputc@fp& (0+255),w,b
  4037  0039F8  26D9               	addwf	fsr2l,f,c
  4038  0039FA  5163               	movf	(fputc@fp+1)& (0+255),w,b
  4039  0039FC  22DA               	addwfc	fsr2h,f,c
  4040  0039FE  50DE               	movf	postinc2,w,c
  4041  003A00  10DE               	iorwf	postinc2,w,c
  4042  003A02  B4D8               	btfsc	status,2,c
  4043  003A04  EF06  F01D         	goto	u4751
  4044  003A08  EF08  F01D         	goto	u4750
  4045  003A0C                     u4751:
  4046  003A0C  EF23  F01D         	goto	l5891
  4047  003A10                     u4750:
  4048  003A10                     
  4049                           ; BSR set to: 0
  4050  003A10  EE20 F009          	lfsr	2,9
  4051  003A14  5162               	movf	fputc@fp& (0+255),w,b
  4052  003A16  26D9               	addwf	fsr2l,f,c
  4053  003A18  5163               	movf	(fputc@fp+1)& (0+255),w,b
  4054  003A1A  22DA               	addwfc	fsr2h,f,c
  4055  003A1C  EE10 F003          	lfsr	1,3
  4056  003A20  5162               	movf	fputc@fp& (0+255),w,b
  4057  003A22  26E1               	addwf	fsr1l,f,c
  4058  003A24  5163               	movf	(fputc@fp+1)& (0+255),w,b
  4059  003A26  22E2               	addwfc	fsr1h,f,c
  4060  003A28  50DE               	movf	postinc2,w,c
  4061  003A2A  5CE6               	subwf	postinc1,w,c
  4062  003A2C  50E6               	movf	postinc1,w,c
  4063  003A2E  0A80               	xorlw	128
  4064  003A30  6F68               	movwf	(??_fputc+4)& (0+255),b
  4065  003A32  50DE               	movf	postinc2,w,c
  4066  003A34  0A80               	xorlw	128
  4067  003A36  5968               	subwfb	(??_fputc+4)& (0+255),w,b
  4068  003A38  B0D8               	btfsc	status,0,c
  4069  003A3A  EF21  F01D         	goto	u4761
  4070  003A3E  EF23  F01D         	goto	u4760
  4071  003A42                     u4761:
  4072  003A42  EF2C  F01D         	goto	l2139
  4073  003A46                     u4760:
  4074  003A46                     l5891:
  4075                           
  4076                           ; BSR set to: 0
  4077  003A46  EE20 F003          	lfsr	2,3
  4078  003A4A  5162               	movf	fputc@fp& (0+255),w,b
  4079  003A4C  26D9               	addwf	fsr2l,f,c
  4080  003A4E  5163               	movf	(fputc@fp+1)& (0+255),w,b
  4081  003A50  22DA               	addwfc	fsr2h,f,c
  4082  003A52  2ADE               	incf	postinc2,f,c
  4083  003A54  0E00               	movlw	0
  4084  003A56  22DD               	addwfc	postdec2,f,c
  4085  003A58                     l2139:
  4086  003A58  0012               	return		;funcret
  4087  003A5A                     __end_of_fputc:
  4088                           	callstack 0
  4089                           
  4090 ;; *************** function _putch *****************
  4091 ;; Defined at:
  4092 ;;		line 230 in file "mcc_generated_files/uart1.c"
  4093 ;; Parameters:    Size  Location     Type
  4094 ;;  txData          1    wreg     unsigned char 
  4095 ;; Auto vars:     Size  Location     Type
  4096 ;;  txData          1   32[COMRAM] unsigned char 
  4097 ;; Return value:  Size  Location     Type
  4098 ;;                  1    wreg      void 
  4099 ;; Registers used:
  4100 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4101 ;; Tracked objects:
  4102 ;;		On entry : 0/0
  4103 ;;		On exit  : 0/0
  4104 ;;		Unchanged: 0/0
  4105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4107 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4109 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4110 ;;Total ram usage:        1 bytes
  4111 ;; Hardware stack levels used: 1
  4112 ;; Hardware stack levels required when called: 9
  4113 ;; This function calls:
  4114 ;;		_UART1_Write
  4115 ;; This function is called by:
  4116 ;;		_fputc
  4117 ;; This function uses a non-reentrant model
  4118 ;;
  4119                           
  4120                           	psect	text15
  4121  004530                     __ptext15:
  4122                           	callstack 0
  4123  004530                     _putch:
  4124                           	callstack 13
  4125                           
  4126                           ;incstack = 0
  4127                           ;putch@txData stored from wreg
  4128  004530  6E21               	movwf	putch@txData^0,c
  4129  004532                     
  4130                           ;mcc_generated_files/uart1.c: 230: void putch(char txData);mcc_generated_files/uart1.c: 
      +                          231: {;mcc_generated_files/uart1.c: 232:     UART1_Write(txData);
  4131  004532  5021               	movf	putch@txData^0,w,c
  4132  004534  ECA4  F01D         	call	_UART1_Write
  4133  004538  0012               	return		;funcret
  4134  00453A                     __end_of_putch:
  4135                           	callstack 0
  4136                           
  4137 ;; *************** function _UART1_Write *****************
  4138 ;; Defined at:
  4139 ;;		line 202 in file "mcc_generated_files/uart1.c"
  4140 ;; Parameters:    Size  Location     Type
  4141 ;;  txData          1    wreg     unsigned char 
  4142 ;; Auto vars:     Size  Location     Type
  4143 ;;  txData          1   31[COMRAM] unsigned char 
  4144 ;; Return value:  Size  Location     Type
  4145 ;;                  1    wreg      void 
  4146 ;; Registers used:
  4147 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4148 ;; Tracked objects:
  4149 ;;		On entry : 0/0
  4150 ;;		On exit  : 0/0
  4151 ;;		Unchanged: 0/0
  4152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4154 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4156 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4157 ;;Total ram usage:        1 bytes
  4158 ;; Hardware stack levels used: 1
  4159 ;; Hardware stack levels required when called: 8
  4160 ;; This function calls:
  4161 ;;		Nothing
  4162 ;; This function is called by:
  4163 ;;		_putch
  4164 ;; This function uses a non-reentrant model
  4165 ;;
  4166                           
  4167                           	psect	text16
  4168  003B48                     __ptext16:
  4169                           	callstack 0
  4170  003B48                     _UART1_Write:
  4171                           	callstack 13
  4172                           
  4173                           ;incstack = 0
  4174                           ;UART1_Write@txData stored from wreg
  4175  003B48  6E20               	movwf	UART1_Write@txData^0,c
  4176  003B4A                     l5863:
  4177                           
  4178                           ;mcc_generated_files/uart1.c: 204:     while(0 == uart1TxBufferRemaining)
  4179  003B4A  5040               	movf	_uart1TxBufferRemaining^0,w,c	;volatile
  4180  003B4C  B4D8               	btfsc	status,2,c
  4181  003B4E  EFAB  F01D         	goto	u4701
  4182  003B52  EFAD  F01D         	goto	u4700
  4183  003B56                     u4701:
  4184  003B56  EFA5  F01D         	goto	l5863
  4185  003B5A                     u4700:
  4186  003B5A                     
  4187                           ;mcc_generated_files/uart1.c: 208:     if(0 == PIE3bits.U1TXIE)
  4188  003B5A  0139               	movlb	57	; () banked
  4189  003B5C  B993               	btfsc	147,4,b	;volatile
  4190  003B5E  EFB3  F01D         	goto	u4711
  4191  003B62  EFB5  F01D         	goto	u4710
  4192  003B66                     u4711:
  4193  003B66  EFBA  F01D         	goto	l309
  4194  003B6A                     u4710:
  4195  003B6A                     
  4196                           ; BSR set to: 57
  4197                           ;mcc_generated_files/uart1.c: 209:     {;mcc_generated_files/uart1.c: 210:         U1TXB
      +                           = txData;
  4198  003B6A  0060  F083  FDEA   	movff	UART1_Write@txData,15850	;volatile
  4199                           
  4200                           ;mcc_generated_files/uart1.c: 211:     }
  4201  003B70  EFD0  F01D         	goto	l5877
  4202  003B74                     l309:
  4203                           
  4204                           ; BSR set to: 57
  4205                           ;mcc_generated_files/uart1.c: 213:     {;mcc_generated_files/uart1.c: 214:         PIE3b
      +                          its.U1TXIE = 0;
  4206  003B74  9993               	bcf	147,4,b	;volatile
  4207  003B76                     
  4208                           ; BSR set to: 57
  4209                           ;mcc_generated_files/uart1.c: 215:         uart1TxBuffer[uart1TxHead++] = txData;
  4210  003B76  0EC2               	movlw	low _uart1TxBuffer
  4211  003B78  2433               	addwf	_uart1TxHead^0,w,c	;volatile
  4212  003B7A  6ED9               	movwf	fsr2l,c
  4213  003B7C  6ADA               	clrf	fsr2h,c
  4214  003B7E  0E00               	movlw	high _uart1TxBuffer
  4215  003B80  22DA               	addwfc	fsr2h,f,c
  4216  003B82  0060  F083  FFDF   	movff	UART1_Write@txData,indf2
  4217  003B88                     
  4218                           ; BSR set to: 57
  4219  003B88  2A33               	incf	_uart1TxHead^0,f,c	;volatile
  4220  003B8A                     
  4221                           ; BSR set to: 57
  4222                           ;mcc_generated_files/uart1.c: 216:         if(sizeof(uart1TxBuffer) <= uart1TxHead)
  4223  003B8A  0E07               	movlw	7
  4224  003B8C  6433               	cpfsgt	_uart1TxHead^0,c	;volatile
  4225  003B8E  EFCB  F01D         	goto	u4721
  4226  003B92  EFCD  F01D         	goto	u4720
  4227  003B96                     u4721:
  4228  003B96  EFCF  F01D         	goto	l5875
  4229  003B9A                     u4720:
  4230  003B9A                     
  4231                           ; BSR set to: 57
  4232                           ;mcc_generated_files/uart1.c: 217:         {;mcc_generated_files/uart1.c: 218:          
      +                             uart1TxHead = 0;
  4233  003B9A  0E00               	movlw	0
  4234  003B9C  6E33               	movwf	_uart1TxHead^0,c	;volatile
  4235  003B9E                     l5875:
  4236                           
  4237                           ; BSR set to: 57
  4238                           ;mcc_generated_files/uart1.c: 220:         uart1TxBufferRemaining--;
  4239  003B9E  0640               	decf	_uart1TxBufferRemaining^0,f,c	;volatile
  4240  003BA0                     l5877:
  4241                           
  4242                           ; BSR set to: 57
  4243                           ;mcc_generated_files/uart1.c: 222:     PIE3bits.U1TXIE = 1;
  4244  003BA0  8993               	bsf	147,4,b	;volatile
  4245  003BA2                     
  4246                           ; BSR set to: 57
  4247  003BA2  0012               	return		;funcret
  4248  003BA4                     __end_of_UART1_Write:
  4249                           	callstack 0
  4250                           
  4251 ;; *************** function _abs *****************
  4252 ;; Defined at:
  4253 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\abs.c"
  4254 ;; Parameters:    Size  Location     Type
  4255 ;;  a               2   16[BANK0 ] int 
  4256 ;; Auto vars:     Size  Location     Type
  4257 ;;		None
  4258 ;; Return value:  Size  Location     Type
  4259 ;;                  2   16[BANK0 ] int 
  4260 ;; Registers used:
  4261 ;;		wreg, status,2, status,0
  4262 ;; Tracked objects:
  4263 ;;		On entry : 0/0
  4264 ;;		On exit  : 0/0
  4265 ;;		Unchanged: 0/0
  4266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4267 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4269 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4270 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4271 ;;Total ram usage:        4 bytes
  4272 ;; Hardware stack levels used: 1
  4273 ;; Hardware stack levels required when called: 8
  4274 ;; This function calls:
  4275 ;;		Nothing
  4276 ;; This function is called by:
  4277 ;;		_dtoa
  4278 ;; This function uses a non-reentrant model
  4279 ;;
  4280                           
  4281                           	psect	text17
  4282  003FDC                     __ptext17:
  4283                           	callstack 0
  4284  003FDC                     _abs:
  4285                           	callstack 17
  4286  003FDC  0100               	movlb	0	; () banked
  4287  003FDE  BF71               	btfsc	(abs@a+1)& (0+255),7,b
  4288  003FE0  EFFC  F01F         	goto	u5030
  4289  003FE4  5171               	movf	(abs@a+1)& (0+255),w,b
  4290  003FE6  E106               	bnz	u5031
  4291  003FE8  0570               	decf	abs@a& (0+255),w,b
  4292  003FEA  B0D8               	btfsc	status,0,c
  4293  003FEC  EFFA  F01F         	goto	u5031
  4294  003FF0  EFFC  F01F         	goto	u5030
  4295  003FF4                     u5031:
  4296  003FF4  EF0A  F020         	goto	l2124
  4297  003FF8                     u5030:
  4298  003FF8                     
  4299                           ; BSR set to: 0
  4300  003FF8  C070  F072         	movff	abs@a,??_abs
  4301  003FFC  C071  F073         	movff	abs@a+1,??_abs+1
  4302  004000  1F72               	comf	??_abs& (0+255),f,b
  4303  004002  1F73               	comf	(??_abs+1)& (0+255),f,b
  4304  004004  4B72               	infsnz	??_abs& (0+255),f,b
  4305  004006  2B73               	incf	(??_abs+1)& (0+255),f,b
  4306  004008  C072  F070         	movff	??_abs,?_abs
  4307  00400C  C073  F071         	movff	??_abs+1,?_abs+1
  4308  004010  EF0E  F020         	goto	l2127
  4309  004014                     l2124:
  4310                           
  4311                           ; BSR set to: 0
  4312  004014  C070  F070         	movff	abs@a,?_abs
  4313  004018  C071  F071         	movff	abs@a+1,?_abs+1
  4314  00401C                     l2127:
  4315                           
  4316                           ; BSR set to: 0
  4317  00401C  0012               	return		;funcret
  4318  00401E                     __end_of_abs:
  4319                           	callstack 0
  4320                           
  4321 ;; *************** function ___aomod *****************
  4322 ;; Defined at:
  4323 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\aomod.c"
  4324 ;; Parameters:    Size  Location     Type
  4325 ;;  dividend        8    0[BANK0 ] long long 
  4326 ;;  divisor         8    8[BANK0 ] long long 
  4327 ;; Auto vars:     Size  Location     Type
  4328 ;;  sign            1   32[COMRAM] unsigned char 
  4329 ;;  counter         1   31[COMRAM] unsigned char 
  4330 ;; Return value:  Size  Location     Type
  4331 ;;                  8    0[BANK0 ] long long 
  4332 ;; Registers used:
  4333 ;;		wreg, status,2, status,0
  4334 ;; Tracked objects:
  4335 ;;		On entry : 0/0
  4336 ;;		On exit  : 0/0
  4337 ;;		Unchanged: 0/0
  4338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4339 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4340 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4342 ;;      Totals:         2      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4343 ;;Total ram usage:       18 bytes
  4344 ;; Hardware stack levels used: 1
  4345 ;; Hardware stack levels required when called: 8
  4346 ;; This function calls:
  4347 ;;		Nothing
  4348 ;; This function is called by:
  4349 ;;		_dtoa
  4350 ;; This function uses a non-reentrant model
  4351 ;;
  4352                           
  4353                           	psect	text18
  4354  002BCE                     __ptext18:
  4355                           	callstack 0
  4356  002BCE                     ___aomod:
  4357                           	callstack 17
  4358  002BCE  0E00               	movlw	0
  4359  002BD0  6E21               	movwf	___aomod@sign^0,c
  4360  002BD2  0100               	movlb	0	; () banked
  4361  002BD4  BF67               	btfsc	(___aomod@dividend+7)& (0+255),7,b
  4362  002BD6  EFF1  F015         	goto	u4860
  4363  002BDA  EFEF  F015         	goto	u4861
  4364  002BDE                     u4861:
  4365  002BDE  EF03  F016         	goto	l5965
  4366  002BE2                     u4860:
  4367  002BE2                     
  4368                           ; BSR set to: 0
  4369  002BE2  1F67               	comf	(___aomod@dividend+7)& (0+255),f,b
  4370  002BE4  1F66               	comf	(___aomod@dividend+6)& (0+255),f,b
  4371  002BE6  1F65               	comf	(___aomod@dividend+5)& (0+255),f,b
  4372  002BE8  1F64               	comf	(___aomod@dividend+4)& (0+255),f,b
  4373  002BEA  1F63               	comf	(___aomod@dividend+3)& (0+255),f,b
  4374  002BEC  1F62               	comf	(___aomod@dividend+2)& (0+255),f,b
  4375  002BEE  1F61               	comf	(___aomod@dividend+1)& (0+255),f,b
  4376  002BF0  6D60               	negf	___aomod@dividend& (0+255),b
  4377  002BF2  0E00               	movlw	0
  4378  002BF4  2361               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  4379  002BF6  2362               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  4380  002BF8  2363               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  4381  002BFA  2364               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  4382  002BFC  2365               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  4383  002BFE  2366               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  4384  002C00  2367               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  4385  002C02                     
  4386                           ; BSR set to: 0
  4387  002C02  0E01               	movlw	1
  4388  002C04  6E21               	movwf	___aomod@sign^0,c
  4389  002C06                     l5965:
  4390                           
  4391                           ; BSR set to: 0
  4392  002C06  BF6F               	btfsc	(___aomod@divisor+7)& (0+255),7,b
  4393  002C08  EF0A  F016         	goto	u4870
  4394  002C0C  EF08  F016         	goto	u4871
  4395  002C10                     u4871:
  4396  002C10  EF1A  F016         	goto	l5969
  4397  002C14                     u4870:
  4398  002C14                     
  4399                           ; BSR set to: 0
  4400  002C14  1F6F               	comf	(___aomod@divisor+7)& (0+255),f,b
  4401  002C16  1F6E               	comf	(___aomod@divisor+6)& (0+255),f,b
  4402  002C18  1F6D               	comf	(___aomod@divisor+5)& (0+255),f,b
  4403  002C1A  1F6C               	comf	(___aomod@divisor+4)& (0+255),f,b
  4404  002C1C  1F6B               	comf	(___aomod@divisor+3)& (0+255),f,b
  4405  002C1E  1F6A               	comf	(___aomod@divisor+2)& (0+255),f,b
  4406  002C20  1F69               	comf	(___aomod@divisor+1)& (0+255),f,b
  4407  002C22  6D68               	negf	___aomod@divisor& (0+255),b
  4408  002C24  0E00               	movlw	0
  4409  002C26  2369               	addwfc	(___aomod@divisor+1)& (0+255),f,b
  4410  002C28  236A               	addwfc	(___aomod@divisor+2)& (0+255),f,b
  4411  002C2A  236B               	addwfc	(___aomod@divisor+3)& (0+255),f,b
  4412  002C2C  236C               	addwfc	(___aomod@divisor+4)& (0+255),f,b
  4413  002C2E  236D               	addwfc	(___aomod@divisor+5)& (0+255),f,b
  4414  002C30  236E               	addwfc	(___aomod@divisor+6)& (0+255),f,b
  4415  002C32  236F               	addwfc	(___aomod@divisor+7)& (0+255),f,b
  4416  002C34                     l5969:
  4417                           
  4418                           ; BSR set to: 0
  4419  002C34  5168               	movf	___aomod@divisor& (0+255),w,b
  4420  002C36  1169               	iorwf	(___aomod@divisor+1)& (0+255),w,b
  4421  002C38  116A               	iorwf	(___aomod@divisor+2)& (0+255),w,b
  4422  002C3A  116B               	iorwf	(___aomod@divisor+3)& (0+255),w,b
  4423  002C3C  116C               	iorwf	(___aomod@divisor+4)& (0+255),w,b
  4424  002C3E  116D               	iorwf	(___aomod@divisor+5)& (0+255),w,b
  4425  002C40  116E               	iorwf	(___aomod@divisor+6)& (0+255),w,b
  4426  002C42  116F               	iorwf	(___aomod@divisor+7)& (0+255),w,b
  4427  002C44  B4D8               	btfsc	status,2,c
  4428  002C46  EF27  F016         	goto	u4881
  4429  002C4A  EF29  F016         	goto	u4880
  4430  002C4E                     u4881:
  4431  002C4E  EF71  F016         	goto	l5985
  4432  002C52                     u4880:
  4433  002C52                     
  4434                           ; BSR set to: 0
  4435  002C52  0E01               	movlw	1
  4436  002C54  6E20               	movwf	___aomod@counter^0,c
  4437  002C56  EF37  F016         	goto	l5975
  4438  002C5A                     l5973:
  4439                           
  4440                           ; BSR set to: 0
  4441  002C5A  90D8               	bcf	status,0,c
  4442  002C5C  3768               	rlcf	___aomod@divisor& (0+255),f,b
  4443  002C5E  3769               	rlcf	(___aomod@divisor+1)& (0+255),f,b
  4444  002C60  376A               	rlcf	(___aomod@divisor+2)& (0+255),f,b
  4445  002C62  376B               	rlcf	(___aomod@divisor+3)& (0+255),f,b
  4446  002C64  376C               	rlcf	(___aomod@divisor+4)& (0+255),f,b
  4447  002C66  376D               	rlcf	(___aomod@divisor+5)& (0+255),f,b
  4448  002C68  376E               	rlcf	(___aomod@divisor+6)& (0+255),f,b
  4449  002C6A  376F               	rlcf	(___aomod@divisor+7)& (0+255),f,b
  4450  002C6C  2A20               	incf	___aomod@counter^0,f,c
  4451  002C6E                     l5975:
  4452                           
  4453                           ; BSR set to: 0
  4454  002C6E  AF6F               	btfss	(___aomod@divisor+7)& (0+255),7,b
  4455  002C70  EF3C  F016         	goto	u4891
  4456  002C74  EF3E  F016         	goto	u4890
  4457  002C78                     u4891:
  4458  002C78  EF2D  F016         	goto	l5973
  4459  002C7C                     u4890:
  4460  002C7C                     l5977:
  4461                           
  4462                           ; BSR set to: 0
  4463  002C7C  5168               	movf	___aomod@divisor& (0+255),w,b
  4464  002C7E  5D60               	subwf	___aomod@dividend& (0+255),w,b
  4465  002C80  5169               	movf	(___aomod@divisor+1)& (0+255),w,b
  4466  002C82  5961               	subwfb	(___aomod@dividend+1)& (0+255),w,b
  4467  002C84  516A               	movf	(___aomod@divisor+2)& (0+255),w,b
  4468  002C86  5962               	subwfb	(___aomod@dividend+2)& (0+255),w,b
  4469  002C88  516B               	movf	(___aomod@divisor+3)& (0+255),w,b
  4470  002C8A  5963               	subwfb	(___aomod@dividend+3)& (0+255),w,b
  4471  002C8C  516C               	movf	(___aomod@divisor+4)& (0+255),w,b
  4472  002C8E  5964               	subwfb	(___aomod@dividend+4)& (0+255),w,b
  4473  002C90  516D               	movf	(___aomod@divisor+5)& (0+255),w,b
  4474  002C92  5965               	subwfb	(___aomod@dividend+5)& (0+255),w,b
  4475  002C94  516E               	movf	(___aomod@divisor+6)& (0+255),w,b
  4476  002C96  5966               	subwfb	(___aomod@dividend+6)& (0+255),w,b
  4477  002C98  516F               	movf	(___aomod@divisor+7)& (0+255),w,b
  4478  002C9A  5967               	subwfb	(___aomod@dividend+7)& (0+255),w,b
  4479  002C9C  A0D8               	btfss	status,0,c
  4480  002C9E  EF53  F016         	goto	u4901
  4481  002CA2  EF55  F016         	goto	u4900
  4482  002CA6                     u4901:
  4483  002CA6  EF65  F016         	goto	l5981
  4484  002CAA                     u4900:
  4485  002CAA                     
  4486                           ; BSR set to: 0
  4487  002CAA  5168               	movf	___aomod@divisor& (0+255),w,b
  4488  002CAC  5F60               	subwf	___aomod@dividend& (0+255),f,b
  4489  002CAE  5169               	movf	(___aomod@divisor+1)& (0+255),w,b
  4490  002CB0  5B61               	subwfb	(___aomod@dividend+1)& (0+255),f,b
  4491  002CB2  516A               	movf	(___aomod@divisor+2)& (0+255),w,b
  4492  002CB4  5B62               	subwfb	(___aomod@dividend+2)& (0+255),f,b
  4493  002CB6  516B               	movf	(___aomod@divisor+3)& (0+255),w,b
  4494  002CB8  5B63               	subwfb	(___aomod@dividend+3)& (0+255),f,b
  4495  002CBA  516C               	movf	(___aomod@divisor+4)& (0+255),w,b
  4496  002CBC  5B64               	subwfb	(___aomod@dividend+4)& (0+255),f,b
  4497  002CBE  516D               	movf	(___aomod@divisor+5)& (0+255),w,b
  4498  002CC0  5B65               	subwfb	(___aomod@dividend+5)& (0+255),f,b
  4499  002CC2  516E               	movf	(___aomod@divisor+6)& (0+255),w,b
  4500  002CC4  5B66               	subwfb	(___aomod@dividend+6)& (0+255),f,b
  4501  002CC6  516F               	movf	(___aomod@divisor+7)& (0+255),w,b
  4502  002CC8  5B67               	subwfb	(___aomod@dividend+7)& (0+255),f,b
  4503  002CCA                     l5981:
  4504                           
  4505                           ; BSR set to: 0
  4506  002CCA  90D8               	bcf	status,0,c
  4507  002CCC  336F               	rrcf	(___aomod@divisor+7)& (0+255),f,b
  4508  002CCE  336E               	rrcf	(___aomod@divisor+6)& (0+255),f,b
  4509  002CD0  336D               	rrcf	(___aomod@divisor+5)& (0+255),f,b
  4510  002CD2  336C               	rrcf	(___aomod@divisor+4)& (0+255),f,b
  4511  002CD4  336B               	rrcf	(___aomod@divisor+3)& (0+255),f,b
  4512  002CD6  336A               	rrcf	(___aomod@divisor+2)& (0+255),f,b
  4513  002CD8  3369               	rrcf	(___aomod@divisor+1)& (0+255),f,b
  4514  002CDA  3368               	rrcf	___aomod@divisor& (0+255),f,b
  4515  002CDC                     
  4516                           ; BSR set to: 0
  4517  002CDC  2E20               	decfsz	___aomod@counter^0,f,c
  4518  002CDE  EF3E  F016         	goto	l5977
  4519  002CE2                     l5985:
  4520                           
  4521                           ; BSR set to: 0
  4522  002CE2  5021               	movf	___aomod@sign^0,w,c
  4523  002CE4  B4D8               	btfsc	status,2,c
  4524  002CE6  EF77  F016         	goto	u4911
  4525  002CEA  EF79  F016         	goto	u4910
  4526  002CEE                     u4911:
  4527  002CEE  EF89  F016         	goto	l5989
  4528  002CF2                     u4910:
  4529  002CF2                     
  4530                           ; BSR set to: 0
  4531  002CF2  1F67               	comf	(___aomod@dividend+7)& (0+255),f,b
  4532  002CF4  1F66               	comf	(___aomod@dividend+6)& (0+255),f,b
  4533  002CF6  1F65               	comf	(___aomod@dividend+5)& (0+255),f,b
  4534  002CF8  1F64               	comf	(___aomod@dividend+4)& (0+255),f,b
  4535  002CFA  1F63               	comf	(___aomod@dividend+3)& (0+255),f,b
  4536  002CFC  1F62               	comf	(___aomod@dividend+2)& (0+255),f,b
  4537  002CFE  1F61               	comf	(___aomod@dividend+1)& (0+255),f,b
  4538  002D00  6D60               	negf	___aomod@dividend& (0+255),b
  4539  002D02  0E00               	movlw	0
  4540  002D04  2361               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  4541  002D06  2362               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  4542  002D08  2363               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  4543  002D0A  2364               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  4544  002D0C  2365               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  4545  002D0E  2366               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  4546  002D10  2367               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  4547  002D12                     l5989:
  4548                           
  4549                           ; BSR set to: 0
  4550  002D12  C060  F060         	movff	___aomod@dividend,?___aomod
  4551  002D16  C061  F061         	movff	___aomod@dividend+1,?___aomod+1
  4552  002D1A  C062  F062         	movff	___aomod@dividend+2,?___aomod+2
  4553  002D1E  C063  F063         	movff	___aomod@dividend+3,?___aomod+3
  4554  002D22  C064  F064         	movff	___aomod@dividend+4,?___aomod+4
  4555  002D26  C065  F065         	movff	___aomod@dividend+5,?___aomod+5
  4556  002D2A  C066  F066         	movff	___aomod@dividend+6,?___aomod+6
  4557  002D2E  C067  F067         	movff	___aomod@dividend+7,?___aomod+7
  4558  002D32                     
  4559                           ; BSR set to: 0
  4560  002D32  0012               	return		;funcret
  4561  002D34                     __end_of___aomod:
  4562                           	callstack 0
  4563                           
  4564 ;; *************** function ___aodiv *****************
  4565 ;; Defined at:
  4566 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\aodiv.c"
  4567 ;; Parameters:    Size  Location     Type
  4568 ;;  dividend        8    0[BANK0 ] long long 
  4569 ;;  divisor         8    8[BANK0 ] long long 
  4570 ;; Auto vars:     Size  Location     Type
  4571 ;;  quotient        8   18[BANK0 ] long long 
  4572 ;;  sign            1   17[BANK0 ] unsigned char 
  4573 ;;  counter         1   16[BANK0 ] unsigned char 
  4574 ;; Return value:  Size  Location     Type
  4575 ;;                  8    0[BANK0 ] long long 
  4576 ;; Registers used:
  4577 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4578 ;; Tracked objects:
  4579 ;;		On entry : 0/0
  4580 ;;		On exit  : 0/0
  4581 ;;		Unchanged: 0/0
  4582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4583 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4584 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4586 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4587 ;;Total ram usage:       26 bytes
  4588 ;; Hardware stack levels used: 1
  4589 ;; Hardware stack levels required when called: 8
  4590 ;; This function calls:
  4591 ;;		Nothing
  4592 ;; This function is called by:
  4593 ;;		_dtoa
  4594 ;; This function uses a non-reentrant model
  4595 ;;
  4596                           
  4597                           	psect	text19
  4598  0028D0                     __ptext19:
  4599                           	callstack 0
  4600  0028D0                     ___aodiv:
  4601                           	callstack 17
  4602  0028D0  0E00               	movlw	0
  4603  0028D2  0100               	movlb	0	; () banked
  4604  0028D4  6F71               	movwf	___aodiv@sign& (0+255),b
  4605  0028D6                     
  4606                           ; BSR set to: 0
  4607  0028D6  BF6F               	btfsc	(___aodiv@divisor+7)& (0+255),7,b
  4608  0028D8  EF72  F014         	goto	u4790
  4609  0028DC  EF70  F014         	goto	u4791
  4610  0028E0                     u4791:
  4611  0028E0  EF84  F014         	goto	l5921
  4612  0028E4                     u4790:
  4613  0028E4                     
  4614                           ; BSR set to: 0
  4615  0028E4  1F6F               	comf	(___aodiv@divisor+7)& (0+255),f,b
  4616  0028E6  1F6E               	comf	(___aodiv@divisor+6)& (0+255),f,b
  4617  0028E8  1F6D               	comf	(___aodiv@divisor+5)& (0+255),f,b
  4618  0028EA  1F6C               	comf	(___aodiv@divisor+4)& (0+255),f,b
  4619  0028EC  1F6B               	comf	(___aodiv@divisor+3)& (0+255),f,b
  4620  0028EE  1F6A               	comf	(___aodiv@divisor+2)& (0+255),f,b
  4621  0028F0  1F69               	comf	(___aodiv@divisor+1)& (0+255),f,b
  4622  0028F2  6D68               	negf	___aodiv@divisor& (0+255),b
  4623  0028F4  0E00               	movlw	0
  4624  0028F6  2369               	addwfc	(___aodiv@divisor+1)& (0+255),f,b
  4625  0028F8  236A               	addwfc	(___aodiv@divisor+2)& (0+255),f,b
  4626  0028FA  236B               	addwfc	(___aodiv@divisor+3)& (0+255),f,b
  4627  0028FC  236C               	addwfc	(___aodiv@divisor+4)& (0+255),f,b
  4628  0028FE  236D               	addwfc	(___aodiv@divisor+5)& (0+255),f,b
  4629  002900  236E               	addwfc	(___aodiv@divisor+6)& (0+255),f,b
  4630  002902  236F               	addwfc	(___aodiv@divisor+7)& (0+255),f,b
  4631  002904                     
  4632                           ; BSR set to: 0
  4633  002904  0E01               	movlw	1
  4634  002906  6F71               	movwf	___aodiv@sign& (0+255),b
  4635  002908                     l5921:
  4636                           
  4637                           ; BSR set to: 0
  4638  002908  BF67               	btfsc	(___aodiv@dividend+7)& (0+255),7,b
  4639  00290A  EF8B  F014         	goto	u4800
  4640  00290E  EF89  F014         	goto	u4801
  4641  002912                     u4801:
  4642  002912  EF9D  F014         	goto	l5927
  4643  002916                     u4800:
  4644  002916                     
  4645                           ; BSR set to: 0
  4646  002916  1F67               	comf	(___aodiv@dividend+7)& (0+255),f,b
  4647  002918  1F66               	comf	(___aodiv@dividend+6)& (0+255),f,b
  4648  00291A  1F65               	comf	(___aodiv@dividend+5)& (0+255),f,b
  4649  00291C  1F64               	comf	(___aodiv@dividend+4)& (0+255),f,b
  4650  00291E  1F63               	comf	(___aodiv@dividend+3)& (0+255),f,b
  4651  002920  1F62               	comf	(___aodiv@dividend+2)& (0+255),f,b
  4652  002922  1F61               	comf	(___aodiv@dividend+1)& (0+255),f,b
  4653  002924  6D60               	negf	___aodiv@dividend& (0+255),b
  4654  002926  0E00               	movlw	0
  4655  002928  2361               	addwfc	(___aodiv@dividend+1)& (0+255),f,b
  4656  00292A  2362               	addwfc	(___aodiv@dividend+2)& (0+255),f,b
  4657  00292C  2363               	addwfc	(___aodiv@dividend+3)& (0+255),f,b
  4658  00292E  2364               	addwfc	(___aodiv@dividend+4)& (0+255),f,b
  4659  002930  2365               	addwfc	(___aodiv@dividend+5)& (0+255),f,b
  4660  002932  2366               	addwfc	(___aodiv@dividend+6)& (0+255),f,b
  4661  002934  2367               	addwfc	(___aodiv@dividend+7)& (0+255),f,b
  4662  002936                     
  4663                           ; BSR set to: 0
  4664  002936  0E01               	movlw	1
  4665  002938  1B71               	xorwf	___aodiv@sign& (0+255),f,b
  4666  00293A                     l5927:
  4667                           
  4668                           ; BSR set to: 0
  4669  00293A  EE20  F072         	lfsr	2,___aodiv@quotient
  4670  00293E  0E07               	movlw	7
  4671  002940                     u4811:
  4672  002940  6ADE               	clrf	postinc2,c
  4673  002942  06E8               	decf	wreg,f,c
  4674  002944  E2FD               	bc	u4811
  4675  002946                     
  4676                           ; BSR set to: 0
  4677  002946  5168               	movf	___aodiv@divisor& (0+255),w,b
  4678  002948  1169               	iorwf	(___aodiv@divisor+1)& (0+255),w,b
  4679  00294A  116A               	iorwf	(___aodiv@divisor+2)& (0+255),w,b
  4680  00294C  116B               	iorwf	(___aodiv@divisor+3)& (0+255),w,b
  4681  00294E  116C               	iorwf	(___aodiv@divisor+4)& (0+255),w,b
  4682  002950  116D               	iorwf	(___aodiv@divisor+5)& (0+255),w,b
  4683  002952  116E               	iorwf	(___aodiv@divisor+6)& (0+255),w,b
  4684  002954  116F               	iorwf	(___aodiv@divisor+7)& (0+255),w,b
  4685  002956  B4D8               	btfsc	status,2,c
  4686  002958  EFB0  F014         	goto	u4821
  4687  00295C  EFB2  F014         	goto	u4820
  4688  002960                     u4821:
  4689  002960  EF04  F015         	goto	l5949
  4690  002964                     u4820:
  4691  002964                     
  4692                           ; BSR set to: 0
  4693  002964  0E01               	movlw	1
  4694  002966  6F70               	movwf	___aodiv@counter& (0+255),b
  4695  002968  EFC0  F014         	goto	l5935
  4696  00296C                     l5933:
  4697                           
  4698                           ; BSR set to: 0
  4699  00296C  90D8               	bcf	status,0,c
  4700  00296E  3768               	rlcf	___aodiv@divisor& (0+255),f,b
  4701  002970  3769               	rlcf	(___aodiv@divisor+1)& (0+255),f,b
  4702  002972  376A               	rlcf	(___aodiv@divisor+2)& (0+255),f,b
  4703  002974  376B               	rlcf	(___aodiv@divisor+3)& (0+255),f,b
  4704  002976  376C               	rlcf	(___aodiv@divisor+4)& (0+255),f,b
  4705  002978  376D               	rlcf	(___aodiv@divisor+5)& (0+255),f,b
  4706  00297A  376E               	rlcf	(___aodiv@divisor+6)& (0+255),f,b
  4707  00297C  376F               	rlcf	(___aodiv@divisor+7)& (0+255),f,b
  4708  00297E  2B70               	incf	___aodiv@counter& (0+255),f,b
  4709  002980                     l5935:
  4710                           
  4711                           ; BSR set to: 0
  4712  002980  AF6F               	btfss	(___aodiv@divisor+7)& (0+255),7,b
  4713  002982  EFC5  F014         	goto	u4831
  4714  002986  EFC7  F014         	goto	u4830
  4715  00298A                     u4831:
  4716  00298A  EFB6  F014         	goto	l5933
  4717  00298E                     u4830:
  4718  00298E                     l5937:
  4719                           
  4720                           ; BSR set to: 0
  4721  00298E  90D8               	bcf	status,0,c
  4722  002990  3772               	rlcf	___aodiv@quotient& (0+255),f,b
  4723  002992  3773               	rlcf	(___aodiv@quotient+1)& (0+255),f,b
  4724  002994  3774               	rlcf	(___aodiv@quotient+2)& (0+255),f,b
  4725  002996  3775               	rlcf	(___aodiv@quotient+3)& (0+255),f,b
  4726  002998  3776               	rlcf	(___aodiv@quotient+4)& (0+255),f,b
  4727  00299A  3777               	rlcf	(___aodiv@quotient+5)& (0+255),f,b
  4728  00299C  3778               	rlcf	(___aodiv@quotient+6)& (0+255),f,b
  4729  00299E  3779               	rlcf	(___aodiv@quotient+7)& (0+255),f,b
  4730  0029A0                     
  4731                           ; BSR set to: 0
  4732  0029A0  5168               	movf	___aodiv@divisor& (0+255),w,b
  4733  0029A2  5D60               	subwf	___aodiv@dividend& (0+255),w,b
  4734  0029A4  5169               	movf	(___aodiv@divisor+1)& (0+255),w,b
  4735  0029A6  5961               	subwfb	(___aodiv@dividend+1)& (0+255),w,b
  4736  0029A8  516A               	movf	(___aodiv@divisor+2)& (0+255),w,b
  4737  0029AA  5962               	subwfb	(___aodiv@dividend+2)& (0+255),w,b
  4738  0029AC  516B               	movf	(___aodiv@divisor+3)& (0+255),w,b
  4739  0029AE  5963               	subwfb	(___aodiv@dividend+3)& (0+255),w,b
  4740  0029B0  516C               	movf	(___aodiv@divisor+4)& (0+255),w,b
  4741  0029B2  5964               	subwfb	(___aodiv@dividend+4)& (0+255),w,b
  4742  0029B4  516D               	movf	(___aodiv@divisor+5)& (0+255),w,b
  4743  0029B6  5965               	subwfb	(___aodiv@dividend+5)& (0+255),w,b
  4744  0029B8  516E               	movf	(___aodiv@divisor+6)& (0+255),w,b
  4745  0029BA  5966               	subwfb	(___aodiv@dividend+6)& (0+255),w,b
  4746  0029BC  516F               	movf	(___aodiv@divisor+7)& (0+255),w,b
  4747  0029BE  5967               	subwfb	(___aodiv@dividend+7)& (0+255),w,b
  4748  0029C0  A0D8               	btfss	status,0,c
  4749  0029C2  EFE5  F014         	goto	u4841
  4750  0029C6  EFE7  F014         	goto	u4840
  4751  0029CA                     u4841:
  4752  0029CA  EFF8  F014         	goto	l5945
  4753  0029CE                     u4840:
  4754  0029CE                     
  4755                           ; BSR set to: 0
  4756  0029CE  5168               	movf	___aodiv@divisor& (0+255),w,b
  4757  0029D0  5F60               	subwf	___aodiv@dividend& (0+255),f,b
  4758  0029D2  5169               	movf	(___aodiv@divisor+1)& (0+255),w,b
  4759  0029D4  5B61               	subwfb	(___aodiv@dividend+1)& (0+255),f,b
  4760  0029D6  516A               	movf	(___aodiv@divisor+2)& (0+255),w,b
  4761  0029D8  5B62               	subwfb	(___aodiv@dividend+2)& (0+255),f,b
  4762  0029DA  516B               	movf	(___aodiv@divisor+3)& (0+255),w,b
  4763  0029DC  5B63               	subwfb	(___aodiv@dividend+3)& (0+255),f,b
  4764  0029DE  516C               	movf	(___aodiv@divisor+4)& (0+255),w,b
  4765  0029E0  5B64               	subwfb	(___aodiv@dividend+4)& (0+255),f,b
  4766  0029E2  516D               	movf	(___aodiv@divisor+5)& (0+255),w,b
  4767  0029E4  5B65               	subwfb	(___aodiv@dividend+5)& (0+255),f,b
  4768  0029E6  516E               	movf	(___aodiv@divisor+6)& (0+255),w,b
  4769  0029E8  5B66               	subwfb	(___aodiv@dividend+6)& (0+255),f,b
  4770  0029EA  516F               	movf	(___aodiv@divisor+7)& (0+255),w,b
  4771  0029EC  5B67               	subwfb	(___aodiv@dividend+7)& (0+255),f,b
  4772  0029EE                     
  4773                           ; BSR set to: 0
  4774  0029EE  8172               	bsf	___aodiv@quotient& (0+255),0,b
  4775  0029F0                     l5945:
  4776                           
  4777                           ; BSR set to: 0
  4778  0029F0  90D8               	bcf	status,0,c
  4779  0029F2  336F               	rrcf	(___aodiv@divisor+7)& (0+255),f,b
  4780  0029F4  336E               	rrcf	(___aodiv@divisor+6)& (0+255),f,b
  4781  0029F6  336D               	rrcf	(___aodiv@divisor+5)& (0+255),f,b
  4782  0029F8  336C               	rrcf	(___aodiv@divisor+4)& (0+255),f,b
  4783  0029FA  336B               	rrcf	(___aodiv@divisor+3)& (0+255),f,b
  4784  0029FC  336A               	rrcf	(___aodiv@divisor+2)& (0+255),f,b
  4785  0029FE  3369               	rrcf	(___aodiv@divisor+1)& (0+255),f,b
  4786  002A00  3368               	rrcf	___aodiv@divisor& (0+255),f,b
  4787  002A02                     
  4788                           ; BSR set to: 0
  4789  002A02  2F70               	decfsz	___aodiv@counter& (0+255),f,b
  4790  002A04  EFC7  F014         	goto	l5937
  4791  002A08                     l5949:
  4792                           
  4793                           ; BSR set to: 0
  4794  002A08  5171               	movf	___aodiv@sign& (0+255),w,b
  4795  002A0A  B4D8               	btfsc	status,2,c
  4796  002A0C  EF0A  F015         	goto	u4851
  4797  002A10  EF0C  F015         	goto	u4850
  4798  002A14                     u4851:
  4799  002A14  EF1C  F015         	goto	l5953
  4800  002A18                     u4850:
  4801  002A18                     
  4802                           ; BSR set to: 0
  4803  002A18  1F79               	comf	(___aodiv@quotient+7)& (0+255),f,b
  4804  002A1A  1F78               	comf	(___aodiv@quotient+6)& (0+255),f,b
  4805  002A1C  1F77               	comf	(___aodiv@quotient+5)& (0+255),f,b
  4806  002A1E  1F76               	comf	(___aodiv@quotient+4)& (0+255),f,b
  4807  002A20  1F75               	comf	(___aodiv@quotient+3)& (0+255),f,b
  4808  002A22  1F74               	comf	(___aodiv@quotient+2)& (0+255),f,b
  4809  002A24  1F73               	comf	(___aodiv@quotient+1)& (0+255),f,b
  4810  002A26  6D72               	negf	___aodiv@quotient& (0+255),b
  4811  002A28  0E00               	movlw	0
  4812  002A2A  2373               	addwfc	(___aodiv@quotient+1)& (0+255),f,b
  4813  002A2C  2374               	addwfc	(___aodiv@quotient+2)& (0+255),f,b
  4814  002A2E  2375               	addwfc	(___aodiv@quotient+3)& (0+255),f,b
  4815  002A30  2376               	addwfc	(___aodiv@quotient+4)& (0+255),f,b
  4816  002A32  2377               	addwfc	(___aodiv@quotient+5)& (0+255),f,b
  4817  002A34  2378               	addwfc	(___aodiv@quotient+6)& (0+255),f,b
  4818  002A36  2379               	addwfc	(___aodiv@quotient+7)& (0+255),f,b
  4819  002A38                     l5953:
  4820                           
  4821                           ; BSR set to: 0
  4822  002A38  C072  F060         	movff	___aodiv@quotient,?___aodiv
  4823  002A3C  C073  F061         	movff	___aodiv@quotient+1,?___aodiv+1
  4824  002A40  C074  F062         	movff	___aodiv@quotient+2,?___aodiv+2
  4825  002A44  C075  F063         	movff	___aodiv@quotient+3,?___aodiv+3
  4826  002A48  C076  F064         	movff	___aodiv@quotient+4,?___aodiv+4
  4827  002A4C  C077  F065         	movff	___aodiv@quotient+5,?___aodiv+5
  4828  002A50  C078  F066         	movff	___aodiv@quotient+6,?___aodiv+6
  4829  002A54  C079  F067         	movff	___aodiv@quotient+7,?___aodiv+7
  4830  002A58                     
  4831                           ; BSR set to: 0
  4832  002A58  0012               	return		;funcret
  4833  002A5A                     __end_of___aodiv:
  4834                           	callstack 0
  4835                           
  4836 ;; *************** function _getBatteryVoltage *****************
  4837 ;; Defined at:
  4838 ;;		line 81 in file "main.c"
  4839 ;; Parameters:    Size  Location     Type
  4840 ;;		None
  4841 ;; Auto vars:     Size  Location     Type
  4842 ;;		None
  4843 ;; Return value:  Size  Location     Type
  4844 ;;                  1    wreg      void 
  4845 ;; Registers used:
  4846 ;;		wreg, status,2, status,0, cstack
  4847 ;; Tracked objects:
  4848 ;;		On entry : 0/0
  4849 ;;		On exit  : 0/0
  4850 ;;		Unchanged: 0/0
  4851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4855 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4856 ;;Total ram usage:        0 bytes
  4857 ;; Hardware stack levels used: 1
  4858 ;; Hardware stack levels required when called: 9
  4859 ;; This function calls:
  4860 ;;		_ADCC_GetSingleConversion
  4861 ;; This function is called by:
  4862 ;;		_loop
  4863 ;; This function uses a non-reentrant model
  4864 ;;
  4865                           
  4866                           	psect	text20
  4867  004512                     __ptext20:
  4868                           	callstack 0
  4869  004512                     _getBatteryVoltage:
  4870                           	callstack 20
  4871  004512                     
  4872                           ;main.c: 82:     BatteryVolt = ADCC_GetSingleConversion(aiBatt);
  4873  004512  0E22               	movlw	34
  4874  004514  EC2D  F020         	call	_ADCC_GetSingleConversion
  4875  004518  C020  F0EF         	movff	?_ADCC_GetSingleConversion,_BatteryVolt
  4876  00451C  C021  F0F0         	movff	?_ADCC_GetSingleConversion+1,_BatteryVolt+1
  4877  004520  0012               	return		;funcret
  4878  004522                     __end_of_getBatteryVoltage:
  4879                           	callstack 0
  4880                           
  4881 ;; *************** function _ADCC_GetSingleConversion *****************
  4882 ;; Defined at:
  4883 ;;		line 137 in file "mcc_generated_files/adcc.c"
  4884 ;; Parameters:    Size  Location     Type
  4885 ;;  channel         1    wreg     enum E16067
  4886 ;; Auto vars:     Size  Location     Type
  4887 ;;  channel         1   33[COMRAM] enum E16067
  4888 ;; Return value:  Size  Location     Type
  4889 ;;                  2   31[COMRAM] unsigned short 
  4890 ;; Registers used:
  4891 ;;		wreg, status,2, status,0
  4892 ;; Tracked objects:
  4893 ;;		On entry : 0/0
  4894 ;;		On exit  : 0/0
  4895 ;;		Unchanged: 0/0
  4896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4897 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4898 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4899 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4900 ;;      Totals:         3       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4901 ;;Total ram usage:        5 bytes
  4902 ;; Hardware stack levels used: 1
  4903 ;; Hardware stack levels required when called: 8
  4904 ;; This function calls:
  4905 ;;		Nothing
  4906 ;; This function is called by:
  4907 ;;		_getBatteryVoltage
  4908 ;; This function uses a non-reentrant model
  4909 ;;
  4910                           
  4911                           	psect	text21
  4912  00405A                     __ptext21:
  4913                           	callstack 0
  4914  00405A                     _ADCC_GetSingleConversion:
  4915                           	callstack 20
  4916                           
  4917                           ;incstack = 0
  4918                           ;ADCC_GetSingleConversion@channel stored from wreg
  4919  00405A  6E22               	movwf	ADCC_GetSingleConversion@channel^0,c
  4920  00405C                     
  4921                           ;mcc_generated_files/adcc.c: 137: adc_result_t ADCC_GetSingleConversion(adcc_channel_t c
      +                          hannel);mcc_generated_files/adcc.c: 138: {;mcc_generated_files/adcc.c: 140:     ADPCH = 
      +                          channel;
  4922  00405C  0060  F08B  FEF1   	movff	ADCC_GetSingleConversion@channel,16113	;volatile
  4923  004062                     
  4924                           ;mcc_generated_files/adcc.c: 143:     ADCON0bits.ADON = 1;
  4925  004062  013E               	movlb	62	; () banked
  4926  004064  8FF8               	bsf	248,7,b	;volatile
  4927  004066                     
  4928                           ; BSR set to: 62
  4929                           ;mcc_generated_files/adcc.c: 146:     ADCON0bits.ADCONT = 0;
  4930  004066  9DF8               	bcf	248,6,b	;volatile
  4931  004068                     
  4932                           ; BSR set to: 62
  4933                           ;mcc_generated_files/adcc.c: 149:     ADCON0bits.ADGO = 1;
  4934  004068  81F8               	bsf	248,0,b	;volatile
  4935  00406A                     l1054:
  4936                           
  4937                           ; BSR set to: 62
  4938                           ;mcc_generated_files/adcc.c: 153:     while (ADCON0bits.ADGO)
  4939  00406A  B1F8               	btfsc	248,0,b	;volatile
  4940  00406C  EF3A  F020         	goto	u5481
  4941  004070  EF3C  F020         	goto	u5480
  4942  004074                     u5481:
  4943  004074  EF35  F020         	goto	l1054
  4944  004078                     u5480:
  4945  004078                     
  4946                           ; BSR set to: 62
  4947                           ;mcc_generated_files/adcc.c: 159:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  4948  004078  51F0               	movf	240,w,b	;volatile
  4949  00407A  0100               	movlb	0	; () banked
  4950  00407C  6F61               	movwf	(??_ADCC_GetSingleConversion+1)& (0+255),b
  4951  00407E  6B60               	clrf	??_ADCC_GetSingleConversion& (0+255),b
  4952  004080  013E               	movlb	62	; () banked
  4953  004082  51EF               	movf	239,w,b	;volatile
  4954  004084  0100               	movlb	0	; () banked
  4955  004086  2560               	addwf	??_ADCC_GetSingleConversion& (0+255),w,b
  4956  004088  6E20               	movwf	?_ADCC_GetSingleConversion^0,c
  4957  00408A  013E               	movlb	62	; () banked
  4958  00408C  0E00               	movlw	0
  4959  00408E  0100               	movlb	0	; () banked
  4960  004090  2161               	addwfc	(??_ADCC_GetSingleConversion+1)& (0+255),w,b
  4961  004092  6E21               	movwf	(?_ADCC_GetSingleConversion+1)^0,c
  4962  004094                     
  4963                           ; BSR set to: 0
  4964  004094  0012               	return		;funcret
  4965  004096                     __end_of_ADCC_GetSingleConversion:
  4966                           	callstack 0
  4967                           
  4968 ;; *************** function _calcSteering *****************
  4969 ;; Defined at:
  4970 ;;		line 174 in file "main.c"
  4971 ;; Parameters:    Size  Location     Type
  4972 ;;		None
  4973 ;; Auto vars:     Size  Location     Type
  4974 ;;  delta           2   19[BANK0 ] short 
  4975 ;; Return value:  Size  Location     Type
  4976 ;;                  1    wreg      void 
  4977 ;; Registers used:
  4978 ;;		wreg, status,2, status,0, cstack
  4979 ;; Tracked objects:
  4980 ;;		On entry : 0/0
  4981 ;;		On exit  : 0/0
  4982 ;;		Unchanged: 0/0
  4983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4985 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4986 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4987 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4988 ;;Total ram usage:        4 bytes
  4989 ;; Hardware stack levels used: 1
  4990 ;; Hardware stack levels required when called: 10
  4991 ;; This function calls:
  4992 ;;		_setSteering
  4993 ;; This function is called by:
  4994 ;;		_loop
  4995 ;; This function uses a non-reentrant model
  4996 ;;
  4997                           
  4998                           	psect	text22
  4999  002A5A                     __ptext22:
  5000                           	callstack 0
  5001  002A5A                     _calcSteering:
  5002                           	callstack 19
  5003  002A5A                     
  5004                           ;main.c: 175:     int16_t delta = (int16_t)(distLeft - distRight ) - (int16_t)((0) * 1.4
      +                          142135);
  5005  002A5A  0100               	movlb	0	; () banked
  5006  002A5C  51E4               	movf	_distRight& (0+255),w,b	;volatile
  5007  002A5E  5DE6               	subwf	_distLeft& (0+255),w,b	;volatile
  5008  002A60  6F73               	movwf	calcSteering@delta& (0+255),b
  5009  002A62  51E5               	movf	(_distRight+1)& (0+255),w,b	;volatile
  5010  002A64  59E7               	subwfb	(_distLeft+1)& (0+255),w,b	;volatile
  5011  002A66  6F74               	movwf	(calcSteering@delta+1)& (0+255),b
  5012                           
  5013                           ;main.c: 179:     switch (driveMode){
  5014  002A68  EF5E  F015         	goto	l6673
  5015  002A6C                     l1277:
  5016  002A6C                     l6663:
  5017                           
  5018                           ; BSR set to: 0
  5019                           ;main.c: 184:             if(delta > (30)){
  5020  002A6C  BF74               	btfsc	(calcSteering@delta+1)& (0+255),7,b
  5021  002A6E  EF42  F015         	goto	u5991
  5022  002A72  5174               	movf	(calcSteering@delta+1)& (0+255),w,b
  5023  002A74  E109               	bnz	u5990
  5024  002A76  0E1F               	movlw	31
  5025  002A78  5D73               	subwf	calcSteering@delta& (0+255),w,b
  5026  002A7A  A0D8               	btfss	status,0,c
  5027  002A7C  EF42  F015         	goto	u5991
  5028  002A80  EF44  F015         	goto	u5990
  5029  002A84                     u5991:
  5030  002A84  EF4A  F015         	goto	l6667
  5031  002A88                     u5990:
  5032  002A88                     
  5033                           ; BSR set to: 0
  5034                           ;main.c: 185:                 delta = (30);
  5035  002A88  0E00               	movlw	0
  5036  002A8A  6F74               	movwf	(calcSteering@delta+1)& (0+255),b
  5037  002A8C  0E1E               	movlw	30
  5038  002A8E  6F73               	movwf	calcSteering@delta& (0+255),b
  5039                           
  5040                           ;main.c: 186:             }else if(delta < -(30)){
  5041  002A90  EFC1  F015         	goto	l6697
  5042  002A94                     l6667:
  5043                           
  5044                           ; BSR set to: 0
  5045  002A94  AF74               	btfss	(calcSteering@delta+1)& (0+255),7,b
  5046  002A96  EF56  F015         	goto	u6001
  5047  002A9A  0EE2               	movlw	226
  5048  002A9C  5D73               	subwf	calcSteering@delta& (0+255),w,b
  5049  002A9E  0EFF               	movlw	255
  5050  002AA0  5974               	subwfb	(calcSteering@delta+1)& (0+255),w,b
  5051  002AA2  B0D8               	btfsc	status,0,c
  5052  002AA4  EF56  F015         	goto	u6001
  5053  002AA8  EF58  F015         	goto	u6000
  5054  002AAC                     u6001:
  5055  002AAC  EF7B  F015         	goto	l1282
  5056  002AB0                     u6000:
  5057  002AB0                     
  5058                           ; BSR set to: 0
  5059                           ;main.c: 187:                 delta = -(30);
  5060  002AB0  0EFF               	movlw	255
  5061  002AB2  6F74               	movwf	(calcSteering@delta+1)& (0+255),b
  5062  002AB4  0EE2               	movlw	226
  5063  002AB6  6F73               	movwf	calcSteering@delta& (0+255),b
  5064  002AB8  EFC1  F015         	goto	l6697
  5065  002ABC                     l6673:
  5066                           
  5067                           ; BSR set to: 0
  5068  002ABC  51EC               	movf	_driveMode& (0+255),w,b
  5069  002ABE  6F71               	movwf	??_calcSteering& (0+255),b
  5070  002AC0  6B72               	clrf	(??_calcSteering+1)& (0+255),b
  5071                           
  5072                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5073                           ; Switch size 1, requested type "simple"
  5074                           ; Number of cases is 1, Range of values is 0 to 0
  5075                           ; switch strategies available:
  5076                           ; Name         Instructions Cycles
  5077                           ; simple_byte            4     3 (average)
  5078                           ;	Chosen strategy is simple_byte
  5079  002AC2  5172               	movf	(??_calcSteering+1)& (0+255),w,b
  5080  002AC4  0A00               	xorlw	0	; case 0
  5081  002AC6  B4D8               	btfsc	status,2,c
  5082  002AC8  EF68  F015         	goto	l7017
  5083  002ACC  EFC1  F015         	goto	l6697
  5084  002AD0                     l7017:
  5085                           
  5086                           ; BSR set to: 0
  5087                           ; Switch size 1, requested type "simple"
  5088                           ; Number of cases is 4, Range of values is 0 to 5
  5089                           ; switch strategies available:
  5090                           ; Name         Instructions Cycles
  5091                           ; simple_byte           13     7 (average)
  5092                           ;	Chosen strategy is simple_byte
  5093  002AD0  5171               	movf	??_calcSteering& (0+255),w,b
  5094  002AD2  0A00               	xorlw	0	; case 0
  5095  002AD4  B4D8               	btfsc	status,2,c
  5096  002AD6  EF36  F015         	goto	l6663
  5097  002ADA  0A01               	xorlw	1	; case 1
  5098  002ADC  B4D8               	btfsc	status,2,c
  5099  002ADE  EF36  F015         	goto	l1277
  5100  002AE2  0A05               	xorlw	5	; case 4
  5101  002AE4  B4D8               	btfsc	status,2,c
  5102  002AE6  EF36  F015         	goto	l6663
  5103  002AEA  0A01               	xorlw	1	; case 5
  5104  002AEC  B4D8               	btfsc	status,2,c
  5105  002AEE  EF36  F015         	goto	l6663
  5106  002AF2  EFC1  F015         	goto	l6697
  5107  002AF6                     l1282:
  5108                           
  5109                           ; BSR set to: 0
  5110                           ;main.c: 194:     switch (driveMode){
  5111  002AF6  EFC1  F015         	goto	l6697
  5112  002AFA                     l6675:
  5113                           
  5114                           ; BSR set to: 0
  5115                           ;main.c: 196:             setSteering(delta, Ratio);
  5116  002AFA  C073  F068         	movff	calcSteering@delta,setSteering@steering
  5117  002AFE  C074  F069         	movff	calcSteering@delta+1,setSteering@steering+1
  5118  002B02  0E02               	movlw	2
  5119  002B04  6F6A               	movwf	setSteering@steeringMode& (0+255),b
  5120  002B06  EC93  F013         	call	_setSteering	;wreg free
  5121                           
  5122                           ;main.c: 197:             break;
  5123  002B0A  EFE6  F015         	goto	l1296
  5124  002B0E                     l6677:
  5125                           
  5126                           ; BSR set to: 0
  5127                           ;main.c: 199:             setSteering(delta, Front);
  5128  002B0E  C073  F068         	movff	calcSteering@delta,setSteering@steering
  5129  002B12  C074  F069         	movff	calcSteering@delta+1,setSteering@steering+1
  5130  002B16  0E03               	movlw	3
  5131  002B18  6F6A               	movwf	setSteering@steeringMode& (0+255),b
  5132  002B1A  EC93  F013         	call	_setSteering	;wreg free
  5133                           
  5134                           ;main.c: 200:             break;
  5135  002B1E  EFE6  F015         	goto	l1296
  5136  002B22                     l6679:
  5137                           
  5138                           ; BSR set to: 0
  5139                           ;main.c: 202:             setSteering((40), Inverted);
  5140  002B22  0E00               	movlw	0
  5141  002B24  6F69               	movwf	(setSteering@steering+1)& (0+255),b
  5142  002B26  0E28               	movlw	40
  5143  002B28  6F68               	movwf	setSteering@steering& (0+255),b
  5144  002B2A  0E00               	movlw	0
  5145  002B2C  6F6A               	movwf	setSteering@steeringMode& (0+255),b
  5146  002B2E  EC93  F013         	call	_setSteering	;wreg free
  5147                           
  5148                           ;main.c: 203:             break;
  5149  002B32  EFE6  F015         	goto	l1296
  5150  002B36                     l6683:
  5151                           
  5152                           ; BSR set to: 0
  5153                           ;main.c: 208:             if(curveMode == InCurve){
  5154  002B36  0E02               	movlw	2
  5155  002B38  19EB               	xorwf	_curveMode& (0+255),w,b
  5156  002B3A  A4D8               	btfss	status,2,c
  5157  002B3C  EFA2  F015         	goto	u6011
  5158  002B40  EFA4  F015         	goto	u6010
  5159  002B44                     u6011:
  5160  002B44  EF87  F015         	goto	l6677
  5161  002B48                     u6010:
  5162  002B48                     
  5163                           ; BSR set to: 0
  5164                           ;main.c: 209:                 setSteering((65), Ratio);
  5165  002B48  0E00               	movlw	0
  5166  002B4A  6F69               	movwf	(setSteering@steering+1)& (0+255),b
  5167  002B4C  0E41               	movlw	65
  5168  002B4E  6F68               	movwf	setSteering@steering& (0+255),b
  5169  002B50  0E02               	movlw	2
  5170  002B52  6F6A               	movwf	setSteering@steeringMode& (0+255),b
  5171  002B54  EC93  F013         	call	_setSteering	;wreg free
  5172                           
  5173                           ;main.c: 210:             } else {
  5174  002B58  EFE6  F015         	goto	l1296
  5175  002B5C                     l6689:
  5176                           
  5177                           ; BSR set to: 0
  5178                           ;main.c: 215:             if(curveMode == InCurve){
  5179  002B5C  0E02               	movlw	2
  5180  002B5E  19EB               	xorwf	_curveMode& (0+255),w,b
  5181  002B60  A4D8               	btfss	status,2,c
  5182  002B62  EFB5  F015         	goto	u6021
  5183  002B66  EFB7  F015         	goto	u6020
  5184  002B6A                     u6021:
  5185  002B6A  EF87  F015         	goto	l6677
  5186  002B6E                     u6020:
  5187  002B6E                     
  5188                           ; BSR set to: 0
  5189                           ;main.c: 216:                 setSteering(-(65), Ratio);
  5190  002B6E  0EFF               	movlw	255
  5191  002B70  6F69               	movwf	(setSteering@steering+1)& (0+255),b
  5192  002B72  0EBF               	movlw	191
  5193  002B74  6F68               	movwf	setSteering@steering& (0+255),b
  5194  002B76  0E02               	movlw	2
  5195  002B78  6F6A               	movwf	setSteering@steeringMode& (0+255),b
  5196  002B7A  EC93  F013         	call	_setSteering	;wreg free
  5197                           
  5198                           ;main.c: 217:             } else {
  5199  002B7E  EFE6  F015         	goto	l1296
  5200  002B82                     l6697:
  5201                           
  5202                           ; BSR set to: 0
  5203  002B82  51EC               	movf	_driveMode& (0+255),w,b
  5204  002B84  6F71               	movwf	??_calcSteering& (0+255),b
  5205  002B86  6B72               	clrf	(??_calcSteering+1)& (0+255),b
  5206                           
  5207                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5208                           ; Switch size 1, requested type "simple"
  5209                           ; Number of cases is 1, Range of values is 0 to 0
  5210                           ; switch strategies available:
  5211                           ; Name         Instructions Cycles
  5212                           ; simple_byte            4     3 (average)
  5213                           ;	Chosen strategy is simple_byte
  5214  002B88  5172               	movf	(??_calcSteering+1)& (0+255),w,b
  5215  002B8A  0A00               	xorlw	0	; case 0
  5216  002B8C  B4D8               	btfsc	status,2,c
  5217  002B8E  EFCB  F015         	goto	l7019
  5218  002B92  EFE6  F015         	goto	l1296
  5219  002B96                     l7019:
  5220                           
  5221                           ; BSR set to: 0
  5222                           ; Switch size 1, requested type "simple"
  5223                           ; Number of cases is 6, Range of values is 0 to 5
  5224                           ; switch strategies available:
  5225                           ; Name         Instructions Cycles
  5226                           ; simple_byte           19    10 (average)
  5227                           ;	Chosen strategy is simple_byte
  5228  002B96  5171               	movf	??_calcSteering& (0+255),w,b
  5229  002B98  0A00               	xorlw	0	; case 0
  5230  002B9A  B4D8               	btfsc	status,2,c
  5231  002B9C  EF87  F015         	goto	l6677
  5232  002BA0  0A01               	xorlw	1	; case 1
  5233  002BA2  B4D8               	btfsc	status,2,c
  5234  002BA4  EF7D  F015         	goto	l6675
  5235  002BA8  0A03               	xorlw	3	; case 2
  5236  002BAA  B4D8               	btfsc	status,2,c
  5237  002BAC  EF91  F015         	goto	l6679
  5238  002BB0  0A01               	xorlw	1	; case 3
  5239  002BB2  B4D8               	btfsc	status,2,c
  5240  002BB4  EF91  F015         	goto	l6679
  5241  002BB8  0A07               	xorlw	7	; case 4
  5242  002BBA  B4D8               	btfsc	status,2,c
  5243  002BBC  EF9B  F015         	goto	l6683
  5244  002BC0  0A01               	xorlw	1	; case 5
  5245  002BC2  B4D8               	btfsc	status,2,c
  5246  002BC4  EFAE  F015         	goto	l6689
  5247  002BC8  EFE6  F015         	goto	l1296
  5248  002BCC                     l1296:
  5249  002BCC  0012               	return		;funcret
  5250  002BCE                     __end_of_calcSteering:
  5251                           	callstack 0
  5252                           
  5253 ;; *************** function _setSteering *****************
  5254 ;; Defined at:
  5255 ;;		line 227 in file "main.c"
  5256 ;; Parameters:    Size  Location     Type
  5257 ;;  steering        2    8[BANK0 ] short 
  5258 ;;  steeringMode    1   10[BANK0 ] enum E17299
  5259 ;; Auto vars:     Size  Location     Type
  5260 ;;  steeringB       2   15[BANK0 ] short 
  5261 ;;  steeringF       2   13[BANK0 ] short 
  5262 ;; Return value:  Size  Location     Type
  5263 ;;                  1    wreg      void 
  5264 ;; Registers used:
  5265 ;;		wreg, status,2, status,0, cstack
  5266 ;; Tracked objects:
  5267 ;;		On entry : 0/0
  5268 ;;		On exit  : 0/0
  5269 ;;		Unchanged: 0/0
  5270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5271 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5272 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5273 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5274 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5275 ;;Total ram usage:        9 bytes
  5276 ;; Hardware stack levels used: 1
  5277 ;; Hardware stack levels required when called: 9
  5278 ;; This function calls:
  5279 ;;		_PWM5_LoadDutyValue
  5280 ;;		_PWM6_LoadDutyValue
  5281 ;;		___awdiv
  5282 ;; This function is called by:
  5283 ;;		_loop
  5284 ;;		_calcSteering
  5285 ;; This function uses a non-reentrant model
  5286 ;;
  5287                           
  5288                           	psect	text23
  5289  002726                     __ptext23:
  5290                           	callstack 0
  5291  002726                     _setSteering:
  5292                           	callstack 20
  5293  002726  0E00               	movlw	0
  5294  002728  0100               	movlb	0	; () banked
  5295  00272A  6F70               	movwf	(setSteering@steeringB+1)& (0+255),b
  5296  00272C  0E00               	movlw	0
  5297  00272E  6F6F               	movwf	setSteering@steeringB& (0+255),b
  5298                           
  5299                           ;main.c: 229:     switch(steeringMode){
  5300  002730  EFE8  F013         	goto	l6341
  5301  002734                     l1300:
  5302                           
  5303                           ; BSR set to: 0
  5304                           ;main.c: 231:             steeringF = (+steering);
  5305  002734  C068  F06D         	movff	setSteering@steering,setSteering@steeringF
  5306  002738  C069  F06E         	movff	setSteering@steering+1,setSteering@steeringF+1
  5307                           
  5308                           ;main.c: 232:             steeringB = -steering;
  5309  00273C  C068  F06B         	movff	setSteering@steering,??_setSteering
  5310  002740  C069  F06C         	movff	setSteering@steering+1,??_setSteering+1
  5311  002744  1F6B               	comf	??_setSteering& (0+255),f,b
  5312  002746  1F6C               	comf	(??_setSteering+1)& (0+255),f,b
  5313  002748  4B6B               	infsnz	??_setSteering& (0+255),f,b
  5314  00274A  2B6C               	incf	(??_setSteering+1)& (0+255),f,b
  5315  00274C  C06B  F06F         	movff	??_setSteering,setSteering@steeringB
  5316  002750  C06C  F070         	movff	??_setSteering+1,setSteering@steeringB+1
  5317                           
  5318                           ;main.c: 233:             break;
  5319  002754  EF09  F014         	goto	l6343
  5320  002758                     l1302:
  5321                           
  5322                           ; BSR set to: 0
  5323                           ;main.c: 235:             steeringF = (+steering);
  5324  002758  C068  F06D         	movff	setSteering@steering,setSteering@steeringF
  5325  00275C  C069  F06E         	movff	setSteering@steering+1,setSteering@steeringF+1
  5326                           
  5327                           ;main.c: 236:             steeringB = (+steering);
  5328  002760  C068  F06F         	movff	setSteering@steering,setSteering@steeringB
  5329  002764  C069  F070         	movff	setSteering@steering+1,setSteering@steeringB+1
  5330                           
  5331                           ;main.c: 237:             break;
  5332  002768  EF09  F014         	goto	l6343
  5333  00276C                     l1303:
  5334                           
  5335                           ; BSR set to: 0
  5336                           ;main.c: 239:             steeringF = (+steering);
  5337  00276C  C068  F06D         	movff	setSteering@steering,setSteering@steeringF
  5338  002770  C069  F06E         	movff	setSteering@steering+1,setSteering@steeringF+1
  5339  002774                     
  5340                           ; BSR set to: 0
  5341                           ;main.c: 240:             steeringB = (-steering / (2));
  5342  002774  C068  F060         	movff	setSteering@steering,___awdiv@dividend
  5343  002778  C069  F061         	movff	setSteering@steering+1,___awdiv@dividend+1
  5344  00277C  0EFF               	movlw	255
  5345  00277E  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  5346  002780  0EFE               	movlw	254
  5347  002782  6F62               	movwf	___awdiv@divisor& (0+255),b
  5348  002784  EC7F  F01B         	call	___awdiv	;wreg free
  5349  002788  C060  F06F         	movff	?___awdiv,setSteering@steeringB
  5350  00278C  C061  F070         	movff	?___awdiv+1,setSteering@steeringB+1
  5351                           
  5352                           ;main.c: 241:             break;
  5353  002790  EF09  F014         	goto	l6343
  5354  002794                     l1304:
  5355                           
  5356                           ; BSR set to: 0
  5357                           ;main.c: 243:             steeringF = (+steering);
  5358  002794  C068  F06D         	movff	setSteering@steering,setSteering@steeringF
  5359  002798  C069  F06E         	movff	setSteering@steering+1,setSteering@steeringF+1
  5360  00279C                     
  5361                           ; BSR set to: 0
  5362                           ;main.c: 244:             steeringB = 0;
  5363  00279C  0E00               	movlw	0
  5364  00279E  6F70               	movwf	(setSteering@steeringB+1)& (0+255),b
  5365  0027A0  0E00               	movlw	0
  5366  0027A2  6F6F               	movwf	setSteering@steeringB& (0+255),b
  5367                           
  5368                           ;main.c: 245:             break;
  5369  0027A4  EF09  F014         	goto	l6343
  5370  0027A8                     l6333:
  5371                           
  5372                           ; BSR set to: 0
  5373                           ;main.c: 247:             steeringF = 0;
  5374  0027A8  0E00               	movlw	0
  5375  0027AA  6F6E               	movwf	(setSteering@steeringF+1)& (0+255),b
  5376  0027AC  0E00               	movlw	0
  5377  0027AE  6F6D               	movwf	setSteering@steeringF& (0+255),b
  5378  0027B0                     
  5379                           ; BSR set to: 0
  5380                           ;main.c: 248:             steeringB = (+steering);
  5381  0027B0  C068  F06F         	movff	setSteering@steering,setSteering@steeringB
  5382  0027B4  C069  F070         	movff	setSteering@steering+1,setSteering@steeringB+1
  5383                           
  5384                           ;main.c: 249:             break;
  5385  0027B8  EF09  F014         	goto	l6343
  5386  0027BC                     l6337:
  5387                           
  5388                           ; BSR set to: 0
  5389                           ;main.c: 251:             steeringF = 0;
  5390  0027BC  0E00               	movlw	0
  5391  0027BE  6F6E               	movwf	(setSteering@steeringF+1)& (0+255),b
  5392  0027C0  0E00               	movlw	0
  5393  0027C2  6F6D               	movwf	setSteering@steeringF& (0+255),b
  5394                           
  5395                           ;main.c: 252:             steeringB = 0;
  5396  0027C4  0E00               	movlw	0
  5397  0027C6  6F70               	movwf	(setSteering@steeringB+1)& (0+255),b
  5398  0027C8  0E00               	movlw	0
  5399  0027CA  6F6F               	movwf	setSteering@steeringB& (0+255),b
  5400                           
  5401                           ;main.c: 253:             break;
  5402  0027CC  EF09  F014         	goto	l6343
  5403  0027D0                     l6341:
  5404                           
  5405                           ; BSR set to: 0
  5406  0027D0  516A               	movf	setSteering@steeringMode& (0+255),w,b
  5407  0027D2  6F6B               	movwf	??_setSteering& (0+255),b
  5408  0027D4  6B6C               	clrf	(??_setSteering+1)& (0+255),b
  5409                           
  5410                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5411                           ; Switch size 1, requested type "simple"
  5412                           ; Number of cases is 1, Range of values is 0 to 0
  5413                           ; switch strategies available:
  5414                           ; Name         Instructions Cycles
  5415                           ; simple_byte            4     3 (average)
  5416                           ;	Chosen strategy is simple_byte
  5417  0027D6  516C               	movf	(??_setSteering+1)& (0+255),w,b
  5418  0027D8  0A00               	xorlw	0	; case 0
  5419  0027DA  B4D8               	btfsc	status,2,c
  5420  0027DC  EFF2  F013         	goto	l7021
  5421  0027E0  EFDE  F013         	goto	l6337
  5422  0027E4                     l7021:
  5423                           
  5424                           ; BSR set to: 0
  5425                           ; Switch size 1, requested type "simple"
  5426                           ; Number of cases is 5, Range of values is 0 to 4
  5427                           ; switch strategies available:
  5428                           ; Name         Instructions Cycles
  5429                           ; simple_byte           16     9 (average)
  5430                           ;	Chosen strategy is simple_byte
  5431  0027E4  516B               	movf	??_setSteering& (0+255),w,b
  5432  0027E6  0A00               	xorlw	0	; case 0
  5433  0027E8  B4D8               	btfsc	status,2,c
  5434  0027EA  EF9A  F013         	goto	l1300
  5435  0027EE  0A01               	xorlw	1	; case 1
  5436  0027F0  B4D8               	btfsc	status,2,c
  5437  0027F2  EFAC  F013         	goto	l1302
  5438  0027F6  0A03               	xorlw	3	; case 2
  5439  0027F8  B4D8               	btfsc	status,2,c
  5440  0027FA  EFB6  F013         	goto	l1303
  5441  0027FE  0A01               	xorlw	1	; case 3
  5442  002800  B4D8               	btfsc	status,2,c
  5443  002802  EFCA  F013         	goto	l1304
  5444  002806  0A07               	xorlw	7	; case 4
  5445  002808  B4D8               	btfsc	status,2,c
  5446  00280A  EFD4  F013         	goto	l6333
  5447  00280E  EFDE  F013         	goto	l6337
  5448  002812                     l6343:
  5449                           
  5450                           ;main.c: 256:     if(steeringF > ((65))){
  5451  002812  0100               	movlb	0	; () banked
  5452  002814  BF6E               	btfsc	(setSteering@steeringF+1)& (0+255),7,b
  5453  002816  EF16  F014         	goto	u5491
  5454  00281A  516E               	movf	(setSteering@steeringF+1)& (0+255),w,b
  5455  00281C  E109               	bnz	u5490
  5456  00281E  0E42               	movlw	66
  5457  002820  5D6D               	subwf	setSteering@steeringF& (0+255),w,b
  5458  002822  A0D8               	btfss	status,0,c
  5459  002824  EF16  F014         	goto	u5491
  5460  002828  EF18  F014         	goto	u5490
  5461  00282C                     u5491:
  5462  00282C  EF1E  F014         	goto	l6347
  5463  002830                     u5490:
  5464  002830                     
  5465                           ; BSR set to: 0
  5466                           ;main.c: 257:         steeringF = ((65));
  5467  002830  0E00               	movlw	0
  5468  002832  6F6E               	movwf	(setSteering@steeringF+1)& (0+255),b
  5469  002834  0E41               	movlw	65
  5470  002836  6F6D               	movwf	setSteering@steeringF& (0+255),b
  5471                           
  5472                           ;main.c: 258:     } else if(steeringF < (-(65))){
  5473  002838  EF30  F014         	goto	l6351
  5474  00283C                     l6347:
  5475                           
  5476                           ; BSR set to: 0
  5477  00283C  AF6E               	btfss	(setSteering@steeringF+1)& (0+255),7,b
  5478  00283E  EF2A  F014         	goto	u5501
  5479  002842  0EBF               	movlw	191
  5480  002844  5D6D               	subwf	setSteering@steeringF& (0+255),w,b
  5481  002846  0EFF               	movlw	255
  5482  002848  596E               	subwfb	(setSteering@steeringF+1)& (0+255),w,b
  5483  00284A  B0D8               	btfsc	status,0,c
  5484  00284C  EF2A  F014         	goto	u5501
  5485  002850  EF2C  F014         	goto	u5500
  5486  002854                     u5501:
  5487  002854  EF30  F014         	goto	l6351
  5488  002858                     u5500:
  5489  002858                     
  5490                           ; BSR set to: 0
  5491                           ;main.c: 259:         steeringF = (-(65));
  5492  002858  0EFF               	movlw	255
  5493  00285A  6F6E               	movwf	(setSteering@steeringF+1)& (0+255),b
  5494  00285C  0EBF               	movlw	191
  5495  00285E  6F6D               	movwf	setSteering@steeringF& (0+255),b
  5496  002860                     l6351:
  5497                           
  5498                           ; BSR set to: 0
  5499                           ;main.c: 262:     if(steeringB > ((40))){
  5500  002860  BF70               	btfsc	(setSteering@steeringB+1)& (0+255),7,b
  5501  002862  EF3C  F014         	goto	u5511
  5502  002866  5170               	movf	(setSteering@steeringB+1)& (0+255),w,b
  5503  002868  E109               	bnz	u5510
  5504  00286A  0E29               	movlw	41
  5505  00286C  5D6F               	subwf	setSteering@steeringB& (0+255),w,b
  5506  00286E  A0D8               	btfss	status,0,c
  5507  002870  EF3C  F014         	goto	u5511
  5508  002874  EF3E  F014         	goto	u5510
  5509  002878                     u5511:
  5510  002878  EF44  F014         	goto	l6355
  5511  00287C                     u5510:
  5512  00287C                     
  5513                           ; BSR set to: 0
  5514                           ;main.c: 263:         steeringB = ((40));
  5515  00287C  0E00               	movlw	0
  5516  00287E  6F70               	movwf	(setSteering@steeringB+1)& (0+255),b
  5517  002880  0E28               	movlw	40
  5518  002882  6F6F               	movwf	setSteering@steeringB& (0+255),b
  5519                           
  5520                           ;main.c: 264:     } else if(steeringB < (-(40))){
  5521  002884  EF56  F014         	goto	l6359
  5522  002888                     l6355:
  5523                           
  5524                           ; BSR set to: 0
  5525  002888  AF70               	btfss	(setSteering@steeringB+1)& (0+255),7,b
  5526  00288A  EF50  F014         	goto	u5521
  5527  00288E  0ED8               	movlw	216
  5528  002890  5D6F               	subwf	setSteering@steeringB& (0+255),w,b
  5529  002892  0EFF               	movlw	255
  5530  002894  5970               	subwfb	(setSteering@steeringB+1)& (0+255),w,b
  5531  002896  B0D8               	btfsc	status,0,c
  5532  002898  EF50  F014         	goto	u5521
  5533  00289C  EF52  F014         	goto	u5520
  5534  0028A0                     u5521:
  5535  0028A0  EF56  F014         	goto	l6359
  5536  0028A4                     u5520:
  5537  0028A4                     
  5538                           ; BSR set to: 0
  5539                           ;main.c: 265:         steeringB = (-(40));
  5540  0028A4  0EFF               	movlw	255
  5541  0028A6  6F70               	movwf	(setSteering@steeringB+1)& (0+255),b
  5542  0028A8  0ED8               	movlw	216
  5543  0028AA  6F6F               	movwf	setSteering@steeringB& (0+255),b
  5544  0028AC                     l6359:
  5545                           
  5546                           ; BSR set to: 0
  5547                           ;main.c: 269:     PWM6_LoadDutyValue((uint16_t)((352) + steeringF));
  5548  0028AC  0E60               	movlw	96
  5549  0028AE  256D               	addwf	setSteering@steeringF& (0+255),w,b
  5550  0028B0  6E20               	movwf	PWM6_LoadDutyValue@dutyValue^0,c
  5551  0028B2  0E01               	movlw	1
  5552  0028B4  216E               	addwfc	(setSteering@steeringF+1)& (0+255),w,b
  5553  0028B6  6E21               	movwf	(PWM6_LoadDutyValue@dutyValue+1)^0,c
  5554  0028B8  EC82  F020         	call	_PWM6_LoadDutyValue	;wreg free
  5555  0028BC                     
  5556                           ;main.c: 270:     PWM5_LoadDutyValue((uint16_t)((357) + steeringB));
  5557  0028BC  0E65               	movlw	101
  5558  0028BE  0100               	movlb	0	; () banked
  5559  0028C0  256F               	addwf	setSteering@steeringB& (0+255),w,b
  5560  0028C2  6E20               	movwf	PWM5_LoadDutyValue@dutyValue^0,c
  5561  0028C4  0E01               	movlw	1
  5562  0028C6  2170               	addwfc	(setSteering@steeringB+1)& (0+255),w,b
  5563  0028C8  6E21               	movwf	(PWM5_LoadDutyValue@dutyValue+1)^0,c
  5564  0028CA  EC9D  F020         	call	_PWM5_LoadDutyValue	;wreg free
  5565  0028CE  0012               	return		;funcret
  5566  0028D0                     __end_of_setSteering:
  5567                           	callstack 0
  5568                           
  5569 ;; *************** function _PWM6_LoadDutyValue *****************
  5570 ;; Defined at:
  5571 ;;		line 74 in file "mcc_generated_files/pwm6.c"
  5572 ;; Parameters:    Size  Location     Type
  5573 ;;  dutyValue       2   31[COMRAM] unsigned short 
  5574 ;; Auto vars:     Size  Location     Type
  5575 ;;		None
  5576 ;; Return value:  Size  Location     Type
  5577 ;;                  1    wreg      void 
  5578 ;; Registers used:
  5579 ;;		wreg, status,2, status,0
  5580 ;; Tracked objects:
  5581 ;;		On entry : 0/0
  5582 ;;		On exit  : 0/0
  5583 ;;		Unchanged: 0/0
  5584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5585 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5587 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5588 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5589 ;;Total ram usage:        4 bytes
  5590 ;; Hardware stack levels used: 1
  5591 ;; Hardware stack levels required when called: 8
  5592 ;; This function calls:
  5593 ;;		Nothing
  5594 ;; This function is called by:
  5595 ;;		_setSteering
  5596 ;; This function uses a non-reentrant model
  5597 ;;
  5598                           
  5599                           	psect	text24
  5600  004104                     __ptext24:
  5601                           	callstack 0
  5602  004104                     _PWM6_LoadDutyValue:
  5603                           	callstack 20
  5604  004104                     
  5605                           ;mcc_generated_files/pwm6.c: 74:  void PWM6_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm6.c: 75:  {;mcc_generated_files/pwm6.c: 77:      PWM6DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  5606  004104  C020  F060         	movff	PWM6_LoadDutyValue@dutyValue,??_PWM6_LoadDutyValue
  5607  004108  C021  F061         	movff	PWM6_LoadDutyValue@dutyValue+1,??_PWM6_LoadDutyValue+1
  5608  00410C  0100               	movlb	0	; () banked
  5609  00410E  90D8               	bcf	status,0,c
  5610  004110  3361               	rrcf	(??_PWM6_LoadDutyValue+1)& (0+255),f,b
  5611  004112  3360               	rrcf	??_PWM6_LoadDutyValue& (0+255),f,b
  5612  004114  90D8               	bcf	status,0,c
  5613  004116  3361               	rrcf	(??_PWM6_LoadDutyValue+1)& (0+255),f,b
  5614  004118  3360               	rrcf	??_PWM6_LoadDutyValue& (0+255),f,b
  5615  00411A  5160               	movf	??_PWM6_LoadDutyValue& (0+255),w,b
  5616  00411C  6E69               	movwf	105,c	;volatile
  5617                           
  5618                           ;mcc_generated_files/pwm6.c: 80:      PWM6DCL = (dutyValue & 0x0003)<<6;
  5619  00411E  C020  F060         	movff	PWM6_LoadDutyValue@dutyValue,??_PWM6_LoadDutyValue
  5620  004122  0E03               	movlw	3
  5621  004124  1760               	andwf	??_PWM6_LoadDutyValue& (0+255),f,b
  5622  004126  0E06               	movlw	6
  5623  004128  6F61               	movwf	(??_PWM6_LoadDutyValue+1)& (0+255),b
  5624  00412A                     u5345:
  5625  00412A  90D8               	bcf	status,0,c
  5626  00412C  3760               	rlcf	??_PWM6_LoadDutyValue& (0+255),f,b
  5627  00412E  2F61               	decfsz	(??_PWM6_LoadDutyValue+1)& (0+255),f,b
  5628  004130  EF95  F020         	goto	u5345
  5629  004134  5160               	movf	??_PWM6_LoadDutyValue& (0+255),w,b
  5630  004136  6E68               	movwf	104,c	;volatile
  5631  004138                     
  5632                           ; BSR set to: 0
  5633  004138  0012               	return		;funcret
  5634  00413A                     __end_of_PWM6_LoadDutyValue:
  5635                           	callstack 0
  5636                           
  5637 ;; *************** function _PWM5_LoadDutyValue *****************
  5638 ;; Defined at:
  5639 ;;		line 74 in file "mcc_generated_files/pwm5.c"
  5640 ;; Parameters:    Size  Location     Type
  5641 ;;  dutyValue       2   31[COMRAM] unsigned short 
  5642 ;; Auto vars:     Size  Location     Type
  5643 ;;		None
  5644 ;; Return value:  Size  Location     Type
  5645 ;;                  1    wreg      void 
  5646 ;; Registers used:
  5647 ;;		wreg, status,2, status,0
  5648 ;; Tracked objects:
  5649 ;;		On entry : 0/0
  5650 ;;		On exit  : 0/0
  5651 ;;		Unchanged: 0/0
  5652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5653 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5655 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5656 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5657 ;;Total ram usage:        4 bytes
  5658 ;; Hardware stack levels used: 1
  5659 ;; Hardware stack levels required when called: 8
  5660 ;; This function calls:
  5661 ;;		Nothing
  5662 ;; This function is called by:
  5663 ;;		_setSteering
  5664 ;; This function uses a non-reentrant model
  5665 ;;
  5666                           
  5667                           	psect	text25
  5668  00413A                     __ptext25:
  5669                           	callstack 0
  5670  00413A                     _PWM5_LoadDutyValue:
  5671                           	callstack 20
  5672  00413A                     
  5673                           ;mcc_generated_files/pwm5.c: 74:  void PWM5_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm5.c: 75:  {;mcc_generated_files/pwm5.c: 77:      PWM5DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  5674  00413A  C020  F060         	movff	PWM5_LoadDutyValue@dutyValue,??_PWM5_LoadDutyValue
  5675  00413E  C021  F061         	movff	PWM5_LoadDutyValue@dutyValue+1,??_PWM5_LoadDutyValue+1
  5676  004142  0100               	movlb	0	; () banked
  5677  004144  90D8               	bcf	status,0,c
  5678  004146  3361               	rrcf	(??_PWM5_LoadDutyValue+1)& (0+255),f,b
  5679  004148  3360               	rrcf	??_PWM5_LoadDutyValue& (0+255),f,b
  5680  00414A  90D8               	bcf	status,0,c
  5681  00414C  3361               	rrcf	(??_PWM5_LoadDutyValue+1)& (0+255),f,b
  5682  00414E  3360               	rrcf	??_PWM5_LoadDutyValue& (0+255),f,b
  5683  004150  5160               	movf	??_PWM5_LoadDutyValue& (0+255),w,b
  5684  004152  6E6D               	movwf	109,c	;volatile
  5685                           
  5686                           ;mcc_generated_files/pwm5.c: 80:      PWM5DCL = (dutyValue & 0x0003)<<6;
  5687  004154  C020  F060         	movff	PWM5_LoadDutyValue@dutyValue,??_PWM5_LoadDutyValue
  5688  004158  0E03               	movlw	3
  5689  00415A  1760               	andwf	??_PWM5_LoadDutyValue& (0+255),f,b
  5690  00415C  0E06               	movlw	6
  5691  00415E  6F61               	movwf	(??_PWM5_LoadDutyValue+1)& (0+255),b
  5692  004160                     u5335:
  5693  004160  90D8               	bcf	status,0,c
  5694  004162  3760               	rlcf	??_PWM5_LoadDutyValue& (0+255),f,b
  5695  004164  2F61               	decfsz	(??_PWM5_LoadDutyValue+1)& (0+255),f,b
  5696  004166  EFB0  F020         	goto	u5335
  5697  00416A  5160               	movf	??_PWM5_LoadDutyValue& (0+255),w,b
  5698  00416C  6E6C               	movwf	108,c	;volatile
  5699  00416E                     
  5700                           ; BSR set to: 0
  5701  00416E  0012               	return		;funcret
  5702  004170                     __end_of_PWM5_LoadDutyValue:
  5703                           	callstack 0
  5704                           
  5705 ;; *************** function _calcSpeed *****************
  5706 ;; Defined at:
  5707 ;;		line 273 in file "main.c"
  5708 ;; Parameters:    Size  Location     Type
  5709 ;;		None
  5710 ;; Auto vars:     Size  Location     Type
  5711 ;;  speed           2   75[BANK0 ] short 
  5712 ;; Return value:  Size  Location     Type
  5713 ;;                  1    wreg      void 
  5714 ;; Registers used:
  5715 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5716 ;; Tracked objects:
  5717 ;;		On entry : 0/0
  5718 ;;		On exit  : 0/0
  5719 ;;		Unchanged: 0/0
  5720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5722 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5723 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5724 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5725 ;;Total ram usage:        6 bytes
  5726 ;; Hardware stack levels used: 1
  5727 ;; Hardware stack levels required when called: 9
  5728 ;; This function calls:
  5729 ;;		___fladd
  5730 ;;		___flmul
  5731 ;;		___fltol
  5732 ;;		___xxtofl
  5733 ;; This function is called by:
  5734 ;;		_loop
  5735 ;; This function uses a non-reentrant model
  5736 ;;
  5737                           
  5738                           	psect	text26
  5739  00214A                     __ptext26:
  5740                           	callstack 0
  5741  00214A                     _calcSpeed:
  5742                           	callstack 20
  5743  00214A                     
  5744                           ;main.c: 274:     int16_t speed = 0;
  5745  00214A  0E00               	movlw	0
  5746  00214C  0100               	movlb	0	; () banked
  5747  00214E  6FAC               	movwf	(calcSpeed@speed+1)& (0+255),b
  5748  002150  0E00               	movlw	0
  5749  002152  6FAB               	movwf	calcSpeed@speed& (0+255),b
  5750                           
  5751                           ;main.c: 276:     switch (driveMode){
  5752  002154  EF65  F011         	goto	l6751
  5753  002158                     l6713:
  5754                           
  5755                           ; BSR set to: 0
  5756                           ;main.c: 278:             if(distFront > (40)) {
  5757  002158  51EE               	movf	(_distFront+1)& (0+255),w,b	;volatile
  5758  00215A  E109               	bnz	u6030
  5759  00215C  0E29               	movlw	41
  5760  00215E  5DED               	subwf	_distFront& (0+255),w,b	;volatile
  5761  002160  A0D8               	btfss	status,0,c
  5762  002162  EFB5  F010         	goto	u6031
  5763  002166  EFB7  F010         	goto	u6030
  5764  00216A                     u6031:
  5765  00216A  EFB9  F010         	goto	l6717
  5766  00216E                     u6030:
  5767  00216E                     
  5768                           ; BSR set to: 0
  5769                           ;main.c: 279:                 driveMode = Straight;
  5770  00216E  0E00               	movlw	0
  5771  002170  6FEC               	movwf	_driveMode& (0+255),b
  5772  002172                     l6717:
  5773                           
  5774                           ; BSR set to: 0
  5775                           ;main.c: 282:             if(setSpeed > 0){
  5776  002172  BFDF               	btfsc	(_setSpeed+1)& (0+255),7,b
  5777  002174  EFC4  F010         	goto	u6041
  5778  002178  51DF               	movf	(_setSpeed+1)& (0+255),w,b
  5779  00217A  E108               	bnz	u6040
  5780  00217C  05DE               	decf	_setSpeed& (0+255),w,b
  5781  00217E  A0D8               	btfss	status,0,c
  5782  002180  EFC4  F010         	goto	u6041
  5783  002184  EFC6  F010         	goto	u6040
  5784  002188                     u6041:
  5785  002188  EFD0  F010         	goto	l6723
  5786  00218C                     u6040:
  5787  00218C                     
  5788                           ; BSR set to: 0
  5789                           ;main.c: 283:                 speed = setSpeed;
  5790  00218C  C0DE  F0AB         	movff	_setSpeed,calcSpeed@speed
  5791  002190  C0DF  F0AC         	movff	_setSpeed+1,calcSpeed@speed+1
  5792  002194                     
  5793                           ; BSR set to: 0
  5794                           ;main.c: 284:                 speed -= 2;
  5795  002194  0EFE               	movlw	254
  5796  002196  27AB               	addwf	calcSpeed@speed& (0+255),f,b
  5797  002198  0EFF               	movlw	255
  5798  00219A  23AC               	addwfc	(calcSpeed@speed+1)& (0+255),f,b
  5799                           
  5800                           ;main.c: 285:             }else if( setSpeed > 0 && distFront < (20)){
  5801  00219C  EF8A  F011         	goto	l6753
  5802  0021A0                     l6723:
  5803                           
  5804                           ; BSR set to: 0
  5805  0021A0  BFDF               	btfsc	(_setSpeed+1)& (0+255),7,b
  5806  0021A2  EFDB  F010         	goto	u6051
  5807  0021A6  51DF               	movf	(_setSpeed+1)& (0+255),w,b
  5808  0021A8  E108               	bnz	u6050
  5809  0021AA  05DE               	decf	_setSpeed& (0+255),w,b
  5810  0021AC  A0D8               	btfss	status,0,c
  5811  0021AE  EFDB  F010         	goto	u6051
  5812  0021B2  EFDD  F010         	goto	u6050
  5813  0021B6                     u6051:
  5814  0021B6  EF8A  F011         	goto	l6753
  5815  0021BA                     u6050:
  5816  0021BA                     
  5817                           ; BSR set to: 0
  5818  0021BA  51EE               	movf	(_distFront+1)& (0+255),w,b	;volatile
  5819  0021BC  E107               	bnz	u6061
  5820  0021BE  0E14               	movlw	20
  5821  0021C0  5DED               	subwf	_distFront& (0+255),w,b	;volatile
  5822  0021C2  B0D8               	btfsc	status,0,c
  5823  0021C4  EFE6  F010         	goto	u6061
  5824  0021C8  EFE8  F010         	goto	u6060
  5825  0021CC                     u6061:
  5826  0021CC  EF8A  F011         	goto	l6753
  5827  0021D0                     u6060:
  5828  0021D0                     
  5829                           ; BSR set to: 0
  5830                           ;main.c: 286:                 speed = setSpeed;
  5831  0021D0  C0DE  F0AB         	movff	_setSpeed,calcSpeed@speed
  5832  0021D4  C0DF  F0AC         	movff	_setSpeed+1,calcSpeed@speed+1
  5833  0021D8                     
  5834                           ; BSR set to: 0
  5835                           ;main.c: 287:                 speed -= 4;
  5836  0021D8  0EFC               	movlw	252
  5837  0021DA  27AB               	addwf	calcSpeed@speed& (0+255),f,b
  5838  0021DC  0EFF               	movlw	255
  5839  0021DE  23AC               	addwfc	(calcSpeed@speed+1)& (0+255),f,b
  5840  0021E0  EF8A  F011         	goto	l6753
  5841  0021E4                     l6731:
  5842                           
  5843                           ; BSR set to: 0
  5844                           ;main.c: 291:             if(distFront < (40)) {
  5845  0021E4  51EE               	movf	(_distFront+1)& (0+255),w,b	;volatile
  5846  0021E6  E107               	bnz	u6071
  5847  0021E8  0E28               	movlw	40
  5848  0021EA  5DED               	subwf	_distFront& (0+255),w,b	;volatile
  5849  0021EC  B0D8               	btfsc	status,0,c
  5850  0021EE  EFFB  F010         	goto	u6071
  5851  0021F2  EFFD  F010         	goto	u6070
  5852  0021F6                     u6071:
  5853  0021F6  EFFF  F010         	goto	l6735
  5854  0021FA                     u6070:
  5855  0021FA                     
  5856                           ; BSR set to: 0
  5857                           ;main.c: 292:                 driveMode = Brake;
  5858  0021FA  0E01               	movlw	1
  5859  0021FC  6FEC               	movwf	_driveMode& (0+255),b
  5860  0021FE                     l6735:
  5861                           
  5862                           ; BSR set to: 0
  5863                           ;main.c: 295:             if(distFront > (100)){
  5864  0021FE  51EE               	movf	(_distFront+1)& (0+255),w,b	;volatile
  5865  002200  E109               	bnz	u6080
  5866  002202  0E65               	movlw	101
  5867  002204  5DED               	subwf	_distFront& (0+255),w,b	;volatile
  5868  002206  A0D8               	btfss	status,0,c
  5869  002208  EF08  F011         	goto	u6081
  5870  00220C  EF0A  F011         	goto	u6080
  5871  002210                     u6081:
  5872  002210  EF53  F011         	goto	l6739
  5873  002214                     u6080:
  5874  002214                     
  5875                           ; BSR set to: 0
  5876                           ;main.c: 296:                 speed = (int16_t)((0.75) * (distFront - (100)) + (200));
  5877  002214  0E00               	movlw	0
  5878  002216  6F93               	movwf	___fladd@a& (0+255),b
  5879  002218  0E00               	movlw	0
  5880  00221A  6F94               	movwf	(___fladd@a+1)& (0+255),b
  5881  00221C  0E48               	movlw	72
  5882  00221E  6F95               	movwf	(___fladd@a+2)& (0+255),b
  5883  002220  0E43               	movlw	67
  5884  002222  6F96               	movwf	(___fladd@a+3)& (0+255),b
  5885  002224  0E00               	movlw	0
  5886  002226  6F7A               	movwf	___flmul@a& (0+255),b
  5887  002228  0E00               	movlw	0
  5888  00222A  6F7B               	movwf	(___flmul@a+1)& (0+255),b
  5889  00222C  0E40               	movlw	64
  5890  00222E  6F7C               	movwf	(___flmul@a+2)& (0+255),b
  5891  002230  0E3F               	movlw	63
  5892  002232  6F7D               	movwf	(___flmul@a+3)& (0+255),b
  5893  002234  0E9C               	movlw	156
  5894  002236  6FA7               	movwf	??_calcSpeed& (0+255),b
  5895  002238  0EFF               	movlw	255
  5896  00223A  6FA8               	movwf	(??_calcSpeed+1)& (0+255),b
  5897  00223C  C0ED  F0A9         	movff	_distFront,??_calcSpeed+2	;volatile
  5898  002240  C0EE  F0AA         	movff	_distFront+1,??_calcSpeed+3	;volatile
  5899  002244  51A7               	movf	??_calcSpeed& (0+255),w,b
  5900  002246  27A9               	addwf	(??_calcSpeed+2)& (0+255),f,b
  5901  002248  51A8               	movf	(??_calcSpeed+1)& (0+255),w,b
  5902  00224A  23AA               	addwfc	(??_calcSpeed+3)& (0+255),f,b
  5903  00224C  C0A9  F068         	movff	??_calcSpeed+2,___xxtofl@val
  5904  002250  C0AA  F069         	movff	??_calcSpeed+3,___xxtofl@val+1
  5905  002254  6B6A               	clrf	(___xxtofl@val+2)& (0+255),b
  5906  002256  6B6B               	clrf	(___xxtofl@val+3)& (0+255),b
  5907  002258  0E00               	movlw	0
  5908  00225A  ECB7  F012         	call	___xxtofl
  5909  00225E  C068  F076         	movff	?___xxtofl,___flmul@b
  5910  002262  C069  F077         	movff	?___xxtofl+1,___flmul@b+1
  5911  002266  C06A  F078         	movff	?___xxtofl+2,___flmul@b+2
  5912  00226A  C06B  F079         	movff	?___xxtofl+3,___flmul@b+3
  5913  00226E  EC85  F00A         	call	___flmul	;wreg free
  5914  002272  C076  F08F         	movff	?___flmul,___fladd@b
  5915  002276  C077  F090         	movff	?___flmul+1,___fladd@b+1
  5916  00227A  C078  F091         	movff	?___flmul+2,___fladd@b+2
  5917  00227E  C079  F092         	movff	?___flmul+3,___fladd@b+3
  5918  002282  EC24  F008         	call	___fladd	;wreg free
  5919  002286  C08F  F09F         	movff	?___fladd,___fltol@f1
  5920  00228A  C090  F0A0         	movff	?___fladd+1,___fltol@f1+1
  5921  00228E  C091  F0A1         	movff	?___fladd+2,___fltol@f1+2
  5922  002292  C092  F0A2         	movff	?___fladd+3,___fltol@f1+3
  5923  002296  EC5A  F018         	call	___fltol	;wreg free
  5924  00229A  C09F  F0AB         	movff	?___fltol,calcSpeed@speed
  5925  00229E  C0A0  F0AC         	movff	?___fltol+1,calcSpeed@speed+1
  5926                           
  5927                           ;main.c: 297:             }else{
  5928  0022A2  EF8A  F011         	goto	l6753
  5929  0022A6                     l6739:
  5930                           
  5931                           ; BSR set to: 0
  5932                           ;main.c: 298:                 speed = (200);
  5933  0022A6  0E00               	movlw	0
  5934  0022A8  6FAC               	movwf	(calcSpeed@speed+1)& (0+255),b
  5935  0022AA  0EC8               	movlw	200
  5936  0022AC  6FAB               	movwf	calcSpeed@speed& (0+255),b
  5937  0022AE  EF8A  F011         	goto	l6753
  5938  0022B2                     l6741:
  5939                           
  5940                           ; BSR set to: 0
  5941                           ;main.c: 304:             speed = (-150);
  5942  0022B2  0EFF               	movlw	255
  5943  0022B4  6FAC               	movwf	(calcSpeed@speed+1)& (0+255),b
  5944  0022B6  0E6A               	movlw	106
  5945  0022B8  6FAB               	movwf	calcSpeed@speed& (0+255),b
  5946                           
  5947                           ;main.c: 305:             break;
  5948  0022BA  EF8A  F011         	goto	l6753
  5949  0022BE                     l6745:
  5950                           
  5951                           ; BSR set to: 0
  5952                           ;main.c: 310:             speed = (180);
  5953  0022BE  0E00               	movlw	0
  5954  0022C0  6FAC               	movwf	(calcSpeed@speed+1)& (0+255),b
  5955  0022C2  0EB4               	movlw	180
  5956  0022C4  6FAB               	movwf	calcSpeed@speed& (0+255),b
  5957                           
  5958                           ;main.c: 311:             break;
  5959  0022C6  EF8A  F011         	goto	l6753
  5960  0022CA                     l6751:
  5961                           
  5962                           ; BSR set to: 0
  5963  0022CA  51EC               	movf	_driveMode& (0+255),w,b
  5964  0022CC  6FA7               	movwf	??_calcSpeed& (0+255),b
  5965  0022CE  6BA8               	clrf	(??_calcSpeed+1)& (0+255),b
  5966                           
  5967                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5968                           ; Switch size 1, requested type "simple"
  5969                           ; Number of cases is 1, Range of values is 0 to 0
  5970                           ; switch strategies available:
  5971                           ; Name         Instructions Cycles
  5972                           ; simple_byte            4     3 (average)
  5973                           ;	Chosen strategy is simple_byte
  5974  0022D0  51A8               	movf	(??_calcSpeed+1)& (0+255),w,b
  5975  0022D2  0A00               	xorlw	0	; case 0
  5976  0022D4  B4D8               	btfsc	status,2,c
  5977  0022D6  EF6F  F011         	goto	l7023
  5978  0022DA  EF8A  F011         	goto	l6753
  5979  0022DE                     l7023:
  5980                           
  5981                           ; BSR set to: 0
  5982                           ; Switch size 1, requested type "simple"
  5983                           ; Number of cases is 6, Range of values is 0 to 5
  5984                           ; switch strategies available:
  5985                           ; Name         Instructions Cycles
  5986                           ; simple_byte           19    10 (average)
  5987                           ;	Chosen strategy is simple_byte
  5988  0022DE  51A7               	movf	??_calcSpeed& (0+255),w,b
  5989  0022E0  0A00               	xorlw	0	; case 0
  5990  0022E2  B4D8               	btfsc	status,2,c
  5991  0022E4  EFF2  F010         	goto	l6731
  5992  0022E8  0A01               	xorlw	1	; case 1
  5993  0022EA  B4D8               	btfsc	status,2,c
  5994  0022EC  EFAC  F010         	goto	l6713
  5995  0022F0  0A03               	xorlw	3	; case 2
  5996  0022F2  B4D8               	btfsc	status,2,c
  5997  0022F4  EF59  F011         	goto	l6741
  5998  0022F8  0A01               	xorlw	1	; case 3
  5999  0022FA  B4D8               	btfsc	status,2,c
  6000  0022FC  EF59  F011         	goto	l6741
  6001  002300  0A07               	xorlw	7	; case 4
  6002  002302  B4D8               	btfsc	status,2,c
  6003  002304  EF5F  F011         	goto	l6745
  6004  002308  0A01               	xorlw	1	; case 5
  6005  00230A  B4D8               	btfsc	status,2,c
  6006  00230C  EF5F  F011         	goto	l6745
  6007  002310  EF8A  F011         	goto	l6753
  6008  002314                     l6753:
  6009                           
  6010                           ;main.c: 317:     if(speed > (400)){
  6011  002314  0100               	movlb	0	; () banked
  6012  002316  BFAC               	btfsc	(calcSpeed@speed+1)& (0+255),7,b
  6013  002318  EF97  F011         	goto	u6091
  6014  00231C  0E91               	movlw	145
  6015  00231E  5DAB               	subwf	calcSpeed@speed& (0+255),w,b
  6016  002320  0E01               	movlw	1
  6017  002322  59AC               	subwfb	(calcSpeed@speed+1)& (0+255),w,b
  6018  002324  A0D8               	btfss	status,0,c
  6019  002326  EF97  F011         	goto	u6091
  6020  00232A  EF99  F011         	goto	u6090
  6021  00232E                     u6091:
  6022  00232E  EF9D  F011         	goto	l6757
  6023  002332                     u6090:
  6024  002332                     
  6025                           ; BSR set to: 0
  6026                           ;main.c: 318:         speed = (400);
  6027  002332  0E01               	movlw	1
  6028  002334  6FAC               	movwf	(calcSpeed@speed+1)& (0+255),b
  6029  002336  0E90               	movlw	144
  6030  002338  6FAB               	movwf	calcSpeed@speed& (0+255),b
  6031  00233A                     l6757:
  6032                           
  6033                           ; BSR set to: 0
  6034                           ;main.c: 320:     if(speed < (-200)){
  6035  00233A  AFAC               	btfss	(calcSpeed@speed+1)& (0+255),7,b
  6036  00233C  EFA9  F011         	goto	u6101
  6037  002340  0E38               	movlw	56
  6038  002342  5DAB               	subwf	calcSpeed@speed& (0+255),w,b
  6039  002344  0EFF               	movlw	255
  6040  002346  59AC               	subwfb	(calcSpeed@speed+1)& (0+255),w,b
  6041  002348  B0D8               	btfsc	status,0,c
  6042  00234A  EFA9  F011         	goto	u6101
  6043  00234E  EFAB  F011         	goto	u6100
  6044  002352                     u6101:
  6045  002352  EFAF  F011         	goto	l6761
  6046  002356                     u6100:
  6047  002356                     
  6048                           ; BSR set to: 0
  6049                           ;main.c: 321:         speed = (-200);
  6050  002356  0EFF               	movlw	255
  6051  002358  6FAC               	movwf	(calcSpeed@speed+1)& (0+255),b
  6052  00235A  0E38               	movlw	56
  6053  00235C  6FAB               	movwf	calcSpeed@speed& (0+255),b
  6054  00235E                     l6761:
  6055                           
  6056                           ; BSR set to: 0
  6057                           ;main.c: 323:     setSpeed = speed;
  6058  00235E  C0AB  F0DE         	movff	calcSpeed@speed,_setSpeed
  6059  002362  C0AC  F0DF         	movff	calcSpeed@speed+1,_setSpeed+1
  6060  002366                     
  6061                           ; BSR set to: 0
  6062  002366  0012               	return		;funcret
  6063  002368                     __end_of_calcSpeed:
  6064                           	callstack 0
  6065                           
  6066 ;; *************** function ___fladd *****************
  6067 ;; Defined at:
  6068 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcadd.c"
  6069 ;; Parameters:    Size  Location     Type
  6070 ;;  b               4   47[BANK0 ] void 
  6071 ;;  a               4   51[BANK0 ] void 
  6072 ;; Auto vars:     Size  Location     Type
  6073 ;;  grs             1   62[BANK0 ] unsigned char 
  6074 ;;  bexp            1   61[BANK0 ] unsigned char 
  6075 ;;  aexp            1   60[BANK0 ] unsigned char 
  6076 ;;  signs           1   59[BANK0 ] unsigned char 
  6077 ;; Return value:  Size  Location     Type
  6078 ;;                  4   47[BANK0 ] unsigned char 
  6079 ;; Registers used:
  6080 ;;		wreg, status,2, status,0
  6081 ;; Tracked objects:
  6082 ;;		On entry : 0/0
  6083 ;;		On exit  : 0/0
  6084 ;;		Unchanged: 0/0
  6085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6086 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6087 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6088 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6089 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6090 ;;Total ram usage:       16 bytes
  6091 ;; Hardware stack levels used: 1
  6092 ;; Hardware stack levels required when called: 8
  6093 ;; This function calls:
  6094 ;;		Nothing
  6095 ;; This function is called by:
  6096 ;;		_calcSpeed
  6097 ;; This function uses a non-reentrant model
  6098 ;;
  6099                           
  6100                           	psect	text27
  6101  001048                     __ptext27:
  6102                           	callstack 0
  6103  001048                     ___fladd:
  6104                           	callstack 20
  6105  001048  0100               	movlb	0	; () banked
  6106  00104A  5192               	movf	(___fladd@b+3)& (0+255),w,b
  6107  00104C  0B80               	andlw	128
  6108  00104E  6F9B               	movwf	___fladd@signs& (0+255),b
  6109  001050  5192               	movf	(___fladd@b+3)& (0+255),w,b
  6110  001052  2592               	addwf	(___fladd@b+3)& (0+255),w,b
  6111  001054  6F9D               	movwf	___fladd@bexp& (0+255),b
  6112  001056                     
  6113                           ; BSR set to: 0
  6114  001056  AF91               	btfss	(___fladd@b+2)& (0+255),7,b
  6115  001058  EF30  F008         	goto	u3281
  6116  00105C  EF32  F008         	goto	u3280
  6117  001060                     u3281:
  6118  001060  EF33  F008         	goto	l4749
  6119  001064                     u3280:
  6120  001064                     
  6121                           ; BSR set to: 0
  6122  001064  819D               	bsf	___fladd@bexp& (0+255),0,b
  6123  001066                     l4749:
  6124                           
  6125                           ; BSR set to: 0
  6126  001066  519D               	movf	___fladd@bexp& (0+255),w,b
  6127  001068  B4D8               	btfsc	status,2,c
  6128  00106A  EF39  F008         	goto	u3291
  6129  00106E  EF3B  F008         	goto	u3290
  6130  001072                     u3291:
  6131  001072  EF50  F008         	goto	l4759
  6132  001076                     u3290:
  6133  001076                     
  6134                           ; BSR set to: 0
  6135  001076  299D               	incf	___fladd@bexp& (0+255),w,b
  6136  001078  A4D8               	btfss	status,2,c
  6137  00107A  EF41  F008         	goto	u3301
  6138  00107E  EF43  F008         	goto	u3300
  6139  001082                     u3301:
  6140  001082  EF4B  F008         	goto	l4755
  6141  001086                     u3300:
  6142  001086                     
  6143                           ; BSR set to: 0
  6144  001086  0E00               	movlw	0
  6145  001088  6F8F               	movwf	___fladd@b& (0+255),b
  6146  00108A  0E00               	movlw	0
  6147  00108C  6F90               	movwf	(___fladd@b+1)& (0+255),b
  6148  00108E  0E00               	movlw	0
  6149  001090  6F91               	movwf	(___fladd@b+2)& (0+255),b
  6150  001092  0E00               	movlw	0
  6151  001094  6F92               	movwf	(___fladd@b+3)& (0+255),b
  6152  001096                     l4755:
  6153                           
  6154                           ; BSR set to: 0
  6155  001096  8F91               	bsf	(___fladd@b+2)& (0+255),7,b
  6156  001098                     
  6157                           ; BSR set to: 0
  6158  001098  0E00               	movlw	0
  6159  00109A  6F92               	movwf	(___fladd@b+3)& (0+255),b
  6160  00109C  EF58  F008         	goto	l4761
  6161  0010A0                     l4759:
  6162                           
  6163                           ; BSR set to: 0
  6164  0010A0  0E00               	movlw	0
  6165  0010A2  6F8F               	movwf	___fladd@b& (0+255),b
  6166  0010A4  0E00               	movlw	0
  6167  0010A6  6F90               	movwf	(___fladd@b+1)& (0+255),b
  6168  0010A8  0E00               	movlw	0
  6169  0010AA  6F91               	movwf	(___fladd@b+2)& (0+255),b
  6170  0010AC  0E00               	movlw	0
  6171  0010AE  6F92               	movwf	(___fladd@b+3)& (0+255),b
  6172  0010B0                     l4761:
  6173                           
  6174                           ; BSR set to: 0
  6175  0010B0  5196               	movf	(___fladd@a+3)& (0+255),w,b
  6176  0010B2  0B80               	andlw	128
  6177  0010B4  6F9C               	movwf	___fladd@aexp& (0+255),b
  6178  0010B6                     
  6179                           ; BSR set to: 0
  6180  0010B6  519B               	movf	___fladd@signs& (0+255),w,b
  6181  0010B8  199C               	xorwf	___fladd@aexp& (0+255),w,b
  6182  0010BA  B4D8               	btfsc	status,2,c
  6183  0010BC  EF62  F008         	goto	u3311
  6184  0010C0  EF64  F008         	goto	u3310
  6185  0010C4                     u3311:
  6186  0010C4  EF65  F008         	goto	l4767
  6187  0010C8                     u3310:
  6188  0010C8                     
  6189                           ; BSR set to: 0
  6190  0010C8  8D9B               	bsf	___fladd@signs& (0+255),6,b
  6191  0010CA                     l4767:
  6192                           
  6193                           ; BSR set to: 0
  6194  0010CA  5196               	movf	(___fladd@a+3)& (0+255),w,b
  6195  0010CC  2596               	addwf	(___fladd@a+3)& (0+255),w,b
  6196  0010CE  6F9C               	movwf	___fladd@aexp& (0+255),b
  6197  0010D0                     
  6198                           ; BSR set to: 0
  6199  0010D0  AF95               	btfss	(___fladd@a+2)& (0+255),7,b
  6200  0010D2  EF6D  F008         	goto	u3321
  6201  0010D6  EF6F  F008         	goto	u3320
  6202  0010DA                     u3321:
  6203  0010DA  EF70  F008         	goto	l4773
  6204  0010DE                     u3320:
  6205  0010DE                     
  6206                           ; BSR set to: 0
  6207  0010DE  819C               	bsf	___fladd@aexp& (0+255),0,b
  6208  0010E0                     l4773:
  6209                           
  6210                           ; BSR set to: 0
  6211  0010E0  519C               	movf	___fladd@aexp& (0+255),w,b
  6212  0010E2  B4D8               	btfsc	status,2,c
  6213  0010E4  EF76  F008         	goto	u3331
  6214  0010E8  EF78  F008         	goto	u3330
  6215  0010EC                     u3331:
  6216  0010EC  EF8D  F008         	goto	l4783
  6217  0010F0                     u3330:
  6218  0010F0                     
  6219                           ; BSR set to: 0
  6220  0010F0  299C               	incf	___fladd@aexp& (0+255),w,b
  6221  0010F2  A4D8               	btfss	status,2,c
  6222  0010F4  EF7E  F008         	goto	u3341
  6223  0010F8  EF80  F008         	goto	u3340
  6224  0010FC                     u3341:
  6225  0010FC  EF88  F008         	goto	l4779
  6226  001100                     u3340:
  6227  001100                     
  6228                           ; BSR set to: 0
  6229  001100  0E00               	movlw	0
  6230  001102  6F93               	movwf	___fladd@a& (0+255),b
  6231  001104  0E00               	movlw	0
  6232  001106  6F94               	movwf	(___fladd@a+1)& (0+255),b
  6233  001108  0E00               	movlw	0
  6234  00110A  6F95               	movwf	(___fladd@a+2)& (0+255),b
  6235  00110C  0E00               	movlw	0
  6236  00110E  6F96               	movwf	(___fladd@a+3)& (0+255),b
  6237  001110                     l4779:
  6238                           
  6239                           ; BSR set to: 0
  6240  001110  8F95               	bsf	(___fladd@a+2)& (0+255),7,b
  6241  001112                     
  6242                           ; BSR set to: 0
  6243  001112  0E00               	movlw	0
  6244  001114  6F96               	movwf	(___fladd@a+3)& (0+255),b
  6245  001116  EF95  F008         	goto	l4785
  6246  00111A                     l4783:
  6247                           
  6248                           ; BSR set to: 0
  6249  00111A  0E00               	movlw	0
  6250  00111C  6F93               	movwf	___fladd@a& (0+255),b
  6251  00111E  0E00               	movlw	0
  6252  001120  6F94               	movwf	(___fladd@a+1)& (0+255),b
  6253  001122  0E00               	movlw	0
  6254  001124  6F95               	movwf	(___fladd@a+2)& (0+255),b
  6255  001126  0E00               	movlw	0
  6256  001128  6F96               	movwf	(___fladd@a+3)& (0+255),b
  6257  00112A                     l4785:
  6258                           
  6259                           ; BSR set to: 0
  6260  00112A  519D               	movf	___fladd@bexp& (0+255),w,b
  6261  00112C  5D9C               	subwf	___fladd@aexp& (0+255),w,b
  6262  00112E  B0D8               	btfsc	status,0,c
  6263  001130  EF9C  F008         	goto	u3351
  6264  001134  EF9E  F008         	goto	u3350
  6265  001138                     u3351:
  6266  001138  EFC5  F008         	goto	l4821
  6267  00113C                     u3350:
  6268  00113C                     
  6269                           ; BSR set to: 0
  6270  00113C  AD9B               	btfss	___fladd@signs& (0+255),6,b
  6271  00113E  EFA3  F008         	goto	u3361
  6272  001142  EFA5  F008         	goto	u3360
  6273  001146                     u3361:
  6274  001146  EFA7  F008         	goto	l4791
  6275  00114A                     u3360:
  6276  00114A                     
  6277                           ; BSR set to: 0
  6278  00114A  0E80               	movlw	128
  6279  00114C  1B9B               	xorwf	___fladd@signs& (0+255),f,b
  6280  00114E                     l4791:
  6281                           
  6282                           ; BSR set to: 0
  6283  00114E  C09D  F09E         	movff	___fladd@bexp,___fladd@grs
  6284  001152                     
  6285                           ; BSR set to: 0
  6286  001152  C09C  F09D         	movff	___fladd@aexp,___fladd@bexp
  6287  001156                     
  6288                           ; BSR set to: 0
  6289  001156  C09E  F09C         	movff	___fladd@grs,___fladd@aexp
  6290  00115A                     
  6291                           ; BSR set to: 0
  6292  00115A  C08F  F09E         	movff	___fladd@b,___fladd@grs
  6293  00115E                     
  6294                           ; BSR set to: 0
  6295  00115E  C093  F08F         	movff	___fladd@a,___fladd@b
  6296  001162                     
  6297                           ; BSR set to: 0
  6298  001162  C09E  F093         	movff	___fladd@grs,___fladd@a
  6299  001166                     
  6300                           ; BSR set to: 0
  6301  001166  C090  F09E         	movff	___fladd@b+1,___fladd@grs
  6302  00116A                     
  6303                           ; BSR set to: 0
  6304  00116A  C094  F090         	movff	___fladd@a+1,___fladd@b+1
  6305  00116E                     
  6306                           ; BSR set to: 0
  6307  00116E  C09E  F094         	movff	___fladd@grs,___fladd@a+1
  6308  001172                     
  6309                           ; BSR set to: 0
  6310  001172  C091  F09E         	movff	___fladd@b+2,___fladd@grs
  6311  001176                     
  6312                           ; BSR set to: 0
  6313  001176  C095  F091         	movff	___fladd@a+2,___fladd@b+2
  6314  00117A                     
  6315                           ; BSR set to: 0
  6316  00117A  C09E  F095         	movff	___fladd@grs,___fladd@a+2
  6317  00117E                     
  6318                           ; BSR set to: 0
  6319  00117E  C092  F09E         	movff	___fladd@b+3,___fladd@grs
  6320  001182                     
  6321                           ; BSR set to: 0
  6322  001182  C096  F092         	movff	___fladd@a+3,___fladd@b+3
  6323  001186                     
  6324                           ; BSR set to: 0
  6325  001186  C09E  F096         	movff	___fladd@grs,___fladd@a+3
  6326  00118A                     l4821:
  6327                           
  6328                           ; BSR set to: 0
  6329  00118A  0E00               	movlw	0
  6330  00118C  6F9E               	movwf	___fladd@grs& (0+255),b
  6331  00118E                     
  6332                           ; BSR set to: 0
  6333  00118E  519D               	movf	___fladd@bexp& (0+255),w,b
  6334  001190  C09C  F097         	movff	___fladd@aexp,??___fladd
  6335  001194  6B98               	clrf	(??___fladd+1)& (0+255),b
  6336  001196  5F97               	subwf	??___fladd& (0+255),f,b
  6337  001198  0E00               	movlw	0
  6338  00119A  5B98               	subwfb	(??___fladd+1)& (0+255),f,b
  6339  00119C  BF98               	btfsc	(??___fladd+1)& (0+255),7,b
  6340  00119E  EFDA  F008         	goto	u3371
  6341  0011A2  5198               	movf	(??___fladd+1)& (0+255),w,b
  6342  0011A4  E109               	bnz	u3370
  6343  0011A6  0E1A               	movlw	26
  6344  0011A8  5D97               	subwf	??___fladd& (0+255),w,b
  6345  0011AA  A0D8               	btfss	status,0,c
  6346  0011AC  EFDA  F008         	goto	u3371
  6347  0011B0  EFDC  F008         	goto	u3370
  6348  0011B4                     u3371:
  6349  0011B4  EF13  F009         	goto	l1883
  6350  0011B8                     u3370:
  6351  0011B8                     
  6352                           ; BSR set to: 0
  6353  0011B8  518F               	movf	___fladd@b& (0+255),w,b
  6354  0011BA  1190               	iorwf	(___fladd@b+1)& (0+255),w,b
  6355  0011BC  1191               	iorwf	(___fladd@b+2)& (0+255),w,b
  6356  0011BE  1192               	iorwf	(___fladd@b+3)& (0+255),w,b
  6357  0011C0  A4D8               	btfss	status,2,c
  6358  0011C2  EFE5  F008         	goto	u3381
  6359  0011C6  EFE8  F008         	goto	u3380
  6360  0011CA                     u3381:
  6361  0011CA  0E01               	movlw	1
  6362  0011CC  EFE9  F008         	goto	u3390
  6363  0011D0                     u3380:
  6364  0011D0  0E00               	movlw	0
  6365  0011D2                     u3390:
  6366  0011D2  6F9E               	movwf	___fladd@grs& (0+255),b
  6367  0011D4                     
  6368                           ; BSR set to: 0
  6369  0011D4  0E00               	movlw	0
  6370  0011D6  6F8F               	movwf	___fladd@b& (0+255),b
  6371  0011D8  0E00               	movlw	0
  6372  0011DA  6F90               	movwf	(___fladd@b+1)& (0+255),b
  6373  0011DC  0E00               	movlw	0
  6374  0011DE  6F91               	movwf	(___fladd@b+2)& (0+255),b
  6375  0011E0  0E00               	movlw	0
  6376  0011E2  6F92               	movwf	(___fladd@b+3)& (0+255),b
  6377  0011E4                     
  6378                           ; BSR set to: 0
  6379  0011E4  C09C  F09D         	movff	___fladd@aexp,___fladd@bexp
  6380  0011E8  EF1C  F009         	goto	l1882
  6381  0011EC                     l1884:
  6382                           
  6383                           ; BSR set to: 0
  6384  0011EC  A19E               	btfss	___fladd@grs& (0+255),0,b
  6385  0011EE  EFFB  F008         	goto	u3401
  6386  0011F2  EFFD  F008         	goto	u3400
  6387  0011F6                     u3401:
  6388  0011F6  EF03  F009         	goto	l4833
  6389  0011FA                     u3400:
  6390  0011FA                     
  6391                           ; BSR set to: 0
  6392  0011FA  90D8               	bcf	status,0,c
  6393  0011FC  319E               	rrcf	___fladd@grs& (0+255),w,b
  6394  0011FE  0901               	iorlw	1
  6395  001200  6F9E               	movwf	___fladd@grs& (0+255),b
  6396  001202  EF05  F009         	goto	l4835
  6397  001206                     l4833:
  6398                           
  6399                           ; BSR set to: 0
  6400  001206  90D8               	bcf	status,0,c
  6401  001208  339E               	rrcf	___fladd@grs& (0+255),f,b
  6402  00120A                     l4835:
  6403                           
  6404                           ; BSR set to: 0
  6405  00120A  A18F               	btfss	___fladd@b& (0+255),0,b
  6406  00120C  EF0A  F009         	goto	u3411
  6407  001210  EF0C  F009         	goto	u3410
  6408  001214                     u3411:
  6409  001214  EF0D  F009         	goto	l4839
  6410  001218                     u3410:
  6411  001218                     
  6412                           ; BSR set to: 0
  6413  001218  8F9E               	bsf	___fladd@grs& (0+255),7,b
  6414  00121A                     l4839:
  6415                           
  6416                           ; BSR set to: 0
  6417  00121A  3592               	rlcf	(___fladd@b+3)& (0+255),w,b
  6418  00121C  3392               	rrcf	(___fladd@b+3)& (0+255),f,b
  6419  00121E  3391               	rrcf	(___fladd@b+2)& (0+255),f,b
  6420  001220  3390               	rrcf	(___fladd@b+1)& (0+255),f,b
  6421  001222  338F               	rrcf	___fladd@b& (0+255),f,b
  6422  001224                     
  6423                           ; BSR set to: 0
  6424  001224  2B9D               	incf	___fladd@bexp& (0+255),f,b
  6425  001226                     l1883:
  6426                           
  6427                           ; BSR set to: 0
  6428  001226  519C               	movf	___fladd@aexp& (0+255),w,b
  6429  001228  5D9D               	subwf	___fladd@bexp& (0+255),w,b
  6430  00122A  A0D8               	btfss	status,0,c
  6431  00122C  EF1A  F009         	goto	u3421
  6432  001230  EF1C  F009         	goto	u3420
  6433  001234                     u3421:
  6434  001234  EFF6  F008         	goto	l1884
  6435  001238                     u3420:
  6436  001238                     l1882:
  6437                           
  6438                           ; BSR set to: 0
  6439  001238  BD9B               	btfsc	___fladd@signs& (0+255),6,b
  6440  00123A  EF21  F009         	goto	u3431
  6441  00123E  EF23  F009         	goto	u3430
  6442  001242                     u3431:
  6443  001242  EF63  F009         	goto	l4867
  6444  001246                     u3430:
  6445  001246                     
  6446                           ; BSR set to: 0
  6447  001246  519D               	movf	___fladd@bexp& (0+255),w,b
  6448  001248  A4D8               	btfss	status,2,c
  6449  00124A  EF29  F009         	goto	u3441
  6450  00124E  EF2B  F009         	goto	u3440
  6451  001252                     u3441:
  6452  001252  EF35  F009         	goto	l4849
  6453  001256                     u3440:
  6454  001256                     
  6455                           ; BSR set to: 0
  6456  001256  0E00               	movlw	0
  6457  001258  6F8F               	movwf	?___fladd& (0+255),b
  6458  00125A  0E00               	movlw	0
  6459  00125C  6F90               	movwf	(?___fladd+1)& (0+255),b
  6460  00125E  0E00               	movlw	0
  6461  001260  6F91               	movwf	(?___fladd+2)& (0+255),b
  6462  001262  0E00               	movlw	0
  6463  001264  6F92               	movwf	(?___fladd+3)& (0+255),b
  6464  001266  EF84  F00A         	goto	l1891
  6465  00126A                     l4849:
  6466                           
  6467                           ; BSR set to: 0
  6468  00126A  5193               	movf	___fladd@a& (0+255),w,b
  6469  00126C  278F               	addwf	___fladd@b& (0+255),f,b
  6470  00126E  5194               	movf	(___fladd@a+1)& (0+255),w,b
  6471  001270  2390               	addwfc	(___fladd@b+1)& (0+255),f,b
  6472  001272  5195               	movf	(___fladd@a+2)& (0+255),w,b
  6473  001274  2391               	addwfc	(___fladd@b+2)& (0+255),f,b
  6474  001276  5196               	movf	(___fladd@a+3)& (0+255),w,b
  6475  001278  2392               	addwfc	(___fladd@b+3)& (0+255),f,b
  6476  00127A                     
  6477                           ; BSR set to: 0
  6478  00127A  A192               	btfss	(___fladd@b+3)& (0+255),0,b
  6479  00127C  EF42  F009         	goto	u3451
  6480  001280  EF44  F009         	goto	u3450
  6481  001284                     u3451:
  6482  001284  EFF0  F009         	goto	l4903
  6483  001288                     u3450:
  6484  001288                     
  6485                           ; BSR set to: 0
  6486  001288  A19E               	btfss	___fladd@grs& (0+255),0,b
  6487  00128A  EF49  F009         	goto	u3461
  6488  00128E  EF4B  F009         	goto	u3460
  6489  001292                     u3461:
  6490  001292  EF51  F009         	goto	l4857
  6491  001296                     u3460:
  6492  001296                     
  6493                           ; BSR set to: 0
  6494  001296  90D8               	bcf	status,0,c
  6495  001298  319E               	rrcf	___fladd@grs& (0+255),w,b
  6496  00129A  0901               	iorlw	1
  6497  00129C  6F9E               	movwf	___fladd@grs& (0+255),b
  6498  00129E  EF53  F009         	goto	l4859
  6499  0012A2                     l4857:
  6500                           
  6501                           ; BSR set to: 0
  6502  0012A2  90D8               	bcf	status,0,c
  6503  0012A4  339E               	rrcf	___fladd@grs& (0+255),f,b
  6504  0012A6                     l4859:
  6505                           
  6506                           ; BSR set to: 0
  6507  0012A6  A18F               	btfss	___fladd@b& (0+255),0,b
  6508  0012A8  EF58  F009         	goto	u3471
  6509  0012AC  EF5A  F009         	goto	u3470
  6510  0012B0                     u3471:
  6511  0012B0  EF5B  F009         	goto	l4863
  6512  0012B4                     u3470:
  6513  0012B4                     
  6514                           ; BSR set to: 0
  6515  0012B4  8F9E               	bsf	___fladd@grs& (0+255),7,b
  6516  0012B6                     l4863:
  6517                           
  6518                           ; BSR set to: 0
  6519  0012B6  3592               	rlcf	(___fladd@b+3)& (0+255),w,b
  6520  0012B8  3392               	rrcf	(___fladd@b+3)& (0+255),f,b
  6521  0012BA  3391               	rrcf	(___fladd@b+2)& (0+255),f,b
  6522  0012BC  3390               	rrcf	(___fladd@b+1)& (0+255),f,b
  6523  0012BE  338F               	rrcf	___fladd@b& (0+255),f,b
  6524  0012C0                     
  6525                           ; BSR set to: 0
  6526  0012C0  2B9D               	incf	___fladd@bexp& (0+255),f,b
  6527  0012C2  EFF0  F009         	goto	l4903
  6528  0012C6                     l4867:
  6529                           
  6530                           ; BSR set to: 0
  6531  0012C6  5193               	movf	___fladd@a& (0+255),w,b
  6532  0012C8  5D8F               	subwf	___fladd@b& (0+255),w,b
  6533  0012CA  5194               	movf	(___fladd@a+1)& (0+255),w,b
  6534  0012CC  5990               	subwfb	(___fladd@b+1)& (0+255),w,b
  6535  0012CE  5195               	movf	(___fladd@a+2)& (0+255),w,b
  6536  0012D0  5991               	subwfb	(___fladd@b+2)& (0+255),w,b
  6537  0012D2  5192               	movf	(___fladd@b+3)& (0+255),w,b
  6538  0012D4  0A80               	xorlw	128
  6539  0012D6  6F97               	movwf	??___fladd& (0+255),b
  6540  0012D8  5196               	movf	(___fladd@a+3)& (0+255),w,b
  6541  0012DA  0A80               	xorlw	128
  6542  0012DC  5997               	subwfb	??___fladd& (0+255),w,b
  6543  0012DE  B0D8               	btfsc	status,0,c
  6544  0012E0  EF74  F009         	goto	u3481
  6545  0012E4  EF76  F009         	goto	u3480
  6546  0012E8                     u3481:
  6547  0012E8  EFA1  F009         	goto	l4877
  6548  0012EC                     u3480:
  6549  0012EC                     
  6550                           ; BSR set to: 0
  6551  0012EC  518F               	movf	___fladd@b& (0+255),w,b
  6552  0012EE  5D93               	subwf	___fladd@a& (0+255),w,b
  6553  0012F0  6F97               	movwf	??___fladd& (0+255),b
  6554  0012F2  5190               	movf	(___fladd@b+1)& (0+255),w,b
  6555  0012F4  5994               	subwfb	(___fladd@a+1)& (0+255),w,b
  6556  0012F6  6F98               	movwf	(??___fladd+1)& (0+255),b
  6557  0012F8  5191               	movf	(___fladd@b+2)& (0+255),w,b
  6558  0012FA  5995               	subwfb	(___fladd@a+2)& (0+255),w,b
  6559  0012FC  6F99               	movwf	(??___fladd+2)& (0+255),b
  6560  0012FE  5192               	movf	(___fladd@b+3)& (0+255),w,b
  6561  001300  5996               	subwfb	(___fladd@a+3)& (0+255),w,b
  6562  001302  6F9A               	movwf	(??___fladd+3)& (0+255),b
  6563  001304  0EFF               	movlw	255
  6564  001306  2597               	addwf	??___fladd& (0+255),w,b
  6565  001308  6F8F               	movwf	___fladd@b& (0+255),b
  6566  00130A  0EFF               	movlw	255
  6567  00130C  2198               	addwfc	(??___fladd+1)& (0+255),w,b
  6568  00130E  6F90               	movwf	(___fladd@b+1)& (0+255),b
  6569  001310  0EFF               	movlw	255
  6570  001312  2199               	addwfc	(??___fladd+2)& (0+255),w,b
  6571  001314  6F91               	movwf	(___fladd@b+2)& (0+255),b
  6572  001316  0EFF               	movlw	255
  6573  001318  219A               	addwfc	(??___fladd+3)& (0+255),w,b
  6574  00131A  6F92               	movwf	(___fladd@b+3)& (0+255),b
  6575  00131C  0E80               	movlw	128
  6576  00131E  1B9B               	xorwf	___fladd@signs& (0+255),f,b
  6577  001320                     
  6578                           ; BSR set to: 0
  6579  001320  6D9E               	negf	___fladd@grs& (0+255),b
  6580  001322                     
  6581                           ; BSR set to: 0
  6582  001322  519E               	movf	___fladd@grs& (0+255),w,b
  6583  001324  A4D8               	btfss	status,2,c
  6584  001326  EF97  F009         	goto	u3491
  6585  00132A  EF99  F009         	goto	u3490
  6586  00132E                     u3491:
  6587  00132E  EFA9  F009         	goto	l1899
  6588  001332                     u3490:
  6589  001332                     
  6590                           ; BSR set to: 0
  6591  001332  0E01               	movlw	1
  6592  001334  278F               	addwf	___fladd@b& (0+255),f,b
  6593  001336  0E00               	movlw	0
  6594  001338  2390               	addwfc	(___fladd@b+1)& (0+255),f,b
  6595  00133A  2391               	addwfc	(___fladd@b+2)& (0+255),f,b
  6596  00133C  2392               	addwfc	(___fladd@b+3)& (0+255),f,b
  6597  00133E  EFA9  F009         	goto	l1899
  6598  001342                     l4877:
  6599                           
  6600                           ; BSR set to: 0
  6601  001342  5193               	movf	___fladd@a& (0+255),w,b
  6602  001344  5F8F               	subwf	___fladd@b& (0+255),f,b
  6603  001346  5194               	movf	(___fladd@a+1)& (0+255),w,b
  6604  001348  5B90               	subwfb	(___fladd@b+1)& (0+255),f,b
  6605  00134A  5195               	movf	(___fladd@a+2)& (0+255),w,b
  6606  00134C  5B91               	subwfb	(___fladd@b+2)& (0+255),f,b
  6607  00134E  5196               	movf	(___fladd@a+3)& (0+255),w,b
  6608  001350  5B92               	subwfb	(___fladd@b+3)& (0+255),f,b
  6609  001352                     l1899:
  6610                           
  6611                           ; BSR set to: 0
  6612  001352  518F               	movf	___fladd@b& (0+255),w,b
  6613  001354  1190               	iorwf	(___fladd@b+1)& (0+255),w,b
  6614  001356  1191               	iorwf	(___fladd@b+2)& (0+255),w,b
  6615  001358  1192               	iorwf	(___fladd@b+3)& (0+255),w,b
  6616  00135A  A4D8               	btfss	status,2,c
  6617  00135C  EFB2  F009         	goto	u3501
  6618  001360  EFB4  F009         	goto	u3500
  6619  001364                     u3501:
  6620  001364  EFE9  F009         	goto	l4901
  6621  001368                     u3500:
  6622  001368                     
  6623                           ; BSR set to: 0
  6624  001368  519E               	movf	___fladd@grs& (0+255),w,b
  6625  00136A  A4D8               	btfss	status,2,c
  6626  00136C  EFBA  F009         	goto	u3511
  6627  001370  EFBC  F009         	goto	u3510
  6628  001374                     u3511:
  6629  001374  EFE9  F009         	goto	l4901
  6630  001378                     u3510:
  6631  001378                     
  6632                           ; BSR set to: 0
  6633  001378  0E00               	movlw	0
  6634  00137A  6F8F               	movwf	?___fladd& (0+255),b
  6635  00137C  0E00               	movlw	0
  6636  00137E  6F90               	movwf	(?___fladd+1)& (0+255),b
  6637  001380  0E00               	movlw	0
  6638  001382  6F91               	movwf	(?___fladd+2)& (0+255),b
  6639  001384  0E00               	movlw	0
  6640  001386  6F92               	movwf	(?___fladd+3)& (0+255),b
  6641  001388  EF84  F00A         	goto	l1891
  6642  00138C                     l4885:
  6643                           
  6644                           ; BSR set to: 0
  6645  00138C  90D8               	bcf	status,0,c
  6646  00138E  378F               	rlcf	___fladd@b& (0+255),f,b
  6647  001390  3790               	rlcf	(___fladd@b+1)& (0+255),f,b
  6648  001392  3791               	rlcf	(___fladd@b+2)& (0+255),f,b
  6649  001394  3792               	rlcf	(___fladd@b+3)& (0+255),f,b
  6650  001396                     
  6651                           ; BSR set to: 0
  6652  001396  AF9E               	btfss	___fladd@grs& (0+255),7,b
  6653  001398  EFD0  F009         	goto	u3521
  6654  00139C  EFD2  F009         	goto	u3520
  6655  0013A0                     u3521:
  6656  0013A0  EFD3  F009         	goto	l4891
  6657  0013A4                     u3520:
  6658  0013A4                     
  6659                           ; BSR set to: 0
  6660  0013A4  818F               	bsf	___fladd@b& (0+255),0,b
  6661  0013A6                     l4891:
  6662                           
  6663                           ; BSR set to: 0
  6664  0013A6  A19E               	btfss	___fladd@grs& (0+255),0,b
  6665  0013A8  EFD8  F009         	goto	u3531
  6666  0013AC  EFDA  F009         	goto	u3530
  6667  0013B0                     u3531:
  6668  0013B0  EFDE  F009         	goto	l4895
  6669  0013B4                     u3530:
  6670  0013B4                     
  6671                           ; BSR set to: 0
  6672  0013B4  80D8               	bsf	status,0,c
  6673  0013B6  379E               	rlcf	___fladd@grs& (0+255),f,b
  6674  0013B8  EFE0  F009         	goto	l4897
  6675  0013BC                     l4895:
  6676                           
  6677                           ; BSR set to: 0
  6678  0013BC  90D8               	bcf	status,0,c
  6679  0013BE  379E               	rlcf	___fladd@grs& (0+255),f,b
  6680  0013C0                     l4897:
  6681                           
  6682                           ; BSR set to: 0
  6683  0013C0  519D               	movf	___fladd@bexp& (0+255),w,b
  6684  0013C2  B4D8               	btfsc	status,2,c
  6685  0013C4  EFE6  F009         	goto	u3541
  6686  0013C8  EFE8  F009         	goto	u3540
  6687  0013CC                     u3541:
  6688  0013CC  EFE9  F009         	goto	l4901
  6689  0013D0                     u3540:
  6690  0013D0                     
  6691                           ; BSR set to: 0
  6692  0013D0  079D               	decf	___fladd@bexp& (0+255),f,b
  6693  0013D2                     l4901:
  6694                           
  6695                           ; BSR set to: 0
  6696  0013D2  AF91               	btfss	(___fladd@b+2)& (0+255),7,b
  6697  0013D4  EFEE  F009         	goto	u3551
  6698  0013D8  EFF0  F009         	goto	u3550
  6699  0013DC                     u3551:
  6700  0013DC  EFC6  F009         	goto	l4885
  6701  0013E0                     u3550:
  6702  0013E0                     l4903:
  6703                           
  6704                           ; BSR set to: 0
  6705  0013E0  0E00               	movlw	0
  6706  0013E2  6F9C               	movwf	___fladd@aexp& (0+255),b
  6707  0013E4                     
  6708                           ; BSR set to: 0
  6709  0013E4  AF9E               	btfss	___fladd@grs& (0+255),7,b
  6710  0013E6  EFF7  F009         	goto	u3561
  6711  0013EA  EFF9  F009         	goto	u3560
  6712  0013EE                     u3561:
  6713  0013EE  EF11  F00A         	goto	l1908
  6714  0013F2                     u3560:
  6715  0013F2                     
  6716                           ; BSR set to: 0
  6717  0013F2  C09E  F097         	movff	___fladd@grs,??___fladd
  6718  0013F6  0E7F               	movlw	127
  6719  0013F8  1797               	andwf	??___fladd& (0+255),f,b
  6720  0013FA  B4D8               	btfsc	status,2,c
  6721  0013FC  EF02  F00A         	goto	u3571
  6722  001400  EF04  F00A         	goto	u3570
  6723  001404                     u3571:
  6724  001404  EF08  F00A         	goto	l1909
  6725  001408                     u3570:
  6726  001408                     l4909:
  6727                           
  6728                           ; BSR set to: 0
  6729  001408  0E01               	movlw	1
  6730  00140A  6F9C               	movwf	___fladd@aexp& (0+255),b
  6731  00140C  EF11  F00A         	goto	l1908
  6732  001410                     l1909:
  6733                           
  6734                           ; BSR set to: 0
  6735  001410  A18F               	btfss	___fladd@b& (0+255),0,b
  6736  001412  EF0D  F00A         	goto	u3581
  6737  001416  EF0F  F00A         	goto	u3580
  6738  00141A                     u3581:
  6739  00141A  EF11  F00A         	goto	l1908
  6740  00141E                     u3580:
  6741  00141E  EF04  F00A         	goto	l4909
  6742  001422                     l1908:
  6743                           
  6744                           ; BSR set to: 0
  6745  001422  519C               	movf	___fladd@aexp& (0+255),w,b
  6746  001424  B4D8               	btfsc	status,2,c
  6747  001426  EF17  F00A         	goto	u3591
  6748  00142A  EF19  F00A         	goto	u3590
  6749  00142E                     u3591:
  6750  00142E  EF44  F00A         	goto	l4921
  6751  001432                     u3590:
  6752  001432                     
  6753                           ; BSR set to: 0
  6754  001432  0E01               	movlw	1
  6755  001434  278F               	addwf	___fladd@b& (0+255),f,b
  6756  001436  0E00               	movlw	0
  6757  001438  2390               	addwfc	(___fladd@b+1)& (0+255),f,b
  6758  00143A  2391               	addwfc	(___fladd@b+2)& (0+255),f,b
  6759  00143C  2392               	addwfc	(___fladd@b+3)& (0+255),f,b
  6760  00143E                     
  6761                           ; BSR set to: 0
  6762  00143E  A192               	btfss	(___fladd@b+3)& (0+255),0,b
  6763  001440  EF24  F00A         	goto	u3601
  6764  001444  EF26  F00A         	goto	u3600
  6765  001448                     u3601:
  6766  001448  EF44  F00A         	goto	l4921
  6767  00144C                     u3600:
  6768  00144C                     
  6769                           ; BSR set to: 0
  6770  00144C  C08F  F097         	movff	___fladd@b,??___fladd
  6771  001450  C090  F098         	movff	___fladd@b+1,??___fladd+1
  6772  001454  C091  F099         	movff	___fladd@b+2,??___fladd+2
  6773  001458  C092  F09A         	movff	___fladd@b+3,??___fladd+3
  6774  00145C  359A               	rlcf	(??___fladd+3)& (0+255),w,b
  6775  00145E  339A               	rrcf	(??___fladd+3)& (0+255),f,b
  6776  001460  3399               	rrcf	(??___fladd+2)& (0+255),f,b
  6777  001462  3398               	rrcf	(??___fladd+1)& (0+255),f,b
  6778  001464  3397               	rrcf	??___fladd& (0+255),f,b
  6779  001466  C097  F08F         	movff	??___fladd,___fladd@b
  6780  00146A  C098  F090         	movff	??___fladd+1,___fladd@b+1
  6781  00146E  C099  F091         	movff	??___fladd+2,___fladd@b+2
  6782  001472  C09A  F092         	movff	??___fladd+3,___fladd@b+3
  6783  001476  299D               	incf	___fladd@bexp& (0+255),w,b
  6784  001478  B4D8               	btfsc	status,2,c
  6785  00147A  EF41  F00A         	goto	u3611
  6786  00147E  EF43  F00A         	goto	u3610
  6787  001482                     u3611:
  6788  001482  EF44  F00A         	goto	l4921
  6789  001486                     u3610:
  6790  001486                     
  6791                           ; BSR set to: 0
  6792  001486  2B9D               	incf	___fladd@bexp& (0+255),f,b
  6793  001488                     l4921:
  6794                           
  6795                           ; BSR set to: 0
  6796  001488  299D               	incf	___fladd@bexp& (0+255),w,b
  6797  00148A  B4D8               	btfsc	status,2,c
  6798  00148C  EF4A  F00A         	goto	u3621
  6799  001490  EF4C  F00A         	goto	u3620
  6800  001494                     u3621:
  6801  001494  EF54  F00A         	goto	l4925
  6802  001498                     u3620:
  6803  001498                     
  6804                           ; BSR set to: 0
  6805  001498  519D               	movf	___fladd@bexp& (0+255),w,b
  6806  00149A  A4D8               	btfss	status,2,c
  6807  00149C  EF52  F00A         	goto	u3631
  6808  0014A0  EF54  F00A         	goto	u3630
  6809  0014A4                     u3631:
  6810  0014A4  EF66  F00A         	goto	l4929
  6811  0014A8                     u3630:
  6812  0014A8                     l4925:
  6813                           
  6814                           ; BSR set to: 0
  6815  0014A8  0E00               	movlw	0
  6816  0014AA  6F8F               	movwf	___fladd@b& (0+255),b
  6817  0014AC  0E00               	movlw	0
  6818  0014AE  6F90               	movwf	(___fladd@b+1)& (0+255),b
  6819  0014B0  0E00               	movlw	0
  6820  0014B2  6F91               	movwf	(___fladd@b+2)& (0+255),b
  6821  0014B4  0E00               	movlw	0
  6822  0014B6  6F92               	movwf	(___fladd@b+3)& (0+255),b
  6823  0014B8  519D               	movf	___fladd@bexp& (0+255),w,b
  6824  0014BA  A4D8               	btfss	status,2,c
  6825  0014BC  EF62  F00A         	goto	u3641
  6826  0014C0  EF64  F00A         	goto	u3640
  6827  0014C4                     u3641:
  6828  0014C4  EF66  F00A         	goto	l4929
  6829  0014C8                     u3640:
  6830  0014C8                     
  6831                           ; BSR set to: 0
  6832  0014C8  0E00               	movlw	0
  6833  0014CA  6F9B               	movwf	___fladd@signs& (0+255),b
  6834  0014CC                     l4929:
  6835                           
  6836                           ; BSR set to: 0
  6837  0014CC  A19D               	btfss	___fladd@bexp& (0+255),0,b
  6838  0014CE  EF6B  F00A         	goto	u3651
  6839  0014D2  EF6D  F00A         	goto	u3650
  6840  0014D6                     u3651:
  6841  0014D6  EF70  F00A         	goto	l4933
  6842  0014DA                     u3650:
  6843  0014DA                     
  6844                           ; BSR set to: 0
  6845  0014DA  8F91               	bsf	(___fladd@b+2)& (0+255),7,b
  6846  0014DC  EF71  F00A         	goto	l4935
  6847  0014E0                     l4933:
  6848                           
  6849                           ; BSR set to: 0
  6850  0014E0  9F91               	bcf	(___fladd@b+2)& (0+255),7,b
  6851  0014E2                     l4935:
  6852                           
  6853                           ; BSR set to: 0
  6854  0014E2  90D8               	bcf	status,0,c
  6855  0014E4  319D               	rrcf	___fladd@bexp& (0+255),w,b
  6856  0014E6  6F92               	movwf	(___fladd@b+3)& (0+255),b
  6857  0014E8                     
  6858                           ; BSR set to: 0
  6859  0014E8  AF9B               	btfss	___fladd@signs& (0+255),7,b
  6860  0014EA  EF79  F00A         	goto	u3661
  6861  0014EE  EF7B  F00A         	goto	u3660
  6862  0014F2                     u3661:
  6863  0014F2  EF7C  F00A         	goto	l4941
  6864  0014F6                     u3660:
  6865  0014F6                     
  6866                           ; BSR set to: 0
  6867  0014F6  8F92               	bsf	(___fladd@b+3)& (0+255),7,b
  6868  0014F8                     l4941:
  6869                           
  6870                           ; BSR set to: 0
  6871  0014F8  C08F  F08F         	movff	___fladd@b,?___fladd
  6872  0014FC  C090  F090         	movff	___fladd@b+1,?___fladd+1
  6873  001500  C091  F091         	movff	___fladd@b+2,?___fladd+2
  6874  001504  C092  F092         	movff	___fladd@b+3,?___fladd+3
  6875  001508                     l1891:
  6876                           
  6877                           ; BSR set to: 0
  6878  001508  0012               	return		;funcret
  6879  00150A                     __end_of___fladd:
  6880                           	callstack 0
  6881                           
  6882 ;; *************** function _calcMotorPow *****************
  6883 ;; Defined at:
  6884 ;;		line 326 in file "main.c"
  6885 ;; Parameters:    Size  Location     Type
  6886 ;;		None
  6887 ;; Auto vars:     Size  Location     Type
  6888 ;;  oldSpeedDelt    2   75[BANK0 ] short 
  6889 ;;  setSpeedDelt    2   73[BANK0 ] short 
  6890 ;;  addMPow         1   77[BANK0 ] char 
  6891 ;; Return value:  Size  Location     Type
  6892 ;;                  1    wreg      void 
  6893 ;; Registers used:
  6894 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6895 ;; Tracked objects:
  6896 ;;		On entry : 0/0
  6897 ;;		On exit  : 0/0
  6898 ;;		Unchanged: 0/0
  6899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6901 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6902 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6903 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6904 ;;Total ram usage:        7 bytes
  6905 ;; Hardware stack levels used: 1
  6906 ;; Hardware stack levels required when called: 10
  6907 ;; This function calls:
  6908 ;;		___awdiv
  6909 ;;		___flmul
  6910 ;;		___fltol
  6911 ;;		___xxtofl
  6912 ;;		_actSpeed
  6913 ;;		_setMotor
  6914 ;; This function is called by:
  6915 ;;		_loop
  6916 ;; This function uses a non-reentrant model
  6917 ;;
  6918                           
  6919                           	psect	text28
  6920  002D34                     __ptext28:
  6921                           	callstack 0
  6922  002D34                     _calcMotorPow:
  6923                           	callstack 19
  6924  002D34                     
  6925                           ;main.c: 327:     int16_t setSpeedDelta = setSpeed - currentSpeed;
  6926  002D34  0100               	movlb	0	; () banked
  6927  002D36  51DC               	movf	_currentSpeed& (0+255),w,b
  6928  002D38  5DDE               	subwf	_setSpeed& (0+255),w,b
  6929  002D3A  6FA9               	movwf	calcMotorPow@setSpeedDelta& (0+255),b
  6930  002D3C  51DD               	movf	(_currentSpeed+1)& (0+255),w,b
  6931  002D3E  59DF               	subwfb	(_setSpeed+1)& (0+255),w,b
  6932  002D40  6FAA               	movwf	(calcMotorPow@setSpeedDelta+1)& (0+255),b
  6933                           
  6934                           ;main.c: 328:     int16_t oldSpeedDelta = currentSpeed - oldSpeed;
  6935  002D42  51DA               	movf	_oldSpeed& (0+255),w,b
  6936  002D44  5DDC               	subwf	_currentSpeed& (0+255),w,b
  6937  002D46  6FAB               	movwf	calcMotorPow@oldSpeedDelta& (0+255),b
  6938  002D48  51DB               	movf	(_oldSpeed+1)& (0+255),w,b
  6939  002D4A  59DD               	subwfb	(_currentSpeed+1)& (0+255),w,b
  6940  002D4C  6FAC               	movwf	(calcMotorPow@oldSpeedDelta+1)& (0+255),b
  6941  002D4E                     
  6942                           ; BSR set to: 0
  6943                           ;main.c: 331:     currentSpeed = actSpeed();
  6944  002D4E  EC94  F01C         	call	_actSpeed	;wreg free
  6945  002D52  C020  F0DC         	movff	?_actSpeed,_currentSpeed
  6946  002D56  C021  F0DD         	movff	?_actSpeed+1,_currentSpeed+1
  6947  002D5A                     
  6948                           ;main.c: 335:  addMPow = (int8_t)((0.025) * (setSpeedDelta - (oldSpeedDelta / (2))));
  6949  002D5A  0ECD               	movlw	205
  6950  002D5C  0100               	movlb	0	; () banked
  6951  002D5E  6F7A               	movwf	___flmul@a& (0+255),b
  6952  002D60  0ECC               	movlw	204
  6953  002D62  6F7B               	movwf	(___flmul@a+1)& (0+255),b
  6954  002D64  0ECC               	movlw	204
  6955  002D66  6F7C               	movwf	(___flmul@a+2)& (0+255),b
  6956  002D68  0E3C               	movlw	60
  6957  002D6A  6F7D               	movwf	(___flmul@a+3)& (0+255),b
  6958  002D6C  0E00               	movlw	0
  6959  002D6E  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  6960  002D70  0E02               	movlw	2
  6961  002D72  6F62               	movwf	___awdiv@divisor& (0+255),b
  6962  002D74  C0AB  F060         	movff	calcMotorPow@oldSpeedDelta,___awdiv@dividend
  6963  002D78  C0AC  F061         	movff	calcMotorPow@oldSpeedDelta+1,___awdiv@dividend+1
  6964  002D7C  EC7F  F01B         	call	___awdiv	;wreg free
  6965  002D80  C0A9  F0A7         	movff	calcMotorPow@setSpeedDelta,??_calcMotorPow
  6966  002D84  C0AA  F0A8         	movff	calcMotorPow@setSpeedDelta+1,??_calcMotorPow+1
  6967  002D88  0100               	movlb	0	; () banked
  6968  002D8A  5160               	movf	?___awdiv& (0+255),w,b
  6969  002D8C  5FA7               	subwf	??_calcMotorPow& (0+255),f,b
  6970  002D8E  5161               	movf	(?___awdiv+1)& (0+255),w,b
  6971  002D90  5BA8               	subwfb	(??_calcMotorPow+1)& (0+255),f,b
  6972  002D92  C0A7  F068         	movff	??_calcMotorPow,___xxtofl@val
  6973  002D96  C0A8  F069         	movff	??_calcMotorPow+1,___xxtofl@val+1
  6974  002D9A  0E00               	movlw	0
  6975  002D9C  BF69               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  6976  002D9E  0EFF               	movlw	-1
  6977  002DA0  6F6A               	movwf	(___xxtofl@val+2)& (0+255),b
  6978  002DA2  6F6B               	movwf	(___xxtofl@val+3)& (0+255),b
  6979  002DA4  0E01               	movlw	1
  6980  002DA6  ECB7  F012         	call	___xxtofl
  6981  002DAA  C068  F076         	movff	?___xxtofl,___flmul@b
  6982  002DAE  C069  F077         	movff	?___xxtofl+1,___flmul@b+1
  6983  002DB2  C06A  F078         	movff	?___xxtofl+2,___flmul@b+2
  6984  002DB6  C06B  F079         	movff	?___xxtofl+3,___flmul@b+3
  6985  002DBA  EC85  F00A         	call	___flmul	;wreg free
  6986  002DBE  C076  F09F         	movff	?___flmul,___fltol@f1
  6987  002DC2  C077  F0A0         	movff	?___flmul+1,___fltol@f1+1
  6988  002DC6  C078  F0A1         	movff	?___flmul+2,___fltol@f1+2
  6989  002DCA  C079  F0A2         	movff	?___flmul+3,___fltol@f1+3
  6990  002DCE  EC5A  F018         	call	___fltol	;wreg free
  6991  002DD2  0100               	movlb	0	; () banked
  6992  002DD4  519F               	movf	?___fltol& (0+255),w,b
  6993  002DD6  6FAD               	movwf	calcMotorPow@addMPow& (0+255),b
  6994  002DD8                     
  6995                           ; BSR set to: 0
  6996                           ;main.c: 337:     if(addMPow > (2)){
  6997  002DD8  51AD               	movf	calcMotorPow@addMPow& (0+255),w,b
  6998  002DDA  0A80               	xorlw	128
  6999  002DDC  0F7D               	addlw	-131
  7000  002DDE  A0D8               	btfss	status,0,c
  7001  002DE0  EFF4  F016         	goto	u6111
  7002  002DE4  EFF6  F016         	goto	u6110
  7003  002DE8                     u6111:
  7004  002DE8  EFFA  F016         	goto	l6779
  7005  002DEC                     u6110:
  7006  002DEC                     
  7007                           ; BSR set to: 0
  7008                           ;main.c: 338:         addMPow = (2);
  7009  002DEC  0E02               	movlw	2
  7010  002DEE  6FAD               	movwf	calcMotorPow@addMPow& (0+255),b
  7011                           
  7012                           ;main.c: 339:     }else if(addMPow < -(2)){
  7013  002DF0  EF06  F017         	goto	l6783
  7014  002DF4                     l6779:
  7015                           
  7016                           ; BSR set to: 0
  7017  002DF4  51AD               	movf	calcMotorPow@addMPow& (0+255),w,b
  7018  002DF6  0A80               	xorlw	128
  7019  002DF8  0F82               	addlw	130
  7020  002DFA  B0D8               	btfsc	status,0,c
  7021  002DFC  EF02  F017         	goto	u6121
  7022  002E00  EF04  F017         	goto	u6120
  7023  002E04                     u6121:
  7024  002E04  EF06  F017         	goto	l6783
  7025  002E08                     u6120:
  7026  002E08                     
  7027                           ; BSR set to: 0
  7028                           ;main.c: 340:         addMPow = -(2);
  7029  002E08  0EFE               	movlw	254
  7030  002E0A  6FAD               	movwf	calcMotorPow@addMPow& (0+255),b
  7031  002E0C                     l6783:
  7032                           
  7033                           ; BSR set to: 0
  7034                           ;main.c: 343:  actMotorPow = actMotorPow + addMPow;
  7035  002E0C  51D8               	movf	_actMotorPow& (0+255),w,b
  7036  002E0E  25AD               	addwf	calcMotorPow@addMPow& (0+255),w,b
  7037  002E10  6FD8               	movwf	_actMotorPow& (0+255),b
  7038  002E12  0E00               	movlw	0
  7039  002E14  BFAD               	btfsc	calcMotorPow@addMPow& (0+255),7,b
  7040  002E16  0EFF               	movlw	255
  7041  002E18  21D9               	addwfc	(_actMotorPow+1)& (0+255),w,b
  7042  002E1A  6FD9               	movwf	(_actMotorPow+1)& (0+255),b
  7043  002E1C                     
  7044                           ; BSR set to: 0
  7045                           ;main.c: 345:  if(actMotorPow > (500)){
  7046  002E1C  BFD9               	btfsc	(_actMotorPow+1)& (0+255),7,b
  7047  002E1E  EF1A  F017         	goto	u6131
  7048  002E22  0EF5               	movlw	245
  7049  002E24  5DD8               	subwf	_actMotorPow& (0+255),w,b
  7050  002E26  0E01               	movlw	1
  7051  002E28  59D9               	subwfb	(_actMotorPow+1)& (0+255),w,b
  7052  002E2A  A0D8               	btfss	status,0,c
  7053  002E2C  EF1A  F017         	goto	u6131
  7054  002E30  EF1C  F017         	goto	u6130
  7055  002E34                     u6131:
  7056  002E34  EF22  F017         	goto	l6789
  7057  002E38                     u6130:
  7058  002E38                     
  7059                           ; BSR set to: 0
  7060                           ;main.c: 346:   actMotorPow = (500);
  7061  002E38  0E01               	movlw	1
  7062  002E3A  6FD9               	movwf	(_actMotorPow+1)& (0+255),b
  7063  002E3C  0EF4               	movlw	244
  7064  002E3E  6FD8               	movwf	_actMotorPow& (0+255),b
  7065                           
  7066                           ;main.c: 347:  }else if(actMotorPow < (-300)){
  7067  002E40  EF34  F017         	goto	l6793
  7068  002E44                     l6789:
  7069                           
  7070                           ; BSR set to: 0
  7071  002E44  AFD9               	btfss	(_actMotorPow+1)& (0+255),7,b
  7072  002E46  EF2E  F017         	goto	u6141
  7073  002E4A  0ED4               	movlw	212
  7074  002E4C  5DD8               	subwf	_actMotorPow& (0+255),w,b
  7075  002E4E  0EFE               	movlw	254
  7076  002E50  59D9               	subwfb	(_actMotorPow+1)& (0+255),w,b
  7077  002E52  B0D8               	btfsc	status,0,c
  7078  002E54  EF2E  F017         	goto	u6141
  7079  002E58  EF30  F017         	goto	u6140
  7080  002E5C                     u6141:
  7081  002E5C  EF34  F017         	goto	l6793
  7082  002E60                     u6140:
  7083  002E60                     
  7084                           ; BSR set to: 0
  7085                           ;main.c: 348:   actMotorPow = (-300);
  7086  002E60  0EFE               	movlw	254
  7087  002E62  6FD9               	movwf	(_actMotorPow+1)& (0+255),b
  7088  002E64  0ED4               	movlw	212
  7089  002E66  6FD8               	movwf	_actMotorPow& (0+255),b
  7090  002E68                     l6793:
  7091                           
  7092                           ; BSR set to: 0
  7093                           ;main.c: 351:     setMotor(actMotorPow);
  7094  002E68  C0D8  F062         	movff	_actMotorPow,setMotor@motorPower
  7095  002E6C  C0D9  F063         	movff	_actMotorPow+1,setMotor@motorPower+1
  7096  002E70  ECDA  F019         	call	_setMotor	;wreg free
  7097  002E74                     
  7098                           ;main.c: 353:     oldSpeed = currentSpeed;
  7099  002E74  C0DC  F0DA         	movff	_currentSpeed,_oldSpeed
  7100  002E78  C0DD  F0DB         	movff	_currentSpeed+1,_oldSpeed+1
  7101  002E7C  0012               	return		;funcret
  7102  002E7E                     __end_of_calcMotorPow:
  7103                           	callstack 0
  7104                           
  7105 ;; *************** function _setMotor *****************
  7106 ;; Defined at:
  7107 ;;		line 357 in file "main.c"
  7108 ;; Parameters:    Size  Location     Type
  7109 ;;  motorPower      2    2[BANK0 ] short 
  7110 ;; Auto vars:     Size  Location     Type
  7111 ;;		None
  7112 ;; Return value:  Size  Location     Type
  7113 ;;                  1    wreg      void 
  7114 ;; Registers used:
  7115 ;;		wreg, status,2, status,0, cstack
  7116 ;; Tracked objects:
  7117 ;;		On entry : 0/0
  7118 ;;		On exit  : 0/0
  7119 ;;		Unchanged: 0/0
  7120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7121 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7123 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7124 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7125 ;;Total ram usage:        4 bytes
  7126 ;; Hardware stack levels used: 1
  7127 ;; Hardware stack levels required when called: 9
  7128 ;; This function calls:
  7129 ;;		_PWM7_LoadDutyValue
  7130 ;;		_PWM8_LoadDutyValue
  7131 ;; This function is called by:
  7132 ;;		_calcMotorPow
  7133 ;; This function uses a non-reentrant model
  7134 ;;
  7135                           
  7136                           	psect	text29
  7137  0033B4                     __ptext29:
  7138                           	callstack 0
  7139  0033B4                     _setMotor:
  7140                           	callstack 19
  7141  0033B4                     
  7142                           ;main.c: 358:     if(motorPower > (50)){
  7143  0033B4  0100               	movlb	0	; () banked
  7144  0033B6  BF63               	btfsc	(setMotor@motorPower+1)& (0+255),7,b
  7145  0033B8  EFE7  F019         	goto	u5551
  7146  0033BC  5163               	movf	(setMotor@motorPower+1)& (0+255),w,b
  7147  0033BE  E109               	bnz	u5550
  7148  0033C0  0E33               	movlw	51
  7149  0033C2  5D62               	subwf	setMotor@motorPower& (0+255),w,b
  7150  0033C4  A0D8               	btfss	status,0,c
  7151  0033C6  EFE7  F019         	goto	u5551
  7152  0033CA  EFE9  F019         	goto	u5550
  7153  0033CE                     u5551:
  7154  0033CE  EF09  F01A         	goto	l6393
  7155  0033D2                     u5550:
  7156  0033D2                     
  7157                           ; BSR set to: 0
  7158                           ;main.c: 359:        if(motorPower > (500)){
  7159  0033D2  BF63               	btfsc	(setMotor@motorPower+1)& (0+255),7,b
  7160  0033D4  EFF5  F019         	goto	u5561
  7161  0033D8  0EF5               	movlw	245
  7162  0033DA  5D62               	subwf	setMotor@motorPower& (0+255),w,b
  7163  0033DC  0E01               	movlw	1
  7164  0033DE  5963               	subwfb	(setMotor@motorPower+1)& (0+255),w,b
  7165  0033E0  A0D8               	btfss	status,0,c
  7166  0033E2  EFF5  F019         	goto	u5561
  7167  0033E6  EFF7  F019         	goto	u5560
  7168  0033EA                     u5561:
  7169  0033EA  EFFB  F019         	goto	l6389
  7170  0033EE                     u5560:
  7171  0033EE                     
  7172                           ; BSR set to: 0
  7173                           ;main.c: 360:             motorPower = (500);
  7174  0033EE  0E01               	movlw	1
  7175  0033F0  6F63               	movwf	(setMotor@motorPower+1)& (0+255),b
  7176  0033F2  0EF4               	movlw	244
  7177  0033F4  6F62               	movwf	setMotor@motorPower& (0+255),b
  7178  0033F6                     l6389:
  7179                           
  7180                           ; BSR set to: 0
  7181                           ;main.c: 362:         PWM7_LoadDutyValue((uint16_t)(motorPower));
  7182  0033F6  C062  F020         	movff	setMotor@motorPower,PWM7_LoadDutyValue@dutyValue
  7183  0033FA  C063  F021         	movff	setMotor@motorPower+1,PWM7_LoadDutyValue@dutyValue+1
  7184  0033FE  ECD3  F020         	call	_PWM7_LoadDutyValue	;wreg free
  7185  003402                     
  7186                           ;main.c: 363:         PWM8_LoadDutyValue(0);
  7187  003402  0E00               	movlw	0
  7188  003404  6E21               	movwf	(PWM8_LoadDutyValue@dutyValue+1)^0,c
  7189  003406  0E00               	movlw	0
  7190  003408  6E20               	movwf	PWM8_LoadDutyValue@dutyValue^0,c
  7191  00340A  ECB8  F020         	call	_PWM8_LoadDutyValue	;wreg free
  7192                           
  7193                           ;main.c: 364:     } else if(motorPower < -(50)){
  7194  00340E  EF4C  F01A         	goto	l1351
  7195  003412                     l6393:
  7196                           
  7197                           ; BSR set to: 0
  7198  003412  AF63               	btfss	(setMotor@motorPower+1)& (0+255),7,b
  7199  003414  EF15  F01A         	goto	u5571
  7200  003418  0ECE               	movlw	206
  7201  00341A  5D62               	subwf	setMotor@motorPower& (0+255),w,b
  7202  00341C  0EFF               	movlw	255
  7203  00341E  5963               	subwfb	(setMotor@motorPower+1)& (0+255),w,b
  7204  003420  B0D8               	btfsc	status,0,c
  7205  003422  EF15  F01A         	goto	u5571
  7206  003426  EF17  F01A         	goto	u5570
  7207  00342A                     u5571:
  7208  00342A  EF40  F01A         	goto	l6403
  7209  00342E                     u5570:
  7210  00342E                     
  7211                           ; BSR set to: 0
  7212                           ;main.c: 365:         if(motorPower < (-300)){
  7213  00342E  AF63               	btfss	(setMotor@motorPower+1)& (0+255),7,b
  7214  003430  EF23  F01A         	goto	u5581
  7215  003434  0ED4               	movlw	212
  7216  003436  5D62               	subwf	setMotor@motorPower& (0+255),w,b
  7217  003438  0EFE               	movlw	254
  7218  00343A  5963               	subwfb	(setMotor@motorPower+1)& (0+255),w,b
  7219  00343C  B0D8               	btfsc	status,0,c
  7220  00343E  EF23  F01A         	goto	u5581
  7221  003442  EF25  F01A         	goto	u5580
  7222  003446                     u5581:
  7223  003446  EF29  F01A         	goto	l6399
  7224  00344A                     u5580:
  7225  00344A                     
  7226                           ; BSR set to: 0
  7227                           ;main.c: 366:             motorPower = (-300);
  7228  00344A  0EFE               	movlw	254
  7229  00344C  6F63               	movwf	(setMotor@motorPower+1)& (0+255),b
  7230  00344E  0ED4               	movlw	212
  7231  003450  6F62               	movwf	setMotor@motorPower& (0+255),b
  7232  003452                     l6399:
  7233                           
  7234                           ; BSR set to: 0
  7235                           ;main.c: 368:         PWM7_LoadDutyValue(0);
  7236  003452  0E00               	movlw	0
  7237  003454  6E21               	movwf	(PWM7_LoadDutyValue@dutyValue+1)^0,c
  7238  003456  0E00               	movlw	0
  7239  003458  6E20               	movwf	PWM7_LoadDutyValue@dutyValue^0,c
  7240  00345A  ECD3  F020         	call	_PWM7_LoadDutyValue	;wreg free
  7241  00345E                     
  7242                           ;main.c: 369:         PWM8_LoadDutyValue((uint16_t)(-motorPower));
  7243  00345E  C062  F064         	movff	setMotor@motorPower,??_setMotor
  7244  003462  C063  F065         	movff	setMotor@motorPower+1,??_setMotor+1
  7245  003466  0100               	movlb	0	; () banked
  7246  003468  1F64               	comf	??_setMotor& (0+255),f,b
  7247  00346A  1F65               	comf	(??_setMotor+1)& (0+255),f,b
  7248  00346C  4B64               	infsnz	??_setMotor& (0+255),f,b
  7249  00346E  2B65               	incf	(??_setMotor+1)& (0+255),f,b
  7250  003470  C064  F020         	movff	??_setMotor,PWM8_LoadDutyValue@dutyValue
  7251  003474  C065  F021         	movff	??_setMotor+1,PWM8_LoadDutyValue@dutyValue+1
  7252  003478  ECB8  F020         	call	_PWM8_LoadDutyValue	;wreg free
  7253                           
  7254                           ;main.c: 370:     } else {
  7255  00347C  EF4C  F01A         	goto	l1351
  7256  003480                     l6403:
  7257                           
  7258                           ; BSR set to: 0
  7259                           ;main.c: 371:         PWM7_LoadDutyValue(0);
  7260  003480  0E00               	movlw	0
  7261  003482  6E21               	movwf	(PWM7_LoadDutyValue@dutyValue+1)^0,c
  7262  003484  0E00               	movlw	0
  7263  003486  6E20               	movwf	PWM7_LoadDutyValue@dutyValue^0,c
  7264  003488  ECD3  F020         	call	_PWM7_LoadDutyValue	;wreg free
  7265                           
  7266                           ;main.c: 372:         PWM8_LoadDutyValue(0);
  7267  00348C  0E00               	movlw	0
  7268  00348E  6E21               	movwf	(PWM8_LoadDutyValue@dutyValue+1)^0,c
  7269  003490  0E00               	movlw	0
  7270  003492  6E20               	movwf	PWM8_LoadDutyValue@dutyValue^0,c
  7271  003494  ECB8  F020         	call	_PWM8_LoadDutyValue	;wreg free
  7272  003498                     l1351:
  7273  003498  0012               	return		;funcret
  7274  00349A                     __end_of_setMotor:
  7275                           	callstack 0
  7276                           
  7277 ;; *************** function _PWM8_LoadDutyValue *****************
  7278 ;; Defined at:
  7279 ;;		line 74 in file "mcc_generated_files/pwm8.c"
  7280 ;; Parameters:    Size  Location     Type
  7281 ;;  dutyValue       2   31[COMRAM] unsigned short 
  7282 ;; Auto vars:     Size  Location     Type
  7283 ;;		None
  7284 ;; Return value:  Size  Location     Type
  7285 ;;                  1    wreg      void 
  7286 ;; Registers used:
  7287 ;;		wreg, status,2, status,0
  7288 ;; Tracked objects:
  7289 ;;		On entry : 0/0
  7290 ;;		On exit  : 0/0
  7291 ;;		Unchanged: 0/0
  7292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7293 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7295 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7296 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7297 ;;Total ram usage:        4 bytes
  7298 ;; Hardware stack levels used: 1
  7299 ;; Hardware stack levels required when called: 8
  7300 ;; This function calls:
  7301 ;;		Nothing
  7302 ;; This function is called by:
  7303 ;;		_setMotor
  7304 ;; This function uses a non-reentrant model
  7305 ;;
  7306                           
  7307                           	psect	text30
  7308  004170                     __ptext30:
  7309                           	callstack 0
  7310  004170                     _PWM8_LoadDutyValue:
  7311                           	callstack 19
  7312  004170                     
  7313                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  7314  004170  C020  F060         	movff	PWM8_LoadDutyValue@dutyValue,??_PWM8_LoadDutyValue
  7315  004174  C021  F061         	movff	PWM8_LoadDutyValue@dutyValue+1,??_PWM8_LoadDutyValue+1
  7316  004178  0100               	movlb	0	; () banked
  7317  00417A  90D8               	bcf	status,0,c
  7318  00417C  3361               	rrcf	(??_PWM8_LoadDutyValue+1)& (0+255),f,b
  7319  00417E  3360               	rrcf	??_PWM8_LoadDutyValue& (0+255),f,b
  7320  004180  90D8               	bcf	status,0,c
  7321  004182  3361               	rrcf	(??_PWM8_LoadDutyValue+1)& (0+255),f,b
  7322  004184  3360               	rrcf	??_PWM8_LoadDutyValue& (0+255),f,b
  7323  004186  5160               	movf	??_PWM8_LoadDutyValue& (0+255),w,b
  7324  004188  6E61               	movwf	97,c	;volatile
  7325                           
  7326                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
  7327  00418A  C020  F060         	movff	PWM8_LoadDutyValue@dutyValue,??_PWM8_LoadDutyValue
  7328  00418E  0E03               	movlw	3
  7329  004190  1760               	andwf	??_PWM8_LoadDutyValue& (0+255),f,b
  7330  004192  0E06               	movlw	6
  7331  004194  6F61               	movwf	(??_PWM8_LoadDutyValue+1)& (0+255),b
  7332  004196                     u5325:
  7333  004196  90D8               	bcf	status,0,c
  7334  004198  3760               	rlcf	??_PWM8_LoadDutyValue& (0+255),f,b
  7335  00419A  2F61               	decfsz	(??_PWM8_LoadDutyValue+1)& (0+255),f,b
  7336  00419C  EFCB  F020         	goto	u5325
  7337  0041A0  5160               	movf	??_PWM8_LoadDutyValue& (0+255),w,b
  7338  0041A2  6E60               	movwf	96,c	;volatile
  7339  0041A4                     
  7340                           ; BSR set to: 0
  7341  0041A4  0012               	return		;funcret
  7342  0041A6                     __end_of_PWM8_LoadDutyValue:
  7343                           	callstack 0
  7344                           
  7345 ;; *************** function _PWM7_LoadDutyValue *****************
  7346 ;; Defined at:
  7347 ;;		line 74 in file "mcc_generated_files/pwm7.c"
  7348 ;; Parameters:    Size  Location     Type
  7349 ;;  dutyValue       2   31[COMRAM] unsigned short 
  7350 ;; Auto vars:     Size  Location     Type
  7351 ;;		None
  7352 ;; Return value:  Size  Location     Type
  7353 ;;                  1    wreg      void 
  7354 ;; Registers used:
  7355 ;;		wreg, status,2, status,0
  7356 ;; Tracked objects:
  7357 ;;		On entry : 0/0
  7358 ;;		On exit  : 0/0
  7359 ;;		Unchanged: 0/0
  7360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7361 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7363 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7364 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7365 ;;Total ram usage:        4 bytes
  7366 ;; Hardware stack levels used: 1
  7367 ;; Hardware stack levels required when called: 8
  7368 ;; This function calls:
  7369 ;;		Nothing
  7370 ;; This function is called by:
  7371 ;;		_setMotor
  7372 ;; This function uses a non-reentrant model
  7373 ;;
  7374                           
  7375                           	psect	text31
  7376  0041A6                     __ptext31:
  7377                           	callstack 0
  7378  0041A6                     _PWM7_LoadDutyValue:
  7379                           	callstack 19
  7380  0041A6                     
  7381                           ;mcc_generated_files/pwm7.c: 74:  void PWM7_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm7.c: 75:  {;mcc_generated_files/pwm7.c: 77:      PWM7DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  7382  0041A6  C020  F060         	movff	PWM7_LoadDutyValue@dutyValue,??_PWM7_LoadDutyValue
  7383  0041AA  C021  F061         	movff	PWM7_LoadDutyValue@dutyValue+1,??_PWM7_LoadDutyValue+1
  7384  0041AE  0100               	movlb	0	; () banked
  7385  0041B0  90D8               	bcf	status,0,c
  7386  0041B2  3361               	rrcf	(??_PWM7_LoadDutyValue+1)& (0+255),f,b
  7387  0041B4  3360               	rrcf	??_PWM7_LoadDutyValue& (0+255),f,b
  7388  0041B6  90D8               	bcf	status,0,c
  7389  0041B8  3361               	rrcf	(??_PWM7_LoadDutyValue+1)& (0+255),f,b
  7390  0041BA  3360               	rrcf	??_PWM7_LoadDutyValue& (0+255),f,b
  7391  0041BC  5160               	movf	??_PWM7_LoadDutyValue& (0+255),w,b
  7392  0041BE  6E65               	movwf	101,c	;volatile
  7393                           
  7394                           ;mcc_generated_files/pwm7.c: 80:      PWM7DCL = (dutyValue & 0x0003)<<6;
  7395  0041C0  C020  F060         	movff	PWM7_LoadDutyValue@dutyValue,??_PWM7_LoadDutyValue
  7396  0041C4  0E03               	movlw	3
  7397  0041C6  1760               	andwf	??_PWM7_LoadDutyValue& (0+255),f,b
  7398  0041C8  0E06               	movlw	6
  7399  0041CA  6F61               	movwf	(??_PWM7_LoadDutyValue+1)& (0+255),b
  7400  0041CC                     u5315:
  7401  0041CC  90D8               	bcf	status,0,c
  7402  0041CE  3760               	rlcf	??_PWM7_LoadDutyValue& (0+255),f,b
  7403  0041D0  2F61               	decfsz	(??_PWM7_LoadDutyValue+1)& (0+255),f,b
  7404  0041D2  EFE6  F020         	goto	u5315
  7405  0041D6  5160               	movf	??_PWM7_LoadDutyValue& (0+255),w,b
  7406  0041D8  6E64               	movwf	100,c	;volatile
  7407  0041DA                     
  7408                           ; BSR set to: 0
  7409  0041DA  0012               	return		;funcret
  7410  0041DC                     __end_of_PWM7_LoadDutyValue:
  7411                           	callstack 0
  7412                           
  7413 ;; *************** function _actSpeed *****************
  7414 ;; Defined at:
  7415 ;;		line 69 in file "main.c"
  7416 ;; Parameters:    Size  Location     Type
  7417 ;;		None
  7418 ;; Auto vars:     Size  Location     Type
  7419 ;;  speed           2   14[BANK0 ] short 
  7420 ;; Return value:  Size  Location     Type
  7421 ;;                  2   31[COMRAM] short 
  7422 ;; Registers used:
  7423 ;;		wreg, status,2, status,0, cstack
  7424 ;; Tracked objects:
  7425 ;;		On entry : 0/0
  7426 ;;		On exit  : 0/0
  7427 ;;		Unchanged: 0/0
  7428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7429 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7430 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7432 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7433 ;;Total ram usage:        4 bytes
  7434 ;; Hardware stack levels used: 1
  7435 ;; Hardware stack levels required when called: 9
  7436 ;; This function calls:
  7437 ;;		___aldiv
  7438 ;; This function is called by:
  7439 ;;		_calcMotorPow
  7440 ;; This function uses a non-reentrant model
  7441 ;;
  7442                           
  7443                           	psect	text32
  7444  003928                     __ptext32:
  7445                           	callstack 0
  7446  003928                     _actSpeed:
  7447                           	callstack 19
  7448  003928                     
  7449                           ;main.c: 70:     int16_t speed = 0;
  7450  003928  0E00               	movlw	0
  7451  00392A  0100               	movlb	0	; () banked
  7452  00392C  6F6F               	movwf	(actSpeed@speed+1)& (0+255),b
  7453  00392E  0E00               	movlw	0
  7454  003930  6F6E               	movwf	actSpeed@speed& (0+255),b
  7455  003932                     
  7456                           ; BSR set to: 0
  7457                           ;main.c: 71:     if(smtPeriod){
  7458  003932  5034               	movf	_smtPeriod^0,w,c	;volatile
  7459  003934  1035               	iorwf	(_smtPeriod+1)^0,w,c	;volatile
  7460  003936  1036               	iorwf	(_smtPeriod+2)^0,w,c	;volatile
  7461  003938  1037               	iorwf	(_smtPeriod+3)^0,w,c	;volatile
  7462  00393A  B4D8               	btfsc	status,2,c
  7463  00393C  EFA2  F01C         	goto	u5531
  7464  003940  EFA4  F01C         	goto	u5530
  7465  003944                     u5531:
  7466  003944  EFDC  F01C         	goto	l6379
  7467  003948                     u5530:
  7468  003948                     
  7469                           ; BSR set to: 0
  7470                           ;main.c: 72:         if(CLC3CONbits.LC3OUT){
  7471  003948  013C               	movlb	60	; () banked
  7472  00394A  AB60               	btfss	96,5,b	;volatile
  7473  00394C  EFAA  F01C         	goto	u5541
  7474  003950  EFAC  F01C         	goto	u5540
  7475  003954                     u5541:
  7476  003954  EFC5  F01C         	goto	l6377
  7477  003958                     u5540:
  7478  003958                     
  7479                           ; BSR set to: 60
  7480                           ;main.c: 73:             speed = (int16_t)((int32_t)(500000 / (int32_t)smtPeriod));
  7481  003958  0E20               	movlw	32
  7482  00395A  0100               	movlb	0	; () banked
  7483  00395C  6F60               	movwf	___aldiv@dividend& (0+255),b
  7484  00395E  0EA1               	movlw	161
  7485  003960  6F61               	movwf	(___aldiv@dividend+1)& (0+255),b
  7486  003962  0E07               	movlw	7
  7487  003964  6F62               	movwf	(___aldiv@dividend+2)& (0+255),b
  7488  003966  0E00               	movlw	0
  7489  003968  6F63               	movwf	(___aldiv@dividend+3)& (0+255),b
  7490  00396A  C034  F064         	movff	_smtPeriod,___aldiv@divisor	;volatile
  7491  00396E  C035  F065         	movff	_smtPeriod+1,___aldiv@divisor+1	;volatile
  7492  003972  C036  F066         	movff	_smtPeriod+2,___aldiv@divisor+2	;volatile
  7493  003976  C037  F067         	movff	_smtPeriod+3,___aldiv@divisor+3	;volatile
  7494  00397A  ECD3  F017         	call	___aldiv	;wreg free
  7495  00397E  C060  F06E         	movff	?___aldiv,actSpeed@speed
  7496  003982  C061  F06F         	movff	?___aldiv+1,actSpeed@speed+1
  7497                           
  7498                           ;main.c: 74:         } else {
  7499  003986  EFDC  F01C         	goto	l6379
  7500  00398A                     l6377:
  7501                           
  7502                           ; BSR set to: 60
  7503                           ;main.c: 75:             speed = (int16_t)((int32_t)(-500000 / (int32_t)smtPeriod));
  7504  00398A  0EE0               	movlw	224
  7505  00398C  0100               	movlb	0	; () banked
  7506  00398E  6F60               	movwf	___aldiv@dividend& (0+255),b
  7507  003990  0E5E               	movlw	94
  7508  003992  6F61               	movwf	(___aldiv@dividend+1)& (0+255),b
  7509  003994  0EF8               	movlw	248
  7510  003996  6F62               	movwf	(___aldiv@dividend+2)& (0+255),b
  7511  003998  0EFF               	movlw	255
  7512  00399A  6F63               	movwf	(___aldiv@dividend+3)& (0+255),b
  7513  00399C  C034  F064         	movff	_smtPeriod,___aldiv@divisor	;volatile
  7514  0039A0  C035  F065         	movff	_smtPeriod+1,___aldiv@divisor+1	;volatile
  7515  0039A4  C036  F066         	movff	_smtPeriod+2,___aldiv@divisor+2	;volatile
  7516  0039A8  C037  F067         	movff	_smtPeriod+3,___aldiv@divisor+3	;volatile
  7517  0039AC  ECD3  F017         	call	___aldiv	;wreg free
  7518  0039B0  C060  F06E         	movff	?___aldiv,actSpeed@speed
  7519  0039B4  C061  F06F         	movff	?___aldiv+1,actSpeed@speed+1
  7520  0039B8                     l6379:
  7521                           
  7522                           ;main.c: 78:     return speed;
  7523  0039B8  C06E  F020         	movff	actSpeed@speed,?_actSpeed
  7524  0039BC  C06F  F021         	movff	actSpeed@speed+1,?_actSpeed+1
  7525  0039C0  0012               	return		;funcret
  7526  0039C2                     __end_of_actSpeed:
  7527                           	callstack 0
  7528                           
  7529 ;; *************** function ___aldiv *****************
  7530 ;; Defined at:
  7531 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\aldiv.c"
  7532 ;; Parameters:    Size  Location     Type
  7533 ;;  dividend        4    0[BANK0 ] long 
  7534 ;;  divisor         4    4[BANK0 ] long 
  7535 ;; Auto vars:     Size  Location     Type
  7536 ;;  quotient        4   10[BANK0 ] long 
  7537 ;;  sign            1    9[BANK0 ] unsigned char 
  7538 ;;  counter         1    8[BANK0 ] unsigned char 
  7539 ;; Return value:  Size  Location     Type
  7540 ;;                  4    0[BANK0 ] long 
  7541 ;; Registers used:
  7542 ;;		wreg, status,2, status,0
  7543 ;; Tracked objects:
  7544 ;;		On entry : 0/0
  7545 ;;		On exit  : 0/0
  7546 ;;		Unchanged: 0/0
  7547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7548 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7549 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7551 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7552 ;;Total ram usage:       14 bytes
  7553 ;; Hardware stack levels used: 1
  7554 ;; Hardware stack levels required when called: 8
  7555 ;; This function calls:
  7556 ;;		Nothing
  7557 ;; This function is called by:
  7558 ;;		_actSpeed
  7559 ;; This function uses a non-reentrant model
  7560 ;;
  7561                           
  7562                           	psect	text33
  7563  002FA6                     __ptext33:
  7564                           	callstack 0
  7565  002FA6                     ___aldiv:
  7566                           	callstack 19
  7567  002FA6  0E00               	movlw	0
  7568  002FA8  0100               	movlb	0	; () banked
  7569  002FAA  6F69               	movwf	___aldiv@sign& (0+255),b
  7570  002FAC                     
  7571                           ; BSR set to: 0
  7572  002FAC  BF67               	btfsc	(___aldiv@divisor+3)& (0+255),7,b
  7573  002FAE  EFDD  F017         	goto	u5350
  7574  002FB2  EFDB  F017         	goto	u5351
  7575  002FB6                     u5351:
  7576  002FB6  EFE7  F017         	goto	l6221
  7577  002FBA                     u5350:
  7578  002FBA                     
  7579                           ; BSR set to: 0
  7580  002FBA  1F67               	comf	(___aldiv@divisor+3)& (0+255),f,b
  7581  002FBC  1F66               	comf	(___aldiv@divisor+2)& (0+255),f,b
  7582  002FBE  1F65               	comf	(___aldiv@divisor+1)& (0+255),f,b
  7583  002FC0  6D64               	negf	___aldiv@divisor& (0+255),b
  7584  002FC2  0E00               	movlw	0
  7585  002FC4  2365               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
  7586  002FC6  2366               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
  7587  002FC8  2367               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
  7588  002FCA                     
  7589                           ; BSR set to: 0
  7590  002FCA  0E01               	movlw	1
  7591  002FCC  6F69               	movwf	___aldiv@sign& (0+255),b
  7592  002FCE                     l6221:
  7593                           
  7594                           ; BSR set to: 0
  7595  002FCE  BF63               	btfsc	(___aldiv@dividend+3)& (0+255),7,b
  7596  002FD0  EFEE  F017         	goto	u5360
  7597  002FD4  EFEC  F017         	goto	u5361
  7598  002FD8                     u5361:
  7599  002FD8  EFF8  F017         	goto	l6227
  7600  002FDC                     u5360:
  7601  002FDC                     
  7602                           ; BSR set to: 0
  7603  002FDC  1F63               	comf	(___aldiv@dividend+3)& (0+255),f,b
  7604  002FDE  1F62               	comf	(___aldiv@dividend+2)& (0+255),f,b
  7605  002FE0  1F61               	comf	(___aldiv@dividend+1)& (0+255),f,b
  7606  002FE2  6D60               	negf	___aldiv@dividend& (0+255),b
  7607  002FE4  0E00               	movlw	0
  7608  002FE6  2361               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
  7609  002FE8  2362               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
  7610  002FEA  2363               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
  7611  002FEC                     
  7612                           ; BSR set to: 0
  7613  002FEC  0E01               	movlw	1
  7614  002FEE  1B69               	xorwf	___aldiv@sign& (0+255),f,b
  7615  002FF0                     l6227:
  7616                           
  7617                           ; BSR set to: 0
  7618  002FF0  0E00               	movlw	0
  7619  002FF2  6F6A               	movwf	___aldiv@quotient& (0+255),b
  7620  002FF4  0E00               	movlw	0
  7621  002FF6  6F6B               	movwf	(___aldiv@quotient+1)& (0+255),b
  7622  002FF8  0E00               	movlw	0
  7623  002FFA  6F6C               	movwf	(___aldiv@quotient+2)& (0+255),b
  7624  002FFC  0E00               	movlw	0
  7625  002FFE  6F6D               	movwf	(___aldiv@quotient+3)& (0+255),b
  7626  003000                     
  7627                           ; BSR set to: 0
  7628  003000  5164               	movf	___aldiv@divisor& (0+255),w,b
  7629  003002  1165               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
  7630  003004  1166               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
  7631  003006  1167               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
  7632  003008  B4D8               	btfsc	status,2,c
  7633  00300A  EF09  F018         	goto	u5371
  7634  00300E  EF0B  F018         	goto	u5370
  7635  003012                     u5371:
  7636  003012  EF41  F018         	goto	l6249
  7637  003016                     u5370:
  7638  003016                     
  7639                           ; BSR set to: 0
  7640  003016  0E01               	movlw	1
  7641  003018  6F68               	movwf	___aldiv@counter& (0+255),b
  7642  00301A  EF15  F018         	goto	l6235
  7643  00301E                     l6233:
  7644                           
  7645                           ; BSR set to: 0
  7646  00301E  90D8               	bcf	status,0,c
  7647  003020  3764               	rlcf	___aldiv@divisor& (0+255),f,b
  7648  003022  3765               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
  7649  003024  3766               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
  7650  003026  3767               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
  7651  003028  2B68               	incf	___aldiv@counter& (0+255),f,b
  7652  00302A                     l6235:
  7653                           
  7654                           ; BSR set to: 0
  7655  00302A  AF67               	btfss	(___aldiv@divisor+3)& (0+255),7,b
  7656  00302C  EF1A  F018         	goto	u5381
  7657  003030  EF1C  F018         	goto	u5380
  7658  003034                     u5381:
  7659  003034  EF0F  F018         	goto	l6233
  7660  003038                     u5380:
  7661  003038                     l6237:
  7662                           
  7663                           ; BSR set to: 0
  7664  003038  90D8               	bcf	status,0,c
  7665  00303A  376A               	rlcf	___aldiv@quotient& (0+255),f,b
  7666  00303C  376B               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
  7667  00303E  376C               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
  7668  003040  376D               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
  7669  003042                     
  7670                           ; BSR set to: 0
  7671  003042  5164               	movf	___aldiv@divisor& (0+255),w,b
  7672  003044  5D60               	subwf	___aldiv@dividend& (0+255),w,b
  7673  003046  5165               	movf	(___aldiv@divisor+1)& (0+255),w,b
  7674  003048  5961               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
  7675  00304A  5166               	movf	(___aldiv@divisor+2)& (0+255),w,b
  7676  00304C  5962               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
  7677  00304E  5167               	movf	(___aldiv@divisor+3)& (0+255),w,b
  7678  003050  5963               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
  7679  003052  A0D8               	btfss	status,0,c
  7680  003054  EF2E  F018         	goto	u5391
  7681  003058  EF30  F018         	goto	u5390
  7682  00305C                     u5391:
  7683  00305C  EF39  F018         	goto	l6245
  7684  003060                     u5390:
  7685  003060                     
  7686                           ; BSR set to: 0
  7687  003060  5164               	movf	___aldiv@divisor& (0+255),w,b
  7688  003062  5F60               	subwf	___aldiv@dividend& (0+255),f,b
  7689  003064  5165               	movf	(___aldiv@divisor+1)& (0+255),w,b
  7690  003066  5B61               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
  7691  003068  5166               	movf	(___aldiv@divisor+2)& (0+255),w,b
  7692  00306A  5B62               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
  7693  00306C  5167               	movf	(___aldiv@divisor+3)& (0+255),w,b
  7694  00306E  5B63               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
  7695  003070                     
  7696                           ; BSR set to: 0
  7697  003070  816A               	bsf	___aldiv@quotient& (0+255),0,b
  7698  003072                     l6245:
  7699                           
  7700                           ; BSR set to: 0
  7701  003072  90D8               	bcf	status,0,c
  7702  003074  3367               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
  7703  003076  3366               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
  7704  003078  3365               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
  7705  00307A  3364               	rrcf	___aldiv@divisor& (0+255),f,b
  7706  00307C                     
  7707                           ; BSR set to: 0
  7708  00307C  2F68               	decfsz	___aldiv@counter& (0+255),f,b
  7709  00307E  EF1C  F018         	goto	l6237
  7710  003082                     l6249:
  7711                           
  7712                           ; BSR set to: 0
  7713  003082  5169               	movf	___aldiv@sign& (0+255),w,b
  7714  003084  B4D8               	btfsc	status,2,c
  7715  003086  EF47  F018         	goto	u5401
  7716  00308A  EF49  F018         	goto	u5400
  7717  00308E                     u5401:
  7718  00308E  EF51  F018         	goto	l6253
  7719  003092                     u5400:
  7720  003092                     
  7721                           ; BSR set to: 0
  7722  003092  1F6D               	comf	(___aldiv@quotient+3)& (0+255),f,b
  7723  003094  1F6C               	comf	(___aldiv@quotient+2)& (0+255),f,b
  7724  003096  1F6B               	comf	(___aldiv@quotient+1)& (0+255),f,b
  7725  003098  6D6A               	negf	___aldiv@quotient& (0+255),b
  7726  00309A  0E00               	movlw	0
  7727  00309C  236B               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
  7728  00309E  236C               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
  7729  0030A0  236D               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
  7730  0030A2                     l6253:
  7731                           
  7732                           ; BSR set to: 0
  7733  0030A2  C06A  F060         	movff	___aldiv@quotient,?___aldiv
  7734  0030A6  C06B  F061         	movff	___aldiv@quotient+1,?___aldiv+1
  7735  0030AA  C06C  F062         	movff	___aldiv@quotient+2,?___aldiv+2
  7736  0030AE  C06D  F063         	movff	___aldiv@quotient+3,?___aldiv+3
  7737  0030B2                     
  7738                           ; BSR set to: 0
  7739  0030B2  0012               	return		;funcret
  7740  0030B4                     __end_of___aldiv:
  7741                           	callstack 0
  7742                           
  7743 ;; *************** function ___xxtofl *****************
  7744 ;; Defined at:
  7745 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\xxtofl.c"
  7746 ;; Parameters:    Size  Location     Type
  7747 ;;  sign            1    wreg     unsigned char 
  7748 ;;  val             4    8[BANK0 ] long 
  7749 ;; Auto vars:     Size  Location     Type
  7750 ;;  sign            1   16[BANK0 ] unsigned char 
  7751 ;;  arg             4   18[BANK0 ] unsigned long 
  7752 ;;  exp             1   17[BANK0 ] unsigned char 
  7753 ;; Return value:  Size  Location     Type
  7754 ;;                  4    8[BANK0 ] unsigned char 
  7755 ;; Registers used:
  7756 ;;		wreg, status,2, status,0
  7757 ;; Tracked objects:
  7758 ;;		On entry : 0/0
  7759 ;;		On exit  : 0/0
  7760 ;;		Unchanged: 0/0
  7761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7762 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7763 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7764 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7765 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7766 ;;Total ram usage:       14 bytes
  7767 ;; Hardware stack levels used: 1
  7768 ;; Hardware stack levels required when called: 8
  7769 ;; This function calls:
  7770 ;;		Nothing
  7771 ;; This function is called by:
  7772 ;;		_loop
  7773 ;;		_calcSpeed
  7774 ;;		_calcMotorPow
  7775 ;; This function uses a non-reentrant model
  7776 ;;
  7777                           
  7778                           	psect	text34
  7779  00256E                     __ptext34:
  7780                           	callstack 0
  7781  00256E                     ___xxtofl:
  7782                           	callstack 20
  7783                           
  7784                           ; BSR set to: 0
  7785                           ;incstack = 0
  7786                           ;___xxtofl@sign stored from wreg
  7787  00256E  0100               	movlb	0	; () banked
  7788  002570  6F70               	movwf	___xxtofl@sign& (0+255),b
  7789  002572  0100               	movlb	0	; () banked
  7790  002574  5170               	movf	___xxtofl@sign& (0+255),w,b
  7791  002576  B4D8               	btfsc	status,2,c
  7792  002578  EFC0  F012         	goto	u5781
  7793  00257C  EFC2  F012         	goto	u5780
  7794  002580                     u5781:
  7795  002580  EFE4  F012         	goto	l2009
  7796  002584                     u5780:
  7797  002584                     
  7798                           ; BSR set to: 0
  7799  002584  BF6B               	btfsc	(___xxtofl@val+3)& (0+255),7,b
  7800  002586  EFC9  F012         	goto	u5790
  7801  00258A  EFC7  F012         	goto	u5791
  7802  00258E                     u5791:
  7803  00258E  EFE4  F012         	goto	l2009
  7804  002592                     u5790:
  7805  002592                     
  7806                           ; BSR set to: 0
  7807  002592  C068  F06C         	movff	___xxtofl@val,??___xxtofl
  7808  002596  C069  F06D         	movff	___xxtofl@val+1,??___xxtofl+1
  7809  00259A  C06A  F06E         	movff	___xxtofl@val+2,??___xxtofl+2
  7810  00259E  C06B  F06F         	movff	___xxtofl@val+3,??___xxtofl+3
  7811  0025A2  1F6C               	comf	??___xxtofl& (0+255),f,b
  7812  0025A4  1F6D               	comf	(??___xxtofl+1)& (0+255),f,b
  7813  0025A6  1F6E               	comf	(??___xxtofl+2)& (0+255),f,b
  7814  0025A8  1F6F               	comf	(??___xxtofl+3)& (0+255),f,b
  7815  0025AA  2B6C               	incf	??___xxtofl& (0+255),f,b
  7816  0025AC  0E00               	movlw	0
  7817  0025AE  236D               	addwfc	(??___xxtofl+1)& (0+255),f,b
  7818  0025B0  236E               	addwfc	(??___xxtofl+2)& (0+255),f,b
  7819  0025B2  236F               	addwfc	(??___xxtofl+3)& (0+255),f,b
  7820  0025B4  C06C  F072         	movff	??___xxtofl,___xxtofl@arg
  7821  0025B8  C06D  F073         	movff	??___xxtofl+1,___xxtofl@arg+1
  7822  0025BC  C06E  F074         	movff	??___xxtofl+2,___xxtofl@arg+2
  7823  0025C0  C06F  F075         	movff	??___xxtofl+3,___xxtofl@arg+3
  7824  0025C4  EFEC  F012         	goto	l6541
  7825  0025C8                     l2009:
  7826                           
  7827                           ; BSR set to: 0
  7828  0025C8  C068  F072         	movff	___xxtofl@val,___xxtofl@arg
  7829  0025CC  C069  F073         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7830  0025D0  C06A  F074         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7831  0025D4  C06B  F075         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7832  0025D8                     l6541:
  7833                           
  7834                           ; BSR set to: 0
  7835  0025D8  5168               	movf	___xxtofl@val& (0+255),w,b
  7836  0025DA  1169               	iorwf	(___xxtofl@val+1)& (0+255),w,b
  7837  0025DC  116A               	iorwf	(___xxtofl@val+2)& (0+255),w,b
  7838  0025DE  116B               	iorwf	(___xxtofl@val+3)& (0+255),w,b
  7839  0025E0  A4D8               	btfss	status,2,c
  7840  0025E2  EFF5  F012         	goto	u5801
  7841  0025E6  EFF7  F012         	goto	u5800
  7842  0025EA                     u5801:
  7843  0025EA  EF01  F013         	goto	l6547
  7844  0025EE                     u5800:
  7845  0025EE                     
  7846                           ; BSR set to: 0
  7847  0025EE  0E00               	movlw	0
  7848  0025F0  6F68               	movwf	?___xxtofl& (0+255),b
  7849  0025F2  0E00               	movlw	0
  7850  0025F4  6F69               	movwf	(?___xxtofl+1)& (0+255),b
  7851  0025F6  0E00               	movlw	0
  7852  0025F8  6F6A               	movwf	(?___xxtofl+2)& (0+255),b
  7853  0025FA  0E00               	movlw	0
  7854  0025FC  6F6B               	movwf	(?___xxtofl+3)& (0+255),b
  7855  0025FE  EF92  F013         	goto	l2012
  7856  002602                     l6547:
  7857                           
  7858                           ; BSR set to: 0
  7859  002602  0E96               	movlw	150
  7860  002604  6F71               	movwf	___xxtofl@exp& (0+255),b
  7861  002606  EF0B  F013         	goto	l6551
  7862  00260A                     l6549:
  7863                           
  7864                           ; BSR set to: 0
  7865  00260A  2B71               	incf	___xxtofl@exp& (0+255),f,b
  7866  00260C  90D8               	bcf	status,0,c
  7867  00260E  3375               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  7868  002610  3374               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  7869  002612  3373               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  7870  002614  3372               	rrcf	___xxtofl@arg& (0+255),f,b
  7871  002616                     l6551:
  7872                           
  7873                           ; BSR set to: 0
  7874  002616  0E00               	movlw	0
  7875  002618  1572               	andwf	___xxtofl@arg& (0+255),w,b
  7876  00261A  6F6C               	movwf	??___xxtofl& (0+255),b
  7877  00261C  0E00               	movlw	0
  7878  00261E  1573               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  7879  002620  6F6D               	movwf	(??___xxtofl+1)& (0+255),b
  7880  002622  0E00               	movlw	0
  7881  002624  1574               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  7882  002626  6F6E               	movwf	(??___xxtofl+2)& (0+255),b
  7883  002628  0EFE               	movlw	254
  7884  00262A  1575               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  7885  00262C  6F6F               	movwf	(??___xxtofl+3)& (0+255),b
  7886  00262E  516C               	movf	??___xxtofl& (0+255),w,b
  7887  002630  116D               	iorwf	(??___xxtofl+1)& (0+255),w,b
  7888  002632  116E               	iorwf	(??___xxtofl+2)& (0+255),w,b
  7889  002634  116F               	iorwf	(??___xxtofl+3)& (0+255),w,b
  7890  002636  A4D8               	btfss	status,2,c
  7891  002638  EF20  F013         	goto	u5811
  7892  00263C  EF22  F013         	goto	u5810
  7893  002640                     u5811:
  7894  002640  EF05  F013         	goto	l6549
  7895  002644                     u5810:
  7896  002644  EF30  F013         	goto	l2016
  7897  002648                     l6553:
  7898                           
  7899                           ; BSR set to: 0
  7900  002648  2B71               	incf	___xxtofl@exp& (0+255),f,b
  7901  00264A                     
  7902                           ; BSR set to: 0
  7903  00264A  0E01               	movlw	1
  7904  00264C  2772               	addwf	___xxtofl@arg& (0+255),f,b
  7905  00264E  0E00               	movlw	0
  7906  002650  2373               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
  7907  002652  2374               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
  7908  002654  2375               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
  7909  002656                     
  7910                           ; BSR set to: 0
  7911  002656  90D8               	bcf	status,0,c
  7912  002658  3375               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  7913  00265A  3374               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  7914  00265C  3373               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  7915  00265E  3372               	rrcf	___xxtofl@arg& (0+255),f,b
  7916  002660                     l2016:
  7917                           
  7918                           ; BSR set to: 0
  7919  002660  0E00               	movlw	0
  7920  002662  1572               	andwf	___xxtofl@arg& (0+255),w,b
  7921  002664  6F6C               	movwf	??___xxtofl& (0+255),b
  7922  002666  0E00               	movlw	0
  7923  002668  1573               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  7924  00266A  6F6D               	movwf	(??___xxtofl+1)& (0+255),b
  7925  00266C  0E00               	movlw	0
  7926  00266E  1574               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  7927  002670  6F6E               	movwf	(??___xxtofl+2)& (0+255),b
  7928  002672  0EFF               	movlw	255
  7929  002674  1575               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  7930  002676  6F6F               	movwf	(??___xxtofl+3)& (0+255),b
  7931  002678  516C               	movf	??___xxtofl& (0+255),w,b
  7932  00267A  116D               	iorwf	(??___xxtofl+1)& (0+255),w,b
  7933  00267C  116E               	iorwf	(??___xxtofl+2)& (0+255),w,b
  7934  00267E  116F               	iorwf	(??___xxtofl+3)& (0+255),w,b
  7935  002680  A4D8               	btfss	status,2,c
  7936  002682  EF45  F013         	goto	u5821
  7937  002686  EF47  F013         	goto	u5820
  7938  00268A                     u5821:
  7939  00268A  EF24  F013         	goto	l6553
  7940  00268E                     u5820:
  7941  00268E  EF4F  F013         	goto	l6561
  7942  002692                     l6559:
  7943                           
  7944                           ; BSR set to: 0
  7945  002692  0771               	decf	___xxtofl@exp& (0+255),f,b
  7946  002694  90D8               	bcf	status,0,c
  7947  002696  3772               	rlcf	___xxtofl@arg& (0+255),f,b
  7948  002698  3773               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
  7949  00269A  3774               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
  7950  00269C  3775               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
  7951  00269E                     l6561:
  7952                           
  7953                           ; BSR set to: 0
  7954  00269E  BF74               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
  7955  0026A0  EF54  F013         	goto	u5831
  7956  0026A4  EF56  F013         	goto	u5830
  7957  0026A8                     u5831:
  7958  0026A8  EF5E  F013         	goto	l2023
  7959  0026AC                     u5830:
  7960  0026AC                     
  7961                           ; BSR set to: 0
  7962  0026AC  0E02               	movlw	2
  7963  0026AE  6171               	cpfslt	___xxtofl@exp& (0+255),b
  7964  0026B0  EF5C  F013         	goto	u5841
  7965  0026B4  EF5E  F013         	goto	u5840
  7966  0026B8                     u5841:
  7967  0026B8  EF49  F013         	goto	l6559
  7968  0026BC                     u5840:
  7969  0026BC                     l2023:
  7970                           
  7971                           ; BSR set to: 0
  7972  0026BC  B171               	btfsc	___xxtofl@exp& (0+255),0,b
  7973  0026BE  EF63  F013         	goto	u5851
  7974  0026C2  EF65  F013         	goto	u5850
  7975  0026C6                     u5851:
  7976  0026C6  EF66  F013         	goto	l6567
  7977  0026CA                     u5850:
  7978  0026CA                     
  7979                           ; BSR set to: 0
  7980  0026CA  9F74               	bcf	(___xxtofl@arg+2)& (0+255),7,b
  7981  0026CC                     l6567:
  7982                           
  7983                           ; BSR set to: 0
  7984  0026CC  90D8               	bcf	status,0,c
  7985  0026CE  3371               	rrcf	___xxtofl@exp& (0+255),f,b
  7986  0026D0                     
  7987                           ; BSR set to: 0
  7988  0026D0  C071  F06C         	movff	___xxtofl@exp,??___xxtofl
  7989  0026D4  6B6D               	clrf	(??___xxtofl+1)& (0+255),b
  7990  0026D6  6B6E               	clrf	(??___xxtofl+2)& (0+255),b
  7991  0026D8  6B6F               	clrf	(??___xxtofl+3)& (0+255),b
  7992  0026DA  C06C  F06F         	movff	??___xxtofl,??___xxtofl+3
  7993  0026DE  6B6E               	clrf	(??___xxtofl+2)& (0+255),b
  7994  0026E0  6B6D               	clrf	(??___xxtofl+1)& (0+255),b
  7995  0026E2  6B6C               	clrf	??___xxtofl& (0+255),b
  7996  0026E4  516C               	movf	??___xxtofl& (0+255),w,b
  7997  0026E6  1372               	iorwf	___xxtofl@arg& (0+255),f,b
  7998  0026E8  516D               	movf	(??___xxtofl+1)& (0+255),w,b
  7999  0026EA  1373               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
  8000  0026EC  516E               	movf	(??___xxtofl+2)& (0+255),w,b
  8001  0026EE  1374               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
  8002  0026F0  516F               	movf	(??___xxtofl+3)& (0+255),w,b
  8003  0026F2  1375               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
  8004  0026F4                     
  8005                           ; BSR set to: 0
  8006  0026F4  5170               	movf	___xxtofl@sign& (0+255),w,b
  8007  0026F6  B4D8               	btfsc	status,2,c
  8008  0026F8  EF80  F013         	goto	u5861
  8009  0026FC  EF82  F013         	goto	u5860
  8010  002700                     u5861:
  8011  002700  EF8A  F013         	goto	l6577
  8012  002704                     u5860:
  8013  002704                     
  8014                           ; BSR set to: 0
  8015  002704  BF6B               	btfsc	(___xxtofl@val+3)& (0+255),7,b
  8016  002706  EF89  F013         	goto	u5870
  8017  00270A  EF87  F013         	goto	u5871
  8018  00270E                     u5871:
  8019  00270E  EF8A  F013         	goto	l6577
  8020  002712                     u5870:
  8021  002712                     
  8022                           ; BSR set to: 0
  8023  002712  8F75               	bsf	(___xxtofl@arg+3)& (0+255),7,b
  8024  002714                     l6577:
  8025                           
  8026                           ; BSR set to: 0
  8027  002714  C072  F068         	movff	___xxtofl@arg,?___xxtofl
  8028  002718  C073  F069         	movff	___xxtofl@arg+1,?___xxtofl+1
  8029  00271C  C074  F06A         	movff	___xxtofl@arg+2,?___xxtofl+2
  8030  002720  C075  F06B         	movff	___xxtofl@arg+3,?___xxtofl+3
  8031  002724                     l2012:
  8032                           
  8033                           ; BSR set to: 0
  8034  002724  0012               	return		;funcret
  8035  002726                     __end_of___xxtofl:
  8036                           	callstack 0
  8037                           
  8038 ;; *************** function ___fltol *****************
  8039 ;; Defined at:
  8040 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\fltol.c"
  8041 ;; Parameters:    Size  Location     Type
  8042 ;;  f1              4   63[BANK0 ] unsigned char 
  8043 ;; Auto vars:     Size  Location     Type
  8044 ;;  exp1            1   32[COMRAM] unsigned char 
  8045 ;;  sign1           1   31[COMRAM] unsigned char 
  8046 ;; Return value:  Size  Location     Type
  8047 ;;                  4   63[BANK0 ] long 
  8048 ;; Registers used:
  8049 ;;		wreg, status,2, status,0
  8050 ;; Tracked objects:
  8051 ;;		On entry : 0/0
  8052 ;;		On exit  : 0/0
  8053 ;;		Unchanged: 0/0
  8054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8055 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8056 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8057 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8058 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8059 ;;Total ram usage:       10 bytes
  8060 ;; Hardware stack levels used: 1
  8061 ;; Hardware stack levels required when called: 8
  8062 ;; This function calls:
  8063 ;;		Nothing
  8064 ;; This function is called by:
  8065 ;;		_calcSpeed
  8066 ;;		_calcMotorPow
  8067 ;; This function uses a non-reentrant model
  8068 ;;
  8069                           
  8070                           	psect	text35
  8071  0030B4                     __ptext35:
  8072                           	callstack 0
  8073  0030B4                     ___fltol:
  8074                           	callstack 20
  8075  0030B4  0100               	movlb	0	; () banked
  8076  0030B6  35A1               	rlcf	(___fltol@f1+2)& (0+255),w,b
  8077  0030B8  35A2               	rlcf	(___fltol@f1+3)& (0+255),w,b
  8078  0030BA  6E21               	movwf	___fltol@exp1^0,c
  8079  0030BC  5021               	movf	___fltol@exp1^0,w,c
  8080  0030BE  A4D8               	btfss	status,2,c
  8081  0030C0  EF64  F018         	goto	u3861
  8082  0030C4  EF66  F018         	goto	u3860
  8083  0030C8                     u3861:
  8084  0030C8  EF70  F018         	goto	l5081
  8085  0030CC                     u3860:
  8086  0030CC                     l5077:
  8087                           
  8088                           ; BSR set to: 0
  8089  0030CC  0E00               	movlw	0
  8090  0030CE  6F9F               	movwf	?___fltol& (0+255),b
  8091  0030D0  0E00               	movlw	0
  8092  0030D2  6FA0               	movwf	(?___fltol+1)& (0+255),b
  8093  0030D4  0E00               	movlw	0
  8094  0030D6  6FA1               	movwf	(?___fltol+2)& (0+255),b
  8095  0030D8  0E00               	movlw	0
  8096  0030DA  6FA2               	movwf	(?___fltol+3)& (0+255),b
  8097  0030DC  EFDD  F018         	goto	l1651
  8098  0030E0                     l5081:
  8099                           
  8100                           ; BSR set to: 0
  8101  0030E0  C09F  F0A3         	movff	___fltol@f1,??___fltol
  8102  0030E4  C0A0  F0A4         	movff	___fltol@f1+1,??___fltol+1
  8103  0030E8  C0A1  F0A5         	movff	___fltol@f1+2,??___fltol+2
  8104  0030EC  C0A2  F0A6         	movff	___fltol@f1+3,??___fltol+3
  8105  0030F0  0E20               	movlw	32
  8106  0030F2  EF80  F018         	goto	u3870
  8107  0030F6                     u3875:
  8108  0030F6  90D8               	bcf	status,0,c
  8109  0030F8  33A6               	rrcf	(??___fltol+3)& (0+255),f,b
  8110  0030FA  33A5               	rrcf	(??___fltol+2)& (0+255),f,b
  8111  0030FC  33A4               	rrcf	(??___fltol+1)& (0+255),f,b
  8112  0030FE  33A3               	rrcf	??___fltol& (0+255),f,b
  8113  003100                     u3870:
  8114  003100  2EE8               	decfsz	wreg,f,c
  8115  003102  EF7B  F018         	goto	u3875
  8116  003106  51A3               	movf	??___fltol& (0+255),w,b
  8117  003108  6E20               	movwf	___fltol@sign1^0,c
  8118  00310A                     
  8119                           ; BSR set to: 0
  8120  00310A  8FA1               	bsf	(___fltol@f1+2)& (0+255),7,b
  8121  00310C                     
  8122                           ; BSR set to: 0
  8123  00310C  0EFF               	movlw	255
  8124  00310E  179F               	andwf	___fltol@f1& (0+255),f,b
  8125  003110  0EFF               	movlw	255
  8126  003112  17A0               	andwf	(___fltol@f1+1)& (0+255),f,b
  8127  003114  0EFF               	movlw	255
  8128  003116  17A1               	andwf	(___fltol@f1+2)& (0+255),f,b
  8129  003118  0E00               	movlw	0
  8130  00311A  17A2               	andwf	(___fltol@f1+3)& (0+255),f,b
  8131  00311C                     
  8132                           ; BSR set to: 0
  8133  00311C  0E96               	movlw	150
  8134  00311E  5E21               	subwf	___fltol@exp1^0,f,c
  8135  003120                     
  8136                           ; BSR set to: 0
  8137  003120  BE21               	btfsc	___fltol@exp1^0,7,c
  8138  003122  EF97  F018         	goto	u3880
  8139  003126  EF95  F018         	goto	u3881
  8140  00312A                     u3881:
  8141  00312A  EFAD  F018         	goto	l5101
  8142  00312E                     u3880:
  8143  00312E                     
  8144                           ; BSR set to: 0
  8145  00312E  5021               	movf	___fltol@exp1^0,w,c
  8146  003130  0A80               	xorlw	128
  8147  003132  0F97               	addlw	151
  8148  003134  B0D8               	btfsc	status,0,c
  8149  003136  EF9F  F018         	goto	u3891
  8150  00313A  EFA1  F018         	goto	u3890
  8151  00313E                     u3891:
  8152  00313E  EFA3  F018         	goto	l5097
  8153  003142                     u3890:
  8154  003142  EF66  F018         	goto	l5077
  8155  003146                     l5097:
  8156                           
  8157                           ; BSR set to: 0
  8158  003146  90D8               	bcf	status,0,c
  8159  003148  33A2               	rrcf	(___fltol@f1+3)& (0+255),f,b
  8160  00314A  33A1               	rrcf	(___fltol@f1+2)& (0+255),f,b
  8161  00314C  33A0               	rrcf	(___fltol@f1+1)& (0+255),f,b
  8162  00314E  339F               	rrcf	___fltol@f1& (0+255),f,b
  8163  003150                     
  8164                           ; BSR set to: 0
  8165  003150  3E21               	incfsz	___fltol@exp1^0,f,c
  8166  003152  EFA3  F018         	goto	l5097
  8167  003156  EFC5  F018         	goto	l5111
  8168  00315A                     l5101:
  8169                           
  8170                           ; BSR set to: 0
  8171  00315A  0E1F               	movlw	31
  8172  00315C  6421               	cpfsgt	___fltol@exp1^0,c
  8173  00315E  EFB3  F018         	goto	u3901
  8174  003162  EFB5  F018         	goto	u3900
  8175  003166                     u3901:
  8176  003166  EFBD  F018         	goto	l5109
  8177  00316A                     u3900:
  8178  00316A  EF66  F018         	goto	l5077
  8179  00316E                     l5107:
  8180                           
  8181                           ; BSR set to: 0
  8182  00316E  90D8               	bcf	status,0,c
  8183  003170  379F               	rlcf	___fltol@f1& (0+255),f,b
  8184  003172  37A0               	rlcf	(___fltol@f1+1)& (0+255),f,b
  8185  003174  37A1               	rlcf	(___fltol@f1+2)& (0+255),f,b
  8186  003176  37A2               	rlcf	(___fltol@f1+3)& (0+255),f,b
  8187  003178  0621               	decf	___fltol@exp1^0,f,c
  8188  00317A                     l5109:
  8189                           
  8190                           ; BSR set to: 0
  8191  00317A  5021               	movf	___fltol@exp1^0,w,c
  8192  00317C  A4D8               	btfss	status,2,c
  8193  00317E  EFC3  F018         	goto	u3911
  8194  003182  EFC5  F018         	goto	u3910
  8195  003186                     u3911:
  8196  003186  EFB7  F018         	goto	l5107
  8197  00318A                     u3910:
  8198  00318A                     l5111:
  8199                           
  8200                           ; BSR set to: 0
  8201  00318A  5020               	movf	___fltol@sign1^0,w,c
  8202  00318C  B4D8               	btfsc	status,2,c
  8203  00318E  EFCB  F018         	goto	u3921
  8204  003192  EFCD  F018         	goto	u3920
  8205  003196                     u3921:
  8206  003196  EFD5  F018         	goto	l5115
  8207  00319A                     u3920:
  8208  00319A                     
  8209                           ; BSR set to: 0
  8210  00319A  1FA2               	comf	(___fltol@f1+3)& (0+255),f,b
  8211  00319C  1FA1               	comf	(___fltol@f1+2)& (0+255),f,b
  8212  00319E  1FA0               	comf	(___fltol@f1+1)& (0+255),f,b
  8213  0031A0  6D9F               	negf	___fltol@f1& (0+255),b
  8214  0031A2  0E00               	movlw	0
  8215  0031A4  23A0               	addwfc	(___fltol@f1+1)& (0+255),f,b
  8216  0031A6  23A1               	addwfc	(___fltol@f1+2)& (0+255),f,b
  8217  0031A8  23A2               	addwfc	(___fltol@f1+3)& (0+255),f,b
  8218  0031AA                     l5115:
  8219                           
  8220                           ; BSR set to: 0
  8221  0031AA  C09F  F09F         	movff	___fltol@f1,?___fltol
  8222  0031AE  C0A0  F0A0         	movff	___fltol@f1+1,?___fltol+1
  8223  0031B2  C0A1  F0A1         	movff	___fltol@f1+2,?___fltol+2
  8224  0031B6  C0A2  F0A2         	movff	___fltol@f1+3,?___fltol+3
  8225  0031BA                     l1651:
  8226                           
  8227                           ; BSR set to: 0
  8228  0031BA  0012               	return		;funcret
  8229  0031BC                     __end_of___fltol:
  8230                           	callstack 0
  8231                           
  8232 ;; *************** function ___flmul *****************
  8233 ;; Defined at:
  8234 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcmul.c"
  8235 ;; Parameters:    Size  Location     Type
  8236 ;;  b               4   22[BANK0 ] long 
  8237 ;;  a               4   26[BANK0 ] long 
  8238 ;; Auto vars:     Size  Location     Type
  8239 ;;  prod            4   41[BANK0 ] struct .
  8240 ;;  grs             4   36[BANK0 ] unsigned long 
  8241 ;;  temp            2   45[BANK0 ] struct .
  8242 ;;  bexp            1   40[BANK0 ] unsigned char 
  8243 ;;  aexp            1   35[BANK0 ] unsigned char 
  8244 ;;  sign            1   34[BANK0 ] unsigned char 
  8245 ;; Return value:  Size  Location     Type
  8246 ;;                  4   22[BANK0 ] unsigned char 
  8247 ;; Registers used:
  8248 ;;		wreg, status,2, status,0, prodl, prodh
  8249 ;; Tracked objects:
  8250 ;;		On entry : 0/0
  8251 ;;		On exit  : 0/0
  8252 ;;		Unchanged: 0/0
  8253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8254 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8255 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8256 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8257 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8258 ;;Total ram usage:       25 bytes
  8259 ;; Hardware stack levels used: 1
  8260 ;; Hardware stack levels required when called: 8
  8261 ;; This function calls:
  8262 ;;		Nothing
  8263 ;; This function is called by:
  8264 ;;		_calcSpeed
  8265 ;;		_calcMotorPow
  8266 ;; This function uses a non-reentrant model
  8267 ;;
  8268                           
  8269                           	psect	text36
  8270  00150A                     __ptext36:
  8271                           	callstack 0
  8272  00150A                     ___flmul:
  8273                           	callstack 20
  8274  00150A  0100               	movlb	0	; () banked
  8275  00150C  5179               	movf	(___flmul@b+3)& (0+255),w,b
  8276  00150E  0B80               	andlw	128
  8277  001510  6F82               	movwf	___flmul@sign& (0+255),b
  8278  001512  5179               	movf	(___flmul@b+3)& (0+255),w,b
  8279  001514  2579               	addwf	(___flmul@b+3)& (0+255),w,b
  8280  001516  6F88               	movwf	___flmul@bexp& (0+255),b
  8281  001518                     
  8282                           ; BSR set to: 0
  8283  001518  AF78               	btfss	(___flmul@b+2)& (0+255),7,b
  8284  00151A  EF91  F00A         	goto	u5591
  8285  00151E  EF93  F00A         	goto	u5590
  8286  001522                     u5591:
  8287  001522  EF94  F00A         	goto	l6411
  8288  001526                     u5590:
  8289  001526                     
  8290                           ; BSR set to: 0
  8291  001526  8188               	bsf	___flmul@bexp& (0+255),0,b
  8292  001528                     l6411:
  8293                           
  8294                           ; BSR set to: 0
  8295  001528  5188               	movf	___flmul@bexp& (0+255),w,b
  8296  00152A  B4D8               	btfsc	status,2,c
  8297  00152C  EF9A  F00A         	goto	u5601
  8298  001530  EF9C  F00A         	goto	u5600
  8299  001534                     u5601:
  8300  001534  EFAF  F00A         	goto	l6419
  8301  001538                     u5600:
  8302  001538                     
  8303                           ; BSR set to: 0
  8304  001538  2988               	incf	___flmul@bexp& (0+255),w,b
  8305  00153A  A4D8               	btfss	status,2,c
  8306  00153C  EFA2  F00A         	goto	u5611
  8307  001540  EFA4  F00A         	goto	u5610
  8308  001544                     u5611:
  8309  001544  EFAC  F00A         	goto	l6417
  8310  001548                     u5610:
  8311  001548                     
  8312                           ; BSR set to: 0
  8313  001548  0E00               	movlw	0
  8314  00154A  6F76               	movwf	___flmul@b& (0+255),b
  8315  00154C  0E00               	movlw	0
  8316  00154E  6F77               	movwf	(___flmul@b+1)& (0+255),b
  8317  001550  0E00               	movlw	0
  8318  001552  6F78               	movwf	(___flmul@b+2)& (0+255),b
  8319  001554  0E00               	movlw	0
  8320  001556  6F79               	movwf	(___flmul@b+3)& (0+255),b
  8321  001558                     l6417:
  8322                           
  8323                           ; BSR set to: 0
  8324  001558  8F78               	bsf	(___flmul@b+2)& (0+255),7,b
  8325  00155A  EFB7  F00A         	goto	l6421
  8326  00155E                     l6419:
  8327                           
  8328                           ; BSR set to: 0
  8329  00155E  0E00               	movlw	0
  8330  001560  6F76               	movwf	___flmul@b& (0+255),b
  8331  001562  0E00               	movlw	0
  8332  001564  6F77               	movwf	(___flmul@b+1)& (0+255),b
  8333  001566  0E00               	movlw	0
  8334  001568  6F78               	movwf	(___flmul@b+2)& (0+255),b
  8335  00156A  0E00               	movlw	0
  8336  00156C  6F79               	movwf	(___flmul@b+3)& (0+255),b
  8337  00156E                     l6421:
  8338                           
  8339                           ; BSR set to: 0
  8340  00156E  517D               	movf	(___flmul@a+3)& (0+255),w,b
  8341  001570  0B80               	andlw	128
  8342  001572  1B82               	xorwf	___flmul@sign& (0+255),f,b
  8343  001574                     
  8344                           ; BSR set to: 0
  8345  001574  517D               	movf	(___flmul@a+3)& (0+255),w,b
  8346  001576  257D               	addwf	(___flmul@a+3)& (0+255),w,b
  8347  001578  6F83               	movwf	___flmul@aexp& (0+255),b
  8348  00157A                     
  8349                           ; BSR set to: 0
  8350  00157A  AF7C               	btfss	(___flmul@a+2)& (0+255),7,b
  8351  00157C  EFC2  F00A         	goto	u5621
  8352  001580  EFC4  F00A         	goto	u5620
  8353  001584                     u5621:
  8354  001584  EFC5  F00A         	goto	l6429
  8355  001588                     u5620:
  8356  001588                     
  8357                           ; BSR set to: 0
  8358  001588  8183               	bsf	___flmul@aexp& (0+255),0,b
  8359  00158A                     l6429:
  8360                           
  8361                           ; BSR set to: 0
  8362  00158A  5183               	movf	___flmul@aexp& (0+255),w,b
  8363  00158C  B4D8               	btfsc	status,2,c
  8364  00158E  EFCB  F00A         	goto	u5631
  8365  001592  EFCD  F00A         	goto	u5630
  8366  001596                     u5631:
  8367  001596  EFE0  F00A         	goto	l6437
  8368  00159A                     u5630:
  8369  00159A                     
  8370                           ; BSR set to: 0
  8371  00159A  2983               	incf	___flmul@aexp& (0+255),w,b
  8372  00159C  A4D8               	btfss	status,2,c
  8373  00159E  EFD3  F00A         	goto	u5641
  8374  0015A2  EFD5  F00A         	goto	u5640
  8375  0015A6                     u5641:
  8376  0015A6  EFDD  F00A         	goto	l6435
  8377  0015AA                     u5640:
  8378  0015AA                     
  8379                           ; BSR set to: 0
  8380  0015AA  0E00               	movlw	0
  8381  0015AC  6F7A               	movwf	___flmul@a& (0+255),b
  8382  0015AE  0E00               	movlw	0
  8383  0015B0  6F7B               	movwf	(___flmul@a+1)& (0+255),b
  8384  0015B2  0E00               	movlw	0
  8385  0015B4  6F7C               	movwf	(___flmul@a+2)& (0+255),b
  8386  0015B6  0E00               	movlw	0
  8387  0015B8  6F7D               	movwf	(___flmul@a+3)& (0+255),b
  8388  0015BA                     l6435:
  8389                           
  8390                           ; BSR set to: 0
  8391  0015BA  8F7C               	bsf	(___flmul@a+2)& (0+255),7,b
  8392  0015BC  EFE8  F00A         	goto	l1968
  8393  0015C0                     l6437:
  8394                           
  8395                           ; BSR set to: 0
  8396  0015C0  0E00               	movlw	0
  8397  0015C2  6F7A               	movwf	___flmul@a& (0+255),b
  8398  0015C4  0E00               	movlw	0
  8399  0015C6  6F7B               	movwf	(___flmul@a+1)& (0+255),b
  8400  0015C8  0E00               	movlw	0
  8401  0015CA  6F7C               	movwf	(___flmul@a+2)& (0+255),b
  8402  0015CC  0E00               	movlw	0
  8403  0015CE  6F7D               	movwf	(___flmul@a+3)& (0+255),b
  8404  0015D0                     l1968:
  8405                           
  8406                           ; BSR set to: 0
  8407  0015D0  5183               	movf	___flmul@aexp& (0+255),w,b
  8408  0015D2  B4D8               	btfsc	status,2,c
  8409  0015D4  EFEE  F00A         	goto	u5651
  8410  0015D8  EFF0  F00A         	goto	u5650
  8411  0015DC                     u5651:
  8412  0015DC  EFF8  F00A         	goto	l6441
  8413  0015E0                     u5650:
  8414  0015E0                     
  8415                           ; BSR set to: 0
  8416  0015E0  5188               	movf	___flmul@bexp& (0+255),w,b
  8417  0015E2  A4D8               	btfss	status,2,c
  8418  0015E4  EFF6  F00A         	goto	u5661
  8419  0015E8  EFF8  F00A         	goto	u5660
  8420  0015EC                     u5661:
  8421  0015EC  EF02  F00B         	goto	l6445
  8422  0015F0                     u5660:
  8423  0015F0                     l6441:
  8424                           
  8425                           ; BSR set to: 0
  8426  0015F0  0E00               	movlw	0
  8427  0015F2  6F76               	movwf	?___flmul& (0+255),b
  8428  0015F4  0E00               	movlw	0
  8429  0015F6  6F77               	movwf	(?___flmul+1)& (0+255),b
  8430  0015F8  0E00               	movlw	0
  8431  0015FA  6F78               	movwf	(?___flmul+2)& (0+255),b
  8432  0015FC  0E00               	movlw	0
  8433  0015FE  6F79               	movwf	(?___flmul+3)& (0+255),b
  8434  001600  EFAC  F00C         	goto	l1972
  8435  001604                     l6445:
  8436                           
  8437                           ; BSR set to: 0
  8438  001604  517C               	movf	(___flmul@a+2)& (0+255),w,b
  8439  001606  0376               	mulwf	___flmul@b& (0+255),b
  8440  001608  006F FFCC  F08D    	movff	prodl,___flmul@temp
  8441  00160E  006F FFD0  F08E    	movff	prodh,___flmul@temp+1
  8442  001614                     
  8443                           ; BSR set to: 0
  8444  001614  518D               	movf	___flmul@temp& (0+255),w,b
  8445  001616  6F84               	movwf	___flmul@grs& (0+255),b
  8446  001618  6B85               	clrf	(___flmul@grs+1)& (0+255),b
  8447  00161A  6B86               	clrf	(___flmul@grs+2)& (0+255),b
  8448  00161C  6B87               	clrf	(___flmul@grs+3)& (0+255),b
  8449  00161E                     
  8450                           ; BSR set to: 0
  8451  00161E  518E               	movf	(___flmul@temp+1)& (0+255),w,b
  8452  001620  6F89               	movwf	___flmul@prod& (0+255),b
  8453  001622  6B8A               	clrf	(___flmul@prod+1)& (0+255),b
  8454  001624  6B8B               	clrf	(___flmul@prod+2)& (0+255),b
  8455  001626  6B8C               	clrf	(___flmul@prod+3)& (0+255),b
  8456  001628  517B               	movf	(___flmul@a+1)& (0+255),w,b
  8457  00162A  0377               	mulwf	(___flmul@b+1)& (0+255),b
  8458  00162C  006F FFCC  F08D    	movff	prodl,___flmul@temp
  8459  001632  006F FFD0  F08E    	movff	prodh,___flmul@temp+1
  8460  001638                     
  8461                           ; BSR set to: 0
  8462  001638  518D               	movf	___flmul@temp& (0+255),w,b
  8463  00163A  2784               	addwf	___flmul@grs& (0+255),f,b
  8464  00163C  0E00               	movlw	0
  8465  00163E  2385               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8466  001640  2386               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8467  001642  2387               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8468  001644                     
  8469                           ; BSR set to: 0
  8470  001644  518E               	movf	(___flmul@temp+1)& (0+255),w,b
  8471  001646  2789               	addwf	___flmul@prod& (0+255),f,b
  8472  001648  0E00               	movlw	0
  8473  00164A  238A               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8474  00164C  238B               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8475  00164E  238C               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8476  001650  517A               	movf	___flmul@a& (0+255),w,b
  8477  001652  0378               	mulwf	(___flmul@b+2)& (0+255),b
  8478  001654  006F FFCC  F08D    	movff	prodl,___flmul@temp
  8479  00165A  006F FFD0  F08E    	movff	prodh,___flmul@temp+1
  8480  001660                     
  8481                           ; BSR set to: 0
  8482  001660  518D               	movf	___flmul@temp& (0+255),w,b
  8483  001662  2784               	addwf	___flmul@grs& (0+255),f,b
  8484  001664  0E00               	movlw	0
  8485  001666  2385               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8486  001668  2386               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8487  00166A  2387               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8488  00166C                     
  8489                           ; BSR set to: 0
  8490  00166C  518E               	movf	(___flmul@temp+1)& (0+255),w,b
  8491  00166E  2789               	addwf	___flmul@prod& (0+255),f,b
  8492  001670  0E00               	movlw	0
  8493  001672  238A               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8494  001674  238B               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8495  001676  238C               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8496  001678                     
  8497                           ; BSR set to: 0
  8498  001678  C086  F087         	movff	___flmul@grs+2,___flmul@grs+3
  8499  00167C  C085  F086         	movff	___flmul@grs+1,___flmul@grs+2
  8500  001680  C084  F085         	movff	___flmul@grs,___flmul@grs+1
  8501  001684  6B84               	clrf	___flmul@grs& (0+255),b
  8502  001686                     
  8503                           ; BSR set to: 0
  8504  001686  517A               	movf	___flmul@a& (0+255),w,b
  8505  001688  0377               	mulwf	(___flmul@b+1)& (0+255),b
  8506  00168A  006F FFCC  F08D    	movff	prodl,___flmul@temp
  8507  001690  006F FFD0  F08E    	movff	prodh,___flmul@temp+1
  8508  001696                     
  8509                           ; BSR set to: 0
  8510  001696  518D               	movf	___flmul@temp& (0+255),w,b
  8511  001698  2784               	addwf	___flmul@grs& (0+255),f,b
  8512  00169A  518E               	movf	(___flmul@temp+1)& (0+255),w,b
  8513  00169C  2385               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8514  00169E  0E00               	movlw	0
  8515  0016A0  2386               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8516  0016A2  0E00               	movlw	0
  8517  0016A4  2387               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8518  0016A6                     
  8519                           ; BSR set to: 0
  8520  0016A6  517B               	movf	(___flmul@a+1)& (0+255),w,b
  8521  0016A8  0376               	mulwf	___flmul@b& (0+255),b
  8522  0016AA  006F FFCC  F08D    	movff	prodl,___flmul@temp
  8523  0016B0  006F FFD0  F08E    	movff	prodh,___flmul@temp+1
  8524  0016B6                     
  8525                           ; BSR set to: 0
  8526  0016B6  518D               	movf	___flmul@temp& (0+255),w,b
  8527  0016B8  2784               	addwf	___flmul@grs& (0+255),f,b
  8528  0016BA  518E               	movf	(___flmul@temp+1)& (0+255),w,b
  8529  0016BC  2385               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8530  0016BE  0E00               	movlw	0
  8531  0016C0  2386               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8532  0016C2  0E00               	movlw	0
  8533  0016C4  2387               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8534  0016C6                     
  8535                           ; BSR set to: 0
  8536  0016C6  C086  F087         	movff	___flmul@grs+2,___flmul@grs+3
  8537  0016CA  C085  F086         	movff	___flmul@grs+1,___flmul@grs+2
  8538  0016CE  C084  F085         	movff	___flmul@grs,___flmul@grs+1
  8539  0016D2  6B84               	clrf	___flmul@grs& (0+255),b
  8540  0016D4  517A               	movf	___flmul@a& (0+255),w,b
  8541  0016D6  0376               	mulwf	___flmul@b& (0+255),b
  8542  0016D8  006F FFCC  F08D    	movff	prodl,___flmul@temp
  8543  0016DE  006F FFD0  F08E    	movff	prodh,___flmul@temp+1
  8544  0016E4                     
  8545                           ; BSR set to: 0
  8546  0016E4  518D               	movf	___flmul@temp& (0+255),w,b
  8547  0016E6  2784               	addwf	___flmul@grs& (0+255),f,b
  8548  0016E8  518E               	movf	(___flmul@temp+1)& (0+255),w,b
  8549  0016EA  2385               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8550  0016EC  0E00               	movlw	0
  8551  0016EE  2386               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8552  0016F0  0E00               	movlw	0
  8553  0016F2  2387               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8554  0016F4                     
  8555                           ; BSR set to: 0
  8556  0016F4  517C               	movf	(___flmul@a+2)& (0+255),w,b
  8557  0016F6  0377               	mulwf	(___flmul@b+1)& (0+255),b
  8558  0016F8  006F FFCC  F08D    	movff	prodl,___flmul@temp
  8559  0016FE  006F FFD0  F08E    	movff	prodh,___flmul@temp+1
  8560  001704  518D               	movf	___flmul@temp& (0+255),w,b
  8561  001706  2789               	addwf	___flmul@prod& (0+255),f,b
  8562  001708  518E               	movf	(___flmul@temp+1)& (0+255),w,b
  8563  00170A  238A               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8564  00170C  0E00               	movlw	0
  8565  00170E  238B               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8566  001710  0E00               	movlw	0
  8567  001712  238C               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8568  001714                     
  8569                           ; BSR set to: 0
  8570  001714  517B               	movf	(___flmul@a+1)& (0+255),w,b
  8571  001716  0378               	mulwf	(___flmul@b+2)& (0+255),b
  8572  001718  006F FFCC  F08D    	movff	prodl,___flmul@temp
  8573  00171E  006F FFD0  F08E    	movff	prodh,___flmul@temp+1
  8574  001724                     
  8575                           ; BSR set to: 0
  8576  001724  518D               	movf	___flmul@temp& (0+255),w,b
  8577  001726  2789               	addwf	___flmul@prod& (0+255),f,b
  8578  001728  518E               	movf	(___flmul@temp+1)& (0+255),w,b
  8579  00172A  238A               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8580  00172C  0E00               	movlw	0
  8581  00172E  238B               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8582  001730  0E00               	movlw	0
  8583  001732  238C               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8584  001734  517C               	movf	(___flmul@a+2)& (0+255),w,b
  8585  001736  0378               	mulwf	(___flmul@b+2)& (0+255),b
  8586  001738  006F FFCC  F08D    	movff	prodl,___flmul@temp
  8587  00173E  006F FFD0  F08E    	movff	prodh,___flmul@temp+1
  8588  001744                     
  8589                           ; BSR set to: 0
  8590  001744  518D               	movf	___flmul@temp& (0+255),w,b
  8591  001746  6F7E               	movwf	??___flmul& (0+255),b
  8592  001748  518E               	movf	(___flmul@temp+1)& (0+255),w,b
  8593  00174A  6F7F               	movwf	(??___flmul+1)& (0+255),b
  8594  00174C  6B80               	clrf	(??___flmul+2)& (0+255),b
  8595  00174E  6B81               	clrf	(??___flmul+3)& (0+255),b
  8596  001750  C080  F081         	movff	??___flmul+2,??___flmul+3
  8597  001754  C07F  F080         	movff	??___flmul+1,??___flmul+2
  8598  001758  C07E  F07F         	movff	??___flmul,??___flmul+1
  8599  00175C  6B7E               	clrf	??___flmul& (0+255),b
  8600  00175E  517E               	movf	??___flmul& (0+255),w,b
  8601  001760  2789               	addwf	___flmul@prod& (0+255),f,b
  8602  001762  517F               	movf	(??___flmul+1)& (0+255),w,b
  8603  001764  238A               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8604  001766  5180               	movf	(??___flmul+2)& (0+255),w,b
  8605  001768  238B               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8606  00176A  5181               	movf	(??___flmul+3)& (0+255),w,b
  8607  00176C  238C               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8608  00176E                     
  8609                           ; BSR set to: 0
  8610  00176E  C084  F07E         	movff	___flmul@grs,??___flmul
  8611  001772  C085  F07F         	movff	___flmul@grs+1,??___flmul+1
  8612  001776  C086  F080         	movff	___flmul@grs+2,??___flmul+2
  8613  00177A  C087  F081         	movff	___flmul@grs+3,??___flmul+3
  8614  00177E  0E19               	movlw	25
  8615  001780  EFC7  F00B         	goto	u5670
  8616  001784                     u5675:
  8617  001784  90D8               	bcf	status,0,c
  8618  001786  3381               	rrcf	(??___flmul+3)& (0+255),f,b
  8619  001788  3380               	rrcf	(??___flmul+2)& (0+255),f,b
  8620  00178A  337F               	rrcf	(??___flmul+1)& (0+255),f,b
  8621  00178C  337E               	rrcf	??___flmul& (0+255),f,b
  8622  00178E                     u5670:
  8623  00178E  2EE8               	decfsz	wreg,f,c
  8624  001790  EFC2  F00B         	goto	u5675
  8625  001794  517E               	movf	??___flmul& (0+255),w,b
  8626  001796  2789               	addwf	___flmul@prod& (0+255),f,b
  8627  001798  517F               	movf	(??___flmul+1)& (0+255),w,b
  8628  00179A  238A               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8629  00179C  5180               	movf	(??___flmul+2)& (0+255),w,b
  8630  00179E  238B               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8631  0017A0  5181               	movf	(??___flmul+3)& (0+255),w,b
  8632  0017A2  238C               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8633  0017A4                     
  8634                           ; BSR set to: 0
  8635  0017A4  C086  F087         	movff	___flmul@grs+2,___flmul@grs+3
  8636  0017A8  C085  F086         	movff	___flmul@grs+1,___flmul@grs+2
  8637  0017AC  C084  F085         	movff	___flmul@grs,___flmul@grs+1
  8638  0017B0  6B84               	clrf	___flmul@grs& (0+255),b
  8639  0017B2                     
  8640                           ; BSR set to: 0
  8641  0017B2  5183               	movf	___flmul@aexp& (0+255),w,b
  8642  0017B4  C088  F07E         	movff	___flmul@bexp,??___flmul
  8643  0017B8  6B7F               	clrf	(??___flmul+1)& (0+255),b
  8644  0017BA  277E               	addwf	??___flmul& (0+255),f,b
  8645  0017BC  0E00               	movlw	0
  8646  0017BE  237F               	addwfc	(??___flmul+1)& (0+255),f,b
  8647  0017C0  0E82               	movlw	130
  8648  0017C2  257E               	addwf	??___flmul& (0+255),w,b
  8649  0017C4  6F8D               	movwf	___flmul@temp& (0+255),b
  8650  0017C6  0EFF               	movlw	255
  8651  0017C8  217F               	addwfc	(??___flmul+1)& (0+255),w,b
  8652  0017CA  6F8E               	movwf	(___flmul@temp+1)& (0+255),b
  8653  0017CC  EFFD  F00B         	goto	l6493
  8654  0017D0                     l6487:
  8655                           
  8656                           ; BSR set to: 0
  8657  0017D0  90D8               	bcf	status,0,c
  8658  0017D2  3789               	rlcf	___flmul@prod& (0+255),f,b
  8659  0017D4  378A               	rlcf	(___flmul@prod+1)& (0+255),f,b
  8660  0017D6  378B               	rlcf	(___flmul@prod+2)& (0+255),f,b
  8661  0017D8  378C               	rlcf	(___flmul@prod+3)& (0+255),f,b
  8662  0017DA                     
  8663                           ; BSR set to: 0
  8664  0017DA  AF87               	btfss	(___flmul@grs+3)& (0+255),7,b
  8665  0017DC  EFF2  F00B         	goto	u5681
  8666  0017E0  EFF4  F00B         	goto	u5680
  8667  0017E4                     u5681:
  8668  0017E4  EFF5  F00B         	goto	l1975
  8669  0017E8                     u5680:
  8670  0017E8                     
  8671                           ; BSR set to: 0
  8672  0017E8  8189               	bsf	___flmul@prod& (0+255),0,b
  8673  0017EA                     l1975:
  8674                           
  8675                           ; BSR set to: 0
  8676  0017EA  90D8               	bcf	status,0,c
  8677  0017EC  3784               	rlcf	___flmul@grs& (0+255),f,b
  8678  0017EE  3785               	rlcf	(___flmul@grs+1)& (0+255),f,b
  8679  0017F0  3786               	rlcf	(___flmul@grs+2)& (0+255),f,b
  8680  0017F2  3787               	rlcf	(___flmul@grs+3)& (0+255),f,b
  8681  0017F4  078D               	decf	___flmul@temp& (0+255),f,b
  8682  0017F6  A0D8               	btfss	status,0,c
  8683  0017F8  078E               	decf	(___flmul@temp+1)& (0+255),f,b
  8684  0017FA                     l6493:
  8685                           
  8686                           ; BSR set to: 0
  8687  0017FA  AF8B               	btfss	(___flmul@prod+2)& (0+255),7,b
  8688  0017FC  EF02  F00C         	goto	u5691
  8689  001800  EF04  F00C         	goto	u5690
  8690  001804                     u5691:
  8691  001804  EFE8  F00B         	goto	l6487
  8692  001808                     u5690:
  8693  001808                     
  8694                           ; BSR set to: 0
  8695  001808  0E00               	movlw	0
  8696  00180A  6F83               	movwf	___flmul@aexp& (0+255),b
  8697  00180C                     
  8698                           ; BSR set to: 0
  8699  00180C  AF87               	btfss	(___flmul@grs+3)& (0+255),7,b
  8700  00180E  EF0B  F00C         	goto	u5701
  8701  001812  EF0D  F00C         	goto	u5700
  8702  001816                     u5701:
  8703  001816  EF31  F00C         	goto	l1977
  8704  00181A                     u5700:
  8705  00181A                     
  8706                           ; BSR set to: 0
  8707  00181A  0EFF               	movlw	255
  8708  00181C  1584               	andwf	___flmul@grs& (0+255),w,b
  8709  00181E  6F7E               	movwf	??___flmul& (0+255),b
  8710  001820  0EFF               	movlw	255
  8711  001822  1585               	andwf	(___flmul@grs+1)& (0+255),w,b
  8712  001824  6F7F               	movwf	(??___flmul+1)& (0+255),b
  8713  001826  0EFF               	movlw	255
  8714  001828  1586               	andwf	(___flmul@grs+2)& (0+255),w,b
  8715  00182A  6F80               	movwf	(??___flmul+2)& (0+255),b
  8716  00182C  0E7F               	movlw	127
  8717  00182E  1587               	andwf	(___flmul@grs+3)& (0+255),w,b
  8718  001830  6F81               	movwf	(??___flmul+3)& (0+255),b
  8719  001832  517E               	movf	??___flmul& (0+255),w,b
  8720  001834  117F               	iorwf	(??___flmul+1)& (0+255),w,b
  8721  001836  1180               	iorwf	(??___flmul+2)& (0+255),w,b
  8722  001838  1181               	iorwf	(??___flmul+3)& (0+255),w,b
  8723  00183A  B4D8               	btfsc	status,2,c
  8724  00183C  EF22  F00C         	goto	u5711
  8725  001840  EF24  F00C         	goto	u5710
  8726  001844                     u5711:
  8727  001844  EF28  F00C         	goto	l1978
  8728  001848                     u5710:
  8729  001848                     l6501:
  8730                           
  8731                           ; BSR set to: 0
  8732  001848  0E01               	movlw	1
  8733  00184A  6F83               	movwf	___flmul@aexp& (0+255),b
  8734  00184C  EF31  F00C         	goto	l1977
  8735  001850                     l1978:
  8736                           
  8737                           ; BSR set to: 0
  8738  001850  A189               	btfss	___flmul@prod& (0+255),0,b
  8739  001852  EF2D  F00C         	goto	u5721
  8740  001856  EF2F  F00C         	goto	u5720
  8741  00185A                     u5721:
  8742  00185A  EF31  F00C         	goto	l1977
  8743  00185E                     u5720:
  8744  00185E  EF24  F00C         	goto	l6501
  8745  001862                     l1977:
  8746                           
  8747                           ; BSR set to: 0
  8748  001862  5183               	movf	___flmul@aexp& (0+255),w,b
  8749  001864  B4D8               	btfsc	status,2,c
  8750  001866  EF37  F00C         	goto	u5731
  8751  00186A  EF39  F00C         	goto	u5730
  8752  00186E                     u5731:
  8753  00186E  EF5D  F00C         	goto	l6513
  8754  001872                     u5730:
  8755  001872                     
  8756                           ; BSR set to: 0
  8757  001872  0E01               	movlw	1
  8758  001874  2789               	addwf	___flmul@prod& (0+255),f,b
  8759  001876  0E00               	movlw	0
  8760  001878  238A               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8761  00187A  238B               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8762  00187C  238C               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8763  00187E                     
  8764                           ; BSR set to: 0
  8765  00187E  A18C               	btfss	(___flmul@prod+3)& (0+255),0,b
  8766  001880  EF44  F00C         	goto	u5741
  8767  001884  EF46  F00C         	goto	u5740
  8768  001888                     u5741:
  8769  001888  EF5D  F00C         	goto	l6513
  8770  00188C                     u5740:
  8771  00188C                     
  8772                           ; BSR set to: 0
  8773  00188C  C089  F07E         	movff	___flmul@prod,??___flmul
  8774  001890  C08A  F07F         	movff	___flmul@prod+1,??___flmul+1
  8775  001894  C08B  F080         	movff	___flmul@prod+2,??___flmul+2
  8776  001898  C08C  F081         	movff	___flmul@prod+3,??___flmul+3
  8777  00189C  3581               	rlcf	(??___flmul+3)& (0+255),w,b
  8778  00189E  3381               	rrcf	(??___flmul+3)& (0+255),f,b
  8779  0018A0  3380               	rrcf	(??___flmul+2)& (0+255),f,b
  8780  0018A2  337F               	rrcf	(??___flmul+1)& (0+255),f,b
  8781  0018A4  337E               	rrcf	??___flmul& (0+255),f,b
  8782  0018A6  C07E  F089         	movff	??___flmul,___flmul@prod
  8783  0018AA  C07F  F08A         	movff	??___flmul+1,___flmul@prod+1
  8784  0018AE  C080  F08B         	movff	??___flmul+2,___flmul@prod+2
  8785  0018B2  C081  F08C         	movff	??___flmul+3,___flmul@prod+3
  8786  0018B6                     
  8787                           ; BSR set to: 0
  8788  0018B6  4B8D               	infsnz	___flmul@temp& (0+255),f,b
  8789  0018B8  2B8E               	incf	(___flmul@temp+1)& (0+255),f,b
  8790  0018BA                     l6513:
  8791                           
  8792                           ; BSR set to: 0
  8793  0018BA  BF8E               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8794  0018BC  EF68  F00C         	goto	u5751
  8795  0018C0  518E               	movf	(___flmul@temp+1)& (0+255),w,b
  8796  0018C2  E108               	bnz	u5750
  8797  0018C4  298D               	incf	___flmul@temp& (0+255),w,b
  8798  0018C6  A0D8               	btfss	status,0,c
  8799  0018C8  EF68  F00C         	goto	u5751
  8800  0018CC  EF6A  F00C         	goto	u5750
  8801  0018D0                     u5751:
  8802  0018D0  EF74  F00C         	goto	l6517
  8803  0018D4                     u5750:
  8804  0018D4                     
  8805                           ; BSR set to: 0
  8806  0018D4  0E00               	movlw	0
  8807  0018D6  6F89               	movwf	___flmul@prod& (0+255),b
  8808  0018D8  0E00               	movlw	0
  8809  0018DA  6F8A               	movwf	(___flmul@prod+1)& (0+255),b
  8810  0018DC  0E80               	movlw	128
  8811  0018DE  6F8B               	movwf	(___flmul@prod+2)& (0+255),b
  8812  0018E0  0E7F               	movlw	127
  8813  0018E2  6F8C               	movwf	(___flmul@prod+3)& (0+255),b
  8814  0018E4  EFA2  F00C         	goto	l6529
  8815  0018E8                     l6517:
  8816                           
  8817                           ; BSR set to: 0
  8818  0018E8  BF8E               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8819  0018EA  EF81  F00C         	goto	u5760
  8820  0018EE  518E               	movf	(___flmul@temp+1)& (0+255),w,b
  8821  0018F0  E106               	bnz	u5761
  8822  0018F2  058D               	decf	___flmul@temp& (0+255),w,b
  8823  0018F4  B0D8               	btfsc	status,0,c
  8824  0018F6  EF7F  F00C         	goto	u5761
  8825  0018FA  EF81  F00C         	goto	u5760
  8826  0018FE                     u5761:
  8827  0018FE  EF8D  F00C         	goto	l1985
  8828  001902                     u5760:
  8829  001902                     
  8830                           ; BSR set to: 0
  8831  001902  0E00               	movlw	0
  8832  001904  6F89               	movwf	___flmul@prod& (0+255),b
  8833  001906  0E00               	movlw	0
  8834  001908  6F8A               	movwf	(___flmul@prod+1)& (0+255),b
  8835  00190A  0E00               	movlw	0
  8836  00190C  6F8B               	movwf	(___flmul@prod+2)& (0+255),b
  8837  00190E  0E00               	movlw	0
  8838  001910  6F8C               	movwf	(___flmul@prod+3)& (0+255),b
  8839  001912  0E00               	movlw	0
  8840  001914  6F82               	movwf	___flmul@sign& (0+255),b
  8841  001916  EFA2  F00C         	goto	l6529
  8842  00191A                     l1985:
  8843                           
  8844                           ; BSR set to: 0
  8845  00191A  C08D  F088         	movff	___flmul@temp,___flmul@bexp
  8846  00191E                     
  8847                           ; BSR set to: 0
  8848  00191E  0EFF               	movlw	255
  8849  001920  1789               	andwf	___flmul@prod& (0+255),f,b
  8850  001922  0EFF               	movlw	255
  8851  001924  178A               	andwf	(___flmul@prod+1)& (0+255),f,b
  8852  001926  0E7F               	movlw	127
  8853  001928  178B               	andwf	(___flmul@prod+2)& (0+255),f,b
  8854  00192A  0E00               	movlw	0
  8855  00192C  178C               	andwf	(___flmul@prod+3)& (0+255),f,b
  8856  00192E                     
  8857                           ; BSR set to: 0
  8858  00192E  A188               	btfss	___flmul@bexp& (0+255),0,b
  8859  001930  EF9C  F00C         	goto	u5771
  8860  001934  EF9E  F00C         	goto	u5770
  8861  001938                     u5771:
  8862  001938  EF9F  F00C         	goto	l6527
  8863  00193C                     u5770:
  8864  00193C                     
  8865                           ; BSR set to: 0
  8866  00193C  8F8B               	bsf	(___flmul@prod+2)& (0+255),7,b
  8867  00193E                     l6527:
  8868                           
  8869                           ; BSR set to: 0
  8870  00193E  90D8               	bcf	status,0,c
  8871  001940  3188               	rrcf	___flmul@bexp& (0+255),w,b
  8872  001942  6F8C               	movwf	(___flmul@prod+3)& (0+255),b
  8873  001944                     l6529:
  8874                           
  8875                           ; BSR set to: 0
  8876  001944  5182               	movf	___flmul@sign& (0+255),w,b
  8877  001946  138C               	iorwf	(___flmul@prod+3)& (0+255),f,b
  8878  001948                     
  8879                           ; BSR set to: 0
  8880  001948  C089  F076         	movff	___flmul@prod,?___flmul
  8881  00194C  C08A  F077         	movff	___flmul@prod+1,?___flmul+1
  8882  001950  C08B  F078         	movff	___flmul@prod+2,?___flmul+2
  8883  001954  C08C  F079         	movff	___flmul@prod+3,?___flmul+3
  8884  001958                     l1972:
  8885                           
  8886                           ; BSR set to: 0
  8887  001958  0012               	return		;funcret
  8888  00195A                     __end_of___flmul:
  8889                           	callstack 0
  8890                           
  8891 ;; *************** function ___awdiv *****************
  8892 ;; Defined at:
  8893 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awdiv.c"
  8894 ;; Parameters:    Size  Location     Type
  8895 ;;  dividend        2    0[BANK0 ] int 
  8896 ;;  divisor         2    2[BANK0 ] int 
  8897 ;; Auto vars:     Size  Location     Type
  8898 ;;  quotient        2    6[BANK0 ] int 
  8899 ;;  sign            1    5[BANK0 ] unsigned char 
  8900 ;;  counter         1    4[BANK0 ] unsigned char 
  8901 ;; Return value:  Size  Location     Type
  8902 ;;                  2    0[BANK0 ] int 
  8903 ;; Registers used:
  8904 ;;		wreg, status,2, status,0
  8905 ;; Tracked objects:
  8906 ;;		On entry : 0/0
  8907 ;;		On exit  : 0/0
  8908 ;;		Unchanged: 0/0
  8909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8910 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8911 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8913 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8914 ;;Total ram usage:        8 bytes
  8915 ;; Hardware stack levels used: 1
  8916 ;; Hardware stack levels required when called: 8
  8917 ;; This function calls:
  8918 ;;		Nothing
  8919 ;; This function is called by:
  8920 ;;		_setSteering
  8921 ;;		_calcMotorPow
  8922 ;; This function uses a non-reentrant model
  8923 ;;
  8924                           
  8925                           	psect	text37
  8926  0036FE                     __ptext37:
  8927                           	callstack 0
  8928  0036FE                     ___awdiv:
  8929                           	callstack 20
  8930  0036FE  0E00               	movlw	0
  8931  003700  0100               	movlb	0	; () banked
  8932  003702  6F65               	movwf	___awdiv@sign& (0+255),b
  8933  003704                     
  8934                           ; BSR set to: 0
  8935  003704  BF63               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
  8936  003706  EF89  F01B         	goto	u5410
  8937  00370A  EF87  F01B         	goto	u5411
  8938  00370E                     u5411:
  8939  00370E  EF8F  F01B         	goto	l6265
  8940  003712                     u5410:
  8941  003712                     
  8942                           ; BSR set to: 0
  8943  003712  6D62               	negf	___awdiv@divisor& (0+255),b
  8944  003714  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
  8945  003716  B0D8               	btfsc	status,0,c
  8946  003718  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
  8947  00371A                     
  8948                           ; BSR set to: 0
  8949  00371A  0E01               	movlw	1
  8950  00371C  6F65               	movwf	___awdiv@sign& (0+255),b
  8951  00371E                     l6265:
  8952                           
  8953                           ; BSR set to: 0
  8954  00371E  BF61               	btfsc	(___awdiv@dividend+1)& (0+255),7,b
  8955  003720  EF96  F01B         	goto	u5420
  8956  003724  EF94  F01B         	goto	u5421
  8957  003728                     u5421:
  8958  003728  EF9C  F01B         	goto	l6271
  8959  00372C                     u5420:
  8960  00372C                     
  8961                           ; BSR set to: 0
  8962  00372C  6D60               	negf	___awdiv@dividend& (0+255),b
  8963  00372E  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
  8964  003730  B0D8               	btfsc	status,0,c
  8965  003732  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
  8966  003734                     
  8967                           ; BSR set to: 0
  8968  003734  0E01               	movlw	1
  8969  003736  1B65               	xorwf	___awdiv@sign& (0+255),f,b
  8970  003738                     l6271:
  8971                           
  8972                           ; BSR set to: 0
  8973  003738  0E00               	movlw	0
  8974  00373A  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
  8975  00373C  0E00               	movlw	0
  8976  00373E  6F66               	movwf	___awdiv@quotient& (0+255),b
  8977  003740                     
  8978                           ; BSR set to: 0
  8979  003740  5162               	movf	___awdiv@divisor& (0+255),w,b
  8980  003742  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  8981  003744  B4D8               	btfsc	status,2,c
  8982  003746  EFA7  F01B         	goto	u5431
  8983  00374A  EFA9  F01B         	goto	u5430
  8984  00374E                     u5431:
  8985  00374E  EFD1  F01B         	goto	l6293
  8986  003752                     u5430:
  8987  003752                     
  8988                           ; BSR set to: 0
  8989  003752  0E01               	movlw	1
  8990  003754  6F64               	movwf	___awdiv@counter& (0+255),b
  8991  003756  EFB1  F01B         	goto	l6279
  8992  00375A                     l6277:
  8993                           
  8994                           ; BSR set to: 0
  8995  00375A  90D8               	bcf	status,0,c
  8996  00375C  3762               	rlcf	___awdiv@divisor& (0+255),f,b
  8997  00375E  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  8998  003760  2B64               	incf	___awdiv@counter& (0+255),f,b
  8999  003762                     l6279:
  9000                           
  9001                           ; BSR set to: 0
  9002  003762  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  9003  003764  EFB6  F01B         	goto	u5441
  9004  003768  EFB8  F01B         	goto	u5440
  9005  00376C                     u5441:
  9006  00376C  EFAD  F01B         	goto	l6277
  9007  003770                     u5440:
  9008  003770                     l6281:
  9009                           
  9010                           ; BSR set to: 0
  9011  003770  90D8               	bcf	status,0,c
  9012  003772  3766               	rlcf	___awdiv@quotient& (0+255),f,b
  9013  003774  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  9014  003776                     
  9015                           ; BSR set to: 0
  9016  003776  5162               	movf	___awdiv@divisor& (0+255),w,b
  9017  003778  5D60               	subwf	___awdiv@dividend& (0+255),w,b
  9018  00377A  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  9019  00377C  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  9020  00377E  A0D8               	btfss	status,0,c
  9021  003780  EFC4  F01B         	goto	u5451
  9022  003784  EFC6  F01B         	goto	u5450
  9023  003788                     u5451:
  9024  003788  EFCB  F01B         	goto	l6289
  9025  00378C                     u5450:
  9026  00378C                     
  9027                           ; BSR set to: 0
  9028  00378C  5162               	movf	___awdiv@divisor& (0+255),w,b
  9029  00378E  5F60               	subwf	___awdiv@dividend& (0+255),f,b
  9030  003790  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  9031  003792  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  9032  003794                     
  9033                           ; BSR set to: 0
  9034  003794  8166               	bsf	___awdiv@quotient& (0+255),0,b
  9035  003796                     l6289:
  9036                           
  9037                           ; BSR set to: 0
  9038  003796  90D8               	bcf	status,0,c
  9039  003798  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  9040  00379A  3362               	rrcf	___awdiv@divisor& (0+255),f,b
  9041  00379C                     
  9042                           ; BSR set to: 0
  9043  00379C  2F64               	decfsz	___awdiv@counter& (0+255),f,b
  9044  00379E  EFB8  F01B         	goto	l6281
  9045  0037A2                     l6293:
  9046                           
  9047                           ; BSR set to: 0
  9048  0037A2  5165               	movf	___awdiv@sign& (0+255),w,b
  9049  0037A4  B4D8               	btfsc	status,2,c
  9050  0037A6  EFD7  F01B         	goto	u5461
  9051  0037AA  EFD9  F01B         	goto	u5460
  9052  0037AE                     u5461:
  9053  0037AE  EFDD  F01B         	goto	l6297
  9054  0037B2                     u5460:
  9055  0037B2                     
  9056                           ; BSR set to: 0
  9057  0037B2  6D66               	negf	___awdiv@quotient& (0+255),b
  9058  0037B4  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
  9059  0037B6  B0D8               	btfsc	status,0,c
  9060  0037B8  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
  9061  0037BA                     l6297:
  9062                           
  9063                           ; BSR set to: 0
  9064  0037BA  C066  F060         	movff	___awdiv@quotient,?___awdiv
  9065  0037BE  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
  9066  0037C2                     
  9067                           ; BSR set to: 0
  9068  0037C2  0012               	return		;funcret
  9069  0037C4                     __end_of___awdiv:
  9070                           	callstack 0
  9071                           
  9072 ;; *************** function ___flge *****************
  9073 ;; Defined at:
  9074 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\flge.c"
  9075 ;; Parameters:    Size  Location     Type
  9076 ;;  ff1             4   22[BANK0 ] int 
  9077 ;;  ff2             4   26[BANK0 ] int 
  9078 ;; Auto vars:     Size  Location     Type
  9079 ;;		None
  9080 ;; Return value:  Size  Location     Type
  9081 ;;		None               void
  9082 ;; Registers used:
  9083 ;;		wreg, status,2, status,0
  9084 ;; Tracked objects:
  9085 ;;		On entry : 0/0
  9086 ;;		On exit  : 0/0
  9087 ;;		Unchanged: 0/0
  9088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9089 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9091 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9092 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9093 ;;Total ram usage:       12 bytes
  9094 ;; Hardware stack levels used: 1
  9095 ;; Hardware stack levels required when called: 8
  9096 ;; This function calls:
  9097 ;;		Nothing
  9098 ;; This function is called by:
  9099 ;;		_loop
  9100 ;; This function uses a non-reentrant model
  9101 ;;
  9102                           
  9103                           	psect	text38
  9104  0031BC                     __ptext38:
  9105                           	callstack 0
  9106  0031BC                     ___flge:
  9107                           	callstack 21
  9108  0031BC  0E00               	movlw	0
  9109  0031BE  0100               	movlb	0	; () banked
  9110  0031C0  1576               	andwf	___flge@ff1& (0+255),w,b
  9111  0031C2  6F7E               	movwf	??___flge& (0+255),b
  9112  0031C4  0E00               	movlw	0
  9113  0031C6  1577               	andwf	(___flge@ff1+1)& (0+255),w,b
  9114  0031C8  6F7F               	movwf	(??___flge+1)& (0+255),b
  9115  0031CA  0E80               	movlw	128
  9116  0031CC  1578               	andwf	(___flge@ff1+2)& (0+255),w,b
  9117  0031CE  6F80               	movwf	(??___flge+2)& (0+255),b
  9118  0031D0  0E7F               	movlw	127
  9119  0031D2  1579               	andwf	(___flge@ff1+3)& (0+255),w,b
  9120  0031D4  6F81               	movwf	(??___flge+3)& (0+255),b
  9121  0031D6  517E               	movf	??___flge& (0+255),w,b
  9122  0031D8  117F               	iorwf	(??___flge+1)& (0+255),w,b
  9123  0031DA  1180               	iorwf	(??___flge+2)& (0+255),w,b
  9124  0031DC  1181               	iorwf	(??___flge+3)& (0+255),w,b
  9125  0031DE  A4D8               	btfss	status,2,c
  9126  0031E0  EFF4  F018         	goto	u6151
  9127  0031E4  EFF6  F018         	goto	u6150
  9128  0031E8                     u6151:
  9129  0031E8  EFFE  F018         	goto	l6801
  9130  0031EC                     u6150:
  9131  0031EC                     
  9132                           ; BSR set to: 0
  9133  0031EC  0E00               	movlw	0
  9134  0031EE  6F76               	movwf	___flge@ff1& (0+255),b
  9135  0031F0  0E00               	movlw	0
  9136  0031F2  6F77               	movwf	(___flge@ff1+1)& (0+255),b
  9137  0031F4  0E00               	movlw	0
  9138  0031F6  6F78               	movwf	(___flge@ff1+2)& (0+255),b
  9139  0031F8  0E00               	movlw	0
  9140  0031FA  6F79               	movwf	(___flge@ff1+3)& (0+255),b
  9141  0031FC                     l6801:
  9142                           
  9143                           ; BSR set to: 0
  9144  0031FC  0E00               	movlw	0
  9145  0031FE  157A               	andwf	___flge@ff2& (0+255),w,b
  9146  003200  6F7E               	movwf	??___flge& (0+255),b
  9147  003202  0E00               	movlw	0
  9148  003204  157B               	andwf	(___flge@ff2+1)& (0+255),w,b
  9149  003206  6F7F               	movwf	(??___flge+1)& (0+255),b
  9150  003208  0E80               	movlw	128
  9151  00320A  157C               	andwf	(___flge@ff2+2)& (0+255),w,b
  9152  00320C  6F80               	movwf	(??___flge+2)& (0+255),b
  9153  00320E  0E7F               	movlw	127
  9154  003210  157D               	andwf	(___flge@ff2+3)& (0+255),w,b
  9155  003212  6F81               	movwf	(??___flge+3)& (0+255),b
  9156  003214  517E               	movf	??___flge& (0+255),w,b
  9157  003216  117F               	iorwf	(??___flge+1)& (0+255),w,b
  9158  003218  1180               	iorwf	(??___flge+2)& (0+255),w,b
  9159  00321A  1181               	iorwf	(??___flge+3)& (0+255),w,b
  9160  00321C  A4D8               	btfss	status,2,c
  9161  00321E  EF13  F019         	goto	u6161
  9162  003222  EF15  F019         	goto	u6160
  9163  003226                     u6161:
  9164  003226  EF1D  F019         	goto	l6805
  9165  00322A                     u6160:
  9166  00322A                     
  9167                           ; BSR set to: 0
  9168  00322A  0E00               	movlw	0
  9169  00322C  6F7A               	movwf	___flge@ff2& (0+255),b
  9170  00322E  0E00               	movlw	0
  9171  003230  6F7B               	movwf	(___flge@ff2+1)& (0+255),b
  9172  003232  0E00               	movlw	0
  9173  003234  6F7C               	movwf	(___flge@ff2+2)& (0+255),b
  9174  003236  0E00               	movlw	0
  9175  003238  6F7D               	movwf	(___flge@ff2+3)& (0+255),b
  9176  00323A                     l6805:
  9177                           
  9178                           ; BSR set to: 0
  9179  00323A  AF79               	btfss	(___flge@ff1+3)& (0+255),7,b
  9180  00323C  EF22  F019         	goto	u6171
  9181  003240  EF24  F019         	goto	u6170
  9182  003244                     u6171:
  9183  003244  EF2D  F019         	goto	l6809
  9184  003248                     u6170:
  9185  003248                     
  9186                           ; BSR set to: 0
  9187  003248  6D76               	negf	___flge@ff1& (0+255),b
  9188  00324A  1F77               	comf	(___flge@ff1+1)& (0+255),f,b
  9189  00324C  B0D8               	btfsc	status,0,c
  9190  00324E  2B77               	incf	(___flge@ff1+1)& (0+255),f,b
  9191  003250  1F78               	comf	(___flge@ff1+2)& (0+255),f,b
  9192  003252  B0D8               	btfsc	status,0,c
  9193  003254  2B78               	incf	(___flge@ff1+2)& (0+255),f,b
  9194  003256  0E80               	movlw	128
  9195  003258  5779               	subfwb	(___flge@ff1+3)& (0+255),f,b
  9196  00325A                     l6809:
  9197                           
  9198                           ; BSR set to: 0
  9199  00325A  AF7D               	btfss	(___flge@ff2+3)& (0+255),7,b
  9200  00325C  EF32  F019         	goto	u6181
  9201  003260  EF34  F019         	goto	u6180
  9202  003264                     u6181:
  9203  003264  EF3D  F019         	goto	l1619
  9204  003268                     u6180:
  9205  003268                     
  9206                           ; BSR set to: 0
  9207  003268  6D7A               	negf	___flge@ff2& (0+255),b
  9208  00326A  1F7B               	comf	(___flge@ff2+1)& (0+255),f,b
  9209  00326C  B0D8               	btfsc	status,0,c
  9210  00326E  2B7B               	incf	(___flge@ff2+1)& (0+255),f,b
  9211  003270  1F7C               	comf	(___flge@ff2+2)& (0+255),f,b
  9212  003272  B0D8               	btfsc	status,0,c
  9213  003274  2B7C               	incf	(___flge@ff2+2)& (0+255),f,b
  9214  003276  0E80               	movlw	128
  9215  003278  577D               	subfwb	(___flge@ff2+3)& (0+255),f,b
  9216  00327A                     l1619:
  9217                           
  9218                           ; BSR set to: 0
  9219  00327A  0E00               	movlw	0
  9220  00327C  1B76               	xorwf	___flge@ff1& (0+255),f,b
  9221  00327E  0E00               	movlw	0
  9222  003280  1B77               	xorwf	(___flge@ff1+1)& (0+255),f,b
  9223  003282  0E00               	movlw	0
  9224  003284  1B78               	xorwf	(___flge@ff1+2)& (0+255),f,b
  9225  003286  0E80               	movlw	128
  9226  003288  1B79               	xorwf	(___flge@ff1+3)& (0+255),f,b
  9227  00328A  0E00               	movlw	0
  9228  00328C  1B7A               	xorwf	___flge@ff2& (0+255),f,b
  9229  00328E  0E00               	movlw	0
  9230  003290  1B7B               	xorwf	(___flge@ff2+1)& (0+255),f,b
  9231  003292  0E00               	movlw	0
  9232  003294  1B7C               	xorwf	(___flge@ff2+2)& (0+255),f,b
  9233  003296  0E80               	movlw	128
  9234  003298  1B7D               	xorwf	(___flge@ff2+3)& (0+255),f,b
  9235  00329A  517A               	movf	___flge@ff2& (0+255),w,b
  9236  00329C  5D76               	subwf	___flge@ff1& (0+255),w,b
  9237  00329E  517B               	movf	(___flge@ff2+1)& (0+255),w,b
  9238  0032A0  5977               	subwfb	(___flge@ff1+1)& (0+255),w,b
  9239  0032A2  517C               	movf	(___flge@ff2+2)& (0+255),w,b
  9240  0032A4  5978               	subwfb	(___flge@ff1+2)& (0+255),w,b
  9241  0032A6  517D               	movf	(___flge@ff2+3)& (0+255),w,b
  9242  0032A8  5979               	subwfb	(___flge@ff1+3)& (0+255),w,b
  9243  0032AA  B0D8               	btfsc	status,0,c
  9244  0032AC  EF5A  F019         	goto	u6191
  9245  0032B0  EF5C  F019         	goto	u6190
  9246  0032B4                     u6191:
  9247  0032B4  EF5F  F019         	goto	l6815
  9248  0032B8                     u6190:
  9249  0032B8                     
  9250                           ; BSR set to: 0
  9251  0032B8  90D8               	bcf	status,0,c
  9252  0032BA  EF60  F019         	goto	l1624
  9253  0032BE                     l6815:
  9254                           
  9255                           ; BSR set to: 0
  9256  0032BE  80D8               	bsf	status,0,c
  9257  0032C0                     l1624:
  9258                           
  9259                           ; BSR set to: 0
  9260  0032C0  0012               	return		;funcret
  9261  0032C2                     __end_of___flge:
  9262                           	callstack 0
  9263                           
  9264 ;; *************** function _SYSTEM_Initialize *****************
  9265 ;; Defined at:
  9266 ;;		line 50 in file "mcc_generated_files/mcc.c"
  9267 ;; Parameters:    Size  Location     Type
  9268 ;;		None
  9269 ;; Auto vars:     Size  Location     Type
  9270 ;;		None
  9271 ;; Return value:  Size  Location     Type
  9272 ;;                  1    wreg      void 
  9273 ;; Registers used:
  9274 ;;		wreg, status,2, status,0, cstack
  9275 ;; Tracked objects:
  9276 ;;		On entry : 0/0
  9277 ;;		On exit  : 0/0
  9278 ;;		Unchanged: 0/0
  9279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9283 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9284 ;;Total ram usage:        0 bytes
  9285 ;; Hardware stack levels used: 1
  9286 ;; Hardware stack levels required when called: 10
  9287 ;; This function calls:
  9288 ;;		_ADCC_Initialize
  9289 ;;		_CCP3_Initialize
  9290 ;;		_CCP4_Initialize
  9291 ;;		_CLC3_Initialize
  9292 ;;		_INTERRUPT_Initialize
  9293 ;;		_OSCILLATOR_Initialize
  9294 ;;		_PIN_MANAGER_Initialize
  9295 ;;		_PMD_Initialize
  9296 ;;		_PWM5_Initialize
  9297 ;;		_PWM6_Initialize
  9298 ;;		_PWM7_Initialize
  9299 ;;		_PWM8_Initialize
  9300 ;;		_SMT1_Initialize
  9301 ;;		_TMR2_Initialize
  9302 ;;		_TMR3_Initialize
  9303 ;;		_TMR4_Initialize
  9304 ;;		_TMR5_Initialize
  9305 ;;		_UART1_Initialize
  9306 ;; This function is called by:
  9307 ;;		_main
  9308 ;; This function uses a non-reentrant model
  9309 ;;
  9310                           
  9311                           	psect	text39
  9312  003E28                     __ptext39:
  9313                           	callstack 0
  9314  003E28                     _SYSTEM_Initialize:
  9315                           	callstack 20
  9316  003E28                     
  9317                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
  9318  003E28  ECA2  F01E         	call	_INTERRUPT_Initialize	;wreg free
  9319                           
  9320                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  9321  003E2C  ECFC  F021         	call	_PMD_Initialize	;wreg free
  9322                           
  9323                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  9324  003E30  ECB6  F01A         	call	_PIN_MANAGER_Initialize	;wreg free
  9325                           
  9326                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  9327  003E34  EC7D  F022         	call	_OSCILLATOR_Initialize	;wreg free
  9328  003E38                     
  9329                           ;mcc_generated_files/mcc.c: 56:     CCP3_Initialize();
  9330  003E38  EC4D  F021         	call	_CCP3_Initialize	;wreg free
  9331  003E3C                     
  9332                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
  9333  003E3C  ECD2  F01D         	call	_ADCC_Initialize	;wreg free
  9334                           
  9335                           ;mcc_generated_files/mcc.c: 58:     TMR4_Initialize();
  9336  003E40  EC7B  F021         	call	_TMR4_Initialize	;wreg free
  9337  003E44                     
  9338                           ;mcc_generated_files/mcc.c: 59:     SMT1_Initialize();
  9339  003E44  ECEE  F020         	call	_SMT1_Initialize	;wreg free
  9340  003E48                     
  9341                           ;mcc_generated_files/mcc.c: 60:     PWM8_Initialize();
  9342  003E48  EC4D  F022         	call	_PWM8_Initialize	;wreg free
  9343  003E4C                     
  9344                           ;mcc_generated_files/mcc.c: 61:     TMR2_Initialize();
  9345  003E4C  EC3F  F022         	call	_TMR2_Initialize	;wreg free
  9346  003E50                     
  9347                           ;mcc_generated_files/mcc.c: 62:     PWM6_Initialize();
  9348  003E50  EC65  F022         	call	_PWM6_Initialize	;wreg free
  9349                           
  9350                           ;mcc_generated_files/mcc.c: 63:     CCP4_Initialize();
  9351  003E54  EC36  F021         	call	_CCP4_Initialize	;wreg free
  9352  003E58                     
  9353                           ;mcc_generated_files/mcc.c: 64:     CLC3_Initialize();
  9354  003E58  EC91  F021         	call	_CLC3_Initialize	;wreg free
  9355  003E5C                     
  9356                           ;mcc_generated_files/mcc.c: 65:     TMR3_Initialize();
  9357  003E5C  EC4B  F020         	call	_TMR3_Initialize	;wreg free
  9358                           
  9359                           ;mcc_generated_files/mcc.c: 66:     PWM5_Initialize();
  9360  003E60  EC71  F022         	call	_PWM5_Initialize	;wreg free
  9361  003E64                     
  9362                           ;mcc_generated_files/mcc.c: 67:     TMR5_Initialize();
  9363  003E64  EC39  F01F         	call	_TMR5_Initialize	;wreg free
  9364  003E68                     
  9365                           ;mcc_generated_files/mcc.c: 68:     PWM7_Initialize();
  9366  003E68  EC59  F022         	call	_PWM7_Initialize	;wreg free
  9367                           
  9368                           ;mcc_generated_files/mcc.c: 69:     UART1_Initialize();
  9369  003E6C  EC42  F01C         	call	_UART1_Initialize	;wreg free
  9370  003E70  0012               	return		;funcret
  9371  003E72                     __end_of_SYSTEM_Initialize:
  9372                           	callstack 0
  9373                           
  9374 ;; *************** function _UART1_Initialize *****************
  9375 ;; Defined at:
  9376 ;;		line 87 in file "mcc_generated_files/uart1.c"
  9377 ;; Parameters:    Size  Location     Type
  9378 ;;		None
  9379 ;; Auto vars:     Size  Location     Type
  9380 ;;		None
  9381 ;; Return value:  Size  Location     Type
  9382 ;;                  1    wreg      void 
  9383 ;; Registers used:
  9384 ;;		wreg, status,2, status,0, cstack
  9385 ;; Tracked objects:
  9386 ;;		On entry : 0/0
  9387 ;;		On exit  : 0/0
  9388 ;;		Unchanged: 0/0
  9389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9393 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9394 ;;Total ram usage:        0 bytes
  9395 ;; Hardware stack levels used: 1
  9396 ;; Hardware stack levels required when called: 9
  9397 ;; This function calls:
  9398 ;;		_UART1_SetErrorHandler
  9399 ;;		_UART1_SetFramingErrorHandler
  9400 ;;		_UART1_SetOverrunErrorHandler
  9401 ;;		_UART1_SetRxInterruptHandler
  9402 ;;		_UART1_SetTxInterruptHandler
  9403 ;; This function is called by:
  9404 ;;		_SYSTEM_Initialize
  9405 ;; This function uses a non-reentrant model
  9406 ;;
  9407                           
  9408                           	psect	text40
  9409  003884                     __ptext40:
  9410                           	callstack 0
  9411  003884                     _UART1_Initialize:
  9412                           	callstack 20
  9413  003884                     
  9414                           ;mcc_generated_files/uart1.c: 90:     PIE3bits.U1RXIE = 0;
  9415  003884  0139               	movlb	57	; () banked
  9416  003886  9793               	bcf	147,3,b	;volatile
  9417  003888                     
  9418                           ; BSR set to: 57
  9419                           ;mcc_generated_files/uart1.c: 91:     UART1_SetRxInterruptHandler(UART1_Receive_ISR);
  9420  003888  0EC4               	movlw	low _UART1_Receive_ISR
  9421  00388A  6E20               	movwf	UART1_SetRxInterruptHandler@InterruptHandler^0,c
  9422  00388C  0E37               	movlw	high _UART1_Receive_ISR
  9423  00388E  6E21               	movwf	(UART1_SetRxInterruptHandler@InterruptHandler+1)^0,c
  9424  003890  ECA2  F022         	call	_UART1_SetRxInterruptHandler	;wreg free
  9425  003894                     
  9426                           ;mcc_generated_files/uart1.c: 92:     PIE3bits.U1TXIE = 0;
  9427  003894  0139               	movlb	57	; () banked
  9428  003896  9993               	bcf	147,4,b	;volatile
  9429                           
  9430                           ;mcc_generated_files/uart1.c: 93:     UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
  9431  003898  0E98               	movlw	low _UART1_Transmit_ISR
  9432  00389A  6E20               	movwf	UART1_SetTxInterruptHandler@InterruptHandler^0,c
  9433  00389C  0E3F               	movlw	high _UART1_Transmit_ISR
  9434  00389E  6E21               	movwf	(UART1_SetTxInterruptHandler@InterruptHandler+1)^0,c
  9435  0038A0  EC9D  F022         	call	_UART1_SetTxInterruptHandler	;wreg free
  9436  0038A4                     
  9437                           ;mcc_generated_files/uart1.c: 98:     U1P1L = 0x00;
  9438  0038A4  0E00               	movlw	0
  9439  0038A6  013D               	movlb	61	; () banked
  9440  0038A8  6FEC               	movwf	236,b	;volatile
  9441  0038AA                     
  9442                           ; BSR set to: 61
  9443                           ;mcc_generated_files/uart1.c: 101:     U1P1H = 0x00;
  9444  0038AA  0E00               	movlw	0
  9445  0038AC  6FED               	movwf	237,b	;volatile
  9446  0038AE                     
  9447                           ; BSR set to: 61
  9448                           ;mcc_generated_files/uart1.c: 104:     U1P2L = 0x00;
  9449  0038AE  0E00               	movlw	0
  9450  0038B0  6FEE               	movwf	238,b	;volatile
  9451  0038B2                     
  9452                           ; BSR set to: 61
  9453                           ;mcc_generated_files/uart1.c: 107:     U1P2H = 0x00;
  9454  0038B2  0E00               	movlw	0
  9455  0038B4  6FEF               	movwf	239,b	;volatile
  9456  0038B6                     
  9457                           ; BSR set to: 61
  9458                           ;mcc_generated_files/uart1.c: 110:     U1P3L = 0x00;
  9459  0038B6  0E00               	movlw	0
  9460  0038B8  6FF0               	movwf	240,b	;volatile
  9461  0038BA                     
  9462                           ; BSR set to: 61
  9463                           ;mcc_generated_files/uart1.c: 113:     U1P3H = 0x00;
  9464  0038BA  0E00               	movlw	0
  9465  0038BC  6FF1               	movwf	241,b	;volatile
  9466  0038BE                     
  9467                           ; BSR set to: 61
  9468                           ;mcc_generated_files/uart1.c: 116:     U1CON0 = 0xB0;
  9469  0038BE  0EB0               	movlw	176
  9470  0038C0  6FF2               	movwf	242,b	;volatile
  9471  0038C2                     
  9472                           ; BSR set to: 61
  9473                           ;mcc_generated_files/uart1.c: 119:     U1CON1 = 0x80;
  9474  0038C2  0E80               	movlw	128
  9475  0038C4  6FF3               	movwf	243,b	;volatile
  9476  0038C6                     
  9477                           ; BSR set to: 61
  9478                           ;mcc_generated_files/uart1.c: 122:     U1CON2 = 0x00;
  9479  0038C6  0E00               	movlw	0
  9480  0038C8  6FF4               	movwf	244,b	;volatile
  9481  0038CA                     
  9482                           ; BSR set to: 61
  9483                           ;mcc_generated_files/uart1.c: 125:     U1BRGL = 0x8A;
  9484  0038CA  0E8A               	movlw	138
  9485  0038CC  6FF5               	movwf	245,b	;volatile
  9486  0038CE                     
  9487                           ; BSR set to: 61
  9488                           ;mcc_generated_files/uart1.c: 128:     U1BRGH = 0x00;
  9489  0038CE  0E00               	movlw	0
  9490  0038D0  6FF6               	movwf	246,b	;volatile
  9491  0038D2                     
  9492                           ; BSR set to: 61
  9493                           ;mcc_generated_files/uart1.c: 131:     U1FIFO = 0x00;
  9494  0038D2  0E00               	movlw	0
  9495  0038D4  6FF7               	movwf	247,b	;volatile
  9496  0038D6                     
  9497                           ; BSR set to: 61
  9498                           ;mcc_generated_files/uart1.c: 134:     U1UIR = 0x00;
  9499  0038D6  0E00               	movlw	0
  9500  0038D8  6FF8               	movwf	248,b	;volatile
  9501  0038DA                     
  9502                           ; BSR set to: 61
  9503                           ;mcc_generated_files/uart1.c: 137:     U1ERRIR = 0x00;
  9504  0038DA  0E00               	movlw	0
  9505  0038DC  6FF9               	movwf	249,b	;volatile
  9506  0038DE                     
  9507                           ; BSR set to: 61
  9508                           ;mcc_generated_files/uart1.c: 140:     U1ERRIE = 0x00;
  9509  0038DE  0E00               	movlw	0
  9510  0038E0  6FFA               	movwf	250,b	;volatile
  9511  0038E2                     
  9512                           ; BSR set to: 61
  9513                           ;mcc_generated_files/uart1.c: 143:     UART1_SetFramingErrorHandler(UART1_DefaultFraming
      +                          ErrorHandler);
  9514  0038E2  0EA2               	movlw	low _UART1_DefaultFramingErrorHandler
  9515  0038E4  6E20               	movwf	UART1_SetFramingErrorHandler@interruptHandler^0,c
  9516  0038E6  0E45               	movlw	high _UART1_DefaultFramingErrorHandler
  9517  0038E8  6E21               	movwf	(UART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  9518  0038EA  ECAC  F022         	call	_UART1_SetFramingErrorHandler	;wreg free
  9519  0038EE                     
  9520                           ;mcc_generated_files/uart1.c: 144:     UART1_SetOverrunErrorHandler(UART1_DefaultOverrun
      +                          ErrorHandler);
  9521  0038EE  0EA0               	movlw	low _UART1_DefaultOverrunErrorHandler
  9522  0038F0  6E20               	movwf	UART1_SetOverrunErrorHandler@interruptHandler^0,c
  9523  0038F2  0E45               	movlw	high _UART1_DefaultOverrunErrorHandler
  9524  0038F4  6E21               	movwf	(UART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  9525  0038F6  ECA7  F022         	call	_UART1_SetOverrunErrorHandler	;wreg free
  9526  0038FA                     
  9527                           ;mcc_generated_files/uart1.c: 145:     UART1_SetErrorHandler(UART1_DefaultErrorHandler);
  9528  0038FA  0E94               	movlw	low _UART1_DefaultErrorHandler
  9529  0038FC  6E20               	movwf	UART1_SetErrorHandler@interruptHandler^0,c
  9530  0038FE  0E45               	movlw	high _UART1_DefaultErrorHandler
  9531  003900  6E21               	movwf	(UART1_SetErrorHandler@interruptHandler+1)^0,c
  9532  003902  ECB1  F022         	call	_UART1_SetErrorHandler	;wreg free
  9533                           
  9534                           ;mcc_generated_files/uart1.c: 147:     uart1RxLastError.status = 0;
  9535  003906  0E00               	movlw	0
  9536  003908  6E2E               	movwf	_uart1RxLastError^0,c	;volatile
  9537                           
  9538                           ;mcc_generated_files/uart1.c: 150:     uart1TxHead = 0;
  9539  00390A  0E00               	movlw	0
  9540  00390C  6E33               	movwf	_uart1TxHead^0,c	;volatile
  9541                           
  9542                           ;mcc_generated_files/uart1.c: 151:     uart1TxTail = 0;
  9543  00390E  0E00               	movlw	0
  9544  003910  6E32               	movwf	_uart1TxTail^0,c	;volatile
  9545                           
  9546                           ;mcc_generated_files/uart1.c: 152:     uart1TxBufferRemaining = sizeof(uart1TxBuffer);
  9547  003912  0E08               	movlw	8
  9548  003914  6E40               	movwf	_uart1TxBufferRemaining^0,c	;volatile
  9549                           
  9550                           ;mcc_generated_files/uart1.c: 153:     uart1RxHead = 0;
  9551  003916  0E00               	movlw	0
  9552  003918  6E31               	movwf	_uart1RxHead^0,c	;volatile
  9553                           
  9554                           ;mcc_generated_files/uart1.c: 154:     uart1RxTail = 0;
  9555  00391A  0E00               	movlw	0
  9556  00391C  6E30               	movwf	_uart1RxTail^0,c	;volatile
  9557                           
  9558                           ;mcc_generated_files/uart1.c: 155:     uart1RxCount = 0;
  9559  00391E  0E00               	movlw	0
  9560  003920  6E2F               	movwf	_uart1RxCount^0,c	;volatile
  9561  003922                     
  9562                           ;mcc_generated_files/uart1.c: 158:     PIE3bits.U1RXIE = 1;
  9563  003922  0139               	movlb	57	; () banked
  9564  003924  8793               	bsf	147,3,b	;volatile
  9565  003926                     
  9566                           ; BSR set to: 57
  9567  003926  0012               	return		;funcret
  9568  003928                     __end_of_UART1_Initialize:
  9569                           	callstack 0
  9570                           
  9571 ;; *************** function _UART1_SetTxInterruptHandler *****************
  9572 ;; Defined at:
  9573 ;;		line 333 in file "mcc_generated_files/uart1.c"
  9574 ;; Parameters:    Size  Location     Type
  9575 ;;  InterruptHan    2   31[COMRAM] PTR FTN()void 
  9576 ;;		 -> UART1_Transmit_ISR(1), 
  9577 ;; Auto vars:     Size  Location     Type
  9578 ;;		None
  9579 ;; Return value:  Size  Location     Type
  9580 ;;                  1    wreg      void 
  9581 ;; Registers used:
  9582 ;;		wreg, status,2, status,0
  9583 ;; Tracked objects:
  9584 ;;		On entry : 0/0
  9585 ;;		On exit  : 0/0
  9586 ;;		Unchanged: 0/0
  9587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9588 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9591 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9592 ;;Total ram usage:        2 bytes
  9593 ;; Hardware stack levels used: 1
  9594 ;; Hardware stack levels required when called: 8
  9595 ;; This function calls:
  9596 ;;		Nothing
  9597 ;; This function is called by:
  9598 ;;		_UART1_Initialize
  9599 ;; This function uses a non-reentrant model
  9600 ;;
  9601                           
  9602                           	psect	text41
  9603  00453A                     __ptext41:
  9604                           	callstack 0
  9605  00453A                     _UART1_SetTxInterruptHandler:
  9606                           	callstack 20
  9607  00453A                     
  9608                           ;mcc_generated_files/uart1.c: 334:     UART1_TxInterruptHandler = InterruptHandler;
  9609  00453A  C020  F03C         	movff	UART1_SetTxInterruptHandler@InterruptHandler,_UART1_TxInterruptHandler
  9610  00453E  C021  F03D         	movff	UART1_SetTxInterruptHandler@InterruptHandler+1,_UART1_TxInterruptHandler+1
  9611  004542  0012               	return		;funcret
  9612  004544                     __end_of_UART1_SetTxInterruptHandler:
  9613                           	callstack 0
  9614                           
  9615 ;; *************** function _UART1_SetRxInterruptHandler *****************
  9616 ;; Defined at:
  9617 ;;		line 329 in file "mcc_generated_files/uart1.c"
  9618 ;; Parameters:    Size  Location     Type
  9619 ;;  InterruptHan    2   31[COMRAM] PTR FTN()void 
  9620 ;;		 -> UART1_Receive_ISR(1), 
  9621 ;; Auto vars:     Size  Location     Type
  9622 ;;		None
  9623 ;; Return value:  Size  Location     Type
  9624 ;;                  1    wreg      void 
  9625 ;; Registers used:
  9626 ;;		wreg, status,2, status,0
  9627 ;; Tracked objects:
  9628 ;;		On entry : 0/0
  9629 ;;		On exit  : 0/0
  9630 ;;		Unchanged: 0/0
  9631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9632 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9635 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9636 ;;Total ram usage:        2 bytes
  9637 ;; Hardware stack levels used: 1
  9638 ;; Hardware stack levels required when called: 8
  9639 ;; This function calls:
  9640 ;;		Nothing
  9641 ;; This function is called by:
  9642 ;;		_UART1_Initialize
  9643 ;; This function uses a non-reentrant model
  9644 ;;
  9645                           
  9646                           	psect	text42
  9647  004544                     __ptext42:
  9648                           	callstack 0
  9649  004544                     _UART1_SetRxInterruptHandler:
  9650                           	callstack 20
  9651  004544                     
  9652                           ;mcc_generated_files/uart1.c: 330:     UART1_RxInterruptHandler = InterruptHandler;
  9653  004544  C020  F03E         	movff	UART1_SetRxInterruptHandler@InterruptHandler,_UART1_RxInterruptHandler
  9654  004548  C021  F03F         	movff	UART1_SetRxInterruptHandler@InterruptHandler+1,_UART1_RxInterruptHandler+1
  9655  00454C  0012               	return		;funcret
  9656  00454E                     __end_of_UART1_SetRxInterruptHandler:
  9657                           	callstack 0
  9658                           
  9659 ;; *************** function _UART1_SetOverrunErrorHandler *****************
  9660 ;; Defined at:
  9661 ;;		line 319 in file "mcc_generated_files/uart1.c"
  9662 ;; Parameters:    Size  Location     Type
  9663 ;;  interruptHan    2   31[COMRAM] PTR FTN()void 
  9664 ;;		 -> UART1_DefaultOverrunErrorHandler(1), 
  9665 ;; Auto vars:     Size  Location     Type
  9666 ;;		None
  9667 ;; Return value:  Size  Location     Type
  9668 ;;                  1    wreg      void 
  9669 ;; Registers used:
  9670 ;;		wreg, status,2, status,0
  9671 ;; Tracked objects:
  9672 ;;		On entry : 0/0
  9673 ;;		On exit  : 0/0
  9674 ;;		Unchanged: 0/0
  9675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9676 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9679 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9680 ;;Total ram usage:        2 bytes
  9681 ;; Hardware stack levels used: 1
  9682 ;; Hardware stack levels required when called: 8
  9683 ;; This function calls:
  9684 ;;		Nothing
  9685 ;; This function is called by:
  9686 ;;		_UART1_Initialize
  9687 ;; This function uses a non-reentrant model
  9688 ;;
  9689                           
  9690                           	psect	text43
  9691  00454E                     __ptext43:
  9692                           	callstack 0
  9693  00454E                     _UART1_SetOverrunErrorHandler:
  9694                           	callstack 20
  9695  00454E                     
  9696                           ;mcc_generated_files/uart1.c: 320:     UART1_OverrunErrorHandler = interruptHandler;
  9697  00454E  C020  F0FB         	movff	UART1_SetOverrunErrorHandler@interruptHandler,_UART1_OverrunErrorHandler
  9698  004552  C021  F0FC         	movff	UART1_SetOverrunErrorHandler@interruptHandler+1,_UART1_OverrunErrorHandler+1
  9699  004556  0012               	return		;funcret
  9700  004558                     __end_of_UART1_SetOverrunErrorHandler:
  9701                           	callstack 0
  9702                           
  9703 ;; *************** function _UART1_SetFramingErrorHandler *****************
  9704 ;; Defined at:
  9705 ;;		line 315 in file "mcc_generated_files/uart1.c"
  9706 ;; Parameters:    Size  Location     Type
  9707 ;;  interruptHan    2   31[COMRAM] PTR FTN()void 
  9708 ;;		 -> UART1_DefaultFramingErrorHandler(1), 
  9709 ;; Auto vars:     Size  Location     Type
  9710 ;;		None
  9711 ;; Return value:  Size  Location     Type
  9712 ;;                  1    wreg      void 
  9713 ;; Registers used:
  9714 ;;		wreg, status,2, status,0
  9715 ;; Tracked objects:
  9716 ;;		On entry : 0/0
  9717 ;;		On exit  : 0/0
  9718 ;;		Unchanged: 0/0
  9719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9720 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9723 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9724 ;;Total ram usage:        2 bytes
  9725 ;; Hardware stack levels used: 1
  9726 ;; Hardware stack levels required when called: 8
  9727 ;; This function calls:
  9728 ;;		Nothing
  9729 ;; This function is called by:
  9730 ;;		_UART1_Initialize
  9731 ;; This function uses a non-reentrant model
  9732 ;;
  9733                           
  9734                           	psect	text44
  9735  004558                     __ptext44:
  9736                           	callstack 0
  9737  004558                     _UART1_SetFramingErrorHandler:
  9738                           	callstack 20
  9739  004558                     
  9740                           ;mcc_generated_files/uart1.c: 316:     UART1_FramingErrorHandler = interruptHandler;
  9741  004558  C020  F0FD         	movff	UART1_SetFramingErrorHandler@interruptHandler,_UART1_FramingErrorHandler
  9742  00455C  C021  F0FE         	movff	UART1_SetFramingErrorHandler@interruptHandler+1,_UART1_FramingErrorHandler+1
  9743  004560  0012               	return		;funcret
  9744  004562                     __end_of_UART1_SetFramingErrorHandler:
  9745                           	callstack 0
  9746                           
  9747 ;; *************** function _UART1_SetErrorHandler *****************
  9748 ;; Defined at:
  9749 ;;		line 323 in file "mcc_generated_files/uart1.c"
  9750 ;; Parameters:    Size  Location     Type
  9751 ;;  interruptHan    2   31[COMRAM] PTR FTN()void 
  9752 ;;		 -> UART1_DefaultErrorHandler(1), 
  9753 ;; Auto vars:     Size  Location     Type
  9754 ;;		None
  9755 ;; Return value:  Size  Location     Type
  9756 ;;                  1    wreg      void 
  9757 ;; Registers used:
  9758 ;;		wreg, status,2, status,0
  9759 ;; Tracked objects:
  9760 ;;		On entry : 0/0
  9761 ;;		On exit  : 0/0
  9762 ;;		Unchanged: 0/0
  9763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9764 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9767 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9768 ;;Total ram usage:        2 bytes
  9769 ;; Hardware stack levels used: 1
  9770 ;; Hardware stack levels required when called: 8
  9771 ;; This function calls:
  9772 ;;		Nothing
  9773 ;; This function is called by:
  9774 ;;		_UART1_Initialize
  9775 ;; This function uses a non-reentrant model
  9776 ;;
  9777                           
  9778                           	psect	text45
  9779  004562                     __ptext45:
  9780                           	callstack 0
  9781  004562                     _UART1_SetErrorHandler:
  9782                           	callstack 20
  9783  004562                     
  9784                           ;mcc_generated_files/uart1.c: 324:     UART1_ErrorHandler = interruptHandler;
  9785  004562  C020  F0F9         	movff	UART1_SetErrorHandler@interruptHandler,_UART1_ErrorHandler
  9786  004566  C021  F0FA         	movff	UART1_SetErrorHandler@interruptHandler+1,_UART1_ErrorHandler+1
  9787  00456A  0012               	return		;funcret
  9788  00456C                     __end_of_UART1_SetErrorHandler:
  9789                           	callstack 0
  9790                           
  9791 ;; *************** function _TMR5_Initialize *****************
  9792 ;; Defined at:
  9793 ;;		line 67 in file "mcc_generated_files/tmr5.c"
  9794 ;; Parameters:    Size  Location     Type
  9795 ;;		None
  9796 ;; Auto vars:     Size  Location     Type
  9797 ;;		None
  9798 ;; Return value:  Size  Location     Type
  9799 ;;                  1    wreg      void 
  9800 ;; Registers used:
  9801 ;;		wreg, status,2, status,0, cstack
  9802 ;; Tracked objects:
  9803 ;;		On entry : 0/0
  9804 ;;		On exit  : 0/0
  9805 ;;		Unchanged: 0/0
  9806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9809 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9810 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9811 ;;Total ram usage:        2 bytes
  9812 ;; Hardware stack levels used: 1
  9813 ;; Hardware stack levels required when called: 9
  9814 ;; This function calls:
  9815 ;;		_TMR5_SetGateInterruptHandler
  9816 ;; This function is called by:
  9817 ;;		_SYSTEM_Initialize
  9818 ;; This function uses a non-reentrant model
  9819 ;;
  9820                           
  9821                           	psect	text46
  9822  003E72                     __ptext46:
  9823                           	callstack 0
  9824  003E72                     _TMR5_Initialize:
  9825                           	callstack 20
  9826  003E72                     
  9827                           ;mcc_generated_files/tmr5.c: 72:     T5GCON = 0xC0;
  9828  003E72  0EC0               	movlw	192
  9829  003E74  6E9B               	movwf	155,c	;volatile
  9830                           
  9831                           ;mcc_generated_files/tmr5.c: 75:     T5GATE = 0x00;
  9832  003E76  0E00               	movlw	0
  9833  003E78  6E9C               	movwf	156,c	;volatile
  9834                           
  9835                           ;mcc_generated_files/tmr5.c: 78:     T5CLK = 0x05;
  9836  003E7A  0E05               	movlw	5
  9837  003E7C  6E9D               	movwf	157,c	;volatile
  9838                           
  9839                           ;mcc_generated_files/tmr5.c: 81:     TMR5H = 0x00;
  9840  003E7E  0E00               	movlw	0
  9841  003E80  6E99               	movwf	153,c	;volatile
  9842                           
  9843                           ;mcc_generated_files/tmr5.c: 84:     TMR5L = 0x00;
  9844  003E82  0E00               	movlw	0
  9845  003E84  6E98               	movwf	152,c	;volatile
  9846  003E86                     
  9847                           ;mcc_generated_files/tmr5.c: 87:     PIR8bits.TMR5IF = 0;
  9848  003E86  0139               	movlb	57	; () banked
  9849  003E88  9DA8               	bcf	168,6,b	;volatile
  9850  003E8A                     
  9851                           ; BSR set to: 57
  9852                           ;mcc_generated_files/tmr5.c: 90:     timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
  9853  003E8A  5098               	movf	152,w,c	;volatile
  9854  003E8C  006F FE64  F060    	movff	16281,??_TMR5_Initialize	;volatile
  9855  003E92  0100               	movlb	0	; () banked
  9856  003E94  6B61               	clrf	(??_TMR5_Initialize+1)& (0+255),b
  9857  003E96  C060  F061         	movff	??_TMR5_Initialize,??_TMR5_Initialize+1
  9858  003E9A  6B60               	clrf	??_TMR5_Initialize& (0+255),b
  9859  003E9C  1160               	iorwf	??_TMR5_Initialize& (0+255),w,b
  9860  003E9E  6E3A               	movwf	_timer5ReloadVal^0,c	;volatile
  9861  003EA0  5161               	movf	(??_TMR5_Initialize+1)& (0+255),w,b
  9862  003EA2  6E3B               	movwf	(_timer5ReloadVal+1)^0,c	;volatile
  9863  003EA4                     
  9864                           ; BSR set to: 0
  9865                           ;mcc_generated_files/tmr5.c: 93:     PIR8bits.TMR5GIF = 0;
  9866  003EA4  0139               	movlb	57	; () banked
  9867  003EA6  9FA8               	bcf	168,7,b	;volatile
  9868  003EA8                     
  9869                           ; BSR set to: 57
  9870                           ;mcc_generated_files/tmr5.c: 96:     PIE8bits.TMR5GIE = 1;
  9871  003EA8  8F98               	bsf	152,7,b	;volatile
  9872  003EAA                     
  9873                           ; BSR set to: 57
  9874                           ;mcc_generated_files/tmr5.c: 99:     TMR5_SetGateInterruptHandler(TMR5_DefaultGateInterr
      +                          uptHandler);
  9875  003EAA  0E60               	movlw	low _TMR5_DefaultGateInterruptHandler
  9876  003EAC  6E20               	movwf	TMR5_SetGateInterruptHandler@InterruptHandler^0,c
  9877  003EAE  0E44               	movlw	high _TMR5_DefaultGateInterruptHandler
  9878  003EB0  6E21               	movwf	(TMR5_SetGateInterruptHandler@InterruptHandler+1)^0,c
  9879  003EB2  ECB6  F022         	call	_TMR5_SetGateInterruptHandler	;wreg free
  9880  003EB6                     
  9881                           ;mcc_generated_files/tmr5.c: 102:     T5CON = 0x03;
  9882  003EB6  0E03               	movlw	3
  9883  003EB8  6E9A               	movwf	154,c	;volatile
  9884  003EBA  0012               	return		;funcret
  9885  003EBC                     __end_of_TMR5_Initialize:
  9886                           	callstack 0
  9887                           
  9888 ;; *************** function _TMR5_SetGateInterruptHandler *****************
  9889 ;; Defined at:
  9890 ;;		line 186 in file "mcc_generated_files/tmr5.c"
  9891 ;; Parameters:    Size  Location     Type
  9892 ;;  InterruptHan    2   31[COMRAM] PTR FTN()void 
  9893 ;;		 -> TMR5_DefaultGateInterruptHandler(1), 
  9894 ;; Auto vars:     Size  Location     Type
  9895 ;;		None
  9896 ;; Return value:  Size  Location     Type
  9897 ;;                  1    wreg      void 
  9898 ;; Registers used:
  9899 ;;		wreg, status,2, status,0
  9900 ;; Tracked objects:
  9901 ;;		On entry : 0/0
  9902 ;;		On exit  : 0/0
  9903 ;;		Unchanged: 0/0
  9904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9905 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9908 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9909 ;;Total ram usage:        2 bytes
  9910 ;; Hardware stack levels used: 1
  9911 ;; Hardware stack levels required when called: 8
  9912 ;; This function calls:
  9913 ;;		Nothing
  9914 ;; This function is called by:
  9915 ;;		_TMR5_Initialize
  9916 ;; This function uses a non-reentrant model
  9917 ;;
  9918                           
  9919                           	psect	text47
  9920  00456C                     __ptext47:
  9921                           	callstack 0
  9922  00456C                     _TMR5_SetGateInterruptHandler:
  9923                           	callstack 20
  9924  00456C                     
  9925                           ;mcc_generated_files/tmr5.c: 187:     TMR5_GateInterruptHandler = InterruptHandler;
  9926  00456C  C020  F038         	movff	TMR5_SetGateInterruptHandler@InterruptHandler,_TMR5_GateInterruptHandler
  9927  004570  C021  F039         	movff	TMR5_SetGateInterruptHandler@InterruptHandler+1,_TMR5_GateInterruptHandler+1
  9928  004574  0012               	return		;funcret
  9929  004576                     __end_of_TMR5_SetGateInterruptHandler:
  9930                           	callstack 0
  9931                           
  9932 ;; *************** function _TMR4_Initialize *****************
  9933 ;; Defined at:
  9934 ;;		line 65 in file "mcc_generated_files/tmr4.c"
  9935 ;; Parameters:    Size  Location     Type
  9936 ;;		None
  9937 ;; Auto vars:     Size  Location     Type
  9938 ;;		None
  9939 ;; Return value:  Size  Location     Type
  9940 ;;                  1    wreg      void 
  9941 ;; Registers used:
  9942 ;;		wreg, status,2, status,0, cstack
  9943 ;; Tracked objects:
  9944 ;;		On entry : 0/0
  9945 ;;		On exit  : 0/0
  9946 ;;		Unchanged: 0/0
  9947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9951 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9952 ;;Total ram usage:        0 bytes
  9953 ;; Hardware stack levels used: 1
  9954 ;; Hardware stack levels required when called: 9
  9955 ;; This function calls:
  9956 ;;		_TMR4_SetInterruptHandler
  9957 ;; This function is called by:
  9958 ;;		_SYSTEM_Initialize
  9959 ;; This function uses a non-reentrant model
  9960 ;;
  9961                           
  9962                           	psect	text48
  9963  0042F6                     __ptext48:
  9964                           	callstack 0
  9965  0042F6                     _TMR4_Initialize:
  9966                           	callstack 20
  9967  0042F6                     
  9968                           ;mcc_generated_files/tmr4.c: 70:     T4CLKCON = 0x01;
  9969  0042F6  0E01               	movlw	1
  9970  0042F8  6EA2               	movwf	162,c	;volatile
  9971                           
  9972                           ;mcc_generated_files/tmr4.c: 73:     T4HLT = 0x00;
  9973  0042FA  0E00               	movlw	0
  9974  0042FC  6EA1               	movwf	161,c	;volatile
  9975                           
  9976                           ;mcc_generated_files/tmr4.c: 76:     T4RST = 0x00;
  9977  0042FE  0E00               	movlw	0
  9978  004300  6EA3               	movwf	163,c	;volatile
  9979                           
  9980                           ;mcc_generated_files/tmr4.c: 79:     T4PR = 0xF9;
  9981  004302  0EF9               	movlw	249
  9982  004304  6E9F               	movwf	159,c	;volatile
  9983                           
  9984                           ;mcc_generated_files/tmr4.c: 82:     T4TMR = 0x00;
  9985  004306  0E00               	movlw	0
  9986  004308  6E9E               	movwf	158,c	;volatile
  9987  00430A                     
  9988                           ;mcc_generated_files/tmr4.c: 85:     PIR7bits.TMR4IF = 0;
  9989  00430A  0139               	movlb	57	; () banked
  9990  00430C  91A7               	bcf	167,0,b	;volatile
  9991  00430E                     
  9992                           ; BSR set to: 57
  9993                           ;mcc_generated_files/tmr4.c: 88:     PIE7bits.TMR4IE = 1;
  9994  00430E  8197               	bsf	151,0,b	;volatile
  9995  004310                     
  9996                           ; BSR set to: 57
  9997                           ;mcc_generated_files/tmr4.c: 91:     TMR4_SetInterruptHandler(TMR4_DefaultInterruptHandl
      +                          er);
  9998  004310  0EA4               	movlw	low _TMR4_DefaultInterruptHandler
  9999  004312  6E20               	movwf	TMR4_SetInterruptHandler@InterruptHandler^0,c
 10000  004314  0E45               	movlw	high _TMR4_DefaultInterruptHandler
 10001  004316  6E21               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)^0,c
 10002  004318  ECBB  F022         	call	_TMR4_SetInterruptHandler	;wreg free
 10003  00431C                     
 10004                           ;mcc_generated_files/tmr4.c: 94:     T4CON = 0xE0;
 10005  00431C  0EE0               	movlw	224
 10006  00431E  6EA0               	movwf	160,c	;volatile
 10007  004320  0012               	return		;funcret
 10008  004322                     __end_of_TMR4_Initialize:
 10009                           	callstack 0
 10010                           
 10011 ;; *************** function _TMR4_SetInterruptHandler *****************
 10012 ;; Defined at:
 10013 ;;		line 194 in file "mcc_generated_files/tmr4.c"
 10014 ;; Parameters:    Size  Location     Type
 10015 ;;  InterruptHan    2   31[COMRAM] PTR FTN()void 
 10016 ;;		 -> TMR4_10msISR(1), TMR4_DefaultInterruptHandler(1), 
 10017 ;; Auto vars:     Size  Location     Type
 10018 ;;		None
 10019 ;; Return value:  Size  Location     Type
 10020 ;;                  1    wreg      void 
 10021 ;; Registers used:
 10022 ;;		wreg, status,2, status,0
 10023 ;; Tracked objects:
 10024 ;;		On entry : 0/0
 10025 ;;		On exit  : 0/0
 10026 ;;		Unchanged: 0/0
 10027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10028 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10031 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10032 ;;Total ram usage:        2 bytes
 10033 ;; Hardware stack levels used: 1
 10034 ;; Hardware stack levels required when called: 8
 10035 ;; This function calls:
 10036 ;;		Nothing
 10037 ;; This function is called by:
 10038 ;;		_TMR4_Initialize
 10039 ;;		_main
 10040 ;; This function uses a non-reentrant model
 10041 ;;
 10042                           
 10043                           	psect	text49
 10044  004576                     __ptext49:
 10045                           	callstack 0
 10046  004576                     _TMR4_SetInterruptHandler:
 10047                           	callstack 22
 10048  004576                     
 10049                           ;mcc_generated_files/tmr4.c: 195:     TMR4_InterruptHandler = InterruptHandler;
 10050  004576  C020  F0F1         	movff	TMR4_SetInterruptHandler@InterruptHandler,_TMR4_InterruptHandler
 10051  00457A  C021  F0F2         	movff	TMR4_SetInterruptHandler@InterruptHandler+1,_TMR4_InterruptHandler+1
 10052  00457E  0012               	return		;funcret
 10053  004580                     __end_of_TMR4_SetInterruptHandler:
 10054                           	callstack 0
 10055                           
 10056 ;; *************** function _TMR3_Initialize *****************
 10057 ;; Defined at:
 10058 ;;		line 63 in file "mcc_generated_files/tmr3.c"
 10059 ;; Parameters:    Size  Location     Type
 10060 ;;		None
 10061 ;; Auto vars:     Size  Location     Type
 10062 ;;		None
 10063 ;; Return value:  Size  Location     Type
 10064 ;;                  1    wreg      void 
 10065 ;; Registers used:
 10066 ;;		wreg, status,2, status,0
 10067 ;; Tracked objects:
 10068 ;;		On entry : 0/0
 10069 ;;		On exit  : 0/0
 10070 ;;		Unchanged: 0/0
 10071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10074 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10075 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10076 ;;Total ram usage:        2 bytes
 10077 ;; Hardware stack levels used: 1
 10078 ;; Hardware stack levels required when called: 8
 10079 ;; This function calls:
 10080 ;;		Nothing
 10081 ;; This function is called by:
 10082 ;;		_SYSTEM_Initialize
 10083 ;; This function uses a non-reentrant model
 10084 ;;
 10085                           
 10086                           	psect	text50
 10087  004096                     __ptext50:
 10088                           	callstack 0
 10089  004096                     _TMR3_Initialize:
 10090                           	callstack 21
 10091  004096                     
 10092                           ;mcc_generated_files/tmr3.c: 68:     T3GCON = 0x00;
 10093  004096  0E00               	movlw	0
 10094  004098  6EA7               	movwf	167,c	;volatile
 10095                           
 10096                           ;mcc_generated_files/tmr3.c: 71:     T3GATE = 0x00;
 10097  00409A  0E00               	movlw	0
 10098  00409C  6EA8               	movwf	168,c	;volatile
 10099                           
 10100                           ;mcc_generated_files/tmr3.c: 74:     T3CLK = 0x05;
 10101  00409E  0E05               	movlw	5
 10102  0040A0  6EA9               	movwf	169,c	;volatile
 10103                           
 10104                           ;mcc_generated_files/tmr3.c: 77:     TMR3H = 0x00;
 10105  0040A2  0E00               	movlw	0
 10106  0040A4  6EA5               	movwf	165,c	;volatile
 10107                           
 10108                           ;mcc_generated_files/tmr3.c: 80:     TMR3L = 0x00;
 10109  0040A6  0E00               	movlw	0
 10110  0040A8  6EA4               	movwf	164,c	;volatile
 10111  0040AA                     
 10112                           ;mcc_generated_files/tmr3.c: 83:     PIR6bits.TMR3IF = 0;
 10113  0040AA  0139               	movlb	57	; () banked
 10114  0040AC  9DA6               	bcf	166,6,b	;volatile
 10115  0040AE                     
 10116                           ; BSR set to: 57
 10117                           ;mcc_generated_files/tmr3.c: 86:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 10118  0040AE  50A4               	movf	164,w,c	;volatile
 10119  0040B0  006F FE94  F020    	movff	16293,??_TMR3_Initialize	;volatile
 10120  0040B6  6A21               	clrf	(??_TMR3_Initialize+1)^0,c
 10121  0040B8  C020  F021         	movff	??_TMR3_Initialize,??_TMR3_Initialize+1
 10122  0040BC  6A20               	clrf	??_TMR3_Initialize^0,c
 10123  0040BE  1020               	iorwf	??_TMR3_Initialize^0,w,c
 10124  0040C0  0100               	movlb	0	; () banked
 10125  0040C2  6FF3               	movwf	_timer3ReloadVal& (0+255),b	;volatile
 10126  0040C4  5021               	movf	(??_TMR3_Initialize+1)^0,w,c
 10127  0040C6  6FF4               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
 10128  0040C8                     
 10129                           ; BSR set to: 0
 10130                           ;mcc_generated_files/tmr3.c: 89:     T3CON = 0x01;
 10131  0040C8  0E01               	movlw	1
 10132  0040CA  6EA6               	movwf	166,c	;volatile
 10133  0040CC                     
 10134                           ; BSR set to: 0
 10135  0040CC  0012               	return		;funcret
 10136  0040CE                     __end_of_TMR3_Initialize:
 10137                           	callstack 0
 10138                           
 10139 ;; *************** function _TMR2_Initialize *****************
 10140 ;; Defined at:
 10141 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 10142 ;; Parameters:    Size  Location     Type
 10143 ;;		None
 10144 ;; Auto vars:     Size  Location     Type
 10145 ;;		None
 10146 ;; Return value:  Size  Location     Type
 10147 ;;                  1    wreg      void 
 10148 ;; Registers used:
 10149 ;;		wreg, status,2
 10150 ;; Tracked objects:
 10151 ;;		On entry : 0/0
 10152 ;;		On exit  : 0/0
 10153 ;;		Unchanged: 0/0
 10154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10158 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10159 ;;Total ram usage:        0 bytes
 10160 ;; Hardware stack levels used: 1
 10161 ;; Hardware stack levels required when called: 8
 10162 ;; This function calls:
 10163 ;;		Nothing
 10164 ;; This function is called by:
 10165 ;;		_SYSTEM_Initialize
 10166 ;; This function uses a non-reentrant model
 10167 ;;
 10168                           
 10169                           	psect	text51
 10170  00447E                     __ptext51:
 10171                           	callstack 0
 10172  00447E                     _TMR2_Initialize:
 10173                           	callstack 21
 10174  00447E                     
 10175                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x05;
 10176  00447E  0E05               	movlw	5
 10177  004480  6EAE               	movwf	174,c	;volatile
 10178                           
 10179                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 10180  004482  0E00               	movlw	0
 10181  004484  6EAD               	movwf	173,c	;volatile
 10182                           
 10183                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 10184  004486  0E00               	movlw	0
 10185  004488  6EAF               	movwf	175,c	;volatile
 10186  00448A                     
 10187                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0xFF;
 10188  00448A  68AB               	setf	171,c	;volatile
 10189                           
 10190                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 10191  00448C  0E00               	movlw	0
 10192  00448E  6EAA               	movwf	170,c	;volatile
 10193  004490                     
 10194                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 10195  004490  0139               	movlb	57	; () banked
 10196  004492  95A4               	bcf	164,2,b	;volatile
 10197                           
 10198                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xB0;
 10199  004494  0EB0               	movlw	176
 10200  004496  6EAC               	movwf	172,c	;volatile
 10201  004498                     
 10202                           ; BSR set to: 57
 10203  004498  0012               	return		;funcret
 10204  00449A                     __end_of_TMR2_Initialize:
 10205                           	callstack 0
 10206                           
 10207 ;; *************** function _SMT1_Initialize *****************
 10208 ;; Defined at:
 10209 ;;		line 60 in file "mcc_generated_files/smt1.c"
 10210 ;; Parameters:    Size  Location     Type
 10211 ;;		None
 10212 ;; Auto vars:     Size  Location     Type
 10213 ;;		None
 10214 ;; Return value:  Size  Location     Type
 10215 ;;                  1    wreg      void 
 10216 ;; Registers used:
 10217 ;;		wreg, status,2
 10218 ;; Tracked objects:
 10219 ;;		On entry : 0/0
 10220 ;;		On exit  : 0/0
 10221 ;;		Unchanged: 0/0
 10222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10226 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10227 ;;Total ram usage:        0 bytes
 10228 ;; Hardware stack levels used: 1
 10229 ;; Hardware stack levels required when called: 8
 10230 ;; This function calls:
 10231 ;;		Nothing
 10232 ;; This function is called by:
 10233 ;;		_SYSTEM_Initialize
 10234 ;; This function uses a non-reentrant model
 10235 ;;
 10236                           
 10237                           	psect	text52
 10238  0041DC                     __ptext52:
 10239                           	callstack 0
 10240  0041DC                     _SMT1_Initialize:
 10241                           	callstack 21
 10242  0041DC                     
 10243                           ;mcc_generated_files/smt1.c: 63:     SMT1CON0 = 0x80;
 10244  0041DC  0E80               	movlw	128
 10245  0041DE  013F               	movlb	63	; () banked
 10246  0041E0  6F1E               	movwf	30,b	;volatile
 10247                           
 10248                           ;mcc_generated_files/smt1.c: 66:     SMT1CON1 = 0x42;
 10249  0041E2  0E42               	movlw	66
 10250  0041E4  6F1F               	movwf	31,b	;volatile
 10251                           
 10252                           ;mcc_generated_files/smt1.c: 69:     SMT1STAT = 0x00;
 10253  0041E6  0E00               	movlw	0
 10254  0041E8  6F20               	movwf	32,b	;volatile
 10255                           
 10256                           ;mcc_generated_files/smt1.c: 72:     SMT1CLK = 0x04;
 10257  0041EA  0E04               	movlw	4
 10258  0041EC  6F21               	movwf	33,b	;volatile
 10259                           
 10260                           ;mcc_generated_files/smt1.c: 75:     SMT1WIN = 0x00;
 10261  0041EE  0E00               	movlw	0
 10262  0041F0  6F23               	movwf	35,b	;volatile
 10263                           
 10264                           ;mcc_generated_files/smt1.c: 78:     SMT1SIG = 0x00;
 10265  0041F2  0E00               	movlw	0
 10266  0041F4  6F22               	movwf	34,b	;volatile
 10267                           
 10268                           ;mcc_generated_files/smt1.c: 81:     SMT1PRU = 0x01;
 10269  0041F6  0E01               	movlw	1
 10270  0041F8  6F1D               	movwf	29,b	;volatile
 10271  0041FA                     
 10272                           ; BSR set to: 63
 10273                           ;mcc_generated_files/smt1.c: 84:     SMT1PRH = 0xFF;
 10274  0041FA  691C               	setf	28,b	;volatile
 10275  0041FC                     
 10276                           ; BSR set to: 63
 10277                           ;mcc_generated_files/smt1.c: 87:     SMT1PRL = 0xFF;
 10278  0041FC  691B               	setf	27,b	;volatile
 10279  0041FE                     
 10280                           ; BSR set to: 63
 10281                           ;mcc_generated_files/smt1.c: 90:     PIE1bits.SMT1IE = 1;
 10282  0041FE  0139               	movlb	57	; () banked
 10283  004200  8B91               	bsf	145,5,b	;volatile
 10284  004202                     
 10285                           ; BSR set to: 57
 10286                           ;mcc_generated_files/smt1.c: 93:     PIE1bits.SMT1PWAIE = 1;
 10287  004202  8F91               	bsf	145,7,b	;volatile
 10288  004204                     
 10289                           ; BSR set to: 57
 10290                           ;mcc_generated_files/smt1.c: 96:     PIE1bits.SMT1PRAIE = 1;
 10291  004204  8D91               	bsf	145,6,b	;volatile
 10292  004206                     
 10293                           ; BSR set to: 57
 10294                           ;mcc_generated_files/smt1.c: 99:     SMT1CON1bits.SMT1GO = 1;
 10295  004206  013F               	movlb	63	; () banked
 10296  004208  8F1F               	bsf	31,7,b	;volatile
 10297  00420A                     
 10298                           ; BSR set to: 63
 10299  00420A  0012               	return		;funcret
 10300  00420C                     __end_of_SMT1_Initialize:
 10301                           	callstack 0
 10302                           
 10303 ;; *************** function _PWM8_Initialize *****************
 10304 ;; Defined at:
 10305 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 10306 ;; Parameters:    Size  Location     Type
 10307 ;;		None
 10308 ;; Auto vars:     Size  Location     Type
 10309 ;;		None
 10310 ;; Return value:  Size  Location     Type
 10311 ;;                  1    wreg      void 
 10312 ;; Registers used:
 10313 ;;		wreg, status,2
 10314 ;; Tracked objects:
 10315 ;;		On entry : 0/0
 10316 ;;		On exit  : 0/0
 10317 ;;		Unchanged: 0/0
 10318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10323 ;;Total ram usage:        0 bytes
 10324 ;; Hardware stack levels used: 1
 10325 ;; Hardware stack levels required when called: 8
 10326 ;; This function calls:
 10327 ;;		Nothing
 10328 ;; This function is called by:
 10329 ;;		_SYSTEM_Initialize
 10330 ;; This function uses a non-reentrant model
 10331 ;;
 10332                           
 10333                           	psect	text53
 10334  00449A                     __ptext53:
 10335                           	callstack 0
 10336  00449A                     _PWM8_Initialize:
 10337                           	callstack 21
 10338  00449A                     
 10339                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 10340  00449A  0E80               	movlw	128
 10341  00449C  6E62               	movwf	98,c	;volatile
 10342                           
 10343                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 10344  00449E  0E00               	movlw	0
 10345  0044A0  6E61               	movwf	97,c	;volatile
 10346                           
 10347                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x00;
 10348  0044A2  0E00               	movlw	0
 10349  0044A4  6E60               	movwf	96,c	;volatile
 10350                           
 10351                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 2;
 10352  0044A6  013F               	movlb	63	; () banked
 10353  0044A8  515F               	movf	95,w,b	;volatile
 10354  0044AA  0B3F               	andlw	-193
 10355  0044AC  0980               	iorlw	128
 10356  0044AE  6F5F               	movwf	95,b	;volatile
 10357  0044B0                     
 10358                           ; BSR set to: 63
 10359  0044B0  0012               	return		;funcret
 10360  0044B2                     __end_of_PWM8_Initialize:
 10361                           	callstack 0
 10362                           
 10363 ;; *************** function _PWM7_Initialize *****************
 10364 ;; Defined at:
 10365 ;;		line 58 in file "mcc_generated_files/pwm7.c"
 10366 ;; Parameters:    Size  Location     Type
 10367 ;;		None
 10368 ;; Auto vars:     Size  Location     Type
 10369 ;;		None
 10370 ;; Return value:  Size  Location     Type
 10371 ;;                  1    wreg      void 
 10372 ;; Registers used:
 10373 ;;		wreg, status,2
 10374 ;; Tracked objects:
 10375 ;;		On entry : 0/0
 10376 ;;		On exit  : 0/0
 10377 ;;		Unchanged: 0/0
 10378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10382 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10383 ;;Total ram usage:        0 bytes
 10384 ;; Hardware stack levels used: 1
 10385 ;; Hardware stack levels required when called: 8
 10386 ;; This function calls:
 10387 ;;		Nothing
 10388 ;; This function is called by:
 10389 ;;		_SYSTEM_Initialize
 10390 ;; This function uses a non-reentrant model
 10391 ;;
 10392                           
 10393                           	psect	text54
 10394  0044B2                     __ptext54:
 10395                           	callstack 0
 10396  0044B2                     _PWM7_Initialize:
 10397                           	callstack 21
 10398  0044B2                     
 10399                           ;mcc_generated_files/pwm7.c: 62:     PWM7CON = 0x80;
 10400  0044B2  0E80               	movlw	128
 10401  0044B4  6E66               	movwf	102,c	;volatile
 10402                           
 10403                           ;mcc_generated_files/pwm7.c: 65:     PWM7DCH = 0x00;
 10404  0044B6  0E00               	movlw	0
 10405  0044B8  6E65               	movwf	101,c	;volatile
 10406                           
 10407                           ;mcc_generated_files/pwm7.c: 68:     PWM7DCL = 0x00;
 10408  0044BA  0E00               	movlw	0
 10409  0044BC  6E64               	movwf	100,c	;volatile
 10410                           
 10411                           ;mcc_generated_files/pwm7.c: 71:     CCPTMRS1bits.P7TSEL = 2;
 10412  0044BE  013F               	movlb	63	; () banked
 10413  0044C0  515F               	movf	95,w,b	;volatile
 10414  0044C2  0BCF               	andlw	-49
 10415  0044C4  0920               	iorlw	32
 10416  0044C6  6F5F               	movwf	95,b	;volatile
 10417  0044C8                     
 10418                           ; BSR set to: 63
 10419  0044C8  0012               	return		;funcret
 10420  0044CA                     __end_of_PWM7_Initialize:
 10421                           	callstack 0
 10422                           
 10423 ;; *************** function _PWM6_Initialize *****************
 10424 ;; Defined at:
 10425 ;;		line 58 in file "mcc_generated_files/pwm6.c"
 10426 ;; Parameters:    Size  Location     Type
 10427 ;;		None
 10428 ;; Auto vars:     Size  Location     Type
 10429 ;;		None
 10430 ;; Return value:  Size  Location     Type
 10431 ;;                  1    wreg      void 
 10432 ;; Registers used:
 10433 ;;		wreg, status,2
 10434 ;; Tracked objects:
 10435 ;;		On entry : 0/0
 10436 ;;		On exit  : 0/0
 10437 ;;		Unchanged: 0/0
 10438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10442 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10443 ;;Total ram usage:        0 bytes
 10444 ;; Hardware stack levels used: 1
 10445 ;; Hardware stack levels required when called: 8
 10446 ;; This function calls:
 10447 ;;		Nothing
 10448 ;; This function is called by:
 10449 ;;		_SYSTEM_Initialize
 10450 ;; This function uses a non-reentrant model
 10451 ;;
 10452                           
 10453                           	psect	text55
 10454  0044CA                     __ptext55:
 10455                           	callstack 0
 10456  0044CA                     _PWM6_Initialize:
 10457                           	callstack 21
 10458  0044CA                     
 10459                           ;mcc_generated_files/pwm6.c: 62:     PWM6CON = 0x80;
 10460  0044CA  0E80               	movlw	128
 10461  0044CC  6E6A               	movwf	106,c	;volatile
 10462                           
 10463                           ;mcc_generated_files/pwm6.c: 65:     PWM6DCH = 0x59;
 10464  0044CE  0E59               	movlw	89
 10465  0044D0  6E69               	movwf	105,c	;volatile
 10466                           
 10467                           ;mcc_generated_files/pwm6.c: 68:     PWM6DCL = 0x40;
 10468  0044D2  0E40               	movlw	64
 10469  0044D4  6E68               	movwf	104,c	;volatile
 10470                           
 10471                           ;mcc_generated_files/pwm6.c: 71:     CCPTMRS1bits.P6TSEL = 1;
 10472  0044D6  013F               	movlb	63	; () banked
 10473  0044D8  515F               	movf	95,w,b	;volatile
 10474  0044DA  0BF3               	andlw	-13
 10475  0044DC  0904               	iorlw	4
 10476  0044DE  6F5F               	movwf	95,b	;volatile
 10477  0044E0                     
 10478                           ; BSR set to: 63
 10479  0044E0  0012               	return		;funcret
 10480  0044E2                     __end_of_PWM6_Initialize:
 10481                           	callstack 0
 10482                           
 10483 ;; *************** function _PWM5_Initialize *****************
 10484 ;; Defined at:
 10485 ;;		line 58 in file "mcc_generated_files/pwm5.c"
 10486 ;; Parameters:    Size  Location     Type
 10487 ;;		None
 10488 ;; Auto vars:     Size  Location     Type
 10489 ;;		None
 10490 ;; Return value:  Size  Location     Type
 10491 ;;                  1    wreg      void 
 10492 ;; Registers used:
 10493 ;;		wreg, status,2
 10494 ;; Tracked objects:
 10495 ;;		On entry : 0/0
 10496 ;;		On exit  : 0/0
 10497 ;;		Unchanged: 0/0
 10498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10502 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10503 ;;Total ram usage:        0 bytes
 10504 ;; Hardware stack levels used: 1
 10505 ;; Hardware stack levels required when called: 8
 10506 ;; This function calls:
 10507 ;;		Nothing
 10508 ;; This function is called by:
 10509 ;;		_SYSTEM_Initialize
 10510 ;; This function uses a non-reentrant model
 10511 ;;
 10512                           
 10513                           	psect	text56
 10514  0044E2                     __ptext56:
 10515                           	callstack 0
 10516  0044E2                     _PWM5_Initialize:
 10517                           	callstack 21
 10518  0044E2                     
 10519                           ;mcc_generated_files/pwm5.c: 62:     PWM5CON = 0x80;
 10520  0044E2  0E80               	movlw	128
 10521  0044E4  6E6E               	movwf	110,c	;volatile
 10522                           
 10523                           ;mcc_generated_files/pwm5.c: 65:     PWM5DCH = 0x59;
 10524  0044E6  0E59               	movlw	89
 10525  0044E8  6E6D               	movwf	109,c	;volatile
 10526                           
 10527                           ;mcc_generated_files/pwm5.c: 68:     PWM5DCL = 0x40;
 10528  0044EA  0E40               	movlw	64
 10529  0044EC  6E6C               	movwf	108,c	;volatile
 10530                           
 10531                           ;mcc_generated_files/pwm5.c: 71:     CCPTMRS1bits.P5TSEL = 1;
 10532  0044EE  013F               	movlb	63	; () banked
 10533  0044F0  515F               	movf	95,w,b	;volatile
 10534  0044F2  0BFC               	andlw	-4
 10535  0044F4  0901               	iorlw	1
 10536  0044F6  6F5F               	movwf	95,b	;volatile
 10537  0044F8                     
 10538                           ; BSR set to: 63
 10539  0044F8  0012               	return		;funcret
 10540  0044FA                     __end_of_PWM5_Initialize:
 10541                           	callstack 0
 10542                           
 10543 ;; *************** function _PMD_Initialize *****************
 10544 ;; Defined at:
 10545 ;;		line 86 in file "mcc_generated_files/mcc.c"
 10546 ;; Parameters:    Size  Location     Type
 10547 ;;		None
 10548 ;; Auto vars:     Size  Location     Type
 10549 ;;		None
 10550 ;; Return value:  Size  Location     Type
 10551 ;;                  1    wreg      void 
 10552 ;; Registers used:
 10553 ;;		wreg, status,2
 10554 ;; Tracked objects:
 10555 ;;		On entry : 0/0
 10556 ;;		On exit  : 0/0
 10557 ;;		Unchanged: 0/0
 10558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10562 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10563 ;;Total ram usage:        0 bytes
 10564 ;; Hardware stack levels used: 1
 10565 ;; Hardware stack levels required when called: 8
 10566 ;; This function calls:
 10567 ;;		Nothing
 10568 ;; This function is called by:
 10569 ;;		_SYSTEM_Initialize
 10570 ;; This function uses a non-reentrant model
 10571 ;;
 10572                           
 10573                           	psect	text57
 10574  0043F8                     __ptext57:
 10575                           	callstack 0
 10576  0043F8                     _PMD_Initialize:
 10577                           	callstack 21
 10578  0043F8                     
 10579                           ;mcc_generated_files/mcc.c: 89:     PMD0 = 0x00;
 10580  0043F8  0E00               	movlw	0
 10581  0043FA  0139               	movlb	57	; () banked
 10582  0043FC  6FC0               	movwf	192,b	;volatile
 10583                           
 10584                           ;mcc_generated_files/mcc.c: 91:     PMD1 = 0x00;
 10585  0043FE  0E00               	movlw	0
 10586  004400  6FC1               	movwf	193,b	;volatile
 10587                           
 10588                           ;mcc_generated_files/mcc.c: 93:     PMD2 = 0x00;
 10589  004402  0E00               	movlw	0
 10590  004404  6FC2               	movwf	194,b	;volatile
 10591                           
 10592                           ;mcc_generated_files/mcc.c: 95:     PMD3 = 0x00;
 10593  004406  0E00               	movlw	0
 10594  004408  6FC3               	movwf	195,b	;volatile
 10595                           
 10596                           ;mcc_generated_files/mcc.c: 97:     PMD4 = 0x00;
 10597  00440A  0E00               	movlw	0
 10598  00440C  6FC4               	movwf	196,b	;volatile
 10599                           
 10600                           ;mcc_generated_files/mcc.c: 99:     PMD5 = 0x00;
 10601  00440E  0E00               	movlw	0
 10602  004410  6FC5               	movwf	197,b	;volatile
 10603                           
 10604                           ;mcc_generated_files/mcc.c: 101:     PMD6 = 0x00;
 10605  004412  0E00               	movlw	0
 10606  004414  6FC6               	movwf	198,b	;volatile
 10607                           
 10608                           ;mcc_generated_files/mcc.c: 103:     PMD7 = 0x00;
 10609  004416  0E00               	movlw	0
 10610  004418  6FC7               	movwf	199,b	;volatile
 10611  00441A                     
 10612                           ; BSR set to: 57
 10613  00441A  0012               	return		;funcret
 10614  00441C                     __end_of_PMD_Initialize:
 10615                           	callstack 0
 10616                           
 10617 ;; *************** function _PIN_MANAGER_Initialize *****************
 10618 ;; Defined at:
 10619 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 10620 ;; Parameters:    Size  Location     Type
 10621 ;;		None
 10622 ;; Auto vars:     Size  Location     Type
 10623 ;;		None
 10624 ;; Return value:  Size  Location     Type
 10625 ;;                  1    wreg      void 
 10626 ;; Registers used:
 10627 ;;		wreg, status,2
 10628 ;; Tracked objects:
 10629 ;;		On entry : 0/0
 10630 ;;		On exit  : 0/0
 10631 ;;		Unchanged: 0/0
 10632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10636 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10637 ;;Total ram usage:        0 bytes
 10638 ;; Hardware stack levels used: 1
 10639 ;; Hardware stack levels required when called: 8
 10640 ;; This function calls:
 10641 ;;		Nothing
 10642 ;; This function is called by:
 10643 ;;		_SYSTEM_Initialize
 10644 ;; This function uses a non-reentrant model
 10645 ;;
 10646                           
 10647                           	psect	text58
 10648  00356C                     __ptext58:
 10649                           	callstack 0
 10650  00356C                     _PIN_MANAGER_Initialize:
 10651                           	callstack 21
 10652  00356C                     
 10653                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
 10654  00356C  0E00               	movlw	0
 10655  00356E  6EBE               	movwf	190,c	;volatile
 10656                           
 10657                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
 10658  003570  0E00               	movlw	0
 10659  003572  6EBD               	movwf	189,c	;volatile
 10660                           
 10661                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x24;
 10662  003574  0E24               	movlw	36
 10663  003576  6EBA               	movwf	186,c	;volatile
 10664                           
 10665                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
 10666  003578  0E00               	movlw	0
 10667  00357A  6EBB               	movwf	187,c	;volatile
 10668                           
 10669                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
 10670  00357C  0E00               	movlw	0
 10671  00357E  6EBC               	movwf	188,c	;volatile
 10672                           
 10673                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
 10674  003580  0E07               	movlw	7
 10675  003582  6EC6               	movwf	198,c	;volatile
 10676                           
 10677                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xC0;
 10678  003584  0EC0               	movlw	192
 10679  003586  6EC2               	movwf	194,c	;volatile
 10680                           
 10681                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xF7;
 10682  003588  0EF7               	movlw	247
 10683  00358A  6EC3               	movwf	195,c	;volatile
 10684  00358C                     
 10685                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xFF;
 10686  00358C  68C4               	setf	196,c	;volatile
 10687  00358E                     
 10688                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
 10689  00358E  68C5               	setf	197,c	;volatile
 10690                           
 10691                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0x1F;
 10692  003590  0E1F               	movlw	31
 10693  003592  013A               	movlb	58	; () banked
 10694  003594  6F70               	movwf	112,b	;volatile
 10695  003596                     
 10696                           ; BSR set to: 58
 10697                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0xFF;
 10698  003596  6960               	setf	96,b	;volatile
 10699                           
 10700                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0xC0;
 10701  003598  0EC0               	movlw	192
 10702  00359A  6F50               	movwf	80,b	;volatile
 10703                           
 10704                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
 10705  00359C  0E07               	movlw	7
 10706  00359E  6F80               	movwf	128,b	;volatile
 10707                           
 10708                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x7F;
 10709  0035A0  0E7F               	movlw	127
 10710  0035A2  6F40               	movwf	64,b	;volatile
 10711                           
 10712                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
 10713  0035A4  0E00               	movlw	0
 10714  0035A6  6F71               	movwf	113,b	;volatile
 10715                           
 10716                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
 10717  0035A8  0E00               	movlw	0
 10718  0035AA  6F81               	movwf	129,b	;volatile
 10719                           
 10720                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
 10721  0035AC  0E00               	movlw	0
 10722  0035AE  6F51               	movwf	81,b	;volatile
 10723                           
 10724                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
 10725  0035B0  0E00               	movlw	0
 10726  0035B2  6F41               	movwf	65,b	;volatile
 10727                           
 10728                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
 10729  0035B4  0E00               	movlw	0
 10730  0035B6  6F61               	movwf	97,b	;volatile
 10731                           
 10732                           ;mcc_generated_files/pin_manager.c: 96:     RB1I2C = 0x00;
 10733  0035B8  0E00               	movlw	0
 10734  0035BA  6F5A               	movwf	90,b	;volatile
 10735                           
 10736                           ;mcc_generated_files/pin_manager.c: 97:     RB2I2C = 0x00;
 10737  0035BC  0E00               	movlw	0
 10738  0035BE  6F5B               	movwf	91,b	;volatile
 10739                           
 10740                           ;mcc_generated_files/pin_manager.c: 98:     RC3I2C = 0x00;
 10741  0035C0  0E00               	movlw	0
 10742  0035C2  6F6A               	movwf	106,b	;volatile
 10743                           
 10744                           ;mcc_generated_files/pin_manager.c: 99:     RC4I2C = 0x00;
 10745  0035C4  0E00               	movlw	0
 10746  0035C6  6F6B               	movwf	107,b	;volatile
 10747                           
 10748                           ;mcc_generated_files/pin_manager.c: 100:     RD0I2C = 0x00;
 10749  0035C8  0E00               	movlw	0
 10750  0035CA  6F7A               	movwf	122,b	;volatile
 10751                           
 10752                           ;mcc_generated_files/pin_manager.c: 101:     RD1I2C = 0x00;
 10753  0035CC  0E00               	movlw	0
 10754  0035CE  6F7B               	movwf	123,b	;volatile
 10755                           
 10756                           ;mcc_generated_files/pin_manager.c: 106:     ODCONE = 0x00;
 10757  0035D0  0E00               	movlw	0
 10758  0035D2  6F82               	movwf	130,b	;volatile
 10759                           
 10760                           ;mcc_generated_files/pin_manager.c: 107:     ODCONA = 0x00;
 10761  0035D4  0E00               	movlw	0
 10762  0035D6  6F42               	movwf	66,b	;volatile
 10763                           
 10764                           ;mcc_generated_files/pin_manager.c: 108:     ODCONB = 0x00;
 10765  0035D8  0E00               	movlw	0
 10766  0035DA  6F52               	movwf	82,b	;volatile
 10767                           
 10768                           ;mcc_generated_files/pin_manager.c: 109:     ODCONC = 0x00;
 10769  0035DC  0E00               	movlw	0
 10770  0035DE  6F62               	movwf	98,b	;volatile
 10771                           
 10772                           ;mcc_generated_files/pin_manager.c: 110:     ODCOND = 0x00;
 10773  0035E0  0E00               	movlw	0
 10774  0035E2  6F72               	movwf	114,b	;volatile
 10775  0035E4                     
 10776                           ; BSR set to: 58
 10777                           ;mcc_generated_files/pin_manager.c: 115:     SLRCONA = 0xFF;
 10778  0035E4  6943               	setf	67,b	;volatile
 10779  0035E6                     
 10780                           ; BSR set to: 58
 10781                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONB = 0xFF;
 10782  0035E6  6953               	setf	83,b	;volatile
 10783  0035E8                     
 10784                           ; BSR set to: 58
 10785                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONC = 0xFF;
 10786  0035E8  6963               	setf	99,b	;volatile
 10787  0035EA                     
 10788                           ; BSR set to: 58
 10789                           ;mcc_generated_files/pin_manager.c: 118:     SLRCOND = 0xFF;
 10790  0035EA  6973               	setf	115,b	;volatile
 10791                           
 10792                           ;mcc_generated_files/pin_manager.c: 119:     SLRCONE = 0x07;
 10793  0035EC  0E07               	movlw	7
 10794  0035EE  6F83               	movwf	131,b	;volatile
 10795  0035F0                     
 10796                           ; BSR set to: 58
 10797                           ;mcc_generated_files/pin_manager.c: 124:     INLVLA = 0xFF;
 10798  0035F0  6944               	setf	68,b	;volatile
 10799  0035F2                     
 10800                           ; BSR set to: 58
 10801                           ;mcc_generated_files/pin_manager.c: 125:     INLVLB = 0xFF;
 10802  0035F2  6954               	setf	84,b	;volatile
 10803  0035F4                     
 10804                           ; BSR set to: 58
 10805                           ;mcc_generated_files/pin_manager.c: 126:     INLVLC = 0xFF;
 10806  0035F4  6964               	setf	100,b	;volatile
 10807  0035F6                     
 10808                           ; BSR set to: 58
 10809                           ;mcc_generated_files/pin_manager.c: 127:     INLVLD = 0xFF;
 10810  0035F6  6974               	setf	116,b	;volatile
 10811                           
 10812                           ;mcc_generated_files/pin_manager.c: 128:     INLVLE = 0x0F;
 10813  0035F8  0E0F               	movlw	15
 10814  0035FA  6F84               	movwf	132,b	;volatile
 10815                           
 10816                           ;mcc_generated_files/pin_manager.c: 137:     CCP3PPS = 0x1F;
 10817  0035FC  0E1F               	movlw	31
 10818  0035FE  6FCF               	movwf	207,b	;volatile
 10819                           
 10820                           ;mcc_generated_files/pin_manager.c: 138:     CLCIN3PPS = 0x09;
 10821  003600  0E09               	movlw	9
 10822  003602  6FDC               	movwf	220,b	;volatile
 10823                           
 10824                           ;mcc_generated_files/pin_manager.c: 139:     RA1PPS = 0x0E;
 10825  003604  0E0E               	movlw	14
 10826  003606  6F01               	movwf	1,b	;volatile
 10827                           
 10828                           ;mcc_generated_files/pin_manager.c: 140:     U1RXPPS = 0x0A;
 10829  003608  0E0A               	movlw	10
 10830  00360A  6FE5               	movwf	229,b	;volatile
 10831                           
 10832                           ;mcc_generated_files/pin_manager.c: 141:     RA0PPS = 0x0D;
 10833  00360C  0E0D               	movlw	13
 10834  00360E  6F00               	movwf	0,b	;volatile
 10835                           
 10836                           ;mcc_generated_files/pin_manager.c: 142:     T5GPPS = 0x1D;
 10837  003610  0E1D               	movlw	29
 10838  003612  6FC9               	movwf	201,b	;volatile
 10839                           
 10840                           ;mcc_generated_files/pin_manager.c: 143:     RA4PPS = 0x10;
 10841  003614  0E10               	movlw	16
 10842  003616  6F04               	movwf	4,b	;volatile
 10843                           
 10844                           ;mcc_generated_files/pin_manager.c: 144:     CLCIN0PPS = 0x07;
 10845  003618  0E07               	movlw	7
 10846  00361A  6FD9               	movwf	217,b	;volatile
 10847                           
 10848                           ;mcc_generated_files/pin_manager.c: 145:     SMT1WINPPS = 0x09;
 10849  00361C  0E09               	movlw	9
 10850  00361E  6FD1               	movwf	209,b	;volatile
 10851                           
 10852                           ;mcc_generated_files/pin_manager.c: 146:     RA3PPS = 0x0F;
 10853  003620  0E0F               	movlw	15
 10854  003622  6F03               	movwf	3,b	;volatile
 10855                           
 10856                           ;mcc_generated_files/pin_manager.c: 147:     RB3PPS = 0x13;
 10857  003624  0E13               	movlw	19
 10858  003626  6F0B               	movwf	11,b	;volatile
 10859                           
 10860                           ;mcc_generated_files/pin_manager.c: 148:     CLCIN2PPS = 0x08;
 10861  003628  0E08               	movlw	8
 10862  00362A  6FDB               	movwf	219,b	;volatile
 10863                           
 10864                           ;mcc_generated_files/pin_manager.c: 149:     SMT1SIGPPS = 0x08;
 10865  00362C  0E08               	movlw	8
 10866  00362E  6FD2               	movwf	210,b	;volatile
 10867                           
 10868                           ;mcc_generated_files/pin_manager.c: 150:     CCP4PPS = 0x1E;
 10869  003630  0E1E               	movlw	30
 10870  003632  6FD0               	movwf	208,b	;volatile
 10871  003634                     
 10872                           ; BSR set to: 58
 10873  003634  0012               	return		;funcret
 10874  003636                     __end_of_PIN_MANAGER_Initialize:
 10875                           	callstack 0
 10876                           
 10877 ;; *************** function _OSCILLATOR_Initialize *****************
 10878 ;; Defined at:
 10879 ;;		line 72 in file "mcc_generated_files/mcc.c"
 10880 ;; Parameters:    Size  Location     Type
 10881 ;;		None
 10882 ;; Auto vars:     Size  Location     Type
 10883 ;;		None
 10884 ;; Return value:  Size  Location     Type
 10885 ;;                  1    wreg      void 
 10886 ;; Registers used:
 10887 ;;		wreg, status,2
 10888 ;; Tracked objects:
 10889 ;;		On entry : 0/0
 10890 ;;		On exit  : 0/0
 10891 ;;		Unchanged: 0/0
 10892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10896 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10897 ;;Total ram usage:        0 bytes
 10898 ;; Hardware stack levels used: 1
 10899 ;; Hardware stack levels required when called: 8
 10900 ;; This function calls:
 10901 ;;		Nothing
 10902 ;; This function is called by:
 10903 ;;		_SYSTEM_Initialize
 10904 ;; This function uses a non-reentrant model
 10905 ;;
 10906                           
 10907                           	psect	text59
 10908  0044FA                     __ptext59:
 10909                           	callstack 0
 10910  0044FA                     _OSCILLATOR_Initialize:
 10911                           	callstack 21
 10912  0044FA                     
 10913                           ;mcc_generated_files/mcc.c: 75:     OSCCON1 = 0x60;
 10914  0044FA  0E60               	movlw	96
 10915  0044FC  0139               	movlb	57	; () banked
 10916  0044FE  6FD9               	movwf	217,b	;volatile
 10917                           
 10918                           ;mcc_generated_files/mcc.c: 77:     OSCCON3 = 0x00;
 10919  004500  0E00               	movlw	0
 10920  004502  6FDB               	movwf	219,b	;volatile
 10921                           
 10922                           ;mcc_generated_files/mcc.c: 79:     OSCEN = 0x00;
 10923  004504  0E00               	movlw	0
 10924  004506  6FDD               	movwf	221,b	;volatile
 10925                           
 10926                           ;mcc_generated_files/mcc.c: 81:     OSCFRQ = 0x08;
 10927  004508  0E08               	movlw	8
 10928  00450A  6FDF               	movwf	223,b	;volatile
 10929                           
 10930                           ;mcc_generated_files/mcc.c: 83:     OSCTUNE = 0x00;
 10931  00450C  0E00               	movlw	0
 10932  00450E  6FDE               	movwf	222,b	;volatile
 10933  004510                     
 10934                           ; BSR set to: 57
 10935  004510  0012               	return		;funcret
 10936  004512                     __end_of_OSCILLATOR_Initialize:
 10937                           	callstack 0
 10938                           
 10939 ;; *************** function _INTERRUPT_Initialize *****************
 10940 ;; Defined at:
 10941 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 10942 ;; Parameters:    Size  Location     Type
 10943 ;;		None
 10944 ;; Auto vars:     Size  Location     Type
 10945 ;;  state           1   31[COMRAM] _Bool 
 10946 ;; Return value:  Size  Location     Type
 10947 ;;                  1    wreg      void 
 10948 ;; Registers used:
 10949 ;;		wreg, status,2
 10950 ;; Tracked objects:
 10951 ;;		On entry : 0/0
 10952 ;;		On exit  : 0/0
 10953 ;;		Unchanged: 0/0
 10954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10956 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10958 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10959 ;;Total ram usage:        1 bytes
 10960 ;; Hardware stack levels used: 1
 10961 ;; Hardware stack levels required when called: 8
 10962 ;; This function calls:
 10963 ;;		Nothing
 10964 ;; This function is called by:
 10965 ;;		_SYSTEM_Initialize
 10966 ;; This function uses a non-reentrant model
 10967 ;;
 10968                           
 10969                           	psect	text60
 10970  003D44                     __ptext60:
 10971                           	callstack 0
 10972  003D44                     _INTERRUPT_Initialize:
 10973                           	callstack 21
 10974  003D44                     
 10975                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 10976  003D44  8AD2               	bsf	210,5,c	;volatile
 10977  003D46                     
 10978                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 10979  003D46  0E00               	movlw	0
 10980  003D48  BED2               	btfsc	16338,7,c	;volatile
 10981  003D4A  0E01               	movlw	1
 10982  003D4C  6E20               	movwf	INTERRUPT_Initialize@state^0,c
 10983  003D4E                     
 10984                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 10985  003D4E  9ED2               	bcf	16338,7,c	;volatile
 10986                           
 10987                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 10988  003D50  0E55               	movlw	85
 10989  003D52  6ED4               	movwf	212,c	;volatile
 10990                           
 10991                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 10992  003D54  0EAA               	movlw	170
 10993  003D56  6ED4               	movwf	212,c	;volatile
 10994  003D58                     
 10995                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 10996  003D58  90D4               	bcf	212,0,c	;volatile
 10997                           
 10998                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTBASEU = 0;
 10999  003D5A  0E00               	movlw	0
 11000  003D5C  6ED7               	movwf	215,c	;volatile
 11001                           
 11002                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTBASEH = 0;
 11003  003D5E  0E00               	movlw	0
 11004  003D60  6ED6               	movwf	214,c	;volatile
 11005                           
 11006                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTBASEL = 8;
 11007  003D62  0E08               	movlw	8
 11008  003D64  6ED5               	movwf	213,c	;volatile
 11009                           
 11010                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 11011  003D66  0E55               	movlw	85
 11012  003D68  6ED4               	movwf	212,c	;volatile
 11013                           
 11014                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 11015  003D6A  0EAA               	movlw	170
 11016  003D6C  6ED4               	movwf	212,c	;volatile
 11017  003D6E                     
 11018                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 11019  003D6E  80D4               	bsf	212,0,c	;volatile
 11020  003D70                     
 11021                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 11022  003D70  B020               	btfsc	INTERRUPT_Initialize@state^0,0,c
 11023  003D72  D002               	bra	u1675
 11024  003D74  9ED2               	bcf	16338,7,c	;volatile
 11025  003D76  D001               	bra	u1676
 11026  003D78                     u1675:
 11027  003D78  8ED2               	bsf	16338,7,c	;volatile
 11028  003D7A                     u1676:
 11029  003D7A                     
 11030                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR3bits.U1TXIP = 0;
 11031  003D7A  0139               	movlb	57	; () banked
 11032  003D7C  9983               	bcf	131,4,b	;volatile
 11033  003D7E                     
 11034                           ; BSR set to: 57
 11035                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR3bits.U1RXIP = 0;
 11036  003D7E  9783               	bcf	131,3,b	;volatile
 11037  003D80                     
 11038                           ; BSR set to: 57
 11039                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR1bits.SMT1PWAIP = 1;
 11040  003D80  8F81               	bsf	129,7,b	;volatile
 11041  003D82                     
 11042                           ; BSR set to: 57
 11043                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR1bits.SMT1IP = 1;
 11044  003D82  8B81               	bsf	129,5,b	;volatile
 11045  003D84                     
 11046                           ; BSR set to: 57
 11047                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR1bits.SMT1PRAIP = 1;
 11048  003D84  8D81               	bsf	129,6,b	;volatile
 11049  003D86                     
 11050                           ; BSR set to: 57
 11051                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR10bits.CCP4IP = 1;
 11052  003D86  818A               	bsf	138,0,b	;volatile
 11053  003D88                     
 11054                           ; BSR set to: 57
 11055                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR8bits.TMR5GIP = 1;
 11056  003D88  8F88               	bsf	136,7,b	;volatile
 11057  003D8A                     
 11058                           ; BSR set to: 57
 11059                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR7bits.TMR4IP = 0;
 11060  003D8A  9187               	bcf	135,0,b	;volatile
 11061  003D8C                     
 11062                           ; BSR set to: 57
 11063                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR9bits.CCP3IP = 1;
 11064  003D8C  8389               	bsf	137,1,b	;volatile
 11065  003D8E                     
 11066                           ; BSR set to: 57
 11067  003D8E  0012               	return		;funcret
 11068  003D90                     __end_of_INTERRUPT_Initialize:
 11069                           	callstack 0
 11070                           
 11071 ;; *************** function _CLC3_Initialize *****************
 11072 ;; Defined at:
 11073 ;;		line 58 in file "mcc_generated_files/clc3.c"
 11074 ;; Parameters:    Size  Location     Type
 11075 ;;		None
 11076 ;; Auto vars:     Size  Location     Type
 11077 ;;		None
 11078 ;; Return value:  Size  Location     Type
 11079 ;;                  1    wreg      void 
 11080 ;; Registers used:
 11081 ;;		wreg, status,2
 11082 ;; Tracked objects:
 11083 ;;		On entry : 0/0
 11084 ;;		On exit  : 0/0
 11085 ;;		Unchanged: 0/0
 11086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11090 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11091 ;;Total ram usage:        0 bytes
 11092 ;; Hardware stack levels used: 1
 11093 ;; Hardware stack levels required when called: 8
 11094 ;; This function calls:
 11095 ;;		Nothing
 11096 ;; This function is called by:
 11097 ;;		_SYSTEM_Initialize
 11098 ;; This function uses a non-reentrant model
 11099 ;;
 11100                           
 11101                           	psect	text61
 11102  004322                     __ptext61:
 11103                           	callstack 0
 11104  004322                     _CLC3_Initialize:
 11105                           	callstack 21
 11106  004322                     
 11107                           ;mcc_generated_files/clc3.c: 63:     CLC3POL = 0x00;
 11108  004322  0E00               	movlw	0
 11109  004324  013C               	movlb	60	; () banked
 11110  004326  6F61               	movwf	97,b	;volatile
 11111                           
 11112                           ;mcc_generated_files/clc3.c: 65:     CLC3SEL0 = 0x03;
 11113  004328  0E03               	movlw	3
 11114  00432A  6F62               	movwf	98,b	;volatile
 11115                           
 11116                           ;mcc_generated_files/clc3.c: 67:     CLC3SEL1 = 0x02;
 11117  00432C  0E02               	movlw	2
 11118  00432E  6F63               	movwf	99,b	;volatile
 11119                           
 11120                           ;mcc_generated_files/clc3.c: 69:     CLC3SEL2 = 0x00;
 11121  004330  0E00               	movlw	0
 11122  004332  6F64               	movwf	100,b	;volatile
 11123                           
 11124                           ;mcc_generated_files/clc3.c: 71:     CLC3SEL3 = 0x00;
 11125  004334  0E00               	movlw	0
 11126  004336  6F65               	movwf	101,b	;volatile
 11127                           
 11128                           ;mcc_generated_files/clc3.c: 73:     CLC3GLS0 = 0x02;
 11129  004338  0E02               	movlw	2
 11130  00433A  6F66               	movwf	102,b	;volatile
 11131                           
 11132                           ;mcc_generated_files/clc3.c: 75:     CLC3GLS1 = 0x08;
 11133  00433C  0E08               	movlw	8
 11134  00433E  6F67               	movwf	103,b	;volatile
 11135                           
 11136                           ;mcc_generated_files/clc3.c: 77:     CLC3GLS2 = 0x00;
 11137  004340  0E00               	movlw	0
 11138  004342  6F68               	movwf	104,b	;volatile
 11139                           
 11140                           ;mcc_generated_files/clc3.c: 79:     CLC3GLS3 = 0x00;
 11141  004344  0E00               	movlw	0
 11142  004346  6F69               	movwf	105,b	;volatile
 11143                           
 11144                           ;mcc_generated_files/clc3.c: 81:     CLC3CON = 0x85;
 11145  004348  0E85               	movlw	133
 11146  00434A  6F60               	movwf	96,b	;volatile
 11147  00434C                     
 11148                           ; BSR set to: 60
 11149  00434C  0012               	return		;funcret
 11150  00434E                     __end_of_CLC3_Initialize:
 11151                           	callstack 0
 11152                           
 11153 ;; *************** function _CCP4_Initialize *****************
 11154 ;; Defined at:
 11155 ;;		line 78 in file "mcc_generated_files/ccp4.c"
 11156 ;; Parameters:    Size  Location     Type
 11157 ;;		None
 11158 ;; Auto vars:     Size  Location     Type
 11159 ;;		None
 11160 ;; Return value:  Size  Location     Type
 11161 ;;                  1    wreg      void 
 11162 ;; Registers used:
 11163 ;;		wreg, status,2, status,0, cstack
 11164 ;; Tracked objects:
 11165 ;;		On entry : 0/0
 11166 ;;		On exit  : 0/0
 11167 ;;		Unchanged: 0/0
 11168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11172 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11173 ;;Total ram usage:        0 bytes
 11174 ;; Hardware stack levels used: 1
 11175 ;; Hardware stack levels required when called: 9
 11176 ;; This function calls:
 11177 ;;		_CCP4_SetCallBack
 11178 ;; This function is called by:
 11179 ;;		_SYSTEM_Initialize
 11180 ;; This function uses a non-reentrant model
 11181 ;;
 11182                           
 11183                           	psect	text62
 11184  00426C                     __ptext62:
 11185                           	callstack 0
 11186  00426C                     _CCP4_Initialize:
 11187                           	callstack 20
 11188  00426C                     
 11189                           ;mcc_generated_files/ccp4.c: 83:  CCP4CON = 0x83;
 11190  00426C  0E83               	movlw	131
 11191  00426E  6E72               	movwf	114,c	;volatile
 11192                           
 11193                           ;mcc_generated_files/ccp4.c: 86:  CCP4CAP = 0x00;
 11194  004270  0E00               	movlw	0
 11195  004272  6E73               	movwf	115,c	;volatile
 11196                           
 11197                           ;mcc_generated_files/ccp4.c: 89:  CCPR4H = 0x00;
 11198  004274  0E00               	movlw	0
 11199  004276  6E71               	movwf	113,c	;volatile
 11200                           
 11201                           ;mcc_generated_files/ccp4.c: 92:  CCPR4L = 0x00;
 11202  004278  0E00               	movlw	0
 11203  00427A  6E70               	movwf	112,c	;volatile
 11204  00427C                     
 11205                           ;mcc_generated_files/ccp4.c: 95:     CCP4_SetCallBack(CCP4_DefaultCallBack);
 11206  00427C  0E3C               	movlw	low _CCP4_DefaultCallBack
 11207  00427E  6E20               	movwf	CCP4_SetCallBack@customCallBack^0,c
 11208  004280  0E42               	movlw	high _CCP4_DefaultCallBack
 11209  004282  6E21               	movwf	(CCP4_SetCallBack@customCallBack+1)^0,c
 11210  004284  ECC0  F022         	call	_CCP4_SetCallBack	;wreg free
 11211  004288                     
 11212                           ;mcc_generated_files/ccp4.c: 98:  CCPTMRS0bits.C4TSEL = 0x2;
 11213  004288  013F               	movlb	63	; () banked
 11214  00428A  515E               	movf	94,w,b	;volatile
 11215  00428C  0B3F               	andlw	-193
 11216  00428E  0980               	iorlw	128
 11217  004290  6F5E               	movwf	94,b	;volatile
 11218  004292                     
 11219                           ; BSR set to: 63
 11220                           ;mcc_generated_files/ccp4.c: 101:     PIR10bits.CCP4IF = 0;
 11221  004292  0139               	movlb	57	; () banked
 11222  004294  91AA               	bcf	170,0,b	;volatile
 11223  004296                     
 11224                           ; BSR set to: 57
 11225                           ;mcc_generated_files/ccp4.c: 104:     PIE10bits.CCP4IE = 1;
 11226  004296  819A               	bsf	154,0,b	;volatile
 11227  004298                     
 11228                           ; BSR set to: 57
 11229  004298  0012               	return		;funcret
 11230  00429A                     __end_of_CCP4_Initialize:
 11231                           	callstack 0
 11232                           
 11233 ;; *************** function _CCP4_SetCallBack *****************
 11234 ;; Defined at:
 11235 ;;		line 75 in file "mcc_generated_files/ccp4.c"
 11236 ;; Parameters:    Size  Location     Type
 11237 ;;  customCallBa    2   31[COMRAM] PTR FTN(unsigned short ,
 11238 ;;		 -> CCP4_DefaultCallBack(1), 
 11239 ;; Auto vars:     Size  Location     Type
 11240 ;;		None
 11241 ;; Return value:  Size  Location     Type
 11242 ;;                  1    wreg      void 
 11243 ;; Registers used:
 11244 ;;		wreg, status,2, status,0
 11245 ;; Tracked objects:
 11246 ;;		On entry : 0/0
 11247 ;;		On exit  : 0/0
 11248 ;;		Unchanged: 0/0
 11249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11250 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11253 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11254 ;;Total ram usage:        2 bytes
 11255 ;; Hardware stack levels used: 1
 11256 ;; Hardware stack levels required when called: 8
 11257 ;; This function calls:
 11258 ;;		Nothing
 11259 ;; This function is called by:
 11260 ;;		_CCP4_Initialize
 11261 ;; This function uses a non-reentrant model
 11262 ;;
 11263                           
 11264                           	psect	text63
 11265  004580                     __ptext63:
 11266                           	callstack 0
 11267  004580                     _CCP4_SetCallBack:
 11268                           	callstack 20
 11269  004580                     
 11270                           ;mcc_generated_files/ccp4.c: 76:     CCP4_CallBack = customCallBack;
 11271  004580  C020  F0F5         	movff	CCP4_SetCallBack@customCallBack,_CCP4_CallBack
 11272  004584  C021  F0F6         	movff	CCP4_SetCallBack@customCallBack+1,_CCP4_CallBack+1
 11273  004588  0012               	return		;funcret
 11274  00458A                     __end_of_CCP4_SetCallBack:
 11275                           	callstack 0
 11276                           
 11277 ;; *************** function _CCP3_Initialize *****************
 11278 ;; Defined at:
 11279 ;;		line 75 in file "mcc_generated_files/ccp3.c"
 11280 ;; Parameters:    Size  Location     Type
 11281 ;;		None
 11282 ;; Auto vars:     Size  Location     Type
 11283 ;;		None
 11284 ;; Return value:  Size  Location     Type
 11285 ;;                  1    wreg      void 
 11286 ;; Registers used:
 11287 ;;		wreg, status,2, status,0, cstack
 11288 ;; Tracked objects:
 11289 ;;		On entry : 0/0
 11290 ;;		On exit  : 0/0
 11291 ;;		Unchanged: 0/0
 11292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11296 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11297 ;;Total ram usage:        0 bytes
 11298 ;; Hardware stack levels used: 1
 11299 ;; Hardware stack levels required when called: 9
 11300 ;; This function calls:
 11301 ;;		_CCP3_SetCallBack
 11302 ;; This function is called by:
 11303 ;;		_SYSTEM_Initialize
 11304 ;; This function uses a non-reentrant model
 11305 ;;
 11306                           
 11307                           	psect	text64
 11308  00429A                     __ptext64:
 11309                           	callstack 0
 11310  00429A                     _CCP3_Initialize:
 11311                           	callstack 20
 11312  00429A                     
 11313                           ;mcc_generated_files/ccp3.c: 80:  CCP3CON = 0x83;
 11314  00429A  0E83               	movlw	131
 11315  00429C  6E76               	movwf	118,c	;volatile
 11316                           
 11317                           ;mcc_generated_files/ccp3.c: 83:  CCP3CAP = 0x00;
 11318  00429E  0E00               	movlw	0
 11319  0042A0  6E77               	movwf	119,c	;volatile
 11320                           
 11321                           ;mcc_generated_files/ccp3.c: 86:  CCPR3H = 0x00;
 11322  0042A2  0E00               	movlw	0
 11323  0042A4  6E75               	movwf	117,c	;volatile
 11324                           
 11325                           ;mcc_generated_files/ccp3.c: 89:  CCPR3L = 0x00;
 11326  0042A6  0E00               	movlw	0
 11327  0042A8  6E74               	movwf	116,c	;volatile
 11328  0042AA                     
 11329                           ;mcc_generated_files/ccp3.c: 92:     CCP3_SetCallBack(CCP3_DefaultCallBack);
 11330  0042AA  0E0C               	movlw	low _CCP3_DefaultCallBack
 11331  0042AC  6E20               	movwf	CCP3_SetCallBack@customCallBack^0,c
 11332  0042AE  0E42               	movlw	high _CCP3_DefaultCallBack
 11333  0042B0  6E21               	movwf	(CCP3_SetCallBack@customCallBack+1)^0,c
 11334  0042B2  ECC5  F022         	call	_CCP3_SetCallBack	;wreg free
 11335  0042B6                     
 11336                           ;mcc_generated_files/ccp3.c: 95:  CCPTMRS0bits.C3TSEL = 0x2;
 11337  0042B6  013F               	movlb	63	; () banked
 11338  0042B8  515E               	movf	94,w,b	;volatile
 11339  0042BA  0BCF               	andlw	-49
 11340  0042BC  0920               	iorlw	32
 11341  0042BE  6F5E               	movwf	94,b	;volatile
 11342  0042C0                     
 11343                           ; BSR set to: 63
 11344                           ;mcc_generated_files/ccp3.c: 98:     PIR9bits.CCP3IF = 0;
 11345  0042C0  0139               	movlb	57	; () banked
 11346  0042C2  93A9               	bcf	169,1,b	;volatile
 11347  0042C4                     
 11348                           ; BSR set to: 57
 11349                           ;mcc_generated_files/ccp3.c: 101:     PIE9bits.CCP3IE = 1;
 11350  0042C4  8399               	bsf	153,1,b	;volatile
 11351  0042C6                     
 11352                           ; BSR set to: 57
 11353  0042C6  0012               	return		;funcret
 11354  0042C8                     __end_of_CCP3_Initialize:
 11355                           	callstack 0
 11356                           
 11357 ;; *************** function _CCP3_SetCallBack *****************
 11358 ;; Defined at:
 11359 ;;		line 119 in file "mcc_generated_files/ccp3.c"
 11360 ;; Parameters:    Size  Location     Type
 11361 ;;  customCallBa    2   31[COMRAM] PTR FTN(unsigned short ,
 11362 ;;		 -> CCP3_DefaultCallBack(1), 
 11363 ;; Auto vars:     Size  Location     Type
 11364 ;;		None
 11365 ;; Return value:  Size  Location     Type
 11366 ;;                  1    wreg      void 
 11367 ;; Registers used:
 11368 ;;		wreg, status,2, status,0
 11369 ;; Tracked objects:
 11370 ;;		On entry : 0/0
 11371 ;;		On exit  : 0/0
 11372 ;;		Unchanged: 0/0
 11373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11374 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11377 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11378 ;;Total ram usage:        2 bytes
 11379 ;; Hardware stack levels used: 1
 11380 ;; Hardware stack levels required when called: 8
 11381 ;; This function calls:
 11382 ;;		Nothing
 11383 ;; This function is called by:
 11384 ;;		_CCP3_Initialize
 11385 ;; This function uses a non-reentrant model
 11386 ;;
 11387                           
 11388                           	psect	text65
 11389  00458A                     __ptext65:
 11390                           	callstack 0
 11391  00458A                     _CCP3_SetCallBack:
 11392                           	callstack 20
 11393  00458A                     
 11394                           ;mcc_generated_files/ccp3.c: 120:     CCP3_CallBack = customCallBack;
 11395  00458A  C020  F0F7         	movff	CCP3_SetCallBack@customCallBack,_CCP3_CallBack
 11396  00458E  C021  F0F8         	movff	CCP3_SetCallBack@customCallBack+1,_CCP3_CallBack+1
 11397  004592  0012               	return		;funcret
 11398  004594                     __end_of_CCP3_SetCallBack:
 11399                           	callstack 0
 11400                           
 11401 ;; *************** function _ADCC_Initialize *****************
 11402 ;; Defined at:
 11403 ;;		line 62 in file "mcc_generated_files/adcc.c"
 11404 ;; Parameters:    Size  Location     Type
 11405 ;;		None
 11406 ;; Auto vars:     Size  Location     Type
 11407 ;;		None
 11408 ;; Return value:  Size  Location     Type
 11409 ;;                  1    wreg      void 
 11410 ;; Registers used:
 11411 ;;		wreg, status,2
 11412 ;; Tracked objects:
 11413 ;;		On entry : 0/0
 11414 ;;		On exit  : 0/0
 11415 ;;		Unchanged: 0/0
 11416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11420 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11421 ;;Total ram usage:        0 bytes
 11422 ;; Hardware stack levels used: 1
 11423 ;; Hardware stack levels required when called: 8
 11424 ;; This function calls:
 11425 ;;		Nothing
 11426 ;; This function is called by:
 11427 ;;		_SYSTEM_Initialize
 11428 ;; This function uses a non-reentrant model
 11429 ;;
 11430                           
 11431                           	psect	text66
 11432  003BA4                     __ptext66:
 11433                           	callstack 0
 11434  003BA4                     _ADCC_Initialize:
 11435                           	callstack 21
 11436  003BA4                     
 11437                           ;mcc_generated_files/adcc.c: 66:     ADLTHL = 0x00;
 11438  003BA4  0E00               	movlw	0
 11439  003BA6  013E               	movlb	62	; () banked
 11440  003BA8  6FDE               	movwf	222,b	;volatile
 11441                           
 11442                           ;mcc_generated_files/adcc.c: 68:     ADLTHH = 0x00;
 11443  003BAA  0E00               	movlw	0
 11444  003BAC  6FDF               	movwf	223,b	;volatile
 11445                           
 11446                           ;mcc_generated_files/adcc.c: 70:     ADUTHL = 0x00;
 11447  003BAE  0E00               	movlw	0
 11448  003BB0  6FE0               	movwf	224,b	;volatile
 11449                           
 11450                           ;mcc_generated_files/adcc.c: 72:     ADUTHH = 0x00;
 11451  003BB2  0E00               	movlw	0
 11452  003BB4  6FE1               	movwf	225,b	;volatile
 11453                           
 11454                           ;mcc_generated_files/adcc.c: 74:     ADSTPTL = 0x00;
 11455  003BB6  0E00               	movlw	0
 11456  003BB8  6FE4               	movwf	228,b	;volatile
 11457                           
 11458                           ;mcc_generated_files/adcc.c: 76:     ADSTPTH = 0x00;
 11459  003BBA  0E00               	movlw	0
 11460  003BBC  6FE5               	movwf	229,b	;volatile
 11461                           
 11462                           ;mcc_generated_files/adcc.c: 78:     ADACCU = 0x00;
 11463  003BBE  0E00               	movlw	0
 11464  003BC0  6FEA               	movwf	234,b	;volatile
 11465                           
 11466                           ;mcc_generated_files/adcc.c: 80:     ADRPT = 0x00;
 11467  003BC2  0E00               	movlw	0
 11468  003BC4  6FEC               	movwf	236,b	;volatile
 11469                           
 11470                           ;mcc_generated_files/adcc.c: 82:     ADPCH = 0x00;
 11471  003BC6  0E00               	movlw	0
 11472  003BC8  6FF1               	movwf	241,b	;volatile
 11473                           
 11474                           ;mcc_generated_files/adcc.c: 84:     ADACQL = 0x58;
 11475  003BCA  0E58               	movlw	88
 11476  003BCC  6FF3               	movwf	243,b	;volatile
 11477                           
 11478                           ;mcc_generated_files/adcc.c: 86:     ADACQH = 0x02;
 11479  003BCE  0E02               	movlw	2
 11480  003BD0  6FF4               	movwf	244,b	;volatile
 11481                           
 11482                           ;mcc_generated_files/adcc.c: 88:     ADCAP = 0x00;
 11483  003BD2  0E00               	movlw	0
 11484  003BD4  6FF5               	movwf	245,b	;volatile
 11485                           
 11486                           ;mcc_generated_files/adcc.c: 90:     ADPREL = 0x00;
 11487  003BD6  0E00               	movlw	0
 11488  003BD8  6FF6               	movwf	246,b	;volatile
 11489                           
 11490                           ;mcc_generated_files/adcc.c: 92:     ADPREH = 0x00;
 11491  003BDA  0E00               	movlw	0
 11492  003BDC  6FF7               	movwf	247,b	;volatile
 11493                           
 11494                           ;mcc_generated_files/adcc.c: 94:     ADCON1 = 0x00;
 11495  003BDE  0E00               	movlw	0
 11496  003BE0  6FF9               	movwf	249,b	;volatile
 11497                           
 11498                           ;mcc_generated_files/adcc.c: 96:     ADCON2 = 0x00;
 11499  003BE2  0E00               	movlw	0
 11500  003BE4  6FFA               	movwf	250,b	;volatile
 11501                           
 11502                           ;mcc_generated_files/adcc.c: 98:     ADCON3 = 0x00;
 11503  003BE6  0E00               	movlw	0
 11504  003BE8  6FFB               	movwf	251,b	;volatile
 11505                           
 11506                           ;mcc_generated_files/adcc.c: 100:     ADSTAT = 0x00;
 11507  003BEA  0E00               	movlw	0
 11508  003BEC  6FFC               	movwf	252,b	;volatile
 11509                           
 11510                           ;mcc_generated_files/adcc.c: 102:     ADREF = 0x00;
 11511  003BEE  0E00               	movlw	0
 11512  003BF0  6FFD               	movwf	253,b	;volatile
 11513                           
 11514                           ;mcc_generated_files/adcc.c: 104:     ADACT = 0x00;
 11515  003BF2  0E00               	movlw	0
 11516  003BF4  6FFE               	movwf	254,b	;volatile
 11517                           
 11518                           ;mcc_generated_files/adcc.c: 106:     ADCLK = 0x1F;
 11519  003BF6  0E1F               	movlw	31
 11520  003BF8  6FFF               	movwf	255,b	;volatile
 11521                           
 11522                           ;mcc_generated_files/adcc.c: 108:     ADCON0 = 0x84;
 11523  003BFA  0E84               	movlw	132
 11524  003BFC  6FF8               	movwf	248,b	;volatile
 11525  003BFE                     
 11526                           ; BSR set to: 62
 11527  003BFE  0012               	return		;funcret
 11528  003C00                     __end_of_ADCC_Initialize:
 11529                           	callstack 0
 11530                           
 11531 ;; *************** function _UART1_tx_vect_isr *****************
 11532 ;; Defined at:
 11533 ;;		line 235 in file "mcc_generated_files/uart1.c"
 11534 ;; Parameters:    Size  Location     Type
 11535 ;;		None
 11536 ;; Auto vars:     Size  Location     Type
 11537 ;;		None
 11538 ;; Return value:  Size  Location     Type
 11539 ;;                  1    wreg      void 
 11540 ;; Registers used:
 11541 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 11542 ;; Tracked objects:
 11543 ;;		On entry : 0/0
 11544 ;;		On exit  : 0/0
 11545 ;;		Unchanged: 0/0
 11546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11549 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11550 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11551 ;;Total ram usage:        3 bytes
 11552 ;; Hardware stack levels used: 1
 11553 ;; Hardware stack levels required when called: 5
 11554 ;; This function calls:
 11555 ;;		Absolute function
 11556 ;;		_UART1_Transmit_ISR
 11557 ;; This function is called by:
 11558 ;;		Interrupt level 1
 11559 ;; This function uses a non-reentrant model
 11560 ;;
 11561                           
 11562                           	psect	text67
 11563  003C54                     __ptext67:
 11564                           	callstack 0
 11565  003C54                     _UART1_tx_vect_isr:
 11566                           	callstack 14
 11567                           
 11568                           ; BSR set to: 62
 11569                           ;incstack = 0
 11570  003C54  006F FF60  F017    	movff	status,??_UART1_tx_vect_isr
 11571  003C5A  006F FFE8  F018    	movff	pclath,??_UART1_tx_vect_isr+1
 11572  003C60  006F FFEC  F019    	movff	pclatu,??_UART1_tx_vect_isr+2
 11573  003C66                     
 11574                           ;mcc_generated_files/uart1.c: 237:     if(UART1_TxInterruptHandler)
 11575  003C66  503C               	movf	_UART1_TxInterruptHandler^0,w,c
 11576  003C68  103D               	iorwf	(_UART1_TxInterruptHandler+1)^0,w,c
 11577  003C6A  B4D8               	btfsc	status,2,c
 11578  003C6C  EF3A  F01E         	goto	i1u459_21
 11579  003C70  EF3C  F01E         	goto	i1u459_20
 11580  003C74                     i1u459_21:
 11581  003C74  EF48  F01E         	goto	i1l324
 11582  003C78                     i1u459_20:
 11583  003C78                     
 11584                           ;mcc_generated_files/uart1.c: 238:     {;mcc_generated_files/uart1.c: 239:         UART1
      +                          _TxInterruptHandler();
 11585  003C78  D802               	call	i1u460_28
 11586  003C7A  EF48  F01E         	goto	i1u460_29
 11587  003C7E                     i1u460_28:
 11588  003C7E  0005               	push	
 11589  003C80  6EFA               	movwf	pclath,c
 11590  003C82  503C               	movf	_UART1_TxInterruptHandler^0,w,c
 11591  003C84  6EFD               	movwf	tosl,c
 11592  003C86  503D               	movf	(_UART1_TxInterruptHandler+1)^0,w,c
 11593  003C88  6EFE               	movwf	tosh,c
 11594  003C8A  6AFF               	clrf	tosu,c
 11595  003C8C  50FA               	movf	pclath,w,c
 11596  003C8E  0012               	return		;indir
 11597  003C90                     i1u460_29:
 11598  003C90                     i1l324:
 11599  003C90  0060  F067  FFFB   	movff	??_UART1_tx_vect_isr+2,pclatu
 11600  003C96  0060  F063  FFFA   	movff	??_UART1_tx_vect_isr+1,pclath
 11601  003C9C  0060  F05F  FFD8   	movff	??_UART1_tx_vect_isr,status
 11602  003CA2  0011               	retfie		f
 11603  003CA4                     __end_of_UART1_tx_vect_isr:
 11604                           	callstack 0
 11605                           
 11606 ;; *************** function _UART1_Transmit_ISR *****************
 11607 ;; Defined at:
 11608 ;;		line 253 in file "mcc_generated_files/uart1.c"
 11609 ;; Parameters:    Size  Location     Type
 11610 ;;		None
 11611 ;; Auto vars:     Size  Location     Type
 11612 ;;		None
 11613 ;; Return value:  Size  Location     Type
 11614 ;;                  1    wreg      void 
 11615 ;; Registers used:
 11616 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11617 ;; Tracked objects:
 11618 ;;		On entry : 0/0
 11619 ;;		On exit  : 0/0
 11620 ;;		Unchanged: 0/0
 11621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11625 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11626 ;;Total ram usage:        0 bytes
 11627 ;; Hardware stack levels used: 1
 11628 ;; Hardware stack levels required when called: 4
 11629 ;; This function calls:
 11630 ;;		Nothing
 11631 ;; This function is called by:
 11632 ;;		_UART1_Initialize
 11633 ;;		_UART1_tx_vect_isr
 11634 ;; This function uses a non-reentrant model
 11635 ;;
 11636                           
 11637                           	psect	text68
 11638  003F98                     __ptext68:
 11639                           	callstack 0
 11640  003F98                     _UART1_Transmit_ISR:
 11641                           	callstack 14
 11642  003F98                     
 11643                           ;mcc_generated_files/uart1.c: 256:     if(sizeof(uart1TxBuffer) > uart1TxBufferRemaining
      +                          )
 11644  003F98  0E08               	movlw	8
 11645  003F9A  6040               	cpfslt	_uart1TxBufferRemaining^0,c	;volatile
 11646  003F9C  EFD2  F01F         	goto	i1u442_21
 11647  003FA0  EFD4  F01F         	goto	i1u442_20
 11648  003FA4                     i1u442_21:
 11649  003FA4  EFEB  F01F         	goto	i1l333
 11650  003FA8                     i1u442_20:
 11651  003FA8                     
 11652                           ;mcc_generated_files/uart1.c: 257:     {;mcc_generated_files/uart1.c: 258:         U1TXB
      +                           = uart1TxBuffer[uart1TxTail++];
 11653  003FA8  0EC2               	movlw	low _uart1TxBuffer
 11654  003FAA  2432               	addwf	_uart1TxTail^0,w,c	;volatile
 11655  003FAC  6ED9               	movwf	fsr2l,c
 11656  003FAE  6ADA               	clrf	fsr2h,c
 11657  003FB0  0E00               	movlw	high _uart1TxBuffer
 11658  003FB2  22DA               	addwfc	fsr2h,f,c
 11659  003FB4  50DF               	movf	indf2,w,c
 11660  003FB6  013D               	movlb	61	; () banked
 11661  003FB8  6FEA               	movwf	234,b	;volatile
 11662  003FBA                     
 11663                           ; BSR set to: 61
 11664  003FBA  2A32               	incf	_uart1TxTail^0,f,c	;volatile
 11665  003FBC                     
 11666                           ; BSR set to: 61
 11667                           ;mcc_generated_files/uart1.c: 259:        if(sizeof(uart1TxBuffer) <= uart1TxTail)
 11668  003FBC  0E07               	movlw	7
 11669  003FBE  6432               	cpfsgt	_uart1TxTail^0,c	;volatile
 11670  003FC0  EFE4  F01F         	goto	i1u443_21
 11671  003FC4  EFE6  F01F         	goto	i1u443_20
 11672  003FC8                     i1u443_21:
 11673  003FC8  EFE8  F01F         	goto	i1l5573
 11674  003FCC                     i1u443_20:
 11675  003FCC                     
 11676                           ; BSR set to: 61
 11677                           ;mcc_generated_files/uart1.c: 260:         {;mcc_generated_files/uart1.c: 261:          
      +                             uart1TxTail = 0;
 11678  003FCC  0E00               	movlw	0
 11679  003FCE  6E32               	movwf	_uart1TxTail^0,c	;volatile
 11680  003FD0                     i1l5573:
 11681                           
 11682                           ; BSR set to: 61
 11683                           ;mcc_generated_files/uart1.c: 263:         uart1TxBufferRemaining++;
 11684  003FD0  2A40               	incf	_uart1TxBufferRemaining^0,f,c	;volatile
 11685                           
 11686                           ;mcc_generated_files/uart1.c: 264:     }
 11687  003FD2  EFED  F01F         	goto	i1l336
 11688  003FD6                     i1l333:
 11689                           
 11690                           ;mcc_generated_files/uart1.c: 266:     {;mcc_generated_files/uart1.c: 267:         PIE3b
      +                          its.U1TXIE = 0;
 11691  003FD6  0139               	movlb	57	; () banked
 11692  003FD8  9993               	bcf	147,4,b	;volatile
 11693  003FDA                     i1l336:
 11694  003FDA  0012               	return		;funcret
 11695  003FDC                     __end_of_UART1_Transmit_ISR:
 11696                           	callstack 0
 11697                           
 11698 ;; *************** function _UART1_rx_vect_isr *****************
 11699 ;; Defined at:
 11700 ;;		line 243 in file "mcc_generated_files/uart1.c"
 11701 ;; Parameters:    Size  Location     Type
 11702 ;;		None
 11703 ;; Auto vars:     Size  Location     Type
 11704 ;;		None
 11705 ;; Return value:  Size  Location     Type
 11706 ;;                  1    wreg      void 
 11707 ;; Registers used:
 11708 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 11709 ;; Tracked objects:
 11710 ;;		On entry : 0/0
 11711 ;;		On exit  : 0/0
 11712 ;;		Unchanged: 0/0
 11713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11716 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11717 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11718 ;;Total ram usage:        3 bytes
 11719 ;; Hardware stack levels used: 1
 11720 ;; Hardware stack levels required when called: 7
 11721 ;; This function calls:
 11722 ;;		Absolute function
 11723 ;;		_UART1_Receive_ISR
 11724 ;; This function is called by:
 11725 ;;		Interrupt level 1
 11726 ;; This function uses a non-reentrant model
 11727 ;;
 11728                           
 11729                           	psect	text69
 11730  003CA4                     __ptext69:
 11731                           	callstack 0
 11732  003CA4                     _UART1_rx_vect_isr:
 11733                           	callstack 12
 11734                           
 11735                           ;incstack = 0
 11736  003CA4  006F FF60  F01A    	movff	status,??_UART1_rx_vect_isr
 11737  003CAA  006F FFE8  F01B    	movff	pclath,??_UART1_rx_vect_isr+1
 11738  003CB0  006F FFEC  F01C    	movff	pclatu,??_UART1_rx_vect_isr+2
 11739  003CB6                     
 11740                           ;mcc_generated_files/uart1.c: 245:     if(UART1_RxInterruptHandler)
 11741  003CB6  503E               	movf	_UART1_RxInterruptHandler^0,w,c
 11742  003CB8  103F               	iorwf	(_UART1_RxInterruptHandler+1)^0,w,c
 11743  003CBA  B4D8               	btfsc	status,2,c
 11744  003CBC  EF62  F01E         	goto	i1u461_21
 11745  003CC0  EF64  F01E         	goto	i1u461_20
 11746  003CC4                     i1u461_21:
 11747  003CC4  EF70  F01E         	goto	i1l330
 11748  003CC8                     i1u461_20:
 11749  003CC8                     
 11750                           ;mcc_generated_files/uart1.c: 246:     {;mcc_generated_files/uart1.c: 247:         UART1
      +                          _RxInterruptHandler();
 11751  003CC8  D802               	call	i1u462_28
 11752  003CCA  EF70  F01E         	goto	i1u462_29
 11753  003CCE                     i1u462_28:
 11754  003CCE  0005               	push	
 11755  003CD0  6EFA               	movwf	pclath,c
 11756  003CD2  503E               	movf	_UART1_RxInterruptHandler^0,w,c
 11757  003CD4  6EFD               	movwf	tosl,c
 11758  003CD6  503F               	movf	(_UART1_RxInterruptHandler+1)^0,w,c
 11759  003CD8  6EFE               	movwf	tosh,c
 11760  003CDA  6AFF               	clrf	tosu,c
 11761  003CDC  50FA               	movf	pclath,w,c
 11762  003CDE  0012               	return		;indir
 11763  003CE0                     i1u462_29:
 11764  003CE0                     i1l330:
 11765  003CE0  0060  F073  FFFB   	movff	??_UART1_rx_vect_isr+2,pclatu
 11766  003CE6  0060  F06F  FFFA   	movff	??_UART1_rx_vect_isr+1,pclath
 11767  003CEC  0060  F06B  FFD8   	movff	??_UART1_rx_vect_isr,status
 11768  003CF2  0011               	retfie		f
 11769  003CF4                     __end_of_UART1_rx_vect_isr:
 11770                           	callstack 0
 11771                           
 11772 ;; *************** function _UART1_Receive_ISR *****************
 11773 ;; Defined at:
 11774 ;;		line 273 in file "mcc_generated_files/uart1.c"
 11775 ;; Parameters:    Size  Location     Type
 11776 ;;		None
 11777 ;; Auto vars:     Size  Location     Type
 11778 ;;		None
 11779 ;; Return value:  Size  Location     Type
 11780 ;;                  1    wreg      void 
 11781 ;; Registers used:
 11782 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 11783 ;; Tracked objects:
 11784 ;;		On entry : 0/0
 11785 ;;		On exit  : 0/0
 11786 ;;		Unchanged: 0/0
 11787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11791 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11792 ;;Total ram usage:        0 bytes
 11793 ;; Hardware stack levels used: 1
 11794 ;; Hardware stack levels required when called: 6
 11795 ;; This function calls:
 11796 ;;		Absolute function
 11797 ;;		_UART1_DefaultErrorHandler
 11798 ;;		_UART1_DefaultFramingErrorHandler
 11799 ;;		_UART1_DefaultOverrunErrorHandler
 11800 ;;		_UART1_RxDataHandler
 11801 ;; This function is called by:
 11802 ;;		_UART1_Initialize
 11803 ;;		_UART1_rx_vect_isr
 11804 ;; This function uses a non-reentrant model
 11805 ;;
 11806                           
 11807                           	psect	text70
 11808  0037C4                     __ptext70:
 11809                           	callstack 0
 11810  0037C4                     _UART1_Receive_ISR:
 11811                           	callstack 12
 11812  0037C4                     
 11813                           ;mcc_generated_files/uart1.c: 276:     uart1RxStatusBuffer[uart1RxHead].status = 0;
 11814  0037C4  0EB2               	movlw	low _uart1RxStatusBuffer
 11815  0037C6  2431               	addwf	_uart1RxHead^0,w,c	;volatile
 11816  0037C8  6ED9               	movwf	fsr2l,c
 11817  0037CA  6ADA               	clrf	fsr2h,c
 11818  0037CC  0E00               	movlw	high _uart1RxStatusBuffer
 11819  0037CE  22DA               	addwfc	fsr2h,f,c
 11820  0037D0  0E00               	movlw	0
 11821  0037D2  6EDF               	movwf	indf2,c
 11822  0037D4                     
 11823                           ;mcc_generated_files/uart1.c: 278:     if(U1ERRIRbits.FERIF){
 11824  0037D4  013D               	movlb	61	; () banked
 11825  0037D6  A7F9               	btfss	249,3,b	;volatile
 11826  0037D8  EFF0  F01B         	goto	i1u444_21
 11827  0037DC  EFF2  F01B         	goto	i1u444_20
 11828  0037E0                     i1u444_21:
 11829  0037E0  EF06  F01C         	goto	i1l5583
 11830  0037E4                     i1u444_20:
 11831  0037E4                     
 11832                           ; BSR set to: 61
 11833                           ;mcc_generated_files/uart1.c: 279:         uart1RxStatusBuffer[uart1RxHead].ferr = 1;
 11834  0037E4  0EB2               	movlw	low _uart1RxStatusBuffer
 11835  0037E6  2431               	addwf	_uart1RxHead^0,w,c	;volatile
 11836  0037E8  6ED9               	movwf	fsr2l,c
 11837  0037EA  6ADA               	clrf	fsr2h,c
 11838  0037EC  0E00               	movlw	high _uart1RxStatusBuffer
 11839  0037EE  22DA               	addwfc	fsr2h,f,c
 11840  0037F0  0100               	movlb	0	; () banked
 11841  0037F2  82DF               	bsf	indf2,1,c
 11842  0037F4                     
 11843                           ; BSR set to: 0
 11844                           ;mcc_generated_files/uart1.c: 280:         UART1_FramingErrorHandler();
 11845  0037F4  D802               	call	i1u445_28
 11846  0037F6  EF06  F01C         	goto	i1u445_29
 11847  0037FA                     i1u445_28:
 11848  0037FA  0005               	push	
 11849  0037FC  6EFA               	movwf	pclath,c
 11850  0037FE  51FD               	movf	_UART1_FramingErrorHandler& (0+255),w,b
 11851  003800  6EFD               	movwf	tosl,c
 11852  003802  51FE               	movf	(_UART1_FramingErrorHandler+1)& (0+255),w,b
 11853  003804  6EFE               	movwf	tosh,c
 11854  003806  6AFF               	clrf	tosu,c
 11855  003808  50FA               	movf	pclath,w,c
 11856  00380A  0012               	return		;indir
 11857  00380C                     i1u445_29:
 11858  00380C                     i1l5583:
 11859                           
 11860                           ;mcc_generated_files/uart1.c: 283:     if(U1ERRIRbits.RXFOIF){
 11861  00380C  013D               	movlb	61	; () banked
 11862  00380E  A3F9               	btfss	249,1,b	;volatile
 11863  003810  EF0C  F01C         	goto	i1u446_21
 11864  003814  EF0E  F01C         	goto	i1u446_20
 11865  003818                     i1u446_21:
 11866  003818  EF22  F01C         	goto	i1l5589
 11867  00381C                     i1u446_20:
 11868  00381C                     
 11869                           ; BSR set to: 61
 11870                           ;mcc_generated_files/uart1.c: 284:         uart1RxStatusBuffer[uart1RxHead].oerr = 1;
 11871  00381C  0EB2               	movlw	low _uart1RxStatusBuffer
 11872  00381E  2431               	addwf	_uart1RxHead^0,w,c	;volatile
 11873  003820  6ED9               	movwf	fsr2l,c
 11874  003822  6ADA               	clrf	fsr2h,c
 11875  003824  0E00               	movlw	high _uart1RxStatusBuffer
 11876  003826  22DA               	addwfc	fsr2h,f,c
 11877  003828  0100               	movlb	0	; () banked
 11878  00382A  84DF               	bsf	indf2,2,c
 11879  00382C                     
 11880                           ; BSR set to: 0
 11881                           ;mcc_generated_files/uart1.c: 285:         UART1_OverrunErrorHandler();
 11882  00382C  D802               	call	i1u447_28
 11883  00382E  EF22  F01C         	goto	i1u447_29
 11884  003832                     i1u447_28:
 11885  003832  0005               	push	
 11886  003834  6EFA               	movwf	pclath,c
 11887  003836  51FB               	movf	_UART1_OverrunErrorHandler& (0+255),w,b
 11888  003838  6EFD               	movwf	tosl,c
 11889  00383A  51FC               	movf	(_UART1_OverrunErrorHandler+1)& (0+255),w,b
 11890  00383C  6EFE               	movwf	tosh,c
 11891  00383E  6AFF               	clrf	tosu,c
 11892  003840  50FA               	movf	pclath,w,c
 11893  003842  0012               	return		;indir
 11894  003844                     i1u447_29:
 11895  003844                     i1l5589:
 11896                           
 11897                           ;mcc_generated_files/uart1.c: 288:     if(uart1RxStatusBuffer[uart1RxHead].status){
 11898  003844  0EB2               	movlw	low _uart1RxStatusBuffer
 11899  003846  2431               	addwf	_uart1RxHead^0,w,c	;volatile
 11900  003848  6ED9               	movwf	fsr2l,c
 11901  00384A  6ADA               	clrf	fsr2h,c
 11902  00384C  0E00               	movlw	high _uart1RxStatusBuffer
 11903  00384E  22DA               	addwfc	fsr2h,f,c
 11904  003850  50DF               	movf	indf2,w,c
 11905  003852  B4D8               	btfsc	status,2,c
 11906  003854  EF2E  F01C         	goto	i1u448_21
 11907  003858  EF30  F01C         	goto	i1u448_20
 11908  00385C                     i1u448_21:
 11909  00385C  EF3F  F01C         	goto	i1l5593
 11910  003860                     i1u448_20:
 11911  003860                     
 11912                           ;mcc_generated_files/uart1.c: 289:         UART1_ErrorHandler();
 11913  003860  D802               	call	i1u449_28
 11914  003862  EF3D  F01C         	goto	i1u449_29
 11915  003866                     i1u449_28:
 11916  003866  0005               	push	
 11917  003868  6EFA               	movwf	pclath,c
 11918  00386A  0100               	movlb	0	; () banked
 11919  00386C  51F9               	movf	_UART1_ErrorHandler& (0+255),w,b
 11920  00386E  6EFD               	movwf	tosl,c
 11921  003870  51FA               	movf	(_UART1_ErrorHandler+1)& (0+255),w,b
 11922  003872  6EFE               	movwf	tosh,c
 11923  003874  6AFF               	clrf	tosu,c
 11924  003876  50FA               	movf	pclath,w,c
 11925  003878  0012               	return		;indir
 11926  00387A                     i1u449_29:
 11927                           
 11928                           ;mcc_generated_files/uart1.c: 290:     } else {
 11929  00387A  EF41  F01C         	goto	i1l343
 11930  00387E                     i1l5593:
 11931                           
 11932                           ;mcc_generated_files/uart1.c: 291:         UART1_RxDataHandler();
 11933  00387E  ECA7  F021         	call	_UART1_RxDataHandler	;wreg free
 11934  003882                     i1l343:
 11935  003882  0012               	return		;funcret
 11936  003884                     __end_of_UART1_Receive_ISR:
 11937                           	callstack 0
 11938                           
 11939 ;; *************** function _UART1_DefaultOverrunErrorHandler *****************
 11940 ;; Defined at:
 11941 ;;		line 309 in file "mcc_generated_files/uart1.c"
 11942 ;; Parameters:    Size  Location     Type
 11943 ;;		None
 11944 ;; Auto vars:     Size  Location     Type
 11945 ;;		None
 11946 ;; Return value:  Size  Location     Type
 11947 ;;                  1    wreg      void 
 11948 ;; Registers used:
 11949 ;;		None
 11950 ;; Tracked objects:
 11951 ;;		On entry : 0/0
 11952 ;;		On exit  : 0/0
 11953 ;;		Unchanged: 0/0
 11954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11958 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11959 ;;Total ram usage:        0 bytes
 11960 ;; Hardware stack levels used: 1
 11961 ;; Hardware stack levels required when called: 4
 11962 ;; This function calls:
 11963 ;;		Nothing
 11964 ;; This function is called by:
 11965 ;;		_UART1_Initialize
 11966 ;;		_UART1_Receive_ISR
 11967 ;; This function uses a non-reentrant model
 11968 ;;
 11969                           
 11970                           	psect	text71
 11971  0045A0                     __ptext71:
 11972                           	callstack 0
 11973  0045A0                     _UART1_DefaultOverrunErrorHandler:
 11974                           	callstack 13
 11975  0045A0  0012               	return		;funcret
 11976  0045A2                     __end_of_UART1_DefaultOverrunErrorHandler:
 11977                           	callstack 0
 11978                           
 11979 ;; *************** function _UART1_DefaultFramingErrorHandler *****************
 11980 ;; Defined at:
 11981 ;;		line 307 in file "mcc_generated_files/uart1.c"
 11982 ;; Parameters:    Size  Location     Type
 11983 ;;		None
 11984 ;; Auto vars:     Size  Location     Type
 11985 ;;		None
 11986 ;; Return value:  Size  Location     Type
 11987 ;;                  1    wreg      void 
 11988 ;; Registers used:
 11989 ;;		None
 11990 ;; Tracked objects:
 11991 ;;		On entry : 0/0
 11992 ;;		On exit  : 0/0
 11993 ;;		Unchanged: 0/0
 11994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11998 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11999 ;;Total ram usage:        0 bytes
 12000 ;; Hardware stack levels used: 1
 12001 ;; Hardware stack levels required when called: 4
 12002 ;; This function calls:
 12003 ;;		Nothing
 12004 ;; This function is called by:
 12005 ;;		_UART1_Initialize
 12006 ;;		_UART1_Receive_ISR
 12007 ;; This function uses a non-reentrant model
 12008 ;;
 12009                           
 12010                           	psect	text72
 12011  0045A2                     __ptext72:
 12012                           	callstack 0
 12013  0045A2                     _UART1_DefaultFramingErrorHandler:
 12014                           	callstack 13
 12015  0045A2  0012               	return		;funcret
 12016  0045A4                     __end_of_UART1_DefaultFramingErrorHandler:
 12017                           	callstack 0
 12018                           
 12019 ;; *************** function _UART1_DefaultErrorHandler *****************
 12020 ;; Defined at:
 12021 ;;		line 311 in file "mcc_generated_files/uart1.c"
 12022 ;; Parameters:    Size  Location     Type
 12023 ;;		None
 12024 ;; Auto vars:     Size  Location     Type
 12025 ;;		None
 12026 ;; Return value:  Size  Location     Type
 12027 ;;                  1    wreg      void 
 12028 ;; Registers used:
 12029 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12030 ;; Tracked objects:
 12031 ;;		On entry : 0/0
 12032 ;;		On exit  : 0/0
 12033 ;;		Unchanged: 0/0
 12034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12038 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12039 ;;Total ram usage:        0 bytes
 12040 ;; Hardware stack levels used: 1
 12041 ;; Hardware stack levels required when called: 5
 12042 ;; This function calls:
 12043 ;;		_UART1_RxDataHandler
 12044 ;; This function is called by:
 12045 ;;		_UART1_Initialize
 12046 ;;		_UART1_Receive_ISR
 12047 ;; This function uses a non-reentrant model
 12048 ;;
 12049                           
 12050                           	psect	text73
 12051  004594                     __ptext73:
 12052                           	callstack 0
 12053  004594                     _UART1_DefaultErrorHandler:
 12054                           	callstack 12
 12055  004594                     
 12056                           ;mcc_generated_files/uart1.c: 312:     UART1_RxDataHandler();
 12057  004594  ECA7  F021         	call	_UART1_RxDataHandler	;wreg free
 12058  004598  0012               	return		;funcret
 12059  00459A                     __end_of_UART1_DefaultErrorHandler:
 12060                           	callstack 0
 12061                           
 12062 ;; *************** function _UART1_RxDataHandler *****************
 12063 ;; Defined at:
 12064 ;;		line 297 in file "mcc_generated_files/uart1.c"
 12065 ;; Parameters:    Size  Location     Type
 12066 ;;		None
 12067 ;; Auto vars:     Size  Location     Type
 12068 ;;		None
 12069 ;; Return value:  Size  Location     Type
 12070 ;;                  1    wreg      void 
 12071 ;; Registers used:
 12072 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12073 ;; Tracked objects:
 12074 ;;		On entry : 0/0
 12075 ;;		On exit  : 0/0
 12076 ;;		Unchanged: 0/0
 12077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12081 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12082 ;;Total ram usage:        0 bytes
 12083 ;; Hardware stack levels used: 1
 12084 ;; Hardware stack levels required when called: 4
 12085 ;; This function calls:
 12086 ;;		Nothing
 12087 ;; This function is called by:
 12088 ;;		_UART1_Receive_ISR
 12089 ;;		_UART1_DefaultErrorHandler
 12090 ;; This function uses a non-reentrant model
 12091 ;;
 12092                           
 12093                           	psect	text74
 12094  00434E                     __ptext74:
 12095                           	callstack 0
 12096  00434E                     _UART1_RxDataHandler:
 12097                           	callstack 13
 12098  00434E                     
 12099                           ;mcc_generated_files/uart1.c: 299:     uart1RxBuffer[uart1RxHead++] = U1RXB;
 12100  00434E  0EBA               	movlw	low _uart1RxBuffer
 12101  004350  2431               	addwf	_uart1RxHead^0,w,c	;volatile
 12102  004352  6ED9               	movwf	fsr2l,c
 12103  004354  6ADA               	clrf	fsr2h,c
 12104  004356  0E00               	movlw	high _uart1RxBuffer
 12105  004358  22DA               	addwfc	fsr2h,f,c
 12106  00435A  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 12107  004360  2A31               	incf	_uart1RxHead^0,f,c	;volatile
 12108  004362                     
 12109                           ;mcc_generated_files/uart1.c: 300:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 12110  004362  0E07               	movlw	7
 12111  004364  6431               	cpfsgt	_uart1RxHead^0,c	;volatile
 12112  004366  EFB7  F021         	goto	i1u315_21
 12113  00436A  EFB9  F021         	goto	i1u315_20
 12114  00436E                     i1u315_21:
 12115  00436E  EFBB  F021         	goto	i1l4625
 12116  004372                     i1u315_20:
 12117  004372                     
 12118                           ;mcc_generated_files/uart1.c: 301:     {;mcc_generated_files/uart1.c: 302:         uart1
      +                          RxHead = 0;
 12119  004372  0E00               	movlw	0
 12120  004374  6E31               	movwf	_uart1RxHead^0,c	;volatile
 12121  004376                     i1l4625:
 12122                           
 12123                           ;mcc_generated_files/uart1.c: 304:     uart1RxCount++;
 12124  004376  2A2F               	incf	_uart1RxCount^0,f,c	;volatile
 12125  004378  0012               	return		;funcret
 12126  00437A                     __end_of_UART1_RxDataHandler:
 12127                           	callstack 0
 12128                           
 12129 ;; *************** function _TMR4_ISR *****************
 12130 ;; Defined at:
 12131 ;;		line 166 in file "mcc_generated_files/tmr4.c"
 12132 ;; Parameters:    Size  Location     Type
 12133 ;;		None
 12134 ;; Auto vars:     Size  Location     Type
 12135 ;;		None
 12136 ;; Return value:  Size  Location     Type
 12137 ;;                  1    wreg      void 
 12138 ;; Registers used:
 12139 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 12140 ;; Tracked objects:
 12141 ;;		On entry : 0/0
 12142 ;;		On exit  : 0/0
 12143 ;;		Unchanged: 0/0
 12144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12147 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12148 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12149 ;;Total ram usage:        3 bytes
 12150 ;; Hardware stack levels used: 1
 12151 ;; Hardware stack levels required when called: 6
 12152 ;; This function calls:
 12153 ;;		_TMR4_CallBack
 12154 ;; This function is called by:
 12155 ;;		Interrupt level 1
 12156 ;; This function uses a non-reentrant model
 12157 ;;
 12158                           
 12159                           	psect	text75
 12160  003CF4                     __ptext75:
 12161                           	callstack 0
 12162  003CF4                     _TMR4_ISR:
 12163                           	callstack 13
 12164                           
 12165                           ;incstack = 0
 12166  003CF4  006F FF60  F01D    	movff	status,??_TMR4_ISR
 12167  003CFA  006F FFE8  F01E    	movff	pclath,??_TMR4_ISR+1
 12168  003D00  006F FFEC  F01F    	movff	pclatu,??_TMR4_ISR+2
 12169  003D06                     
 12170                           ;mcc_generated_files/tmr4.c: 168:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr4.c: 171:     PIR7bits.TMR4IF = 0;
 12171  003D06  0139               	movlb	57	; () banked
 12172  003D08  91A7               	bcf	167,0,b	;volatile
 12173  003D0A                     
 12174                           ; BSR set to: 57
 12175                           ;mcc_generated_files/tmr4.c: 174:     if (++CountCallBack >= 10)
 12176  003D0A  4A27               	infsnz	TMR4_ISR@CountCallBack^0,f,c	;volatile
 12177  003D0C  2A28               	incf	(TMR4_ISR@CountCallBack+1)^0,f,c	;volatile
 12178  003D0E  5028               	movf	(TMR4_ISR@CountCallBack+1)^0,w,c	;volatile
 12179  003D10  E109               	bnz	i1u467_20
 12180  003D12  0E0A               	movlw	10
 12181  003D14  5C27               	subwf	TMR4_ISR@CountCallBack^0,w,c	;volatile
 12182  003D16  A0D8               	btfss	status,0,c
 12183  003D18  EF90  F01E         	goto	i1u467_21
 12184  003D1C  EF92  F01E         	goto	i1u467_20
 12185  003D20                     i1u467_21:
 12186  003D20  EF98  F01E         	goto	i1l688
 12187  003D24                     i1u467_20:
 12188  003D24                     
 12189                           ; BSR set to: 57
 12190                           ;mcc_generated_files/tmr4.c: 175:     {;mcc_generated_files/tmr4.c: 177:         TMR4_Ca
      +                          llBack();
 12191  003D24  EC64  F021         	call	_TMR4_CallBack	;wreg free
 12192  003D28                     
 12193                           ;mcc_generated_files/tmr4.c: 180:         CountCallBack = 0;
 12194  003D28  0E00               	movlw	0
 12195  003D2A  6E28               	movwf	(TMR4_ISR@CountCallBack+1)^0,c	;volatile
 12196  003D2C  0E00               	movlw	0
 12197  003D2E  6E27               	movwf	TMR4_ISR@CountCallBack^0,c	;volatile
 12198  003D30                     i1l688:
 12199  003D30  0060  F07F  FFFB   	movff	??_TMR4_ISR+2,pclatu
 12200  003D36  0060  F07B  FFFA   	movff	??_TMR4_ISR+1,pclath
 12201  003D3C  0060  F077  FFD8   	movff	??_TMR4_ISR,status
 12202  003D42  0011               	retfie		f
 12203  003D44                     __end_of_TMR4_ISR:
 12204                           	callstack 0
 12205                           
 12206 ;; *************** function _TMR4_CallBack *****************
 12207 ;; Defined at:
 12208 ;;		line 184 in file "mcc_generated_files/tmr4.c"
 12209 ;; Parameters:    Size  Location     Type
 12210 ;;		None
 12211 ;; Auto vars:     Size  Location     Type
 12212 ;;		None
 12213 ;; Return value:  Size  Location     Type
 12214 ;;                  1    wreg      void 
 12215 ;; Registers used:
 12216 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 12217 ;; Tracked objects:
 12218 ;;		On entry : 0/0
 12219 ;;		On exit  : 0/0
 12220 ;;		Unchanged: 0/0
 12221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12225 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12226 ;;Total ram usage:        0 bytes
 12227 ;; Hardware stack levels used: 1
 12228 ;; Hardware stack levels required when called: 5
 12229 ;; This function calls:
 12230 ;;		Absolute function
 12231 ;;		_TMR4_10msISR
 12232 ;;		_TMR4_DefaultInterruptHandler
 12233 ;; This function is called by:
 12234 ;;		_TMR4_ISR
 12235 ;; This function uses a non-reentrant model
 12236 ;;
 12237                           
 12238                           	psect	text76
 12239  0042C8                     __ptext76:
 12240                           	callstack 0
 12241  0042C8                     _TMR4_CallBack:
 12242                           	callstack 13
 12243  0042C8                     
 12244                           ;mcc_generated_files/tmr4.c: 188:     if(TMR4_InterruptHandler)
 12245  0042C8  0100               	movlb	0	; () banked
 12246  0042CA  51F1               	movf	_TMR4_InterruptHandler& (0+255),w,b
 12247  0042CC  11F2               	iorwf	(_TMR4_InterruptHandler+1)& (0+255),w,b
 12248  0042CE  B4D8               	btfsc	status,2,c
 12249  0042D0  EF6C  F021         	goto	i1u453_21
 12250  0042D4  EF6E  F021         	goto	i1u453_20
 12251  0042D8                     i1u453_21:
 12252  0042D8  EF7A  F021         	goto	i1l692
 12253  0042DC                     i1u453_20:
 12254  0042DC                     
 12255                           ; BSR set to: 0
 12256                           ;mcc_generated_files/tmr4.c: 189:     {;mcc_generated_files/tmr4.c: 190:         TMR4_In
      +                          terruptHandler();
 12257  0042DC  D802               	call	i1u454_28
 12258  0042DE  EF7A  F021         	goto	i1u454_29
 12259  0042E2                     i1u454_28:
 12260  0042E2  0005               	push	
 12261  0042E4  6EFA               	movwf	pclath,c
 12262  0042E6  51F1               	movf	_TMR4_InterruptHandler& (0+255),w,b
 12263  0042E8  6EFD               	movwf	tosl,c
 12264  0042EA  51F2               	movf	(_TMR4_InterruptHandler+1)& (0+255),w,b
 12265  0042EC  6EFE               	movwf	tosh,c
 12266  0042EE  6AFF               	clrf	tosu,c
 12267  0042F0  50FA               	movf	pclath,w,c
 12268  0042F2  0012               	return		;indir
 12269  0042F4                     i1u454_29:
 12270  0042F4                     i1l692:
 12271  0042F4  0012               	return		;funcret
 12272  0042F6                     __end_of_TMR4_CallBack:
 12273                           	callstack 0
 12274                           
 12275 ;; *************** function _TMR4_10msISR *****************
 12276 ;; Defined at:
 12277 ;;		line 65 in file "main.c"
 12278 ;; Parameters:    Size  Location     Type
 12279 ;;		None
 12280 ;; Auto vars:     Size  Location     Type
 12281 ;;		None
 12282 ;; Return value:  Size  Location     Type
 12283 ;;                  1    wreg      void 
 12284 ;; Registers used:
 12285 ;;		status,2, status,0
 12286 ;; Tracked objects:
 12287 ;;		On entry : 0/0
 12288 ;;		On exit  : 0/0
 12289 ;;		Unchanged: 0/0
 12290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12294 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12295 ;;Total ram usage:        0 bytes
 12296 ;; Hardware stack levels used: 1
 12297 ;; Hardware stack levels required when called: 4
 12298 ;; This function calls:
 12299 ;;		Nothing
 12300 ;; This function is called by:
 12301 ;;		_main
 12302 ;;		_TMR4_CallBack
 12303 ;; This function uses a non-reentrant model
 12304 ;;
 12305                           
 12306                           	psect	text77
 12307  00459A                     __ptext77:
 12308                           	callstack 0
 12309  00459A                     _TMR4_10msISR:
 12310                           	callstack 13
 12311  00459A                     
 12312                           ;main.c: 66:     ++cycle10ms;
 12313  00459A  0100               	movlb	0	; () banked
 12314  00459C  2BEA               	incf	_cycle10ms& (0+255),f,b
 12315  00459E                     
 12316                           ; BSR set to: 0
 12317  00459E  0012               	return		;funcret
 12318  0045A0                     __end_of_TMR4_10msISR:
 12319                           	callstack 0
 12320                           
 12321 ;; *************** function _TMR4_DefaultInterruptHandler *****************
 12322 ;; Defined at:
 12323 ;;		line 198 in file "mcc_generated_files/tmr4.c"
 12324 ;; Parameters:    Size  Location     Type
 12325 ;;		None
 12326 ;; Auto vars:     Size  Location     Type
 12327 ;;		None
 12328 ;; Return value:  Size  Location     Type
 12329 ;;                  1    wreg      void 
 12330 ;; Registers used:
 12331 ;;		None
 12332 ;; Tracked objects:
 12333 ;;		On entry : 0/0
 12334 ;;		On exit  : 0/0
 12335 ;;		Unchanged: 0/0
 12336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12340 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12341 ;;Total ram usage:        0 bytes
 12342 ;; Hardware stack levels used: 1
 12343 ;; Hardware stack levels required when called: 4
 12344 ;; This function calls:
 12345 ;;		Nothing
 12346 ;; This function is called by:
 12347 ;;		_TMR4_Initialize
 12348 ;;		_TMR4_CallBack
 12349 ;; This function uses a non-reentrant model
 12350 ;;
 12351                           
 12352                           	psect	text78
 12353  0045A4                     __ptext78:
 12354                           	callstack 0
 12355  0045A4                     _TMR4_DefaultInterruptHandler:
 12356                           	callstack 13
 12357  0045A4  0012               	return		;funcret
 12358  0045A6                     __end_of_TMR4_DefaultInterruptHandler:
 12359                           	callstack 0
 12360                           
 12361 ;; *************** function _Default_ISR *****************
 12362 ;; Defined at:
 12363 ;;		line 83 in file "mcc_generated_files/interrupt_manager.c"
 12364 ;; Parameters:    Size  Location     Type
 12365 ;;		None
 12366 ;; Auto vars:     Size  Location     Type
 12367 ;;		None
 12368 ;; Return value:  Size  Location     Type
 12369 ;;                  1    wreg      void 
 12370 ;; Registers used:
 12371 ;;		None
 12372 ;; Tracked objects:
 12373 ;;		On entry : 0/0
 12374 ;;		On exit  : 0/0
 12375 ;;		Unchanged: 0/0
 12376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12380 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12381 ;;Total ram usage:        0 bytes
 12382 ;; Hardware stack levels used: 1
 12383 ;; This function calls:
 12384 ;;		Nothing
 12385 ;; This function is called by:
 12386 ;;		Interrupt level 2
 12387 ;; This function uses a non-reentrant model
 12388 ;;
 12389                           
 12390                           	psect	text79
 12391  0045A8                     __ptext79:
 12392                           	callstack 0
 12393  0045A8                     _Default_ISR:
 12394                           	callstack 15
 12395  0045A8  0011               	retfie		f
 12396  0045AA                     __end_of_Default_ISR:
 12397                           	callstack 0
 12398                           
 12399 ;; *************** function _CCP3_CaptureISR *****************
 12400 ;; Defined at:
 12401 ;;		line 104 in file "mcc_generated_files/ccp3.c"
 12402 ;; Parameters:    Size  Location     Type
 12403 ;;		None
 12404 ;; Auto vars:     Size  Location     Type
 12405 ;;  module          2    4[COMRAM] struct CCPR3Reg_tag
 12406 ;; Return value:  Size  Location     Type
 12407 ;;                  1    wreg      void 
 12408 ;; Registers used:
 12409 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 12410 ;; Tracked objects:
 12411 ;;		On entry : 0/0
 12412 ;;		On exit  : 0/0
 12413 ;;		Unchanged: 0/0
 12414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12416 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12417 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12418 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12419 ;;Total ram usage:        4 bytes
 12420 ;; Hardware stack levels used: 1
 12421 ;; Hardware stack levels required when called: 1
 12422 ;; This function calls:
 12423 ;;		Absolute function
 12424 ;;		_CCP3_DefaultCallBack
 12425 ;; This function is called by:
 12426 ;;		Interrupt level 2
 12427 ;; This function uses a non-reentrant model
 12428 ;;
 12429                           
 12430                           	psect	text80
 12431  003D90                     __ptext80:
 12432                           	callstack 0
 12433  003D90                     _CCP3_CaptureISR:
 12434                           	callstack 14
 12435                           
 12436                           ;incstack = 0
 12437  003D90  006F FFE8  F003    	movff	pclath,??_CCP3_CaptureISR
 12438  003D96  006F FFEC  F004    	movff	pclatu,??_CCP3_CaptureISR+1
 12439  003D9C                     
 12440                           ;mcc_generated_files/ccp3.c: 106:     CCP3_PERIOD_REG_T module;;mcc_generated_files/ccp3
      +                          .c: 109:     PIR9bits.CCP3IF = 0;
 12441  003D9C  0139               	movlb	57	; () banked
 12442  003D9E  93A9               	bcf	169,1,b	;volatile
 12443                           
 12444                           ;mcc_generated_files/ccp3.c: 112:     module.ccpr3l = CCPR3L;
 12445  003DA0  006F FDD0  F005    	movff	16244,CCP3_CaptureISR@module	;volatile
 12446                           
 12447                           ;mcc_generated_files/ccp3.c: 113:     module.ccpr3h = CCPR3H;
 12448  003DA6  006F FDD4  F006    	movff	16245,CCP3_CaptureISR@module+1	;volatile
 12449  003DAC                     
 12450                           ; BSR set to: 57
 12451                           ;mcc_generated_files/ccp3.c: 116:     CCP3_CallBack(module.ccpr3_16Bit);
 12452  003DAC  C005  F001         	movff	CCP3_CaptureISR@module,CCP3_DefaultCallBack@capturedValue
 12453  003DB0  C006  F002         	movff	CCP3_CaptureISR@module+1,CCP3_DefaultCallBack@capturedValue+1
 12454  003DB4  D802               	call	i2u463_48
 12455  003DB6  EFE7  F01E         	goto	i2u463_49
 12456  003DBA                     i2u463_48:
 12457  003DBA  0005               	push	
 12458  003DBC  6EFA               	movwf	pclath,c
 12459  003DBE  0100               	movlb	0	; () banked
 12460  003DC0  51F7               	movf	_CCP3_CallBack& (0+255),w,b
 12461  003DC2  6EFD               	movwf	tosl,c
 12462  003DC4  51F8               	movf	(_CCP3_CallBack+1)& (0+255),w,b
 12463  003DC6  6EFE               	movwf	tosh,c
 12464  003DC8  6AFF               	clrf	tosu,c
 12465  003DCA  50FA               	movf	pclath,w,c
 12466  003DCC  0012               	return		;indir
 12467  003DCE                     i2u463_49:
 12468  003DCE  0060  F013  FFFB   	movff	??_CCP3_CaptureISR+1,pclatu
 12469  003DD4  0060  F00F  FFFA   	movff	??_CCP3_CaptureISR,pclath
 12470  003DDA  0011               	retfie		f
 12471  003DDC                     __end_of_CCP3_CaptureISR:
 12472                           	callstack 0
 12473                           
 12474 ;; *************** function _CCP3_DefaultCallBack *****************
 12475 ;; Defined at:
 12476 ;;		line 64 in file "mcc_generated_files/ccp3.c"
 12477 ;; Parameters:    Size  Location     Type
 12478 ;;  capturedValu    2    0[COMRAM] unsigned short 
 12479 ;; Auto vars:     Size  Location     Type
 12480 ;;		None
 12481 ;; Return value:  Size  Location     Type
 12482 ;;                  1    wreg      void 
 12483 ;; Registers used:
 12484 ;;		wreg, status,2, status,0
 12485 ;; Tracked objects:
 12486 ;;		On entry : 0/0
 12487 ;;		On exit  : 0/0
 12488 ;;		Unchanged: 0/0
 12489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12490 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12493 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12494 ;;Total ram usage:        2 bytes
 12495 ;; Hardware stack levels used: 1
 12496 ;; This function calls:
 12497 ;;		Nothing
 12498 ;; This function is called by:
 12499 ;;		_CCP3_Initialize
 12500 ;;		_CCP3_CaptureISR
 12501 ;; This function uses a non-reentrant model
 12502 ;;
 12503                           
 12504                           	psect	text81
 12505  00420C                     __ptext81:
 12506                           	callstack 0
 12507  00420C                     _CCP3_DefaultCallBack:
 12508                           	callstack 14
 12509  00420C                     
 12510                           ;mcc_generated_files/ccp3.c: 64: static void CCP3_DefaultCallBack(uint16_t capturedValue
      +                          );mcc_generated_files/ccp3.c: 65: {;mcc_generated_files/ccp3.c: 67:     if(PORTDbits.RD7
      +                          ) {
 12511  00420C  AECD               	btfss	205,7,c	;volatile
 12512  00420E  EF0B  F021         	goto	i2u450_41
 12513  004212  EF0D  F021         	goto	i2u450_40
 12514  004216                     i2u450_41:
 12515  004216  EF13  F021         	goto	i2l5599
 12516  00421A                     i2u450_40:
 12517  00421A                     
 12518                           ;mcc_generated_files/ccp3.c: 68:         distLeftM = capturedValue;
 12519  00421A  C001  F02B         	movff	CCP3_DefaultCallBack@capturedValue,_distLeftM
 12520  00421E  C002  F02C         	movff	CCP3_DefaultCallBack@capturedValue+1,_distLeftM+1
 12521                           
 12522                           ;mcc_generated_files/ccp3.c: 69:     } else {
 12523  004222  EF1D  F021         	goto	i2l438
 12524  004226                     i2l5599:
 12525                           
 12526                           ;mcc_generated_files/ccp3.c: 70:         distLeft = capturedValue - distLeftM;
 12527  004226  502B               	movf	_distLeftM^0,w,c
 12528  004228  5C01               	subwf	CCP3_DefaultCallBack@capturedValue^0,w,c
 12529  00422A  0100               	movlb	0	; () banked
 12530  00422C  6FE6               	movwf	_distLeft& (0+255),b	;volatile
 12531  00422E  502C               	movf	(_distLeftM+1)^0,w,c
 12532  004230  5802               	subwfb	(CCP3_DefaultCallBack@capturedValue+1)^0,w,c
 12533  004232  6FE7               	movwf	(_distLeft+1)& (0+255),b	;volatile
 12534  004234                     
 12535                           ; BSR set to: 0
 12536                           ;mcc_generated_files/ccp3.c: 71:         distLeft >>= 1;
 12537  004234  90D8               	bcf	status,0,c
 12538  004236  33E7               	rrcf	(_distLeft+1)& (0+255),f,b	;volatile
 12539  004238  33E6               	rrcf	_distLeft& (0+255),f,b	;volatile
 12540  00423A                     i2l438:
 12541  00423A  0012               	return		;funcret
 12542  00423C                     __end_of_CCP3_DefaultCallBack:
 12543                           	callstack 0
 12544                           
 12545 ;; *************** function _CCP4_CaptureISR *****************
 12546 ;; Defined at:
 12547 ;;		line 107 in file "mcc_generated_files/ccp4.c"
 12548 ;; Parameters:    Size  Location     Type
 12549 ;;		None
 12550 ;; Auto vars:     Size  Location     Type
 12551 ;;  module          2   10[COMRAM] struct CCPR4Reg_tag
 12552 ;; Return value:  Size  Location     Type
 12553 ;;                  1    wreg      void 
 12554 ;; Registers used:
 12555 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 12556 ;; Tracked objects:
 12557 ;;		On entry : 0/0
 12558 ;;		On exit  : 0/0
 12559 ;;		Unchanged: 0/0
 12560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12562 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12563 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12564 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12565 ;;Total ram usage:        4 bytes
 12566 ;; Hardware stack levels used: 1
 12567 ;; Hardware stack levels required when called: 1
 12568 ;; This function calls:
 12569 ;;		Absolute function
 12570 ;;		_CCP4_DefaultCallBack
 12571 ;; This function is called by:
 12572 ;;		Interrupt level 2
 12573 ;; This function uses a non-reentrant model
 12574 ;;
 12575                           
 12576                           	psect	text82
 12577  003DDC                     __ptext82:
 12578                           	callstack 0
 12579  003DDC                     _CCP4_CaptureISR:
 12580                           	callstack 14
 12581                           
 12582                           ;incstack = 0
 12583  003DDC  006F FFE8  F009    	movff	pclath,??_CCP4_CaptureISR
 12584  003DE2  006F FFEC  F00A    	movff	pclatu,??_CCP4_CaptureISR+1
 12585  003DE8                     
 12586                           ;mcc_generated_files/ccp4.c: 109:     CCP4_PERIOD_REG_T module;;mcc_generated_files/ccp4
      +                          .c: 112:     PIR10bits.CCP4IF = 0;
 12587  003DE8  0139               	movlb	57	; () banked
 12588  003DEA  91AA               	bcf	170,0,b	;volatile
 12589                           
 12590                           ;mcc_generated_files/ccp4.c: 115:     module.ccpr4l = CCPR4L;
 12591  003DEC  006F FDC0  F00B    	movff	16240,CCP4_CaptureISR@module	;volatile
 12592                           
 12593                           ;mcc_generated_files/ccp4.c: 116:     module.ccpr4h = CCPR4H;
 12594  003DF2  006F FDC4  F00C    	movff	16241,CCP4_CaptureISR@module+1	;volatile
 12595  003DF8                     
 12596                           ; BSR set to: 57
 12597                           ;mcc_generated_files/ccp4.c: 119:     CCP4_CallBack(module.ccpr4_16Bit);
 12598  003DF8  C00B  F007         	movff	CCP4_CaptureISR@module,CCP4_DefaultCallBack@capturedValue
 12599  003DFC  C00C  F008         	movff	CCP4_CaptureISR@module+1,CCP4_DefaultCallBack@capturedValue+1
 12600  003E00  D802               	call	i2u464_48
 12601  003E02  EF0D  F01F         	goto	i2u464_49
 12602  003E06                     i2u464_48:
 12603  003E06  0005               	push	
 12604  003E08  6EFA               	movwf	pclath,c
 12605  003E0A  0100               	movlb	0	; () banked
 12606  003E0C  51F5               	movf	_CCP4_CallBack& (0+255),w,b
 12607  003E0E  6EFD               	movwf	tosl,c
 12608  003E10  51F6               	movf	(_CCP4_CallBack+1)& (0+255),w,b
 12609  003E12  6EFE               	movwf	tosh,c
 12610  003E14  6AFF               	clrf	tosu,c
 12611  003E16  50FA               	movf	pclath,w,c
 12612  003E18  0012               	return		;indir
 12613  003E1A                     i2u464_49:
 12614  003E1A  0060  F02B  FFFB   	movff	??_CCP4_CaptureISR+1,pclatu
 12615  003E20  0060  F027  FFFA   	movff	??_CCP4_CaptureISR,pclath
 12616  003E26  0011               	retfie		f
 12617  003E28                     __end_of_CCP4_CaptureISR:
 12618                           	callstack 0
 12619                           
 12620 ;; *************** function _CCP4_DefaultCallBack *****************
 12621 ;; Defined at:
 12622 ;;		line 64 in file "mcc_generated_files/ccp4.c"
 12623 ;; Parameters:    Size  Location     Type
 12624 ;;  capturedValu    2    6[COMRAM] unsigned short 
 12625 ;; Auto vars:     Size  Location     Type
 12626 ;;		None
 12627 ;; Return value:  Size  Location     Type
 12628 ;;                  1    wreg      void 
 12629 ;; Registers used:
 12630 ;;		wreg, status,2, status,0
 12631 ;; Tracked objects:
 12632 ;;		On entry : 0/0
 12633 ;;		On exit  : 0/0
 12634 ;;		Unchanged: 0/0
 12635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12636 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12639 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12640 ;;Total ram usage:        2 bytes
 12641 ;; Hardware stack levels used: 1
 12642 ;; This function calls:
 12643 ;;		Nothing
 12644 ;; This function is called by:
 12645 ;;		_CCP4_Initialize
 12646 ;;		_CCP4_CaptureISR
 12647 ;; This function uses a non-reentrant model
 12648 ;;
 12649                           
 12650                           	psect	text83
 12651  00423C                     __ptext83:
 12652                           	callstack 0
 12653  00423C                     _CCP4_DefaultCallBack:
 12654                           	callstack 14
 12655  00423C                     
 12656                           ;mcc_generated_files/ccp4.c: 64: static void CCP4_DefaultCallBack(uint16_t capturedValue
      +                          );mcc_generated_files/ccp4.c: 65: {;mcc_generated_files/ccp4.c: 67:     if(PORTDbits.RD6
      +                          ) {
 12657  00423C  ACCD               	btfss	205,6,c	;volatile
 12658  00423E  EF23  F021         	goto	i2u451_41
 12659  004242  EF25  F021         	goto	i2u451_40
 12660  004246                     i2u451_41:
 12661  004246  EF2B  F021         	goto	i2l5607
 12662  00424A                     i2u451_40:
 12663  00424A                     
 12664                           ;mcc_generated_files/ccp4.c: 68:         distRightM = capturedValue;
 12665  00424A  C007  F029         	movff	CCP4_DefaultCallBack@capturedValue,_distRightM
 12666  00424E  C008  F02A         	movff	CCP4_DefaultCallBack@capturedValue+1,_distRightM+1
 12667                           
 12668                           ;mcc_generated_files/ccp4.c: 70:     } else {
 12669  004252  EF35  F021         	goto	i2l476
 12670  004256                     i2l5607:
 12671                           
 12672                           ;mcc_generated_files/ccp4.c: 71:         distRight = capturedValue - distRightM;
 12673  004256  5029               	movf	_distRightM^0,w,c
 12674  004258  5C07               	subwf	CCP4_DefaultCallBack@capturedValue^0,w,c
 12675  00425A  0100               	movlb	0	; () banked
 12676  00425C  6FE4               	movwf	_distRight& (0+255),b	;volatile
 12677  00425E  502A               	movf	(_distRightM+1)^0,w,c
 12678  004260  5808               	subwfb	(CCP4_DefaultCallBack@capturedValue+1)^0,w,c
 12679  004262  6FE5               	movwf	(_distRight+1)& (0+255),b	;volatile
 12680  004264                     
 12681                           ; BSR set to: 0
 12682                           ;mcc_generated_files/ccp4.c: 72:         distRight >>= 1;
 12683  004264  90D8               	bcf	status,0,c
 12684  004266  33E5               	rrcf	(_distRight+1)& (0+255),f,b	;volatile
 12685  004268  33E4               	rrcf	_distRight& (0+255),f,b	;volatile
 12686  00426A                     i2l476:
 12687  00426A  0012               	return		;funcret
 12688  00426C                     __end_of_CCP4_DefaultCallBack:
 12689                           	callstack 0
 12690                           
 12691 ;; *************** function _TMR5_GATE_ISR *****************
 12692 ;; Defined at:
 12693 ;;		line 175 in file "mcc_generated_files/tmr5.c"
 12694 ;; Parameters:    Size  Location     Type
 12695 ;;		None
 12696 ;; Auto vars:     Size  Location     Type
 12697 ;;		None
 12698 ;; Return value:  Size  Location     Type
 12699 ;;                  1    wreg      void 
 12700 ;; Registers used:
 12701 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 12702 ;; Tracked objects:
 12703 ;;		On entry : 0/0
 12704 ;;		On exit  : 0/0
 12705 ;;		Unchanged: 0/0
 12706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12709 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12710 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12711 ;;Total ram usage:        2 bytes
 12712 ;; Hardware stack levels used: 1
 12713 ;; Hardware stack levels required when called: 3
 12714 ;; This function calls:
 12715 ;;		Absolute function
 12716 ;;		_TMR5_DefaultGateInterruptHandler
 12717 ;; This function is called by:
 12718 ;;		Interrupt level 2
 12719 ;; This function uses a non-reentrant model
 12720 ;;
 12721                           
 12722                           	psect	text84
 12723  003F50                     __ptext84:
 12724                           	callstack 0
 12725  003F50                     _TMR5_GATE_ISR:
 12726                           	callstack 12
 12727                           
 12728                           ;incstack = 0
 12729  003F50  006F FFE8  F015    	movff	pclath,??_TMR5_GATE_ISR
 12730  003F56  006F FFEC  F016    	movff	pclatu,??_TMR5_GATE_ISR+1
 12731  003F5C                     
 12732                           ;mcc_generated_files/tmr5.c: 178:     PIR8bits.TMR5GIF = 0;
 12733  003F5C  0139               	movlb	57	; () banked
 12734  003F5E  9FA8               	bcf	168,7,b	;volatile
 12735  003F60                     
 12736                           ; BSR set to: 57
 12737                           ;mcc_generated_files/tmr5.c: 180:     if(TMR5_GateInterruptHandler)
 12738  003F60  5038               	movf	_TMR5_GateInterruptHandler^0,w,c
 12739  003F62  1039               	iorwf	(_TMR5_GateInterruptHandler+1)^0,w,c
 12740  003F64  B4D8               	btfsc	status,2,c
 12741  003F66  EFB7  F01F         	goto	i2u465_41
 12742  003F6A  EFB9  F01F         	goto	i2u465_40
 12743  003F6E                     i2u465_41:
 12744  003F6E  EFC5  F01F         	goto	i2l552
 12745  003F72                     i2u465_40:
 12746  003F72                     
 12747                           ; BSR set to: 57
 12748                           ;mcc_generated_files/tmr5.c: 181:     {;mcc_generated_files/tmr5.c: 182:         TMR5_Ga
      +                          teInterruptHandler();
 12749  003F72  D802               	call	i2u466_48
 12750  003F74  EFC5  F01F         	goto	i2u466_49
 12751  003F78                     i2u466_48:
 12752  003F78  0005               	push	
 12753  003F7A  6EFA               	movwf	pclath,c
 12754  003F7C  5038               	movf	_TMR5_GateInterruptHandler^0,w,c
 12755  003F7E  6EFD               	movwf	tosl,c
 12756  003F80  5039               	movf	(_TMR5_GateInterruptHandler+1)^0,w,c
 12757  003F82  6EFE               	movwf	tosh,c
 12758  003F84  6AFF               	clrf	tosu,c
 12759  003F86  50FA               	movf	pclath,w,c
 12760  003F88  0012               	return		;indir
 12761  003F8A                     i2u466_49:
 12762  003F8A                     i2l552:
 12763  003F8A  0060  F05B  FFFB   	movff	??_TMR5_GATE_ISR+1,pclatu
 12764  003F90  0060  F057  FFFA   	movff	??_TMR5_GATE_ISR,pclath
 12765  003F96  0011               	retfie		f
 12766  003F98                     __end_of_TMR5_GATE_ISR:
 12767                           	callstack 0
 12768                           
 12769 ;; *************** function _TMR5_DefaultGateInterruptHandler *****************
 12770 ;; Defined at:
 12771 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 12772 ;; Parameters:    Size  Location     Type
 12773 ;;		None
 12774 ;; Auto vars:     Size  Location     Type
 12775 ;;		None
 12776 ;; Return value:  Size  Location     Type
 12777 ;;                  1    wreg      void 
 12778 ;; Registers used:
 12779 ;;		wreg, status,2, status,0, cstack
 12780 ;; Tracked objects:
 12781 ;;		On entry : 0/0
 12782 ;;		On exit  : 0/0
 12783 ;;		Unchanged: 0/0
 12784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12788 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12789 ;;Total ram usage:        0 bytes
 12790 ;; Hardware stack levels used: 1
 12791 ;; Hardware stack levels required when called: 2
 12792 ;; This function calls:
 12793 ;;		_TMR5_ReadTimer
 12794 ;;		_TMR5_Reload
 12795 ;; This function is called by:
 12796 ;;		_TMR5_Initialize
 12797 ;;		_TMR5_GATE_ISR
 12798 ;; This function uses a non-reentrant model
 12799 ;;
 12800                           
 12801                           	psect	text85
 12802  004460                     __ptext85:
 12803                           	callstack 0
 12804  004460                     _TMR5_DefaultGateInterruptHandler:
 12805                           	callstack 12
 12806  004460                     
 12807                           ;mcc_generated_files/tmr5.c: 194:     distFront = TMR5_ReadTimer();
 12808  004460  EC0E  F022         	call	_TMR5_ReadTimer	;wreg free
 12809  004464  C00D  F0ED         	movff	?_TMR5_ReadTimer,_distFront	;volatile
 12810  004468  C00E  F0EE         	movff	?_TMR5_ReadTimer+1,_distFront+1	;volatile
 12811  00446C                     
 12812                           ;mcc_generated_files/tmr5.c: 195:     distFront >>= 1;
 12813  00446C  0100               	movlb	0	; () banked
 12814  00446E  90D8               	bcf	status,0,c
 12815  004470  33EE               	rrcf	(_distFront+1)& (0+255),f,b	;volatile
 12816  004472  33ED               	rrcf	_distFront& (0+255),f,b	;volatile
 12817  004474                     
 12818                           ; BSR set to: 0
 12819                           ;mcc_generated_files/tmr5.c: 196:     TMR5_Reload();
 12820  004474  EC91  F022         	call	_TMR5_Reload	;wreg free
 12821  004478                     
 12822                           ;mcc_generated_files/tmr5.c: 197:     PIR8bits.TMR5GIF = 0;
 12823  004478  0139               	movlb	57	; () banked
 12824  00447A  9FA8               	bcf	168,7,b	;volatile
 12825  00447C                     
 12826                           ; BSR set to: 57
 12827  00447C  0012               	return		;funcret
 12828  00447E                     __end_of_TMR5_DefaultGateInterruptHandler:
 12829                           	callstack 0
 12830                           
 12831 ;; *************** function _TMR5_Reload *****************
 12832 ;; Defined at:
 12833 ;;		line 155 in file "mcc_generated_files/tmr5.c"
 12834 ;; Parameters:    Size  Location     Type
 12835 ;;		None
 12836 ;; Auto vars:     Size  Location     Type
 12837 ;;		None
 12838 ;; Return value:  Size  Location     Type
 12839 ;;                  1    wreg      void 
 12840 ;; Registers used:
 12841 ;;		wreg, status,2, cstack
 12842 ;; Tracked objects:
 12843 ;;		On entry : 0/0
 12844 ;;		On exit  : 0/0
 12845 ;;		Unchanged: 0/0
 12846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12850 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12851 ;;Total ram usage:        0 bytes
 12852 ;; Hardware stack levels used: 1
 12853 ;; Hardware stack levels required when called: 1
 12854 ;; This function calls:
 12855 ;;		_TMR5_WriteTimer
 12856 ;; This function is called by:
 12857 ;;		_TMR5_DefaultGateInterruptHandler
 12858 ;; This function uses a non-reentrant model
 12859 ;;
 12860                           
 12861                           	psect	text86
 12862  004522                     __ptext86:
 12863                           	callstack 0
 12864  004522                     _TMR5_Reload:
 12865                           	callstack 12
 12866  004522                     
 12867                           ;mcc_generated_files/tmr5.c: 157:     TMR5_WriteTimer(timer5ReloadVal);
 12868  004522  C03A  F00D         	movff	_timer5ReloadVal,TMR5_WriteTimer@timerVal	;volatile
 12869  004526  C03B  F00E         	movff	_timer5ReloadVal+1,TMR5_WriteTimer@timerVal+1	;volatile
 12870  00452A  ECBD  F021         	call	_TMR5_WriteTimer	;wreg free
 12871  00452E  0012               	return		;funcret
 12872  004530                     __end_of_TMR5_Reload:
 12873                           	callstack 0
 12874                           
 12875 ;; *************** function _TMR5_WriteTimer *****************
 12876 ;; Defined at:
 12877 ;;		line 133 in file "mcc_generated_files/tmr5.c"
 12878 ;; Parameters:    Size  Location     Type
 12879 ;;  timerVal        2   12[COMRAM] unsigned short 
 12880 ;; Auto vars:     Size  Location     Type
 12881 ;;		None
 12882 ;; Return value:  Size  Location     Type
 12883 ;;                  1    wreg      void 
 12884 ;; Registers used:
 12885 ;;		wreg, status,2
 12886 ;; Tracked objects:
 12887 ;;		On entry : 0/0
 12888 ;;		On exit  : 0/0
 12889 ;;		Unchanged: 0/0
 12890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12891 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12894 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12895 ;;Total ram usage:        2 bytes
 12896 ;; Hardware stack levels used: 1
 12897 ;; This function calls:
 12898 ;;		Nothing
 12899 ;; This function is called by:
 12900 ;;		_TMR5_Reload
 12901 ;; This function uses a non-reentrant model
 12902 ;;
 12903                           
 12904                           	psect	text87
 12905  00437A                     __ptext87:
 12906                           	callstack 0
 12907  00437A                     _TMR5_WriteTimer:
 12908                           	callstack 12
 12909  00437A                     
 12910                           ;mcc_generated_files/tmr5.c: 133: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 134: {;mcc_generated_files/tmr5.c: 135:     if (T5CONbits.NOT_SYNC == 1)
 12911  00437A  A49A               	btfss	154,2,c	;volatile
 12912  00437C  EFC2  F021         	goto	i2u316_41
 12913  004380  EFC4  F021         	goto	i2u316_40
 12914  004384                     i2u316_41:
 12915  004384  EFCD  F021         	goto	i2l4643
 12916  004388                     i2u316_40:
 12917  004388                     
 12918                           ;mcc_generated_files/tmr5.c: 136:     {;mcc_generated_files/tmr5.c: 138:         T5CONbi
      +                          ts.TMR5ON = 0;
 12919  004388  909A               	bcf	154,0,c	;volatile
 12920  00438A                     
 12921                           ;mcc_generated_files/tmr5.c: 141:         TMR5H = (uint8_t)(timerVal >> 8);
 12922  00438A  500E               	movf	(TMR5_WriteTimer@timerVal+1)^0,w,c
 12923  00438C  6E99               	movwf	153,c	;volatile
 12924  00438E                     
 12925                           ;mcc_generated_files/tmr5.c: 142:         TMR5L = (uint8_t)timerVal;
 12926  00438E  0060  F037  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
 12927  004394                     
 12928                           ;mcc_generated_files/tmr5.c: 145:         T5CONbits.TMR5ON =1;
 12929  004394  809A               	bsf	154,0,c	;volatile
 12930                           
 12931                           ;mcc_generated_files/tmr5.c: 146:     }
 12932  004396  EFD2  F021         	goto	i2l534
 12933  00439A                     i2l4643:
 12934                           
 12935                           ;mcc_generated_files/tmr5.c: 148:     {;mcc_generated_files/tmr5.c: 150:         TMR5H =
      +                           (uint8_t)(timerVal >> 8);
 12936  00439A  500E               	movf	(TMR5_WriteTimer@timerVal+1)^0,w,c
 12937  00439C  6E99               	movwf	153,c	;volatile
 12938  00439E                     
 12939                           ;mcc_generated_files/tmr5.c: 151:         TMR5L = (uint8_t)timerVal;
 12940  00439E  0060  F037  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
 12941  0043A4                     i2l534:
 12942  0043A4  0012               	return		;funcret
 12943  0043A6                     __end_of_TMR5_WriteTimer:
 12944                           	callstack 0
 12945                           
 12946 ;; *************** function _TMR5_ReadTimer *****************
 12947 ;; Defined at:
 12948 ;;		line 117 in file "mcc_generated_files/tmr5.c"
 12949 ;; Parameters:    Size  Location     Type
 12950 ;;		None
 12951 ;; Auto vars:     Size  Location     Type
 12952 ;;  readVal         2   16[COMRAM] unsigned short 
 12953 ;;  readValLow      1   19[COMRAM] unsigned char 
 12954 ;;  readValHigh     1   18[COMRAM] unsigned char 
 12955 ;; Return value:  Size  Location     Type
 12956 ;;                  2   12[COMRAM] unsigned short 
 12957 ;; Registers used:
 12958 ;;		wreg, status,2
 12959 ;; Tracked objects:
 12960 ;;		On entry : 0/0
 12961 ;;		On exit  : 0/0
 12962 ;;		Unchanged: 0/0
 12963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12964 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12965 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12966 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12967 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12968 ;;Total ram usage:        8 bytes
 12969 ;; Hardware stack levels used: 1
 12970 ;; This function calls:
 12971 ;;		Nothing
 12972 ;; This function is called by:
 12973 ;;		_TMR5_DefaultGateInterruptHandler
 12974 ;; This function uses a non-reentrant model
 12975 ;;
 12976                           
 12977                           	psect	text88
 12978  00441C                     __ptext88:
 12979                           	callstack 0
 12980  00441C                     _TMR5_ReadTimer:
 12981                           	callstack 13
 12982  00441C                     
 12983                           ;mcc_generated_files/tmr5.c: 119:     uint16_t readVal;;mcc_generated_files/tmr5.c: 120:
      +                               uint8_t readValHigh;;mcc_generated_files/tmr5.c: 121:     uint8_t readValLow;;mcc_g
      +                          enerated_files/tmr5.c: 123:     T5CONbits.T5RD16 = 1;
 12984  00441C  829A               	bsf	154,1,c	;volatile
 12985                           
 12986                           ;mcc_generated_files/tmr5.c: 125:     readValLow = TMR5L;
 12987  00441E  006F FE60  F014    	movff	16280,TMR5_ReadTimer@readValLow	;volatile
 12988                           
 12989                           ;mcc_generated_files/tmr5.c: 126:     readValHigh = TMR5H;
 12990  004424  006F FE64  F013    	movff	16281,TMR5_ReadTimer@readValHigh	;volatile
 12991  00442A                     
 12992                           ;mcc_generated_files/tmr5.c: 128:     readVal = ((uint16_t)readValHigh << 8) | readValLo
      +                          w;
 12993  00442A  5013               	movf	TMR5_ReadTimer@readValHigh^0,w,c
 12994  00442C  6E0F               	movwf	??_TMR5_ReadTimer^0,c
 12995  00442E  5014               	movf	TMR5_ReadTimer@readValLow^0,w,c
 12996  004430  6E11               	movwf	TMR5_ReadTimer@readVal^0,c
 12997  004432  C00F  F012         	movff	??_TMR5_ReadTimer,TMR5_ReadTimer@readVal+1
 12998  004436                     
 12999                           ;mcc_generated_files/tmr5.c: 130:     return readVal;
 13000  004436  C011  F00D         	movff	TMR5_ReadTimer@readVal,?_TMR5_ReadTimer
 13001  00443A  C012  F00E         	movff	TMR5_ReadTimer@readVal+1,?_TMR5_ReadTimer+1
 13002  00443E  0012               	return		;funcret
 13003  004440                     __end_of_TMR5_ReadTimer:
 13004                           	callstack 0
 13005                           
 13006 ;; *************** function _SMT1_PR_ACQ_ISR *****************
 13007 ;; Defined at:
 13008 ;;		line 192 in file "mcc_generated_files/smt1.c"
 13009 ;; Parameters:    Size  Location     Type
 13010 ;;		None
 13011 ;; Auto vars:     Size  Location     Type
 13012 ;;		None
 13013 ;; Return value:  Size  Location     Type
 13014 ;;                  1    wreg      void 
 13015 ;; Registers used:
 13016 ;;		wreg, status,2, status,0
 13017 ;; Tracked objects:
 13018 ;;		On entry : 0/0
 13019 ;;		On exit  : 0/0
 13020 ;;		Unchanged: 0/0
 13021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13025 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13026 ;;Total ram usage:        0 bytes
 13027 ;; Hardware stack levels used: 1
 13028 ;; This function calls:
 13029 ;;		Nothing
 13030 ;; This function is called by:
 13031 ;;		Interrupt level 2
 13032 ;; This function uses a non-reentrant model
 13033 ;;
 13034                           
 13035                           	psect	text89
 13036  003EBC                     __ptext89:
 13037                           	callstack 0
 13038  003EBC                     _SMT1_PR_ACQ_ISR:
 13039                           	callstack 15
 13040  003EBC                     
 13041                           ;mcc_generated_files/smt1.c: 196:     PIR1bits.SMT1PRAIF = 0;
 13042  003EBC  0139               	movlb	57	; () banked
 13043  003EBE  9DA1               	bcf	161,6,b	;volatile
 13044  003EC0                     
 13045                           ; BSR set to: 57
 13046                           ;mcc_generated_files/smt1.c: 197:     smtPeriod = SMT1CPR;
 13047  003EC0  013F               	movlb	63	; () banked
 13048  003EC2  5115               	movf	21,w,b	;volatile
 13049  003EC4  6E34               	movwf	_smtPeriod^0,c	;volatile
 13050  003EC6  5116               	movf	22,w,b	;volatile
 13051  003EC8  6E35               	movwf	(_smtPeriod+1)^0,c	;volatile
 13052  003ECA  5117               	movf	23,w,b	;volatile
 13053  003ECC  6E36               	movwf	(_smtPeriod+2)^0,c	;volatile
 13054  003ECE  6A37               	clrf	(_smtPeriod+3)^0,c	;volatile
 13055  003ED0                     
 13056                           ; BSR set to: 63
 13057                           ;mcc_generated_files/smt1.c: 198:     if(CLC3CONbits.LC3OUT) smtWay++;
 13058  003ED0  013C               	movlb	60	; () banked
 13059  003ED2  AB60               	btfss	96,5,b	;volatile
 13060  003ED4  EF6E  F01F         	goto	i2u468_41
 13061  003ED8  EF70  F01F         	goto	i2u468_40
 13062  003EDC                     i2u468_41:
 13063  003EDC  EF79  F01F         	goto	i2l5717
 13064  003EE0                     i2u468_40:
 13065  003EE0                     
 13066                           ; BSR set to: 60
 13067  003EE0  0E01               	movlw	1
 13068  003EE2  0100               	movlb	0	; () banked
 13069  003EE4  27CA               	addwf	_smtWay& (0+255),f,b	;volatile
 13070  003EE6  0E00               	movlw	0
 13071  003EE8  23CB               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 13072  003EEA  23CC               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 13073  003EEC  23CD               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 13074  003EEE  EF82  F01F         	goto	i2l856
 13075  003EF2                     i2l5717:
 13076                           
 13077                           ; BSR set to: 60
 13078  003EF2  0EFF               	movlw	255
 13079  003EF4  0100               	movlb	0	; () banked
 13080  003EF6  27CA               	addwf	_smtWay& (0+255),f,b	;volatile
 13081  003EF8  0EFF               	movlw	255
 13082  003EFA  23CB               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 13083  003EFC  0EFF               	movlw	255
 13084  003EFE  23CC               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 13085  003F00  0EFF               	movlw	255
 13086  003F02  23CD               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 13087  003F04                     i2l856:
 13088                           
 13089                           ; BSR set to: 0
 13090  003F04  0011               	retfie		f
 13091  003F06                     __end_of_SMT1_PR_ACQ_ISR:
 13092                           	callstack 0
 13093                           
 13094 ;; *************** function _SMT1_PW_ACQ_ISR *****************
 13095 ;; Defined at:
 13096 ;;		line 203 in file "mcc_generated_files/smt1.c"
 13097 ;; Parameters:    Size  Location     Type
 13098 ;;		None
 13099 ;; Auto vars:     Size  Location     Type
 13100 ;;		None
 13101 ;; Return value:  Size  Location     Type
 13102 ;;                  1    wreg      void 
 13103 ;; Registers used:
 13104 ;;		wreg, status,2, status,0
 13105 ;; Tracked objects:
 13106 ;;		On entry : 0/0
 13107 ;;		On exit  : 0/0
 13108 ;;		Unchanged: 0/0
 13109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13113 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13114 ;;Total ram usage:        0 bytes
 13115 ;; Hardware stack levels used: 1
 13116 ;; This function calls:
 13117 ;;		Nothing
 13118 ;; This function is called by:
 13119 ;;		Interrupt level 2
 13120 ;; This function uses a non-reentrant model
 13121 ;;
 13122                           
 13123                           	psect	text90
 13124  003C00                     __ptext90:
 13125                           	callstack 0
 13126  003C00                     _SMT1_PW_ACQ_ISR:
 13127                           	callstack 15
 13128  003C00                     
 13129                           ;mcc_generated_files/smt1.c: 207:     PIR1bits.SMT1PWAIF = 0;
 13130  003C00  0139               	movlb	57	; () banked
 13131  003C02  9FA1               	bcf	161,7,b	;volatile
 13132  003C04                     
 13133                           ; BSR set to: 57
 13134                           ;mcc_generated_files/smt1.c: 208:     smtDuty = SMT1CPW;
 13135  003C04  013F               	movlb	63	; () banked
 13136  003C06  5118               	movf	24,w,b	;volatile
 13137  003C08  0100               	movlb	0	; () banked
 13138  003C0A  6FCE               	movwf	_smtDuty& (0+255),b	;volatile
 13139  003C0C  013F               	movlb	63	; () banked
 13140  003C0E  5119               	movf	25,w,b	;volatile
 13141  003C10  0100               	movlb	0	; () banked
 13142  003C12  6FCF               	movwf	(_smtDuty+1)& (0+255),b	;volatile
 13143  003C14  013F               	movlb	63	; () banked
 13144  003C16  511A               	movf	26,w,b	;volatile
 13145  003C18  0100               	movlb	0	; () banked
 13146  003C1A  6FD0               	movwf	(_smtDuty+2)& (0+255),b	;volatile
 13147  003C1C  6BD1               	clrf	(_smtDuty+3)& (0+255),b	;volatile
 13148  003C1E                     
 13149                           ; BSR set to: 0
 13150                           ;mcc_generated_files/smt1.c: 209:     if(CLC3CONbits.LC3OUT) smtWay++;
 13151  003C1E  013C               	movlb	60	; () banked
 13152  003C20  AB60               	btfss	96,5,b	;volatile
 13153  003C22  EF15  F01E         	goto	i2u469_41
 13154  003C26  EF17  F01E         	goto	i2u469_40
 13155  003C2A                     i2u469_41:
 13156  003C2A  EF20  F01E         	goto	i2l5727
 13157  003C2E                     i2u469_40:
 13158  003C2E                     
 13159                           ; BSR set to: 60
 13160  003C2E  0E01               	movlw	1
 13161  003C30  0100               	movlb	0	; () banked
 13162  003C32  27CA               	addwf	_smtWay& (0+255),f,b	;volatile
 13163  003C34  0E00               	movlw	0
 13164  003C36  23CB               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 13165  003C38  23CC               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 13166  003C3A  23CD               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 13167  003C3C  EF29  F01E         	goto	i2l863
 13168  003C40                     i2l5727:
 13169                           
 13170                           ; BSR set to: 60
 13171  003C40  0EFF               	movlw	255
 13172  003C42  0100               	movlb	0	; () banked
 13173  003C44  27CA               	addwf	_smtWay& (0+255),f,b	;volatile
 13174  003C46  0EFF               	movlw	255
 13175  003C48  23CB               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 13176  003C4A  0EFF               	movlw	255
 13177  003C4C  23CC               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 13178  003C4E  0EFF               	movlw	255
 13179  003C50  23CD               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 13180  003C52                     i2l863:
 13181                           
 13182                           ; BSR set to: 0
 13183  003C52  0011               	retfie		f
 13184  003C54                     __end_of_SMT1_PW_ACQ_ISR:
 13185                           	callstack 0
 13186                           
 13187 ;; *************** function _SMT1_Overflow_ISR *****************
 13188 ;; Defined at:
 13189 ;;		line 213 in file "mcc_generated_files/smt1.c"
 13190 ;; Parameters:    Size  Location     Type
 13191 ;;		None
 13192 ;; Auto vars:     Size  Location     Type
 13193 ;;		None
 13194 ;; Return value:  Size  Location     Type
 13195 ;;                  1    wreg      void 
 13196 ;; Registers used:
 13197 ;;		wreg, status,2
 13198 ;; Tracked objects:
 13199 ;;		On entry : 0/0
 13200 ;;		On exit  : 0/0
 13201 ;;		Unchanged: 0/0
 13202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13206 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13207 ;;Total ram usage:        0 bytes
 13208 ;; Hardware stack levels used: 1
 13209 ;; This function calls:
 13210 ;;		Nothing
 13211 ;; This function is called by:
 13212 ;;		Interrupt level 2
 13213 ;; This function uses a non-reentrant model
 13214 ;;
 13215                           
 13216                           	psect	text91
 13217  0043D0                     __ptext91:
 13218                           	callstack 0
 13219  0043D0                     _SMT1_Overflow_ISR:
 13220                           	callstack 15
 13221  0043D0                     
 13222                           ;mcc_generated_files/smt1.c: 217:     PIR1bits.SMT1IF = 0;
 13223  0043D0  0139               	movlb	57	; () banked
 13224  0043D2  9BA1               	bcf	161,5,b	;volatile
 13225  0043D4                     
 13226                           ; BSR set to: 57
 13227                           ;mcc_generated_files/smt1.c: 218:     smtPeriod = 0;
 13228  0043D4  0E00               	movlw	0
 13229  0043D6  6E34               	movwf	_smtPeriod^0,c	;volatile
 13230  0043D8  0E00               	movlw	0
 13231  0043DA  6E35               	movwf	(_smtPeriod+1)^0,c	;volatile
 13232  0043DC  0E00               	movlw	0
 13233  0043DE  6E36               	movwf	(_smtPeriod+2)^0,c	;volatile
 13234  0043E0  0E00               	movlw	0
 13235  0043E2  6E37               	movwf	(_smtPeriod+3)^0,c	;volatile
 13236                           
 13237                           ;mcc_generated_files/smt1.c: 219:     smtDuty = 0;
 13238  0043E4  0E00               	movlw	0
 13239  0043E6  0100               	movlb	0	; () banked
 13240  0043E8  6FCE               	movwf	_smtDuty& (0+255),b	;volatile
 13241  0043EA  0E00               	movlw	0
 13242  0043EC  6FCF               	movwf	(_smtDuty+1)& (0+255),b	;volatile
 13243  0043EE  0E00               	movlw	0
 13244  0043F0  6FD0               	movwf	(_smtDuty+2)& (0+255),b	;volatile
 13245  0043F2  0E00               	movlw	0
 13246  0043F4  6FD1               	movwf	(_smtDuty+3)& (0+255),b	;volatile
 13247  0043F6                     
 13248                           ; BSR set to: 0
 13249  0043F6  0011               	retfie		f
 13250  0043F8                     __end_of_SMT1_Overflow_ISR:
 13251                           	callstack 0
 13252                           
 13253                           ;
 13254                           ; Interrupt Vector Table @ 0x8
 13255                           ;
 13256                           
 13257                           	psect	ivt0x8
 13258  000008                     __pivt0x8:
 13259                           	callstack 0
 13260  000008                     ivt0x8_base:
 13261                           	callstack 0
 13262                           
 13263                           ; Vector 0 : SWINT
 13264  000008  116A               	dw	_Default_ISR shr (0+2)
 13265                           
 13266                           ; Vector 1 : HLVD
 13267  00000A  116A               	dw	_Default_ISR shr (0+2)
 13268                           
 13269                           ; Vector 2 : OSF
 13270  00000C  116A               	dw	_Default_ISR shr (0+2)
 13271                           
 13272                           ; Vector 3 : CSW
 13273  00000E  116A               	dw	_Default_ISR shr (0+2)
 13274                           
 13275                           ; Vector 4 : NVM
 13276  000010  116A               	dw	_Default_ISR shr (0+2)
 13277                           
 13278                           ; Vector 5 : SCAN
 13279  000012  116A               	dw	_Default_ISR shr (0+2)
 13280                           
 13281                           ; Vector 6 : CRC
 13282  000014  116A               	dw	_Default_ISR shr (0+2)
 13283                           
 13284                           ; Vector 7 : IOC
 13285  000016  116A               	dw	_Default_ISR shr (0+2)
 13286                           
 13287                           ; Vector 8 : INT0
 13288  000018  116A               	dw	_Default_ISR shr (0+2)
 13289                           
 13290                           ; Vector 9 : ZCD
 13291  00001A  116A               	dw	_Default_ISR shr (0+2)
 13292                           
 13293                           ; Vector 10 : AD
 13294  00001C  116A               	dw	_Default_ISR shr (0+2)
 13295                           
 13296                           ; Vector 11 : ADT
 13297  00001E  116A               	dw	_Default_ISR shr (0+2)
 13298                           
 13299                           ; Vector 12 : CMP1
 13300  000020  116A               	dw	_Default_ISR shr (0+2)
 13301                           
 13302                           ; Vector 13 : SMT1
 13303  000022  10F4               	dw	_SMT1_Overflow_ISR shr (0+2)
 13304                           
 13305                           ; Vector 14 : SMT1PRA
 13306  000024  0FAF               	dw	_SMT1_PR_ACQ_ISR shr (0+2)
 13307                           
 13308                           ; Vector 15 : SMT1PRW
 13309  000026  0F00               	dw	_SMT1_PW_ACQ_ISR shr (0+2)
 13310                           
 13311                           ; Vector 16 : DMA1SCNT
 13312  000028  116A               	dw	_Default_ISR shr (0+2)
 13313                           
 13314                           ; Vector 17 : DMA1DCNT
 13315  00002A  116A               	dw	_Default_ISR shr (0+2)
 13316                           
 13317                           ; Vector 18 : DMA1OR
 13318  00002C  116A               	dw	_Default_ISR shr (0+2)
 13319                           
 13320                           ; Vector 19 : DMA1A
 13321  00002E  116A               	dw	_Default_ISR shr (0+2)
 13322                           
 13323                           ; Vector 20 : SPI1RX
 13324  000030  116A               	dw	_Default_ISR shr (0+2)
 13325                           
 13326                           ; Vector 21 : SPI1TX
 13327  000032  116A               	dw	_Default_ISR shr (0+2)
 13328                           
 13329                           ; Vector 22 : SPI1
 13330  000034  116A               	dw	_Default_ISR shr (0+2)
 13331                           
 13332                           ; Vector 23 : I2C1RX
 13333  000036  116A               	dw	_Default_ISR shr (0+2)
 13334                           
 13335                           ; Vector 24 : I2C1TX
 13336  000038  116A               	dw	_Default_ISR shr (0+2)
 13337                           
 13338                           ; Vector 25 : I2C1
 13339  00003A  116A               	dw	_Default_ISR shr (0+2)
 13340                           
 13341                           ; Vector 26 : I2C1E
 13342  00003C  116A               	dw	_Default_ISR shr (0+2)
 13343                           
 13344                           ; Vector 27 : U1RX
 13345  00003E  0F29               	dw	_UART1_rx_vect_isr shr (0+2)
 13346                           
 13347                           ; Vector 28 : U1TX
 13348  000040  0F15               	dw	_UART1_tx_vect_isr shr (0+2)
 13349                           
 13350                           ; Vector 29 : U1E
 13351  000042  116A               	dw	_Default_ISR shr (0+2)
 13352                           
 13353                           ; Vector 30 : U1
 13354  000044  116A               	dw	_Default_ISR shr (0+2)
 13355                           
 13356                           ; Vector 31 : TMR0
 13357  000046  116A               	dw	_Default_ISR shr (0+2)
 13358                           
 13359                           ; Vector 32 : TMR1
 13360  000048  116A               	dw	_Default_ISR shr (0+2)
 13361                           
 13362                           ; Vector 33 : TMR1G
 13363  00004A  116A               	dw	_Default_ISR shr (0+2)
 13364                           
 13365                           ; Vector 34 : TMR2
 13366  00004C  116A               	dw	_Default_ISR shr (0+2)
 13367                           
 13368                           ; Vector 35 : CCP1
 13369  00004E  116A               	dw	_Default_ISR shr (0+2)
 13370                           
 13371                           ; Vector 36 : Undefined
 13372  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 13373                           
 13374                           ; Vector 37 : NCO1
 13375  000052  116A               	dw	_Default_ISR shr (0+2)
 13376                           
 13377                           ; Vector 38 : CWG1
 13378  000054  116A               	dw	_Default_ISR shr (0+2)
 13379                           
 13380                           ; Vector 39 : CLC1
 13381  000056  116A               	dw	_Default_ISR shr (0+2)
 13382                           
 13383                           ; Vector 40 : INT1
 13384  000058  116A               	dw	_Default_ISR shr (0+2)
 13385                           
 13386                           ; Vector 41 : CMP2
 13387  00005A  116A               	dw	_Default_ISR shr (0+2)
 13388                           
 13389                           ; Vector 42 : DMA2SCNT
 13390  00005C  116A               	dw	_Default_ISR shr (0+2)
 13391                           
 13392                           ; Vector 43 : DMA2DCNT
 13393  00005E  116A               	dw	_Default_ISR shr (0+2)
 13394                           
 13395                           ; Vector 44 : DMA2OR
 13396  000060  116A               	dw	_Default_ISR shr (0+2)
 13397                           
 13398                           ; Vector 45 : DMA2A
 13399  000062  116A               	dw	_Default_ISR shr (0+2)
 13400                           
 13401                           ; Vector 46 : I2C2RX
 13402  000064  116A               	dw	_Default_ISR shr (0+2)
 13403                           
 13404                           ; Vector 47 : I2C2TX
 13405  000066  116A               	dw	_Default_ISR shr (0+2)
 13406                           
 13407                           ; Vector 48 : I2C2
 13408  000068  116A               	dw	_Default_ISR shr (0+2)
 13409                           
 13410                           ; Vector 49 : I2C2E
 13411  00006A  116A               	dw	_Default_ISR shr (0+2)
 13412                           
 13413                           ; Vector 50 : U2RX
 13414  00006C  116A               	dw	_Default_ISR shr (0+2)
 13415                           
 13416                           ; Vector 51 : U2TX
 13417  00006E  116A               	dw	_Default_ISR shr (0+2)
 13418                           
 13419                           ; Vector 52 : U2E
 13420  000070  116A               	dw	_Default_ISR shr (0+2)
 13421                           
 13422                           ; Vector 53 : U2
 13423  000072  116A               	dw	_Default_ISR shr (0+2)
 13424                           
 13425                           ; Vector 54 : TMR3
 13426  000074  116A               	dw	_Default_ISR shr (0+2)
 13427                           
 13428                           ; Vector 55 : TMR3G
 13429  000076  116A               	dw	_Default_ISR shr (0+2)
 13430                           
 13431                           ; Vector 56 : TMR4
 13432  000078  0F3D               	dw	_TMR4_ISR shr (0+2)
 13433                           
 13434                           ; Vector 57 : CCP2
 13435  00007A  116A               	dw	_Default_ISR shr (0+2)
 13436                           
 13437                           ; Vector 58 : Undefined
 13438  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 13439                           
 13440                           ; Vector 59 : CWG2
 13441  00007E  116A               	dw	_Default_ISR shr (0+2)
 13442                           
 13443                           ; Vector 60 : CLC2
 13444  000080  116A               	dw	_Default_ISR shr (0+2)
 13445                           
 13446                           ; Vector 61 : INT2
 13447  000082  116A               	dw	_Default_ISR shr (0+2)
 13448                           
 13449                           ; Vector 62 : Undefined
 13450  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 13451                           
 13452                           ; Vector 63 : Undefined
 13453  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 13454                           
 13455                           ; Vector 64 : Undefined
 13456  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 13457                           
 13458                           ; Vector 65 : Undefined
 13459  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 13460                           
 13461                           ; Vector 66 : Undefined
 13462  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 13463                           
 13464                           ; Vector 67 : Undefined
 13465  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 13466                           
 13467                           ; Vector 68 : Undefined
 13468  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 13469                           
 13470                           ; Vector 69 : Undefined
 13471  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 13472                           
 13473                           ; Vector 70 : TMR5
 13474  000094  116A               	dw	_Default_ISR shr (0+2)
 13475                           
 13476                           ; Vector 71 : TMR5G
 13477  000096  0FD4               	dw	_TMR5_GATE_ISR shr (0+2)
 13478                           
 13479                           ; Vector 72 : TMR6
 13480  000098  116A               	dw	_Default_ISR shr (0+2)
 13481                           
 13482                           ; Vector 73 : CCP3
 13483  00009A  0F64               	dw	_CCP3_CaptureISR shr (0+2)
 13484                           
 13485                           ; Vector 74 : CWG3
 13486  00009C  116A               	dw	_Default_ISR shr (0+2)
 13487                           
 13488                           ; Vector 75 : CLC3
 13489  00009E  116A               	dw	_Default_ISR shr (0+2)
 13490                           
 13491                           ; Vector 76 : Undefined
 13492  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 13493                           
 13494                           ; Vector 77 : Undefined
 13495  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 13496                           
 13497                           ; Vector 78 : Undefined
 13498  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 13499                           
 13500                           ; Vector 79 : Undefined
 13501  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 13502                           
 13503                           ; Vector 80 : CCP4
 13504  0000A8  0F77               	dw	_CCP4_CaptureISR shr (0+2)
 13505                           
 13506                           ; Vector 81 : CLC4
 13507  0000AA  116A               	dw	_Default_ISR shr (0+2)
 13508  0000AC                     ivt0x8_undefint:
 13509                           	callstack 0
 13510  0000AC  00FF               	reset	
 13511                           
 13512                           	psect	text92
 13513  000000                     __ptext92:
 13514                           	callstack 0
 13515  000000                     
 13516                           	psect	rparam
 13517  0000                     
 13518                           	psect	config
 13519                           
 13520                           ;Config register CONFIG1L @ 0x300000
 13521                           ;	External Oscillator Selection
 13522                           ;	FEXTOSC = OFF, Oscillator not enabled
 13523                           ;	Reset Oscillator Selection
 13524                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
 13525  300000                     	org	3145728
 13526  300000  8C                 	db	140
 13527                           
 13528                           ;Config register CONFIG1H @ 0x300001
 13529                           ;	Clock out Enable bit
 13530                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 13531                           ;	PRLOCKED One-Way Set Enable bit
 13532                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
 13533                           ;	Clock Switch Enable bit
 13534                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 13535                           ;	Fail-Safe Clock Monitor Enable bit
 13536                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 13537  300001                     	org	3145729
 13538  300001  FF                 	db	255
 13539                           
 13540                           ;Config register CONFIG2L @ 0x300002
 13541                           ;	MCLR Enable bit
 13542                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 13543                           ;	Power-up timer selection bits
 13544                           ;	PWRTS = PWRT_OFF, PWRT is disabled
 13545                           ;	Multi-vector enable bit
 13546                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
 13547                           ;	IVTLOCK bit One-way set enable bit
 13548                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
 13549                           ;	Low Power BOR Enable bit
 13550                           ;	LPBOREN = OFF, ULPBOR disabled
 13551                           ;	Brown-out Reset Enable bits
 13552                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 13553  300002                     	org	3145730
 13554  300002  FF                 	db	255
 13555                           
 13556                           ;Config register CONFIG2H @ 0x300003
 13557                           ;	Brown-out Reset Voltage Selection bits
 13558                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
 13559                           ;	ZCD Disable bit
 13560                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 13561                           ;	PPSLOCK bit One-Way Set Enable bit
 13562                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
 13563                           ;	Stack Full/Underflow Reset Enable bit
 13564                           ;	STVREN = ON, Stack full/underflow will cause Reset
 13565                           ;	Debugger Enable bit
 13566                           ;	DEBUG = OFF, Background debugger disabled
 13567                           ;	Extended Instruction Set Enable bit
 13568                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 13569  300003                     	org	3145731
 13570  300003  FF                 	db	255
 13571                           
 13572                           ;Config register CONFIG3L @ 0x300004
 13573                           ;	WDT Period selection bits
 13574                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 13575                           ;	WDT operating mode
 13576                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
 13577  300004                     	org	3145732
 13578  300004  9F                 	db	159
 13579                           
 13580                           ;Config register CONFIG3H @ 0x300005
 13581                           ;	WDT Window Select bits
 13582                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 13583                           ;	WDT input clock selector
 13584                           ;	WDTCCS = SC, Software Control
 13585  300005                     	org	3145733
 13586  300005  FF                 	db	255
 13587                           
 13588                           ;Config register CONFIG4L @ 0x300006
 13589                           ;	Boot Block Size selection bits
 13590                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
 13591                           ;	Boot Block enable bit
 13592                           ;	BBEN = OFF, Boot block disabled
 13593                           ;	Storage Area Flash enable bit
 13594                           ;	SAFEN = OFF, SAF disabled
 13595                           ;	Application Block write protection bit
 13596                           ;	WRTAPP = OFF, Application Block not write protected
 13597  300006                     	org	3145734
 13598  300006  FF                 	db	255
 13599                           
 13600                           ;Config register CONFIG4H @ 0x300007
 13601                           ;	Configuration Register Write Protection bit
 13602                           ;	WRTB = OFF, Configuration registers (300000-30000Bh) not write-protected
 13603                           ;	Boot Block Write Protection bit
 13604                           ;	WRTC = OFF, Boot Block (000000-0007FFh) not write-protected
 13605                           ;	Data EEPROM Write Protection bit
 13606                           ;	WRTD = OFF, Data EEPROM not write-protected
 13607                           ;	SAF Write protection bit
 13608                           ;	WRTSAF = OFF, SAF not Write Protected
 13609                           ;	Low Voltage Programming Enable bit
 13610                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
 13611  300007                     	org	3145735
 13612  300007  FF                 	db	255
 13613                           
 13614                           ;Config register CONFIG5L @ 0x300008
 13615                           ;	PFM and Data EEPROM Code Protection bit
 13616                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
 13617  300008                     	org	3145736
 13618  300008  FF                 	db	255
 13619                           
 13620                           ;Config register CONFIG5H @ 0x300009
 13621                           ;	unspecified, using default values
 13622  300009                     	org	3145737
 13623  300009  FF                 	db	255
 13624                           tosu	equ	0x3FFF
 13625                           tosh	equ	0x3FFE
 13626                           tosl	equ	0x3FFD
 13627                           stkptr	equ	0x3FFC
 13628                           pclatu	equ	0x3FFB
 13629                           pclath	equ	0x3FFA
 13630                           pcl	equ	0x3FF9
 13631                           tblptru	equ	0x3FF8
 13632                           tblptrh	equ	0x3FF7
 13633                           tblptrl	equ	0x3FF6
 13634                           tablat	equ	0x3FF5
 13635                           prodh	equ	0x3FF4
 13636                           prodl	equ	0x3FF3
 13637                           indf0	equ	0x3FEF
 13638                           postinc0	equ	0x3FEE
 13639                           postdec0	equ	0x3FED
 13640                           preinc0	equ	0x3FEC
 13641                           plusw0	equ	0x3FEB
 13642                           fsr0h	equ	0x3FEA
 13643                           fsr0l	equ	0x3FE9
 13644                           wreg	equ	0x3FE8
 13645                           indf1	equ	0x3FE7
 13646                           postinc1	equ	0x3FE6
 13647                           postdec1	equ	0x3FE5
 13648                           preinc1	equ	0x3FE4
 13649                           plusw1	equ	0x3FE3
 13650                           fsr1h	equ	0x3FE2
 13651                           fsr1l	equ	0x3FE1
 13652                           bsr	equ	0x3FE0
 13653                           indf2	equ	0x3FDF
 13654                           postinc2	equ	0x3FDE
 13655                           postdec2	equ	0x3FDD
 13656                           preinc2	equ	0x3FDC
 13657                           plusw2	equ	0x3FDB
 13658                           fsr2h	equ	0x3FDA
 13659                           fsr2l	equ	0x3FD9
 13660                           status	equ	0x3FD8

Data Sizes:
    Strings     69
    Constant    0
    Data        0
    BSS         114
    Persistent  25
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     34      64
    BANK0           160     82     159
    BANK1           256     28      60
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S3382$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    S3382$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_6(CODE[9]), STR_5(CODE[14]), STR_4(CODE[22]), STR_3(CODE[13]), 
		 -> STR_2(CODE[22]), STR_1(CODE[11]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 22
		 -> STR_6(CODE[9]), STR_5(CODE[14]), STR_4(CODE[22]), STR_3(CODE[13]), 
		 -> STR_2(CODE[22]), STR_1(CODE[11]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_6(CODE[9]), STR_5(CODE[14]), STR_4(CODE[22]), STR_3(CODE[13]), 
		 -> STR_2(CODE[22]), STR_1(CODE[11]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK1[2]), 

    TMR4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_10msISR(), TMR4_DefaultInterruptHandler(), 

    TMR4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_10msISR(), TMR4_DefaultInterruptHandler(), Absolute function(), 

    TMR5_SetGateInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR5_DefaultGateInterruptHandler(), 

    TMR5_GateInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR5_DefaultGateInterruptHandler(), Absolute function(), 

    CCP4_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP4_DefaultCallBack(), 

    CCP4_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP4_DefaultCallBack(), Absolute function(), 

    CCP3_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP3_DefaultCallBack(), 

    CCP3_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP3_DefaultCallBack(), Absolute function(), 

    UART1_SetTxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    UART1_SetRxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultErrorHandler(), 

    UART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), 

    UART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), 

    UART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultErrorHandler(), 

    UART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultOverrunErrorHandler(), 

    UART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultFramingErrorHandler(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_Receive_ISR(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_Transmit_ISR(), 


Critical Paths under _main in COMRAM

    _utoa->_pad
    _dtoa->_pad
    _pad->_strlen
    _fputc->_putch
    _putch->_UART1_Write
    _abs->___aomod
    _getBatteryVoltage->_ADCC_GetSingleConversion
    _setSteering->_PWM5_LoadDutyValue
    _setSteering->_PWM6_LoadDutyValue
    _calcSpeed->___fltol
    _calcMotorPow->___fltol
    _calcMotorPow->_actSpeed
    _setMotor->_PWM7_LoadDutyValue
    _setMotor->_PWM8_LoadDutyValue
    _SYSTEM_Initialize->_TMR3_Initialize
    _UART1_Initialize->_UART1_SetErrorHandler
    _UART1_Initialize->_UART1_SetFramingErrorHandler
    _UART1_Initialize->_UART1_SetOverrunErrorHandler
    _UART1_Initialize->_UART1_SetRxInterruptHandler
    _UART1_Initialize->_UART1_SetTxInterruptHandler
    _TMR5_Initialize->_TMR5_SetGateInterruptHandler
    _TMR4_Initialize->_TMR4_SetInterruptHandler
    _CCP4_Initialize->_CCP4_SetCallBack
    _CCP3_Initialize->_CCP3_SetCallBack

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR4_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _CCP3_CaptureISR in COMRAM

    _CCP3_CaptureISR->_CCP3_DefaultCallBack

Critical Paths under _CCP4_CaptureISR in COMRAM

    _CCP4_CaptureISR->_CCP4_DefaultCallBack

Critical Paths under _TMR5_GATE_ISR in COMRAM

    _TMR5_DefaultGateInterruptHandler->_TMR5_ReadTimer
    _TMR5_Reload->_TMR5_WriteTimer

Critical Paths under _SMT1_PR_ACQ_ISR in COMRAM

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in COMRAM

    None.

Critical Paths under _SMT1_Overflow_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _loop->_printf
    _getCurve->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _utoa->_pad
    _dtoa->___aodiv
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _getBatteryVoltage->_ADCC_GetSingleConversion
    _calcSteering->_setSteering
    _setSteering->___awdiv
    _calcSpeed->___fltol
    ___fladd->___flmul
    _calcMotorPow->___fltol
    _setMotor->_PWM7_LoadDutyValue
    _setMotor->_PWM8_LoadDutyValue
    _actSpeed->___aldiv
    ___xxtofl->___awdiv
    ___fltol->___fladd
    ___flmul->___xxtofl
    ___flge->___xxtofl
    _SYSTEM_Initialize->_TMR5_Initialize

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR4_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _CCP3_CaptureISR in BANK0

    None.

Critical Paths under _CCP4_CaptureISR in BANK0

    None.

Critical Paths under _TMR5_GATE_ISR in BANK0

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK0

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK0

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _loop->_getCurve
    _getCurve->_printf
    _vfprintf->_vfpfcnvrt

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR4_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _CCP3_CaptureISR in BANK1

    None.

Critical Paths under _CCP4_CaptureISR in BANK1

    None.

Critical Paths under _TMR5_GATE_ISR in BANK1

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK1

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK1

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR4_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _CCP3_CaptureISR in BANK2

    None.

Critical Paths under _CCP4_CaptureISR in BANK2

    None.

Critical Paths under _TMR5_GATE_ISR in BANK2

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK2

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK2

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR4_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _CCP3_CaptureISR in BANK3

    None.

Critical Paths under _CCP4_CaptureISR in BANK3

    None.

Critical Paths under _TMR5_GATE_ISR in BANK3

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK3

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK3

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR4_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _CCP3_CaptureISR in BANK4

    None.

Critical Paths under _CCP4_CaptureISR in BANK4

    None.

Critical Paths under _TMR5_GATE_ISR in BANK4

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK4

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK4

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR4_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _CCP3_CaptureISR in BANK5

    None.

Critical Paths under _CCP4_CaptureISR in BANK5

    None.

Critical Paths under _TMR5_GATE_ISR in BANK5

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK5

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK5

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR4_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _CCP3_CaptureISR in BANK6

    None.

Critical Paths under _CCP4_CaptureISR in BANK6

    None.

Critical Paths under _TMR5_GATE_ISR in BANK6

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK6

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK6

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR4_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _CCP3_CaptureISR in BANK7

    None.

Critical Paths under _CCP4_CaptureISR in BANK7

    None.

Critical Paths under _TMR5_GATE_ISR in BANK7

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK7

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK7

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR4_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _CCP3_CaptureISR in BANK8

    None.

Critical Paths under _CCP4_CaptureISR in BANK8

    None.

Critical Paths under _TMR5_GATE_ISR in BANK8

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK8

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK8

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR4_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _CCP3_CaptureISR in BANK9

    None.

Critical Paths under _CCP4_CaptureISR in BANK9

    None.

Critical Paths under _TMR5_GATE_ISR in BANK9

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK9

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK9

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR4_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _CCP3_CaptureISR in BANK10

    None.

Critical Paths under _CCP4_CaptureISR in BANK10

    None.

Critical Paths under _TMR5_GATE_ISR in BANK10

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK10

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK10

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR4_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _CCP3_CaptureISR in BANK11

    None.

Critical Paths under _CCP4_CaptureISR in BANK11

    None.

Critical Paths under _TMR5_GATE_ISR in BANK11

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK11

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK11

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR4_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _CCP3_CaptureISR in BANK12

    None.

Critical Paths under _CCP4_CaptureISR in BANK12

    None.

Critical Paths under _TMR5_GATE_ISR in BANK12

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK12

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK12

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR4_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _CCP3_CaptureISR in BANK13

    None.

Critical Paths under _CCP4_CaptureISR in BANK13

    None.

Critical Paths under _TMR5_GATE_ISR in BANK13

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK13

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK13

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR4_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _CCP3_CaptureISR in BANK14

    None.

Critical Paths under _CCP4_CaptureISR in BANK14

    None.

Critical Paths under _TMR5_GATE_ISR in BANK14

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK14

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK14

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR4_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _CCP3_CaptureISR in BANK15

    None.

Critical Paths under _CCP4_CaptureISR in BANK15

    None.

Critical Paths under _TMR5_GATE_ISR in BANK15

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK15

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK15

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   50882
                  _SYSTEM_Initialize
           _TMR4_SetInterruptHandler
                               _loop
 ---------------------------------------------------------------------------------
 (1) _loop                                                 0     0      0   49735
                             ___flge
                           ___xxtofl
                       _calcMotorPow
                          _calcSpeed
                       _calcSteering
                  _getBatteryVoltage
                           _getCurve
                         _getReverse
                             _printf
                        _setSteering
 ---------------------------------------------------------------------------------
 (2) _getReverse                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _getCurve                                             6     6      0   14348
                                             22 BANK1      6     6      0
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              10     4      6   14094
                                             80 BANK0      2     2      0
                                             16 BANK1      6     0      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   13467
                                             72 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           44    38      6   12985
                                             62 BANK0     10     4      6
                                              0 BANK1     16    16      0
                               _dtoa
                              _fputc
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                32    22     10    5099
                                             26 BANK0     32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___lomod                                             17     1     16     412
                                             31 COMRAM     1     1      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (6) ___lodiv                                             25     9     16     421
                                              0 BANK0     25     9     16
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    5953
                                             26 BANK0     36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3687
                                             33 COMRAM     1     1      0
                                             16 BANK0     10     4      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     220
                                             31 COMRAM     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1537
                                              9 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1037
                                              0 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0      93
                                             32 COMRAM     1     1      0
                        _UART1_Write
 ---------------------------------------------------------------------------------
 (10) _UART1_Write                                         1     1      0      62
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             16 BANK0      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                             31 COMRAM     2     2      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                              0 BANK0     26    10     16
 ---------------------------------------------------------------------------------
 (2) _getBatteryVoltage                                    0     0      0      31
           _ADCC_GetSingleConversion
 ---------------------------------------------------------------------------------
 (3) _ADCC_GetSingleConversion                             5     3      2      31
                                             31 COMRAM     3     1      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _calcSteering                                         4     4      0    3443
                                             17 BANK0      4     4      0
                        _setSteering
 ---------------------------------------------------------------------------------
 (2) _setSteering                                          9     6      3    3248
                                              8 BANK0      9     6      3
                 _PWM5_LoadDutyValue
                 _PWM6_LoadDutyValue
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) _PWM6_LoadDutyValue                                   4     2      2     152
                                             31 COMRAM     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _PWM5_LoadDutyValue                                   4     2      2     152
                                             31 COMRAM     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _calcSpeed                                            6     6      0    6430
                                             71 BANK0      6     6      0
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             16     8      8    2388
                                             47 BANK0     16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _calcMotorPow                                         7     7      0    6679
                                             71 BANK0      7     7      0
                            ___awdiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                           _actSpeed
                           _setMotor
 ---------------------------------------------------------------------------------
 (3) _setMotor                                             4     2      2     946
                                              2 BANK0      4     2      2
                 _PWM7_LoadDutyValue
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (4) _PWM8_LoadDutyValue                                   4     2      2     332
                                             31 COMRAM     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _PWM7_LoadDutyValue                                   4     2      2     332
                                             31 COMRAM     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _actSpeed                                             4     2      2     845
                                             31 COMRAM     2     0      2
                                             14 BANK0      2     2      0
                            ___aldiv
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             14     6      8     805
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     836
                                              8 BANK0     14    10      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     381
                                             31 COMRAM     2     2      0
                                             63 BANK0      8     4      4
                            ___awdiv (ARG)
                            ___fladd (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    2693
                                             22 BANK0     25    17      8
                            ___awdiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     805
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     626
                                             22 BANK0     12     4      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     973
                    _ADCC_Initialize
                    _CCP3_Initialize
                    _CCP4_Initialize
                    _CLC3_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM5_Initialize
                    _PWM6_Initialize
                    _PWM7_Initialize
                    _PWM8_Initialize
                    _SMT1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR4_Initialize
                    _TMR5_Initialize
                   _UART1_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0     490
              _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          2     0      2      98
                                             31 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          2     0      2      98
                                             31 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetOverrunErrorHandler                         2     0      2      98
                                             31 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetFramingErrorHandler                         2     0      2      98
                                             31 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetErrorHandler                                2     0      2      98
                                             31 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      2     2      0      98
                                              0 BANK0      2     2      0
       _TMR5_SetGateInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetGateInterruptHandler                         2     0      2      98
                                             31 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0     174
           _TMR4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR4_SetInterruptHandler                             2     0      2     174
                                             31 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      2     2      0       0
                                             31 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMT1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM7_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      15
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _CLC3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP4_Initialize                                      0     0      0      98
                   _CCP4_SetCallBack
 ---------------------------------------------------------------------------------
 (3) _CCP4_SetCallBack                                     2     0      2      98
                                             31 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CCP3_Initialize                                      0     0      0      98
                   _CCP3_SetCallBack
 ---------------------------------------------------------------------------------
 (3) _CCP3_SetCallBack                                     2     0      2      98
                                             31 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_tx_vect_isr                                   3     3      0       0
                                             22 COMRAM     3     3      0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_rx_vect_isr                                   3     3      0       0
                                             25 COMRAM     3     3      0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Receive_ISR                                   0     0      0       0
                   Absolute function *
          _UART1_DefaultErrorHandler *
   _UART1_DefaultFramingErrorHandler *
   _UART1_DefaultOverrunErrorHandler *
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (14) _UART1_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _UART1_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _UART1_DefaultErrorHandler                           0     0      0       0
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (14) _UART1_RxDataHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TMR4_ISR                                            3     3      0       0
                                             28 COMRAM     3     3      0
                      _TMR4_CallBack
 ---------------------------------------------------------------------------------
 (13) _TMR4_CallBack                                       0     0      0       0
                   Absolute function *
                       _TMR4_10msISR *
       _TMR4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _TMR4_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _TMR4_10msISR                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _CCP3_CaptureISR                                     4     4      0     144
                                              2 COMRAM     4     4      0
                   Absolute function *
               _CCP3_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (17) _CCP3_DefaultCallBack                                2     0      2      97
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _CCP4_CaptureISR                                     4     4      0     144
                                              8 COMRAM     4     4      0
                   Absolute function *
               _CCP4_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (17) _CCP4_DefaultCallBack                                2     0      2      97
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _TMR5_GATE_ISR                                       2     2      0     233
                                             20 COMRAM     2     2      0
                   Absolute function *
   _TMR5_DefaultGateInterruptHandler *
 ---------------------------------------------------------------------------------
 (17) _TMR5_DefaultGateInterruptHandler                    0     0      0     233
                     _TMR5_ReadTimer
                        _TMR5_Reload
 ---------------------------------------------------------------------------------
 (18) _TMR5_Reload                                         0     0      0     164
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (19) _TMR5_WriteTimer                                     2     0      2     164
                                             12 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (18) _TMR5_ReadTimer                                      8     6      2      69
                                             12 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _SMT1_PR_ACQ_ISR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _SMT1_PW_ACQ_ISR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _SMT1_Overflow_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
     _CCP3_Initialize
       _CCP3_SetCallBack
     _CCP4_Initialize
       _CCP4_SetCallBack
     _CLC3_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM5_Initialize
     _PWM6_Initialize
     _PWM7_Initialize
     _PWM8_Initialize
     _SMT1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
     _TMR4_Initialize
       _TMR4_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetGateInterruptHandler
     _UART1_Initialize
       _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
   _TMR4_SetInterruptHandler
   _loop
     ___flge
       ___xxtofl (ARG)
         ___awdiv (ARG)
     ___xxtofl
     _calcMotorPow
       ___awdiv
       ___flmul
         ___awdiv (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___awdiv (ARG)
         ___fladd (ARG)
           ___flmul (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl
       _actSpeed
         ___aldiv
       _setMotor
         _PWM7_LoadDutyValue
         _PWM8_LoadDutyValue
     _calcSpeed
       ___fladd
       ___flmul
       ___fltol
       ___xxtofl
     _calcSteering
       _setSteering
         _PWM5_LoadDutyValue
         _PWM6_LoadDutyValue
         ___awdiv
     _getBatteryVoltage
       _ADCC_GetSingleConversion
     _getCurve
       _printf
         _vfprintf
           _vfpfcnvrt
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                 _fputs
                   _fputc
                 _strlen
             _fputc
             _utoa
               ___lodiv
               ___lomod
               _pad
     _getReverse
     _printf
     _setSteering

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *
     Absolute function(Fake) *
     _UART1_DefaultErrorHandler *
       _UART1_RxDataHandler
     _UART1_DefaultFramingErrorHandler *
     _UART1_DefaultOverrunErrorHandler *
     _UART1_RxDataHandler *

 _TMR4_ISR (ROOT)
   _TMR4_CallBack
     Absolute function(Fake) *
     _TMR4_10msISR *
     _TMR4_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _CCP3_CaptureISR (ROOT)
   Absolute function(Fake) *
   _CCP3_DefaultCallBack *

 _CCP4_CaptureISR (ROOT)
   Absolute function(Fake) *
   _CCP4_DefaultCallBack *

 _TMR5_GATE_ISR (ROOT)
   Absolute function(Fake) *
   _TMR5_DefaultGateInterruptHandler *
     _TMR5_ReadTimer
     _TMR5_Reload
       _TMR5_WriteTimer

 _SMT1_PR_ACQ_ISR (ROOT)

 _SMT1_PW_ACQ_ISR (ROOT)

 _SMT1_Overflow_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FFF      0       0      85        0.0%
EEDATA             400      0       0       0        0.0%
BITBIGSFRlllll     181      0       0      83        0.0%
BITBIGSFRhhhhll    17E      0       0      53        0.0%
BITBIGSFRhhhhll    17A      0       0      54        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     1C      3C       7       23.4%
BITBIGSFRhhhhll     E3      0       0      50        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     52      9F       5       99.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     22      40       1       67.4%
BITBIGSFRhhhhll     44      0       0      59        0.0%
BITBIGSFRhhhhll     3A      0       0      47        0.0%
BITBIGSFRhhhhll     34      0       0      67        0.0%
BITBIGSFRhhhhhh     28      0       0      36        0.0%
BITBIGSFRhhhhll     20      0       0      42        0.0%
BITBIGSFRhhhhll     20      0       0      70        0.0%
BITBIGSFRllhh       15      0       0      74        0.0%
BITBIGSFRhhhhll     12      0       0      48        0.0%
BITBIGSFRlh         11      0       0      73        0.0%
BITBIGSFRhhhhll      B      0       0      66        0.0%
BITBIGSFRhhhhll      A      0       0      41        0.0%
BITBIGSFRhhhhll      8      0       0      55        0.0%
BITBIGSFRllhlhl      6      0       0      77        0.0%
BITBIGSFRlllhhl      6      0       0      80        0.0%
BITBIGSFRhhhhll      6      0       0      57        0.0%
BITBIGSFRhhhhll      6      0       0      68        0.0%
BITBIGSFRhhhhhh      6      0       0      39        0.0%
BITBIGSFRhhhhll      5      0       0      58        0.0%
BITBIGSFRhhhhll      5      0       0      65        0.0%
BITBIGSFRhhhhll      5      0       0      63        0.0%
BITBIGSFRhhhhll      5      0       0      61        0.0%
BITBIGSFRhhhhhh      4      0       0      38        0.0%
BITBIGSFRhhhhll      4      0       0      60        0.0%
BITBIGSFRhhhhll      4      0       0      62        0.0%
BITBIGSFRhhhhll      4      0       0      64        0.0%
BITBIGSFRlllhll      3      0       0      81        0.0%
BITBIGSFRllhll       3      0       0      78        0.0%
BITBIGSFRhhhhhl      3      0       0      40        0.0%
BITBIGSFRllhlhl      2      0       0      76        0.0%
BITBIGSFRhhhhll      1      0       0      49        0.0%
BITBIGSFRllhlhl      1      0       0      75        0.0%
BITBIGSFRlllhhh      1      0       0      79        0.0%
BITBIGSFRhhhhll      1      0       0      44        0.0%
BITBIGSFRhhhhll      1      0       0      43        0.0%
BITBIGSFRhhhhll      1      0       0      46        0.0%
BITBIGSFRhhhhll      1      0       0      45        0.0%
BITBIGSFRllllh       1      0       0      82        0.0%
BITBIGSFRhhhhhh      1      0       0      37        0.0%
BITBIGSFRhhhhll      1      0       0      52        0.0%
BITBIGSFRhhhhll      1      0       0      51        0.0%
BITBIGSFRhhhhll      1      0       0      56        0.0%
BITBIGSFRhhhhll      1      0       0      69        0.0%
BITBIGSFRhhl         1      0       0      71        0.0%
BITBIGSFRhl          1      0       0      72        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     11B      84        0.0%
DATA                 0      0     11B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Thu Jan 25 12:53:24 2024

                             _CCP4_Initialize 426C                        ??_CCP3_DefaultCallBack 0003  
                                          l72 4510                                            l75 441A  
                                          l69 3E70                                  ___awdiv@sign 0065  
                           ??_TMR5_WriteTimer 000F                                           l312 3BA2  
                                         l404 3D8E                                           l308 3B5A  
                                         l309 3B74                                           l318 4538  
                                         l520 3EBA                                           l441 42C6  
                                         l362 4556                                           l371 4542  
                                         l188 3634                                           l284 3926  
                                         l365 456A                                           l359 4560  
                                         l368 454C                                           l712 41DA  
                                         l449 4592                                           l482 4298  
                                         l723 44B0                                           l555 4574  
                                         l644 4320                                           l740 416E  
                                         l709 44C8                                           l581 40CC  
                                         l726 41A4                                           l479 4588  
                                         l751 44E0                                           l737 44F8  
                                         l754 4138                                           l923 4498  
                                         l695 457E                                           l795 420A  
                                         l893 434C                                           _GIE 01FE97  
                                         _PR2 003FAB                                           _PR4 003F9F  
                                         _abs 3FDC                                           _pad 3636  
                             _TMR2_Initialize 447E                CCP4_SetCallBack@customCallBack 0020  
                                         tosl 003FFD                                           wreg 003FE8  
                            _CCP4_SetCallBack 4580                                  ___flmul@aexp 0083  
                                ___flmul@bexp 0088                            _UART1_Transmit_ISR 3F98  
                                ___flmul@sign 0082                                  ___flmul@temp 008D  
                                ___flmul@prod 0089                       __end_of_CCP4_CaptureISR 3E28  
                                ___fltol@exp1 0021                                          l1042 3BFE  
                                        ?_abs 0070                                          l2012 2724  
                                        l1300 2734                                          l1302 2758  
                                        l1054 406A                                          l1214 2E7E  
                                        l2023 26BC                                          l1303 276C  
                                        l1215 2EE2                                          l2016 2660  
                                        l1304 2794                                          l2112 1F14  
                                        l2120 3B46                                          l2032 43CC  
                                        l2009 25C8                                          l1313 28CE  
                                        l1057 4094                                          l2105 256C  
                                        l1225 2FA4                                          l1234 39C0  
                                        l2124 4014                                          l1333 2366  
                                        l1237 4520                                          l1261 2148  
                                        l1245 2138                                          l1342 2E7C  
                                        l2062 36C0                                          l2070 19FA  
                                        l1351 3498                                          l2127 401C  
                                        l2119 3B3E                                          l1271 3ADE  
                                        l2064 36FC                                          l2072 1A02  
                                        l3201 35E4                                          l1433 30B2  
                                        l2153 4058                                          l1282 2AF6  
                                        l2090 1C3E                                          l3211 35F2  
                                        l3203 35E6                                          l2139 3A58  
                                        l2147 3F4C                                          l2059 367C  
                             _timer3ReloadVal 00F3                                          l3213 35F4  
                                        l3205 35E8                                          l3301 44B2  
                                        l1277 2A6C                                          l3215 35F6  
                                        l3207 35EA                                          l2095 23A0  
                                        l1624 32C0                                          l1296 2BCC  
                                        l3161 3D44                                          l3217 44FA  
                                        l3209 35F0                                          l3241 41DC  
                                        l1481 2D32                                          l2097 23A8  
                                        l1802 354A                                          l3171 3D70  
                                        l3163 3D46                                          l3251 4204  
                                        l3243 41FA                                          l1619 327A  
                                        l1651 31BA                                          l1468 2A58  
                                        l3229 3BA4                                          l3181 3D84  
                                        l3173 3D7A                                          l3165 3D4E  
                                        l3253 4206                                          l3245 41FC  
                                        l3261 4490                                          l5101 315A  
                                        l3183 3D86                                          l3175 3D7E  
                                        l3167 3D58                                          l3191 43F8  
                                        l3263 44CA                                          l3255 449A  
                                        l3247 41FE                                          l5111 318A  
                                        l3185 3D88                                          l3177 3D80  
                                        l3169 3D6E                                          l3193 356C  
                                        l3249 4202                                          l3257 447E  
                                        l5201 40C8                                          l1585 37C2  
                                        l5113 319A                                          l6001 330A  
                                        l1809 356A                                          l3275 4322  
                                        l3187 3D8A                                          l3179 3D82  
                                        l3195 358C                                          l3259 448A  
                                        l5115 31AA                                          l5107 316E  
                                        l6011 337A                                          l6003 3318  
                                        l1908 1422                                          l3189 3D8C  
                                        l3197 358E                                          l3285 44E2  
                                        l5221 3894                                          l5109 317A  
                                        l1909 1410                                          l6101 1BB8  
                                        l6013 338C                                          l6005 332A  
                                        l6021 34D6                                          l3199 3596  
                                        l5231 38B6                                          l5223 38A4  
                                        l6031 3636                                          l6111 1BFC  
                                        l6103 1BCA                                          l6007 3358  
                                        l6023 34E4                                          l6015 349A  
                                        l1792 3392                                          l5241 38CA  
                                        l5233 38BA                                          l5225 38AA  
                                        l5217 3884                                          l5081 30E0  
                                        l6041 3688                                          l6033 3644  
                                        l6113 1C04                                          l6105 1BD8  
                                        l6009 3378                                          l6025 3512  
                                        l6017 34BA                                          l6121 2378  
                                        l1882 1238                                          l5171 42C0  
                                        l4611 4558                                          l5251 38DE  
                                        l5243 38CE                                          l5235 38BE  
                                        l5227 38AE                                          l5219 3888  
                                        l5091 312E                                          l5083 310A  
                                        l5075 30B4                                          l1891 1508  
                                        l1883 1226                                          l6211 4104  
                                        l6043 369C                                          l6035 3658  
                                        l6107 1BDE                                          l6115 1C16  
                                        l6027 3532                                          l6019 34C2  
                                        l6131 23E2                                          l6123 237A  
                                        l1972 1958                                          l1884 11EC  
                                        l5173 42C4                                          l5165 429A  
                                        l5181 4310                                          l4613 454E  
                                        l5253 38E2                                          l5245 38D2  
                                        l5237 38C2                                          l5229 38B2  
                                        l5085 310C                                          l5077 30CC  
                                        l6221 2FCE                                          l6213 2FA6  
                                        l6205 41A6                                          l7021 27E4  
                                        l6053 3FDC                                          l6045 36A2  
                                        l6037 3668                                          l6109 1BF0  
                                        l6061 19A4                                          l6029 3544  
                                        l6133 23E8                                          l6141 24D0  
                                        l6125 2394                                          l6301 3AE0  
                                        l5341 3A72                                          ?_pad 0070  
                                        l5167 42AA                                          l5191 4292  
                                        l5183 431C                                          l5175 42F6  
                                        l4631 456C                                          l4615 4562  
                                        l4607 4544                                          l5255 38EE  
                                        l5247 38D6                                          l5239 38C6  
                                        l1975 17EA                                          l5087 311C  
                                        l6231 3016                                          l6223 2FDC  
                                        l6215 2FAC                                          l6207 4170  
                                        l7023 22DE                                          l6311 4062  
                                        l6055 3FF8                                          l6047 36CE  
                                        l6039 3674                                          l6071 1A0A  
                                        l6063 19C4                                          l1799 33B2  
                                        l6143 24E4                                          l6151 2544  
                                        l6135 2460                                          l6127 23D0  
                                        l6119 2368                                          l6303 3AE8  
                                        l7015 2112                                          l5351 3AB4  
                                        l5343 3A78                                          l1968 15D0  
                                        l5169 42B6                                          l5193 4296  
                                        l5185 426C                                          l5177 430A  
                                        l4609 453A                                          l5257 38FA  
                                        l5249 38DA                                          l1985 191A  
                                        l1977 1862                                          l5097 3146  
                                        l5089 3120                                          l6241 3060  
                                        l6233 301E                                          l6225 2FEC  
                                        l6217 2FBA                                          l6401 345E  
                                        l4801 1162                                          l6209 413A  
                                        l7017 2AD0                                          l6313 4066  
                                        l6049 36E2                                          l6081 1A42  
                                        l6073 1A1C                                          l6065 19D2  
                                        l6057 195A                                          l6145 2502  
                                        l6137 2466                                          l6129 23D8  
                                        l6161 1C92                                          l6305 3AF6  
                                        l6321 43A6                                          l5353 3ABC  
                                        l5345 3A8A                                          l1978 1850  
                                        l4627 458A                                          l5187 427C  
                                        l5195 4096                                          l5179 430E  
                                        l5259 3922                                          l6411 1528  
                                        l5099 3150                                          l6251 3092  
                                        l6243 3070                                          l6235 302A  
                                        l6227 2FF0                                          l6219 2FCA  
                                        l6403 3480                                          l1899 1352  
                                        l4811 1176                                          l4803 1166  
                                        l6331 279C                                          l7019 2B96  
                                        l6315 4068                                          l6083 1A48  
                                        l6091 1B3C                                          l6075 1A2A  
                                        l6067 19D4                                          l6059 197A  
                                        l6147 251C                                          l6139 246C  
                                        l6163 1C96                                          l6155 1C40  
                                        l6307 3B1C                                          l6323 43B0  
                                        l5355 3AC0                                          l5347 3A8E  
                                        l5339 3A5A                                          l4629 4580  
                                        l5189 4288                                          l5197 40AA  
                                        l6261 3712                                          l6501 1848  
                                        l6421 156E                                          l6413 1538  
                                        l6405 150A                                          l6253 30A2  
                                        l6245 3072                                          l6237 3038  
                                        l6229 3000                                          l4901 13D2  
                                        l4813 117A                                          l4805 116A  
                                        l4821 118A                                          l6333 27A8  
                                        l6341 27D0                                          l6317 4078  
                                        l6309 405C                                          l6093 1B58  
                                        l6085 1ACC                                          l6077 1A30  
                                        l6069 19EE                                          l6149 2536  
                                        l6181 1E4E                                          l6173 1D88  
                                        l6165 1CC4                                          l6157 1C6E  
                                        l5357 3AD6                                          l5349 3A9E  
                                        l5199 40AE                                          l4647 4576  
                                        l6271 3738                                          l6263 371A  
                                        l6511 18B6                                          l6431 159A  
                                        l6423 1574                                          l6415 1548  
                                        l6407 1518                                          l6247 307C  
                                        l6239 3042                                          l4903 13E0  
                                        l4831 11FA                                          l4823 118E  
                                        l4815 117E                                          l4807 116E  
                                        l4751 1076                                          l4743 1048  
                                        l6351 2860                                          l6335 27B0  
                                        l6343 2812                                          l6327 2726  
                                        l6095 1B76                                          l6087 1AD2  
                                        l6079 1A38                                          l6183 1E7C  
                                        l6191 1EB0                                          l6175 1DB6  
                                        l6167 1CF2                                          l6159 1C80  
                                        l6281 3770                                          l6273 3740  
                                        l6265 371E                                          l6257 36FE  
                                        l6521 191E                                          l6505 1872  
                                        l6513 18BA                                          l6441 15F0  
                                        l6433 15AA                                          l6425 157A  
                                        l6417 1558                                          l6409 1526  
                                        l6249 3082                                          l4913 1432  
                                        l4921 1488                                          l4905 13E4  
                                        l4841 1224                                          l4833 1206  
                                        l4825 11B8                                          l4817 1182  
                                        l4809 1172                                          l4761 10B0  
                                        l4753 1086                                          l4745 1056  
                                        l6361 28BC                                          l6353 287C  
                                        l6345 2830                                          l6337 27BC  
                                        l6329 2774                                          l6097 1B90  
                                        l6089 1AD8                                          l6193 1EC2  
                                        l6185 1E8E                                          l6177 1E16  
                                        l6169 1D50                                          l6601 1F5E  
                                        l6291 379C                                          l6283 3776  
                                        l6275 3752                                          l6267 372C  
                                        l6259 3704                                          l6531 1948  
                                        l6523 192E                                          l6515 18D4  
                                        l6507 187E                                          l6451 1638  
                                        l6435 15BA                                          l6427 1588  
                                        l6419 155E                                          l6371 3932  
                                        l4931 14DA                                          l4923 1498  
                                        l4915 143E                                          l4907 13F2  
                                        l4851 127A                                          l4843 1246  
                                        l4835 120A                                          l4827 11D4  
                                        l4819 1186                                          l4771 10DE  
                                        l4763 10B6                                          l4755 1096  
                                        l4747 1064                                          l6355 2888  
                                        l6347 283C                                          l6099 1BAA  
                                        l6187 1EA2                                          l6603 1F7A  
                                        l6611 1FCE                                          l6285 378C  
                                        l6277 375A                                          l6293 37A2  
                                        l6269 3734                                          l6525 193C  
                                        l6517 18E8                                          l6509 188C  
                                        l6461 1686                                          l6453 1644  
                                        l6445 1604                                          l6437 15C0  
                                        l6429 158A                                          l6541 25D8  
                                        l6373 3948                                          l4941 14F8  
                                        l4933 14E0                                          l4925 14A8  
                                        l4917 144C                                          l4909 1408  
                                        l4861 12B4                                          l4853 1288  
                                        l4845 1256                                          l4837 1218  
                                        l4829 11E4                                          l4781 1112  
                                        l4773 10E0                                          l4765 10C8  
                                        l4757 1098                                          l4749 1066  
                                        l6357 28A4                                          l6349 2858  
                                        l5901 3F2C                                          l6197 1ECE  
                                        l6621 204A                                          l6613 1FEC  
                                        l6605 1F92                                          l6295 37B2  
                                        l6287 3794                                          l6279 3762  
                                        l6527 193E                                          l6519 1902  
                                        l6471 16E4                                          l6463 1696  
                                        l6455 1660                                          l6447 1614  
                                        l6439 15E0                                          l6551 2616  
                                        l6543 25EE                                          l6535 2572  
                                        l6375 3958                                          l6391 3402  
                                        l6383 33B4                                          l4935 14E2  
                                        l4927 14C8                                          l4919 1486  
                                        l4871 1320                                          l4863 12B6  
                                        l4855 1296                                          l4839 121A  
                                        l4791 114E                                          l4775 10F0  
                                        l4783 111A                                          l4767 10CA  
                                        l4759 10A0                                          l6711 214A  
                                        l6359 28AC                                          l5903 401E  
                                        l6199 1EFE                                          l6631 208E  
                                        l6623 205C                                          l6615 2008  
                                        l6607 1F9E                                          l6801 31FC  
                                        l6297 37BA                                          l6289 3796  
                                        l6529 1944                                          l6481 176E  
                                        l6473 16F4                                          l6465 16A6  
                                        l6457 166C                                          l6449 161E  
                                        l6561 269E                                          l6553 2648  
                                        l6537 2584                                          l6377 398A  
                                        l6369 3928                                          l6385 33D2  
                                        l6393 3412                                          l4937 14E8  
                                        l4929 14CC                                          l4881 1378  
                                        l4873 1322                                          l4865 12C0  
                                        l4857 12A2                                          l4849 126A  
                                        l4793 1152                                          l4785 112A  
                                        l4777 1100                                          l4769 10D0  
                                        l6721 2194                                          l6713 2158  
                                        l5921 2908                                          l5913 28D0  
                                        l5905 402A                                          l6641 20B6  
                                        l6625 206E                                          l6617 2020  
                                        l6609 1FBC                                          l6811 3268  
                                        l6803 322A                                          l6491 17E8  
                                        l6483 17A4                                          l6475 1714  
                                        l6467 16B6                                          l6459 1678  
                                        l6571 26F4                                          l6563 26AC  
                                        l6555 264A                                          l6547 2602  
                                        l6539 2592                                          l6379 39B8  
                                        l6395 342E                                          l6387 33EE  
                                        l4939 14F6                                          l4891 13A6  
                                        l4875 1332                                          l4859 12A6  
                                        l4867 12C6                                          l4795 1156  
                                        l4787 113C                                          l4779 1110  
                                        l6731 21E4                                          l6723 21A0  
                                        l6715 216E                                          l5931 2964  
                                        l5923 2916                                          l5915 28D6  
                                        l5907 402E                                          l6643 20CC  
                                        l6627 2076                                          l6619 202C  
                                        l6581 3E72                                          l6821 3E38  
                                        l6813 32B8                                          l6805 323A  
                                        l6493 17FA                                          l6485 17B2  
                                        l6477 1724                                          l6469 16C6  
                                        l6573 2704                                          l6565 26CA  
                                        l6557 2656                                          l6549 260A  
                                        l6397 344A                                          l6389 33F6  
                                        l4893 13B4                                          l4885 138C  
                                        l4869 12EC                                          l4877 1342  
                                        l4797 115A                                          l4789 114A  
                                        l6741 22B2                                          l6733 21FA  
                                        l6725 21BA                                          l6717 2172  
                                        l6661 2A5A                                          l5941 29CE  
                                        l5933 296C                                          l5925 2936  
                                        l5917 28E4                                          l5861 3B4A  
                                        l5909 404A                                          l6629 2088  
                                        l6591 3EAA                                          l6583 3E86  
                                        l6831 3E50                                          l6823 3E3C  
                                        l6815 32BE                                          l6807 3248  
                                        l6495 1808                                          l6487 17D0  
                                        l6479 1744                                          l6575 2712  
                                        l6567 26CC                                          l6559 2692  
                                        l6399 3452                                          l4895 13BC  
                                        l4887 1396                                          l4879 1368  
                                        l4799 115E                                          l6735 21FE  
                                        l6727 21D0                                          l6719 218C  
                                        l6751 22CA                                          l6663 2A6C  
                                        l5951 2A18                                          l5943 29EE  
                                        l5935 2980                                          l5927 293A  
                                        l5919 2904                                          l5871 3B8A  
                                        l5863 3B4A                                          l6647 20DC  
                                        l6639 20A0                                          l6655 20FA  
                                        l6593 3EB6                                          l6585 3E8A  
                                        l6833 3E58                                          l6825 3E44  
                                        l6809 325A                                          l6497 180C  
                                        l6489 17DA                                          l6577 2714  
                                        l6569 26D0                                          l4897 13C0  
                                        l4889 13A4                                          l6761 235E  
                                        l6745 22BE                                          l6737 2214  
                                        l6729 21D8                                          l6753 2314  
                                        l6665 2A88                                          l6673 2ABC  
                                        l5953 2A38                                          l5945 29F0  
                                        l5937 298E                                          l5929 2946  
                                        l5961 2BE2                                          l5873 3B9A  
                                        l5865 3B6A                                          l5881 39C2  
                                        l6649 20EE                                          l6841 2E7E  
                                        l6587 3EA4                                          l6835 3E5C  
                                        l6827 3E48                                          l6819 3E28  
                                        l6499 181A                                          l6771 2D4E  
                                        l4899 13D0                                          l6755 2332  
                                        l6739 22A6                                          l6691 2B6E  
                                        l6683 2B36                                          l6675 2AFA  
                                        l6667 2A94                                          l6595 4512  
                                        l5947 2A02                                          l5939 29A0  
                                        l5971 2C52                                          l5963 2C02  
                                        l5875 3B9E                                          l5867 3B76  
                                        l5891 3A46                                          l5883 39D6  
                                        l6851 2F08                                          l6843 2E82  
                                        l6589 3EA8                                          l6837 3E64  
                                        l6829 3E4C                                          l6781 2E08  
                                        l6773 2D5A                                          l6757 233A  
                                        l6685 2B48                                          l6677 2B0E  
                                        l6669 2AB0                                          l5949 2A08  
                                        l5981 2CCA                                          l5973 2C5A  
                                        l5965 2C06                                          l5957 2BCE  
                                        l5869 3B88                                          l5877 3BA0  
                                        l5885 39E8                                          l6597 1F16  
                                        l6861 2F6E                                          l6853 2F0C  
                                        l6845 2E98                                          l6839 3E68  
                                        l6791 2E60                                          l6783 2E0C  
                                        l6775 2DD8                                          l6767 2D34  
                                        l6759 2356                                          l6679 2B22  
                                        l5983 2CDC                                          l5975 2C6E  
                                        l5967 2C14                                          l5959 2BD2  
                                        l5879 4532                                          l5887 39F2  
                                        l5895 3F06                                          l6599 1F1A  
                                        l6871 2F94                                          l6863 2F76  
                                        l6855 2F1C                                          l6847 2EF2  
                                        l6793 2E68                                          l6785 2E1C  
                                        l6777 2DEC                                          l6769 2D4E  
                                        l6689 2B5C                                          l6697 2B82  
                                        l5977 2C7C                                          l5985 2CE2  
                                        l5969 2C34                                          l5889 3A10  
                                        l5897 3F14                                          l5993 32C2  
                                        l6873 2F98                                          l6857 2F20  
                                        l6865 2F8A                                          l6849 2EF6  
                                        l6881 4446                                          l6795 2E74  
                                        l6787 2E38                                          l6779 2DF4  
                                        l5987 2CF2                                          l5979 2CAA  
                                        l5899 3F26                                          l5995 32CE  
                                        l6875 2F9C                                          l6867 2F8C  
                                        l6859 2F24                                          l6883 4454  
                                        l6797 31BC                                          l6789 2E44  
                                        l5989 2D12                                          l5997 32EE  
                                        l6869 2F90                                          l6877 4440  
                                        l6799 31EC                                          l5999 32F6  
                                        l6879 4444                                          STR_1 1032  
                                        STR_2 1001                                          STR_3 1025  
                                        STR_4 1001                                          STR_5 1017  
                                        STR_6 103D                                          _LATA 003FBA  
                                        _LATB 003FBB                                          _LATC 003FBC  
                                        _LATD 003FBD                                          _LATE 003FBE  
                                        u3300 1086                                          u3301 1082  
                                        u3310 10C8                                          u3311 10C4  
                                        u3400 11FA                                          u3320 10DE  
                                        u5000 3668                                          u3401 11F6  
                                        u3321 10DA                                          u5001 3664  
                                        u3410 1218                                          u3330 10F0  
                                        u5010 36C0                                          _T2PR 003FAB  
                                        u3411 1214                                          u3331 10EC  
                                        u5011 36BC                                          u3500 1368  
                                        u3420 1238                                          u3340 1100  
                                        u5020 36CE                                          u5100 1A2A  
                                        u4140 3A72                                          u3501 1364  
                                        u3421 1234                                          u3341 10FC  
                                        u5021 36CA                                          u5101 1A26  
                                        u4141 3A6E                                          u3510 1378  
                                        u3430 1246                                          u3350 113C  
                                        u5030 3FF8                                          u5110 1B58  
                                        u4150 3A8A                                          u3511 1374  
                                        u3431 1242                                          u3351 1138  
                                        u5031 3FF4                                          u5111 1B54  
                                        u4151 3A86                                          u3600 144C  
                                        u3520 13A4                                          u3440 1256  
                                        u3360 114A                                          u3280 1064  
                                        u6000 2AB0                                          u5120 1B76  
                                        u5040 198C                                          u5200 2394  
                                        u4160 3A9E                                          u3601 1448  
                                        u3521 13A0                                          u3441 1252  
                                        u3361 1146                                          u3281 1060  
                                        u6001 2AAC                                          u5121 1B72  
                                        u5041 1986                                          u5201 2390  
                                        u4161 3A9A                                          u3610 1486  
                                        u3530 13B4                                          u3450 1288  
                                        u3370 11B8                                          u3290 1076  
                                        u6010 2B48                                          u5130 1B90  
                                        u5050 198E                                          u5210 24E4  
                                        u4170 3AB4                                          _T4PR 003F9F  
                                        u1675 3D78                                          u3611 1482  
                                        u3531 13B0                                          u3451 1284  
                                        u3371 11B4                                          u3291 1072  
                                        u6011 2B44                                          u5131 1B8C  
                                        u5211 24E0                                          u4171 3AB0  
                                        u1676 3D7A                                          u3620 1498  
                                        u3540 13D0                                          u3460 1296  
                                        u3380 11D0                                          u6100 2356  
                                        u6020 2B6E                                          u5140 1BAA  
                                        u5060 19A4                                          u5220 2502  
                                        u5300 1E7C                                          u4180 3AD6  
                                        u3621 1494                                          u3541 13CC  
                                        u3461 1292                                          u3381 11CA  
                                        u6101 2352                                          u6021 2B6A  
                                        u5141 1BA6                                          u5061 19A0  
                                        u5221 24FE                                          u5301 1E78  
                                        u4181 3AD2                                          u6110 2DEC  
                                        u3630 14A8                                          u3550 13E0  
                                        u3470 12B4                                          u3390 11D2  
                                        u6030 216E                                          u5150 1BB8  
                                        u5070 19D2                                          u5230 251C  
                                        u6111 2DE8                                          u3631 14A4  
                                        u3551 13DC                                          u3471 12B0  
                                        u6031 216A                                          u5151 1BB4  
                                        u5071 19CE                                          u5231 2518  
                                        u5400 3092                                          u6120 2E08  
                                        u3640 14C8                                          u3560 13F2  
                                        u3480 12EC                                          u6040 218C  
                                        u5160 1BCA                                          u5080 19EE  
                                        u5240 2536                                          u6200 2EE2  
                                        u5401 308E                                          u6121 2E04  
                                        u3641 14C4                                          u3561 13EE  
                                        u3481 12E8                                          u6041 2188  
                                        u5161 1BC6                                          u5081 19EA  
                                        u5241 2532                                          u6201 2EDE  
                                        u5410 3712                                          u6130 2E38  
                                        u3650 14DA                                          u3570 1408  
                                        u3490 1332                                          u6050 21BA  
                                        u5170 1BD8                                          u5090 1A1C  
                                        u5250 2544                                          u6210 2F08  
                                        u5411 370E                                          u5315 41CC  
                                        u6131 2E34                                          u3651 14D6  
                                        u3571 1404                                          u3491 132E  
                                        u6051 21B6                                          u5171 1BD4  
                                        u5091 1A18                                          u5251 2540  
                                        u6211 2F04                                          u5420 372C  
                                        u3900 316A                                          u6140 2E60  
                                        u3660 14F6                                          u3580 141E  
                                        u6060 21D0                                          u5500 2858  
                                        u4700 3B5A                                          u5180 1BF0  
                                        u5260 1C6E                                          u6220 2F1C  
                                        _PMD0 0039C0                                          u5421 3728  
                                        u3901 3166                                          u5325 4196  
                                        u6141 2E5C                                          u3661 14F2  
                                        u3581 141A                                          u6061 21CC  
                                        u5501 2854                                          u4701 3B56  
                                        u5181 1BEC                                          u5261 1C6A  
                                        u6221 2F18                                          _PMD1 0039C1  
                                        u6150 31EC                                          u5430 3752  
                                        u3910 318A                                          u5350 2FBA  
                                        u3590 1432                                          u6070 21FA  
                                        u5510 287C                                          u4710 3B6A  
                                        u5190 2378                                          u5270 1CC4  
                                        u6230 2F6E                                          _PMD2 0039C2  
                                        u6151 31E8                                          u5431 374E  
                                        u3911 3186                                          u5351 2FB6  
                                        u3591 142E                                          u6071 21F6  
                                        u5335 4160                                          u5511 2878  
                                        u4711 3B66                                          u5191 2374  
                                        u5271 1CC0                                          u6231 2F6A  
                                        _PMD3 0039C3                                          u6160 322A  
                                        u5440 3770                                          u5600 1538  
                                        u3920 319A                                          u5360 2FDC  
                                        u6080 2214                                          u5520 28A4  
                                        u4800 2916                                          u4720 3B9A  
                                        u5280 1CF2                                          _PMD4 0039C4  
                                        u6161 3226                                          u5441 376C  
                                        u5601 1534                                          u3921 3196  
                                        u5361 2FD8                                          u6081 2210  
                                        u5345 412A                                          u5521 28A0  
                                        u4801 2912                                          u4721 3B96  
                                        u5281 1CEE                                          _PMD5 0039C5  
                                        u6170 3248                                          u5450 378C  
                                        u5610 1548                                          u5370 3016  
                                        u5530 3948                                          u6090 2332  
                                        u4730 39D6                                          u5290 1DB6  
                                        _PMD6 0039C6                                          u6171 3244  
                                        u5451 3788                                          u5611 1544  
                                        u5371 3012                                          u5531 3944  
                                        u6091 232E                                          u4811 2940  
                                        u4731 39D2                                          u5291 1DB2  
                                        _PMD7 0039C7                                          u6180 3268  
                                        u5460 37B2                                          u5700 181A  
                                        u5620 1588                                          u3860 30CC  
                                        u5380 3038                                          u5540 3958  
                                        u4820 2964                                          u4900 2CAA  
                                        u4740 39E8                                          u6181 3264  
                                        u5461 37AE                                          u5701 1816  
                                        u5621 1584                                          u3861 30C8  
                                        u5381 3034                                          u5541 3954  
                                        u4821 2960                                          u4901 2CA6  
                                        u4741 39E4                                          u6190 32B8  
                                        u5710 1848                                          u5630 159A  
                                        u3870 3100                                          u5390 3060  
                                        u5550 33D2                                          u4830 298E  
                                        u4910 2CF2                                          u4750 3A10  
                                        u5470 3B3E                                          u6191 32B4  
                                        u5711 1844                                          u5631 1596  
                                        u5391 305C                                          u5551 33CE  
                                        u4831 298A                                          u4911 2CEE  
                                        u4751 3A0C                                          u5471 3B3A  
                                        u5720 185E                                          u5640 15AA  
                                        u3880 312E                                          u5800 25EE  
                                        u5560 33EE                                          u5480 4078  
                                        u4840 29CE                                          u4760 3A46  
                                        u5721 185A                                          u5641 15A6  
                                        u3881 312A                                          u5801 25EA  
                                        u5561 33EA                                          u5481 4074  
                                        u4841 29CA                                          u4761 3A42  
                                        u4921 32C8                                          u5730 1872  
                                        u5650 15E0                                          u3890 3142  
                                        u5810 2644                                          u5570 342E  
                                        u5490 2830                                          u4850 2A18  
                                        u4770 3F4C                                          u4930 32EE  
                                        u5731 186E                                          u5651 15DC  
                                        u3891 313E                                          u3875 30F6  
                                        u5811 2640                                          u5571 342A  
                                        u5491 282C                                          u4851 2A14  
                                        u4771 3F48                                          u4931 32EA  
                                        u5740 188C                                          u5660 15F0  
                                        u5820 268E                                          u5580 344A  
                                        u4860 2BE2                                          u4780 404A  
                                        u4940 3318                                          u5900 1F92  
                                        u5741 1888                                          u5661 15EC  
                                        u5821 268A                                          u5581 3446  
                                        u4861 2BDE                                          u4781 4046  
                                        u4941 3314                                          u5901 1F8E  
                                        u5750 18D4                                          u5670 178E  
                                        u5590 1526                                          u5830 26AC  
                                        u4790 28E4                                          u4870 2C14  
                                        u4950 3358                                          u5910 1FEC  
                                        u5751 18D0                                          u5591 1522  
                                        u5831 26A8                                          u4791 28E0  
                                        u4871 2C10                                          u4951 3354  
                                        u5911 1FE8                                          u5760 1902  
                                        u5680 17E8                                          u5840 26BC  
                                        u4880 2C52                                          u4960 34BA  
                                        u5920 2008                                          u5761 18FE  
                                        u5681 17E4                                          u5841 26B8  
                                        u4881 2C4E                                          u4961 34B6  
                                        u5921 2004                                          u5770 193C  
                                        u5690 1808                                          u5850 26CA  
                                        u4890 2C7C                                          u4970 34E4  
                                        u5930 2020                                          u5771 1938  
                                        u5691 1804                                          u5675 1784  
                                        u5851 26C6                                          u4891 2C78  
                                        u4971 34E0                                          u5931 201C  
                                        u5860 2704                                          u5780 2584  
                                        u4980 3512                                          u5940 206E  
                                        u5861 2700                                          u5781 2580  
                                        u4981 350E                                          u5941 206A  
                                        u5870 2712                                          u5790 2592  
                                        u4990 3644                                          u5950 20A0  
                                        u5871 270E                                          u5791 258E  
                                        u4991 3640                                          u5951 209C  
                                        u5960 20B6                                          u5880 1F5E  
                                        u5961 20B2                                          u5881 1F5A  
                                        u5970 20CC                                          u5890 1F7A  
                                        u5971 20C8                                          u5891 1F76  
                                        u5980 20EE                                          u5981 20EA  
                                        u5990 2A88                                          u5991 2A84  
                                        _TMR2 003FAA                                          _TMR4 003F9E  
                                        _WPUA 003A41                                          _WPUB 003A51  
                                        _WPUC 003A61                                          _WPUD 003A71  
                                        _WPUE 003A81                           ?_UART1_Transmit_ISR 0001  
                                        abs@a 0070                                          _dbuf 0100  
                                        _main 4440                                          _dtoa 195A  
                                        _loop 2E7E                                          _prec 00D6  
                                        _nout 00D2                                          pad@i 0076  
                                        pad@p 0074                                          fsr1h 003FE2  
                                        fsr2h 003FDA                                          indf2 003FDF  
                                        fsr1l 003FE1                                          pad@w 0078  
                                        fsr2l 003FD9                                          _utoa 2368  
                                        prodh 003FF4                                          prodl 003FF3  
                                        start 00AE                               _timer5ReloadVal 003A  
                             _TMR3_Initialize 4096                               _PWM5_Initialize 44E2  
                           ??_CLC3_Initialize 0020                 ??_UART1_SetTxInterruptHandler 0022  
                  ??_TMR4_SetInterruptHandler 0022                             _UART1_rx_vect_isr 3CA4  
                                ___param_bank 000000                    __end_of_PWM5_LoadDutyValue 4170  
                          ?_UART1_rx_vect_isr 0001                                         ??_abs 0072  
                                       ??_pad 0022                          ??_UART1_Transmit_ISR 0017  
               __end_of_OSCILLATOR_Initialize 4512                                 ___fltol@sign1 0020  
                             __end_of___aldiv 30B4                               __end_of___aodiv 2A5A  
                                       _ADACT 003EFE                                         _ADCAP 003EF5  
                     __end_of_CCP3_Initialize 42C8                               __end_of___fladd 150A  
                                       ?_main 0001                                         ?_dtoa 007A  
                                       _ADCLK 003EFF                               __end_of___aomod 2D34  
                                       _ADCNT 003EEB                                         _ADPCH 003EF1  
                                       _ADREF 003EFD                               __end_of___awdiv 37C4  
                                       ?_loop 0001                                         _ADRPT 003EEC  
                      ??_CCP4_DefaultCallBack 0009                               __end_of___flmul 195A  
                    TMR5_ReadTimer@readValLow 0014                               __end_of___fltol 31BC  
                                       ?_utoa 007A                               __end_of___lodiv 33B4  
                             ___awdiv@divisor 0062                                         _U1P1H 003DED  
                                       _U1P2H 003DEF                                         _U1P3H 003DF1  
                                       _U1P1L 003DEC                                         _T3CLK 003FA9  
                                       _U1P2L 003DEE                                         _T2CON 003FAC  
                                       _U1P3L 003DF0                                         _T3CON 003FA6  
                                       _T5CLK 003F9D                                         _T4CON 003FA0  
                             __end_of___lomod 356C                                         _T2HLT 003FAD  
                                       _T5CON 003F9A                                         _T4HLT 003FA1  
                                       _T2TMR 003FAA                                         _U1UIR 003DF8  
                                       i1l330 3CE0                                         _T2RST 003FAF  
                                       _U1RXB 003DE8                                         i1l324 3C90  
                                       i1l333 3FD6                                         i1l350 45A2  
                                       i1l343 3882                                         i1l336 3FDA  
                                       i1l353 45A0                                         _U1TXB 003DEA  
                                       i1l347 4378                                         i1l356 4598  
                                       _T4TMR 003F9E                                         _T4RST 003FA3  
                                       i2l409 45A8                                         i1l692 42F4  
                                       i2l534 43A4                                         i2l438 423A  
                                       i2l446 3DCE                                         i2l552 3F8A  
                                       i1l688 3D30                                         i2l529 443E  
                                       i2l537 452E                                         i1l698 45A4  
                                       i2l476 426A                                         i2l558 447C  
                                       i2l487 3E1A                           ??_UART1_rx_vect_isr 001A  
                                       i2l863 3C52                                         i2l856 3F04  
                                       i2l868 43F6                               ___awdiv@counter 0064  
                                       _OSCEN 0039DD                                  vfpfcnvrt@fmt 00A0  
                                vfpfcnvrt@llu 0128                                         _TMR3H 003FA5  
                                       _TMR5H 003F99                                         _TMR3L 003FA4  
                                       _TMR5L 003F98                                         _TRISA 003FC2  
                                       _TRISB 003FC3                                         _TRISC 003FC4  
                                       _TRISD 003FC5                                         _TRISE 003FC6  
                                 _Default_ISR 45A8                               _TMR4_Initialize 42F6  
                             _PWM6_Initialize 44CA                             _UART1_tx_vect_isr 3C54  
                            __end_of_TMR4_ISR 3D44                       setSteering@steeringMode 006A  
                                       _delay 00E9                                         _flags 0023  
                                       _fputc 39C2                                         _fputs 3F06  
                          ?_UART1_tx_vect_isr 0001                                         pad@fp 0070  
                                       _width 00D4                                         _putch 4530  
                                       dtoa@d 007C                                         dtoa@i 009C  
                                       dtoa@n 0094                                         dtoa@p 008E  
                                       dtoa@s 0092                                         dtoa@w 0090  
                            ?_SMT1_Initialize 0001                                         pclath 003FFA  
                                       pclatu 003FFB                                         tablat 003FF5  
                                 _BatteryVolt 00EF                                         utoa@d 007C  
                                       utoa@i 0098                                         utoa@n 0090  
                                       utoa@p 008C                                         utoa@w 008E  
                                       status 003FD8           __end_of_UART1_SetRxInterruptHandler 454E  
                 _UART1_SetRxInterruptHandler 4544                       __end_of_CCP4_Initialize 429A  
                            ___lodiv@dividend 0060           fp__UART1_DefaultFramingErrorHandler 0000  
    __end_of_UART1_DefaultFramingErrorHandler 45A4            ??_UART1_DefaultFramingErrorHandler 001A  
           ?_UART1_DefaultFramingErrorHandler 0001              _UART1_DefaultFramingErrorHandler 45A2  
                         ??_UART1_tx_vect_isr 0017                     __end_of_UART1_rx_vect_isr 3CF4  
                             _TMR5_Initialize 3E72                               _PWM7_Initialize 44B2  
                             __initialization 40CE                         TMR5_ReadTimer@readVal 0011  
                            ?_CCP3_CaptureISR 0001                                  __end_of_main 4460  
                                __end_of_dtoa 1C40                                  __end_of_loop 2FA6  
                                __end_of_utoa 256E                   ??_UART1_DefaultErrorHandler 001A  
                     __end_of_TMR2_Initialize 449A                                  ?_UART1_Write 0001  
                                      ??_main 0023                                        ??_dtoa 0084  
                                      ??_loop 0023                                        ??_utoa 0084  
                               __activetblptr 000003                                  _calcMotorPow 2D34  
                   __end_of_UART1_tx_vect_isr 3CA4                              ___lodiv@quotient 0070  
                             _PWM8_Initialize 449A                              _UART1_Initialize 3884  
                                _calcSteering 2A5A                              ?_CCP4_CaptureISR 0001  
                                      _ADACCH 003EE9                                        _ADACCL 003EE8  
                                      _ADACCU 003EEA                                        _ADACQH 003EF4  
                                      _ADACQL 003EF3                                        _ADCON0 003EF8  
                                      _ADCON1 003EF9                                        _ADCON2 003EFA  
                                      _ADCON3 003EFB                                        _ADERRH 003EE3  
                                      _ADERRL 003EE2                                        ?_fputc 0060  
                                      _ADLTHH 003EDF                                        _ADLTHL 003EDE  
                                      ?_fputs 0069                                        _ADRESH 003EF0  
                                      _ADRESL 003EEF                                        _ADPREH 003EF7  
                                      _ADPREL 003EF6                                        _CCPR3H 003F75  
                                      _CCPR4H 003F71                                        _CCPR3L 003F74  
                                      _CCPR4L 003F70                                        _ADSTAT 003EFC  
                                      _ADUTHH 003EE1                              ___awdiv@dividend 0060  
                                      _ADUTHL 003EE0                            _PWM8_LoadDutyValue 4170  
                                      _ANSELA 003A40                                        ?_putch 0001  
                                      _ANSELB 003A50                                        _ANSELC 003A60  
                                      _ANSELD 003A70                                        _ANSELE 003A80  
                                      _RB1I2C 003A5A                                        _RB2I2C 003A5B  
                                      _RD0I2C 003A7A                                        _U1CON0 003DF2  
                                      _U1CON1 003DF3                                        _U1CON2 003DF4  
                                      _RD1I2C 003A7B                                        _RC3I2C 003A6A  
                                      _T3GATE 003FA8                                        _RC4I2C 003A6B  
                                      _U1BRGH 003DF6                                        _U1FIFO 003DF7  
                                      _T3GCON 003FA7                                        _U1BRGL 003DF5  
                                      _T5GATE 003F9C                                        _T5GCON 003F9B  
                                      _RA0PPS 003A00                                        _RA1PPS 003A01  
                                      _RA3PPS 003A03                                        _RA4PPS 003A04  
                                      _RB3PPS 003A0B                                        _T5GPPS 003AC9  
                                      i1l1228 459E                                        _ODCONA 003A42  
                                      _ODCONB 003A52                                        _ODCONC 003A62  
                                      _ODCOND 003A72                                        _ODCONE 003A82  
                     __end_of_PWM5_Initialize 44FA                       __end_of_TMR3_Initialize 40CE  
                                      i1l4621 4362                                        i1l5261 4594  
                                      i1l4623 4372                                        i1l4625 4376  
                                      i1l4617 434E                                        i1l4619 4360  
                                      i1l5701 3D06                                        i1l5703 3D0A  
                                      i1l5633 42C8                                        i1l5705 3D24  
                                      i1l5635 42DC                                        i1l5707 3D28  
                                      i1l5571 3FCC                                        i1l5563 3F98  
                                      i1l5581 37F4                                        i1l5573 3FD0  
                                      i1l5565 3FA8                                        i1l5495 459A  
                                      i1l5591 3860                                        i1l5583 380C  
                                      i1l5575 37C4                                        i1l5567 3FBA  
                                      i1l5593 387E                                        i1l5585 381C  
                                      i1l5577 37D4                                        i1l5681 3CB6  
                                      i1l5569 3FBC                                        i1l5587 382C  
                                      i1l5579 37E4                                        i1l5683 3CC8  
                                      i1l5589 3844                                        i1l5677 3C66  
                                      i1l5679 3C78                                        i2l5263 441C  
                                      i2l5271 4522                                        i2l5265 442A  
                                      i2l4641 4394                                        i2l4633 437A  
                                      i2l5601 4234                                        _INLVLA 003A44  
                                      _INLVLB 003A54                                        i2l5267 4436  
                                      i2l4635 4388                                        i2l4643 439A  
                                      i2l5611 4460                                        i2l5603 423C  
                                      _INLVLC 003A64                                        _INLVLD 003A74  
                                      i2l4645 439E                                        i2l4637 438A  
                                      i2l5613 446C                                        i2l5605 424A  
                                      _INLVLE 003A84                                        i2l5711 3EC0  
                                      i2l4639 438E                                        i2l5615 4474  
                                      i2l5607 4256                                        i2l5721 3C04  
                                      i2l5713 3ED0                                        i2l5617 4478  
                                      i2l5609 4264                                        i2l5731 43D4  
                                      i2l5723 3C1E                                        i2l5715 3EE0  
                                      i2l5725 3C2E                                        i2l5717 3EF2  
                                      i2l5709 3EBC                                        i2l5727 3C40  
                                      i2l5719 3C00                                        i2l5729 43D0  
                                      i2l5691 3DF8                                        i2l5595 420C  
                                      i2l5693 3F5C                                        i2l5597 421A  
                                      i2l5685 3D9C                                        i2l5695 3F60  
                                      i2l5599 4226                                        i2l5687 3DAC  
                                      i2l5697 3F72                                        i2l5689 3DE8  
                                ?_setSteering 0068                                        _OSCFRQ 0039DF  
                            __end_of_actSpeed 39C2                                        _SMT1PR 003F1B  
                       _UART1_SetErrorHandler 4562                              __end_of___xxtofl 2726  
                         ?_PWM8_LoadDutyValue 0020                              __end_of_getCurve 214A  
                    __end_of_CCP3_SetCallBack 4594                                  _CCPTMRS0bits 003F5E  
                                _CCPTMRS1bits 003F5F                                  vfprintf@cfmt 00AE  
                                      ___flge 31BC                                     ??___aldiv 0020  
                                   ??___aodiv 0020                                     ??___fladd 0097  
                                   ??___aomod 0020                                     ??___awdiv 0020  
                                   ??___flmul 007E                                     ??___fltol 00A3  
                                   ??___lodiv 0020                                     ??___lomod 0020  
                               _CCP3_CallBack 00F7                                  ?_TMR5_Reload 0001  
                     __end_of_PWM6_Initialize 44E2                       __end_of_TMR4_Initialize 4322  
                                      clear_0 40D4                                        clear_1 40E0  
                                      clear_2 40EC                              ___awdiv@quotient 0066  
                                      _motPow 0025                       fp__CCP3_DefaultCallBack 0000  
                                      isa$std 000001                                 _CCP4_CallBack 00F5  
                                      _smtWay 00CA                                        _printf 43A6  
                                      pad@buf 0072                                        dtoa@fp 007A  
                            ?_CCP3_Initialize 0001                                        _strlen 401E  
                        ??_PWM8_LoadDutyValue 0060                              __end_of_setMotor 349A  
                             _ADCC_Initialize 3BA4          __end_of_TMR4_DefaultInterruptHandler 45A6  
                _TMR4_DefaultInterruptHandler 45A4                                        fputc@c 0060  
                              _PMD_Initialize 43F8                                        fputs@c 006D  
                                      fputs@i 006E                                        fputs@s 0069  
                                __mediumconst 0000                         __end_of_TMR5_GATE_ISR 3F98  
                                      tblptrh 003FF7                                        tblptrl 003FF6  
                                      tblptru 003FF8                              __end_of_vfprintf 3B48  
                   ?_ADCC_GetSingleConversion 0020                                        utoa@fp 007A  
    TMR4_SetInterruptHandler@InterruptHandler 0020  TMR5_SetGateInterruptHandler@InterruptHandler 0020  
 UART1_SetTxInterruptHandler@InterruptHandler 0020   UART1_SetRxInterruptHandler@InterruptHandler 0020  
        __end_of_UART1_SetOverrunErrorHandler 4558                  _UART1_SetOverrunErrorHandler 454E  
                   _UART1_DefaultErrorHandler 4594                             getCurve@deltaLeft 0138  
                                  ___flge@ff1 0076                                    ___flge@ff2 007A  
                     __end_of_PWM7_Initialize 44CA                       __end_of_TMR5_Initialize 3EBC  
                                ___xxtofl@arg 0072                                  ___xxtofl@exp 0071  
                           _SYSTEM_Initialize 3E28                                  ___xxtofl@val 0068  
                                  __accesstop 0060                       __end_of__initialization 40FE  
                            ?_CCP4_Initialize 0001                           setSteering@steering 0068  
                          ?_SYSTEM_Initialize 0001                                 ___rparam_used 000001  
                                  ___fltol@f1 009F                               _TMR5_WriteTimer 437A  
                   calcMotorPow@setSpeedDelta 00A9                      __end_of_CCP4_SetCallBack 458A  
                              __pcstackCOMRAM 0001                         __end_of_TMR4_CallBack 42F6  
                         ??_SYSTEM_Initialize 0022                                     ?_TMR4_ISR 0001  
                              ivt0x8_undefint 00AC                                 __end_of_fputc 3A5A  
                               __end_of_fputs 3F4E                               fp__TMR4_10msISR 0000  
                               __end_of_putch 453A                              ?_TMR2_Initialize 0001  
                     __end_of_PWM8_Initialize 44B2                        __end_of_PMD_Initialize 441C  
                       CCP3_CaptureISR@module 0005                CCP3_SetCallBack@customCallBack 0020  
                   _UART1_FramingErrorHandler 00FD               fp__TMR4_DefaultInterruptHandler 0000  
               ?_TMR4_DefaultInterruptHandler 0001                       fp__CCP4_DefaultCallBack 0000  
                                     ??_fputc 0064                     __end_of_SYSTEM_Initialize 3E72  
                                     ??_fputs 0022                               _CLC3_Initialize 4322  
                                     ??_putch 0021                   PWM7_LoadDutyValue@dutyValue 0020  
                                  __pbssBANK0 00B2                                    __pbssBANK1 0100  
               ?_UART1_SetOverrunErrorHandler 0020                        ?_UART1_SetErrorHandler 0020  
                            ?_PWM5_Initialize 0001                              ?_TMR3_Initialize 0001  
                                  __pnvCOMRAM 0038                         _TMR4_InterruptHandler 00F1  
                                     IVTBASEH 003FD6                                       IVTBASEL 003FD5  
                                     IVTBASEU 003FD7                                       ?___flge 0076  
                                  ??_TMR4_ISR 001D                       __end_of_ADCC_Initialize 3C00  
                  __end_of_PWM6_LoadDutyValue 413A          __end_of_TMR5_SetGateInterruptHandler 4576  
                _TMR5_SetGateInterruptHandler 456C                                       _CCP3CAP 003F77  
                                     _CCP4CAP 003F73                                       _CCP3CON 003F76  
                                     _CCP4CON 003F72                                       _ADFLTRH 003EE7  
                                     _ADFLTRL 003EE6                                       _CCP3PPS 003ACF  
                                     _CCP4PPS 003AD0                                       _CLC3CON 003C60  
                                     _CLC3POL 003C61                                       _ADPREVH 003EEE  
                                     _ADPREVL 003EED                              ?_PWM6_Initialize 0001  
                            ?_TMR4_Initialize 0001                                       _ADSTPTH 003EE5  
                                     _ADSTPTL 003EE4                                       ?_printf 0130  
                             ?_PMD_Initialize 0001                             _UART1_Receive_ISR 37C4  
                                  _getReverse 3A5A                                       ?_strlen 0020  
                                     _U1ERRIE 003DFA                                     ?_actSpeed 0020  
                                     _U1ERRIR 003DF9                                 ?_TMR4_10msISR 0001  
                                ?_Default_ISR 0001                            ?_UART1_Receive_ISR 0001  
                                     _U1RXPPS 003AE5                                     ?___xxtofl 0068  
                          _PWM5_LoadDutyValue 413A                                    _distRightM 0029  
                                     _OSCCON1 0039D9                                       _OSCCON3 0039DB  
                           __end_of_calcSpeed 2368                                       _IVTLOCK 003FD4  
                                     _SMT1CLK 003F21                                       _OSCTUNE 0039DE  
                                     _SMT1CPR 003F15                                       _SMT1CPW 003F18  
                                     _PWM5DCH 003F6D                                       _PWM5DCL 003F6C  
                                     _PWM6DCH 003F69                                       _PWM6DCL 003F68  
                                     _PWM7DCH 003F65                                       _PWM7DCL 003F64  
                                     _SMT1SIG 003F22                                       _PWM8DCH 003F61  
                                     _PWM5CON 003F6E                                       _PWM8DCL 003F60  
                                     _SMT1PRH 003F1C                                       _PWM6CON 003F6A  
                                     _SMT1PRL 003F1B                                       _PWM7CON 003F66  
                                     _SMT1PRU 003F1D                                     ?_getCurve 0001  
                                     _SMT1TMR 003F12                                       _SMT1WIN 003F23  
                                     _PWM8CON 003F62                                       _SLRCONA 003A43  
                                     _SLRCONB 003A53                                       _SLRCONC 003A63  
                                     _SLRCOND 003A73                                       _SLRCONE 003A83  
                         ??_UART1_Receive_ISR 001A                              ___lomod@dividend 0060  
                     __end_of_TMR5_WriteTimer 43A6                           ?_PWM5_LoadDutyValue 0020  
                            ?_PWM7_Initialize 0001                              ?_TMR5_Initialize 0001  
                   INTERRUPT_Initialize@state 0020                                     _CLCIN0PPS 003AD9  
                                   _CLCIN2PPS 003ADB                                     _CLCIN3PPS 003ADC  
                                     __Hparam 0000                                     ?_setMotor 0062  
                                     __Lparam 0000                      __end_of_UART1_Initialize 3928  
                                     ___aldiv 2FA6                                       ___aodiv 28D0  
                                     ___fladd 1048                                       ___aomod 2BCE  
                                     ___awdiv 36FE                                       ___flmul 150A  
                                     ___fltol 30B4                                       ___lodiv 32C2  
                                     ___lomod 349A                     __end_of_UART1_Receive_ISR 3884  
                                   ?_vfprintf 00A8                          ??_PWM5_LoadDutyValue 0060  
                                __psmallconst 1000                                       __pcinit 40CE  
                   _TMR5_GateInterruptHandler 0038                              ?_PWM8_Initialize 0001  
                                     __ramtop 1000                 ?_TMR5_SetGateInterruptHandler 0020  
                                     __ptext0 4440                                       __ptext1 2E7E  
                                     __ptext2 3A5A                                       __ptext3 1F16  
                                     __ptext4 43A6                                       __ptext5 3AE0  
                                     __ptext6 1C40                                       __ptext7 2368  
                                     __ptext8 349A                                       __ptext9 32C2  
                              ??_TMR4_10msISR 001D                                    ??_actSpeed 0022  
                     __end_of_CLC3_Initialize 434E                         _OSCILLATOR_Initialize 44FA  
                                   _T2CONbits 003FAC                                    ??___xxtofl 006C  
                                   _T3CONbits 003FA6                              ___aldiv@dividend 0060  
                                   _T4CONbits 003FA0                      ??_PIN_MANAGER_Initialize 0020  
                                   _T2HLTbits 003FAD                                     _T5CONbits 003F9A  
                   ?_TMR4_SetInterruptHandler 0020                                     _IPR10bits 00398A  
                                     _smtDuty 00CE                                     _T4HLTbits 003FA1  
                                  ??_getCurve 0136                                     _PIE10bits 00399A  
                        end_of_initialization 40FE                                     _T2RSTbits 003FAF  
              ??_TMR4_DefaultInterruptHandler 001D                                     _PIR10bits 0039AA  
                                   _T4RSTbits 003FA3                                       fputc@fp 0062  
                           ??_SMT1_PR_ACQ_ISR 0017           __end_of_UART1_SetTxInterruptHandler 4544  
                 _UART1_SetTxInterruptHandler 453A                                       fputs@fp 006B  
              ??_UART1_SetOverrunErrorHandler 0022                                    ??_setMotor 0064  
                           __end_of_vfpfcnvrt 1F16                             ?_CCP3_SetCallBack 0020  
                            ___aldiv@quotient 006A                                       postdec2 003FDD  
                           ??_SMT1_PW_ACQ_ISR 0017                                       postinc0 003FEE  
                                     postinc1 003FE6                                       postinc2 003FDE  
                            ?_ADCC_Initialize 0001                            ??_CCP3_SetCallBack 0022  
                                  ??_vfprintf 0023              __end_of_ADCC_GetSingleConversion 4096  
                           UART1_Write@txData 0020                           _UART1_RxDataHandler 434E  
                                     strlen@a 0060                                       strlen@s 0020  
                                 ?_getReverse 0001                                     _PORTDbits 003FCD  
                                 ___fladd@grs 009E                            getCurve@deltaRight 013A  
                               ___xxtofl@sign 0070                          ?_UART1_RxDataHandler 0001  
                            ?_TMR5_WriteTimer 000D                          setSteering@steeringB 006F  
                        setSteering@steeringF 006D                       TMR5_WriteTimer@timerVal 000D  
                                 ___flmul@grs 0084             CCP4_DefaultCallBack@capturedValue 0007  
                           ?_CCP4_SetCallBack 0020                  __end_of_INTERRUPT_Initialize 3D90  
                              __end_of___flge 32C2                            ??_CCP4_SetCallBack 0022  
                                 _CLC3CONbits 003C60                                   vfpfcnvrt@ap 00A2  
                                 vfpfcnvrt@fp 009E                                   vfpfcnvrt@ll 0120  
                      ?_OSCILLATOR_Initialize 0001                                __end_of_printf 43CE  
                            ?_CLC3_Initialize 0001                                __end_of_strlen 405A  
                              _TMR5_ReadTimer 441C                           start_initialization 40CE  
                             ___lodiv@divisor 0068                               ___lodiv@counter 0078  
              ??_TMR5_SetGateInterruptHandler 0022                                   __end_of_abs 401E  
                                 __end_of_pad 36FE                       ??_UART1_SetErrorHandler 0022  
                       ??_UART1_RxDataHandler 001A                                   putch@txData 0021  
                                  ivt0x8_base 0008                                 _uart1RxBuffer 00BA  
                                 _actMotorPow 00D8                                 _uart1TxBuffer 00C2  
                        __end_of_TMR4_10msISR 45A0                                   vfprintf@fmt 00AA  
                                    ??___flge 007E                              ??_PMD_Initialize 0020  
                                _oldDistRight 00E0                    __end_of_PWM7_LoadDutyValue 41DC  
                           ??_SMT1_Initialize 0020                                      ??_printf 0023  
                                    ??_strlen 0022                        __end_of_TMR5_ReadTimer 4440  
                       CCP4_CaptureISR@module 000B                                     ___fladd@a 0093  
                                   ___fladd@b 008F                           calcMotorPow@addMPow 00AD  
                    _ADCC_GetSingleConversion 405A                   PWM5_LoadDutyValue@dutyValue 0020  
                       TMR4_ISR@CountCallBack 0027                                     ___flmul@a 007A  
                                   ___flmul@b 0076                                   __pbssCOMRAM 0023  
                          _UART1_ErrorHandler 00F9                                 __pcstackBANK0 0060  
                               __pcstackBANK1 0120                              ___aodiv@dividend 0060  
                          _PWM6_LoadDutyValue 4104                      _UART1_RxInterruptHandler 003E  
                           ??_CCP3_CaptureISR 0003                  __end_of_CCP3_DefaultCallBack 423C  
                                   _calcSpeed 214A                           ?_PWM6_LoadDutyValue 0020  
                 PWM8_LoadDutyValue@dutyValue 0020                  fp__UART1_DefaultErrorHandler 0000  
                                _currentSpeed 00DC                  ?_UART1_SetRxInterruptHandler 0020  
                                   __pnvBANK0 00EF                            setMotor@motorPower 0062  
                      _PIN_MANAGER_Initialize 356C                                     _dtoa$3451 008C  
                           ?_UART1_Initialize 0001          __end_of_UART1_SetFramingErrorHandler 4562  
                _UART1_SetFramingErrorHandler 4558                                      ?___aldiv 0060  
             ADCC_GetSingleConversion@channel 0022                                      ?___aodiv 0060  
                                    ?___fladd 008F                                      ?___aomod 0060  
            __end_of_TMR4_SetInterruptHandler 4580                                      ?___awdiv 0060  
                            ___aodiv@quotient 0072             CCP3_DefaultCallBack@capturedValue 0001  
                           ??_CCP4_CaptureISR 0009                                      ?___flmul 0076  
                                    ?___fltol 009F                                      ?___lodiv 0060  
                                    ?___lomod 0060                            ??_UART1_Initialize 0022  
                                   _distLeftM 002B                                     _distFront 00ED  
                            _uart1RxLastError 002E                                 ??_UART1_Write 0020  
                                   _distRight 00E4                          ??_PWM6_LoadDutyValue 0060  
                                   _cycle10ms 00EA                               ?_TMR5_ReadTimer 000D  
                               ?_calcMotorPow 0001                               ___lomod@divisor 0068  
                                 __smallconst 1000                               ___lomod@counter 0020  
                                    _CLC3GLS0 003C66                                      _CLC3GLS1 003C67  
                                    _CLC3GLS2 003C68                                      _CLC3GLS3 003C69  
                                   _driveMode 00EC           fp__UART1_DefaultOverrunErrorHandler 0000  
    __end_of_UART1_DefaultOverrunErrorHandler 45A2            ??_UART1_DefaultOverrunErrorHandler 001A  
           ?_UART1_DefaultOverrunErrorHandler 0001              _UART1_DefaultOverrunErrorHandler 45A0  
                                    _CLC3SEL0 003C62                                      _CLC3SEL1 003C63  
                                    _CLC3SEL2 003C64                                      _CLC3SEL3 003C65  
                             _SMT1_PR_ACQ_ISR 3EBC                                 ?_calcSteering 0001  
                               _TMR5_GATE_ISR 3F50                                     _curveMode 00EB  
                                    _T2CLKCON 003FAE                                   _U1ERRIRbits 003DF9  
                                    _T4CLKCON 003FA2                                    ?_calcSpeed 0001  
                        _INTERRUPT_Initialize 3D44                                 ??_setSteering 006B  
                             ___aldiv@divisor 0064                               _SMT1_PW_ACQ_ISR 3C00  
                             ___aldiv@counter 0068         UART1_SetErrorHandler@interruptHandler 0020  
                                    _IPR1bits 003981                  __end_of_CCP4_DefaultCallBack 426C  
                           ??_CCP3_Initialize 0022                                      _PIE1bits 003991  
                                    _IPR3bits 003983                                      _PIE3bits 003993  
                                    _IPR7bits 003987                                      _IPR8bits 003988  
                                    _PIE7bits 003997                                      _IPR9bits 003989  
                                    _PIE8bits 003998                                      _PIE9bits 003999  
                                    _IVTBASEH 003FD6                                      _IVTBASEL 003FD5  
                                    _IVTBASEU 003FD7                                      i1u315_20 4372  
                                    i1u315_21 436E                                      i1u442_20 3FA8  
                                    i1u442_21 3FA4                                      i1u443_20 3FCC  
                                    i1u443_21 3FC8                 ??_UART1_SetRxInterruptHandler 0022  
                                    i1u444_20 37E4                                      i1u444_21 37E0  
                                    i1u453_20 42DC                                      i1u461_20 3CC8  
                                    i1u460_28 3C7E                                      i1u453_21 42D8  
                                    i1u461_21 3CC4                                      i1u460_29 3C90  
                                    i1u446_20 381C                                      i1u445_28 37FA  
                                    i1u446_21 3818                                      i1u445_29 380C  
                                    i1u454_28 42E2                                      i1u462_28 3CCE  
                                    i1u454_29 42F4                                      i1u462_29 3CE0  
                                    i1u448_20 3860                                      i1u447_28 3832  
                                    i1u448_21 385C                                      i1u447_29 3844  
                                    i1u449_28 3866                                      i1u449_29 387A  
                                    i1u467_20 3D24                                      i1u459_20 3C78  
                                    i1u467_21 3D20                                      i1u459_21 3C74  
                                    i2u316_40 4388                                      i2u316_41 4384  
                                    _PIR1bits 0039A1                                      i2u450_40 421A  
                                    i2u450_41 4216                                      i2u451_40 424A  
                                    i2u451_41 4246                                      _PIR4bits 0039A4  
                                    i2u463_48 3DBA                                      i2u463_49 3DCE  
                                    i2u465_40 3F72                                      i2u464_48 3E06  
                                    i2u465_41 3F6E                                      i2u464_49 3E1A  
                                    i2u466_48 3F78                                      i2u466_49 3F8A  
                                    _PIR6bits 0039A6                                      i2u468_40 3EE0  
                                    i2u468_41 3EDC                                      i2u469_40 3C2E  
                                    i2u469_41 3C2A                                      _PIR7bits 0039A7  
                                    _PIR8bits 0039A8                                      _PIR9bits 0039A9  
                                    _SMT1CON0 003F1E                                      _SMT1CON1 003F1F  
                                    _SMT1STAT 003F20                             _SMT1_Overflow_ISR 43D0  
                                    _TMR4_ISR 3CF4                    __end_of_UART1_Transmit_ISR 3FDC  
                               _TMR4_CallBack 42C8                                     _smtPeriod 0034  
               ?_UART1_SetFramingErrorHandler 0020                                 ??_TMR5_Reload 000F  
                                   _vfpfcnvrt 1C40                            ?_SMT1_Overflow_ISR 0001  
                           _getBatteryVoltage 4512                                  ??_getReverse 0020  
                              ??_calcMotorPow 00A7                                    _ADCON0bits 003EF8  
                                  _ADCON1bits 003EF9                                    _ADCON2bits 003EFA  
                                  _ADCON3bits 003EFB                            ?_getBatteryVoltage 0001  
                           ??_CCP4_Initialize 0022                                ??_calcSteering 0071  
                         ??_SMT1_Overflow_ISR 0017                     TMR5_ReadTimer@readValHigh 0013  
                              ?_TMR5_GATE_ISR 0001                           __end_of_UART1_Write 3BA4  
                                _SMT1CON0bits 003F1E                                  _SMT1CON1bits 003F1F  
                         ??_getBatteryVoltage 0023                                   _INTCON0bits 003FD2  
                       ?_INTERRUPT_Initialize 0001                          fp__UART1_Receive_ISR 0000  
                      _uart1TxBufferRemaining 0040                             ??_TMR2_Initialize 0020  
                                _uart1RxCount 002F                            __end_of_getReverse 3AE0  
                                  _ADSTATbits 003EFC                                      __Hrparam 0000  
                   __end_of_SMT1_Overflow_ISR 43F8                           __end_of_setSteering 28D0  
                                  vfprintf@ap 00AC                                      __Lrparam 0000  
                                  vfprintf@fp 00A8                                   _oldDistLeft 00E2  
                              ?_TMR4_CallBack 0001                                calcSpeed@speed 00AB  
                   __end_of_getBatteryVoltage 4522                       ??_OSCILLATOR_Initialize 0020  
                                _SMT1STATbits 003F20                          _CCP3_DefaultCallBack 420C  
                     __end_of_SMT1_PR_ACQ_ISR 3F06                                    ?_vfpfcnvrt 009E  
                             ___aodiv@divisor 0068                             ??_PWM5_Initialize 0020  
                           ??_TMR3_Initialize 0020                               ___aodiv@counter 0070  
                    _TMR4_SetInterruptHandler 4576                                      _actSpeed 3928  
                                _TMR4_10msISR 459A                                      ___xxtofl 256E  
                         __end_of_TMR5_Reload 4530                                      __pivt0x8 0008  
                     __end_of_SMT1_PW_ACQ_ISR 3C54                                      _getCurve 1F16  
                                    __ptext10 195A                                      __ptext11 3636  
                                    __ptext20 4512                                      __ptext12 401E  
                                    __ptext21 405A                                      __ptext13 3F06  
                                    __ptext30 4170                                      __ptext22 2A5A  
                                    __ptext14 39C2                                      __ptext31 41A6  
                                    __ptext23 2726                                      __ptext15 4530  
                                    __ptext40 3884                                      __ptext32 3928  
                                    __ptext24 4104                                      __ptext16 3B48  
                                    __ptext41 453A                                      __ptext33 2FA6  
                                    __ptext25 413A                                      __ptext17 3FDC  
                                    __ptext50 4096                                      __ptext42 4544  
                                    __ptext34 256E                                      __ptext26 214A  
                                    __ptext18 2BCE                                      __ptext51 447E  
                                    __ptext43 454E                                      __ptext35 30B4  
                                    __ptext27 1048                                      __ptext19 28D0  
                                    __ptext60 3D44                                      __ptext52 41DC  
                                    __ptext44 4558                                      __ptext36 150A  
                                    __ptext28 2D34                                      __ptext61 4322  
                                    __ptext53 449A                                      __ptext45 4562  
                                    __ptext37 36FE                                      __ptext29 33B4  
                                    __ptext70 37C4                                      __ptext62 426C  
                                    __ptext54 44B2                                      __ptext46 3E72  
                                    __ptext38 31BC                                      __ptext71 45A0  
                                    __ptext63 4580                                      __ptext55 44CA  
                                    __ptext47 456C                                      __ptext39 3E28  
                                    __ptext80 3D90                                      __ptext72 45A2  
                                    __ptext64 429A                                      __ptext56 44E2  
                                    __ptext48 42F6                                      __ptext81 420C  
                                    __ptext73 4594                                      __ptext65 458A  
                                    __ptext57 43F8                                      __ptext49 4576  
                                    __ptext90 3C00                                      __ptext82 3DDC  
                                    __ptext74 434E                                      __ptext66 3BA4  
                                    __ptext58 356C                                      __ptext91 43D0  
                                    __ptext83 423C                                      __ptext75 3CF4  
                                    __ptext67 3C54                                      __ptext59 44FA  
                                    __ptext92 0000                                      __ptext84 3F50  
                                    __ptext76 42C8                                      __ptext68 3F98  
                                    __ptext85 4460                                      __ptext77 459A  
                                    __ptext69 3CA4                                      __ptext86 4522  
                                    __ptext78 45A4                                      __ptext87 437A  
                                    __ptext79 45A8                                      __ptext88 441C  
                                    __ptext89 3EBC                                      _distLeft 00E6  
                                 ??_calcSpeed 00A7                 __end_of_UART1_SetErrorHandler 456C  
                                  _T3GCONbits 003FA7                             ??_TMR4_Initialize 0022  
                           ??_PWM6_Initialize 0020                                      _oldSpeed 00DA  
                                  _T5GCONbits 003F9B                               _SMT1_Initialize 41DC  
                                 _IVTLOCKbits 003FD4                                      _setMotor 33B4  
                                    _setSpeed 00DE                     _UART1_OverrunErrorHandler 00FB  
UART1_SetOverrunErrorHandler@interruptHandler 0020                                      isa$xinst 000000  
                  ??_ADCC_GetSingleConversion 0060                    ?_UART1_DefaultErrorHandler 0001  
                       ?_CCP3_DefaultCallBack 0001                                      _vfprintf 3AE0  
                                   printf@fmt 0130                    __end_of_PWM8_LoadDutyValue 41A6  
                             _CCP3_CaptureISR 3D90                                   _UART1_Write 3B48  
                       fp__UART1_Transmit_ISR 0000                             ??_PWM7_Initialize 0020  
                           ??_TMR5_Initialize 0060           fp__TMR5_DefaultGateInterruptHandler 0000  
    __end_of_TMR5_DefaultGateInterruptHandler 447E            ??_TMR5_DefaultGateInterruptHandler 0015  
           ?_TMR5_DefaultGateInterruptHandler 0001              _TMR5_DefaultGateInterruptHandler 4460  
                            ___aomod@dividend 0060                                _battCheckCount 00E8  
                               ??_Default_ISR 0001                ??_UART1_SetFramingErrorHandler 0022  
                                _reverseCount 002D                               ??_TMR5_GATE_ISR 0015  
                 __end_of_UART1_RxDataHandler 437A                                   _uart1RxHead 0031  
                        _CCP4_DefaultCallBack 423C                                   _uart1TxHead 0033  
                                 _uart1RxTail 0030                                   _uart1TxTail 0032  
                      ??_INTERRUPT_Initialize 0020                            _PWM7_LoadDutyValue 41A6  
                                    intlevel1 0000                                      intlevel2 0000  
                                 _setSteering 2726                               _CCP4_CaptureISR 3DDC  
                     ?_PIN_MANAGER_Initialize 0001                             ??_PWM8_Initialize 0020  
                         ?_PWM7_LoadDutyValue 0020                          __end_of_calcMotorPow 2E7E  
                             ??_TMR4_CallBack 001D                          __end_of_calcSteering 2BCE  
                         _uart1RxStatusBuffer 00B2                                      printf@ap 00B0  
                            ??_TMR5_ReadTimer 000F  UART1_SetFramingErrorHandler@interruptHandler 0020  
           __end_of_UART1_DefaultErrorHandler 459A                               ___aomod@divisor 0068  
                                 ??_vfpfcnvrt 00A4                               ___aomod@counter 0020  
                            ?_SMT1_PR_ACQ_ISR 0001                                   _TMR5_Reload 4522  
                                  _SMT1SIGPPS 003AD2                                    _SMT1WINPPS 003AD1  
                        ??_PWM7_LoadDutyValue 0060                                 actSpeed@speed 006E  
                       ?_CCP4_DefaultCallBack 0007                     calcMotorPow@oldSpeedDelta 00AB  
                            _CCP3_SetCallBack 458A                                  ___aldiv@sign 0069  
                            ?_SMT1_PW_ACQ_ISR 0001                               _CCP3_Initialize 429A  
                 PWM6_LoadDutyValue@dutyValue 0020                             calcSteering@delta 0073  
                    _UART1_TxInterruptHandler 003C                                 ___fladd@signs 009B  
                         __end_of_Default_ISR 45AA                       __end_of_SMT1_Initialize 420C  
                                ___aodiv@sign 0071                __end_of_PIN_MANAGER_Initialize 3636  
                           ??_ADCC_Initialize 0020                                  ___fladd@aexp 009C  
                                ___fladd@bexp 009D                  ?_UART1_SetTxInterruptHandler 0020  
                                ___aomod@sign 0021                       __end_of_CCP3_CaptureISR 3DDC  
